<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="7bcf7523c5bda2266e5b8f15a9fe7fe92c30f305" translate="yes" xml:space="preserve">
          <source>except that</source>
          <target state="translated">excepto que</target>
        </trans-unit>
        <trans-unit id="a45f3c76a2be4bf85177e8142097388d027ee136" translate="yes" xml:space="preserve">
          <source>exception method for f</source>
          <target state="translated">método de excepción para f</target>
        </trans-unit>
        <trans-unit id="c709723e02bbe1ae8992536bac399966ee01a301" translate="yes" xml:space="preserve">
          <source>exceptions are enabled. These three are combined into a</source>
          <target state="translated">las excepciones están habilitadas.Estas tres se combinan en un</target>
        </trans-unit>
        <trans-unit id="9972fe0cdad7969bc7b1f597d3f0e41337e57f5b" translate="yes" xml:space="preserve">
          <source>executes &lt;a href=&quot;#NonEmptyOrScopeBlockStatement&quot;&gt;&lt;i&gt;NonEmptyOrScopeBlockStatement&lt;/i&gt;&lt;/a&gt; at the close of the current scope, rather than at the point where the</source>
          <target state="translated">ejecuta &lt;a href=&quot;#NonEmptyOrScopeBlockStatement&quot;&gt;&lt;i&gt;NonEmptyOrScopeBlockStatement&lt;/i&gt;&lt;/a&gt; al final del &amp;aacute;mbito actual, en lugar de en el punto donde</target>
        </trans-unit>
        <trans-unit id="db5a1cb3a28fac0530925df237d07316f3b6fb07" translate="yes" xml:space="preserve">
          <source>existing &lt;code&gt;this&lt;/code&gt;</source>
          <target state="translated">existiendo &lt;code&gt;this&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5de51e7288f477568b43a9a34270df4aa04d1e97" translate="yes" xml:space="preserve">
          <source>existing template instantiation</source>
          <target state="translated">instanciación de la plantilla existente</target>
        </trans-unit>
        <trans-unit id="edc8242fc00142717e465e420ba7b9887e430560" translate="yes" xml:space="preserve">
          <source>exists, the</source>
          <target state="translated">existe,el</target>
        </trans-unit>
        <trans-unit id="a7a0629002eb417ad87c56a522743899d6b2b856" translate="yes" xml:space="preserve">
          <source>exits with a goto, break, continue, return, exception, or fall-through.</source>
          <target state="translated">sale con un goto,break,continue,return,exception,o fall-through.</target>
        </trans-unit>
        <trans-unit id="86b77de2442fe05048f19c766138a551aa2543be" translate="yes" xml:space="preserve">
          <source>exp</source>
          <target state="translated">exp</target>
        </trans-unit>
        <trans-unit id="e024fa7c97e043157cbf820afdce656e08af00b6" translate="yes" xml:space="preserve">
          <source>exp(x)</source>
          <target state="translated">exp(x)</target>
        </trans-unit>
        <trans-unit id="e64a5d38f517b9b7acecf11e4b3f5e4fe49d4649" translate="yes" xml:space="preserve">
          <source>exp2(x)</source>
          <target state="translated">exp2(x)</target>
        </trans-unit>
        <trans-unit id="0e04bae4b2cccb3f8350d558966a5239738c0724" translate="yes" xml:space="preserve">
          <source>explicit arguments used to construct object</source>
          <target state="translated">argumentos explícitos utilizados para construir el objeto</target>
        </trans-unit>
        <trans-unit id="a533654d4e2700cb2c659aec42dd9bf8b0fe7ceb" translate="yes" xml:space="preserve">
          <source>explicit arguments which given to construct object.</source>
          <target state="translated">argumentos explícitos que dieron para construir el objeto.</target>
        </trans-unit>
        <trans-unit id="69cc8412997be34d1bedab92a00c78cd3e91e52a" translate="yes" xml:space="preserve">
          <source>exponent</source>
          <target state="translated">exponent</target>
        </trans-unit>
        <trans-unit id="937a5f7216c5d6165c547ed426a8159c5e969699" translate="yes" xml:space="preserve">
          <source>exponentially penalized with the number of gaps</source>
          <target state="translated">penalizado exponencialmente con el número de lagunas</target>
        </trans-unit>
        <trans-unit id="0fd1860204d6cee43392972817e66792ee702b89" translate="yes" xml:space="preserve">
          <source>expr</source>
          <target state="translated">expr</target>
        </trans-unit>
        <trans-unit id="40cd9d83462196d0446a104d1314917b241cd28a" translate="yes" xml:space="preserve">
          <source>expr&lt;sub&gt;1&lt;/sub&gt;</source>
          <target state="translated">expr&lt;sub&gt;1&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="07fd3de69ea8c538120fc704d3aba49060c400e7" translate="yes" xml:space="preserve">
          <source>expression AST to print</source>
          <target state="translated">expresión AST para imprimir</target>
        </trans-unit>
        <trans-unit id="4cf976540f21758f915763f0dfa93b6ccf6d3760" translate="yes" xml:space="preserve">
          <source>expression representing the property, or null if not a property and (flag &amp;amp; 1)</source>
          <target state="translated">expresi&amp;oacute;n que representa la propiedad, o nulo si no es una propiedad y (marca &amp;amp; 1)</target>
        </trans-unit>
        <trans-unit id="21f682e2971f35283455e33d6a8f861b6b21a2d3" translate="yes" xml:space="preserve">
          <source>expression that initializes 'length'</source>
          <target state="translated">expresión que inicializa la &quot;longitud</target>
        </trans-unit>
        <trans-unit id="7e8d27a59b86af955aea8d1b081077e36d80a7e3" translate="yes" xml:space="preserve">
          <source>expression to be cast</source>
          <target state="translated">la expresión que se emitirá...</target>
        </trans-unit>
        <trans-unit id="6fbde4c0b2570b3aec03ad147d6b6bf0af835de7" translate="yes" xml:space="preserve">
          <source>expression to check</source>
          <target state="translated">expresión para comprobar</target>
        </trans-unit>
        <trans-unit id="badb05f0ddf015f5928eb2a06832e423d168a497" translate="yes" xml:space="preserve">
          <source>expression to check for any pointers to the stack</source>
          <target state="translated">para comprobar si hay algún indicio de la pila</target>
        </trans-unit>
        <trans-unit id="b86e902a8f9629605fb2729145d963818361f09a" translate="yes" xml:space="preserve">
          <source>expression to const fold; this may get modified in-place</source>
          <target state="translated">expresión al pliegue de la const;esto puede ser modificado en el lugar</target>
        </trans-unit>
        <trans-unit id="bd964b0af3d7c70825965deddb5fa0bead375902" translate="yes" xml:space="preserve">
          <source>expression to convert</source>
          <target state="translated">expresión para convertir</target>
        </trans-unit>
        <trans-unit id="d2879ee0bb99fbe5ecca7d679ed31bc507cc566a" translate="yes" xml:space="preserve">
          <source>expression to resolve</source>
          <target state="translated">expresión para resolver</target>
        </trans-unit>
        <trans-unit id="576aa5f15a852ef94e63f22be8567f30a68352ef" translate="yes" xml:space="preserve">
          <source>expression with operator</source>
          <target state="translated">expresión con operador</target>
        </trans-unit>
        <trans-unit id="69393a557ab67a38c761832a87ae6120b40818b0" translate="yes" xml:space="preserve">
          <source>expression with the invalid array operation</source>
          <target state="translated">expresión con la operación de matriz inválida</target>
        </trans-unit>
        <trans-unit id="0a1523400822fc7bdb5d482c3d942f5ff96f5ba1" translate="yes" xml:space="preserve">
          <source>expression, if it does not throw. Otherwise, returns the result of errorHandler.</source>
          <target state="translated">expresión,si no se lanza.De lo contrario,devuelve el resultado del error &quot;Manejador&quot;.</target>
        </trans-unit>
        <trans-unit id="c084f5bb53997607fa1fccd7509620185755c75b" translate="yes" xml:space="preserve">
          <source>expression.d</source>
          <target state="translated">expression.d</target>
        </trans-unit>
        <trans-unit id="677159e9fb7037a54b1fbcd2535187ac5a6e8290" translate="yes" xml:space="preserve">
          <source>expressionsem.d</source>
          <target state="translated">expressionsem.d</target>
        </trans-unit>
        <trans-unit id="964b3d7a3cbbe921acb08726e47501beda351366" translate="yes" xml:space="preserve">
          <source>exps aray of Expressions</source>
          <target state="translated">exps aray de Expresiones</target>
        </trans-unit>
        <trans-unit id="90840c7d33cc7c7de48c91e135597b74d4cd9bcd" translate="yes" xml:space="preserve">
          <source>exps rewritten in place</source>
          <target state="translated">exps reescrito en su lugar</target>
        </trans-unit>
        <trans-unit id="7a46ff039af2d6f0de9c02ecafbcfd93da35b145" translate="yes" xml:space="preserve">
          <source>extended grapheme</source>
          <target state="translated">grafema extendido</target>
        </trans-unit>
        <trans-unit id="9b489771bcc7ff913d17b9d70d0ca8b8ded47874" translate="yes" xml:space="preserve">
          <source>extension, may have leading '.'</source>
          <target state="translated">extensión,puede que tenga una ventaja.</target>
        </trans-unit>
        <trans-unit id="60fbc39dbf412e554bc752c92c1f14c2b41c0eeb" translate="yes" xml:space="preserve">
          <source>extern (C) void rt_moduleTlsCtor();</source>
          <target state="translated">externo (C)void rt_moduleTlsCtor();</target>
        </trans-unit>
        <trans-unit id="4a0a19218e082a343a1b17e5333409af9d98f0f5" translate="yes" xml:space="preserve">
          <source>f</source>
          <target state="translated">f</target>
        </trans-unit>
        <trans-unit id="42b603b43d0152110eedb84d83e6663bd5dd63dd" translate="yes" xml:space="preserve">
          <source>f an &lt;code&gt;union S&lt;/code&gt; has fields that define a copy constructor, whenever an object of type &lt;code&gt;S&lt;/code&gt; is initialized by copy, an error will be issued. The same rule applies to overlapped fields (anonymous unions).</source>
          <target state="translated">Si una &lt;code&gt;union S&lt;/code&gt; tiene campos que definen un constructor de copia, cada vez que un objeto de tipo &lt;code&gt;S&lt;/code&gt; se inicializa mediante copia, se emitir&amp;aacute; un error. La misma regla se aplica a los campos superpuestos (uniones an&amp;oacute;nimas).</target>
        </trans-unit>
        <trans-unit id="79a761cf2185d7de9cb943d4934ddd2c67a16f8b" translate="yes" xml:space="preserve">
          <source>f in precision of type &lt;code&gt;T&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049d2dc650bbc92351ad1d8d8286f17850141903" translate="yes" xml:space="preserve">
          <source>fabs(x)</source>
          <target state="translated">fabs(x)</target>
        </trans-unit>
        <trans-unit id="83aa7c759feddfe86f8071916718f3e205954340" translate="yes" xml:space="preserve">
          <source>factoryFunction</source>
          <target state="translated">factoryFunction</target>
        </trans-unit>
        <trans-unit id="386cf2bf5e92dccef5062d0c826582d4e0c23878" translate="yes" xml:space="preserve">
          <source>fail the entire transfer</source>
          <target state="translated">fallar la transferencia completa</target>
        </trans-unit>
        <trans-unit id="21ff1c15480300636a19a0222ad70f9762680443" translate="yes" xml:space="preserve">
          <source>failed to restart the read</source>
          <target state="translated">no pudo reiniciar la lectura</target>
        </trans-unit>
        <trans-unit id="c1e29523bddd866e3697743b13c5fa0978560586" translate="yes" xml:space="preserve">
          <source>fails every incorrect operation by throwing an exception.</source>
          <target state="translated">falla cada operación incorrecta lanzando una excepción.</target>
        </trans-unit>
        <trans-unit id="962b2264eb329d990e57e2497c6973a4b5bc61cc" translate="yes" xml:space="preserve">
          <source>fails every incorrect operation with a message to &lt;a href=&quot;std_stdio#%20%20%20%20%20%20%20%20stderr&quot;&gt;&lt;code&gt;std.stdio. stderr&lt;/code&gt;&lt;/a&gt; followed by a call to &lt;code&gt;assert(0)&lt;/code&gt;. It is the default second parameter, i.e. &lt;code&gt;Checked!short&lt;/code&gt; is the same as &lt;code&gt;Checked!(short, Abort)&lt;/code&gt;.</source>
          <target state="translated">falla cada operaci&amp;oacute;n incorrecta con un mensaje a &lt;a href=&quot;std_stdio#%20%20%20%20%20%20%20%20stderr&quot;&gt; &lt;code&gt;std.stdio. stderr&lt;/code&gt; &lt;/a&gt; seguido de una llamada a &lt;code&gt;assert(0)&lt;/code&gt; . Es el segundo par&amp;aacute;metro predeterminado, es decir, &lt;code&gt;Checked!short&lt;/code&gt; es lo mismo que &lt;code&gt;Checked!(short, Abort)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="translated">false</target>
        </trans-unit>
        <trans-unit id="5d4ac2e08a368d6915da865627873a14ce213d37" translate="yes" xml:space="preserve">
          <source>false for errors</source>
          <target state="translated">falso para los errores</target>
        </trans-unit>
        <trans-unit id="2b7965fcf651d5482b648432335aba6bdcd728f8" translate="yes" xml:space="preserve">
          <source>false for invalid</source>
          <target state="translated">falso por inválido</target>
        </trans-unit>
        <trans-unit id="472b1d0a789f7dd64f4acb08dc3e7fe1f1da44ca" translate="yes" xml:space="preserve">
          <source>false if any errors occur, otherwise true and elements[] are rewritten for the output.</source>
          <target state="translated">falso si se produce algún error,de lo contrario verdadero y los elementos[]se reescriben para la salida.</target>
        </trans-unit>
        <trans-unit id="f7171a193c9d8d9e3258f51c406ca67381e425c8" translate="yes" xml:space="preserve">
          <source>false if any errors occur.</source>
          <target state="translated">falso si se produce algún error.</target>
        </trans-unit>
        <trans-unit id="3be27bc91b1c6933c56d9efe175b7a63f76b21b2" translate="yes" xml:space="preserve">
          <source>false if any errors occur. Otherwise, returns true and the missing arguments will be pushed in elements[].</source>
          <target state="translated">falso si se produce algún error.De lo contrario,devuelve true y los argumentos faltantes serán empujados en elementos[].</target>
        </trans-unit>
        <trans-unit id="537692d4c0abfd973616d130fe6341049b09c8cd" translate="yes" xml:space="preserve">
          <source>false if failed to determine the size.</source>
          <target state="translated">falso si no se ha podido determinar el tamaño.</target>
        </trans-unit>
        <trans-unit id="faedaf966525610e7c2c7a6c7e341587a2175f16" translate="yes" xml:space="preserve">
          <source>false if finding fails.</source>
          <target state="translated">falso si el hallazgo falla.</target>
        </trans-unit>
        <trans-unit id="9edcecf5bd0f188207c3b12a50cf4a189ee704d8" translate="yes" xml:space="preserve">
          <source>false if one or more arguments have errors.</source>
          <target state="translated">falso si uno o más argumentos tienen errores.</target>
        </trans-unit>
        <trans-unit id="50ceb13f9d1dd8a3c24a01ded3f4287be6015c9c" translate="yes" xml:space="preserve">
          <source>false if the range was lexicographically the greatest, in which case the range is reversed back to the lexicographically smallest permutation; otherwise returns true.</source>
          <target state="translated">falso si el rango era lexicográficamente el más grande,en cuyo caso el rango se revierte a la permutación lexicográficamente más pequeña;de lo contrario,vuelve a ser verdadero.</target>
        </trans-unit>
        <trans-unit id="7484be5208b32034b0d4eaad2d6439add2ad3a2a" translate="yes" xml:space="preserve">
          <source>false if unable to resolve.</source>
          <target state="translated">falso si no puede resolverse.</target>
        </trans-unit>
        <trans-unit id="8ec00a4a60ab68ff9862257610409edb67a4918b" translate="yes" xml:space="preserve">
          <source>false means either &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; skips initialization</source>
          <target state="translated">medios falsos ya sea &lt;code&gt;a&lt;/code&gt; o &lt;code&gt;b&lt;/code&gt; saltos de inicializaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="d8fb7135e24da5a289e315146b465d111fea1f73" translate="yes" xml:space="preserve">
          <source>false means one of the paths skips construction</source>
          <target state="translated">falso significa que uno de los caminos se salta la construcción</target>
        </trans-unit>
        <trans-unit id="ceb8a03147b584e074b416229284f4e1620cd9a7" translate="yes" xml:space="preserve">
          <source>false not a base true is a base</source>
          <target state="translated">falso no una base verdadero es una base</target>
        </trans-unit>
        <trans-unit id="7f12a701990d41bf432c7ffe68e4e380676c3a04" translate="yes" xml:space="preserve">
          <source>false on failure</source>
          <target state="translated">falso sobre el fracaso</target>
        </trans-unit>
        <trans-unit id="ce341bf7eff60016f7eacc317219ff2282197313" translate="yes" xml:space="preserve">
          <source>false on failure.</source>
          <target state="translated">falso en el fracaso.</target>
        </trans-unit>
        <trans-unit id="5daae95504b1ee80865570c7097a85ae2a94cda7" translate="yes" xml:space="preserve">
          <source>false, *ps = NULL: There are 2 or more symbols true, *ps = NULL: There are zero symbols true, *ps = symbol: The one and only one symbol</source>
          <target state="translated">falso,*ps=NULL:Hay 2 o más símbolos verdaderos,*ps=NULL:Hay cero símbolos verdaderos,*ps=símbolo:El único símbolo</target>
        </trans-unit>
        <trans-unit id="f7d55b0bcb925eb1604b88f2db5ed3b82b39ffb9" translate="yes" xml:space="preserve">
          <source>fast 16 bits signed</source>
          <target state="translated">rápido 16 bits firmados</target>
        </trans-unit>
        <trans-unit id="b965f0dc8f3187f65f067a3ed6820deb576e51a7" translate="yes" xml:space="preserve">
          <source>fast 16 bits unsigned</source>
          <target state="translated">rápido 16 bits sin firmar</target>
        </trans-unit>
        <trans-unit id="d50bfbca862b8f1c185d9afb28a1b298d69df2c6" translate="yes" xml:space="preserve">
          <source>fast 32 bits signed</source>
          <target state="translated">rápido 32 bits firmados</target>
        </trans-unit>
        <trans-unit id="a88048e9680a420ef36d0f125f941145470c1b00" translate="yes" xml:space="preserve">
          <source>fast 32 bits unsigned</source>
          <target state="translated">rápido 32 bits sin firmar</target>
        </trans-unit>
        <trans-unit id="3b6d802be3e790ca7b1b5a8c6394647885c13459" translate="yes" xml:space="preserve">
          <source>fast 64 bits signed</source>
          <target state="translated">rápido 64 bits firmados</target>
        </trans-unit>
        <trans-unit id="88dfa0c4714a4178418c5741a6ac438f7ecac8c4" translate="yes" xml:space="preserve">
          <source>fast 64 bits unsigned</source>
          <target state="translated">rápido 64 bits sin firmar</target>
        </trans-unit>
        <trans-unit id="423b875387410e4fb5a8b07132a789059a485374" translate="yes" xml:space="preserve">
          <source>fast 8 bits signed</source>
          <target state="translated">rápido 8 bits firmados</target>
        </trans-unit>
        <trans-unit id="959f99cfc1b3e894ab6ad2bc99d98d1bf9c00b34" translate="yes" xml:space="preserve">
          <source>fast 8 bits unsigned</source>
          <target state="translated">rápido 8 bits sin firmar</target>
        </trans-unit>
        <trans-unit id="2374ca6b73aa674ba176387d4ec86a6819b121fd" translate="yes" xml:space="preserve">
          <source>fastest</source>
          <target state="translated">fastest</target>
        </trans-unit>
        <trans-unit id="0abea154c5e02b40cdbd1c0252a67b8fe576f767" translate="yes" xml:space="preserve">
          <source>fat pointers</source>
          <target state="translated">punteros gordos</target>
        </trans-unit>
        <trans-unit id="b9a3a6db7a4012b1d0912d070d9a0361811db3bf" translate="yes" xml:space="preserve">
          <source>fatal</source>
          <target state="translated">fatal</target>
        </trans-unit>
        <trans-unit id="7defc130c023b614dfa24a17354921b45e7bcc53" translate="yes" xml:space="preserve">
          <source>fd Partially instantiated function declaration ti.tdtypes Expression/Type deduced template arguments</source>
          <target state="translated">fd Declaración de función parcialmente instanciada ti.tdtypes Expresión/Tipo argumentos de plantilla deducidos</target>
        </trans-unit>
        <trans-unit id="959a0d8f530905dada79fb7853b3d560c226914f" translate="yes" xml:space="preserve">
          <source>fdim(x, y)</source>
          <target state="translated">fdim(x,y)</target>
        </trans-unit>
        <trans-unit id="35737eb97d44526800ef05abdbce48ecc94694df" translate="yes" xml:space="preserve">
          <source>feed cookies into cookie engine</source>
          <target state="translated">alimentar las cookies en el motor de cookies</target>
        </trans-unit>
        <trans-unit id="2d9f6aaa29cffaf0a20d4c3f0d14a60ccea14b31" translate="yes" xml:space="preserve">
          <source>feqrel(x, y)</source>
          <target state="translated">feqrel(x,y)</target>
        </trans-unit>
        <trans-unit id="519c2566cb819aa98f00c389f875acd6c2f82fd8" translate="yes" xml:space="preserve">
          <source>field size</source>
          <target state="translated">tamaño de campo</target>
        </trans-unit>
        <trans-unit id="70f132fe13e692866a539996a6b9a05b46076a07" translate="yes" xml:space="preserve">
          <source>fields</source>
          <target state="translated">fields</target>
        </trans-unit>
        <trans-unit id="f6a96da2f1874d7323e33995f61ab229dc3b179e" translate="yes" xml:space="preserve">
          <source>file name</source>
          <target state="translated">nombre del archivo</target>
        </trans-unit>
        <trans-unit id="5781bd113d560f4f88fb15ba5542e3c86d7a4e88" translate="yes" xml:space="preserve">
          <source>file path of the config file or NULL</source>
          <target state="translated">ruta del archivo de configuración o NULL</target>
        </trans-unit>
        <trans-unit id="09d40abb68775902424ab4378398d1c23085b1df" translate="yes" xml:space="preserve">
          <source>file to load in (or get from) the cache</source>
          <target state="translated">archivo para cargar en (o obtener de)la caché</target>
        </trans-unit>
        <trans-unit id="5b09e58b0c4c87d0c3dcf96b7e2f317c33d102d0" translate="yes" xml:space="preserve">
          <source>file to look for</source>
          <target state="translated">archivo para buscar</target>
        </trans-unit>
        <trans-unit id="548f380b45751dd83aa15f9b1c52783b744dc08d" translate="yes" xml:space="preserve">
          <source>file to parse</source>
          <target state="translated">archivo para analizar</target>
        </trans-unit>
        <trans-unit id="bec5fa857e77a84fa716affc615e9b596609e65a" translate="yes" xml:space="preserve">
          <source>filecache.d</source>
          <target state="translated">filecache.d</target>
        </trans-unit>
        <trans-unit id="dc9160111f53e15f0c91b8b5e3ed1c1fb12e5d6f" translate="yes" xml:space="preserve">
          <source>filename extension (read-only). Points past '.' of extension. If there isn't one, return null.</source>
          <target state="translated">extensión del nombre de archivo (sólo lectura).Puntos más allá del '.' de la extensión.Si no hay ninguna,devuelve nulo.</target>
        </trans-unit>
        <trans-unit id="62757a95f30c7929e3e55a17fda4331483233f20" translate="yes" xml:space="preserve">
          <source>filespec as string or range</source>
          <target state="translated">filespec como cadena o rango</target>
        </trans-unit>
        <trans-unit id="6aaae4569d1c0fcb049ae16040aed9b8f1c565fe" translate="yes" xml:space="preserve">
          <source>final @nogc @property @safe ThreadID &lt;strong id=&quot;id&quot;&gt;id&lt;/strong&gt;();</source>
          <target state="translated">final @nogc @property @safe &lt;strong id=&quot;id&quot;&gt;ID de&lt;/strong&gt; ThreadID ();</target>
        </trans-unit>
        <trans-unit id="20c7185355a470872586087035eb3d2ad5a8935c" translate="yes" xml:space="preserve">
          <source>final @nogc @property @safe bool &lt;strong id=&quot;isDaemon&quot;&gt;isDaemon&lt;/strong&gt;();</source>
          <target state="translated">final @nogc @property @safe bool &lt;strong id=&quot;isDaemon&quot;&gt;isDaemon&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="8354029163ecd95fb63448bba65fe8412ae39258" translate="yes" xml:space="preserve">
          <source>final @nogc @property @safe string &lt;strong id=&quot;name&quot;&gt;name&lt;/strong&gt;();</source>
          <target state="translated">final @nogc @property @safe &lt;strong id=&quot;name&quot;&gt;nombre de&lt;/strong&gt; cadena ();</target>
        </trans-unit>
        <trans-unit id="fb05e0f22af55ac4ec751bf1a2db1836a5f002f3" translate="yes" xml:space="preserve">
          <source>final @nogc @property @safe void &lt;strong id=&quot;fatalHandler&quot;&gt;fatalHandler&lt;/strong&gt;(void delegate() @safe fh);</source>
          <target state="translated">final @nogc @property @safe void &lt;strong id=&quot;fatalHandler&quot;&gt;fatalHandler&lt;/strong&gt; (delegado vac&amp;iacute;o () @safe fh);</target>
        </trans-unit>
        <trans-unit id="54748e9b2135d594b1b33e06b16205e3bee24c95" translate="yes" xml:space="preserve">
          <source>final @nogc @property @safe void &lt;strong id=&quot;isDaemon&quot;&gt;isDaemon&lt;/strong&gt;(bool val);</source>
          <target state="translated">final @nogc @property @safe void &lt;strong id=&quot;isDaemon&quot;&gt;isDaemon&lt;/strong&gt; (bool val);</target>
        </trans-unit>
        <trans-unit id="297cde796b209a83fbf444b153e6973fd400f746" translate="yes" xml:space="preserve">
          <source>final @nogc @property @safe void &lt;strong id=&quot;logLevel&quot;&gt;logLevel&lt;/strong&gt;(const LogLevel lv);</source>
          <target state="translated">final @nogc @property @safe void &lt;strong id=&quot;logLevel&quot;&gt;logLevel&lt;/strong&gt; (const LogLevel lv);</target>
        </trans-unit>
        <trans-unit id="9aaf8ec46a5eb09d339e5e2a8cef8bc62e92199b" translate="yes" xml:space="preserve">
          <source>final @nogc @property @safe void &lt;strong id=&quot;name&quot;&gt;name&lt;/strong&gt;(string val);</source>
          <target state="translated">final @nogc @property @safe &lt;strong id=&quot;name&quot;&gt;nombre&lt;/strong&gt; vac&amp;iacute;o (string val);</target>
        </trans-unit>
        <trans-unit id="c6742494f5e07370ef9e64463667b309b5f627ae" translate="yes" xml:space="preserve">
          <source>final @nogc @property @safe void delegate() &lt;strong id=&quot;fatalHandler&quot;&gt;fatalHandler&lt;/strong&gt;();</source>
          <target state="translated">final @nogc @property @safe void delegate () &lt;strong id=&quot;fatalHandler&quot;&gt;fatalHandler&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="1f0affa8f4749673a6617fa47294686f007db15d" translate="yes" xml:space="preserve">
          <source>final @property DWORD &lt;strong id=&quot;code&quot;&gt;code&lt;/strong&gt;();</source>
          <target state="translated">&lt;strong id=&quot;code&quot;&gt;c&amp;oacute;digo&lt;/strong&gt; DWORD final de @property ();</target>
        </trans-unit>
        <trans-unit id="3080de13a460d81adb8d9455bbd4e56438e7328d" translate="yes" xml:space="preserve">
          <source>final @property T &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt;();</source>
          <target state="translated">final @property T &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="b782390023b5d1fb5d42d96f58abf96b4f3d0da3" translate="yes" xml:space="preserve">
          <source>final @property bool &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="translated">final @property bool &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ab4f1f5db1342e7397816ac54633dacb85624979" translate="yes" xml:space="preserve">
          <source>final @property int &lt;strong id=&quot;priority&quot;&gt;priority&lt;/strong&gt;();</source>
          <target state="translated">final @property int &lt;strong id=&quot;priority&quot;&gt;prioridad&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="7295a0f6648fc7eb1b79ada5597176f558f3e2e9" translate="yes" xml:space="preserve">
          <source>final @property void &lt;strong id=&quot;priority&quot;&gt;priority&lt;/strong&gt;(int val);</source>
          <target state="translated">final @property void &lt;strong id=&quot;priority&quot;&gt;prioridad&lt;/strong&gt; (int val);</target>
        </trans-unit>
        <trans-unit id="89160fa9068357d6e55ef3a066b4ee6eae8fd1cd" translate="yes" xml:space="preserve">
          <source>final BaseClass* &lt;strong id=&quot;overrideInterface&quot;&gt;overrideInterface&lt;/strong&gt;();</source>
          <target state="translated">final BaseClass * &lt;strong id=&quot;overrideInterface&quot;&gt;overrideInterface&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="6a45757294d63aad01005235f2a011271fb337c2" translate="yes" xml:space="preserve">
          <source>final ClassDeclaration &lt;strong id=&quot;searchBase&quot;&gt;searchBase&lt;/strong&gt;(Identifier ident);</source>
          <target state="translated">ClassDeclaration &lt;strong id=&quot;searchBase&quot;&gt;searchBase&lt;/strong&gt; final (identificador identificador);</target>
        </trans-unit>
        <trans-unit id="e028cb080f72fee2452c6db43aae3e6c5593e8c8" translate="yes" xml:space="preserve">
          <source>final Dsymbol &lt;strong id=&quot;searchCtor&quot;&gt;searchCtor&lt;/strong&gt;();</source>
          <target state="translated">final Dsymbol &lt;strong id=&quot;searchCtor&quot;&gt;searchCtor&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="8e737f03849b3ec41e27dac38f1fd058b582109d" translate="yes" xml:space="preserve">
          <source>final Dsymbol &lt;strong id=&quot;searchX&quot;&gt;searchX&lt;/strong&gt;(ref const Loc loc, Scope* sc, RootObject id, int flags);</source>
          <target state="translated">Dsymbol &lt;strong id=&quot;searchX&quot;&gt;searchX&lt;/strong&gt; final (ref const Loc loc, Scope * sc, RootObject id, int flags);</target>
        </trans-unit>
        <trans-unit id="fd2236392d9dc641771c775170c4f40488dc6395" translate="yes" xml:space="preserve">
          <source>final Dsymbols* &lt;strong id=&quot;appendToModuleMember&quot;&gt;appendToModuleMember&lt;/strong&gt;();</source>
          <target state="translated">S&amp;iacute;mbolos D finales * &lt;strong id=&quot;appendToModuleMember&quot;&gt;appendToModuleMember&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="d71b74a04096b909432b23d7499323961a1366a9" translate="yes" xml:space="preserve">
          <source>final Expression &lt;strong id=&quot;addressOf&quot;&gt;addressOf&lt;/strong&gt;();</source>
          <target state="translated">direcci&amp;oacute;n de expresi&amp;oacute;n final &lt;strong id=&quot;addressOf&quot;&gt;Of&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f905caee47ebb709e44aa2e386576c94dcb98abe" translate="yes" xml:space="preserve">
          <source>final Expression &lt;strong id=&quot;callScopeDtor&quot;&gt;callScopeDtor&lt;/strong&gt;(Scope* sc);</source>
          <target state="translated">expresi&amp;oacute;n final &lt;strong id=&quot;callScopeDtor&quot;&gt;callScopeDtor&lt;/strong&gt; (Scope * sc);</target>
        </trans-unit>
        <trans-unit id="c387200fd54cfd6460e9710e35a01da400aa1b99" translate="yes" xml:space="preserve">
          <source>final Expression &lt;strong id=&quot;copy&quot;&gt;copy&lt;/strong&gt;();</source>
          <target state="translated">&lt;strong id=&quot;copy&quot;&gt;copia de&lt;/strong&gt; expresi&amp;oacute;n final ();</target>
        </trans-unit>
        <trans-unit id="60ea98cdef21daa4ff589c5e6e7495afc420a40b" translate="yes" xml:space="preserve">
          <source>final Expression &lt;strong id=&quot;deref&quot;&gt;deref&lt;/strong&gt;();</source>
          <target state="translated">Expresi&amp;oacute;n final &lt;strong id=&quot;deref&quot;&gt;deref&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="95411fb27e748c24d99785a67ff5702bf70340ff" translate="yes" xml:space="preserve">
          <source>final Expression &lt;strong id=&quot;expandInitializer&quot;&gt;expandInitializer&lt;/strong&gt;(Loc loc);</source>
          <target state="translated">Expresi&amp;oacute;n final &lt;strong id=&quot;expandInitializer&quot;&gt;expandInitializer&lt;/strong&gt; (Loc loc);</target>
        </trans-unit>
        <trans-unit id="042b5b845c49fd88ee902ee051e99bc6652f8be1" translate="yes" xml:space="preserve">
          <source>final Expression &lt;strong id=&quot;getConstInitializer&quot;&gt;getConstInitializer&lt;/strong&gt;(bool needFullType = true);</source>
          <target state="translated">expresi&amp;oacute;n final &lt;strong id=&quot;getConstInitializer&quot;&gt;getConstInitializer&lt;/strong&gt; (bool needFullType = true);</target>
        </trans-unit>
        <trans-unit id="7a8e97f64c72ef3238f1f359ae1b4c7ee74c904b" translate="yes" xml:space="preserve">
          <source>final Expression &lt;strong id=&quot;incompatibleTypes&quot;&gt;incompatibleTypes&lt;/strong&gt;();</source>
          <target state="translated">Expresi&amp;oacute;n final &lt;strong id=&quot;incompatibleTypes&quot;&gt;incompatibleTypes&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="81cb44e48f1de589daa6c8cffdb0cc4d5e5250f6" translate="yes" xml:space="preserve">
          <source>final FuncDeclaration &lt;strong id=&quot;findFunc&quot;&gt;findFunc&lt;/strong&gt;(Identifier ident, TypeFunction tf);</source>
          <target state="translated">&amp;uacute;ltima FuncDeclaration &lt;strong id=&quot;findFunc&quot;&gt;findFunc&lt;/strong&gt; (Identificador ident, TypeFunction tf);</target>
        </trans-unit>
        <trans-unit id="13ded323ead73768299ea078c97b253e90791fb8" translate="yes" xml:space="preserve">
          <source>final FuncDeclaration &lt;strong id=&quot;findGetMembers&quot;&gt;findGetMembers&lt;/strong&gt;();</source>
          <target state="translated">FuncDeclaration final de &lt;strong id=&quot;findGetMembers&quot;&gt;findGetMembers&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="712a090dffcd3c66f87e1db0fe65394d70a00ff5" translate="yes" xml:space="preserve">
          <source>final FuncDeclaration &lt;strong id=&quot;overloadExactMatch&quot;&gt;overloadExactMatch&lt;/strong&gt;(Type t);</source>
          <target state="translated">FuncDeclaration final &lt;strong id=&quot;overloadExactMatch&quot;&gt;overloadExactMatch&lt;/strong&gt; (Tipo t);</target>
        </trans-unit>
        <trans-unit id="6a0d3e13128f90dbf02efec4e151e53e925f28cb" translate="yes" xml:space="preserve">
          <source>final FuncDeclaration &lt;strong id=&quot;overloadModMatch&quot;&gt;overloadModMatch&lt;/strong&gt;(ref const Loc loc, Type tthis, ref bool hasOverloads);</source>
          <target state="translated">FuncDeclaration final &lt;strong id=&quot;overloadModMatch&quot;&gt;overloadModMatch&lt;/strong&gt; (ref const Loc loc, escriba tthis, ref bool hasOverloads);</target>
        </trans-unit>
        <trans-unit id="b05b0eeda74e7665877a9695c24978f942696ebb" translate="yes" xml:space="preserve">
          <source>final HiddenParameters &lt;strong id=&quot;declareThis&quot;&gt;declareThis&lt;/strong&gt;(Scope* sc, AggregateDeclaration ad);</source>
          <target state="translated">Los par&amp;aacute;metros &lt;strong id=&quot;declareThis&quot;&gt;ocultos&lt;/strong&gt; finales declareThis (Scope * sc, AggregateDeclaration ad);</target>
        </trans-unit>
        <trans-unit id="e6cf6851bbb96975ebe3c1bcd7ea9ffe1fb78746" translate="yes" xml:space="preserve">
          <source>final Identifier &lt;strong id=&quot;genIdent&quot;&gt;genIdent&lt;/strong&gt;(Objects* args);</source>
          <target state="translated">Identificador final &lt;strong id=&quot;genIdent&quot;&gt;genIdent&lt;/strong&gt; (Objetos * args);</target>
        </trans-unit>
        <trans-unit id="b4de9f2d33d67f0adc3bf23de62504189381305a" translate="yes" xml:space="preserve">
          <source>final Identifier &lt;strong id=&quot;getIdent&quot;&gt;getIdent&lt;/strong&gt;();</source>
          <target state="translated">Identificador final &lt;strong id=&quot;getIdent&quot;&gt;getIdent&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="968ed23d47bc2efbe16a38c4aca130d01c1ae0d7" translate="yes" xml:space="preserve">
          <source>final LabelDsymbol &lt;strong id=&quot;searchLabel&quot;&gt;searchLabel&lt;/strong&gt;(Identifier ident);</source>
          <target state="translated">final LabelDsymbol &lt;strong id=&quot;searchLabel&quot;&gt;searchLabel&lt;/strong&gt; (Identificador identificador);</target>
        </trans-unit>
        <trans-unit id="f6a31daebb7057042f60b6e63f8e34e4d7f2cc71" translate="yes" xml:space="preserve">
          <source>final MATCH &lt;strong id=&quot;leastAsSpecialized&quot;&gt;leastAsSpecialized&lt;/strong&gt;(FuncDeclaration g);</source>
          <target state="translated">PARTIDO final &lt;strong id=&quot;leastAsSpecialized&quot;&gt;leastAsSpecialized&lt;/strong&gt; (FuncDeclaration g);</target>
        </trans-unit>
        <trans-unit id="af8bead9a57e87844931a55bceb44942df069cd0" translate="yes" xml:space="preserve">
          <source>final Modifiable &lt;strong id=&quot;checkModify&quot;&gt;checkModify&lt;/strong&gt;(Loc loc, Scope* sc, Expression e1, int flag);</source>
          <target state="translated">&lt;strong id=&quot;checkModify&quot;&gt;checkModify&lt;/strong&gt; final &lt;strong id=&quot;checkModify&quot;&gt;modificable&lt;/strong&gt; (Loc loc, Scope * sc, Expression e1, int flag);</target>
        </trans-unit>
        <trans-unit id="efb1da5b8d54be8098c20fd33769a063ca208dfa" translate="yes" xml:space="preserve">
          <source>final Module &lt;strong id=&quot;getAccessModule&quot;&gt;getAccessModule&lt;/strong&gt;();</source>
          <target state="translated">M&amp;oacute;dulo final &lt;strong id=&quot;getAccessModule&quot;&gt;getAccessModule&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="5e6e1c8aaa698ad1b8e367c77e28b77d28e39cc5" translate="yes" xml:space="preserve">
          <source>final Module &lt;strong id=&quot;getModule&quot;&gt;getModule&lt;/strong&gt;();</source>
          <target state="translated">M&amp;oacute;dulo final &lt;strong id=&quot;getModule&quot;&gt;getModule&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="78a1d3b5267bffaae10736a226a56c9beadd7a47" translate="yes" xml:space="preserve">
          <source>final ParameterList &lt;strong id=&quot;getParameterList&quot;&gt;getParameterList&lt;/strong&gt;();</source>
          <target state="translated">ParameterList final &lt;strong id=&quot;getParameterList&quot;&gt;getParameterList&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="b929c0014bcd6a3ca04f9209d35a35b33176c398" translate="yes" xml:space="preserve">
          <source>final Statement &lt;strong id=&quot;mergeFensure&quot;&gt;mergeFensure&lt;/strong&gt;(Statement sf, Identifier oid, Expressions* params);</source>
          <target state="translated">declaraci&amp;oacute;n final &lt;strong id=&quot;mergeFensure&quot;&gt;mergeFensure&lt;/strong&gt; (declaraci&amp;oacute;n sf, identificador oid, expresiones * params);</target>
        </trans-unit>
        <trans-unit id="6c84ed7789088ac5bd66e81ffdb82df8f4c52485" translate="yes" xml:space="preserve">
          <source>final Statement &lt;strong id=&quot;mergeFrequire&quot;&gt;mergeFrequire&lt;/strong&gt;(Statement sf, Expressions* params);</source>
          <target state="translated">Declaraci&amp;oacute;n final &lt;strong id=&quot;mergeFrequire&quot;&gt;mergeFrequire&lt;/strong&gt; (Declaraci&amp;oacute;n sf, Expressions * params);</target>
        </trans-unit>
        <trans-unit id="1dcd8d46c6b241f8fc612627afe51d710c1ba2ed" translate="yes" xml:space="preserve">
          <source>final T &lt;strong id=&quot;moveFront&quot;&gt;moveFront&lt;/strong&gt;();</source>
          <target state="translated">final T &lt;strong id=&quot;moveFront&quot;&gt;moveFront&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="a527a1b16ddf1557a4ac82c903c4340937f405e0" translate="yes" xml:space="preserve">
          <source>final TemplateDeclaration &lt;strong id=&quot;findTemplateDeclRoot&quot;&gt;findTemplateDeclRoot&lt;/strong&gt;();</source>
          <target state="translated">Final TemplateDeclaration &lt;strong id=&quot;findTemplateDeclRoot&quot;&gt;findTemplateDeclRoot&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ac00a76b99eb2c32b497e23040ec885b642ccb6a" translate="yes" xml:space="preserve">
          <source>final Thread &lt;strong id=&quot;create&quot;&gt;create&lt;/strong&gt;(void delegate() dg);</source>
          <target state="translated">Tema final &lt;strong id=&quot;create&quot;&gt;create&lt;/strong&gt; (void delegate () dg);</target>
        </trans-unit>
        <trans-unit id="4f3c91c473d7ae36ff0096eeacb1876756105ed7" translate="yes" xml:space="preserve">
          <source>final Thread &lt;strong id=&quot;create&quot;&gt;create&lt;/strong&gt;(void function() fn);</source>
          <target state="translated">subproceso final &lt;strong id=&quot;create&quot;&gt;create&lt;/strong&gt; (void function () fn);</target>
        </trans-unit>
        <trans-unit id="6b4d52d79514df71f8588964ad673fc9380f07b2" translate="yes" xml:space="preserve">
          <source>final Throwable &lt;strong id=&quot;call&quot;&gt;call&lt;/strong&gt;(Rethrow rethrow = Rethrow.yes);</source>
          <target state="translated">&lt;strong id=&quot;call&quot;&gt;Llamada&lt;/strong&gt; final de lanzamiento (Rethrow rethrow = Rethrow.yes);</target>
        </trans-unit>
        <trans-unit id="62a658c4baeb1f80ad08ea948ad6403e2cc05f4e" translate="yes" xml:space="preserve">
          <source>final Throwable &lt;strong id=&quot;call&quot;&gt;call&lt;/strong&gt;(Rethrow rethrow)();</source>
          <target state="translated">&lt;strong id=&quot;call&quot;&gt;Llamada&lt;/strong&gt; final de lanzamiento (Rethrow rethrow) ();</target>
        </trans-unit>
        <trans-unit id="fabe95cb44f50ec68ea0055862a4925e5ddf1181" translate="yes" xml:space="preserve">
          <source>final Throwable &lt;strong id=&quot;join&quot;&gt;join&lt;/strong&gt;(bool rethrow = true);</source>
          <target state="translated">&lt;strong id=&quot;join&quot;&gt;uni&amp;oacute;n&lt;/strong&gt; Throwable final (bool rethrow = true);</target>
        </trans-unit>
        <trans-unit id="f659bc3b58d615822b4165737edb0fa1a975f5d1" translate="yes" xml:space="preserve">
          <source>final Type &lt;strong id=&quot;addMod&quot;&gt;addMod&lt;/strong&gt;(MOD mod);</source>
          <target state="translated">Tipo final &lt;strong id=&quot;addMod&quot;&gt;addMod&lt;/strong&gt; (MOD mod);</target>
        </trans-unit>
        <trans-unit id="6910221413efd79f6121d982b03412c6fdfc5fc2" translate="yes" xml:space="preserve">
          <source>final Type &lt;strong id=&quot;addSTC&quot;&gt;addSTC&lt;/strong&gt;(StorageClass stc);</source>
          <target state="translated">Tipo final &lt;strong id=&quot;addSTC&quot;&gt;addSTC&lt;/strong&gt; ( &lt;strong id=&quot;addSTC&quot;&gt;StorageClass&lt;/strong&gt; stc);</target>
        </trans-unit>
        <trans-unit id="9ce2642cbb11eef6fc2b7f288f947c7e0f6b8038" translate="yes" xml:space="preserve">
          <source>final Type &lt;strong id=&quot;baseElemOf&quot;&gt;baseElemOf&lt;/strong&gt;();</source>
          <target state="translated">Tipo final &lt;strong id=&quot;baseElemOf&quot;&gt;baseElemOf&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="9ffb8f2a8afbb41b8d93bc8ee22be703c3337226" translate="yes" xml:space="preserve">
          <source>final Type &lt;strong id=&quot;castMod&quot;&gt;castMod&lt;/strong&gt;(MOD mod);</source>
          <target state="translated">Tipo final &lt;strong id=&quot;castMod&quot;&gt;castMod&lt;/strong&gt; (MOD mod);</target>
        </trans-unit>
        <trans-unit id="802a7377cb93da99911809ba16d14d1eef71449b" translate="yes" xml:space="preserve">
          <source>final Type &lt;strong id=&quot;constOf&quot;&gt;constOf&lt;/strong&gt;();</source>
          <target state="translated">Tipo final &lt;strong id=&quot;constOf&quot;&gt;constOf&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="68f5f60fcf4314721373502224a1e04ae6467696" translate="yes" xml:space="preserve">
          <source>final Type &lt;strong id=&quot;immutableOf&quot;&gt;immutableOf&lt;/strong&gt;();</source>
          <target state="translated">Tipo final &lt;strong id=&quot;immutableOf&quot;&gt;immutableOf&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f010ec40a0c80f5b81cf3f8f388aefdb8aaf3541" translate="yes" xml:space="preserve">
          <source>final Type &lt;strong id=&quot;merge2&quot;&gt;merge2&lt;/strong&gt;();</source>
          <target state="translated">Tipo final &lt;strong id=&quot;merge2&quot;&gt;merge2&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="95067da3c5834afed1d660ad4f09386ab725b501" translate="yes" xml:space="preserve">
          <source>final Type &lt;strong id=&quot;mutableOf&quot;&gt;mutableOf&lt;/strong&gt;();</source>
          <target state="translated">Tipo final &lt;strong id=&quot;mutableOf&quot;&gt;mutableOf&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="c7cc45aaf22b0ffc22d06ced6b062bc12148c88b" translate="yes" xml:space="preserve">
          <source>final Type &lt;strong id=&quot;nextOf&quot;&gt;nextOf&lt;/strong&gt;();</source>
          <target state="translated">Tipo final &lt;strong id=&quot;nextOf&quot;&gt;nextOf&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="90c23c40706502586a004978bac4db2604e4bc48" translate="yes" xml:space="preserve">
          <source>final Type &lt;strong id=&quot;unSharedOf&quot;&gt;unSharedOf&lt;/strong&gt;();</source>
          <target state="translated">Tipo final &lt;strong id=&quot;unSharedOf&quot;&gt;unSharedOf&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="9a5afb58b1e465b6c90b6d72fcc216622dc8bb80" translate="yes" xml:space="preserve">
          <source>final Type &lt;strong id=&quot;wildOf&quot;&gt;wildOf&lt;/strong&gt;();</source>
          <target state="translated">Tipo final &lt;strong id=&quot;wildOf&quot;&gt;wildOf&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="5cc76c0581c144afe9d8345c6116f4547543a066" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;canInferAttributes&quot;&gt;canInferAttributes&lt;/strong&gt;(Scope* sc);</source>
          <target state="translated">final bool &lt;strong id=&quot;canInferAttributes&quot;&gt;canInferAttributes&lt;/strong&gt; (Scope * sc);</target>
        </trans-unit>
        <trans-unit id="a3e061206dffd817d7ddf71edcc03b2d0c495891" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;canTakeAddressOf&quot;&gt;canTakeAddressOf&lt;/strong&gt;();</source>
          <target state="translated">bool final &lt;strong id=&quot;canTakeAddressOf&quot;&gt;canTakeAddressOf&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="481dc681991dc7cf9adb2aad15b1b6259f4edac7" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;checkClosure&quot;&gt;checkClosure&lt;/strong&gt;();</source>
          <target state="translated">final bool &lt;strong id=&quot;checkClosure&quot;&gt;checkClosure&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="62493fd7df2099b64459a43759f2606fcd100c67" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;checkComplexTransition&quot;&gt;checkComplexTransition&lt;/strong&gt;(ref const Loc loc, Scope* sc);</source>
          <target state="translated">final bool &lt;strong id=&quot;checkComplexTransition&quot;&gt;checkComplexTransition&lt;/strong&gt; (ref const Loc loc, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="7a93717b798a9388c9fb4488d455340662901dfd" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;checkDisabled&quot;&gt;checkDisabled&lt;/strong&gt;(Loc loc, Scope* sc, bool isAliasedDeclaration = false);</source>
          <target state="translated">final bool &lt;strong id=&quot;checkDisabled&quot;&gt;checkDisabled&lt;/strong&gt; (Loc loc, Scope * sc, bool isAliasedDeclaration = false);</target>
        </trans-unit>
        <trans-unit id="01b18d7318ed9eefdb4b5f67de7e3daee083e22e" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;checkForwardRef&quot;&gt;checkForwardRef&lt;/strong&gt;(ref const Loc loc);</source>
          <target state="translated">final bool &lt;strong id=&quot;checkForwardRef&quot;&gt;checkForwardRef&lt;/strong&gt; (ref const Loc loc);</target>
        </trans-unit>
        <trans-unit id="68aacc469f8d11f7ae545d89ebed5d887b562bd4" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;checkNestedReference&quot;&gt;checkNestedReference&lt;/strong&gt;(Scope* sc, Loc loc);</source>
          <target state="translated">final bool &lt;strong id=&quot;checkNestedReference&quot;&gt;checkNestedReference&lt;/strong&gt; (Scope * sc, Loc loc);</target>
        </trans-unit>
        <trans-unit id="d89e582160945d49a7cba1c0208d31fb4f027f73" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;checkNestedReference&quot;&gt;checkNestedReference&lt;/strong&gt;(Scope* sc, ref const Loc loc);</source>
          <target state="translated">final bool &lt;strong id=&quot;checkNestedReference&quot;&gt;checkNestedReference&lt;/strong&gt; (Scope * sc, ref const Loc loc);</target>
        </trans-unit>
        <trans-unit id="f81b9354aa05bb6ee7c0147b2f4bfbd46e278007" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;checkNogc&quot;&gt;checkNogc&lt;/strong&gt;(Scope* sc, FuncDeclaration f);</source>
          <target state="translated">final bool &lt;strong id=&quot;checkNogc&quot;&gt;checkNogc&lt;/strong&gt; (Scope * sc, FuncDeclaration f);</target>
        </trans-unit>
        <trans-unit id="31d332f9ee56d9770969ed622d3a99e5feca24ea" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;checkOverlappedFields&quot;&gt;checkOverlappedFields&lt;/strong&gt;();</source>
          <target state="translated">final bool &lt;strong id=&quot;checkOverlappedFields&quot;&gt;checkOverlappedFields&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="9cff06aaa578f8feb27ec0ba4908b6dc3b74fa89" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;checkPostblit&quot;&gt;checkPostblit&lt;/strong&gt;(Scope* sc, Type t);</source>
          <target state="translated">&lt;strong id=&quot;checkPostblit&quot;&gt;check&lt;/strong&gt; bool final &lt;strong id=&quot;checkPostblit&quot;&gt;Posblit&lt;/strong&gt; (Scope * sc, Tipo t);</target>
        </trans-unit>
        <trans-unit id="32c337b502db45dd0d41296f59211367053067bc" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;checkPurity&quot;&gt;checkPurity&lt;/strong&gt;(Scope* sc, FuncDeclaration f);</source>
          <target state="translated">final bool &lt;strong id=&quot;checkPurity&quot;&gt;checkPurity&lt;/strong&gt; (Scope * sc, FuncDeclaration f);</target>
        </trans-unit>
        <trans-unit id="bc71c7aee3c55ea8c9059b62ee02a051e591e784" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;checkPurity&quot;&gt;checkPurity&lt;/strong&gt;(Scope* sc, VarDeclaration v);</source>
          <target state="translated">final bool &lt;strong id=&quot;checkPurity&quot;&gt;checkPurity&lt;/strong&gt; (Scope * sc, VarDeclaration v);</target>
        </trans-unit>
        <trans-unit id="59f6ec531c3790847a2005dbbf7fa60f0d0ce222" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;checkReadModifyWrite&quot;&gt;checkReadModifyWrite&lt;/strong&gt;(TOK rmwOp, Expression ex = null);</source>
          <target state="translated">final bool &lt;strong id=&quot;checkReadModifyWrite&quot;&gt;checkReadModifyWrite&lt;/strong&gt; (TOK rmwOp, Expresi&amp;oacute;n ex = nulo);</target>
        </trans-unit>
        <trans-unit id="0df14a1d634c1f34b3ca78efed7ef876110b45df" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;checkSafety&quot;&gt;checkSafety&lt;/strong&gt;(Scope* sc, FuncDeclaration f);</source>
          <target state="translated">final bool &lt;strong id=&quot;checkSafety&quot;&gt;checkSafety&lt;/strong&gt; (Scope * sc, FuncDeclaration f);</target>
        </trans-unit>
        <trans-unit id="ba40010dee7ab373f1de71e498b180a3c5eed9fc" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;comeFrom&quot;&gt;comeFrom&lt;/strong&gt;();</source>
          <target state="translated">bool final &lt;strong id=&quot;comeFrom&quot;&gt;comeFrom&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="2e5cd7e4a9c19fa716fc20eb685f4b03e8e0f3fa" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;determineFields&quot;&gt;determineFields&lt;/strong&gt;();</source>
          <target state="translated">bool final &lt;strong id=&quot;determineFields&quot;&gt;determineFields&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="6c6fab368b5e77d86d963fe8516f8b346dbd659b" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;determineSize&quot;&gt;determineSize&lt;/strong&gt;(Loc loc);</source>
          <target state="translated">bool final &lt;strong id=&quot;determineSize&quot;&gt;determineSize&lt;/strong&gt; (Loc loc);</target>
        </trans-unit>
        <trans-unit id="29d04f9c8cda5c938f0024f47d62313536c4b82e" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;equalsx&quot;&gt;equalsx&lt;/strong&gt;(TemplateInstance ti);</source>
          <target state="translated">final bool &lt;strong id=&quot;equalsx&quot;&gt;equalsx&lt;/strong&gt; (TemplateInstance ti);</target>
        </trans-unit>
        <trans-unit id="dc02d711f207c549c77bde9e47f218092f64e8be" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;fill&quot;&gt;fill&lt;/strong&gt;(Loc loc, Expressions* elements, bool ctorinit);</source>
          <target state="translated">&lt;strong id=&quot;fill&quot;&gt;relleno&lt;/strong&gt; bool final (Loc loc, elementos Expressions *, bool ctorinit);</target>
        </trans-unit>
        <trans-unit id="97c7e95fe2bfa4091384931686da0ffbcc078065" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;findTempDecl&quot;&gt;findTempDecl&lt;/strong&gt;(Scope* sc, WithScopeSymbol* pwithsym);</source>
          <target state="translated">bool final &lt;strong id=&quot;findTempDecl&quot;&gt;findTempDecl&lt;/strong&gt; (Scope * sc, WithScopeSymbol * pwithsym);</target>
        </trans-unit>
        <trans-unit id="741db69dab9c751bf6f8a20cd7f28c65f48fe56b" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;fit&quot;&gt;fit&lt;/strong&gt;(ref const Loc loc, Scope* sc, Expressions* elements, Type stype);</source>
          <target state="translated">&lt;strong id=&quot;fit&quot;&gt;ajuste&lt;/strong&gt; bool final (ref const Loc loc, Scope * sc, Expressions * elements, Type stype);</target>
        </trans-unit>
        <trans-unit id="2339eeccc8b90a997b2e5a3fbb01b63dc2fea6f7" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;functionSemantic&quot;&gt;functionSemantic&lt;/strong&gt;();</source>
          <target state="translated">&lt;strong id=&quot;functionSemantic&quot;&gt;funci&amp;oacute;n&lt;/strong&gt; bool final Sem&amp;aacute;ntica ();</target>
        </trans-unit>
        <trans-unit id="ade74d8988e95549807e17fede426470175b0111" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;functionSemantic3&quot;&gt;functionSemantic3&lt;/strong&gt;();</source>
          <target state="translated">&lt;strong id=&quot;functionSemantic3&quot;&gt;funci&amp;oacute;n&lt;/strong&gt; bool final Semantic3 ();</target>
        </trans-unit>
        <trans-unit id="7790b09f0ab895ccd25deb5430220ccd6b58808e" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;hasCode&quot;&gt;hasCode&lt;/strong&gt;();</source>
          <target state="translated">bool final &lt;strong id=&quot;hasCode&quot;&gt;hasCode&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="dd330a64acf1bacaed9cb94efc8cc7aea2f42970" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;hasMonitor&quot;&gt;hasMonitor&lt;/strong&gt;();</source>
          <target state="translated">bool final &lt;strong id=&quot;hasMonitor&quot;&gt;hasMonitor&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="b6e4990a82c7140551568282b18ef2d8860be9fa" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;hasNestedArgs&quot;&gt;hasNestedArgs&lt;/strong&gt;(Objects* args, bool isstatic);</source>
          <target state="translated">bool final &lt;strong id=&quot;hasNestedArgs&quot;&gt;hasNestedArgs&lt;/strong&gt; (Objetos * args, bool isstatic);</target>
        </trans-unit>
        <trans-unit id="7bc1e93a3834d96ba46f4f42b5bafbe1302525e9" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;hasNestedFrameRefs&quot;&gt;hasNestedFrameRefs&lt;/strong&gt;();</source>
          <target state="translated">bool final &lt;strong id=&quot;hasNestedFrameRefs&quot;&gt;hasNestedFrameRefs&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="81c6c62f9b8afb83d81e20ea24c5077f56109870" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;inNonRoot&quot;&gt;inNonRoot&lt;/strong&gt;();</source>
          <target state="translated">bool final &lt;strong id=&quot;inNonRoot&quot;&gt;enNonRoot&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="c426c14d4e9c0b3998dedf4194c007b54115700c" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;inUnittest&quot;&gt;inUnittest&lt;/strong&gt;();</source>
          <target state="translated">bool final &lt;strong id=&quot;inUnittest&quot;&gt;enUnittest&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="902808a513fa14e2b6a6bb7737758290003b8d20" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;isAbstract&quot;&gt;isAbstract&lt;/strong&gt;();</source>
          <target state="translated">bool final &lt;strong id=&quot;isAbstract&quot;&gt;isAbstract&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="0ebee1ab8043729289b919f076c51511e0259bd1" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;isBaseOf2&quot;&gt;isBaseOf2&lt;/strong&gt;(ClassDeclaration cd);</source>
          <target state="translated">bool final &lt;strong id=&quot;isBaseOf2&quot;&gt;esBaseOf2&lt;/strong&gt; (ClassDeclaration cd);</target>
        </trans-unit>
        <trans-unit id="05f35d99c833f4acc49cc24c28221df71738c4ff" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;isCTFE&quot;&gt;isCTFE&lt;/strong&gt;();</source>
          <target state="translated">bool final &lt;strong id=&quot;isCTFE&quot;&gt;isCTFE&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="a6f0bdd22e14c80c8754525b888a86a064df0d63" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;isDataseg&quot;&gt;isDataseg&lt;/strong&gt;();</source>
          <target state="translated">bool final &lt;strong id=&quot;isDataseg&quot;&gt;esDataseg&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="15ec4f59aefec96196467afeeffd59161833f8e4" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;isPOD&quot;&gt;isPOD&lt;/strong&gt;();</source>
          <target state="translated">bool final &lt;strong id=&quot;isPOD&quot;&gt;isPOD&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="fad3a0bfc11457298229e79244c72c62efe654d6" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;isReturnIsolated&quot;&gt;isReturnIsolated&lt;/strong&gt;();</source>
          <target state="translated">bool final &lt;strong id=&quot;isReturnIsolated&quot;&gt;isReturnIsolated&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="347dcb15912cb79db531489eba4390ec13d3085e" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;isThreadlocal&quot;&gt;isThreadlocal&lt;/strong&gt;();</source>
          <target state="translated">bool final es &lt;strong id=&quot;isThreadlocal&quot;&gt;Threadlocal&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="cf5f5635e8748efcb3cb90a9e9d76e3740e2e3cf" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;isTypeIsolated&quot;&gt;isTypeIsolated&lt;/strong&gt;(Type t);</source>
          <target state="translated">bool final &lt;strong id=&quot;isTypeIsolated&quot;&gt;isTypeIsolated&lt;/strong&gt; (Tipo t);</target>
        </trans-unit>
        <trans-unit id="abdd7e1fff6eb6f79873540472fb4b284b8df22b" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;isUnique&quot;&gt;isUnique&lt;/strong&gt;();</source>
          <target state="translated">bool final &lt;strong id=&quot;isUnique&quot;&gt;esUnique&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ef95eda0a40e0b44e8b318c4b2eedb7227cc95fa" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;needsClosure&quot;&gt;needsClosure&lt;/strong&gt;();</source>
          <target state="translated">final bool &lt;strong id=&quot;needsClosure&quot;&gt;needsClosure&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ba4e6cf81ea0205ddc580dd832d8f638a16725aa" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;needsCodegen&quot;&gt;needsCodegen&lt;/strong&gt;();</source>
          <target state="translated">bool final &lt;strong id=&quot;needsCodegen&quot;&gt;needCodegen&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ceb88ce41587fd7c11000fd3d1d8abd3479d5278" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;needsScopeDtor&quot;&gt;needsScopeDtor&lt;/strong&gt;();</source>
          <target state="translated">bool final &lt;strong id=&quot;needsScopeDtor&quot;&gt;needsScopeDtor&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="b7f884335adf00cda20f1d1bff4c25d2cf4eb90f" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;needsTypeInference&quot;&gt;needsTypeInference&lt;/strong&gt;(Scope* sc, int flag = 0);</source>
          <target state="translated">final bool &lt;strong id=&quot;needsTypeInference&quot;&gt;needsTypeInference&lt;/strong&gt; (Alcance * sc, int flag = 0);</target>
        </trans-unit>
        <trans-unit id="8fdc6c5239ed57e020e205a6b7c2101f231d3364" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;semanticTiargs&quot;&gt;semanticTiargs&lt;/strong&gt;(Scope* sc);</source>
          <target state="translated">final bool &lt;strong id=&quot;semanticTiargs&quot;&gt;semanticTiargs&lt;/strong&gt; (Scope * sc);</target>
        </trans-unit>
        <trans-unit id="a7df5839431fa5284a4c0aed430b59b2c0a215dd" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;setGC&quot;&gt;setGC&lt;/strong&gt;();</source>
          <target state="translated">final bool &lt;strong id=&quot;setGC&quot;&gt;setGC&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="cfe7a45dc77170d693a2e626d52a11d429479df2" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;setImpure&quot;&gt;setImpure&lt;/strong&gt;();</source>
          <target state="translated">final bool &lt;strong id=&quot;setImpure&quot;&gt;setImpure&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ceabf6657f9b001a8c63341b489808e33b51cdfb" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;setUnsafe&quot;&gt;setUnsafe&lt;/strong&gt;();</source>
          <target state="translated">final bool &lt;strong id=&quot;setUnsafe&quot;&gt;setUnsafe&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="3e2941a53204413dafc91362913c6b9c4eab1582" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;updateTempDecl&quot;&gt;updateTempDecl&lt;/strong&gt;(Scope* sc, Dsymbol s);</source>
          <target state="translated">final bool &lt;strong id=&quot;updateTempDecl&quot;&gt;updateTempDecl&lt;/strong&gt; (Scope * sc, Dsymbol s);</target>
        </trans-unit>
        <trans-unit id="34b6938e21b61006f97dff132dd72f3c36cbe671" translate="yes" xml:space="preserve">
          <source>final bool &lt;strong id=&quot;usesEH&quot;&gt;usesEH&lt;/strong&gt;();</source>
          <target state="translated">el bool final &lt;strong id=&quot;usesEH&quot;&gt;usaEH&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ad90945e90df63bc4d54deca075ec17483ea0466" translate="yes" xml:space="preserve">
          <source>final char* &lt;strong id=&quot;toPrettyChars&quot;&gt;toPrettyChars&lt;/strong&gt;(bool QualifyTypes = false);</source>
          <target state="translated">char final * &lt;strong id=&quot;toPrettyChars&quot;&gt;toPrettyChars&lt;/strong&gt; (bool QualifyTypes = false);</target>
        </trans-unit>
        <trans-unit id="0eb8089fca72ceda0a29ddea26ee11cfbe04b258" translate="yes" xml:space="preserve">
          <source>final const bool &lt;strong id=&quot;isAncestorPackageOf&quot;&gt;isAncestorPackageOf&lt;/strong&gt;(const Package pkg);</source>
          <target state="translated">final const bool &lt;strong id=&quot;isAncestorPackageOf&quot;&gt;isAncestorPackageOf&lt;/strong&gt; (paquete const paquete);</target>
        </trans-unit>
        <trans-unit id="51dab273b9212d7e9f9184b93846c26356255031" translate="yes" xml:space="preserve">
          <source>final const bool &lt;strong id=&quot;isBaseInfoComplete&quot;&gt;isBaseInfoComplete&lt;/strong&gt;();</source>
          <target state="translated">final const bool &lt;strong id=&quot;isBaseInfoComplete&quot;&gt;isBaseInfoComplete&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="990f384eb23f29ca0cc30e05d6669910af316b0a" translate="yes" xml:space="preserve">
          <source>final const bool &lt;strong id=&quot;isCOMclass&quot;&gt;isCOMclass&lt;/strong&gt;();</source>
          <target state="translated">final const bool &lt;strong id=&quot;isCOMclass&quot;&gt;isCOMclass&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="d71a00b5f0b682e16452651c5ba705f90d27e1de" translate="yes" xml:space="preserve">
          <source>final const bool &lt;strong id=&quot;isNested&quot;&gt;isNested&lt;/strong&gt;();</source>
          <target state="translated">final const bool &lt;strong id=&quot;isNested&quot;&gt;isNested&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="cfedd379176fe5051f5a546585d359b2209c856a" translate="yes" xml:space="preserve">
          <source>final const nothrow Type &lt;strong id=&quot;nullAttributes&quot;&gt;nullAttributes&lt;/strong&gt;();</source>
          <target state="translated">final const nothrow Tipo &lt;strong id=&quot;nullAttributes&quot;&gt;nullAttributes&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="4a1ab15b03f7d947b701a43b275790e124c7c961" translate="yes" xml:space="preserve">
          <source>final const nothrow char* &lt;strong id=&quot;modToChars&quot;&gt;modToChars&lt;/strong&gt;();</source>
          <target state="translated">const final nothrow char * &lt;strong id=&quot;modToChars&quot;&gt;modToChars&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="4046d03c5623311a0c175afa0ce09bee136bbe6c" translate="yes" xml:space="preserve">
          <source>final const nothrow void &lt;strong id=&quot;modToBuffer&quot;&gt;modToBuffer&lt;/strong&gt;(OutBuffer* buf);</source>
          <target state="translated">const final nothrow void &lt;strong id=&quot;modToBuffer&quot;&gt;modToBuffer&lt;/strong&gt; (OutBuffer * buf);</target>
        </trans-unit>
        <trans-unit id="2c5f56e9bfdabe78ff28572d017ac7f6923026a9" translate="yes" xml:space="preserve">
          <source>final const pure @nogc @property @safe LogLevel &lt;strong id=&quot;logLevel&quot;&gt;logLevel&lt;/strong&gt;();</source>
          <target state="translated">const final pure @nogc @property @safe LogLevel &lt;strong id=&quot;logLevel&quot;&gt;logLevel&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="fdc51a0273271f498b209948ccaf0b7f53dba562" translate="yes" xml:space="preserve">
          <source>final const pure bool &lt;strong id=&quot;enclosesLifetimeOf&quot;&gt;enclosesLifetimeOf&lt;/strong&gt;(VarDeclaration v);</source>
          <target state="translated">const definitiva puro bool &lt;strong id=&quot;enclosesLifetimeOf&quot;&gt;enclosesLifetimeOf&lt;/strong&gt; (VarDeclaration v);</target>
        </trans-unit>
        <trans-unit id="50cb55742e603bd604a8c2840acf8686500ad9a5" translate="yes" xml:space="preserve">
          <source>final const pure nothrow @nogc @property @safe State &lt;strong id=&quot;state&quot;&gt;state&lt;/strong&gt;();</source>
          <target state="translated">const final pure nothrow @nogc @property @safe Estado &lt;strong id=&quot;state&quot;&gt;estado&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="a4153918347ac3cf6c4bf031b08108904b37febf" translate="yes" xml:space="preserve">
          <source>final const pure nothrow @nogc @trusted bool &lt;strong id=&quot;isBaseOf&quot;&gt;isBaseOf&lt;/strong&gt;(scope const TypeInfo_Class child);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdd0b660ae0dfc7d54aa3153dbbfa004781548b" translate="yes" xml:space="preserve">
          <source>final const(char)* &lt;strong id=&quot;toChars&quot;&gt;toChars&lt;/strong&gt;();</source>
          <target state="translated">const final (char) * &lt;strong id=&quot;toChars&quot;&gt;toChars&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="6ab0a9df19ff7539db7e7a14326678c98f3af6c8" translate="yes" xml:space="preserve">
          <source>final const(char)* &lt;strong id=&quot;toFullSignature&quot;&gt;toFullSignature&lt;/strong&gt;();</source>
          <target state="translated">final const (char) * &lt;strong id=&quot;toFullSignature&quot;&gt;toFullSignature&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="8bc9819161d4b3f23d7edd60df59acc31e1e4dd4" translate="yes" xml:space="preserve">
          <source>final inout inout(AggregateDeclaration) &lt;strong id=&quot;isMember&quot;&gt;isMember&lt;/strong&gt;();</source>
          <target state="translated">final inout inout (Declaraci&amp;oacute;n agregada) &lt;strong id=&quot;isMember&quot;&gt;isMember&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="89f924df914ac9a42ed7472000e49bef4434ca87" translate="yes" xml:space="preserve">
          <source>final inout inout(AggregateDeclaration) &lt;strong id=&quot;isMember2&quot;&gt;isMember2&lt;/strong&gt;();</source>
          <target state="translated">final inout inout (Declaraci&amp;oacute;n agregada) &lt;strong id=&quot;isMember2&quot;&gt;isMember2&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="59c13c977b8933a5d31c07f4cc33d9c5a26f6e28" translate="yes" xml:space="preserve">
          <source>final inout inout(AggregateDeclaration) &lt;strong id=&quot;isMemberDecl&quot;&gt;isMemberDecl&lt;/strong&gt;();</source>
          <target state="translated">final inout inout (Declaraci&amp;oacute;n agregada) &lt;strong id=&quot;isMemberDecl&quot;&gt;isMemberDecl&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="8923039ca68530f53d935aca4633e0d90a82a0a3" translate="yes" xml:space="preserve">
          <source>final inout inout(AggregateDeclaration) &lt;strong id=&quot;isMemberLocal&quot;&gt;isMemberLocal&lt;/strong&gt;();</source>
          <target state="translated">final inout inout (Declaraci&amp;oacute;n agregada) &lt;strong id=&quot;isMemberLocal&quot;&gt;isMemberLocal&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="a1e6df36977dec7e3770f28a6f641f3b7c080deb" translate="yes" xml:space="preserve">
          <source>final inout inout(Dsymbol) &lt;strong id=&quot;pastMixin&quot;&gt;pastMixin&lt;/strong&gt;();</source>
          <target state="translated">final inout inout (Dsymbol) &lt;strong id=&quot;pastMixin&quot;&gt;pastMixin&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="704d48bffc0a81a056d63c9a620578102715e634" translate="yes" xml:space="preserve">
          <source>final inout inout(Dsymbol) &lt;strong id=&quot;toParent&quot;&gt;toParent&lt;/strong&gt;();</source>
          <target state="translated">final inout inout (Dsymbol) &lt;strong id=&quot;toParent&quot;&gt;toParent&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="c0cd9c0036cde3824b01ceac72ed5e2fa4924146" translate="yes" xml:space="preserve">
          <source>final inout inout(Dsymbol) &lt;strong id=&quot;toParent2&quot;&gt;toParent2&lt;/strong&gt;();</source>
          <target state="translated">final inout inout (Dsymbol) &lt;strong id=&quot;toParent2&quot;&gt;toParent2&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f42c32c3cbafeef01556edfb17b80e930c43c728" translate="yes" xml:space="preserve">
          <source>final inout inout(Dsymbol) &lt;strong id=&quot;toParentDecl&quot;&gt;toParentDecl&lt;/strong&gt;();</source>
          <target state="translated">final inout inout (Dsymbol) &lt;strong id=&quot;toParentDecl&quot;&gt;toParentDecl&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="e49a4e639c46a627154807709e289519c363fc6c" translate="yes" xml:space="preserve">
          <source>final inout inout(Dsymbol) &lt;strong id=&quot;toParentLocal&quot;&gt;toParentLocal&lt;/strong&gt;();</source>
          <target state="translated">final inout inout (Dsymbol) &lt;strong id=&quot;toParentLocal&quot;&gt;toParentLocal&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="53780e75ca510b71a2b09898c584b3f63d7af7bb" translate="yes" xml:space="preserve">
          <source>final inout pure nothrow @nogc inout(ErrorStatement) &lt;strong id=&quot;isErrorStatement&quot;&gt;isErrorStatement&lt;/strong&gt;();</source>
          <target state="translated">final inout puro nothrow @nogc inout (ErrorStatement) &lt;strong id=&quot;isErrorStatement&quot;&gt;isErrorStatement&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="8e26fee9ee387c73ba269979721345ddf2908dd7" translate="yes" xml:space="preserve">
          <source>final int &lt;strong id=&quot;covariant&quot;&gt;covariant&lt;/strong&gt;(Type t, StorageClass* pstc = null, bool fix17349 = true);</source>
          <target state="translated">&lt;strong id=&quot;covariant&quot;&gt;covariante&lt;/strong&gt; int final (Tipo t, StorageClass * pstc = null, bool fix17349 = true);</target>
        </trans-unit>
        <trans-unit id="8d6d4e39bfd9d013d0653315a8f1c41dd1806390" translate="yes" xml:space="preserve">
          <source>final int &lt;strong id=&quot;findVtblIndex&quot;&gt;findVtblIndex&lt;/strong&gt;(Dsymbols* vtbl, int dim, bool fix17349 = true);</source>
          <target state="translated">final int &lt;strong id=&quot;findVtblIndex&quot;&gt;findVtblIndex&lt;/strong&gt; (Dsymbols * vtbl, int dim, bool fix17349 = true);</target>
        </trans-unit>
        <trans-unit id="9665fd25523cea15243c7e65a4852893a2a293a5" translate="yes" xml:space="preserve">
          <source>final int &lt;strong id=&quot;getLevel&quot;&gt;getLevel&lt;/strong&gt;(FuncDeclaration fd, int intypeof);</source>
          <target state="translated">final int &lt;strong id=&quot;getLevel&quot;&gt;getLevel&lt;/strong&gt; (FuncDeclaration fd, int intypeof);</target>
        </trans-unit>
        <trans-unit id="06e50a085f85dcebaa3e8561b7f49a5b051ced46" translate="yes" xml:space="preserve">
          <source>final int &lt;strong id=&quot;getLevelAndCheck&quot;&gt;getLevelAndCheck&lt;/strong&gt;(ref const Loc loc, Scope* sc, FuncDeclaration fd);</source>
          <target state="translated">final int &lt;strong id=&quot;getLevelAndCheck&quot;&gt;getLevelAndCheck&lt;/strong&gt; (ref const Loc loc, Scope * sc, FuncDeclaration fd);</target>
        </trans-unit>
        <trans-unit id="094dbccef96e17b855e867359d3773a8b1f17e52" translate="yes" xml:space="preserve">
          <source>final int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt;(scope int delegate(ref Thread) dg);</source>
          <target state="translated">final int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt; (&amp;aacute;mbito int delegado (ref Thread) dg);</target>
        </trans-unit>
        <trans-unit id="e0ce38e8e3e42198b86c2bd6ba8a75c37d13ff83" translate="yes" xml:space="preserve">
          <source>final int &lt;strong id=&quot;overrides&quot;&gt;overrides&lt;/strong&gt;(FuncDeclaration fd);</source>
          <target state="translated">&lt;strong id=&quot;overrides&quot;&gt;reemplazos&lt;/strong&gt; int finales (FuncDeclaration fd);</target>
        </trans-unit>
        <trans-unit id="9147c108bf7f87ccaf4d97f6b0122325bfed828b" translate="yes" xml:space="preserve">
          <source>final nothrow @nogc @property bool &lt;strong id=&quot;isMainThread&quot;&gt;isMainThread&lt;/strong&gt;();</source>
          <target state="translated">nothrow final @nogc @property bool &lt;strong id=&quot;isMainThread&quot;&gt;isMainThread&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="d123f7519d90eb80d047c1632887ea18028e68de" translate="yes" xml:space="preserve">
          <source>final nothrow @nogc @property bool &lt;strong id=&quot;isRunning&quot;&gt;isRunning&lt;/strong&gt;();</source>
          <target state="translated">nothrow final @nogc @property bool &lt;strong id=&quot;isRunning&quot;&gt;isRunning&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="eab109f4d0215d47cd49196bffe79384341e2cc7" translate="yes" xml:space="preserve">
          <source>final nothrow @nogc @trusted bool &lt;strong id=&quot;tryLock_nothrow&quot;&gt;tryLock_nothrow&lt;/strong&gt;(this Q)()</source>
          <target state="translated">nothrow final @nogc @trusted bool &lt;strong id=&quot;tryLock_nothrow&quot;&gt;tryLock_nothrow&lt;/strong&gt; (esta Q) ()</target>
        </trans-unit>
        <trans-unit id="501541d9926d5c059972b4254e64d670f4c302cd" translate="yes" xml:space="preserve">
          <source>final nothrow @nogc @trusted void &lt;strong id=&quot;lock_nothrow&quot;&gt;lock_nothrow&lt;/strong&gt;(this Q)()</source>
          <target state="translated">nothrow final @nogc @trusted void &lt;strong id=&quot;lock_nothrow&quot;&gt;lock_nothrow&lt;/strong&gt; (esta Q) ()</target>
        </trans-unit>
        <trans-unit id="d4a11d7e87b208bcb54538e7581c0a3423711064" translate="yes" xml:space="preserve">
          <source>final nothrow @nogc @trusted void &lt;strong id=&quot;unlock_nothrow&quot;&gt;unlock_nothrow&lt;/strong&gt;(this Q)()</source>
          <target state="translated">nothrow final @nogc @trusted vock &lt;strong id=&quot;unlock_nothrow&quot;&gt;unlock_nothrow&lt;/strong&gt; (esta Q) ()</target>
        </trans-unit>
        <trans-unit id="a4895232ab7bf855e250745c3bc5ddf98cfc958b" translate="yes" xml:space="preserve">
          <source>final nothrow @nogc void &lt;strong id=&quot;reset&quot;&gt;reset&lt;/strong&gt;();</source>
          <target state="translated">nothrow final @nogc void &lt;strong id=&quot;reset&quot;&gt;reset&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="27c1cd33394c1b736b1752be34f8e6afcc573194" translate="yes" xml:space="preserve">
          <source>final nothrow @nogc void &lt;strong id=&quot;reset&quot;&gt;reset&lt;/strong&gt;(void delegate() dg);</source>
          <target state="translated">nothrow final @nogc void &lt;strong id=&quot;reset&quot;&gt;reset&lt;/strong&gt; (delegado vac&amp;iacute;o () dg);</target>
        </trans-unit>
        <trans-unit id="018962c7e43ac636faa3daccf1d385e8bb5efeb4" translate="yes" xml:space="preserve">
          <source>final nothrow @nogc void &lt;strong id=&quot;reset&quot;&gt;reset&lt;/strong&gt;(void function() fn);</source>
          <target state="translated">nothrow final @nogc void &lt;strong id=&quot;reset&quot;&gt;reset&lt;/strong&gt; (funci&amp;oacute;n nula () fn);</target>
        </trans-unit>
        <trans-unit id="c62efb5bc40c3edb0c08eb6ec3cbe1db73a63f32" translate="yes" xml:space="preserve">
          <source>final nothrow @trusted ubyte[] &lt;strong id=&quot;digest&quot;&gt;digest&lt;/strong&gt;(scope const(void[])[] data...);</source>
          <target state="translated">nothrow final @trusted ubyte [] &lt;strong id=&quot;digest&quot;&gt;digest&lt;/strong&gt; (alcance const (void []) [] datos ...);</target>
        </trans-unit>
        <trans-unit id="67e66a99e2598cd74b28d1a1c54265a5f8beaee6" translate="yes" xml:space="preserve">
          <source>final nothrow TOK &lt;strong id=&quot;peekNext&quot;&gt;peekNext&lt;/strong&gt;();</source>
          <target state="translated">final nothrow TOK &lt;strong id=&quot;peekNext&quot;&gt;peekNext&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="535fc8ee79b82af42604be91f9776546e9dc4483" translate="yes" xml:space="preserve">
          <source>final nothrow TOK &lt;strong id=&quot;peekNext2&quot;&gt;peekNext2&lt;/strong&gt;();</source>
          <target state="translated">final nothrow TOK &lt;strong id=&quot;peekNext2&quot;&gt;peekNext2&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="8feb8f322b45065ca712100a872785f6701aeea2" translate="yes" xml:space="preserve">
          <source>final nothrow Thread &lt;strong id=&quot;start&quot;&gt;start&lt;/strong&gt;();</source>
          <target state="translated">final de subproceso de &lt;strong id=&quot;start&quot;&gt;inicio inicial&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ceed47221c33ccc941da0d599f4f16d0196447a6" translate="yes" xml:space="preserve">
          <source>final nothrow Token* &lt;strong id=&quot;peekPastParen&quot;&gt;peekPastParen&lt;/strong&gt;(Token* tk);</source>
          <target state="translated">token final de nohrow * &lt;strong id=&quot;peekPastParen&quot;&gt;peekPastParen&lt;/strong&gt; (Token * tk);</target>
        </trans-unit>
        <trans-unit id="e7ef80518a1e273ba66f5b66109777f5c1d10735" translate="yes" xml:space="preserve">
          <source>final nothrow bool &lt;strong id=&quot;errors&quot;&gt;errors&lt;/strong&gt;();</source>
          <target state="translated">&lt;strong id=&quot;errors&quot;&gt;errores&lt;/strong&gt; finales de bool de nothrow ();</target>
        </trans-unit>
        <trans-unit id="f2b589cd909a6c4aeca48f1152fa75dccc5af847" translate="yes" xml:space="preserve">
          <source>final nothrow void &lt;strong id=&quot;deprecation&quot;&gt;deprecation&lt;/strong&gt;(ref const Loc loc, const(char)* format, ...);</source>
          <target state="translated">nothrow &amp;uacute;ltima vac&amp;iacute;o &lt;strong id=&quot;deprecation&quot;&gt;desaprobaci&amp;oacute;n&lt;/strong&gt; (ref const Loc Loc, const (char) * formato, ...);</target>
        </trans-unit>
        <trans-unit id="5934d992f30c9df1130baf7c1440b8a753388729" translate="yes" xml:space="preserve">
          <source>final nothrow void &lt;strong id=&quot;deprecationSupplemental&quot;&gt;deprecationSupplemental&lt;/strong&gt;(ref const Loc loc, const(char)* format, ...);</source>
          <target state="translated">nothrow &amp;uacute;ltima vac&amp;iacute;o &lt;strong id=&quot;deprecationSupplemental&quot;&gt;deprecationSupplemental&lt;/strong&gt; (ref const Loc Loc, const (char) * formato, ...);</target>
        </trans-unit>
        <trans-unit id="008c8e49287a3ea34c8e20ee453f7e1990f655d7" translate="yes" xml:space="preserve">
          <source>final nothrow void &lt;strong id=&quot;error&quot;&gt;error&lt;/strong&gt;(ref const Loc loc, const(char)* format, ...);</source>
          <target state="translated">&lt;strong id=&quot;error&quot;&gt;error de&lt;/strong&gt; anulaci&amp;oacute;n de nothrow final (ref const Loc loc, formato const (char) *, ...);</target>
        </trans-unit>
        <trans-unit id="e9a842be494e30236109bc16db95c6674452e12e" translate="yes" xml:space="preserve">
          <source>final nothrow void &lt;strong id=&quot;errorSupplemental&quot;&gt;errorSupplemental&lt;/strong&gt;(ref const Loc loc, const(char)* format, ...);</source>
          <target state="translated">error de anulaci&amp;oacute;n final de nothrow &lt;strong id=&quot;errorSupplemental&quot;&gt;Suplementario&lt;/strong&gt; (ref const Loc loc, formato const (char) *, ...);</target>
        </trans-unit>
        <trans-unit id="6fbffdba7767bfd6a4bf88cfb0ac7f9e232f6ce4" translate="yes" xml:space="preserve">
          <source>final nothrow void &lt;strong id=&quot;scan&quot;&gt;scan&lt;/strong&gt;(Token* t);</source>
          <target state="translated">nothrow &amp;uacute;ltima vac&amp;iacute;o &lt;strong id=&quot;scan&quot;&gt;exploraci&amp;oacute;n&lt;/strong&gt; (Token * t);</target>
        </trans-unit>
        <trans-unit id="cb05635fe2975c50ef79afa107bf05b029fca780" translate="yes" xml:space="preserve">
          <source>final nothrow void &lt;strong id=&quot;warning&quot;&gt;warning&lt;/strong&gt;(ref const Loc loc, const(char)* format, ...);</source>
          <target state="translated">&lt;strong id=&quot;warning&quot;&gt;advertencia de&lt;/strong&gt; anulaci&amp;oacute;n final de no reducci&amp;oacute;n (ref const Loc loc, formato const (char) *, ...);</target>
        </trans-unit>
        <trans-unit id="801adbf0e24265731dd09695fa68602040703f56" translate="yes" xml:space="preserve">
          <source>final nothrow void &lt;strong id=&quot;warningSupplemental&quot;&gt;warningSupplemental&lt;/strong&gt;(ref const Loc loc, const(char)* format, ...);</source>
          <target state="translated">advertencia de anulaci&amp;oacute;n final de nula &lt;strong id=&quot;warningSupplemental&quot;&gt;Suplemento&lt;/strong&gt; (ref const Loc loc, formato const (char) *, ...);</target>
        </trans-unit>
        <trans-unit id="16561712cb9c53a9a40aa906a8bc9b9e6b68cf8d" translate="yes" xml:space="preserve">
          <source>final pure nothrow @nogc @property @safe uint &lt;strong id=&quot;errno&quot;&gt;errno&lt;/strong&gt;();</source>
          <target state="translated">nothrow puro final @nogc @property @safe uint &lt;strong id=&quot;errno&quot;&gt;errno&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="bfd0ae41ff40b7b58f9217cc4aa50ff9937a8943" translate="yes" xml:space="preserve">
          <source>final pure nothrow @nogc ref scope @system uint &lt;strong id=&quot;refcount&quot;&gt;refcount&lt;/strong&gt;() return;</source>
          <target state="translated">nothrow puro final @nogc ref scope @system uint &lt;strong id=&quot;refcount&quot;&gt;refcount&lt;/strong&gt; () return;</target>
        </trans-unit>
        <trans-unit id="fc5ac1fce545b9b3bf7662a6e1bb9b3d206abd1e" translate="yes" xml:space="preserve">
          <source>final size_t &lt;strong id=&quot;nonHiddenFields&quot;&gt;nonHiddenFields&lt;/strong&gt;();</source>
          <target state="translated">&lt;strong id=&quot;nonHiddenFields&quot;&gt;tama&amp;ntilde;o_t&lt;/strong&gt; final &lt;strong id=&quot;nonHiddenFields&quot;&gt;nonHiddenFields&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="6a2c9edf351ba459f2d88bc857ede947c9360f1a" translate="yes" xml:space="preserve">
          <source>final this(ref const Loc loc, Statement[] sts...);</source>
          <target state="translated">final this(ref const Loc loc,Statement[]sts...);</target>
        </trans-unit>
        <trans-unit id="bc9fe52eff0d5185369c1a28cceed4495c028d6e" translate="yes" xml:space="preserve">
          <source>final this(ref const Loc loc, Statements* statements);</source>
          <target state="translated">final this(ref const Loc loc,Declaraciones*declaraciones);</target>
        </trans-unit>
        <trans-unit id="64f8a8f52c356d243251323ce43957c6670f996c" translate="yes" xml:space="preserve">
          <source>final type of result (can be different from sd's type)</source>
          <target state="translated">tipo de resultado final (puede ser diferente del tipo de sd)</target>
        </trans-unit>
        <trans-unit id="a28aa53209a595f87a7081165021a468fb9d3206" translate="yes" xml:space="preserve">
          <source>final uint &lt;strong id=&quot;numberOfElems&quot;&gt;numberOfElems&lt;/strong&gt;(ref const Loc loc);</source>
          <target state="translated">uint final &lt;strong id=&quot;numberOfElems&quot;&gt;numberOfElems&lt;/strong&gt; (ref const Loc loc)</target>
        </trans-unit>
        <trans-unit id="91772362a9a56fde85d8f9f9cf8c6ddeb090857b" translate="yes" xml:space="preserve">
          <source>final uinteger_t &lt;strong id=&quot;sizemask&quot;&gt;sizemask&lt;/strong&gt;();</source>
          <target state="translated">final uinteger_t &lt;strong id=&quot;sizemask&quot;&gt;sizemask&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="53b3fd5d41f4304ca9103e6b310901920d957928" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;add&quot;&gt;add&lt;/strong&gt;(Thread t);</source>
          <target state="translated">&lt;strong id=&quot;add&quot;&gt;suma&lt;/strong&gt; vac&amp;iacute;a final (Hilo t);</target>
        </trans-unit>
        <trans-unit id="2408fb8ea7247c7f96870c3aafaf5865c041ca3c" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;addLocalClass&quot;&gt;addLocalClass&lt;/strong&gt;(ClassDeclarations* aclasses);</source>
          <target state="translated">final vac&amp;iacute;o &lt;strong id=&quot;addLocalClass&quot;&gt;addLocalClass&lt;/strong&gt; (ClassDeclarations * aclasses);</target>
        </trans-unit>
        <trans-unit id="c984d2baf43af282d6fd6557192afaf6ec979195" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;addMaybe&quot;&gt;addMaybe&lt;/strong&gt;(VarDeclaration v);</source>
          <target state="translated">vac&amp;iacute;o final &lt;strong id=&quot;addMaybe&quot;&gt;addMaybe&lt;/strong&gt; (VarDeclaration v);</target>
        </trans-unit>
        <trans-unit id="4c05e24a3c578bfd5463a5722faa655d91b7cf7c" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;buildEnsureRequire&quot;&gt;buildEnsureRequire&lt;/strong&gt;();</source>
          <target state="translated">nulo final &lt;strong id=&quot;buildEnsureRequire&quot;&gt;buildEnsureRequire&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="2a3921104954f64450c37ea7e2ad9f26f2e561a5" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;buildResultVar&quot;&gt;buildResultVar&lt;/strong&gt;(Scope* sc, Type tret);</source>
          <target state="translated">vac&amp;iacute;o final &lt;strong id=&quot;buildResultVar&quot;&gt;buildResultVar&lt;/strong&gt; (Scope * sc, Type tret);</target>
        </trans-unit>
        <trans-unit id="285047d7fcc8b8048f8257c5fe58ab8d6460c9aa" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;check&quot;&gt;check&lt;/strong&gt;();</source>
          <target state="translated">&lt;strong id=&quot;check&quot;&gt;verificaci&amp;oacute;n&lt;/strong&gt; nula final ();</target>
        </trans-unit>
        <trans-unit id="4944d42f3f463a65ccb7bb9e35359d7119e11eba" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;checkDmain&quot;&gt;checkDmain&lt;/strong&gt;();</source>
          <target state="translated">&lt;strong id=&quot;checkDmain&quot;&gt;check&lt;/strong&gt; nulo &lt;strong id=&quot;checkDmain&quot;&gt;finalDmain&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="cfa7865a62a1600c08a51825ce9e4783b54a91bc" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;connect&quot;&gt;connect&lt;/strong&gt;(slot_t slot);</source>
          <target state="translated">&lt;strong id=&quot;connect&quot;&gt;conexi&amp;oacute;n&lt;/strong&gt; vac&amp;iacute;a final (slot_t slot);</target>
        </trans-unit>
        <trans-unit id="a5dde06a48e7cc62484ab89bd60df91315ec9e20" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;declareParameters&quot;&gt;declareParameters&lt;/strong&gt;(Scope* sc);</source>
          <target state="translated">nulo final &lt;strong id=&quot;declareParameters&quot;&gt;declareParameters&lt;/strong&gt; (Scope * sc);</target>
        </trans-unit>
        <trans-unit id="5dcf09f98b5b8eeaa7a4b9a48eacc95ddc9502e9" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;disconnect&quot;&gt;disconnect&lt;/strong&gt;(slot_t slot);</source>
          <target state="translated">&lt;strong id=&quot;disconnect&quot;&gt;desconexi&amp;oacute;n&lt;/strong&gt; nula final (slot_t slot);</target>
        </trans-unit>
        <trans-unit id="ddf62a83684f37cc479b1cfcf525358f48906e0f" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;disconnectAll&quot;&gt;disconnectAll&lt;/strong&gt;();</source>
          <target state="translated">&lt;strong id=&quot;disconnectAll&quot;&gt;desconexi&amp;oacute;n&lt;/strong&gt; final vac&amp;iacute;aAll ();</target>
        </trans-unit>
        <trans-unit id="d16ced778b0355fae0458901c980068a298af51c" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;emit&quot;&gt;emit&lt;/strong&gt;(T1 i);</source>
          <target state="translated">&lt;strong id=&quot;emit&quot;&gt;emisi&amp;oacute;n&lt;/strong&gt; nula final (T1 i);</target>
        </trans-unit>
        <trans-unit id="7bd3f5d916876071345a42bca457ee6cae41b4eb" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;fixTo&quot;&gt;fixTo&lt;/strong&gt;(Type t);</source>
          <target state="translated">vac&amp;iacute;o final &lt;strong id=&quot;fixTo&quot;&gt;fixTo&lt;/strong&gt; (Tipo t);</target>
        </trans-unit>
        <trans-unit id="ac5c1742765bc43644f38074dfe2c15e9150e39e" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;initInferAttributes&quot;&gt;initInferAttributes&lt;/strong&gt;();</source>
          <target state="translated">nulo final &lt;strong id=&quot;initInferAttributes&quot;&gt;initInferAttributes&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="a520b2445f45ef88b7e00e6471bffb3c665bd110" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;joinAll&quot;&gt;joinAll&lt;/strong&gt;(bool rethrow = true);</source>
          <target state="translated">final vac&amp;iacute;o &lt;strong id=&quot;joinAll&quot;&gt;joinAll&lt;/strong&gt; (bool rethrow = true);</target>
        </trans-unit>
        <trans-unit id="036f6113a50e5f5accea2200ae0143f1d6028834" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;popFront&quot;&gt;popFront&lt;/strong&gt;();</source>
          <target state="translated">vac&amp;iacute;o final &lt;strong id=&quot;popFront&quot;&gt;popFront&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="be509e433c26e5009f472a8c947dd8df91cb94b5" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;printInstantiationTrace&quot;&gt;printInstantiationTrace&lt;/strong&gt;();</source>
          <target state="translated">final vac&amp;iacute;o &lt;strong id=&quot;printInstantiationTrace&quot;&gt;printInstantiationTrace&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="388bb8e6be03425c50af743ca4c151525e3cbf92" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;remove&quot;&gt;remove&lt;/strong&gt;(Thread t);</source>
          <target state="translated">nulo final &lt;strong id=&quot;remove&quot;&gt;eliminar&lt;/strong&gt; (Hilo t);</target>
        </trans-unit>
        <trans-unit id="1ae85c067a8377c397ebe372446f3f3aaebf3caa" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;resolvePKGunknown&quot;&gt;resolvePKGunknown&lt;/strong&gt;();</source>
          <target state="translated">&lt;strong id=&quot;resolvePKGunknown&quot;&gt;resoluci&amp;oacute;n&lt;/strong&gt; nula final &lt;strong id=&quot;resolvePKGunknown&quot;&gt;PKGunknown&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="2f78c288b3856557a82f7d51bbc8ae6054a6cb15" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;setNoderefOperand&quot;&gt;setNoderefOperand&lt;/strong&gt;();</source>
          <target state="translated">nulo final &lt;strong id=&quot;setNoderefOperand&quot;&gt;setNoderefOperand&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="98c5e48ae807b524235762d693661c61542343ec" translate="yes" xml:space="preserve">
          <source>final void &lt;strong id=&quot;setNoderefOperands&quot;&gt;setNoderefOperands&lt;/strong&gt;();</source>
          <target state="translated">nulo final &lt;strong id=&quot;setNoderefOperands&quot;&gt;setNoderefOperands&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="75e98f6bb86bb9c2b9b4a9553d1eca5098d01aab" translate="yes" xml:space="preserve">
          <source>finalize: all live objects are finalized unconditionally</source>
          <target state="translated">finalizar:todos los objetos vivos se finalizan incondicionalmente</target>
        </trans-unit>
        <trans-unit id="2faff47aeedebbc3dce09006edc0244e5caca9e0" translate="yes" xml:space="preserve">
          <source>find function template root in overload list</source>
          <target state="translated">encontrar la raíz de la plantilla de la función en la lista de sobrecarga</target>
        </trans-unit>
        <trans-unit id="163d8ed08449827df6a1a251df914b272088c5b0" translate="yes" xml:space="preserve">
          <source>finite, nonintegral</source>
          <target state="translated">finito,no integral</target>
        </trans-unit>
        <trans-unit id="2dbe6f3c10b37170135626c4983a634b6c270ef7" translate="yes" xml:space="preserve">
          <source>first block in function</source>
          <target state="translated">primer bloque en función</target>
        </trans-unit>
        <trans-unit id="5eda4c4cde8a20a3e8c9e6104b7654684a063995" translate="yes" xml:space="preserve">
          <source>first elements of each range, in turn, then the second element of each range, and so on, in a round-robin fashion.</source>
          <target state="translated">primero los elementos de cada rango,a su vez,luego el segundo elemento de cada rango,y así sucesivamente,de forma circular.</target>
        </trans-unit>
        <trans-unit id="095e9c416e7a2984e515687201dd7365b32a867f" translate="yes" xml:space="preserve">
          <source>first index</source>
          <target state="translated">primer índice</target>
        </trans-unit>
        <trans-unit id="3a73caf96caaa0152233e755e7c119bd1451bd2f" translate="yes" xml:space="preserve">
          <source>first lambda to be compared</source>
          <target state="translated">el primer lambda en ser comparado</target>
        </trans-unit>
        <trans-unit id="c5c3d3df9e58ec8124c95f39f28b039b9882a7a7" translate="yes" xml:space="preserve">
          <source>first operand</source>
          <target state="translated">primera operando</target>
        </trans-unit>
        <trans-unit id="bfc2f7c5b1293832871a70ec6bdda6d0f0652d92" translate="yes" xml:space="preserve">
          <source>first part of the identifier name.</source>
          <target state="translated">la primera parte del nombre del identificador.</target>
        </trans-unit>
        <trans-unit id="62df7401fd456c952a43dc61f9213770f071ec2b" translate="yes" xml:space="preserve">
          <source>first segment</source>
          <target state="translated">primer segmento</target>
        </trans-unit>
        <trans-unit id="2a045509f56e53dc5a9335f5f59f04a7a0763357" translate="yes" xml:space="preserve">
          <source>first, no error</source>
          <target state="translated">primero,ningún error</target>
        </trans-unit>
        <trans-unit id="d767df26c879e3f6e96197d7a060e4e59c392e04" translate="yes" xml:space="preserve">
          <source>fix &lt;a href=&quot;https://issues.dlang.org/show_bug.cgi?id=12516&quot;&gt;https://issues.dlang.org/show_bug.cgi?id=12516&lt;/a&gt; e.g. by changing this to a truly safe interface.</source>
          <target state="translated">arregle &lt;a href=&quot;https://issues.dlang.org/show_bug.cgi?id=12516&quot;&gt;https://issues.dlang.org/show_bug.cgi?id=12516&lt;/a&gt; por ejemplo, cambiando esto a una interfaz verdaderamente segura.</target>
        </trans-unit>
        <trans-unit id="91b4e427c7048669e94c52f3cfde8b38ebb16a56" translate="yes" xml:space="preserve">
          <source>fixed number of arguments</source>
          <target state="translated">número fijo de argumentos</target>
        </trans-unit>
        <trans-unit id="488ebceaf0f770e616eee894681858eab2dbbc2c" translate="yes" xml:space="preserve">
          <source>fixes the comparison operators &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;gt;=&lt;/code&gt; to return correct results in all circumstances, at a slight cost in efficiency. For example, &lt;code&gt;Checked!(uint, ProperCompare)(1) &amp;gt; -1&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, which is not the case for the built-in comparison. Also, comparing numbers for equality with floating-point numbers only passes if the integral can be converted to the floating-point number precisely, so as to preserve transitivity of equality.</source>
          <target state="translated">correcciones de los operadores de comparaci&amp;oacute;n &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;!=&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;gt;=&lt;/code&gt; para devolver resultados correctos en todas las circunstancias, en un ligero costo de la eficiencia. Por ejemplo, &lt;code&gt;Checked!(uint, ProperCompare)(1) &amp;gt; -1&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; , lo cual no es el caso para la comparaci&amp;oacute;n integrada. Adem&amp;aacute;s, comparar n&amp;uacute;meros de igualdad con n&amp;uacute;meros de coma flotante solo pasa si la integral se puede convertir al n&amp;uacute;mero de coma flotante con precisi&amp;oacute;n, a fin de preservar la transitividad de la igualdad.</target>
        </trans-unit>
        <trans-unit id="668452a5cd7edeb310389ec4faee95eea2ffcbfb" translate="yes" xml:space="preserve">
          <source>flag 1: don't do semantic() because of dummy types 2: don't change types in matchArg()</source>
          <target state="translated">bandera 1:no hacer semántica debido a los tipos falsos 2:no cambiar los tipos en matchArg()</target>
        </trans-unit>
        <trans-unit id="e3f217e51828a30c0c7e515c1673d76f629d50f6" translate="yes" xml:space="preserve">
          <source>flag to specify if the matches should be in the resulting range</source>
          <target state="translated">para especificar si las coincidencias deben estar en el rango resultante</target>
        </trans-unit>
        <trans-unit id="964992a57d111bb0865d708e942f8599f79c480d" translate="yes" xml:space="preserve">
          <source>flag.</source>
          <target state="translated">flag.</target>
        </trans-unit>
        <trans-unit id="c16186badaffeb7e2d350479d5c4fe91fc0be2e1" translate="yes" xml:space="preserve">
          <source>flags</source>
          <target state="translated">flags</target>
        </trans-unit>
        <trans-unit id="ee96859ccc38bc2ae72893a5cc7668e29d5538db" translate="yes" xml:space="preserve">
          <source>flags 0 don't add value signature 1 add value signature</source>
          <target state="translated">banderas 0 no añadir valor firma 1 añadir valor firma</target>
        </trans-unit>
        <trans-unit id="80aae17c830f03ad86af36a1268e9bec17a06da6" translate="yes" xml:space="preserve">
          <source>flags PSxxxx</source>
          <target state="translated">banderas PSxxxx</target>
        </trans-unit>
        <trans-unit id="685e80366130387cb75c055248326976d16fdf8d" translate="yes" xml:space="preserve">
          <source>float</source>
          <target state="translated">float</target>
        </trans-unit>
        <trans-unit id="b9404ee03f45d49f29c2dab8f9f5085310794c77" translate="yes" xml:space="preserve">
          <source>float (32bit - 4x ubyte)</source>
          <target state="translated">flotar (32bit-4x ubyte)</target>
        </trans-unit>
        <trans-unit id="4b0e64afdf49bd86589c4fbeece1d087900cbefd" translate="yes" xml:space="preserve">
          <source>float &lt;code&gt;f&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3f3320fd71e5453646c03bd0aaf389d30a3236" translate="yes" xml:space="preserve">
          <source>float &lt;code&gt;x&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baba59460790299c8ffb17c4e52e3581186dc9e8" translate="yes" xml:space="preserve">
          <source>float double</source>
          <target state="translated">flotar doble</target>
        </trans-unit>
        <trans-unit id="8061829363b9ba1ff31f89f4767b12fc2c7eaf81" translate="yes" xml:space="preserve">
          <source>float, double, real, ifloat, idouble, ireal are returned in ST0.</source>
          <target state="translated">Flota,doble,real,iflota,idoble,ireal son devueltos en ST0.</target>
        </trans-unit>
        <trans-unit id="fe0d54bb26ae8fa26f6f4af78e4ac67431dc9396" translate="yes" xml:space="preserve">
          <source>float4</source>
          <target state="translated">float4</target>
        </trans-unit>
        <trans-unit id="9670b3cbc15e10544ea3c2f0562c6c0ad5913404" translate="yes" xml:space="preserve">
          <source>float8</source>
          <target state="translated">float8</target>
        </trans-unit>
        <trans-unit id="f1c6f2a988096d2f732f80117b66826eddf315b9" translate="yes" xml:space="preserve">
          <source>floating</source>
          <target state="translated">floating</target>
        </trans-unit>
        <trans-unit id="008d70830513afadff734ff7f54267809e699f57" translate="yes" xml:space="preserve">
          <source>floating point</source>
          <target state="translated">punto flotante</target>
        </trans-unit>
        <trans-unit id="88425fb1fa6e69e34e56183bfadc2bbe1b2872b9" translate="yes" xml:space="preserve">
          <source>floating point computations may be done at a higher precision than run time</source>
          <target state="translated">los cálculos de punto flotante pueden hacerse con mayor precisión que el tiempo de ejecución</target>
        </trans-unit>
        <trans-unit id="9be840b003c7ac1629fd6f7f05f532e36efc0487" translate="yes" xml:space="preserve">
          <source>floating point types</source>
          <target state="translated">tipos de punto flotante</target>
        </trans-unit>
        <trans-unit id="7b5312e630e9fa2325bfdd7d2ba9c02645f26dcb" translate="yes" xml:space="preserve">
          <source>floating point value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d46cca77bf31cb32c56aa80530dffe5182de3b7" translate="yes" xml:space="preserve">
          <source>fmod(x, y)</source>
          <target state="translated">fmod(x,y)</target>
        </trans-unit>
        <trans-unit id="47fdd9283ded80c62bb5e40ce65b0e49a48675b3" translate="yes" xml:space="preserve">
          <source>fn</source>
          <target state="translated">fn</target>
        </trans-unit>
        <trans-unit id="a500bf4d2323a6908a95151055b83b9b8ed66288" translate="yes" xml:space="preserve">
          <source>fn must not be null.</source>
          <target state="translated">fn no debe ser nulo.</target>
        </trans-unit>
        <trans-unit id="6cbf68c50f73c84678b2d08307c10e5dc93dd3c4" translate="yes" xml:space="preserve">
          <source>following</source>
          <target state="translated">following</target>
        </trans-unit>
        <trans-unit id="3c93eb748de75e9a9626e578bd29c2cff14d36ac" translate="yes" xml:space="preserve">
          <source>foo!(args) =&amp;gt; name = foo tiargs = args</source>
          <target state="translated">foo! (args) =&amp;gt; nombre = foo tiargs = args</target>
        </trans-unit>
        <trans-unit id="6f7c7c35c975e13052b66b5d28832df1d7b8f352" translate="yes" xml:space="preserve">
          <source>foo.bar!(args)</source>
          <target state="translated">foo.bar!(args)</target>
        </trans-unit>
        <trans-unit id="1795e7af835a75ad0d4d8335d7f392a1d959283c" translate="yes" xml:space="preserve">
          <source>for a nested function 'fd' return the type of the closure of an outer function or aggregate. If the function is a member function the 'this' type is expected to be stored in 'sthis.Sthis'. It is always returned if it is not a void pointer. buildClosure() must have been called on the outer function before.</source>
          <target state="translated">para una función anidada &quot;fd&quot; devuelve el tipo de cierre de una función o agregado exterior.Si la función es una función miembro,se espera que el tipo 'este' se almacene en 'sthis.Sthis'.Siempre se devuelve si no es un puntero de vacío.buildClosure()debe haber sido llamado en la función externa antes.</target>
        </trans-unit>
        <trans-unit id="0fd88d49ef2c786fd316b1654259cb113a50c31f" translate="yes" xml:space="preserve">
          <source>for a program is defined as it being impossible for the program to corrupt memory. Therefore, the safe subset of D consists only of programming language features that are guaranteed to never result in memory corruption. See &lt;a href=&quot;https://dlang.org/safed.html&quot;&gt;this article&lt;/a&gt; for a rationale.</source>
          <target state="translated">para un programa se define como imposible que el programa corrompa la memoria. Por lo tanto, el subconjunto seguro de D consiste solo en caracter&amp;iacute;sticas de lenguaje de programaci&amp;oacute;n que se garantiza que nunca dar&amp;aacute;n lugar a da&amp;ntilde;os en la memoria. Vea &lt;a href=&quot;https://dlang.org/safed.html&quot;&gt;este art&amp;iacute;culo&lt;/a&gt; para una justificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a580012ae45ac5731fef3cceadbbe252fb2b57d1" translate="yes" xml:space="preserve">
          <source>for an array is &lt;code&gt;void&lt;/code&gt;. What it means is that no initialization is done, i.e. the contents of the array will be undefined. This is most useful as an efficiency optimization. Void initializations are an advanced technique and should only be used when profiling indicates that it matters.</source>
          <target state="translated">para una matriz es &lt;code&gt;void&lt;/code&gt; . Lo que significa es que no se realiza la inicializaci&amp;oacute;n, es decir, el contenido de la matriz ser&amp;aacute; indefinido. Esto es m&amp;aacute;s &amp;uacute;til como una optimizaci&amp;oacute;n de eficiencia. Las inicializaciones nulas son una t&amp;eacute;cnica avanzada y solo deben usarse cuando la creaci&amp;oacute;n de perfiles indica que es importante.</target>
        </trans-unit>
        <trans-unit id="cbe0c71a6a7408e2289f21aa5e138b4732dfc638" translate="yes" xml:space="preserve">
          <source>for deprecations</source>
          <target state="translated">para las deprecaciones</target>
        </trans-unit>
        <trans-unit id="fe8e1f9d82f741b398a9509a32e501a5281f1114" translate="yes" xml:space="preserve">
          <source>for diagnostics, e.g. 'int foo(int x, int y) pure'</source>
          <target state="translated">para el diagnóstico,por ejemplo,&quot;int foo(int x,int y)pureza</target>
        </trans-unit>
        <trans-unit id="1425fb571db638cd803222c312b39c65516d4b7a" translate="yes" xml:space="preserve">
          <source>for each index in this array, there's a linked list with textual information in the format &quot;name: value&quot;</source>
          <target state="translated">para cada índice de esta matriz,hay una lista enlazada con información textual en el formato &quot;nombre:valor&quot;</target>
        </trans-unit>
        <trans-unit id="5c89da61be0af42e286b491a1fa483e93efea0df" translate="yes" xml:space="preserve">
          <source>for error message</source>
          <target state="translated">para el mensaje de error</target>
        </trans-unit>
        <trans-unit id="e8d0a49ecc65634292d303910b26260a71c9f14e" translate="yes" xml:space="preserve">
          <source>for errors</source>
          <target state="translated">para los errores</target>
        </trans-unit>
        <trans-unit id="e0508d44543014c0a786671aeae84f930a8d350a" translate="yes" xml:space="preserve">
          <source>for gagged errors</source>
          <target state="translated">para los errores amordazados</target>
        </trans-unit>
        <trans-unit id="ede92b768e6b3a58e5a2ae9d4814c48f6387509f" translate="yes" xml:space="preserve">
          <source>for initializing zalloc, zfree, opaque (extern(D) for mangling)</source>
          <target state="translated">para inicializar el zalloc,zfree,opaco (externo(D)para el mangle)</target>
        </trans-unit>
        <trans-unit id="8d033e971d8b3a8fee4fb9ad863a340f11bbbdd6" translate="yes" xml:space="preserve">
          <source>for iteration over code points and functions from &lt;a href=&quot;https://dlang.org/phobos/std_uni.html&quot;&gt;std.uni&lt;/a&gt;.</source>
          <target state="translated">para iteraci&amp;oacute;n sobre puntos de c&amp;oacute;digo y funciones de &lt;a href=&quot;https://dlang.org/phobos/std_uni.html&quot;&gt;std.uni&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2541a45c1a81e8e7f46edbdae2d444f0c7462ba6" translate="yes" xml:space="preserve">
          <source>for member functions, index into vtbl[]</source>
          <target state="translated">para las funciones de los miembros,indexar en vtbl[]</target>
        </trans-unit>
        <trans-unit id="a57679609f0c41e7bed73bf5e8bdbd7079143469" translate="yes" xml:space="preserve">
          <source>for powmod</source>
          <target state="translated">para Powmod</target>
        </trans-unit>
        <trans-unit id="82b5225d403b9636487c6f96a4fabf8ac04d5dc0" translate="yes" xml:space="preserve">
          <source>for read perhaps</source>
          <target state="translated">para leer tal vez</target>
        </trans-unit>
        <trans-unit id="09a24b8fb83595efb35511b2f001d4a2fb5751a2" translate="yes" xml:space="preserve">
          <source>for recursive expansion detection</source>
          <target state="translated">para la detección de expansión recursiva</target>
        </trans-unit>
        <trans-unit id="9929a33b941ada3f80d438f92c0d7cc69c2b46c6" translate="yes" xml:space="preserve">
          <source>for static links see &lt;a href=&quot;https://en.wikipedia.org/wiki/Call_stack#Functions_of_the_call_stack&quot;&gt;https://en.wikipedia.org/wiki/Call_stack#Functions_of_the_call_stack&lt;/a&gt;</source>
          <target state="translated">para enlaces est&amp;aacute;ticos ver &lt;a href=&quot;https://en.wikipedia.org/wiki/Call_stack#Functions_of_the_call_stack&quot;&gt;https://en.wikipedia.org/wiki/Call_stack#Functions_of_the_call_stack&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="042959d6f07d32f4b78d55148276b9b7a7f27639" translate="yes" xml:space="preserve">
          <source>for tip messages</source>
          <target state="translated">para los mensajes de consejos</target>
        </trans-unit>
        <trans-unit id="da0e9282f30338ee492d7cb69a7341b97bb816f3" translate="yes" xml:space="preserve">
          <source>for warnings</source>
          <target state="translated">para las advertencias</target>
        </trans-unit>
        <trans-unit id="6e6d21d9f8305ef1eccb13decc6ac107420ae1d5" translate="yes" xml:space="preserve">
          <source>for which &lt;code&gt;TargetOS&lt;/code&gt; the flags are applicable</source>
          <target state="translated">para qu&amp;eacute; &lt;code&gt;TargetOS&lt;/code&gt; son aplicables las banderas</target>
        </trans-unit>
        <trans-unit id="f434754c1d256e4074ff4fa94c9545f308a58461" translate="yes" xml:space="preserve">
          <source>for write perhaps</source>
          <target state="translated">para escribir tal vez</target>
        </trans-unit>
        <trans-unit id="d1293c58a4adeb082065ba06181a62aef79f04b6" translate="yes" xml:space="preserve">
          <source>forbid construction from infinite range</source>
          <target state="translated">prohibir la construcción de un rango infinito</target>
        </trans-unit>
        <trans-unit id="18f23e3f0af3fd4850774d0bd64bb51a0d0c37cd" translate="yes" xml:space="preserve">
          <source>foreach opApply over all key/value pairs</source>
          <target state="translated">para cada uno de los pares clave/valor.</target>
        </trans-unit>
        <trans-unit id="62ec2299684e572c5775cd927ca8798b0caa2715" translate="yes" xml:space="preserve">
          <source>foreach opApply over all values</source>
          <target state="translated">ante cada uno de los valores</target>
        </trans-unit>
        <trans-unit id="5f9f11a318984c3a1db8f3d5fd0b43e076de8e21" translate="yes" xml:space="preserve">
          <source>format specifications</source>
          <target state="translated">especificaciones de formato</target>
        </trans-unit>
        <trans-unit id="24fc30325ed20ccf5b564b39ab6635b559fe5b4f" translate="yes" xml:space="preserve">
          <source>format string arguments</source>
          <target state="translated">formato argumentos de cadena</target>
        </trans-unit>
        <trans-unit id="9972e571f2d602999f223d6f11f31e4c56f5be70" translate="yes" xml:space="preserve">
          <source>format string as described in &lt;a href=&quot;std_format#formattedWrite&quot;&gt;&lt;code&gt;std.format.formattedWrite&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">formatee la cadena como se describe en &lt;a href=&quot;std_format#formattedWrite&quot;&gt; &lt;code&gt;std.format.formattedWrite&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9332213a2f41ea52e8325b77072e53956ab48d05" translate="yes" xml:space="preserve">
          <source>format string for error</source>
          <target state="translated">cadena de formato para el error</target>
        </trans-unit>
        <trans-unit id="77c3e90e2d41d4dabd36c42ed9653f092c93572d" translate="yes" xml:space="preserve">
          <source>format string for supplemental message</source>
          <target state="translated">cadena de formato para el mensaje suplementario</target>
        </trans-unit>
        <trans-unit id="f5cfd3cb2d90cc21cefa00f37a52261bc49d0d96" translate="yes" xml:space="preserve">
          <source>format string for the deprecation</source>
          <target state="translated">cadena de formato para la depreciación</target>
        </trans-unit>
        <trans-unit id="84a93c251f023a5285107885fc60a73c8b7d4f59" translate="yes" xml:space="preserve">
          <source>format string for warning</source>
          <target state="translated">cadena de formato para la advertencia</target>
        </trans-unit>
        <trans-unit id="18c01c8b98bdb2c62fdfac8907bc1509f7c5ef55" translate="yes" xml:space="preserve">
          <source>format string to generate replacements from, see &lt;a href=&quot;#Replace%20format%20string&quot;&gt;the format string&lt;/a&gt;.</source>
          <target state="translated">Cadena de formato para generar sustituciones de, ver &lt;a href=&quot;#Replace%20format%20string&quot;&gt;la cadena de formato&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7876d8c9b8b6f4add08c1efeb2654da3ba55d0ef" translate="yes" xml:space="preserve">
          <source>formatted string or &lt;code&gt;null&lt;/code&gt; if the expressions were &lt;code&gt;null&lt;/code&gt;, or if the instantiated expression is not based on the original one</source>
          <target state="translated">cadena formateada o &lt;code&gt;null&lt;/code&gt; si las expresiones eran &lt;code&gt;null&lt;/code&gt; , o si la expresi&amp;oacute;n instanciada no se basa en la original</target>
        </trans-unit>
        <trans-unit id="14575ebbd16c3a7cdb6c9f81a1451455537ff286" translate="yes" xml:space="preserve">
          <source>formed from the upper and lower bounds, which must statically evaluate to integral constants. It is an error if those bounds are out of range.</source>
          <target state="translated">formado por los límites superior e inferior,que deben evaluarse estáticamente a constantes integrales.Es un error si esos límites están fuera de rango.</target>
        </trans-unit>
        <trans-unit id="ed393b19ce7451be033621906ef6a97fc75b0a2d" translate="yes" xml:space="preserve">
          <source>forward range</source>
          <target state="translated">rango de avance</target>
        </trans-unit>
        <trans-unit id="2c65f329feb33b297cbb0138b9f7432af2e83764" translate="yes" xml:space="preserve">
          <source>forward range of import paths found in &lt;code&gt;iniFile&lt;/code&gt;</source>
          <target state="translated">rango directo de rutas de importaci&amp;oacute;n encontradas en &lt;code&gt;iniFile&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de21c20e12a91fda6d2bd892e15ea7b925b8dfd8" translate="yes" xml:space="preserve">
          <source>forward range or list of individual values whose elements correspond to the probabilities with which to choose the corresponding index value</source>
          <target state="translated">rango de avance o lista de valores individuales cuyos elementos corresponden a las probabilidades con las que se puede elegir el valor de índice correspondiente</target>
        </trans-unit>
        <trans-unit id="b0758163467b8528bd244a7a4c07e709409daf13" translate="yes" xml:space="preserve">
          <source>forward ranges are file/socket ranges; copying such a range will not save the position in the stream, and they most likely reuse an internal buffer as the entire stream does not sit in memory. Subsequently, advancing either the original or the copy will advance the stream, so the copies are not independent.</source>
          <target state="translated">Los rangos de avance son rangos de archivos/bocinas;al copiarlos no se guardará la posición en la corriente,y lo más probable es que reutilicen un búfer interno,ya que la corriente entera no se almacena en la memoria.Posteriormente,el avance del original o de la copia hará avanzar la corriente,por lo que las copias no son independientes.</target>
        </trans-unit>
        <trans-unit id="00ad007127d59043ea8dc9ff33c31b7c5d775cf9" translate="yes" xml:space="preserve">
          <source>frame pointer</source>
          <target state="translated">puntero del cuadro</target>
        </trans-unit>
        <trans-unit id="d11ade75c0d7abd378d993fe68b8ebb261a1288b" translate="yes" xml:space="preserve">
          <source>free a previously built curl_slist.</source>
          <target state="translated">liberar una lista de rizos previamente construida.</target>
        </trans-unit>
        <trans-unit id="67c81f1ac3901bb1a038fcbcab6c832c3827caee" translate="yes" xml:space="preserve">
          <source>frexp</source>
          <target state="translated">frexp</target>
        </trans-unit>
        <trans-unit id="0b1e95cfd9775191a7224d0a218ae79187e80c1d" translate="yes" xml:space="preserve">
          <source>from</source>
          <target state="translated">from</target>
        </trans-unit>
        <trans-unit id="1cc3d13fcc072df9ffa96b02cb69d42b7bf09207" translate="yes" xml:space="preserve">
          <source>from which the type can be inferred, the type on the declaration can be omitted.</source>
          <target state="translated">del que se puede deducir el tipo,el tipo en la declaración puede ser omitido.</target>
        </trans-unit>
        <trans-unit id="33227a98cfbe13f8ccb4c0e9c323149838d911bc" translate="yes" xml:space="preserve">
          <source>from/to</source>
          <target state="translated">from/to</target>
        </trans-unit>
        <trans-unit id="44969ebd6572854d6eef5ca7ab2ab7ff4713d4ae" translate="yes" xml:space="preserve">
          <source>front end &lt;code&gt;Type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; frontal</target>
        </trans-unit>
        <trans-unit id="bd46432ace62062b8638393ec93db89ec255c07d" translate="yes" xml:space="preserve">
          <source>fsincos</source>
          <target state="translated">fsincos</target>
        </trans-unit>
        <trans-unit id="52e6d8ab88471af82da12a0eae7aab01357e3881" translate="yes" xml:space="preserve">
          <source>full</source>
          <target state="translated">full</target>
        </trans-unit>
        <trans-unit id="d50122ce04d43ee876c01343d4e20d8e1ae5105c" translate="yes" xml:space="preserve">
          <source>full path to the executable of the found compiler, &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">ruta completa al ejecutable del compilador encontrado, &lt;code&gt;null&lt;/code&gt; contrario.</target>
        </trans-unit>
        <trans-unit id="4d0365afa40501166ab3ccc6d7eff679e8617c7d" translate="yes" xml:space="preserve">
          <source>full path to the found &lt;code&gt;dmd.conf&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">ruta completa al &lt;code&gt;dmd.conf&lt;/code&gt; encontrado , &lt;code&gt;null&lt;/code&gt; contrario.</target>
        </trans-unit>
        <trans-unit id="79d35c9c5e14fc0d57e8aa65022cd87b6d5500e0" translate="yes" xml:space="preserve">
          <source>full path to the found &lt;code&gt;ldc2.conf&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">ruta completa al &lt;code&gt;ldc2.conf&lt;/code&gt; encontrado , &lt;code&gt;null&lt;/code&gt; contrario.</target>
        </trans-unit>
        <trans-unit id="0ca62526153e7414c13dbbb69061c644ad803896" translate="yes" xml:space="preserve">
          <source>fullexpr</source>
          <target state="translated">fullexpr</target>
        </trans-unit>
        <trans-unit id="c84c50d5a767a23bda0ea5ca348fed54c6db9aab" translate="yes" xml:space="preserve">
          <source>fun</source>
          <target state="translated">fun</target>
        </trans-unit>
        <trans-unit id="99fdb3623cf5c6ad0283ca5c096018dd2f2ff5ad" translate="yes" xml:space="preserve">
          <source>func</source>
          <target state="translated">func</target>
        </trans-unit>
        <trans-unit id="2ad78d27196cd4f92c26793756ee0a8d26aa1d1c" translate="yes" xml:space="preserve">
          <source>func must be logically pure. Ideally, func would be a function pointer to a pure function, but forcing func to be pure is far too restrictive to be useful, and in order to have the ease of use of having functions which generate functions to pass to &lt;code&gt;fwdRange&lt;/code&gt;, func must be a delegate.</source>
          <target state="translated">La funci&amp;oacute;n debe ser l&amp;oacute;gicamente pura. Idealmente, func ser&amp;iacute;a un puntero de funci&amp;oacute;n a una funci&amp;oacute;n pura, pero forzar a func a ser puro es demasiado restrictivo para ser &amp;uacute;til, y para tener la facilidad de uso de tener funciones que generan funciones para pasar a &lt;code&gt;fwdRange&lt;/code&gt; , func debe ser un delegado</target>
        </trans-unit>
        <trans-unit id="bf11b151a4ca5c9d7ef83841ff7c81ef4edb6f9d" translate="yes" xml:space="preserve">
          <source>func.d</source>
          <target state="translated">func.d</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="051836ff39c149abff72ecd0326f8e344a2d0d0a" translate="yes" xml:space="preserve">
          <source>function (an example would be assigning</source>
          <target state="translated">(un ejemplo sería la asignación de</target>
        </trans-unit>
        <trans-unit id="a37bcb5b4c55677d18db1e6ffcb07b121afb51f0" translate="yes" xml:space="preserve">
          <source>function being called, &lt;code&gt;null&lt;/code&gt; if called indirectly</source>
          <target state="translated">funci&amp;oacute;n que se llama, &lt;code&gt;null&lt;/code&gt; si se llama indirectamente</target>
        </trans-unit>
        <trans-unit id="b253208daf852a872797f9a920520b2b2ad5e736" translate="yes" xml:space="preserve">
          <source>function body</source>
          <target state="translated">cuerpo de la función</target>
        </trans-unit>
        <trans-unit id="0978c9027bbc10b55e9ef1497177bd2a561509ad" translate="yes" xml:space="preserve">
          <source>function parameter (&lt;code&gt;this&lt;/code&gt; if null)</source>
          <target state="translated">par&amp;aacute;metro de funci&amp;oacute;n ( &lt;code&gt;this&lt;/code&gt; si es nulo)</target>
        </trans-unit>
        <trans-unit id="7879b302809eab2a7db9d1c88a81b675e9dc1b5a" translate="yes" xml:space="preserve">
          <source>function pointer</source>
          <target state="translated">puntero de la función</target>
        </trans-unit>
        <trans-unit id="12a38b25a790317d896cfbc55c54431575fae7f5" translate="yes" xml:space="preserve">
          <source>function pointer to process the iterated symbol. If it returns nonzero, the iteration will be aborted.</source>
          <target state="translated">para procesar el símbolo iterado.Si devuelve un valor distinto de cero,la iteración se abortará.</target>
        </trans-unit>
        <trans-unit id="fc264d2ca230411d10ff0e159662a9fe3770eb9c" translate="yes" xml:space="preserve">
          <source>function pointer type.</source>
          <target state="translated">tipo de puntero de función.</target>
        </trans-unit>
        <trans-unit id="bea2c1aca1e4fddca62bcfb93cb9f3c174aca38c" translate="yes" xml:space="preserve">
          <source>function symbol</source>
          <target state="translated">símbolo de función</target>
        </trans-unit>
        <trans-unit id="2d61f25823d2e537dde2a694228ad678242500ab" translate="yes" xml:space="preserve">
          <source>function symbol if found, null if not</source>
          <target state="translated">símbolo de función si se encuentra,nulo si no</target>
        </trans-unit>
        <trans-unit id="e80c66779939e79c32b629bab14f74809cf4186b" translate="yes" xml:space="preserve">
          <source>function symbol or type of function, delegate, or pointer to function</source>
          <target state="translated">símbolo de la función o tipo de función,delegar o apuntar a la función</target>
        </trans-unit>
        <trans-unit id="e466cb91fe1337c84737b06dbaada00a7eb6cd88" translate="yes" xml:space="preserve">
          <source>function that does the in contract</source>
          <target state="translated">función que hace el en contrato</target>
        </trans-unit>
        <trans-unit id="178f2366a1b4a49bd9b25f323539cc0d68aa975d" translate="yes" xml:space="preserve">
          <source>function that does the out contract</source>
          <target state="translated">función que hace el contrato de salida</target>
        </trans-unit>
        <trans-unit id="89fc59d1c3a23922e15627153f946c1fd765a0a6" translate="yes" xml:space="preserve">
          <source>function that statement s is in</source>
          <target state="translated">función que la declaración s está en</target>
        </trans-unit>
        <trans-unit id="1b8564953a98bc5a131b0311a7b14a776ee97f63" translate="yes" xml:space="preserve">
          <source>function to apply to each element of the range</source>
          <target state="translated">función que se aplica a cada elemento de la gama</target>
        </trans-unit>
        <trans-unit id="65c93ac468fc3e0ede92a3386e0f6e5ed0081472" translate="yes" xml:space="preserve">
          <source>function to determine cost of</source>
          <target state="translated">para determinar el costo de</target>
        </trans-unit>
        <trans-unit id="a5031c567ee0625e01e7f4c9bf97f12e6c37ad80" translate="yes" xml:space="preserve">
          <source>function to instantiate the implementation</source>
          <target state="translated">función de instanciación de la aplicación</target>
        </trans-unit>
        <trans-unit id="c7cf01da5786cd508d7803288d2b3fe6e0cebc68" translate="yes" xml:space="preserve">
          <source>function to pass the names to</source>
          <target state="translated">función para pasar los nombres a</target>
        </trans-unit>
        <trans-unit id="162e25918f92cbfbb57939667991651f0c883645" translate="yes" xml:space="preserve">
          <source>function type to check</source>
          <target state="translated">tipo de función para comprobar</target>
        </trans-unit>
        <trans-unit id="99ee479f04d4b113139849ff7ec402267f6495bc" translate="yes" xml:space="preserve">
          <source>function's identifier</source>
          <target state="translated">identificador de la función</target>
        </trans-unit>
        <trans-unit id="9c8753a4072439de1eaaeb923a5d665149eac889" translate="yes" xml:space="preserve">
          <source>function's type</source>
          <target state="translated">tipo de función</target>
        </trans-unit>
        <trans-unit id="0d1f0492c1abb95c2a37fdef9d2066720196baea" translate="yes" xml:space="preserve">
          <source>function(</source>
          <target state="translated">function(</target>
        </trans-unit>
        <trans-unit id="5a4adf2ceba9d1693a9310d3e37665a70d537777" translate="yes" xml:space="preserve">
          <source>function. If the</source>
          <target state="translated">función.Si la</target>
        </trans-unit>
        <trans-unit id="d27536ee0ad2e623a4599a46b23b8fe9e20d79e2" translate="yes" xml:space="preserve">
          <source>functions in this document. Note that a strongly pure function may still have behavior inconsistent with memoization by e.g. using &lt;code&gt;cast&lt;/code&gt;s or by changing behavior depending on the address of its parameters. An implementation is currently not required to enforce validity of memoization in all cases.</source>
          <target state="translated">funciones en este documento. Tenga en cuenta que una funci&amp;oacute;n fuertemente pura a&amp;uacute;n puede tener un comportamiento inconsistente con la memorizaci&amp;oacute;n, por ejemplo, utilizando &lt;code&gt;cast&lt;/code&gt; s o cambiando el comportamiento dependiendo de la direcci&amp;oacute;n de sus par&amp;aacute;metros. Actualmente no se requiere una implementaci&amp;oacute;n para hacer cumplir la validez de la memorizaci&amp;oacute;n en todos los casos.</target>
        </trans-unit>
        <trans-unit id="9aa5f970c0d597ebeb3af394db1fc71b67390fc4" translate="yes" xml:space="preserve">
          <source>functions this function overrides</source>
          <target state="translated">funciones que esta función anula</target>
        </trans-unit>
        <trans-unit id="54fd1711209fb1c0781092374132c66e79e2241b" translate="yes" xml:space="preserve">
          <source>g</source>
          <target state="translated">g</target>
        </trans-unit>
        <trans-unit id="e2974f7b5030599c933505bf2f022e92f7037434" translate="yes" xml:space="preserve">
          <source>g++ and clang++ differ in how empty structs are handled. Both return &lt;code&gt;1&lt;/code&gt; from &lt;code&gt;sizeof&lt;/code&gt;, however, clang++ does not push them onto the parameter stack while g++ does. This is a binary incompatibility between g++ and clang++. dmd follows clang++ behavior for OSX and FreeBSD, and g++ behavior for Linux and other Posix platforms.</source>
          <target state="translated">g ++ y clang ++ difieren en c&amp;oacute;mo se manejan las estructuras vac&amp;iacute;as. Ambos devuelven &lt;code&gt;1&lt;/code&gt; de &lt;code&gt;sizeof&lt;/code&gt; , sin embargo, clang ++ no los empuja a la pila de par&amp;aacute;metros mientras que g ++ s&amp;iacute;. Esta es una incompatibilidad binaria entre g ++ y clang ++. dmd sigue el comportamiento clang ++ para OSX y FreeBSD, y el comportamiento g ++ para Linux y otras plataformas Posix.</target>
        </trans-unit>
        <trans-unit id="a19f20245c0451e11ddb339866e33d9e0e63b244" translate="yes" xml:space="preserve">
          <source>gammaIncomplete = ( &lt;em&gt;&amp;int;&lt;sub&gt;&lt;small&gt;0&lt;/small&gt;&lt;/sub&gt;&lt;sup&gt;x&lt;/sup&gt;&lt;/em&gt; e&lt;sup&gt;-t&lt;/sup&gt; t&lt;sup&gt;a-1&lt;/sup&gt; dt )/ &amp;Gamma;(a)</source>
          <target state="translated">gammaIncomplete = ( &lt;em&gt;&amp;int; &lt;sub&gt;&lt;small&gt;0&lt;/small&gt;&lt;/sub&gt;&lt;sup&gt; x&lt;/sup&gt;&lt;/em&gt; e &lt;sup&gt;-t&lt;/sup&gt; t &lt;sup&gt;a-1&lt;/sup&gt; dt) / &amp;Gamma; (a)</target>
        </trans-unit>
        <trans-unit id="6f8210298bb7359bec883b013abed779bbc45a0d" translate="yes" xml:space="preserve">
          <source>gammaIncompleteCompl( a, x ) = p.</source>
          <target state="translated">gammaIncompleteCompl(a,x)=p.</target>
        </trans-unit>
        <trans-unit id="f145d7d440f488260c11374669faf4618fbaf14a" translate="yes" xml:space="preserve">
          <source>gammaIncompleteCompl(a,x) = 1 - gammaIncomplete(a,x) = (&lt;em&gt;&amp;int;&lt;sub&gt;&lt;small&gt;x&lt;/small&gt;&lt;/sub&gt;&lt;sup&gt;&amp;infin;&lt;/sup&gt;&lt;/em&gt; e&lt;sup&gt;-t&lt;/sup&gt; t&lt;sup&gt;a-1&lt;/sup&gt; dt )/ &amp;Gamma;(a)</source>
          <target state="translated">gammaIncompleteCompl (a, x) = 1 - gammaIncomplete (a, x) = ( &lt;em&gt;&amp;int; &lt;sub&gt;&lt;small&gt;x&lt;/small&gt;&lt;/sub&gt;&lt;sup&gt; &amp;infin;&lt;/sup&gt;&lt;/em&gt; e &lt;sup&gt;-t&lt;/sup&gt; t &lt;sup&gt;a-1&lt;/sup&gt; dt) / &amp;Gamma; (a)</target>
        </trans-unit>
        <trans-unit id="e467943ace0a158538b958eeb88a80a8e8bb4b36" translate="yes" xml:space="preserve">
          <source>gc:conservative|precise|manual - select gc implementation (default = conservative)</source>
          <target state="translated">gc:conservador|preciso|manual-seleccione la implementación de gc (por defecto=conservador)</target>
        </trans-unit>
        <trans-unit id="40d569fd2b1cc15e90f26c1eb7d337b0536eda61" translate="yes" xml:space="preserve">
          <source>gcc asm statement being parsed</source>
          <target state="translated">declaración del gcc asm siendo analizada</target>
        </trans-unit>
        <trans-unit id="d7799897542e9ab068fb8980b4be6e21d652f9b5" translate="yes" xml:space="preserve">
          <source>generate an error if it throws</source>
          <target state="translated">generar un error si lanza</target>
        </trans-unit>
        <trans-unit id="4f8ee36c565b07622da736046a51794785b9701f" translate="yes" xml:space="preserve">
          <source>generate clickable link on argument</source>
          <target state="translated">generar un enlace clicable en el argumento</target>
        </trans-unit>
        <trans-unit id="8c4a98abc2dd6755a623c02f4b3a47e898e0fae5" translate="yes" xml:space="preserve">
          <source>generate clickable link, first arg is address</source>
          <target state="translated">generar un enlace clicable,el primer arg es la dirección</target>
        </trans-unit>
        <trans-unit id="54ea345e6872c6fc73de8677f84c2aea081590cc" translate="yes" xml:space="preserve">
          <source>generated &lt;code&gt;opAssign&lt;/code&gt; function</source>
          <target state="translated">funci&amp;oacute;n &lt;code&gt;opAssign&lt;/code&gt; generada</target>
        </trans-unit>
        <trans-unit id="8ce6c57dc1bff4c699ecbd3916b989cadce134f3" translate="yes" xml:space="preserve">
          <source>generated call</source>
          <target state="translated">llamada generada</target>
        </trans-unit>
        <trans-unit id="1d4de32437a7b9b4359f29702baa54810a488455" translate="yes" xml:space="preserve">
          <source>generated elem</source>
          <target state="translated">elem generado</target>
        </trans-unit>
        <trans-unit id="b161de4a54c1b683ccef3d027a7308a62568b894" translate="yes" xml:space="preserve">
          <source>generated elem tree</source>
          <target state="translated">árbol de elem generados</target>
        </trans-unit>
        <trans-unit id="87fa760353338cbfe8a4add32e79978225be0b5d" translate="yes" xml:space="preserve">
          <source>generated function, null if none needed</source>
          <target state="translated">función generada,nula si no se necesita</target>
        </trans-unit>
        <trans-unit id="ffa121f6801a3db88dc5aad9f29af630d8933baa" translate="yes" xml:space="preserve">
          <source>generated instruction</source>
          <target state="translated">generó la instrucción</target>
        </trans-unit>
        <trans-unit id="d32329aa772cf41411f9e272ff315904b688fcc9" translate="yes" xml:space="preserve">
          <source>generated list</source>
          <target state="translated">lista generada</target>
        </trans-unit>
        <trans-unit id="aca0dba3bd3a4a0b8e5aa13bf952e16abd6a2817" translate="yes" xml:space="preserve">
          <source>get a druntime config option using standard configuration options opt name of the option to retrieve dg if non-null, passes the option through this delegate and only returns its return value if non-null reverse reverse the default processing order cmdline/envvar/rt_options to allow overwriting settings in the delegate with values from higher priority</source>
          <target state="translated">obtener una opción de configuración de druntime usando opciones de configuración estándar optar nombre de la opción para recuperar la dg si no es nula,pasa la opción a través de este delegado y sólo devuelve su valor de retorno si no es nula invertir el orden de procesamiento predeterminado cmdline/envvar/rt_options para permitir la sobreescritura de los ajustes en el delegado con valores de mayor prioridad</target>
        </trans-unit>
        <trans-unit id="a9f75241aeabfeb4c44053eba18ca829dd66b6b1" translate="yes" xml:space="preserve">
          <source>get an array of size_t values that indicate possible pointer words in memory if interpreted as the type given as argument</source>
          <target state="translated">obtener una matriz de valores size_t que indican posibles palabras de puntero en la memoria si se interpretan como el tipo dado como argumento</target>
        </trans-unit>
        <trans-unit id="7a5629011a71dffc69a33343e21959437d607cbb" translate="yes" xml:space="preserve">
          <source>get the allocation size of the array for the given block (without padding or type info)</source>
          <target state="translated">obtener el tamaño de la asignación de la matriz para el bloque dado (sin relleno o información de tipo)</target>
        </trans-unit>
        <trans-unit id="76fbf378384d2546a51a080841c846140712ca1a" translate="yes" xml:space="preserve">
          <source>get the padding required to allocate size bytes. Note that the padding is NOT included in the passed in size. Therefore, do NOT call this function with the size of an allocated block.</source>
          <target state="translated">obtener el relleno necesario para asignar los bytes de tamaño.Tenga en cuenta que el relleno NO está incluido en el tamaño aprobado.Por lo tanto,NO llame a esta función con el tamaño de un bloque asignado.</target>
        </trans-unit>
        <trans-unit id="00a9015d0d5dcd84262dd84e2980eebbc125a8c9" translate="yes" xml:space="preserve">
          <source>get the start of the array for the given block</source>
          <target state="translated">...para comenzar la matriz para el bloque dado...</target>
        </trans-unit>
        <trans-unit id="8c0788029ed0a42c58756e222fa15228c55a5110" translate="yes" xml:space="preserve">
          <source>getAliasThis</source>
          <target state="translated">getAliasThis</target>
        </trans-unit>
        <trans-unit id="57cde0199bf01965136f006158f9b178b35223bb" translate="yes" xml:space="preserve">
          <source>getAttributes</source>
          <target state="translated">getAttributes</target>
        </trans-unit>
        <trans-unit id="2cb2679aad7c94a8532ef0565707640e46247549" translate="yes" xml:space="preserve">
          <source>getAttributes with a directory</source>
          <target state="translated">getAttributes con un directorio</target>
        </trans-unit>
        <trans-unit id="8f34a78129c738a31d301e3f164c6c24199486c4" translate="yes" xml:space="preserve">
          <source>getAttributes with a file</source>
          <target state="translated">getAttributes con un archivo</target>
        </trans-unit>
        <trans-unit id="9d6b7d6cc0f8b3bee0663c6f764f214393d2ac2c" translate="yes" xml:space="preserve">
          <source>getCppNamespaces</source>
          <target state="translated">getCppNamespaces</target>
        </trans-unit>
        <trans-unit id="bb67791975b7d4aedf9a13cfb9a8574c3120e547" translate="yes" xml:space="preserve">
          <source>getEthis() and NewExp::toElem need to use sclosure, if set, rather than the current frame pointer.</source>
          <target state="translated">getEthis()y NewExp::toElem necesitan usar sclosure,si está configurado,en lugar del actual puntero de cuadro.</target>
        </trans-unit>
        <trans-unit id="2b791cf8ff72212c4ca7b956391343969b151298" translate="yes" xml:space="preserve">
          <source>getFunctionAttributes</source>
          <target state="translated">getFunctionAttributes</target>
        </trans-unit>
        <trans-unit id="da38eb3ad1f961c080ab4aedc80a308d45a2793e" translate="yes" xml:space="preserve">
          <source>getFunctionVariadicStyle</source>
          <target state="translated">getFunctionVariadicStyle</target>
        </trans-unit>
        <trans-unit id="0ee7849f2a093148f7be761d5a6c9c92d7393e6b" translate="yes" xml:space="preserve">
          <source>getLinkage</source>
          <target state="translated">getLinkage</target>
        </trans-unit>
        <trans-unit id="99c1500da691cfa21d96bfad67e3c848175d4ae9" translate="yes" xml:space="preserve">
          <source>getLocation</source>
          <target state="translated">getLocation</target>
        </trans-unit>
        <trans-unit id="0a0143d1ba7f724c4fbea58aafe9cf99d8817eec" translate="yes" xml:space="preserve">
          <source>getMember</source>
          <target state="translated">getMember</target>
        </trans-unit>
        <trans-unit id="75eca269fbb560a69d5e9f3f925eb51124bf2f0c" translate="yes" xml:space="preserve">
          <source>getOverloads</source>
          <target state="translated">getOverloads</target>
        </trans-unit>
        <trans-unit id="aac82e8a683739ba31f956c598df6a58f9bfb982" translate="yes" xml:space="preserve">
          <source>getParameterStorageClasses</source>
          <target state="translated">getParameterStorageClasses</target>
        </trans-unit>
        <trans-unit id="414f1f666ac4a5052c2698c452ec1de5ce21fe39" translate="yes" xml:space="preserve">
          <source>getPointerBitmap</source>
          <target state="translated">getPointerBitmap</target>
        </trans-unit>
        <trans-unit id="a44985cb19a863e66d2140631bba21af8ab74a2b" translate="yes" xml:space="preserve">
          <source>getProtection</source>
          <target state="translated">getProtection</target>
        </trans-unit>
        <trans-unit id="13bc4cbd31506f43e1bd250b2d1e68650c8a90f6" translate="yes" xml:space="preserve">
          <source>getTargetInfo</source>
          <target state="translated">getTargetInfo</target>
        </trans-unit>
        <trans-unit id="9a192290db95a97d2c642f67ea67a248f29cbed2" translate="yes" xml:space="preserve">
          <source>getUnitTests</source>
          <target state="translated">getUnitTests</target>
        </trans-unit>
        <trans-unit id="cb83594617998531fae6dd932b5ec2d2bfa3eca2" translate="yes" xml:space="preserve">
          <source>getVirtualFunctions</source>
          <target state="translated">getVirtualFunctions</target>
        </trans-unit>
        <trans-unit id="3076b9c651c82054316d6460c6e0f6a069cbf536" translate="yes" xml:space="preserve">
          <source>getVirtualIndex</source>
          <target state="translated">getVirtualIndex</target>
        </trans-unit>
        <trans-unit id="24ddf2f2e28c0bae4968db35bba8f143d404783c" translate="yes" xml:space="preserve">
          <source>getVirtualMethods</source>
          <target state="translated">getVirtualMethods</target>
        </trans-unit>
        <trans-unit id="e77be57c79610b84542d4cd54abc14ae72b590b4" translate="yes" xml:space="preserve">
          <source>gives the number of code units processed</source>
          <target state="translated">da el número de unidades de código procesadas</target>
        </trans-unit>
        <trans-unit id="113913f856985a7871f6d8abfb20a98c72f9c371" translate="yes" xml:space="preserve">
          <source>globals.d</source>
          <target state="translated">globals.d</target>
        </trans-unit>
        <trans-unit id="6d2d7812933c0caaa1c3fd0ac21329b8571b1dc1" translate="yes" xml:space="preserve">
          <source>glue.d</source>
          <target state="translated">glue.d</target>
        </trans-unit>
        <trans-unit id="d1b013c81236b9afdc1d5e395046a71195f60186" translate="yes" xml:space="preserve">
          <source>gluelayer.d</source>
          <target state="translated">gluelayer.d</target>
        </trans-unit>
        <trans-unit id="2626668292e94187b32942821d7932ec86d5d407" translate="yes" xml:space="preserve">
          <source>grammatical construct &lt;code&gt;.&lt;/code&gt; (left side may be missing) when the rightmost side of the dot is a variable, field (direct or &lt;code&gt;static&lt;/code&gt;), function name, or invocation of a function that returns by reference;</source>
          <target state="translated">constructo gramatical &lt;code&gt;.&lt;/code&gt; (puede faltar el lado izquierdo) cuando el lado m&amp;aacute;s a la derecha del punto es una variable, campo (directo o &lt;code&gt;static&lt;/code&gt; ), nombre de funci&amp;oacute;n o invocaci&amp;oacute;n de una funci&amp;oacute;n que regresa por referencia;</target>
        </trans-unit>
        <trans-unit id="a314ae085ff525a96e8d655b6f31e4550219157e" translate="yes" xml:space="preserve">
          <source>graphically</source>
          <target state="translated">graphically</target>
        </trans-unit>
        <trans-unit id="8f10c18db3f9f217ce5b202a602ddc634eedd3b4" translate="yes" xml:space="preserve">
          <source>greater</source>
          <target state="translated">greater</target>
        </trans-unit>
        <trans-unit id="81d4129199f5b879d8657b0f2a41c995056ac4e5" translate="yes" xml:space="preserve">
          <source>greater or equal</source>
          <target state="translated">mayor o igual</target>
        </trans-unit>
        <trans-unit id="8126b19f2815053ff2aca18cefd3201c0cdb3aed" translate="yes" xml:space="preserve">
          <source>guaranteed to still have sub-second precision (just not as high as with &lt;code&gt;ClockType.normal&lt;/code&gt;).</source>
          <target state="translated">garantizado que todav&amp;iacute;a tiene una precisi&amp;oacute;n inferior al segundo (solo que no es tan alta como con &lt;code&gt;ClockType.normal&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ca91a9c618c050022ed0760873cbc29f79ba99a0" translate="yes" xml:space="preserve">
          <source>h.hhhhhh</source>
          <target state="translated">h.hhhhhh</target>
        </trans-unit>
        <trans-unit id="a5670df2182978501aac624cb2e3ff9eb6610b92" translate="yes" xml:space="preserve">
          <source>handle documentation comments</source>
          <target state="translated">manejar los comentarios de la documentación</target>
        </trans-unit>
        <trans-unit id="6132d522d40d3c2405b4e1ece7cb7cd2ef06017c" translate="yes" xml:space="preserve">
          <source>handle returned by addInstance()</source>
          <target state="translated">mango devuelto por addInstance()</target>
        </trans-unit>
        <trans-unit id="31a81ec93db3740ee3984fc40e34a60b0412643d" translate="yes" xml:space="preserve">
          <source>handler</source>
          <target state="translated">handler</target>
        </trans-unit>
        <trans-unit id="db51761312a38e8aaa3b5d71458b75f4f4db2f0c" translate="yes" xml:space="preserve">
          <source>handling of contract inheritance</source>
          <target state="translated">manejo de la herencia de contrato</target>
        </trans-unit>
        <trans-unit id="96ee88576e78640c8a671809920ee8a52b5a8d18" translate="yes" xml:space="preserve">
          <source>has a &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;immutable&lt;/code&gt; or &lt;code&gt;shared&lt;/code&gt; storage class, then it is as if each member of the class was declared with that storage class. If a base class is const, immutable or shared, then all classes derived from it are also const, immutable or shared.</source>
          <target state="translated">tiene una clase de almacenamiento &lt;code&gt;const&lt;/code&gt; ante , &lt;code&gt;immutable&lt;/code&gt; o &lt;code&gt;shared&lt;/code&gt; , entonces es como si cada miembro de la clase fuera declarado con esa clase de almacenamiento. Si una clase base es constante, inmutable o compartida, entonces todas las clases derivadas de ella tambi&amp;eacute;n son constantes, inmutables o compartidas.</target>
        </trans-unit>
        <trans-unit id="7cd0c946e10748b1e8bb736ca760049a9ee9d9e1" translate="yes" xml:space="preserve">
          <source>has a dual-context 'this' parameter</source>
          <target state="translated">tiene un parámetro de doble contexto &quot;este&quot;.</target>
        </trans-unit>
        <trans-unit id="bcf3116218431ac0135e8f49127910c689c7df55" translate="yes" xml:space="preserve">
          <source>has a value which is a reference (address) to another object of type</source>
          <target state="translated">tiene un valor que es una referencia (dirección)a otro objeto de tipo</target>
        </trans-unit>
        <trans-unit id="d3f9e5ec3ceb20b059f6b94f68041052a4292793" translate="yes" xml:space="preserve">
          <source>has an &lt;a href=&quot;expression#AssignExpression&quot;&gt;&lt;i&gt;AssignExpression&lt;/i&gt;&lt;/a&gt;, it is set to the type of that &lt;a href=&quot;expression#AssignExpression&quot;&gt;&lt;i&gt;AssignExpression&lt;/i&gt;&lt;/a&gt;. Otherwise, it defaults to type &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">tiene una &lt;a href=&quot;expression#AssignExpression&quot;&gt;&lt;i&gt;AssignExpression&lt;/i&gt;&lt;/a&gt; , se establece en el tipo de esa &lt;a href=&quot;expression#AssignExpression&quot;&gt;&lt;i&gt;AssignExpression&lt;/i&gt;&lt;/a&gt; . De lo contrario, el valor predeterminado es escribir &lt;code&gt;int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17c370bc5b91d99ff399a74752e5a21f06651a3f" translate="yes" xml:space="preserve">
          <source>has attribute pragma(crt_constructor(1)/crt_destructor(2))</source>
          <target state="translated">tiene el atributo pragma(crt_constructor(1)/crt_destructor(2))</target>
        </trans-unit>
        <trans-unit id="bb9a5235ef3e378c249e646408d55085e24ec1ef" translate="yes" xml:space="preserve">
          <source>has different semantics if it is in a &lt;a href=&quot;unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;contracts&quot;&gt;&lt;code&gt;in&lt;/code&gt; contract&lt;/a&gt;.</source>
          <target state="translated">tiene una sem&amp;aacute;ntica diferente si est&amp;aacute; en una &lt;a href=&quot;unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;contracts&quot;&gt; &lt;code&gt;in&lt;/code&gt; contrato&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dd1ca51166dfabe172e4a49569574f93a4c744c7" translate="yes" xml:space="preserve">
          <source>has no parameters, the mixin form that has no !(</source>
          <target state="translated">no tiene parámetros,la forma mixta que no tiene !(</target>
        </trans-unit>
        <trans-unit id="75d5d5fd147911bd358e3dd6cdcd70fff0f259e9" translate="yes" xml:space="preserve">
          <source>has no value; it is executed for its effects.</source>
          <target state="translated">no tiene ningún valor;se ejecuta para sus efectos.</target>
        </trans-unit>
        <trans-unit id="24eb3f19fcb0678a1972c887d2cc7814f42a94fd" translate="yes" xml:space="preserve">
          <source>has occurred and the program enters an</source>
          <target state="translated">ha ocurrido y el programa entra en un</target>
        </trans-unit>
        <trans-unit id="f447384928be373da37fe3b93e2dd468c3ca628b" translate="yes" xml:space="preserve">
          <source>has same sign as value.</source>
          <target state="translated">tiene el mismo signo que el valor.</target>
        </trans-unit>
        <trans-unit id="3d68145da53de6e36be00afb2e8cc24b48109ca5" translate="yes" xml:space="preserve">
          <source>hasCopyConstructor</source>
          <target state="translated">hasCopyConstructor</target>
        </trans-unit>
        <trans-unit id="b27f6ad8b68aabc4f890884fc8cdc2532d49fdab" translate="yes" xml:space="preserve">
          <source>hasMember</source>
          <target state="translated">hasMember</target>
        </trans-unit>
        <trans-unit id="69b6191bbd92ff73d2443189b34aa74a35f10e51" translate="yes" xml:space="preserve">
          <source>hasNonConstPointers is running</source>
          <target state="translated">hasNonConstPointers está funcionando</target>
        </trans-unit>
        <trans-unit id="8948990e72818f18606478951c6d7a50e45986c4" translate="yes" xml:space="preserve">
          <source>hasPostblit</source>
          <target state="translated">hasPostblit</target>
        </trans-unit>
        <trans-unit id="8b1303cc03f78d0fbe2f4efe9bdf5000d68f03d4" translate="yes" xml:space="preserve">
          <source>have relaxed semantic checks in that &lt;code&gt;pure&lt;/code&gt;, &lt;code&gt;@nogc&lt;/code&gt;, &lt;code&gt;nothrow&lt;/code&gt; and &lt;code&gt;@safe&lt;/code&gt; checks are not done. Neither do</source>
          <target state="translated">tener controles sem&amp;aacute;nticos relajados en los que no se realizan controles &lt;code&gt;pure&lt;/code&gt; , &lt;code&gt;@nogc&lt;/code&gt; , &lt;code&gt;nothrow&lt;/code&gt; y &lt;code&gt;@safe&lt;/code&gt; . Tampoco</target>
        </trans-unit>
        <trans-unit id="8f0af858ab8dec1ae6ffb76d417cf738e7a56e00" translate="yes" xml:space="preserve">
          <source>have that type.</source>
          <target state="translated">tienen ese tipo.</target>
        </trans-unit>
        <trans-unit id="8c90a983eb496a65dc53242ddece4a09c70fbbd1" translate="yes" xml:space="preserve">
          <source>hdrgen.d</source>
          <target state="translated">hdrgen.d</target>
        </trans-unit>
        <trans-unit id="76cffead8b715f86e4846df1765128e9b9c8a0e8" translate="yes" xml:space="preserve">
          <source>heap building blocks</source>
          <target state="translated">montón de bloques de construcción</target>
        </trans-unit>
        <trans-unit id="31a73f95c5de16ca83b9581f130507b6661fc161" translate="yes" xml:space="preserve">
          <source>heapSizeFactor:N - targeted heap size to used memory ratio</source>
          <target state="translated">heapSizeFactor:N-tamaño de la pila objetivo para la proporción de memoria utilizada</target>
        </trans-unit>
        <trans-unit id="d0dadd78733c8bba2c20e8473473e3ee9a73902a" translate="yes" xml:space="preserve">
          <source>hex numbers are always two hexdigits([0-9a-fA-F])</source>
          <target state="translated">Los números hexadecimales son siempre dos dígitos hexadecimales ([0-9a-fA-F])</target>
        </trans-unit>
        <trans-unit id="14f9a69d627678dad7afee0975f0e6c5dde0d432" translate="yes" xml:space="preserve">
          <source>hexData</source>
          <target state="translated">hexData</target>
        </trans-unit>
        <trans-unit id="a0863489d5b83d6020d036416f545b1539624e4b" translate="yes" xml:space="preserve">
          <source>hh:mm:ss</source>
          <target state="translated">hh:mm:ss</target>
        </trans-unit>
        <trans-unit id="99d72c7fc3e2e145870beab37c0b70e343ea9c3b" translate="yes" xml:space="preserve">
          <source>hidden</source>
          <target state="translated">hidden</target>
        </trans-unit>
        <trans-unit id="c3778900572082081b921cacb4abfdf2e724eb8d" translate="yes" xml:space="preserve">
          <source>hidden pointer passed to function</source>
          <target state="translated">el puntero oculto pasó a la función</target>
        </trans-unit>
        <trans-unit id="43c88f6f2c6e76a184d95f9dc52d4724577e0aa9" translate="yes" xml:space="preserve">
          <source>hold</source>
          <target state="translated">hold</target>
        </trans-unit>
        <trans-unit id="667d42d31384085cc2df1ab617a4dcd49ee49ddc" translate="yes" xml:space="preserve">
          <source>host found, key mismatch!</source>
          <target state="translated">anfitrión encontrado,¡la clave no concuerda!</target>
        </trans-unit>
        <trans-unit id="612b42bf07803f29829c772e12a5bbd51f6c5c1a" translate="yes" xml:space="preserve">
          <source>host key files</source>
          <target state="translated">archivos de claves del host</target>
        </trans-unit>
        <trans-unit id="1f8f69cd80a7100e667a7df500b94d7cd3b464f7" translate="yes" xml:space="preserve">
          <source>hours since midnight [0-23]</source>
          <target state="translated">horas desde la medianoche [0-23]</target>
        </trans-unit>
        <trans-unit id="0b064373fb4dd7356db6e83ec9c39e31ba9c335c" translate="yes" xml:space="preserve">
          <source>how</source>
          <target state="translated">how</target>
        </trans-unit>
        <trans-unit id="ed1e2f5d50f8bd7caf98fb42728563a0e6daa0bf" translate="yes" xml:space="preserve">
          <source>how many new elements to extend it with</source>
          <target state="translated">cuántos elementos nuevos para ampliarlo con</target>
        </trans-unit>
        <trans-unit id="b5d13a9715bb7e8e61c07ae4e189cd9dbba74c4a" translate="yes" xml:space="preserve">
          <source>human readable string</source>
          <target state="translated">cadena legible por el ser humano</target>
        </trans-unit>
        <trans-unit id="f5e9135db4eed28acce19591faa3338e73336d30" translate="yes" xml:space="preserve">
          <source>hypot(x, y)</source>
          <target state="translated">hipot(x,y)</target>
        </trans-unit>
        <trans-unit id="042dc4512fa3d391c5170cf3aa61e6a638f84342" translate="yes" xml:space="preserve">
          <source>i</source>
          <target state="translated">i</target>
        </trans-unit>
        <trans-unit id="c909b47681a5667facac14437c71719b4c69f777" translate="yes" xml:space="preserve">
          <source>i (on input)</source>
          <target state="translated">i (en la entrada)</target>
        </trans-unit>
        <trans-unit id="00aed9628be93e39a7798567d8a495c9429edea6" translate="yes" xml:space="preserve">
          <source>i (on return)</source>
          <target state="translated">i (a la vuelta)</target>
        </trans-unit>
        <trans-unit id="6413e837d316aafcf260786cd21a849f88ae3069" translate="yes" xml:space="preserve">
          <source>iOS</source>
          <target state="translated">iOS</target>
        </trans-unit>
        <trans-unit id="42bef156b68e80c3b2e2d7f1e6bc5960bb10702e" translate="yes" xml:space="preserve">
          <source>iasm.d</source>
          <target state="translated">iasm.d</target>
        </trans-unit>
        <trans-unit id="79fa41f0ef2186d5ea28aefc95663451057ebe09" translate="yes" xml:space="preserve">
          <source>iasmdmd.d</source>
          <target state="translated">iasmdmd.d</target>
        </trans-unit>
        <trans-unit id="a1eba7cfd630be724d6ddbe935028bb0a2e65eb0" translate="yes" xml:space="preserve">
          <source>iasmgcc.d</source>
          <target state="translated">iasmgcc.d</target>
        </trans-unit>
        <trans-unit id="ee21ddf7ec5db073a36abb47a297ad5fabb47ef8" translate="yes" xml:space="preserve">
          <source>id.d</source>
          <target state="translated">id.d</target>
        </trans-unit>
        <trans-unit id="c31a910e9556bb578dd5b9f062cfd9b376a2cb16" translate="yes" xml:space="preserve">
          <source>ident ...</source>
          <target state="translated">ident...</target>
        </trans-unit>
        <trans-unit id="f8d2387ec313b1422791aba01c9fb56bc43473a8" translate="yes" xml:space="preserve">
          <source>ident : specType = defaultType</source>
          <target state="translated">ident:specType=defaultType</target>
        </trans-unit>
        <trans-unit id="fae9fd39301eb7e657d4dad32a828cda5d7399e5" translate="yes" xml:space="preserve">
          <source>identifier</source>
          <target state="translated">identifier</target>
        </trans-unit>
        <trans-unit id="6ce9bdb65316990c9871b2f896dbf51b94d7906a" translate="yes" xml:space="preserve">
          <source>identifier being checked (ident[$] must be '\0')</source>
          <target state="translated">identificador que está siendo comprobado (ident[$]debe ser '\0')</target>
        </trans-unit>
        <trans-unit id="49c868cc7b455da6ad24a9dd89f96321ac4640f2" translate="yes" xml:space="preserve">
          <source>identifier being used</source>
          <target state="translated">identificador que se está utilizando</target>
        </trans-unit>
        <trans-unit id="137c2d59451eca06908d4456dc16fbf6b351a671" translate="yes" xml:space="preserve">
          <source>identifier to add</source>
          <target state="translated">identificador para añadir</target>
        </trans-unit>
        <trans-unit id="6dfd82e4b1d5500ff9a0635e6551fd0e71c679d8" translate="yes" xml:space="preserve">
          <source>identifier to add (ident[$] must be '\0')</source>
          <target state="translated">identificador para añadir (ident[$]debe ser '\0')</target>
        </trans-unit>
        <trans-unit id="a47c045f7eb51bbc1e1a92fa3b84f23ac14f335d" translate="yes" xml:space="preserve">
          <source>identifier to check for specialness</source>
          <target state="translated">identificador para comprobar la especialidad</target>
        </trans-unit>
        <trans-unit id="c4241dac6b25abe7a36623e96c84209ee8740738" translate="yes" xml:space="preserve">
          <source>identifier to search for</source>
          <target state="translated">identificador para buscar</target>
        </trans-unit>
        <trans-unit id="a3aaf5ca79dfae627b15ae453cb1d3f50c7c1b5c" translate="yes" xml:space="preserve">
          <source>identifier.d</source>
          <target state="translated">identifier.d</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="2ca54905ab1ba49d45815cf1c3488a6edd27fe24" translate="yes" xml:space="preserve">
          <source>if != 0 offset to DCatchInfo data from start of table</source>
          <target state="translated">si !=0 se compensa con los datos de DCatchInfo del comienzo de la tabla</target>
        </trans-unit>
        <trans-unit id="a07594fc7982f5a26fb642cb79520d97e7666312" translate="yes" xml:space="preserve">
          <source>if !=NULL, then this is the type of the 'introducing' function this one is overriding</source>
          <target state="translated">si !=NULL,entonces este es el tipo de función de &quot;introducción&quot; que este está anulando</target>
        </trans-unit>
        <trans-unit id="3cd33fd6ad562dc1c42759596294ce7de5a189fc" translate="yes" xml:space="preserve">
          <source>if !NULL, the 'this' pointer argument</source>
          <target state="translated">Si! NULL,el argumento de &quot;este&quot; puntero</target>
        </trans-unit>
        <trans-unit id="a29f7408721b4ad8087a94b8f5ecef6131c161a9" translate="yes" xml:space="preserve">
          <source>if !NULL, the &lt;code&gt;this&lt;/code&gt; argument type</source>
          <target state="translated">if! NULL, &lt;code&gt;this&lt;/code&gt; tipo de argumento</target>
        </trans-unit>
        <trans-unit id="2d5b067ea96f5d9bb9bd5e3ca5b6c562a7b60d0d" translate="yes" xml:space="preserve">
          <source>if !null, then t converted to C type</source>
          <target state="translated">Si es nulo,entonces se convierte en tipo C.</target>
        </trans-unit>
        <trans-unit id="95ecfc403c5ddbe3178ca2984d29ad92bb7ff771" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;true&lt;/code&gt; searches overload set</source>
          <target state="translated">si el conjunto de sobrecarga de b&amp;uacute;squedas &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51ad24abd5a50b9895bf5cf4837720c3a40aea03" translate="yes" xml:space="preserve">
          <source>if CTFE needs to be run on this, such as if it is the initializer for a const declaration</source>
          <target state="translated">si la CTFE necesita ser ejecutada en esto,como si es el inicializador para una declaración const</target>
        </trans-unit>
        <trans-unit id="8e11b2f46f408acd329596de49e2940eb8fc0c58" translate="yes" xml:space="preserve">
          <source>if a handler encloses a cleanup, prefer the handler</source>
          <target state="translated">si un manipulador incluye una limpieza,prefiera el manipulador</target>
        </trans-unit>
        <trans-unit id="332bed221cd234bb69fd0dfc38543ab7bb57760e" translate="yes" xml:space="preserve">
          <source>if access is read-only</source>
          <target state="translated">si el acceso es de sólo lectura</target>
        </trans-unit>
        <trans-unit id="519b8753e616d5686c1120a566576da7af42c457" translate="yes" xml:space="preserve">
          <source>if all the &lt;a href=&quot;expression#AssertExpression&quot;&gt;&lt;i&gt;AssertExpression&lt;/i&gt;&lt;/a&gt;s within the invariant that are executed succeed.</source>
          <target state="translated">si todos los &lt;a href=&quot;expression#AssertExpression&quot;&gt;&lt;i&gt;AssertExpression&lt;/i&gt;&lt;/a&gt; s dentro del invariante que se ejecutan tienen &amp;eacute;xito.</target>
        </trans-unit>
        <trans-unit id="f76bd88432ab5ac6e315c4c239388941a56b13ff" translate="yes" xml:space="preserve">
          <source>if any fields have an &lt;code&gt;opEquals()&lt;/code&gt;</source>
          <target state="translated">si alguno de los campos tiene &lt;code&gt;opEquals()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f25c7566db4236fdb2538a90ea8b76ee0db55fb" translate="yes" xml:space="preserve">
          <source>if flag &amp;amp; 1, don't report &quot;not a property&quot; error and just return NULL.</source>
          <target state="translated">si marca &amp;amp; 1, no informe el error &quot;no es una propiedad&quot; y simplemente devuelva NULL.</target>
        </trans-unit>
        <trans-unit id="c1b28e1cfff244d58cc606e57b8d96ce82cb4403" translate="yes" xml:space="preserve">
          <source>if foreach body, this is the foreach</source>
          <target state="translated">si el cuerpo de un antepasado,este es el antepasado</target>
        </trans-unit>
        <trans-unit id="1d10be46d75cc2babee5164ddb1363628f9eb60a" translate="yes" xml:space="preserve">
          <source>if found, filename combined with path, otherwise null</source>
          <target state="translated">si se encuentra,el nombre de archivo combinado con la ruta,de lo contrario es nulo</target>
        </trans-unit>
        <trans-unit id="f45144fcbb800c7181387014e3de98fa175b798e" translate="yes" xml:space="preserve">
          <source>if found, returns FuncDeclaration of opAssign, otherwise null</source>
          <target state="translated">si se encuentra,devuelve FuncDeclaración de opAssign,de lo contrario es nulo</target>
        </trans-unit>
        <trans-unit id="d5f6b65a5833c8d6ec13804f924d415d30b16d54" translate="yes" xml:space="preserve">
          <source>if generating a header file</source>
          <target state="translated">si la generación de un archivo de cabecera</target>
        </trans-unit>
        <trans-unit id="3b76b8d7827911f12ad755bfe75eaff2a3489d16" translate="yes" xml:space="preserve">
          <source>if invalid UTF, return &lt;code&gt;replacementDchar&lt;/code&gt; rather than throwing</source>
          <target state="translated">si no es v&amp;aacute;lido UTF, devuelva el &lt;code&gt;replacementDchar&lt;/code&gt; de carga en lugar de tirar</target>
        </trans-unit>
        <trans-unit id="4fe8127c3f8fff9177841e6096c0c7d1993aab0e" translate="yes" xml:space="preserve">
          <source>if invalid UTF, return replacementDchar rather than throwing</source>
          <target state="translated">si el UTF es inválido,devuelva el Dcar de reemplazo en lugar de tirar</target>
        </trans-unit>
        <trans-unit id="3284e4b4b19e1969e8d66af6e8f8c922b09b8643" translate="yes" xml:space="preserve">
          <source>if key was in the aa, a mutable pointer to the existing value. If key was not in the aa, a mutable pointer to newly inserted value which is set to all zeros</source>
          <target state="translated">si la clave estaba en el aa,un puntero mutable al valor existente.Si la clave no estaba en el aa,un puntero mutable al valor recién insertado que se establece en todos los ceros</target>
        </trans-unit>
        <trans-unit id="61784626b16ee7547e065517a95ee91cbafb221b" translate="yes" xml:space="preserve">
          <source>if match is found, then function symbol, else null</source>
          <target state="translated">si se encuentra una coincidencia,entonces el símbolo de la función,si no es nulo</target>
        </trans-unit>
        <trans-unit id="409ce75ba96143ba6bd6653bf1308de1919673cf" translate="yes" xml:space="preserve">
          <source>if not &lt;code&gt;null&lt;/code&gt;, type to coerce expression to</source>
          <target state="translated">si no es &lt;code&gt;null&lt;/code&gt; , escriba para obligar a la expresi&amp;oacute;n a</target>
        </trans-unit>
        <trans-unit id="5eb02e3e3c4a6bf6ee6ce4aced1ecaf59fab82af" translate="yes" xml:space="preserve">
          <source>if not null expression to test (not evaluated, but converted to a string)</source>
          <target state="translated">si no la expresión nula a prueba (no evaluada,pero convertida en una cadena)</target>
        </trans-unit>
        <trans-unit id="5a813420f87098cb56d2f5ee5fe4b07e2ea22b4f" translate="yes" xml:space="preserve">
          <source>if not null then informative message string</source>
          <target state="translated">si no es nulo,entonces la cadena de mensajes informativos</target>
        </trans-unit>
        <trans-unit id="1a15901d28cea22cb6d9e0faecd0ed5beff6ef1d" translate="yes" xml:space="preserve">
          <source>if not null then informative message to be computed at run time</source>
          <target state="translated">si no es nulo,entonces el mensaje informativo se calculará en tiempo de ejecución</target>
        </trans-unit>
        <trans-unit id="436fa63ae1cb4820538f4d67f89b7b1360769446" translate="yes" xml:space="preserve">
          <source>if not null, is set to the operator that was actually overloaded, which may not be &lt;code&gt;e.op&lt;/code&gt;. Happens when operands are reversed to to match an overload</source>
          <target state="translated">si no es nulo, se establece en el operador que realmente estaba sobrecargado, que puede no ser &lt;code&gt;e.op&lt;/code&gt; . Sucede cuando los operandos se invierten para coincidir con una sobrecarga</target>
        </trans-unit>
        <trans-unit id="99c6c40a970b3a7cdd45ddca489c16993facb665" translate="yes" xml:space="preserve">
          <source>if not null, pointer to finally code to execute</source>
          <target state="translated">si no es nulo,puntero a código finalmente para ejecutar</target>
        </trans-unit>
        <trans-unit id="501dbc9d049e0633733fdb4f205a33d9e62c51e5" translate="yes" xml:space="preserve">
          <source>if not null, store STCxxxx which would make it covariant</source>
          <target state="translated">si no es nulo,almacena STCxxxx lo que lo haría covariable</target>
        </trans-unit>
        <trans-unit id="8cff7400ba11f5736360f3fd2777e313e3ceba38" translate="yes" xml:space="preserve">
          <source>if not null, store resulting expression here</source>
          <target state="translated">si no es nula,guarda la expresión resultante aquí</target>
        </trans-unit>
        <trans-unit id="775ff6242415a51ec6a1ba5110b1fa2a03f0f19f" translate="yes" xml:space="preserve">
          <source>if one field name has more than one file, this link should link to following files</source>
          <target state="translated">si un nombre de campo tiene más de un archivo,este enlace debe enlazar con los siguientes archivos</target>
        </trans-unit>
        <trans-unit id="45af8c2bdd59d07bc362cfb5092e433c4e549960" translate="yes" xml:space="preserve">
          <source>if present, the maximum number of bytes to read</source>
          <target state="translated">si está presente,el número máximo de bytes a leer</target>
        </trans-unit>
        <trans-unit id="825297a68e4cafd863cf02c0eca4ded6ef6545c4" translate="yes" xml:space="preserve">
          <source>if splitting of data transfer is enabled, this callback is called before download of an individual chunk started. Note that parameter &quot;remains&quot; works only for FTP wildcard downloading (for now), otherwise is not used</source>
          <target state="translated">si la división de la transferencia de datos está activada,se llama a esta llamada antes de que se inicie la descarga de un trozo individual.Tenga en cuenta que el parámetro &quot;remains&quot; funciona sólo para la descarga de comodines FTP (por ahora),de lo contrario no se utiliza</target>
        </trans-unit>
        <trans-unit id="ef26b5af891ebe255e9d3ddc5fc66d443b6e9e4f" translate="yes" xml:space="preserve">
          <source>if the file is no symlink, getLinkAttributes behaves like getAttributes</source>
          <target state="translated">si el archivo no es un enlace simbólico,getLinkAttributes se comporta como getAttributes</target>
        </trans-unit>
        <trans-unit id="ba82086f32c8eef89db349f0b3f7f1bccb15edcc" translate="yes" xml:space="preserve">
          <source>if the first port is occupied then try this many port number forwards</source>
          <target state="translated">si el primer puerto está ocupado,entonces intenta este número de puerto hacia adelante</target>
        </trans-unit>
        <trans-unit id="bbd18544a7b1d8d8e6b427dd917d8fa8f3104007" translate="yes" xml:space="preserve">
          <source>if the function call has explicit 'this' expression</source>
          <target state="translated">si la llamada a la función tiene una expresión explícita de &quot;esto&quot;...</target>
        </trans-unit>
        <trans-unit id="7977b41c070297e5496dbd45f3621c5568cdc986" translate="yes" xml:space="preserve">
          <source>if the function is callable in a &lt;code&gt;nothrow&lt;/code&gt; scope.</source>
          <target state="translated">si la funci&amp;oacute;n es invocable en un &amp;aacute;mbito de no &lt;code&gt;nothrow&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ec752b248b6840dc7ed4577a9c90172fe735ff9" translate="yes" xml:space="preserve">
          <source>if the number of arguments doesn't match the number of format parameters and vice-versa.</source>
          <target state="translated">si el número de argumentos no coincide con el número de parámetros de formato y viceversa.</target>
        </trans-unit>
        <trans-unit id="649c4071588d59f78afef7f10b8b3ac580e9be14" translate="yes" xml:space="preserve">
          <source>if the postblit is callable in a &lt;code&gt;nothrow&lt;/code&gt; scope, if it exist. if it does not exist, return true.</source>
          <target state="translated">si el postblit es invocable en un alcance &lt;code&gt;nothrow&lt;/code&gt; , si existe. si no existe, devuelve verdadero.</target>
        </trans-unit>
        <trans-unit id="d326395521339a4e7faa43685fcd4c4cda09e05e" translate="yes" xml:space="preserve">
          <source>if the struct defines a copy constructor, the type of the destination</source>
          <target state="translated">si la estructura define un constructor de copias,el tipo de destino</target>
        </trans-unit>
        <trans-unit id="870e722a7b08e77ff510dda5ddc2fe52bad6a0a2" translate="yes" xml:space="preserve">
          <source>if this is a C++ class, this is the slot reserved for the virtual destructor</source>
          <target state="translated">si esta es una clase C++,esta es la ranura reservada para el destructor virtual</target>
        </trans-unit>
        <trans-unit id="feab7f9627e93018aff0a397d2c9a669ea0b7c9d" translate="yes" xml:space="preserve">
          <source>if this is true, use the StructDeclaration's init symbol</source>
          <target state="translated">si esto es cierto,use el símbolo de inicio de la Declaración Estructural</target>
        </trans-unit>
        <trans-unit id="d632a1f1f7da305cadd5d8f546d5401f880c8801" translate="yes" xml:space="preserve">
          <source>if true, build new temporary variable even if e is trivial.</source>
          <target state="translated">si es cierto,construye una nueva variable temporal aunque e sea trivial.</target>
        </trans-unit>
        <trans-unit id="8fbed1d5aa6205bf5390a9071dc387800400ced2" translate="yes" xml:space="preserve">
          <source>if true, return &lt;code&gt;null&lt;/code&gt; instead of throwing an error</source>
          <target state="translated">si es verdadero, devuelve &lt;code&gt;null&lt;/code&gt; lugar de arrojar un error</target>
        </trans-unit>
        <trans-unit id="211168e6da3a680711d2ea2994177a194a2aeca2" translate="yes" xml:space="preserve">
          <source>if virtual, but only appears in base interface vtbl[]</source>
          <target state="translated">si es virtual,pero sólo aparece en la base de la interfaz vtbl[]</target>
        </trans-unit>
        <trans-unit id="17d1bbd5a5151259dc7cdc15eae74fdd759a1c2c" translate="yes" xml:space="preserve">
          <source>if yes and fn contains a folder name, this folder will be created.</source>
          <target state="translated">si es así y fn contiene un nombre de carpeta,se creará esta carpeta.</target>
        </trans-unit>
        <trans-unit id="5b417cdbcc42280c36e9127f761ab6e6e81ef2c8" translate="yes" xml:space="preserve">
          <source>if you ever get this, you're in deep sh*t</source>
          <target state="translated">Si alguna vez te pasa esto,estarás en un profundo lío...</target>
        </trans-unit>
        <trans-unit id="ee1c009e739422e31e9b8751d38140479224ffe9" translate="yes" xml:space="preserve">
          <source>iff</source>
          <target state="translated">iff</target>
        </trans-unit>
        <trans-unit id="25e5a392c2d1eaae040113071531d72250d11fed" translate="yes" xml:space="preserve">
          <source>ignore Content-Length</source>
          <target state="translated">ignorar la longitud del contenido</target>
        </trans-unit>
        <trans-unit id="0121bc05e0945dfa630b80cba86e207b6d4ca829" translate="yes" xml:space="preserve">
          <source>ignored</source>
          <target state="translated">ignored</target>
        </trans-unit>
        <trans-unit id="d20779326906f6893f2e6b7f5f2ae42eb0a4e886" translate="yes" xml:space="preserve">
          <source>ilogb(x)</source>
          <target state="translated">ilogb(x)</target>
        </trans-unit>
        <trans-unit id="ac2f11967ff6801ab9cbad10f2aff789bef42cbd" translate="yes" xml:space="preserve">
          <source>imaginary double</source>
          <target state="translated">doble imaginario</target>
        </trans-unit>
        <trans-unit id="0f96f53583de89f0d9554d31e85b700adaacf50e" translate="yes" xml:space="preserve">
          <source>imaginary float</source>
          <target state="translated">flotador imaginario</target>
        </trans-unit>
        <trans-unit id="5166ced8a579a38a845f88d5673146d61ff8017a" translate="yes" xml:space="preserve">
          <source>imaginary part</source>
          <target state="translated">parte imaginaria</target>
        </trans-unit>
        <trans-unit id="408d3ac427f755393e1bc321d874090ee5dc0730" translate="yes" xml:space="preserve">
          <source>imaginary real</source>
          <target state="translated">imaginario real</target>
        </trans-unit>
        <trans-unit id="f151405db06abfb3ecc7537defbba6abb0234fcf" translate="yes" xml:space="preserve">
          <source>immediately halting via execution of a special CPU instruction</source>
          <target state="translated">deteniendo inmediatamente mediante la ejecución de una instrucción especial de la CPU</target>
        </trans-unit>
        <trans-unit id="faf6664cc839329d7bc696207fa32b7d381e0afc" translate="yes" xml:space="preserve">
          <source>immutable Endian &lt;strong id=&quot;endian&quot;&gt;endian&lt;/strong&gt;;</source>
          <target state="translated">Endian inmutable &lt;strong id=&quot;endian&quot;&gt;endian&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7bed240368d22eee7031030851cedfb6727278de" translate="yes" xml:space="preserve">
          <source>immutable ImmutableRange &lt;strong id=&quot;lowerBound&quot;&gt;lowerBound&lt;/strong&gt;(Elem e);</source>
          <target state="translated">immutable &lt;strong id=&quot;lowerBound&quot;&gt;ImmutableRange lowerBound&lt;/strong&gt; (Elem e);</target>
        </trans-unit>
        <trans-unit id="419908045e188630cfd97218b8b8776510c9a949" translate="yes" xml:space="preserve">
          <source>immutable ImmutableRange &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;();</source>
          <target state="translated">immutable &lt;strong id=&quot;opSlice&quot;&gt;ImmutableRange opSlice&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="72fa1fff75775b6f7c6cfe0d89142409635b7dfc" translate="yes" xml:space="preserve">
          <source>immutable ImmutableRange &lt;strong id=&quot;upperBound&quot;&gt;upperBound&lt;/strong&gt;(Elem e);</source>
          <target state="translated">immutable &lt;strong id=&quot;upperBound&quot;&gt;ImmutableRange upperBound&lt;/strong&gt; (Elem e);</target>
        </trans-unit>
        <trans-unit id="cb82881cba050d9a5558c90744df4f67f57ded88" translate="yes" xml:space="preserve">
          <source>immutable OS &lt;strong id=&quot;os&quot;&gt;os&lt;/strong&gt;;</source>
          <target state="translated">OS inmutables &lt;strong id=&quot;os&quot;&gt;OS&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f8fa86b6308549d682d75c313aebcd281d541ccf" translate="yes" xml:space="preserve">
          <source>immutable Tuple!(BOM, &quot;schema&quot;, ubyte[], &quot;sequence&quot;)[] &lt;strong id=&quot;bomTable&quot;&gt;bomTable&lt;/strong&gt;;</source>
          <target state="translated">Tupla inmutable! (BOM, &quot;esquema&quot;, ubyte [], &quot;secuencia&quot;) [] &lt;strong id=&quot;bomTable&quot;&gt;bomTable&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="68b18f19c9b869735654a553ad46c94f634c609d" translate="yes" xml:space="preserve">
          <source>immutable Vendor &lt;strong id=&quot;vendor&quot;&gt;vendor&lt;/strong&gt;;</source>
          <target state="translated">vendedor inmutable &lt;strong id=&quot;vendor&quot;&gt;vendedor&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e12fec0be105a76c6845bb35b54e80ccc67ed4d7" translate="yes" xml:space="preserve">
          <source>immutable bool &lt;strong id=&quot;hasErrors&quot;&gt;hasErrors&lt;/strong&gt;();</source>
          <target state="translated">inmutable bool &lt;strong id=&quot;hasErrors&quot;&gt;hasErrors&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="48346773ed93de0d771fca9eb39a36348753e872" translate="yes" xml:space="preserve">
          <source>immutable bool &lt;strong id=&quot;hasWarnings&quot;&gt;hasWarnings&lt;/strong&gt;();</source>
          <target state="translated">bool inmutable &lt;strong id=&quot;hasWarnings&quot;&gt;hasWarnings&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="25b09e80160ccb6a0bedbd4c7ca3410b9bf9140c" translate="yes" xml:space="preserve">
          <source>immutable int &lt;strong id=&quot;_aaVersion&quot;&gt;_aaVersion&lt;/strong&gt;;</source>
          <target state="translated">inmutable int &lt;strong id=&quot;_aaVersion&quot;&gt;_aaVersion&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="075384234928a7464cb59049d7d745af6648d431" translate="yes" xml:space="preserve">
          <source>immutable int &lt;strong id=&quot;status&quot;&gt;status&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;status&quot;&gt;estado&lt;/strong&gt; int inmutable ;</target>
        </trans-unit>
        <trans-unit id="d91c7d037f5a416e8a09abd9f7217522f8eb793e" translate="yes" xml:space="preserve">
          <source>immutable pure @safe this(Duration utcOffset, string stdName = &quot;&quot;);</source>
          <target state="translated">inmutable puro @safe this(Duration utcOffset,string stdName=&quot;&quot;);</target>
        </trans-unit>
        <trans-unit id="f06b7e39cbd30afa5445ba9d238ea8174c38711f" translate="yes" xml:space="preserve">
          <source>immutable size_t &lt;strong id=&quot;pageSize&quot;&gt;pageSize&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183cff4984d8af1f897689feded3b89cd2101208" translate="yes" xml:space="preserve">
          <source>immutable size_t[pointerBitmap.length] &lt;strong id=&quot;RTInfoImpl&quot;&gt;RTInfoImpl&lt;/strong&gt;(size_t[] pointerBitmap);</source>
          <target state="translated">tama&amp;ntilde;o_t inmutable [pointerBitmap.length] &lt;strong id=&quot;RTInfoImpl&quot;&gt;RTInfoImpl&lt;/strong&gt; (size_t [] pointerBitmap);</target>
        </trans-unit>
        <trans-unit id="a508741c57f48d33898e663f30820742ed2e8038" translate="yes" xml:space="preserve">
          <source>immutable string &lt;strong id=&quot;digits&quot;&gt;digits&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;digits&quot;&gt;d&amp;iacute;gitos de&lt;/strong&gt; cadena inmutables ;</target>
        </trans-unit>
        <trans-unit id="e36f613c20b1099cd7e9e9e9f4d760a31673cfaa" translate="yes" xml:space="preserve">
          <source>immutable string &lt;strong id=&quot;fullHexDigits&quot;&gt;fullHexDigits&lt;/strong&gt;;</source>
          <target state="translated">cadena inmutable &lt;strong id=&quot;fullHexDigits&quot;&gt;fullHexDigits&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8c3c66922bd32bc9feeef107aea7afc33d8ee01e" translate="yes" xml:space="preserve">
          <source>immutable string &lt;strong id=&quot;hexDigits&quot;&gt;hexDigits&lt;/strong&gt;;</source>
          <target state="translated">cadena inmutable &lt;strong id=&quot;hexDigits&quot;&gt;hexDigits&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f2a7e0e692ef586008aac68b9d668cf41d0614ba" translate="yes" xml:space="preserve">
          <source>immutable string &lt;strong id=&quot;letters&quot;&gt;letters&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;letters&quot;&gt;letras de&lt;/strong&gt; cadena inmutables ;</target>
        </trans-unit>
        <trans-unit id="8cd6bc725ae9c8cbea041e045808446bbd6ed1b2" translate="yes" xml:space="preserve">
          <source>immutable string &lt;strong id=&quot;lowerHexDigits&quot;&gt;lowerHexDigits&lt;/strong&gt;;</source>
          <target state="translated">cadena inmutable &lt;strong id=&quot;lowerHexDigits&quot;&gt;lowerHexDigits&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e8c071987af128ab6cdf9d8870a2ad823e257368" translate="yes" xml:space="preserve">
          <source>immutable string &lt;strong id=&quot;lowercase&quot;&gt;lowercase&lt;/strong&gt;;</source>
          <target state="translated">cadena inmutable en &lt;strong id=&quot;lowercase&quot;&gt;min&amp;uacute;scula&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="147a9249e2cb3e04dcd634c1184f88e5f1167c9b" translate="yes" xml:space="preserve">
          <source>immutable string &lt;strong id=&quot;name&quot;&gt;name&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;name&quot;&gt;nombre de&lt;/strong&gt; cadena inmutable ;</target>
        </trans-unit>
        <trans-unit id="14848336efdb370ca640013a45141b290b19e11b" translate="yes" xml:space="preserve">
          <source>immutable string &lt;strong id=&quot;newline&quot;&gt;newline&lt;/strong&gt;;</source>
          <target state="translated">cadena inmutable &lt;strong id=&quot;newline&quot;&gt;nueva l&amp;iacute;nea&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5f18916086044e9398b42666ca0fbba1641686c2" translate="yes" xml:space="preserve">
          <source>immutable string &lt;strong id=&quot;octalDigits&quot;&gt;octalDigits&lt;/strong&gt;;</source>
          <target state="translated">cadena inmutable &lt;strong id=&quot;octalDigits&quot;&gt;octalDigits&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="65380df690620eeb1bff3da5f20008d09861776a" translate="yes" xml:space="preserve">
          <source>immutable string &lt;strong id=&quot;uppercase&quot;&gt;uppercase&lt;/strong&gt;;</source>
          <target state="translated">cadena inmutable &lt;strong id=&quot;uppercase&quot;&gt;may&amp;uacute;scula&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ff2a711d6dbb2daef11318ee4cb50e8d82e8eeb9" translate="yes" xml:space="preserve">
          <source>immutable string &lt;strong id=&quot;whitespace&quot;&gt;whitespace&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;whitespace&quot;&gt;espacio en blanco de&lt;/strong&gt; cadena inmutable ;</target>
        </trans-unit>
        <trans-unit id="cda99ae2d2c07d6c7cdfe4ced4174c2b057476d7" translate="yes" xml:space="preserve">
          <source>immutable string[] &lt;strong id=&quot;timeStrings&quot;&gt;timeStrings&lt;/strong&gt;;</source>
          <target state="translated">cadena inmutable [] &lt;strong id=&quot;timeStrings&quot;&gt;timeStrings&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="36147238dd06cb318441a676ea19443fba982509" translate="yes" xml:space="preserve">
          <source>immutable ubyte[OPMAX] &lt;strong id=&quot;opcost&quot;&gt;opcost&lt;/strong&gt;;</source>
          <target state="translated">inmutable ubyte [OPMAX] &lt;strong id=&quot;opcost&quot;&gt;opcost&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="fd3f6ca3dfa9c29ddb3c6ad456341d2926b736e1" translate="yes" xml:space="preserve">
          <source>immutable ubyte[OPMAX] &lt;strong id=&quot;optab1&quot;&gt;optab1&lt;/strong&gt;;</source>
          <target state="translated">ubyte inmutable [OPMAX] &lt;strong id=&quot;optab1&quot;&gt;optab1&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1fc824b11a42823a8ef842707f5461bf46ca04a2" translate="yes" xml:space="preserve">
          <source>immutable ubyte[OPMAX] &lt;strong id=&quot;optab2&quot;&gt;optab2&lt;/strong&gt;;</source>
          <target state="translated">ubyte inmutable [OPMAX] &lt;strong id=&quot;optab2&quot;&gt;optab2&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a54901dbd753455e7e8b49f376eab3836512e219" translate="yes" xml:space="preserve">
          <source>immutable ubyte[OPMAX] &lt;strong id=&quot;optab3&quot;&gt;optab3&lt;/strong&gt;;</source>
          <target state="translated">ubyte inmutable [OPMAX] &lt;strong id=&quot;optab3&quot;&gt;optab3&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b71004f64bb3dac72a4a63af72ff8f8f039f39a8" translate="yes" xml:space="preserve">
          <source>immutable ubyte[RELMAX] &lt;strong id=&quot;_rel_exception&quot;&gt;_rel_exception&lt;/strong&gt;;</source>
          <target state="translated">ubyte inmutable [RELMAX] &lt;strong id=&quot;_rel_exception&quot;&gt;_rel_exception&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6ba99c3a576a2202579545db485350038c8a3435" translate="yes" xml:space="preserve">
          <source>immutable ubyte[RELMAX] &lt;strong id=&quot;_rel_integral&quot;&gt;_rel_integral&lt;/strong&gt;;</source>
          <target state="translated">ubyte inmutable [RELMAX] &lt;strong id=&quot;_rel_integral&quot;&gt;_rel_integral&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="780f068c998e2534723578a9bacee4751ee4e0d7" translate="yes" xml:space="preserve">
          <source>immutable ubyte[RELMAX] &lt;strong id=&quot;_rel_not&quot;&gt;_rel_not&lt;/strong&gt;;</source>
          <target state="translated">ubyte inmutable [RELMAX] &lt;strong id=&quot;_rel_not&quot;&gt;_rel_not&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="aa6a9e1da95e83d4f9a9cce762a68d13c90ace41" translate="yes" xml:space="preserve">
          <source>immutable ubyte[RELMAX] &lt;strong id=&quot;_rel_swap&quot;&gt;_rel_swap&lt;/strong&gt;;</source>
          <target state="translated">ubyte inmutable [RELMAX] &lt;strong id=&quot;_rel_swap&quot;&gt;_rel_swap&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="2cb88ea3bc3bbea7030e4c9dc88ec0fd2558c0c0" translate="yes" xml:space="preserve">
          <source>immutable ubyte[RELMAX] &lt;strong id=&quot;_rel_unord&quot;&gt;_rel_unord&lt;/strong&gt;;</source>
          <target state="translated">ubyte inmutable [RELMAX] &lt;strong id=&quot;_rel_unord&quot;&gt;_rel_unord&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="937b5c3ebc7100a3fb5f664925d330eacec2255a" translate="yes" xml:space="preserve">
          <source>immutable uint &lt;strong id=&quot;D_major&quot;&gt;D_major&lt;/strong&gt;;</source>
          <target state="translated">inmutable uint &lt;strong id=&quot;D_major&quot;&gt;D_major&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0d3ce40ddb58680a54e1241d5985d64863f4663c" translate="yes" xml:space="preserve">
          <source>immutable uint &lt;strong id=&quot;errno&quot;&gt;errno&lt;/strong&gt;;</source>
          <target state="translated">inmutable uint &lt;strong id=&quot;errno&quot;&gt;errno&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4f507ee2b4ca53e56f37565d13ad6825df3a780a" translate="yes" xml:space="preserve">
          <source>immutable uint &lt;strong id=&quot;errors&quot;&gt;errors&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;errors&quot;&gt;errores&lt;/strong&gt; inmutables de uint ;</target>
        </trans-unit>
        <trans-unit id="c17e72b9be9729725b9c33c9ecda705c9a961db0" translate="yes" xml:space="preserve">
          <source>immutable uint &lt;strong id=&quot;version_major&quot;&gt;version_major&lt;/strong&gt;;</source>
          <target state="translated">inmutable uint &lt;strong id=&quot;version_major&quot;&gt;version_major&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="07000adfd91dd81e4220376fab93379bf5d4cfbf" translate="yes" xml:space="preserve">
          <source>immutable uint &lt;strong id=&quot;version_minor&quot;&gt;version_minor&lt;/strong&gt;;</source>
          <target state="translated">inmutable uint &lt;strong id=&quot;version_minor&quot;&gt;version_minor&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4407ca63e53acef3715feca03a3606d332ae02b2" translate="yes" xml:space="preserve">
          <source>immutable uint &lt;strong id=&quot;warnings&quot;&gt;warnings&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;warnings&quot;&gt;advertencias&lt;/strong&gt; inmutables uint ;</target>
        </trans-unit>
        <trans-unit id="753084213b0f815969ecd0489ee1661e330ee321" translate="yes" xml:space="preserve">
          <source>immutable void* &lt;strong id=&quot;Z_NULL&quot;&gt;Z_NULL&lt;/strong&gt;;</source>
          <target state="translated">vac&amp;iacute;o inmutable * &lt;strong id=&quot;Z_NULL&quot;&gt;Z_NULL&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a244ff93501b6dd973a85468410a0430965f518a" translate="yes" xml:space="preserve">
          <source>immutable(BOMSeq) &lt;strong id=&quot;getBOM&quot;&gt;getBOM&lt;/strong&gt;(Range)(Range input)</source>
          <target state="translated">inmutable (BOMSeq) &lt;strong id=&quot;getBOM&quot;&gt;getBOM&lt;/strong&gt; (Rango) (Entrada de rango)</target>
        </trans-unit>
        <trans-unit id="9f180640c7bc56eb82767c34745fb667b371fdf7" translate="yes" xml:space="preserve">
          <source>immutable(C1)[] &lt;strong id=&quot;defaultExtension&quot;&gt;defaultExtension&lt;/strong&gt;(C1, C2)(in C1[] path, in C2[] ext)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e75233d5e49725517ec8f59babfe1e2666ec82" translate="yes" xml:space="preserve">
          <source>immutable(C1)[] &lt;strong id=&quot;setExtension&quot;&gt;setExtension&lt;/strong&gt;(C1, C2)(immutable(C1)[] path, const(C2)[] ext)</source>
          <target state="translated">immutable (C1) [] &lt;strong id=&quot;setExtension&quot;&gt;setExtension&lt;/strong&gt; (C1, C2) (ruta inmutable (C1) [], const (C2) [] ext)</target>
        </trans-unit>
        <trans-unit id="a207f98721f15312a3fd6a47b1bfba9066716750" translate="yes" xml:space="preserve">
          <source>immutable(C1)[] &lt;strong id=&quot;setExtension&quot;&gt;setExtension&lt;/strong&gt;(C1, C2)(in C1[] path, in C2[] ext)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdada9680e73cc1fa27672c40740f8d7acb64a9d" translate="yes" xml:space="preserve">
          <source>immutable(Char)[] &lt;strong id=&quot;format&quot;&gt;format&lt;/strong&gt;(Char, Args...)(in Char[] fmt, Args args)</source>
          <target state="translated">&lt;strong id=&quot;format&quot;&gt;formato&lt;/strong&gt; inmutable (Char) [] (Char, Args ...) (en Char [] fmt, Args args)</target>
        </trans-unit>
        <trans-unit id="a3805b289e49ad7d53d9c7aac6202d805abfe34f" translate="yes" xml:space="preserve">
          <source>immutable(E)[] &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">inmutable (E) [] &lt;code&gt;s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd20a3bd6b9ec2b4bafecdf2831cc65fab9fa79a" translate="yes" xml:space="preserve">
          <source>immutable(E)[] &lt;strong id=&quot;sanitize&quot;&gt;sanitize&lt;/strong&gt;(E)(immutable(E)[] s);</source>
          <target state="translated">inmutable (E) [] &lt;strong id=&quot;sanitize&quot;&gt;desinfectar&lt;/strong&gt; (E) (inmutable (E) [] s);</target>
        </trans-unit>
        <trans-unit id="fac8a80bf503ccafc487a46ecfa1419d5a4143b4" translate="yes" xml:space="preserve">
          <source>immutable(ElementEncodingType!(ElementType!Range))[] &lt;strong id=&quot;buildPath&quot;&gt;buildPath&lt;/strong&gt;(Range)(Range segments)</source>
          <target state="translated">immutable (ElementEncodingType! (ElementType! Range)) [] &lt;strong id=&quot;buildPath&quot;&gt;buildPath&lt;/strong&gt; (Range) (Segmentos de rango)</target>
        </trans-unit>
        <trans-unit id="f07aa591fb5b1da8266b8f1c927b8942250eafce" translate="yes" xml:space="preserve">
          <source>immutable(FuncTable)* &lt;strong id=&quot;__eh_finddata&quot;&gt;__eh_finddata&lt;/strong&gt;(void* address);</source>
          <target state="translated">inmutable (FuncTable) * &lt;strong id=&quot;__eh_finddata&quot;&gt;__eh_finddata&lt;/strong&gt; (void * address);</target>
        </trans-unit>
        <trans-unit id="a0227fa458a12bb96395dd8a842c8a09123a3433" translate="yes" xml:space="preserve">
          <source>immutable(Unqual!C1)[] &lt;strong id=&quot;defaultExtension&quot;&gt;defaultExtension&lt;/strong&gt;(C1, C2)(in C1[] path, in C2[] ext)</source>
          <target state="translated">immutable (Unqual! C1) [] &lt;strong id=&quot;defaultExtension&quot;&gt;defaultExtension&lt;/strong&gt; (C1, C2) (en la ruta C1 [], en C2 [] ext)</target>
        </trans-unit>
        <trans-unit id="89b40e6e4c9a5a86f1e6e98f69f400a45dfa989e" translate="yes" xml:space="preserve">
          <source>immutable(Unqual!C1)[] &lt;strong id=&quot;setExtension&quot;&gt;setExtension&lt;/strong&gt;(C1, C2)(in C1[] path, in C2[] ext)</source>
          <target state="translated">inmutable (Unqual! C1) [] &lt;strong id=&quot;setExtension&quot;&gt;setExtension&lt;/strong&gt; (C1, C2) (en la ruta C1 [], en C2 [] ext)</target>
        </trans-unit>
        <trans-unit id="54c4c951e9cd7a0b5b43202ff5cd7f25b554c5bb" translate="yes" xml:space="preserve">
          <source>immutable(char)* &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">inmutable (char) * &lt;code&gt;s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee63be25940848331204e7245c99b3dc67b841fd" translate="yes" xml:space="preserve">
          <source>immutable(char)* &lt;strong id=&quot;sqlite3_version&quot;&gt;sqlite3_version&lt;/strong&gt;;</source>
          <target state="translated">inmutable (char) * &lt;strong id=&quot;sqlite3_version&quot;&gt;sqlite3_version&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a8cbf3b2bfbe54282adec0f26c8d7872b2bfa3c6" translate="yes" xml:space="preserve">
          <source>immutable(ubyte)[] &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">inmutable (ubyte) [] &lt;code&gt;s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3ccaabc070a9022294c67f88e97e16710f31122" translate="yes" xml:space="preserve">
          <source>immutable(ubyte)[] &lt;strong id=&quot;sanitize&quot;&gt;sanitize&lt;/strong&gt;()(immutable(ubyte)[] s);</source>
          <target state="translated">inmutable (ubyte) [] &lt;strong id=&quot;sanitize&quot;&gt;sanitize&lt;/strong&gt; () (inmutable (ubyte) [] s);</target>
        </trans-unit>
        <trans-unit id="0c9382cb6ef5d6c09599ba47d64104fd5e5a1e17" translate="yes" xml:space="preserve">
          <source>immutable/mutable aliasing</source>
          <target state="translated">inmutable/alineamiento inmutable</target>
        </trans-unit>
        <trans-unit id="ec97a3c91a8119810bdbe3f8d403ea229bd42f08" translate="yes" xml:space="preserve">
          <source>impcnvtab.d</source>
          <target state="translated">impcnvtab.d</target>
        </trans-unit>
        <trans-unit id="8f3d355870186e3887d4841ee60845702ac81df4" translate="yes" xml:space="preserve">
          <source>imphint.d</source>
          <target state="translated">imphint.d</target>
        </trans-unit>
        <trans-unit id="1ec43d88be8b5ec8e3eb2be56735a05b6d9adce8" translate="yes" xml:space="preserve">
          <source>implementation defined floating point value, for x86 it is 80 bit IEEE 754 extended real</source>
          <target state="translated">valor de punto flotante definido por la implementación,para x86 es 80 bit IEEE 754 real extendido</target>
        </trans-unit>
        <trans-unit id="3fdd748d0c1e7981b562688cf139cf18b5f2d30b" translate="yes" xml:space="preserve">
          <source>implements a simple loop.</source>
          <target state="translated">implementa un simple bucle.</target>
        </trans-unit>
        <trans-unit id="77c3ee0af0e723665b5fb506b25060dffdfd2679" translate="yes" xml:space="preserve">
          <source>implements saturating arithmetic, i.e. &lt;code&gt;Checked!(int, Saturate)&lt;/code&gt; &quot;stops&quot; at &lt;code&gt;int.max&lt;/code&gt; for all operations that would cause an &lt;code&gt;int&lt;/code&gt; to overflow toward infinity, and at &lt;code&gt;int.min&lt;/code&gt; for all operations that would correspondingly overflow toward negative infinity.</source>
          <target state="translated">implementa aritm&amp;eacute;tica de saturaci&amp;oacute;n, es decir, &lt;code&gt;Checked!(int, Saturate)&lt;/code&gt; &quot;se detiene&quot; en &lt;code&gt;int.max&lt;/code&gt; para todas las operaciones que causar&amp;iacute;an que un &lt;code&gt;int&lt;/code&gt; se desborde hacia el infinito, y en &lt;code&gt;int.min&lt;/code&gt; para todas las operaciones que se desbordar&amp;iacute;an en consecuencia hacia el infinito negativo.</target>
        </trans-unit>
        <trans-unit id="baffffc9fcb4755e746b2241c6dcfce0d0ea125c" translate="yes" xml:space="preserve">
          <source>implicitly convertible to &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">impl&amp;iacute;citamente convertible a &lt;code&gt;T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="470cec587602b47395a317eb72d14272f9628412" translate="yes" xml:space="preserve">
          <source>implies</source>
          <target state="translated">implies</target>
        </trans-unit>
        <trans-unit id="62fdfbd55d19b2a4671102ad7bca17d875f8207a" translate="yes" xml:space="preserve">
          <source>import</source>
          <target state="translated">import</target>
        </trans-unit>
        <trans-unit id="53355f5de410fb9f73b7dfd453feaf43abdd7265" translate="yes" xml:space="preserve">
          <source>import to add</source>
          <target state="translated">importar para añadir</target>
        </trans-unit>
        <trans-unit id="60ff0eb6aa767acbe6b702b41d824a93a44955f7" translate="yes" xml:space="preserve">
          <source>imports module C, names from C will be visible in A as well.</source>
          <target state="translated">importa el módulo C,los nombres de C serán visibles en A también.</target>
        </trans-unit>
        <trans-unit id="128d23a4328316363b5bb939c029111d22954419" translate="yes" xml:space="preserve">
          <source>in case one is not supplied.</source>
          <target state="translated">en caso de que uno no sea suministrado.</target>
        </trans-unit>
        <trans-unit id="9b798f98de8eb5d8987f1eeb815717af61c9472c" translate="yes" xml:space="preserve">
          <source>in contracts</source>
          <target state="translated">en los contratos</target>
        </trans-unit>
        <trans-unit id="b2bf53e83640ecba1082df5cb9098f9852dbe084" translate="yes" xml:space="preserve">
          <source>in effect (e.g. PDT). It is not necessarily unique.</source>
          <target state="translated">en efecto (por ejemplo,PDT).No es necesariamente único.</target>
        </trans-unit>
        <trans-unit id="a3be98fcab703a9b8ea8f7dc132cdf883b684aa1" translate="yes" xml:space="preserve">
          <source>in effect (e.g. PST). It is not necessarily unique.</source>
          <target state="translated">en efecto (por ejemplo,PST).No es necesariamente único.</target>
        </trans-unit>
        <trans-unit id="898a4a4c55553252311858d771b398b8cd82c2d1" translate="yes" xml:space="preserve">
          <source>in the following ways:</source>
          <target state="translated">de las siguientes maneras:</target>
        </trans-unit>
        <trans-unit id="2dcb288726695a7ad42e4bd4969d411dc47a3941" translate="yes" xml:space="preserve">
          <source>in the parent process when this function returns. See the &lt;a href=&quot;#Config&quot;&gt;&lt;code&gt;Config&lt;/code&gt;&lt;/a&gt; documentation below for information about how to disable this behaviour.  Beware of buffering issues when passing &lt;code&gt;File&lt;/code&gt; objects to &lt;code&gt;spawnProcess&lt;/code&gt;. The child process will inherit the low-level raw read/write offset associated with the underlying file descriptor, but it will not be aware of any buffered data. In cases where this matters (e.g. when a file should be aligned before being passed on to the child process), it may be a good idea to use unbuffered streams, or at least ensure all relevant buffers are flushed.</source>
          <target state="translated">en el proceso padre cuando esta funci&amp;oacute;n vuelve. Consulte la documentaci&amp;oacute;n de &lt;a href=&quot;#Config&quot;&gt; &lt;code&gt;Config&lt;/code&gt; &lt;/a&gt; continuaci&amp;oacute;n para obtener informaci&amp;oacute;n sobre c&amp;oacute;mo deshabilitar este comportamiento. Tenga cuidado con los problemas de almacenamiento en b&amp;uacute;fer al pasar objetos de &lt;code&gt;File&lt;/code&gt; a &lt;code&gt;spawnProcess&lt;/code&gt; . El proceso secundario heredar&amp;aacute; el desplazamiento de lectura / escritura sin formato de bajo nivel asociado con el descriptor de archivo subyacente, pero no tendr&amp;aacute; conocimiento de ning&amp;uacute;n dato almacenado en el b&amp;uacute;fer. En los casos en que esto sea importante (p. Ej., Cuando un archivo debe alinearse antes de pasarlo al proceso secundario), puede ser una buena idea usar secuencias sin b&amp;uacute;fer, o al menos garantizar que se vac&amp;iacute;en todos los b&amp;uacute;feres relevantes.</target>
        </trans-unit>
        <trans-unit id="1069ab4840867e88a6bb1b09a3c006f02e0c48a8" translate="yes" xml:space="preserve">
          <source>in this documentation. The store contains a reference count and the &lt;code&gt;T&lt;/code&gt; payload. &lt;code&gt;RefCounted&lt;/code&gt; uses &lt;code&gt;malloc&lt;/code&gt; to allocate the store. As instances of &lt;code&gt;RefCounted&lt;/code&gt; are copied or go out of scope, they will automatically increment or decrement the reference count. When the reference count goes down to zero, &lt;code&gt;RefCounted&lt;/code&gt; will call &lt;code&gt;destroy&lt;/code&gt; against the payload and call &lt;code&gt;free&lt;/code&gt; to deallocate the store. If the &lt;code&gt;T&lt;/code&gt; payload contains any references to GC-allocated memory, then &lt;code&gt;RefCounted&lt;/code&gt; will add it to the GC memory that is scanned for pointers, and remove it from GC scanning before &lt;code&gt;free&lt;/code&gt; is called on the store.</source>
          <target state="translated">en esta documentaci&amp;oacute;n La tienda contiene un recuento de referencia y la carga &amp;uacute;til &lt;code&gt;T&lt;/code&gt; . &lt;code&gt;RefCounted&lt;/code&gt; usa &lt;code&gt;malloc&lt;/code&gt; para asignar la tienda. A medida que las instancias de &lt;code&gt;RefCounted&lt;/code&gt; se copien o salgan del alcance, aumentar&amp;aacute;n o disminuir&amp;aacute;n autom&amp;aacute;ticamente el recuento de referencias. Cuando el recuento de referencia baja a cero, &lt;code&gt;RefCounted&lt;/code&gt; llamar&amp;aacute; a &lt;code&gt;destroy&lt;/code&gt; contra la carga &amp;uacute;til y llamar&amp;aacute; &lt;code&gt;free&lt;/code&gt; para desasignar la tienda. Si la carga &amp;uacute;til &lt;code&gt;T&lt;/code&gt; contiene alguna referencia a la memoria asignada al GC, &lt;code&gt;RefCounted&lt;/code&gt; la agregar&amp;aacute; a la memoria del GC que se escanea en busca de punteros y la eliminar&amp;aacute; del escaneo del GC antes de &lt;code&gt;free&lt;/code&gt; se llama en la tienda.</target>
        </trans-unit>
        <trans-unit id="9833a7e64647059a704bd66d93793602e87ea191" translate="yes" xml:space="preserve">
          <source>incPoolSize:N - pool size increment MB</source>
          <target state="translated">incPoolSize:N-incremento del tamaño de la piscina MB</target>
        </trans-unit>
        <trans-unit id="baf7cdc1a77ca6ceabe684f0d49bf7e39d4bcebf" translate="yes" xml:space="preserve">
          <source>include the conditional code</source>
          <target state="translated">incluyen el código condicional</target>
        </trans-unit>
        <trans-unit id="15ed38e737b7811718cbf9d21ef10a05fa65da52" translate="yes" xml:space="preserve">
          <source>incompatible sizes which may cause argument misalignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702ca8a9a9244d13777a48fe3ca678c2c49ccb3d" translate="yes" xml:space="preserve">
          <source>indentation level</source>
          <target state="translated">nivel de indentación</target>
        </trans-unit>
        <trans-unit id="e540cdd1328b2b21e29a95405c301b9313b7c346" translate="yes" xml:space="preserve">
          <source>index</source>
          <target state="translated">index</target>
        </trans-unit>
        <trans-unit id="a62568a058e2edc549a96e8857c55b40051ac574" translate="yes" xml:space="preserve">
          <source>index of the field, or -1 if not found</source>
          <target state="translated">índice del campo,o -1 si no se encuentra</target>
        </trans-unit>
        <trans-unit id="4e87da4abe4f55c94728d867ebca8858a979c8bd" translate="yes" xml:space="preserve">
          <source>index one past end of UTF sequence (default: &lt;code&gt;str.length&lt;/code&gt;)</source>
          <target state="translated">indexar un extremo anterior de la secuencia UTF (predeterminado: &lt;code&gt;str.length&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5bf3c7bbeeedf1c1d02045c13320fd72e0a507e5" translate="yes" xml:space="preserve">
          <source>index variable</source>
          <target state="translated">variable de índice</target>
        </trans-unit>
        <trans-unit id="13af049687d9f44e507c4a33491393c71790dc17" translate="yes" xml:space="preserve">
          <source>indicates how deprecation diagnostics should be handled</source>
          <target state="translated">indica cómo se deben manejar los diagnósticos de depreciación</target>
        </trans-unit>
        <trans-unit id="d1050f345b312f95362a713d5ab1593ee43ddbd1" translate="yes" xml:space="preserve">
          <source>indicates type of proxy. accepted values are CURLPROXY_HTTP (default), CURLPROXY_SOCKS4, CURLPROXY_SOCKS4A and CURLPROXY_SOCKS5.</source>
          <target state="translated">indica el tipo de proxy.Los valores aceptados son CURLPROXY_HTTP (por defecto),CURLPROXY_SOCKS4,CURLPROXY_SOCKS4A y CURLPROXY_SOCKS5.</target>
        </trans-unit>
        <trans-unit id="39c184f424bbcca6f475ae046b4d4828967483e0" translate="yes" xml:space="preserve">
          <source>infinite range</source>
          <target state="translated">gama infinita</target>
        </trans-unit>
        <trans-unit id="875a0f26deb2709b4f647d835ac9c4e97144cf7c" translate="yes" xml:space="preserve">
          <source>infinity value</source>
          <target state="translated">valor infinito</target>
        </trans-unit>
        <trans-unit id="e92f9d0f1dfa780a17b18bf3eb2137b626903015" translate="yes" xml:space="preserve">
          <source>influence the inference of &lt;code&gt;pure&lt;/code&gt;, &lt;code&gt;@nogc&lt;/code&gt;, &lt;code&gt;nothrow&lt;/code&gt; and &lt;code&gt;@safe&lt;/code&gt; attributes.</source>
          <target state="translated">influir en la inferencia de &lt;code&gt;@nogc&lt;/code&gt; &lt;code&gt;pure&lt;/code&gt; , @nogc , &lt;code&gt;nothrow&lt;/code&gt; y &lt;code&gt;@safe&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59bd0a3ff43b32849b319e645d4798d8a5d1e889" translate="yes" xml:space="preserve">
          <source>info</source>
          <target state="translated">info</target>
        </trans-unit>
        <trans-unit id="b86ced6870c2e1378b024ab08749d586672a36ce" translate="yes" xml:space="preserve">
          <source>info about the certificate chain, only for OpenSSL builds. Asked for with CURLOPT_CERTINFO / CURLINFO_CERTINFO</source>
          <target state="translated">información sobre la cadena de certificados,sólo para construcciones de OpenSSL.Pedido con CURLOPT_CERTINFO/CURLINFO_CERTINFO</target>
        </trans-unit>
        <trans-unit id="fa819862fcdc2796d814228f95ef63a1b9524fe1" translate="yes" xml:space="preserve">
          <source>information about the field's callees</source>
          <target state="translated">información sobre los callejeros del campo</target>
        </trans-unit>
        <trans-unit id="1b47fce86d8a267023faafb7c9416161f47f143a" translate="yes" xml:space="preserve">
          <source>inherit the parent's environment. Its entire environment will then be determined by &lt;code&gt;env&lt;/code&gt;.</source>
          <target state="translated">heredar el entorno de los padres. Todo su entorno estar&amp;aacute; determinado por &lt;code&gt;env&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="966533b9cfd3e8fbdad4ac9a334416f0b32dc6c1" translate="yes" xml:space="preserve">
          <source>iniFile to parse imports from</source>
          <target state="translated">iniFile para analizar las importaciones de</target>
        </trans-unit>
        <trans-unit id="fd62812fbd9ec4c7f99aa4f6253fead2388eb238" translate="yes" xml:space="preserve">
          <source>init</source>
          <target state="translated">init</target>
        </trans-unit>
        <trans-unit id="f16f4e8015c01281692574d5f46ab9eae660cf79" translate="yes" xml:space="preserve">
          <source>init.d</source>
          <target state="translated">init.d</target>
        </trans-unit>
        <trans-unit id="d0445d7cf1e074fcebdf208a88df5674f3507f86" translate="yes" xml:space="preserve">
          <source>initReserve:N - initial memory to reserve in MB</source>
          <target state="translated">initReserve:N-memoria inicial a reservar en MB</target>
        </trans-unit>
        <trans-unit id="e939b5e7e2e0c55f88e7d0d53f11a69ac41cc84f" translate="yes" xml:space="preserve">
          <source>initial list of template arguments</source>
          <target state="translated">lista inicial de argumentos de la plantilla</target>
        </trans-unit>
        <trans-unit id="07d26302206ab3e1586db4d119bde36663d6cf87" translate="yes" xml:space="preserve">
          <source>initial state of the signal</source>
          <target state="translated">estado inicial de la señal</target>
        </trans-unit>
        <trans-unit id="44d847cec8e66300b699672c99b31d21ba8a8adb" translate="yes" xml:space="preserve">
          <source>initialization (treated as assignment)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736bd3c03459d8671b775d1991923c2d770573e9" translate="yes" xml:space="preserve">
          <source>initialization of a static variable or a &lt;a href=&quot;enum#manifest_constants&quot;&gt;manifest constant&lt;/a&gt;</source>
          <target state="translated">inicializaci&amp;oacute;n de una variable est&amp;aacute;tica o una &lt;a href=&quot;enum#manifest_constants&quot;&gt;constante manifiesta&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1e5671576679c9c26af5735e25a3cc5651ae1d4" translate="yes" xml:space="preserve">
          <source>initializer</source>
          <target state="translated">initializer</target>
        </trans-unit>
        <trans-unit id="3cec2809ffb9b6a7a799f970bce0836147fcd6b9" translate="yes" xml:space="preserve">
          <source>initializer (NaN)</source>
          <target state="translated">inicializador (NaN)</target>
        </trans-unit>
        <trans-unit id="71faa78f18eaf317ee92455bbdfd7aabb5ecd658" translate="yes" xml:space="preserve">
          <source>initializer for param</source>
          <target state="translated">inicializador para param</target>
        </trans-unit>
        <trans-unit id="b87577f8cb46ccea4dc7aae59c3715e56e9c8a4d" translate="yes" xml:space="preserve">
          <source>initializer for parameter</source>
          <target state="translated">inicializador para el parámetro</target>
        </trans-unit>
        <trans-unit id="97dbef62f48f3c0adea4c6ecbf448bce5868c7ff" translate="yes" xml:space="preserve">
          <source>initializer if there is one, null if not, ErrorExp if error</source>
          <target state="translated">inicializador si hay uno,nulo si no,ErrorExp si error</target>
        </trans-unit>
        <trans-unit id="6f36cb5ff5ef1328ecb813b297ebca3faef915f0" translate="yes" xml:space="preserve">
          <source>initiate a GC cycle or free any GC memory. If &lt;code&gt;initialize&lt;/code&gt; is supplied &lt;code&gt;false&lt;/code&gt;, the object is considered invalid after destruction, and should not be referenced.</source>
          <target state="translated">iniciar un ciclo de GC o liberar cualquier memoria de GC. Si &lt;code&gt;initialize&lt;/code&gt; se suministra como &lt;code&gt;false&lt;/code&gt; , el objeto se considera inv&amp;aacute;lido despu&amp;eacute;s de la destrucci&amp;oacute;n y no debe ser referenciado.</target>
        </trans-unit>
        <trans-unit id="cf02c4dba8d7dac7e4f760f9ca5d02f8de1bb2fc" translate="yes" xml:space="preserve">
          <source>initiates</source>
          <target state="translated">initiates</target>
        </trans-unit>
        <trans-unit id="c3c1067a71bd527865a258bf2a1f50fe22b06ff6" translate="yes" xml:space="preserve">
          <source>inititalize multi-style curl usage</source>
          <target state="translated">Iniciar el uso de rizos de estilo múltiple</target>
        </trans-unit>
        <trans-unit id="67bec8491699b47ab27671cc9e60960746684825" translate="yes" xml:space="preserve">
          <source>initsem.d</source>
          <target state="translated">initsem.d</target>
        </trans-unit>
        <trans-unit id="8be5809bd27d3694002679854238936aeb577058" translate="yes" xml:space="preserve">
          <source>inline asm statement</source>
          <target state="translated">declaración del asm en línea</target>
        </trans-unit>
        <trans-unit id="001b128f1d44ce51c8197c5d3b4405d632e96784" translate="yes" xml:space="preserve">
          <source>inline.d</source>
          <target state="translated">inline.d</target>
        </trans-unit>
        <trans-unit id="a2f6c13cbc564da832ade97badacf5f7559e86c1" translate="yes" xml:space="preserve">
          <source>inlineScan is running</source>
          <target state="translated">inlineScan está funcionando</target>
        </trans-unit>
        <trans-unit id="317f09eac8dfee7a665bacecae7d86c96a249d09" translate="yes" xml:space="preserve">
          <source>inlinecost.d</source>
          <target state="translated">inlinecost.d</target>
        </trans-unit>
        <trans-unit id="8fd138f0fdb5c410cfee13c929e5c39dd18a438b" translate="yes" xml:space="preserve">
          <source>inner context</source>
          <target state="translated">contexto interno</target>
        </trans-unit>
        <trans-unit id="f7ccaa1e5aaf562712375f83aa9888fb8e173592" translate="yes" xml:space="preserve">
          <source>inout @property auto &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt;(uint index)()</source>
          <target state="translated">inout @property auto &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt; (&amp;iacute;ndice uint) ()</target>
        </trans-unit>
        <trans-unit id="4ad2929d061210f0400c1e9d1d1e4de60684eb01" translate="yes" xml:space="preserve">
          <source>inout @property auto &lt;strong id=&quot;save&quot;&gt;save&lt;/strong&gt;();</source>
          <target state="translated">inout @property auto &lt;strong id=&quot;save&quot;&gt;save&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="022ce4d7f3feed39445f097d8275daf48b46dfb6" translate="yes" xml:space="preserve">
          <source>inout @property inout(Captures!R) &lt;strong id=&quot;captures&quot;&gt;captures&lt;/strong&gt;();</source>
          <target state="translated">inout @property inout (Captures! R) &lt;strong id=&quot;captures&quot;&gt;captures&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="e8a3145eaf5ce4c0359b452a9fa2a1f579954399" translate="yes" xml:space="preserve">
          <source>inout @property inout(Captures!R) &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt;();</source>
          <target state="translated">inout @property inout (Captures! R) &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="300ca694152cfbd75c436e427416cc63226285c8" translate="yes" xml:space="preserve">
          <source>inout @property inout(ElementEncodingType!A)[] &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;();</source>
          <target state="translated">inout @property inout (ElementEncodingType! A) [] &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="b4b44a834bb21e01c9483ca488614c1221d9860a" translate="yes" xml:space="preserve">
          <source>inout @property inout(T) &lt;strong id=&quot;back&quot;&gt;back&lt;/strong&gt;();</source>
          <target state="translated">inout @property inout (T) &lt;strong id=&quot;back&quot;&gt;back&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="897029f898cb6fe6208622c1cafd60ee2e153e65" translate="yes" xml:space="preserve">
          <source>inout @property inout(T) &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt;();</source>
          <target state="translated">inout @property inout (T) &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="348ef4d4d420549f027b6a1241f24b464d5e0723" translate="yes" xml:space="preserve">
          <source>inout @property inout(T) &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt;(T)();</source>
          <target state="translated">inout @property inout (T) &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt; (T) ();</target>
        </trans-unit>
        <trans-unit id="c7555526e0f4e23fd7b856443d20a4c59d6226de" translate="yes" xml:space="preserve">
          <source>inout @property inout(T)* &lt;strong id=&quot;peek&quot;&gt;peek&lt;/strong&gt;(T)();</source>
          <target state="translated">inout @property inout (T) * &lt;strong id=&quot;peek&quot;&gt;vistazo&lt;/strong&gt; (T) ();</target>
        </trans-unit>
        <trans-unit id="b7d4a4c8722ce44efead93fbf1d3dbd22abc5e8a" translate="yes" xml:space="preserve">
          <source>inout @property ref @trusted inout(Tuple!(sliceSpecs!(from, to))) &lt;strong id=&quot;slice&quot;&gt;slice&lt;/strong&gt;(size_t from, size_t to)()</source>
          <target state="translated">inout @property ref @trusted inout (Tuple! (sliceSpecs! (from, to))) &lt;strong id=&quot;slice&quot;&gt;slice&lt;/strong&gt; (size_t from, size_t to) ()</target>
        </trans-unit>
        <trans-unit id="b9149913e025e0876ccf65cf9b158fd95ee35a01" translate="yes" xml:space="preserve">
          <source>inout @property ref inout(T) &lt;strong id=&quot;back&quot;&gt;back&lt;/strong&gt;();</source>
          <target state="translated">inout @property ref inout (T) &lt;strong id=&quot;back&quot;&gt;back&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="d4608e199ba0212dcff18544e9edae1742c8b8d3" translate="yes" xml:space="preserve">
          <source>inout @property ref inout(T) &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt;();</source>
          <target state="translated">inout @property ref inout (T) &lt;strong id=&quot;front&quot;&gt;frente&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="5274c93d6ed756597044304e727061d96261ba99" translate="yes" xml:space="preserve">
          <source>inout @property ref inout(T) &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt;();</source>
          <target state="translated">inout @property ref inout (T) &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="120496e5362c70be8ff2eceb96864ef52234db5a" translate="yes" xml:space="preserve">
          <source>inout @safe inout(T)* &lt;strong id=&quot;data&quot;&gt;data&lt;/strong&gt;();</source>
          <target state="translated">inout @safe inout (T) * &lt;strong id=&quot;data&quot;&gt;datos&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="fe691c02e44a276983dc51c54edbcb9a0de7b2af" translate="yes" xml:space="preserve">
          <source>inout auto &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt;();</source>
          <target state="translated">inout auto &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="0b648835c90fc9621089aaaf431ab17ccfe17e9f" translate="yes" xml:space="preserve">
          <source>inout auto &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;(size_t, DollarToken);</source>
          <target state="translated">inout auto &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt; (size_t, DollarToken);</target>
        </trans-unit>
        <trans-unit id="a9fd73c2b1edbd50155d0a9043b07294485d9c76" translate="yes" xml:space="preserve">
          <source>inout const pure @property @safe inout(T) &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt;(T)();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e453d045705a6ca359ba8be05aae505968412405" translate="yes" xml:space="preserve">
          <source>inout inout(AggregateDeclaration) &lt;strong id=&quot;isThis&quot;&gt;isThis&lt;/strong&gt;();</source>
          <target state="translated">inout inout (Declaraci&amp;oacute;n agregada) &lt;strong id=&quot;isThis&quot;&gt;isThis&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="d5b9090c5c9adfb7b2afe91e6a0b8e1db2b1f1c9" translate="yes" xml:space="preserve">
          <source>inout inout(R) &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;()(size_t i);</source>
          <target state="translated">inout inout (R) &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt; () (size_t i);</target>
        </trans-unit>
        <trans-unit id="f9a5ef0231af058f7c5a0bee207ed99440e9a0d2" translate="yes" xml:space="preserve">
          <source>inout inout(T) &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;(size_t);</source>
          <target state="translated">inout inout (T) &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt; (size_t);</target>
        </trans-unit>
        <trans-unit id="a599d7903129e23baab2025643f86141306ef6bd" translate="yes" xml:space="preserve">
          <source>inout inout(Variant) &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;(K)(K i);</source>
          <target state="translated">inout inout (Variante) &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt; (K) (K i);</target>
        </trans-unit>
        <trans-unit id="10aef8af5c8a9ca3c0829815dc7afe7d83f7e7fc" translate="yes" xml:space="preserve">
          <source>inout nothrow @property ref @safe inout(RefCountedStore) &lt;strong id=&quot;refCountedStore&quot;&gt;refCountedStore&lt;/strong&gt;();</source>
          <target state="translated">inout nothrow @property ref @safe inout (RefCountedStore) &lt;strong id=&quot;refCountedStore&quot;&gt;refCountedStore&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="80aecb6a3e378baea83dd8aaa33d4f986c7beee5" translate="yes" xml:space="preserve">
          <source>inout nothrow @trusted inout(T)[] &lt;strong id=&quot;as_array&quot;&gt;as_array&lt;/strong&gt;();</source>
          <target state="translated">inout nothrow @trusted inout (T) [] &lt;strong id=&quot;as_array&quot;&gt;as_array&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="2ec69784f9ae240cd0db70b7b55fe8a5e09b0f41" translate="yes" xml:space="preserve">
          <source>inout nothrow ref @safe inout(T) &lt;strong id=&quot;back&quot;&gt;back&lt;/strong&gt;();</source>
          <target state="translated">inout nothrow ref @safe inout (T) &lt;strong id=&quot;back&quot;&gt;atr&amp;aacute;s&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="af3a58ce54f8bad311da8c3430226dfacc5d2440" translate="yes" xml:space="preserve">
          <source>inout nothrow ref @safe inout(T) &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt;();</source>
          <target state="translated">inout nothrow ref @safe inout (T) &lt;strong id=&quot;front&quot;&gt;frente&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="7c6517f408daed95c5812042e3fb53fb3c63235c" translate="yes" xml:space="preserve">
          <source>inout nothrow ref @trusted inout(T) &lt;strong id=&quot;at&quot;&gt;at&lt;/strong&gt;(size_type i);</source>
          <target state="translated">inout nothrow ref @trusted inout (T) &lt;strong id=&quot;at&quot;&gt;en&lt;/strong&gt; (size_type i);</target>
        </trans-unit>
        <trans-unit id="ab91d823df07c015b1a32ceec7941f82135cccf4" translate="yes" xml:space="preserve">
          <source>inout pure @property @trusted inout(JSONValue[]) &lt;strong id=&quot;arrayNoRef&quot;&gt;arrayNoRef&lt;/strong&gt;();</source>
          <target state="translated">inout pure @property @trusted inout (JSONValue []) &lt;strong id=&quot;arrayNoRef&quot;&gt;arrayNoRef&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="195c1960a604ca96a6a615d7304ec9dd7c95e2d8" translate="yes" xml:space="preserve">
          <source>inout pure @property @trusted inout(JSONValue[string]) &lt;strong id=&quot;objectNoRef&quot;&gt;objectNoRef&lt;/strong&gt;();</source>
          <target state="translated">inout pure @property @trusted inout (JSONValue [cadena]) &lt;strong id=&quot;objectNoRef&quot;&gt;objectNoRef&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="9660ff9af5cb6242bc88a2e461b74459ceb11145" translate="yes" xml:space="preserve">
          <source>inout pure @property @trusted inout(T) &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt;(T : JSONValue[string])();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83b13e60af3cfedb6d2803bc92c944c006fdda0" translate="yes" xml:space="preserve">
          <source>inout pure @property ref @system inout(JSONValue[]) &lt;strong id=&quot;array&quot;&gt;array&lt;/strong&gt;();</source>
          <target state="translated">inout pure @property ref @system inout (JSONValue []) &lt;strong id=&quot;array&quot;&gt;array&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="bdcc7ba8e001dba66bb1f1b214bea7dcef86c7d4" translate="yes" xml:space="preserve">
          <source>inout pure @property ref @system inout(JSONValue[string]) &lt;strong id=&quot;object&quot;&gt;object&lt;/strong&gt;();</source>
          <target state="translated">inout pure @property ref @system inout (JSONValue [string]) &lt;strong id=&quot;object&quot;&gt;object&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="5015d9de25a4231cfbe7adf5c7bd0467bf804974" translate="yes" xml:space="preserve">
          <source>inout pure nothrow @nogc @property inout(TypeInfo) &lt;strong id=&quot;next&quot;&gt;next&lt;/strong&gt;();</source>
          <target state="translated">inout pure nothrow @nogc @property inout (TypeInfo) &lt;strong id=&quot;next&quot;&gt;next&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="0559629882ce5f9ab84a58ba3ea008bba894e70f" translate="yes" xml:space="preserve">
          <source>inout pure nothrow @nogc @property ref @safe inout(T) &lt;strong id=&quot;refCountedPayload&quot;&gt;refCountedPayload&lt;/strong&gt;() return;</source>
          <target state="translated">inout pure nothrow @nogc @property ref @safe inout (T) &lt;strong id=&quot;refCountedPayload&quot;&gt;refCountedPayload&lt;/strong&gt; () return;</target>
        </trans-unit>
        <trans-unit id="4e99fd29860e673951ce75ff1febc47d266cf8a7" translate="yes" xml:space="preserve">
          <source>inout pure nothrow @nogc @property scope @safe inout(Throwable) &lt;strong id=&quot;next&quot;&gt;next&lt;/strong&gt;() return;</source>
          <target state="translated">inout pure nothrow @nogc @property scope @safe inout (Throwable) &lt;strong id=&quot;next&quot;&gt;next&lt;/strong&gt; () return;</target>
        </trans-unit>
        <trans-unit id="aa344b34972b0c01fa365638e75c8bde1692a8a4" translate="yes" xml:space="preserve">
          <source>inout pure nothrow @nogc @safe inout(T)[] &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;();</source>
          <target state="translated">inout pure nothrow @nogc @safe inout (T) [] &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="c483e1aaa02beb88ac7d342d07b8f5b909a16b0c" translate="yes" xml:space="preserve">
          <source>inout pure nothrow @nogc @safe inout(T)[] &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;(size_t[2] slice);</source>
          <target state="translated">inout pure nothrow @nogc @safe inout (T) [] &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt; (size_t [2] slice);</target>
        </trans-unit>
        <trans-unit id="141e5b34c27a061e0e0007e2fc82a7b3244e0fff" translate="yes" xml:space="preserve">
          <source>inout pure nothrow @nogc inout(ReturnStatement) &lt;strong id=&quot;endsWithReturnStatement&quot;&gt;endsWithReturnStatement&lt;/strong&gt;();</source>
          <target state="translated">inout pure nothrow @nogc inout (ReturnStatement) &lt;strong id=&quot;endsWithReturnStatement&quot;&gt;termina con WithReturnStatement&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="8a28918fecd1b1dde4681d2f08b5543803c359ec" translate="yes" xml:space="preserve">
          <source>inout pure nothrow @nogc inout(size_t)[] &lt;strong id=&quot;opCast&quot;&gt;opCast&lt;/strong&gt;(T : const(size_t[]))();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a1fabe665e6252b57b7c8f084e6c95d30e6638" translate="yes" xml:space="preserve">
          <source>inout pure nothrow @nogc inout(void)[] &lt;strong id=&quot;opCast&quot;&gt;opCast&lt;/strong&gt;(T : const(void[]))();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82836b8beb50bff0132fa1533e5dc3bb378a4d41" translate="yes" xml:space="preserve">
          <source>inout pure nothrow @nogc ref @safe inout(T) &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;(size_t index);</source>
          <target state="translated">inout pure nothrow @nogc ref @safe inout (T) &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt; (size_t index);</target>
        </trans-unit>
        <trans-unit id="29109c821d096a714684ae8a68f66c385ed98517" translate="yes" xml:space="preserve">
          <source>inout pure nothrow @property @safe auto &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt;(U)(inout(U) fallback);</source>
          <target state="translated">inout pure nothrow @property @safe auto &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt; (U) (retroceso inout (U));</target>
        </trans-unit>
        <trans-unit id="73e77ee8378bb7e38346ec02559cbe62935cfecc" translate="yes" xml:space="preserve">
          <source>inout pure nothrow @property @safe inout(R*) &lt;strong id=&quot;ptr&quot;&gt;ptr&lt;/strong&gt;();</source>
          <target state="translated">inout pure nothrow @property @safe inout (R *) &lt;strong id=&quot;ptr&quot;&gt;ptr&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="11135b2297ad46bcb49ad01224ce6201cbb472dd" translate="yes" xml:space="preserve">
          <source>inout pure nothrow @property @safe inout(T) &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt;()(inout(T) fallback);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e251552ea6c941852d38e0457b8cb9658fbaf6a6" translate="yes" xml:space="preserve">
          <source>inout pure nothrow @property @trusted inout(ElementEncodingType!A)[] &lt;strong id=&quot;data&quot;&gt;data&lt;/strong&gt;();</source>
          <target state="translated">inout pure nothrow @property @trusted inout (ElementEncodingType! A) [] &lt;strong id=&quot;data&quot;&gt;data&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="47f847ff2e8c835ecb2e9efabb7be5cecbd0543f" translate="yes" xml:space="preserve">
          <source>inout pure nothrow @property @trusted inout(ElementEncodingType!A)[] &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;();</source>
          <target state="translated">inout pure nothrow @property @trusted inout (ElementEncodingType! A) [] &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="de4e2267900d4a25090234c2fedca8ec716d8d03" translate="yes" xml:space="preserve">
          <source>inout pure nothrow @property ref @safe inout(T) &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt;();</source>
          <target state="translated">inout pure nothrow @property ref @safe inout (T) &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="fd66138682c9855265ee69dc9fcd0199dad9e46f" translate="yes" xml:space="preserve">
          <source>inout pure nothrow inout(Statement) &lt;strong id=&quot;last&quot;&gt;last&lt;/strong&gt;();</source>
          <target state="translated">inout pure nothrow inout (Declaraci&amp;oacute;n) &lt;strong id=&quot;last&quot;&gt;last&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="e73faa5c3a27bcd2f47ee0833f3f4d07ce0e7863" translate="yes" xml:space="preserve">
          <source>inout pure nothrow scope @safe inout(ubyte)[] &lt;strong id=&quot;toBytes&quot;&gt;toBytes&lt;/strong&gt;();</source>
          <target state="translated">inout pure nothrow scope @safe inout (ubyte) [] &lt;strong id=&quot;toBytes&quot;&gt;toBytes&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="62abc8652e56b3a712a765e8ba02facf890ff031" translate="yes" xml:space="preserve">
          <source>inout pure ref @safe inout(JSONValue) &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;(size_t i);</source>
          <target state="translated">inout pure ref @safe inout (JSONValue) &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt; (size_t i);</target>
        </trans-unit>
        <trans-unit id="3211253a3afdd4d1e43ba8b25e0727ce91ead043" translate="yes" xml:space="preserve">
          <source>inout pure ref @safe inout(JSONValue) &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;(string k);</source>
          <target state="translated">inout pure ref @safe inout (JSONValue) &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt; (cadena k);</target>
        </trans-unit>
        <trans-unit id="212e4d97c9b54b795433d99b2fb606fd193e57c5" translate="yes" xml:space="preserve">
          <source>inout ref @safe inout(T) &lt;strong id=&quot;at&quot;&gt;at&lt;/strong&gt;(size_type i);</source>
          <target state="translated">inout ref @safe inout (T) &lt;strong id=&quot;at&quot;&gt;en&lt;/strong&gt; (size_type i);</target>
        </trans-unit>
        <trans-unit id="cbf5825322e222cbf1437d59a4665fb01b1d4b06" translate="yes" xml:space="preserve">
          <source>inout ref @safe inout(T) &lt;strong id=&quot;back&quot;&gt;back&lt;/strong&gt;();</source>
          <target state="translated">inout ref @safe inout (T) &lt;strong id=&quot;back&quot;&gt;atr&amp;aacute;s&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="3a7a1a04b388ce504e842ddd26cd2bd952a2ec65" translate="yes" xml:space="preserve">
          <source>inout ref @safe inout(T) &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt;();</source>
          <target state="translated">inout ref @safe inout (T) &lt;strong id=&quot;front&quot;&gt;frente&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="8c4b2c1c4cb477021a55cd87777019310208d72b" translate="yes" xml:space="preserve">
          <source>inout ref @safe inout(T)[N] &lt;strong id=&quot;as_array&quot;&gt;as_array&lt;/strong&gt;();</source>
          <target state="translated">inout ref @safe inout (T) [N] &lt;strong id=&quot;as_array&quot;&gt;as_array&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="464d45bc5cd25457ac95b0a963f1a84cc41921a3" translate="yes" xml:space="preserve">
          <source>inout ref auto &lt;strong id=&quot;rename&quot;&gt;rename&lt;/strong&gt;(alias translate)()</source>
          <target state="translated">inout ref auto &lt;strong id=&quot;rename&quot;&gt;rename&lt;/strong&gt; (alias translate) ()</target>
        </trans-unit>
        <trans-unit id="29c92edbf1ceafe83bcdd0115bd01a3749afab65" translate="yes" xml:space="preserve">
          <source>inout ref auto &lt;strong id=&quot;rename&quot;&gt;rename&lt;/strong&gt;(names...)() return</source>
          <target state="translated">inout ref auto &lt;strong id=&quot;rename&quot;&gt;rename&lt;/strong&gt; (nombres ...) () return</target>
        </trans-unit>
        <trans-unit id="361554c9b1b107ea831c75b15f0f0eb26759dd1d" translate="yes" xml:space="preserve">
          <source>inout ref inout(Alloc) &lt;strong id=&quot;get_allocator&quot;&gt;get_allocator&lt;/strong&gt;();</source>
          <target state="translated">inout ref inout (Alloc) &lt;strong id=&quot;get_allocator&quot;&gt;get_allocator&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="fd2cf6eb671db21e9484ffab1ba6bd8c5a9a0133" translate="yes" xml:space="preserve">
          <source>inout ref inout(T) &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;(size_t i);</source>
          <target state="translated">inout ref inout (T) &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt; (size_t i);</target>
        </trans-unit>
        <trans-unit id="f87da9b7383fe9a182e3997fc74696ad8f246823" translate="yes" xml:space="preserve">
          <source>inout this(T : JSONValue)(inout T arg);</source>
          <target state="translated">inout this(T:JSONValue)(inout T arg);</target>
        </trans-unit>
        <trans-unit id="1376e8c612a200941e62851acce35df1a3f7a228" translate="yes" xml:space="preserve">
          <source>inout this(inout T value);</source>
          <target state="translated">sin esto (sin valor T);</target>
        </trans-unit>
        <trans-unit id="5507adbe08ab8f4dff77d9f370b06f7cd4befce3" translate="yes" xml:space="preserve">
          <source>inout(Array!T)* &lt;code&gt;array&lt;/code&gt;</source>
          <target state="translated">inout (Array! T) * &lt;code&gt;array&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c589fd2b60666460a7cfe3af5018e5dc9331baaf" translate="yes" xml:space="preserve">
          <source>inout(C)[] &lt;strong id=&quot;normalize&quot;&gt;normalize&lt;/strong&gt;(NormalizationForm norm = NFC, C)(inout(C)[] input);</source>
          <target state="translated">inout (C) [] &lt;strong id=&quot;normalize&quot;&gt;normalize&lt;/strong&gt; (norma NormalizationForm = NFC, C) (entrada inout (C) []);</target>
        </trans-unit>
        <trans-unit id="7656a993e72e075e40a1c585e1019f4dcb6e3cbb" translate="yes" xml:space="preserve">
          <source>inout(Char)* &lt;code&gt;cString&lt;/code&gt;</source>
          <target state="translated">inout (Char) * &lt;code&gt;cString&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a72e7e4c0bbd029cd56fd594e33831052b250de" translate="yes" xml:space="preserve">
          <source>inout(Expression) &lt;strong id=&quot;firstComma&quot;&gt;firstComma&lt;/strong&gt;(inout Expression e);</source>
          <target state="translated">inout (Expresi&amp;oacute;n) &lt;strong id=&quot;firstComma&quot;&gt;firstComma&lt;/strong&gt; (inout Expresi&amp;oacute;n e);</target>
        </trans-unit>
        <trans-unit id="145be1800a90ec7ead29ac126bb16789a7a19618" translate="yes" xml:space="preserve">
          <source>inout(Expression) &lt;strong id=&quot;lastComma&quot;&gt;lastComma&lt;/strong&gt;(inout Expression e);</source>
          <target state="translated">inout (Expresi&amp;oacute;n) &lt;strong id=&quot;lastComma&quot;&gt;lastComma&lt;/strong&gt; (inout Expresi&amp;oacute;n e);</target>
        </trans-unit>
        <trans-unit id="4577b0dfcb0c79d0d27bcacd3a2931fffb041c10" translate="yes" xml:space="preserve">
          <source>inout(T) &lt;code&gt;fallback&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c3c2fa4bcb247f8537357f7664a3a8688e63dc" translate="yes" xml:space="preserve">
          <source>inout(T)[] &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">inout (T) [] &lt;code&gt;s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b8f40eb87c00aa005e87bed734601303df526d8" translate="yes" xml:space="preserve">
          <source>inout(T)[] &lt;strong id=&quot;replaceSlice&quot;&gt;replaceSlice&lt;/strong&gt;(T)(inout(T)[] s, in T[] slice, in T[] replacement);</source>
          <target state="translated">inout (T) [] &lt;strong id=&quot;replaceSlice&quot;&gt;replaceSlice&lt;/strong&gt; (T) (inout (T) [] s, en corte T [], en reemplazo T []);</target>
        </trans-unit>
        <trans-unit id="39310fd92807436c977157126eb2b9500eea6b1a" translate="yes" xml:space="preserve">
          <source>inout(Target) &lt;strong id=&quot;unwrap&quot;&gt;unwrap&lt;/strong&gt;(Target, Source)(inout Source src);</source>
          <target state="translated">inout (Target) &lt;strong id=&quot;unwrap&quot;&gt;desenvolver&lt;/strong&gt; (Target, Source) (inout Source src);</target>
        </trans-unit>
        <trans-unit id="636b5e43c5a790dac4ff70610bf9a11770581976" translate="yes" xml:space="preserve">
          <source>inout(U)&lt;code&gt;fallback&lt;/code&gt;</source>
          <target state="translated">inout(U)&lt;code&gt;fallback&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a59b156774b11bc99e57da7484b88e43dc4dc779" translate="yes" xml:space="preserve">
          <source>inout(V) &lt;code&gt;defaultValue&lt;/code&gt;</source>
          <target state="translated">inout (V) &lt;code&gt;defaultValue&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd3d33c44950afd95b00a7ad3f12cbe6dc1e7c8e" translate="yes" xml:space="preserve">
          <source>inout(V) &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt;(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue);</source>
          <target state="translated">inout (V) &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt; (K, V) (inout (V [K]) aa, tecla K, vago inout (V) defaultValue);</target>
        </trans-unit>
        <trans-unit id="d841ed5b660457a8db4df0ef650d6f24b26bbb7e" translate="yes" xml:space="preserve">
          <source>inout(V[K]) &lt;code&gt;aa&lt;/code&gt;</source>
          <target state="translated">inout (V [K]) &lt;code&gt;aa&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2fa01c74c341b9f34b1c89714d3660982a49f61" translate="yes" xml:space="preserve">
          <source>inout(void)* &lt;code&gt;p&lt;/code&gt;</source>
          <target state="translated">inout (nulo) * &lt;code&gt;p&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09f0716ae13962282772dc2cac21fc8863b2dcf9" translate="yes" xml:space="preserve">
          <source>inout(void)* &lt;strong id=&quot;_aaGetRvalueX&quot;&gt;_aaGetRvalueX&lt;/strong&gt;(inout AA aa, in TypeInfo keyti, in size_t valsz, in void* pkey);</source>
          <target state="translated">inout (void) * &lt;strong id=&quot;_aaGetRvalueX&quot;&gt;_aaGetRvalueX&lt;/strong&gt; (inout AA aa, en TypeInfo keyti, en size_t valsz, en void * pkey);</target>
        </trans-unit>
        <trans-unit id="66dc9b976181c723743878d018f90312b67c48d0" translate="yes" xml:space="preserve">
          <source>inout(void)* &lt;strong id=&quot;_aaGetRvalueX&quot;&gt;_aaGetRvalueX&lt;/strong&gt;(inout AA aa, scope const TypeInfo keyti, const size_t valsz, scope const void* pkey);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211c0e226d017cd0a747579ee006690e25ae8dd3" translate="yes" xml:space="preserve">
          <source>inout(void)* &lt;strong id=&quot;_aaInX&quot;&gt;_aaInX&lt;/strong&gt;(inout AA aa, in TypeInfo keyti, in void* pkey);</source>
          <target state="translated">inout (void) * &lt;strong id=&quot;_aaInX&quot;&gt;_aaInX&lt;/strong&gt; (inout AA aa, en TypeInfo keyti, en void * pkey);</target>
        </trans-unit>
        <trans-unit id="77d82b1103cd6e41d45faa18daf1d2d7a3752ab7" translate="yes" xml:space="preserve">
          <source>inout(void)* &lt;strong id=&quot;_aaInX&quot;&gt;_aaInX&lt;/strong&gt;(inout AA aa, scope const TypeInfo keyti, scope const void* pkey);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4868c25c7818c32ba4dcdb914b446ba0cd1a7dbf" translate="yes" xml:space="preserve">
          <source>input range</source>
          <target state="translated">Rango de entrada</target>
        </trans-unit>
        <trans-unit id="2e338045ab688cd7f7e34deff85bc24401f95545" translate="yes" xml:space="preserve">
          <source>input range of characters, or array of characters</source>
          <target state="translated">rango de entrada de caracteres,o matriz de caracteres</target>
        </trans-unit>
        <trans-unit id="f3f581a34d29fd359ecd9d4caefe4a2e6476e0ad" translate="yes" xml:space="preserve">
          <source>input string or bidirectional Range</source>
          <target state="translated">cadena de entrada o rango bidireccional</target>
        </trans-unit>
        <trans-unit id="6d9a9c665cf2995eda1979c0728d0859ea8752a4" translate="yes" xml:space="preserve">
          <source>input string or indexable Range</source>
          <target state="translated">cadena de entrada o rango indexable</target>
        </trans-unit>
        <trans-unit id="ec8de0a4c21cc7aeceacae68cc966c9cde83962c" translate="yes" xml:space="preserve">
          <source>input/output</source>
          <target state="translated">input/output</target>
        </trans-unit>
        <trans-unit id="689518e5ce8213a2d962432507179e2bd63fb897" translate="yes" xml:space="preserve">
          <source>insert characters fully lazily into a string</source>
          <target state="translated">insertar caracteres totalmente perezosos en una cadena</target>
        </trans-unit>
        <trans-unit id="e868329f617d225e265877ff599bd5c624141f54" translate="yes" xml:space="preserve">
          <source>instLoc location that the template is instantiated. tiargs[] actual arguments to template instance i i'th argument parameters[] template parameters dedtypes[] deduced arguments to template instance *psparam set to symbol declared and initialized to dedtypes[i]</source>
          <target state="translated">instLoc ubicación en la que la plantilla se instancia.tiargs[]argumentos reales a la instancia de la plantilla i i i'th argument parameters[]parámetros de la plantilla dedtypes[]argumentos deducidos a la instancia de la plantilla *psparam establecido a símbolo declarado e inicializado a dedtypes[i]</target>
        </trans-unit>
        <trans-unit id="ca514bb620a826c52a0cb4e930698af5b9dccde4" translate="yes" xml:space="preserve">
          <source>instance of ErrorExp</source>
          <target state="translated">ejemplo de ErrorExp</target>
        </trans-unit>
        <trans-unit id="2a16e57b5f3f2983f83086d956312e48a64a6710" translate="yes" xml:space="preserve">
          <source>instantiated expression</source>
          <target state="translated">expresión instanciada</target>
        </trans-unit>
        <trans-unit id="92078f068edb091d5abc268e85146050551bd81c" translate="yes" xml:space="preserve">
          <source>instantiating scope</source>
          <target state="translated">alcance de la instanciación</target>
        </trans-unit>
        <trans-unit id="1cfb6cf7b7357391bfe865c49bebaddd8fdfdead" translate="yes" xml:space="preserve">
          <source>instantiation location</source>
          <target state="translated">ubicación de la instanciación</target>
        </trans-unit>
        <trans-unit id="8fd629f60df839513be98322a1a210d3a695da1d" translate="yes" xml:space="preserve">
          <source>instantiation scope</source>
          <target state="translated">alcance de la instanciación</target>
        </trans-unit>
        <trans-unit id="392455c67e7f1707e1cec3abc2199eeb0205d81f" translate="yes" xml:space="preserve">
          <source>instantiation symbol</source>
          <target state="translated">símbolo de instanciación</target>
        </trans-unit>
        <trans-unit id="dccb10a6b2afc0961b7e7149fc86bad7e658f760" translate="yes" xml:space="preserve">
          <source>instruction when possible, this function is no faster than calculating cos(y) and sin(y) separately.</source>
          <target state="translated">cuando es posible,esta función no es más rápida que el cálculo de cos(y)y sin(y)por separado.</target>
        </trans-unit>
        <trans-unit id="8fa10f1f56bd2ac8e42e957802a990bdb9427c7f" translate="yes" xml:space="preserve">
          <source>insufficient number of arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="f432feba1468c878f9f8cac6c1ac3f73f247b105" translate="yes" xml:space="preserve">
          <source>int *psz</source>
          <target state="translated">int *psz</target>
        </trans-unit>
        <trans-unit id="053f5197645102670adc74a1df6456d4f6a3c5e7" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;charnum&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;charnum&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e64d998c6c12b79264ce14f23bfdb9c62a89d17" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;codePage&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;codePage&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5e478ba2bfb6858286b546532c799b0cc1f29a0" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;cost&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cost&lt;/code&gt; o int</target>
        </trans-unit>
        <trans-unit id="bfcb5e1e85846d3869b924f5751fdaba4d72fb2c" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;currMonth&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;currMonth&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ec0d8ffd9336b5555d2baecc78599fa69e84949" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;day&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;day&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="266e3ba184effee28f68ef7ee11a1b83169997e8" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;days&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;days&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c8461c419191c9b67a87c51c7ad5eb196994991" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;dim&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;dim&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d47026c93207f4ff133b79c3731b2b6aa14c5e4" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;fd&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39762ed244f8259614044c40f15c23b036c7485" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;flag&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;flag&lt;/code&gt; int</target>
        </trans-unit>
        <trans-unit id="eefb1a5c1b033403dcfad28133bb656adc106ef0" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;flags&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; int</target>
        </trans-unit>
        <trans-unit id="a15abd9fbadd49862eef8a452da9c2a50bfa91fc" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;handler&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;handler&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09453f270ffac2f41810282b18e20f0aecac1926" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;hour&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;hour&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1273a60326ddce6e1670192ea19eab5da5164ba9" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;indent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;indent&lt;/code&gt; int</target>
        </trans-unit>
        <trans-unit id="50c4c4f14bdfebdf604a348b1f9713eb5ade8391" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;interval&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;interval&lt;/code&gt; o int</target>
        </trans-unit>
        <trans-unit id="742d0c9cd84865521f6137538f056d168f84a151" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;intypeof&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;intypeof&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a80a518f5debd4918d0d6670a55635df18f33413" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;level&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;level&lt;/code&gt; int</target>
        </trans-unit>
        <trans-unit id="7a304cd8a76af4da35796f0e9449d11767646132" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;line&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;line&lt;/code&gt; int</target>
        </trans-unit>
        <trans-unit id="4a7f93f068352af46ea22008665b5df925c3c294" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;maxDepth&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;maxDepth&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94886344f390b9e360500cd705cb7fabe5da911c" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;minute&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;minute&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="75ebf0b20675c09d7009d8d1fe86e88994360965" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;mode&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; int</target>
        </trans-unit>
        <trans-unit id="d9166c3df3a133151352dee1357da84dcb26883d" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;month&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;month&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3581173bae3cebc4a345ea58d7e03621d8e42fb" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;months&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;months&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f950c560d286c74d3b897b0948f48e94dc88925" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;n&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;n&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c945a9a13a6f3105554cceb9ce092518acbe8603" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;origin&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;origin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="114fd438c8d60a57535fd1f4e340f03f510e236b" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;result&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;result&lt;/code&gt; ado int</target>
        </trans-unit>
        <trans-unit id="d89491f2b94596d56e73a30aec98895fdff0ac50" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;second&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;second&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="92505827ab14939b4fce84441f5911bad8decc02" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;status&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;status&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51c4c4f8f96b306704a73ca292f78f176bf91777" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;sz&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;sz&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5930cc35f258e035edc4f7974c5448fbadb1192" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;time&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;time&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3ff4b08322260bc095347a5ead7b10920c2d5e2" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;tynto&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;tynto&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c752f93639d90f3737c132424b8b8a3bc5dd35b6" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;tyto&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;tyto&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec1fa05817d904823998e4bf4c9e3a163c03bd1a" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;val&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;val&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea65be2c9fdaac2710df07644773b24c6e1a3138" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;value&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; int</target>
        </trans-unit>
        <trans-unit id="12db42fe0697881cdcce999f0e003e8ea8e50d53" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;ver&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;ver&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40241a269bd7301363d74f433fb32220678b4c90" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;winbits&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;winbits&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d7b438d7edb5403d81a268a26271383b6d5938c2" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8388230e060e278b30c0621cc4f60d81f6cca2f4" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af1934188b2e6eb44769faa2045708c601a444a5" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;year&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;year&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef60bd8da41d1d4d75c656711424ca417de43afd" translate="yes" xml:space="preserve">
          <source>int &lt;code&gt;years&lt;/code&gt;</source>
          <target state="translated">int &lt;code&gt;years&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0fd8ee32169f107db6fe419b742512233e53d928" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;RealIdentical&quot;&gt;RealIdentical&lt;/strong&gt;(real_t x1, real_t x2);</source>
          <target state="translated">int &lt;strong id=&quot;RealIdentical&quot;&gt;RealIdentical&lt;/strong&gt; (real_t x1, real_t x2);</target>
        </trans-unit>
        <trans-unit id="16080ff3f4f46aa5026902ae2f5689d421a0b3bd" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_Dmain&quot;&gt;_Dmain&lt;/strong&gt;(char[][]);</source>
          <target state="translated">int &lt;strong id=&quot;_Dmain&quot;&gt;_Dmain&lt;/strong&gt; (char [] []);</target>
        </trans-unit>
        <trans-unit id="c43485afe9764cb0dd3d0182adfb80ac5090428c" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplyRcw1&quot;&gt;_aApplyRcw1&lt;/strong&gt;(in char[] aa, dg_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplyRcw1&quot;&gt;_aApplyRcw1&lt;/strong&gt; (en char [] aa, dg_t dg);</target>
        </trans-unit>
        <trans-unit id="74e51f4ae14f2e04c71f8881c57e8d2b9e365140" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplyRcw2&quot;&gt;_aApplyRcw2&lt;/strong&gt;(in char[] aa, dg2_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplyRcw2&quot;&gt;_aApplyRcw2&lt;/strong&gt; (en char [] aa, dg2_t dg);</target>
        </trans-unit>
        <trans-unit id="2f44caddb599f7a630599dac70cfd7fcb8ea7ede" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplyRdc1&quot;&gt;_aApplyRdc1&lt;/strong&gt;(in dchar[] aa, dg_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplyRdc1&quot;&gt;_aApplyRdc1&lt;/strong&gt; (en dchar [] aa, dg_t dg);</target>
        </trans-unit>
        <trans-unit id="b20d49b94191fd2ce5798f4add70ed8aea17e395" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplyRdc2&quot;&gt;_aApplyRdc2&lt;/strong&gt;(in dchar[] aa, dg2_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplyRdc2&quot;&gt;_aApplyRdc2&lt;/strong&gt; (en dchar [] aa, dg2_t dg);</target>
        </trans-unit>
        <trans-unit id="a2ede26accb897b03171a20125c1d6a2212f55f9" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplyRdw1&quot;&gt;_aApplyRdw1&lt;/strong&gt;(in dchar[] aa, dg_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplyRdw1&quot;&gt;_aApplyRdw1&lt;/strong&gt; (en dchar [] aa, dg_t dg);</target>
        </trans-unit>
        <trans-unit id="06c488170900c13b1c0b52a096675d02f7dce68a" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplyRdw2&quot;&gt;_aApplyRdw2&lt;/strong&gt;(in dchar[] aa, dg2_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplyRdw2&quot;&gt;_aApplyRdw2&lt;/strong&gt; (en dchar [] aa, dg2_t dg);</target>
        </trans-unit>
        <trans-unit id="324884ec98e25167a936081c4c9bac20603790b2" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplyRwc1&quot;&gt;_aApplyRwc1&lt;/strong&gt;(in wchar[] aa, dg_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplyRwc1&quot;&gt;_aApplyRwc1&lt;/strong&gt; (en wchar [] aa, dg_t dg);</target>
        </trans-unit>
        <trans-unit id="bffbaa11e80e78192e1801122eaa6ec1bbfbf719" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplyRwc2&quot;&gt;_aApplyRwc2&lt;/strong&gt;(in wchar[] aa, dg2_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplyRwc2&quot;&gt;_aApplyRwc2&lt;/strong&gt; (en wchar [] aa, dg2_t dg);</target>
        </trans-unit>
        <trans-unit id="d674ca88ee117ee3101016cd14c83016951144af" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplyRwd1&quot;&gt;_aApplyRwd1&lt;/strong&gt;(in wchar[] aa, dg_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplyRwd1&quot;&gt;_aApplyRwd1&lt;/strong&gt; (en wchar [] aa, dg_t dg);</target>
        </trans-unit>
        <trans-unit id="d0e4e2f78593a8c2deda7cd014f40afa4553d717" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplyRwd2&quot;&gt;_aApplyRwd2&lt;/strong&gt;(in wchar[] aa, dg2_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplyRwd2&quot;&gt;_aApplyRwd2&lt;/strong&gt; (en wchar [] aa, dg2_t dg);</target>
        </trans-unit>
        <trans-unit id="2e2ccad6c9a28b9973c9ded77d950ad76c17b621" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplycw1&quot;&gt;_aApplycw1&lt;/strong&gt;(in char[] aa, dg_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplycw1&quot;&gt;_aApplycw1&lt;/strong&gt; (en char [] aa, dg_t dg);</target>
        </trans-unit>
        <trans-unit id="0edc39022978ee37d0550bd664c33f26a58071b6" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplycw2&quot;&gt;_aApplycw2&lt;/strong&gt;(in char[] aa, dg2_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplycw2&quot;&gt;_aApplycw2&lt;/strong&gt; (en char [] aa, dg2_t dg);</target>
        </trans-unit>
        <trans-unit id="a7ff747b520d2d37de5df7265be9e9fff108497f" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplydc1&quot;&gt;_aApplydc1&lt;/strong&gt;(in dchar[] aa, dg_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplydc1&quot;&gt;_aApplydc1&lt;/strong&gt; (en dchar [] aa, dg_t dg);</target>
        </trans-unit>
        <trans-unit id="42f97e4598f292345b0133895c783f3f7f9121e8" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplydc2&quot;&gt;_aApplydc2&lt;/strong&gt;(in dchar[] aa, dg2_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplydc2&quot;&gt;_aApplydc2&lt;/strong&gt; (en dchar [] aa, dg2_t dg);</target>
        </trans-unit>
        <trans-unit id="8d0664c6ed52558bc2eb1167b54db054600c39cf" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplydw1&quot;&gt;_aApplydw1&lt;/strong&gt;(in dchar[] aa, dg_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplydw1&quot;&gt;_aApplydw1&lt;/strong&gt; (en dchar [] aa, dg_t dg);</target>
        </trans-unit>
        <trans-unit id="4ea9e440f991914ebabb8a35b01fa0beb7f72a75" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplydw2&quot;&gt;_aApplydw2&lt;/strong&gt;(in dchar[] aa, dg2_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplydw2&quot;&gt;_aApplydw2&lt;/strong&gt; (en dchar [] aa, dg2_t dg);</target>
        </trans-unit>
        <trans-unit id="7f168d09eb7f8b49d6fb830ad1b3e5b3ac9ceb3b" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplywc1&quot;&gt;_aApplywc1&lt;/strong&gt;(in wchar[] aa, dg_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplywc1&quot;&gt;_aAplicarwc1&lt;/strong&gt; (en wchar [] aa, dg_t dg);</target>
        </trans-unit>
        <trans-unit id="11e7c82e67345e6b8897e93056db45dce68b8627" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplywc2&quot;&gt;_aApplywc2&lt;/strong&gt;(in wchar[] aa, dg2_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplywc2&quot;&gt;_aAplicarwc2&lt;/strong&gt; (en wchar [] aa, dg2_t dg);</target>
        </trans-unit>
        <trans-unit id="77a307847b966394f44c7c661696df77b2a4002e" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplywd1&quot;&gt;_aApplywd1&lt;/strong&gt;(in wchar[] aa, dg_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplywd1&quot;&gt;_aAplicarwd1&lt;/strong&gt; (en wchar [] aa, dg_t dg);</target>
        </trans-unit>
        <trans-unit id="a57f1be08e4aba17ddbec15a20a88d7e71458b47" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aApplywd2&quot;&gt;_aApplywd2&lt;/strong&gt;(in wchar[] aa, dg2_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aApplywd2&quot;&gt;_aAplicarwd2&lt;/strong&gt; (en wchar [] aa, dg2_t dg);</target>
        </trans-unit>
        <trans-unit id="4972239e212365fd3df9e222d2ba2ecdb1a560ff" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aaApply&quot;&gt;_aaApply&lt;/strong&gt;(AA aa, const size_t keysz, dg_t dg);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04ff773bcb605484c532945178a3cca41eb0f08" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aaApply&quot;&gt;_aaApply&lt;/strong&gt;(AA aa, in size_t keysz, dg_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aaApply&quot;&gt;_aaApply&lt;/strong&gt; (AA aa, en size_t keysz, dg_t dg);</target>
        </trans-unit>
        <trans-unit id="5775be6c311bbfe7100d36dba5b437e749e79355" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aaApply2&quot;&gt;_aaApply2&lt;/strong&gt;(AA aa, const size_t keysz, dg2_t dg);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772ca7c991e122d28b924b4f43bb63b76bddeb86" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aaApply2&quot;&gt;_aaApply2&lt;/strong&gt;(AA aa, in size_t keysz, dg2_t dg);</source>
          <target state="translated">int &lt;strong id=&quot;_aaApply2&quot;&gt;_aaApply2&lt;/strong&gt; (AA aa, en size_t keysz, dg2_t dg);</target>
        </trans-unit>
        <trans-unit id="8cb96220bcb11e4b4f86dbcf833af0b80d46a323" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aaEqual&quot;&gt;_aaEqual&lt;/strong&gt;(in TypeInfo tiRaw, in AA aa1, in AA aa2);</source>
          <target state="translated">int &lt;strong id=&quot;_aaEqual&quot;&gt;_aaEqual&lt;/strong&gt; (en TypeInfo tiRaw, en AA aa1, en AA aa2);</target>
        </trans-unit>
        <trans-unit id="56e66f6c2a3223be06ad83b5c7f431f00003abe2" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_aaEqual&quot;&gt;_aaEqual&lt;/strong&gt;(scope const TypeInfo tiRaw, scope const AA aa1, scope const AA aa2);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13cfea9760badd4ed262065622558d789a31c47f" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_adEq2&quot;&gt;_adEq2&lt;/strong&gt;(void[] a1, void[] a2, TypeInfo ti);</source>
          <target state="translated">int &lt;strong id=&quot;_adEq2&quot;&gt;_adEq2&lt;/strong&gt; (void [] a1, void [] a2, TypeInfo ti);</target>
        </trans-unit>
        <trans-unit id="41ca32b78f171e7a5775e5c0021c6d54bc62098c" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;_d_run_main&quot;&gt;_d_run_main&lt;/strong&gt;(int argc, char** argv, MainFunc mainFunc);</source>
          <target state="translated">int &lt;strong id=&quot;_d_run_main&quot;&gt;_d_run_main&lt;/strong&gt; (int argc, char ** argv, MainFunc mainFunc);</target>
        </trans-unit>
        <trans-unit id="96634d0d6b78847d703459b126ef7c0cd922a2dc" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;actionTableLookup&quot;&gt;actionTableLookup&lt;/strong&gt;(_Unwind_Exception* exceptionObject, uint actionRecordPtr, const(ubyte)* pActionTable, const(ubyte)* tt, ubyte TType, _Unwind_Exception_Class exceptionClass, const(ubyte)* lsda);</source>
          <target state="translated">int &lt;strong id=&quot;actionTableLookup&quot;&gt;actionTableLookup&lt;/strong&gt; (_Unwind_Exception * exceptionObject, uint actionRecordPtr, const (ubyte) * pActionTable, const (ubyte) * tt, ubyte TType, _Unwind_Exception_Class exceptionClass, const (ubyte) * lsda);</target>
        </trans-unit>
        <trans-unit id="367cafc18385efc6223f0fb08d7479d4532a86d9" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;adds&quot;&gt;adds&lt;/strong&gt;()(int x, int y, ref bool overflow);</source>
          <target state="translated">int &lt;strong id=&quot;adds&quot;&gt;agrega&lt;/strong&gt; () (int x, int y, desbordamiento de ref bool);</target>
        </trans-unit>
        <trans-unit id="6f9640d7872e90718a53396baeedb4e58e3d9ede" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;apply&quot;&gt;apply&lt;/strong&gt;(Dsymbol_apply_ft_t fp, void* param);</source>
          <target state="translated">int &lt;strong id=&quot;apply&quot;&gt;apply&lt;/strong&gt; (Dsymbol_apply_ft_t fp, void * param);</target>
        </trans-unit>
        <trans-unit id="68d52036653bd0442d6af0bd8f50ecacd76e941f" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;argc&quot;&gt;argc&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;argc&quot;&gt;argc&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e07732077a4f1454eec9b1f1062099b0d89977f1" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;blockExit&quot;&gt;blockExit&lt;/strong&gt;(Statement s, FuncDeclaration func, bool mustNotThrow);</source>
          <target state="translated">int &lt;strong id=&quot;blockExit&quot;&gt;blockExit&lt;/strong&gt; ( &lt;strong id=&quot;blockExit&quot;&gt;instrucci&amp;oacute;n&lt;/strong&gt; s, funcDeclaration func, bool mustNotThrow);</target>
        </trans-unit>
        <trans-unit id="ad8445dda8ee9604a97b5f8629606000d8ce34ea" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;callSideEffectLevel&quot;&gt;callSideEffectLevel&lt;/strong&gt;(FuncDeclaration f);</source>
          <target state="translated">int &lt;strong id=&quot;callSideEffectLevel&quot;&gt;callSideEffectLevel&lt;/strong&gt; (FuncDeclaration f);</target>
        </trans-unit>
        <trans-unit id="347e39e7bba717be563a3087719972ac102948ef" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;cmp&quot;&gt;cmp&lt;/strong&gt;(alias pred, R1, R2)(R1 r1, R2 r2)</source>
          <target state="translated">int &lt;strong id=&quot;cmp&quot;&gt;cmp&lt;/strong&gt; (alias pred, R1, R2) (R1 r1, R2 r2)</target>
        </trans-unit>
        <trans-unit id="417b5339edbe8f73bce398a1de824229a46b9ae0" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;cppDtorVtblIndex&quot;&gt;cppDtorVtblIndex&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;cppDtorVtblIndex&quot;&gt;cppDtorVtblIndex&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="04bfcf663a606c17fc1428ef1a7fb8f2788dad05" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;ctfeCmp&quot;&gt;ctfeCmp&lt;/strong&gt;(ref const Loc loc, TOK op, Expression e1, Expression e2);</source>
          <target state="translated">int &lt;strong id=&quot;ctfeCmp&quot;&gt;ctfeCmp&lt;/strong&gt; (ref const Loc loc, TOK op, Expression e1, Expression e2);</target>
        </trans-unit>
        <trans-unit id="7dac9311d2dfaf0d6b892927d49540fcb730f49f" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;ctfeEqual&quot;&gt;ctfeEqual&lt;/strong&gt;(ref const Loc loc, TOK op, Expression e1, Expression e2);</source>
          <target state="translated">int &lt;strong id=&quot;ctfeEqual&quot;&gt;ctfeEqual&lt;/strong&gt; (ref const Loc loc, TOK op, Expression e1, Expression e2);</target>
        </trans-unit>
        <trans-unit id="9830d829295f8c1f4727bd4de8a019b52166daf4" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;ctfeIdentity&quot;&gt;ctfeIdentity&lt;/strong&gt;(ref const Loc loc, TOK op, Expression e1, Expression e2);</source>
          <target state="translated">int &lt;strong id=&quot;ctfeIdentity&quot;&gt;ctfeIdentity&lt;/strong&gt; (ref const Loc loc, TOK op, Expression e1, Expression e2);</target>
        </trans-unit>
        <trans-unit id="28c2aacfd4910a6700b083491f376a8e9b7f6bb6" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;curl_formget&quot;&gt;curl_formget&lt;/strong&gt;(curl_httppost* form, void* arg, curl_formget_callback append);</source>
          <target state="translated">int &lt;strong id=&quot;curl_formget&quot;&gt;curl_formget&lt;/strong&gt; (curl_httppost * form, void * arg, curl_formget_callback append);</target>
        </trans-unit>
        <trans-unit id="2770cde0d26dab4ace6c11a45cdb32df00bb8118" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;curl_strequal&quot;&gt;curl_strequal&lt;/strong&gt;(in const(char)* s1, in const(char)* s2);</source>
          <target state="translated">int &lt;strong id=&quot;curl_strequal&quot;&gt;curl_strequal&lt;/strong&gt; (en const (char) * s1, en const (char) * s2);</target>
        </trans-unit>
        <trans-unit id="7c3bef000cd955b7d278917f9d6d4f8cf3fa3c0a" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;curl_strnequal&quot;&gt;curl_strnequal&lt;/strong&gt;(in const(char)* s1, in const(char)* s2, size_t n);</source>
          <target state="translated">int &lt;strong id=&quot;curl_strnequal&quot;&gt;curl_strnequal&lt;/strong&gt; (en const (char) * s1, en const (char) * s2, size_t n);</target>
        </trans-unit>
        <trans-unit id="39d3b43a6ecc22ea8cdac349dce9799e63dcc0d6" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;errorCode&quot;&gt;errorCode&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;errorCode&quot;&gt;errorCode&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="55c4d7bfb6e2a51616fc3969c83fd2aa61bb7642" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;execv&quot;&gt;execv&lt;/strong&gt;(in string pathname, in string[] argv);</source>
          <target state="translated">int &lt;strong id=&quot;execv&quot;&gt;execv&lt;/strong&gt; (en cadena nombre de ruta, en cadena [] argv);</target>
        </trans-unit>
        <trans-unit id="0c63169e2943b45558dcb60d2c6c2f977711d42f" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;execve&quot;&gt;execve&lt;/strong&gt;(in string pathname, in string[] argv, in string[] envp);</source>
          <target state="translated">int &lt;strong id=&quot;execve&quot;&gt;execve&lt;/strong&gt; (en string pathname, en string [] argv, en string [] envp);</target>
        </trans-unit>
        <trans-unit id="3bfac5d442446429b617a22c90fe90de203ec51d" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;execvp&quot;&gt;execvp&lt;/strong&gt;(in string pathname, in string[] argv);</source>
          <target state="translated">int &lt;strong id=&quot;execvp&quot;&gt;execvp&lt;/strong&gt; (en cadena nombre de ruta, en cadena [] argv);</target>
        </trans-unit>
        <trans-unit id="904509e8a7cd3fe6c22de1d089caabfb65b4e47a" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;execvpe&quot;&gt;execvpe&lt;/strong&gt;(in string pathname, in string[] argv, in string[] envp);</source>
          <target state="translated">int &lt;strong id=&quot;execvpe&quot;&gt;execvpe&lt;/strong&gt; (en string pathname, en string [] argv, en string [] envp);</target>
        </trans-unit>
        <trans-unit id="af60045f1722e01ba87661b688c399d1fc033a04" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;family&quot;&gt;family&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;family&quot;&gt;familia&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f75b586a4ec76f3c2617e35e0edd36e1252ae7a4" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;features&quot;&gt;features&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;features&quot;&gt;funciones&lt;/strong&gt; int ;</target>
        </trans-unit>
        <trans-unit id="09f11722765089db618404b36b6cc894baa45e55" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;filenameCmp&quot;&gt;filenameCmp&lt;/strong&gt;(CaseSensitive cs = CaseSensitive.osDefault, Range1, Range2)(Range1 filename1, Range2 filename2)</source>
          <target state="translated">int &lt;strong id=&quot;filenameCmp&quot;&gt;filenameCmp&lt;/strong&gt; (CaseSensitive cs = CaseSensitive.osDefault, Range1, Range2) (Range1 filename1, Range2 filename2)</target>
        </trans-unit>
        <trans-unit id="846d87b3fb71dd78a1eb5e5f0cd4ae2a1de6e387" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;foreachDsymbol&quot;&gt;foreachDsymbol&lt;/strong&gt;(Dsymbols* symbols, scope int delegate(Dsymbol) dg);</source>
          <target state="translated">int &lt;strong id=&quot;foreachDsymbol&quot;&gt;foreachDsymbol&lt;/strong&gt; (Dsymbols * symbols, scope int delegate (Dsymbol) dg);</target>
        </trans-unit>
        <trans-unit id="6bca36c8556ad39d83e8aa5583ffe8db7fc93061" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;getFieldIndex&quot;&gt;getFieldIndex&lt;/strong&gt;(Type type, uint offset);</source>
          <target state="translated">int &lt;strong id=&quot;getFieldIndex&quot;&gt;getFieldIndex&lt;/strong&gt; (tipo de tipo, desplazamiento de uint);</target>
        </trans-unit>
        <trans-unit id="43d67c1e36e5eb6bf1c4e5cb70f156287aee88f2" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;getc&quot;&gt;getc&lt;/strong&gt;()(FILE* stream);</source>
          <target state="translated">int &lt;strong id=&quot;getc&quot;&gt;getc&lt;/strong&gt; () (ARCHIVO * secuencia);</target>
        </trans-unit>
        <trans-unit id="0c7a9b2740a7a79221d60e641c2af71112878025" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;getchar&quot;&gt;getchar&lt;/strong&gt;()();</source>
          <target state="translated">int &lt;strong id=&quot;getchar&quot;&gt;getchar&lt;/strong&gt; () ();</target>
        </trans-unit>
        <trans-unit id="3501b605e84f36a9edf7ad3676043ff73d3a676d" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;gid&quot;&gt;gid&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;gid&quot;&gt;gid&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="afffbce4798c1b9d39e1268ad160ad108cc4ddc3" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;hasNoDefault&quot;&gt;hasNoDefault&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;hasNoDefault&quot;&gt;hasNoDefault&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="747f2fbfd358cab4c2593fe76774893a637f0dbb" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;hasReturnExp&quot;&gt;hasReturnExp&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;hasReturnExp&quot;&gt;hasReturnExp&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5ee738f7ae80c3d3c8171958d063f4ee8e0f6f9c" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;hasVars&quot;&gt;hasVars&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;hasVars&quot;&gt;hasVars&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7ae2df04ec6cc36acf4141787662ceacd9aac915" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;hookOpCmp&quot;&gt;hookOpCmp&lt;/strong&gt;(Lhs, Rhs)(Lhs lhs, Rhs rhs);</source>
          <target state="translated">int &lt;strong id=&quot;hookOpCmp&quot;&gt;hookOpCmp&lt;/strong&gt; (Lhs, Rhs) (Lhs lhs, Rhs rhs);</target>
        </trans-unit>
        <trans-unit id="12526bf78d456bbf93453807a11c02b868315417" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;icmp&quot;&gt;icmp&lt;/strong&gt;(S1, S2)(S1 r1, S2 r2)</source>
          <target state="translated">int &lt;strong id=&quot;icmp&quot;&gt;icmp&lt;/strong&gt; (S1, S2) (S1 r1, S2 r2)</target>
        </trans-unit>
        <trans-unit id="523542060827aada49749b5710fc92d19a29ecb1" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;iconv_ver_num&quot;&gt;iconv_ver_num&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;iconv_ver_num&quot;&gt;iconv_ver_num&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="184594f9509dfe986c0f154ef3b1346a6671d16b" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;idxNum&quot;&gt;idxNum&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;idxNum&quot;&gt;idxNum&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="cd9ebc7365ddf3a35672d55111d5e2ef794cf39e" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;imports&quot;&gt;imports&lt;/strong&gt;(Module m);</source>
          <target state="translated">int &lt;strong id=&quot;imports&quot;&gt;importaciones&lt;/strong&gt; (M&amp;oacute;dulo m);</target>
        </trans-unit>
        <trans-unit id="cdd433fb36490a178c50baedbba119d3b0a85679" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;inlineCostExpression&quot;&gt;inlineCostExpression&lt;/strong&gt;(Expression e);</source>
          <target state="translated">int &lt;strong id=&quot;inlineCostExpression&quot;&gt;inlineCostExpression&lt;/strong&gt; (Expresi&amp;oacute;n e);</target>
        </trans-unit>
        <trans-unit id="8f18938aa5ea2940116d0c7a18e21c83fc359d26" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;inlineCostFunction&quot;&gt;inlineCostFunction&lt;/strong&gt;(FuncDeclaration fd, bool hasthis, bool hdrscan);</source>
          <target state="translated">int &lt;strong id=&quot;inlineCostFunction&quot;&gt;inlineCostFunction&lt;/strong&gt; (FuncDeclaration fd, bool hasthis, bool hdrscan);</target>
        </trans-unit>
        <trans-unit id="11fec9043602149b923752e5947a8375e5df5c19" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;inlineNest&quot;&gt;inlineNest&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;inlineNest&quot;&gt;inlineNest&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6c019b21872caa87443c5dd4e0104be2205d7a1e" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;intSignedCmp&quot;&gt;intSignedCmp&lt;/strong&gt;(TOK op, sinteger_t n1, sinteger_t n2);</source>
          <target state="translated">int &lt;strong id=&quot;intSignedCmp&quot;&gt;intSignedCmp&lt;/strong&gt; (TOK op, sinteger_t n1, sinteger_t n2);</target>
        </trans-unit>
        <trans-unit id="0000e1d83814ad46c38370b4d9d2708f83e2990b" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;intUnsignedCmp&quot;&gt;intUnsignedCmp&lt;/strong&gt;(TOK op, dinteger_t n1, dinteger_t n2);</source>
          <target state="translated">int &lt;strong id=&quot;intUnsignedCmp&quot;&gt;intUnsignedCmp&lt;/strong&gt; (TOK op, dinteger_t n1, dinteger_t n2);</target>
        </trans-unit>
        <trans-unit id="0e6af5941987ebe941c6d114d2497fd2538aaa67" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;intrinsic_op&quot;&gt;intrinsic_op&lt;/strong&gt;(FuncDeclaration fd);</source>
          <target state="translated">int &lt;strong id=&quot;intrinsic_op&quot;&gt;intrinsic_op&lt;/strong&gt; (FuncDeclaration fd);</target>
        </trans-unit>
        <trans-unit id="de17c49337969a52877ce59232329c1e3666241d" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;inuse&quot;&gt;inuse&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;inuse&quot;&gt;inuse&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="86c369124b752423a98b6d1b25f09f21bb6e71d6" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;isConst&quot;&gt;isConst&lt;/strong&gt;(Expression e);</source>
          <target state="translated">int &lt;strong id=&quot;isConst&quot;&gt;isConst&lt;/strong&gt; (Expresi&amp;oacute;n e);</target>
        </trans-unit>
        <trans-unit id="be379f2515a860213ff5cc0f7d7664e3366c66d6" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;isVectorTypeSupported&quot;&gt;isVectorTypeSupported&lt;/strong&gt;(int sz, Type type);</source>
          <target state="translated">int &lt;strong id=&quot;isVectorTypeSupported&quot;&gt;isVectorTypeSupported&lt;/strong&gt; (int sz, tipo de tipo);</target>
        </trans-unit>
        <trans-unit id="655d4714f837ac4fc4179aa0c976516ab607be17" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;line&quot;&gt;line&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;line&quot;&gt;line&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="51d9b67264d7e26ec673410c716287bbd364580d" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;main&quot;&gt;main&lt;/strong&gt;(int argc, char** argv);</source>
          <target state="translated">int &lt;strong id=&quot;main&quot;&gt;main&lt;/strong&gt; (int argc, char ** argv);</target>
        </trans-unit>
        <trans-unit id="ac1ea29318c260c7aaa3bfe036f4db92ff6daa92" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;moduleinfos_apply&quot;&gt;moduleinfos_apply&lt;/strong&gt;(scope int delegate(immutable(ModuleInfo*)) dg);</source>
          <target state="translated">int &lt;strong id=&quot;moduleinfos_apply&quot;&gt;moduleinfos_apply&lt;/strong&gt; (&amp;aacute;mbito int delegado (inmutable (ModuleInfo *)) dg);</target>
        </trans-unit>
        <trans-unit id="c53bee2aae6b53a2c8b607fecad282e7c919b425" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;muls&quot;&gt;muls&lt;/strong&gt;()(int x, int y, ref bool overflow);</source>
          <target state="translated">int &lt;strong id=&quot;muls&quot;&gt;muls&lt;/strong&gt; () (int x, int y, ref bool overflow);</target>
        </trans-unit>
        <trans-unit id="eeeaa147d29a6904265220e3923d966433753aaa" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;nConstraint&quot;&gt;nConstraint&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;nConstraint&quot;&gt;nConstraint&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="661dc6e03c9342e63d0be88155d00c74d284d0ee" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;nOrderBy&quot;&gt;nOrderBy&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;nOrderBy&quot;&gt;nOrderBy&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="415ec5b9c114b385b342bc26f3bb7c0c20040138" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;nParam&quot;&gt;nParam&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;nParam&quot;&gt;nParam&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="edf50f635a3390a29579afddbb7dac9190cb880b" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;nRef&quot;&gt;nRef&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;nRef&quot;&gt;nRef&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="bddb2222b3faa5d57cf4659dffb43697aef5d219" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;needModuleInfo&quot;&gt;needModuleInfo&lt;/strong&gt;();</source>
          <target state="translated">int &lt;strong id=&quot;needModuleInfo&quot;&gt;needModuleInfo&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="b762a5b8021d4bb1fb7de856a03eeac5afe865bd" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;needToFreeIdxStr&quot;&gt;needToFreeIdxStr&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;needToFreeIdxStr&quot;&gt;needToFreeIdxStr&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="cca070b81d833f3fe1299a4347d05127b03b5fe4" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;negs&quot;&gt;negs&lt;/strong&gt;()(int x, ref bool overflow);</source>
          <target state="translated">int &lt;strong id=&quot;negs&quot;&gt;negs&lt;/strong&gt; () (int x, ref bool overflow);</target>
        </trans-unit>
        <trans-unit id="f865d0a2b5fe5b667cccbdb2d0add324053ca14f" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;num_of_certs&quot;&gt;num_of_certs&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;num_of_certs&quot;&gt;num_of_certs&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="903ea9bb11bf7291e07bead472044c626b35de26" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt;(Delegate)(scope Delegate dg)</source>
          <target state="translated">int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt; (delegado) (&amp;aacute;mbito delegado dg)</target>
        </trans-unit>
        <trans-unit id="819a9f91607253f46fc9c29b06f2eb3020014fea" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt;(scope int delegate(E));</source>
          <target state="translated">int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt; (&amp;aacute;mbito int delegado (E));</target>
        </trans-unit>
        <trans-unit id="779971de3edd6a41cea048a9f33b70bc3ed20a4b" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt;(scope int delegate(Throwable) dg);</source>
          <target state="translated">int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt; (&amp;aacute;mbito int delegado (Throwable) dg);</target>
        </trans-unit>
        <trans-unit id="4535d80470a2c75f0465985c077ea908aad944ea" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt;(scope int delegate(ref bool) dg);</source>
          <target state="translated">int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt; (&amp;aacute;mbito int delegado (ref bool) dg);</target>
        </trans-unit>
        <trans-unit id="466cd07bc3b8eb50962cfe51f778ee130b4536b3" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt;(scope int delegate(size_t, E));</source>
          <target state="translated">int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt; (&amp;aacute;mbito int delegado (size_t, E));</target>
        </trans-unit>
        <trans-unit id="1a1ca6f898b216ea68434c783ecf93bfd61ddcbf" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt;(scope int delegate(size_t, ref bool) dg);</source>
          <target state="translated">int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt; (&amp;aacute;mbito int delegado (size_t, ref bool) dg);</target>
        </trans-unit>
        <trans-unit id="2475193658dfca826d840040c373b573979677cf" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(Object o);</source>
          <target state="translated">int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt; (Objeto o);</target>
        </trans-unit>
        <trans-unit id="85c57a17a26320062ba9da0f9779f22f68f3fb07" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(R)(R rhs)</source>
          <target state="translated">int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt; (R) (R rhs)</target>
        </trans-unit>
        <trans-unit id="c16e9e4d78f327121b14329190002f989144f84d" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(T)(T rhs)</source>
          <target state="translated">int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt; (T) (T rhs)</target>
        </trans-unit>
        <trans-unit id="c0c7a76b9d266811f589b09cef64b2b633b155f1" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;orderByConsumed&quot;&gt;orderByConsumed&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;orderByConsumed&quot;&gt;orderByConsumed&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="41cd5482e4b4a4cc6b147dbe3c36c007b8f4919f" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;overloadApply&quot;&gt;overloadApply&lt;/strong&gt;(Dsymbol fstart, scope int delegate(Dsymbol) dg, Scope* sc = null);</source>
          <target state="translated">int &lt;strong id=&quot;overloadApply&quot;&gt;overloadApply&lt;/strong&gt; (Dsymbol fstart, scope int delegate (Dsymbol) dg, Scope * sc = null);</target>
        </trans-unit>
        <trans-unit id="65f43a7516af12f7ad2194f0fa11e57f057dac36" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;precision&quot;&gt;precision&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;precision&quot;&gt;precisi&amp;oacute;n&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="39faa7bd7cbaf32af379ccaaf0fe47dab1ef6754" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;protocol&quot;&gt;protocol&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;protocol&quot;&gt;protocolo&lt;/strong&gt; int ;</target>
        </trans-unit>
        <trans-unit id="9d69cf2eac4185bde7c48abcaad974468631e96a" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;putc&quot;&gt;putc&lt;/strong&gt;()(int c, FILE* stream);</source>
          <target state="translated">int &lt;strong id=&quot;putc&quot;&gt;putc&lt;/strong&gt; () (int c, ARCHIVO * flujo);</target>
        </trans-unit>
        <trans-unit id="bd36cfbae3b29f6ec39239307dab5f3a4c9a6d31" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;putchar&quot;&gt;putchar&lt;/strong&gt;()(int c);</source>
          <target state="translated">int &lt;strong id=&quot;putchar&quot;&gt;putchar&lt;/strong&gt; () (int c);</target>
        </trans-unit>
        <trans-unit id="9cbdb4a623b5f8841813a9190747073516e90ebe" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;realCmp&quot;&gt;realCmp&lt;/strong&gt;(TOK op, real_t r1, real_t r2);</source>
          <target state="translated">int &lt;strong id=&quot;realCmp&quot;&gt;realCmp&lt;/strong&gt; (TOK op, real_t r1, real_t r2);</target>
        </trans-unit>
        <trans-unit id="dc7a3335b78725fe2721db621577a6ef84897db6" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;rt_init&quot;&gt;rt_init&lt;/strong&gt;();</source>
          <target state="translated">int &lt;strong id=&quot;rt_init&quot;&gt;rt_init&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="89297d129177c5f3be980082712c1c7568b456e6" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;rt_term&quot;&gt;rt_term&lt;/strong&gt;();</source>
          <target state="translated">int &lt;strong id=&quot;rt_term&quot;&gt;rt_term&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="9ec9c984e10f943527ff096f050b0fb911ba6118" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;rt_unloadLibrary&quot;&gt;rt_unloadLibrary&lt;/strong&gt;(void* ptr);</source>
          <target state="translated">int &lt;strong id=&quot;rt_unloadLibrary&quot;&gt;rt_unloadLibrary&lt;/strong&gt; (void * ptr);</target>
        </trans-unit>
        <trans-unit id="e8ef024b8bf95bc63da3919a712069f42daecc0a" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;runLINK&quot;&gt;runLINK&lt;/strong&gt;();</source>
          <target state="translated">int &lt;strong id=&quot;runLINK&quot;&gt;runLINK&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="bfadb8eeaa3f9b5d40a96bb571df75ac71044f1c" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;runProgram&quot;&gt;runProgram&lt;/strong&gt;();</source>
          <target state="translated">int &lt;strong id=&quot;runProgram&quot;&gt;runProgram&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="85652a2dbfa285571c9ebbdb483eeb285b64140b" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;separatorCharPos&quot;&gt;separatorCharPos&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;separatorCharPos&quot;&gt;separatorCharPos&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="fac236181b38bd2a86179d345878a5d2261730ed" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;separators&quot;&gt;separators&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;separators&quot;&gt;separadores&lt;/strong&gt; int ;</target>
        </trans-unit>
        <trans-unit id="90ea8b003b63bef83f5564e8c56ecb24567787e2" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;sicmp&quot;&gt;sicmp&lt;/strong&gt;(S1, S2)(scope S1 r1, scope S2 r2)</source>
          <target state="translated">int &lt;strong id=&quot;sicmp&quot;&gt;sicmp&lt;/strong&gt; (S1, S2) (alcance S1 r1, alcance S2 r2)</target>
        </trans-unit>
        <trans-unit id="11b12bfbede24fa737478205b5931be10bff4c48" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;socktype&quot;&gt;socktype&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;socktype&quot;&gt;socktype&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5b062fb99cf937b70682856fd4d822020b0522c5" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;specificCmp&quot;&gt;specificCmp&lt;/strong&gt;(TOK op, int rawCmp);</source>
          <target state="translated">int &lt;strong id=&quot;specificCmp&quot;&gt;especificoCmp&lt;/strong&gt; (TOK op, int rawCmp);</target>
        </trans-unit>
        <trans-unit id="1938fc0c60809337cf334a1bd199464dc70bf4c7" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;stageflags&quot;&gt;stageflags&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;stageflags&quot;&gt;banderas de escenario&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="947afed3a0c2c4e27a50e078ceda6d70340839d0" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;subs&quot;&gt;subs&lt;/strong&gt;()(int x, int y, ref bool overflow);</source>
          <target state="translated">int &lt;strong id=&quot;subs&quot;&gt;subs&lt;/strong&gt; () (int x, int y, ref bool overflow);</target>
        </trans-unit>
        <trans-unit id="a9545f2841e5f4e66522023eafe57d8e89493a3d" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;tm_hour&quot;&gt;tm_hour&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;tm_hour&quot;&gt;tm_hour&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3f3c83c78b0a248c733f299161b0bc55ec84290c" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;tm_isdst&quot;&gt;tm_isdst&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;tm_isdst&quot;&gt;tm_isdst&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="001e90fb8207ec7538b9874e4d9727ef9f9b63aa" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;tm_mday&quot;&gt;tm_mday&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;tm_mday&quot;&gt;tm_mday&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0f48e9cd8c2854ef9ea92b0c6663e83b178044ab" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;tm_min&quot;&gt;tm_min&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;tm_min&quot;&gt;tm_min&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3725899ec4ef8ed8edad88665e404c3ea32d651a" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;tm_mon&quot;&gt;tm_mon&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;tm_mon&quot;&gt;tm_mon&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9166d4ab1b7be0c9c1882bbc96d46e1d06137c09" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;tm_sec&quot;&gt;tm_sec&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;tm_sec&quot;&gt;tm_sec&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3f6dfd78618b9758f94014194dc87a328b791570" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;tm_wday&quot;&gt;tm_wday&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;tm_wday&quot;&gt;tm_wday&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ed0da5a7d8d0e076bed4e22d325c18d618c3a1a6" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;tm_yday&quot;&gt;tm_yday&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;tm_yday&quot;&gt;tm_yday&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a51b361a7187953d71343b36d50148a58bc3a4bc" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;tm_year&quot;&gt;tm_year&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;tm_year&quot;&gt;tm_year&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="2b964638e70b363e07daffc1b8c4b5e8d4a04964" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;tookAddressOf&quot;&gt;tookAddressOf&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;tookAddressOf&quot;&gt;takeAddressOf&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="36a4f94cb76443b097a1d3c1b29e4bb2486e9631" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;uid&quot;&gt;uid&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;uid&quot;&gt;uid&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="345414d80c480f420381b80e56dab6be866547ab" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;utfStride&quot;&gt;utfStride&lt;/strong&gt;(const(char)* p);</source>
          <target state="translated">int &lt;strong id=&quot;utfStride&quot;&gt;utfStride&lt;/strong&gt; (const (char) * p);</target>
        </trans-unit>
        <trans-unit id="e253185faaca63d49ef7534379cfadb7cb61c1e3" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;vtblIndex&quot;&gt;vtblIndex&lt;/strong&gt;;</source>
          <target state="translated">int &lt;strong id=&quot;vtblIndex&quot;&gt;vtblIndex&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1c22d1dcd70d4029991670462b5753a14ff52d17" translate="yes" xml:space="preserve">
          <source>int &lt;strong id=&quot;width&quot;&gt;width&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;width&quot;&gt;ancho&lt;/strong&gt; int ;</target>
        </trans-unit>
        <trans-unit id="e5114fd445da580ce813319e5d41877e5a283c43" translate="yes" xml:space="preserve">
          <source>int &lt;u&gt;add&lt;/u&gt;(int</source>
          <target state="translated">int &lt;u&gt;add&lt;/u&gt; (int</target>
        </trans-unit>
        <trans-unit id="e24e9c92549eba8d2a066e045bbcd8d9f0c1b722" translate="yes" xml:space="preserve">
          <source>int delegate(Dsymbol) &lt;code&gt;dg&lt;/code&gt;</source>
          <target state="translated">int delegado (Dsymbol) &lt;code&gt;dg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af4e6ec00515507a4f7bf741934736d41dcef449" translate="yes" xml:space="preserve">
          <source>int delegate(const(char)*) nothrow &lt;code&gt;sink&lt;/code&gt;</source>
          <target state="translated">delegado int (const (char) *) &lt;code&gt;sink&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a55dab833d5e7b0c1f0966bcf02c7f694f7a07f2" translate="yes" xml:space="preserve">
          <source>int delegate(curl_socket_t, CurlSockType) &lt;code&gt;callback&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; int delegate (curl_socket_t, CurlSockType)</target>
        </trans-unit>
        <trans-unit id="2a038225bccce1ee70597d1a5e5369d4a22a8936" translate="yes" xml:space="preserve">
          <source>int delegate(ref Thread) &lt;code&gt;dg&lt;/code&gt;</source>
          <target state="translated">int delegate (ref Thread) &lt;code&gt;dg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d41a6ff05d7ace8b407ecc5b76d3789e704b1499" translate="yes" xml:space="preserve">
          <source>int delegate(size_t dlTotal, size_t dlNow, size_t ulTotal, size_t ulNow) &lt;code&gt;callback&lt;/code&gt;</source>
          <target state="translated">Devoluci&amp;oacute;n de &lt;code&gt;callback&lt;/code&gt; int delegate (size_t dlTotal, size_t dlNow, size_t ulTotal, size_t ulNow)</target>
        </trans-unit>
        <trans-unit id="39a28f46c2acdae8fb1a3fcf3daa937011acb099" translate="yes" xml:space="preserve">
          <source>int function(int) &lt;strong id=&quot;xRoundup&quot;&gt;xRoundup&lt;/strong&gt;;</source>
          <target state="translated">funci&amp;oacute;n int (int) &lt;strong id=&quot;xRoundup&quot;&gt;xRoundup&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="fae7fc3e2b644603d141809bb231b3973a7d9994" translate="yes" xml:space="preserve">
          <source>int function(void*) &lt;strong id=&quot;xInit&quot;&gt;xInit&lt;/strong&gt;;</source>
          <target state="translated">funci&amp;oacute;n int (void *) &lt;strong id=&quot;xInit&quot;&gt;xInit&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="56783f3b4d68daf3487563f810ff833da0e3fded" translate="yes" xml:space="preserve">
          <source>int function(void*) &lt;strong id=&quot;xSize&quot;&gt;xSize&lt;/strong&gt;;</source>
          <target state="translated">funci&amp;oacute;n int (void *) &lt;strong id=&quot;xSize&quot;&gt;xSize&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="adf9d924fe21a9928c2553c91725c28f0e3fe739" translate="yes" xml:space="preserve">
          <source>int int</source>
          <target state="translated">int int</target>
        </trans-unit>
        <trans-unit id="18379a569b15c1204a734453a71260c86fdbb11d" translate="yes" xml:space="preserve">
          <source>int int*</source>
          <target state="translated">int int*</target>
        </trans-unit>
        <trans-unit id="4addda534d99cb6b9853a9ac221fccb0390c19ea" translate="yes" xml:space="preserve">
          <source>int nByte</source>
          <target state="translated">int nByte</target>
        </trans-unit>
        <trans-unit id="0dcc52921ec940f108d1fe3b93344ee1ae5154cb" translate="yes" xml:space="preserve">
          <source>int response_expand(int *pargc,char ***pargv);</source>
          <target state="translated">int response_expand(int *pargc,char ***pargv);</target>
        </trans-unit>
        <trans-unit id="46851c3803dd45f76fca6d9f0ab0fdb289beb2e3" translate="yes" xml:space="preserve">
          <source>int.max</source>
          <target state="translated">int.max</target>
        </trans-unit>
        <trans-unit id="40040637360ed8ae0dca6c7906c5821569302155" translate="yes" xml:space="preserve">
          <source>int.min</source>
          <target state="translated">int.min</target>
        </trans-unit>
        <trans-unit id="19baa746e8062b67575eda40a9423a65c520ff96" translate="yes" xml:space="preserve">
          <source>int16_t</source>
          <target state="translated">int16_t</target>
        </trans-unit>
        <trans-unit id="8fcdcefeb8f1bbab3f3ff2567ecad9be78779217" translate="yes" xml:space="preserve">
          <source>int32_t</source>
          <target state="translated">int32_t</target>
        </trans-unit>
        <trans-unit id="44057bed4938503a9978286d634561eb55751eea" translate="yes" xml:space="preserve">
          <source>int4</source>
          <target state="translated">int4</target>
        </trans-unit>
        <trans-unit id="f6311168933725d3149f768d180f96c9c216469f" translate="yes" xml:space="preserve">
          <source>int64_t</source>
          <target state="translated">int64_t</target>
        </trans-unit>
        <trans-unit id="b74777c55db0fb6707ffab4f3db006eb69c34c57" translate="yes" xml:space="preserve">
          <source>int8</source>
          <target state="translated">int8</target>
        </trans-unit>
        <trans-unit id="fb861bce0ed1d239ae09cac8c3fbccef93edc62f" translate="yes" xml:space="preserve">
          <source>int8_t</source>
          <target state="translated">int8_t</target>
        </trans-unit>
        <trans-unit id="df63469e19bf67abdeee7649d7f983a2d2241f1a" translate="yes" xml:space="preserve">
          <source>int[][] &lt;code&gt;edges&lt;/code&gt;</source>
          <target state="translated">int [] [] &lt;code&gt;edges&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="220fc836b9f56a15987638324cb26cc2596ee572" translate="yes" xml:space="preserve">
          <source>int_fast16_t</source>
          <target state="translated">int_fast16_t</target>
        </trans-unit>
        <trans-unit id="ffff0e736b85a43966641403cc9ad67a363ac5b2" translate="yes" xml:space="preserve">
          <source>int_fast32_t</source>
          <target state="translated">int_fast32_t</target>
        </trans-unit>
        <trans-unit id="d956a8cae2b4af40dededf90a0b42eb33627aa64" translate="yes" xml:space="preserve">
          <source>int_fast64_t</source>
          <target state="translated">int_fast64_t</target>
        </trans-unit>
        <trans-unit id="13de7e996eae18435a9940512c587085307fd28d" translate="yes" xml:space="preserve">
          <source>int_fast8_t</source>
          <target state="translated">int_fast8_t</target>
        </trans-unit>
        <trans-unit id="42b10118d056c23218d273a88494c2bdeb626a27" translate="yes" xml:space="preserve">
          <source>int_least16_t</source>
          <target state="translated">int_least16_t</target>
        </trans-unit>
        <trans-unit id="d62b5ab27f5565c8cb3c5c0971753f3a435de873" translate="yes" xml:space="preserve">
          <source>int_least32_t</source>
          <target state="translated">int_least32_t</target>
        </trans-unit>
        <trans-unit id="78e88850e9c4bc574e7912669af99e6447aa7632" translate="yes" xml:space="preserve">
          <source>int_least64_t</source>
          <target state="translated">int_least64_t</target>
        </trans-unit>
        <trans-unit id="7aeb47c6ae0816168f16d3d3fd93aac7f9617920" translate="yes" xml:space="preserve">
          <source>int_least8_t</source>
          <target state="translated">int_least8_t</target>
        </trans-unit>
        <trans-unit id="1178cafbd64bbbfa77f5ac0a9d5032ed88162781" translate="yes" xml:space="preserve">
          <source>integer</source>
          <target state="translated">integer</target>
        </trans-unit>
        <trans-unit id="0eddf036b72e603c8a49bde65293d6c2248146b4" translate="yes" xml:space="preserve">
          <source>integer &amp;gt; 0</source>
          <target state="translated">entero&amp;gt; 0</target>
        </trans-unit>
        <trans-unit id="09a1ba23bcea3a310f72eaa07047a3971253eb9c" translate="yes" xml:space="preserve">
          <source>integer &amp;lt; 0</source>
          <target state="translated">entero &amp;lt;0</target>
        </trans-unit>
        <trans-unit id="c8826406b61eda5314a2416a74e230efbfb4d481" translate="yes" xml:space="preserve">
          <source>integer &amp;lt;= 0</source>
          <target state="translated">entero &amp;lt;= 0</target>
        </trans-unit>
        <trans-unit id="03cf66742b9e5675a0d1d00f66532a007a8718a5" translate="yes" xml:space="preserve">
          <source>integer item from list entry.</source>
          <target state="translated">un elemento entero de la entrada de la lista.</target>
        </trans-unit>
        <trans-unit id="99575d7c55c14e7f69e2fdb0a717c8037329a0e9" translate="yes" xml:space="preserve">
          <source>integer to convert. Can be uint or ulong. If radix is 10, can also be int or long.</source>
          <target state="translated">entero para convertir.Puede ser uint o ulong.Si radix es 10,también puede ser int o long.</target>
        </trans-unit>
        <trans-unit id="919f1b7fbbbafd5e904c82add2ebe19e8c9d4ec4" translate="yes" xml:space="preserve">
          <source>integral ('o')</source>
          <target state="translated">integral ('o')</target>
        </trans-unit>
        <trans-unit id="64d8544d95fd9035f3da941299c0e6e40519a85e" translate="yes" xml:space="preserve">
          <source>integral ('x', 'X')</source>
          <target state="translated">integral ('x','X')</target>
        </trans-unit>
        <trans-unit id="f02b3535776daf3501abc4657d860e221c6a3ce5" translate="yes" xml:space="preserve">
          <source>integral promotion mismatches, where the format specifies a smaller integral type than &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;uint&lt;/code&gt;, such as printing a &lt;code&gt;short&lt;/code&gt; with the &lt;code&gt;%d&lt;/code&gt; format rather than &lt;code&gt;%hd&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721fc25e002a982faf0b2dac1687b79c3758ced8" translate="yes" xml:space="preserve">
          <source>integral types</source>
          <target state="translated">tipos integrales</target>
        </trans-unit>
        <trans-unit id="affcd6354b9e7b3e300ed0c379876c2e2cb83de9" translate="yes" xml:space="preserve">
          <source>intended for verifying the logic of your program. That is what &lt;code&gt;assert&lt;/code&gt; is for. Also, do not use &lt;code&gt;enforce&lt;/code&gt; inside of contracts (i.e. inside of &lt;code&gt;in&lt;/code&gt; and &lt;code&gt;out&lt;/code&gt; blocks and &lt;code&gt;invariant&lt;/code&gt;s), because contracts are compiled out when compiling with</source>
          <target state="translated">destinado a verificar la l&amp;oacute;gica de su programa. Para eso est&amp;aacute; la &lt;code&gt;assert&lt;/code&gt; . Adem&amp;aacute;s, no utilice &lt;code&gt;enforce&lt;/code&gt; dentro de los contratos (es decir, dentro de &lt;code&gt;in&lt;/code&gt; y &lt;code&gt;out&lt;/code&gt; bloques y &lt;code&gt;invariant&lt;/code&gt; e s), ya que los contratos se compilan a cabo al compilar con</target>
        </trans-unit>
        <trans-unit id="e3dcb120f4e18ae0d807358de02f0576e7e1adab" translate="yes" xml:space="preserve">
          <source>interface &lt;strong id=&quot;BidirectionalAssignable&quot;&gt;BidirectionalAssignable&lt;/strong&gt;(E): ForwardAssignable!E, BidirectionalRange!E;</source>
          <target state="translated">interfaz &lt;strong id=&quot;BidirectionalAssignable&quot;&gt;BidirectionalAssignable&lt;/strong&gt; (E): ForwardAssignable! E, BidirectionalRange! E;</target>
        </trans-unit>
        <trans-unit id="473eaa2fc02469fafa66d5a690254ea87220ab74" translate="yes" xml:space="preserve">
          <source>interface &lt;strong id=&quot;BidirectionalRange&quot;&gt;BidirectionalRange&lt;/strong&gt;(E): ForwardRange!E;</source>
          <target state="translated">interfaz &lt;strong id=&quot;BidirectionalRange&quot;&gt;BidirectionalRange&lt;/strong&gt; (E): ForwardRange! E;</target>
        </trans-unit>
        <trans-unit id="4d7ee9c5edcc04fc0ca7d88c228bf701b15b1cff" translate="yes" xml:space="preserve">
          <source>interface &lt;strong id=&quot;CppTypeInfo&quot;&gt;CppTypeInfo&lt;/strong&gt;;</source>
          <target state="translated">interfaz &lt;strong id=&quot;CppTypeInfo&quot;&gt;CppTypeInfo&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="63ad8a1058c301bac880fc1eb982978660e3e4cb" translate="yes" xml:space="preserve">
          <source>interface &lt;strong id=&quot;Digest&quot;&gt;Digest&lt;/strong&gt;;</source>
          <target state="translated">interfaz de &lt;strong id=&quot;Digest&quot;&gt;resumen&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="2bce2b7be1dbd540256a777842e6bb50e9bd799b" translate="yes" xml:space="preserve">
          <source>interface &lt;strong id=&quot;ForwardAssignable&quot;&gt;ForwardAssignable&lt;/strong&gt;(E): InputAssignable!E, ForwardRange!E;</source>
          <target state="translated">interfaz &lt;strong id=&quot;ForwardAssignable&quot;&gt;ForwardAssignable&lt;/strong&gt; (E): InputAssignable! E, ForwardRange! E;</target>
        </trans-unit>
        <trans-unit id="859721fca6f798f2909d8be3b4bd9ff337df9663" translate="yes" xml:space="preserve">
          <source>interface &lt;strong id=&quot;ForwardRange&quot;&gt;ForwardRange&lt;/strong&gt;(E): InputRange!E;</source>
          <target state="translated">interfaz &lt;strong id=&quot;ForwardRange&quot;&gt;ForwardRange&lt;/strong&gt; (E): InputRange! E;</target>
        </trans-unit>
        <trans-unit id="3e81a4de834d4c4b8738f69918e1dba0b24c9ab8" translate="yes" xml:space="preserve">
          <source>interface &lt;strong id=&quot;IAllocator&quot;&gt;IAllocator&lt;/strong&gt;;</source>
          <target state="translated">interfaz &lt;strong id=&quot;IAllocator&quot;&gt;IAllocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f9077e9d0fcaa733507fa5e8f1de37e58e43281d" translate="yes" xml:space="preserve">
          <source>interface &lt;strong id=&quot;ISharedAllocator&quot;&gt;ISharedAllocator&lt;/strong&gt;;</source>
          <target state="translated">interfaz &lt;strong id=&quot;ISharedAllocator&quot;&gt;ISharedAllocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="276e9c8821028bfab2d57e1967b1a749cca8c519" translate="yes" xml:space="preserve">
          <source>interface &lt;strong id=&quot;InputAssignable&quot;&gt;InputAssignable&lt;/strong&gt;(E): InputRange!E;</source>
          <target state="translated">interfaz &lt;strong id=&quot;InputAssignable&quot;&gt;InputAssignable&lt;/strong&gt; (E): InputRange! E;</target>
        </trans-unit>
        <trans-unit id="1825297ba762bea4970a9f01dc8cd3def4be68e6" translate="yes" xml:space="preserve">
          <source>interface &lt;strong id=&quot;InputRange&quot;&gt;InputRange&lt;/strong&gt;(E);</source>
          <target state="translated">interfaz &lt;strong id=&quot;InputRange&quot;&gt;InputRange&lt;/strong&gt; (E);</target>
        </trans-unit>
        <trans-unit id="c93b1263f92aa258819c5be7fa372202678f5bc0" translate="yes" xml:space="preserve">
          <source>interface &lt;strong id=&quot;OutputRange&quot;&gt;OutputRange&lt;/strong&gt;(E);</source>
          <target state="translated">interfaz &lt;strong id=&quot;OutputRange&quot;&gt;OutputRange&lt;/strong&gt; (E);</target>
        </trans-unit>
        <trans-unit id="57f49cfba2482564f9744afe7f4b20ae76255c76" translate="yes" xml:space="preserve">
          <source>interface &lt;strong id=&quot;RandomAccessFinite&quot;&gt;RandomAccessFinite&lt;/strong&gt;(E): BidirectionalRange!E;</source>
          <target state="translated">interfaz &lt;strong id=&quot;RandomAccessFinite&quot;&gt;RandomAccessFinite&lt;/strong&gt; (E): BidirectionalRange! E;</target>
        </trans-unit>
        <trans-unit id="5b7a048e95d2f27a63654a94c08bd831d03c07e5" translate="yes" xml:space="preserve">
          <source>interface &lt;strong id=&quot;RandomAccessInfinite&quot;&gt;RandomAccessInfinite&lt;/strong&gt;(E): ForwardRange!E;</source>
          <target state="translated">interfaz &lt;strong id=&quot;RandomAccessInfinite&quot;&gt;RandomAccessInfinite&lt;/strong&gt; (E): ForwardRange! E;</target>
        </trans-unit>
        <trans-unit id="4e0460af959c61242076661914fe25c1d2153fc3" translate="yes" xml:space="preserve">
          <source>interface &lt;strong id=&quot;RandomFiniteAssignable&quot;&gt;RandomFiniteAssignable&lt;/strong&gt;(E): RandomAccessFinite!E, BidirectionalAssignable!E;</source>
          <target state="translated">interfaz &lt;strong id=&quot;RandomFiniteAssignable&quot;&gt;RandomFiniteAssignable&lt;/strong&gt; (E): RandomAccessFinite! E, BidirectionalAssignable! E;</target>
        </trans-unit>
        <trans-unit id="62a63440ede312459dd4ff7065308350530fb33a" translate="yes" xml:space="preserve">
          <source>interface &lt;strong id=&quot;Scheduler&quot;&gt;Scheduler&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;Scheduler&quot;&gt;programador de&lt;/strong&gt; interfaz ;</target>
        </trans-unit>
        <trans-unit id="2f14b01401eafd18084d4014b8ac51a7808d110d" translate="yes" xml:space="preserve">
          <source>interfaces</source>
          <target state="translated">interfaces</target>
        </trans-unit>
        <trans-unit id="a9249a8c0e935c08f57680d64b0e0b96e6ee1f20" translate="yes" xml:space="preserve">
          <source>interfaces this class implements</source>
          <target state="translated">interfaces que esta clase implementa</target>
        </trans-unit>
        <trans-unit id="4b6914c620d2daa62ebe5994f36f361b3a759bf8" translate="yes" xml:space="preserve">
          <source>intersection</source>
          <target state="translated">intersection</target>
        </trans-unit>
        <trans-unit id="c5c7aa1df4fb5e68977d7dd5dfc6a6b0d80ac027" translate="yes" xml:space="preserve">
          <source>intmax_t</source>
          <target state="translated">intmax_t</target>
        </trans-unit>
        <trans-unit id="391d728e774cc0b4d2ae1b6b460fc89d8fe0137d" translate="yes" xml:space="preserve">
          <source>intptr_t</source>
          <target state="translated">intptr_t</target>
        </trans-unit>
        <trans-unit id="2bc3440791cf409ef91ed20acec3d50ac7188bb9" translate="yes" xml:space="preserve">
          <source>intrange.d</source>
          <target state="translated">intrange.d</target>
        </trans-unit>
        <trans-unit id="e5a0780be493d704c9a3b09c0cb3715d4267be8a" translate="yes" xml:space="preserve">
          <source>invalid operation</source>
          <target state="translated">operación no válida</target>
        </trans-unit>
        <trans-unit id="7af8daef77eb809f9703314faa2df51ca7316ead" translate="yes" xml:space="preserve">
          <source>invalid?</source>
          <target state="translated">invalid?</target>
        </trans-unit>
        <trans-unit id="f2f2e84f037f6b89065ab3bfc540b307700da8a4" translate="yes" xml:space="preserve">
          <source>invalidException</source>
          <target state="translated">invalidException</target>
        </trans-unit>
        <trans-unit id="1738bf069670b36628a08189f5beaed0726dba4b" translate="yes" xml:space="preserve">
          <source>invariant</source>
          <target state="translated">invariant</target>
        </trans-unit>
        <trans-unit id="6f2ee6e8a32bc62e2a2b0adfecd168724d8a2b84" translate="yes" xml:space="preserve">
          <source>ireal</source>
          <target state="translated">ireal</target>
        </trans-unit>
        <trans-unit id="2a79dd6421ba2165421d8b1aaaab6edb8b7eabe9" translate="yes" xml:space="preserve">
          <source>irstate.d</source>
          <target state="translated">irstate.d</target>
        </trans-unit>
        <trans-unit id="b47f363e2b430c0647f14deea3eced9b0ef300ce" translate="yes" xml:space="preserve">
          <source>is</source>
          <target state="translated">is</target>
        </trans-unit>
        <trans-unit id="5aa4656f18610a026e3bbdeea07348f95913567e" translate="yes" xml:space="preserve">
          <source>is &amp;plusmn;0 and rounding is towards -&amp;infin;</source>
          <target state="translated">es &amp;plusmn; 0 y el redondeo es hacia -&amp;infin;</target>
        </trans-unit>
        <trans-unit id="4e1b4529afe52ccf9e38a096d9f881069dd0ebcc" translate="yes" xml:space="preserve">
          <source>is +0</source>
          <target state="translated">es +0</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
