<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="c2ccf0e4e1dfc93d620297d3e0d61669b9c59f31" translate="yes" xml:space="preserve">
          <source>rt/aApply.d</source>
          <target state="translated">rt/aApply.d</target>
        </trans-unit>
        <trans-unit id="29f054a74534f29fa2207b63698f2b27f76d1205" translate="yes" xml:space="preserve">
          <source>rt/adi.d</source>
          <target state="translated">rt/adi.d</target>
        </trans-unit>
        <trans-unit id="d78babce8e63884ec5cf6648d3b4e863a9c95752" translate="yes" xml:space="preserve">
          <source>rt/alloca.d</source>
          <target state="translated">rt/alloca.d</target>
        </trans-unit>
        <trans-unit id="98b2c6a8ed60cb3e5e27c49afce823f25383bf92" translate="yes" xml:space="preserve">
          <source>rt/arrayassign.d</source>
          <target state="translated">rt/arrayassign.d</target>
        </trans-unit>
        <trans-unit id="5dcda62c090f99e5a22bcf3820d42263df5d92a4" translate="yes" xml:space="preserve">
          <source>rt/arraycat.d</source>
          <target state="translated">rt/arraycat.d</target>
        </trans-unit>
        <trans-unit id="6d5d274195860c2ff3d3502dec6c3284dda8d302" translate="yes" xml:space="preserve">
          <source>rt/backtrace/dwarf.d</source>
          <target state="translated">rt/backtrace/dwarf.d</target>
        </trans-unit>
        <trans-unit id="477b75caefa0c475eda08648871c7cc463ed7ed2" translate="yes" xml:space="preserve">
          <source>rt/backtrace/elf.d</source>
          <target state="translated">rt/backtrace/elf.d</target>
        </trans-unit>
        <trans-unit id="4e4f810fde425246ef44dcd3697c204f490f973c" translate="yes" xml:space="preserve">
          <source>rt/backtrace/macho.d</source>
          <target state="translated">rt/backtrace/macho.d</target>
        </trans-unit>
        <trans-unit id="66c410f53e9ff2026c1f782638b0caa89e882132" translate="yes" xml:space="preserve">
          <source>rt/config.d</source>
          <target state="translated">rt/config.d</target>
        </trans-unit>
        <trans-unit id="56e474ce4fc25523ff8e0175745afe9242dac726" translate="yes" xml:space="preserve">
          <source>rt/cover.d</source>
          <target state="translated">rt/cover.d</target>
        </trans-unit>
        <trans-unit id="bfbaac9002f89bcda085f5784c36a4f87fdac49d" translate="yes" xml:space="preserve">
          <source>rt/deh.d</source>
          <target state="translated">rt/deh.d</target>
        </trans-unit>
        <trans-unit id="69a3fa954d168d57fd5da97a8c3fe4cdc3b5b128" translate="yes" xml:space="preserve">
          <source>rt/deh_win32.d</source>
          <target state="translated">rt/deh_win32.d</target>
        </trans-unit>
        <trans-unit id="04025e774c54e4e33190d8e0eff5d90e42f77302" translate="yes" xml:space="preserve">
          <source>rt/deh_win64_posix.d</source>
          <target state="translated">rt/deh_win64_posix.d</target>
        </trans-unit>
        <trans-unit id="48fcdf80f97a169a7b0817c62719c122f6e40185" translate="yes" xml:space="preserve">
          <source>rt/dmain2.d</source>
          <target state="translated">rt/dmain2.d</target>
        </trans-unit>
        <trans-unit id="6bcc3adb5485f81640a9150075cad8eb83646a3b" translate="yes" xml:space="preserve">
          <source>rt/dwarfeh.d</source>
          <target state="translated">rt/dwarfeh.d</target>
        </trans-unit>
        <trans-unit id="64a74cc439b7b9a763a06544bf6e796f29dbfc12" translate="yes" xml:space="preserve">
          <source>rt/lifetime.d</source>
          <target state="translated">rt/lifetime.d</target>
        </trans-unit>
        <trans-unit id="0b830d6dce3669ecb8cad66891da4661ebd7b277" translate="yes" xml:space="preserve">
          <source>rt/llmath.d</source>
          <target state="translated">rt/llmath.d</target>
        </trans-unit>
        <trans-unit id="b3f1183cf7a7e7367b58eedc72c7d11bf224520f" translate="yes" xml:space="preserve">
          <source>rt/memory.d</source>
          <target state="translated">rt/memory.d</target>
        </trans-unit>
        <trans-unit id="0755e7fd3e017bc2ae0ea470431a07b8c9feadc9" translate="yes" xml:space="preserve">
          <source>rt/minfo.d</source>
          <target state="translated">rt/minfo.d</target>
        </trans-unit>
        <trans-unit id="3e8be018e0a53bf4d8c2bf2640163c627aee3060" translate="yes" xml:space="preserve">
          <source>rt/sections.d</source>
          <target state="translated">rt/sections.d</target>
        </trans-unit>
        <trans-unit id="e44b4af35dcec6c1051175474debf8fa3ab4b22f" translate="yes" xml:space="preserve">
          <source>rt/sections_android.d</source>
          <target state="translated">rt/sections_android.d</target>
        </trans-unit>
        <trans-unit id="8e44cd5f495116a65f1b54f1a92921a662df5c34" translate="yes" xml:space="preserve">
          <source>rt/sections_darwin_64.d</source>
          <target state="translated">rt/sections_darwin_64.d</target>
        </trans-unit>
        <trans-unit id="d9fafcfebcf91668de59b02170e9ef1150138f7e" translate="yes" xml:space="preserve">
          <source>rt/sections_linux.d</source>
          <target state="translated">rt/sections_linux.d</target>
        </trans-unit>
        <trans-unit id="0dfab490ef8bb8dc7054502dfe3b1c1c9b8b169d" translate="yes" xml:space="preserve">
          <source>rt/sections_osx_x86.d</source>
          <target state="translated">rt/sections_osx_x86.d</target>
        </trans-unit>
        <trans-unit id="2b38fbc073ae7b5e7973a9387f75b11c7ff8efa2" translate="yes" xml:space="preserve">
          <source>rt/sections_osx_x86_64.d</source>
          <target state="translated">rt/sections_osx_x86_64.d</target>
        </trans-unit>
        <trans-unit id="3c6f94ee22b046cf050c809435146113b5c46f04" translate="yes" xml:space="preserve">
          <source>rt/sections_solaris.d</source>
          <target state="translated">rt/sections_solaris.d</target>
        </trans-unit>
        <trans-unit id="a1278d901fd153020c033e875a372eaa74853e99" translate="yes" xml:space="preserve">
          <source>rt/sections_win32.d</source>
          <target state="translated">rt/sections_win32.d</target>
        </trans-unit>
        <trans-unit id="eda129deba49e73babc80a4c17905917c129e67f" translate="yes" xml:space="preserve">
          <source>rt/sections_win64.d</source>
          <target state="translated">rt/sections_win64.d</target>
        </trans-unit>
        <trans-unit id="2aeefc2d3e19ee1a50c7ddd396c0ad2943be9625" translate="yes" xml:space="preserve">
          <source>rt/trace.d</source>
          <target state="translated">rt/trace.d</target>
        </trans-unit>
        <trans-unit id="61f4ca0fb05e3dc2bd6d33e4a8d7d749559ff1c3" translate="yes" xml:space="preserve">
          <source>rt/unwind.d</source>
          <target state="translated">rt/unwind.d</target>
        </trans-unit>
        <trans-unit id="2a85157f1ab9e85dc75aa3f2371845e1c6c940b2" translate="yes" xml:space="preserve">
          <source>rt/util/array.d</source>
          <target state="translated">rt/util/array.d</target>
        </trans-unit>
        <trans-unit id="57695ada33e15ab0ef091ef9285392414bb50538" translate="yes" xml:space="preserve">
          <source>rt/util/utility.d</source>
          <target state="translated">rt/util/utility.d</target>
        </trans-unit>
        <trans-unit id="9c56a1bb40d9d96c505c75447108835eb8017577" translate="yes" xml:space="preserve">
          <source>rt_options[] contains an entry &quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c49d9cc3c0c83421a1cfb921cdd4aa35dc1ba5c" translate="yes" xml:space="preserve">
          <source>running</source>
          <target state="translated">running</target>
        </trans-unit>
        <trans-unit id="b2732f07bfe026abb08a5406923ff6ec7158740c" translate="yes" xml:space="preserve">
          <source>runtime.d</source>
          <target state="translated">runtime.d</target>
        </trans-unit>
        <trans-unit id="0df61e92d1f906ebb877b4b550b6f6210d12825b" translate="yes" xml:space="preserve">
          <source>rvalue</source>
          <target state="translated">rvalue</target>
        </trans-unit>
        <trans-unit id="a0f1490a20d0211c997b44bc357e1972deab8ae3" translate="yes" xml:space="preserve">
          <source>s</source>
          <target state="translated">s</target>
        </trans-unit>
        <trans-unit id="90cc6533b235cb889e575bf8ed5f7ce4ba38b911" translate="yes" xml:space="preserve">
          <source>s and</source>
          <target state="translated">s y</target>
        </trans-unit>
        <trans-unit id="f2afdd1e3e4263530015ce431a0cc14cfa2eb60a" translate="yes" xml:space="preserve">
          <source>s and &lt;a href=&quot;declaration#Declaration&quot;&gt;&lt;i&gt;Declaration&lt;/i&gt;&lt;/a&gt;s are resolved by the declarations taking precedence. Wrapping such a statement in parentheses will disambiguate it in favor of being a</source>
          <target state="translated">sy &lt;a href=&quot;declaration#Declaration&quot;&gt;&lt;i&gt;Declaraci&amp;oacute;n&lt;/i&gt;&lt;/a&gt; s se resuelven por las declaraciones que tienen prioridad. Envolver dicha declaraci&amp;oacute;n entre par&amp;eacute;ntesis la desambiguar&amp;aacute; a favor de ser un</target>
        </trans-unit>
        <trans-unit id="35c4b0e47ae6108bbb043c4695795ef7ce99c344" translate="yes" xml:space="preserve">
          <source>s are a shorthand syntax for &lt;a href=&quot;#FunctionLiteral&quot;&gt;&lt;i&gt;FunctionLiteral&lt;/i&gt;&lt;/a&gt;s.</source>
          <target state="translated">s son una sintaxis abreviada para &lt;a href=&quot;#FunctionLiteral&quot;&gt;&lt;i&gt;FunctionLiteral&lt;/i&gt;&lt;/a&gt; s.</target>
        </trans-unit>
        <trans-unit id="93549348dfdd8e89a094db4a9dad990ea46ee1ee" translate="yes" xml:space="preserve">
          <source>s are always checked and evaluated by the compiler unless they appear in an unsatisfied conditional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab3a089539f3215269f5b64e73a7e1609a57bfd" translate="yes" xml:space="preserve">
          <source>s are always checked and evaluted by the compiler unless they appear in an unsatisfied conditional.</source>
          <target state="translated">El compilador siempre comprueba y evalúa los sándwiches a menos que aparezcan en un condicional insatisfecho.</target>
        </trans-unit>
        <trans-unit id="86a7d8ca0270b87cd24bc23d26a85b07c4865e23" translate="yes" xml:space="preserve">
          <source>s are always instantiated in the scope of where the</source>
          <target state="translated">s siempre se instancian en el ámbito de donde el</target>
        </trans-unit>
        <trans-unit id="cab7c03d3fe57f918bc2e7844433e25549e8b62d" translate="yes" xml:space="preserve">
          <source>s are done in different modules.</source>
          <target state="translated">s se hacen en diferentes módulos.</target>
        </trans-unit>
        <trans-unit id="0395c6d04f225616510e16af37238bbb54d17205" translate="yes" xml:space="preserve">
          <source>s are evaluated at compile time and are used for checking for valid types, comparing types for equivalence, determining if one type can be implicitly converted to another, and deducing the subtypes of a type. The result of an</source>
          <target state="translated">se evalúan en el momento de la compilación y se utilizan para comprobar la existencia de tipos válidos,comparar los tipos en cuanto a la equivalencia,determinar si un tipo puede convertirse implícitamente en otro y deducir los subtipos de un tipo.El resultado de un</target>
        </trans-unit>
        <trans-unit id="641b108b90b7528d7e40d8808f344dd326b5ce27" translate="yes" xml:space="preserve">
          <source>s are in scope for the &lt;a href=&quot;expression#AssignExpression&quot;&gt;&lt;i&gt;AssignExpression&lt;/i&gt;&lt;/a&gt;s.</source>
          <target state="translated">s est&amp;aacute;n dentro del alcance de &lt;a href=&quot;expression#AssignExpression&quot;&gt;&lt;i&gt;AssignExpression&lt;/i&gt;&lt;/a&gt; s.</target>
        </trans-unit>
        <trans-unit id="fdfd0d198208e8905d829eacbf5f598f2b97021d" translate="yes" xml:space="preserve">
          <source>s are used in member function templates to pick up the type of the</source>
          <target state="translated">s se utilizan en las plantillas de funciones de los miembros para recoger el tipo de</target>
        </trans-unit>
        <trans-unit id="5e02d615fd6a159ef68e55572f55b0212c30c88b" translate="yes" xml:space="preserve">
          <source>s are used to allocate memory on the garbage collected heap (default) or using a class or struct specific allocator.</source>
          <target state="translated">s se utilizan para asignar memoria en el montón de basura recolectada (por defecto)o utilizando un asignador específico de clase o estructura.</target>
        </trans-unit>
        <trans-unit id="f19675f2ec2534a57fc793d6a4142c2728ca2acd" translate="yes" xml:space="preserve">
          <source>s are used to impose additional constraints on matching arguments to a template beyond what is possible in the &lt;a href=&quot;#TemplateParameterList&quot;&gt;&lt;i&gt;TemplateParameterList&lt;/i&gt;&lt;/a&gt;. The</source>
          <target state="translated">s se utilizan para imponer restricciones adicionales sobre los argumentos de coincidencia con una plantilla m&amp;aacute;s all&amp;aacute; de lo que es posible en &lt;a href=&quot;#TemplateParameterList&quot;&gt;&lt;i&gt;TemplateParameterList&lt;/i&gt;&lt;/a&gt; . los</target>
        </trans-unit>
        <trans-unit id="97388741e4ce35168a402088a818cfc132b9b9ba" translate="yes" xml:space="preserve">
          <source>s are: &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;immutable&lt;/code&gt;, &lt;code&gt;shared&lt;/code&gt;, and &lt;code&gt;inout&lt;/code&gt;. Each applies transitively to all subtypes.</source>
          <target state="translated">s son: &lt;code&gt;const&lt;/code&gt; , &lt;code&gt;immutable&lt;/code&gt; , &lt;code&gt;shared&lt;/code&gt; e &lt;code&gt;inout&lt;/code&gt; . Cada uno se aplica de forma transitiva a todos los subtipos.</target>
        </trans-unit>
        <trans-unit id="f7e040974a309df0ac557446614a0fea2c4d0e4b" translate="yes" xml:space="preserve">
          <source>s can appear in module, class, template, struct, union, or function scope. In function scope, the symbols referred to in the &lt;a href=&quot;expression#AssignExpression&quot;&gt;&lt;i&gt;AssignExpression&lt;/i&gt;&lt;/a&gt; can be any that can normally be referenced by an expression at that point.</source>
          <target state="translated">s puede aparecer en m&amp;oacute;dulo, clase, plantilla, estructura, uni&amp;oacute;n o &amp;aacute;mbito de funci&amp;oacute;n. En el &amp;aacute;mbito de la funci&amp;oacute;n, los s&amp;iacute;mbolos a los que se hace referencia en &lt;a href=&quot;expression#AssignExpression&quot;&gt;&lt;i&gt;AssignExpression&lt;/i&gt;&lt;/a&gt; pueden ser cualquiera que normalmente pueda ser referenciada por una expresi&amp;oacute;n en ese punto.</target>
        </trans-unit>
        <trans-unit id="89712b88bb4211b717e54eb342722881e2f3a545" translate="yes" xml:space="preserve">
          <source>s can be defined if they are prefixed by the vendor's trademarked name, in a similar manner to version identifiers:</source>
          <target state="translated">s pueden definirse si van precedidos del nombre de marca del vendedor,de manera similar a los identificadores de versión:</target>
        </trans-unit>
        <trans-unit id="ac92c7b5979f2c418b6054b74943800bb884b912" translate="yes" xml:space="preserve">
          <source>s can be nested.</source>
          <target state="translated">Los s pueden ser anidados.</target>
        </trans-unit>
        <trans-unit id="b764feadf97ef07d1867736637a35b6f9ce497a2" translate="yes" xml:space="preserve">
          <source>s correspond with multiple</source>
          <target state="translated">s corresponden con múltiples</target>
        </trans-unit>
        <trans-unit id="dbb906a6e1c94e614a3879fbaea1d1d05bcfd1e4" translate="yes" xml:space="preserve">
          <source>s corresponding replacement text.</source>
          <target state="translated">El texto de reemplazo correspondiente de la compañía.</target>
        </trans-unit>
        <trans-unit id="3927036ab1f6d9fd2e33bb47e2d57f78e2a65585" translate="yes" xml:space="preserve">
          <source>s create a symbol that is an alias for another type, and can be used anywhere that other type may appear.</source>
          <target state="translated">s crear un símbolo que sea un alias de otro tipo,y que pueda ser utilizado en cualquier lugar donde pueda aparecer ese otro tipo.</target>
        </trans-unit>
        <trans-unit id="548db14e2eb5b71a249cc5940275cbb11afa7aa9" translate="yes" xml:space="preserve">
          <source>s enable embedding anonymous functions and anonymous delegates directly into expressions.</source>
          <target state="translated">s permiten incrustar funciones anónimas y delegados anónimos directamente en las expresiones.</target>
        </trans-unit>
        <trans-unit id="8d339ccad29fef27e6a2a6b14d88bb6cca1a696d" translate="yes" xml:space="preserve">
          <source>s form the elements of a dynamic array, the length of the array is the number of elements. The common type of the all elements is taken to be the type of the array element, and all elements are implicitly converted to that type.</source>
          <target state="translated">s forman los elementos de un conjunto dinámico,la longitud del conjunto es el número de elementos.Se considera que el tipo común de todos los elementos es el tipo de elemento del conjunto,y todos los elementos se convierten implícitamente a ese tipo.</target>
        </trans-unit>
        <trans-unit id="be5b02eb65a448647cb059db11cf2ebe3b60ae49" translate="yes" xml:space="preserve">
          <source>s in a scope, they will be executed in the reverse lexical order in which they appear. If any scope instances are to be destroyed upon the close of the scope, their destructions will be interleaved with the</source>
          <target state="translated">s en un ámbito,se ejecutarán en el orden léxico inverso en el que aparecen.Si alguna instancia del alcance debe ser destruida al cierre del alcance,sus destrucciones serán intercaladas con el</target>
        </trans-unit>
        <trans-unit id="b56bcc0f7eb879b73014328e21fad1f85c055e91" translate="yes" xml:space="preserve">
          <source>s in the</source>
          <target state="translated">s en el</target>
        </trans-unit>
        <trans-unit id="878b821659ddd076a9458fe01abde3c950abf602" translate="yes" xml:space="preserve">
          <source>s in the delegate type passed to &lt;code&gt;opApply&lt;/code&gt; or &lt;code&gt;opApplyReverse&lt;/code&gt;. There can be multiple &lt;code&gt;opApply&lt;/code&gt; and &lt;code&gt;opApplyReverse&lt;/code&gt; functions, one is selected by matching the type of</source>
          <target state="translated">s en el tipo de delegado pasado a &lt;code&gt;opApply&lt;/code&gt; u &lt;code&gt;opApplyReverse&lt;/code&gt; . Puede haber m&amp;uacute;ltiples funciones &lt;code&gt;opApply&lt;/code&gt; y &lt;code&gt;opApplyReverse&lt;/code&gt; , una se selecciona haciendo coincidir el tipo de</target>
        </trans-unit>
        <trans-unit id="95a6c1ab414afad917f0d71204f5933d6b5ab68c" translate="yes" xml:space="preserve">
          <source>s in the reverse lexical order in which they appear.</source>
          <target state="translated">en el orden léxico inverso al que aparecen.</target>
        </trans-unit>
        <trans-unit id="d33c3b0c2081e2b71dc210052957e00ac3bbf91a" translate="yes" xml:space="preserve">
          <source>s may only appear at module scope.</source>
          <target state="translated">s sólo pueden aparecer en el ámbito del módulo.</target>
        </trans-unit>
        <trans-unit id="3cd2e00d3cf8b42ea670903080924e4a233900b0" translate="yes" xml:space="preserve">
          <source>s must hold at the entry and exit of all public or exported non-static member functions. The order of application of invariants is:</source>
          <target state="translated">s deben mantener a la entrada y salida de todas las funciones públicas o exportadas de los miembros no estáticos.El orden de aplicación de las invariantes es:</target>
        </trans-unit>
        <trans-unit id="4b44e13e333685a37f61b56028935ee72885c621" translate="yes" xml:space="preserve">
          <source>s must hold at the exit of the class constructor (if any), at the entry of the class destructor (if any).</source>
          <target state="translated">s deben aguantar a la salida del constructor de la clase (si lo hay),a la entrada del destructor de la clase (si lo hay).</target>
        </trans-unit>
        <trans-unit id="037af9af4ee70058a94e2dbd513b2ace4ebe81d1" translate="yes" xml:space="preserve">
          <source>s must hold at the exit of the struct constructor (if any), and at the entry of the struct destructor (if any).</source>
          <target state="translated">s deben mantenerse a la salida del constructor de la estructura (si lo hay),y a la entrada del destructor de la estructura (si lo hay).</target>
        </trans-unit>
        <trans-unit id="1f821ea2009a3ed206b8bde05a80198f168a11cd" translate="yes" xml:space="preserve">
          <source>s nor the element types of an associative array can be function types or &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">s ni los tipos de elementos de una matriz asociativa pueden ser tipos de funciones o &lt;code&gt;void&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4cbb2742b1b20f41d9946c7318b2414aeecb7797" translate="yes" xml:space="preserve">
          <source>s occur has no significance.</source>
          <target state="translated">El hecho de que ocurra no tiene importancia.</target>
        </trans-unit>
        <trans-unit id="12ee40460e2af6c40098b57cd0a6e9eeb12f266a" translate="yes" xml:space="preserve">
          <source>s of the</source>
          <target state="translated">s de la</target>
        </trans-unit>
        <trans-unit id="e914105e4c28768eb399503cce78984fde36e891" translate="yes" xml:space="preserve">
          <source>s preceding the rightmost</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9646289563be83f2c16cd66318ea74935caab67" translate="yes" xml:space="preserve">
          <source>s preceding the rightmost are the</source>
          <target state="translated">Los que preceden a los de la derecha son los</target>
        </trans-unit>
        <trans-unit id="d6066049931ecb05c460fafbbbba8b46b3cedcde" translate="yes" xml:space="preserve">
          <source>s shall not have any other instructions (such as register save or restores) inserted between them by the compiler.</source>
          <target state="translated">s no tendrán ninguna otra instrucción (como guardar el registro o restaurar)insertada entre ellas por el compilador.</target>
        </trans-unit>
        <trans-unit id="01b1ce2c9e972987394c881edd85f50b09073d68" translate="yes" xml:space="preserve">
          <source>s specify the relationships among the members of a struct instance. Those relationships must hold for any interactions with the instance from its public interface.</source>
          <target state="translated">s especifican las relaciones entre los miembros de una instancia estructural.Esas relaciones deben ser válidas para cualquier interacción con la instancia desde su interfaz pública.</target>
        </trans-unit>
        <trans-unit id="3c870d189d2274f08bcaf6f439bb1cd34b0813d2" translate="yes" xml:space="preserve">
          <source>s used elsewhere, the assert is not assumed to hold, and upon assert failure the program is still in a defined state.</source>
          <target state="translated">Como se utiliza en otros lugares,no se supone que la afirmación se mantenga,y al fallar la afirmación el programa sigue en un estado definido.</target>
        </trans-unit>
        <trans-unit id="bb6ac048ffaf0064e1cb52d042628c718d4a512e" translate="yes" xml:space="preserve">
          <source>s with the &lt;a href=&quot;declaration#NonVoidInitializer&quot;&gt;&lt;i&gt;NonVoidInitializer&lt;/i&gt;&lt;/a&gt; syntax appear in the lexical order of the fields in the &lt;a href=&quot;#StructDeclaration&quot;&gt;&lt;i&gt;StructDeclaration&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">s con la sintaxis de &lt;a href=&quot;declaration#NonVoidInitializer&quot;&gt;&lt;i&gt;NonVoidInitializer&lt;/i&gt;&lt;/a&gt; aparecen en el orden l&amp;eacute;xico de los campos en &lt;a href=&quot;#StructDeclaration&quot;&gt;&lt;i&gt;StructDeclaration&lt;/i&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="066ae897e3cbc448da9c5ae8549f0944d6dd0c93" translate="yes" xml:space="preserve">
          <source>s work on integral types (except &lt;code&gt;bool&lt;/code&gt;). All the bits in the value are complemented.</source>
          <target state="translated">s trabajo en tipos integrales (excepto &lt;code&gt;bool&lt;/code&gt; ). Todos los bits en el valor se complementan.</target>
        </trans-unit>
        <trans-unit id="af48b61c847be3747ad8caca384477c8e0d46e06" translate="yes" xml:space="preserve">
          <source>s, even if they are vendor specific ones.</source>
          <target state="translated">aunque sean específicos de un proveedor.</target>
        </trans-unit>
        <trans-unit id="e0aa646359d1cafa98e01569ea6c3aaed50e20a7" translate="yes" xml:space="preserve">
          <source>s, the inner-most scope takes precedence. If a symbol cannot be resolved at the inner-most scope, resolution is forwarded incrementally up the scope hierarchy.</source>
          <target state="translated">s,el alcance más interno tiene prioridad.Si un símbolo no puede resolverse en el alcance más interno,la resolución se remite incrementalmente hacia arriba en la jerarquía del alcance.</target>
        </trans-unit>
        <trans-unit id="79f29af65d5e836d58ca956194a0878292b1c5c9" translate="yes" xml:space="preserve">
          <source>s, the return type is inferred to be void.</source>
          <target state="translated">s,se infiere que el tipo de retorno es nulo.</target>
        </trans-unit>
        <trans-unit id="ab31f9f96b46f64368a0c230bc61e2b929c66b0e" translate="yes" xml:space="preserve">
          <source>s, the types of them must be implicitly convertible to a common type. If there are no</source>
          <target state="translated">s,los tipos de ellos deben ser implícitamente convertibles en un tipo común.Si no hay</target>
        </trans-unit>
        <trans-unit id="55d7456070a0877845c91e46eb844fc065dbe288" translate="yes" xml:space="preserve">
          <source>s.</source>
          <target state="translated">s.</target>
        </trans-unit>
        <trans-unit id="6227e9e660bb83211897bbaa160456c7a778bf55" translate="yes" xml:space="preserve">
          <source>s. A</source>
          <target state="translated">s.A</target>
        </trans-unit>
        <trans-unit id="bdf289c1650b50b9300df39e148da4731ef93084" translate="yes" xml:space="preserve">
          <source>s. Execution occurs in lexical order, though certain statements may have deferred effects. A</source>
          <target state="translated">s.La ejecución se produce en orden léxico,aunque ciertas declaraciones pueden tener efectos diferidos.A</target>
        </trans-unit>
        <trans-unit id="2c92884f80dd9cbb7b4be77c249376ca91031f53" translate="yes" xml:space="preserve">
          <source>s. If one is there, it must be &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, or an integer value. An integer value is implicitly converted to a bool.</source>
          <target state="translated">s. Si hay uno, debe ser &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; o un valor entero. Un valor entero se convierte impl&amp;iacute;citamente en un bool.</target>
        </trans-unit>
        <trans-unit id="56639e6243fae66146196724403a41242c6d0d20" translate="yes" xml:space="preserve">
          <source>s2ir.d</source>
          <target state="translated">s2ir.d</target>
        </trans-unit>
        <trans-unit id="3608a6d1a05aba23ea390e5f3b48203dbb7241f7" translate="yes" xml:space="preserve">
          <source>sa</source>
          <target state="translated">sa</target>
        </trans-unit>
        <trans-unit id="41296217e71958d8a896ea7521acdd6779a629f0" translate="yes" xml:space="preserve">
          <source>safe.d</source>
          <target state="translated">safe.d</target>
        </trans-unit>
        <trans-unit id="a9c3a1723405c0f9772744135fb727da79aba197" translate="yes" xml:space="preserve">
          <source>saturation</source>
          <target state="translated">saturation</target>
        </trans-unit>
        <trans-unit id="b70482a9c35b236639019cd8b2ecb03a9ee7db09" translate="yes" xml:space="preserve">
          <source>sb</source>
          <target state="translated">sb</target>
        </trans-unit>
        <trans-unit id="04096ad9c89678a1014d9c435db136c296cd2168" translate="yes" xml:space="preserve">
          <source>sc</source>
          <target state="translated">sc</target>
        </trans-unit>
        <trans-unit id="6b05c46ee5777524bc3d2ced504d7d34efb97d83" translate="yes" xml:space="preserve">
          <source>sc s candidate symbol of template. It may be: TemplateDeclaration FuncDeclaration with findTemplateDeclRoot() != NULL OverloadSet which contains candidates</source>
          <target state="translated">El candidato de la escuela es el símbolo de la plantilla.Puede ser:TemplateDeclaration FuncDeclaration with findTemplateDeclRoot()!=NULL OverloadSet que contiene candidatos</target>
        </trans-unit>
        <trans-unit id="33e73eb3694abb850b33dd3ce91132f45ae9b53d" translate="yes" xml:space="preserve">
          <source>sc: scope flag: 1: do not issue error message for invalid modification</source>
          <target state="translated">sc:indicador de alcance:1:no emitir mensaje de error por modificación inválida</target>
        </trans-unit>
        <trans-unit id="d81df8920b9c11dd34c1d659c45567201f39f48f" translate="yes" xml:space="preserve">
          <source>scalb(x)</source>
          <target state="translated">scalb(x)</target>
        </trans-unit>
        <trans-unit id="b22184a0f68e7da7ae5310b820c8b6937c36be97" translate="yes" xml:space="preserve">
          <source>scalbn handles underflow and overflow in the same fashion as the basic arithmetic operators.</source>
          <target state="translated">scalbn maneja el desbordamiento y el desbordamiento de la misma manera que los operadores aritméticos básicos.</target>
        </trans-unit>
        <trans-unit id="f1d62ca304c7ab604b4f3e119b5c09703ec49e09" translate="yes" xml:space="preserve">
          <source>scan &lt;code&gt;void[]&lt;/code&gt; arrays for pointers, since such an array may have been implicitly converted from an array of pointers or an array of elements that contain pointers. Allocating an array that contains pointers as &lt;code&gt;ubyte[]&lt;/code&gt; may run the risk of the GC collecting live memory if these pointers are the only remaining references to their targets.</source>
          <target state="translated">escanee matrices &lt;code&gt;void[]&lt;/code&gt; busca de punteros, ya que dicha matriz puede haberse convertido impl&amp;iacute;citamente a partir de una matriz de punteros o una matriz de elementos que contienen punteros. La asignaci&amp;oacute;n de una matriz que contiene punteros como &lt;code&gt;ubyte[]&lt;/code&gt; puede correr el riesgo de que el GC recopile memoria en vivo si estos punteros son las &amp;uacute;nicas referencias restantes a sus objetivos.</target>
        </trans-unit>
        <trans-unit id="3f2cf1faa1bfa2031c3d9d03cb1e61229ba8cdc1" translate="yes" xml:space="preserve">
          <source>scanelf.d</source>
          <target state="translated">scanelf.d</target>
        </trans-unit>
        <trans-unit id="0dfdc54759f353f870b07d0867628e357a1c1bdb" translate="yes" xml:space="preserve">
          <source>scexpr</source>
          <target state="translated">scexpr</target>
        </trans-unit>
        <trans-unit id="aacd3103f3f1fcab0248f041a315ab6816c8a0e9" translate="yes" xml:space="preserve">
          <source>scope</source>
          <target state="translated">scope</target>
        </trans-unit>
        <trans-unit id="075b86d89c0dfb5e021a384aa07d0116ed82c4a8" translate="yes" xml:space="preserve">
          <source>scope Range &lt;strong id=&quot;beFound&quot;&gt;beFound&lt;/strong&gt;(Range haystack);</source>
          <target state="translated">alcance Range &lt;strong id=&quot;beFound&quot;&gt;beFound&lt;/strong&gt; (Range haystack);</target>
        </trans-unit>
        <trans-unit id="06d3148d4aad57b695bd607c3784faf1b220303a" translate="yes" xml:space="preserve">
          <source>scope auto &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;(size_t a, size_t b) return;</source>
          <target state="translated">alcance auto &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt; (size_t a, size_t b) return;</target>
        </trans-unit>
        <trans-unit id="3c568d3f4d0bf9f343696db6b462c98d2b049c64" translate="yes" xml:space="preserve">
          <source>scope bool &lt;strong id=&quot;writeUpToNextSpec&quot;&gt;writeUpToNextSpec&lt;/strong&gt;(OutputRange)(ref OutputRange writer);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a874a54d41c87e4cdbf9e2a2bc9804e9d1d2cb1e" translate="yes" xml:space="preserve">
          <source>scope from which to access to a fully qualified package name</source>
          <target state="translated">alcance desde el cual se puede acceder a un nombre de paquete completamente calificado</target>
        </trans-unit>
        <trans-unit id="edaaae1491d22d1dd2468a957c1c9f60fd208cd5" translate="yes" xml:space="preserve">
          <source>scope of the type</source>
          <target state="translated">alcance del tipo</target>
        </trans-unit>
        <trans-unit id="273944569752872c5ac6fa2100fd53fbf92a0ba4" translate="yes" xml:space="preserve">
          <source>scrubReturnValue is running</source>
          <target state="translated">scrubReturnValue está funcionando</target>
        </trans-unit>
        <trans-unit id="6a5b9bef20fd39e375825b30766743bf346f1e4a" translate="yes" xml:space="preserve">
          <source>sd( e1, e2, e3, ... )</source>
          <target state="translated">sd(e1,e2,e3,...)</target>
        </trans-unit>
        <trans-unit id="f424b3b874970c8f62a85cc58675d58bec74e935" translate="yes" xml:space="preserve">
          <source>search delegate</source>
          <target state="translated">delegado de búsqueda</target>
        </trans-unit>
        <trans-unit id="6552b5c63fdf82d14fc3160d2354725a736848d9" translate="yes" xml:space="preserve">
          <source>second index</source>
          <target state="translated">segundo índice</target>
        </trans-unit>
        <trans-unit id="774c9ad825873501b07b9524f09b4c397b5852eb" translate="yes" xml:space="preserve">
          <source>second lambda to be compared</source>
          <target state="translated">segundo lambda a comparar</target>
        </trans-unit>
        <trans-unit id="84f33878b0fe8409dd22c77f98a29b597cb75141" translate="yes" xml:space="preserve">
          <source>second operand</source>
          <target state="translated">segunda operando</target>
        </trans-unit>
        <trans-unit id="7ad41cab2a4f8e13fe4678d76b23ddce15b58522" translate="yes" xml:space="preserve">
          <source>second part of chain (can be null)</source>
          <target state="translated">segunda parte de la cadena (puede ser nula)</target>
        </trans-unit>
        <trans-unit id="bc4cfde23090154b5561375fff3f82d89cb51938" translate="yes" xml:space="preserve">
          <source>second segment</source>
          <target state="translated">segundo segmento</target>
        </trans-unit>
        <trans-unit id="5967a7c9b54092e047c0377d67038b11ea28b80e" translate="yes" xml:space="preserve">
          <source>seconds after the minute [0-60]</source>
          <target state="translated">segundos después del minuto [0-60]</target>
        </trans-unit>
        <trans-unit id="f9e7b878994fabb9dcd455876662364da964a009" translate="yes" xml:space="preserve">
          <source>section is optional, there cannot be a</source>
          <target state="translated">es opcional,no puede haber una</target>
        </trans-unit>
        <trans-unit id="e0aad6724aeb9b2d8eea87638f3f2d7ef2f16376" translate="yes" xml:space="preserve">
          <source>section is optional.</source>
          <target state="translated">La sección es opcional.</target>
        </trans-unit>
        <trans-unit id="c7ebe720b0142b84790f0ab01ae717827d93d18c" translate="yes" xml:space="preserve">
          <source>section names</source>
          <target state="translated">nombres de las secciones</target>
        </trans-unit>
        <trans-unit id="9367e446b1460653788bd97ed548b89ec0ccad68" translate="yes" xml:space="preserve">
          <source>section.</source>
          <target state="translated">section.</target>
        </trans-unit>
        <trans-unit id="86203e41c3ad1b35b9a04375c0ee85e10aa83f4a" translate="yes" xml:space="preserve">
          <source>see &lt;a href=&quot;#FuncResolveFlag&quot;&gt;&lt;code&gt;FuncResolveFlag&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ver &lt;a href=&quot;#FuncResolveFlag&quot;&gt; &lt;code&gt;FuncResolveFlag&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="32eebe288eb34cc314b92dd36696b62402f7f148" translate="yes" xml:space="preserve">
          <source>see description</source>
          <target state="translated">ver descripción</target>
        </trans-unit>
        <trans-unit id="c70c30b5b1fdb2e8d0ce8f89aea1591369156f76" translate="yes" xml:space="preserve">
          <source>seek whence...</source>
          <target state="translated">buscar de dónde...</target>
        </trans-unit>
        <trans-unit id="fb1104076937338e8fe1bd94282dc6fd7902f844" translate="yes" xml:space="preserve">
          <source>semantic2.d</source>
          <target state="translated">semantic2.d</target>
        </trans-unit>
        <trans-unit id="3224555d3d983d35322e8a1313920fd23f381972" translate="yes" xml:space="preserve">
          <source>semantic3.d</source>
          <target state="translated">semantic3.d</target>
        </trans-unit>
        <trans-unit id="f23dd6446f72a8fa31d2dd321f5b3fcd044116d8" translate="yes" xml:space="preserve">
          <source>send FILE * or void * to store headers to, if you use a callback it is simply passed to the callback unmodified</source>
          <target state="translated">enviar ARCHIVO*o anular*para almacenar las cabeceras a,si se utiliza un callback simplemente se pasa al callback sin modificar</target>
        </trans-unit>
        <trans-unit id="49d2ff0fffcd32406920fc45fe474a5d97bf8291" translate="yes" xml:space="preserve">
          <source>send PRET before PASV</source>
          <target state="translated">enviar PRET antes de PASV</target>
        </trans-unit>
        <trans-unit id="1d721211750f0d9163d0e80dafce37c7fd2b5859" translate="yes" xml:space="preserve">
          <source>send TYPE parameter?</source>
          <target state="translated">enviar el parámetro TYPE?</target>
        </trans-unit>
        <trans-unit id="072c2e756517f20da299eb252bfc033869fb4cc9" translate="yes" xml:space="preserve">
          <source>send linked-list of QUOTE commands</source>
          <target state="translated">enviar la lista de comandos de QUOTE</target>
        </trans-unit>
        <trans-unit id="a4125df8dc7281c6c9ed25642cb19e6c9f5b8557" translate="yes" xml:space="preserve">
          <source>send linked-list of name:port:address sets</source>
          <target state="translated">enviar lista de enlaces de nombre:puerto:conjuntos de direcciones</target>
        </trans-unit>
        <trans-unit id="37b4b3603d35dac7480358fc43f08b2d667f182d" translate="yes" xml:space="preserve">
          <source>send linked-list of post-transfer QUOTE commands</source>
          <target state="translated">enviar la lista de enlaces de los comandos de cotización post-transferencia</target>
        </trans-unit>
        <trans-unit id="0a0492301f967a3b4b44087cc529f9431643b7e9" translate="yes" xml:space="preserve">
          <source>send linked-list of pre-transfer QUOTE commands</source>
          <target state="translated">enviar la lista de comandos de pre-transferencia de QUOTE</target>
        </trans-unit>
        <trans-unit id="23bd82635b0a3eb396926d2838d40ad3052df508" translate="yes" xml:space="preserve">
          <source>send the path pieces here, end when sink() returns !=0</source>
          <target state="translated">Envía las piezas del camino aquí,y termina cuando regrese el fregadero.</target>
        </trans-unit>
        <trans-unit id="9f87dde2e837a2ec0f2a303862af92d0d5223370" translate="yes" xml:space="preserve">
          <source>separated with an underscore.</source>
          <target state="translated">separado con un guión bajo.</target>
        </trans-unit>
        <trans-unit id="78c19b2e22d3de510ce7b8949fbd73369d3180f8" translate="yes" xml:space="preserve">
          <source>separator is added, a backslash will be used. Furthermore, the &lt;a href=&quot;#buildNormalizedPath&quot;&gt;&lt;code&gt;buildNormalizedPath&lt;/code&gt;&lt;/a&gt; function will replace all slashes with backslashes on that platform.</source>
          <target state="translated">Se agrega un separador, se utilizar&amp;aacute; una barra invertida. Adem&amp;aacute;s, la funci&amp;oacute;n &lt;a href=&quot;#buildNormalizedPath&quot;&gt; &lt;code&gt;buildNormalizedPath&lt;/code&gt; &lt;/a&gt; reemplazar&amp;aacute; todas las barras inclinadas invertidas en esa plataforma.</target>
        </trans-unit>
        <trans-unit id="4aa233ce5e31264044397f325b51092ebc689e5d" translate="yes" xml:space="preserve">
          <source>sequentially consistent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de4f901fffb30ac720b0e7eb654b4faa2dd03fa" translate="yes" xml:space="preserve">
          <source>server</source>
          <target state="translated">server</target>
        </trans-unit>
        <trans-unit id="a23ae959dcba519e596d474044fdbac6639b0083" translate="yes" xml:space="preserve">
          <source>set a custom stepsize (default 1)</source>
          <target state="translated">establecer un tamaño de pasos personalizado (predeterminado 1)</target>
        </trans-unit>
        <trans-unit id="d6630098097a2e4ceb45dae103f62c111a304cd4" translate="yes" xml:space="preserve">
          <source>set if an overflow occurs, is not affected otherwise</source>
          <target state="translated">se fija si se produce un desbordamiento,no se ve afectado de otra manera</target>
        </trans-unit>
        <trans-unit id="6c0e1130be07401e219cd64dd569fe6b628fa6f6" translate="yes" xml:space="preserve">
          <source>set if catching C++ exceptions is supported</source>
          <target state="translated">establecido si se admite la captura de excepciones de C++</target>
        </trans-unit>
        <trans-unit id="6a082d732cdde605b00dfe232f6d6226fa5a2410" translate="yes" xml:space="preserve">
          <source>set if in the 'finally' block of a TryFinallyStatement</source>
          <target state="translated">en el bloque de &quot;finalmente&quot; de un &quot;TryFinallyStatement&quot;...</target>
        </trans-unit>
        <trans-unit id="217e3aa3bcc8362c2bb5df6d1ae779f0da2152d8" translate="yes" xml:space="preserve">
          <source>set if overloaded functions are grouped and in reverse order (such as in dmc and cl)</source>
          <target state="translated">se establecen si las funciones sobrecargadas se agrupan y en orden inverso (como en dmc y cl)</target>
        </trans-unit>
        <trans-unit id="2203fd2129c7bf375fe1158af4c890b1c0f99fe6" translate="yes" xml:space="preserve">
          <source>set if someone took the address of this function</source>
          <target state="translated">establecer si alguien tomó la dirección de esta función</target>
        </trans-unit>
        <trans-unit id="d210a989d211a5d16ae4de73db480df51d0cd9c8" translate="yes" xml:space="preserve">
          <source>set if this is a known, builtin function we can evaluate at compile time</source>
          <target state="translated">si esta es una función conocida e integrada que podemos evaluar en el momento de la compilación</target>
        </trans-unit>
        <trans-unit id="ea92fddff0e944a98b4831cfe37176d302e4a1a1" translate="yes" xml:space="preserve">
          <source>set if x cannot be negated, is not affected otherwise</source>
          <target state="translated">establecido si x no puede ser negado,no se ve afectado de otra manera</target>
        </trans-unit>
        <trans-unit id="aca756d8536bc4159f6aba4d196e5bf9f17cfa10" translate="yes" xml:space="preserve">
          <source>set on the command line as &quot;--DRT-</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9809202ca6a8654c743d2efcffea9e4068e9c365" translate="yes" xml:space="preserve">
          <source>set the SMTP mail originator</source>
          <target state="translated">establecer el originador de correo SMTP</target>
        </trans-unit>
        <trans-unit id="cc4e1e1232f50e1880aac84fd0a42241d14c7bb3" translate="yes" xml:space="preserve">
          <source>set the SMTP mail receiver(s)</source>
          <target state="translated">establecer el receptor o receptores de correo SMTP</target>
        </trans-unit>
        <trans-unit id="466a2519ee58b620cb8c9146c77293714c6d3d90" translate="yes" xml:space="preserve">
          <source>set the SSH host key callback custom pointer</source>
          <target state="translated">establecer el puntero personalizado de devolución de llamada de la clave de host SSH</target>
        </trans-unit>
        <trans-unit id="7bd864ea9245d34448030027c8a0e9a429beca81" translate="yes" xml:space="preserve">
          <source>set the SSH host key callback, must point to a curl_sshkeycallback function</source>
          <target state="translated">establecer la llamada de la clave de host SSH,debe apuntar a una función curl_sshkeycallback</target>
        </trans-unit>
        <trans-unit id="fadb675f43c654a06dbe3370246ce95bee353ff2" translate="yes" xml:space="preserve">
          <source>set the SSH knownhost file name to use</source>
          <target state="translated">establecer el nombre de archivo de SSH knownhost para usar</target>
        </trans-unit>
        <trans-unit id="d2cb458e591a1d18c46e9d2ee2e17734c0b9bbc9" translate="yes" xml:space="preserve">
          <source>set the array capacity. If the array capacity isn't currently large enough to hold the requested capacity (in number of elements), then the array is resized/reallocated to the appropriate size. Pass in a requested capacity of 0 to get the current capacity. Returns the number of elements that can actually be stored once the resizing is done.</source>
          <target state="translated">...establecer la capacidad de la matriz.Si la capacidad del arreglo no es actualmente lo suficientemente grande como para contener la capacidad solicitada (en número de elementos),entonces el arreglo se redimensiona/reasigna al tamaño apropiado.Pase una capacidad solicitada de 0 para obtener la capacidad actual.Devuelve el número de elementos que realmente se pueden almacenar una vez que se ha hecho el redimensionamiento.</target>
        </trans-unit>
        <trans-unit id="97e8909ceadbeccaeaa25ba0c51e3cd2e5e58d6e" translate="yes" xml:space="preserve">
          <source>set the bitmask for the protocols that are allowed to be used for the transfer, which thus helps the app which takes URLs from users or other external inputs and want to restrict what protocol(s) to deal with. Defaults to CURLPROTO_ALL.</source>
          <target state="translated">establecer la máscara de bits para los protocolos que se permite utilizar para la transferencia,lo que ayuda a la aplicación que toma las URL de los usuarios u otras entradas externas y quiere restringir qué protocolo(s)debe tratar.Por defecto es CURLPROTO_ALL.</target>
        </trans-unit>
        <trans-unit id="18801bb7ade2f4dd418ff2810c7dd538454a9698" translate="yes" xml:space="preserve">
          <source>set the bitmask for the protocols that libcurl is allowed to follow to, as a subset of the CURLOPT_PROTOCOLS ones. That means the protocol needs to be set in both bitmasks to be allowed to get redirected to. Defaults to all protocols except FILE and SCP.</source>
          <target state="translated">establecer la máscara de bits para los protocolos que libcurl puede seguir,como un subconjunto de los de CURLOPT_PROTOCOLS.Eso significa que el protocolo necesita ser establecido en ambas máscaras de bits para que se le permita ser redirigido.Por defecto,todos los protocolos excepto FILE y SCP.</target>
        </trans-unit>
        <trans-unit id="8cee29da0ab8bc02e1a43d991b81899f512a962e" translate="yes" xml:space="preserve">
          <source>set the crypto engine for the SSL-sub system as default the param has no meaning...</source>
          <target state="translated">establecer el motor de cifrado para el sistema SSL-sub como predeterminado el param no tiene ningún significado...</target>
        </trans-unit>
        <trans-unit id="178c8689c54273090cb678b6b26d6fcafcf8e2fb" translate="yes" xml:space="preserve">
          <source>set the data for the debug function</source>
          <target state="translated">establecer los datos para la función de depuración</target>
        </trans-unit>
        <trans-unit id="5da40ddbf459dd1904838060d5908d5347e42773" translate="yes" xml:space="preserve">
          <source>set the debug function</source>
          <target state="translated">establecer la función de depuración</target>
        </trans-unit>
        <trans-unit id="eba85d99c0c06d77c163970127b2fb6859ff879d" translate="yes" xml:space="preserve">
          <source>set the progress of base classes resolving</source>
          <target state="translated">establecer el progreso de las clases base resolviendo</target>
        </trans-unit>
        <trans-unit id="6a0b31199205313b923f3a8abbc01be3f2f79eff" translate="yes" xml:space="preserve">
          <source>set to 0 to disable session ID re-use for this transfer, default is enabled (== 1)</source>
          <target state="translated">poner en 0 para desactivar la reutilización del ID de la sesión para esta transferencia,el valor por defecto es habilitado (==1)</target>
        </trans-unit>
        <trans-unit id="c951d7bc14e2b60e522579b088f28d815b19cd6d" translate="yes" xml:space="preserve">
          <source>set to 1 to enable pipelining for this multi handle</source>
          <target state="translated">ajustada a 1 para permitir la canalización de esta manija múltiple</target>
        </trans-unit>
        <trans-unit id="54ea4bfe527c5b97418b8bc272b7bf7e3d6de5c8" translate="yes" xml:space="preserve">
          <source>set to &lt;code&gt;true&lt;/code&gt; if errors occurred</source>
          <target state="translated">establecido en &lt;code&gt;true&lt;/code&gt; si ocurrieron errores</target>
        </trans-unit>
        <trans-unit id="351ac6e66c18202f3e0342501772e6d2c8dbcc82" translate="yes" xml:space="preserve">
          <source>set to TryCatchStatement or TryFinallyStatement if in body portion</source>
          <target state="translated">se establece en TryCatchStatement o TryFinallyStatement si en la porción del cuerpo</target>
        </trans-unit>
        <trans-unit id="6be16cca5189efdee551443f6ea617a54b73ab93" translate="yes" xml:space="preserve">
          <source>set to character decoded</source>
          <target state="translated">establecido en el carácter decodificado</target>
        </trans-unit>
        <trans-unit id="2c86a9b4d3ad7f9fde78aa7f448d5b8db4fb0874" translate="yes" xml:space="preserve">
          <source>set to code executed in finally block</source>
          <target state="translated">se puso en el código ejecutado en el bloque final</target>
        </trans-unit>
        <trans-unit id="478db514d359019ec85d0d98011f37e6d4f6e04d" translate="yes" xml:space="preserve">
          <source>set to code executed upon entry to the scope</source>
          <target state="translated">se establece en el código ejecutado al entrar en el ámbito de aplicación</target>
        </trans-unit>
        <trans-unit id="9f3804f86f909439903020ff54aeccf08a5c73d4" translate="yes" xml:space="preserve">
          <source>set to code executed upon exit from the scope via exception</source>
          <target state="translated">se establece en el código ejecutado al salir del ámbito de aplicación a través de la excepción</target>
        </trans-unit>
        <trans-unit id="cb4f12c9a59924b59af78a17b6b0a93e9383f8ab" translate="yes" xml:space="preserve">
          <source>set to enclosing TryCatchStatement or TryFinallyStatement if in body portion</source>
          <target state="translated">...se establece para incluir el TryCatchStatement o el TryFinallyStatement si está en una porción del cuerpo...</target>
        </trans-unit>
        <trans-unit id="f6b364c902946368bf6f532c9cb9c3a4307b34bf" translate="yes" xml:space="preserve">
          <source>set to files pulled from &lt;code&gt;arguments&lt;/code&gt;</source>
          <target state="translated">establecer en archivos extra&amp;iacute;dos de &lt;code&gt;arguments&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f59cd358a3c15d31c79e380eb943c76e79e1441" translate="yes" xml:space="preserve">
          <source>set to function opApply/opApplyReverse, or delegate, or null. Overload resolution is not done.</source>
          <target state="translated">...se ajusta a la función opApply/opApplyReverse,o delegar,o anular.La resolución de sobrecarga no está hecha.</target>
        </trans-unit>
        <trans-unit id="6cffda076c2200656f2a8a05aa9621190824b4e1" translate="yes" xml:space="preserve">
          <source>set to index of which catch clause was matched</source>
          <target state="translated">establecido a un índice del cual la cláusula de captura fue emparejada</target>
        </trans-unit>
        <trans-unit id="cf88d4ab95e55f98b64d6089c6a517f5214c3cc1" translate="yes" xml:space="preserve">
          <source>set to landing pad</source>
          <target state="translated">en la pista de aterrizaje</target>
        </trans-unit>
        <trans-unit id="a53a6cfc99194e893c73123a6a38470f48e07cb3" translate="yes" xml:space="preserve">
          <source>set to number of code units processed</source>
          <target state="translated">establecido en el número de unidades de código procesadas</target>
        </trans-unit>
        <trans-unit id="b6b5b9255e952e4020e7bf55175ee3605682e6d0" translate="yes" xml:space="preserve">
          <source>set to result of parsing &lt;code&gt;arguments&lt;/code&gt;</source>
          <target state="translated">configurado como resultado de &lt;code&gt;arguments&lt;/code&gt; de an&amp;aacute;lisis</target>
        </trans-unit>
        <trans-unit id="d46e2032c0c312234bf329a3ed33399913469732" translate="yes" xml:space="preserve">
          <source>set to the elements of the array, one by one. The type of the variable must match the type of the array contents, except for the special cases outlined below. If there are two variables declared, the first is said to be the</source>
          <target state="translated">...se fijaron los elementos de la matriz,uno por uno.El tipo de la variable debe coincidir con el tipo de contenido del array,excepto en los casos especiales que se indican a continuación.Si se declaran dos variables,se dice que la primera es la</target>
        </trans-unit>
        <trans-unit id="66036176868025a53b82cfada3f110ad0f1afb08" translate="yes" xml:space="preserve">
          <source>set to the elements of the array, one by one. The type of the variable must match the type of the array contents. If there are two variables declared, the first is said to be the</source>
          <target state="translated">...se fijaron los elementos de la matriz,uno por uno.El tipo de la variable debe coincidir con el tipo de contenido del array.Si se declaran dos variables,se dice que la primera es la</target>
        </trans-unit>
        <trans-unit id="a74ef9f7c9f729cb8d561e9cdc8632e0764f8d46" translate="yes" xml:space="preserve">
          <source>set to zero to disable the libcurl's decoding and thus pass the raw body data to the application even when it is encoded/compressed</source>
          <target state="translated">poner a cero para desactivar la decodificación de la libcurl y así pasar los datos del cuerpo en bruto a la aplicación,incluso cuando está codificada/comprimida</target>
        </trans-unit>
        <trans-unit id="f3d7861b9857c6e709b08e4a5049e15e913f1de8" translate="yes" xml:space="preserve">
          <source>set transfer mode (;type=&amp;lt;a|i&amp;gt;) when doing FTP via an HTTP proxy</source>
          <target state="translated">establecer el modo de transferencia (; type = &amp;lt;a | i&amp;gt;) al hacer FTP a trav&amp;eacute;s de un proxy HTTP</target>
        </trans-unit>
        <trans-unit id="335ca5e62f51cf0e16107e7cd8a0fe94ea086abc" translate="yes" xml:space="preserve">
          <source>set type to uint so its size matches C++ unsigned type</source>
          <target state="translated">poner el tipo a uint para que su tamaño coincida con el tipo no firmado de C++</target>
        </trans-unit>
        <trans-unit id="1744c6317b601bb956e4f82338591bb93b2ee623" translate="yes" xml:space="preserve">
          <source>setAttributes with a directory</source>
          <target state="translated">setAttributes con un directorio</target>
        </trans-unit>
        <trans-unit id="dc1c0a421232f0df2714050e81a7d73b5140a384" translate="yes" xml:space="preserve">
          <source>setAttributes with a file</source>
          <target state="translated">setAttributes con un archivo</target>
        </trans-unit>
        <trans-unit id="15b1130b0be9f5c6a8114af8d55b5282f97705a6" translate="yes" xml:space="preserve">
          <source>sets the compression type to one of the options available in &lt;a href=&quot;#HeaderFormat&quot;&gt;&lt;code&gt;HeaderFormat&lt;/code&gt;&lt;/a&gt;. Defaults to HeaderFormat.deflate.</source>
          <target state="translated">establece el tipo de compresi&amp;oacute;n en una de las opciones disponibles en &lt;a href=&quot;#HeaderFormat&quot;&gt; &lt;code&gt;HeaderFormat&lt;/code&gt; &lt;/a&gt; . El valor predeterminado es HeaderFormat.deflate.</target>
        </trans-unit>
        <trans-unit id="ca1b8cce8933a8e58be13d972e8d0f23be369491" translate="yes" xml:space="preserve">
          <source>sets the name of the module and what package it belongs to. If absent, the module name is taken to be the same name (stripped of path and extension) of the source file name.</source>
          <target state="translated">establece el nombre del módulo y a qué paquete pertenece.En caso de ausencia,se considera que el nombre del módulo es el mismo nombre (despojado de la ruta y la extensión)del nombre del archivo fuente.</target>
        </trans-unit>
        <trans-unit id="31fef04c9a67709c23afa226ca3cecd88a2f91e6" translate="yes" xml:space="preserve">
          <source>sets the scanner to the end of the file</source>
          <target state="translated">establece el escáner al final del archivo</target>
        </trans-unit>
        <trans-unit id="20b626e9f1594586b70e3e8f88295b14f61dd69c" translate="yes" xml:space="preserve">
          <source>setting this means we don't care, and that we'd like the library to choose the best possible for us!</source>
          <target state="translated">establecer esto significa que no nos importa,y que nos gustaría que la biblioteca eligiera lo mejor posible para nosotros!</target>
        </trans-unit>
        <trans-unit id="97763c99c91437b6571d1cb180d84c1b352ad0b7" translate="yes" xml:space="preserve">
          <source>severeExceptions</source>
          <target state="translated">severeExceptions</target>
        </trans-unit>
        <trans-unit id="29b3d7d51a7ba9301c1b11cbe9021f508004f590" translate="yes" xml:space="preserve">
          <source>severeExceptions = The overflow, division by zero, and invalid exceptions.</source>
          <target state="translated">Excepciones severas=El desbordamiento,la división por cero,y las excepciones inválidas.</target>
        </trans-unit>
        <trans-unit id="aab90dfe8c6f152a4fb071f5f4f9df804626e6ab" translate="yes" xml:space="preserve">
          <source>share</source>
          <target state="translated">share</target>
        </trans-unit>
        <trans-unit id="ad6bcc61d075774df49c90b605c72bad6f3ee14e" translate="yes" xml:space="preserve">
          <source>shared @property shared(Mutex) &lt;strong id=&quot;mutex&quot;&gt;mutex&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795702ac19658affd91680b2b5e73591492963fd" translate="yes" xml:space="preserve">
          <source>shared @property uint &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt;();</source>
          <target state="translated">compartido @property uint &lt;strong id=&quot;alignment&quot;&gt;alineaci&amp;oacute;n&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="569c3005c912287068b0036e566233a4373ad7b0" translate="yes" xml:space="preserve">
          <source>shared @property void &lt;strong id=&quot;approxMaxLength&quot;&gt;approxMaxLength&lt;/strong&gt;(size_t x);</source>
          <target state="translated">shared @property void &lt;strong id=&quot;approxMaxLength&quot;&gt;approxMaxLength&lt;/strong&gt; (size_t x);</target>
        </trans-unit>
        <trans-unit id="c66b9f23e3e37f2bb3392e3ef00a31ce3b1fd00a" translate="yes" xml:space="preserve">
          <source>shared @trusted bool &lt;strong id=&quot;tryLock&quot;&gt;tryLock&lt;/strong&gt;();</source>
          <target state="translated">comparti&amp;oacute; @trusted bool &lt;strong id=&quot;tryLock&quot;&gt;tryLock&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="6d308561779023d8e2fa3a5e786f51f06a93e21e" translate="yes" xml:space="preserve">
          <source>shared @trusted void &lt;strong id=&quot;lock&quot;&gt;lock&lt;/strong&gt;();</source>
          <target state="translated">comparti&amp;oacute; @trusted void &lt;strong id=&quot;lock&quot;&gt;lock&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="efff886bf2baffb1822e9d2b296c9e99e726c665" translate="yes" xml:space="preserve">
          <source>shared @trusted void &lt;strong id=&quot;unlock&quot;&gt;unlock&lt;/strong&gt;();</source>
          <target state="translated">comparti&amp;oacute; @trusted &lt;strong id=&quot;unlock&quot;&gt;desbloqueo&lt;/strong&gt; vac&amp;iacute;o ();</target>
        </trans-unit>
        <trans-unit id="19e5760bddd00de60802ee7900d0cbbe52cbed43" translate="yes" xml:space="preserve">
          <source>shared FILE* &lt;strong id=&quot;stderr&quot;&gt;stderr&lt;/strong&gt;;</source>
          <target state="translated">ARCHIVO compartido * &lt;strong id=&quot;stderr&quot;&gt;stderr&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c51e4cb42f7538d77431b4cb7d5e0d6b874b5870" translate="yes" xml:space="preserve">
          <source>shared FILE* &lt;strong id=&quot;stdin&quot;&gt;stdin&lt;/strong&gt;;</source>
          <target state="translated">ARCHIVO compartido * &lt;strong id=&quot;stdin&quot;&gt;stdin&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="04c544781307ed942c1bb42a0730e1a1e7907537" translate="yes" xml:space="preserve">
          <source>shared FILE* &lt;strong id=&quot;stdout&quot;&gt;stdout&lt;/strong&gt;;</source>
          <target state="translated">FILE compartido * &lt;strong id=&quot;stdout&quot;&gt;stdout&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="65ee97e93b2d85063301134214dda3d134f2b3bd" translate="yes" xml:space="preserve">
          <source>shared ParentAllocator &lt;strong id=&quot;parent&quot;&gt;parent&lt;/strong&gt;;</source>
          <target state="translated">ParentAllocator compartido &lt;strong id=&quot;parent&quot;&gt;padre&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e2f1e33e82d1a63019cac58133a368b0628ba500" translate="yes" xml:space="preserve">
          <source>shared Ternary &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="translated">ternario compartido &lt;strong id=&quot;empty&quot;&gt;vac&amp;iacute;o&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="7a35d339dd963fb85d9720b54cdf472375d31f63" translate="yes" xml:space="preserve">
          <source>shared Ternary &lt;strong id=&quot;owns&quot;&gt;owns&lt;/strong&gt;(void[] b);</source>
          <target state="translated">&lt;strong id=&quot;owns&quot;&gt;posee&lt;/strong&gt; Ternary compartido (nulo [] b);</target>
        </trans-unit>
        <trans-unit id="7602078b2b0eddd5d216fdbdfb06c084d9b65fbd" translate="yes" xml:space="preserve">
          <source>shared bool &lt;strong id=&quot;alignedReallocate&quot;&gt;alignedReallocate&lt;/strong&gt;(ref void[] b, size_t s, uint a);</source>
          <target state="translated">bool compartido &lt;strong id=&quot;alignedReallocate&quot;&gt;alineado Volver a asignar&lt;/strong&gt; (ref void [] b, size_t s, uint a);</target>
        </trans-unit>
        <trans-unit id="043186769c0669a281cc780bb160e03bcca7f2cb" translate="yes" xml:space="preserve">
          <source>shared bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt;(void[] b);</source>
          <target state="translated">bool compartido &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt; (nulo [] b);</target>
        </trans-unit>
        <trans-unit id="e53516c035be8d7869a1cbfbf6077f80e4360363" translate="yes" xml:space="preserve">
          <source>shared bool &lt;strong id=&quot;deallocateAll&quot;&gt;deallocateAll&lt;/strong&gt;();</source>
          <target state="translated">bool compartido &lt;strong id=&quot;deallocateAll&quot;&gt;deallocateAll&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="95e99ca2262dbb376a4125a95ab9c8f71d3afd7f" translate="yes" xml:space="preserve">
          <source>shared bool &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt;(ref void[] b, size_t s);</source>
          <target state="translated">&lt;strong id=&quot;expand&quot;&gt;expandir&lt;/strong&gt; bool compartido (ref void [] b, size_t s);</target>
        </trans-unit>
        <trans-unit id="3ded74c12780b2cd6b859c25da2a25791b78e821" translate="yes" xml:space="preserve">
          <source>shared bool &lt;strong id=&quot;reallocate&quot;&gt;reallocate&lt;/strong&gt;(ref void[] b, size_t s);</source>
          <target state="translated">&lt;strong id=&quot;reallocate&quot;&gt;reasignaci&amp;oacute;n de&lt;/strong&gt; bool compartido (ref void [] b, size_t s);</target>
        </trans-unit>
        <trans-unit id="eddfc63d8fc1aa05590a8ffee104cd87a5c60a91" translate="yes" xml:space="preserve">
          <source>shared bool &lt;strong id=&quot;wait&quot;&gt;wait&lt;/strong&gt;(Duration val);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb7598a3ee55c589e3cc1083475afd5f26ece7a" translate="yes" xml:space="preserve">
          <source>shared const @property size_t &lt;strong id=&quot;approxMaxLength&quot;&gt;approxMaxLength&lt;/strong&gt;();</source>
          <target state="translated">const compartido @property size_t &lt;strong id=&quot;approxMaxLength&quot;&gt;approxMaxLength&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="4ad86d461a5cceea43475f181e139a857c75224c" translate="yes" xml:space="preserve">
          <source>shared const Ternary &lt;strong id=&quot;owns&quot;&gt;owns&lt;/strong&gt;(const void[] b);</source>
          <target state="translated">const compartido Ternary &lt;strong id=&quot;owns&quot;&gt;posee&lt;/strong&gt; (const void [] b);</target>
        </trans-unit>
        <trans-unit id="aea60eb0d8b887300ab25ac870939fd02cc23507" translate="yes" xml:space="preserve">
          <source>shared const pure nothrow @nogc @safe Ternary &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="translated">const pure nothrow compartido @nogc @safe Ternary &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="8469e1a654339340179f7deaceee43bf85e5027d" translate="yes" xml:space="preserve">
          <source>shared const pure nothrow @nogc @safe Ternary &lt;strong id=&quot;owns&quot;&gt;owns&lt;/strong&gt;(const void[]);</source>
          <target state="translated">const pure nothrow compartido @nogc @safe Ternary &lt;strong id=&quot;owns&quot;&gt;posee&lt;/strong&gt; (const void []);</target>
        </trans-unit>
        <trans-unit id="30bd61910098251671df1dc378f8c89aca3f6166" translate="yes" xml:space="preserve">
          <source>shared const pure nothrow @nogc @safe Ternary &lt;strong id=&quot;resolveInternalPointer&quot;&gt;resolveInternalPointer&lt;/strong&gt;(const void*, ref void[]);</source>
          <target state="translated">const pure nothrow compartido @nogc @safe Ternary &lt;strong id=&quot;resolveInternalPointer&quot;&gt;resolveInternalPointer&lt;/strong&gt; (const void *, ref void []);</target>
        </trans-unit>
        <trans-unit id="14620fde1adc303d5b16218ff9e3d186de1b3662" translate="yes" xml:space="preserve">
          <source>shared const pure nothrow @nogc @safe size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(size_t n);</source>
          <target state="translated">const pure nothrow compartido @nogc @safe size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt; (size_t n);</target>
        </trans-unit>
        <trans-unit id="19bfd3503856041ab92864b6a683ead5075080bd" translate="yes" xml:space="preserve">
          <source>shared const pure nothrow @nogc @safe void[] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt;(size_t bytes);</source>
          <target state="translated">const pure nothrow compartido @nogc @safe void [] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt; (size_t bytes);</target>
        </trans-unit>
        <trans-unit id="f92c7280da65d2b9b8da90cb1a8b00e6f576aa0d" translate="yes" xml:space="preserve">
          <source>shared const pure nothrow @nogc @system bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt;(void[] b);</source>
          <target state="translated">compartida const pura nothrow @nogc @System bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt; (void [] b);</target>
        </trans-unit>
        <trans-unit id="73381614048dd4181ee3db6dd3c61220b99296ed" translate="yes" xml:space="preserve">
          <source>shared const pure nothrow @nogc @trusted Ternary &lt;strong id=&quot;resolveInternalPointer&quot;&gt;resolveInternalPointer&lt;/strong&gt;(const void* p, ref void[] result);</source>
          <target state="translated">const pure nothrow compartido @nogc @trusted Ternary &lt;strong id=&quot;resolveInternalPointer&quot;&gt;resolveInternalPointer&lt;/strong&gt; (const void * p, ref void [] result);</target>
        </trans-unit>
        <trans-unit id="7874df8d24ca662daa4acb2082eccb8e0d41d150" translate="yes" xml:space="preserve">
          <source>shared const pure nothrow @nogc bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt;(void[] b);</source>
          <target state="translated">compartida const pura nothrow @nogc bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt; (void [] b);</target>
        </trans-unit>
        <trans-unit id="2ce967a17633ddebf69b23f35509de1b8d2a8538" translate="yes" xml:space="preserve">
          <source>shared const pure nothrow @system bool &lt;strong id=&quot;reallocate&quot;&gt;reallocate&lt;/strong&gt;(ref void[] b, size_t newSize);</source>
          <target state="translated">compartida const pura nothrow @System bool &lt;strong id=&quot;reallocate&quot;&gt;reallocate&lt;/strong&gt; (ref vac&amp;iacute;o b [], size_t newSize);</target>
        </trans-unit>
        <trans-unit id="96804c113332ba0e3b9251784525ee1eae2510d4" translate="yes" xml:space="preserve">
          <source>shared const pure nothrow @trusted bool &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt;(ref void[] b, size_t delta);</source>
          <target state="translated">const pure nothrow compartido @trusted bool &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt; (ref void [] b, size_t delta);</target>
        </trans-unit>
        <trans-unit id="924c2c7263fb8b07651255590f149eb16a6f84d6" translate="yes" xml:space="preserve">
          <source>shared const pure nothrow @trusted void[] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt;(size_t bytes);</source>
          <target state="translated">compartido const pure nothrow @trusted void [] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt; (size_t bytes);</target>
        </trans-unit>
        <trans-unit id="7596c514e308fa3847e791559836f5413e76abea" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc @system bool &lt;strong id=&quot;alignedReallocate&quot;&gt;alignedReallocate&lt;/strong&gt;(ref void[] b, size_t s, uint a);</source>
          <target state="translated">nothrow compartido @nogc @system bool &lt;strong id=&quot;alignedReallocate&quot;&gt;alineadoReallocate&lt;/strong&gt; (ref void [] b, size_t s, uint a);</target>
        </trans-unit>
        <trans-unit id="d424fa2dba6e25d7a59a8c48a5bf794f0f7a5a1b" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc @system bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt;(void[] b);</source>
          <target state="translated">compartido nothrow @nogc @System bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt; (void [] b);</target>
        </trans-unit>
        <trans-unit id="8545f3df08c1bf6b9f9f31db720b18687701a615" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc @system bool &lt;strong id=&quot;reallocate&quot;&gt;reallocate&lt;/strong&gt;(ref void[] b, size_t newSize);</source>
          <target state="translated">compartido nothrow @nogc @System bool &lt;strong id=&quot;reallocate&quot;&gt;reallocate&lt;/strong&gt; (ref void b [], size_t newSize);</target>
        </trans-unit>
        <trans-unit id="3d7228988de1e1356c1d7ef1fc1c8baa477be307" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc @trusted bool &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt;(ref void[] b, size_t delta);</source>
          <target state="translated">nothrow compartido @nogc @trusted bool &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt; (ref void [] b, size_t delta);</target>
        </trans-unit>
        <trans-unit id="576633c9f8e49caa5e983e0eb42ddd3b1e5b5e32" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc @trusted this();</source>
          <target state="translated">compartió nothrow @nogc @confió en esto();</target>
        </trans-unit>
        <trans-unit id="62c8202f1d4dd603727184c85524a7560d1cafd4" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc @trusted this(Object obj);</source>
          <target state="translated">compartido nohrow @nogc @confió en esto(Object obj);</target>
        </trans-unit>
        <trans-unit id="cda70a2fe85bc73661d9935c01580adb1c804ff4" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc @trusted void[] &lt;strong id=&quot;alignedAllocate&quot;&gt;alignedAllocate&lt;/strong&gt;(size_t bytes, uint a);</source>
          <target state="translated">nothrow compartido @nogc @trusted void [] &lt;strong id=&quot;alignedAllocate&quot;&gt;linedAllocate&lt;/strong&gt; ( &lt;strong id=&quot;alignedAllocate&quot;&gt;tama&amp;ntilde;o_t&lt;/strong&gt; bytes, uint a);</target>
        </trans-unit>
        <trans-unit id="fb17617bff4fc80cf4ef5ae34420debca9cf3f42" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc @trusted void[] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt;(size_t bytes);</source>
          <target state="translated">nothrow compartido @nogc @trusted void [] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt; (size_t bytes);</target>
        </trans-unit>
        <trans-unit id="087da6707d9a484c1d02a804020fa637f880d2bc" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc Ternary &lt;strong id=&quot;owns&quot;&gt;owns&lt;/strong&gt;(void[] buf);</source>
          <target state="translated">nothrow compartido @nogc &lt;strong id=&quot;owns&quot;&gt;posee&lt;/strong&gt; Ternary (void [] buf);</target>
        </trans-unit>
        <trans-unit id="31eafee2067972dc6eb801ebe581e883923802f7" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt;(void[] b);</source>
          <target state="translated">compartido nothrow @nogc bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt; (void [] b);</target>
        </trans-unit>
        <trans-unit id="ab720f64f2f934d0061d54c48e7a0a28d84f2d96" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc bool &lt;strong id=&quot;deallocateAll&quot;&gt;deallocateAll&lt;/strong&gt;();</source>
          <target state="translated">compartida nothrow @nogc bool &lt;strong id=&quot;deallocateAll&quot;&gt;deallocateAll&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="3920400c8f5af22d055503af3d970d29d8bc4fe0" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc bool &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt;(ref void[] b, size_t delta);</source>
          <target state="translated">nothrow compartido @nogc bool &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt; (ref void [] b, size_t delta);</target>
        </trans-unit>
        <trans-unit id="a661eb421bb863696363d651418dac5e4b9cbde9" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc size_t &lt;strong id=&quot;getAvailableSize&quot;&gt;getAvailableSize&lt;/strong&gt;();</source>
          <target state="translated">nothrow compartido @nogc size_t &lt;strong id=&quot;getAvailableSize&quot;&gt;getAvailableSize&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="43007f44cc79d9015ca65e1163a01fca87c0a5ba" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(size_t n);</source>
          <target state="translated">nothrow compartido @nogc size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt; (size_t n);</target>
        </trans-unit>
        <trans-unit id="8bda29eca0ea8cb1bc6031f132f41aed5063cab6" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc this(size_t n);</source>
          <target state="translated">Comparte Nothrow @nogc this(size_t n);</target>
        </trans-unit>
        <trans-unit id="3a4c896f40738dd03b295222cf0144836667c8a9" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc void &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt;(void[] b);</source>
          <target state="translated">compartido nothrow void @nogc &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt; (void [] b);</target>
        </trans-unit>
        <trans-unit id="7428ca6241cd8876f8cb6ca44bc8770b921d7354" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc void[] &lt;strong id=&quot;alignedAllocate&quot;&gt;alignedAllocate&lt;/strong&gt;(size_t n, uint a);</source>
          <target state="translated">nothrow compartido @nogc void [] &lt;strong id=&quot;alignedAllocate&quot;&gt;alineadoAllocate&lt;/strong&gt; (size_t n, uint a);</target>
        </trans-unit>
        <trans-unit id="ef6b437021b06b6aa5f5a6bf26e46cf76eb1ba52" translate="yes" xml:space="preserve">
          <source>shared nothrow @nogc void[] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt;(size_t n);</source>
          <target state="translated">nothrow compartido @nogc void [] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt; (size_t n);</target>
        </trans-unit>
        <trans-unit id="f69f0b0988733e3e462e12eef0422d82952152af" translate="yes" xml:space="preserve">
          <source>shared nothrow @safe this(shared Mutex m);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184a84c04f822158f9fe7b724685a329c122b3cf" translate="yes" xml:space="preserve">
          <source>shared object</source>
          <target state="translated">objeto compartido</target>
        </trans-unit>
        <trans-unit id="2ad65940c5d9c7527a87a0f9b914914e06c1d71a" translate="yes" xml:space="preserve">
          <source>shared pure @nogc @safe this(Allocator* pa);</source>
          <target state="translated">compartió puro @nogc @safe esto(Asignador*pa);</target>
        </trans-unit>
        <trans-unit id="41d77a2c44c80619aa6fb51f44b1bab9844b0cd7" translate="yes" xml:space="preserve">
          <source>shared pure @nogc ref @safe Allocator &lt;strong id=&quot;impl&quot;&gt;impl&lt;/strong&gt;();</source>
          <target state="translated">compartida pura @nogc ref @safe Allocator &lt;strong id=&quot;impl&quot;&gt;impl&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="441bb3ae7907e3689d7ed6537cb164105648524f" translate="yes" xml:space="preserve">
          <source>shared pure nothrow @nogc @safe Ternary &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="translated">comparti&amp;oacute; nothrow puro @nogc @safe Ternary &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="a8bcae9a67cf93261785bb5bdde69bc5f9870032" translate="yes" xml:space="preserve">
          <source>shared pure nothrow @nogc @safe bool &lt;strong id=&quot;alignedReallocate&quot;&gt;alignedReallocate&lt;/strong&gt;(ref void[] b, size_t, uint);</source>
          <target state="translated">comparti&amp;oacute; nothrow puro @nogc @safe bool &lt;strong id=&quot;alignedReallocate&quot;&gt;alineadoReallocate&lt;/strong&gt; (ref void [] b, size_t, uint);</target>
        </trans-unit>
        <trans-unit id="f735b0ac355b671cea7c9f6dd1ae2a832541880e" translate="yes" xml:space="preserve">
          <source>shared pure nothrow @nogc @safe bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt;(void[] b);</source>
          <target state="translated">compartida pura nothrow @nogc @safe bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt; (void [] b);</target>
        </trans-unit>
        <trans-unit id="b30459cf27e5b827572ff55d3bfd4a823c0421ce" translate="yes" xml:space="preserve">
          <source>shared pure nothrow @nogc @safe bool &lt;strong id=&quot;deallocateAll&quot;&gt;deallocateAll&lt;/strong&gt;();</source>
          <target state="translated">compartida pura nothrow @nogc @safe bool &lt;strong id=&quot;deallocateAll&quot;&gt;deallocateAll&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="b76a543b222d6082f169fcc60ac2d433889640fa" translate="yes" xml:space="preserve">
          <source>shared pure nothrow @nogc @safe bool &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt;(ref void[] b, size_t s);</source>
          <target state="translated">comparti&amp;oacute; nothrow puro @nogc @safe bool &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt; (ref void [] b, size_t s);</target>
        </trans-unit>
        <trans-unit id="b1bd7c71f9e4c89d68f3acf0310e50b6336894b1" translate="yes" xml:space="preserve">
          <source>shared pure nothrow @nogc @safe bool &lt;strong id=&quot;reallocate&quot;&gt;reallocate&lt;/strong&gt;(ref void[] b, size_t);</source>
          <target state="translated">compartida pura nothrow @nogc @safe bool &lt;strong id=&quot;reallocate&quot;&gt;reallocate&lt;/strong&gt; (ref void [] b, size_t);</target>
        </trans-unit>
        <trans-unit id="f137d0aa863721a866ed66034fbd1502ff91bbea" translate="yes" xml:space="preserve">
          <source>shared pure nothrow @nogc @safe void[] &lt;strong id=&quot;alignedAllocate&quot;&gt;alignedAllocate&lt;/strong&gt;(size_t, uint);</source>
          <target state="translated">comparti&amp;oacute; nothrow puro @nogc @safe void [] &lt;strong id=&quot;alignedAllocate&quot;&gt;linedAllocate&lt;/strong&gt; (size_t, uint);</target>
        </trans-unit>
        <trans-unit id="bf52061f7850222d98c96e573e1a16f455bed289" translate="yes" xml:space="preserve">
          <source>shared pure nothrow @nogc @safe void[] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt;(size_t);</source>
          <target state="translated">compartido puro nothrow @nogc @safe void [] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt; (size_t);</target>
        </trans-unit>
        <trans-unit id="e90c0dda8c1f84b30c10db01e6c650383270c5a0" translate="yes" xml:space="preserve">
          <source>shared pure nothrow @nogc @safe void[] &lt;strong id=&quot;allocateAll&quot;&gt;allocateAll&lt;/strong&gt;();</source>
          <target state="translated">compartido puro nothrow @nogc @safe void [] &lt;strong id=&quot;allocateAll&quot;&gt;allocateAll&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f6ac10aadf13c041bab63892b46cd8a6afb171d1" translate="yes" xml:space="preserve">
          <source>shared pure nothrow @nogc @system bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt;(void[] b);</source>
          <target state="translated">compartida pura nothrow @nogc @System bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt; (void [] b);</target>
        </trans-unit>
        <trans-unit id="5aacf5db684dfb16aba5f63880d6f8cb08f77f08" translate="yes" xml:space="preserve">
          <source>shared pure nothrow @nogc @system bool &lt;strong id=&quot;reallocate&quot;&gt;reallocate&lt;/strong&gt;(ref void[] b, size_t s);</source>
          <target state="translated">compartida pura nothrow @nogc @System bool &lt;strong id=&quot;reallocate&quot;&gt;reallocate&lt;/strong&gt; (ref void [] b, size_t s);</target>
        </trans-unit>
        <trans-unit id="177620c4aa78b87771af61d7c8ce2bfd477b126d" translate="yes" xml:space="preserve">
          <source>shared pure nothrow @nogc @trusted Ternary &lt;strong id=&quot;owns&quot;&gt;owns&lt;/strong&gt;(const void[] b);</source>
          <target state="translated">comparti&amp;oacute; nothrow puro @nogc @trusted &lt;strong id=&quot;owns&quot;&gt;posee&lt;/strong&gt; Ternary (const void [] b);</target>
        </trans-unit>
        <trans-unit id="49d724d9ef327d99109d6065fda9786dc58de167" translate="yes" xml:space="preserve">
          <source>shared pure nothrow @nogc @trusted void[] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt;(size_t bytes);</source>
          <target state="translated">nothrow puro compartido @nogc @trusted void [] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt; (size_t bytes);</target>
        </trans-unit>
        <trans-unit id="4c2296a261a8a861edf972a5c8288c88075e1906" translate="yes" xml:space="preserve">
          <source>shared size_t &lt;strong id=&quot;_initCount&quot;&gt;_initCount&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;_initCount&quot;&gt;tama&amp;ntilde;o_t&lt;/strong&gt; compartido &lt;strong id=&quot;_initCount&quot;&gt;_initCount&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1a32685266fae28b02d29b434a059ccd9cd11d3e" translate="yes" xml:space="preserve">
          <source>shared size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(size_t bytes);</source>
          <target state="translated">&lt;strong id=&quot;goodAllocSize&quot;&gt;tama&amp;ntilde;o_t&lt;/strong&gt; compartido &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt; ( &lt;strong id=&quot;goodAllocSize&quot;&gt;tama&amp;ntilde;o_t&lt;/strong&gt; bytes);</target>
        </trans-unit>
        <trans-unit id="fbd932527658044484ae898713266a3f08c909aa" translate="yes" xml:space="preserve">
          <source>shared size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(size_t s);</source>
          <target state="translated">&lt;strong id=&quot;goodAllocSize&quot;&gt;tama&amp;ntilde;o_t&lt;/strong&gt; compartido &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt; ( &lt;strong id=&quot;goodAllocSize&quot;&gt;tama&amp;ntilde;o_t&lt;/strong&gt; s);</target>
        </trans-unit>
        <trans-unit id="a27dd91468eee20a7ee0f2b44bc06b612ef8d024" translate="yes" xml:space="preserve">
          <source>shared void &lt;strong id=&quot;minimize&quot;&gt;minimize&lt;/strong&gt;();</source>
          <target state="translated">vac&amp;iacute;o compartido &lt;strong id=&quot;minimize&quot;&gt;minimizar&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="67a51887e1a7c9275082fc0267f646c7dd57abbf" translate="yes" xml:space="preserve">
          <source>shared void &lt;strong id=&quot;notify&quot;&gt;notify&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76fda25a11faa9c25b11a41f2046d7d2952b077" translate="yes" xml:space="preserve">
          <source>shared void &lt;strong id=&quot;notifyAll&quot;&gt;notifyAll&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd3537bf318134232ab6f7525e2d3d1c1fe005d" translate="yes" xml:space="preserve">
          <source>shared void &lt;strong id=&quot;wait&quot;&gt;wait&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569d21a592560cb70d766e1562b1733168e89077" translate="yes" xml:space="preserve">
          <source>shared void[] &lt;strong id=&quot;alignedAllocate&quot;&gt;alignedAllocate&lt;/strong&gt;(size_t s, uint a);</source>
          <target state="translated">vac&amp;iacute;o compartido [] &lt;strong id=&quot;alignedAllocate&quot;&gt;alineadoAllocate&lt;/strong&gt; (size_t s, uint a);</target>
        </trans-unit>
        <trans-unit id="ce44f8f86dbf5b785b304ccf93b76c35d344a7c3" translate="yes" xml:space="preserve">
          <source>shared void[] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt;(size_t bytes);</source>
          <target state="translated">void compartido [] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt; (tama&amp;ntilde;o_t bytes);</target>
        </trans-unit>
        <trans-unit id="73bc1c81ca86297208b613781411bb8706c9ae46" translate="yes" xml:space="preserve">
          <source>shared void[] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt;(size_t s, TypeInfo ti = null);</source>
          <target state="translated">void compartido [] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt; (size_t s, TypeInfo ti = null);</target>
        </trans-unit>
        <trans-unit id="0fa775b2cbe842baa3a643e0db39915b26f1db4b" translate="yes" xml:space="preserve">
          <source>shared void[] &lt;strong id=&quot;allocateAll&quot;&gt;allocateAll&lt;/strong&gt;();</source>
          <target state="translated">void compartido [] &lt;strong id=&quot;allocateAll&quot;&gt;allocateAll&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f6d022ac99839e9aa209b4d56f92223b07771af9" translate="yes" xml:space="preserve">
          <source>shared(T)* &lt;code&gt;here&lt;/code&gt;</source>
          <target state="translated">compartido (T) * &lt;code&gt;here&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0f4ea7d91495df92bbac2e2149dfb850fe81396" translate="yes" xml:space="preserve">
          <source>short</source>
          <target state="translated">short</target>
        </trans-unit>
        <trans-unit id="1501b762b0edb70a9af36df53e8b8a284df8e0b8" translate="yes" xml:space="preserve">
          <source>short-circuited if a false result is encountered; the template predicate must be instantiable with all the given items.</source>
          <target state="translated">cortocircuitado si se encuentra un resultado falso;el predicado de la plantilla debe ser instantáneo con todos los elementos dados.</target>
        </trans-unit>
        <trans-unit id="d1fe8e18bbf7b9042a43961b62bfbf8f29777def" translate="yes" xml:space="preserve">
          <source>short16</source>
          <target state="translated">short16</target>
        </trans-unit>
        <trans-unit id="4e307ede551cdd137da484528922c9d1dc7faa5c" translate="yes" xml:space="preserve">
          <source>short8</source>
          <target state="translated">short8</target>
        </trans-unit>
        <trans-unit id="81a94442690fdb23f9352c48a9153f9228c9b0b6" translate="yes" xml:space="preserve">
          <source>shortcuts for the precise GC, also generated by the compiler used instead of the actual pointer bitmap</source>
          <target state="translated">atajos para el GC preciso,también generados por el compilador usado en lugar del actual mapa de bits del puntero</target>
        </trans-unit>
        <trans-unit id="579fb29cbe3f27fd2bdcb2b486505ce1ba837a0f" translate="yes" xml:space="preserve">
          <source>should be replaced with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3315de1785f7335464281dc644b872d08fb51e" translate="yes" xml:space="preserve">
          <source>shrinkTo is disabled for immutable or const element types.</source>
          <target state="translated">shrinkTo está deshabilitado para los tipos de elementos inmutables o constantes.</target>
        </trans-unit>
        <trans-unit id="ea004c10d619066548d8eca98d66b06928b573e6" translate="yes" xml:space="preserve">
          <source>shut off the progress meter</source>
          <target state="translated">apagar el medidor de progreso</target>
        </trans-unit>
        <trans-unit id="76da66b2e08c892a1d27e9a630a75e7a34c9359a" translate="yes" xml:space="preserve">
          <source>sideeffect.d</source>
          <target state="translated">sideeffect.d</target>
        </trans-unit>
        <trans-unit id="d8b7231010f6ec6b3012b03a2c7afa8b20a916a1" translate="yes" xml:space="preserve">
          <source>sign mismatches, such as printing an &lt;code&gt;int&lt;/code&gt; with a &lt;code&gt;%u&lt;/code&gt; format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d05653d8765ef9f4cef7bd559a62127639269b3" translate="yes" xml:space="preserve">
          <source>signals and slots</source>
          <target state="translated">señales y ranuras</target>
        </trans-unit>
        <trans-unit id="9ddf126a2763921d4280fe41ef93041d29069765" translate="yes" xml:space="preserve">
          <source>signed 128 bits (reserved for future use)</source>
          <target state="translated">firmado 128 bits (reservado para uso futuro)</target>
        </trans-unit>
        <trans-unit id="2dc601f6d3c6cf493c3e8f73175204037fb2d9b2" translate="yes" xml:space="preserve">
          <source>signed 16 bits</source>
          <target state="translated">firmado 16 bits</target>
        </trans-unit>
        <trans-unit id="c68c1d7e02b31866e8d2b71d1e132a5e0b63b324" translate="yes" xml:space="preserve">
          <source>signed 32 bits</source>
          <target state="translated">firmado 32 bits</target>
        </trans-unit>
        <trans-unit id="3a85ca6b166567d512ba6b21eafdb3032c0bccf4" translate="yes" xml:space="preserve">
          <source>signed 64 bits</source>
          <target state="translated">firmado 64 bits</target>
        </trans-unit>
        <trans-unit id="cf5fa298b3e63a0626039fa66f9728ede3c77de1" translate="yes" xml:space="preserve">
          <source>signed 8 bits</source>
          <target state="translated">firmado 8 bits</target>
        </trans-unit>
        <trans-unit id="b27f33d16c2cbab8248c9ab9fcfd1a8156c9c9ff" translate="yes" xml:space="preserve">
          <source>signed &lt;code&gt;int.min&lt;/code&gt; is the numerator and &lt;code&gt;-1&lt;/code&gt; is the denominator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eadf859dbc0f282b528ce34c616040a25fac0b29" translate="yes" xml:space="preserve">
          <source>signed &lt;code&gt;long.min&lt;/code&gt; is the numerator and &lt;code&gt;-1L&lt;/code&gt; is the denominator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4306fbbc0e3566b25aaa377909e968804f6bb4dc" translate="yes" xml:space="preserve">
          <source>signed char</source>
          <target state="translated">firmado char</target>
        </trans-unit>
        <trans-unit id="df2f9f6de8b6634090cf6785af1c5455c32759bf" translate="yes" xml:space="preserve">
          <source>signed integral type large enough to hold a pointer</source>
          <target state="translated">tipo integral firmado lo suficientemente grande como para sostener un puntero</target>
        </trans-unit>
        <trans-unit id="1f2ea8ffab8deb0e5b854a260a68b42b7eb7b048" translate="yes" xml:space="preserve">
          <source>sin(x)</source>
          <target state="translated">sin(x)</target>
        </trans-unit>
        <trans-unit id="16d542ef65bef7c472b8924e6fcfde73fbbf73e7" translate="yes" xml:space="preserve">
          <source>since, again, the garbage collector can move objects around in memory.</source>
          <target state="translated">ya que,de nuevo,el recolector de basura puede mover objetos en la memoria.</target>
        </trans-unit>
        <trans-unit id="43f298c876f1e06f3682bb0fe173a07ee624be80" translate="yes" xml:space="preserve">
          <source>sine of x</source>
          <target state="translated">seno de x</target>
        </trans-unit>
        <trans-unit id="d39d5e7f2cd3c527c54efdcb3f5cd3891f124743" translate="yes" xml:space="preserve">
          <source>single CWD operation for each path part</source>
          <target state="translated">una sola operación de CWD para cada parte del camino</target>
        </trans-unit>
        <trans-unit id="56a9243360069e7350823032d4a500d8f1c78a4a" translate="yes" xml:space="preserve">
          <source>sinh(x)</source>
          <target state="translated">sinh(x)</target>
        </trans-unit>
        <trans-unit id="d705e590ed17e27ba8f661b245d0c86e1a7e49a3" translate="yes" xml:space="preserve">
          <source>size a real consumes in memory</source>
          <target state="translated">el tamaño que un real consume en la memoria</target>
        </trans-unit>
        <trans-unit id="ef02cf68168a5bfe04b81b8c5203cc06a794d1c2" translate="yes" xml:space="preserve">
          <source>size in bytes</source>
          <target state="translated">tamaño en bytes</target>
        </trans-unit>
        <trans-unit id="4dff10a97a8b799c9558a284765b46e811d486c2" translate="yes" xml:space="preserve">
          <source>size in bytes of the function</source>
          <target state="translated">tamaño en bytes de la función</target>
        </trans-unit>
        <trans-unit id="5250993d0b4cbc5c055b3bd19621fef4a29152a9" translate="yes" xml:space="preserve">
          <source>size of &lt;code&gt;ClassInfo&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o de &lt;code&gt;ClassInfo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14e7556a7560eea85b02a4a76d47e354d4750177" translate="yes" xml:space="preserve">
          <source>size of a C &lt;code&gt;long double&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o de una &lt;code&gt;long double&lt;/code&gt; C larga</target>
        </trans-unit>
        <trans-unit id="9f58be930c4a3ce6fd00e9ba4ac419da26997d28" translate="yes" xml:space="preserve">
          <source>size of a C &lt;code&gt;long&lt;/code&gt; or &lt;code&gt;unsigned long&lt;/code&gt; type</source>
          <target state="translated">tama&amp;ntilde;o de un C &lt;code&gt;long&lt;/code&gt; o &lt;code&gt;unsigned long&lt;/code&gt; tipo</target>
        </trans-unit>
        <trans-unit id="5f46a83436cff4dc635cb0ae969a17fb4d5b1a7d" translate="yes" xml:space="preserve">
          <source>size of a pointer in bytes</source>
          <target state="translated">tamaño de un puntero en bytes</target>
        </trans-unit>
        <trans-unit id="cf0810cd5051b07e77837e5b765b3b9a471878d5" translate="yes" xml:space="preserve">
          <source>size of os critical section</source>
          <target state="translated">tamaño de la sección crítica del os</target>
        </trans-unit>
        <trans-unit id="7336a950f4b1969133385faaa6dff1032e083e97" translate="yes" xml:space="preserve">
          <source>size of the POST input data, if strlen() is not good to use</source>
          <target state="translated">tamaño de los datos de entrada POST,si strlen()no es bueno para usar</target>
        </trans-unit>
        <trans-unit id="7fdf50ee9cb203a471faef3836a2edf16826d314" translate="yes" xml:space="preserve">
          <source>size of the guard page to trap fiber's stack overflows. Beware that using this will increase the number of mmaped regions on platforms using mmap so an OS-imposed limit may be hit.</source>
          <target state="translated">el tamaño de la página de guardia para atrapar los desbordamientos de la pila de fibra.Tenga en cuenta que al usar esto aumentará el número de regiones mapeadas en las plataformas que usan mmap,por lo que se puede alcanzar un límite impuesto por el sistema operativo.</target>
        </trans-unit>
        <trans-unit id="c4db2ccb62087f2f463235bf7976c01b72607631" translate="yes" xml:space="preserve">
          <source>size of the guard page to trap fiber's stack overflows. Refer to &lt;a href=&quot;core_thread#Fiber&quot;&gt;&lt;code&gt;core.thread.Fiber&lt;/code&gt;&lt;/a&gt;'s documentation for more details.</source>
          <target state="translated">tama&amp;ntilde;o de la p&amp;aacute;gina de protecci&amp;oacute;n para atrapar los desbordamientos de la pila de fibra. Consulte la documentaci&amp;oacute;n de &lt;a href=&quot;core_thread#Fiber&quot;&gt; &lt;code&gt;core.thread.Fiber&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="30442889ff744a8e73a0b9ce429c5e8187fc5262" translate="yes" xml:space="preserve">
          <source>size of the stack of the created thread. The default of 0 will select the platform-specific default size.</source>
          <target state="translated">del tamaño de la pila del hilo creado.El valor por defecto de 0 seleccionará el tamaño por defecto específico de la plataforma.</target>
        </trans-unit>
        <trans-unit id="d86c05d9e23d877127cf896d624af29ffa4d644a" translate="yes" xml:space="preserve">
          <source>size of the uncompressed data. It need not be accurate, but the decompression will be faster if the exact size is supplied.</source>
          <target state="translated">el tamaño de los datos no comprimidos.No tiene por qué ser exacto,pero la descompresión será más rápida si se suministra el tamaño exacto.</target>
        </trans-unit>
        <trans-unit id="53e3cbced784055a2fc484c97d29148d60575352" translate="yes" xml:space="preserve">
          <source>size used on parameter stack</source>
          <target state="translated">tamaño utilizado en la pila de parámetros</target>
        </trans-unit>
        <trans-unit id="0e80ecf7ee5e740cbb6ba55e83b0b5df860e6907" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;argc&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;argc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2915f01b9aa542545f9e1c95ca6303f74382dbea" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;begoffset&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;begoffset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1134276be9fb3c3f89f6520c224c856b11f76dd5" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;bitnum&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;bitnum&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="285aa9000a15c2541e2e18c7735b4b42d89ed1b1" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;bufSize&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;bufSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c55fab426a26b09a77d86ce67a81e7e464b5acb" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;bytes&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;bytes&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c33e994b8ca071f17125880dcd74a7824aa81962" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;chunkSize&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;chunkSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d0fd6b23ef1c1709d86abbf0fb377acb7cbf060" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;columns&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;columns&lt;/code&gt; tama&amp;ntilde;o_t</target>
        </trans-unit>
        <trans-unit id="978193885cc602105c6b5db589a0009bccdb50ca" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;delta&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;delta&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b81f58ebbfe23b3d64f43a70835bd4e5fdb56cd6" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;destlen&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;destlen&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6157b5e4e698049fe94e6210045c214dcf8f055d" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;dim&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;dim&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94277ad83c6e9d04c95ffde613c60656d3c29e6a" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;endoffset&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;endoffset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d1ce6d3b20f0b1d9aee007c92e34eb42b766c686" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;from&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;from&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f5d5c6442e208f5338ab48a606c825c41b59723" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;guardPageSize&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;guardPageSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="900d8215f44f7fc092389000bd02823bac75b017" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;high&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;high&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26c32afb2cceb538173aa4078a5327e8bdfdef28" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;i1&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;i1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="42a7adc9e2fda6a896973e275bf15293adbf21dc" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;i2&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;i2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d5579d1939681e5aa3525a5fa58b2adcbef03fc" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;i&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="818c1aa56189d170df2a8863e83ea3df6d24659b" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;iStart&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;iStart&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="91bbbf7604c0aede1bd37220b4910335f4bd5a2d" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;idx&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;idx&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d20a8c455afada391739bbd2c58cf1ac8addf55d" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;index&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; size_t</target>
        </trans-unit>
        <trans-unit id="92737c173a1315dac8e94ce47717ae0350706827" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;initialBufSize&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;initialBufSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53645e3220d532b25ac6f0694e4bbbcdb51b30c6" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;len&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;len&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e040e3465cffeda5e1c92c80ee73d476680fe20" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;length&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;length&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ed10e244bc69d24446bd6eb53c012387d03e67fb" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;line&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;line&lt;/code&gt; size_t</target>
        </trans-unit>
        <trans-unit id="39531acce91f6ddab281059e4d6dd43303160ef1" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;low&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;low&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49b98f7acf65dd06efea1467f046ec63ae248776" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;max&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;max&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="677047dc483ea570b20e65f85601adf5bb647d53" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;maxNestingLevel&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;maxNestingLevel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4fdf0b8a76ea448c4a0a4ce05fb953b04a0b012" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;maxOutput&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;maxOutput&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22a5b52926c791bc48066214a915832912e0473e" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;messages&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;messages&lt;/code&gt; size_t</target>
        </trans-unit>
        <trans-unit id="2fdb8e8affa74612bee1a245f3efc2170648a831" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;min&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;min&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe371af3ac17bfba4add7f765b15bd814b8eb3e6" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;mod&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f95105c2618e756d5d0d109495b776395559fc" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;mx&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;mx&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="205bfb09b0827789962c232893d54d467cda21ae" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;n&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;n&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="feae7462a55a3b4e14ded4a33c076b30b78c2495" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;nBuffers&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;nBuffers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9779d4b37d97194312abf1d69c49d28a2ed88234" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;newCapacity&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;newCapacity&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf7aed38a55c2c7f051dee723312c5198675e097" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;newlength&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;newlength&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5223c0653497a1179686f1ffae3016b1d5261918" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;nth&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;nth&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="492dcb46c8d95cdd7ed856bb3cfee0e5cd21f361" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;numBits&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;numBits&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="746861d2105aadfd8f713100752b1deca362878e" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;numCodeUnits&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;numCodeUnits&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e197904c4b47cc1f219c0a47452a4b35ff61f849" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;numbits&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;numbits&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4cbed8501cf94b411bd19a0c1e8a451d1e7188e9" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;pivot&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;pivot&lt;/code&gt; e</target>
        </trans-unit>
        <trans-unit id="df023af5b25fc0f034f674bc7827fd080a67fe48" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;pos&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;pos&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14596a634bb71c7e155d0c8b20220d2e23218ab4" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;rangeLength&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;rangeLength&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90f685d65e1ddde8a21cc1a4ffebdd8d8d6db28e" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;ridx&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;ridx&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0dbadb9cba2c3ef70232e6de22675ee1a78ed9e" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;seed&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;seed&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24f6d14d74c8990ff7d6010dd66026d2eea54b2b" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;sourceLength&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;sourceLength&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b112741ea632f03d249a49a686c86b65d617403" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;startIdx&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;startIdx&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1a6ac4d97626acacfb45ac1d9a556f0750d88d0" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;stepSize&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;stepSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6fbb9530ef713c49296031743afc8bb8455cdb2e" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;stopIdx&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;stopIdx&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39204fa1e0c9b3b2ba2aa7b7cce6bb7486927b1b" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;sz&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;sz&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f98d0252bb88226a38e72574a121dc4f55643d6" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;tabSize&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;tabSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="985e1bdb3a385d43ea560d4c53d31cf3e6570726" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;tabsize&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;tabsize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8746870b5a4f15ba6a0bf1dc709e59806303d0c2" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;to&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;to&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fdedbbc3c6a0e873d63d47979e1a76798c3cdb4d" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;total&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;total&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="780106a4e41b031f45455630faba5c07f94eb4bf" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;transmitBuffers&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;transmitBuffers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="896b2bb83cc588220c8cb112bd8673fbc59b7d60" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;upTo&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;upTo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3346a072892aecb337bb9862d8a3864fab606b3" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;valsz&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;valsz&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba80c34c9dd18aa363fb3a88faac704fdff65ba6" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;width&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;code&gt;width&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="424b3d4a676193434e0b763191e5b3fa7c02feff" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;window&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;window&lt;/code&gt; size_t</target>
        </trans-unit>
        <trans-unit id="0e378f9fa16753fab10a371ad44fae66c7f4e80d" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;windowSize&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;windowSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2b2450f24ecdd151fa31281c7b1412d4a3a96ed" translate="yes" xml:space="preserve">
          <source>size_t &lt;code&gt;workUnitSize&lt;/code&gt;</source>
          <target state="translated">size_t &lt;code&gt;workUnitSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34f26e3f7298859af91dfcddc6da65acb280883b" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;__eh_find_caller&quot;&gt;__eh_find_caller&lt;/strong&gt;(size_t regbp, size_t* pretaddr);</source>
          <target state="translated">size_t &lt;strong id=&quot;__eh_find_caller&quot;&gt;__eh_find_caller&lt;/strong&gt; (size_t regbp, size_t * pretaddr);</target>
        </trans-unit>
        <trans-unit id="58b3cca0bdfb1fb48970d54dee6743aed464c9dc" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;_d_arraysetcapacity&quot;&gt;_d_arraysetcapacity&lt;/strong&gt;(const TypeInfo ti, size_t newcapacity, void[]* p);</source>
          <target state="translated">size_t &lt;strong id=&quot;_d_arraysetcapacity&quot;&gt;_d_arraysetcapacity&lt;/strong&gt; (const TypeInfo ti, size_t newcapacity, void [] * p);</target>
        </trans-unit>
        <trans-unit id="75e9c6be9e6e1210797fd1650a7eda20e8f73944" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;available&quot;&gt;available&lt;/strong&gt;();</source>
          <target state="translated">size_t &lt;strong id=&quot;available&quot;&gt;disponible&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="463826bbbc74032dc9968aab76b2a4a3858c9e42" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;b_size&quot;&gt;b_size&lt;/strong&gt;;</source>
          <target state="translated">size_t &lt;strong id=&quot;b_size&quot;&gt;b_size&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b9e681e8b93f512bea921b7ffbaf7aa41293d9f2" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;b_used&quot;&gt;b_used&lt;/strong&gt;;</source>
          <target state="translated">size_t &lt;strong id=&quot;b_used&quot;&gt;b_used&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="243f69a0dd6b7eaad14499f8f60507dca135b10f" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;bringToFront&quot;&gt;bringToFront&lt;/strong&gt;(InputRange, ForwardRange)(InputRange front, ForwardRange back)</source>
          <target state="translated">size_t &lt;strong id=&quot;bringToFront&quot;&gt;bringToFront&lt;/strong&gt; (InputRange, ForwardRange) (InputRange front, ForwardRange back)</target>
        </trans-unit>
        <trans-unit id="7fbde94e6b07b2d9f23dcf7e6101ef0a3187ec34" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;canFind&quot;&gt;canFind&lt;/strong&gt;(Range, Ranges...)(Range haystack, scope Ranges needles)</source>
          <target state="translated">size_t &lt;strong id=&quot;canFind&quot;&gt;canFind&lt;/strong&gt; (Range, Ranges ...) (Range haystack, range Ranges Needles)</target>
        </trans-unit>
        <trans-unit id="dfbe46c5760ef658688ef48569cea2e2f0518732" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;codeLength&quot;&gt;codeLength&lt;/strong&gt;(C, InputRange)(InputRange input)</source>
          <target state="translated">size_t &lt;strong id=&quot;codeLength&quot;&gt;codeLength&lt;/strong&gt; (C, InputRange) (entrada InputRange)</target>
        </trans-unit>
        <trans-unit id="5cca2b40722171e688a8d69d7e73531432c93106" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;col&quot;&gt;col&lt;/strong&gt;;</source>
          <target state="translated">size_t &lt;strong id=&quot;col&quot;&gt;col&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="66fc6b9bad1ffc63f2ec659eaa5336e40fb8eba7" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;column&quot;&gt;column&lt;/strong&gt;(Range)(Range str, in size_t tabsize = 8)</source>
          <target state="translated">&lt;strong id=&quot;column&quot;&gt;columna&lt;/strong&gt; tama&amp;ntilde;o_t (Rango) (Rango str, en tama&amp;ntilde;o_tabla tama&amp;ntilde;o = 8)</target>
        </trans-unit>
        <trans-unit id="3f5c2852445ec359d4051d0930e28d9b0b5bacb1" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;column&quot;&gt;column&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;column&quot;&gt;columna&lt;/strong&gt; size_t ;</target>
        </trans-unit>
        <trans-unit id="163396e878fbf7e9aa036a6d97dec2e4b0f11488" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;count&quot;&gt;count&lt;/strong&gt;()(const(ubyte)[] s);</source>
          <target state="translated">size_t &lt;strong id=&quot;count&quot;&gt;count&lt;/strong&gt; () (const (ubyte) [] s);</target>
        </trans-unit>
        <trans-unit id="540cdb393f3f927a85bdc3328c0c7d00558ffb9c" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;count&quot;&gt;count&lt;/strong&gt;();</source>
          <target state="translated">size_t &lt;strong id=&quot;count&quot;&gt;count&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="c5f39db99ed9e5353ce7858e9d394cdd522987a3" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;count&quot;&gt;count&lt;/strong&gt;(R)(R haystack)</source>
          <target state="translated">size_t &lt;strong id=&quot;count&quot;&gt;count&lt;/strong&gt; (R) (R haystack)</target>
        </trans-unit>
        <trans-unit id="30b97c59f0796e012cb8289d3b578608db0a5580" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;count&quot;&gt;count&lt;/strong&gt;(alias pred = &quot;a == b&quot;, R1, R2)(R1 haystack, R2 needle)</source>
          <target state="translated">size_t &lt;strong id=&quot;count&quot;&gt;count&lt;/strong&gt; (alias pred = &quot;a == b&quot;, R1, R2) (pajar R1, aguja R2)</target>
        </trans-unit>
        <trans-unit id="750629c67293b23745da729a3b99131101038095" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;count&quot;&gt;count&lt;/strong&gt;(alias pred = &quot;a == b&quot;, Range, E)(Range haystack, E needle)</source>
          <target state="translated">size_t &lt;strong id=&quot;count&quot;&gt;count&lt;/strong&gt; (alias pred = &quot;a == b&quot;, Range, E) (Range haystack, E needle)</target>
        </trans-unit>
        <trans-unit id="3bd1289b20144c2cd563185360671cb0e8c286b6" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;count&quot;&gt;count&lt;/strong&gt;(alias pred, R)(R haystack)</source>
          <target state="translated">size_t &lt;strong id=&quot;count&quot;&gt;count&lt;/strong&gt; (alias pred, R) (R haystack)</target>
        </trans-unit>
        <trans-unit id="2004983c67b15e50230c021671ecb46b2d14d5f6" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;decode&quot;&gt;decode&lt;/strong&gt;(R1, R2)(R1 source, auto ref R2 range)</source>
          <target state="translated">size_t &lt;strong id=&quot;decode&quot;&gt;decode&lt;/strong&gt; (R1, R2) (fuente R1, rango de auto ref R2)</target>
        </trans-unit>
        <trans-unit id="0f55f9b626d6a97bb4cd7b9ec41e4c7388d8f190" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;decode&quot;&gt;decode&lt;/strong&gt;(R1, R2)(in R1 source, auto ref R2 range)</source>
          <target state="translated">&lt;strong id=&quot;decode&quot;&gt;decodificaci&amp;oacute;n&lt;/strong&gt; size_t (R1, R2) (en fuente R1, rango de referencia autom&amp;aacute;tica R2)</target>
        </trans-unit>
        <trans-unit id="a866d1b6226fe15ed5a446fb5c80e3baeb0c69ce" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;dice&quot;&gt;dice&lt;/strong&gt;(Num)(Num[] proportions...)</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;strong id=&quot;dice&quot;&gt;dados&lt;/strong&gt; (Num) (Num [] proporciones ...)</target>
        </trans-unit>
        <trans-unit id="b989598c5f1ab64709968f8ae1f19e2c161be050" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;dice&quot;&gt;dice&lt;/strong&gt;(R, Range)(ref R rnd, Range proportions)</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;strong id=&quot;dice&quot;&gt;dados&lt;/strong&gt; (R, Rango) (ref R rnd, Proporciones de rango)</target>
        </trans-unit>
        <trans-unit id="eb504d239f657860b4c67ac92f9383550ad2319b" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;dice&quot;&gt;dice&lt;/strong&gt;(Range)(Range proportions)</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;strong id=&quot;dice&quot;&gt;dados&lt;/strong&gt; (Rango) (proporciones de rango)</target>
        </trans-unit>
        <trans-unit id="d54c87f38adc2459028bb3c0f57630374d9be3f7" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;dice&quot;&gt;dice&lt;/strong&gt;(Rng, Num)(ref Rng rnd, Num[] proportions...)</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;strong id=&quot;dice&quot;&gt;dados&lt;/strong&gt; (Rng, Num) (ref Rng rnd, Num [] proporciones ...)</target>
        </trans-unit>
        <trans-unit id="6ce60567d1209465e4f742695e4d4b80f63207e3" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(E)(dchar c, E[] array);</source>
          <target state="translated">size_t &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt; (E) (dchar c, E [] array);</target>
        </trans-unit>
        <trans-unit id="a1145dabd9a0eacafb90d42e14baffb6eccb18d2" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(E, R)(scope const(E)[] source, auto ref R range)</source>
          <target state="translated">size_t &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt; (E, R) (alcance const (E) [] fuente, rango autom&amp;aacute;tico de referencia R)</target>
        </trans-unit>
        <trans-unit id="eabd484927d0547ffff6118e0a4f9bcb9b5e93b4" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(R1, R2)(R1 source, auto ref R2 range)</source>
          <target state="translated">&lt;strong id=&quot;encode&quot;&gt;codificaci&amp;oacute;n&lt;/strong&gt; size_t (R1, R2) (fuente R1, rango de referencia autom&amp;aacute;tica R2)</target>
        </trans-unit>
        <trans-unit id="6e6ad9d60ae73015f0b87b00e2dd8680b57e0be3" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(Tgt, Src, R)(in Src[] s, R range);</source>
          <target state="translated">&lt;strong id=&quot;encode&quot;&gt;codificaci&amp;oacute;n&lt;/strong&gt; size_t (Tgt, Src, R) (en Src [] s, rango R);</target>
        </trans-unit>
        <trans-unit id="f9c62bea5ddddb4de330af1898dd5eee3aaa5b49" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;encodedLength&quot;&gt;encodedLength&lt;/strong&gt;(E)(dchar c);</source>
          <target state="translated">size_t &lt;strong id=&quot;encodedLength&quot;&gt;encodedLength&lt;/strong&gt; (E) (dchar c);</target>
        </trans-unit>
        <trans-unit id="72b4f057c6360acab7cc0de76070af86f1321a1f" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;executed&quot;&gt;executed&lt;/strong&gt;;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;strong id=&quot;executed&quot;&gt;ejecutado&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="33215dc8bc52ed3d0b855f175ba1e7e112c80175" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;findSkip&quot;&gt;findSkip&lt;/strong&gt;(alias pred, R1)(ref R1 haystack)</source>
          <target state="translated">size_t &lt;strong id=&quot;findSkip&quot;&gt;findSkip&lt;/strong&gt; (alias pred, R1) (referencia R1 haystack)</target>
        </trans-unit>
        <trans-unit id="d5e0d9874d44e9e374ba37e7be404653a246ad1b" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;firstSequence&quot;&gt;firstSequence&lt;/strong&gt;()(const(ubyte)[] s);</source>
          <target state="translated">size_t &lt;strong id=&quot;firstSequence&quot;&gt;firstSequence&lt;/strong&gt; () (const (ubyte) [] s);</target>
        </trans-unit>
        <trans-unit id="9f0a0da4d29d93012b403e2838d92031338f1f28" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;firstSequence&quot;&gt;firstSequence&lt;/strong&gt;(E)(const(E)[] s);</source>
          <target state="translated">size_t &lt;strong id=&quot;firstSequence&quot;&gt;firstSequence&lt;/strong&gt; (E) (const (E) [] s);</target>
        </trans-unit>
        <trans-unit id="580197f67c29f7c8994e9a5d1d794f3384672fbc" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;freeSize&quot;&gt;freeSize&lt;/strong&gt;;</source>
          <target state="translated">size_t &lt;strong id=&quot;freeSize&quot;&gt;freeSize&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="551f1b58dd3294ab1728a2bbfaaf92df23c07ee0" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(A)(auto ref A a, size_t n);</source>
          <target state="translated">size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt; (A) (referencia autom&amp;aacute;tica A a, size_t n);</target>
        </trans-unit>
        <trans-unit id="bda384df1db337a53bbfc909284d63b5cad111d4" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(size_t bytes);</source>
          <target state="translated">size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt; ( &lt;strong id=&quot;goodAllocSize&quot;&gt;tama&amp;ntilde;o_t&lt;/strong&gt; bytes);</target>
        </trans-unit>
        <trans-unit id="8d4dea112a00383a3745488b18ce385352bdfe5d" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(size_t n);</source>
          <target state="translated">size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt; (size_t n);</target>
        </trans-unit>
        <trans-unit id="689c5522326f80641030abba22565c581dec3cae" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(size_t s);</source>
          <target state="translated">size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt; (size_t s);</target>
        </trans-unit>
        <trans-unit id="cc8aec98de7dfb2412eb093fa0ae6e29bc8b8930" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(size_t);</source>
          <target state="translated">size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt; (size_t);</target>
        </trans-unit>
        <trans-unit id="aff71985aab3cdeb5e15e5a60811213f928a1397" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;hashOf&quot;&gt;hashOf&lt;/strong&gt;(T)(auto ref T arg);</source>
          <target state="translated">size_t &lt;strong id=&quot;hashOf&quot;&gt;hashOf&lt;/strong&gt; (T) (referencia autom&amp;aacute;tica T arg);</target>
        </trans-unit>
        <trans-unit id="d2844812e50f84b4e926364eba417b4b9d1d9c70" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;hashOf&quot;&gt;hashOf&lt;/strong&gt;(T)(auto ref T arg, size_t seed);</source>
          <target state="translated">size_t &lt;strong id=&quot;hashOf&quot;&gt;hashOf&lt;/strong&gt; (T) (auto ref T arg, size_t seed);</target>
        </trans-unit>
        <trans-unit id="69c0458c47675bc85af87361ffd3caf86c12e42d" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;insert&quot;&gt;insert&lt;/strong&gt;(ElementType!Store value);</source>
          <target state="translated">size_t &lt;strong id=&quot;insert&quot;&gt;insert&lt;/strong&gt; (ElementType! Valor de la tienda);</target>
        </trans-unit>
        <trans-unit id="5bc2095dfcf6a9daf39ded09c57dc16e3442a236" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;insertAfter&quot;&gt;insertAfter&lt;/strong&gt;(Stuff)(Range r, Stuff stuff)</source>
          <target state="translated">size_t &lt;strong id=&quot;insertAfter&quot;&gt;insertAfter&lt;/strong&gt; (Stuff) (Rango r, Stuff stuff)</target>
        </trans-unit>
        <trans-unit id="bed74dc2764faa969e66d44448387b60a75a657a" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;insertAfter&quot;&gt;insertAfter&lt;/strong&gt;(Stuff)(Range r, Stuff stuff);</source>
          <target state="translated">size_t &lt;strong id=&quot;insertAfter&quot;&gt;insertAfter&lt;/strong&gt; (Stuff) (Rango r, Stuff stuff);</target>
        </trans-unit>
        <trans-unit id="38ba3bff00b3c497c1cf48e72d5d0fc25303b594" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;insertAfter&quot;&gt;insertAfter&lt;/strong&gt;(Stuff)(Take!Range r, Stuff stuff)</source>
          <target state="translated">size_t &lt;strong id=&quot;insertAfter&quot;&gt;insertAfter&lt;/strong&gt; (Stuff) (Take! Range r, Stuff stuff)</target>
        </trans-unit>
        <trans-unit id="8b8fdc049fb430dad405fe89eb70297ec53942c6" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;insertBack&quot;&gt;insertBack&lt;/strong&gt;(Stuff)(Stuff stuff)</source>
          <target state="translated">size_t &lt;strong id=&quot;insertBack&quot;&gt;insertBack&lt;/strong&gt; (Stuff) (Stuff stuff)</target>
        </trans-unit>
        <trans-unit id="76ea3a3992b3b6b30e4ddb2c53fafb0acc5ed374" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;insertBack&quot;&gt;insertBack&lt;/strong&gt;(Stuff)(Stuff stuff);</source>
          <target state="translated">size_t &lt;strong id=&quot;insertBack&quot;&gt;insertBack&lt;/strong&gt; (Stuff) (Stuff stuff);</target>
        </trans-unit>
        <trans-unit id="a05fefd137607ae2bef8eb27109873fd4b6963b7" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;insertBefore&quot;&gt;insertBefore&lt;/strong&gt;(Stuff)(Range r, Stuff stuff)</source>
          <target state="translated">size_t &lt;strong id=&quot;insertBefore&quot;&gt;insertBefore&lt;/strong&gt; (Stuff) (Rango r, Stuff stuff)</target>
        </trans-unit>
        <trans-unit id="bd0a2707e320c89ed64b65c3c4d879a74e90e917" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;insertBefore&quot;&gt;insertBefore&lt;/strong&gt;(Stuff)(Range r, Stuff stuff);</source>
          <target state="translated">size_t &lt;strong id=&quot;insertBefore&quot;&gt;insertBefore&lt;/strong&gt; (Stuff) (Rango r, Stuff stuff);</target>
        </trans-unit>
        <trans-unit id="8e3b444f56f67ac49f84699400877cd95be4126a" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;insertFront&quot;&gt;insertFront&lt;/strong&gt;(Stuff)(Stuff stuff)</source>
          <target state="translated">size_t &lt;strong id=&quot;insertFront&quot;&gt;insertFront&lt;/strong&gt; (Stuff) (Stuff stuff)</target>
        </trans-unit>
        <trans-unit id="5876dda1abbb76f5fa07014226181bc3a84df5e4" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;insertFront&quot;&gt;insertFront&lt;/strong&gt;(Stuff)(Stuff stuff);</source>
          <target state="translated">size_t &lt;strong id=&quot;insertFront&quot;&gt;insertFront&lt;/strong&gt; (Stuff) (Stuff stuff);</target>
        </trans-unit>
        <trans-unit id="4390db7544ed2856cee6842f0538338107fb9c31" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;lastSequence&quot;&gt;lastSequence&lt;/strong&gt;(E)(const(E)[] s);</source>
          <target state="translated">size_t &lt;strong id=&quot;lastSequence&quot;&gt;lastSequence&lt;/strong&gt; (E) (const (E) [] s);</target>
        </trans-unit>
        <trans-unit id="0d0c940859704bc8476a2bac2fe5c0ce52538832" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;len&quot;&gt;len&lt;/strong&gt;;</source>
          <target state="translated">size_t &lt;strong id=&quot;len&quot;&gt;len&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="48facb56f184766e40330214a9b7e301f6b556ea" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;levenshteinDistance&quot;&gt;levenshteinDistance&lt;/strong&gt;(alias equals = (a, b) =&amp;gt; a == b, Range1, Range2)(Range1 s, Range2 t)</source>
          <target state="translated">size_t &lt;strong id=&quot;levenshteinDistance&quot;&gt;levenshteinDistance&lt;/strong&gt; (alias igual = (a, b) =&amp;gt; a == b, Rango1, Rango2) (Rango1 s, Rango2 t)</target>
        </trans-unit>
        <trans-unit id="bf3a7c5388f4e0345285f2d806fbe29fdc3d3fc4" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;levenshteinDistance&quot;&gt;levenshteinDistance&lt;/strong&gt;(alias equals = (a, b) =&amp;gt; a == b, Range1, Range2)(auto ref Range1 s, auto ref Range2 t)</source>
          <target state="translated">size_t &lt;strong id=&quot;levenshteinDistance&quot;&gt;levenshteinDistance&lt;/strong&gt; (alias igual a = (a, b) =&amp;gt; a == b, Rango1, Rango2) (referencia autom&amp;aacute;tica Rango1 s, referencia autom&amp;aacute;tica Rango2 t)</target>
        </trans-unit>
        <trans-unit id="433c672a2fe7f7024c2c6da0bb8899a7a15e031b" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;line&quot;&gt;line&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;line&quot;&gt;l&amp;iacute;nea&lt;/strong&gt; size_t ;</target>
        </trans-unit>
        <trans-unit id="7c3de1f31c15e072ce4df715fe4b8fc673b355ab" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;newCapacity&quot;&gt;newCapacity&lt;/strong&gt;(size_t newlength, size_t size);</source>
          <target state="translated">size_t &lt;strong id=&quot;newCapacity&quot;&gt;newCapacity&lt;/strong&gt; (size_t newlength, size_t size);</target>
        </trans-unit>
        <trans-unit id="d1f088fbfa34347484b8d9cb2f403b14adf3932c" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;numCollections&quot;&gt;numCollections&lt;/strong&gt;;</source>
          <target state="translated">size_t &lt;strong id=&quot;numCollections&quot;&gt;numCollections&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3cfaa46c5d41f529250527346bd93ddc7e05fd5c" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;offset&quot;&gt;offset&lt;/strong&gt;;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;strong id=&quot;offset&quot;&gt;offset&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="addea15ffb84506702bc62e67de2208df572fefe" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;passed&quot;&gt;passed&lt;/strong&gt;;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;strong id=&quot;passed&quot;&gt;pasado&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="495c24a296c6d965294e956439366e449d3f9e9e" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;physicalIndex&quot;&gt;physicalIndex&lt;/strong&gt;(size_t logicalIndex);</source>
          <target state="translated">size_t &lt;strong id=&quot;physicalIndex&quot;&gt;physicalIndex&lt;/strong&gt; (size_t logicalIndex);</target>
        </trans-unit>
        <trans-unit id="2c83dc5d39efab94da1ce2a0cba49d15106788ee" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;pivotPartition&quot;&gt;pivotPartition&lt;/strong&gt;(alias less = &quot;a &amp;lt; b&quot;, Range)(Range r, size_t pivot)</source>
          <target state="translated">size_t &lt;strong id=&quot;pivotPartition&quot;&gt;pivotPartition&lt;/strong&gt; (alias less = &quot;a &amp;lt;b&quot;, Range) (Range r, size_t pivot)</target>
        </trans-unit>
        <trans-unit id="c33bfa0451a54909f0fa97ee4d2f3f8b539a40fd" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;popBackN&quot;&gt;popBackN&lt;/strong&gt;(Range)(ref Range r, size_t n)</source>
          <target state="translated">size_t &lt;strong id=&quot;popBackN&quot;&gt;popBackN&lt;/strong&gt; (Range) (ref Range r, size_t n)</target>
        </trans-unit>
        <trans-unit id="4cdf40a89d7b9f7f1038abe66af64190e6a52f67" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;popFrontN&quot;&gt;popFrontN&lt;/strong&gt;(Range)(ref Range r, size_t n)</source>
          <target state="translated">size_t &lt;strong id=&quot;popFrontN&quot;&gt;popFrontN&lt;/strong&gt; (Range) (ref Range r, size_t n)</target>
        </trans-unit>
        <trans-unit id="f245a2a8642d830282fe1794760b45d7c4fca20e" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;position&quot;&gt;position&lt;/strong&gt;;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;strong id=&quot;position&quot;&gt;posici&amp;oacute;n&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e1fcbb1b3c57770a0832551f1b6b87fc4d0beab2" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;readln&quot;&gt;readln&lt;/strong&gt;(C)(ref C[] buf, dchar terminator = '\x0a')</source>
          <target state="translated">size_t &lt;strong id=&quot;readln&quot;&gt;readln&lt;/strong&gt; (C) (ref C [] buf, dchar terminator = '\ x0a')</target>
        </trans-unit>
        <trans-unit id="a7da6c94257f497a76b07d797bce71e8e8321c72" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;readln&quot;&gt;readln&lt;/strong&gt;(C, R)(ref C[] buf, R terminator)</source>
          <target state="translated">size_t &lt;strong id=&quot;readln&quot;&gt;readln&lt;/strong&gt; (C, R) (ref C [] buf, terminador R)</target>
        </trans-unit>
        <trans-unit id="71497a2c5f6f65267c865c2562d783bbc3b4f03c" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;removeBack&quot;&gt;removeBack&lt;/strong&gt;(size_t howMany);</source>
          <target state="translated">size_t &lt;strong id=&quot;removeBack&quot;&gt;removeBack&lt;/strong&gt; (size_t howMany);</target>
        </trans-unit>
        <trans-unit id="f91603723a97b02d8bcc49abd1064537ef76ceaf" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;removeFront&quot;&gt;removeFront&lt;/strong&gt;(size_t howMany);</source>
          <target state="translated">size_t &lt;strong id=&quot;removeFront&quot;&gt;removeFront&lt;/strong&gt; (size_t howMany);</target>
        </trans-unit>
        <trans-unit id="c767848b364095f35552d9e69b42d49343a92914" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;removeKey&quot;&gt;removeKey&lt;/strong&gt;(Stuff)(Stuff stuff)</source>
          <target state="translated">size_t &lt;strong id=&quot;removeKey&quot;&gt;removeKey&lt;/strong&gt; (Stuff) (Stuff stuff)</target>
        </trans-unit>
        <trans-unit id="d8d78f968b57ddd90f47db0dd6db6fab2a98e459" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;removeKey&quot;&gt;removeKey&lt;/strong&gt;(U)(scope U[] elems)</source>
          <target state="translated">size_t &lt;strong id=&quot;removeKey&quot;&gt;removeKey&lt;/strong&gt; (U) (alcance U [] elems)</target>
        </trans-unit>
        <trans-unit id="3af1f91f56289e7345003dfd8d5bd05488d6cac8" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;removeKey&quot;&gt;removeKey&lt;/strong&gt;(U...)(U elems)</source>
          <target state="translated">size_t &lt;strong id=&quot;removeKey&quot;&gt;removeKey&lt;/strong&gt; (U ...) (U elems)</target>
        </trans-unit>
        <trans-unit id="f7318c5a1156ad81c0edb3eb41086c6165ee2131" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;replace&quot;&gt;replace&lt;/strong&gt;(Stuff)(Range r, Stuff stuff)</source>
          <target state="translated">size_t &lt;strong id=&quot;replace&quot;&gt;replace&lt;/strong&gt; (Stuff) (Rango r, Stuff stuff)</target>
        </trans-unit>
        <trans-unit id="d3622516d5ae9d3e7e6293b076e59dd87d1aa260" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;row&quot;&gt;row&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;row&quot;&gt;fila&lt;/strong&gt; size_t ;</target>
        </trans-unit>
        <trans-unit id="6943b1756ce1e65e3c0bc1b9efaf59bc3beace85" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;size&quot;&gt;size&lt;/strong&gt;;</source>
          <target state="translated">tama&amp;ntilde;o_t &lt;strong id=&quot;size&quot;&gt;tama&amp;ntilde;o&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d1234daaf3e741c6b107191a266c18d037afabf1" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;skiptoident&quot;&gt;skiptoident&lt;/strong&gt;(OutBuffer* buf, size_t i);</source>
          <target state="translated">size_t &lt;strong id=&quot;skiptoident&quot;&gt;skiptoident&lt;/strong&gt; (OutBuffer * buf, size_t i);</target>
        </trans-unit>
        <trans-unit id="35db37209e4684e2b33e5f4de09cfdc14653a8d7" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;stableInsert&quot;&gt;stableInsert&lt;/strong&gt;(Stuff)(Stuff stuff)</source>
          <target state="translated">size_t &lt;strong id=&quot;stableInsert&quot;&gt;stableInsert&lt;/strong&gt; (Stuff) (Stuff stuff)</target>
        </trans-unit>
        <trans-unit id="4b7e472b715fa80864a1f4a9ae517f3a3e127013" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;stableInsert&quot;&gt;stableInsert&lt;/strong&gt;(Stuff)(scope Stuff stuff)</source>
          <target state="translated">size_t &lt;strong id=&quot;stableInsert&quot;&gt;stableInsert&lt;/strong&gt; (Stuff) (alcance Stuff stuff)</target>
        </trans-unit>
        <trans-unit id="7ff3b5f2aa77a888744c38ab34b35345b64036dc" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;usedSize&quot;&gt;usedSize&lt;/strong&gt;;</source>
          <target state="translated">size_t &lt;strong id=&quot;usedSize&quot;&gt;usedSize&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d676a640ce61231ca2dd4144264fa2140bd017ed" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;validLength&quot;&gt;validLength&lt;/strong&gt;()(const(ubyte)[] s);</source>
          <target state="translated">size_t &lt;strong id=&quot;validLength&quot;&gt;validLength&lt;/strong&gt; () (const (ubyte) [] s);</target>
        </trans-unit>
        <trans-unit id="2d586518f611aee3c8e508eaba291d9b47b9af83" translate="yes" xml:space="preserve">
          <source>size_t &lt;strong id=&quot;validLength&quot;&gt;validLength&lt;/strong&gt;(E)(const(E)[] s);</source>
          <target state="translated">size_t &lt;strong id=&quot;validLength&quot;&gt;validLength&lt;/strong&gt; (E) (const (E) [] s);</target>
        </trans-unit>
        <trans-unit id="1ab50f7f5f5ce027510eab995186fedd7c2dc017" translate="yes" xml:space="preserve">
          <source>size_t delegate(InData) &lt;code&gt;callback&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; delegada size_t (InData)</target>
        </trans-unit>
        <trans-unit id="792d5952eca70eb822748182cc7f9785b9a3af6a" translate="yes" xml:space="preserve">
          <source>size_t delegate(OutData) &lt;code&gt;callback&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; delegada size_t (OutData)</target>
        </trans-unit>
        <trans-unit id="54d2fe7f482d4342afb2f21539d9461fdfd2a0f1" translate="yes" xml:space="preserve">
          <source>size_t line</source>
          <target state="translated">línea_tamaño_t</target>
        </trans-unit>
        <trans-unit id="491e65b7857b2a5dba0352cf1386400e4dcf3a79" translate="yes" xml:space="preserve">
          <source>size_t s, uint a);`</source>
          <target state="translated">tamaño_t s,uint a);`</target>
        </trans-unit>
        <trans-unit id="f1e7711c68b7d5e244e7899825a623cbc4430a16" translate="yes" xml:space="preserve">
          <source>size_t* &lt;code&gt;p&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t * &lt;code&gt;p&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07b8c60de8c3e2cec2974b0a8a38f89950693705" translate="yes" xml:space="preserve">
          <source>size_t[N] &lt;code&gt;lengths&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t [N] &lt;code&gt;lengths&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67069fcbb9308caef0cbf96555e22d28527ba240" translate="yes" xml:space="preserve">
          <source>size_t[] &lt;code&gt;valid&lt;/code&gt;</source>
          <target state="translated">tama&amp;ntilde;o_t [] &lt;code&gt;valid&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56922d6cbd67e8eee35c18cd9d5ccc31da368828" translate="yes" xml:space="preserve">
          <source>size_type &lt;strong id=&quot;max_size&quot;&gt;max_size&lt;/strong&gt;()(auto ref allocator_type a);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8adf247c0e2823088a0d2b24c6871ca472619e0" translate="yes" xml:space="preserve">
          <source>sizediff_t &lt;strong id=&quot;maxIndex&quot;&gt;maxIndex&lt;/strong&gt;(alias pred = &quot;a &amp;lt; b&quot;, Range)(Range range)</source>
          <target state="translated">sizediff_t &lt;strong id=&quot;maxIndex&quot;&gt;maxIndex&lt;/strong&gt; (alias pred = &quot;a &amp;lt;b&quot;, Rango) (Rango rango)</target>
        </trans-unit>
        <trans-unit id="8fb44ad22c8c5d5e32ba77951529a20ac5b11b6d" translate="yes" xml:space="preserve">
          <source>sizediff_t &lt;strong id=&quot;minIndex&quot;&gt;minIndex&lt;/strong&gt;(alias pred = &quot;a &amp;lt; b&quot;, Range)(Range range)</source>
          <target state="translated">sizediff_t &lt;strong id=&quot;minIndex&quot;&gt;minIndex&lt;/strong&gt; (alias pred = &quot;a &amp;lt;b&quot;, Rango) (Rango rango)</target>
        </trans-unit>
        <trans-unit id="7ea6331322778b7967d2161477e1b16110cd770a" translate="yes" xml:space="preserve">
          <source>skip this chunk over</source>
          <target state="translated">salta este trozo</target>
        </trans-unit>
        <trans-unit id="d6249af371fb4d7fba35cfee858419cf4cbd485d" translate="yes" xml:space="preserve">
          <source>slice extending</source>
          <target state="translated">extensión de la rebanada</target>
        </trans-unit>
        <trans-unit id="b1000939661554c493e4f399dce6670269956040" translate="yes" xml:space="preserve">
          <source>slice of &lt;code&gt;str&lt;/code&gt; stripped of leading and trailing whitespace or characters as specified in the second argument.</source>
          <target state="translated">rebanada de &lt;code&gt;str&lt;/code&gt; despojada de espacios en blanco iniciales o finales o caracteres como se especifica en el segundo argumento.</target>
        </trans-unit>
        <trans-unit id="210d2ea3b005e5e06196ea379c92e54f1f536fe5" translate="yes" xml:space="preserve">
          <source>slice of &lt;code&gt;str&lt;/code&gt; stripped of trailing whitespace or characters specified in the second argument.</source>
          <target state="translated">rebanada de &lt;code&gt;str&lt;/code&gt; despojada de espacios en blanco finales o caracteres especificados en el segundo argumento.</target>
        </trans-unit>
        <trans-unit id="4858bac16c93782177b1762c0ffb8cd09a3cc43f" translate="yes" xml:space="preserve">
          <source>slice of path with the extension (if any) stripped off</source>
          <target state="translated">trozo de camino con la extensión (si la hay)despojada</target>
        </trans-unit>
        <trans-unit id="828028f70aafc30d4734273ab63a1cdab7b8556f" translate="yes" xml:space="preserve">
          <source>slice of str</source>
          <target state="translated">rebanada de str</target>
        </trans-unit>
        <trans-unit id="ad4826baea191d6cd48bd78138f11292a3df7b87" translate="yes" xml:space="preserve">
          <source>slices haystack like this &lt;code&gt;haystack[0 .. stopIdx]&lt;/code&gt; If the stopIdx is greater equal the length of haystack the functions returns &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">corta el pajar como este &lt;code&gt;haystack[0 .. stopIdx]&lt;/code&gt; Si stopIdx es mayor igual a la longitud del pajar, las funciones devuelven &lt;code&gt;-1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c765e532736ce09bc4e1efd9470ebd063959f63" translate="yes" xml:space="preserve">
          <source>slices haystack like this &lt;code&gt;haystack[0 .. stopIdx]&lt;/code&gt;. If the stopIdx is greater equal the length of haystack the functions returns &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">corta el pajar como este &lt;code&gt;haystack[0 .. stopIdx]&lt;/code&gt; . Si stopIdx es mayor que la longitud del pajar, las funciones devuelven &lt;code&gt;-1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c8159278f2895fb1e166e55e3cf3138701f9148" translate="yes" xml:space="preserve">
          <source>slices haystack like this &lt;code&gt;haystack[startIdx .. $]&lt;/code&gt;. If the startIdx is greater equal the length of haystack the functions returns &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">corta el pajar como este &lt;code&gt;haystack[startIdx .. $]&lt;/code&gt; . Si startIdx es mayor que la longitud del pajar, las funciones devuelven &lt;code&gt;-1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="492d6d35c1ea819b765a7986affefbde09a669f6" translate="yes" xml:space="preserve">
          <source>smallest increment to the value 1</source>
          <target state="translated">el incremento más pequeño al valor 1</target>
        </trans-unit>
        <trans-unit id="900ab8208a3b46e3e2dc654dec95c135a01e06e5" translate="yes" xml:space="preserve">
          <source>smallest representable normalized value that's not 0</source>
          <target state="translated">el valor normalizado representativo más pequeño que no es 0</target>
        </trans-unit>
        <trans-unit id="c7b9a704dec49af695726eda4eb0294e0d532f76" translate="yes" xml:space="preserve">
          <source>snapshot of the current state of the floating-point status flags</source>
          <target state="translated">instantánea del estado actual de las banderas de estado de punto flotante</target>
        </trans-unit>
        <trans-unit id="9a07717eb4d9b83b78534e39e43ce605483f9a12" translate="yes" xml:space="preserve">
          <source>sockaddr &lt;strong id=&quot;addr&quot;&gt;addr&lt;/strong&gt;;</source>
          <target state="translated">Sockaddr &lt;strong id=&quot;addr&quot;&gt;addr&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="26654578eedc8a68932f2c360799dd8b5f8dc18a" translate="yes" xml:space="preserve">
          <source>sockaddr_in &lt;code&gt;addr&lt;/code&gt;</source>
          <target state="translated">sockaddr_in &lt;code&gt;addr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8be5b39cf367595e2785569d84c6b41a3e84c931" translate="yes" xml:space="preserve">
          <source>sockaddr_in6 &lt;code&gt;addr&lt;/code&gt;</source>
          <target state="translated">sockaddr_in6 &lt;code&gt;addr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71a765949579d38c12427297a66cb644935d7c29" translate="yes" xml:space="preserve">
          <source>sockaddr_un &lt;code&gt;addr&lt;/code&gt;</source>
          <target state="translated">sockaddr_un &lt;code&gt;addr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b3828889aae200b463a757dedb24b5a574a6917" translate="yes" xml:space="preserve">
          <source>socket created for a specific IP connection</source>
          <target state="translated">un zócalo creado para una conexión IP específica</target>
        </trans-unit>
        <trans-unit id="90b9451745bbb12e53d0aac97e619719c0ded07c" translate="yes" xml:space="preserve">
          <source>socket receives are disallowed</source>
          <target state="translated">los receptores de los enchufes están desautorizados</target>
        </trans-unit>
        <trans-unit id="7f58545bc0d52f96a9014569e70e9006c1366d37" translate="yes" xml:space="preserve">
          <source>socket sends are disallowed</source>
          <target state="translated">los envíos de socorro están desautorizados</target>
        </trans-unit>
        <trans-unit id="c559345d7b46a65f00c89f465d63c7856405a7b3" translate="yes" xml:space="preserve">
          <source>source code, must be terminated by a null (0) or EOF (0x1A) character</source>
          <target state="translated">código fuente,debe ser terminado por un carácter nulo (0)o EOF (0x1A)</target>
        </trans-unit>
        <trans-unit id="c14394dae6549478297ae3204678def117b9a53a" translate="yes" xml:space="preserve">
          <source>source file of error</source>
          <target state="translated">archivo de origen del error</target>
        </trans-unit>
        <trans-unit id="30fac44b16fd1549d19b082a56f52cecd15966f8" translate="yes" xml:space="preserve">
          <source>source location for issued error message</source>
          <target state="translated">localización de la fuente del mensaje de error emitido</target>
        </trans-unit>
        <trans-unit id="1145152f0b6f3670829185198325272aab7dac6b" translate="yes" xml:space="preserve">
          <source>source location of attribute token</source>
          <target state="translated">ubicación de la fuente de la ficha de atributo</target>
        </trans-unit>
        <trans-unit id="ca10bee0859cbbad56bc4e1aed7e8988be844011" translate="yes" xml:space="preserve">
          <source>source location to use in the identifier name.</source>
          <target state="translated">ubicación de la fuente para usar en el nombre del identificador.</target>
        </trans-unit>
        <trans-unit id="ac38e3737a26bab3d1729061d8aa51f2d2fa8afc" translate="yes" xml:space="preserve">
          <source>source location where the interpretation occurs</source>
          <target state="translated">lugar de la fuente donde se produce la interpretación</target>
        </trans-unit>
        <trans-unit id="0803df4ff1650933d2ffe6be04d4b21432134252" translate="yes" xml:space="preserve">
          <source>space</source>
          <target state="translated">space</target>
        </trans-unit>
        <trans-unit id="2563cc97e5a0f99e1e1ea8b202e56792e28dd665" translate="yes" xml:space="preserve">
          <source>sparse.d</source>
          <target state="translated">sparse.d</target>
        </trans-unit>
        <trans-unit id="d2e8bad49ed44dd3b0a72516c6b9af0a6b876ec1" translate="yes" xml:space="preserve">
          <source>specType ident : specAlias = defaultAlias</source>
          <target state="translated">specType ident:specAlias=defaultAlias</target>
        </trans-unit>
        <trans-unit id="81254f7e73c9cb850c9714a629c386397398d63d" translate="yes" xml:space="preserve">
          <source>specializations and default values are evaluated in the scope of the</source>
          <target state="translated">las especializaciones y los valores por defecto se evalúan en el ámbito de la</target>
        </trans-unit>
        <trans-unit id="91241528ac5c5b6df273602a5745535387ac1702" translate="yes" xml:space="preserve">
          <source>specified content is a file name</source>
          <target state="translated">El contenido especificado es un nombre de archivo</target>
        </trans-unit>
        <trans-unit id="e2f791851221fa229e20b9f474629f3b93b89c51" translate="yes" xml:space="preserve">
          <source>specifier allows to specify the separator character as an additional parameter.</source>
          <target state="translated">permite especificar el carácter separador como un parámetro adicional.</target>
        </trans-unit>
        <trans-unit id="9a85bb8e2496928e1186c314c6d9ba808eab8988" translate="yes" xml:space="preserve">
          <source>specifier.</source>
          <target state="translated">specifier.</target>
        </trans-unit>
        <trans-unit id="169468edb5a102361f0168de470ff612a1c97237" translate="yes" xml:space="preserve">
          <source>specifies the alignment which matches the behavior of the companion C compiler when non-default alignments are used. It must be a positive power of 2.</source>
          <target state="translated">especifica la alineación que coincide con el comportamiento del compilador C compañero cuando se usan alineaciones no predeterminadas.Debe ser una potencia positiva de 2.</target>
        </trans-unit>
        <trans-unit id="5e8d34023fc127851bced572bc15a132065e731e" translate="yes" xml:space="preserve">
          <source>specifies the maximum number of characters to use in the result.</source>
          <target state="translated">especifica el número máximo de caracteres a utilizar en el resultado.</target>
        </trans-unit>
        <trans-unit id="f1ec23f28e75b549e87978aa1b1ea30c9b5d6ddd" translate="yes" xml:space="preserve">
          <source>specifies the namespaces.</source>
          <target state="translated">especifica los espacios de nombres.</target>
        </trans-unit>
        <trans-unit id="16a57f1a05194644f23497c39c1795f2a35bcf77" translate="yes" xml:space="preserve">
          <source>specifies the number of digits generated after the decimal point. It defaults to six. At least one digit is generated before the decimal point. If the</source>
          <target state="translated">especifica el número de dígitos generados después del punto decimal.El valor por defecto es seis.Al menos un dígito se genera antes del punto decimal.Si el</target>
        </trans-unit>
        <trans-unit id="8f42b64f5c4db1e5d99af7f500b55527e9f55aab" translate="yes" xml:space="preserve">
          <source>specifies the number of significant digits, and defaults to six. Trailing zeros are elided after the decimal point, if the fractional part is zero then no decimal point is generated.</source>
          <target state="translated">especifica el número de dígitos significativos,y por defecto seis.Los ceros finales se eligen después del punto decimal,si la parte fraccionaria es cero entonces no se genera ningún punto decimal.</target>
        </trans-unit>
        <trans-unit id="629552a2f728181a8d18e206ae08bcbdc02413bc" translate="yes" xml:space="preserve">
          <source>specifies whether this is a D, C++, Objective-C or anonymous struct/class/interface</source>
          <target state="translated">especifica si se trata de una D,C++,Objetivo-C o una estructura/clase/interfaz anónima</target>
        </trans-unit>
        <trans-unit id="0e770ebe0a3760ec5e9b7267c9128e8adf5fa930" translate="yes" xml:space="preserve">
          <source>specify a data type to share</source>
          <target state="translated">especificar un tipo de datos para compartir</target>
        </trans-unit>
        <trans-unit id="d9f1f766e7a271f9bd8a480cebc175e75adcc2ec" translate="yes" xml:space="preserve">
          <source>specify the relationships among the members of a class instance. Those relationships must hold for any interactions with the instance from its public interface.</source>
          <target state="translated">especifican las relaciones entre los miembros de una instancia de clase.Esas relaciones deben ser válidas para cualquier interacción con la instancia desde su interfaz pública.</target>
        </trans-unit>
        <trans-unit id="1070cf9e9d0d1c2b0ff5635ee1930ef081bdbe80" translate="yes" xml:space="preserve">
          <source>specify which data type to stop sharing</source>
          <target state="translated">especificar qué tipo de datos dejar de compartir</target>
        </trans-unit>
        <trans-unit id="9b6b19c8fde0d1beda91b50adbc6f5caa8f67cba" translate="yes" xml:space="preserve">
          <source>split takes the list of time units to split out as template arguments. The time unit strings must be given in decreasing order. How it returns the values for those units depends on the overload used.</source>
          <target state="translated">split toma la lista de unidades de tiempo para dividir como argumentos de la plantilla.Las cadenas de unidades de tiempo deben darse en orden decreciente.La forma en que devuelve los valores de esas unidades depende de la sobrecarga utilizada.</target>
        </trans-unit>
        <trans-unit id="3f57fa53a20a7e90a362eacdee65a9ca13d76079" translate="yes" xml:space="preserve">
          <source>sqlite3BtreeOpen()</source>
          <target state="translated">sqlite3BtreeOpen()</target>
        </trans-unit>
        <trans-unit id="100f4043ced8c34f52b27f321b11ab162cb317fc" translate="yes" xml:space="preserve">
          <source>sqlite3PageMalloc()</source>
          <target state="translated">sqlite3PageMalloc()</target>
        </trans-unit>
        <trans-unit id="f87309d869dc8406cf1f234307fba1ce600271e0" translate="yes" xml:space="preserve">
          <source>sqlite3_create_collation only</source>
          <target state="translated">sqlite3_create_collation only</target>
        </trans-unit>
        <trans-unit id="c84f71cb9bb6d0e4fb10cbb03f6e3fd9b30d4081" translate="yes" xml:space="preserve">
          <source>sqlite3_create_function only</source>
          <target state="translated">sqlite3_create_function only</target>
        </trans-unit>
        <trans-unit id="a0e585383ef7e81e860c42603b093868c3e482f9" translate="yes" xml:space="preserve">
          <source>sqlite3_index_constraint* &lt;strong id=&quot;aConstraint&quot;&gt;aConstraint&lt;/strong&gt;;</source>
          <target state="translated">sqlite3_index_constraint * &lt;strong id=&quot;aConstraint&quot;&gt;aConstraint&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="46d3a5a42e1c2d7526ff115e39907d4545c617b7" translate="yes" xml:space="preserve">
          <source>sqlite3_index_orderby* &lt;strong id=&quot;aOrderBy&quot;&gt;aOrderBy&lt;/strong&gt;;</source>
          <target state="translated">sqlite3_index_orderby * &lt;strong id=&quot;aOrderBy&quot;&gt;aOrderBy&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d98b358d7eca9d50f809bad00526b86aa415e5d2" translate="yes" xml:space="preserve">
          <source>sqlite3_int64</source>
          <target state="translated">sqlite3_int64</target>
        </trans-unit>
        <trans-unit id="957b9000fe8341399840d103cbe00fbf8ec56775" translate="yes" xml:space="preserve">
          <source>sqlite3_int64, sqlite3_int64</source>
          <target state="translated">sqlite3_int64,sqlite3_int64</target>
        </trans-unit>
        <trans-unit id="3153cde38606b99f1893596e8d6b3e4a4c51ee95" translate="yes" xml:space="preserve">
          <source>sqlite3_malloc()</source>
          <target state="translated">sqlite3_malloc()</target>
        </trans-unit>
        <trans-unit id="c7d47797726b949f9c09773edd9c98adff3de651" translate="yes" xml:space="preserve">
          <source>sqlite3_mem_methods*</source>
          <target state="translated">sqlite3_mem_methods*</target>
        </trans-unit>
        <trans-unit id="edf23c8d7b4e2ce7b772eff71b6ea9f2f63feae9" translate="yes" xml:space="preserve">
          <source>sqlite3_mutex_methods*</source>
          <target state="translated">sqlite3_mutex_methods*</target>
        </trans-unit>
        <trans-unit id="f54290bb6493cc96417b712ef12091395b3f2a89" translate="yes" xml:space="preserve">
          <source>sqlite3_pcache_methods2*</source>
          <target state="translated">sqlite3_pcache_methods2*</target>
        </trans-unit>
        <trans-unit id="3993ca2c04f1fe8dc489adabf4cda5e4a93886e8" translate="yes" xml:space="preserve">
          <source>sqlite3_randomness()</source>
          <target state="translated">sqlite3_randomness()</target>
        </trans-unit>
        <trans-unit id="a67a17322888dddfcfd780e21a01b11712cea8de" translate="yes" xml:space="preserve">
          <source>sqlite3_step() has another row ready</source>
          <target state="translated">sqlite3_step()tiene otra fila preparada</target>
        </trans-unit>
        <trans-unit id="ec82275f0c8b53bb123e71bb6c44bd81b35bef6e" translate="yes" xml:space="preserve">
          <source>sqlite3_step() has finished executing</source>
          <target state="translated">sqlite3_step()ha terminado de ejecutarse</target>
        </trans-unit>
        <trans-unit id="3a6add4fecbd240423ccbb59c8431ad68b13910a" translate="yes" xml:space="preserve">
          <source>sqlite3_vtab* &lt;strong id=&quot;pVtab&quot;&gt;pVtab&lt;/strong&gt;;</source>
          <target state="translated">sqlite3_vtab * &lt;strong id=&quot;pVtab&quot;&gt;pVtab&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d9c1bfe74c1a48d49d0ef7a4c0b721234f79ed2b" translate="yes" xml:space="preserve">
          <source>sqrt(x)</source>
          <target state="translated">sqrt(x)</target>
        </trans-unit>
        <trans-unit id="36e7a3113098ea9cfbd0db2427d49618595a2bde" translate="yes" xml:space="preserve">
          <source>sqrt(x&lt;sup&gt;2&lt;/sup&gt; + y&lt;sup&gt;2&lt;/sup&gt;)</source>
          <target state="translated">sqrt (x &lt;sup&gt;2&lt;/sup&gt; + y &lt;sup&gt;2&lt;/sup&gt; )</target>
        </trans-unit>
        <trans-unit id="73ad9c03ec413286fd7588b918c19b3509f39a22" translate="yes" xml:space="preserve">
          <source>src/core/stdc/stdlib.d</source>
          <target state="translated">src/core/stdc/stdlib.d</target>
        </trans-unit>
        <trans-unit id="1894dafac460a4a602a0446d4659806628cd58b4" translate="yes" xml:space="preserve">
          <source>src/rt/tracegc.d</source>
          <target state="translated">src/rt/tracegc.d</target>
        </trans-unit>
        <trans-unit id="c1c93f88d273660be5358cd4ee2df2c2f3f0e8e7" translate="yes" xml:space="preserve">
          <source>ss</source>
          <target state="translated">ss</target>
        </trans-unit>
        <trans-unit id="c81dcc43fc47cb04f2e77f6d6699d45667d91ec7" translate="yes" xml:space="preserve">
          <source>stable &lt;code&gt;partition3&lt;/code&gt; has not been implemented yet.</source>
          <target state="translated">La &lt;code&gt;partition3&lt;/code&gt; estable3 no se ha implementado todav&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="f96f7e1ed87b8a06ddf89f8959a7070dafde0850" translate="yes" xml:space="preserve">
          <source>stack to switch to</source>
          <target state="translated">pila para cambiar a</target>
        </trans-unit>
        <trans-unit id="fcb33251025913afbd7fef9df591e31d8f75e946" translate="yes" xml:space="preserve">
          <source>standard parsing</source>
          <target state="translated">análisis estándar</target>
        </trans-unit>
        <trans-unit id="b4dbcef9feb3f3b8ccd8b8991514a532f5691615" translate="yes" xml:space="preserve">
          <source>start new line</source>
          <target state="translated">empezar una nueva línea</target>
        </trans-unit>
        <trans-unit id="54307b3d8784a6e4e79d6d0f17e783c4a240606e" translate="yes" xml:space="preserve">
          <source>start of chain (can be null)</source>
          <target state="translated">comienzo de la cadena (puede ser nulo)</target>
        </trans-unit>
        <trans-unit id="0529cd8a885c6284b0520d393bda0debf7290b45" translate="yes" xml:space="preserve">
          <source>start should not be called if the StopWatch is already running.</source>
          <target state="translated">no se debe llamar al inicio si el Cronómetro ya está funcionando.</target>
        </trans-unit>
        <trans-unit id="4f253850fcce00c1c9b1c5ada5d0ca93d7d737e4" translate="yes" xml:space="preserve">
          <source>start with</source>
          <target state="translated">empezar con</target>
        </trans-unit>
        <trans-unit id="908d48ad40c8af8eb1ab3ff79510a214d8c14448" translate="yes" xml:space="preserve">
          <source>starting index in Action Table + 1</source>
          <target state="translated">índice inicial en la Tabla de Acción+1</target>
        </trans-unit>
        <trans-unit id="5712726d7de43c49bb01d43be9c247aedca25d58" translate="yes" xml:space="preserve">
          <source>starting index in s[], updated to reflect number of code units decoded</source>
          <target state="translated">índice inicial en s[],actualizado para reflejar el número de unidades de código decodificadas</target>
        </trans-unit>
        <trans-unit id="d04585702d6e071955ba523e7bd09d84b50056b3" translate="yes" xml:space="preserve">
          <source>starting index into &lt;code&gt;input[]&lt;/code&gt;</source>
          <target state="translated">&amp;iacute;ndice inicial en la &lt;code&gt;input[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="126b39bd3d856d9f787e4a58ff8d863d7c795cea" translate="yes" xml:space="preserve">
          <source>starting index into s[]; incremented by number of code units processed</source>
          <target state="translated">índice inicial en s[];incrementado por el número de unidades de código procesadas</target>
        </trans-unit>
        <trans-unit id="b05ba89cc95b8c83a579ffb865ddc89b47c24c42" translate="yes" xml:space="preserve">
          <source>starting index of UTF sequence (default: &lt;code&gt;0&lt;/code&gt;)</source>
          <target state="translated">&amp;iacute;ndice inicial de secuencia UTF (predeterminado: &lt;code&gt;0&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8c1a000c87b2f73950a67235f43ac712059d837d" translate="yes" xml:space="preserve">
          <source>starting index to a well-formed code point</source>
          <target state="translated">índice de partida a un punto de código bien formado</target>
        </trans-unit>
        <trans-unit id="0c547916502fb5faedb7453b19966373beab61fa" translate="yes" xml:space="preserve">
          <source>starting offset into base[]</source>
          <target state="translated">empezando a desplazarse hacia la base[]</target>
        </trans-unit>
        <trans-unit id="c095a5312bed7fe25574c9a4ce6d19f306d4e327" translate="yes" xml:space="preserve">
          <source>stat_t &lt;code&gt;statbuf&lt;/code&gt;</source>
          <target state="translated">stat_t &lt;code&gt;statbuf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="196097ff4b6351de1fb307ce7f18844e984b9a61" translate="yes" xml:space="preserve">
          <source>stat_t retrieved from file.</source>
          <target state="translated">stat_t recuperado del archivo.</target>
        </trans-unit>
        <trans-unit id="5301730938eb1e558ad618c8a1c1352e30a44b49" translate="yes" xml:space="preserve">
          <source>state of calling other constructors</source>
          <target state="translated">estado de llamar a otros constructores</target>
        </trans-unit>
        <trans-unit id="505a44838d4026f585db8d47c5a9cb1306706682" translate="yes" xml:space="preserve">
          <source>state of field initializations</source>
          <target state="translated">estado de las inicializaciones de campo</target>
        </trans-unit>
        <trans-unit id="20e0424ba1359203b0b3a9de5355b10ce6125298" translate="yes" xml:space="preserve">
          <source>statement label symbol table</source>
          <target state="translated">tabla de símbolos de la etiqueta de la declaración</target>
        </trans-unit>
        <trans-unit id="610467452e744e1f6bfbacc5063385fc079396d4" translate="yes" xml:space="preserve">
          <source>statement to check for block exit status</source>
          <target state="translated">declaración para comprobar el estado de la salida del bloque</target>
        </trans-unit>
        <trans-unit id="454b6bbc1bd7082cbef8b4d1b21699ad516e98cc" translate="yes" xml:space="preserve">
          <source>statement.d</source>
          <target state="translated">statement.d</target>
        </trans-unit>
        <trans-unit id="ba6c89975fa29248e41f9e4f3d136e4901cc07dc" translate="yes" xml:space="preserve">
          <source>statement_rewrite_walker.d</source>
          <target state="translated">statement_rewrite_walker.d</target>
        </trans-unit>
        <trans-unit id="bd688d1b3cbaa24b78588c3a88cc40b20214bf6a" translate="yes" xml:space="preserve">
          <source>statementsem.d</source>
          <target state="translated">statementsem.d</target>
        </trans-unit>
        <trans-unit id="53fadd92b91a260e0d127bc2ee07b33a39ab11c4" translate="yes" xml:space="preserve">
          <source>static @nogc @property CArgs &lt;strong id=&quot;cArgs&quot;&gt;cArgs&lt;/strong&gt;();</source>
          <target state="translated">static @nogc @property CArgs &lt;strong id=&quot;cArgs&quot;&gt;cArgs&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="b33ab3d26371761cdb1fe78c36ad72e6a7dc5386" translate="yes" xml:space="preserve">
          <source>static @nogc ExceptionHeader* &lt;strong id=&quot;create&quot;&gt;create&lt;/strong&gt;(Throwable o);</source>
          <target state="translated">static @nogc ExceptionHeader * &lt;strong id=&quot;create&quot;&gt;create&lt;/strong&gt; (Throwable o);</target>
        </trans-unit>
        <trans-unit id="6438ec44a653cd81fb484fcc79e374772f1a24bc" translate="yes" xml:space="preserve">
          <source>static @property @trusted string &lt;strong id=&quot;hostName&quot;&gt;hostName&lt;/strong&gt;();</source>
          <target state="translated">static @property @trusted string &lt;strong id=&quot;hostName&quot;&gt;hostName&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="aab95122a9a1c3de68ab5b0bd1f65dfc48a80889" translate="yes" xml:space="preserve">
          <source>static @property CollectHandler &lt;strong id=&quot;collectHandler&quot;&gt;collectHandler&lt;/strong&gt;();</source>
          <target state="translated">static @property CollectHandler &lt;strong id=&quot;collectHandler&quot;&gt;collectHandler&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="d9d1aac7b7a1cbdc217a88dd84cb29fe926d7c4b" translate="yes" xml:space="preserve">
          <source>static @property ExtendedModuleUnitTester &lt;strong id=&quot;extendedModuleUnitTester&quot;&gt;extendedModuleUnitTester&lt;/strong&gt;();</source>
          <target state="translated">static @property ExtendedModuleUnitTester &lt;strong id=&quot;extendedModuleUnitTester&quot;&gt;extendedModuleUnitTester&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="8041558ca65cf52d70ed3fe753f068acdcacb03a" translate="yes" xml:space="preserve">
          <source>static @property ModuleUnitTester &lt;strong id=&quot;moduleUnitTester&quot;&gt;moduleUnitTester&lt;/strong&gt;();</source>
          <target state="translated">static @property ModuleUnitTester &lt;strong id=&quot;moduleUnitTester&quot;&gt;moduleUnitTester&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="1391197b24407f05e21391fe7cbe2f69f608bbfe" translate="yes" xml:space="preserve">
          <source>static @property TraceHandler &lt;strong id=&quot;traceHandler&quot;&gt;traceHandler&lt;/strong&gt;();</source>
          <target state="translated">static @property TraceHandler &lt;strong id=&quot;traceHandler&quot;&gt;traceHandler&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="cd07abc5b9ebb9563f690277f6cdd6ce05f046a1" translate="yes" xml:space="preserve">
          <source>static @property string &lt;strong id=&quot;defaultUserAgent&quot;&gt;defaultUserAgent&lt;/strong&gt;();</source>
          <target state="translated">static @property string &lt;strong id=&quot;defaultUserAgent&quot;&gt;defaultUserAgent&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="63e77dba3b7417d6e96c57c0c214779c1e933d5d" translate="yes" xml:space="preserve">
          <source>static @property string[] &lt;strong id=&quot;args&quot;&gt;args&lt;/strong&gt;();</source>
          <target state="translated">static @property string [] &lt;strong id=&quot;args&quot;&gt;args&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="5db69cced76e4f561b0ee1fbacc94fe144da2005" translate="yes" xml:space="preserve">
          <source>static @property void &lt;strong id=&quot;collectHandler&quot;&gt;collectHandler&lt;/strong&gt;(CollectHandler h);</source>
          <target state="translated">static @property void &lt;strong id=&quot;collectHandler&quot;&gt;collectHandler&lt;/strong&gt; (CollectHandler h);</target>
        </trans-unit>
        <trans-unit id="e2a1c139f2bd1085b36713d19f1d8c08367e352d" translate="yes" xml:space="preserve">
          <source>static @property void &lt;strong id=&quot;extendedModuleUnitTester&quot;&gt;extendedModuleUnitTester&lt;/strong&gt;(ExtendedModuleUnitTester h);</source>
          <target state="translated">static @property void &lt;strong id=&quot;extendedModuleUnitTester&quot;&gt;extendedModuleUnitTester&lt;/strong&gt; (ExtendedModuleUnitTester h);</target>
        </trans-unit>
        <trans-unit id="53d1577e72354e47398727c3124e03602f7b876b" translate="yes" xml:space="preserve">
          <source>static @property void &lt;strong id=&quot;moduleUnitTester&quot;&gt;moduleUnitTester&lt;/strong&gt;(ModuleUnitTester h);</source>
          <target state="translated">static @property void &lt;strong id=&quot;moduleUnitTester&quot;&gt;moduleUnitTester&lt;/strong&gt; (ModuleUnitTester h);</target>
        </trans-unit>
        <trans-unit id="22b24de6916b6e343fc0d6d23e65eaedb607ae32" translate="yes" xml:space="preserve">
          <source>static @property void &lt;strong id=&quot;traceHandler&quot;&gt;traceHandler&lt;/strong&gt;(TraceHandler h);</source>
          <target state="translated">static @property void &lt;strong id=&quot;traceHandler&quot;&gt;traceHandler&lt;/strong&gt; (TraceHandler h);</target>
        </trans-unit>
        <trans-unit id="77ea2efa79faea4dce0cb402b6418dab7dfb0494" translate="yes" xml:space="preserve">
          <source>static @safe File &lt;strong id=&quot;tmpfile&quot;&gt;tmpfile&lt;/strong&gt;();</source>
          <target state="translated">Archivo est&amp;aacute;tico @safe &lt;strong id=&quot;tmpfile&quot;&gt;tmpfile&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ea4b90f2e8365e8a586ce8eca7080155f6b4554a" translate="yes" xml:space="preserve">
          <source>static @safe File &lt;strong id=&quot;wrapFile&quot;&gt;wrapFile&lt;/strong&gt;(FILE* f);</source>
          <target state="translated">static @safe File &lt;strong id=&quot;wrapFile&quot;&gt;wrapFile&lt;/strong&gt; (ARCHIVO * f);</target>
        </trans-unit>
        <trans-unit id="4d6356188cfac5a4dcda6e11c3ffa97c405cc259" translate="yes" xml:space="preserve">
          <source>static @safe immutable(WindowsTimeZone) &lt;strong id=&quot;getTimeZone&quot;&gt;getTimeZone&lt;/strong&gt;(string name);</source>
          <target state="translated">static @safe inmutable (WindowsTimeZone) &lt;strong id=&quot;getTimeZone&quot;&gt;getTimeZone&lt;/strong&gt; (nombre de cadena);</target>
        </trans-unit>
        <trans-unit id="d8ee6d8fa5ffb961e602dd285442b10771b9a988" translate="yes" xml:space="preserve">
          <source>static @safe int &lt;strong id=&quot;select&quot;&gt;select&lt;/strong&gt;(SocketSet checkRead, SocketSet checkWrite, SocketSet checkError);</source>
          <target state="translated">static @safe int &lt;strong id=&quot;select&quot;&gt;select&lt;/strong&gt; (SocketSet checkRead, SocketSet checkWrite, SocketSet checkError);</target>
        </trans-unit>
        <trans-unit id="b3906f1b1608b61ca8f45755fcc38287c41a0ccb" translate="yes" xml:space="preserve">
          <source>static @safe string &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt;(scope const(char)[] name, string defaultValue = null);</source>
          <target state="translated">static @safe string &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt; (scope const (char) [] name, string defaultValue = null);</target>
        </trans-unit>
        <trans-unit id="2822cb52d0485ab430a9bebecf2316a2b61258b0" translate="yes" xml:space="preserve">
          <source>static @safe string &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;(scope const(char)[] name);</source>
          <target state="translated">static @safe string &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt; (alcance const (char) [] nombre);</target>
        </trans-unit>
        <trans-unit id="c21a86104442b26357051da95f7dd1236f0bcf1d" translate="yes" xml:space="preserve">
          <source>static @safe string[] &lt;strong id=&quot;getInstalledTZNames&quot;&gt;getInstalledTZNames&lt;/strong&gt;();</source>
          <target state="translated">static @safe string [] &lt;strong id=&quot;getInstalledTZNames&quot;&gt;getInstalledTZNames&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="69f03f5594ff6beb710a57bd3ea25a95cb16802e" translate="yes" xml:space="preserve">
          <source>static @trusted immutable(PosixTimeZone) &lt;strong id=&quot;getTimeZone&quot;&gt;getTimeZone&lt;/strong&gt;(string name, string tzDatabaseDir = defaultTZDatabaseDir);</source>
          <target state="translated">static @trusted inmutable (PosixTimeZone) &lt;strong id=&quot;getTimeZone&quot;&gt;getTimeZone&lt;/strong&gt; (nombre de cadena, cadena tzDatabaseDir = defaultTZDatabaseDir);</target>
        </trans-unit>
        <trans-unit id="46c866a281ee32da0d8a85432951d74aa17c4396" translate="yes" xml:space="preserve">
          <source>static @trusted inout(char)[] &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt;(inout char[] value, scope const(char)[] name);</source>
          <target state="translated">static @trusted inout (char) [] &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt; (valor inout char [], alcance const (char) [] nombre);</target>
        </trans-unit>
        <trans-unit id="71899fd625a9c6b56fd363a757559101570c9a59" translate="yes" xml:space="preserve">
          <source>static @trusted int &lt;strong id=&quot;select&quot;&gt;select&lt;/strong&gt;(SocketSet checkRead, SocketSet checkWrite, SocketSet checkError, Duration timeout);</source>
          <target state="translated">static @trusted int &lt;strong id=&quot;select&quot;&gt;select&lt;/strong&gt; (SocketSet checkRead, SocketSet checkWrite, SocketSet checkError, Duration timeout);</target>
        </trans-unit>
        <trans-unit id="262e6a17861019eb914a95b858361d33bdb33cd7" translate="yes" xml:space="preserve">
          <source>static @trusted int &lt;strong id=&quot;select&quot;&gt;select&lt;/strong&gt;(SocketSet checkRead, SocketSet checkWrite, SocketSet checkError, TimeVal* timeout);</source>
          <target state="translated">static @trusted int &lt;strong id=&quot;select&quot;&gt;select&lt;/strong&gt; (SocketSet checkRead, SocketSet checkWrite, SocketSet checkError, TimeVal * timeout);</target>
        </trans-unit>
        <trans-unit id="363c0300f47372e464f79b10121ae2f8103a7df8" translate="yes" xml:space="preserve">
          <source>static @trusted string[] &lt;strong id=&quot;getInstalledTZNames&quot;&gt;getInstalledTZNames&lt;/strong&gt;(string subName = &quot;&quot;, string tzDatabaseDir = defaultTZDatabaseDir);</source>
          <target state="translated">static @trusted string [] &lt;strong id=&quot;getInstalledTZNames&quot;&gt;getInstalledTZNames&lt;/strong&gt; (string subName = &quot;&quot;, string tzDatabaseDir = defaultTZDatabaseDir);</target>
        </trans-unit>
        <trans-unit id="e74c8669b9c55514b16c0f5cd957471ca8c8e33f" translate="yes" xml:space="preserve">
          <source>static @trusted string[string] &lt;strong id=&quot;toAA&quot;&gt;toAA&lt;/strong&gt;();</source>
          <target state="translated">static @trusted string [string] &lt;strong id=&quot;toAA&quot;&gt;toAA&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="4fc559d022872ff8ecd090d3a0d4a5442bab3d14" translate="yes" xml:space="preserve">
          <source>static @trusted ubyte[16] &lt;strong id=&quot;parse&quot;&gt;parse&lt;/strong&gt;(scope const(char)[] addr);</source>
          <target state="translated">static @trusted ubyte [16] &lt;strong id=&quot;parse&quot;&gt;parse&lt;/strong&gt; (scope const (char) [] addr);</target>
        </trans-unit>
        <trans-unit id="0ea3e4ad826e14b647bce92bdb86e43fb102627e" translate="yes" xml:space="preserve">
          <source>static AffixAllocator &lt;strong id=&quot;instance&quot;&gt;instance&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;instance&quot;&gt;instancia&lt;/strong&gt; est&amp;aacute;tica de AffixAllocator ;</target>
        </trans-unit>
        <trans-unit id="fb03104ee46ffb84857e7567414150236ed42015" translate="yes" xml:space="preserve">
          <source>static CallExp &lt;strong id=&quot;create&quot;&gt;create&lt;/strong&gt;(Loc loc, FuncDeclaration fd, Expression earg1);</source>
          <target state="translated">&lt;strong id=&quot;create&quot;&gt;creaci&amp;oacute;n de&lt;/strong&gt; CallExp est&amp;aacute;tica (Loc loc, FuncDeclaration fd, Expression earg1);</target>
        </trans-unit>
        <trans-unit id="851bf4a54e7f1a9f947ca8873ac478753ad5da60" translate="yes" xml:space="preserve">
          <source>static CppExceptionHeader* &lt;strong id=&quot;toExceptionHeader&quot;&gt;toExceptionHeader&lt;/strong&gt;(_Unwind_Exception* eo);</source>
          <target state="translated">static CppExceptionHeader * &lt;strong id=&quot;toExceptionHeader&quot;&gt;toExceptionHeader&lt;/strong&gt; (_Unwind_Exception * eo);</target>
        </trans-unit>
        <trans-unit id="ce73ed30ea25b8f6b7151d14e1307ee048ee76e6" translate="yes" xml:space="preserve">
          <source>static DsymbolTable &lt;strong id=&quot;resolve&quot;&gt;resolve&lt;/strong&gt;(Identifiers* packages, Dsymbol* pparent, Package* ppkg);</source>
          <target state="translated">est&amp;aacute;tica DsymbolTable &lt;strong id=&quot;resolve&quot;&gt;determinaci&amp;oacute;n&lt;/strong&gt; (Identificadores * paquetes, Dsymbol * pParent, paquete * ppkg);</target>
        </trans-unit>
        <trans-unit id="35444472d46990014e197dc49d268c713e37ae01" translate="yes" xml:space="preserve">
          <source>static Dsymbols* &lt;strong id=&quot;arraySyntaxCopy&quot;&gt;arraySyntaxCopy&lt;/strong&gt;(Dsymbols* a);</source>
          <target state="translated">Dsymbols est&amp;aacute;tico * &lt;strong id=&quot;arraySyntaxCopy&quot;&gt;arraySyntaxCopy&lt;/strong&gt; (Dsymbols * a);</target>
        </trans-unit>
        <trans-unit id="b2bbdc0b5f676d6f52dd102ead7908c6ea656bc1" translate="yes" xml:space="preserve">
          <source>static EncodingScheme &lt;strong id=&quot;create&quot;&gt;create&lt;/strong&gt;(string encodingName);</source>
          <target state="translated">EncodingScheme est&amp;aacute;tico &lt;strong id=&quot;create&quot;&gt;create&lt;/strong&gt; (string encodingName);</target>
        </trans-unit>
        <trans-unit id="fe4fc5396af1bb22b1c69afe4f1fca51c030a8a4" translate="yes" xml:space="preserve">
          <source>static Ensures* &lt;strong id=&quot;arraySyntaxCopy&quot;&gt;arraySyntaxCopy&lt;/strong&gt;(Ensures* a);</source>
          <target state="translated">est&amp;aacute;tico asegura * &lt;strong id=&quot;arraySyntaxCopy&quot;&gt;arraySyntaxCopy&lt;/strong&gt; (asegura * a);</target>
        </trans-unit>
        <trans-unit id="7df958570f79f27daa77e621ff0808170be66131" translate="yes" xml:space="preserve">
          <source>static ExceptionHeader* &lt;strong id=&quot;pop&quot;&gt;pop&lt;/strong&gt;();</source>
          <target state="translated">ExceptionHeader * &lt;strong id=&quot;pop&quot;&gt;pop&lt;/strong&gt; () est&amp;aacute;tico ;</target>
        </trans-unit>
        <trans-unit id="f05c2a8ac0056fc6f7bf8279593c9a1adbebbb59" translate="yes" xml:space="preserve">
          <source>static ExceptionHeader* &lt;strong id=&quot;toExceptionHeader&quot;&gt;toExceptionHeader&lt;/strong&gt;(_Unwind_Exception* eo);</source>
          <target state="translated">static ExceptionHeader * &lt;strong id=&quot;toExceptionHeader&quot;&gt;toExceptionHeader&lt;/strong&gt; (_Unwind_Exception * eo);</target>
        </trans-unit>
        <trans-unit id="2f8977ad25368d7c1c4e94425ee70071cf9bc54b" translate="yes" xml:space="preserve">
          <source>static Expression &lt;strong id=&quot;combine&quot;&gt;combine&lt;/strong&gt;(Expression e1, Expression e2);</source>
          <target state="translated">Expresi&amp;oacute;n est&amp;aacute;tica &lt;strong id=&quot;combine&quot;&gt;combinan&lt;/strong&gt; (e1 Expresi&amp;oacute;n, Expresi&amp;oacute;n e2);</target>
        </trans-unit>
        <trans-unit id="8246ec8a955bf22d34c7ea1998c78c46f9e97770" translate="yes" xml:space="preserve">
          <source>static Expression &lt;strong id=&quot;extractLast&quot;&gt;extractLast&lt;/strong&gt;(Expression e, out Expression e0);</source>
          <target state="translated">Expression static &lt;strong id=&quot;extractLast&quot;&gt;extractLast&lt;/strong&gt; (Expression e, out Expression e0);</target>
        </trans-unit>
        <trans-unit id="4f4d8939f470fcd7f50a2b97183ac25661ca1eca" translate="yes" xml:space="preserve">
          <source>static Expression &lt;strong id=&quot;paintAsType&quot;&gt;paintAsType&lt;/strong&gt;(UnionExp* pue, Expression e, Type type);</source>
          <target state="translated">Expression static &lt;strong id=&quot;paintAsType&quot;&gt;paintAsType&lt;/strong&gt; (UnionExp * pue, Expression e, Type type);</target>
        </trans-unit>
        <trans-unit id="393e1cbdb8781bb48fe40eadd6d885e50c7be6b9" translate="yes" xml:space="preserve">
          <source>static FTP &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt;();</source>
          <target state="translated">FTP est&amp;aacute;tico &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="8df3f1a993f76999bc9f1d04429ff2678fd768e8" translate="yes" xml:space="preserve">
          <source>static FTP &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt;(const(char)[] url);</source>
          <target state="translated">FTP est&amp;aacute;tico &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt; (const (char) [] url);</target>
        </trans-unit>
        <trans-unit id="5a082ff9491e4b25902057b8b8fe8210eabe07b9" translate="yes" xml:space="preserve">
          <source>static FallbackAllocator &lt;strong id=&quot;instance&quot;&gt;instance&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;instance&quot;&gt;instancia de&lt;/strong&gt; FallbackAllocator est&amp;aacute;tica ;</target>
        </trans-unit>
        <trans-unit id="47ee48dd7474237f29960a817ce86aef29b10491" translate="yes" xml:space="preserve">
          <source>static FuncDeclaration &lt;strong id=&quot;genCfunc&quot;&gt;genCfunc&lt;/strong&gt;(Parameters* fparams, Type treturn, const(char)* name, StorageClass stc = 0);</source>
          <target state="translated">est&amp;aacute;tica FuncDeclaration &lt;strong id=&quot;genCfunc&quot;&gt;genCfunc&lt;/strong&gt; (* Par&amp;aacute;metros fparams, Tipo Tretorno, const (char) * nombre, Almacenamiento STC = 0);</target>
        </trans-unit>
        <trans-unit id="a396b2da11383b0b4c556dc4f867c37de1869ccf" translate="yes" xml:space="preserve">
          <source>static HTTP &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt;();</source>
          <target state="translated">HTTP est&amp;aacute;tico &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="3db660e23ea1275e29984132b1b329e8b85dcb83" translate="yes" xml:space="preserve">
          <source>static HTTP &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt;(const(char)[] url);</source>
          <target state="translated">HTTP &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt; est&amp;aacute;tico (const (char) [] url);</target>
        </trans-unit>
        <trans-unit id="c5ac1061621055f58a890e89829d3dca5193c70b" translate="yes" xml:space="preserve">
          <source>static Object &lt;strong id=&quot;factory&quot;&gt;factory&lt;/strong&gt;(string classname);</source>
          <target state="translated">&lt;strong id=&quot;factory&quot;&gt;F&amp;aacute;brica de&lt;/strong&gt; objetos est&amp;aacute;ticos (string classname);</target>
        </trans-unit>
        <trans-unit id="ecea6762fbf6cb8eac9bde6f0177d48ab9bda8cf" translate="yes" xml:space="preserve">
          <source>static Parameter &lt;strong id=&quot;getNth&quot;&gt;getNth&lt;/strong&gt;(Parameters* parameters, size_t nth, size_t* pn = null);</source>
          <target state="translated">Par&amp;aacute;metro est&amp;aacute;tico &lt;strong id=&quot;getNth&quot;&gt;getNth&lt;/strong&gt; (Par&amp;aacute;metros * par&amp;aacute;metros, size_t nth, size_t * pn = null);</target>
        </trans-unit>
        <trans-unit id="0cd189c43338e0ad924b4ade0f4fbf850ecfb9dd" translate="yes" xml:space="preserve">
          <source>static SMTP &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt;();</source>
          <target state="translated">SMTP est&amp;aacute;tico &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="5fc72066728d68da868f99a7efbab74696602c4f" translate="yes" xml:space="preserve">
          <source>static SMTP &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt;(const(char)[] url);</source>
          <target state="translated">SMTP est&amp;aacute;tico &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt; (const (char) [] url);</target>
        </trans-unit>
        <trans-unit id="277842811b5e6038f8571b8f9f9f1b2f2fb2f762" translate="yes" xml:space="preserve">
          <source>static Scope* &lt;strong id=&quot;createNewScope&quot;&gt;createNewScope&lt;/strong&gt;(Scope* sc, StorageClass stc, LINK linkage, CPPMANGLE cppmangle, Prot protection, int explicitProtection, AlignDeclaration aligndecl, PINLINE inlining);</source>
          <target state="translated">&amp;Aacute;mbito est&amp;aacute;tico * &lt;strong id=&quot;createNewScope&quot;&gt;createNewScope&lt;/strong&gt; (Scope * sc, StorageClass stc, LINK linkage, CPPMANGLE cppmangle, Prot protection, int explicitProtection, AlignDeclaration aligndecl, PINLINE inlining);</target>
        </trans-unit>
        <trans-unit id="ff923451035f427cedb3b3c52f5cbc1e49b52b4c" translate="yes" xml:space="preserve">
          <source>static Statements* &lt;strong id=&quot;arraySyntaxCopy&quot;&gt;arraySyntaxCopy&lt;/strong&gt;(Statements* a);</source>
          <target state="translated">declaraciones est&amp;aacute;ticas * &lt;strong id=&quot;arraySyntaxCopy&quot;&gt;arraySyntaxCopy&lt;/strong&gt; (declaraciones * a);</target>
        </trans-unit>
        <trans-unit id="9876183578d43cb9709b8756e8f18c5e1636abf8" translate="yes" xml:space="preserve">
          <source>static Thread &lt;strong id=&quot;thread_findByAddr&quot;&gt;thread_findByAddr&lt;/strong&gt;(ThreadID addr);</source>
          <target state="translated">hilo est&amp;aacute;tico &lt;strong id=&quot;thread_findByAddr&quot;&gt;thread_findByAddr&lt;/strong&gt; (ThreadID addr);</target>
        </trans-unit>
        <trans-unit id="ee904fbad9f153c5cfffcf44f59edf51a8d632d6" translate="yes" xml:space="preserve">
          <source>static Thread[] &lt;strong id=&quot;getAll&quot;&gt;getAll&lt;/strong&gt;();</source>
          <target state="translated">Hilo est&amp;aacute;tico [] &lt;strong id=&quot;getAll&quot;&gt;getAll&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="2772a300a48964970aef7f5869d1483c50fb9518" translate="yes" xml:space="preserve">
          <source>static array containing the size of each dimension</source>
          <target state="translated">un conjunto estático que contiene el tamaño de cada dimensión</target>
        </trans-unit>
        <trans-unit id="7628018dc3b246ed6ee8a0092037f12df8dd0021" translate="yes" xml:space="preserve">
          <source>static array from CT range</source>
          <target state="translated">matriz estática del rango de la TC</target>
        </trans-unit>
        <trans-unit id="0a2f9651d9b9c1622b38145ddff104cfd5a5f068" translate="yes" xml:space="preserve">
          <source>static array from array literal</source>
          <target state="translated">estática de la matriz literal de la matriz</target>
        </trans-unit>
        <trans-unit id="f79dee024fa29a4e7c1415d5849b1e9c39980d6f" translate="yes" xml:space="preserve">
          <source>static array from range + size</source>
          <target state="translated">un conjunto estático de rango+tamaño</target>
        </trans-unit>
        <trans-unit id="74cbf6fca24638f80c2829d6d4e0a3d1d04abd2c" translate="yes" xml:space="preserve">
          <source>static assert (!is(typeof(i))); // loop index variable is not visible outside of the static foreach loop</source>
          <target state="translated">afirmación estática (!es(tipo de(i)));//la variable de índice de bucle no es visible fuera del bucle estático de foreach</target>
        </trans-unit>
        <trans-unit id="4816b9578cf0cb467be6224e6798f910f18ac33e" translate="yes" xml:space="preserve">
          <source>static auto &lt;strong id=&quot;byFileLine&quot;&gt;byFileLine&lt;/strong&gt;();</source>
          <target state="translated">static auto &lt;strong id=&quot;byFileLine&quot;&gt;byFileLine&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="2a737f67936b6c9da35b0196b7fd17f0ce66ed20" translate="yes" xml:space="preserve">
          <source>static bool &lt;strong id=&quot;compFront&quot;&gt;compFront&lt;/strong&gt;(.ElementType!RangeOfRanges a, .ElementType!RangeOfRanges b);</source>
          <target state="translated">static bool &lt;strong id=&quot;compFront&quot;&gt;compFront&lt;/strong&gt; (.ElementType! RangeOfRanges a, .ElementType! RangeOfRanges b);</target>
        </trans-unit>
        <trans-unit id="5f43cff12b8e292b161da2ab7839b7f16ce3076c" translate="yes" xml:space="preserve">
          <source>static bool &lt;strong id=&quot;iequals&quot;&gt;iequals&lt;/strong&gt;(const(char)[] s1, const(char)[] s2);</source>
          <target state="translated">static bool &lt;strong id=&quot;iequals&quot;&gt;iequals&lt;/strong&gt; (const (char) [] s1, const (char) [] s2);</target>
        </trans-unit>
        <trans-unit id="e83675f2abbb73f1d03e8c53405351716e777430" translate="yes" xml:space="preserve">
          <source>static bool &lt;strong id=&quot;initialize&quot;&gt;initialize&lt;/strong&gt;();</source>
          <target state="translated">static bool &lt;strong id=&quot;initialize&quot;&gt;initialize&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="e4432fac06ef13604a02fae1f6d408a19409ef8d" translate="yes" xml:space="preserve">
          <source>static bool &lt;strong id=&quot;needsFensure&quot;&gt;needsFensure&lt;/strong&gt;(FuncDeclaration fd);</source>
          <target state="translated">static bool &lt;strong id=&quot;needsFensure&quot;&gt;needsFensure&lt;/strong&gt; (FuncDeclaration fd);</target>
        </trans-unit>
        <trans-unit id="3ef3e6b2c2e59448313e2dc827b934184c1579d1" translate="yes" xml:space="preserve">
          <source>static bool &lt;strong id=&quot;onImport&quot;&gt;onImport&lt;/strong&gt;(Module m);</source>
          <target state="translated">bool est&amp;aacute;tico &lt;strong id=&quot;onImport&quot;&gt;onImport&lt;/strong&gt; (M&amp;oacute;dulo m);</target>
        </trans-unit>
        <trans-unit id="d20ac6394f08ea3d0c5c69a3a8d43018a34212cc" translate="yes" xml:space="preserve">
          <source>static bool &lt;strong id=&quot;oneMembers&quot;&gt;oneMembers&lt;/strong&gt;(Dsymbols* members, Dsymbol* ps, Identifier ident);</source>
          <target state="translated">static bool &lt;strong id=&quot;oneMembers&quot;&gt;oneMembers&lt;/strong&gt; (Dsymbols * members, Dsymbol * ps, Identifier ident);</target>
        </trans-unit>
        <trans-unit id="b48047fce5411693aab3dda5173fbc6b23d1451f" translate="yes" xml:space="preserve">
          <source>static bool &lt;strong id=&quot;semanticTiargs&quot;&gt;semanticTiargs&lt;/strong&gt;(ref const Loc loc, Scope* sc, Objects* tiargs, int flags);</source>
          <target state="translated">static bool &lt;strong id=&quot;semanticTiargs&quot;&gt;semanticTiargs&lt;/strong&gt; (ref const Loc loc, Scope * sc, Objects * tiargs, int flags);</target>
        </trans-unit>
        <trans-unit id="c68a62aa29315a69208565176dbc0b3c418cd7bc" translate="yes" xml:space="preserve">
          <source>static bool &lt;strong id=&quot;terminate&quot;&gt;terminate&lt;/strong&gt;();</source>
          <target state="translated">bool est&amp;aacute;tico &lt;strong id=&quot;terminate&quot;&gt;terminar&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="1dbca98d4fc1fead0f6f691e5325c61dfb8c53e0" translate="yes" xml:space="preserve">
          <source>static const(TypeInfo_Class) &lt;strong id=&quot;find&quot;&gt;find&lt;/strong&gt;(scope const char[] classname);</source>
          <target state="translated">static const (TypeInfo_Class) &lt;strong id=&quot;find&quot;&gt;find&lt;/strong&gt; (alcance const char [] classname);</target>
        </trans-unit>
        <trans-unit id="5b477e05365c4d22add26b98fbd255ee0eaf07b1" translate="yes" xml:space="preserve">
          <source>static fields</source>
          <target state="translated">campos estáticos</target>
        </trans-unit>
        <trans-unit id="bed5ab3a0941f7b30a5b2fffaf5cada017a70f48" translate="yes" xml:space="preserve">
          <source>static foreach (i; 0 .. 10) // loop variables for different indices do not conflict. { // this body is expanded into 10 ForwardingAttribDeclarations, where &lt;code&gt;i&lt;/code&gt; has storage class STC.local mixin(&quot;enum x&quot; ~ to!string(i) ~ &quot; = i&quot;); // ok, can access current loop variable }</source>
          <target state="translated">foreach est&amp;aacute;tico (i; 0 .. 10) // las variables de bucle para diferentes &amp;iacute;ndices no entran en conflicto. {// este cuerpo se expande en 10 ForwardingAttribDeclarations, donde &lt;code&gt;i&lt;/code&gt; tiene clase de almacenamiento STC.local mixin ( &quot;enumeraci&amp;oacute;n x&quot; ~ de cadena (i) ~ &quot;= i&quot;!); // ok, puede acceder a la variable de bucle actual}</target>
        </trans-unit>
        <trans-unit id="4561788b508da38b3e9ff980b4e449cc2ab50fab" translate="yes" xml:space="preserve">
          <source>static foreach (i; 0.. 10) { pragma(msg, mixin(&quot;x&quot; ~ to!string(i))); // ok, all 10 symbols are visible as they were forwarded to the global scope }</source>
          <target state="translated">static foreach (i;0..10){pragma(msg,mixin(&quot;x&quot; ~ to!string(i)));//ok,los 10 símbolos son visibles como fueron enviados al global scope }</target>
        </trans-unit>
        <trans-unit id="914c536c1caf59150cbb079325dbd94aad2d86a6" translate="yes" xml:space="preserve">
          <source>static foreach(i; 0 .. 10) scope(exit) writeln(i); writeln(&quot;this is printed first&quot;); // then, it prints 10, 9, 8, 7, ...</source>
          <target state="translated">estática foreach(i;0 ..10)scope(exit)writeln(i);writeln(&quot;esto se imprime primero&quot;);//luego,imprime 10,9,8,7,...</target>
        </trans-unit>
        <trans-unit id="70cc00dfbe8ed937120e2952723f80c798c3ed51" translate="yes" xml:space="preserve">
          <source>static immutable Feature[] &lt;strong id=&quot;previews&quot;&gt;previews&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;previews&quot;&gt;previsualizaciones de la&lt;/strong&gt; caracter&amp;iacute;stica inmutable est&amp;aacute;tica [] ;</target>
        </trans-unit>
        <trans-unit id="d7611d86d8621c70ae40a25660ea11640ae4a668" translate="yes" xml:space="preserve">
          <source>static immutable Feature[] &lt;strong id=&quot;reverts&quot;&gt;reverts&lt;/strong&gt;;</source>
          <target state="translated">La caracter&amp;iacute;stica inmutable est&amp;aacute;tica [] &lt;strong id=&quot;reverts&quot;&gt;revierte&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8ec1d8f2ed04b2aea8f4bbe61ff50fb23007f455" translate="yes" xml:space="preserve">
          <source>static immutable Feature[] &lt;strong id=&quot;transitions&quot;&gt;transitions&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;transitions&quot;&gt;transiciones de&lt;/strong&gt; caracter&amp;iacute;stica inmutable est&amp;aacute;tica [] ;</target>
        </trans-unit>
        <trans-unit id="687e4987ea08a529511e3c5ed8834b9d8952cf69" translate="yes" xml:space="preserve">
          <source>static immutable Option[] &lt;strong id=&quot;options&quot;&gt;options&lt;/strong&gt;;</source>
          <target state="translated">Opci&amp;oacute;n inmutable est&amp;aacute;tica [] &lt;strong id=&quot;options&quot;&gt;opciones&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0df983a4755779f570836bd98bfbc9b975a30c8b" translate="yes" xml:space="preserve">
          <source>static immutable TickDuration &lt;strong id=&quot;appOrigin&quot;&gt;appOrigin&lt;/strong&gt;;</source>
          <target state="translated">aplicaci&amp;oacute;n inm&amp;oacute;vil est&amp;aacute;tica &lt;strong id=&quot;appOrigin&quot;&gt;TickDurationOrigin&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="39358118819c2a7ce68ca20091f49deda7cc9a71" translate="yes" xml:space="preserve">
          <source>static immutable long &lt;strong id=&quot;ticksPerSec&quot;&gt;ticksPerSec&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;ticksPerSec&quot;&gt;tics&lt;/strong&gt; largos inmutables est&amp;aacute;ticosPerSec ;</target>
        </trans-unit>
        <trans-unit id="de678d32490ee0eff472ba3aedf4f36b6fd04d49" translate="yes" xml:space="preserve">
          <source>static import requires use of a fully qualified name to reference the module's names:</source>
          <target state="translated">La importación estática requiere el uso de un nombre completamente calificado para referirse a los nombres del módulo:</target>
        </trans-unit>
        <trans-unit id="1f62a1b0de2d2a241fde3dcf8aa4e4b93614d9b1" translate="yes" xml:space="preserve">
          <source>static initializers of struct/class members</source>
          <target state="translated">inicializadores estáticos de miembros de la estructura/clase</target>
        </trans-unit>
        <trans-unit id="1e3164d6f893fe29bdf5c00623717f4f69d75d29" translate="yes" xml:space="preserve">
          <source>static int &lt;strong id=&quot;_foreach&quot;&gt;_foreach&lt;/strong&gt;(Parameters* parameters, scope ForeachDg dg, size_t* pn = null);</source>
          <target state="translated">static int &lt;strong id=&quot;_foreach&quot;&gt;_foreach&lt;/strong&gt; (Par&amp;aacute;metros * par&amp;aacute;metros, alcance ForeachDg dg, size_t * pn = null);</target>
        </trans-unit>
        <trans-unit id="e865f6ac16ea144fbb29c8825ba0d38215bd4279" translate="yes" xml:space="preserve">
          <source>static int &lt;strong id=&quot;_foreach&quot;&gt;_foreach&lt;/strong&gt;(Scope* sc, Dsymbols* members, scope ForeachDg dg, size_t* pn = null);</source>
          <target state="translated">static int &lt;strong id=&quot;_foreach&quot;&gt;_foreach&lt;/strong&gt; (Scope * sc, Dsymbols * members, scope ForeachDg dg, size_t * pn = null);</target>
        </trans-unit>
        <trans-unit id="8ae05c9a09763891dcd6d1fb64d948840624f657" translate="yes" xml:space="preserve">
          <source>static int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt;(scope int delegate(ref Thread) dg);</source>
          <target state="translated">static int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt; (&amp;aacute;mbito int delegado (ref Thread) dg);</target>
        </trans-unit>
        <trans-unit id="05008dcec3a92ad119e4b6a7eb8af8659d8cd633" translate="yes" xml:space="preserve">
          <source>static member functions</source>
          <target state="translated">funciones del miembro estático</target>
        </trans-unit>
        <trans-unit id="7f67a12d2b6c927cfe968b48c7ad07ae20c565db" translate="yes" xml:space="preserve">
          <source>static nothrow @nogc @property @trusted MonoTimeImpl &lt;strong id=&quot;currTime&quot;&gt;currTime&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico @nogc @property @trusted MonoTimeImpl &lt;strong id=&quot;currTime&quot;&gt;currTime&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="cef0fa2217059fdfb02abadd52eef8595c7182e5" translate="yes" xml:space="preserve">
          <source>static nothrow @nogc @property @trusted TickDuration &lt;strong id=&quot;currSystemTick&quot;&gt;currSystemTick&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico @nogc @property @trusted TickDuration &lt;strong id=&quot;currSystemTick&quot;&gt;currSystemTick&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="db405110fb072172ff174fb4bea251cbaf10757c" translate="yes" xml:space="preserve">
          <source>static nothrow @nogc @safe Fiber &lt;strong id=&quot;getThis&quot;&gt;getThis&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico @nogc @safe Fiber &lt;strong id=&quot;getThis&quot;&gt;getThis&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="17f40ff70ab308e12915eed68d81cc11fc8e7021" translate="yes" xml:space="preserve">
          <source>static nothrow @nogc @safe ProfileStats &lt;strong id=&quot;profileStats&quot;&gt;profileStats&lt;/strong&gt;();</source>
          <target state="translated">est&amp;aacute;tica nothrow @nogc @safe ProfileStats &lt;strong id=&quot;profileStats&quot;&gt;profileStats&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="5ed47a248e97b967d30fec62702fa7bc33cefc05" translate="yes" xml:space="preserve">
          <source>static nothrow @nogc @safe Thread &lt;strong id=&quot;getThis&quot;&gt;getThis&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico @nogc @safe Hilo &lt;strong id=&quot;getThis&quot;&gt;getThis&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="e6fb5bf78f86ceea661576b65c90a6fe1930131a" translate="yes" xml:space="preserve">
          <source>static nothrow @nogc @safe bool &lt;strong id=&quot;inFinalizer&quot;&gt;inFinalizer&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3139cbaaeb90d2b0c41fe7bafbca3475093da6f6" translate="yes" xml:space="preserve">
          <source>static nothrow @nogc @trusted void &lt;strong id=&quot;remove&quot;&gt;remove&lt;/strong&gt;(scope const(char)[] name);</source>
          <target state="translated">nothrow est&amp;aacute;tico @nogc @trusted void &lt;strong id=&quot;remove&quot;&gt;remove&lt;/strong&gt; (scope const (char) [] name);</target>
        </trans-unit>
        <trans-unit id="65c08ddef0217988eeb232d015ff53342b247062" translate="yes" xml:space="preserve">
          <source>static nothrow @nogc inout(void)* &lt;strong id=&quot;addrOf&quot;&gt;addrOf&lt;/strong&gt;(inout(void)* p);</source>
          <target state="translated">nothrow est&amp;aacute;tico @nogc inout (void) * &lt;strong id=&quot;addrOf&quot;&gt;addrOf&lt;/strong&gt; (inout (void) * p);</target>
        </trans-unit>
        <trans-unit id="d7249b7131c27c6948ca9be896b23f7ad2b5bfa4" translate="yes" xml:space="preserve">
          <source>static nothrow @nogc size_t &lt;strong id=&quot;sizeOf&quot;&gt;sizeOf&lt;/strong&gt;(scope const void* p);</source>
          <target state="translated">nothrow est&amp;aacute;tico @nogc size_t &lt;strong id=&quot;sizeOf&quot;&gt;sizeOf&lt;/strong&gt; (scope const void * p);</target>
        </trans-unit>
        <trans-unit id="9722d77e530d21a48afedb7c03f114018359ce3d" translate="yes" xml:space="preserve">
          <source>static nothrow @nogc void &lt;strong id=&quot;addRange&quot;&gt;addRange&lt;/strong&gt;(const void* p, size_t sz, const TypeInfo ti = null);</source>
          <target state="translated">nothrow est&amp;aacute;tico @nogc void &lt;strong id=&quot;addRange&quot;&gt;addRange&lt;/strong&gt; (const void * p, size_t sz, const TypeInfo ti = null);</target>
        </trans-unit>
        <trans-unit id="79295da1ca982e778a05d8a1c48538748d5e8e1d" translate="yes" xml:space="preserve">
          <source>static nothrow @nogc void &lt;strong id=&quot;addRoot&quot;&gt;addRoot&lt;/strong&gt;(const void* p);</source>
          <target state="translated">nothrow est&amp;aacute;tico @nogc void &lt;strong id=&quot;addRoot&quot;&gt;addRoot&lt;/strong&gt; (const void * p);</target>
        </trans-unit>
        <trans-unit id="483e435b40c6561796d51a638fe8df60362c0255" translate="yes" xml:space="preserve">
          <source>static nothrow @nogc void &lt;strong id=&quot;removeRange&quot;&gt;removeRange&lt;/strong&gt;(const void* p);</source>
          <target state="translated">nothrow est&amp;aacute;tico @nogc void &lt;strong id=&quot;removeRange&quot;&gt;removeRange&lt;/strong&gt; (const void * p);</target>
        </trans-unit>
        <trans-unit id="e3e3de0396990754829de977591ee5f9da06c24c" translate="yes" xml:space="preserve">
          <source>static nothrow @nogc void &lt;strong id=&quot;removeRoot&quot;&gt;removeRoot&lt;/strong&gt;(const void* p);</source>
          <target state="translated">nothrow est&amp;aacute;tico @nogc void &lt;strong id=&quot;removeRoot&quot;&gt;removeRoot&lt;/strong&gt; (const void * p);</target>
        </trans-unit>
        <trans-unit id="9a2e4864e146948bbe04653b19808b876d4cd4c7" translate="yes" xml:space="preserve">
          <source>static nothrow @nogc void &lt;strong id=&quot;sleep&quot;&gt;sleep&lt;/strong&gt;(Duration val);</source>
          <target state="translated">nothrow est&amp;aacute;tico @nogc void &lt;strong id=&quot;sleep&quot;&gt;sleep&lt;/strong&gt; (Duraci&amp;oacute;n val);</target>
        </trans-unit>
        <trans-unit id="4ec95530bde894fcf2ca2f481da5177af1d48463" translate="yes" xml:space="preserve">
          <source>static nothrow @nogc void &lt;strong id=&quot;yield&quot;&gt;yield&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico @nogc &lt;strong id=&quot;yield&quot;&gt;rendimiento&lt;/strong&gt; nulo ();</target>
        </trans-unit>
        <trans-unit id="3d7b69550a3bbc963a974649dba33fa3d217478f" translate="yes" xml:space="preserve">
          <source>static nothrow @nogc void &lt;strong id=&quot;yieldAndThrow&quot;&gt;yieldAndThrow&lt;/strong&gt;(Throwable t);</source>
          <target state="translated">nothrow est&amp;aacute;tico @nogc void &lt;strong id=&quot;yieldAndThrow&quot;&gt;yieldAndThrow&lt;/strong&gt; ( &lt;strong id=&quot;yieldAndThrow&quot;&gt;Throwable&lt;/strong&gt; t);</target>
        </trans-unit>
        <trans-unit id="bf3e55233673ad92449acf9b1f337baf807d5490" translate="yes" xml:space="preserve">
          <source>static nothrow @property ref auto &lt;strong id=&quot;thisInfo&quot;&gt;thisInfo&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico @property ref auto &lt;strong id=&quot;thisInfo&quot;&gt;thisInfo&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="e7fc0677b2d847c19e10bc9935dec7306a1b1448" translate="yes" xml:space="preserve">
          <source>static nothrow @trusted string &lt;strong id=&quot;addrToString&quot;&gt;addrToString&lt;/strong&gt;(uint addr);</source>
          <target state="translated">nothrow est&amp;aacute;tico @trusted string &lt;strong id=&quot;addrToString&quot;&gt;addrToString&lt;/strong&gt; (uint addr);</target>
        </trans-unit>
        <trans-unit id="e61baf458d81fcf982bfd14df7681553846a2090" translate="yes" xml:space="preserve">
          <source>static nothrow @trusted uint &lt;strong id=&quot;parse&quot;&gt;parse&lt;/strong&gt;(scope const(char)[] addr);</source>
          <target state="translated">nothrow est&amp;aacute;tico @trusted uint &lt;strong id=&quot;parse&quot;&gt;parse&lt;/strong&gt; (alcance const (char) [] addr);</target>
        </trans-unit>
        <trans-unit id="4e3e24b60b5ba9620cf40d145c2ac331fa4cb43e" translate="yes" xml:space="preserve">
          <source>static nothrow BlkInfo &lt;strong id=&quot;query&quot;&gt;query&lt;/strong&gt;(scope const void* p);</source>
          <target state="translated">&lt;strong id=&quot;query&quot;&gt;consulta&lt;/strong&gt; BlkInfo de nothrow est&amp;aacute;tica (alcance const void * p);</target>
        </trans-unit>
        <trans-unit id="5c58143b983923070e2440b4c80992442f500d52" translate="yes" xml:space="preserve">
          <source>static nothrow Identifier &lt;strong id=&quot;anonymous&quot;&gt;anonymous&lt;/strong&gt;();</source>
          <target state="translated">Identificador de nothrow est&amp;aacute;tico &lt;strong id=&quot;anonymous&quot;&gt;an&amp;oacute;nimo&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="c5202a5d8076536ad380e8cfb6db6a9d3be5a2de" translate="yes" xml:space="preserve">
          <source>static nothrow Identifier &lt;strong id=&quot;generateIdWithLoc&quot;&gt;generateIdWithLoc&lt;/strong&gt;(string prefix, ref const Loc loc);</source>
          <target state="translated">Identificador de nothrow est&amp;aacute;tico &lt;strong id=&quot;generateIdWithLoc&quot;&gt;generateIdWithLoc&lt;/strong&gt; (prefijo de cadena, ref const Loc loc);</target>
        </trans-unit>
        <trans-unit id="5fb58a710dd5ca13bf0cac855c60ec46faee998d" translate="yes" xml:space="preserve">
          <source>static nothrow Identifier &lt;strong id=&quot;idPool&quot;&gt;idPool&lt;/strong&gt;(const(char)* s, uint len);</source>
          <target state="translated">Identificador de &lt;strong id=&quot;idPool&quot;&gt;nothrow&lt;/strong&gt; est&amp;aacute;tico idPool (const (char) * s, uint len);</target>
        </trans-unit>
        <trans-unit id="0941d1abbb32b1ea0938327e22dbbe5b24b5c4e0" translate="yes" xml:space="preserve">
          <source>static nothrow ReadResult &lt;strong id=&quot;read&quot;&gt;read&lt;/strong&gt;(const(char)* name);</source>
          <target state="translated">lectura de &lt;strong id=&quot;read&quot;&gt;lectura de&lt;/strong&gt; resultado est&amp;aacute;tico de nothrow (const (char) * name);</target>
        </trans-unit>
        <trans-unit id="79bd006953ffa1e6421a01ff6416b44d0424fdee" translate="yes" xml:space="preserve">
          <source>static nothrow Stats &lt;strong id=&quot;stats&quot;&gt;stats&lt;/strong&gt;();</source>
          <target state="translated">estad&amp;iacute;sticas &lt;strong id=&quot;stats&quot;&gt;estad&amp;iacute;sticas de&lt;/strong&gt; nothrow est&amp;aacute;tico ();</target>
        </trans-unit>
        <trans-unit id="af0dd5139d9139fae3392e2893524f5b8c017f9c" translate="yes" xml:space="preserve">
          <source>static nothrow bool &lt;strong id=&quot;ensurePathExists&quot;&gt;ensurePathExists&lt;/strong&gt;(const(char)* path);</source>
          <target state="translated">static nothrow bool &lt;strong id=&quot;ensurePathExists&quot;&gt;surePathExists&lt;/strong&gt; (const (char) * ruta);</target>
        </trans-unit>
        <trans-unit id="7addcd5abbad64b38f5e8b476c77bfe68d547bd5" translate="yes" xml:space="preserve">
          <source>static nothrow bool &lt;strong id=&quot;ensurePathExists&quot;&gt;ensurePathExists&lt;/strong&gt;(const(char)[] path);</source>
          <target state="translated">static nothrow bool &lt;strong id=&quot;ensurePathExists&quot;&gt;surePathExists&lt;/strong&gt; ( &lt;strong id=&quot;ensurePathExists&quot;&gt;ruta&lt;/strong&gt; const (char) []);</target>
        </trans-unit>
        <trans-unit id="1d06c0b28cdc4de7b10cb4b9ea8147606f1ea334" translate="yes" xml:space="preserve">
          <source>static nothrow bool &lt;strong id=&quot;isValidIdentifier&quot;&gt;isValidIdentifier&lt;/strong&gt;(const(char)* str);</source>
          <target state="translated">bool est&amp;aacute;tico de nothrow &lt;strong id=&quot;isValidIdentifier&quot;&gt;isValidIdentifier&lt;/strong&gt; (const (char) * str);</target>
        </trans-unit>
        <trans-unit id="dca089bd118340409e41358d7894320bc167c738" translate="yes" xml:space="preserve">
          <source>static nothrow bool &lt;strong id=&quot;isValidIdentifier&quot;&gt;isValidIdentifier&lt;/strong&gt;(const(char)[] str);</source>
          <target state="translated">bool est&amp;aacute;tico de nothrow &lt;strong id=&quot;isValidIdentifier&quot;&gt;isValidIdentifier&lt;/strong&gt; (const (char) [] str);</target>
        </trans-unit>
        <trans-unit id="efab4266590b4dab440e998232337dedb6d3d1c6" translate="yes" xml:space="preserve">
          <source>static nothrow bool &lt;strong id=&quot;write&quot;&gt;write&lt;/strong&gt;(const(char)* name, const void[] data);</source>
          <target state="translated">est&amp;aacute;tica nothrow bool &lt;strong id=&quot;write&quot;&gt;escritura&lt;/strong&gt; (const (char) * nombre, const void [] de datos);</target>
        </trans-unit>
        <trans-unit id="0556b91be0cd8c4d2a2b5bf1f71413976fbd4384" translate="yes" xml:space="preserve">
          <source>static nothrow bool &lt;strong id=&quot;write&quot;&gt;write&lt;/strong&gt;(const(char)* name, const(void)* data, size_t size);</source>
          <target state="translated">est&amp;aacute;tica nothrow bool &lt;strong id=&quot;write&quot;&gt;escritura&lt;/strong&gt; (const (char) * nombre, const (void) * de datos, el tama&amp;ntilde;o size_t);</target>
        </trans-unit>
        <trans-unit id="d2991c9fce50f04a56a1ee9ff16511222eaa6e95" translate="yes" xml:space="preserve">
          <source>static nothrow bool &lt;strong id=&quot;write&quot;&gt;write&lt;/strong&gt;(const(char)[] name, const void[] data);</source>
          <target state="translated">est&amp;aacute;tica nothrow bool &lt;strong id=&quot;write&quot;&gt;escritura&lt;/strong&gt; (const (char) [] nombre, nula [] datos const);</target>
        </trans-unit>
        <trans-unit id="27903470ce89e8794a7ce299937b1f7181726f69" translate="yes" xml:space="preserve">
          <source>static nothrow const(char)* &lt;strong id=&quot;canonicalName&quot;&gt;canonicalName&lt;/strong&gt;(const(char)* name);</source>
          <target state="translated">nothrow est&amp;aacute;tico const (char) * &lt;strong id=&quot;canonicalName&quot;&gt;canonicalName&lt;/strong&gt; (const (char) * name);</target>
        </trans-unit>
        <trans-unit id="49d46e1385be76254a5fd4e18bae53feba495013" translate="yes" xml:space="preserve">
          <source>static nothrow const(char)* &lt;strong id=&quot;combine&quot;&gt;combine&lt;/strong&gt;(const(char)* path, const(char)* name);</source>
          <target state="translated">notst est&amp;aacute;tico const (char) * &lt;strong id=&quot;combine&quot;&gt;combine&lt;/strong&gt; (const (char) * ruta, const (char) * nombre);</target>
        </trans-unit>
        <trans-unit id="1974f3500a0ecbfd53a405065505abbe227b8a99" translate="yes" xml:space="preserve">
          <source>static nothrow const(char)* &lt;strong id=&quot;defaultExt&quot;&gt;defaultExt&lt;/strong&gt;(const(char)* name, const(char)* ext);</source>
          <target state="translated">notthrow est&amp;aacute;tico const (char) * &lt;strong id=&quot;defaultExt&quot;&gt;defaultExt&lt;/strong&gt; (const (char) * nombre, const (char) * ext);</target>
        </trans-unit>
        <trans-unit id="ba5c554cb9327af3818dbab4cf3844619a835086" translate="yes" xml:space="preserve">
          <source>static nothrow const(char)* &lt;strong id=&quot;forceExt&quot;&gt;forceExt&lt;/strong&gt;(const(char)* name, const(char)* ext);</source>
          <target state="translated">notthrow est&amp;aacute;tico const (char) * &lt;strong id=&quot;forceExt&quot;&gt;forceExt&lt;/strong&gt; (const (char) * nombre, const (char) * ext);</target>
        </trans-unit>
        <trans-unit id="c861fbba50e5eb25c05e4a44a6411725bddc904e" translate="yes" xml:space="preserve">
          <source>static nothrow const(char)* &lt;strong id=&quot;path&quot;&gt;path&lt;/strong&gt;(const(char)* str);</source>
          <target state="translated">nothrow est&amp;aacute;tico const (char) * &lt;strong id=&quot;path&quot;&gt;ruta&lt;/strong&gt; (const (char) * str);</target>
        </trans-unit>
        <trans-unit id="528981785df36827effa569dc3a8f8d368d27b8b" translate="yes" xml:space="preserve">
          <source>static nothrow const(char)* &lt;strong id=&quot;removeExt&quot;&gt;removeExt&lt;/strong&gt;(const(char)* str);</source>
          <target state="translated">notthrow est&amp;aacute;tico const (char) * &lt;strong id=&quot;removeExt&quot;&gt;removeExt&lt;/strong&gt; (const (char) * str);</target>
        </trans-unit>
        <trans-unit id="a4acde11204e1fa83fa4746380e66e00e92a35da" translate="yes" xml:space="preserve">
          <source>static nothrow const(char)* &lt;strong id=&quot;safeSearchPath&quot;&gt;safeSearchPath&lt;/strong&gt;(Strings* path, const(char)* name);</source>
          <target state="translated">notthrow est&amp;aacute;tico const (char) * &lt;strong id=&quot;safeSearchPath&quot;&gt;safeSearchPath&lt;/strong&gt; (Strings * ruta, const (char) * nombre);</target>
        </trans-unit>
        <trans-unit id="502c6b774f7ba8c39e41a8af2ab5b175ffbd074e" translate="yes" xml:space="preserve">
          <source>static nothrow const(char)* &lt;strong id=&quot;searchPath&quot;&gt;searchPath&lt;/strong&gt;(Strings* path, const(char)* name, bool cwd);</source>
          <target state="translated">notthrow est&amp;aacute;tico const (char) * &lt;strong id=&quot;searchPath&quot;&gt;searchPath&lt;/strong&gt; (Strings * ruta, const (char) * name, bool cwd);</target>
        </trans-unit>
        <trans-unit id="40b217e03f262c5071cd0b063387fd1bdf47cafc" translate="yes" xml:space="preserve">
          <source>static nothrow const(char)* &lt;strong id=&quot;toAbsolute&quot;&gt;toAbsolute&lt;/strong&gt;(const(char)* name, const(char)* base = null);</source>
          <target state="translated">notst est&amp;aacute;tico const (char) * &lt;strong id=&quot;toAbsolute&quot;&gt;toAbsolute&lt;/strong&gt; (const (char) * nombre, const (char) * base = nulo);</target>
        </trans-unit>
        <trans-unit id="310d3a1c205913149d62576807d4e16d29484330" translate="yes" xml:space="preserve">
          <source>static nothrow const(char)[] &lt;strong id=&quot;canonicalName&quot;&gt;canonicalName&lt;/strong&gt;(const(char)[] name);</source>
          <target state="translated">notthrow est&amp;aacute;tico const (char) [] &lt;strong id=&quot;canonicalName&quot;&gt;canonicalName&lt;/strong&gt; (const (char) [] name);</target>
        </trans-unit>
        <trans-unit id="87f606cd5c37b42d7a1e95644a5fd3b7487c1903" translate="yes" xml:space="preserve">
          <source>static nothrow const(char)[] &lt;strong id=&quot;combine&quot;&gt;combine&lt;/strong&gt;(const(char)[] path, const(char)[] name);</source>
          <target state="translated">notthrow est&amp;aacute;tico const (char) [] &lt;strong id=&quot;combine&quot;&gt;combine&lt;/strong&gt; (const (char) [] ruta, const (char) [] nombre);</target>
        </trans-unit>
        <trans-unit id="fa3932a3c2ca56b39f3843f54acddba676e74f5d" translate="yes" xml:space="preserve">
          <source>static nothrow const(char)[] &lt;strong id=&quot;defaultExt&quot;&gt;defaultExt&lt;/strong&gt;(const(char)[] name, const(char)[] ext);</source>
          <target state="translated">notthrow est&amp;aacute;tico const (char) [] &lt;strong id=&quot;defaultExt&quot;&gt;defaultExt&lt;/strong&gt; (const (char) [] nombre, const (char) [] ext);</target>
        </trans-unit>
        <trans-unit id="d63a6c817add55d3efd90d108fbdcc8383669ad3" translate="yes" xml:space="preserve">
          <source>static nothrow const(char)[] &lt;strong id=&quot;forceExt&quot;&gt;forceExt&lt;/strong&gt;(const(char)[] name, const(char)[] ext);</source>
          <target state="translated">notthrow est&amp;aacute;tico const (char) [] &lt;strong id=&quot;forceExt&quot;&gt;forceExt&lt;/strong&gt; (const (char) [] nombre, const (char) [] ext);</target>
        </trans-unit>
        <trans-unit id="1b6148359baebcec294558c245a66e3a2e122714" translate="yes" xml:space="preserve">
          <source>static nothrow const(char)[] &lt;strong id=&quot;path&quot;&gt;path&lt;/strong&gt;(const(char)[] str);</source>
          <target state="translated">const nothrow est&amp;aacute;tica (char) [] &lt;strong id=&quot;path&quot;&gt;camino&lt;/strong&gt; (const (char) [] str);</target>
        </trans-unit>
        <trans-unit id="7128d5345d78ea6b1f47679cff90e8ded983c411" translate="yes" xml:space="preserve">
          <source>static nothrow const(char)[] &lt;strong id=&quot;removeExt&quot;&gt;removeExt&lt;/strong&gt;(const(char)[] str);</source>
          <target state="translated">notthrow est&amp;aacute;tico const (char) [] &lt;strong id=&quot;removeExt&quot;&gt;removeExt&lt;/strong&gt; (const (char) [] str);</target>
        </trans-unit>
        <trans-unit id="c8abb707f20722af4e1e3f20fd09907b6b7563e8" translate="yes" xml:space="preserve">
          <source>static nothrow const(char)[] &lt;strong id=&quot;replaceName&quot;&gt;replaceName&lt;/strong&gt;(const(char)[] path, const(char)[] name);</source>
          <target state="translated">nothrow est&amp;aacute;tico const (char) [] &lt;strong id=&quot;replaceName&quot;&gt;replaceName&lt;/strong&gt; (const (char) [] ruta, const (char) [] nombre);</target>
        </trans-unit>
        <trans-unit id="25560867ee362fc124e12583695b09446cfe32ce" translate="yes" xml:space="preserve">
          <source>static nothrow int &lt;strong id=&quot;exists&quot;&gt;exists&lt;/strong&gt;(const(char)* name);</source>
          <target state="translated">&lt;strong id=&quot;exists&quot;&gt;existe&lt;/strong&gt; nothrow est&amp;aacute;tico int (const (char) * name);</target>
        </trans-unit>
        <trans-unit id="afa87e8bc1ff9ef63d9c83add93542b8559dbd26" translate="yes" xml:space="preserve">
          <source>static nothrow int &lt;strong id=&quot;exists&quot;&gt;exists&lt;/strong&gt;(const(char)[] name);</source>
          <target state="translated">&lt;strong id=&quot;exists&quot;&gt;existe&lt;/strong&gt; nothrow est&amp;aacute;tico int (const (char) [] nombre);</target>
        </trans-unit>
        <trans-unit id="58d59b7ccc2f271c4e63b70c4e79cb3f7a9648d5" translate="yes" xml:space="preserve">
          <source>static nothrow size_t &lt;strong id=&quot;reserve&quot;&gt;reserve&lt;/strong&gt;(size_t sz);</source>
          <target state="translated">nothrow est&amp;aacute;tico size_t &lt;strong id=&quot;reserve&quot;&gt;reserve&lt;/strong&gt; (size_t sz);</target>
        </trans-unit>
        <trans-unit id="e86fe3afc731856842c26ad4895919e3607e563d" translate="yes" xml:space="preserve">
          <source>static nothrow uint &lt;strong id=&quot;clrAttr&quot;&gt;clrAttr&lt;/strong&gt;(scope const void* p, uint a);</source>
          <target state="translated">static nothrow uint &lt;strong id=&quot;clrAttr&quot;&gt;clrAttr&lt;/strong&gt; (alcance const void * p, uint a);</target>
        </trans-unit>
        <trans-unit id="cdc1a62dcacbe6185c420f23e0e00f784dfda272" translate="yes" xml:space="preserve">
          <source>static nothrow uint &lt;strong id=&quot;getAttr&quot;&gt;getAttr&lt;/strong&gt;(scope const void* p);</source>
          <target state="translated">static nothrow uint &lt;strong id=&quot;getAttr&quot;&gt;getAttr&lt;/strong&gt; (alcance const void * p);</target>
        </trans-unit>
        <trans-unit id="1f4d72f7a35c52d0a2281addcdf782ca7639eca8" translate="yes" xml:space="preserve">
          <source>static nothrow uint &lt;strong id=&quot;setAttr&quot;&gt;setAttr&lt;/strong&gt;(scope const void* p, uint a);</source>
          <target state="translated">notint est&amp;aacute;tica uint &lt;strong id=&quot;setAttr&quot;&gt;setAttr&lt;/strong&gt; (alcance const void * p, uint a);</target>
        </trans-unit>
        <trans-unit id="cf151592620abd729b1ab16367321170e8493f58" translate="yes" xml:space="preserve">
          <source>static nothrow ulong &lt;strong id=&quot;allocatedInCurrentThread&quot;&gt;allocatedInCurrentThread&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8965ab6fc7b11d504f048cdb7d5a8927f1dc5eef" translate="yes" xml:space="preserve">
          <source>static nothrow void &lt;strong id=&quot;collect&quot;&gt;collect&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico void &lt;strong id=&quot;collect&quot;&gt;collect&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f3b532db988244694ed8ad6d52437bb074a76e42" translate="yes" xml:space="preserve">
          <source>static nothrow void &lt;strong id=&quot;disable&quot;&gt;disable&lt;/strong&gt;();</source>
          <target state="translated">anulaci&amp;oacute;n de vac&amp;iacute;o est&amp;aacute;tico &lt;strong id=&quot;disable&quot;&gt;deshabilitar&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="5e8401e7b722e2f2216fc20ccda96f184979d570" translate="yes" xml:space="preserve">
          <source>static nothrow void &lt;strong id=&quot;enable&quot;&gt;enable&lt;/strong&gt;();</source>
          <target state="translated">est&amp;aacute;tica nothrow vac&amp;iacute;o &lt;strong id=&quot;enable&quot;&gt;habilitar&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="369fb13e80a1d4202046e0ffd4d1c545d78f4dda" translate="yes" xml:space="preserve">
          <source>static nothrow void &lt;strong id=&quot;minimize&quot;&gt;minimize&lt;/strong&gt;();</source>
          <target state="translated">nulo vac&amp;iacute;o no est&amp;aacute;tico &lt;strong id=&quot;minimize&quot;&gt;minimizar&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="603f9eb398cb4384d7e80cb7e9a60a584f921ce3" translate="yes" xml:space="preserve">
          <source>static nothrow void &lt;strong id=&quot;remove&quot;&gt;remove&lt;/strong&gt;(const(char)* name);</source>
          <target state="translated">nothrow est&amp;aacute;tico void &lt;strong id=&quot;remove&quot;&gt;remove&lt;/strong&gt; (const (char) * name);</target>
        </trans-unit>
        <trans-unit id="208fc380c56041db97b66ac11be64f8ef2a3ecf5" translate="yes" xml:space="preserve">
          <source>static nothrow void &lt;strong id=&quot;splitPath&quot;&gt;splitPath&lt;/strong&gt;(int delegate(const(char)*) nothrow sink, const(char)* path);</source>
          <target state="translated">static nothrow void &lt;strong id=&quot;splitPath&quot;&gt;splitPath&lt;/strong&gt; (int delegate (const (char) *) nothrow sink, const (char) * path);</target>
        </trans-unit>
        <trans-unit id="aa0fd614ca4c885b093296e08cdddda511d03b81" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @safe Date &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt;();</source>
          <target state="translated">nothrow puro est&amp;aacute;tico @nogc @property @safe Date &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="853c39bcd8648e352c042c9568f046af1be2263a" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @safe Date &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt;();</source>
          <target state="translated">nothrow puro est&amp;aacute;tico @nogc @property @safe Date &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="e061dc96625ebc7af04e216a6b24066b29a0e909" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @safe DateTime &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico puro @nogc @property @safe DateTime &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="2730a042b75cc0f595359dbcfa9530f0b37548ed" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @safe DateTime &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt;();</source>
          <target state="translated">nothrow puro est&amp;aacute;tico @nogc @property @safe DateTime &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="67a099de0b9ccdf89d727b12f3eb6bb3cc30301e" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @safe Duration &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt;();</source>
          <target state="translated">nothrow puro est&amp;aacute;tico @nogc @property @safe Duration &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="751bb94ada75b3de5b30d6860cde6c728bf434ba" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @safe Duration &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt;();</source>
          <target state="translated">nothrow puro est&amp;aacute;tico @nogc @property @safe Duration &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="85e7f641dae645723b44ff31db6c14b54e99a2d4" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @safe Duration &lt;strong id=&quot;zero&quot;&gt;zero&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico puro @nogc @property @safe Duraci&amp;oacute;n &lt;strong id=&quot;zero&quot;&gt;cero&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="fc535b12ecd7882e4ecb48b8c3f6a435ada7e63d" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @safe TickDuration &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt;();</source>
          <target state="translated">nothrow puro est&amp;aacute;tico @nogc @property @safe TickDuration &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="27856f967672b2da54a84c3b479258e4f66ac249" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @safe TickDuration &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt;();</source>
          <target state="translated">nothrow puro est&amp;aacute;tico @nogc @property @safe TickDuration &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="35fd7c56bafad443ea680253b2388401a3c0e7cd" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @safe TickDuration &lt;strong id=&quot;zero&quot;&gt;zero&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico puro @nogc @property @safe TickDuration &lt;strong id=&quot;zero&quot;&gt;zero&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="43fa6409097b07c51b2a5b7afe42868a71f6d266" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @safe TimeOfDay &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico puro @nogc @property @safe TimeOfDay &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="781b3bfb382e0d883f55d80837902711b10b208b" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @safe TimeOfDay &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt;();</source>
          <target state="translated">nothrow puro est&amp;aacute;tico @nogc @property @safe TimeOfDay &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="06f1ccd77aa7e545f796e010de8f53acfe6006cb" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @safe bool &lt;strong id=&quot;hasExceptionTraps&quot;&gt;hasExceptionTraps&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico puro @nogc @property @safe bool &lt;strong id=&quot;hasExceptionTraps&quot;&gt;hasExceptionTraps&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="a38e7003d4975e90bf165af9442b68a8d7d3a932" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @trusted ExceptionMask &lt;strong id=&quot;enabledExceptions&quot;&gt;enabledExceptions&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico puro @nogc @property @trusted ExceptionMask &lt;strong id=&quot;enabledExceptions&quot;&gt;enabledExceptions&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="8f948462a4453078c4071386a888e9efef95d248" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @trusted RoundingMode &lt;strong id=&quot;rounding&quot;&gt;rounding&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico puro @nogc @property @trusted RoundingMode &lt;strong id=&quot;rounding&quot;&gt;rounding&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="3535f233d35ef2dc2602de919acc233c1f01f243" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @trusted const(int) &lt;strong id=&quot;PRIORITY_MAX&quot;&gt;PRIORITY_MAX&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico puro @nogc @property @trusted const (int) &lt;strong id=&quot;PRIORITY_MAX&quot;&gt;PRIORITY_MAX&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="6cb057d0e0362679b7c333856ffd78ededf703c3" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @trusted int &lt;strong id=&quot;PRIORITY_DEFAULT&quot;&gt;PRIORITY_DEFAULT&lt;/strong&gt;();</source>
          <target state="translated">nothrow pura est&amp;aacute;tica @nogc @property @trusted int &lt;strong id=&quot;PRIORITY_DEFAULT&quot;&gt;PRIORITY_DEFAULT&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="e659ee332fe0da68a3d48ddbe7b621cc340926ff" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property @trusted int &lt;strong id=&quot;PRIORITY_MIN&quot;&gt;PRIORITY_MIN&lt;/strong&gt;();</source>
          <target state="translated">nothrow pura est&amp;aacute;tica @nogc @property @trusted int &lt;strong id=&quot;PRIORITY_MIN&quot;&gt;PRIORITY_MIN&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="0d163da011106d2bed8ee02d90e5fe63ae01fbee" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property long &lt;strong id=&quot;ticksPerSecond&quot;&gt;ticksPerSecond&lt;/strong&gt;();</source>
          <target state="translated">nothrow puro est&amp;aacute;tico @nogc @property long &lt;strong id=&quot;ticksPerSecond&quot;&gt;ticksPerSecond&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="faf29d713f1db0c8ba90a85e7d29eba9897187bf" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @property ref @safe const(ubyte)[16] &lt;strong id=&quot;ADDR_ANY&quot;&gt;ADDR_ANY&lt;/strong&gt;();</source>
          <target state="translated">nothrow puro est&amp;aacute;tico @nogc @property ref @safe const (ubyte) [16] &lt;strong id=&quot;ADDR_ANY&quot;&gt;ADDR_ANY&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="da62a41ce68de9da91dbf99856d53af73045335b" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @safe const(char)[] &lt;strong id=&quot;ext&quot;&gt;ext&lt;/strong&gt;(const(char)[] str);</source>
          <target state="translated">nothrow puro est&amp;aacute;tico @nogc @safe const (char) [] &lt;strong id=&quot;ext&quot;&gt;ext&lt;/strong&gt; (const (char) [] str);</target>
        </trans-unit>
        <trans-unit id="51f199fff44dfd4dff01fb439dc666f074bfb6b0" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @safe size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(size_t n);</source>
          <target state="translated">nothrow est&amp;aacute;tico puro @nogc @safe size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt; (size_t n);</target>
        </trans-unit>
        <trans-unit id="7e364b202365d0a95b82dc88071b38b8db146990" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc @system Throwable &lt;strong id=&quot;chainTogether&quot;&gt;chainTogether&lt;/strong&gt;(return scope Throwable e1, return scope Throwable e2);</source>
          <target state="translated">static pure nothrow @nogc @system Throwable &lt;strong id=&quot;chainTogether&quot;&gt;chainTogether&lt;/strong&gt; (alcance de alcance Throwable e1, alcance de retorno Throwable e2);</target>
        </trans-unit>
        <trans-unit id="46f3b85c8cc6d4f1fb106cdfa3dd2f507f98bf87" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc bool &lt;strong id=&quot;absolute&quot;&gt;absolute&lt;/strong&gt;(const(char)* name);</source>
          <target state="translated">static pure nothrow @nogc bool &lt;strong id=&quot;absolute&quot;&gt;absolute&lt;/strong&gt; (const (char) * name);</target>
        </trans-unit>
        <trans-unit id="eb0fb6cca5d379ec95f74fd7dadc694c9b1bdc93" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc bool &lt;strong id=&quot;absolute&quot;&gt;absolute&lt;/strong&gt;(const(char)[] name);</source>
          <target state="translated">static pure nothrow @nogc bool &lt;strong id=&quot;absolute&quot;&gt;absolute&lt;/strong&gt; (const (char) [] name);</target>
        </trans-unit>
        <trans-unit id="ca466b5b291f23a452c428a3c5123d67afe1b644" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc bool &lt;strong id=&quot;equals&quot;&gt;equals&lt;/strong&gt;(const(char)* name1, const(char)* name2);</source>
          <target state="translated">nothrow est&amp;aacute;tico puro @nogc bool &lt;strong id=&quot;equals&quot;&gt;es igual a&lt;/strong&gt; (const (char) * name1, const (char) * name2);</target>
        </trans-unit>
        <trans-unit id="a3024d59ca314f7118174d2b79725228b1bd43b5" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc bool &lt;strong id=&quot;equals&quot;&gt;equals&lt;/strong&gt;(const(char)[] name1, const(char)[] name2);</source>
          <target state="translated">nothrow puro est&amp;aacute;tico @nogc bool &lt;strong id=&quot;equals&quot;&gt;es igual a&lt;/strong&gt; (const (char) [] name1, const (char) [] name2);</target>
        </trans-unit>
        <trans-unit id="79616c24fba1baec8358beb89122ae2124277048" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc bool &lt;strong id=&quot;equalsExt&quot;&gt;equalsExt&lt;/strong&gt;(const(char)* name, const(char)* ext);</source>
          <target state="translated">static pure nothrow @nogc bool &lt;strong id=&quot;equalsExt&quot;&gt;equalsExt&lt;/strong&gt; (const (char) * name, const (char) * ext);</target>
        </trans-unit>
        <trans-unit id="69689f4f9d028c8d3880689e6f75453e6b3fc560" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc bool &lt;strong id=&quot;equalsExt&quot;&gt;equalsExt&lt;/strong&gt;(const(char)[] name, const(char)[] ext);</source>
          <target state="translated">static pure nothrow @nogc bool &lt;strong id=&quot;equalsExt&quot;&gt;equalsExt&lt;/strong&gt; (const (char) [] name, const (char) [] ext);</target>
        </trans-unit>
        <trans-unit id="22b824c29d336659e732c320c195d39a1722c474" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc const(char)* &lt;strong id=&quot;ext&quot;&gt;ext&lt;/strong&gt;(const(char)* str);</source>
          <target state="translated">static pure nothrow @nogc const (char) * &lt;strong id=&quot;ext&quot;&gt;ext&lt;/strong&gt; (const (char) * str);</target>
        </trans-unit>
        <trans-unit id="7d315b706d6ad9aa7ecb2a3b8e852d61fe116a95" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc const(char)* &lt;strong id=&quot;name&quot;&gt;name&lt;/strong&gt;(const(char)* str);</source>
          <target state="translated">nothrow puro est&amp;aacute;tico @nogc const (char) * &lt;strong id=&quot;name&quot;&gt;name&lt;/strong&gt; (const (char) * str);</target>
        </trans-unit>
        <trans-unit id="ad35f248b4f17e57465de615c0e4dd48ba356ce1" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc const(char)[] &lt;strong id=&quot;name&quot;&gt;name&lt;/strong&gt;(const(char)[] str);</source>
          <target state="translated">nothrow puro est&amp;aacute;tico @nogc const (char) [] &lt;strong id=&quot;name&quot;&gt;nombre&lt;/strong&gt; (const (char) [] str);</target>
        </trans-unit>
        <trans-unit id="571a15633c48f1c4cccd24c007b8b55a2ae723bd" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc size_t &lt;strong id=&quot;sizeOf&quot;&gt;sizeOf&lt;/strong&gt;(void* p);</source>
          <target state="translated">nothrow puro est&amp;aacute;tico @nogc size_t &lt;strong id=&quot;sizeOf&quot;&gt;sizeOf&lt;/strong&gt; (void * p);</target>
        </trans-unit>
        <trans-unit id="47cd70eb42e75af6397edb149eabab59ef3b3c41" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc void &lt;strong id=&quot;free&quot;&gt;free&lt;/strong&gt;(void* p);</source>
          <target state="translated">nothrow pura est&amp;aacute;tica @nogc vac&amp;iacute;o &lt;strong id=&quot;free&quot;&gt;libre&lt;/strong&gt; (void * p);</target>
        </trans-unit>
        <trans-unit id="ee184071cc4d34250c88572c8f6f9ca69bc8820c" translate="yes" xml:space="preserve">
          <source>static pure nothrow @nogc void* &lt;strong id=&quot;addrOf&quot;&gt;addrOf&lt;/strong&gt;(void* p);</source>
          <target state="translated">nothrow puro est&amp;aacute;tico @nogc void * &lt;strong id=&quot;addrOf&quot;&gt;addrOf&lt;/strong&gt; (void * p);</target>
        </trans-unit>
        <trans-unit id="fbb58300ec53b87a29a7ed7d945772d22b79216f" translate="yes" xml:space="preserve">
          <source>static pure nothrow @property @safe SysTime &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico puro @property @safe SysTime &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ac545dd4ead4689513688321cdec58c5c87f28c9" translate="yes" xml:space="preserve">
          <source>static pure nothrow @property @safe SysTime &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt;();</source>
          <target state="translated">nothrow est&amp;aacute;tico puro @property @safe SysTime &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="5beeec6e6308340b5ee1e696173e7d673bc3f60a" translate="yes" xml:space="preserve">
          <source>static pure nothrow @safe SysTime &lt;strong id=&quot;fromUnixTime&quot;&gt;fromUnixTime&lt;/strong&gt;(long unixTime, immutable TimeZone tz = LocalTime());</source>
          <target state="translated">static pure nothrow @safe SysTime &lt;strong id=&quot;fromUnixTime&quot;&gt;fromUnixTime&lt;/strong&gt; (long unixTime, TimeZone inmutable tz = LocalTime ());</target>
        </trans-unit>
        <trans-unit id="244501c2c49e749fa4b3dfce5dc402654013bb3f" translate="yes" xml:space="preserve">
          <source>static pure nothrow @safe immutable(UTC) &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt;();</source>
          <target state="translated">static pure nothrow @safe inmutable (UTC) &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="9583b480a97fec4dc475527456e42516bfc46b26" translate="yes" xml:space="preserve">
          <source>static pure nothrow @safe void &lt;strong id=&quot;alignmember&quot;&gt;alignmember&lt;/strong&gt;(structalign_t alignment, uint size, uint* poffset);</source>
          <target state="translated">static pure nothrow @safe void &lt;strong id=&quot;alignmember&quot;&gt;alignmember&lt;/strong&gt; (alineaci&amp;oacute;n structalign_t, tama&amp;ntilde;o uint, uint * poffset);</target>
        </trans-unit>
        <trans-unit id="982c1b7de2d73b1a18d52955a094a9f21b9c00b4" translate="yes" xml:space="preserve">
          <source>static pure nothrow @trusted immutable(LocalTime) &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt;();</source>
          <target state="translated">static pure nothrow @trusted inmutable (LocalTime) &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="d0570249e9856436ac927fb51fc2d572a16a7be5" translate="yes" xml:space="preserve">
          <source>static pure nothrow BlkInfo &lt;strong id=&quot;qalloc&quot;&gt;qalloc&lt;/strong&gt;(size_t sz, uint ba = 0, const TypeInfo ti = null);</source>
          <target state="translated">est&amp;aacute;tico puro nothrow BlkInfo &lt;strong id=&quot;qalloc&quot;&gt;qalloc&lt;/strong&gt; (sz size_t, uint ba = 0, const TypeInfo ti = null);</target>
        </trans-unit>
        <trans-unit id="69bdb864188bb94c05c97fd1c305aa7f05d290e2" translate="yes" xml:space="preserve">
          <source>static pure nothrow BlkInfo &lt;strong id=&quot;query&quot;&gt;query&lt;/strong&gt;(void* p);</source>
          <target state="translated">&lt;strong id=&quot;query&quot;&gt;consulta&lt;/strong&gt; BlkInfo est&amp;aacute;tica de nothrow pura (void * p);</target>
        </trans-unit>
        <trans-unit id="4be26eada6d4901ed981c99417fd9c77e6ebd440" translate="yes" xml:space="preserve">
          <source>static pure nothrow char[] &lt;strong id=&quot;addExt&quot;&gt;addExt&lt;/strong&gt;(const(char)[] name, const(char)[] ext);</source>
          <target state="translated">static pure nothrow char [] &lt;strong id=&quot;addExt&quot;&gt;addExt&lt;/strong&gt; (const (char) [] name, const (char) [] ext);</target>
        </trans-unit>
        <trans-unit id="32a8d1b4cf0635ec3af4da851ae4ce2d2f03e47c" translate="yes" xml:space="preserve">
          <source>static pure nothrow const(char)* &lt;strong id=&quot;combineComments&quot;&gt;combineComments&lt;/strong&gt;(const(char)* c1, const(char)* c2, bool newParagraph);</source>
          <target state="translated">static pure nothrow const (char) * &lt;strong id=&quot;combineComments&quot;&gt;combineComments&lt;/strong&gt; (const (char) * c1, const (char) * c2, bool newParagraph);</target>
        </trans-unit>
        <trans-unit id="88a95d2de3d31f7676aea558da21d2a15e18a779" translate="yes" xml:space="preserve">
          <source>static pure nothrow size_t &lt;strong id=&quot;extend&quot;&gt;extend&lt;/strong&gt;(void* p, size_t mx, size_t sz, const TypeInfo ti = null);</source>
          <target state="translated">nothrow puro est&amp;aacute;tico size_t &lt;strong id=&quot;extend&quot;&gt;extend&lt;/strong&gt; (void * p, size_t mx, size_t sz, const TypeInfo ti = null);</target>
        </trans-unit>
        <trans-unit id="8bd8b37f494f571d33cfe9fd6cc212a15cff6221" translate="yes" xml:space="preserve">
          <source>static pure nothrow uint &lt;strong id=&quot;clrAttr&quot;&gt;clrAttr&lt;/strong&gt;(void* p, uint a);</source>
          <target state="translated">static pure nothrow uint &lt;strong id=&quot;clrAttr&quot;&gt;clrAttr&lt;/strong&gt; (void * p, uint a);</target>
        </trans-unit>
        <trans-unit id="77a9a676d2ed849724eb94664ddef34a1efe4e1f" translate="yes" xml:space="preserve">
          <source>static pure nothrow uint &lt;strong id=&quot;getAttr&quot;&gt;getAttr&lt;/strong&gt;(void* p);</source>
          <target state="translated">est&amp;aacute;tico puro nothrow uint &lt;strong id=&quot;getAttr&quot;&gt;getAttr&lt;/strong&gt; (void * p);</target>
        </trans-unit>
        <trans-unit id="94b290f0c513ed303a07190f6160e4cbdbba766b" translate="yes" xml:space="preserve">
          <source>static pure nothrow uint &lt;strong id=&quot;setAttr&quot;&gt;setAttr&lt;/strong&gt;(void* p, uint a);</source>
          <target state="translated">static pure nothrow uint &lt;strong id=&quot;setAttr&quot;&gt;setAttr&lt;/strong&gt; (nulo * p, uint a);</target>
        </trans-unit>
        <trans-unit id="9e003e6abd3ccd3b9497c3225bd59f357dae24ac" translate="yes" xml:space="preserve">
          <source>static pure nothrow void &lt;strong id=&quot;free&quot;&gt;free&lt;/strong&gt;(const(char)* str);</source>
          <target state="translated">est&amp;aacute;tico puro sin vac&amp;iacute;o &lt;strong id=&quot;free&quot;&gt;sin&lt;/strong&gt; vac&amp;iacute;o (const (char) * str);</target>
        </trans-unit>
        <trans-unit id="261172b15d9f089e10f4847c6429109aa69ec72f" translate="yes" xml:space="preserve">
          <source>static pure nothrow void* &lt;strong id=&quot;calloc&quot;&gt;calloc&lt;/strong&gt;(size_t sz, uint ba = 0, const TypeInfo ti = null);</source>
          <target state="translated">est&amp;aacute;tico puro nothrow void * &lt;strong id=&quot;calloc&quot;&gt;calloc&lt;/strong&gt; (size_t sz, uint ba = 0, const TypeInfo ti = null);</target>
        </trans-unit>
        <trans-unit id="2bbfd1b2587fbcf3f5ac6a893a40ac92864977fb" translate="yes" xml:space="preserve">
          <source>static pure nothrow void* &lt;strong id=&quot;malloc&quot;&gt;malloc&lt;/strong&gt;(size_t sz, uint ba = 0, const TypeInfo ti = null);</source>
          <target state="translated">est&amp;aacute;tico puro nothrow void * &lt;strong id=&quot;malloc&quot;&gt;malloc&lt;/strong&gt; (size_t sz, uint ba = 0, const TypeInfo ti = null);</target>
        </trans-unit>
        <trans-unit id="2b2b61c392339dfd5756b712ec925d0f2ee52ee8" translate="yes" xml:space="preserve">
          <source>static pure nothrow void* &lt;strong id=&quot;realloc&quot;&gt;realloc&lt;/strong&gt;(void* p, size_t sz, uint ba = 0, const TypeInfo ti = null);</source>
          <target state="translated">static pure nothrow void * &lt;strong id=&quot;realloc&quot;&gt;realloc&lt;/strong&gt; (void * p, size_t sz, uint ba = 0, const TypeInfo ti = null);</target>
        </trans-unit>
        <trans-unit id="08341fb352d87f8985171c7531740841155498bc" translate="yes" xml:space="preserve">
          <source>static shared AlignedMallocator &lt;strong id=&quot;instance&quot;&gt;instance&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;instance&quot;&gt;instancia de&lt;/strong&gt; AlignedMallocator compartida est&amp;aacute;tica ;</target>
        </trans-unit>
        <trans-unit id="d6ea23c3a659553f0bfb094f52e487250c0c5bbd" translate="yes" xml:space="preserve">
          <source>static shared Mallocator &lt;strong id=&quot;instance&quot;&gt;instance&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;instance&quot;&gt;instancia de&lt;/strong&gt; Mallocator compartida est&amp;aacute;tica ;</target>
        </trans-unit>
        <trans-unit id="ecef4af91cc8d513b1dcf35abf51b3eca239ad61" translate="yes" xml:space="preserve">
          <source>static shared NullAllocator &lt;strong id=&quot;instance&quot;&gt;instance&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;instance&quot;&gt;instancia&lt;/strong&gt; compartida NullAllocator est&amp;aacute;tica ;</target>
        </trans-unit>
        <trans-unit id="7c8bcd9dd4fe1a691954b13eaa0d376fb848a76e" translate="yes" xml:space="preserve">
          <source>static shared SbrkRegion &lt;strong id=&quot;instance&quot;&gt;instance&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;instance&quot;&gt;instancia de&lt;/strong&gt; SbrkRegion compartida est&amp;aacute;tica ;</target>
        </trans-unit>
        <trans-unit id="f4cc5fb9b9cfdc1e83bf79707af019aa42ed7729" translate="yes" xml:space="preserve">
          <source>static shared const GCAllocator &lt;strong id=&quot;instance&quot;&gt;instance&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;instance&quot;&gt;instancia de&lt;/strong&gt; GCAllocator const compartida compartida ;</target>
        </trans-unit>
        <trans-unit id="c32179a7103b18fee2c3c653fc377b47bc903160" translate="yes" xml:space="preserve">
          <source>static shared const MmapAllocator &lt;strong id=&quot;instance&quot;&gt;instance&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;instance&quot;&gt;instancia&lt;/strong&gt; est&amp;aacute;tica compartida const MmapAllocator ;</target>
        </trans-unit>
        <trans-unit id="74112e186e04846feda4bcc404904bc409c25fa8" translate="yes" xml:space="preserve">
          <source>static size_t &lt;strong id=&quot;dim&quot;&gt;dim&lt;/strong&gt;(Parameters* parameters);</source>
          <target state="translated">tama&amp;ntilde;o_t est&amp;aacute;tico &lt;strong id=&quot;dim&quot;&gt;dim&lt;/strong&gt; (Par&amp;aacute;metros * par&amp;aacute;metros);</target>
        </trans-unit>
        <trans-unit id="e7a160fd18e210d9efeefd3e442bd2b2310c1e83" translate="yes" xml:space="preserve">
          <source>static size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(size_t s);</source>
          <target state="translated">&lt;strong id=&quot;goodAllocSize&quot;&gt;tama&amp;ntilde;o_t&lt;/strong&gt; est&amp;aacute;tico &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt; ( &lt;strong id=&quot;goodAllocSize&quot;&gt;tama&amp;ntilde;o_t&lt;/strong&gt; s);</target>
        </trans-unit>
        <trans-unit id="c5c6e4a1897107f25abaf024cbb882e25f803aea" translate="yes" xml:space="preserve">
          <source>static string &lt;strong id=&quot;capitalize&quot;&gt;capitalize&lt;/strong&gt;(string w);</source>
          <target state="translated">cadena est&amp;aacute;tica &lt;strong id=&quot;capitalize&quot;&gt;may&amp;uacute;scula&lt;/strong&gt; (cadena w);</target>
        </trans-unit>
        <trans-unit id="33daeab73b7263383dcda0144e21ac68ba5d2527" translate="yes" xml:space="preserve">
          <source>static string &lt;strong id=&quot;usage&quot;&gt;usage&lt;/strong&gt;();</source>
          <target state="translated">&lt;strong id=&quot;usage&quot;&gt;uso de&lt;/strong&gt; cadena est&amp;aacute;tica ();</target>
        </trans-unit>
        <trans-unit id="5e43352daeea662cccac000e1bb6bff26a35a2e0" translate="yes" xml:space="preserve">
          <source>static uint &lt;strong id=&quot;placeField&quot;&gt;placeField&lt;/strong&gt;(uint* nextoffset, uint memsize, uint memalignsize, structalign_t alignment, uint* paggsize, uint* paggalignsize, bool isunion);</source>
          <target state="translated">uint &lt;strong id=&quot;placeField&quot;&gt;placeField&lt;/strong&gt; est&amp;aacute;tico (uint * nextoffset, uint memsize, uint memalignsize, structalign_t alineaci&amp;oacute;n, uint * paggsize, uint * paggalignsize, bool isunion);</target>
        </trans-unit>
        <trans-unit id="24fb00e5f3f6c3f535619408adba30e1dc6782e8" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;addDeferredSemantic&quot;&gt;addDeferredSemantic&lt;/strong&gt;(Dsymbol s);</source>
          <target state="translated">vac&amp;iacute;o est&amp;aacute;tico &lt;strong id=&quot;addDeferredSemantic&quot;&gt;addDeferredSemantic&lt;/strong&gt; (Dsymbol s);</target>
        </trans-unit>
        <trans-unit id="b9bf93912a462108f61fc44ba54f2bb9bcc17c29" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;addGlobalIdent&quot;&gt;addGlobalIdent&lt;/strong&gt;(const(char)[] ident);</source>
          <target state="translated">est&amp;aacute;tico vac&amp;iacute;o &lt;strong id=&quot;addGlobalIdent&quot;&gt;addGlobalIdent&lt;/strong&gt; (const (char) [] ident);</target>
        </trans-unit>
        <trans-unit id="9fa0bcb86b34934695abacb01f40e825d5594634" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;addGlobalIdent&quot;&gt;addGlobalIdent&lt;/strong&gt;(string ident);</source>
          <target state="translated">est&amp;aacute;tico vac&amp;iacute;o &lt;strong id=&quot;addGlobalIdent&quot;&gt;addGlobalIdent&lt;/strong&gt; (identificador de cadena);</target>
        </trans-unit>
        <trans-unit id="ae06f7004a83ef58c69bc3fcc06fd6f56cdcae88" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;addPredefinedGlobalIdent&quot;&gt;addPredefinedGlobalIdent&lt;/strong&gt;(const(char)[] ident);</source>
          <target state="translated">vac&amp;iacute;o est&amp;aacute;tico &lt;strong id=&quot;addPredefinedGlobalIdent&quot;&gt;addPredefinedGlobalIdent&lt;/strong&gt; (const (char) [] ident);</target>
        </trans-unit>
        <trans-unit id="75bd857e8b1f3eb3985e3a491c0e4b6766595eb2" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;addPredefinedGlobalIdent&quot;&gt;addPredefinedGlobalIdent&lt;/strong&gt;(string ident);</source>
          <target state="translated">vac&amp;iacute;o est&amp;aacute;tico &lt;strong id=&quot;addPredefinedGlobalIdent&quot;&gt;addPredefinedGlobalIdent&lt;/strong&gt; (identificador de cadena);</target>
        </trans-unit>
        <trans-unit id="a4446f7cef8ccfe3025b55e0e7e997a6b0a141d4" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;allow&quot;&gt;allow&lt;/strong&gt;(Expression exp);</source>
          <target state="translated">static void &lt;strong id=&quot;allow&quot;&gt;permite&lt;/strong&gt; (Expresi&amp;oacute;n exp);</target>
        </trans-unit>
        <trans-unit id="8511d4d5e9c4d34fea31c59cb7fe719278b9c0a7" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;checkReserved&quot;&gt;checkReserved&lt;/strong&gt;(ref const Loc loc, const(char)[] ident);</source>
          <target state="translated">&lt;strong id=&quot;checkReserved&quot;&gt;check&lt;/strong&gt; vac&amp;iacute;o vac&amp;iacute;o &lt;strong id=&quot;checkReserved&quot;&gt;reservado&lt;/strong&gt; (ref const Loc loc, const (char) [] ident);</target>
        </trans-unit>
        <trans-unit id="5c9248eb1dbff21b0ea4347593baed04a830e97d" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;deinitialize&quot;&gt;deinitialize&lt;/strong&gt;();</source>
          <target state="translated">vac&amp;iacute;o est&amp;aacute;tico &lt;strong id=&quot;deinitialize&quot;&gt;desinicializar&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="82f39bd65ef8db328ad96b9f6717efabcb1431d5" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;free&quot;&gt;free&lt;/strong&gt;(ExceptionHeader* eh);</source>
          <target state="translated">vac&amp;iacute;o est&amp;aacute;tico &lt;strong id=&quot;free&quot;&gt;libre&lt;/strong&gt; (ExceptionHeader * eh);</target>
        </trans-unit>
        <trans-unit id="ecfef745262ab61523c0309c2248a3d8a4607779" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;genCmain&quot;&gt;genCmain&lt;/strong&gt;(Scope* sc);</source>
          <target state="translated">vac&amp;iacute;o est&amp;aacute;tico &lt;strong id=&quot;genCmain&quot;&gt;genCmain&lt;/strong&gt; (Scope * sc);</target>
        </trans-unit>
        <trans-unit id="c3fe934046399cb2fa1fed8e90c767006cab734b" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;initialize&quot;&gt;initialize&lt;/strong&gt;();</source>
          <target state="translated">vac&amp;iacute;o est&amp;aacute;tico &lt;strong id=&quot;initialize&quot;&gt;initialize&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="efc408ca82fc399d398bfc6705f3b3971608778c" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;loadModule&quot;&gt;loadModule&lt;/strong&gt;(Module m);</source>
          <target state="translated">&lt;strong id=&quot;loadModule&quot;&gt;loadModule&lt;/strong&gt; est&amp;aacute;tico vac&amp;iacute;o (M&amp;oacute;dulo m);</target>
        </trans-unit>
        <trans-unit id="2797e9f8a62b1389ac873f3b1234061905d74da0" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt;();</source>
          <target state="translated">est&amp;aacute;tico vac&amp;iacute;o &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="4427ccbd14c318275348a9ebf183bae12301677c" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt;(string msg);</source>
          <target state="translated">static void &lt;strong id=&quot;opCall&quot;&gt;opCall&lt;/strong&gt; (cadena de mensajes);</target>
        </trans-unit>
        <trans-unit id="f5ecff37af491a511932a9e37e13f515c0ae3c5b" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;parseEscapes&quot;&gt;parseEscapes&lt;/strong&gt;(Escape* escapetable, const(char)* textstart, size_t textlen);</source>
          <target state="translated">static void &lt;strong id=&quot;parseEscapes&quot;&gt;parseEscapes&lt;/strong&gt; (Escape * escapetable, const (char) * textstart, size_t textlen);</target>
        </trans-unit>
        <trans-unit id="01f45cb70fa28d0a41844f00305445d0361e1b15" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;parseMacros&quot;&gt;parseMacros&lt;/strong&gt;(Escape* escapetable, Macro** pmacrotable, const(char)* m, size_t mlen);</source>
          <target state="translated">static void &lt;strong id=&quot;parseMacros&quot;&gt;parseMacros&lt;/strong&gt; (Escape * escapetable, Macro ** pmacrotable, const (char) * m, size_t mlen);</target>
        </trans-unit>
        <trans-unit id="562df96a841cb3ace9bf7e567e2d200886b48b69" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;runDeferredSemantic&quot;&gt;runDeferredSemantic&lt;/strong&gt;();</source>
          <target state="translated">vac&amp;iacute;o est&amp;aacute;tico &lt;strong id=&quot;runDeferredSemantic&quot;&gt;runDeferredSemantic&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="b6dc08e3095f6293f31009b1e559a8a4a19f4c20" translate="yes" xml:space="preserve">
          <source>static void &lt;strong id=&quot;runFinalizers&quot;&gt;runFinalizers&lt;/strong&gt;(scope const void[] segment);</source>
          <target state="translated">static void &lt;strong id=&quot;runFinalizers&quot;&gt;runFinalizers&lt;/strong&gt; (alcance const void [] segmento);</target>
        </trans-unit>
        <trans-unit id="0e8422d66b7ba0dafa1f216bfcdea5a30d004026" translate="yes" xml:space="preserve">
          <source>staticassert.d</source>
          <target state="translated">staticassert.d</target>
        </trans-unit>
        <trans-unit id="38515b8eb7240c5098097d415dd7b879da15f992" translate="yes" xml:space="preserve">
          <source>staticcond.d</source>
          <target state="translated">staticcond.d</target>
        </trans-unit>
        <trans-unit id="d6ddfdf8a905b490a77bba894eb132cb28e683f3" translate="yes" xml:space="preserve">
          <source>std.algorithm</source>
          <target state="translated">std.algorithm</target>
        </trans-unit>
        <trans-unit id="b803284bfe46cc64cfb6457a05074abccc66f14b" translate="yes" xml:space="preserve">
          <source>std.algorithm.comparison</source>
          <target state="translated">std.algorithm.comparison</target>
        </trans-unit>
        <trans-unit id="5a27c3c10f773848c2764db950c7b35a5d7841f1" translate="yes" xml:space="preserve">
          <source>std.algorithm.iteration</source>
          <target state="translated">std.algorithm.iteration</target>
        </trans-unit>
        <trans-unit id="955c4f77500d972487246b8f3e0492f667686421" translate="yes" xml:space="preserve">
          <source>std.algorithm.mutation</source>
          <target state="translated">std.algorithm.mutation</target>
        </trans-unit>
        <trans-unit id="3ce22a63f257f564642b1660d5ae97d9c38138b4" translate="yes" xml:space="preserve">
          <source>std.algorithm.searching</source>
          <target state="translated">std.algorithm.searching</target>
        </trans-unit>
        <trans-unit id="8bcaeb5f0eadec5273738e041b35d34dad7aec86" translate="yes" xml:space="preserve">
          <source>std.algorithm.setops</source>
          <target state="translated">std.algorithm.setops</target>
        </trans-unit>
        <trans-unit id="aa23c540a324d0cdad50d13f9963d5bebd200d93" translate="yes" xml:space="preserve">
          <source>std.algorithm.sorting</source>
          <target state="translated">std.algorithm.sorting</target>
        </trans-unit>
        <trans-unit id="1601ddd5ec7cce290872e6f9aeedfab77e1729ad" translate="yes" xml:space="preserve">
          <source>std.array</source>
          <target state="translated">std.array</target>
        </trans-unit>
        <trans-unit id="c6c6fd767e59ec17f8b69e3352ef56092342cd2b" translate="yes" xml:space="preserve">
          <source>std.array.back</source>
          <target state="translated">std.array.back</target>
        </trans-unit>
        <trans-unit id="16bb950a46e675a62bcb543894017175f1b58a86" translate="yes" xml:space="preserve">
          <source>std.array.join</source>
          <target state="translated">std.array.join</target>
        </trans-unit>
        <trans-unit id="cc95bcccaa734e49192356efb4b63fa7ce7c799a" translate="yes" xml:space="preserve">
          <source>std.array.save</source>
          <target state="translated">std.array.save</target>
        </trans-unit>
        <trans-unit id="6087050bda5ce888feaa587cdd7b7bc50cd83c53" translate="yes" xml:space="preserve">
          <source>std.ascii</source>
          <target state="translated">std.ascii</target>
        </trans-unit>
        <trans-unit id="ba9f7f8362cd28a369adcbd04c623f53b453311c" translate="yes" xml:space="preserve">
          <source>std.base64</source>
          <target state="translated">std.base64</target>
        </trans-unit>
        <trans-unit id="38e4006332cca0a69273cc081b4128f46f15a83a" translate="yes" xml:space="preserve">
          <source>std.bigint</source>
          <target state="translated">std.bigint</target>
        </trans-unit>
        <trans-unit id="e69c51083d6e733515975cbbb348a7c723077816" translate="yes" xml:space="preserve">
          <source>std.bitmanip</source>
          <target state="translated">std.bitmanip</target>
        </trans-unit>
        <trans-unit id="96f96f3f4b9b28fc53f0cd7583d59e698590989c" translate="yes" xml:space="preserve">
          <source>std.bitmanip.peek</source>
          <target state="translated">std.bitmanip.peek</target>
        </trans-unit>
        <trans-unit id="fd44399cdb97aa19f7dd38f54b6be8ef3c40c9d3" translate="yes" xml:space="preserve">
          <source>std.bitmanip.read</source>
          <target state="translated">std.bitmanip.read</target>
        </trans-unit>
        <trans-unit id="cfee9b14ccb0e6e362d98c60059467190c6bd66e" translate="yes" xml:space="preserve">
          <source>std.compiler</source>
          <target state="translated">std.compiler</target>
        </trans-unit>
        <trans-unit id="a880725782fb67adc4f45d60b2be5d033f5d9be1" translate="yes" xml:space="preserve">
          <source>std.compiler.name</source>
          <target state="translated">std.compiler.name</target>
        </trans-unit>
        <trans-unit id="0bce1a21c9a8a01659ae4750724c1e34d1d376d7" translate="yes" xml:space="preserve">
          <source>std.complex</source>
          <target state="translated">std.complex</target>
        </trans-unit>
        <trans-unit id="186acc26ec2a892c62158f86595e8b350b0eb71d" translate="yes" xml:space="preserve">
          <source>std.complex.abs</source>
          <target state="translated">std.complex.abs</target>
        </trans-unit>
        <trans-unit id="5946e757b02eb0f2ed07e5f06cdf47ea78e8ae7d" translate="yes" xml:space="preserve">
          <source>std.complex.arg</source>
          <target state="translated">std.complex.arg</target>
        </trans-unit>
        <trans-unit id="52cc4671d3f89d0aca2d01238594adc1d517c23b" translate="yes" xml:space="preserve">
          <source>std.complex.conj</source>
          <target state="translated">std.complex.conj</target>
        </trans-unit>
        <trans-unit id="d2449c6e1b7d0fbe1ab2039d4c72d79735aa602f" translate="yes" xml:space="preserve">
          <source>std.complex.cos</source>
          <target state="translated">std.complex.cos</target>
        </trans-unit>
        <trans-unit id="c1b62de90b2f6be18c23176187daca2eb57a85c1" translate="yes" xml:space="preserve">
          <source>std.complex.expi</source>
          <target state="translated">std.complex.expi</target>
        </trans-unit>
        <trans-unit id="dcb236059274e7f2becdaa9e468dfe4c736635df" translate="yes" xml:space="preserve">
          <source>std.complex.sin</source>
          <target state="translated">std.complex.sin</target>
        </trans-unit>
        <trans-unit id="2d12a7b64c1128577ae4dfbcdf623b6989e5cd86" translate="yes" xml:space="preserve">
          <source>std.complex.sqrt</source>
          <target state="translated">std.complex.sqrt</target>
        </trans-unit>
        <trans-unit id="86d96991eaa0f840c46f9a1740a0a768515c6acb" translate="yes" xml:space="preserve">
          <source>std.concurrency</source>
          <target state="translated">std.concurrency</target>
        </trans-unit>
        <trans-unit id="2976eb9c4c869b7d0a7312defc4e42c55b729500" translate="yes" xml:space="preserve">
          <source>std.concurrency.Tid</source>
          <target state="translated">std.concurrency.Tid</target>
        </trans-unit>
        <trans-unit id="c1f02e337fe56a465a1dc1e1fefbb8e6554eef59" translate="yes" xml:space="preserve">
          <source>std.concurrency.send</source>
          <target state="translated">std.concurrency.send</target>
        </trans-unit>
        <trans-unit id="66bb77393957b201a863689de4ffd0e2270aae51" translate="yes" xml:space="preserve">
          <source>std.container</source>
          <target state="translated">std.container</target>
        </trans-unit>
        <trans-unit id="bfb1e74732c4e236b7d37970946b2a77434995b9" translate="yes" xml:space="preserve">
          <source>std.container.array</source>
          <target state="translated">std.container.array</target>
        </trans-unit>
        <trans-unit id="f8109af7680a0a122b25dc34f3610c173e5c8081" translate="yes" xml:space="preserve">
          <source>std.container.binaryheap</source>
          <target state="translated">std.container.binaryheap</target>
        </trans-unit>
        <trans-unit id="1771fe508d60e556ec1d64d501f1fc1f735628a2" translate="yes" xml:space="preserve">
          <source>std.container.dlist</source>
          <target state="translated">std.container.dlist</target>
        </trans-unit>
        <trans-unit id="a3e21eb6d2c302a2a70ed738f8029dc69ffdd012" translate="yes" xml:space="preserve">
          <source>std.container.rbtree</source>
          <target state="translated">std.container.rbtree</target>
        </trans-unit>
        <trans-unit id="f763942b96c6a70ebf696aa6ff55f55dea9ad5c2" translate="yes" xml:space="preserve">
          <source>std.container.slist</source>
          <target state="translated">std.container.slist</target>
        </trans-unit>
        <trans-unit id="50e8d692a80ef9b160dc4fd0a15b94d64ff220ef" translate="yes" xml:space="preserve">
          <source>std.container.util</source>
          <target state="translated">std.container.util</target>
        </trans-unit>
        <trans-unit id="53a0a2eb4a57eb7912163731fd97d4fc723bfa74" translate="yes" xml:space="preserve">
          <source>std.conv</source>
          <target state="translated">std.conv</target>
        </trans-unit>
        <trans-unit id="d6f49135094958ad4104766c0486448699276ee8" translate="yes" xml:space="preserve">
          <source>std.conv.text</source>
          <target state="translated">std.conv.text</target>
        </trans-unit>
        <trans-unit id="265dc4bd0ae6a3cb1f4bc7d1605af97203553750" translate="yes" xml:space="preserve">
          <source>std.conv.to</source>
          <target state="translated">std.conv.to</target>
        </trans-unit>
        <trans-unit id="4dcd77637212c05371f136c31b539b19a1328e63" translate="yes" xml:space="preserve">
          <source>std.csv</source>
          <target state="translated">std.csv</target>
        </trans-unit>
        <trans-unit id="8c4e999773630420a422c8bd3334750472d4dc27" translate="yes" xml:space="preserve">
          <source>std.datetime</source>
          <target state="translated">std.datetime</target>
        </trans-unit>
        <trans-unit id="66eed2bdcf2470db9a30ffeebad9f169395d99b1" translate="yes" xml:space="preserve">
          <source>std.datetime.date</source>
          <target state="translated">std.datetime.date</target>
        </trans-unit>
        <trans-unit id="192d214f4411198fb29ff75e4a6751371fa01c3b" translate="yes" xml:space="preserve">
          <source>std.datetime.interval</source>
          <target state="translated">std.datetime.interval</target>
        </trans-unit>
        <trans-unit id="3916f3647f6397f307b20a92c533b1533e238e67" translate="yes" xml:space="preserve">
          <source>std.datetime.stopwatch</source>
          <target state="translated">std.datetime.stopwatch</target>
        </trans-unit>
        <trans-unit id="f917d069e227dea3105fed8e61c5d9750d073848" translate="yes" xml:space="preserve">
          <source>std.datetime.systime</source>
          <target state="translated">std.datetime.systime</target>
        </trans-unit>
        <trans-unit id="b4f3c85aa279442d72d66e18d122f839c30fac74" translate="yes" xml:space="preserve">
          <source>std.datetime.timezone</source>
          <target state="translated">std.datetime.timezone</target>
        </trans-unit>
        <trans-unit id="8fc02222545c194a280348894536f7ae14b8f2d2" translate="yes" xml:space="preserve">
          <source>std.demangle</source>
          <target state="translated">std.demangle</target>
        </trans-unit>
        <trans-unit id="9070731f4c23fe3269b280989705f2030af02826" translate="yes" xml:space="preserve">
          <source>std.digest</source>
          <target state="translated">std.digest</target>
        </trans-unit>
        <trans-unit id="462b8b454c53a31d58e586258c1ff3cd8f04b899" translate="yes" xml:space="preserve">
          <source>std.digest.crc</source>
          <target state="translated">std.digest.crc</target>
        </trans-unit>
        <trans-unit id="25d33592dedf0d23b8a29dda98d6de1555349873" translate="yes" xml:space="preserve">
          <source>std.digest.hmac</source>
          <target state="translated">std.digest.hmac</target>
        </trans-unit>
        <trans-unit id="383c81a82e15e646984bed95aa1656eb4c73bca4" translate="yes" xml:space="preserve">
          <source>std.digest.md</source>
          <target state="translated">std.digest.md</target>
        </trans-unit>
        <trans-unit id="a25ef151d037036280369e4587ba64aa16f20b7e" translate="yes" xml:space="preserve">
          <source>std.digest.murmurhash</source>
          <target state="translated">std.digest.murmurhash</target>
        </trans-unit>
        <trans-unit id="c34846a0879085c3299742e42580713446ca033e" translate="yes" xml:space="preserve">
          <source>std.digest.ripemd</source>
          <target state="translated">std.digest.ripemd</target>
        </trans-unit>
        <trans-unit id="82b1a143c6fa6e8a19c780208fe23213577138f1" translate="yes" xml:space="preserve">
          <source>std.digest.sha</source>
          <target state="translated">std.digest.sha</target>
        </trans-unit>
        <trans-unit id="78e25ab706f7f76871a47557ee18b89a8443b95d" translate="yes" xml:space="preserve">
          <source>std.encoding</source>
          <target state="translated">std.encoding</target>
        </trans-unit>
        <trans-unit id="a14f812a5b92f20e352aa16f51e997d41a23085b" translate="yes" xml:space="preserve">
          <source>std.encoding.BOM</source>
          <target state="translated">std.encoding.BOM</target>
        </trans-unit>
        <trans-unit id="cbabfb19378f65d66fed1acb817879fac37d2a28" translate="yes" xml:space="preserve">
          <source>std.exception</source>
          <target state="translated">std.exception</target>
        </trans-unit>
        <trans-unit id="0e3a0c0d22aba67ec3edfc8688a499fecf54e103" translate="yes" xml:space="preserve">
          <source>std.experimental</source>
          <target state="translated">std.experimental</target>
        </trans-unit>
        <trans-unit id="6c4fca2d800df1dd437e2df22c8deeae4a842b08" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator</source>
          <target state="translated">std.experimental.allocator</target>
        </trans-unit>
        <trans-unit id="4f0b37511b82c7a253f64d9877762dbd426c5f89" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks</source>
          <target state="translated">std.experimental.allocator.building_blocks</target>
        </trans-unit>
        <trans-unit id="118409357afbbf5f3ccb34fc7a993a8f9ed3921b" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks.affix_allocator</source>
          <target state="translated">std.experimental.allocator.building_blocks.affix_allocator</target>
        </trans-unit>
        <trans-unit id="60112c0b1c3d12c25ca4043a87dd4556a0a27f31" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks.aligned_block_list</source>
          <target state="translated">std.experimental.allocator.building_blocks.aligned_block_list</target>
        </trans-unit>
        <trans-unit id="5939dee48ee51b71b1de93675d949c97fb891751" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks.allocator_list</source>
          <target state="translated">std.experimental.allocator.building_blocks.allocator_list</target>
        </trans-unit>
        <trans-unit id="0e947b725624ce2967791ab81355f5ec2c50e23a" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks.ascending_page_allocator</source>
          <target state="translated">std.experimental.allocator.building_blocks.ascending_page_allocator</target>
        </trans-unit>
        <trans-unit id="7c58a72a4ff6f68d067b1f889991bc3176e899ef" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks.bitmapped_block</source>
          <target state="translated">std.experimental.allocator.building_blocks.bitmapped_block</target>
        </trans-unit>
        <trans-unit id="54bcd1640cd6f61504b599b89c09492da64bef20" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks.bucketizer</source>
          <target state="translated">std.experimental.allocator.building_blocks.bucketizer</target>
        </trans-unit>
        <trans-unit id="035235dfd9c8aa2c3caa07b49728dadcc032eb53" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks.fallback_allocator</source>
          <target state="translated">std.experimental.allocator.building_blocks.fallback_allocator</target>
        </trans-unit>
        <trans-unit id="a7e04f2b94bab082649d843228573df7e13c3814" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks.free_list</source>
          <target state="translated">std.experimental.allocator.building_blocks.free_list</target>
        </trans-unit>
        <trans-unit id="1688260b79715186457b038180dcd9e88bb2d9bd" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks.free_tree</source>
          <target state="translated">std.experimental.allocator.building_blocks.free_tree</target>
        </trans-unit>
        <trans-unit id="a74b36b04f6fa4d8e0449056ddfa30316c42104c" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks.kernighan_ritchie</source>
          <target state="translated">std.experimental.allocator.building_blocks.kernighan_ritchie</target>
        </trans-unit>
        <trans-unit id="7ac5891df11fac535bedc062d34518d6eda83878" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks.null_allocator</source>
          <target state="translated">std.experimental.allocator.building_blocks.null_allocator</target>
        </trans-unit>
        <trans-unit id="ed441c6b3b924cbd74bc7cdc92a62b3ff990bb00" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks.quantizer</source>
          <target state="translated">std.experimental.allocator.building_blocks.quantizer</target>
        </trans-unit>
        <trans-unit id="06bfb1cfa31d887ef3138fa977e05f73c976c000" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks.region</source>
          <target state="translated">std.experimental.allocator.building_blocks.region</target>
        </trans-unit>
        <trans-unit id="423184dab02b7bd9d7eef8ac9444a4970a78b3c3" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks.scoped_allocator</source>
          <target state="translated">std.experimental.allocator.building_blocks.scoped_allocator</target>
        </trans-unit>
        <trans-unit id="eb33823706a7ee8e3a958eb6b01514a77073dcf6" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks.segregator</source>
          <target state="translated">std.experimental.allocator.building_blocks.segregator</target>
        </trans-unit>
        <trans-unit id="e4ef851807768b4aec692e04144fc61bc71a5164" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.building_blocks.stats_collector</source>
          <target state="translated">std.experimental.allocator.building_blocks.stats_collector</target>
        </trans-unit>
        <trans-unit id="ac668a47abd904a1d90b0b26a66ac783152e5d31" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.common</source>
          <target state="translated">std.experimental.allocator.common</target>
        </trans-unit>
        <trans-unit id="a2027f74425ea8726371d29b111faa422f25ce57" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.gc_allocator</source>
          <target state="translated">std.experimental.allocator.gc_allocator</target>
        </trans-unit>
        <trans-unit id="71e5cf8e6226975b507d30d2b71e6f974916b5a1" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.mallocator</source>
          <target state="translated">std.experimental.allocator.mallocator</target>
        </trans-unit>
        <trans-unit id="f7831aa5cc46c1b48270f5549568a2bc4a46a3cb" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.mmap_allocator</source>
          <target state="translated">std.experimental.allocator.mmap_allocator</target>
        </trans-unit>
        <trans-unit id="2ad64afe8268833958b71a9e6ae9fb646a2da613" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.showcase</source>
          <target state="translated">std.experimental.allocator.showcase</target>
        </trans-unit>
        <trans-unit id="c34251c6de9ff755e104e80aa01bbcd1c48620a5" translate="yes" xml:space="preserve">
          <source>std.experimental.allocator.typed</source>
          <target state="translated">std.experimental.allocator.typed</target>
        </trans-unit>
        <trans-unit id="e22bd86a1097928df1a8b4ceb4bfc221cf90117c" translate="yes" xml:space="preserve">
          <source>std.experimental.checkedint</source>
          <target state="translated">std.experimental.checkedint</target>
        </trans-unit>
        <trans-unit id="221878729fb54f7409c3f92185cf8931f2484f88" translate="yes" xml:space="preserve">
          <source>std.experimental.logger</source>
          <target state="translated">std.experimental.logger</target>
        </trans-unit>
        <trans-unit id="43ecec22734961a2c1f973aa76a80142215f6eff" translate="yes" xml:space="preserve">
          <source>std.experimental.logger.core</source>
          <target state="translated">std.experimental.logger.core</target>
        </trans-unit>
        <trans-unit id="01a83a8749a0cff2fd66ca10c2f5328d99bd52a7" translate="yes" xml:space="preserve">
          <source>std.experimental.logger.filelogger</source>
          <target state="translated">std.experimental.logger.filelogger</target>
        </trans-unit>
        <trans-unit id="4ea9af3d720d270ded38cdfb223c74288c310f38" translate="yes" xml:space="preserve">
          <source>std.experimental.logger.multilogger</source>
          <target state="translated">std.experimental.logger.multilogger</target>
        </trans-unit>
        <trans-unit id="297a15f94fc7581c6005b9a32707255b618449a8" translate="yes" xml:space="preserve">
          <source>std.experimental.logger.nulllogger</source>
          <target state="translated">std.experimental.logger.nulllogger</target>
        </trans-unit>
        <trans-unit id="0aede1206467f727057f681369eac04186ddeaff" translate="yes" xml:space="preserve">
          <source>std.experimental.typecons</source>
          <target state="translated">std.experimental.typecons</target>
        </trans-unit>
        <trans-unit id="bbcf77d6b463b8a000aa9554df02fb3f262e56e4" translate="yes" xml:space="preserve">
          <source>std.file</source>
          <target state="translated">std.file</target>
        </trans-unit>
        <trans-unit id="46e4f7b4174c07e13fccc3c45e1ed84df2768bce" translate="yes" xml:space="preserve">
          <source>std.file.FileException</source>
          <target state="translated">std.file.FileException</target>
        </trans-unit>
        <trans-unit id="d91db180caa5daf99ddd3e26333dfd0c7f486a9e" translate="yes" xml:space="preserve">
          <source>std.file.copy</source>
          <target state="translated">std.file.copy</target>
        </trans-unit>
        <trans-unit id="bb574cae4639f21d96320a096ed7df019aefd16d" translate="yes" xml:space="preserve">
          <source>std.file.read</source>
          <target state="translated">std.file.read</target>
        </trans-unit>
        <trans-unit id="0553b000c85273d99306dc095d8456f8c029e4b6" translate="yes" xml:space="preserve">
          <source>std.format</source>
          <target state="translated">std.format</target>
        </trans-unit>
        <trans-unit id="b72e4f4c5aefd9185eeb87f5a04736d50bb1b59f" translate="yes" xml:space="preserve">
          <source>std.format.FormatSpec!char &lt;code&gt;fmt&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f74f3e08f31d88cea93be28f0ee1723f89ab16" translate="yes" xml:space="preserve">
          <source>std.functional</source>
          <target state="translated">std.functional</target>
        </trans-unit>
        <trans-unit id="229d30dbac25b0c43b4a1110901775b469afeb98" translate="yes" xml:space="preserve">
          <source>std.functional.not</source>
          <target state="translated">std.functional.not</target>
        </trans-unit>
        <trans-unit id="da4a7997f7175560b7ec8edb5959caa776c01da8" translate="yes" xml:space="preserve">
          <source>std.functional.pipe</source>
          <target state="translated">std.functional.pipe</target>
        </trans-unit>
        <trans-unit id="48e2e7dca22cf93bcb6ca2a82be8473b9d69a3fc" translate="yes" xml:space="preserve">
          <source>std.getopt</source>
          <target state="translated">std.getopt</target>
        </trans-unit>
        <trans-unit id="7d66a9fc9f5736ddc2ba6a38beeb2b80ea9fbc8d" translate="yes" xml:space="preserve">
          <source>std.json</source>
          <target state="translated">std.json</target>
        </trans-unit>
        <trans-unit id="05e6cf7097a5320b055631a808140c932335465f" translate="yes" xml:space="preserve">
          <source>std.math</source>
          <target state="translated">std.math</target>
        </trans-unit>
        <trans-unit id="61d59011ac3fb283634031c28535342bf7a95a66" translate="yes" xml:space="preserve">
          <source>std.math.E</source>
          <target state="translated">std.math.E</target>
        </trans-unit>
        <trans-unit id="b2ae92df483722e6d196b40012c6252fd3c4aa28" translate="yes" xml:space="preserve">
          <source>std.math.LN10</source>
          <target state="translated">std.math.LN10</target>
        </trans-unit>
        <trans-unit id="e12a21dc8f3ae547fadd15c6bb7be0935c344395" translate="yes" xml:space="preserve">
          <source>std.math.LN2</source>
          <target state="translated">std.math.LN2</target>
        </trans-unit>
        <trans-unit id="bf1cda960a1d759fe5f15642c521e4d0349b7bb0" translate="yes" xml:space="preserve">
          <source>std.math.LOG2</source>
          <target state="translated">std.math.LOG2</target>
        </trans-unit>
        <trans-unit id="aad69d5adfc4fc92fd3cb5c50784aa7b9f96fee4" translate="yes" xml:space="preserve">
          <source>std.math.NaN</source>
          <target state="translated">std.math.NaN</target>
        </trans-unit>
        <trans-unit id="5d1e6fca06779b774b635a7fa94432c4b5e66138" translate="yes" xml:space="preserve">
          <source>std.math.PI</source>
          <target state="translated">std.math.PI</target>
        </trans-unit>
        <trans-unit id="b3209a79df65f8ae2202ded9e6c11394e0a604f7" translate="yes" xml:space="preserve">
          <source>std.math.PI_2</source>
          <target state="translated">std.math.PI_2</target>
        </trans-unit>
        <trans-unit id="cafa05476cfdc4d507a85e4d11ef3b444828250a" translate="yes" xml:space="preserve">
          <source>std.math.PI_4</source>
          <target state="translated">std.math.PI_4</target>
        </trans-unit>
        <trans-unit id="51e7c9330655241637703abab7c8c23657850911" translate="yes" xml:space="preserve">
          <source>std.math.abs</source>
          <target state="translated">std.math.abs</target>
        </trans-unit>
        <trans-unit id="dbf1edf2115ea49b555b6f08dc8e74a63bef9eeb" translate="yes" xml:space="preserve">
          <source>std.math.acos</source>
          <target state="translated">std.math.acos</target>
        </trans-unit>
        <trans-unit id="8cc03b6dcffbc8315a7a3b751b92c08e191a079d" translate="yes" xml:space="preserve">
          <source>std.math.asin</source>
          <target state="translated">std.math.asin</target>
        </trans-unit>
        <trans-unit id="3f00eef566bdd227e9ee94f8f44d20a931a96fd5" translate="yes" xml:space="preserve">
          <source>std.math.atan</source>
          <target state="translated">std.math.atan</target>
        </trans-unit>
        <trans-unit id="5b7e05783dee49b8a8adc648293f560dc5b71f68" translate="yes" xml:space="preserve">
          <source>std.math.cbrt</source>
          <target state="translated">std.math.cbrt</target>
        </trans-unit>
        <trans-unit id="8b027a9edba14f29966e023c735ff98bd9206f8e" translate="yes" xml:space="preserve">
          <source>std.math.ceil</source>
          <target state="translated">std.math.ceil</target>
        </trans-unit>
        <trans-unit id="0b366cd13d58dcff000d77ebe911d488a3d24b93" translate="yes" xml:space="preserve">
          <source>std.math.cmp</source>
          <target state="translated">std.math.cmp</target>
        </trans-unit>
        <trans-unit id="8ecee47a0b466ece7dbba29ddf1611ee98693a37" translate="yes" xml:space="preserve">
          <source>std.math.cos</source>
          <target state="translated">std.math.cos</target>
        </trans-unit>
        <trans-unit id="91025fe6f330d9a756d4fc1e4d2e39b191b6e5dc" translate="yes" xml:space="preserve">
          <source>std.math.cosh</source>
          <target state="translated">std.math.cosh</target>
        </trans-unit>
        <trans-unit id="fa558286f750cf943533edb80d6424f78e767bdf" translate="yes" xml:space="preserve">
          <source>std.math.exp</source>
          <target state="translated">std.math.exp</target>
        </trans-unit>
        <trans-unit id="488657a71fefbf670a89ef36a4cd70fdd0cd9bcb" translate="yes" xml:space="preserve">
          <source>std.math.exp2</source>
          <target state="translated">std.math.exp2</target>
        </trans-unit>
        <trans-unit id="d7ad7d38d9f677982c25638fe642303d2c50f3ce" translate="yes" xml:space="preserve">
          <source>std.math.fabs</source>
          <target state="translated">std.math.fabs</target>
        </trans-unit>
        <trans-unit id="e049b1f058e60a32a61fea431c5395c76e8a2731" translate="yes" xml:space="preserve">
          <source>std.math.fdim</source>
          <target state="translated">std.math.fdim</target>
        </trans-unit>
        <trans-unit id="2170fd8c5f5b2cd58cf257c09a66f476b219eb6b" translate="yes" xml:space="preserve">
          <source>std.math.fma</source>
          <target state="translated">std.math.fma</target>
        </trans-unit>
        <trans-unit id="e73676d8d0b6ee11e9ea2695564c150a70555eb0" translate="yes" xml:space="preserve">
          <source>std.math.fmax</source>
          <target state="translated">std.math.fmax</target>
        </trans-unit>
        <trans-unit id="49ac35d82db53e320de3af4b706114df005d6c87" translate="yes" xml:space="preserve">
          <source>std.math.fmin</source>
          <target state="translated">std.math.fmin</target>
        </trans-unit>
        <trans-unit id="dea5f3883750bd847c2242b5e32c723d0b8828de" translate="yes" xml:space="preserve">
          <source>std.math.fmod</source>
          <target state="translated">std.math.fmod</target>
        </trans-unit>
        <trans-unit id="ed315b94b955c995c20e28fd5cd6cb7d654e37bd" translate="yes" xml:space="preserve">
          <source>std.math.log</source>
          <target state="translated">std.math.log</target>
        </trans-unit>
        <trans-unit id="90946dba7dc815a0723533c5235f7e1724a927e2" translate="yes" xml:space="preserve">
          <source>std.math.log2</source>
          <target state="translated">std.math.log2</target>
        </trans-unit>
        <trans-unit id="15e42abeb55b415848245870a4f6b39037d626ba" translate="yes" xml:space="preserve">
          <source>std.math.logb</source>
          <target state="translated">std.math.logb</target>
        </trans-unit>
        <trans-unit id="56732e40726646cfd4b4635f2939fde6dcb1cc56" translate="yes" xml:space="preserve">
          <source>std.math.modf</source>
          <target state="translated">std.math.modf</target>
        </trans-unit>
        <trans-unit id="1947852f10e8826dbcf9ccbe01e6dfc4d5f516ed" translate="yes" xml:space="preserve">
          <source>std.math.poly</source>
          <target state="translated">std.math.poly</target>
        </trans-unit>
        <trans-unit id="1134cc9f5988168a84cca6933f40a2324dc56a03" translate="yes" xml:space="preserve">
          <source>std.math.pow</source>
          <target state="translated">std.math.pow</target>
        </trans-unit>
        <trans-unit id="e7039834e42b69ffeace681697f792d269b0cf8b" translate="yes" xml:space="preserve">
          <source>std.math.rint</source>
          <target state="translated">std.math.rint</target>
        </trans-unit>
        <trans-unit id="0ffab147d0ed6172c65b005cb936686918d9b3f3" translate="yes" xml:space="preserve">
          <source>std.math.sgn</source>
          <target state="translated">std.math.sgn</target>
        </trans-unit>
        <trans-unit id="ebbc553a0d91fbe651f609b96b9bdbc7293d5d75" translate="yes" xml:space="preserve">
          <source>std.math.sin</source>
          <target state="translated">std.math.sin</target>
        </trans-unit>
        <trans-unit id="57b1af832337b06423526033325aa25afd2b90cf" translate="yes" xml:space="preserve">
          <source>std.math.sinh</source>
          <target state="translated">std.math.sinh</target>
        </trans-unit>
        <trans-unit id="4d102880170c44fb6b6fc845fb83a899b1aa0cd4" translate="yes" xml:space="preserve">
          <source>std.math.sqrt</source>
          <target state="translated">std.math.sqrt</target>
        </trans-unit>
        <trans-unit id="200a7dcc7917d097b1cbbc557df6d60d7bce2296" translate="yes" xml:space="preserve">
          <source>std.math.tan</source>
          <target state="translated">std.math.tan</target>
        </trans-unit>
        <trans-unit id="7f4e9136839961466f09bf9ea10b485f269fa1e8" translate="yes" xml:space="preserve">
          <source>std.math.tanh</source>
          <target state="translated">std.math.tanh</target>
        </trans-unit>
        <trans-unit id="85c93f51eeccf7a6a9800310e58276f039a8ef12" translate="yes" xml:space="preserve">
          <source>std.mathspecial</source>
          <target state="translated">std.mathspecial</target>
        </trans-unit>
        <trans-unit id="ccc5c2c01fda1dee850e4d21037950a44131edd8" translate="yes" xml:space="preserve">
          <source>std.mathspecial.beta</source>
          <target state="translated">std.mathspecial.beta</target>
        </trans-unit>
        <trans-unit id="20d972271e800f4c5b096e8652586df4d4069211" translate="yes" xml:space="preserve">
          <source>std.mathspecial.erf</source>
          <target state="translated">std.mathspecial.erf</target>
        </trans-unit>
        <trans-unit id="a5ff032954368a13da1a20b40a5a36b857b1e461" translate="yes" xml:space="preserve">
          <source>std.mathspecial.erfc</source>
          <target state="translated">std.mathspecial.erfc</target>
        </trans-unit>
        <trans-unit id="ae5ad64855a37438fdea7f7515adba5e7e9439a7" translate="yes" xml:space="preserve">
          <source>std.meta</source>
          <target state="translated">std.meta</target>
        </trans-unit>
        <trans-unit id="741bbcfb06e780fc46ec5d6cdcd743fe8a07d09b" translate="yes" xml:space="preserve">
          <source>std.mmfile</source>
          <target state="translated">std.mmfile</target>
        </trans-unit>
        <trans-unit id="9a8d5a480864a62e100c6e8221480aa868a9add6" translate="yes" xml:space="preserve">
          <source>std.net</source>
          <target state="translated">std.net</target>
        </trans-unit>
        <trans-unit id="c759767ac15362a4a0cd38c1911b6f4f4fdd4c68" translate="yes" xml:space="preserve">
          <source>std.net.curl</source>
          <target state="translated">std.net.curl</target>
        </trans-unit>
        <trans-unit id="d36e29d8b65fa3523ee872962d6548e2f27d21a8" translate="yes" xml:space="preserve">
          <source>std.net.isemail</source>
          <target state="translated">std.net.isemail</target>
        </trans-unit>
        <trans-unit id="1267ff2f54a4453e2d5e55a7c07b3db96bc3c2a8" translate="yes" xml:space="preserve">
          <source>std.numeric</source>
          <target state="translated">std.numeric</target>
        </trans-unit>
        <trans-unit id="0c1e3b89809ad225586c21c35b56d2f4a7c708dc" translate="yes" xml:space="preserve">
          <source>std.numeric.Fft</source>
          <target state="translated">std.numeric.Fft</target>
        </trans-unit>
        <trans-unit id="20f8c4e7506de31ff9a2c48faa2156ad38184f6f" translate="yes" xml:space="preserve">
          <source>std.numeric.fft</source>
          <target state="translated">std.numeric.fft</target>
        </trans-unit>
        <trans-unit id="a9394fa21caf022eecf5352d162c8d3689fdf65d" translate="yes" xml:space="preserve">
          <source>std.numeric.gcd</source>
          <target state="translated">std.numeric.gcd</target>
        </trans-unit>
        <trans-unit id="4c2fe44eccb74c7b24353ade21cb4dfedaba32ce" translate="yes" xml:space="preserve">
          <source>std.outbuffer</source>
          <target state="translated">std.outbuffer</target>
        </trans-unit>
        <trans-unit id="0f35878401c917b465dcdd5dd7454753f95d845d" translate="yes" xml:space="preserve">
          <source>std.parallelism</source>
          <target state="translated">std.parallelism</target>
        </trans-unit>
        <trans-unit id="d1b0c7900ec9f11b7493498c7aff4aec69dc4b85" translate="yes" xml:space="preserve">
          <source>std.parallelism.Task</source>
          <target state="translated">std.parallelism.Task</target>
        </trans-unit>
        <trans-unit id="baad7882ac63e7d61d8947c7979e2395fce9e74e" translate="yes" xml:space="preserve">
          <source>std.parallelism.task</source>
          <target state="translated">std.parallelism.task</target>
        </trans-unit>
        <trans-unit id="5ae30135c80512bdf161b168f3553e8040440d00" translate="yes" xml:space="preserve">
          <source>std.path</source>
          <target state="translated">std.path</target>
        </trans-unit>
        <trans-unit id="e76b50eb51222d124d831e7f6d6c7aaa8d8c67a6" translate="yes" xml:space="preserve">
          <source>std.process</source>
          <target state="translated">std.process</target>
        </trans-unit>
        <trans-unit id="cd53d2a118b636dc07f37b29f89e690c8df3243a" translate="yes" xml:space="preserve">
          <source>std.process.Pid</source>
          <target state="translated">std.process.Pid</target>
        </trans-unit>
        <trans-unit id="4e8adec3aa3ff02434e37ffbd378ae4ed82ec918" translate="yes" xml:space="preserve">
          <source>std.process.Pipe</source>
          <target state="translated">std.process.Pipe</target>
        </trans-unit>
        <trans-unit id="89922e6b150b63d0aecdf488ecbe19e789102d3a" translate="yes" xml:space="preserve">
          <source>std.process.kill</source>
          <target state="translated">std.process.kill</target>
        </trans-unit>
        <trans-unit id="995fb4194febd03c059043edfe90f45b8a4b9c5e" translate="yes" xml:space="preserve">
          <source>std.process.pipe</source>
          <target state="translated">std.process.pipe</target>
        </trans-unit>
        <trans-unit id="632ece83a52b6ef6f6d26b6ee442c6187c279e03" translate="yes" xml:space="preserve">
          <source>std.process.wait</source>
          <target state="translated">std.process.wait</target>
        </trans-unit>
        <trans-unit id="5123215a2270a289b31ed9dd72e783e02a670b49" translate="yes" xml:space="preserve">
          <source>std.random</source>
          <target state="translated">std.random</target>
        </trans-unit>
        <trans-unit id="224b1422ad975bc5c6c126ba05acdfc1b516ce63" translate="yes" xml:space="preserve">
          <source>std.random.dice</source>
          <target state="translated">std.random.dice</target>
        </trans-unit>
        <trans-unit id="97fa24a5620fd76dca57fd7cd9cbacfd35c4e222" translate="yes" xml:space="preserve">
          <source>std.range</source>
          <target state="translated">std.range</target>
        </trans-unit>
        <trans-unit id="744d524e6047ce691e36f51c48780b2db9da92b3" translate="yes" xml:space="preserve">
          <source>std.range.Flag</source>
          <target state="translated">std.range.Flag</target>
        </trans-unit>
        <trans-unit id="7804e412b234090209adaff907e22a0db4209768" translate="yes" xml:space="preserve">
          <source>std.range.No</source>
          <target state="translated">std.range.No</target>
        </trans-unit>
        <trans-unit id="e84f9e6d39115332ac587ad4523430a0d6ccc444" translate="yes" xml:space="preserve">
          <source>std.range.Take</source>
          <target state="translated">std.range.Take</target>
        </trans-unit>
        <trans-unit id="3b2576f4f682d1f506734eb07d3d8b3e43de1970" translate="yes" xml:space="preserve">
          <source>std.range.Yes</source>
          <target state="translated">std.range.Yes</target>
        </trans-unit>
        <trans-unit id="939833854e1b2afa04a3ad4f2bd6c318252201df" translate="yes" xml:space="preserve">
          <source>std.range.Zip</source>
          <target state="translated">std.range.Zip</target>
        </trans-unit>
        <trans-unit id="0a460a1eaba30a00e97afccb8d3bf76ecbbbb992" translate="yes" xml:space="preserve">
          <source>std.range.drop</source>
          <target state="translated">std.range.drop</target>
        </trans-unit>
        <trans-unit id="5d12ad826bf79ee30dab8bd1c2095144d889ef8a" translate="yes" xml:space="preserve">
          <source>std.range.interfaces</source>
          <target state="translated">std.range.interfaces</target>
        </trans-unit>
        <trans-unit id="58205e4a0e886eabf33da98ea150241a91187cad" translate="yes" xml:space="preserve">
          <source>std.range.iota</source>
          <target state="translated">std.range.iota</target>
        </trans-unit>
        <trans-unit id="27464b88b9bd541231c729be668ab65d2a8da742" translate="yes" xml:space="preserve">
          <source>std.range.only</source>
          <target state="translated">std.range.only</target>
        </trans-unit>
        <trans-unit id="78e86c163e624af530aedef7d9a1f89b6a559d90" translate="yes" xml:space="preserve">
          <source>std.range.primitives</source>
          <target state="translated">std.range.primitives</target>
        </trans-unit>
        <trans-unit id="42dc2fcaa6382d973189b475928dfddcec7214ad" translate="yes" xml:space="preserve">
          <source>std.range.tail</source>
          <target state="translated">std.range.tail</target>
        </trans-unit>
        <trans-unit id="41e92a64e60a56eb3f325c66b90d8abea45db360" translate="yes" xml:space="preserve">
          <source>std.range.take</source>
          <target state="translated">std.range.take</target>
        </trans-unit>
        <trans-unit id="321717ab98da5f285b19a3ecb7a608a66b66bbf7" translate="yes" xml:space="preserve">
          <source>std.range.tee</source>
          <target state="translated">std.range.tee</target>
        </trans-unit>
        <trans-unit id="8646168166c428b95ed9097d7201654e1b9716ab" translate="yes" xml:space="preserve">
          <source>std.range.zip</source>
          <target state="translated">std.range.zip</target>
        </trans-unit>
        <trans-unit id="3cf2c11eb623dddc7a553ed9a26d72f50c1c6b9f" translate="yes" xml:space="preserve">
          <source>std.regex</source>
          <target state="translated">std.regex</target>
        </trans-unit>
        <trans-unit id="272bf343913938b0a4ce96447ebfa1aadfd5ea97" translate="yes" xml:space="preserve">
          <source>std.regex operates on codepoint level, 'character' in this table denotes a single Unicode codepoint.</source>
          <target state="translated">std.regex opera a nivel de punto de código,&quot;carácter&quot; en esta tabla denota un único punto de código Unicode.</target>
        </trans-unit>
        <trans-unit id="4ed29d94cf59e89c797209d845c9d44041c68058" translate="yes" xml:space="preserve">
          <source>std.signals</source>
          <target state="translated">std.signals</target>
        </trans-unit>
        <trans-unit id="23342618f5adcf1469a63e0c29c3cf4502706fa0" translate="yes" xml:space="preserve">
          <source>std.socket</source>
          <target state="translated">std.socket</target>
        </trans-unit>
        <trans-unit id="5cf7bf523cc6a5de049edc0380dcae9217d464e7" translate="yes" xml:space="preserve">
          <source>std.stdint</source>
          <target state="translated">std.stdint</target>
        </trans-unit>
        <trans-unit id="bba95c9c3fc083fb36ad416d72d3a65278009ec0" translate="yes" xml:space="preserve">
          <source>std.stdio</source>
          <target state="translated">std.stdio</target>
        </trans-unit>
        <trans-unit id="15de5b2f68068b4342f01c12c95b14ae1ca70cc5" translate="yes" xml:space="preserve">
          <source>std.stdio.File</source>
          <target state="translated">std.stdio.File</target>
        </trans-unit>
        <trans-unit id="324c4f43f5ab234dd5320d689c23dfd47524a781" translate="yes" xml:space="preserve">
          <source>std.string</source>
          <target state="translated">std.string</target>
        </trans-unit>
        <trans-unit id="595579a7a44cfe3fc72b18541595b8c06f51d668" translate="yes" xml:space="preserve">
          <source>std.string.chop</source>
          <target state="translated">std.string.chop</target>
        </trans-unit>
        <trans-unit id="14df3d5be293012e93a3ec5450db3921ba34911f" translate="yes" xml:space="preserve">
          <source>std.string.cmp</source>
          <target state="translated">std.string.cmp</target>
        </trans-unit>
        <trans-unit id="c62b67496b2cde66faf2e80049d2c626a928b4c4" translate="yes" xml:space="preserve">
          <source>std.string.icmp</source>
          <target state="translated">std.string.icmp</target>
        </trans-unit>
        <trans-unit id="a4e15feb8c051f830e10baeacc030e6d62e1aec6" translate="yes" xml:space="preserve">
          <source>std.string.join</source>
          <target state="translated">std.string.join</target>
        </trans-unit>
        <trans-unit id="70b35b158961217cf038ed17031e116b16585418" translate="yes" xml:space="preserve">
          <source>std.string.succ</source>
          <target state="translated">std.string.succ</target>
        </trans-unit>
        <trans-unit id="16eae36065a4bbcb22f6c550d0f84eb51adb236c" translate="yes" xml:space="preserve">
          <source>std.string.tr</source>
          <target state="translated">std.string.tr</target>
        </trans-unit>
        <trans-unit id="7f5fd141329ee6472373cd9a76a89012a5bafb28" translate="yes" xml:space="preserve">
          <source>std.string.wrap</source>
          <target state="translated">std.string.wrap</target>
        </trans-unit>
        <trans-unit id="e2ec7189cac8dbc680c53d7c384528a1b3daedba" translate="yes" xml:space="preserve">
          <source>std.system</source>
          <target state="translated">std.system</target>
        </trans-unit>
        <trans-unit id="cf7172dbd26a5cdb4228255052bea89a020e2954" translate="yes" xml:space="preserve">
          <source>std.system.OS</source>
          <target state="translated">std.system.OS</target>
        </trans-unit>
        <trans-unit id="8e6d16f3b752ea9a42adeaba3b36e25b2a194b69" translate="yes" xml:space="preserve">
          <source>std.system.os</source>
          <target state="translated">std.system.os</target>
        </trans-unit>
        <trans-unit id="8c21fb3b93d815cf4724ca5047a87f3aca9d88db" translate="yes" xml:space="preserve">
          <source>std.traits</source>
          <target state="translated">std.traits</target>
        </trans-unit>
        <trans-unit id="4e847ef5670dd02ac1930aef6ad5a52aefbc8659" translate="yes" xml:space="preserve">
          <source>std.typecons</source>
          <target state="translated">std.typecons</target>
        </trans-unit>
        <trans-unit id="a81cd4435b8db38735b59cdf0f33cc13f3dfeb43" translate="yes" xml:space="preserve">
          <source>std.typecons.Flag</source>
          <target state="translated">std.typecons.Flag</target>
        </trans-unit>
        <trans-unit id="f07cd35e6e948ea1ae787bf9735cb2750df84ffd" translate="yes" xml:space="preserve">
          <source>std.typecons.No</source>
          <target state="translated">std.typecons.No</target>
        </trans-unit>
        <trans-unit id="447d9ac56740b5668e668a27f951f6e6b9708888" translate="yes" xml:space="preserve">
          <source>std.typecons.Yes</source>
          <target state="translated">std.typecons.Yes</target>
        </trans-unit>
        <trans-unit id="a0dc7b343fcd0f4181881b6b511e3e791cecdba6" translate="yes" xml:space="preserve">
          <source>std.typecons.wrap</source>
          <target state="translated">std.typecons.wrap</target>
        </trans-unit>
        <trans-unit id="8c13a789551485a4f7b1acfb8a381e93ee56ac50" translate="yes" xml:space="preserve">
          <source>std.uni</source>
          <target state="translated">std.uni</target>
        </trans-unit>
        <trans-unit id="4e541e99b2b81b5df213170a9403ba0fe9cb2a98" translate="yes" xml:space="preserve">
          <source>std.uni.NFC</source>
          <target state="translated">std.uni.NFC</target>
        </trans-unit>
        <trans-unit id="0df4a6605d5e84daa7fef384f85d619e29db527a" translate="yes" xml:space="preserve">
          <source>std.uni.NFD</source>
          <target state="translated">std.uni.NFD</target>
        </trans-unit>
        <trans-unit id="bec5a32d3b2bbb799228904eeaa5293810b482ea" translate="yes" xml:space="preserve">
          <source>std.uni.NFKC</source>
          <target state="translated">std.uni.NFKC</target>
        </trans-unit>
        <trans-unit id="4ffd1a4f6fccfacbc1234e58073f180ad2e18ced" translate="yes" xml:space="preserve">
          <source>std.uni.NFKD</source>
          <target state="translated">std.uni.NFKD</target>
        </trans-unit>
        <trans-unit id="a0197f3b26cdc2186f96ba0fe3c081fe1cc87b88" translate="yes" xml:space="preserve">
          <source>std.uni.icmp</source>
          <target state="translated">std.uni.icmp</target>
        </trans-unit>
        <trans-unit id="78baa86ada93c4214599aa95c54d63e20b21f240" translate="yes" xml:space="preserve">
          <source>std.uri</source>
          <target state="translated">std.uri</target>
        </trans-unit>
        <trans-unit id="4afa182f98fb3a0d86f5bfec14062735dd20910c" translate="yes" xml:space="preserve">
          <source>std.utf</source>
          <target state="translated">std.utf</target>
        </trans-unit>
        <trans-unit id="225e3dd1adbf0acfd183fbf223c212dec82e9de9" translate="yes" xml:space="preserve">
          <source>std.uuid</source>
          <target state="translated">std.uuid</target>
        </trans-unit>
        <trans-unit id="430adfffec893f1b6b4c91fab2019018ec9c33f2" translate="yes" xml:space="preserve">
          <source>std.uuid.UUID</source>
          <target state="translated">std.uuid.UUID</target>
        </trans-unit>
        <trans-unit id="d76124e26cdc740d53466c9c3a4b557b6ba9430b" translate="yes" xml:space="preserve">
          <source>std.variant</source>
          <target state="translated">std.variant</target>
        </trans-unit>
        <trans-unit id="15e763f0c519c67a6ddbd6ea69a5516920816bc0" translate="yes" xml:space="preserve">
          <source>std.windows</source>
          <target state="translated">std.windows</target>
        </trans-unit>
        <trans-unit id="8dadddc5c218045277635fee3dd0d735df5e9b17" translate="yes" xml:space="preserve">
          <source>std.windows.charset</source>
          <target state="translated">std.windows.charset</target>
        </trans-unit>
        <trans-unit id="96b3ee241432f46794046984833998741b12d7c9" translate="yes" xml:space="preserve">
          <source>std.windows.syserror</source>
          <target state="translated">std.windows.syserror</target>
        </trans-unit>
        <trans-unit id="01dd1949ccc8a86726ce7e8c43e230e0d208be08" translate="yes" xml:space="preserve">
          <source>std.xml</source>
          <target state="translated">std.xml</target>
        </trans-unit>
        <trans-unit id="5367604fa6eee1413cba469bbabb8add02be7c87" translate="yes" xml:space="preserve">
          <source>std.xml.Item</source>
          <target state="translated">std.xml.Item</target>
        </trans-unit>
        <trans-unit id="178e5863790f6f1bd057d203d0ca3e3aeba73e44" translate="yes" xml:space="preserve">
          <source>std.xml.Tag</source>
          <target state="translated">std.xml.Tag</target>
        </trans-unit>
        <trans-unit id="788329214259f20bdfef12d45c1450203dc0affc" translate="yes" xml:space="preserve">
          <source>std.xml.Text</source>
          <target state="translated">std.xml.Text</target>
        </trans-unit>
        <trans-unit id="455a45c10eac95fbeb9d5f9c0eec4ec9d77caa0d" translate="yes" xml:space="preserve">
          <source>std.zip</source>
          <target state="translated">std.zip</target>
        </trans-unit>
        <trans-unit id="f4b8c69ec86aa50b7977e3225bb6d2c96bb9d0bc" translate="yes" xml:space="preserve">
          <source>std.zlib</source>
          <target state="translated">std.zlib</target>
        </trans-unit>
        <trans-unit id="e406470a84589bc7852a8d611531c1c99e09c0c3" translate="yes" xml:space="preserve">
          <source>std/algorithm/comparison.d</source>
          <target state="translated">std/algorithm/comparison.d</target>
        </trans-unit>
        <trans-unit id="91b113da15ad3da637bca21499a7ab8f17895ac7" translate="yes" xml:space="preserve">
          <source>std/algorithm/iteration.d</source>
          <target state="translated">std/algorithm/iteration.d</target>
        </trans-unit>
        <trans-unit id="9c6c8e12d593570739a8e1743e21b35f52ded01c" translate="yes" xml:space="preserve">
          <source>std/algorithm/mutation.d</source>
          <target state="translated">std/algorithm/mutation.d</target>
        </trans-unit>
        <trans-unit id="9aeecf79b281a4623d59e5e00df6a05bfebd46c6" translate="yes" xml:space="preserve">
          <source>std/algorithm/package.d</source>
          <target state="translated">std/algorithm/package.d</target>
        </trans-unit>
        <trans-unit id="443ffe5d235f2d699f509fcec6687d01cb405815" translate="yes" xml:space="preserve">
          <source>std/algorithm/searching.d</source>
          <target state="translated">std/algorithm/searching.d</target>
        </trans-unit>
        <trans-unit id="3a92362d8cba5059f8072a76e148dce273026b77" translate="yes" xml:space="preserve">
          <source>std/algorithm/setops.d</source>
          <target state="translated">std/algorithm/setops.d</target>
        </trans-unit>
        <trans-unit id="260e4901921cc00b7f3e418bfd97ba7415ee6d2e" translate="yes" xml:space="preserve">
          <source>std/algorithm/sorting.d</source>
          <target state="translated">std/algorithm/sorting.d</target>
        </trans-unit>
        <trans-unit id="984112afcb509427075b7077e28fb46f0b9a18a4" translate="yes" xml:space="preserve">
          <source>std/array.d</source>
          <target state="translated">std/array.d</target>
        </trans-unit>
        <trans-unit id="18af05dce5bfa51182b8e319a833c1ebd02219e2" translate="yes" xml:space="preserve">
          <source>std/ascii.d</source>
          <target state="translated">std/ascii.d</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
