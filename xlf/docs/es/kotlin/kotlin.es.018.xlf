<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="kotlin">
    <body>
      <group id="kotlin">
        <trans-unit id="fb96fdd73420dc05c701eb6e0838bd95d38438a9" translate="yes" xml:space="preserve">
          <source>Marks the annotated declaration as deprecated.</source>
          <target state="translated">Marca la declaración anotada como obsoleta.</target>
        </trans-unit>
        <trans-unit id="7d98c397e94ce7053df95bf37d1da503360432a5" translate="yes" xml:space="preserve">
          <source>Marks the annotated declaration as deprecated. In contrast to &lt;a href=&quot;-deprecated/index#kotlin.Deprecated&quot;&gt;Deprecated&lt;/a&gt;, severity of the reported diagnostic is not a constant value, but differs depending on the API version of the usage (the value of the &lt;code&gt;-api-version&lt;/code&gt; argument when compiling the module where the usage is located). If the API version is greater or equal than &lt;a href=&quot;-deprecated-since-kotlin/hidden-since#kotlin.DeprecatedSinceKotlin%24hiddenSince&quot;&gt;hiddenSince&lt;/a&gt;, the declaration will not be accessible from the code (as if it was deprecated with level &lt;a href=&quot;-deprecation-level/-h-i-d-d-e-n#kotlin.DeprecationLevel.HIDDEN&quot;&gt;DeprecationLevel.HIDDEN&lt;/a&gt;), otherwise if the API version is greater or equal than &lt;a href=&quot;-deprecated-since-kotlin/error-since#kotlin.DeprecatedSinceKotlin%24errorSince&quot;&gt;errorSince&lt;/a&gt;, the usage will be marked as an error (as with &lt;a href=&quot;-deprecation-level/-e-r-r-o-r#kotlin.DeprecationLevel.ERROR&quot;&gt;DeprecationLevel.ERROR&lt;/a&gt;), otherwise if the API version is greater or equal than &lt;a href=&quot;-deprecated-since-kotlin/warning-since#kotlin.DeprecatedSinceKotlin%24warningSince&quot;&gt;warningSince&lt;/a&gt;, the usage will be marked as a warning (as with &lt;a href=&quot;-deprecation-level/-w-a-r-n-i-n-g#kotlin.DeprecationLevel.WARNING&quot;&gt;DeprecationLevel.WARNING&lt;/a&gt;), otherwise the annotation is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f9c066c4fb389bf5a2648a88b9da8d8a5af0b6" translate="yes" xml:space="preserve">
          <source>Marks the annotated declaration as deprecated. In contrast to &lt;a href=&quot;../-deprecated/index#kotlin.Deprecated&quot;&gt;Deprecated&lt;/a&gt;, severity of the reported diagnostic is not a constant value, but differs depending on the API version of the usage (the value of the &lt;code&gt;-api-version&lt;/code&gt; argument when compiling the module where the usage is located). If the API version is greater or equal than &lt;a href=&quot;../-deprecated-since-kotlin/hidden-since#kotlin.DeprecatedSinceKotlin%24hiddenSince&quot;&gt;hiddenSince&lt;/a&gt;, the declaration will not be accessible from the code (as if it was deprecated with level &lt;a href=&quot;../-deprecation-level/-h-i-d-d-e-n#kotlin.DeprecationLevel.HIDDEN&quot;&gt;DeprecationLevel.HIDDEN&lt;/a&gt;), otherwise if the API version is greater or equal than &lt;a href=&quot;../-deprecated-since-kotlin/error-since#kotlin.DeprecatedSinceKotlin%24errorSince&quot;&gt;errorSince&lt;/a&gt;, the usage will be marked as an error (as with &lt;a href=&quot;../-deprecation-level/-e-r-r-o-r#kotlin.DeprecationLevel.ERROR&quot;&gt;DeprecationLevel.ERROR&lt;/a&gt;), otherwise if the API version is greater or equal than &lt;a href=&quot;../-deprecated-since-kotlin/warning-since#kotlin.DeprecatedSinceKotlin%24warningSince&quot;&gt;warningSince&lt;/a&gt;, the usage will be marked as a warning (as with &lt;a href=&quot;../-deprecation-level/-w-a-r-n-i-n-g#kotlin.DeprecationLevel.WARNING&quot;&gt;DeprecationLevel.WARNING&lt;/a&gt;), otherwise the annotation is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdea1abd24e2fec8414716149ca5d119c8a1c72d" translate="yes" xml:space="preserve">
          <source>Marks the annotated declaration as deprecated. In contrast to &lt;a href=&quot;../-deprecated/index#kotlin.Deprecated&quot;&gt;Deprecated&lt;/a&gt;, severity of the reported diagnostic is not a constant value, but differs depending on the API version of the usage (the value of the &lt;code&gt;-api-version&lt;/code&gt; argument when compiling the module where the usage is located). If the API version is greater or equal than &lt;a href=&quot;hidden-since#kotlin.DeprecatedSinceKotlin%24hiddenSince&quot;&gt;hiddenSince&lt;/a&gt;, the declaration will not be accessible from the code (as if it was deprecated with level &lt;a href=&quot;../-deprecation-level/-h-i-d-d-e-n#kotlin.DeprecationLevel.HIDDEN&quot;&gt;DeprecationLevel.HIDDEN&lt;/a&gt;), otherwise if the API version is greater or equal than &lt;a href=&quot;error-since#kotlin.DeprecatedSinceKotlin%24errorSince&quot;&gt;errorSince&lt;/a&gt;, the usage will be marked as an error (as with &lt;a href=&quot;../-deprecation-level/-e-r-r-o-r#kotlin.DeprecationLevel.ERROR&quot;&gt;DeprecationLevel.ERROR&lt;/a&gt;), otherwise if the API version is greater or equal than &lt;a href=&quot;warning-since#kotlin.DeprecatedSinceKotlin%24warningSince&quot;&gt;warningSince&lt;/a&gt;, the usage will be marked as a warning (as with &lt;a href=&quot;../-deprecation-level/-w-a-r-n-i-n-g#kotlin.DeprecationLevel.WARNING&quot;&gt;DeprecationLevel.WARNING&lt;/a&gt;), otherwise the annotation is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849bb03707fb20c75be09bfab7269367951a2e2c" translate="yes" xml:space="preserve">
          <source>MatchGroup</source>
          <target state="translated">MatchGroup</target>
        </trans-unit>
        <trans-unit id="dca62bbed6a25edcb571ec2b8d04d93aa72d3b21" translate="yes" xml:space="preserve">
          <source>MatchGroupCollection</source>
          <target state="translated">MatchGroupCollection</target>
        </trans-unit>
        <trans-unit id="40ee7a3cd8703b1f6d5c39fe97ef7bdbddff913a" translate="yes" xml:space="preserve">
          <source>MatchNamedGroupCollection</source>
          <target state="translated">MatchNamedGroupCollection</target>
        </trans-unit>
        <trans-unit id="e5e10479d7e48ed2ed4d8e1de8fc8b3e40fd01eb" translate="yes" xml:space="preserve">
          <source>MatchResult</source>
          <target state="translated">MatchResult</target>
        </trans-unit>
        <trans-unit id="3edf0df49942da6d11a1a217e4d3af4a5a8e64f2" translate="yes" xml:space="preserve">
          <source>Math</source>
          <target state="translated">Math</target>
        </trans-unit>
        <trans-unit id="386de788c6f8f526adcdfcc95893611a4f0f2a05" translate="yes" xml:space="preserve">
          <source>Math operations in kotlin-stdlib</source>
          <target state="translated">Operaciones matemáticas en kotlin-stdlib</target>
        </trans-unit>
        <trans-unit id="0ada0ff6418289ab78ea96388455f7b6c8654ca4" translate="yes" xml:space="preserve">
          <source>Mathematical functions and constants.</source>
          <target state="translated">Funciones y constantes matemáticas.</target>
        </trans-unit>
        <trans-unit id="6af37177e65c1a71744a7cb984d51ba2f07f5140" translate="yes" xml:space="preserve">
          <source>Maven</source>
          <target state="translated">Maven</target>
        </trans-unit>
        <trans-unit id="b522db69b358e8fce0593518fbe3b0d7db36d2d4" translate="yes" xml:space="preserve">
          <source>Maven configuration</source>
          <target state="translated">Configuración Maven</target>
        </trans-unit>
        <trans-unit id="71edee9db1ff5b8ff75c1bfdc3477115c9cadb2f" translate="yes" xml:space="preserve">
          <source>Max value</source>
          <target state="translated">Valor máximo</target>
        </trans-unit>
        <trans-unit id="6f26174801b4fb329b7b4754a956851117212509" translate="yes" xml:space="preserve">
          <source>Maximum value a version component can have, a constant value 255.</source>
          <target state="translated">El valor máximo que puede tener un componente de la versión,un valor constante 255.</target>
        </trans-unit>
        <trans-unit id="258389887a049fd789e8d5c0611eb448fb932cc4" translate="yes" xml:space="preserve">
          <source>MediaDeviceInfo</source>
          <target state="translated">MediaDeviceInfo</target>
        </trans-unit>
        <trans-unit id="6134c6977e97c143c3e4282792a6fe2d4e4a8d3d" translate="yes" xml:space="preserve">
          <source>MediaDeviceKind</source>
          <target state="translated">MediaDeviceKind</target>
        </trans-unit>
        <trans-unit id="42773779c7725a712497e1de443b3526292ee7c5" translate="yes" xml:space="preserve">
          <source>MediaEncryptedEventInit</source>
          <target state="translated">MediaEncryptedEventInit</target>
        </trans-unit>
        <trans-unit id="5e9d9c4423f0ac299fce82e9517c3425a061ddb4" translate="yes" xml:space="preserve">
          <source>MediaError</source>
          <target state="translated">MediaError</target>
        </trans-unit>
        <trans-unit id="edc3252539f2977307059639af16d93b62f83e89" translate="yes" xml:space="preserve">
          <source>MediaKeyMessageEventInit</source>
          <target state="translated">MediaKeyMessageEventInit</target>
        </trans-unit>
        <trans-unit id="0f9940df0a60e74d9f81259c874d8fc5cf90b250" translate="yes" xml:space="preserve">
          <source>MediaKeyMessageType</source>
          <target state="translated">MediaKeyMessageType</target>
        </trans-unit>
        <trans-unit id="f6d29b82c487515b0ed4941f8440be7338b9cdd9" translate="yes" xml:space="preserve">
          <source>MediaKeySessionType</source>
          <target state="translated">MediaKeySessionType</target>
        </trans-unit>
        <trans-unit id="6a72b850014dcb01724de3815824e738f2a289e8" translate="yes" xml:space="preserve">
          <source>MediaKeyStatus</source>
          <target state="translated">MediaKeyStatus</target>
        </trans-unit>
        <trans-unit id="06b28afbee38c4e57833221839b448745bf0272f" translate="yes" xml:space="preserve">
          <source>MediaKeyStatusMap</source>
          <target state="translated">MediaKeyStatusMap</target>
        </trans-unit>
        <trans-unit id="334845d31e06fd797025ffec6b0e947ced1eee27" translate="yes" xml:space="preserve">
          <source>MediaKeySystemAccess</source>
          <target state="translated">MediaKeySystemAccess</target>
        </trans-unit>
        <trans-unit id="13b324678ad4a42d1cf13183ec5703ba89067f0a" translate="yes" xml:space="preserve">
          <source>MediaKeySystemConfiguration</source>
          <target state="translated">MediaKeySystemConfiguration</target>
        </trans-unit>
        <trans-unit id="261d7bee8c2a3f2851483973000c454b56a6d2f7" translate="yes" xml:space="preserve">
          <source>MediaKeySystemMediaCapability</source>
          <target state="translated">MediaKeySystemMediaCapability</target>
        </trans-unit>
        <trans-unit id="04bf6109f69f0241e714dae0a1bff955d8bb5503" translate="yes" xml:space="preserve">
          <source>MediaKeys</source>
          <target state="translated">MediaKeys</target>
        </trans-unit>
        <trans-unit id="0204337f58a70624acab6d8767bba63e305a6319" translate="yes" xml:space="preserve">
          <source>MediaKeysRequirement</source>
          <target state="translated">MediaKeysRequirement</target>
        </trans-unit>
        <trans-unit id="f30d349fe509ab2452d9ff5db776c749eb21115d" translate="yes" xml:space="preserve">
          <source>MediaList</source>
          <target state="translated">MediaList</target>
        </trans-unit>
        <trans-unit id="fb2396dadb0919fa005cf6b516e3b748e938e528" translate="yes" xml:space="preserve">
          <source>MediaProvider</source>
          <target state="translated">MediaProvider</target>
        </trans-unit>
        <trans-unit id="5264b922a464ea5a9f88144f8b72f9626c1db269" translate="yes" xml:space="preserve">
          <source>MediaQueryListEventInit</source>
          <target state="translated">MediaQueryListEventInit</target>
        </trans-unit>
        <trans-unit id="70dcd56d399d2e12aa2533dd163497d5ff6362fd" translate="yes" xml:space="preserve">
          <source>MediaStreamConstraints</source>
          <target state="translated">MediaStreamConstraints</target>
        </trans-unit>
        <trans-unit id="c74168a0d6b99bbcdaff6005366c94dc042ddd9e" translate="yes" xml:space="preserve">
          <source>MediaStreamTrackEventInit</source>
          <target state="translated">MediaStreamTrackEventInit</target>
        </trans-unit>
        <trans-unit id="f6268479064052c02a6fe8b1b48bf8011df3d770" translate="yes" xml:space="preserve">
          <source>MediaStreamTrackState</source>
          <target state="translated">MediaStreamTrackState</target>
        </trans-unit>
        <trans-unit id="10f95ad72ba533133d954c473a07f3f67fdac829" translate="yes" xml:space="preserve">
          <source>MediaTrackCapabilities</source>
          <target state="translated">MediaTrackCapabilities</target>
        </trans-unit>
        <trans-unit id="bb47b7b2d8ef429be15b6e0dad452a4f8b48f974" translate="yes" xml:space="preserve">
          <source>MediaTrackConstraintSet</source>
          <target state="translated">MediaTrackConstraintSet</target>
        </trans-unit>
        <trans-unit id="8054e6c6485f93790f303ed390e1cba5c2743911" translate="yes" xml:space="preserve">
          <source>MediaTrackConstraints</source>
          <target state="translated">MediaTrackConstraints</target>
        </trans-unit>
        <trans-unit id="43ae2bb87ab91212c29f9b3badd22fa54472dcc6" translate="yes" xml:space="preserve">
          <source>MediaTrackSettings</source>
          <target state="translated">MediaTrackSettings</target>
        </trans-unit>
        <trans-unit id="7e941f3e34c1287f6e0e3fa6973fe4daf92e6bf1" translate="yes" xml:space="preserve">
          <source>MediaTrackSupportedConstraints</source>
          <target state="translated">MediaTrackSupportedConstraints</target>
        </trans-unit>
        <trans-unit id="0821090b6a2b08e3c2088bad74f0cd7597a2e61c" translate="yes" xml:space="preserve">
          <source>MemScope</source>
          <target state="translated">MemScope</target>
        </trans-unit>
        <trans-unit id="13754495aca84346deb594b0d23bc4d086989ee4" translate="yes" xml:space="preserve">
          <source>Member Functions</source>
          <target state="translated">Funciones de los miembros</target>
        </trans-unit>
        <trans-unit id="2675e87b859fb2d5772f0ea8bf6c203afefdde62" translate="yes" xml:space="preserve">
          <source>Member function names should use &lt;code&gt;lowerCamelCase&lt;/code&gt; instead of &lt;code&gt;snake_case&lt;/code&gt;.</source>
          <target state="translated">Los nombres de las funciones miembro deben usar &lt;code&gt;lowerCamelCase&lt;/code&gt; en lugar de &lt;code&gt;snake_case&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b217f7514e4e69fd38aa7c54a821e91e41f619c3" translate="yes" xml:space="preserve">
          <source>Member functions</source>
          <target state="translated">Funciones de los miembros</target>
        </trans-unit>
        <trans-unit id="d58072c4501a38b0ae1c8099bd6324750503224c" translate="yes" xml:space="preserve">
          <source>Member functions are called with dot notation:</source>
          <target state="translated">Las funciones de los miembros se llaman con notación de puntos:</target>
        </trans-unit>
        <trans-unit id="90302bd1ef8edadba09a04d671c6ada71d5d8a46" translate="yes" xml:space="preserve">
          <source>Member functions define operations that are essential for a collection type. For example, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-collection/index&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; contains the function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-collection/is-empty&quot;&gt;&lt;code&gt;isEmpty()&lt;/code&gt;&lt;/a&gt; for checking its emptiness; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list/index&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; contains &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list/get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; for index access to elements, and so on.</source>
          <target state="translated">Las funciones miembro definen operaciones que son esenciales para un tipo de colecci&amp;oacute;n. Por ejemplo, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-collection/index&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt; contiene la funci&amp;oacute;n &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-collection/is-empty&quot;&gt; &lt;code&gt;isEmpty()&lt;/code&gt; &lt;/a&gt; para verificar su vac&amp;iacute;o; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list/index&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; contiene &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list/get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; para el acceso de &amp;iacute;ndice a los elementos, y as&amp;iacute; sucesivamente.</target>
        </trans-unit>
        <trans-unit id="a569ddca50a19b2205ceb3e1f59db2a7ba968aef" translate="yes" xml:space="preserve">
          <source>Member properties and member functions inside a generic class may for the most part use the class' generic type parameters as if they were ordinary types, without having to redeclare them. It is also possible to make functions that take more generic parameters than the class does, and to make generic functions inside nongeneric classes, and to make generic top-level functions (which is what we'll do in the next example). Note the different placement of the generic type parameter in generic function declarations:</source>
          <target state="translated">Las propiedades y funciones de los miembros dentro de una clase genérica pueden,en su mayoría,utilizar los parámetros del tipo genérico de la clase como si fueran tipos ordinarios,sin tener que redeclararlos.También es posible hacer funciones que toman más parámetros genéricos que los de la clase,y hacer funciones genéricas dentro de clases no genéricas,y hacer funciones genéricas de nivel superior (que es lo que haremos en el siguiente ejemplo).Obsérvese la diferente ubicación del parámetro de tipo genérico en las declaraciones de las funciones genéricas:</target>
        </trans-unit>
        <trans-unit id="74971806b05c2768bdffa67bcc7b89b958d7edea" translate="yes" xml:space="preserve">
          <source>Member references and reflection</source>
          <target state="translated">Referencias y reflexiones de los miembros</target>
        </trans-unit>
        <trans-unit id="10aac04b8647c134bc4873cf9a0d33a0bd4048e1" translate="yes" xml:space="preserve">
          <source>MemberAt</source>
          <target state="translated">MemberAt</target>
        </trans-unit>
        <trans-unit id="1cb449c1126609b4b41e1d87f65f0d7cd19b49b9" translate="yes" xml:space="preserve">
          <source>Members</source>
          <target state="translated">Members</target>
        </trans-unit>
        <trans-unit id="2fd5b3fb4a679664c9a47a448257d9fa802a22f3" translate="yes" xml:space="preserve">
          <source>Members of Objective-C categories and Swift extensions are imported to Kotlin as extensions. That's why these declarations can't be overridden in Kotlin. And the extension initializers aren't available as Kotlin constructors.</source>
          <target state="translated">Los miembros de las categorías de Objetivo-C y las extensiones Swift se importan a Kotlin como extensiones.Por eso estas declaraciones no pueden ser anuladas en Kotlin.Y los inicializadores de las extensiones no están disponibles como constructores de Kotlin.</target>
        </trans-unit>
        <trans-unit id="c590aa47cb148126a7aed2e0252e6e56de2e1fb5" translate="yes" xml:space="preserve">
          <source>Members of the companion object can be called by using simply the class name as the qualifier:</source>
          <target state="translated">Los miembros del objeto compañero pueden ser llamados usando simplemente el nombre de la clase como calificador:</target>
        </trans-unit>
        <trans-unit id="b61b70edbe3a97caa2ecb5ac100b7aca209a1cba" translate="yes" xml:space="preserve">
          <source>Memory allocation</source>
          <target state="translated">Asignación de memoria</target>
        </trans-unit>
        <trans-unit id="0c2ee25c3007f8df17e0050402341b2f4ae697bc" translate="yes" xml:space="preserve">
          <source>Memory model binary was compiled with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73a4635af37ee3ef43681ca08ff16f60452ecfe" translate="yes" xml:space="preserve">
          <source>Memory model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69164a09919e64cc770d2e92a315c7be5fe9ce87" translate="yes" xml:space="preserve">
          <source>MemoryModel</source>
          <target state="translated">MemoryModel</target>
        </trans-unit>
        <trans-unit id="2a2bb3d6a7f5790d759cba72823f3811d734fe09" translate="yes" xml:space="preserve">
          <source>MessageChannel</source>
          <target state="translated">MessageChannel</target>
        </trans-unit>
        <trans-unit id="ccca7aad0aa3bbb87c9ea30bfca4cd685ee282a6" translate="yes" xml:space="preserve">
          <source>MessageEventInit</source>
          <target state="translated">MessageEventInit</target>
        </trans-unit>
        <trans-unit id="da50feb28afa8ee6b84decde6712247ff2db1356" translate="yes" xml:space="preserve">
          <source>Metacharacters or escape sequences in the input sequence will be given no special meaning.</source>
          <target state="translated">Los metacharacteres o secuencias de escape en la secuencia de entrada no tendrán un significado especial.</target>
        </trans-unit>
        <trans-unit id="251edc0eb5a820646bda4e103f0f007fd55321f3" translate="yes" xml:space="preserve">
          <source>Metadata</source>
          <target state="translated">Metadata</target>
        </trans-unit>
        <trans-unit id="00c97618202a4d85cdcf254062dd76c688bb9937" translate="yes" xml:space="preserve">
          <source>Metadata in a custom format. The format may be different (or even absent) for different kinds.</source>
          <target state="translated">Metadatos en un formato personalizado.El formato puede ser diferente (o incluso inexistente)para diferentes tipos.</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="6ef376dbda2a9dfd9fe8fb9172d6ea36380a325e" translate="yes" xml:space="preserve">
          <source>Method call formatting</source>
          <target state="translated">Formato de la llamada de método</target>
        </trans-unit>
        <trans-unit id="3643c572e5a5065b656aa6b5fce445bafca060de" translate="yes" xml:space="preserve">
          <source>Method declarations</source>
          <target state="translated">Declaraciones de método</target>
        </trans-unit>
        <trans-unit id="6c23f25a80838dd8e19f20f6fec8854933be69db" translate="yes" xml:space="preserve">
          <source>Method names translation</source>
          <target state="translated">Traducción de los nombres de los métodos</target>
        </trans-unit>
        <trans-unit id="88533fb91c329fcc07daac7abd293e3d2ef386bf" translate="yes" xml:space="preserve">
          <source>Methods &lt;code&gt;wait()&lt;/code&gt; and &lt;code&gt;notify()&lt;/code&gt; are not available on references of type &lt;code&gt;Any&lt;/code&gt;. Their usage is generally discouraged in favor of &lt;code&gt;java.util.concurrent&lt;/code&gt;. If you really need to call these methods, you can cast to &lt;code&gt;java.lang.Object&lt;/code&gt;:</source>
          <target state="translated">Los m&amp;eacute;todos &lt;code&gt;wait()&lt;/code&gt; y &lt;code&gt;notify()&lt;/code&gt; no est&amp;aacute;n disponibles en referencias de tipo &lt;code&gt;Any&lt;/code&gt; . Su uso generalmente se desaconseja en favor de &lt;code&gt;java.util.concurrent&lt;/code&gt; . Si realmente necesita llamar a estos m&amp;eacute;todos, puede convertir a &lt;code&gt;java.lang.Object&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="04764bae2f3b42e32503d658246fd786e62d1716" translate="yes" xml:space="preserve">
          <source>Methods defined in &lt;code&gt;MyList&amp;lt;T&amp;gt;&lt;/code&gt; use &lt;code&gt;T&lt;/code&gt; as platform, i.e. it's possible to perform unsafe operation in Kotlin:</source>
          <target state="translated">Los m&amp;eacute;todos definidos en &lt;code&gt;MyList&amp;lt;T&amp;gt;&lt;/code&gt; usan &lt;code&gt;T&lt;/code&gt; como plataforma, es decir, es posible realizar una operaci&amp;oacute;n insegura en Kotlin:</target>
        </trans-unit>
        <trans-unit id="2362d4b5d61680189ee786359c95c772832ea599" translate="yes" xml:space="preserve">
          <source>Methods defined in &lt;code&gt;MyPureList&amp;lt;T&amp;gt;&lt;/code&gt; overriding methods in &lt;code&gt;MutableList&lt;/code&gt; use &lt;code&gt;T&lt;/code&gt; as non-platform types:</source>
          <target state="translated">Los m&amp;eacute;todos definidos en &lt;code&gt;MyPureList&amp;lt;T&amp;gt;&lt;/code&gt; que &lt;code&gt;MutableList&lt;/code&gt; m&amp;eacute;todos en MutableList usan &lt;code&gt;T&lt;/code&gt; como tipos que no son de plataforma:</target>
        </trans-unit>
        <trans-unit id="1643049f5673b4e1c5eb74d112c9611cf055d3c5" translate="yes" xml:space="preserve">
          <source>Methods returning void</source>
          <target state="translated">Métodos de devolución del vacío</target>
        </trans-unit>
        <trans-unit id="a8027f1188b3014c0f8995cd7120023b72397d3d" translate="yes" xml:space="preserve">
          <source>Methods that follow the Java conventions for getters and setters (no-argument methods with names starting with &lt;code&gt;get&lt;/code&gt; and single-argument methods with names starting with &lt;code&gt;set&lt;/code&gt;) are represented as properties in Kotlin. &lt;code&gt;Boolean&lt;/code&gt; accessor methods (where the name of the getter starts with &lt;code&gt;is&lt;/code&gt; and the name of the setter starts with &lt;code&gt;set&lt;/code&gt;) are represented as properties which have the same name as the getter method.</source>
          <target state="translated">Los m&amp;eacute;todos que siguen las convenciones de Java para getters y setters (m&amp;eacute;todos sin argumentos con nombres que comienzan con &lt;code&gt;get&lt;/code&gt; y m&amp;eacute;todos de un solo argumento con nombres que comienzan con &lt;code&gt;set&lt;/code&gt; ) se representan como propiedades en Kotlin. &lt;code&gt;Boolean&lt;/code&gt; m&amp;eacute;todos de acceso booleanos (donde el nombre del getter comienza con &lt;code&gt;is&lt;/code&gt; y el nombre del setter comienza con &lt;code&gt;set&lt;/code&gt; ) se representan como propiedades que tienen el mismo nombre que el m&amp;eacute;todo getter.</target>
        </trans-unit>
        <trans-unit id="a23dee2288fafb96e4e3f4b56c185b2062a8905b" translate="yes" xml:space="preserve">
          <source>Micronaut also has a lot of well-detailed &lt;a href=&quot;https://guides.micronaut.io/tags/kotlin.html&quot;&gt;guides&lt;/a&gt;, showing how you can build microservices in Kotlin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2474109210e0ea672543f6c977728ae54b8f124d" translate="yes" xml:space="preserve">
          <source>Migrate the code with the help of the tooling</source>
          <target state="translated">Migrar el código con la ayuda de las herramientas</target>
        </trans-unit>
        <trans-unit id="172ed07f360beace12adb8c961c2a782c6ca6c9e" translate="yes" xml:space="preserve">
          <source>Migrate to &lt;code&gt;maven-publish&lt;/code&gt; instead of &lt;code&gt;bintray-publish&lt;/code&gt;&lt;a href=&quot;https://github.com/Kotlin/kotlinx.serialization/commit/c5f1af6ad78a77fe5861588d9fb00b7d3a9bc3e5#diff-439aadfed1f3c340acdcc871c00258aeL5&quot;&gt;as we did for kotlinx.serialization&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c54cda7e4f5ebbebe1eaf0c207ebb2f5ed7bdd" translate="yes" xml:space="preserve">
          <source>Migrate to the hierarchical project structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e3da6a6f502145e6384cb746eeae1a3949c146" translate="yes" xml:space="preserve">
          <source>Migrating Kotlin Multiplatform Projects to 1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="708b9cf32b4bb9e8e85c01bf95c0ef78c92becb6" translate="yes" xml:space="preserve">
          <source>Migrating from Java</source>
          <target state="translated">Migrando desde Java</target>
        </trans-unit>
        <trans-unit id="b663404acf2504d57bf1ce59c3fa95a4bda97ce6" translate="yes" xml:space="preserve">
          <source>Migrating multiplatform projects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d3a9e9670f7240a77d83260fefdcb2501bc774" translate="yes" xml:space="preserve">
          <source>Migrating to Kotlin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704852bcf1dca6d8f3dd477e7500ea2431c92b19" translate="yes" xml:space="preserve">
          <source>Migrating to Kotlin 1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44d82dafb548c8ad9d6490ef0e69cd3d1ba217d" translate="yes" xml:space="preserve">
          <source>Migration to a new code style</source>
          <target state="translated">Migración a un nuevo estilo de código</target>
        </trans-unit>
        <trans-unit id="d0a1c8e409ae53cb281e66770ad717b9178d43ce" translate="yes" xml:space="preserve">
          <source>Migration to a new code style discussion</source>
          <target state="translated">Migración a una nueva discusión de estilo de código</target>
        </trans-unit>
        <trans-unit id="1bd7ccbde8d3077fec1f549017e747393223a900" translate="yes" xml:space="preserve">
          <source>MimeType</source>
          <target state="translated">MimeType</target>
        </trans-unit>
        <trans-unit id="ed52d3a5f9993b67e83d292332a8f9a1d86ebf44" translate="yes" xml:space="preserve">
          <source>MimeTypeArray</source>
          <target state="translated">MimeTypeArray</target>
        </trans-unit>
        <trans-unit id="98f205e04abca4bbe7595051d07e6eb3a4abe953" translate="yes" xml:space="preserve">
          <source>Min value</source>
          <target state="translated">Valor mínimo</target>
        </trans-unit>
        <trans-unit id="19e8abbe205b30d152785fe3c14a30f6ea984577" translate="yes" xml:space="preserve">
          <source>Minimum Gradle version for Kotlin projects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222d1f694d764125a7a7a5786d11a04234b0be8d" translate="yes" xml:space="preserve">
          <source>Missing errors in class constructor&amp;rsquo;s &lt;code&gt;@get:&lt;/code&gt; annotations</source>
          <target state="translated">Faltan errores en las anotaciones &lt;code&gt;@get:&lt;/code&gt; del constructor de la clase</target>
        </trans-unit>
        <trans-unit id="47e4750870ece5e5c348eda89bdc8e3fbb4c6cff" translate="yes" xml:space="preserve">
          <source>Missing getter-targeted annotations on annotation constructor parameters</source>
          <target state="translated">Falta de anotaciones dirigidas a los parámetros de construcción de las anotaciones</target>
        </trans-unit>
        <trans-unit id="52b91c038ffc21a08d48959a44ba1c6fddb114f2" translate="yes" xml:space="preserve">
          <source>Mixed Java and Kotlin</source>
          <target state="translated">Mezcla de Java y Kotlin</target>
        </trans-unit>
        <trans-unit id="86c40367cc1e1c53a8c10c73ada1f29fd66c1405" translate="yes" xml:space="preserve">
          <source>Mixing Java and Kotlin in one project</source>
          <target state="translated">Mezclando Java y Kotlin en un proyecto</target>
        </trans-unit>
        <trans-unit id="117d20327df7d6f6efc9a0351f72e3551ea03739" translate="yes" xml:space="preserve">
          <source>Mixing named and positional arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404ab93e44ed76b5232ab6931dd26299f542e43d" translate="yes" xml:space="preserve">
          <source>Modern debuggers provide several ways to set a breakpoint, see below for a tool-by-tool breakdown:</source>
          <target state="translated">Los depuradores modernos ofrecen varias formas de establecer un punto de ruptura,véase más abajo un desglose herramienta por herramienta:</target>
        </trans-unit>
        <trans-unit id="5ba6ee64964304bc6c3c5424baba2b34cd73ea5d" translate="yes" xml:space="preserve">
          <source>Modifier Keywords</source>
          <target state="translated">Palabras clave modificadas</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="42cd86d0e702bd27bcb835a0b162fb95197132a2" translate="yes" xml:space="preserve">
          <source>Modifies the value of the property.</source>
          <target state="translated">Modifica el valor de la propiedad.</target>
        </trans-unit>
        <trans-unit id="07e93e055ba07647a72e569ac923b2eb93a2c73d" translate="yes" xml:space="preserve">
          <source>Modify the code so that it requests your name and says &lt;code&gt;Hello&lt;/code&gt; to you specifically, and not to the whole world.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723a9a05eb17a0ec38db3b56d4b0ea18be0358a6" translate="yes" xml:space="preserve">
          <source>Module and Package Documentation</source>
          <target state="translated">Documentación de módulos y paquetes</target>
        </trans-unit>
        <trans-unit id="ed8def074470e81fe96b7cdd8aac08ec3fff3bc6" translate="yes" xml:space="preserve">
          <source>Module system used by the Kotlin Standard Library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec446b6ebb15f053c4868dce62c242283cf04673" translate="yes" xml:space="preserve">
          <source>Module-wide markers</source>
          <target state="translated">Marcadores de todo el módulo</target>
        </trans-unit>
        <trans-unit id="fbca16d94414fd1355c2209f751649e4dc0516a6" translate="yes" xml:space="preserve">
          <source>Module-wide opt-in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738fa33a16ad3f30c737fafc42459e4a03f30470" translate="yes" xml:space="preserve">
          <source>Module-wide use</source>
          <target state="translated">Uso en todo el módulo</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="33fc07647a730366669636d0cd31251180376723" translate="yes" xml:space="preserve">
          <source>MonoClock</source>
          <target state="translated">MonoClock</target>
        </trans-unit>
        <trans-unit id="ab4f711496b718790e121e745bf7bcd0420838ff" translate="yes" xml:space="preserve">
          <source>Monotonic</source>
          <target state="translated">Monotonic</target>
        </trans-unit>
        <trans-unit id="1874fdecc1b6b9f80b1d465cf4b4a5be32d328bb" translate="yes" xml:space="preserve">
          <source>More cases where type is inferred automatically</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62ac0bf808c354dcb97b6778e8aaae4635a7c9f" translate="yes" xml:space="preserve">
          <source>More details and advanced use-cases are presented in the</source>
          <target state="translated">Más detalles y casos de uso avanzado se presentan en el</target>
        </trans-unit>
        <trans-unit id="e1f6f4bba3b5e57fa11e7d396d873400b2920c37" translate="yes" xml:space="preserve">
          <source>More details can be found in &lt;a href=&quot;https://lldb.llvm.org/use/symbolication.html&quot;&gt;LLDB documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91aa2ec21d9f2bac781876761e04b45d52ef74fe" translate="yes" xml:space="preserve">
          <source>More documentation on the types mapping can be found in the &lt;a href=&quot;../../reference/native/objc_interop&quot;&gt;Objective-C Interop&lt;/a&gt; article.</source>
          <target state="translated">Puede encontrar m&amp;aacute;s documentaci&amp;oacute;n sobre el mapeo de tipos en el art&amp;iacute;culo de &lt;a href=&quot;../../reference/native/objc_interop&quot;&gt;Objective-C Interop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b5c09addc98121bf0f9aad66c228b38f1430aecf" translate="yes" xml:space="preserve">
          <source>More information about all other types mapping details can be found in the &lt;a href=&quot;../../reference/native/objc_interop&quot;&gt;Objective-C Interop&lt;/a&gt; documentation article</source>
          <target state="translated">Puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre todos los dem&amp;aacute;s tipos de detalles de mapeo en el art&amp;iacute;culo de documentaci&amp;oacute;n de &lt;a href=&quot;../../reference/native/objc_interop&quot;&gt;Objective-C Interop&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b061f32f9ec8d43b64e344ed5485c4d9f7caf378" translate="yes" xml:space="preserve">
          <source>More tips and tricks</source>
          <target state="translated">Más consejos y trucos</target>
        </trans-unit>
        <trans-unit id="5842853beb7295ca4c8ec74bfe0ff1a5b91356fa" translate="yes" xml:space="preserve">
          <source>Moreover, every time you added a dependency on an Objective-C library stored in CocoaPods (Pod library), you had to switch from IntelliJ IDEA to Xcode, call &lt;code&gt;pod install&lt;/code&gt;, and run the Xcode build there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9792383929cbb7b1909aa88012c0f218c0c51f8" translate="yes" xml:space="preserve">
          <source>Most built-in types are comparable:</source>
          <target state="translated">La mayoría de los tipos incorporados son comparables:</target>
        </trans-unit>
        <trans-unit id="f9f0f6eb5ddb49db8f8ae5d8eb9cab0176d9ace5" translate="yes" xml:space="preserve">
          <source>Most of the functionality of signed types are supported for unsigned counterparts too:</source>
          <target state="translated">La mayor parte de la funcionalidad de los tipos firmados se admite también para las contrapartes no firmadas:</target>
        </trans-unit>
        <trans-unit id="cb91c080f7b68ae6a8bbb2b702b1059a13b12c96" translate="yes" xml:space="preserve">
          <source>Most of the operators that are recognized by Kotlin's syntax have predefined textual names and are available for implementation in your classes, just like you can do with Python's double-underscore operator names. For example, the binary &lt;code&gt;+&lt;/code&gt; operator is called &lt;code&gt;plus&lt;/code&gt;. Similarly to the infix example, if you do this inside a &lt;code&gt;Person&lt;/code&gt; class that has got a &lt;code&gt;name&lt;/code&gt; property:</source>
          <target state="translated">La mayor&amp;iacute;a de los operadores que son reconocidos por la sintaxis de Kotlin tienen nombres textuales predefinidos y est&amp;aacute;n disponibles para implementaci&amp;oacute;n en sus clases, al igual que puede hacer con los nombres de operadores de doble subrayado de Python. Por ejemplo, el operador binario &lt;code&gt;+&lt;/code&gt; se llama &lt;code&gt;plus&lt;/code&gt; . De manera similar al ejemplo de infijo, si hace esto dentro de una clase &lt;code&gt;Person&lt;/code&gt; que tiene una propiedad de &lt;code&gt;name&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ef0792097f4b2ac5841fae23eda77fe48d6f36a5" translate="yes" xml:space="preserve">
          <source>Most of the time we define extensions on the top level - directly under packages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3edbae2a158aaf025c7463b2890fdba1f30e0552" translate="yes" xml:space="preserve">
          <source>Most of the time we define extensions on the top level, i.e. directly under packages:</source>
          <target state="translated">La mayoría de las veces definimos las extensiones en el nivel superior,es decir,directamente debajo de los paquetes:</target>
        </trans-unit>
        <trans-unit id="d6a06199cc127e571d3588aef63c79108675eabc" translate="yes" xml:space="preserve">
          <source>Motivation</source>
          <target state="translated">Motivation</target>
        </trans-unit>
        <trans-unit id="e5f579f208747beb161cf00d47a3a0c086f81dbe" translate="yes" xml:space="preserve">
          <source>MouseEventInit</source>
          <target state="translated">MouseEventInit</target>
        </trans-unit>
        <trans-unit id="19754c53e87ae21affdf187e21540a29ec7c1fa2" translate="yes" xml:space="preserve">
          <source>Much like we reference an input element, we can access other elements on the page, casting them to the appropriate types.</source>
          <target state="translated">De la misma manera que hacemos referencia a un elemento de entrada,podemos acceder a otros elementos en la página,proyectándolos a los tipos apropiados.</target>
        </trans-unit>
        <trans-unit id="6d6e77ed48ce8c2ddad8118836b154d52bbe896e" translate="yes" xml:space="preserve">
          <source>Much like we reference this &lt;code&gt;input&lt;/code&gt; element, we can access other elements on the page, casting them to the appropriate types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e61eaa48d6be8dae51bf80212b85c25bd2b301" translate="yes" xml:space="preserve">
          <source>Much the same way as regular properties, the properties declared in the primary constructor can be mutable (&lt;em&gt;var&lt;/em&gt;) or read-only (&lt;em&gt;val&lt;/em&gt;).</source>
          <target state="translated">Al igual que las propiedades regulares, las propiedades declaradas en el constructor primario pueden ser mutables ( &lt;em&gt;var&lt;/em&gt; ) o de solo lectura ( &lt;em&gt;val&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="bf10a69dc3111e2f0b70a7a3b5fcde0eb5de58f0" translate="yes" xml:space="preserve">
          <source>Multiplatform &lt;code&gt;Random&lt;/code&gt;</source>
          <target state="translated">Multiplataforma &lt;code&gt;Random&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d27d69385dad1ecc38485d70b593ff3be6501e1" translate="yes" xml:space="preserve">
          <source>Multiplatform Gradle Project</source>
          <target state="translated">Proyecto de graduación multiplataforma</target>
        </trans-unit>
        <trans-unit id="b476304566bdb2c8284f4c5fabc7060e30563d1f" translate="yes" xml:space="preserve">
          <source>Multiplatform Kotlin Library</source>
          <target state="translated">Biblioteca Kotlin multiplataforma</target>
        </trans-unit>
        <trans-unit id="594342484b7fa8723561cd74a56adf5ed5eecd56" translate="yes" xml:space="preserve">
          <source>Multiplatform Kotlin library</source>
          <target state="translated">Biblioteca Kotlin multiplataforma</target>
        </trans-unit>
        <trans-unit id="abdd2b4ca66085ea36500996c307f3c54d5bee0a" translate="yes" xml:space="preserve">
          <source>Multiplatform Libraries</source>
          <target state="translated">Bibliotecas multiplataforma</target>
        </trans-unit>
        <trans-unit id="49bdb75dde412727c37ad9cfdc25f84b9800e1ee" translate="yes" xml:space="preserve">
          <source>Multiplatform Programming</source>
          <target state="translated">Programación multiplataforma</target>
        </trans-unit>
        <trans-unit id="8831ff8afbd886576a6d26e7a38c2a2945370e5f" translate="yes" xml:space="preserve">
          <source>Multiplatform Project: iOS and Android</source>
          <target state="translated">Proyecto multiplataforma:iOS y Android</target>
        </trans-unit>
        <trans-unit id="5cff52171a748c24fbdfa2675a9193d1e17c8b90" translate="yes" xml:space="preserve">
          <source>Multiplatform Projects</source>
          <target state="translated">Proyectos multiplataforma</target>
        </trans-unit>
        <trans-unit id="30ece0cd52430a4d7a64233600e1721dbcbbe2bf" translate="yes" xml:space="preserve">
          <source>Multiplatform Projects (experimental)</source>
          <target state="translated">Proyectos multiplataforma (experimentales)</target>
        </trans-unit>
        <trans-unit id="f506c7f9b82e9e851e08218247dcde8af5b5887a" translate="yes" xml:space="preserve">
          <source>Multiplatform and Android modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4e4169a39f2d844d31b96ac30721e94301948b" translate="yes" xml:space="preserve">
          <source>Multiplatform and iOS modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0198731e127deda4e2a86e65a7c2c819b3c35ae8" translate="yes" xml:space="preserve">
          <source>Multiplatform documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589cd9e93a3f8a12eb21202582376692eda701eb" translate="yes" xml:space="preserve">
          <source>Multiplatform plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f424e82581dd0443f6b1cfe8761404b9445347c" translate="yes" xml:space="preserve">
          <source>Multiplatform programming</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce33eff96bb2026a847a2a553a328f131ebdfe5" translate="yes" xml:space="preserve">
          <source>Multiplatform projects</source>
          <target state="translated">Proyectos multiplataforma</target>
        </trans-unit>
        <trans-unit id="48104e942ea0eb10a48e224f17bd6af63a0f01ad" translate="yes" xml:space="preserve">
          <source>Multiplatform projects are a new &lt;strong&gt;experimental&lt;/strong&gt; feature in Kotlin 1.2, allowing you to reuse code between target platforms supported by Kotlin &amp;ndash; JVM, JavaScript and (in the future) Native. In a multiplatform project, you have three kinds of modules:</source>
          <target state="translated">Los proyectos multiplataforma son una nueva caracter&amp;iacute;stica &lt;strong&gt;experimental&lt;/strong&gt; en Kotlin 1.2, que le permite reutilizar c&amp;oacute;digo entre plataformas de destino compatibles con Kotlin: JVM, JavaScript y (en el futuro) Native. En un proyecto multiplataforma, tiene tres tipos de m&amp;oacute;dulos:</target>
        </trans-unit>
        <trans-unit id="56c55ee3ca3b8c8dc0a5fe577d6b3cbe7b6bf668" translate="yes" xml:space="preserve">
          <source>Multiplatform projects are an experimental feature in Kotlin 1.2 and 1.3. All of the language and tooling features described in this document are subject to change in future Kotlin versions.</source>
          <target state="translated">Los proyectos multiplataforma son una característica experimental en Kotlin 1.2 y 1.3.Todas las características de lenguaje y herramientas descritas en este documento están sujetas a cambios en futuras versiones de Kotlin.</target>
        </trans-unit>
        <trans-unit id="7e1b4e8641ccf9f8084108431aa99a93d1fa43a8" translate="yes" xml:space="preserve">
          <source>Multiplatform projects are in &lt;a href=&quot;evolution/components-stability&quot;&gt;Alpha&lt;/a&gt;. Language features and tooling may change in future Kotlin versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef6fb02650b5f1c62906838b62d60e9668473e5" translate="yes" xml:space="preserve">
          <source>Multiplatform projects require Gradle 6.0 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47f8ee1f56229364d475a5b4995314b84d9fc4e" translate="yes" xml:space="preserve">
          <source>Multiple coroutines may receive from the same channel, distributing work between themselves. Let us start with a producer coroutine that is periodically producing integers (ten numbers per second):</source>
          <target state="translated">Múltiples coroutinas pueden recibir del mismo canal,distribuyendo el trabajo entre ellas.Comencemos con una corutina de producción que produce periódicamente números enteros (diez números por segundo):</target>
        </trans-unit>
        <trans-unit id="264744e655406950142eec2a53dc539eed8a5fd7" translate="yes" xml:space="preserve">
          <source>Multiple coroutines may send to the same channel. For example, let us have a channel of strings, and a suspending function that repeatedly sends a specified string to this channel with a specified delay:</source>
          <target state="translated">Múltiples coroutinas pueden enviar al mismo canal.Por ejemplo,tengamos un canal de cuerdas,y una función de suspensión que envía repetidamente una cuerda especificada a este canal con un retardo especificado:</target>
        </trans-unit>
        <trans-unit id="3017386d693c46a721f97e0e62e2ede852b604c6" translate="yes" xml:space="preserve">
          <source>Multiple values can be represented in Kotlin using &lt;a href=&quot;../collections-overview&quot;&gt;collections&lt;/a&gt;. For example, we can have a &lt;code&gt;simple&lt;/code&gt; function that returns a &lt;a href=&quot;../../../api/latest/jvm/stdlib/kotlin.collections/-list/index&quot;&gt;List&lt;/a&gt; of three numbers and then print them all using &lt;a href=&quot;../../../api/latest/jvm/stdlib/kotlin.collections/for-each&quot;&gt;forEach&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d79d3118202ae1d668fb56014f9cb20b36159e5" translate="yes" xml:space="preserve">
          <source>Multiplies this value by the other value.</source>
          <target state="translated">Multiplica este valor por el otro valor.</target>
        </trans-unit>
        <trans-unit id="f342e79f479c63b3a6f1a4035901daea4fbf30b9" translate="yes" xml:space="preserve">
          <source>MustBeDocumented</source>
          <target state="translated">MustBeDocumented</target>
        </trans-unit>
        <trans-unit id="07b00606431523d4ebea7077981984b607d973e8" translate="yes" xml:space="preserve">
          <source>Mutable closure variables</source>
          <target state="translated">Variables de cierre mutables</target>
        </trans-unit>
        <trans-unit id="e427611262df2a9a50ee135e0fceaecfa0c80c7f" translate="yes" xml:space="preserve">
          <source>Mutable concurrently accessible data buffer. Could be accessed from several workers simulteniously.</source>
          <target state="translated">Búfer de datos mutable y accesible al mismo tiempo.Se puede acceder desde varios trabajadores simultáneamente.</target>
        </trans-unit>
        <trans-unit id="46fb0a3dd2497d28351f3b643be68bf38c4dcf04" translate="yes" xml:space="preserve">
          <source>Mutable iterators</source>
          <target state="translated">Iteradores mutables</target>
        </trans-unit>
        <trans-unit id="9b7b2307fe92cd7c012fa39281f7b175b249dd6e" translate="yes" xml:space="preserve">
          <source>MutableCollection</source>
          <target state="translated">MutableCollection</target>
        </trans-unit>
        <trans-unit id="42724994b4f6f408170a142d4bb3a6bfa7198849" translate="yes" xml:space="preserve">
          <source>MutableCollection.iterator</source>
          <target state="translated">MutableCollection.iterator</target>
        </trans-unit>
        <trans-unit id="1a5033d42eefb58adbea823fa5255b0aed1d662e" translate="yes" xml:space="preserve">
          <source>MutableData</source>
          <target state="translated">MutableData</target>
        </trans-unit>
        <trans-unit id="5e9e097c14385f745d368faabbd3854a67b05b46" translate="yes" xml:space="preserve">
          <source>MutableEntry</source>
          <target state="translated">MutableEntry</target>
        </trans-unit>
        <trans-unit id="8a4f4102af09300cf876f9a6460618caaa96575a" translate="yes" xml:space="preserve">
          <source>MutableIterable</source>
          <target state="translated">MutableIterable</target>
        </trans-unit>
        <trans-unit id="a652e5941b9ff793ccc9e659b88bf1a8f5227c3a" translate="yes" xml:space="preserve">
          <source>MutableIterator</source>
          <target state="translated">MutableIterator</target>
        </trans-unit>
        <trans-unit id="49e02d16b11d601b6e4902190c5bca350a9202fc" translate="yes" xml:space="preserve">
          <source>MutableList</source>
          <target state="translated">MutableList</target>
        </trans-unit>
        <trans-unit id="4c650d57f6075cf5940d694638ac9e4ec8e77bc6" translate="yes" xml:space="preserve">
          <source>MutableListIterator</source>
          <target state="translated">MutableListIterator</target>
        </trans-unit>
        <trans-unit id="f20ff48f1ceb7119a78b4b13a251cf2c7628b7ac" translate="yes" xml:space="preserve">
          <source>MutableMap</source>
          <target state="translated">MutableMap</target>
        </trans-unit>
        <trans-unit id="c0a289c1f11c0248072d86bca1271c7246850c9c" translate="yes" xml:space="preserve">
          <source>MutableSet</source>
          <target state="translated">MutableSet</target>
        </trans-unit>
        <trans-unit id="0b5d551add97f7ca81d05d95c5a9f114421d02ad" translate="yes" xml:space="preserve">
          <source>Mutating the backing field of a read-only property by assigning &lt;code&gt;field = ...&lt;/code&gt; in the custom getter has been deprecated, with a warning in Kotlin 1.2 and an error in Kotlin 1.3.</source>
          <target state="translated">Mutar el campo de respaldo de una propiedad de solo lectura asignando &lt;code&gt;field = ...&lt;/code&gt; en el getter personalizado ha quedado obsoleto, con una advertencia en Kotlin 1.2 y un error en Kotlin 1.3.</target>
        </trans-unit>
        <trans-unit id="d9e09542ba7562ba06b3618d585343bb16717cc0" translate="yes" xml:space="preserve">
          <source>MutationObserver</source>
          <target state="translated">MutationObserver</target>
        </trans-unit>
        <trans-unit id="bf760ce86085d0556b58a1fb2886ad6300cf25c9" translate="yes" xml:space="preserve">
          <source>MutationObserverInit</source>
          <target state="translated">MutationObserverInit</target>
        </trans-unit>
        <trans-unit id="902e161ec72b34937173fb6ae6f1167c6c4b933a" translate="yes" xml:space="preserve">
          <source>MutationRecord</source>
          <target state="translated">MutationRecord</target>
        </trans-unit>
        <trans-unit id="bd89464f515bc7c1945f885ef807721ee91c256b" translate="yes" xml:space="preserve">
          <source>Mutual exclusion</source>
          <target state="translated">Exclusión mutua</target>
        </trans-unit>
        <trans-unit id="f2a0cc7430b6ab201c123d93595f5409656e44aa" translate="yes" xml:space="preserve">
          <source>Mutual exclusion solution to the problem is to protect all modifications of the shared state with a &lt;em&gt;critical section&lt;/em&gt; that is never executed concurrently. In a blocking world you'd typically use &lt;code&gt;synchronized&lt;/code&gt; or &lt;code&gt;ReentrantLock&lt;/code&gt; for that. Coroutine's alternative is called &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.sync/-mutex/index.html&quot;&gt;Mutex&lt;/a&gt;. It has &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.sync/-mutex/lock.html&quot;&gt;lock&lt;/a&gt; and &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.sync/-mutex/unlock.html&quot;&gt;unlock&lt;/a&gt; functions to delimit a critical section. The key difference is that &lt;code&gt;Mutex.lock()&lt;/code&gt; is a suspending function. It does not block a thread.</source>
          <target state="translated">La soluci&amp;oacute;n de exclusi&amp;oacute;n mutua al problema es proteger todas las modificaciones del estado compartido con una &lt;em&gt;secci&amp;oacute;n cr&amp;iacute;tica&lt;/em&gt; que nunca se ejecuta al mismo tiempo. En un mundo de bloqueo, normalmente &lt;code&gt;ReentrantLock&lt;/code&gt; &lt;code&gt;synchronized&lt;/code&gt; o ReentrantLock para eso. La alternativa de Coroutine se llama &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.sync/-mutex/index.html&quot;&gt;Mutex&lt;/a&gt; . Tiene funciones de &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.sync/-mutex/lock.html&quot;&gt;bloqueo&lt;/a&gt; y &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.sync/-mutex/unlock.html&quot;&gt;desbloqueo&lt;/a&gt; para delimitar un tramo cr&amp;iacute;tico. La diferencia clave es que &lt;code&gt;Mutex.lock()&lt;/code&gt; es una funci&amp;oacute;n de suspensi&amp;oacute;n. No bloquea un hilo.</target>
        </trans-unit>
        <trans-unit id="e6a87480ef216b736cda78776d20937ae965a5a1" translate="yes" xml:space="preserve">
          <source>My first coroutine</source>
          <target state="translated">Mi primera corutina</target>
        </trans-unit>
        <trans-unit id="08d2e98e6754af941484848930ccbaddfefe13d6" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>
        </trans-unit>
        <trans-unit id="536a8b7845cee3c137a3bbe4abb9af51a3164fab" translate="yes" xml:space="preserve">
          <source>NANOSECONDS</source>
          <target state="translated">NANOSECONDS</target>
        </trans-unit>
        <trans-unit id="ac5af3d78fb9a248a0c8878049fa45cb722c5609" translate="yes" xml:space="preserve">
          <source>NEGATIVE_INFINITY</source>
          <target state="translated">NEGATIVE_INFINITY</target>
        </trans-unit>
        <trans-unit id="0654a028e5aea48c8fbb09871b8f397a186c883b" translate="yes" xml:space="preserve">
          <source>NONE</source>
          <target state="translated">NONE</target>
        </trans-unit>
        <trans-unit id="19b5db1284eda5fe55423cf6ff666bbd91d48790" translate="yes" xml:space="preserve">
          <source>NONSPACING_MARK</source>
          <target state="translated">NONSPACING_MARK</target>
        </trans-unit>
        <trans-unit id="a711913b07f219db3720165b1cc42ba33ab84d07" translate="yes" xml:space="preserve">
          <source>NON_SPACING_MARK</source>
          <target state="translated">NON_SPACING_MARK</target>
        </trans-unit>
        <trans-unit id="b12d9f3adce16f3c42e185c9323b0f2c05d0d02a" translate="yes" xml:space="preserve">
          <source>NOTE: Octal literals are not supported.</source>
          <target state="translated">NOTA:No se admiten los literales octales.</target>
        </trans-unit>
        <trans-unit id="c820cc676951d2a6935d55d3c748ef2d4229e0ef" translate="yes" xml:space="preserve">
          <source>NSArray</source>
          <target state="translated">NSArray</target>
        </trans-unit>
        <trans-unit id="850a25e67ede967c8226916d9435ee3fa9fe30c0" translate="yes" xml:space="preserve">
          <source>NSDictionary</source>
          <target state="translated">NSDictionary</target>
        </trans-unit>
        <trans-unit id="88142d93bc155af7430eda23b521adf5177befb3" translate="yes" xml:space="preserve">
          <source>NSMutableArray</source>
          <target state="translated">NSMutableArray</target>
        </trans-unit>
        <trans-unit id="093cc39541f1d88e9c8d7815809e04abdc468222" translate="yes" xml:space="preserve">
          <source>NSMutableDictionary</source>
          <target state="translated">NSMutableDictionary</target>
        </trans-unit>
        <trans-unit id="6f353d0803276b29f669e8e00d5912e0735d118f" translate="yes" xml:space="preserve">
          <source>NSMutableString</source>
          <target state="translated">NSMutableString</target>
        </trans-unit>
        <trans-unit id="21b6f3d1ecc982003af64b405b1aec1eeffcbd63" translate="yes" xml:space="preserve">
          <source>NSNumber</source>
          <target state="translated">NSNumber</target>
        </trans-unit>
        <trans-unit id="6049050154f9c68876906ec983b62a8beb7bfd87" translate="yes" xml:space="preserve">
          <source>NSSet</source>
          <target state="translated">NSSet</target>
        </trans-unit>
        <trans-unit id="f7fd9c68f804acda665d2ab082217bb1583318f2" translate="yes" xml:space="preserve">
          <source>NaN</source>
          <target state="translated">NaN</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="1d9278de60066da26878d48edc566e004785235a" translate="yes" xml:space="preserve">
          <source>Name of &lt;code&gt;compileKotlinTask&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d358b78f3aafd0959541e1027fa022b9b824487" translate="yes" xml:space="preserve">
          <source>Name of the Gradle task for compiling all sources of a compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2a70884b6ea61a0ea998c7fe86ebc6c43c39e1" translate="yes" xml:space="preserve">
          <source>Name of the module being compiled</source>
          <target state="translated">Nombre del módulo que se está compilando</target>
        </trans-unit>
        <trans-unit id="bd9b36517a10ed825bfe97b96fd841ffbfd62dda" translate="yes" xml:space="preserve">
          <source>Name of the worker, as specified in &lt;a href=&quot;start&quot;&gt;Worker.start&lt;/a&gt; or &quot;worker $id&quot; by default,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efab9c724a7839dff5f1e0118b1a9b242fe8997" translate="yes" xml:space="preserve">
          <source>Name of this parameter as it was declared in the source code, or &lt;code&gt;null&lt;/code&gt; if the parameter has no name or its name is not available at runtime. Examples of nameless parameters include &lt;code&gt;this&lt;/code&gt; instance for member functions, extension receiver for extension functions or properties, parameters of Java methods compiled without the debug information, and others.</source>
          <target state="translated">Nombre de este par&amp;aacute;metro tal como se declar&amp;oacute; en el c&amp;oacute;digo fuente, o &lt;code&gt;null&lt;/code&gt; si el par&amp;aacute;metro no tiene nombre o su nombre no est&amp;aacute; disponible en tiempo de ejecuci&amp;oacute;n. Los ejemplos de par&amp;aacute;metros sin nombre incluyen &lt;code&gt;this&lt;/code&gt; instancia para funciones miembro, receptor de extensi&amp;oacute;n para funciones o propiedades de extensi&amp;oacute;n, par&amp;aacute;metros de m&amp;eacute;todos Java compilados sin la informaci&amp;oacute;n de depuraci&amp;oacute;n y otros.</target>
        </trans-unit>
        <trans-unit id="9e0268761f1a46defda13527e24a738481491b83" translate="yes" xml:space="preserve">
          <source>Name translation</source>
          <target state="translated">Traducción del nombre</target>
        </trans-unit>
        <trans-unit id="80a1546459fb296b75e903b673f8cc0ad0b7638a" translate="yes" xml:space="preserve">
          <source>Named Arguments</source>
          <target state="translated">Argumentos nombrados</target>
        </trans-unit>
        <trans-unit id="f2ab34573e168918bf72dc73ec10c4b5b1ba3f14" translate="yes" xml:space="preserve">
          <source>Named arguments</source>
          <target state="translated">Argumentos nombrados</target>
        </trans-unit>
        <trans-unit id="7eee412e511b81f184e8fdcdd0d16df4490ee091" translate="yes" xml:space="preserve">
          <source>NamedNodeMap</source>
          <target state="translated">NamedNodeMap</target>
        </trans-unit>
        <trans-unit id="89ed0927522265d199caf008b2d935b4dc13e4ec" translate="yes" xml:space="preserve">
          <source>Namely, &lt;code&gt;Grouping&lt;/code&gt; supports the following operations:</source>
          <target state="translated">A saber, la &lt;code&gt;Grouping&lt;/code&gt; admite las siguientes operaciones:</target>
        </trans-unit>
        <trans-unit id="ce7873d11ca1350ea35c4e7edcc86d0f3faedfbb" translate="yes" xml:space="preserve">
          <source>Names for backing properties</source>
          <target state="translated">Nombres para las propiedades de respaldo</target>
        </trans-unit>
        <trans-unit id="d5e90b6eaa5ac7d68bfe0de19720901740a9662f" translate="yes" xml:space="preserve">
          <source>Names for test methods</source>
          <target state="translated">Nombres de los métodos de prueba</target>
        </trans-unit>
        <trans-unit id="1bbe1b5bbc9b48ae056a0ba828b7773769b4e6a7" translate="yes" xml:space="preserve">
          <source>Names in links are resolved using the same rules as if the name was used inside the element being documented. In particular, this means that if you have imported a name into the current file, you don't need to fully qualify it when you use it in a KDoc comment.</source>
          <target state="translated">Los nombres en los enlaces se resuelven con las mismas reglas que si el nombre se utilizara dentro del elemento que se está documentando.En particular,esto significa que si se ha importado un nombre en el archivo actual,no es necesario calificarlo completamente cuando se utiliza en un comentario de KDoc.</target>
        </trans-unit>
        <trans-unit id="c5380f68245bbc672ad92afb09b8fb6715ad3ca6" translate="yes" xml:space="preserve">
          <source>Names of classes and objects start with an upper case letter and use camel humps:</source>
          <target state="translated">Los nombres de las clases y los objetos comienzan con una letra mayúscula y usan jorobas de camello:</target>
        </trans-unit>
        <trans-unit id="3b4a6dab1202620b73c1005110fe77d753a54e9f" translate="yes" xml:space="preserve">
          <source>Names of classes and objects start with an upper case letter and use the camel case:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc15464a07c43531a73eacebb7c301c643be9755" translate="yes" xml:space="preserve">
          <source>Names of constants (properties marked with &lt;code&gt;const&lt;/code&gt;, or top-level or object &lt;code&gt;val&lt;/code&gt; properties with no custom &lt;code&gt;get&lt;/code&gt; function that hold deeply immutable data) should use uppercase underscore-separated names:</source>
          <target state="translated">Los nombres de constantes (propiedades marcadas con &lt;code&gt;const&lt;/code&gt; , o propiedades de &lt;code&gt;val&lt;/code&gt; or de objeto o de nivel superior sin una funci&amp;oacute;n de &lt;code&gt;get&lt;/code&gt; personalizada que contenga datos profundamente inmutables) deben usar nombres separados por guiones bajos en may&amp;uacute;sculas:</target>
        </trans-unit>
        <trans-unit id="ed152e23d368497078b7ae5dc12a67a09aef9537" translate="yes" xml:space="preserve">
          <source>Names of functions, properties and local variables start with a lower case letter and use camel humps and no underscores:</source>
          <target state="translated">Los nombres de las funciones,propiedades y variables locales comienzan con una letra minúscula y utilizan jorobas de camello sin subrayado:</target>
        </trans-unit>
        <trans-unit id="1e715a573269457e03280d22e2a0d8e880e4fdae" translate="yes" xml:space="preserve">
          <source>Names of functions, properties and local variables start with a lower case letter and use the camel case and no underscores:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe2ff19a7f565c3d30edceae570abf2351b799b" translate="yes" xml:space="preserve">
          <source>Names of packages are always lower case and do not use underscores (&lt;code&gt;org.example.myproject&lt;/code&gt;). Using multi-word names is generally discouraged, but if you do need to use multiple words, you can either simply concatenate them together or use camel humps (&lt;code&gt;org.example.myProject&lt;/code&gt;).</source>
          <target state="translated">Los nombres de los paquetes son siempre en min&amp;uacute;sculas y no usan guiones bajos ( &lt;code&gt;org.example.myproject&lt;/code&gt; ). Por lo general, se desaconseja el uso de nombres de varias palabras, pero si necesita usar varias palabras, puede simplemente concatenarlas o usar jorobas de camello ( &lt;code&gt;org.example.myProject&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d506a4b97208834d8b60a4f447f3486fac1cf5be" translate="yes" xml:space="preserve">
          <source>Names of packages are always lower case and do not use underscores (&lt;code&gt;org.example.project&lt;/code&gt;). Using multi-word names is generally discouraged, but if you do need to use multiple words, you can either simply concatenate them together or use the camel case (&lt;code&gt;org.example.myProject&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7adf5dd484e8eda6819e4b4ab1a277a17337ee" translate="yes" xml:space="preserve">
          <source>Names of properties holding references to singleton objects can use the same naming style as &lt;code&gt;object&lt;/code&gt; declarations:</source>
          <target state="translated">Los nombres de propiedades que contienen referencias a objetos singleton pueden usar el mismo estilo de nomenclatura que las declaraciones de &lt;code&gt;object&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ae79cc54e87e697302be7b45dcff0dc1ad4a5a71" translate="yes" xml:space="preserve">
          <source>Names of top-level or object properties which hold objects with behavior or mutable data should use camel-case names:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd1c430f56a1096d7535c6bff1f0b002bb217ee" translate="yes" xml:space="preserve">
          <source>Names of top-level or object properties which hold objects with behavior or mutable data should use regular camel-hump names:</source>
          <target state="translated">Los nombres de las propiedades de alto nivel o de los objetos que contienen objetos con comportamiento o datos mutables deben usar nombres regulares de joroba de camello:</target>
        </trans-unit>
        <trans-unit id="a821637ed465037f50fb45146c7157533ce303ab" translate="yes" xml:space="preserve">
          <source>Naming coroutines for debugging</source>
          <target state="translated">Nombrar a los corutinos para la depuración</target>
        </trans-unit>
        <trans-unit id="b8f89bc873847bc6acb441471008e2ef77f271a2" translate="yes" xml:space="preserve">
          <source>Naming rules</source>
          <target state="translated">Reglas de denominación</target>
        </trans-unit>
        <trans-unit id="4fc6e7f740abb8af896ebedebf941a3f8d7076b5" translate="yes" xml:space="preserve">
          <source>Native</source>
          <target state="translated">Native</target>
        </trans-unit>
        <trans-unit id="e07b5a023f7c5a5f04d0e5aad4bebefda8aa00f8" translate="yes" xml:space="preserve">
          <source>Native language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fef23f394bf88af18c882c1743cd40cb415cca0" translate="yes" xml:space="preserve">
          <source>Native part of this project is written using Mac OS X, but don't worry if you are using another platform, the platform affects only directory names in this particular tutorial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea4ae3e9f6589c3114273e5666c4bcd3f5d7251" translate="yes" xml:space="preserve">
          <source>Native targets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712b0ca62af66efef9be01024a01163935118cd1" translate="yes" xml:space="preserve">
          <source>NativeFreeablePlacement</source>
          <target state="translated">NativeFreeablePlacement</target>
        </trans-unit>
        <trans-unit id="8c2ed68939229f0bed6cd8b6f2cb9306658a5c17" translate="yes" xml:space="preserve">
          <source>NativePlacement</source>
          <target state="translated">NativePlacement</target>
        </trans-unit>
        <trans-unit id="f6500269f9c3fb94b4438bc913d694314febde22" translate="yes" xml:space="preserve">
          <source>NativePointed</source>
          <target state="translated">NativePointed</target>
        </trans-unit>
        <trans-unit id="82e059ceb59aa7b7713c457045493d8d28dcc3f4" translate="yes" xml:space="preserve">
          <source>NativePtr</source>
          <target state="translated">NativePtr</target>
        </trans-unit>
        <trans-unit id="f504a9f397b7b30ca39f0ef1407b932940292f78" translate="yes" xml:space="preserve">
          <source>Natural order</source>
          <target state="translated">Orden natural</target>
        </trans-unit>
        <trans-unit id="c8e6f949b8ada118fdafbdc6ee8783d697f007cb" translate="yes" xml:space="preserve">
          <source>Navigator</source>
          <target state="translated">Navigator</target>
        </trans-unit>
        <trans-unit id="e7b5edc7e8cb311a0b039335c594c9a957eb3175" translate="yes" xml:space="preserve">
          <source>NavigatorConcurrentHardware</source>
          <target state="translated">NavigatorConcurrentHardware</target>
        </trans-unit>
        <trans-unit id="c539be135337dd03c6301959fad0ce1bee475889" translate="yes" xml:space="preserve">
          <source>NavigatorContentUtils</source>
          <target state="translated">NavigatorContentUtils</target>
        </trans-unit>
        <trans-unit id="00b43738cf147df0c752dcea119b953d47ded336" translate="yes" xml:space="preserve">
          <source>NavigatorCookies</source>
          <target state="translated">NavigatorCookies</target>
        </trans-unit>
        <trans-unit id="ca09397d83fa076ca8fa71c95007223165d66fb5" translate="yes" xml:space="preserve">
          <source>NavigatorID</source>
          <target state="translated">NavigatorID</target>
        </trans-unit>
        <trans-unit id="1c556456dba6623478e38282faadace5b5f02feb" translate="yes" xml:space="preserve">
          <source>NavigatorLanguage</source>
          <target state="translated">NavigatorLanguage</target>
        </trans-unit>
        <trans-unit id="b3ab2a10f83370ceafad9f996d8048d28d1a1363" translate="yes" xml:space="preserve">
          <source>NavigatorOnLine</source>
          <target state="translated">NavigatorOnLine</target>
        </trans-unit>
        <trans-unit id="e94d6507f620430ae9754053564c70782f33c7c9" translate="yes" xml:space="preserve">
          <source>NavigatorPlugins</source>
          <target state="translated">NavigatorPlugins</target>
        </trans-unit>
        <trans-unit id="d9fbd3abb2f5ec4cecd1798a95432e8b81ae26da" translate="yes" xml:space="preserve">
          <source>Negative durations are indicated with the sign &lt;code&gt;-&lt;/code&gt; in the beginning of the returned string, for example, &lt;code&gt;&quot;-PT5M30S&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f4b2c609e0e06e378710e78e2e3f9dbec6df11" translate="yes" xml:space="preserve">
          <source>Negative values show that it's less than the argument.</source>
          <target state="translated">Los valores negativos muestran que es menor que el argumento.</target>
        </trans-unit>
        <trans-unit id="789280e01339d5a915f0345cf138b9b4fb941c8e" translate="yes" xml:space="preserve">
          <source>Nested and Inner Classes</source>
          <target state="translated">Clases anidadas e internas</target>
        </trans-unit>
        <trans-unit id="ee69ace2d0864bd815e214e20536f1f61364fc0f" translate="yes" xml:space="preserve">
          <source>Nested classifiers in enum entries</source>
          <target state="translated">Clasificadores anidados en las entradas de la lista</target>
        </trans-unit>
        <trans-unit id="40c58381d790a3e7eec655ca2a16667d8a074dd3" translate="yes" xml:space="preserve">
          <source>Nested declarations in annotation classes</source>
          <target state="translated">Declaraciones anidadas en clases de anotación</target>
        </trans-unit>
        <trans-unit id="d053911ed6d5cc20ee675fd6a4520e78c20b1efb" translate="yes" xml:space="preserve">
          <source>Neutral bidirectional character type &quot;B&quot; in the Unicode specification.</source>
          <target state="translated">Carácter bidireccional neutro tipo &quot;B&quot; en la especificación de Unicode.</target>
        </trans-unit>
        <trans-unit id="8fd58ea9d9361ae87799e3e0adb497216a8850cd" translate="yes" xml:space="preserve">
          <source>Neutral bidirectional character type &quot;ON&quot; in the Unicode specification.</source>
          <target state="translated">Tipo de personaje bidireccional neutro &quot;ON&quot; en la especificación de Unicode.</target>
        </trans-unit>
        <trans-unit id="cc8492cfce3dced2f8758c8c41b89e84144de788" translate="yes" xml:space="preserve">
          <source>Neutral bidirectional character type &quot;S&quot; in the Unicode specification.</source>
          <target state="translated">Carácter bidireccional neutro tipo &quot;S&quot; en la especificación de Unicode.</target>
        </trans-unit>
        <trans-unit id="61ee633fcd6ff884b460c34fd4f698e42b8d1f57" translate="yes" xml:space="preserve">
          <source>Neutral bidirectional character type &quot;WS&quot; in the Unicode specification.</source>
          <target state="translated">Tipo de carácter bidireccional neutro &quot;WS&quot; en la especificación de Unicode.</target>
        </trans-unit>
        <trans-unit id="9ac5f98640f23386ec33233fa4af214ae29bb68c" translate="yes" xml:space="preserve">
          <source>Never equal to null: for any non-null value &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;x.equals(null)&lt;/code&gt; should return false.</source>
          <target state="translated">Nunca igual a nulo: para cualquier valor no nulo &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;x.equals(null)&lt;/code&gt; debe devolver falso.</target>
        </trans-unit>
        <trans-unit id="c8ca579cfa2a0bc063bd07e3a4d9c7f65e8e3087" translate="yes" xml:space="preserve">
          <source>Never put a space after &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, or before &lt;code&gt;]&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;.</source>
          <target state="translated">Nunca ponga un espacio despu&amp;eacute;s de &lt;code&gt;(&lt;/code&gt; , &lt;code&gt;[&lt;/code&gt; o antes &lt;code&gt;]&lt;/code&gt; , &lt;code&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9294e60ab9df0dbecb3a72a47335eee294748f65" translate="yes" xml:space="preserve">
          <source>Never put a space around &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;?.&lt;/code&gt;: &lt;code&gt;foo.bar().filter { it &amp;gt; 2 }.joinToString()&lt;/code&gt;, &lt;code&gt;foo?.bar()&lt;/code&gt;</source>
          <target state="translated">Nunca pongas un espacio alrededor &lt;code&gt;.&lt;/code&gt; o &lt;code&gt;?.&lt;/code&gt; : &lt;code&gt;foo.bar().filter { it &amp;gt; 2 }.joinToString()&lt;/code&gt; , &lt;code&gt;foo?.bar()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="173a0b969a9b68161594957b1cd5357cbb48048c" translate="yes" xml:space="preserve">
          <source>New Gradle DSL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21ed9281fad555e7dcb6510ab4e976127b7fe82" translate="yes" xml:space="preserve">
          <source>New JS IR backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae79d66965d4c0cc57387b4b47e5e3589788018" translate="yes" xml:space="preserve">
          <source>New JVM IR backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af046c4acdedea55629f58ed44ebddc002e5cd98" translate="yes" xml:space="preserve">
          <source>New JVM and JS IR backends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989c5da0440d6ef3c75ca61d82d832246ce632de" translate="yes" xml:space="preserve">
          <source>New Kotlin/JS IR compiler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9270b00134843c9e8c5f0f3b8e0652a9042f94" translate="yes" xml:space="preserve">
          <source>New REPL API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5c59a2bbadd734b58d0cdf8868f5b43a974739" translate="yes" xml:space="preserve">
          <source>New compiler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ecbc56a3b587240de857019ed42472997860f1" translate="yes" xml:space="preserve">
          <source>New constants &lt;code&gt;SIZE_BITS&lt;/code&gt; and &lt;code&gt;SIZE_BYTES&lt;/code&gt; in &lt;code&gt;Double&lt;/code&gt; and &lt;code&gt;Float&lt;/code&gt; contain the number of bits and bytes used to represent an instance of the type in binary form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cc00295a03cdc0d5d2ca1a6f412244f4917dc1" translate="yes" xml:space="preserve">
          <source>New dependencies resolution API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845d99d67846936e2a2ecffc0c1f73a93b077848" translate="yes" xml:space="preserve">
          <source>New extensions for &lt;code&gt;Iterable&amp;lt;T&amp;gt;&lt;/code&gt;, &lt;code&gt;Sequence&amp;lt;T&amp;gt;&lt;/code&gt;, and &lt;code&gt;CharSequence&lt;/code&gt; cover such use cases as buffering or batch processing (&lt;code&gt;chunked&lt;/code&gt;), sliding window and computing sliding average (&lt;code&gt;windowed&lt;/code&gt;) , and processing pairs of subsequent items (&lt;code&gt;zipWithNext&lt;/code&gt;):</source>
          <target state="translated">Las nuevas extensiones para &lt;code&gt;Iterable&amp;lt;T&amp;gt;&lt;/code&gt; , &lt;code&gt;Sequence&amp;lt;T&amp;gt;&lt;/code&gt; y &lt;code&gt;CharSequence&lt;/code&gt; cubren casos de uso como almacenamiento en b&amp;uacute;fer o procesamiento por lotes ( &lt;code&gt;chunked&lt;/code&gt; ), ventana deslizante y promedio deslizante de c&amp;aacute;lculo ( &lt;code&gt;windowed&lt;/code&gt; ) y pares de procesamiento de elementos subsiguientes ( &lt;code&gt;zipWithNext&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="16f375455c3a2c83f104b45a0445b26e5ba00ecc" translate="yes" xml:space="preserve">
          <source>New flexible Project Wizard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09adad3a69a569287abec26252236a8ef7e985b3" translate="yes" xml:space="preserve">
          <source>New functions &lt;code&gt;Appendable.appendLine()&lt;/code&gt; and &lt;code&gt;StringBuilder.appendLine()&lt;/code&gt; have been added to the common library. They replace the JVM-only &lt;code&gt;appendln()&lt;/code&gt; functions of these classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d2686296f1df263d46bcbfca3fdaea9db1c4d0" translate="yes" xml:space="preserve">
          <source>New functions for arrays and collections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b22755337ad345aa864f07ba922818138c1ba1" translate="yes" xml:space="preserve">
          <source>New functions for bit manipulations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22e233ab95d5952f18b874d9870e1b80280d15d" translate="yes" xml:space="preserve">
          <source>New functions were added for converting &lt;code&gt;Double&lt;/code&gt; and &lt;code&gt;Float&lt;/code&gt; to and from their bit representations:</source>
          <target state="translated">Se agregaron nuevas funciones para convertir &lt;code&gt;Double&lt;/code&gt; y &lt;code&gt;Float&lt;/code&gt; hacia y desde sus representaciones de bits:</target>
        </trans-unit>
        <trans-unit id="7653154d4f97f9c19e7f46ac9d7656126b88c3e1" translate="yes" xml:space="preserve">
          <source>New modes for generating default methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a692213a8035c6bb15d264ea2caf1103429f2f7d" translate="yes" xml:space="preserve">
          <source>New modes for generating default methods in interfaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8a2a969fd8be99ec6be35eb029b7dc76548704" translate="yes" xml:space="preserve">
          <source>New more powerful type inference algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d70a24587de24e818d3c9866f87b250cbc3b928" translate="yes" xml:space="preserve">
          <source>New overloads for &lt;code&gt;flatMap&lt;/code&gt; and &lt;code&gt;flatMapTo&lt;/code&gt; let you use transformations with return types that don&amp;rsquo;t match the receiver type, namely:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c41e8d2c414e76e3966946fcc4d1e55e43e96ed" translate="yes" xml:space="preserve">
          <source>New to Kotlin? Take a look at the &lt;a href=&quot;../tutorials/getting-started&quot;&gt;Getting Started&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28dcc6d65c266a50c3f667c9e5ea8aa135aa58a6" translate="yes" xml:space="preserve">
          <source>New to Kotlin? Take a look at the &lt;a href=&quot;basic-syntax&quot;&gt;Getting Started&lt;/a&gt; page.</source>
          <target state="translated">&amp;iquest;Nuevo en Kotlin? Eche un vistazo a la p&amp;aacute;gina de &lt;a href=&quot;basic-syntax&quot;&gt;introducci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9559254cbe41a97686cb7a5c40de455ecdf8ee6" translate="yes" xml:space="preserve">
          <source>New to Kotlin? Visit &lt;a href=&quot;../tutorials/getting-started&quot;&gt;Getting started with Kotlin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e8da4c8202228ea9b30591b9eab71045187fd4" translate="yes" xml:space="preserve">
          <source>New tools in the IDE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace94c443da13ea0551fdc402764ebb994877329" translate="yes" xml:space="preserve">
          <source>New, more powerful type inference algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f170caead65df254d786032a409a6f6d204bca6" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="translated">Próximos pasos</target>
        </trans-unit>
        <trans-unit id="74aa74cc0b50878cadec59790b51e20629f43624" translate="yes" xml:space="preserve">
          <source>Next create an empty &lt;code&gt;settings.gradle.kts&lt;/code&gt;&lt;code&gt;settings.gradle&lt;/code&gt; file in the project folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5079a9846101e11db84a1abb592a9473e268055f" translate="yes" xml:space="preserve">
          <source>Next open a new terminal and install Kotlin with:</source>
          <target state="translated">A continuación,abra una nueva terminal e instale Kotlin con:</target>
        </trans-unit>
        <trans-unit id="2f460c75911314c0c9543c3367959a31445cb463" translate="yes" xml:space="preserve">
          <source>Next, let's include the following line of code into the &lt;code&gt;MainActivity&lt;/code&gt; class from the &lt;code&gt;/app/src/main/java/&amp;lt;package&amp;gt;/MainActivity.kt&lt;/code&gt; file, to the end of the &lt;code&gt;onCreate&lt;/code&gt; method:</source>
          <target state="translated">A continuaci&amp;oacute;n, &lt;code&gt;MainActivity&lt;/code&gt; la siguiente l&amp;iacute;nea de c&amp;oacute;digo en la clase MainActivity desde el archivo &lt;code&gt;/app/src/main/java/&amp;lt;package&amp;gt;/MainActivity.kt&lt;/code&gt; , hasta el final del m&amp;eacute;todo &lt;code&gt;onCreate&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="61e1f7fc790c5246a6e519f4f67f422c4a517358" translate="yes" xml:space="preserve">
          <source>Next, we need to create the &lt;code&gt;SharedCode/build.gradle&lt;/code&gt; file with the following content:</source>
          <target state="translated">A continuaci&amp;oacute;n, necesitamos crear el archivo &lt;code&gt;SharedCode/build.gradle&lt;/code&gt; con el siguiente contenido:</target>
        </trans-unit>
        <trans-unit id="fba44f74cfbe24d927a6f2e32c74f105a6d9ca00" translate="yes" xml:space="preserve">
          <source>Next: Annotations &amp;rarr;</source>
          <target state="translated">Siguiente: Anotaciones &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="00ef744e43f0f9ea134186c2ef008876b94cfb5d" translate="yes" xml:space="preserve">
          <source>Next: Classes &amp;rarr;</source>
          <target state="translated">Siguiente: Clases &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c8735b85302131b9db681cecd1fb40aa277a0558" translate="yes" xml:space="preserve">
          <source>Next: Collections &amp;rarr;</source>
          <target state="translated">Siguiente: Colecciones &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="07999039cc4614cf9d9c83d8a64e7926f8829364" translate="yes" xml:space="preserve">
          <source>Next: Compiling and running &amp;rarr;</source>
          <target state="translated">Siguiente: Compilar y ejecutar &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="f20d28acc929c74946791930cf9c56d2978b64a8" translate="yes" xml:space="preserve">
          <source>Next: Conditionals &amp;rarr;</source>
          <target state="translated">Siguiente: Condicionales &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="840074b0ba8fd90b4e90aa33d45718551b373169" translate="yes" xml:space="preserve">
          <source>Next: Declaring variables &amp;rarr;</source>
          <target state="translated">Siguiente: Declaraci&amp;oacute;n de variables &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="cce5126b0175141ca7a8267a7936ebe65fe68d5f" translate="yes" xml:space="preserve">
          <source>Next: Documentation &amp;rarr;</source>
          <target state="translated">Siguiente: Documentaci&amp;oacute;n &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="fa55701df6604b3cecc0d604af09a04554d557b6" translate="yes" xml:space="preserve">
          <source>Next: Exceptions &amp;rarr;</source>
          <target state="translated">Siguiente: Excepciones &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="6b6aa34eef4e603a14fc427c78ce11728dd25836" translate="yes" xml:space="preserve">
          <source>Next: Extension functions/properties &amp;rarr;</source>
          <target state="translated">Siguiente: Funciones / propiedades de extensi&amp;oacute;n &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="085547cea36d9036af28992fd35c78130fafdd20" translate="yes" xml:space="preserve">
          <source>Next: File I/O &amp;rarr;</source>
          <target state="translated">Siguiente: E / S de archivo &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="1ad7d1fc04a3f8f5bb3171b2738d368b2e7962ea" translate="yes" xml:space="preserve">
          <source>Next: Functional programming &amp;rarr;</source>
          <target state="translated">Siguiente: Programaci&amp;oacute;n funcional &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="4ca230bdec76005c5c8ecf036e517045996d632a" translate="yes" xml:space="preserve">
          <source>Next: Functions &amp;rarr;</source>
          <target state="translated">Siguiente: Funciones &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="ee174e846c5088dfbb38266ba627304b28a4e778" translate="yes" xml:space="preserve">
          <source>Next: Generics &amp;rarr;</source>
          <target state="translated">Siguiente: Gen&amp;eacute;ricos &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="1fc3a42a52feb37755a354083cafdc34a3336119" translate="yes" xml:space="preserve">
          <source>Next: Hello World &amp;rarr;</source>
          <target state="translated">Siguiente: Hola mundo &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="3e18f658842ac7800584f5830d0086c6615ba81e" translate="yes" xml:space="preserve">
          <source>Next: Inheritance &amp;rarr;</source>
          <target state="translated">Siguiente: Herencia &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e300f7cf6a03c09bab1b47c326855a60fe6e07fb" translate="yes" xml:space="preserve">
          <source>Next: Loops &amp;rarr;</source>
          <target state="translated">Siguiente: Bucles &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="42aae1e29d68a1d88913d08cee33e89180a579d7" translate="yes" xml:space="preserve">
          <source>Next: Member references and reflection &amp;rarr;</source>
          <target state="translated">Siguiente: Reflexiones y referencias de miembros &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="47130dd2717d7971c3c94623669be8f3f6e6f3ff" translate="yes" xml:space="preserve">
          <source>Next: Null safety &amp;rarr;</source>
          <target state="translated">Siguiente: Seguridad nula &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="86e91a1d2169b2b6d5f0e4158807082816cf024d" translate="yes" xml:space="preserve">
          <source>Next: Objects and companion objects &amp;rarr;</source>
          <target state="translated">Siguiente: Objetos y objetos complementarios &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="6bfa5e253a9933523c52548db5718fffcec08ff4" translate="yes" xml:space="preserve">
          <source>Next: Packages and imports &amp;rarr;</source>
          <target state="translated">Siguiente: Paquetes e importaciones &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="61b315e1a975491d53d3e93505ae2e73a35eccf9" translate="yes" xml:space="preserve">
          <source>Next: Primitive data types and their limitations &amp;rarr;</source>
          <target state="translated">Siguiente: Tipos de datos primitivos y sus limitaciones &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a8e3f58e4df0923f458764df8d805bc1daaebc52" translate="yes" xml:space="preserve">
          <source>Next: Scoped resource usage &amp;rarr;</source>
          <target state="translated">Siguiente: Uso de recursos con alcance &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="d22ef24051b74c0f8f3a98dbd34b162df22e8d8a" translate="yes" xml:space="preserve">
          <source>Next: Strings &amp;rarr;</source>
          <target state="translated">Siguiente: Cadenas &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="df94caa7ffe6e8dba6f94ac077da12da6df4dd88" translate="yes" xml:space="preserve">
          <source>Next: Visibility modifiers &amp;rarr;</source>
          <target state="translated">Siguiente: Modificadores de visibilidad &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="dd6dd817ee9557c6ebd9ce223abe7e65e35724c3" translate="yes" xml:space="preserve">
          <source>Nice utility functions</source>
          <target state="translated">Bonitas funciones de utilidad</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="fc6d6d07a9da4b1cf8d3f863c9932b05d0b9d378" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;EXPRESSION&lt;/code&gt; and &lt;code&gt;FILE&lt;/code&gt; among &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.annotation/-annotation-target/index&quot;&gt;targets&lt;/a&gt;</source>
          <target state="translated">Sin &lt;code&gt;EXPRESSION&lt;/code&gt; y &lt;code&gt;FILE&lt;/code&gt; entre los &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.annotation/-annotation-target/index&quot;&gt;objetivos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71db6c85b97b050c649d7acbd611e8edba2e3836" translate="yes" xml:space="preserve">
          <source>No additional steps are required &amp;ndash; everything is done automatically. IntelliJ IDEA will help you detect common declarations that you can use in the shared code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50a5c00dba30dbb17216b740546f411fd49910a" translate="yes" xml:space="preserve">
          <source>No custom getter</source>
          <target state="translated">No hay un receptor personalizado</target>
        </trans-unit>
        <trans-unit id="c2792086f80dff691fc70c60e9944bd70ee578bb" translate="yes" xml:space="preserve">
          <source>No locks are used to synchronize an access to the &lt;a href=&quot;../-lazy/index&quot;&gt;Lazy&lt;/a&gt; instance value; if the instance is accessed from multiple threads, its behavior is undefined.</source>
          <target state="translated">No se utilizan bloqueos para sincronizar un acceso al valor de la instancia &lt;a href=&quot;../-lazy/index&quot;&gt;Lazy&lt;/a&gt; ; si se accede a la instancia desde varios subprocesos, su comportamiento no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="1576fb8454236b0d4fa99182ffbcc64b6805f9d7" translate="yes" xml:space="preserve">
          <source>No need to mark the Application class as &lt;em&gt;open&lt;/em&gt; since we are using the &lt;em&gt;kotlin-spring&lt;/em&gt; Gradle plugin which does that automatically.</source>
          <target state="translated">No es necesario marcar la clase Application como &lt;em&gt;abierta&lt;/em&gt; ya que estamos usando el &lt;em&gt;complemento kotlin-spring&lt;/em&gt; Gradle que lo hace autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="1ea178000db803133ca4ed5bf0f26cf40a2ac141" translate="yes" xml:space="preserve">
          <source>No parameters.</source>
          <target state="translated">No hay parámetros.</target>
        </trans-unit>
        <trans-unit id="a39dbb3db1c73d98fb6e9bf0a6cc7fe2780640aa" translate="yes" xml:space="preserve">
          <source>No raw types</source>
          <target state="translated">No hay tipos crudos</target>
        </trans-unit>
        <trans-unit id="84b5f398d24a67e5059f11c515447ba07e6f24c9" translate="yes" xml:space="preserve">
          <source>No smart cast on the last expression in a generic lambda</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad15ba5db27741d616898c8aab924962c482277" translate="yes" xml:space="preserve">
          <source>No type mismatch with an empty &lt;code&gt;when&lt;/code&gt; expression inside lambda</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4512f94421443be3bb6fe68bb037823683ccfd0a" translate="yes" xml:space="preserve">
          <source>No-arg compiler plugin</source>
          <target state="translated">Plugin de compilador no grande</target>
        </trans-unit>
        <trans-unit id="ec11a5bdeaa38cafa1809cd0b1418fa7f8f3cfef" translate="yes" xml:space="preserve">
          <source>No. Kotlin lets you choose between generating Java 6 and Java 8 compatible bytecode. More optimal byte code may be generated for higher versions of the platform.</source>
          <target state="translated">No.Kotlin te permite elegir entre generar un código de bytes compatible con Java 6 y Java 8.Se puede generar un código de byte más óptimo para versiones superiores de la plataforma.</target>
        </trans-unit>
        <trans-unit id="ce3234172e6888dbe6cf68e5d69aca93bdbdb6aa" translate="yes" xml:space="preserve">
          <source>No: called without the context object</source>
          <target state="translated">No:llamado sin el objeto de contexto</target>
        </trans-unit>
        <trans-unit id="44924246111ca028f4b377861fa8b1a56b2f8f3f" translate="yes" xml:space="preserve">
          <source>No: takes the context object as an argument.</source>
          <target state="translated">No:toma el objeto de contexto como argumento.</target>
        </trans-unit>
        <trans-unit id="23a71e363ee25bc12526201fd5e1559555edeab5" translate="yes" xml:space="preserve">
          <source>NoSuchElementException</source>
          <target state="translated">NoSuchElementException</target>
        </trans-unit>
        <trans-unit id="9a296716d89fec45e837ec162f0a3cdfae0666f6" translate="yes" xml:space="preserve">
          <source>NoSuchFileException</source>
          <target state="translated">NoSuchFileException</target>
        </trans-unit>
        <trans-unit id="8e965431f22047ddfc939473709e81428fafe4f0" translate="yes" xml:space="preserve">
          <source>NoSuchPropertyException</source>
          <target state="translated">NoSuchPropertyException</target>
        </trans-unit>
        <trans-unit id="dd82911bf9c2f7cf6fe3c3a3a0486e6fd4980949" translate="yes" xml:space="preserve">
          <source>NoWhenBranchMatchedException</source>
          <target state="translated">NoWhenBranchMatchedException</target>
        </trans-unit>
        <trans-unit id="10b3493287f831e81a438811a1ffba01f8cec4b7" translate="yes" xml:space="preserve">
          <source>Node.js</source>
          <target state="translated">Node.js</target>
        </trans-unit>
        <trans-unit id="6d1452836a5e358d27de613d82985d8f206e4345" translate="yes" xml:space="preserve">
          <source>NodeFilter</source>
          <target state="translated">NodeFilter</target>
        </trans-unit>
        <trans-unit id="749f705e68c34826a7cc3dffa5cbbe3e73f820de" translate="yes" xml:space="preserve">
          <source>NodeIterator</source>
          <target state="translated">NodeIterator</target>
        </trans-unit>
        <trans-unit id="05a2a8746fe10231011b4d6850be527a41c1c732" translate="yes" xml:space="preserve">
          <source>NodeList</source>
          <target state="translated">NodeList</target>
        </trans-unit>
        <trans-unit id="683af661ab161f85e9822c648db026a9cf30dda6" translate="yes" xml:space="preserve">
          <source>Non-constant vararg annotation parameters</source>
          <target state="translated">Parámetros de anotación de varargos no constantes</target>
        </trans-unit>
        <trans-unit id="dc9767217a1c7b0bf421fbdc439c549407505217" translate="yes" xml:space="preserve">
          <source>Non-existent type correction</source>
          <target state="translated">Corrección de tipo inexistente</target>
        </trans-unit>
        <trans-unit id="fe155a80a88ca53a5855fdd7ccb55154dece22f7" translate="yes" xml:space="preserve">
          <source>Non-external classes can't be extended by external classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4faaccd91d30b37f731dad2f02cd8a91e9099b87" translate="yes" xml:space="preserve">
          <source>Non-local returns</source>
          <target state="translated">Rendimientos no locales</target>
        </trans-unit>
        <trans-unit id="92dc2c3bbe1e4d97caf60f89e03fd837acb72669" translate="yes" xml:space="preserve">
          <source>Non-private fields</source>
          <target state="translated">Campos no privados</target>
        </trans-unit>
        <trans-unit id="f8f526d37ae54edc0292fa3b9fb52e0ef28cf4f3" translate="yes" xml:space="preserve">
          <source>Non-propagating use</source>
          <target state="translated">Uso no propagador</target>
        </trans-unit>
        <trans-unit id="806c74a6dd444e7b581fe8d0651c3b583f7e4a35" translate="yes" xml:space="preserve">
          <source>NonDocumentTypeChildNode</source>
          <target state="translated">NonDocumentTypeChildNode</target>
        </trans-unit>
        <trans-unit id="928c9a9956e3637b60b5e9617db297b95e7290fd" translate="yes" xml:space="preserve">
          <source>NonElementParentNode</source>
          <target state="translated">NonElementParentNode</target>
        </trans-unit>
        <trans-unit id="d75dfc52cb45227dc75a26a76fe24ef6aeb82f70" translate="yes" xml:space="preserve">
          <source>Normal functions (not marked as inline) cannot have reified parameters. A type that does not have a run-time representation (e.g. a non-reified type parameter or a fictitious type like &lt;code&gt;Nothing&lt;/code&gt;) cannot be used as an argument for a reified type parameter.</source>
          <target state="translated">Las funciones normales (no marcadas como en l&amp;iacute;nea) no pueden tener par&amp;aacute;metros reificados. Un tipo que no tiene una representaci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n (por ejemplo, un par&amp;aacute;metro de tipo no reificado o un tipo ficticio como &lt;code&gt;Nothing&lt;/code&gt; ) no se puede utilizar como argumento para un par&amp;aacute;metro de tipo reificado.</target>
        </trans-unit>
        <trans-unit id="49a45a50e6244c47619f28727155a0cbe41bd131" translate="yes" xml:space="preserve">
          <source>Normal methods can be overridden using the &lt;code&gt;override&lt;/code&gt; Kotlin keyword. In this case the overriding method must have the same parameter names as the overridden one.</source>
          <target state="translated">Los m&amp;eacute;todos normales se pueden anular utilizando la palabra clave &lt;code&gt;override&lt;/code&gt; Kotlin. En este caso, el m&amp;eacute;todo de anulaci&amp;oacute;n debe tener los mismos nombres de par&amp;aacute;metro que el anulado.</target>
        </trans-unit>
        <trans-unit id="a916e7bdcd294dc74af71b748cdce7d82df98e31" translate="yes" xml:space="preserve">
          <source>Normally, if you write a Kotlin function with default parameter values, it will be visible in Java only as a full signature, with all parameters present. If you wish to expose multiple overloads to Java callers, you can use the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-overloads/index&quot;&gt;&lt;code&gt;@JvmOverloads&lt;/code&gt;&lt;/a&gt; annotation.</source>
          <target state="translated">Normalmente, si escribe una funci&amp;oacute;n de Kotlin con valores de par&amp;aacute;metros predeterminados, ser&amp;aacute; visible en Java solo como una firma completa, con todos los par&amp;aacute;metros presentes. Si desea exponer m&amp;uacute;ltiples sobrecargas a los llamadores de Java, puede usar la anotaci&amp;oacute;n &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-overloads/index&quot;&gt; &lt;code&gt;@JvmOverloads&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a89db40e0b8cfbd047b44012190c470a3ee8af7" translate="yes" xml:space="preserve">
          <source>Normally, properties declared as having a non-null type must be initialized in the constructor. However, fairly often this is not convenient. For example, properties can be initialized through dependency injection, or in the setup method of a unit test. In this case, you cannot supply a non-null initializer in the constructor, but you still want to avoid null checks when referencing the property inside the body of a class.</source>
          <target state="translated">Normalmente,las propiedades declaradas como de tipo no nulo deben ser inicializadas en el constructor.Sin embargo,con bastante frecuencia esto no es conveniente.Por ejemplo,las propiedades pueden inicializarse mediante la inyección de dependencia o en el método de configuración de una prueba unitaria.En este caso,no se puede suministrar un inicializador no nulo en el constructor,pero aún así se desea evitar las comprobaciones nulas cuando se hace referencia a la propiedad dentro del cuerpo de una clase.</target>
        </trans-unit>
        <trans-unit id="a967d31a488ea79d5210d74fd176b0b854f6d231" translate="yes" xml:space="preserve">
          <source>Not only classes can have type parameters. Functions can, too. Type parameters are placed &lt;strong&gt;before&lt;/strong&gt; the name of the function:</source>
          <target state="translated">No solo las clases pueden tener par&amp;aacute;metros de tipo. Las funciones tambi&amp;eacute;n pueden hacerlo. Los par&amp;aacute;metros de tipo se colocan &lt;strong&gt;antes&lt;/strong&gt; del nombre de la funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="2efce3f5aa2c271d194d1082031602e01c017249" translate="yes" xml:space="preserve">
          <source>Not use any members that take a star-projected type as a parameter</source>
          <target state="translated">No utilizar ningún miembro que tome como parámetro un tipo de proyección de estrella</target>
        </trans-unit>
        <trans-unit id="68b62df2b207d9543eb97cef507795cf7a5eb731" translate="yes" xml:space="preserve">
          <source>Not-null assertion operator</source>
          <target state="translated">Operador de afirmación no nula</target>
        </trans-unit>
        <trans-unit id="8850b3bd61499741c05bd500ea7929ed489941ca" translate="yes" xml:space="preserve">
          <source>NotImplementedError</source>
          <target state="translated">NotImplementedError</target>
        </trans-unit>
        <trans-unit id="0525b1fa9e28d14aa40cc8644228138fdab333ad" translate="yes" xml:space="preserve">
          <source>Notation for Platform Types</source>
          <target state="translated">Notación para los tipos de plataforma</target>
        </trans-unit>
        <trans-unit id="346c210a245c6f4ac5e207e281e87f32eaf27522" translate="yes" xml:space="preserve">
          <source>Note how &lt;a href=&quot;../reference/properties#late-initialized-properties-and-variables&quot;&gt;the lateinit modifier&lt;/a&gt; allows to declare a non-null type initialized after the object is created (after the constructor call). Without &lt;code&gt;lateinit&lt;/code&gt; you'd have to declare a &lt;a href=&quot;../reference/null-safety&quot;&gt;nullable type&lt;/a&gt; and add additional nullability checks.</source>
          <target state="translated">Observe c&amp;oacute;mo &lt;a href=&quot;../reference/properties#late-initialized-properties-and-variables&quot;&gt;el modificador lateinit&lt;/a&gt; permite declarar un tipo no nulo inicializado despu&amp;eacute;s de que se crea el objeto (despu&amp;eacute;s de la llamada al constructor). Sin &lt;code&gt;lateinit&lt;/code&gt; , tendr&amp;iacute;a que declarar un &lt;a href=&quot;../reference/null-safety&quot;&gt;tipo anulable&lt;/a&gt; y agregar comprobaciones adicionales de nulabilidad.</target>
        </trans-unit>
        <trans-unit id="8d92da0b04ba642342db49ac8931c42f19e47f68" translate="yes" xml:space="preserve">
          <source>Note how both the first &lt;code&gt;async&lt;/code&gt; and the awaiting parent are cancelled on failure of one of the children (namely, &lt;code&gt;two&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece9aff9cfec4f422a4dd193e67bb220717aeb47" translate="yes" xml:space="preserve">
          <source>Note how easily one may forget the corresponding context element and then still safely access thread local. To avoid such situations, it is recommended to use &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/java.lang.-thread-local/ensure-present.html&quot;&gt;ensurePresent&lt;/a&gt; method and fail-fast on improper usages.</source>
          <target state="translated">Tenga en cuenta la facilidad con la que uno puede olvidar el elemento de contexto correspondiente y luego acceder de forma segura al hilo local. Para evitar tales situaciones, se recomienda utilizar el m&amp;eacute;todo &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/java.lang.-thread-local/ensure-present.html&quot;&gt;asegurar Presente&lt;/a&gt; y la funci&amp;oacute;n de prueba r&amp;aacute;pida en usos incorrectos.</target>
        </trans-unit>
        <trans-unit id="27e144234fbe29431367eab42a112f44ba9e6e90" translate="yes" xml:space="preserve">
          <source>Note on visibility</source>
          <target state="translated">Nota sobre la visibilidad</target>
        </trans-unit>
        <trans-unit id="f7e11b4556b13f0f82fdc5bafcd108c64e182fe4" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;android-plugin&quot;&gt;Kotlin Android Extensions&lt;/a&gt; plugin (automatically bundled into the Kotlin plugin in Android Studio) solves the same issue: replacing &lt;code&gt;findViewById&lt;/code&gt; with a concise and straightforward code. Consider using it unless you're already using ButterKnife and don't want to migrate.</source>
          <target state="translated">Tenga en cuenta que el complemento &lt;a href=&quot;android-plugin&quot;&gt;Kotlin Android Extensions&lt;/a&gt; (incluido autom&amp;aacute;ticamente en el complemento Kotlin en Android Studio) resuelve el mismo problema: reemplazar &lt;code&gt;findViewById&lt;/code&gt; con un c&amp;oacute;digo conciso y sencillo. Considere usarlo a menos que ya est&amp;eacute; usando ButterKnife y no quiera migrar.</target>
        </trans-unit>
        <trans-unit id="b10bef8aca468769cab7ca0f31c1ca35bfeef062" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/on-receive-or-null.html&quot;&gt;onReceiveOrNull&lt;/a&gt; is an extension function defined only for channels with non-nullable elements so that there is no accidental confusion between a closed channel and a null value.</source>
          <target state="translated">Tenga en cuenta que &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/on-receive-or-null.html&quot;&gt;onReceiveOrNull&lt;/a&gt; es una funci&amp;oacute;n de extensi&amp;oacute;n definida solo para canales con elementos que no aceptan valores NULL, de modo que no hay confusi&amp;oacute;n accidental entre un canal cerrado y un valor nulo.</target>
        </trans-unit>
        <trans-unit id="23cd4a64981ce83f9769929d7af16453dd2385a0" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/ticker.html&quot;&gt;ticker&lt;/a&gt; is aware of possible consumer pauses and, by default, adjusts next produced element delay if a pause occurs, trying to maintain a fixed rate of produced elements.</source>
          <target state="translated">Tenga en cuenta que el &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/ticker.html&quot;&gt;ticker&lt;/a&gt; es consciente de las posibles pausas del consumidor y, de forma predeterminada, ajusta el siguiente retraso del elemento producido si se produce una pausa, tratando de mantener una tasa fija de elementos producidos.</target>
        </trans-unit>
        <trans-unit id="131b4520face4a236da89068331e31a0d7aa6222" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/flat-map-latest.html&quot;&gt;flatMapLatest&lt;/a&gt; cancels all the code in its block (&lt;code&gt;{ requestFlow(it) }&lt;/code&gt; in this example) on a new value. It makes no difference in this particular example, because the call to &lt;code&gt;requestFlow&lt;/code&gt; itself is fast, not-suspending, and cannot be cancelled. However, it would show up if we were to use suspending functions like &lt;code&gt;delay&lt;/code&gt; in there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5c7b7073a0bba2e74915321424408f53194a4f" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/launch-in.html&quot;&gt;launchIn&lt;/a&gt; also returns a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/index.html&quot;&gt;Job&lt;/a&gt;, which can be used to &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/cancel.html&quot;&gt;cancel&lt;/a&gt; the corresponding flow collection coroutine only without cancelling the whole scope or to &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/join.html&quot;&gt;join&lt;/a&gt; it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f574aa6b81a2a53d14300616da27a08406bc5d" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/is-active.html&quot;&gt;isActive&lt;/a&gt; in &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScope&lt;/a&gt; is just a convenient shortcut for &lt;code&gt;coroutineContext[Job]?.isActive == true&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/is-active.html&quot;&gt;isActive&lt;/a&gt; en &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScope&lt;/a&gt; es solo un atajo conveniente para &lt;code&gt;coroutineContext[Job]?.isActive == true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="643f0957c5be70b41f4b5877b3662ee68c79f859" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;-&lt;/code&gt; is an &lt;em&gt;invalid&lt;/em&gt; symbol in Java, meaning that it's impossible to call functions which accept inline classes from Java.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;-&lt;/code&gt; es un s&amp;iacute;mbolo &lt;em&gt;no v&amp;aacute;lido&lt;/em&gt; en Java, lo que significa que es imposible llamar a funciones que aceptan clases en l&amp;iacute;nea de Java.</target>
        </trans-unit>
        <trans-unit id="03758602dc3b2452cf0e64c49a0cb963ee530c0a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;running-fold#kotlin.collections%24runningFold(kotlin.Array((kotlin.collections.runningFold.T)),%20kotlin.collections.runningFold.R,%20kotlin.Function2((kotlin.collections.runningFold.R,%20kotlin.collections.runningFold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8aa9281cc8b418edea85a2bf3ca88882053015" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;running-fold#kotlin.sequences%24runningFold(kotlin.sequences.Sequence((kotlin.sequences.runningFold.T)),%20kotlin.sequences.runningFold.R,%20kotlin.Function2((kotlin.sequences.runningFold.R,%20kotlin.sequences.runningFold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting sequence. The &lt;a href=&quot;running-fold#kotlin.sequences%24runningFold(kotlin.sequences.Sequence((kotlin.sequences.runningFold.T)),%20kotlin.sequences.runningFold.R,%20kotlin.Function2((kotlin.sequences.runningFold.R,%20kotlin.sequences.runningFold.T,%20)))/initial&quot;&gt;initial&lt;/a&gt; value should also be immutable (or should not be mutated) as it may be passed to &lt;a href=&quot;running-fold#kotlin.sequences%24runningFold(kotlin.sequences.Sequence((kotlin.sequences.runningFold.T)),%20kotlin.sequences.runningFold.R,%20kotlin.Function2((kotlin.sequences.runningFold.R,%20kotlin.sequences.runningFold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function later because of sequence's lazy nature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ca381fc946fb37c11c042a2366c07f8ed20c11" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;running-fold#kotlin.text%24runningFold(kotlin.CharSequence,%20kotlin.text.runningFold.R,%20kotlin.Function2((kotlin.text.runningFold.R,%20kotlin.Char,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40ac120d9c9edcb8769f6d7f2a8f27874d59145" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;running-fold-indexed#kotlin.collections%24runningFoldIndexed(kotlin.Array((kotlin.collections.runningFoldIndexed.T)),%20kotlin.collections.runningFoldIndexed.R,%20kotlin.Function3((kotlin.Int,%20kotlin.collections.runningFoldIndexed.R,%20kotlin.collections.runningFoldIndexed.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2fda3f798baf6f1d83285abe446a3ba761535f" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;running-fold-indexed#kotlin.collections%24runningFoldIndexed(kotlin.collections.Iterable((kotlin.collections.runningFoldIndexed.T)),%20kotlin.collections.runningFoldIndexed.R,%20kotlin.Function3((kotlin.Int,%20kotlin.collections.runningFoldIndexed.R,%20kotlin.collections.runningFoldIndexed.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b1346b6b8c92d47cee1ee97ada23422764fb64" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;running-fold-indexed#kotlin.sequences%24runningFoldIndexed(kotlin.sequences.Sequence((kotlin.sequences.runningFoldIndexed.T)),%20kotlin.sequences.runningFoldIndexed.R,%20kotlin.Function3((kotlin.Int,%20kotlin.sequences.runningFoldIndexed.R,%20kotlin.sequences.runningFoldIndexed.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting sequence. The &lt;a href=&quot;running-fold-indexed#kotlin.sequences%24runningFoldIndexed(kotlin.sequences.Sequence((kotlin.sequences.runningFoldIndexed.T)),%20kotlin.sequences.runningFoldIndexed.R,%20kotlin.Function3((kotlin.Int,%20kotlin.sequences.runningFoldIndexed.R,%20kotlin.sequences.runningFoldIndexed.T,%20)))/initial&quot;&gt;initial&lt;/a&gt; value should also be immutable (or should not be mutated) as it may be passed to &lt;a href=&quot;running-fold-indexed#kotlin.sequences%24runningFoldIndexed(kotlin.sequences.Sequence((kotlin.sequences.runningFoldIndexed.T)),%20kotlin.sequences.runningFoldIndexed.R,%20kotlin.Function3((kotlin.Int,%20kotlin.sequences.runningFoldIndexed.R,%20kotlin.sequences.runningFoldIndexed.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function later because of sequence's lazy nature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75882a7e52e25efcc07b6366c21c745e8ef0051b" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;running-fold-indexed#kotlin.text%24runningFoldIndexed(kotlin.CharSequence,%20kotlin.text.runningFoldIndexed.R,%20kotlin.Function3((kotlin.Int,%20kotlin.text.runningFoldIndexed.R,%20kotlin.Char,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd70eea535301f56683376581df2e3f4677485c4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;running-reduce#kotlin.collections%24runningReduce(kotlin.Array((kotlin.collections.runningReduce.T)),%20kotlin.Function2((kotlin.collections.runningReduce.S,%20kotlin.collections.runningReduce.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de21e694f26ab18feda31fbd43d422fb02a0d178" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;running-reduce#kotlin.collections%24runningReduce(kotlin.UIntArray,%20kotlin.Function2((kotlin.UInt,%20,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8746e4dcf17bacec9ebb95a1d8cb4b3c069b2a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;running-reduce#kotlin.collections%24runningReduce(kotlin.collections.Iterable((kotlin.collections.runningReduce.T)),%20kotlin.Function2((kotlin.collections.runningReduce.S,%20kotlin.collections.runningReduce.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41af4593a52efc76a9fea5aa683f3c7b5a883903" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;running-reduce#kotlin.sequences%24runningReduce(kotlin.sequences.Sequence((kotlin.sequences.runningReduce.T)),%20kotlin.Function2((kotlin.sequences.runningReduce.S,%20kotlin.sequences.runningReduce.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152a0b8a8968f1a82845f9b64e58e80b6fd2f81b" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;running-reduce#kotlin.text%24runningReduce(kotlin.CharSequence,%20kotlin.Function2((kotlin.Char,%20,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d049cb5bb8546b11f8216112a888981c37e96b8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;running-reduce-indexed#kotlin.collections%24runningReduceIndexed(kotlin.Array((kotlin.collections.runningReduceIndexed.T)),%20kotlin.Function3((kotlin.Int,%20kotlin.collections.runningReduceIndexed.S,%20kotlin.collections.runningReduceIndexed.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9bcc341f4132f088bdab2be4425d40ddc615a3" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;running-reduce-indexed#kotlin.collections%24runningReduceIndexed(kotlin.collections.Iterable((kotlin.collections.runningReduceIndexed.T)),%20kotlin.Function3((kotlin.Int,%20kotlin.collections.runningReduceIndexed.S,%20kotlin.collections.runningReduceIndexed.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83abe45ee39b7587d04b337f770a5924b234203c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;running-reduce-indexed#kotlin.sequences%24runningReduceIndexed(kotlin.sequences.Sequence((kotlin.sequences.runningReduceIndexed.T)),%20kotlin.Function3((kotlin.Int,%20kotlin.sequences.runningReduceIndexed.S,%20kotlin.sequences.runningReduceIndexed.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c4bc95bb8c2891e9bb7b20d652cbe7fbd48927" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;running-reduce-indexed#kotlin.text%24runningReduceIndexed(kotlin.CharSequence,%20kotlin.Function3((kotlin.Int,%20kotlin.Char,%20,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8795c08ad9ad064f0b6838d8290c2137d37ef95a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;scan#kotlin.collections%24scan(kotlin.Array((kotlin.collections.scan.T)),%20kotlin.collections.scan.R,%20kotlin.Function2((kotlin.collections.scan.R,%20kotlin.collections.scan.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e489db524f2bcf688718d45748d15fcfba1a29" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;scan#kotlin.sequences%24scan(kotlin.sequences.Sequence((kotlin.sequences.scan.T)),%20kotlin.sequences.scan.R,%20kotlin.Function2((kotlin.sequences.scan.R,%20kotlin.sequences.scan.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting sequence. The &lt;a href=&quot;scan#kotlin.sequences%24scan(kotlin.sequences.Sequence((kotlin.sequences.scan.T)),%20kotlin.sequences.scan.R,%20kotlin.Function2((kotlin.sequences.scan.R,%20kotlin.sequences.scan.T,%20)))/initial&quot;&gt;initial&lt;/a&gt; value should also be immutable (or should not be mutated) as it may be passed to &lt;a href=&quot;scan#kotlin.sequences%24scan(kotlin.sequences.Sequence((kotlin.sequences.scan.T)),%20kotlin.sequences.scan.R,%20kotlin.Function2((kotlin.sequences.scan.R,%20kotlin.sequences.scan.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function later because of sequence's lazy nature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79cc76bb710e36d8de9ad25cea2a77780fffb434" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;scan#kotlin.text%24scan(kotlin.CharSequence,%20kotlin.text.scan.R,%20kotlin.Function2((kotlin.text.scan.R,%20kotlin.Char,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7099f57ba54284d2444dad5f8fedba54956e060" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;scan-indexed#kotlin.collections%24scanIndexed(kotlin.Array((kotlin.collections.scanIndexed.T)),%20kotlin.collections.scanIndexed.R,%20kotlin.Function3((kotlin.Int,%20kotlin.collections.scanIndexed.R,%20kotlin.collections.scanIndexed.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3869070c59fb70cbd4ec0b0566a7fca8e7a17980" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;scan-indexed#kotlin.collections%24scanIndexed(kotlin.collections.Iterable((kotlin.collections.scanIndexed.T)),%20kotlin.collections.scanIndexed.R,%20kotlin.Function3((kotlin.Int,%20kotlin.collections.scanIndexed.R,%20kotlin.collections.scanIndexed.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe362b74e7af2be9842f51fbb04ae820ed28e68" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;scan-indexed#kotlin.sequences%24scanIndexed(kotlin.sequences.Sequence((kotlin.sequences.scanIndexed.T)),%20kotlin.sequences.scanIndexed.R,%20kotlin.Function3((kotlin.Int,%20kotlin.sequences.scanIndexed.R,%20kotlin.sequences.scanIndexed.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting sequence. The &lt;a href=&quot;scan-indexed#kotlin.sequences%24scanIndexed(kotlin.sequences.Sequence((kotlin.sequences.scanIndexed.T)),%20kotlin.sequences.scanIndexed.R,%20kotlin.Function3((kotlin.Int,%20kotlin.sequences.scanIndexed.R,%20kotlin.sequences.scanIndexed.T,%20)))/initial&quot;&gt;initial&lt;/a&gt; value should also be immutable (or should not be mutated) as it may be passed to &lt;a href=&quot;scan-indexed#kotlin.sequences%24scanIndexed(kotlin.sequences.Sequence((kotlin.sequences.scanIndexed.T)),%20kotlin.sequences.scanIndexed.R,%20kotlin.Function3((kotlin.Int,%20kotlin.sequences.scanIndexed.R,%20kotlin.sequences.scanIndexed.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; function later because of sequence's lazy nature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d9b139c6b38f486958ef873df63788380defb8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;acc&lt;/code&gt; value passed to &lt;a href=&quot;scan-indexed#kotlin.text%24scanIndexed(kotlin.CharSequence,%20kotlin.text.scanIndexed.R,%20kotlin.Function3((kotlin.Int,%20kotlin.text.scanIndexed.R,%20kotlin.Char,%20)))/operation&quot;&gt;operation&lt;/a&gt; function should not be mutated; otherwise it would affect the previous value in resulting list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326418c4e5742c7d5633cf6eb21a36a9bd5007fa" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;associate()&lt;/code&gt; produces short-living &lt;code&gt;Pair&lt;/code&gt; objects which may affect the performance. Thus, &lt;code&gt;associate()&lt;/code&gt; should be used when the performance isn't critical or it's more preferable than other options.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;associate()&lt;/code&gt; produce objetos &lt;code&gt;Pair&lt;/code&gt; de corta duraci&amp;oacute;n que pueden afectar el rendimiento. Por lo tanto, &lt;code&gt;associate()&lt;/code&gt; debe usarse cuando el rendimiento no es cr&amp;iacute;tico o es m&amp;aacute;s preferible que otras opciones.</target>
        </trans-unit>
        <trans-unit id="4712744d1c59fe11b666d701399f2acdde076310" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;external&lt;/code&gt; modifier is inherited by nested declarations, i.e. in &lt;code&gt;Node&lt;/code&gt; class we do not put &lt;code&gt;external&lt;/code&gt; before member functions and properties.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;external&lt;/code&gt; modificador externo se hereda mediante declaraciones anidadas, es decir, en la clase &lt;code&gt;Node&lt;/code&gt; no colocamos &lt;code&gt;external&lt;/code&gt; antes de las funciones y propiedades miembro.</target>
        </trans-unit>
        <trans-unit id="7c2abf53e89201db42a6d7da34bd24e5d79ffb90" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;jQuery&lt;/code&gt; needs to be included in the corresponding HTML:</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;jQuery&lt;/code&gt; debe incluirse en el HTML correspondiente:</target>
        </trans-unit>
        <trans-unit id="6dad8a9dc84479a543fb591b568c6388d8e68cdf" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;kotlinx.serialization&lt;/code&gt; libraries use their own versioning structure, which doesn&amp;rsquo;t match the Kotlin's. Check out the releases on &lt;a href=&quot;https://github.com/Kotlin/kotlinx.serialization/releases&quot;&gt;GitHub&lt;/a&gt; to find the latest versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a130b307700ca7edccdf73fda8c49be967259f51" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;null&lt;/em&gt; cannot be cast to &lt;code&gt;String&lt;/code&gt; as this type is not &lt;a href=&quot;null-safety&quot;&gt;nullable&lt;/a&gt;, i.e. if &lt;code&gt;y&lt;/code&gt; is null, the code above throws an exception. In order to match Java cast semantics we have to have nullable type at cast right hand side, like:</source>
          <target state="translated">Tenga en cuenta que &lt;em&gt;nulo&lt;/em&gt; no se puede convertir en &lt;code&gt;String&lt;/code&gt; ya que este tipo no &lt;a href=&quot;null-safety&quot;&gt;admite&lt;/a&gt; nulos, es decir, si &lt;code&gt;y&lt;/code&gt; es nulo, el c&amp;oacute;digo anterior arroja una excepci&amp;oacute;n. Para que coincida con la sem&amp;aacute;ntica de conversi&amp;oacute;n de Java, tenemos que tener un tipo anulable en el lado derecho de transmisi&amp;oacute;n, como:</target>
        </trans-unit>
        <trans-unit id="50af001ffdcccd71b90632cabd329ef39ee390e5" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;null&lt;/em&gt; cannot be cast to &lt;code&gt;String&lt;/code&gt; as this type is not &lt;a href=&quot;null-safety&quot;&gt;nullable&lt;/a&gt;, i.e. if &lt;code&gt;y&lt;/code&gt; is null, the code above throws an exception. To make such code correct for null values, use the nullable type on the right hand side of the cast:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b25bca041a3db971a025c2e5df5df075febfd74" translate="yes" xml:space="preserve">
          <source>Note that KDoc does not have any syntax for resolving overloaded members in links. Since the Kotlin documentation generation tool puts the documentation for all overloads of a function on the same page, identifying a specific overloaded function is not required for the link to work.</source>
          <target state="translated">Tenga en cuenta que KDoc no tiene ninguna sintaxis para resolver miembros sobrecargados en los enlaces.Dado que la herramienta de generación de documentación de Kotlin pone la documentación para todas las sobrecargas de una función en la misma página,la identificación de una función específica sobrecargada no es necesaria para que el enlace funcione.</target>
        </trans-unit>
        <trans-unit id="378fb47127c89ebfae61cf028d6a1d9ec0aaa851" translate="yes" xml:space="preserve">
          <source>Note that Kapt does not support multiple rounds for the generated Kotlin files.</source>
          <target state="translated">Tenga en cuenta que Kapt no soporta rondas múltiples para los archivos Kotlin generados.</target>
        </trans-unit>
        <trans-unit id="f3383898decca7a9f7b6deb5d495a2e5e68df372" translate="yes" xml:space="preserve">
          <source>Note that Kotlin compiler does not apply such mangling to &lt;code&gt;external&lt;/code&gt; declarations, so you don't have to use &lt;code&gt;@JsName&lt;/code&gt; on them. Another case worth noticing is inheriting non-external classes from external classes. In this case any overridden functions won't be mangled as well.</source>
          <target state="translated">Tenga en cuenta que el compilador de Kotlin no aplica tal alteraci&amp;oacute;n a &lt;code&gt;external&lt;/code&gt; declaraciones externas , por lo que no tiene que usar &lt;code&gt;@JsName&lt;/code&gt; en ellas. Otro caso que vale la pena notar es la herencia de clases no externas de clases externas. En este caso, las funciones anuladas tampoco se alterar&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="123a11d8fa5ed53f8ac07b91892dff993cf556e9" translate="yes" xml:space="preserve">
          <source>Note that Kotlin does not have a &lt;em&gt;new&lt;/em&gt; keyword.</source>
          <target state="translated">Tenga en cuenta que Kotlin no tiene una &lt;em&gt;nueva&lt;/em&gt; palabra clave.</target>
        </trans-unit>
        <trans-unit id="24cefba751ca3442834b1d28297766c4dedb14f5" translate="yes" xml:space="preserve">
          <source>Note that SAM conversions only work for interfaces, not for abstract classes, even if those also have just a single abstract method.</source>
          <target state="translated">Obsérvese que las conversiones SAM sólo funcionan para las interfaces,no para las clases abstractas,aunque éstas también tengan un único método abstracto.</target>
        </trans-unit>
        <trans-unit id="50497e29cee31d617bb240dff5362b9731a558da" translate="yes" xml:space="preserve">
          <source>Note that a &lt;code&gt;for&lt;/code&gt; loop always implicitly declares a new read-only variable (in this example, &lt;code&gt;name&lt;/code&gt;) - if the outer scope already contains a variable with the same name, it will be shadowed by the unrelated loop variable. For the same reason, the final value of the loop variable is not accessible after the loop.</source>
          <target state="translated">Tenga en cuenta que un bucle &lt;code&gt;for&lt;/code&gt; siempre declara impl&amp;iacute;citamente una nueva variable de solo lectura (en este ejemplo, &lt;code&gt;name&lt;/code&gt; ); si el &amp;aacute;mbito externo ya contiene una variable con el mismo nombre, ser&amp;aacute; sombreada por la variable de bucle no relacionada. Por la misma raz&amp;oacute;n, el valor final de la variable de ciclo no es accesible despu&amp;eacute;s del ciclo.</target>
        </trans-unit>
        <trans-unit id="f345c0305c039a5c5d92b2679df3ab69307a3616" translate="yes" xml:space="preserve">
          <source>Note that a Kotlin class reference is not the same as a Java class reference. To obtain a Java class reference, use the &lt;code&gt;.java&lt;/code&gt; property on a &lt;code&gt;KClass&lt;/code&gt; instance.</source>
          <target state="translated">Tenga en cuenta que una referencia de clase de Kotlin no es lo mismo que una referencia de clase de Java. Para obtener una referencia de clase de Java, use la propiedad &lt;code&gt;.java&lt;/code&gt; en una instancia de &lt;code&gt;KClass&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0206a8d998dc749c92f53c56e6d927b2e3bb8c96" translate="yes" xml:space="preserve">
          <source>Note that a boxed primitive type used as a type parameter is mapped to a platform type: for example, &lt;code&gt;List&amp;lt;java.lang.Integer&amp;gt;&lt;/code&gt; becomes a &lt;code&gt;List&amp;lt;Int!&amp;gt;&lt;/code&gt; in Kotlin.</source>
          <target state="translated">Tenga en cuenta que un tipo primitivo en caja utilizado como par&amp;aacute;metro de tipo se asigna a un tipo de plataforma: por ejemplo, &lt;code&gt;List&amp;lt;java.lang.Integer&amp;gt;&lt;/code&gt; convierte en &lt;code&gt;List&amp;lt;Int!&amp;gt;&lt;/code&gt; En Kotlin.</target>
        </trans-unit>
        <trans-unit id="cda0f8a2d7cf131c070c968ead3e02616cc75710" translate="yes" xml:space="preserve">
          <source>Note that a file marked with the &lt;code&gt;@JsQualifier(...)&lt;/code&gt; annotation can't contain non-&lt;code&gt;external&lt;/code&gt; declarations.</source>
          <target state="translated">Tenga en cuenta que un archivo marcado con la &lt;code&gt;@JsQualifier(...)&lt;/code&gt; no puede contener declaraciones no &lt;code&gt;external&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="406525d21e4a3c81c722c7741ff866f95a0130cf" translate="yes" xml:space="preserve">
          <source>Note that a function type with no receiver is inferred by default, even if a variable is initialized with a reference to an extension function. To alter that, specify the variable type explicitly.</source>
          <target state="translated">Obsérvese que un tipo de función sin receptor se infiere por defecto,incluso si una variable se inicializa con una referencia a una función de extensión.Para modificarlo,especifique el tipo de variable explícitamente.</target>
        </trans-unit>
        <trans-unit id="b53df8b9afb9e806e949a0d6af036fa85a8a9db9" translate="yes" xml:space="preserve">
          <source>Note that a module referenced by a dependency declared for &lt;code&gt;commonMain&lt;/code&gt; or &lt;code&gt;commonTest&lt;/code&gt; source set must be published using the &lt;code&gt;kotlin-multiplatform&lt;/code&gt; plugin. If you want to use libraries published by the &lt;code&gt;kotlin-platform-native&lt;/code&gt; plugin, you need to declare a separate source set for common native sources.</source>
          <target state="translated">Tenga en cuenta que un m&amp;oacute;dulo al que hace referencia una dependencia declarada para el conjunto de fuentes &lt;code&gt;commonMain&lt;/code&gt; o &lt;code&gt;commonTest&lt;/code&gt; debe publicarse utilizando el &lt;code&gt;kotlin-multiplatform&lt;/code&gt; . Si desea utilizar bibliotecas publicadas por el &lt;code&gt;kotlin-platform-native&lt;/code&gt; , debe declarar un conjunto de fuentes separado para las fuentes nativas comunes.</target>
        </trans-unit>
        <trans-unit id="aabfde036fd2818a0141922790ccaf4bae3c804f" translate="yes" xml:space="preserve">
          <source>Note that a newly created source set isn&amp;rsquo;t connected to other ones. To use it in the project&amp;rsquo;s compilations, &lt;a href=&quot;mpp-share-on-platforms#configure-the-hierarchical-structure-manually&quot;&gt;connect it with other source sets&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07dbd163eca990505b14bc6390f514e8f9d894c6" translate="yes" xml:space="preserve">
          <source>Note that a read-only variable is not a constant per se: it can be initialized with the value of a variable (so its value doesn't need to be known at compile-time), and if it is declared inside a construct that is repeatedly invoked (such as a function or a loop), it can take on a different value on each invocation. Also, while the read-only variable may not be reassigned while it is in scope, it can still refer to an object which is in itself mutable (such as a list).</source>
          <target state="translated">Obsérvese que una variable de sólo lectura no es una constante per se:puede inicializarse con el valor de una variable (por lo que no es necesario conocer su valor en tiempo de compilación),y si se declara dentro de una construcción que se invoca repetidamente (como una función o un bucle),puede tomar un valor diferente en cada invocación.Además,aunque la variable de sólo lectura no puede reasignarse mientras esté en el ámbito de aplicación,puede seguir refiriéndose a un objeto que es en sí mismo mutable (como una lista).</target>
        </trans-unit>
        <trans-unit id="89edad7d707ce970adc3246bd03659328accf5e4" translate="yes" xml:space="preserve">
          <source>Note that all classes in this tutorial are in the &lt;code&gt;org.jetbrains.kotlin.demo&lt;/code&gt; package.</source>
          <target state="translated">Tenga en cuenta que todas las clases de este tutorial est&amp;aacute;n en el paquete &lt;code&gt;org.jetbrains.kotlin.demo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="947743e2754cd1fc71c9e184a0a32e5a016187af" translate="yes" xml:space="preserve">
          <source>Note that all libraries except JSON serialization (&lt;code&gt;kotlinx-serialization-core&lt;/code&gt;) are in the experimental state, which means their API can be changed without notice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e339722ad427ded0a06508490a0f24fc47b54f2b" translate="yes" xml:space="preserve">
          <source>Note that altering a mutable collection doesn't require it to be a &lt;a href=&quot;basic-syntax#defining-variables&quot;&gt;&lt;code&gt;var&lt;/code&gt;&lt;/a&gt;: write operations modify the same mutable collection object, so the reference doesn't change. Although, if you try to reassign a &lt;code&gt;val&lt;/code&gt; collection, you'll get a compilation error.</source>
          <target state="translated">Tenga en cuenta que alterar una colecci&amp;oacute;n mutable no requiere que sea una &lt;a href=&quot;basic-syntax#defining-variables&quot;&gt; &lt;code&gt;var&lt;/code&gt; &lt;/a&gt; : operaciones de escritura modifican el mismo objeto de colecci&amp;oacute;n mutable, por lo que la referencia no cambia. Sin embargo, si intenta reasignar una colecci&amp;oacute;n &lt;code&gt;val&lt;/code&gt; , obtendr&amp;aacute; un error de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="402c9cc77c78831d6ef7a6f5b12edeefd76b9797" translate="yes" xml:space="preserve">
          <source>Note that an &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/actor.html&quot;&gt;actor&lt;/a&gt; coroutine builder is a dual of &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/produce.html&quot;&gt;produce&lt;/a&gt; coroutine builder. An actor is associated with the channel that it receives messages from, while a producer is associated with the channel that it sends elements to.</source>
          <target state="translated">Tenga en cuenta que un constructor de corrutinas de &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/actor.html&quot;&gt;actor&lt;/a&gt; es un constructor dual de corutinas de &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/produce.html&quot;&gt;productos&lt;/a&gt; . Un actor est&amp;aacute; asociado con el canal del que recibe mensajes, mientras que un productor est&amp;aacute; asociado con el canal al que env&amp;iacute;a elementos.</target>
        </trans-unit>
        <trans-unit id="3f7eda5be515629fb292c86295db20e329d1452f" translate="yes" xml:space="preserve">
          <source>Note that an order of &lt;a href=&quot;compare-by-descending#kotlin.comparisons%24compareByDescending%28kotlin.Comparator%28%28kotlin.comparisons.compareByDescending.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareByDescending.T%2C+kotlin.comparisons.compareByDescending.K%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; is reversed by this wrapper.</source>
          <target state="translated">Tenga en cuenta que esta envoltura invierte el orden del &lt;a href=&quot;compare-by-descending#kotlin.comparisons%24compareByDescending%28kotlin.Comparator%28%28kotlin.comparisons.compareByDescending.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareByDescending.T%2C+kotlin.comparisons.compareByDescending.K%29%29%29%2Fcomparator&quot;&gt;comparador&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5d17efed58ea9f37046b141c69cdea45b1227096" translate="yes" xml:space="preserve">
          <source>Note that an order of &lt;a href=&quot;compare-by-descending#kotlin.comparisons%24compareByDescending(kotlin.Comparator((kotlin.comparisons.compareByDescending.K)),%20kotlin.Function1((kotlin.comparisons.compareByDescending.T,%20kotlin.comparisons.compareByDescending.K)))/comparator&quot;&gt;comparator&lt;/a&gt; is reversed by this wrapper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cfcc2bcacb2464eb49e0f0ddd2d5c9c0f5de73" translate="yes" xml:space="preserve">
          <source>Note that anonymous function parameters are always passed inside the parentheses. The shorthand syntax allowing to leave the function outside the parentheses works only for lambda expressions.</source>
          <target state="translated">Observe que los parámetros de la función anónima siempre se pasan entre paréntesis.La sintaxis abreviada que permite dejar la función fuera de los paréntesis funciona sólo para las expresiones lambda.</target>
        </trans-unit>
        <trans-unit id="9217d029286f8cd07e91756805e90b92b90c8d04" translate="yes" xml:space="preserve">
          <source>Note that anonymous objects can be used as types only in local and private declarations. If you use an anonymous object as a return type of a public function or the type of a public property, the actual type of that function or property will be the declared supertype of the anonymous object, or &lt;code&gt;Any&lt;/code&gt; if you didn't declare any supertype. Members added in the anonymous object will not be accessible.</source>
          <target state="translated">Tenga en cuenta que los objetos an&amp;oacute;nimos se pueden usar como tipos solo en declaraciones locales y privadas. Si usa un objeto an&amp;oacute;nimo como un tipo de retorno de una funci&amp;oacute;n p&amp;uacute;blica o el tipo de una propiedad p&amp;uacute;blica, el tipo real de esa funci&amp;oacute;n o propiedad ser&amp;aacute; el supertipo declarado del objeto an&amp;oacute;nimo, o &lt;code&gt;Any&lt;/code&gt; si no declar&amp;oacute; ning&amp;uacute;n supertipo . No se podr&amp;aacute; acceder a los miembros agregados en el objeto an&amp;oacute;nimo.</target>
        </trans-unit>
        <trans-unit id="58e17f85bfcb71bf347b7f266c8bad279b3e8c99" translate="yes" xml:space="preserve">
          <source>Note that another regular expression constructed from the same pattern string may have different &lt;a href=&quot;options#kotlin.text.Regex%24options&quot;&gt;options&lt;/a&gt; and may match strings differently.</source>
          <target state="translated">Tenga en cuenta que otra expresi&amp;oacute;n regular construida a partir de la misma cadena de patr&amp;oacute;n puede tener diferentes &lt;a href=&quot;options#kotlin.text.Regex%24options&quot;&gt;opciones&lt;/a&gt; y puede coincidir con cadenas de manera diferente.</target>
        </trans-unit>
        <trans-unit id="63726d58315e1bc6e7dc8bc35ffdc3997be7f570" translate="yes" xml:space="preserve">
          <source>Note that behavior of these annotations will likely be changed in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1195c36b54acff13f3bf0d0c44bfdb9ba62965" translate="yes" xml:space="preserve">
          <source>Note that blank lines do not affect the detected indent level.</source>
          <target state="translated">Tenga en cuenta que las líneas en blanco no afectan al nivel de sangría detectado.</target>
        </trans-unit>
        <trans-unit id="901eb90b706fa87b74726ae4ca585fc8ee1df3bd" translate="yes" xml:space="preserve">
          <source>Note that both the target platform and the name matter: if a target was created as &lt;code&gt;jvm('jvm6')&lt;/code&gt;, using &lt;code&gt;jvm()&lt;/code&gt; will create a separate target (with the default name &lt;code&gt;jvm&lt;/code&gt;). If the preset function used to create the target under that name was different, an error is reported.</source>
          <target state="translated">Tenga en cuenta que tanto la plataforma de destino como el nombre son importantes: si se cre&amp;oacute; un destino como &lt;code&gt;jvm('jvm6')&lt;/code&gt; , el uso de &lt;code&gt;jvm()&lt;/code&gt; crear&amp;aacute; un destino separado (con el nombre predeterminado &lt;code&gt;jvm&lt;/code&gt; ). Si la funci&amp;oacute;n preestablecida utilizada para crear el destino con ese nombre era diferente, se informa de un error.</target>
        </trans-unit>
        <trans-unit id="20a8a158a1c056ad5cea3eaeda038189df025fb8" translate="yes" xml:space="preserve">
          <source>Note that boxing of numbers does not necessarily preserve identity:</source>
          <target state="translated">Nótese que el encajonamiento de los números no necesariamente preserva la identidad:</target>
        </trans-unit>
        <trans-unit id="18f0c3bd108e4fca3d9b4ad0c92853cb37af67e8" translate="yes" xml:space="preserve">
          <source>Note that cancelling a producer coroutine closes its channel, thus eventually terminating iteration over the channel that processor coroutines are doing.</source>
          <target state="translated">Obsérvese que la cancelación de una corutina productora cierra su canal,terminando así eventualmente la iteración sobre el canal que las corutinas procesadoras están haciendo.</target>
        </trans-unit>
        <trans-unit id="a4257481b27fd911ec2dc62a1694406a02635294" translate="yes" xml:space="preserve">
          <source>Note that changing type from unsigned type to signed counterpart (and vice versa) is a &lt;em&gt;binary incompatible&lt;/em&gt; change</source>
          <target state="translated">Tenga en cuenta que cambiar el tipo de tipo sin firmar a hom&amp;oacute;logo firmado (y viceversa) es un cambio &lt;em&gt;binario incompatible&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fb531691886575d5d0b4f4f27624c19223bae127" translate="yes" xml:space="preserve">
          <source>Note that characters are not numbers in Kotlin.</source>
          <target state="translated">Tengan en cuenta que los caracteres no son números en Kotlin.</target>
        </trans-unit>
        <trans-unit id="224781b538ad44d496b4eb9848adbb611bc7607f" translate="yes" xml:space="preserve">
          <source>Note that classes which extend subclasses of a sealed class (indirect inheritors) can be placed anywhere, not necessarily in the same file.</source>
          <target state="translated">Obsérvese que las clases que extienden subclases de una clase sellada (herederos indirectos)pueden colocarse en cualquier lugar,no necesariamente en el mismo archivo.</target>
        </trans-unit>
        <trans-unit id="4b347074d3d760a0df60b87ff4401c3b2a375933" translate="yes" xml:space="preserve">
          <source>Note that code in initializer blocks effectively becomes part of the primary constructor. Delegation to the primary constructor happens as the first statement of a secondary constructor, so the code in all initializer blocks and property initializers is executed before the secondary constructor body. Even if the class has no primary constructor, the delegation still happens implicitly, and the initializer blocks are still executed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01c476864e020a6b3bdf6a577c404757a04f763" translate="yes" xml:space="preserve">
          <source>Note that code in initializer blocks effectively becomes part of the primary constructor. Delegation to the primary constructor happens as the first statement of a secondary constructor, so the code in all initializer blocks is executed before the secondary constructor body. Even if the class has no primary constructor, the delegation still happens implicitly, and the initializer blocks are still executed:</source>
          <target state="translated">Obsérvese que el código en los bloques de inicialización se convierte efectivamente en parte del constructor primario.La delegación al constructor primario se produce como la primera declaración de un constructor secundario,por lo que el código de todos los bloques inicializadores se ejecuta antes que el cuerpo del constructor secundario.Aunque la clase no tenga constructor primario,la delegación sigue ocurriendo implícitamente,y los bloques de inicialización siguen ejecutándose:</target>
        </trans-unit>
        <trans-unit id="40662d03b687698fb7e2efe397dfb49179bd8a28" translate="yes" xml:space="preserve">
          <source>Note that coroutines are currently considered an &lt;strong&gt;experimental feature&lt;/strong&gt;, meaning that the Kotlin team is not committing to supporting the backwards compatibility of this feature after the final 1.1 release.</source>
          <target state="translated">Tenga en cuenta que las corrutinas se consideran actualmente una &lt;strong&gt;funci&amp;oacute;n experimental&lt;/strong&gt; , lo que significa que el equipo de Kotlin no se compromete a admitir la compatibilidad con versiones anteriores de esta funci&amp;oacute;n despu&amp;eacute;s de la versi&amp;oacute;n 1.1 final.</target>
        </trans-unit>
        <trans-unit id="abdd0e9fc4f6072582fff7f11143b17405eee64f" translate="yes" xml:space="preserve">
          <source>Note that despite the fact that the right-hand side of &lt;em&gt;as?&lt;/em&gt; is a non-null type &lt;code&gt;String&lt;/code&gt; the result of the cast is nullable.</source>
          <target state="translated">Tenga en cuenta que a pesar de que el lado derecho de &lt;em&gt;as? &lt;/em&gt;es un tipo &lt;code&gt;String&lt;/code&gt; no nulo , el resultado de la conversi&amp;oacute;n es anulable.</target>
        </trans-unit>
        <trans-unit id="d2338fe045f1f2d5efa433b2cf56bf15940234fd" translate="yes" xml:space="preserve">
          <source>Note that division between integers always returns an integer. Any fractional part is discarded. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984acf59abb99e6edf5501246d83e1bc7951b21e" translate="yes" xml:space="preserve">
          <source>Note that even if &lt;a href=&quot;is-marked-nullable#kotlin.reflect.KType%24isMarkedNullable&quot;&gt;isMarkedNullable&lt;/a&gt; is false, values of the type can still be &lt;code&gt;null&lt;/code&gt;. This may happen if it is a type of the type parameter with a nullable upper bound:</source>
          <target state="translated">Tenga en cuenta que incluso si &lt;a href=&quot;is-marked-nullable#kotlin.reflect.KType%24isMarkedNullable&quot;&gt;isMarkedNullable&lt;/a&gt; es falso, los valores del tipo a&amp;uacute;n pueden ser &lt;code&gt;null&lt;/code&gt; . Esto puede suceder si se trata de un tipo de par&amp;aacute;metro de tipo con un l&amp;iacute;mite superior que acepta valores NULL:</target>
        </trans-unit>
        <trans-unit id="f9717ca7605239239d9b446b8d8baf568533a62a" translate="yes" xml:space="preserve">
          <source>Note that even if you initialize a variable with a reference to an extension function, the inferred function type will have no receiver (it will have an additional parameter accepting a receiver object). To have a function type with receiver instead, specify the type explicitly:</source>
          <target state="translated">Tenga en cuenta que incluso si inicializa una variable con una referencia a una función de extensión,el tipo de función inferida no tendrá receptor (tendrá un parámetro adicional que acepta un objeto receptor).Para tener un tipo de función con receptor en su lugar,especifique el tipo explícitamente:</target>
        </trans-unit>
        <trans-unit id="e1859932d9a0b691a9fc9411f62e5506be7f8a66" translate="yes" xml:space="preserve">
          <source>Note that even though this is a read-only property due to declaring it with &lt;code&gt;val&lt;/code&gt; (in which case you may not provide a setter), its value can still change since it reads from a mutable property - you just can't assign to the property. Also, note that the property type is inferred from the return value of the getter.</source>
          <target state="translated">Tenga en cuenta que aunque esta es una propiedad de solo lectura debido a que la declara con &lt;code&gt;val&lt;/code&gt; (en cuyo caso es posible que no proporcione un establecedor), su valor a&amp;uacute;n puede cambiar ya que se lee de una propiedad mutable; simplemente no puede asignar a la propiedad. Adem&amp;aacute;s, tenga en cuenta que el tipo de propiedad se infiere del valor de retorno del getter.</target>
        </trans-unit>
        <trans-unit id="6f8d76caa31f559e59a7051197723f207fa3b746" translate="yes" xml:space="preserve">
          <source>Note that every iteration of the sequence returns elements in a different order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6bde9af50a41c1d5f97ea7b48311cc0527806c" translate="yes" xml:space="preserve">
          <source>Note that exceptions are somewhat discouraged in Kotlin except when interacting with Java code. Instead of throwing exceptions in your own code, consider using special return types like &lt;a href=&quot;https://arrow-kt.io/docs/datatypes/option/&quot;&gt;Option&lt;/a&gt; or &lt;a href=&quot;https://arrow-kt.io/docs/datatypes/either/&quot;&gt;Either&lt;/a&gt; from the &lt;a href=&quot;https://arrow-kt.io/&quot;&gt;Arrow library&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que las excepciones est&amp;aacute;n algo desaconsejadas en Kotlin, excepto cuando se interact&amp;uacute;a con c&amp;oacute;digo Java. En lugar de lanzar excepciones en su propio c&amp;oacute;digo, considere usar tipos de retorno especiales como &lt;a href=&quot;https://arrow-kt.io/docs/datatypes/option/&quot;&gt;Option&lt;/a&gt; o &lt;a href=&quot;https://arrow-kt.io/docs/datatypes/either/&quot;&gt;Either&lt;/a&gt; de la &lt;a href=&quot;https://arrow-kt.io/&quot;&gt;biblioteca Arrow&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="33e073ab069310793fb905b91ca3476dc4caf23c" translate="yes" xml:space="preserve">
          <source>Note that expected declarations are not restricted to interfaces and interface members. In this example, the expected class has a constructor and can be created directly from common code. You can apply the &lt;code&gt;expect&lt;/code&gt; modifier to other declarations as well, including top-level declarations and annotations:</source>
          <target state="translated">Tenga en cuenta que las declaraciones esperadas no se limitan a interfaces y miembros de interfaz. En este ejemplo, la clase esperada tiene un constructor y se puede crear directamente a partir de c&amp;oacute;digo com&amp;uacute;n. Tambi&amp;eacute;n puede aplicar el modificador de &lt;code&gt;expect&lt;/code&gt; a otras declaraciones, incluidas las declaraciones y anotaciones de nivel superior:</target>
        </trans-unit>
        <trans-unit id="45215a2c612cfc18ca0212e4816f62d8f14fe5b3" translate="yes" xml:space="preserve">
          <source>Note that extensions can be defined with a nullable receiver type. Such extensions can be called on an object variable even if its value is null, and can check for &lt;code&gt;this == null&lt;/code&gt; inside the body. This is what allows you to call toString() in Kotlin without checking for null: the check happens inside the extension function.</source>
          <target state="translated">Tenga en cuenta que las extensiones se pueden definir con un tipo de receptor que acepta valores NULL. Estas extensiones pueden invocarse en una variable de objeto incluso si su valor es nulo, y pueden verificar &lt;code&gt;this == null&lt;/code&gt; dentro del cuerpo. Esto es lo que le permite llamar a toString () en Kotlin sin verificar nulo: la verificaci&amp;oacute;n ocurre dentro de la funci&amp;oacute;n de extensi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="519b88833afa591c638bec3f6bbeb8adf1aa4ab7" translate="yes" xml:space="preserve">
          <source>Note that for a top level &lt;strong&gt;extension&lt;/strong&gt; property, the delegate is the same for all extension receivers, so the actual &lt;a href=&quot;get-delegate#kotlin.reflect.KProperty1%24getDelegate%28kotlin.reflect.KProperty1.T%29%2Freceiver&quot;&gt;receiver&lt;/a&gt; instance passed in is not going to make any difference, it must only be a value of &lt;a href=&quot;index#T&quot;&gt;T&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que para un nivel superior &lt;strong&gt;de extensi&amp;oacute;n&lt;/strong&gt; propiedad, el delegado es el mismo para todos los receptores de extensi&amp;oacute;n, por lo que el actual &lt;a href=&quot;get-delegate#kotlin.reflect.KProperty1%24getDelegate%28kotlin.reflect.KProperty1.T%29%2Freceiver&quot;&gt;receptor&lt;/a&gt; instancia pas&amp;oacute; no va a hacer ninguna diferencia, s&amp;oacute;lo debe ser un valor de &lt;a href=&quot;index#T&quot;&gt;t&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2defd349af6dc7f8207169257d4b38f3d3fe54d" translate="yes" xml:space="preserve">
          <source>Note that for a top level &lt;strong&gt;extension&lt;/strong&gt; property, the delegate is the same for all extension receivers, so the actual &lt;a href=&quot;get-delegate#kotlin.reflect.KProperty1%24getDelegate(kotlin.reflect.KProperty1.T)/receiver&quot;&gt;receiver&lt;/a&gt; instance passed in is not going to make any difference, it must only be a value of &lt;a href=&quot;index#T&quot;&gt;T&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ed19157d69e7092350d01754dff2c913099ef4" translate="yes" xml:space="preserve">
          <source>Note that for the IDE to correctly analyze the dependencies of the common sources, the common source sets need to have corresponding dependencies on the Kotlin metadata packages in addition to the platform-specific artifact dependencies of the platform-specific source sets. Usually, an artifact with a suffix &lt;code&gt;-common&lt;/code&gt; (as in &lt;code&gt;kotlin-stdlib-common&lt;/code&gt;) or &lt;code&gt;-metadata&lt;/code&gt; is required when using a published library (unless it is published with Gradle metadata, as described below).</source>
          <target state="translated">Tenga en cuenta que para que el IDE analice correctamente las dependencias de las fuentes comunes, los conjuntos de fuentes comunes deben tener las dependencias correspondientes en los paquetes de metadatos de Kotlin adem&amp;aacute;s de las dependencias de artefacto espec&amp;iacute;ficas de la plataforma de los conjuntos de fuentes espec&amp;iacute;ficos de la plataforma. Por lo general, se requiere un artefacto con un sufijo &lt;code&gt;-common&lt;/code&gt; (como en &lt;code&gt;kotlin-stdlib-common&lt;/code&gt; ) o &lt;code&gt;-metadata&lt;/code&gt; cuando se usa una biblioteca publicada (a menos que se publique con metadatos de Gradle, como se describe a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="ef903749bbe41c983b27f632974567077577929e" translate="yes" xml:space="preserve">
          <source>Note that for the purpose of this tutorial, we've done a line by line literal translation. Obviously we could write this in a more Kotlin idiomatic way.</source>
          <target state="translated">Note que para el propósito de este tutorial,hemos hecho una traducción literal línea por línea.Obviamente podríamos escribir esto de una manera más idiomática Kotlin.</target>
        </trans-unit>
        <trans-unit id="1a1875a90b66eba4e95594cb06b7e139052ab102" translate="yes" xml:space="preserve">
          <source>Note that from a developer&amp;rsquo;s perspective, things won&amp;rsquo;t change that much: the Kotlin code will throw exceptions with the same error messages as before. The type of exception changes, but the information passed stays the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2712e3816fc9fe0e5aede4e3fca67cc623f69a68" translate="yes" xml:space="preserve">
          <source>Note that if a class has got a primary constructor, it is no longer possible to create an instance of it without supplying any parameters (unless one of the secondary constructors is parameterless).</source>
          <target state="translated">Obsérvese que si una clase tiene un constructor primario,ya no es posible crear una instancia de él sin suministrar ningún parámetro (a menos que uno de los constructores secundarios no tenga parámetros).</target>
        </trans-unit>
        <trans-unit id="3b1296c9d04a31b1fde17dffa086ef1b8acdb6c3" translate="yes" xml:space="preserve">
          <source>Note that if a library consumer defines variants that are missing in the library, they need to provide &lt;a href=&quot;https://developer.android.com/studio/build/dependencies#resolve_matching_errors&quot;&gt;matching fallbacks&lt;/a&gt;. For example, if a library does not have or does not publish a &lt;code&gt;staging&lt;/code&gt; build type, it will be necessary to provide a fallback for the consumers who have such a build type, specifying at least one of the build types that the library publishes:</source>
          <target state="translated">Tenga en cuenta que si un consumidor de biblioteca define variantes que faltan en la biblioteca, debe proporcionar &lt;a href=&quot;https://developer.android.com/studio/build/dependencies#resolve_matching_errors&quot;&gt;alternativas coincidentes&lt;/a&gt; . Por ejemplo, si una biblioteca no tiene o no publica una &lt;code&gt;staging&lt;/code&gt; tipo de generaci&amp;oacute;n, ser&amp;aacute; necesario proporcionar una reserva para los consumidores que tienen este tipo una acumulaci&amp;oacute;n, especificando al menos uno de los tipos de construcci&amp;oacute;n que publica la biblioteca:</target>
        </trans-unit>
        <trans-unit id="6c82c92fd55806c5e9d8d4f7e9db855fd43d5a7a" translate="yes" xml:space="preserve">
          <source>Note that if an inline function has no inlinable function parameters and no &lt;a href=&quot;#reified-type-parameters&quot;&gt;reified type parameters&lt;/a&gt;, the compiler will issue a warning, since inlining such functions is very unlikely to be beneficial (you can suppress the warning if you are sure the inlining is needed using the annotation &lt;code&gt;@Suppress(&quot;NOTHING_TO_INLINE&quot;)&lt;/code&gt;).</source>
          <target state="translated">Tenga en cuenta que si una funci&amp;oacute;n en l&amp;iacute;nea no tiene par&amp;aacute;metros de funci&amp;oacute;n insertables ni par&amp;aacute;metros de &lt;a href=&quot;#reified-type-parameters&quot;&gt;tipo reificados&lt;/a&gt; , el compilador emitir&amp;aacute; una advertencia, ya que es muy poco probable que la inserci&amp;oacute;n de dichas funciones sea beneficiosa (puede suprimir la advertencia si est&amp;aacute; seguro de que la inserci&amp;oacute;n es necesaria usando el anotaci&amp;oacute;n &lt;code&gt;@Suppress(&quot;NOTHING_TO_INLINE&quot;)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ac1401dfe931b50e5500ce4b2ebac5d2aaf6e00c" translate="yes" xml:space="preserve">
          <source>Note that if an interface with &lt;code&gt;@JvmDefault&lt;/code&gt; methods is used as a &lt;a href=&quot;delegation&quot;&gt;delegate&lt;/a&gt;, the default method implementations are called even if the actual delegate type provides its own implementations.</source>
          <target state="translated">Tenga en cuenta que si se utiliza una interfaz con m&amp;eacute;todos &lt;code&gt;@JvmDefault&lt;/code&gt; como &lt;a href=&quot;delegation&quot;&gt;delegado&lt;/a&gt; , las implementaciones de m&amp;eacute;todos predeterminados se llaman incluso si el tipo de delegado real proporciona sus propias implementaciones.</target>
        </trans-unit>
        <trans-unit id="5c363669dd6ed31274f54972ddb75e1fa04284aa" translate="yes" xml:space="preserve">
          <source>Note that if the &lt;code&gt;comparator&lt;/code&gt; considers any two keys of this map equal, only the value associated with the last of them gets into the resulting map.</source>
          <target state="translated">Tenga en cuenta que si el &lt;code&gt;comparator&lt;/code&gt; considera que dos claves de este mapa son iguales, solo el valor asociado con la &amp;uacute;ltima de ellas entra en el mapa resultante.</target>
        </trans-unit>
        <trans-unit id="169507f367051a5b585a09223134ff4c0faab6be" translate="yes" xml:space="preserve">
          <source>Note that if the natural sorting order of keys considers any two keys of this map equal (this could happen if the equality of keys according to &lt;a href=&quot;../kotlin/-comparable/compare-to#kotlin.Comparable%24compareTo%28kotlin.Comparable.T%29&quot;&gt;Comparable.compareTo&lt;/a&gt; is inconsistent with the equality according to &lt;a href=&quot;../kotlin/-any/equals#kotlin.Any%24equals%28kotlin.Any%29&quot;&gt;Any.equals&lt;/a&gt;), only the value associated with the last of them gets into the resulting map.</source>
          <target state="translated">Tenga en cuenta que si el orden de clasificaci&amp;oacute;n natural de las claves considera dos claves cualesquiera de este mapa iguales (esto podr&amp;iacute;a suceder si la igualdad de claves seg&amp;uacute;n &lt;a href=&quot;../kotlin/-comparable/compare-to#kotlin.Comparable%24compareTo%28kotlin.Comparable.T%29&quot;&gt;Comparable.compareTo&lt;/a&gt; es inconsistente con la igualdad seg&amp;uacute;n &lt;a href=&quot;../kotlin/-any/equals#kotlin.Any%24equals%28kotlin.Any%29&quot;&gt;Any.equals&lt;/a&gt; ), solo el valor asociado con el &amp;uacute;ltimo de ellos entra en el mapa resultante.</target>
        </trans-unit>
        <trans-unit id="e0314127afde0714d8e6361a9b85bacb2fcd7ce9" translate="yes" xml:space="preserve">
          <source>Note that if the natural sorting order of keys considers any two keys of this map equal (this could happen if the equality of keys according to &lt;a href=&quot;../kotlin/-comparable/compare-to#kotlin.Comparable%24compareTo(kotlin.Comparable.T)&quot;&gt;Comparable.compareTo&lt;/a&gt; is inconsistent with the equality according to &lt;a href=&quot;../kotlin/-any/equals#kotlin.Any%24equals(kotlin.Any?)&quot;&gt;Any.equals&lt;/a&gt;), only the value associated with the last of them gets into the resulting map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdeead972a4f0dc85a954b4ef35d091c4109a874" translate="yes" xml:space="preserve">
          <source>Note that if the type of the result is known from the context, the type argument can be omitted as usual due to the type inference.</source>
          <target state="translated">Obsérvese que si se conoce el tipo de resultado por el contexto,el argumento del tipo puede omitirse como de costumbre debido a la inferencia del tipo.</target>
        </trans-unit>
        <trans-unit id="3df7a58b11ae9c7f677f019b7e29ec36da986c3e" translate="yes" xml:space="preserve">
          <source>Note that if this function fails, then partial copying may have taken place.</source>
          <target state="translated">Tenga en cuenta que si esta función falla,es posible que se haya realizado una copia parcial.</target>
        </trans-unit>
        <trans-unit id="e537ff121d99004384d6b13ae0784e74c296eabf" translate="yes" xml:space="preserve">
          <source>Note that if we have called &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/await.html&quot;&gt;await&lt;/a&gt; in &lt;code&gt;println&lt;/code&gt; and omitted &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/start.html&quot;&gt;start&lt;/a&gt; on individual coroutines, then we would have got the sequential behaviour as &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/await.html&quot;&gt;await&lt;/a&gt; starts the coroutine execution and waits for the execution to finish, which is not the intended use-case for laziness. The use-case for &lt;code&gt;async(start = CoroutineStart.LAZY)&lt;/code&gt; is a replacement for the standard &lt;code&gt;lazy&lt;/code&gt; function in cases when computation of the value involves suspending functions.</source>
          <target state="translated">Tenga en cuenta que si hemos llamado &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/await.html&quot;&gt;lo esperan&lt;/a&gt; en &lt;code&gt;println&lt;/code&gt; y omitido &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/start.html&quot;&gt;inicio&lt;/a&gt; de co-rutinas individuales, entonces habr&amp;iacute;amos conseguido el comportamiento secuencial que &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/await.html&quot;&gt;aguardan&lt;/a&gt; inicia la ejecuci&amp;oacute;n corrutina y espera a la ejecuci&amp;oacute;n a fin, que no es el caso de uso destinado a la pereza. El caso de uso de &lt;code&gt;async(start = CoroutineStart.LAZY)&lt;/code&gt; es un reemplazo de la funci&amp;oacute;n &lt;code&gt;lazy&lt;/code&gt; est&amp;aacute;ndar en los casos en que el c&amp;aacute;lculo del valor implica la suspensi&amp;oacute;n de funciones.</target>
        </trans-unit>
        <trans-unit id="ca8da6b3b0810e7069d1865b81c075dccb66b2c6" translate="yes" xml:space="preserve">
          <source>Note that if we just call &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/await.html&quot;&gt;await&lt;/a&gt; in &lt;code&gt;println&lt;/code&gt; without first calling &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/start.html&quot;&gt;start&lt;/a&gt; on individual coroutines, this will lead to sequential behavior, since &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/await.html&quot;&gt;await&lt;/a&gt; starts the coroutine execution and waits for its finish, which is not the intended use-case for laziness. The use-case for &lt;code&gt;async(start = CoroutineStart.LAZY)&lt;/code&gt; is a replacement for the standard &lt;code&gt;lazy&lt;/code&gt; function in cases when computation of the value involves suspending functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e82a73f61c52b17d7e3c65e8e99e11241b677f8" translate="yes" xml:space="preserve">
          <source>Note that if you are using multi-project build, you should apply plugin to the main project that is an entry point to your application.</source>
          <target state="translated">Tenga en cuenta que si está utilizando la construcción de varios proyectos,debe aplicar el plugin al proyecto principal que es un punto de entrada a su aplicación.</target>
        </trans-unit>
        <trans-unit id="e39d91f028c6c4bc3b768c071107ff617a7a7685" translate="yes" xml:space="preserve">
          <source>Note that if you use the project template generated by the &lt;a href=&quot;http://start.spring.io/#!language=kotlin&quot;&gt;start.spring.io&lt;/a&gt; service, the &lt;code&gt;kotlin-spring&lt;/code&gt; plugin will be enabled by default.</source>
          <target state="translated">Tenga en cuenta que si usa la plantilla de proyecto generada por el servicio &lt;a href=&quot;http://start.spring.io/#!language=kotlin&quot;&gt;start.spring.io&lt;/a&gt; , el &lt;code&gt;kotlin-spring&lt;/code&gt; estar&amp;aacute; habilitado de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="525f89a8c95ffcd13e77c9b0c5383df9c804bbd8" translate="yes" xml:space="preserve">
          <source>Note that if you use the project template generated by the &lt;a href=&quot;https://start.spring.io/#!language=kotlin&quot;&gt;start.spring.io&lt;/a&gt; service, the &lt;code&gt;kotlin-spring&lt;/code&gt; plugin will be enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261071b80b92f5599125de0c5212f010938aeec4" translate="yes" xml:space="preserve">
          <source>Note that if your function has parameters, its name will be mangled, so the mangled name should be used in the keep directive.</source>
          <target state="translated">Tenga en cuenta que si su función tiene parámetros,su nombre será &quot;mangled&quot;,por lo que el nombre &quot;mangled&quot; debe ser usado en la directiva &quot;keep&quot;.</target>
        </trans-unit>
        <trans-unit id="6917f47d5bafd263295f3acf8a1ef7ab9d827116" translate="yes" xml:space="preserve">
          <source>Note that in Kotlin, outer class does not see private members of its inner classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659e4fb54490f44ab2332ce79f12e2c6749032d5" translate="yes" xml:space="preserve">
          <source>Note that in Kotlin/JS &lt;a href=&quot;../set#kotlin.text%24set(kotlin.text.StringBuilder,%20kotlin.Int,%20kotlin.Char)&quot;&gt;set&lt;/a&gt; operator function has non-constant execution time complexity. Therefore, increasing length of this string builder and then updating each character by index may slow down your program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c99e0a3c39d8997895800da0e15222c8aa2ad3b" translate="yes" xml:space="preserve">
          <source>Note that in Kotlin/JS Float range is wider than &quot;single format&quot; bit layout can represent, so some Float values may overflow, underflow or loose their accuracy after conversion to bits and back.</source>
          <target state="translated">Nótese que en Kotlin/JS el rango de flotación es más amplio de lo que la disposición de bits de &quot;formato simple&quot; puede representar,por lo que algunos valores de flotación pueden desbordarse,desbordarse o perder su precisión después de la conversión a bits y viceversa.</target>
        </trans-unit>
        <trans-unit id="88d47ad6334c013775aba391a38df6074a6dc3f4" translate="yes" xml:space="preserve">
          <source>Note that in competitive programming it is customary to give variables shorter names than it is typical in industrial programming practice, since the code is to be written just once and not supported thereafter. However, these names are usually still mnemonic &amp;mdash; &lt;code&gt;a&lt;/code&gt; for arrays, &lt;code&gt;i&lt;/code&gt;, &lt;code&gt;j&lt;/code&gt;, etc for indices, &lt;code&gt;r&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt; for row and column numbers in tables, &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; for coordinates, etc. It is easier to keep the same names for input data as it is given in the problem statement. However, more complex problems require more code which leads to using longer self-explanatory variable and function names.</source>
          <target state="translated">Tenga en cuenta que en la programaci&amp;oacute;n competitiva es habitual dar a las variables nombres m&amp;aacute;s cortos de lo que es t&amp;iacute;pico en la pr&amp;aacute;ctica de la programaci&amp;oacute;n industrial, ya que el c&amp;oacute;digo debe escribirse una sola vez y no se admite posteriormente. Sin embargo, estos nombres son por lo general todav&amp;iacute;a mnemot&amp;eacute;cnica - &lt;code&gt;a&lt;/code&gt; de las matrices, &lt;code&gt;i&lt;/code&gt; , &lt;code&gt;j&lt;/code&gt; , etc para los &amp;iacute;ndices, &lt;code&gt;r&lt;/code&gt; y &lt;code&gt;c&lt;/code&gt; para los n&amp;uacute;meros de fila y columna en tablas, &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; para las coordenadas, etc. Es m&amp;aacute;s f&amp;aacute;cil mantener los mismos nombres para datos de entrada tal como se dan en el planteamiento del problema. Sin embargo, los problemas m&amp;aacute;s complejos requieren m&amp;aacute;s c&amp;oacute;digo, lo que lleva a utilizar nombres de funci&amp;oacute;n y variable autoexplicativos m&amp;aacute;s largos.</target>
        </trans-unit>
        <trans-unit id="24fc67264648157b787a9e1d8a1aee247379a870" translate="yes" xml:space="preserve">
          <source>Note that in many cases there's no need to use custom interoperability library creation mechanisms described below, as for APIs available on the platform standardized bindings called &lt;a href=&quot;platform_libs&quot;&gt;platform libraries&lt;/a&gt; could be used. For example, POSIX on Linux/macOS platforms, Win32 on Windows platform, or Apple frameworks on macOS/iOS are available this way.</source>
          <target state="translated">Tenga en cuenta que en muchos casos no es necesario utilizar los mecanismos de creaci&amp;oacute;n de bibliotecas de interoperabilidad personalizados que se describen a continuaci&amp;oacute;n, ya que para las API disponibles en la plataforma se podr&amp;iacute;an utilizar enlaces estandarizados llamados &lt;a href=&quot;platform_libs&quot;&gt;bibliotecas de plataforma&lt;/a&gt; . Por ejemplo, POSIX en plataformas Linux / macOS, Win32 en la plataforma Windows o marcos de Apple en macOS / iOS est&amp;aacute;n disponibles de esta manera.</target>
        </trans-unit>
        <trans-unit id="4c3031faf8b33ed043c9d69fe73ae60488938a50" translate="yes" xml:space="preserve">
          <source>Note that in most cases using &lt;a href=&quot;#string-templates&quot;&gt;string templates&lt;/a&gt; or raw strings is preferable to string concatenation.</source>
          <target state="translated">Tenga en cuenta que en la mayor&amp;iacute;a de los casos es preferible utilizar &lt;a href=&quot;#string-templates&quot;&gt;plantillas de cadenas&lt;/a&gt; o cadenas sin formato a la concatenaci&amp;oacute;n de cadenas.</target>
        </trans-unit>
        <trans-unit id="8d1e2fa9797125ae266c1521c6c52af5e4d67c8b" translate="yes" xml:space="preserve">
          <source>Note that in this case the parameter should be added to each subsequent build, and any build with disabled incremental compilation invalidates incremental caches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6addd273834de7f83ab126536995cca9dd6643b2" translate="yes" xml:space="preserve">
          <source>Note that incremental annotation processing requires &lt;a href=&quot;using-gradle#incremental-compilation&quot;&gt;incremental compilation&lt;/a&gt; to be enabled as well.</source>
          <target state="translated">Tenga en cuenta que el procesamiento de anotaciones incrementales tambi&amp;eacute;n requiere que se habilite &lt;a href=&quot;using-gradle#incremental-compilation&quot;&gt;la compilaci&amp;oacute;n incremental&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6b7588c134bcd5e8f4a5da82d120b4047c151b76" translate="yes" xml:space="preserve">
          <source>Note that infix functions always require both the receiver and the parameter to be specified. When you're calling a method on the current receiver using the infix notation, you need to use &lt;code&gt;this&lt;/code&gt; explicitly; unlike regular method calls, it cannot be omitted. This is required to ensure unambiguous parsing.</source>
          <target state="translated">Tenga en cuenta que las funciones infijas siempre requieren que se especifiquen tanto el receptor como el par&amp;aacute;metro. Cuando llamas a un m&amp;eacute;todo en el receptor actual usando la notaci&amp;oacute;n infija, necesitas usar &lt;code&gt;this&lt;/code&gt; expl&amp;iacute;citamente; a diferencia de las llamadas a m&amp;eacute;todos regulares, no se puede omitir. Esto es necesario para garantizar un an&amp;aacute;lisis sin ambig&amp;uuml;edades.</target>
        </trans-unit>
        <trans-unit id="ad1d05af6c1aa655f7d3f68b893652c8d8011b1f" translate="yes" xml:space="preserve">
          <source>Note that instead of declaring lambdas in xml like in the following example, you can can bind actions directly in the code:</source>
          <target state="translated">Ten en cuenta que en lugar de declarar los lambdas en xml como en el siguiente ejemplo,puedes vincular las acciones directamente en el código:</target>
        </trans-unit>
        <trans-unit id="5d76391f0c3ceb2cfa6bd1897bb1920148848dd2" translate="yes" xml:space="preserve">
          <source>Note that invoking &lt;code&gt;js()&lt;/code&gt; returns a result of type &lt;a href=&quot;dynamic-type&quot;&gt;&lt;code&gt;dynamic&lt;/code&gt;&lt;/a&gt;, which provides no type safety at compile time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de64757cb014df0ce60c045d22eb608329bdbb9" translate="yes" xml:space="preserve">
          <source>Note that it is not recommended to call either &lt;a href=&quot;../kotlin.coroutines.experimental/-continuation/resume&quot;&gt;Continuation.resume&lt;/a&gt; nor &lt;a href=&quot;../kotlin.coroutines.experimental/-continuation/resume-with-exception&quot;&gt;Continuation.resumeWithException&lt;/a&gt; functions synchronously in the same stackframe where suspension function is run. Use &lt;a href=&quot;../kotlin.coroutines.experimental/suspend-coroutine&quot;&gt;suspendCoroutine&lt;/a&gt; as a safer way to obtain current continuation instance.</source>
          <target state="translated">Tenga en cuenta que no se recomienda llamar a las funciones &lt;a href=&quot;../kotlin.coroutines.experimental/-continuation/resume&quot;&gt;Continuation.resume&lt;/a&gt; ni &lt;a href=&quot;../kotlin.coroutines.experimental/-continuation/resume-with-exception&quot;&gt;Continuation.resumeWithException&lt;/a&gt; sincr&amp;oacute;nicamente en el mismo marco de pila donde se ejecuta la funci&amp;oacute;n de suspensi&amp;oacute;n. Utilice &lt;a href=&quot;../kotlin.coroutines.experimental/suspend-coroutine&quot;&gt;suspendCoroutine&lt;/a&gt; como una forma m&amp;aacute;s segura de obtener la instancia de continuaci&amp;oacute;n actual.</target>
        </trans-unit>
        <trans-unit id="9d6ffb0207257e6147b3a7dc3f05f4b2eb90ba26" translate="yes" xml:space="preserve">
          <source>Note that it is not recommended to call either &lt;a href=&quot;../kotlin.coroutines/resume&quot;&gt;Continuation.resume&lt;/a&gt; nor &lt;a href=&quot;../kotlin.coroutines/resume-with-exception&quot;&gt;Continuation.resumeWithException&lt;/a&gt; functions synchronously in the same stackframe where suspension function is run. Use &lt;a href=&quot;../kotlin.coroutines/suspend-coroutine&quot;&gt;suspendCoroutine&lt;/a&gt; as a safer way to obtain current continuation instance.</source>
          <target state="translated">Tenga en cuenta que no se recomienda llamar a las funciones &lt;a href=&quot;../kotlin.coroutines/resume&quot;&gt;Continuation.resume&lt;/a&gt; ni &lt;a href=&quot;../kotlin.coroutines/resume-with-exception&quot;&gt;Continuation.resumeWithException&lt;/a&gt; sincr&amp;oacute;nicamente en el mismo marco de pila donde se ejecuta la funci&amp;oacute;n de suspensi&amp;oacute;n. Utilice &lt;a href=&quot;../kotlin.coroutines/suspend-coroutine&quot;&gt;suspendCoroutine&lt;/a&gt; como una forma m&amp;aacute;s segura de obtener la instancia de continuaci&amp;oacute;n actual.</target>
        </trans-unit>
        <trans-unit id="ef6ff08c8afdc4c88bfce216a4201b44bef8d337" translate="yes" xml:space="preserve">
          <source>Note that it's still possible to call the members of the outer receiver, but to do that you have to specify this receiver explicitly:</source>
          <target state="translated">Tenga en cuenta que todavía es posible llamar a los miembros del receptor exterior,pero para ello hay que especificar este receptor explícitamente:</target>
        </trans-unit>
        <trans-unit id="1a8a5665bc44d5cdbf2531c3d2423dcbe7d87681" translate="yes" xml:space="preserve">
          <source>Note that parameters of the primary constructor can be used in the initializer blocks. They can also be used in property initializers declared in the class body:</source>
          <target state="translated">Obsérvese que los parámetros del constructor primario pueden utilizarse en los bloques de inicialización.También pueden utilizarse en los inicializadores de propiedades declarados en el cuerpo de la clase:</target>
        </trans-unit>
        <trans-unit id="88ac6b28b3a3b8435f7eba9f01321df2f731f34d" translate="yes" xml:space="preserve">
          <source>Note that right after the &quot;Task from coroutine scope&quot; message (while waiting for nested launch) &quot;Task from runBlocking&quot; is executed and printed &amp;mdash; even though the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;coroutineScope&lt;/a&gt; is not completed yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c4053dbcf27c46808a2ab0e8b3303b9f7cbf9a" translate="yes" xml:space="preserve">
          <source>Note that set operations are supported by &lt;code&gt;List&lt;/code&gt; as well. However, the result of set operations on lists is still a &lt;code&gt;Set&lt;/code&gt;, so all the duplicate elements are removed.</source>
          <target state="translated">Tenga en cuenta que las operaciones de conjuntos tambi&amp;eacute;n son compatibles con &lt;code&gt;List&lt;/code&gt; . Sin embargo, el resultado de las operaciones de conjuntos en listas sigue siendo un &lt;code&gt;Set&lt;/code&gt; , por lo que se eliminan todos los elementos duplicados.</target>
        </trans-unit>
        <trans-unit id="205ca8f88f3bcbd4d7774a26be00ee48e66a2ebf" translate="yes" xml:space="preserve">
          <source>Note that since Kotlin 1.1 you can declare a delegated property inside a function or code block, it shouldn't necessarily be a member of a class. Below you can find &lt;a href=&quot;delegated-properties#local-delegated-properties&quot;&gt;an example&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecba1bd96686456eab8e7e25340f9f56c1cd293b" translate="yes" xml:space="preserve">
          <source>Note that since Kotlin 1.1 you can declare a delegated property inside a function or code block, it shouldn't necessarily be a member of a class. Below you can find &lt;a href=&quot;delegated-properties#local-delegated-properties-since-11&quot;&gt;the example&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que, dado que Kotlin 1.1 puede declarar una propiedad delegada dentro de una funci&amp;oacute;n o bloque de c&amp;oacute;digo, no necesariamente debe ser miembro de una clase. A continuaci&amp;oacute;n puede encontrar &lt;a href=&quot;delegated-properties#local-delegated-properties-since-11&quot;&gt;el ejemplo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f27fe847dccbaf44c3e83c0485bdf6be308f0d6" translate="yes" xml:space="preserve">
          <source>Note that smart casts do not work when the compiler cannot guarantee that the variable cannot change between the check and the usage. More specifically, smart casts are applicable according to the following rules:</source>
          <target state="translated">Tenga en cuenta que los moldes inteligentes no funcionan cuando el compilador no puede garantizar que la variable no pueda cambiar entre la comprobación y el uso.Más específicamente,los moldes inteligentes son aplicables de acuerdo a las siguientes reglas:</target>
        </trans-unit>
        <trans-unit id="8d16f91fe350efdfdab6da644c90340156b7ba22" translate="yes" xml:space="preserve">
          <source>Note that some Java visibilities such as package-private and protected (which also gives access to items from the same package) cannot be represented in Kotlin, so there's no &lt;a href=&quot;index&quot;&gt;KVisibility&lt;/a&gt; value corresponding to them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c295c01c9e6a32796148120ae2cf2ae77c47235" translate="yes" xml:space="preserve">
          <source>Note that some Java visibilities such as package-private and protected (which also gives access to items from the same package) cannot be represented in Kotlin, so there's no &lt;a href=&quot;index#kotlin.reflect.KVisibility&quot;&gt;KVisibility&lt;/a&gt; value corresponding to them.</source>
          <target state="translated">Tenga en cuenta que algunas visibilidades de Java, como package-private y protected (que tambi&amp;eacute;n da acceso a elementos del mismo paquete) no se pueden representar en Kotlin, por lo que no hay &lt;a href=&quot;index#kotlin.reflect.KVisibility&quot;&gt;ning&amp;uacute;n&lt;/a&gt; valor de KVisibility correspondiente.</target>
        </trans-unit>
        <trans-unit id="a13526efa441f113eff7267561f09b5212747a9d" translate="yes" xml:space="preserve">
          <source>Note that some inline functions may call the lambdas passed to them as parameters not directly from the function body, but from another execution context, such as a local object or a nested function. In such cases, non-local control flow is also not allowed in the lambdas. To indicate that, the lambda parameter needs to be marked with the &lt;code&gt;crossinline&lt;/code&gt; modifier:</source>
          <target state="translated">Tenga en cuenta que algunas funciones en l&amp;iacute;nea pueden llamar a las lambdas que se les pasan como par&amp;aacute;metros, no directamente desde el cuerpo de la funci&amp;oacute;n, sino desde otro contexto de ejecuci&amp;oacute;n, como un objeto local o una funci&amp;oacute;n anidada. En tales casos, el flujo de control no local tampoco est&amp;aacute; permitido en las lambdas. Para indicar eso, el par&amp;aacute;metro lambda debe estar marcado con el modificador &lt;code&gt;crossinline&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c7e376b19704536e280b87471b9d2f1935ff22e7" translate="yes" xml:space="preserve">
          <source>Note that some of the Kotlin/Native targets require an &lt;a href=&quot;#using-kotlinnative-targets&quot;&gt;appropriate host machine&lt;/a&gt; to build on.</source>
          <target state="translated">Tenga en cuenta que algunos de los destinos Kotlin / Native requieren una &lt;a href=&quot;#using-kotlinnative-targets&quot;&gt;m&amp;aacute;quina host adecuada&lt;/a&gt; para construir.</target>
        </trans-unit>
        <trans-unit id="36013172d7bed76a773c2a3e7f523422dd3a224f" translate="yes" xml:space="preserve">
          <source>Note that sometimes channels may produce executions that look unfair due to the nature of the executor that is being used. See &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/issues/111&quot;&gt;this issue&lt;/a&gt; for details.</source>
          <target state="translated">Tenga en cuenta que a veces los canales pueden producir ejecuciones que parecen injustas debido a la naturaleza del ejecutor que se est&amp;aacute; utilizando. Consulte &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/issues/111&quot;&gt;este n&amp;uacute;mero&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="1c3b5c2f9f97ede3b692c00928df156ad477b585" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../-string/index#kotlin.String&quot;&gt;String&lt;/a&gt; implementation of this interface in Kotlin/JS has unspecified behavior if the &lt;a href=&quot;get#kotlin.CharSequence%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of its bounds.</source>
          <target state="translated">Tenga en cuenta que la implementaci&amp;oacute;n de &lt;a href=&quot;../-string/index#kotlin.String&quot;&gt;String&lt;/a&gt; de esta interfaz en Kotlin / JS tiene un comportamiento no especificado si el &lt;a href=&quot;get#kotlin.CharSequence%24get%28kotlin.Int%29%2Findex&quot;&gt;&amp;iacute;ndice&lt;/a&gt; est&amp;aacute; fuera de sus l&amp;iacute;mites.</target>
        </trans-unit>
        <trans-unit id="459ff0aa9d321691761e4a91e298d7fd73dfd1d5" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../-string/index#kotlin.String&quot;&gt;String&lt;/a&gt; implementation of this interface in Kotlin/JS has unspecified behavior if the &lt;a href=&quot;get#kotlin.CharSequence%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of its bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656f0ee95d7b273c3b267aed0322b60e181f19cb" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../../kotlin/-string/index#kotlin.String&quot;&gt;String&lt;/a&gt; implementation of this interface in Kotlin/JS has unspecified behavior if the &lt;a href=&quot;../../kotlin/-char-sequence/get#kotlin.CharSequence%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of its bounds.</source>
          <target state="translated">Tenga en cuenta que la implementaci&amp;oacute;n de &lt;a href=&quot;../../kotlin/-string/index#kotlin.String&quot;&gt;String&lt;/a&gt; de esta interfaz en Kotlin / JS tiene un comportamiento no especificado si el &lt;a href=&quot;../../kotlin/-char-sequence/get#kotlin.CharSequence%24get%28kotlin.Int%29%2Findex&quot;&gt;&amp;iacute;ndice&lt;/a&gt; est&amp;aacute; fuera de sus l&amp;iacute;mites.</target>
        </trans-unit>
        <trans-unit id="d3efab9ae2a1f7a7653fe059df988b2ea1b2331a" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/flat-map-merge.html&quot;&gt;flatMapMerge&lt;/a&gt; calls its block of code (&lt;code&gt;{ requestFlow(it) }&lt;/code&gt; in this example) sequentially, but collects the resulting flows concurrently, it is the equivalent of performing a sequential &lt;code&gt;map { requestFlow(it) }&lt;/code&gt; first and then calling &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/flatten-merge.html&quot;&gt;flattenMerge&lt;/a&gt; on the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da71441230391936f1268c02bf7631d5b1c231d6" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/flow-on.html&quot;&gt;flowOn&lt;/a&gt; operator uses the same buffering mechanism when it has to change a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-dispatcher/index.html&quot;&gt;CoroutineDispatcher&lt;/a&gt;, but here we explicitly request buffering without changing the execution context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d97d17b217564ee55541f4e63de5ad16ee2c54" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;@DslMarker&lt;/code&gt; annotation is available only since Kotlin 1.1.</source>
          <target state="translated">Tenga en cuenta que la anotaci&amp;oacute;n &lt;code&gt;@DslMarker&lt;/code&gt; solo est&amp;aacute; disponible desde Kotlin 1.1.</target>
        </trans-unit>
        <trans-unit id="e7b3f809dbbb0b87e0e79d9712336f436e1ff493" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;componentN()&lt;/code&gt; functions need to be marked with the &lt;code&gt;operator&lt;/code&gt; keyword to allow using them in a destructuring declaration.</source>
          <target state="translated">Tenga en cuenta que las funciones &lt;code&gt;componentN()&lt;/code&gt; deben marcarse con la palabra clave &lt;code&gt;operator&lt;/code&gt; para permitir su uso en una declaraci&amp;oacute;n de desestructuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4929a13b1b30f84a327018335edc5ac7a8c0ec7a" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;external&lt;/code&gt; modifier is inherited by nested declarations. This is why in the example &lt;code&gt;Node&lt;/code&gt; class, we do not need to add the &lt;code&gt;external&lt;/code&gt; modifier before member functions and properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d942ddfab9f982a7bff6988ad53e1b8f734657f3" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;kotlin-multiplaform&lt;/code&gt; plugin doesn't create any production binaries by default. The only binary available by default is a debug executable allowing one to run tests from the &lt;code&gt;test&lt;/code&gt; compilation.</source>
          <target state="translated">Tenga en cuenta que el &lt;code&gt;kotlin-multiplaform&lt;/code&gt; no crea ning&amp;uacute;n binario de producci&amp;oacute;n de forma predeterminada. El &amp;uacute;nico binario disponible por defecto es un ejecutable de depuraci&amp;oacute;n que permite ejecutar pruebas desde la compilaci&amp;oacute;n de &lt;code&gt;test&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c656240136213ce9805ea2877dde6b34a8442c1b" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;provideDelegate&lt;/code&gt; method affects only the creation of the auxiliary property and doesn't affect the code generated for getter or setter.</source>
          <target state="translated">Tenga en cuenta que el m&amp;eacute;todo &lt;code&gt;provideDelegate&lt;/code&gt; afecta solo la creaci&amp;oacute;n de la propiedad auxiliar y no afecta el c&amp;oacute;digo generado para getter o setter.</target>
        </trans-unit>
        <trans-unit id="eaabc3c1b973d9e58d5da5690136b6ca64e5f983" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;rem&lt;/code&gt; operator is supported since Kotlin 1.1. Kotlin 1.0 uses the &lt;code&gt;mod&lt;/code&gt; operator, which is deprecated in Kotlin 1.1.</source>
          <target state="translated">Tenga en cuenta que el operador &lt;code&gt;rem&lt;/code&gt; es compatible desde Kotlin 1.1. Kotlin 1.0 usa el operador &lt;code&gt;mod&lt;/code&gt; , que est&amp;aacute; en desuso en Kotlin 1.1.</target>
        </trans-unit>
        <trans-unit id="72e01dcbd71cc06e15070eae50092b4b7e9eed02" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;to&lt;/code&gt; notation creates a short-living &lt;code&gt;Pair&lt;/code&gt; object, so it's recommended that you use it only if performance isn't critical. To avoid excessive memory usage, use alternative ways. For example, you can create a mutable map and populate it using the write operations. The &lt;a href=&quot;scope-functions#apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt; function can help to keep the initialization fluent here.</source>
          <target state="translated">Tenga en cuenta que la notaci&amp;oacute;n &lt;code&gt;to&lt;/code&gt; crea un objeto &lt;code&gt;Pair&lt;/code&gt; de corta duraci&amp;oacute;n , por lo que se recomienda que lo use solo si el rendimiento no es cr&amp;iacute;tico. Para evitar el uso excesivo de memoria, utilice formas alternativas. Por ejemplo, puede crear un mapa mutable y poblarlo usando las operaciones de escritura. La funci&amp;oacute;n &lt;a href=&quot;scope-functions#apply&quot;&gt; &lt;code&gt;apply()&lt;/code&gt; &lt;/a&gt; puede ayudar a mantener la inicializaci&amp;oacute;n fluida aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="14f09727b2d752324269a0d82ae94535e1c1e4e5" translate="yes" xml:space="preserve">
          <source>Note that the String implementation of this interface in Kotlin/JS has unspecified behavior if the &lt;a href=&quot;../../kotlin/-char-sequence/get#kotlin.CharSequence%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of its bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0cdfd1c642695da1e12ec7f632f89942b6add0" translate="yes" xml:space="preserve">
          <source>Note that the char sequence passed to the &lt;a href=&quot;chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function is ephemeral and is valid only inside that function. You should not store it or allow it to escape in some way, unless you made a snapshot of it. The last char sequence may have less characters than the given &lt;a href=&quot;chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que la secuencia de caracteres pasada a la funci&amp;oacute;n de &lt;a href=&quot;chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Ftransform&quot;&gt;transformaci&amp;oacute;n&lt;/a&gt; es ef&amp;iacute;mera y solo es v&amp;aacute;lida dentro de esa funci&amp;oacute;n. No debe almacenarlo ni permitir que se escape de alguna manera, a menos que haya tomado una instant&amp;aacute;nea. La &amp;uacute;ltima secuencia de caracteres puede tener menos caracteres que el &lt;a href=&quot;chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Fsize&quot;&gt;tama&amp;ntilde;o&lt;/a&gt; indicado .</target>
        </trans-unit>
        <trans-unit id="cd01abddf25872ce916797664b86dae36d2cc1ac" translate="yes" xml:space="preserve">
          <source>Note that the char sequence passed to the &lt;a href=&quot;chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function is ephemeral and is valid only inside that function. You should not store it or allow it to escape in some way, unless you made a snapshot of it. The last char sequence may have less characters than the given &lt;a href=&quot;chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691b0c57806763a4b2bdecce9c41e605803c5ebe" translate="yes" xml:space="preserve">
          <source>Note that the char sequence passed to the &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function is ephemeral and is valid only inside that function. You should not store it or allow it to escape in some way, unless you made a snapshot of it. The last char sequence may have less characters than the given &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que la secuencia de caracteres pasada a la funci&amp;oacute;n de &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Ftransform&quot;&gt;transformaci&amp;oacute;n&lt;/a&gt; es ef&amp;iacute;mera y solo es v&amp;aacute;lida dentro de esa funci&amp;oacute;n. No debe almacenarlo ni permitir que se escape de alguna manera, a menos que haya tomado una instant&amp;aacute;nea. La &amp;uacute;ltima secuencia de caracteres puede tener menos caracteres que el &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Fsize&quot;&gt;tama&amp;ntilde;o&lt;/a&gt; indicado .</target>
        </trans-unit>
        <trans-unit id="66c2ad296d8e177430bc0fa68ba7b9eb97117778" translate="yes" xml:space="preserve">
          <source>Note that the char sequence passed to the &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/transform&quot;&gt;transform&lt;/a&gt; function is ephemeral and is valid only inside that function. You should not store it or allow it to escape in some way, unless you made a snapshot of it. The last char sequence may have less characters than the given &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1754418c79853b8c6ec574fcc023dbf40a7d737e" translate="yes" xml:space="preserve">
          <source>Note that the char sequence passed to the &lt;a href=&quot;windowed#kotlin.text%24windowed%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.windowed.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function is ephemeral and is valid only inside that function. You should not store it or allow it to escape in some way, unless you made a snapshot of it. Several last char sequences may have less characters than the given &lt;a href=&quot;windowed#kotlin.text%24windowed%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.windowed.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que la secuencia de caracteres pasada a la funci&amp;oacute;n de &lt;a href=&quot;windowed#kotlin.text%24windowed%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.windowed.R%29%29%29%2Ftransform&quot;&gt;transformaci&amp;oacute;n&lt;/a&gt; es ef&amp;iacute;mera y solo es v&amp;aacute;lida dentro de esa funci&amp;oacute;n. No debe almacenarlo ni permitir que se escape de alguna manera, a menos que haya tomado una instant&amp;aacute;nea. Varias &amp;uacute;ltimas secuencias de caracteres pueden tener menos caracteres que el &lt;a href=&quot;windowed#kotlin.text%24windowed%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.windowed.R%29%29%29%2Fsize&quot;&gt;tama&amp;ntilde;o&lt;/a&gt; dado .</target>
        </trans-unit>
        <trans-unit id="8a3008d758022d0b209de4899387968b8ac78ed4" translate="yes" xml:space="preserve">
          <source>Note that the char sequence passed to the &lt;a href=&quot;windowed#kotlin.text%24windowed(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.windowed.R)))/transform&quot;&gt;transform&lt;/a&gt; function is ephemeral and is valid only inside that function. You should not store it or allow it to escape in some way, unless you made a snapshot of it. Several last char sequences may have less characters than the given &lt;a href=&quot;windowed#kotlin.text%24windowed(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.windowed.R)))/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266d21f640d721c4dd41a4ded8abb4f2b56ec11c" translate="yes" xml:space="preserve">
          <source>Note that the char sequence passed to the &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.windowedSequence.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function is ephemeral and is valid only inside that function. You should not store it or allow it to escape in some way, unless you made a snapshot of it. Several last char sequences may have less characters than the given &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.windowedSequence.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que la secuencia de caracteres pasada a la funci&amp;oacute;n de &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.windowedSequence.R%29%29%29%2Ftransform&quot;&gt;transformaci&amp;oacute;n&lt;/a&gt; es ef&amp;iacute;mera y solo es v&amp;aacute;lida dentro de esa funci&amp;oacute;n. No debe almacenarlo ni permitir que se escape de alguna manera, a menos que haya tomado una instant&amp;aacute;nea. Varias &amp;uacute;ltimas secuencias de caracteres pueden tener menos caracteres que el &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.windowedSequence.R%29%29%29%2Fsize&quot;&gt;tama&amp;ntilde;o&lt;/a&gt; dado .</target>
        </trans-unit>
        <trans-unit id="e51326b0cfaf636fb6a7d19970d3f5dc2bf4c4ac" translate="yes" xml:space="preserve">
          <source>Note that the char sequence passed to the &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.windowedSequence.R)))/transform&quot;&gt;transform&lt;/a&gt; function is ephemeral and is valid only inside that function. You should not store it or allow it to escape in some way, unless you made a snapshot of it. Several last char sequences may have less characters than the given &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.windowedSequence.R)))/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeca19ffbd81bf7218d5ce25611e87d001f58db2" translate="yes" xml:space="preserve">
          <source>Note that the compiler only uses the properties defined inside the primary constructor for the automatically generated functions. To exclude a property from the generated implementations, declare it inside the class body:</source>
          <target state="translated">Tenga en cuenta que el compilador sólo utiliza las propiedades definidas dentro del constructor primario para las funciones generadas automáticamente.Para excluir una propiedad de las implementaciones generadas,declárala dentro del cuerpo de la clase:</target>
        </trans-unit>
        <trans-unit id="29a5989520a2bf8fd601f2d782fa7b5f4d18221d" translate="yes" xml:space="preserve">
          <source>Note that the content of &lt;code&gt;platform.posix&lt;/code&gt; is NOT identical on different platforms, in the same way as different &lt;code&gt;POSIX&lt;/code&gt; implementations are a little different.</source>
          <target state="translated">Tenga en cuenta que el contenido de &lt;code&gt;platform.posix&lt;/code&gt; NO es id&amp;eacute;ntico en diferentes plataformas, de la misma manera que las diferentes implementaciones de &lt;code&gt;POSIX&lt;/code&gt; son un poco diferentes.</target>
        </trans-unit>
        <trans-unit id="6e0ba2d2cb4d8f4a9dbc1b85a017969941095acd" translate="yes" xml:space="preserve">
          <source>Note that the databinding expression language uses the same syntax for referring to properties as Kotlin: &lt;code&gt;data.imageUrl&lt;/code&gt;. In Kotlin you can write &lt;code&gt;v.prop&lt;/code&gt; instead of &lt;code&gt;v.getProp()&lt;/code&gt; even if &lt;code&gt;getProp()&lt;/code&gt; is a Java method. Similarly, instead of calling a setter directly, you may use an assignment:</source>
          <target state="translated">Tenga en cuenta que el lenguaje de expresi&amp;oacute;n de enlace de datos utiliza la misma sintaxis para hacer referencia a propiedades como Kotlin: &lt;code&gt;data.imageUrl&lt;/code&gt; . En Kotlin puede escribir &lt;code&gt;v.prop&lt;/code&gt; en lugar de &lt;code&gt;v.getProp()&lt;/code&gt; incluso si &lt;code&gt;getProp()&lt;/code&gt; es un m&amp;eacute;todo Java. De manera similar, en lugar de llamar a un colocador directamente, puede usar una asignaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="e38cb3723f44256fc4af27d394f0da73badd7310" translate="yes" xml:space="preserve">
          <source>Note that the first build isn't incremental in any case.</source>
          <target state="translated">Tenga en cuenta que la primera construcción no es incremental en ningún caso.</target>
        </trans-unit>
        <trans-unit id="12ec4e8e93f935e0bfae0709b78b49b5ef72a6af" translate="yes" xml:space="preserve">
          <source>Note that the implementation on &lt;em&gt;every&lt;/em&gt; platform can encode byte arrays to a string. If we want, we can provide a more efficient implementation for this method, for example, let's specialize it on the JVM:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3539b1a59eaf5408904eb51b677999543b8a5f8e" translate="yes" xml:space="preserve">
          <source>Note that the list passed to the &lt;a href=&quot;chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function is ephemeral and is valid only inside that function. You should not store it or allow it to escape in some way, unless you made a snapshot of it. The last list may have less elements than the given &lt;a href=&quot;chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que la lista pasada a la funci&amp;oacute;n de &lt;a href=&quot;chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Ftransform&quot;&gt;transformaci&amp;oacute;n&lt;/a&gt; es ef&amp;iacute;mera y solo es v&amp;aacute;lida dentro de esa funci&amp;oacute;n. No debe almacenarlo ni permitir que se escape de alguna manera, a menos que haya tomado una instant&amp;aacute;nea. La &amp;uacute;ltima lista puede tener menos elementos que el &lt;a href=&quot;chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Fsize&quot;&gt;tama&amp;ntilde;o&lt;/a&gt; indicado .</target>
        </trans-unit>
        <trans-unit id="36bd5508df864c7458e1fccd9c81158cc477d507" translate="yes" xml:space="preserve">
          <source>Note that the list passed to the &lt;a href=&quot;chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function is ephemeral and is valid only inside that function. You should not store it or allow it to escape in some way, unless you made a snapshot of it. The last list may have less elements than the given &lt;a href=&quot;chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6ec3f60ea3d3f0e1450f4fd127d92b3dabc464" translate="yes" xml:space="preserve">
          <source>Note that the list passed to the &lt;a href=&quot;chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function is ephemeral and is valid only inside that function. You should not store it or allow it to escape in some way, unless you made a snapshot of it. The last list may have less elements than the given &lt;a href=&quot;chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que la lista pasada a la funci&amp;oacute;n de &lt;a href=&quot;chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Ftransform&quot;&gt;transformaci&amp;oacute;n&lt;/a&gt; es ef&amp;iacute;mera y solo es v&amp;aacute;lida dentro de esa funci&amp;oacute;n. No debe almacenarlo ni permitir que se escape de alguna manera, a menos que haya tomado una instant&amp;aacute;nea. La &amp;uacute;ltima lista puede tener menos elementos que el &lt;a href=&quot;chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Fsize&quot;&gt;tama&amp;ntilde;o&lt;/a&gt; indicado .</target>
        </trans-unit>
        <trans-unit id="b4dd0c4a7944c546ed18e9237812f399b9a75bb2" translate="yes" xml:space="preserve">
          <source>Note that the list passed to the &lt;a href=&quot;chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function is ephemeral and is valid only inside that function. You should not store it or allow it to escape in some way, unless you made a snapshot of it. The last list may have less elements than the given &lt;a href=&quot;chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c9e1743347f1aa8d11316573c39fab1f4d2b86" translate="yes" xml:space="preserve">
          <source>Note that the list passed to the &lt;a href=&quot;windowed#kotlin.collections%24windowed%28kotlin.collections.Iterable%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.collections.windowed.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function is ephemeral and is valid only inside that function. You should not store it or allow it to escape in some way, unless you made a snapshot of it. Several last lists may have less elements than the given &lt;a href=&quot;windowed#kotlin.collections%24windowed%28kotlin.collections.Iterable%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.collections.windowed.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que la lista pasada a la funci&amp;oacute;n de &lt;a href=&quot;windowed#kotlin.collections%24windowed%28kotlin.collections.Iterable%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.collections.windowed.R%29%29%29%2Ftransform&quot;&gt;transformaci&amp;oacute;n&lt;/a&gt; es ef&amp;iacute;mera y solo es v&amp;aacute;lida dentro de esa funci&amp;oacute;n. No debe almacenarlo ni permitir que se escape de alguna manera, a menos que haya tomado una instant&amp;aacute;nea. Varias &amp;uacute;ltimas listas pueden tener menos elementos que el &lt;a href=&quot;windowed#kotlin.collections%24windowed%28kotlin.collections.Iterable%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.collections.windowed.R%29%29%29%2Fsize&quot;&gt;tama&amp;ntilde;o&lt;/a&gt; indicado .</target>
        </trans-unit>
        <trans-unit id="fccc14666a62fb388999ea11066179edff1c4d5e" translate="yes" xml:space="preserve">
          <source>Note that the list passed to the &lt;a href=&quot;windowed#kotlin.collections%24windowed(kotlin.collections.Iterable((kotlin.collections.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.windowed.T)),%20kotlin.collections.windowed.R)))/transform&quot;&gt;transform&lt;/a&gt; function is ephemeral and is valid only inside that function. You should not store it or allow it to escape in some way, unless you made a snapshot of it. Several last lists may have less elements than the given &lt;a href=&quot;windowed#kotlin.collections%24windowed(kotlin.collections.Iterable((kotlin.collections.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.windowed.T)),%20kotlin.collections.windowed.R)))/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a01e230c14a996ac73932af98798f763d520bb" translate="yes" xml:space="preserve">
          <source>Note that the list passed to the &lt;a href=&quot;windowed#kotlin.sequences%24windowed%28kotlin.sequences.Sequence%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.sequences.windowed.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function is ephemeral and is valid only inside that function. You should not store it or allow it to escape in some way, unless you made a snapshot of it. Several last lists may have less elements than the given &lt;a href=&quot;windowed#kotlin.sequences%24windowed%28kotlin.sequences.Sequence%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.sequences.windowed.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que la lista pasada a la funci&amp;oacute;n de &lt;a href=&quot;windowed#kotlin.sequences%24windowed%28kotlin.sequences.Sequence%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.sequences.windowed.R%29%29%29%2Ftransform&quot;&gt;transformaci&amp;oacute;n&lt;/a&gt; es ef&amp;iacute;mera y solo es v&amp;aacute;lida dentro de esa funci&amp;oacute;n. No debe almacenarlo ni permitir que se escape de alguna manera, a menos que haya tomado una instant&amp;aacute;nea. Varias &amp;uacute;ltimas listas pueden tener menos elementos que el &lt;a href=&quot;windowed#kotlin.sequences%24windowed%28kotlin.sequences.Sequence%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.sequences.windowed.R%29%29%29%2Fsize&quot;&gt;tama&amp;ntilde;o&lt;/a&gt; indicado .</target>
        </trans-unit>
        <trans-unit id="01be197fd2cc3bdf986de65122c65771b937478d" translate="yes" xml:space="preserve">
          <source>Note that the list passed to the &lt;a href=&quot;windowed#kotlin.sequences%24windowed(kotlin.sequences.Sequence((kotlin.sequences.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.windowed.T)),%20kotlin.sequences.windowed.R)))/transform&quot;&gt;transform&lt;/a&gt; function is ephemeral and is valid only inside that function. You should not store it or allow it to escape in some way, unless you made a snapshot of it. Several last lists may have less elements than the given &lt;a href=&quot;windowed#kotlin.sequences%24windowed(kotlin.sequences.Sequence((kotlin.sequences.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.windowed.T)),%20kotlin.sequences.windowed.R)))/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6259e89a9a4c0b547dbd66ff1bea24b671ef991" translate="yes" xml:space="preserve">
          <source>Note that the module metadata published by Gradle 5.3 and above cannot be read by Gradle versions older than 5.3.</source>
          <target state="translated">Obsérvese que los metadatos de los módulos publicados por Gradle 5.3 y superiores no pueden ser leídos por las versiones de Gradle anteriores a la 5.3.</target>
        </trans-unit>
        <trans-unit id="289248f23bcb06f8e447242c0fc575e0c1a20430" translate="yes" xml:space="preserve">
          <source>Note that the named argument syntax cannot be used when calling Java functions, because Java bytecode does not always preserve names of function parameters.</source>
          <target state="translated">Obsérvese que la sintaxis de los argumentos con nombre no puede utilizarse al llamar a las funciones de Java,porque el código de bytes de Java no siempre conserva los nombres de los parámetros de las funciones.</target>
        </trans-unit>
        <trans-unit id="7b39b5b0c66187e76139e4031731bcf6a323f589" translate="yes" xml:space="preserve">
          <source>Note that the operation is not guaranteed to be atomic if the map is being modified concurrently.</source>
          <target state="translated">Nótese que no se garantiza que la operación sea atómica si el mapa se modifica simultáneamente.</target>
        </trans-unit>
        <trans-unit id="f1adf6c7e534562475c3f5e5643436265ce9a453" translate="yes" xml:space="preserve">
          <source>Note that the opposite reversed translation is not implemented yet: Swift/Objective-C error-throwing methods aren't imported to Kotlin as exception-throwing.</source>
          <target state="translated">Obsérvese que la traducción inversa inversa no se aplica todavía:Los métodos de lanzamiento de errores Swift/Objetivo-C no se importan a Kotlin como lanzamiento de excepciones.</target>
        </trans-unit>
        <trans-unit id="13e4f5805154eec53798d94ef883500f35ad56a4" translate="yes" xml:space="preserve">
          <source>Note that the other uses of curly braces in Kotlin, such as in function and class definitions and after &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt;/&lt;code&gt;for&lt;/code&gt;/&lt;code&gt;while&lt;/code&gt; statements, are not lambda expressions (so it is &lt;em&gt;not&lt;/em&gt; the case that &lt;code&gt;if&lt;/code&gt; is a function that conditionally executes a lambda function).</source>
          <target state="translated">Tenga en cuenta que los otros usos de las llaves en Kotlin, como en las definiciones de funci&amp;oacute;n y clase y despu&amp;eacute;s de las declaraciones &lt;code&gt;if&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt; / &lt;code&gt;for&lt;/code&gt; / &lt;code&gt;while&lt;/code&gt; , no son expresiones lambda (por lo que &lt;em&gt;no&lt;/em&gt; es el caso de que &lt;code&gt;if&lt;/code&gt; sea ​​una funci&amp;oacute;n que ejecute condicionalmente una lambda funci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="29cdb0fff079bd2313b913b84a243b2ced642967" translate="yes" xml:space="preserve">
          <source>Note that the returned instance uses itself to synchronize on. Do not synchronize from external code on the returned instance as it may cause accidental deadlock. Also this behavior can be changed in the future.</source>
          <target state="translated">Tenga en cuenta que la instancia devuelta se utiliza a sí misma para sincronizarse.No sincronice desde un código externo en la instancia devuelta ya que puede causar un bloqueo accidental.También este comportamiento puede ser cambiado en el futuro.</target>
        </trans-unit>
        <trans-unit id="ab68d93b5c9158ca99b7d3217cfebeb0bc1dbe0f" translate="yes" xml:space="preserve">
          <source>Note that the reverse operation may produce new surrogate pairs that were unpaired low-surrogates and high-surrogates before the operation. For example, reversing &lt;code&gt;&quot;\uDC00\uD800&quot;&lt;/code&gt; produces &lt;code&gt;&quot;\uD800\uDC00&quot;&lt;/code&gt; which is a valid surrogate pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99bb4d1e09ed7e1f3f7c48bd69bd7281f7032077" translate="yes" xml:space="preserve">
          <source>Note that the source sequence and the array being added are iterated only when an &lt;code&gt;iterator&lt;/code&gt; is requested from the resulting sequence. Changing any of them between successive calls to &lt;code&gt;iterator&lt;/code&gt; may affect the result.</source>
          <target state="translated">Tenga en cuenta que la secuencia de origen y la matriz que se agrega se iteran solo cuando se solicita un &lt;code&gt;iterator&lt;/code&gt; de la secuencia resultante. Cambiar cualquiera de ellos entre llamadas sucesivas al &lt;code&gt;iterator&lt;/code&gt; puede afectar el resultado.</target>
        </trans-unit>
        <trans-unit id="4bc2850950af5238d132e57cd0616b073acff952" translate="yes" xml:space="preserve">
          <source>Note that the source sequence and the array being subtracted are iterated only when an &lt;code&gt;iterator&lt;/code&gt; is requested from the resulting sequence. Changing any of them between successive calls to &lt;code&gt;iterator&lt;/code&gt; may affect the result.</source>
          <target state="translated">Tenga en cuenta que la secuencia de origen y la matriz que se resta se iteran solo cuando se solicita un &lt;code&gt;iterator&lt;/code&gt; de la secuencia resultante. Cambiar cualquiera de ellos entre llamadas sucesivas al &lt;code&gt;iterator&lt;/code&gt; puede afectar el resultado.</target>
        </trans-unit>
        <trans-unit id="8cd8b63a074395eb7bac096117fd2d1a65ca128f" translate="yes" xml:space="preserve">
          <source>Note that the source sequence and the collection being added are iterated only when an &lt;code&gt;iterator&lt;/code&gt; is requested from the resulting sequence. Changing any of them between successive calls to &lt;code&gt;iterator&lt;/code&gt; may affect the result.</source>
          <target state="translated">Tenga en cuenta que la secuencia de origen y la colecci&amp;oacute;n que se agrega se iteran solo cuando se solicita un &lt;code&gt;iterator&lt;/code&gt; de la secuencia resultante. Cambiar cualquiera de ellos entre llamadas sucesivas al &lt;code&gt;iterator&lt;/code&gt; puede afectar el resultado.</target>
        </trans-unit>
        <trans-unit id="230e838a21a0d86d33ae636264aea12d232d60bc" translate="yes" xml:space="preserve">
          <source>Note that the source sequence and the collection being subtracted are iterated only when an &lt;code&gt;iterator&lt;/code&gt; is requested from the resulting sequence. Changing any of them between successive calls to &lt;code&gt;iterator&lt;/code&gt; may affect the result.</source>
          <target state="translated">Tenga en cuenta que la secuencia de origen y la colecci&amp;oacute;n que se resta se iteran solo cuando se solicita un &lt;code&gt;iterator&lt;/code&gt; de la secuencia resultante. Cambiar cualquiera de ellos entre llamadas sucesivas al &lt;code&gt;iterator&lt;/code&gt; puede afectar el resultado.</target>
        </trans-unit>
        <trans-unit id="1d7a2c8875e7a4328f4bc1cb1a337451636c5765" translate="yes" xml:space="preserve">
          <source>Note that the source sequence and the sequence being added are iterated only when an &lt;code&gt;iterator&lt;/code&gt; is requested from the resulting sequence. Changing any of them between successive calls to &lt;code&gt;iterator&lt;/code&gt; may affect the result.</source>
          <target state="translated">Tenga en cuenta que la secuencia de origen y la secuencia que se agrega se iteran solo cuando se solicita un &lt;code&gt;iterator&lt;/code&gt; de la secuencia resultante. Cambiar cualquiera de ellos entre llamadas sucesivas al &lt;code&gt;iterator&lt;/code&gt; puede afectar el resultado.</target>
        </trans-unit>
        <trans-unit id="9b6c8e7b439f69f32239265aaaa738e3fcea0362" translate="yes" xml:space="preserve">
          <source>Note that the source sequence and the sequence being subtracted are iterated only when an &lt;code&gt;iterator&lt;/code&gt; is requested from the resulting sequence. Changing any of them between successive calls to &lt;code&gt;iterator&lt;/code&gt; may affect the result.</source>
          <target state="translated">Tenga en cuenta que la secuencia fuente y la secuencia que se resta se iteran solo cuando se solicita un &lt;code&gt;iterator&lt;/code&gt; de la secuencia resultante. Cambiar cualquiera de ellos entre llamadas sucesivas al &lt;code&gt;iterator&lt;/code&gt; puede afectar el resultado.</target>
        </trans-unit>
        <trans-unit id="0f3815a86501d3751673db13b1bc40b17a55063d" translate="yes" xml:space="preserve">
          <source>Note that the syntax &lt;code&gt;this::prop&lt;/code&gt; to refer a &lt;a href=&quot;reflection#bound-function-and-property-references-since-11&quot;&gt;bound callable reference&lt;/a&gt; in the code directly has only been available since Kotlin 1.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4783ce40fed5c138c67544445542f050cb0f80" translate="yes" xml:space="preserve">
          <source>Note that the syntax &lt;code&gt;this::prop&lt;/code&gt; to refer a &lt;a href=&quot;reflection#bound-function-and-property-references-since-11&quot;&gt;bound callable reference&lt;/a&gt; in the code directly is available only since Kotlin 1.1.</source>
          <target state="translated">Tenga en cuenta que la sintaxis &lt;code&gt;this::prop&lt;/code&gt; para hacer referencia a una &lt;a href=&quot;reflection#bound-function-and-property-references-since-11&quot;&gt;referencia invocable enlazada&lt;/a&gt; en el c&amp;oacute;digo directamente est&amp;aacute; disponible solo desde Kotlin 1.1.</target>
        </trans-unit>
        <trans-unit id="2949a431bbdf8be1e322b0911e16815ddc68d4b3" translate="yes" xml:space="preserve">
          <source>Note that the terms &quot;subclass&quot; and &quot;superclass&quot; can span multiple levels of inheritance - &lt;code&gt;Car&lt;/code&gt; is a subclass of &lt;code&gt;Any&lt;/code&gt;, and &lt;code&gt;Any&lt;/code&gt; is the superclass of everything. If we want to restrict ourselves to one level of inheritance, we will say &quot;direct subclass&quot; or &quot;direct superclass&quot;.</source>
          <target state="translated">Tenga en cuenta que los t&amp;eacute;rminos &quot;subclase&quot; y &quot;superclase&quot; pueden abarcar varios niveles de herencia: el &lt;code&gt;Car&lt;/code&gt; es una subclase de &lt;code&gt;Any&lt;/code&gt; y &lt;code&gt;Any&lt;/code&gt; es la superclase de todo. Si queremos restringirnos a un nivel de herencia, diremos &quot;subclase directa&quot; o &quot;superclase directa&quot;.</target>
        </trans-unit>
        <trans-unit id="6f04df739b130f057070e51840257477306e9abb" translate="yes" xml:space="preserve">
          <source>Note that the trailing newline of each line is stripped. You can also call &lt;code&gt;readLines()&lt;/code&gt; on a file object to get a list of all the lines, or &lt;code&gt;useLines()&lt;/code&gt; to supply a function that will be called on every line. If you simply want the entire file contents as one string or byte array, call &lt;code&gt;readText()&lt;/code&gt; or &lt;code&gt;readBytes()&lt;/code&gt;, respectively.</source>
          <target state="translated">Tenga en cuenta que se elimina la nueva l&amp;iacute;nea final de cada l&amp;iacute;nea. Tambi&amp;eacute;n puede llamar a &lt;code&gt;readLines()&lt;/code&gt; en un objeto de archivo para obtener una lista de todas las l&amp;iacute;neas, o &lt;code&gt;useLines()&lt;/code&gt; para proporcionar una funci&amp;oacute;n que se llamar&amp;aacute; en cada l&amp;iacute;nea. Si simplemente desea el contenido completo del archivo como una cadena o matriz de bytes, llame a &lt;code&gt;readText()&lt;/code&gt; o &lt;code&gt;readBytes()&lt;/code&gt; , respectivamente.</target>
        </trans-unit>
        <trans-unit id="db6f4eb018a4edb9652d5fec97823153e8e6d26c" translate="yes" xml:space="preserve">
          <source>Note that the type annotations from the standard library aren&amp;rsquo;t emitted in the bytecode for now because the standard library is compiled with the target version 1.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3233b123410bb0637d15ef36074b9c50ad6be8ca" translate="yes" xml:space="preserve">
          <source>Note that the type of a property must be explicitly specified. As opposed to Python, declaring a property directly inside the class does not create a class-level property, but an instance-level one: every instance of &lt;code&gt;Person&lt;/code&gt; will have &lt;em&gt;its own&lt;/em&gt;&lt;code&gt;name&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt;. Their values will start out in every instance as &lt;code&gt;&quot;Anne&quot;&lt;/code&gt; and &lt;code&gt;32&lt;/code&gt;, respectively, but the value in each instance can be modified independently of the others:</source>
          <target state="translated">Tenga en cuenta que el tipo de propiedad debe especificarse expl&amp;iacute;citamente. A diferencia de Python, declarar una propiedad directamente dentro de la clase no crea una propiedad a nivel de clase, sino a nivel de instancia: cada instancia de &lt;code&gt;Person&lt;/code&gt; tendr&amp;aacute; &lt;em&gt;su propio &lt;/em&gt; &lt;code&gt;name&lt;/code&gt; y &lt;code&gt;age&lt;/code&gt; . Sus valores comenzar&amp;aacute;n en cada instancia como &lt;code&gt;&quot;Anne&quot;&lt;/code&gt; y &lt;code&gt;32&lt;/code&gt; , respectivamente, pero el valor en cada instancia se puede modificar independientemente de los dem&amp;aacute;s:</target>
        </trans-unit>
        <trans-unit id="f7f16b8fd146ff06d4c86373cb61d32bd374065c" translate="yes" xml:space="preserve">
          <source>Note that the type systems of TypeScript and Kotlin do not match exactly, so you may need to edit the generated headers in case you encounter difficulties with using the APIs from Kotlin.</source>
          <target state="translated">Tenga en cuenta que los sistemas de tipos de TypeScript y Kotlin no coinciden exactamente,por lo que es posible que tenga que editar los encabezados generados en caso de que tenga dificultades para utilizar las API de Kotlin.</target>
        </trans-unit>
        <trans-unit id="b0f31d7eb5e41ba2d64378a5f837d7e8fe985ed7" translate="yes" xml:space="preserve">
          <source>Note that the use of local returns in previous three examples is similar to the use of &lt;em&gt;continue&lt;/em&gt; in regular loops. There is no direct equivalent for &lt;em&gt;break&lt;/em&gt;, but it can be simulated by adding another nesting lambda and non-locally returning from it:</source>
          <target state="translated">Tenga en cuenta que el uso de retornos locales en los tres ejemplos anteriores es similar al uso de &lt;em&gt;continue&lt;/em&gt; en bucles regulares. No hay un equivalente directo para la &lt;em&gt;ruptura&lt;/em&gt; , pero se puede simular agregando otra lambda anidada y regresando de manera no local:</target>
        </trans-unit>
        <trans-unit id="5c55ea290b4da0807cae1502743668a58127c888" translate="yes" xml:space="preserve">
          <source>Note that the value returned by this function can change on subsequent invocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a02cd8bb7478c55788513deb98d47bc6c820826" translate="yes" xml:space="preserve">
          <source>Note that the value returned by this function can change on subsequent invocations. If the time source is monotonic, it can change only from &lt;code&gt;false&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, namely, when the time mark becomes behind the current point of the time source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a113e2bba816f417c5a87476b28464699d9186b6" translate="yes" xml:space="preserve">
          <source>Note that the value returned by this function can change on subsequent invocations. If the time source is monotonic, it can change only from &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;, namely, when the time mark becomes behind the current point of the time source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8c27f5e2c38c0c780333a188295d27c17547ca" translate="yes" xml:space="preserve">
          <source>Note that there are some cases in which the Kotlin compiler does not apply mangling:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4baab91a6183da58c03d16fdff1a5962cf6d45a" translate="yes" xml:space="preserve">
          <source>Note that there must be no space between &lt;code&gt;continue&lt;/code&gt;/&lt;code&gt;break&lt;/code&gt; and &lt;code&gt;@&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que no debe haber espacio entre &lt;code&gt;continue&lt;/code&gt; / &lt;code&gt;break&lt;/code&gt; y &lt;code&gt;@&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d4ed672615deb4b3ea8e8cf90856dae61208644" translate="yes" xml:space="preserve">
          <source>Note that there's no point in optimizing your code when comparing to &lt;code&gt;null&lt;/code&gt; explicitly: &lt;code&gt;a == null&lt;/code&gt; will be automatically translated to &lt;code&gt;a === null&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que no tiene sentido optimizar su c&amp;oacute;digo cuando se compara con &lt;code&gt;null&lt;/code&gt; expl&amp;iacute;citamente: &lt;code&gt;a == null&lt;/code&gt; se traducir&amp;aacute; autom&amp;aacute;ticamente a &lt;code&gt;a === null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29bbb70efdb2913fbd8c12ace3a60040ce02ee39" translate="yes" xml:space="preserve">
          <source>Note that these &lt;code&gt;xxxAsync&lt;/code&gt; functions are &lt;strong&gt;not&lt;/strong&gt;&lt;em&gt;suspending&lt;/em&gt; functions. They can be used from anywhere. However, their use always implies asynchronous (here meaning &lt;em&gt;concurrent&lt;/em&gt;) execution of their action with the invoking code.</source>
          <target state="translated">Tenga en cuenta que estas funciones &lt;code&gt;xxxAsync&lt;/code&gt; &lt;strong&gt;no &lt;/strong&gt;&lt;em&gt;suspenden&lt;/em&gt; funciones. Se pueden utilizar desde cualquier lugar. Sin embargo, su uso siempre implica la ejecuci&amp;oacute;n asincr&amp;oacute;nica (aqu&amp;iacute; significa &lt;em&gt;concurrente&lt;/em&gt; ) de su acci&amp;oacute;n con el c&amp;oacute;digo de invocaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="858c3af47e754266986334fc2f03ec0f1caad4a6" translate="yes" xml:space="preserve">
          <source>Note that these tasks will only be available if your target is configured to generate executable files (via &lt;code&gt;binaries.executable()&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fb011f3bb1b536480e223367f20ce2ec592218" translate="yes" xml:space="preserve">
          <source>Note that this API is in a preview state and has a very high chance of being changed in the future. Do not use it if you develop a library since your library will become binary incompatible with the future versions of the standard library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d091dbc112d0275a030bcbf9509f2a82ef36aedb" translate="yes" xml:space="preserve">
          <source>Note that this Comparator does not take locale into account, and will result in an unsatisfactory ordering for certain locales.</source>
          <target state="translated">Tenga en cuenta que este comparador no tiene en cuenta la localidad,y dará lugar a un ordenamiento insatisfactorio para ciertas localidades.</target>
        </trans-unit>
        <trans-unit id="5ac530c6fe48d426610d73f9628e8469943c2a28" translate="yes" xml:space="preserve">
          <source>Note that this does not affect the webpacked output in &lt;code&gt;build/distributions&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9957e9675cc2706846aa1653497d6600b98d94" translate="yes" xml:space="preserve">
          <source>Note that this example also uses &lt;code&gt;use&lt;/code&gt; function from the Kotlin standard library to release threads that are created with &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/new-single-thread-context.html&quot;&gt;newSingleThreadContext&lt;/a&gt; when they are no longer needed.</source>
          <target state="translated">Tenga en cuenta que este ejemplo tambi&amp;eacute;n usa la funci&amp;oacute;n de &lt;code&gt;use&lt;/code&gt; de la biblioteca est&amp;aacute;ndar de Kotlin para liberar los subprocesos que se crean con &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/new-single-thread-context.html&quot;&gt;newSingleThreadContext&lt;/a&gt; cuando ya no se necesitan.</target>
        </trans-unit>
        <trans-unit id="75aded832e4b3dd5a16b56a1e23cf328870005d2" translate="yes" xml:space="preserve">
          <source>Note that this example also uses the &lt;code&gt;use&lt;/code&gt; function from the Kotlin standard library to release threads created with &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/new-single-thread-context.html&quot;&gt;newSingleThreadContext&lt;/a&gt; when they are no longer needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec685b693941d4e96b2af1eef69e4363925a8b20" translate="yes" xml:space="preserve">
          <source>Note that this mechanism currently only works on Java version 1.7+. The JS and Native restrictions are temporary and will be lifted in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cc5e3b07875e2d5bb6712ec59bb2224c29a52e" translate="yes" xml:space="preserve">
          <source>Note that this only works where &lt;code&gt;b&lt;/code&gt; is immutable (i.e. a local variable which is not modified between the check and the usage or a member &lt;em&gt;val&lt;/em&gt; which has a backing field and is not overridable), because otherwise it might happen that &lt;code&gt;b&lt;/code&gt; changes to &lt;em&gt;null&lt;/em&gt; after the check.</source>
          <target state="translated">Tenga en cuenta que esto solo funciona donde &lt;code&gt;b&lt;/code&gt; es inmutable (es decir, una variable local que no se modifica entre la verificaci&amp;oacute;n y el uso o un miembro &lt;em&gt;val&lt;/em&gt; que tiene un campo de respaldo y no es reemplazable), porque de lo contrario podr&amp;iacute;a suceder que &lt;code&gt;b&lt;/code&gt; cambie a &lt;em&gt;nulo&lt;/em&gt; despu&amp;eacute;s el cheque.</target>
        </trans-unit>
        <trans-unit id="02cb3aecbee6ce81505199ced32233815d499b61" translate="yes" xml:space="preserve">
          <source>Note that this part of the &lt;code&gt;.def&lt;/code&gt; file is treated as part of the header file, so functions with the body should be declared as &lt;code&gt;static&lt;/code&gt;. The declarations are parsed after including the files from the &lt;code&gt;headers&lt;/code&gt; list.</source>
          <target state="translated">Tenga en cuenta que esta parte del archivo &lt;code&gt;.def&lt;/code&gt; se trata como parte del archivo de encabezado, por lo que las funciones con el cuerpo deben declararse como &lt;code&gt;static&lt;/code&gt; . Las declaraciones se analizan despu&amp;eacute;s de incluir los archivos de la lista de &lt;code&gt;headers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="632fe2c8e3130a19688049106ee9e7cf2e3fa004" translate="yes" xml:space="preserve">
          <source>Note that this way of applying the Kotlin/JS plugin requires adding the following code to Gradle settings file (&lt;code&gt;settings.gradle&lt;/code&gt;):</source>
          <target state="translated">Tenga en cuenta que esta forma de aplicar el complemento Kotlin / JS requiere agregar el siguiente c&amp;oacute;digo al archivo de configuraci&amp;oacute;n de Gradle ( &lt;code&gt;settings.gradle&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="3e08e867fd041797206da0cee5969714ae5576c9" translate="yes" xml:space="preserve">
          <source>Note that unlike some other languages, there are no implicit widening conversions for numbers in Kotlin. For example, a function with a &lt;code&gt;Double&lt;/code&gt; parameter can be called only on &lt;code&gt;Double&lt;/code&gt; values, but not &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;Int&lt;/code&gt;, or other numeric values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d89b0ac97e4e72ec3a56a39219f1c2ad6cf8c5b" translate="yes" xml:space="preserve">
          <source>Note that we do not use &lt;code&gt;val&lt;/code&gt; in front of &lt;code&gt;maxSpeed&lt;/code&gt; in &lt;code&gt;Car&lt;/code&gt; - doing so would have introduced a distinct property in &lt;code&gt;Car&lt;/code&gt; that would have &lt;em&gt;shadowed&lt;/em&gt; the one inherited from &lt;code&gt;MotorVehicle&lt;/code&gt;. As written, it's just a constructor parameter that we pass on to the superconstructor.</source>
          <target state="translated">Tenga en cuenta que no usamos &lt;code&gt;val&lt;/code&gt; delante de &lt;code&gt;maxSpeed&lt;/code&gt; en &lt;code&gt;Car&lt;/code&gt; ; al hacerlo, se habr&amp;iacute;a introducido una propiedad distinta en &lt;code&gt;Car&lt;/code&gt; que habr&amp;iacute;a &lt;em&gt;sombreado&lt;/em&gt; la heredada de &lt;code&gt;MotorVehicle&lt;/code&gt; . Como est&amp;aacute; escrito, es solo un par&amp;aacute;metro de constructor que pasamos al superconstructor.</target>
        </trans-unit>
        <trans-unit id="d4769547ead14eb9d9d1997cf9d34e5c7c84ec1a" translate="yes" xml:space="preserve">
          <source>Note that we include our script at the bottom of the &lt;code&gt;body&lt;/code&gt; tag. This ensures that the DOM is fully available before the script is loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32efdf9e14f64cdc5ac4ce116b4cf7f1f66b160c" translate="yes" xml:space="preserve">
          <source>Note that when the LazyThreadSafetyMode.SYNCHRONIZED mode is specified the returned instance uses itself to synchronize on. Do not synchronize from external code on the returned instance as it may cause accidental deadlock. Also this behavior can be changed in the future.</source>
          <target state="translated">Tenga en cuenta que cuando se especifica el modo LazyThreadSafetyMode.SYNCHRONIZED,la instancia devuelta se utiliza para sincronizarse.No sincronice desde un código externo en la instancia devuelta ya que puede causar un bloqueo accidental.También este comportamiento puede ser cambiado en el futuro.</target>
        </trans-unit>
        <trans-unit id="d89d8b71e027e7e428c09aada677d55add6a81f5" translate="yes" xml:space="preserve">
          <source>Note that while &lt;code&gt;File()&lt;/code&gt; does create a &quot;file object&quot;, it doesn't actually open the file - the file object is just a reference to the file path; opening the file is a separate action. The preceding functions open and close the file automatically, whereas other functions separately open and close the file. For example, if you're parsing binary data and you don't want to read the entire file at once, you must create an &lt;em&gt;input stream&lt;/em&gt; (for binary data) or an &lt;em&gt;input stream reader&lt;/em&gt; (for strings) - the example below will read 16 bytes:</source>
          <target state="translated">Tenga en cuenta que si bien &lt;code&gt;File()&lt;/code&gt; crea un &quot;objeto de archivo&quot;, en realidad no abre el archivo; el objeto de archivo es solo una referencia a la ruta del archivo; abrir el archivo es una acci&amp;oacute;n separada. Las funciones anteriores abren y cierran el archivo autom&amp;aacute;ticamente, mientras que otras funciones abren y cierran el archivo por separado. Por ejemplo, si est&amp;aacute; analizando datos binarios y no desea leer todo el archivo a la vez, debe crear un &lt;em&gt;flujo de entrada&lt;/em&gt; (para datos binarios) o un &lt;em&gt;lector de flujo de entrada&lt;/em&gt; (para cadenas); el ejemplo siguiente leer&amp;aacute; 16 bytes:</target>
        </trans-unit>
        <trans-unit id="14f5320c56ff81654d679ede920646b9dc75066a" translate="yes" xml:space="preserve">
          <source>Note that with Gradle Kotlin DSL, you should get the task from the project's &lt;code&gt;tasks&lt;/code&gt; first.</source>
          <target state="translated">Tenga en cuenta que con Gradle Kotlin DSL, primero debe obtener la tarea de las &lt;code&gt;tasks&lt;/code&gt; del proyecto .</target>
        </trans-unit>
        <trans-unit id="c40d9fcf3b6b2afa85b538678b5ccf141165484f" translate="yes" xml:space="preserve">
          <source>Note that you can build the same pipeline using &lt;a href=&quot;../../../api/latest/jvm/stdlib/kotlin.sequences/iterator&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; coroutine builder from the standard library. Replace &lt;code&gt;produce&lt;/code&gt; with &lt;code&gt;iterator&lt;/code&gt;, &lt;code&gt;send&lt;/code&gt; with &lt;code&gt;yield&lt;/code&gt;, &lt;code&gt;receive&lt;/code&gt; with &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;ReceiveChannel&lt;/code&gt; with &lt;code&gt;Iterator&lt;/code&gt;, and get rid of the coroutine scope. You will not need &lt;code&gt;runBlocking&lt;/code&gt; either. However, the benefit of a pipeline that uses channels as shown above is that it can actually use multiple CPU cores if you run it in &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-default.html&quot;&gt;Dispatchers.Default&lt;/a&gt; context.</source>
          <target state="translated">Tenga en cuenta que puede crear la misma canalizaci&amp;oacute;n utilizando el generador de rutinas de &lt;a href=&quot;../../../api/latest/jvm/stdlib/kotlin.sequences/iterator&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; de la biblioteca est&amp;aacute;ndar. Vuelva a colocar &lt;code&gt;produce&lt;/code&gt; con &lt;code&gt;iterator&lt;/code&gt; , &lt;code&gt;send&lt;/code&gt; con &lt;code&gt;yield&lt;/code&gt; , &lt;code&gt;receive&lt;/code&gt; la &lt;code&gt;next&lt;/code&gt; , &lt;code&gt;ReceiveChannel&lt;/code&gt; con &lt;code&gt;Iterator&lt;/code&gt; , y deshacerse del alcance corrutina. Tampoco necesitar&amp;aacute;s &lt;code&gt;runBlocking&lt;/code&gt; . Sin embargo, el beneficio de una canalizaci&amp;oacute;n que usa canales como se muestra arriba es que en realidad puede usar m&amp;uacute;ltiples n&amp;uacute;cleos de CPU si lo ejecuta en el contexto &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-default.html&quot;&gt;Dispatchers.Default&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb9e894663a37dff3bfdff25d326ba2089261968" translate="yes" xml:space="preserve">
          <source>Note that you can open folders in the Source tab and see sources of libraries you are using in your project, including Kotlin standard library (&lt;code&gt;kotlin.js&lt;/code&gt;). This, however, requires that libraries are compiled with source maps enabled, as well as sources embedded into source maps. So the good practice is: if you share a library for Kotlin/JS, please, include source map into distribution.</source>
          <target state="translated">Tenga en cuenta que puede abrir carpetas en la pesta&amp;ntilde;a Fuente y ver las fuentes de las bibliotecas que est&amp;aacute; utilizando en su proyecto, incluida la biblioteca est&amp;aacute;ndar de Kotlin ( &lt;code&gt;kotlin.js&lt;/code&gt; ). Sin embargo, esto requiere que las bibliotecas se compilen con mapas de origen habilitados, as&amp;iacute; como tambi&amp;eacute;n con fuentes incrustadas en mapas de origen. Entonces, la buena pr&amp;aacute;ctica es: si comparte una biblioteca para Kotlin / JS, incluya el mapa de origen en la distribuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f3d310ef82c3c4cf7ec6ba7c31c24dfd55f8f136" translate="yes" xml:space="preserve">
          <source>Note that you can use the &lt;em&gt;override&lt;/em&gt; keyword as part of the property declaration in a primary constructor.</source>
          <target state="translated">Tenga en cuenta que puede utilizar la palabra clave &lt;em&gt;override&lt;/em&gt; como parte de la declaraci&amp;oacute;n de propiedad en un constructor principal.</target>
        </trans-unit>
        <trans-unit id="49136291f4ccdd63f93ac650ad3552f2ac330a1e" translate="yes" xml:space="preserve">
          <source>Note that you can't extend a non-external class by external classes.</source>
          <target state="translated">Tengan en cuenta que no se puede extender una clase no externa por clases externas.</target>
        </trans-unit>
        <trans-unit id="3e28231afdd7ac958845e417ade6744d2f5c90c1" translate="yes" xml:space="preserve">
          <source>Note that you need to turn on the &lt;a href=&quot;#enabling-experimental-features&quot;&gt;experimental flag&lt;/a&gt; to use &lt;code&gt;LayoutContainer&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que debe activar la &lt;code&gt;LayoutContainer&lt;/code&gt; &lt;a href=&quot;#enabling-experimental-features&quot;&gt;experimental&lt;/a&gt; para usar LayoutContainer .</target>
        </trans-unit>
        <trans-unit id="7606870a12c3125873b69f0dbf82ae21f8b6f6b5" translate="yes" xml:space="preserve">
          <source>Note that, as described in &lt;a href=&quot;classes#secondary-constructors&quot;&gt;Secondary Constructors&lt;/a&gt;, if a class has default values for all constructor parameters, a public no-argument constructor will be generated for it. This works even if the &lt;code&gt;@JvmOverloads&lt;/code&gt; annotation is not specified.</source>
          <target state="translated">Tenga en cuenta que, como se describe en &lt;a href=&quot;classes#secondary-constructors&quot;&gt;Constructores secundarios&lt;/a&gt; , si una clase tiene valores predeterminados para todos los par&amp;aacute;metros del constructor, se generar&amp;aacute; un constructor p&amp;uacute;blico sin argumentos para ella. Esto funciona incluso si no se especifica la anotaci&amp;oacute;n &lt;code&gt;@JvmOverloads&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcfd3d4bc13c4d196d89ced424f8f78ed6df819a" translate="yes" xml:space="preserve">
          <source>Note that, even though the members of companion objects look like static members in other languages, at runtime those are still instance members of real objects, and can, for example, implement interfaces:</source>
          <target state="translated">Obsérvese que,aunque los miembros de los objetos compañeros parecen miembros estáticos en otros idiomas,en tiempo de ejecución siguen siendo miembros de instancia de los objetos reales,y pueden,por ejemplo,implementar interfaces:</target>
        </trans-unit>
        <trans-unit id="63673aeff981591d75550c2f1b2c84d22a058b57" translate="yes" xml:space="preserve">
          <source>Note that, if the Java class only has a setter, it will not be visible as a property in Kotlin, because Kotlin does not support set-only properties at this time.</source>
          <target state="translated">Tengan en cuenta que si la clase Java sólo tiene un setter,no será visible como una propiedad en Kotlin,porque Kotlin no soporta las propiedades de sólo set en este momento.</target>
        </trans-unit>
        <trans-unit id="4ff451e50da6bbf10519c4f38e0ec36c818d0c89" translate="yes" xml:space="preserve">
          <source>Note that, since &lt;em&gt;throw&lt;/em&gt; and &lt;em&gt;return&lt;/em&gt; are expressions in Kotlin, they can also be used on the right hand side of the elvis operator. This can be very handy, for example, for checking function arguments:</source>
          <target state="translated">Tenga en cuenta que, dado que &lt;em&gt;throw&lt;/em&gt; y &lt;em&gt;return&lt;/em&gt; son expresiones en Kotlin, tambi&amp;eacute;n se pueden usar en el lado derecho del operador de elvis. Esto puede resultar muy &amp;uacute;til, por ejemplo, para comprobar los argumentos de las funciones:</target>
        </trans-unit>
        <trans-unit id="ff2652dcfc51e4dc3d549eb0a81df9a68d2667cc" translate="yes" xml:space="preserve">
          <source>Note that, since extensions do not actually insert members into classes, there's no efficient way for an extension property to have a &lt;a href=&quot;properties#backing-fields&quot;&gt;backing field&lt;/a&gt;. This is why &lt;strong&gt;initializers are not allowed for extension properties&lt;/strong&gt;. Their behavior can only be defined by explicitly providing getters/setters.</source>
          <target state="translated">Tenga en cuenta que, dado que las extensiones no insertan miembros en las clases, no existe una forma eficiente de que una propiedad de extensi&amp;oacute;n tenga un &lt;a href=&quot;properties#backing-fields&quot;&gt;campo de respaldo&lt;/a&gt; . Esta es la raz&amp;oacute;n por la que &lt;strong&gt;no se permiten inicializadores para propiedades de extensi&amp;oacute;n&lt;/strong&gt; . Su comportamiento solo puede definirse proporcionando expl&amp;iacute;citamente getters / setters.</target>
        </trans-unit>
        <trans-unit id="410e3cbb9102efe17f7c84d061da15f92debf764" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;@NotNull&lt;/code&gt; annotations on &lt;code&gt;String&lt;/code&gt; type arguments. Without them, we get platform types in the type arguments:</source>
          <target state="translated">Tenga en cuenta las anotaciones &lt;code&gt;@NotNull&lt;/code&gt; en los argumentos de tipo &lt;code&gt;String&lt;/code&gt; . Sin ellos, obtenemos tipos de plataforma en los argumentos de tipo:</target>
        </trans-unit>
        <trans-unit id="c5849a883ad401340758801d94c3c8fe5489e593" translate="yes" xml:space="preserve">
          <source>Note the difference between declaring two parameters and declaring a destructuring pair instead of a parameter:</source>
          <target state="translated">Obsérvese la diferencia entre declarar dos parámetros y declarar un par desestructurante en lugar de un parámetro:</target>
        </trans-unit>
        <trans-unit id="fe84360ef08152f70a600e469dd1daf46f251b07" translate="yes" xml:space="preserve">
          <source>Note the use of &lt;code&gt;private&lt;/code&gt;&lt;a href=&quot;../reference/visibility-modifiers&quot;&gt;visibility modifier&lt;/a&gt; here. While the concept of visibility modifier is not relevant for competitive programming at all, it allows you to place multiple solution files based on the same template without getting an error for conflicting public declarations in the same package.</source>
          <target state="translated">Tenga en cuenta el uso del &lt;a href=&quot;../reference/visibility-modifiers&quot;&gt;modificador de visibilidad &lt;/a&gt; &lt;code&gt;private&lt;/code&gt; aqu&amp;iacute;. Si bien el concepto de modificador de visibilidad no es relevante para la programaci&amp;oacute;n competitiva, le permite colocar m&amp;uacute;ltiples archivos de soluci&amp;oacute;n basados ​​en la misma plantilla sin obtener un error por declaraciones p&amp;uacute;blicas en conflicto en el mismo paquete.</target>
        </trans-unit>
        <trans-unit id="32363778a2d483af8b5e294fa0d257703c3636de" translate="yes" xml:space="preserve">
          <source>Note the use of Kotlin's &lt;a href=&quot;../reference/null-safety#the--operator&quot;&gt;null-assertion operator&lt;/a&gt;&lt;code&gt;!!&lt;/code&gt; after the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.io/read-line&quot;&gt;readLine()&lt;/a&gt; function call. Kotlin's &lt;code&gt;readLine()&lt;/code&gt; function is defined to return a &lt;a href=&quot;../reference/null-safety#nullable-types-and-non-null-types&quot;&gt;nullable type&lt;/a&gt;&lt;code&gt;String?&lt;/code&gt; and returns &lt;code&gt;null&lt;/code&gt; on the end of the input, which explicitly forces the developer to handle the case of missing input.</source>
          <target state="translated">&amp;iexcl;Tenga en cuenta el uso del &lt;a href=&quot;../reference/null-safety#the--operator&quot;&gt;operador de aserci&amp;oacute;n nula&lt;/a&gt; de Kotlin &lt;code&gt;!!&lt;/code&gt; despu&amp;eacute;s de la llamada a la funci&amp;oacute;n &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.io/read-line&quot;&gt;readLine ()&lt;/a&gt; . &amp;iquest;La funci&amp;oacute;n &lt;code&gt;readLine()&lt;/code&gt; Kotlin est&amp;aacute; definida para devolver un &lt;a href=&quot;../reference/null-safety#nullable-types-and-non-null-types&quot;&gt;tipo &lt;/a&gt; &lt;code&gt;String?&lt;/code&gt; acepta valores NULL ? y devuelve &lt;code&gt;null&lt;/code&gt; al final de la entrada, lo que obliga expl&amp;iacute;citamente al desarrollador a manejar el caso de entrada faltante.</target>
        </trans-unit>
        <trans-unit id="ac2f2aad869d626d4d52fe790ab55573fcf5e8e3" translate="yes" xml:space="preserve">
          <source>Note, Kotlin/Native object references do not support multi-threaded access. Hosting the returned &lt;code&gt;libnative_ExportedSymbols*&lt;/code&gt; pointer per thread might be necessary.</source>
          <target state="translated">Tenga en cuenta que las referencias de objetos de Kotlin / Native no admiten el acceso multiproceso. Puede que sea necesario &lt;code&gt;libnative_ExportedSymbols*&lt;/code&gt; puntero libnative_ExportedSymbols * devuelto por hilo.</target>
        </trans-unit>
        <trans-unit id="2b78a1550dcdacf66568124ca1b7e49361c24581" translate="yes" xml:space="preserve">
          <source>Note, here we use the &lt;code&gt;$SRCROOT/../..&lt;/code&gt; as the path to the root of our Gradle project. It can depend on the way the Xcode project was created. Also, we use the generated &lt;code&gt;SharedCode/build/xcode-frameworks/gradlew&lt;/code&gt; script, the &lt;code&gt;packForXCode&lt;/code&gt; task generates it. We assumed that the Gradle build is executed at least once, before opening the Xcode project on a fresh machine</source>
          <target state="translated">Tenga en cuenta que aqu&amp;iacute; usamos &lt;code&gt;$SRCROOT/../..&lt;/code&gt; como la ruta a la ra&amp;iacute;z de nuestro proyecto Gradle. Puede depender de la forma en que se cre&amp;oacute; el proyecto Xcode. Adem&amp;aacute;s, usamos el &lt;code&gt;SharedCode/build/xcode-frameworks/gradlew&lt;/code&gt; , la tarea &lt;code&gt;packForXCode&lt;/code&gt; lo genera. Asumimos que la compilaci&amp;oacute;n de Gradle se ejecuta al menos una vez, antes de abrir el proyecto Xcode en una m&amp;aacute;quina nueva.</target>
        </trans-unit>
        <trans-unit id="e681d434ce2d0ba5fe65e1c3eb9e64a72c2114ad" translate="yes" xml:space="preserve">
          <source>Note, how both first &lt;code&gt;async&lt;/code&gt; and awaiting parent are cancelled on the one child failure:</source>
          <target state="translated">Tenga en cuenta c&amp;oacute;mo se cancelan tanto el primer &lt;code&gt;async&lt;/code&gt; como el padre en espera en el error de un hijo:</target>
        </trans-unit>
        <trans-unit id="fa14e718dbed55afbde738f5e7d1fbd2fe0275f6" translate="yes" xml:space="preserve">
          <source>Note, however, that members overridden in this way do not get called from the members of the delegate object, which can only access its own implementations of the interface members:</source>
          <target state="translated">Obsérvese,sin embargo,que los miembros anulados de esta manera no son llamados por los miembros del objeto delegado,que sólo puede acceder a sus propias implementaciones de los miembros de la interfaz:</target>
        </trans-unit>
        <trans-unit id="63c0fd4e85cb25d5c9ec03f575f81a0e9dd952a9" translate="yes" xml:space="preserve">
          <source>Note, that Android has first-party support for coroutine scope in all entities with the lifecycle. See &lt;a href=&quot;https://developer.android.com/topic/libraries/architecture/coroutines#lifecyclescope&quot;&gt;the corresponding documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9016aa7ea4f2b1fc5592a3d2b46f69f0ff3c825e" translate="yes" xml:space="preserve">
          <source>Note, that an exception thrown by &lt;a href=&quot;recover#kotlin%24recover%28kotlin.Result%28%28kotlin.recover.T%29%29%2C+kotlin.Function1%28%28kotlin.Throwable%2C+kotlin.recover.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function is rethrown by this function. See &lt;a href=&quot;recover-catching&quot;&gt;recoverCatching&lt;/a&gt; for an alternative that encapsulates exceptions.</source>
          <target state="translated">Tenga en cuenta que esta funci&amp;oacute;n vuelve a generar una excepci&amp;oacute;n lanzada por la funci&amp;oacute;n de &lt;a href=&quot;recover#kotlin%24recover%28kotlin.Result%28%28kotlin.recover.T%29%29%2C+kotlin.Function1%28%28kotlin.Throwable%2C+kotlin.recover.R%29%29%29%2Ftransform&quot;&gt;transformaci&amp;oacute;n&lt;/a&gt; . Consulte &lt;a href=&quot;recover-catching&quot;&gt;recoveryCatching&lt;/a&gt; para ver una alternativa que encapsula las excepciones.</target>
        </trans-unit>
        <trans-unit id="ab4261a565eea01ddcb4378ad59c0c58898851cf" translate="yes" xml:space="preserve">
          <source>Note, that for some cases cycle collection need to be done to ensure that dead cycles do not affect reachability of passed object graph.</source>
          <target state="translated">Obsérvese que,en algunos casos,es necesario recoger los ciclos para asegurarse de que los ciclos muertos no afecten a la accesibilidad del gráfico del objeto pasado.</target>
        </trans-unit>
        <trans-unit id="cb746582c1d18af800034f12e0c2fb36cf93a443" translate="yes" xml:space="preserve">
          <source>Note, that incrementing and decrementing &lt;code&gt;acquired&lt;/code&gt; counter here from 100K coroutines is completely safe, since it always happens from the same main thread. More on that will be explained in the next chapter on coroutine context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6259b2eebc86f15dafec32912cdde080c4e1580" translate="yes" xml:space="preserve">
          <source>Note, that the generated bindings are generally platform-specific, so if you are developing for multiple targets, the bindings need to be regenerated.</source>
          <target state="translated">Obsérvese que las fijaciones generadas son generalmente específicas de la plataforma,por lo que si se está desarrollando para múltiples objetivos,las fijaciones deben ser regeneradas.</target>
        </trans-unit>
        <trans-unit id="7b7682c3f874c25b43973c6dea774be8a4df50c1" translate="yes" xml:space="preserve">
          <source>Note, that this function rethrows any &lt;a href=&quot;-throwable/index#kotlin.Throwable&quot;&gt;Throwable&lt;/a&gt; exception thrown by &lt;a href=&quot;recover#kotlin%24recover(kotlin.Result((kotlin.recover.T)),%20kotlin.Function1((kotlin.Throwable,%20kotlin.recover.R)))/transform&quot;&gt;transform&lt;/a&gt; function. See &lt;a href=&quot;recover-catching&quot;&gt;recoverCatching&lt;/a&gt; for an alternative that encapsulates exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe80340489c5eb8bbb1e5235c463cea51b0d96bc" translate="yes" xml:space="preserve">
          <source>Note, the task may not work &lt;a href=&quot;https://github.com/gradle/gradle/issues/6330&quot;&gt;correctly&lt;/a&gt; if you use Gradle older than 4.10. In this tutorial we have already &lt;a href=&quot;#gradle-upgrade&quot;&gt;upgraded it to 4.7&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que es posible que la tarea no funcione &lt;a href=&quot;https://github.com/gradle/gradle/issues/6330&quot;&gt;correctamente&lt;/a&gt; si usa Gradle anterior a 4.10. En este tutorial ya lo hemos &lt;a href=&quot;#gradle-upgrade&quot;&gt;actualizado a 4.7&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cdfb7f6c960fbbb54ec2a22474d762eebb5eb578" translate="yes" xml:space="preserve">
          <source>Note, the way Kotlin/Native exports symbols is subject to change without notice.</source>
          <target state="translated">Nota,la forma en que Kotlin/Native exporta los símbolos está sujeta a cambios sin previo aviso.</target>
        </trans-unit>
        <trans-unit id="a421385920384e5f4a176ab3c70967301467e475" translate="yes" xml:space="preserve">
          <source>Note, this mechanism currently works only on Java version 1.7+. Limitation on JS and Native is temporary and will be fixed in the future.</source>
          <target state="translated">Nota,este mecanismo funciona actualmente sólo en la versión 1.7+de Java.La limitación en JS y Native es temporal y será fijada en el futuro.</target>
        </trans-unit>
        <trans-unit id="12618a61ea26af57372d00837c08269ccff8b13d" translate="yes" xml:space="preserve">
          <source>Note, we use the extension property &lt;code&gt;ptr&lt;/code&gt; which comes from a &lt;code&gt;memScoped&lt;/code&gt; lambda receiver type, to turn &lt;code&gt;MyStruct&lt;/code&gt; and &lt;code&gt;MyUnion&lt;/code&gt; instances into native pointers.</source>
          <target state="translated">Tenga en cuenta que usamos la propiedad de extensi&amp;oacute;n &lt;code&gt;ptr&lt;/code&gt; que proviene de un tipo de receptor lambda &lt;code&gt;memScoped&lt;/code&gt; , para convertir las instancias &lt;code&gt;MyStruct&lt;/code&gt; y &lt;code&gt;MyUnion&lt;/code&gt; en punteros nativos.</target>
        </trans-unit>
        <trans-unit id="928235a3ea58117b013d6814e6ae398b8d106eb5" translate="yes" xml:space="preserve">
          <source>Note: &lt;a href=&quot;implies#kotlin.contracts.SimpleEffect%24implies%28kotlin.Boolean%29%2FbooleanExpression&quot;&gt;booleanExpression&lt;/a&gt; can accept only a subset of boolean expressions, where a function parameter or receiver (&lt;code&gt;this&lt;/code&gt;) undergoes</source>
          <target state="translated">Nota: &lt;a href=&quot;implies#kotlin.contracts.SimpleEffect%24implies%28kotlin.Boolean%29%2FbooleanExpression&quot;&gt;booleanExpression&lt;/a&gt; puede aceptar solo un subconjunto de expresiones booleanas, donde un par&amp;aacute;metro de funci&amp;oacute;n o receptor ( &lt;code&gt;this&lt;/code&gt; ) se somete</target>
        </trans-unit>
        <trans-unit id="154a86bc22d004fb84d8a8a0b6c888692235178f" translate="yes" xml:space="preserve">
          <source>Note: &lt;a href=&quot;implies#kotlin.contracts.SimpleEffect%24implies(kotlin.Boolean)/booleanExpression&quot;&gt;booleanExpression&lt;/a&gt; can accept only a subset of boolean expressions, where a function parameter or receiver (&lt;code&gt;this&lt;/code&gt;) undergoes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6981f24296bbc00cf0e0f8db9ec6624b3daecbcc" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;Any&lt;/code&gt; is not &lt;code&gt;java.lang.Object&lt;/code&gt;; in particular, it does not have any members other than &lt;code&gt;equals()&lt;/code&gt;, &lt;code&gt;hashCode()&lt;/code&gt; and &lt;code&gt;toString()&lt;/code&gt;. Please consult the &lt;a href=&quot;java-interop#object-methods&quot;&gt;Java interoperability&lt;/a&gt; section for more details.</source>
          <target state="translated">Nota: &lt;code&gt;Any&lt;/code&gt; no es &lt;code&gt;java.lang.Object&lt;/code&gt; ; en particular, no tiene m&amp;aacute;s miembros que &lt;code&gt;equals()&lt;/code&gt; , &lt;code&gt;hashCode()&lt;/code&gt; y &lt;code&gt;toString()&lt;/code&gt; . Consulte la secci&amp;oacute;n de &lt;a href=&quot;java-interop#object-methods&quot;&gt;interoperabilidad de Java&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="bbe4a666aa54539de8b5f642e9d8564464ff901a" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;suspend&lt;/code&gt; functions without &lt;code&gt;@Throws&lt;/code&gt; propagate only &lt;a href=&quot;../../kotlin.coroutines.cancellation/-cancellation-exception/index#kotlin.coroutines.cancellation.CancellationException&quot;&gt;kotlin.coroutines.cancellation.CancellationException&lt;/a&gt; as &lt;code&gt;NSError&lt;/code&gt;. Non-&lt;code&gt;suspend&lt;/code&gt; functions without &lt;code&gt;@Throws&lt;/code&gt; don't propagate Kotlin exceptions at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cea38b31131e5f3bc473b1806a7dadc1df3f76c" translate="yes" xml:space="preserve">
          <source>Note: Before 1.3.40, both test and product executables were represented by the same binary type. Thus to access the default test binary created by the plugin, the following line was used:</source>
          <target state="translated">Nota:Antes del 1.3.40,tanto los ejecutables de prueba como los de producto estaban representados por el mismo tipo binario.Por lo tanto,para acceder al binario de prueba por defecto creado por el plugin,se utilizaba la siguiente línea:</target>
        </trans-unit>
        <trans-unit id="fb3a30630df8eec859177fc75c5dd700ee60baec" translate="yes" xml:space="preserve">
          <source>Note: For Spring you can use the &lt;code&gt;kotlin-spring&lt;/code&gt; compiler plugin (&lt;a href=&quot;compiler-plugins#spring-support&quot;&gt;see below&lt;/a&gt;).</source>
          <target state="translated">Nota: Para Spring, puede usar el &lt;code&gt;kotlin-spring&lt;/code&gt; compilador kotlin-spring ( &lt;a href=&quot;compiler-plugins#spring-support&quot;&gt;ver m&amp;aacute;s abajo&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4fa0947e35dff0922c56dd9c4b89b2bc602827fe" translate="yes" xml:space="preserve">
          <source>Note: Garbage collector currently cannot free any reference cycles with &lt;a href=&quot;index&quot;&gt;WorkerBoundReference&lt;/a&gt; in them. To resolve such cycles consider using AtomicReferenceWorkerBoundReference? which can be explicitly nulled out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a0dc39a4a138257b96c621b751cc052081b76a" translate="yes" xml:space="preserve">
          <source>Note: This above code will work properly only on JDK7+ that supports &lt;code&gt;suppressed&lt;/code&gt; exceptions</source>
          <target state="translated">Nota: Este c&amp;oacute;digo anterior funcionar&amp;aacute; correctamente solo en JDK7 + que admite excepciones &lt;code&gt;suppressed&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="484cdded81040d7cac731a5df3e0b2162661d2db" translate="yes" xml:space="preserve">
          <source>Note: creating a source set does not link it to any target. Some source sets are &lt;a href=&quot;#default-project-layout&quot;&gt;predefined&lt;/a&gt; and thus compiled by default. However, custom source sets always need to be explicitly directed to the compilations. See: &lt;a href=&quot;#connecting-source-sets&quot;&gt;Connecting source sets&lt;/a&gt;.</source>
          <target state="translated">Nota: la creaci&amp;oacute;n de un conjunto de fuentes no lo vincula a ning&amp;uacute;n destino. Algunos conjuntos de fuentes est&amp;aacute;n &lt;a href=&quot;#default-project-layout&quot;&gt;predefinidos&lt;/a&gt; y, por lo tanto, se compilan de forma predeterminada. Sin embargo, los conjuntos de fuentes personalizados siempre deben dirigirse expl&amp;iacute;citamente a las compilaciones. Consulte: &lt;a href=&quot;#connecting-source-sets&quot;&gt;Conexi&amp;oacute;n de conjuntos de fuentes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3d3cb30c99fb08c5217d1cecd77b25e0a37cf168" translate="yes" xml:space="preserve">
          <source>Note: due to the current technical limitations, the IDE does not correctly recognize these annotations on type arguments in compiled Java libraries that are used as dependencies.</source>
          <target state="translated">Nota:debido a las limitaciones técnicas actuales,el IDE no reconoce correctamente estas anotaciones en los argumentos de tipo en las bibliotecas compiladas de Java que se utilizan como dependencias.</target>
        </trans-unit>
        <trans-unit id="43526e690a06b94dffa5d82ef9ea46b38220defe" translate="yes" xml:space="preserve">
          <source>Note: runtime lookup can be forced even when the class is referenced statically from Objective-C source code by adding &lt;code&gt;__attribute__((objc_runtime_visible))&lt;/code&gt; to its &lt;code&gt;@interface&lt;/code&gt;.</source>
          <target state="translated">Nota: la b&amp;uacute;squeda en tiempo de ejecuci&amp;oacute;n se puede forzar incluso cuando se hace referencia a la clase est&amp;aacute;ticamente desde el c&amp;oacute;digo fuente de Objective-C agregando &lt;code&gt;__attribute__((objc_runtime_visible))&lt;/code&gt; a su &lt;code&gt;@interface&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="961c619d9fb3964975b4b9e69245c681552524a7" translate="yes" xml:space="preserve">
          <source>Note: static and shared libraries has suffixes &lt;code&gt;static&lt;/code&gt; and &lt;code&gt;shared&lt;/code&gt; respectively, e.g. &lt;code&gt;fooDebugStatic&lt;/code&gt; or &lt;code&gt;barReleaseShared&lt;/code&gt;</source>
          <target state="translated">Nota: las bibliotecas est&amp;aacute;ticas y compartidas tienen sufijos &lt;code&gt;static&lt;/code&gt; y &lt;code&gt;shared&lt;/code&gt; respectivamente, por ejemplo, &lt;code&gt;fooDebugStatic&lt;/code&gt; o &lt;code&gt;barReleaseShared&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ba0ca9c0ff727e2f159f9a318e2b4838c970baa" translate="yes" xml:space="preserve">
          <source>Note: the &lt;code&gt;lib&lt;/code&gt; directory which contains &lt;code&gt;kotlin.js&lt;/code&gt; and other library files is only created in IntelliJ IDEA-based projects and is controlled by the &lt;em&gt;Copy library runtime files&lt;/em&gt; flag in the Kotlin &lt;a href=&quot;https://www.jetbrains.com/help/idea/facets.html&quot;&gt;facet settings&lt;/a&gt;. In a Maven or Gradle build (including multiplatform projects), no library files are copied by default to the compilation output directory. See the corresponding tutorials for the instructions on how to achieve the same with those build systems.</source>
          <target state="translated">Nota: el directorio &lt;code&gt;lib&lt;/code&gt; que contiene &lt;code&gt;kotlin.js&lt;/code&gt; y otros archivos de biblioteca solo se crea en proyectos basados ​​en IntelliJ IDEA y est&amp;aacute; controlado por la marca &lt;em&gt;Copiar archivos de tiempo de ejecuci&amp;oacute;n de biblioteca&lt;/em&gt; en la &lt;a href=&quot;https://www.jetbrains.com/help/idea/facets.html&quot;&gt;configuraci&amp;oacute;n de faceta de&lt;/a&gt; Kotlin . En una compilaci&amp;oacute;n de Maven o Gradle (incluidos los proyectos multiplataforma), no se copian archivos de biblioteca de forma predeterminada en el directorio de salida de la compilaci&amp;oacute;n. Consulte los tutoriales correspondientes para obtener instrucciones sobre c&amp;oacute;mo lograr lo mismo con esos sistemas de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7a0e64e270b153ff90968e1ff6456ea22567f491" translate="yes" xml:space="preserve">
          <source>Note: the built-in JSR-305 annotations &lt;a href=&quot;https://aalmiray.github.io/jsr-305/apidocs/javax/annotation/Nonnull.html&quot;&gt;&lt;code&gt;@Nonnull&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://aalmiray.github.io/jsr-305/apidocs/javax/annotation/Nullable.html&quot;&gt;&lt;code&gt;@Nullable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://aalmiray.github.io/jsr-305/apidocs/javax/annotation/CheckForNull.html&quot;&gt;&lt;code&gt;@CheckForNull&lt;/code&gt;&lt;/a&gt; are always enabled and affect the types of the annotated declarations in Kotlin, regardless of compiler configuration with the &lt;code&gt;-Xjsr305&lt;/code&gt; flag.</source>
          <target state="translated">Nota: las anotaciones JSR-305 &lt;a href=&quot;https://aalmiray.github.io/jsr-305/apidocs/javax/annotation/Nonnull.html&quot;&gt; &lt;code&gt;@Nonnull&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://aalmiray.github.io/jsr-305/apidocs/javax/annotation/Nullable.html&quot;&gt; &lt;code&gt;@Nullable&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://aalmiray.github.io/jsr-305/apidocs/javax/annotation/CheckForNull.html&quot;&gt; &lt;code&gt;@CheckForNull&lt;/code&gt; &lt;/a&gt; siempre est&amp;aacute;n habilitadas y afectan los tipos de declaraciones anotadas en Kotlin, independientemente de la configuraci&amp;oacute;n del compilador con el indicador &lt;code&gt;-Xjsr305&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70ea34d1da722222e140a53cf5465f6882b21617" translate="yes" xml:space="preserve">
          <source>Note: the migration status of a nullability annotation is not inherited by its type qualifier nicknames but is applied to its usages in default type qualifiers.</source>
          <target state="translated">Nota:el estado de migración de una anotación de anulación no se hereda por sus apodos de calificadores de tipo,sino que se aplica a sus usos en los calificadores de tipo por defecto.</target>
        </trans-unit>
        <trans-unit id="c0edc7da32b33f24605529da7af1e0f20a415a52" translate="yes" xml:space="preserve">
          <source>Note: the static members of these Java types are not directly accessible on the &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;companion objects&lt;/a&gt; of the Kotlin types. To call them, use the full qualified names of the Java types, e.g. &lt;code&gt;java.lang.Integer.toHexString(foo)&lt;/code&gt;.</source>
          <target state="translated">Nota: los miembros est&amp;aacute;ticos de estos tipos de Java no son directamente accesibles en los &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;objetos complementarios&lt;/a&gt; de los tipos de Kotlin. Para llamarlos, use los nombres completos calificados de los tipos de Java, por ejemplo, &lt;code&gt;java.lang.Integer.toHexString(foo)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58d630dc0f3f2c164372b5befca4a458dbf430dc" translate="yes" xml:space="preserve">
          <source>Note: the types in this example only take place with the strict mode enabled, otherwise, the platform types remain. See the &lt;a href=&quot;#undermigration-annotation-since-1160&quot;&gt;&lt;code&gt;@UnderMigration&lt;/code&gt; annotation&lt;/a&gt; and &lt;a href=&quot;#compiler-configuration&quot;&gt;Compiler configuration&lt;/a&gt; sections.</source>
          <target state="translated">Nota: los tipos en este ejemplo solo tienen lugar con el modo estricto habilitado; de lo contrario, los tipos de plataforma permanecen. Consulte las secciones de &lt;a href=&quot;#compiler-configuration&quot;&gt;configuraci&amp;oacute;n del compilador&lt;/a&gt; y la &lt;a href=&quot;#undermigration-annotation-since-1160&quot;&gt;anotaci&amp;oacute;n &lt;/a&gt; &lt;code&gt;@UnderMigration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1897db2fc3536b91b9cf29ef737cb27b1a12735f" translate="yes" xml:space="preserve">
          <source>Note: this annotation is experimental, see &lt;a href=&quot;../-experimental-multiplatform/index&quot;&gt;ExperimentalMultiplatform&lt;/a&gt; on how to opt-in for it.</source>
          <target state="translated">Nota: esta anotaci&amp;oacute;n es experimental; consulte &lt;a href=&quot;../-experimental-multiplatform/index&quot;&gt;ExperimentalMultiplatform para&lt;/a&gt; saber c&amp;oacute;mo optar por ella.</target>
        </trans-unit>
        <trans-unit id="0b4255d1b07a5ecec5778c495ae7e465e074b5b4" translate="yes" xml:space="preserve">
          <source>Note: this annotation is experimental, see &lt;a href=&quot;../../kotlin.experimental/-experimental-type-inference/index&quot;&gt;ExperimentalTypeInference&lt;/a&gt; on how to opt-in for it.</source>
          <target state="translated">Nota: esta anotaci&amp;oacute;n es experimental, consulte &lt;a href=&quot;../../kotlin.experimental/-experimental-type-inference/index&quot;&gt;ExperimentalTypeInference&lt;/a&gt; sobre c&amp;oacute;mo optar por ella.</target>
        </trans-unit>
        <trans-unit id="357bf8828e4f466867f5aa8f9b5bb6f1a07b487b" translate="yes" xml:space="preserve">
          <source>Note: to use a visible top-level declaration from another package, you should still &lt;a href=&quot;packages#imports&quot;&gt;import&lt;/a&gt; it.</source>
          <target state="translated">Nota: para usar una declaraci&amp;oacute;n de nivel superior visible de otro paquete, a&amp;uacute;n debe &lt;a href=&quot;packages#imports&quot;&gt;importarla&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f0d56c46129caef4c0e06f3c8334481a847bd34" translate="yes" xml:space="preserve">
          <source>Note: unlike Java, arrays in Kotlin are invariant. This means that Kotlin does not let us assign an &lt;code&gt;Array&amp;lt;String&amp;gt;&lt;/code&gt; to an &lt;code&gt;Array&amp;lt;Any&amp;gt;&lt;/code&gt;, which prevents a possible runtime failure (but you can use &lt;code&gt;Array&amp;lt;out Any&amp;gt;&lt;/code&gt;, see &lt;a href=&quot;generics#type-projections&quot;&gt;Type Projections&lt;/a&gt;).</source>
          <target state="translated">Nota: a diferencia de Java, las matrices en Kotlin son invariantes. Esto significa que Kotlin no nos permite asignar un &lt;code&gt;Array&amp;lt;String&amp;gt;&lt;/code&gt; a un &lt;code&gt;Array&amp;lt;Any&amp;gt;&lt;/code&gt; , lo que evita una posible falla en tiempo de ejecuci&amp;oacute;n (pero puede usar &lt;code&gt;Array&amp;lt;out Any&amp;gt;&lt;/code&gt; , consulte &lt;a href=&quot;generics#type-projections&quot;&gt;Proyecciones de tipo&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="bde793003a7ba7a04ded33aea80840d69964a14a" translate="yes" xml:space="preserve">
          <source>Notebooks such as &lt;a href=&quot;https://jupyter.org/&quot;&gt;Jupyter Notebook&lt;/a&gt; and &lt;a href=&quot;https://zeppelin.apache.org/&quot;&gt;Apache Zeppelin&lt;/a&gt; provide convenient tools for data visualization and exploratory research. Kotlin integrates with these tools to help you explore data, share your findings with colleagues, or build up your data science and machine learning skills.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="4481948392a8846400c954e77f58d76cdaa73963" translate="yes" xml:space="preserve">
          <source>Nothing</source>
          <target state="translated">Nothing</target>
        </trans-unit>
        <trans-unit id="79090fccdb94d09e1c560c62dc8ff6d888bc7489" translate="yes" xml:space="preserve">
          <source>Nothing has no instances. You can use Nothing to represent &quot;a value that never exists&quot;: for example, if a function has the return type of Nothing, it means that it never returns (always throws an exception).</source>
          <target state="translated">Nada tiene ningún caso.Se puede utilizar Nada para representar &quot;un valor que nunca existe&quot;:por ejemplo,si una función tiene el tipo de retorno de Nada,significa que nunca vuelve (siempre lanza una excepción).</target>
        </trans-unit>
        <trans-unit id="4e7c286632d0d13e13321321ed05e8c1b3d6a6d0" translate="yes" xml:space="preserve">
          <source>Notice how &lt;code&gt;flow { ... }&lt;/code&gt; works in the background thread, while collection happens in the main thread:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99650824aec3df068812538ee0d8a9821541b18" translate="yes" xml:space="preserve">
          <source>Notice how only two numbers get emitted by the flow in the &lt;code&gt;simple&lt;/code&gt; function, producing the following output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a531e5857d96a6fe172e33a54636fa2c5e7837a4" translate="yes" xml:space="preserve">
          <source>Notice that the implementation on &lt;em&gt;every&lt;/em&gt; platform can encode byte arrays to a string. If we want we can provide a more efficient implementation for this method, for example, let's specialize it on the JVM:</source>
          <target state="translated">Tenga en cuenta que la implementaci&amp;oacute;n en &lt;em&gt;cada&lt;/em&gt; plataforma puede codificar matrices de bytes en una cadena. Si queremos, podemos proporcionar una implementaci&amp;oacute;n m&amp;aacute;s eficiente para este m&amp;eacute;todo, por ejemplo, especialic&amp;eacute;moslo en la JVM:</target>
        </trans-unit>
        <trans-unit id="df77587cff1de9923f355509cc0807c43ebec668" translate="yes" xml:space="preserve">
          <source>Notice the following differences in the code with the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow/index.html&quot;&gt;Flow&lt;/a&gt; from the earlier examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac46cd6bf2ec7e9d90f5e3709af6c843ffd8a6af" translate="yes" xml:space="preserve">
          <source>NotificationAction</source>
          <target state="translated">NotificationAction</target>
        </trans-unit>
        <trans-unit id="f541255e0e0d091ef01be7d639674756d30f41bc" translate="yes" xml:space="preserve">
          <source>NotificationDirection</source>
          <target state="translated">NotificationDirection</target>
        </trans-unit>
        <trans-unit id="596349e0f504aa4e6ec1f31115a62914042449e8" translate="yes" xml:space="preserve">
          <source>NotificationEventInit</source>
          <target state="translated">NotificationEventInit</target>
        </trans-unit>
        <trans-unit id="2a1a4c24d8e083b47b4ff678b4cd0997219c060e" translate="yes" xml:space="preserve">
          <source>NotificationOptions</source>
          <target state="translated">NotificationOptions</target>
        </trans-unit>
        <trans-unit id="93c639dc73db96edc66ede2299276f652971fac6" translate="yes" xml:space="preserve">
          <source>NotificationPermission</source>
          <target state="translated">NotificationPermission</target>
        </trans-unit>
        <trans-unit id="89aa53cbd9d22135dd1fdd42b4ea24e594114a2d" translate="yes" xml:space="preserve">
          <source>Now a property can be delegated to another property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78c4398ab20e310c490592e238aa8bd1b5389f2" translate="yes" xml:space="preserve">
          <source>Now check it with the command &lt;code&gt;./gradlew publishToMavenLocal&lt;/code&gt; and you should see a successful build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e838061a82a5ce0b113db3557cf9f9730866ea" translate="yes" xml:space="preserve">
          <source>Now check it with the command &lt;code&gt;./gradlew publishToMavenLocal&lt;/code&gt; and you should see a successful build. That's it, our library is now successfully published and any Kotlin project can depend on it, whether it is another common library, JVM, JS, or Native application.</source>
          <target state="translated">Ahora &lt;code&gt;./gradlew publishToMavenLocal&lt;/code&gt; con el comando ./gradlew publishToMavenLocal y deber&amp;iacute;a ver una compilaci&amp;oacute;n exitosa. Eso es todo, nuestra biblioteca ahora est&amp;aacute; publicada con &amp;eacute;xito y cualquier proyecto de Kotlin puede depender de ella, ya sea otra biblioteca com&amp;uacute;n, JVM, JS o aplicaci&amp;oacute;n nativa.</target>
        </trans-unit>
        <trans-unit id="4c6fdd021c50c395969a31c37923d25d734b30ed" translate="yes" xml:space="preserve">
          <source>Now compile the program linking with the library we have just created:</source>
          <target state="translated">Ahora compila el programa que enlaza con la biblioteca que acabamos de crear:</target>
        </trans-unit>
        <trans-unit id="d170ea6c2aa9b60273c092dfbc455f116d266a2e" translate="yes" xml:space="preserve">
          <source>Now if we have a flow of three integers and call &lt;code&gt;requestFlow&lt;/code&gt; for each of them like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd938355a267ec17f411c8d98d04708e4180da6" translate="yes" xml:space="preserve">
          <source>Now it is time to provide an &lt;code&gt;actual&lt;/code&gt; implementation of &lt;code&gt;Base64Factory&lt;/code&gt; for every platform.</source>
          <target state="translated">Ahora es el momento de proporcionar una implementaci&amp;oacute;n &lt;code&gt;actual&lt;/code&gt; de &lt;code&gt;Base64Factory&lt;/code&gt; para cada plataforma.</target>
        </trans-unit>
        <trans-unit id="ef159996af2b9215562c38a942c2f8905195f55d" translate="yes" xml:space="preserve">
          <source>Now it is time to refresh the Gradle project again in Android Studio. Click &lt;em&gt;Sync Now&lt;/em&gt; on the yellow stripe or use the &lt;em&gt;Gradle&lt;/em&gt; tool window and click the &lt;code&gt;Refresh&lt;/code&gt; action in the context menu on the root Gradle project. The &lt;code&gt;:SharedCode&lt;/code&gt; project should be recognized by the IDE now.</source>
          <target state="translated">Ahora es el momento de actualizar el proyecto Gradle nuevamente en Android Studio. Haga clic en &lt;em&gt;Sincronizar ahora&lt;/em&gt; en la franja amarilla o use la ventana de la herramienta &lt;em&gt;Gradle&lt;/em&gt; y haga clic en la acci&amp;oacute;n &lt;code&gt;Refresh&lt;/code&gt; en el men&amp;uacute; contextual del proyecto ra&amp;iacute;z de Gradle. El proyecto &lt;code&gt;:SharedCode&lt;/code&gt; deber&amp;iacute;a ser reconocido por el IDE ahora.</target>
        </trans-unit>
        <trans-unit id="9eb8c10ce256de217fd7408c5d0fa2be1c81f16b" translate="yes" xml:space="preserve">
          <source>Now it is time to see how to use &lt;code&gt;cValue&lt;/code&gt; and pass by-value parameters:</source>
          <target state="translated">Ahora es el momento de ver c&amp;oacute;mo usar &lt;code&gt;cValue&lt;/code&gt; y pasar par&amp;aacute;metros por valor:</target>
        </trans-unit>
        <trans-unit id="f62049422e34abdef8fb40e736ddaa894413b1d4" translate="yes" xml:space="preserve">
          <source>Now it prints something sensible: &lt;code&gt;1784293664&lt;/code&gt;, because all coroutines complete.</source>
          <target state="translated">Ahora imprime algo sensible: &lt;code&gt;1784293664&lt;/code&gt; , porque todas las corrutinas se completan.</target>
        </trans-unit>
        <trans-unit id="144f2d2ebae18220179fd1c455d34a68896fdfc7" translate="yes" xml:space="preserve">
          <source>Now it prints something sensible: &lt;code&gt;500000500000&lt;/code&gt;, because all coroutines complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3c5f110103dcae6c7a1c5048ae4801a489102c" translate="yes" xml:space="preserve">
          <source>Now it's time to add the task description. Click the &lt;strong&gt;Edit&lt;/strong&gt; icon at the top of &lt;strong&gt;Task Description&lt;/strong&gt; panel to switch to the editing mode:</source>
          <target state="translated">Ahora es el momento de agregar la descripci&amp;oacute;n de la tarea. Haga clic en el icono &lt;strong&gt;Editar&lt;/strong&gt; en la parte superior del panel &lt;strong&gt;Descripci&amp;oacute;n&lt;/strong&gt; de la &lt;strong&gt;tarea&lt;/strong&gt; para cambiar al modo de edici&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="f21a6f3ded0ce3ad0d37be7f610a6bcde3237278" translate="yes" xml:space="preserve">
          <source>Now let us launch five processors and let them work for almost a second. See what happens:</source>
          <target state="translated">Ahora lancemos cinco procesadores y dejemos que funcionen durante casi un segundo.A ver qué pasa:</target>
        </trans-unit>
        <trans-unit id="3a85707fc6ed973d97aee272da025f72a2062245" translate="yes" xml:space="preserve">
          <source>Now let's check out the contents of the library:</source>
          <target state="translated">Ahora revisemos el contenido de la biblioteca:</target>
        </trans-unit>
        <trans-unit id="06f1756ff063bdd720deb57bebdc098cbb1f3682" translate="yes" xml:space="preserve">
          <source>Now let's open the project in IntelliJ IDEA. For that we click on the File | Open&amp;hellip; and select our &lt;code&gt;build.gradle.kts&lt;/code&gt;&lt;code&gt;build.gradle&lt;/code&gt; project file.</source>
          <target state="translated">Ahora abramos el proyecto en IntelliJ IDEA. Para eso hacemos clic en Archivo | Abra ... y seleccione nuestro archivo de proyecto &lt;code&gt;build.gradle.kts&lt;/code&gt; &lt;code&gt;build.gradle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62863dbb3bcee301c0e208573e6e92993330cf1e" translate="yes" xml:space="preserve">
          <source>Now let's see how it works in practice:</source>
          <target state="translated">Ahora veamos cómo funciona en la práctica:</target>
        </trans-unit>
        <trans-unit id="316006c9bf1b6b4efc24b9287e973de18a0cd5b2" translate="yes" xml:space="preserve">
          <source>Now let's write the same with sequences:</source>
          <target state="translated">Ahora escribamos lo mismo con secuencias:</target>
        </trans-unit>
        <trans-unit id="a94f1a0ca142aa8eb48c8af48afa3350f83b1400" translate="yes" xml:space="preserve">
          <source>Now need to create an empty &lt;code&gt;settings.gradle.kts&lt;/code&gt;&lt;code&gt;settings.gradle&lt;/code&gt; file in the project root directory.</source>
          <target state="translated">Ahora es necesario crear un archivo &lt;code&gt;settings.gradle&lt;/code&gt; .kts &lt;code&gt;settings.gradle.kts&lt;/code&gt; vac&amp;iacute;o en el directorio ra&amp;iacute;z del proyecto.</target>
        </trans-unit>
        <trans-unit id="eb8a96e747ba07466d8a407742ef86eb486604cd" translate="yes" xml:space="preserve">
          <source>Now the &lt;strong&gt;Coroutines&lt;/strong&gt; tab shows the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9080cd76ec0143ae2c7fdafc332586543b3c8a" translate="yes" xml:space="preserve">
          <source>Now the application is ready to run. The easiest way is to click the green &lt;strong&gt;Run&lt;/strong&gt; icon in the gutter and select &lt;strong&gt;Run 'AppKt'&lt;/strong&gt;.</source>
          <target state="translated">Ahora la aplicaci&amp;oacute;n est&amp;aacute; lista para ejecutarse. La forma m&amp;aacute;s sencilla es hacer clic en el icono verde &lt;strong&gt;Ejecutar&lt;/strong&gt; en el canal y seleccionar &lt;strong&gt;Ejecutar 'AppKt'&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="119561f075d4396d69d62a95ed33d4557fe85771" translate="yes" xml:space="preserve">
          <source>Now the application is ready to run. The easiest way to do this is to click the green &lt;strong&gt;Run&lt;/strong&gt; icon in the gutter and select &lt;strong&gt;Run 'MainKt'&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4dea9f6780cb4b1fb116abe461c884b2fc3e6f5" translate="yes" xml:space="preserve">
          <source>Now the classic &lt;code&gt;maven-publish&lt;/code&gt; Gradle &lt;a href=&quot;https://docs.gradle.org/current/userguide/publishing_maven.html&quot;&gt;plugin&lt;/a&gt; can be used. Don't forget to specify the group and version of your library along with the plugin in &lt;code&gt;build.gradle&lt;/code&gt;:</source>
          <target state="translated">Ahora se puede utilizar el &lt;a href=&quot;https://docs.gradle.org/current/userguide/publishing_maven.html&quot;&gt;complemento&lt;/a&gt; cl&amp;aacute;sico &lt;code&gt;maven-publish&lt;/code&gt; Gradle de publicaci&amp;oacute;n maven . No olvide especificar el grupo y la versi&amp;oacute;n de su biblioteca junto con el complemento en &lt;code&gt;build.gradle&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ba9e6ebed876e6f334045d285cb51778bef28795" translate="yes" xml:space="preserve">
          <source>Now the collector coroutine has the &lt;strong&gt;RUNNING&lt;/strong&gt; status, while the emitter coroutine has the &lt;strong&gt;SUSPENDED&lt;/strong&gt; status. You can dig deeper into each coroutine to debug your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc224c29c4d8fa7e55977f4225a7cdba0887345" translate="yes" xml:space="preserve">
          <source>Now the flow emits the second value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c36da2f63965003675ecd4f90e9e76c88deea8db" translate="yes" xml:space="preserve">
          <source>Now the main function awaits for the first of them to complete and counts the number of deferred values that are still active. Note that we've used here the fact that &lt;code&gt;select&lt;/code&gt; expression is a Kotlin DSL, so we can provide clauses for it using an arbitrary code. In this case we iterate over a list of deferred values to provide &lt;code&gt;onAwait&lt;/code&gt; clause for each deferred value.</source>
          <target state="translated">Ahora la funci&amp;oacute;n principal espera a que se complete el primero de ellos y cuenta el n&amp;uacute;mero de valores diferidos que a&amp;uacute;n est&amp;aacute;n activos. Tenga en cuenta que hemos utilizado aqu&amp;iacute; el hecho de que la expresi&amp;oacute;n de &lt;code&gt;select&lt;/code&gt; es un DSL de Kotlin, por lo que podemos proporcionar cl&amp;aacute;usulas para ello utilizando un c&amp;oacute;digo arbitrario. En este caso, iteramos sobre una lista de valores diferidos para proporcionar la cl&amp;aacute;usula &lt;code&gt;onAwait&lt;/code&gt; para cada valor diferido.</target>
        </trans-unit>
        <trans-unit id="fafa6b7e1e97bd8d0310f07c3ffc916e9bc52c4e" translate="yes" xml:space="preserve">
          <source>Now the result is still the same, but the code of the main coroutine is not tied to the duration of the background job in any way. Much better.</source>
          <target state="translated">Ahora el resultado sigue siendo el mismo,pero el código de la cortinilla principal no está ligado a la duración del trabajo de fondo de ninguna manera.Mucho mejor.</target>
        </trans-unit>
        <trans-unit id="68e76914b57b2c484d2fcdeac9dacb63ea15843e" translate="yes" xml:space="preserve">
          <source>Now we are ready to &lt;a href=&quot;basic-kotlin-native-app#open-in-ide&quot;&gt;open the project in IntelliJ IDEA&lt;/a&gt; and to see how to fix the example project. While doing that, we'll examine how C functions are mapped into Kotlin/Native declarations.</source>
          <target state="translated">Ahora estamos listos para &lt;a href=&quot;basic-kotlin-native-app#open-in-ide&quot;&gt;abrir el proyecto en IntelliJ IDEA&lt;/a&gt; y ver c&amp;oacute;mo arreglar el proyecto de ejemplo. Mientras hacemos eso, examinaremos c&amp;oacute;mo se asignan las funciones de C a las declaraciones de Kotlin / Native.</target>
        </trans-unit>
        <trans-unit id="0cc37329b152a7d48d832f02d3782a3273c9a922" translate="yes" xml:space="preserve">
          <source>Now we are ready to &lt;a href=&quot;basic-kotlin-native-app#open-in-ide&quot;&gt;open the project in IntelliJ IDEA&lt;/a&gt; and to see how to fix the example project. While doing that, we'll examine how C primitive types are mapped into Kotlin/Native.</source>
          <target state="translated">Ahora estamos listos para &lt;a href=&quot;basic-kotlin-native-app#open-in-ide&quot;&gt;abrir el proyecto en IntelliJ IDEA&lt;/a&gt; y ver c&amp;oacute;mo arreglar el proyecto de ejemplo. Mientras hacemos eso, examinaremos c&amp;oacute;mo los tipos primitivos de C se asignan a Kotlin / Native.</target>
        </trans-unit>
        <trans-unit id="280651c06a20fde5cc37b475316ca2430a0a1d40" translate="yes" xml:space="preserve">
          <source>Now we are ready to &lt;a href=&quot;basic-kotlin-native-app#open-in-ide&quot;&gt;open the project in IntelliJ IDEA&lt;/a&gt; and to see how to fix the example project. While doing this, we'll examine how C functions are mapped into Kotlin/Native declarations.</source>
          <target state="translated">Ahora estamos listos para &lt;a href=&quot;basic-kotlin-native-app#open-in-ide&quot;&gt;abrir el proyecto en IntelliJ IDEA&lt;/a&gt; y ver c&amp;oacute;mo arreglar el proyecto de ejemplo. Mientras hacemos esto, examinaremos c&amp;oacute;mo se asignan las funciones de C a las declaraciones de Kotlin / Native.</target>
        </trans-unit>
        <trans-unit id="323fc12d5da11d2d2fc025d2cb42257bb510df5c" translate="yes" xml:space="preserve">
          <source>Now we are ready to &lt;a href=&quot;using-intellij-idea&quot;&gt;open the project in IntelliJ IDEA&lt;/a&gt; and to see how to fix the example project. While doing that, we'll examine how C functions are mapped into Kotlin/Native declarations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20c24d185e4d030be0d0a6f1a94b265b8692d27" translate="yes" xml:space="preserve">
          <source>Now we are ready to &lt;a href=&quot;using-intellij-idea&quot;&gt;open the project in IntelliJ IDEA&lt;/a&gt; and to see how to fix the example project. While doing that, we'll examine how C primitive types are mapped into Kotlin/Native.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c161d0d7217a9d942a7808aa2fde773f92818a9" translate="yes" xml:space="preserve">
          <source>Now we are ready to &lt;a href=&quot;using-intellij-idea&quot;&gt;open the project in IntelliJ IDEA&lt;/a&gt; and to see how to fix the example project. While doing this, we'll examine how C functions are mapped into Kotlin/Native declarations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8514872c5f66d71d839c86ef7b8ede3a7f8b037f" translate="yes" xml:space="preserve">
          <source>Now we are ready to compile our &lt;code&gt;main.c&lt;/code&gt; into an executable. We include the generated &lt;code&gt;libnative.lib&lt;/code&gt; into the build command and start:</source>
          <target state="translated">Ahora estamos listos para compilar nuestro &lt;code&gt;main.c&lt;/code&gt; en un ejecutable. Incluimos el &lt;code&gt;libnative.lib&lt;/code&gt; generado en el comando de compilaci&amp;oacute;n y comenzamos:</target>
        </trans-unit>
        <trans-unit id="bd615a740472938a27e61f3e5ad1d8c088398a62" translate="yes" xml:space="preserve">
          <source>Now we build our pipeline by starting a stream of numbers from 2, taking a prime number from the current channel, and launching new pipeline stage for each prime number found:</source>
          <target state="translated">Ahora construimos nuestro oleoducto iniciando un flujo de números desde el 2,tomando un número primo del canal actual y lanzando una nueva etapa de oleoducto para cada número primo encontrado:</target>
        </trans-unit>
        <trans-unit id="ac28237fd0f5e4459edc93f0c104781ad98c3002" translate="yes" xml:space="preserve">
          <source>Now we can see that a &quot;Caught &amp;hellip;&quot; message is printed and so we can catch all the exceptions without explicitly using a &lt;code&gt;try/catch&lt;/code&gt; block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f0dde403bebdff3aa5293ced64a63c0f4c48a1" translate="yes" xml:space="preserve">
          <source>Now we have implementations on all the platforms and it is time to for testing of our library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09d5a8ac24e62ac515e5408d015b6449705f5ff" translate="yes" xml:space="preserve">
          <source>Now we have implementations on all the platforms and it is time to move to testing of our library.</source>
          <target state="translated">Ahora tenemos implementaciones en todas las plataformas y es hora de pasar a las pruebas de nuestra biblioteca.</target>
        </trans-unit>
        <trans-unit id="6fc43d604b99f2dfefc014ae5ff71405690d454a" translate="yes" xml:space="preserve">
          <source>Now we have learned how to use C declarations in our code, we are ready to try it out on a real example. Let's fix our code and see how it runs by calling the &lt;code&gt;runDebugExecutableNative&lt;/code&gt; Gradle task &lt;a href=&quot;basic-kotlin-native-app#run-in-ide&quot;&gt;in the IDE&lt;/a&gt; or by using the following console command:</source>
          <target state="translated">Ahora que hemos aprendido c&amp;oacute;mo usar declaraciones C en nuestro c&amp;oacute;digo, estamos listos para probarlo en un ejemplo real. &lt;code&gt;runDebugExecutableNative&lt;/code&gt; nuestro c&amp;oacute;digo y veamos c&amp;oacute;mo se ejecuta llamando a la tarea runDebugExecutableNative Gradle &lt;a href=&quot;basic-kotlin-native-app#run-in-ide&quot;&gt;en el IDE&lt;/a&gt; o usando el siguiente comando de consola:</target>
        </trans-unit>
        <trans-unit id="50d459965bcc6d81fd4d90553a544db8ca2bdb40" translate="yes" xml:space="preserve">
          <source>Now we have learned how to use C declarations in our code, we are ready to try it out on a real example. Let's fix our code and see how it runs by calling the &lt;code&gt;runDebugExecutableNative&lt;/code&gt; Gradle task &lt;a href=&quot;using-intellij-idea&quot;&gt;in the IDE&lt;/a&gt; or by using the following console command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdaca8bf7117a3b069ebd97d9d500bbee893084" translate="yes" xml:space="preserve">
          <source>Now we have our library and Kotlin stubs, we can consume them from our application. To keep things simple, in this tutorial we're going to convert one of the simplest &lt;code&gt;libcurl&lt;/code&gt; examples over to Kotlin.</source>
          <target state="translated">Ahora que tenemos nuestra biblioteca y los stubs de Kotlin, podemos consumirlos desde nuestra aplicaci&amp;oacute;n. Para simplificar las cosas, en este tutorial vamos a convertir uno de los ejemplos de &lt;code&gt;libcurl&lt;/code&gt; m&amp;aacute;s simples a Kotlin.</target>
        </trans-unit>
        <trans-unit id="56a410308bdaa182b925a6dff7fc3ba66711f037" translate="yes" xml:space="preserve">
          <source>Now we have the &lt;code&gt;TextView&lt;/code&gt; that will show us the text created by the shared code function &lt;code&gt;createApplicationScreenMessage()&lt;/code&gt;. It shows &lt;code&gt;Kotlin Rocks on Android&lt;/code&gt;. Let's see how it works.</source>
          <target state="translated">Ahora tenemos el &lt;code&gt;TextView&lt;/code&gt; que nos mostrar&amp;aacute; el texto creado por la funci&amp;oacute;n de c&amp;oacute;digo compartido &lt;code&gt;createApplicationScreenMessage()&lt;/code&gt; . Muestra &lt;code&gt;Kotlin Rocks on Android&lt;/code&gt; . Vamos a ver c&amp;oacute;mo funciona.</target>
        </trans-unit>
        <trans-unit id="cfaa16b2bbff4e73ff017598a0082337889ac510" translate="yes" xml:space="preserve">
          <source>Now we know how to collect flow, and handle its completion and exceptions in both imperative and declarative ways. The natural question here is, which approach is preferred and why? As a library, we do not advocate for any particular approach and believe that both options are valid and should be selected according to your own preferences and code style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcb191c9cbda5c141385af8e35d2b74ff681731" translate="yes" xml:space="preserve">
          <source>Now we need to define the classes and interfaces we want to implement. Create the file &lt;code&gt;Base64.kt&lt;/code&gt; in the &lt;code&gt;commonMain/kotlin/jetbrains/base64&lt;/code&gt; folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff70a609caee6a29932d7e21240cf4b92c28370c" translate="yes" xml:space="preserve">
          <source>Now we need to define the classes and interfaces we want to implement. Create the file &lt;code&gt;Base64.kt&lt;/code&gt; in the &lt;code&gt;commonMain/kotlin/jetbrains/base64&lt;/code&gt; folder. Core primitive will be the &lt;code&gt;Base64Encoder&lt;/code&gt; interface which knows how to convert bytes to bytes in &lt;code&gt;Base64&lt;/code&gt; format:</source>
          <target state="translated">Ahora necesitamos definir las clases e interfaces que queremos implementar. Cree el archivo &lt;code&gt;Base64.kt&lt;/code&gt; en la &lt;code&gt;commonMain/kotlin/jetbrains/base64&lt;/code&gt; . La primitiva principal ser&amp;aacute; la interfaz &lt;code&gt;Base64Encoder&lt;/code&gt; que sabe c&amp;oacute;mo convertir bytes a bytes en formato &lt;code&gt;Base64&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6ca6511b451c4bb08b2161576b6d00b309bd636f" translate="yes" xml:space="preserve">
          <source>Now we need to explain to Xcode, where to look for frameworks. We need to add the &lt;em&gt;relative&lt;/em&gt; path &lt;code&gt;$(SRCROOT)/../../SharedCode/build/xcode-frameworks&lt;/code&gt; into the &lt;em&gt;Search Paths | Framework Search Paths&lt;/em&gt; section. Open the &lt;em&gt;Build Settings&lt;/em&gt; tab again, pick the &lt;em&gt;All&lt;/em&gt; sub-tab below, and type the &lt;em&gt;Framework Search Paths&lt;/em&gt; into the search field to easily find the option. Xcode will then show the substituted path in the UI for it.</source>
          <target state="translated">Ahora tenemos que explicarle a Xcode d&amp;oacute;nde buscar marcos. Necesitamos agregar la ruta &lt;em&gt;relativa &lt;/em&gt; &lt;code&gt;$(SRCROOT)/../../SharedCode/build/xcode-frameworks&lt;/code&gt; en las &lt;em&gt;Rutas de b&amp;uacute;squeda | &lt;/em&gt;Secci&amp;oacute;n de &lt;em&gt;rutas de b&amp;uacute;squeda del marco&lt;/em&gt; . Abra la pesta&amp;ntilde;a &lt;em&gt;Configuraci&amp;oacute;n de compilaci&amp;oacute;n&lt;/em&gt; nuevamente, elija la subpesta&amp;ntilde;a &lt;em&gt;Todos&lt;/em&gt; a continuaci&amp;oacute;n y escriba &lt;em&gt;Rutas de b&amp;uacute;squeda de marco&lt;/em&gt; en el campo de b&amp;uacute;squeda para encontrar f&amp;aacute;cilmente la opci&amp;oacute;n. A continuaci&amp;oacute;n, Xcode mostrar&amp;aacute; la ruta sustituida en la interfaz de usuario.</target>
        </trans-unit>
        <trans-unit id="bbdba5d4735168e3785e68f7843040b781bf6309" translate="yes" xml:space="preserve">
          <source>Now when we call &lt;code&gt;workload()&lt;/code&gt; from a coroutine, the compiler knows that it may suspend and will prepare accordingly:</source>
          <target state="translated">Ahora, cuando llamamos a &lt;code&gt;workload()&lt;/code&gt; desde una corrutina, el compilador sabe que se puede suspender y se preparar&amp;aacute; en consecuencia:</target>
        </trans-unit>
        <trans-unit id="1d24cd9e38cbefb079dd50a49d7d7f03311c7bf3" translate="yes" xml:space="preserve">
          <source>Now you are ready to create a new Kotlin project.</source>
          <target state="translated">Ahora estás listo para crear un nuevo proyecto Kotlin.</target>
        </trans-unit>
        <trans-unit id="3f077b15ad8e7c3b9e1ff3a498d220ef1f3d3af3" translate="yes" xml:space="preserve">
          <source>Now you can adapt callable references to functions when passing a variable number of arguments (&lt;code&gt;vararg&lt;/code&gt;) . You can pass any number of parameters of the same type at the end of the list of passed arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5407b38e27f33f7ccb3982ae84cbb3dcaa84ef01" translate="yes" xml:space="preserve">
          <source>Now you can also work with Pod libraries stored locally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290dbe288d985515eeabffa880759f9b6702dbd0" translate="yes" xml:space="preserve">
          <source>Now you can declare a dependency on a Kotlin/Native library in the traditional &lt;code&gt;group:artifact:version&lt;/code&gt; notation:</source>
          <target state="translated">Ahora puede declarar una dependencia en una biblioteca Kotlin / Native en el &lt;code&gt;group:artifact:version&lt;/code&gt; tradicional : artefacto: notaci&amp;oacute;n de versi&amp;oacute;n :</target>
        </trans-unit>
        <trans-unit id="702240020d4113eb3f712bdd0c2cb7f4571c7d40" translate="yes" xml:space="preserve">
          <source>Now you can do this with the &lt;a href=&quot;mpp-share-on-platforms#share-code-on-similar-platforms&quot;&gt;hierarchical project structure support&lt;/a&gt;, which infers and adapts the API and language features available in each source set based on which targets consume them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a40b87e8c83e8616bbc472cc6670127fbc03a2" translate="yes" xml:space="preserve">
          <source>Now you can manage Pod dependencies right in Intellij IDEA while enjoying the benefits it provides for working with code, such as code highlighting and completion. You can also build the whole Kotlin project with Gradle, without having to switch to Xcode. This means you only have to go to Xcode when you need to write Swift/Objective-C code or run your application on a simulator or device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f7ffde9424834101062b3a3b4388e5becd0386" translate="yes" xml:space="preserve">
          <source>Now you can publish the artifacts with the standard Gradle &lt;code&gt;publish&lt;/code&gt; task:</source>
          <target state="translated">Ahora puede publicar los artefactos con la tarea de &lt;code&gt;publish&lt;/code&gt; est&amp;aacute;ndar de Gradle :</target>
        </trans-unit>
        <trans-unit id="65a427fac64d1047847b290a65d32a06b1cf436a" translate="yes" xml:space="preserve">
          <source>Now you can use callable references to functions with default argument values. If the callable reference to the function &lt;code&gt;foo&lt;/code&gt; takes no arguments, the default value &lt;code&gt;0&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f0e0a97af9c78bc7052cbc7558b0c5721564a3e" translate="yes" xml:space="preserve">
          <source>Now you can use this class from JavaScript in the following way:</source>
          <target state="translated">Ahora puedes usar esta clase de JavaScript de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="833bea14ffb9e5ee91019cc6b0589332ce6807f1" translate="yes" xml:space="preserve">
          <source>Now you can:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5043215278e17616ae1356fe9712ab2361ec4d2" translate="yes" xml:space="preserve">
          <source>Now you have the new project created with the following folder structure:</source>
          <target state="translated">Ahora tienes el nuevo proyecto creado con la siguiente estructura de carpetas:</target>
        </trans-unit>
        <trans-unit id="3e24bac49840414b90995c5cbd33ee7b86539a1d" translate="yes" xml:space="preserve">
          <source>Now you're ready to start learning. Read the first task description and the exercise code. You will find a placeholder in the exercise code which you need to complete to solve the task:</source>
          <target state="translated">Ahora estás listo para empezar a aprender.Lee la primera descripción de la tarea y el código de los ejercicios.Encontrarás un marcador de posición en el código de ejercicio que debes completar para resolver la tarea:</target>
        </trans-unit>
        <trans-unit id="8ed1b6ed97249b639980cd5ee0ff7de33ff6c723" translate="yes" xml:space="preserve">
          <source>Now you're ready to use the serialization API in your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb44051b734fae4af55ffe5224978dec7c87251" translate="yes" xml:space="preserve">
          <source>Now, &lt;code&gt;callStatic()&lt;/code&gt; is static in Java, while &lt;code&gt;callNonStatic()&lt;/code&gt; is not:</source>
          <target state="translated">Ahora, &lt;code&gt;callStatic()&lt;/code&gt; es est&amp;aacute;tico en Java, mientras que &lt;code&gt;callNonStatic()&lt;/code&gt; no lo es:</target>
        </trans-unit>
        <trans-unit id="a13d0fb128d24db7d3bb5f2f36926ba1c128f4f2" translate="yes" xml:space="preserve">
          <source>Now, &lt;em&gt;this&lt;/em&gt; can be omitted, as usual, and we get something that looks very much like a builder already:</source>
          <target state="translated">Ahora, &lt;em&gt;esto&lt;/em&gt; se puede omitir, como de costumbre, y obtenemos algo que ya se parece mucho a un constructor:</target>
        </trans-unit>
        <trans-unit id="f0a82c0a40d22072db820930c190224b73ea978f" translate="yes" xml:space="preserve">
          <source>Now, all is left is to write the main function that reads the input and implements the rest of the algorithm that the problem statement asks for &amp;mdash; to compute the number of different integers that are produced while repeatedly applying function &lt;code&gt;f&lt;/code&gt; to the initial number &lt;code&gt;n&lt;/code&gt; that is given in the standard input.</source>
          <target state="translated">Ahora, todo lo que queda es escribir la funci&amp;oacute;n principal que lee la entrada e implementa el resto del algoritmo que pide el enunciado del problema: calcular el n&amp;uacute;mero de enteros diferentes que se producen mientras se aplica repetidamente la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; al n&amp;uacute;mero inicial &lt;code&gt;n&lt;/code&gt; que se da en la entrada est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="fb6047e18f4bc8d11bc30e4fd65fb8d503da1662" translate="yes" xml:space="preserve">
          <source>Now, if you call a method or access a property on &lt;code&gt;a&lt;/code&gt;, it's guaranteed not to cause an NPE, so you can safely say:</source>
          <target state="translated">Ahora, si llama a un m&amp;eacute;todo o accede a una propiedad en &lt;code&gt;a&lt;/code&gt; , se garantiza que no provocar&amp;aacute; una NPE, por lo que puede decir con seguridad:</target>
        </trans-unit>
        <trans-unit id="20f3d5cd33eec60a8a8002b141a9b28a6b9b7682" translate="yes" xml:space="preserve">
          <source>Now, if you do:</source>
          <target state="translated">Ahora,si lo haces:</target>
        </trans-unit>
        <trans-unit id="f71ccd18f05da02b03c8a2c32b3e5cdf31e2366b" translate="yes" xml:space="preserve">
          <source>Now, if you open DevTools, you should see both JavaScript and Kotlin files in Sources tab, as shown in the picture below.</source>
          <target state="translated">Ahora,si abre DevTools,debería ver tanto los archivos de JavaScript como los de Kotlin en la pestaña de Fuentes,como se muestra en la imagen de abajo.</target>
        </trans-unit>
        <trans-unit id="a83d9e77f9456d18d8a05fd327f1e236de7060bd" translate="yes" xml:space="preserve">
          <source>Now, if you rebuild the project, you should see both &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.js.map&lt;/code&gt; files generated.</source>
          <target state="translated">Ahora, si reconstruye el proyecto, deber&amp;iacute;a ver los archivos &lt;code&gt;.js&lt;/code&gt; y &lt;code&gt;.js.map&lt;/code&gt; generados.</target>
        </trans-unit>
        <trans-unit id="76f6cc5aafdabd68e55d4250b74b32cd977c308a" translate="yes" xml:space="preserve">
          <source>Now, it returns only from the lambda expression. Oftentimes it is more convenient to use implicit labels: such a label has the same name as the function to which the lambda is passed.</source>
          <target state="translated">Ahora,sólo vuelve de la expresión lambda.A menudo es más conveniente utilizar etiquetas implícitas:una etiqueta de este tipo tiene el mismo nombre que la función a la que se pasa la lambda.</target>
        </trans-unit>
        <trans-unit id="94f815aeffcc5ac17241b513b6e20a9f1cdaea31" translate="yes" xml:space="preserve">
          <source>Now, let us see what happens if we launch a couple of coroutines sending strings (in this example we launch them in the context of the main thread as main coroutine's children):</source>
          <target state="translated">Ahora,veamos qué sucede si lanzamos un par de coroutinas enviando cuerdas (en este ejemplo las lanzamos en el contexto del hilo principal como hijos de la corutina principal):</target>
        </trans-unit>
        <trans-unit id="71d025254fd20926043d356611276f9c88403338" translate="yes" xml:space="preserve">
          <source>Now, let's make sure that coroutines are really cheaper than threads. How about starting a million of them? Let's try starting a million threads first:</source>
          <target state="translated">Ahora,asegurémonos de que las cortinas sean realmente más baratas que los hilos.¿Qué tal si empezamos con un millón de ellos? Intentemos empezar con un millón de hilos primero:</target>
        </trans-unit>
        <trans-unit id="16dd7a2ec4c182b0f69f31fe9543eb28189fc230" translate="yes" xml:space="preserve">
          <source>Now, let's recall why we can say something like this in the code:</source>
          <target state="translated">Ahora,recordemos por qué podemos decir algo así en el código:</target>
        </trans-unit>
        <trans-unit id="544d487017d11ee4001cb80b112987fd1c122959" translate="yes" xml:space="preserve">
          <source>Now, let's say we want to extract our &lt;em&gt;workload&lt;/em&gt; (which is &quot;wait 1 second and return a number&quot;) into a separate function:</source>
          <target state="translated">Ahora, digamos que queremos extraer nuestra &lt;em&gt;carga de trabajo&lt;/em&gt; (que es &quot;esperar 1 segundo y devolver un n&amp;uacute;mero&quot;) en una funci&amp;oacute;n separada:</target>
        </trans-unit>
        <trans-unit id="c750281f584acadba2af58cffcc8c1305b106c0d" translate="yes" xml:space="preserve">
          <source>Now, the type parameter of &lt;code&gt;to&lt;/code&gt; must be a supertype of that of &lt;code&gt;from&lt;/code&gt;. This time, we're losing the ability to call &lt;code&gt;get()&lt;/code&gt; on &lt;code&gt;to&lt;/code&gt;.</source>
          <target state="translated">Ahora, el par&amp;aacute;metro de tipo de &lt;code&gt;to&lt;/code&gt; debe ser un supertipo del de &lt;code&gt;from&lt;/code&gt; . Esta vez, estamos perdiendo la capacidad de llamada &lt;code&gt;get()&lt;/code&gt; en &lt;code&gt;to&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66aa36fc01590becc140967b82e52fb54836cefb" translate="yes" xml:space="preserve">
          <source>Now, try that with threads. What would happen? (Most likely your code will produce some sort of out-of-memory error)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43de32521253364ea5d09558750dd9502168f58f" translate="yes" xml:space="preserve">
          <source>Now, we can launch coroutines in the scope of this &lt;code&gt;Activity&lt;/code&gt; using the defined &lt;code&gt;scope&lt;/code&gt;. For the demo, we launch ten coroutines that delay for a different time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841ea7e84248eb13447bb49e5c5c6dbc24123f33" translate="yes" xml:space="preserve">
          <source>Now, we can launch coroutines in the scope of this &lt;code&gt;Activity&lt;/code&gt; without having to explicitly specify their context. For the demo, we launch ten coroutines that delay for a different time:</source>
          <target state="translated">Ahora, podemos lanzar corrutinas en el alcance de esta &lt;code&gt;Activity&lt;/code&gt; sin tener que especificar expl&amp;iacute;citamente su contexto. Para la demostraci&amp;oacute;n, lanzamos diez corrutinas que se demoran por un tiempo diferente:</target>
        </trans-unit>
        <trans-unit id="b7b794f9844126d9635b31ec7a7259faff61ea34" translate="yes" xml:space="preserve">
          <source>Now, we can qualify a &lt;em&gt;break&lt;/em&gt; or a &lt;em&gt;continue&lt;/em&gt; with a label:</source>
          <target state="translated">Ahora, podemos calificar un &lt;em&gt;descanso&lt;/em&gt; o &lt;em&gt;continuar&lt;/em&gt; con una etiqueta:</target>
        </trans-unit>
        <trans-unit id="4009ace22d0b31f5461708301ff321a7b41e34f1" translate="yes" xml:space="preserve">
          <source>Now, we need to create the implementation file (and missing directories) for Android in the &lt;code&gt;SharedCode/src/androidMain/kotlin/actual.kt&lt;/code&gt;:</source>
          <target state="translated">Ahora, necesitamos crear el archivo de implementaci&amp;oacute;n (y los directorios que faltan) para Android en &lt;code&gt;SharedCode/src/androidMain/kotlin/actual.kt&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cc32792e1ffb6994d09d3ccc5850fcde297ab5b1" translate="yes" xml:space="preserve">
          <source>Now, whenever anyone reads &lt;code&gt;p.name&lt;/code&gt;, &lt;code&gt;getValue()&lt;/code&gt; will be invoked with &lt;code&gt;p&lt;/code&gt; as &lt;code&gt;thisRef&lt;/code&gt; and metadata about the &lt;code&gt;name&lt;/code&gt; property as &lt;code&gt;property&lt;/code&gt;. Since &lt;code&gt;thisRef&lt;/code&gt; is a &lt;code&gt;DbModel&lt;/code&gt;, this delegated property can only be used inside &lt;code&gt;DbModel&lt;/code&gt; and its subclasses.</source>
          <target state="translated">Ahora, siempre que alguien lea &lt;code&gt;p.name&lt;/code&gt; , &lt;code&gt;getValue()&lt;/code&gt; ser&amp;aacute; invocado con &lt;code&gt;p&lt;/code&gt; como &lt;code&gt;thisRef&lt;/code&gt; y metadatos sobre la propiedad &lt;code&gt;name&lt;/code&gt; como &lt;code&gt;property&lt;/code&gt; . Dado que &lt;code&gt;thisRef&lt;/code&gt; es un &lt;code&gt;DbModel&lt;/code&gt; , esta propiedad delegada solo se puede usar dentro de &lt;code&gt;DbModel&lt;/code&gt; y sus subclases.</target>
        </trans-unit>
        <trans-unit id="1ddfae4b18596b2854071f83733087767ffb2d01" translate="yes" xml:space="preserve">
          <source>Now, you can do:</source>
          <target state="translated">Ahora,puedes hacerlo:</target>
        </trans-unit>
        <trans-unit id="c62d757ce7f75d3f121e4c4fec1867b7958bd009" translate="yes" xml:space="preserve">
          <source>Now, you can no longer say &lt;code&gt;val mv = MotorVehicle(100, 4)&lt;/code&gt;.</source>
          <target state="translated">Ahora, ya no puede decir &lt;code&gt;val mv = MotorVehicle(100, 4)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c97d282b328adc12f3e5a556471451c0554c8b2" translate="yes" xml:space="preserve">
          <source>Now, you can say &lt;code&gt;loadFromDb&amp;lt;Exercise&amp;gt;(&quot;x01234567&quot;)&lt;/code&gt; to load an object from the &lt;code&gt;Exercise&lt;/code&gt; database table.</source>
          <target state="translated">Ahora, puede decir &lt;code&gt;loadFromDb&amp;lt;Exercise&amp;gt;(&quot;x01234567&quot;)&lt;/code&gt; para cargar un objeto de la tabla de la base de datos de &lt;code&gt;Exercise&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93baa80c955acf188a4912f62d9bfabe1e89cde4" translate="yes" xml:space="preserve">
          <source>Now, you can treat a bowl of &lt;code&gt;T&lt;/code&gt; as a producer of any superclass of &lt;code&gt;T&lt;/code&gt;, and as a consumer of any subclass of &lt;code&gt;T&lt;/code&gt;:</source>
          <target state="translated">Ahora, puede tratar un taz&amp;oacute;n de &lt;code&gt;T&lt;/code&gt; como productor de cualquier superclase de &lt;code&gt;T&lt;/code&gt; y como consumidor de cualquier subclase de &lt;code&gt;T&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cb06774e37de315de0f5603f0b4fd0176b0b42a0" translate="yes" xml:space="preserve">
          <source>Now, you may not create a &lt;code&gt;TreeNode&lt;/code&gt; of a type that is not a subclass/implementor of &lt;code&gt;Vehicle&lt;/code&gt;. Inside the class, whenever you've got a value of type &lt;code&gt;T&lt;/code&gt;, you may access all the public members of &lt;code&gt;Vehicle&lt;/code&gt; on it.</source>
          <target state="translated">Ahora, no puede crear un &lt;code&gt;TreeNode&lt;/code&gt; de un tipo que no sea una subclase / implementador de &lt;code&gt;Vehicle&lt;/code&gt; . Dentro de la clase, siempre que tenga un valor de tipo &lt;code&gt;T&lt;/code&gt; , puede acceder a todos los miembros p&amp;uacute;blicos de &lt;code&gt;Vehicle&lt;/code&gt; en &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="e66b62de2c45ca7a1dafaa470efed27db40c8abf" translate="yes" xml:space="preserve">
          <source>Null Safety</source>
          <target state="translated">Seguridad nula</target>
        </trans-unit>
        <trans-unit id="961437d22902a2f7dfd53365cc313f4a8b919ec9" translate="yes" xml:space="preserve">
          <source>Null references are &lt;a href=&quot;null-safety&quot;&gt;controlled by the type system&lt;/a&gt;.</source>
          <target state="translated">Las referencias nulas est&amp;aacute;n &lt;a href=&quot;null-safety&quot;&gt;controladas por el sistema de tipos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a2b2542f64eaa222fbfda6a1a4f6d0850cf59a88" translate="yes" xml:space="preserve">
          <source>Null safety</source>
          <target state="translated">Seguridad nula</target>
        </trans-unit>
        <trans-unit id="39f94d225bc04bec959b32c61b7c0b099f1b3de4" translate="yes" xml:space="preserve">
          <source>Null safety is enforced as usual, so a variable of type &lt;code&gt;ContentKind&lt;/code&gt; can not be null, unlike in Java.</source>
          <target state="translated">La seguridad nula se aplica como de costumbre, por lo que una variable de tipo &lt;code&gt;ContentKind&lt;/code&gt; no puede ser nula, a diferencia de Java.</target>
        </trans-unit>
        <trans-unit id="c768f27b8cd368aac53b3bf7b3466119f4aeaaad" translate="yes" xml:space="preserve">
          <source>Null-Safety and Platform Types</source>
          <target state="translated">Tipos de seguridad nula y de plataforma</target>
        </trans-unit>
        <trans-unit id="7b2e605360643dd896eff359d1535b4e4db34c3d" translate="yes" xml:space="preserve">
          <source>Null-safety</source>
          <target state="translated">Null-safety</target>
        </trans-unit>
        <trans-unit id="e96a81e5fc6aa1615fc78a379fdad68b748bc26c" translate="yes" xml:space="preserve">
          <source>NullPointerException</source>
          <target state="translated">NullPointerException</target>
        </trans-unit>
        <trans-unit id="7cfd44db910fd8b20253bc74265b31aeaf45384c" translate="yes" xml:space="preserve">
          <source>Nullability</source>
          <target state="translated">Nullability</target>
        </trans-unit>
        <trans-unit id="13c99d5e49300b52aefe21f12764921df1d1f93f" translate="yes" xml:space="preserve">
          <source>Nullability annotations</source>
          <target state="translated">Anotaciones de nulidad</target>
        </trans-unit>
        <trans-unit id="e5e6784edcd14305d294e06ecb03d642a0a57873" translate="yes" xml:space="preserve">
          <source>Nullability assertions on access to Java types annotated with &lt;code&gt;@NotNull&lt;/code&gt;</source>
          <target state="translated">Aserciones de nulabilidad en el acceso a tipos de Java anotadas con &lt;code&gt;@NotNull&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1e5389deab4b42bc503c62cbba549bbb26b00be1" translate="yes" xml:space="preserve">
          <source>Nullable Receiver</source>
          <target state="translated">Receptor nulo</target>
        </trans-unit>
        <trans-unit id="4ab741ecdf93e884b197a13c7088669ebfb40519" translate="yes" xml:space="preserve">
          <source>Nullable counterparts of types above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ff5a1131fe0933e804809fec54eb9e91bf1512" translate="yes" xml:space="preserve">
          <source>Nullable receiver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea692fde5fad8fec43d27ab3923928d9c3e4f762" translate="yes" xml:space="preserve">
          <source>Nullable types and Non-Null Types</source>
          <target state="translated">Tipos anulables y tipos no anulables</target>
        </trans-unit>
        <trans-unit id="eda4c49c3f8e3f49857bedaeb7bb3c5e705b11d9" translate="yes" xml:space="preserve">
          <source>Nullable values and &lt;em&gt;null&lt;/em&gt; checks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="2e1ee95668fd5f69d1925d4acd4d52b859469b82" translate="yes" xml:space="preserve">
          <source>NumberFormatException</source>
          <target state="translated">NumberFormatException</target>
        </trans-unit>
        <trans-unit id="7e53821f70ae16079c4a6a64c52a91fae645bc5f" translate="yes" xml:space="preserve">
          <source>Numbers</source>
          <target state="translated">Numbers</target>
        </trans-unit>
        <trans-unit id="b7b3deb2440db7b27508e61ad6b6526ba91d78a1" translate="yes" xml:space="preserve">
          <source>Numbers are compared with the ends of this range according to IEEE-754.</source>
          <target state="translated">Los números se comparan con los extremos de este rango según el IEEE-754.</target>
        </trans-unit>
        <trans-unit id="b1c2afbaeee52797fa3a437d9c480e4a05cf0193" translate="yes" xml:space="preserve">
          <source>Numeric types use the traditional numerical order: &lt;code&gt;1&lt;/code&gt; is greater than &lt;code&gt;0&lt;/code&gt;; &lt;code&gt;-3.4f&lt;/code&gt; is greater than &lt;code&gt;-5f&lt;/code&gt;, an so on.</source>
          <target state="translated">Los tipos num&amp;eacute;ricos utilizan el orden num&amp;eacute;rico tradicional: &lt;code&gt;1&lt;/code&gt; es mayor que &lt;code&gt;0&lt;/code&gt; ; &lt;code&gt;-3.4f&lt;/code&gt; es mayor que &lt;code&gt;-5f&lt;/code&gt; , y as&amp;iacute; sucesivamente.</target>
        </trans-unit>
        <trans-unit id="aadf9b6283ac66e1e51fce7a8cfe42781b4ea431" translate="yes" xml:space="preserve">
          <source>Numeric types use the traditional numerical order: &lt;code&gt;1&lt;/code&gt; is greater than &lt;code&gt;0&lt;/code&gt;; &lt;code&gt;-3.4f&lt;/code&gt; is greater than &lt;code&gt;-5f&lt;/code&gt;, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132a0e722f57154d901e124e4cb8e8bc570f7174" translate="yes" xml:space="preserve">
          <source>Numerous use cases are covered by just the default source sets and don't require custom source sets.</source>
          <target state="translated">Numerosos casos de uso están cubiertos sólo por los conjuntos de fuentes predeterminados y no requieren conjuntos de fuentes personalizados.</target>
        </trans-unit>
        <trans-unit id="f5bd86a2929ff840c45d76159d984c1239906a9d" translate="yes" xml:space="preserve">
          <source>OSGi</source>
          <target state="translated">OSGi</target>
        </trans-unit>
        <trans-unit id="802bfbdcec1e0873ee0e4b3f43f68d3022244543" translate="yes" xml:space="preserve">
          <source>OTHER_LETTER</source>
          <target state="translated">OTHER_LETTER</target>
        </trans-unit>
        <trans-unit id="c526c1a55d3a7d1197fc54064f8aa775a085df54" translate="yes" xml:space="preserve">
          <source>OTHER_NEUTRALS</source>
          <target state="translated">OTHER_NEUTRALS</target>
        </trans-unit>
        <trans-unit id="0528be3a553ee55304545e3df532c16619f9a75f" translate="yes" xml:space="preserve">
          <source>OTHER_NUMBER</source>
          <target state="translated">OTHER_NUMBER</target>
        </trans-unit>
        <trans-unit id="a79f18b5ad7c3bc6ad0e1685c0b9f1d91e9ea75c" translate="yes" xml:space="preserve">
          <source>OTHER_PUNCTUATION</source>
          <target state="translated">OTHER_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="5dcd7535199ae15a813d866ef04e762cfaa07f6c" translate="yes" xml:space="preserve">
          <source>OTHER_SYMBOL</source>
          <target state="translated">OTHER_SYMBOL</target>
        </trans-unit>
        <trans-unit id="5d84eb9e92dc661a577d3adfba33f1d74c56b13f" translate="yes" xml:space="preserve">
          <source>OUT</source>
          <target state="translated">OUT</target>
        </trans-unit>
        <trans-unit id="91920f1b8433472c27ea07aeaf636cc60ba181dc" translate="yes" xml:space="preserve">
          <source>ObjCAction</source>
          <target state="translated">ObjCAction</target>
        </trans-unit>
        <trans-unit id="e75d1b861d64404390b1044e805e449a8200ca83" translate="yes" xml:space="preserve">
          <source>ObjCBlockVar</source>
          <target state="translated">ObjCBlockVar</target>
        </trans-unit>
        <trans-unit id="e9af1c5fc6d5face32a12e24e19f7721bddde5b0" translate="yes" xml:space="preserve">
          <source>ObjCClass</source>
          <target state="translated">ObjCClass</target>
        </trans-unit>
        <trans-unit id="f25e8c7f51c9fbd76d5d3f0065c1777ea9957679" translate="yes" xml:space="preserve">
          <source>ObjCClassOf</source>
          <target state="translated">ObjCClassOf</target>
        </trans-unit>
        <trans-unit id="f6a51cb987439b8eee022689cce7766c56796d55" translate="yes" xml:space="preserve">
          <source>ObjCConstructor</source>
          <target state="translated">ObjCConstructor</target>
        </trans-unit>
        <trans-unit id="174b16a8130fefe11ed27381abeeb2de5f620114" translate="yes" xml:space="preserve">
          <source>ObjCFactory</source>
          <target state="translated">ObjCFactory</target>
        </trans-unit>
        <trans-unit id="b26295bcadcc4d23542076fe5cb26969093b0b48" translate="yes" xml:space="preserve">
          <source>ObjCMethod</source>
          <target state="translated">ObjCMethod</target>
        </trans-unit>
        <trans-unit id="07d9267ddaf9a5ade080cb2ba3e61a2c1db5834c" translate="yes" xml:space="preserve">
          <source>ObjCNotImplementedVar</source>
          <target state="translated">ObjCNotImplementedVar</target>
        </trans-unit>
        <trans-unit id="88fce822e198e83b3ad7f5c732a4ec9995f176b3" translate="yes" xml:space="preserve">
          <source>ObjCObject</source>
          <target state="translated">ObjCObject</target>
        </trans-unit>
        <trans-unit id="c3946e9e7a5b7a873393f4068d626ccc17017e1d" translate="yes" xml:space="preserve">
          <source>ObjCObjectBase</source>
          <target state="translated">ObjCObjectBase</target>
        </trans-unit>
        <trans-unit id="f2b935ffe4e074cda5d9854c568bff792bd27525" translate="yes" xml:space="preserve">
          <source>ObjCObjectBaseMeta</source>
          <target state="translated">ObjCObjectBaseMeta</target>
        </trans-unit>
        <trans-unit id="968b48c24c631a6e3656fa344166e2e696dac30a" translate="yes" xml:space="preserve">
          <source>ObjCObjectMeta</source>
          <target state="translated">ObjCObjectMeta</target>
        </trans-unit>
        <trans-unit id="877c2fba97f85ebcbe0815d3dd7f9aa9abf27eb2" translate="yes" xml:space="preserve">
          <source>ObjCObjectVar</source>
          <target state="translated">ObjCObjectVar</target>
        </trans-unit>
        <trans-unit id="380d9e7d32a5ea9a8f4a45d77367a2bd6224641f" translate="yes" xml:space="preserve">
          <source>ObjCOutlet</source>
          <target state="translated">ObjCOutlet</target>
        </trans-unit>
        <trans-unit id="6ad1a2f860c17b61aedf856b4ee3682acdaa8417" translate="yes" xml:space="preserve">
          <source>ObjCProtocol</source>
          <target state="translated">ObjCProtocol</target>
        </trans-unit>
        <trans-unit id="7ddeec08c37b0e1684597f07f64a856e9d5996d5" translate="yes" xml:space="preserve">
          <source>ObjCStringVarOf</source>
          <target state="translated">ObjCStringVarOf</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="9cf5c3411eb513b108884e51c19ba17172ea9665" translate="yes" xml:space="preserve">
          <source>Object Declarations</source>
          <target state="translated">Declaraciones de Objeto</target>
        </trans-unit>
        <trans-unit id="7c97f9bd791112ffa2e31c34e5efe261bd493bd5" translate="yes" xml:space="preserve">
          <source>Object Expressions and Declarations</source>
          <target state="translated">Expresiones y declaraciones de objetos</target>
        </trans-unit>
        <trans-unit id="f0e2a5cc2614159a14f8d24f77aff8cedbb91395" translate="yes" xml:space="preserve">
          <source>Object Methods</source>
          <target state="translated">Métodos de objetos</target>
        </trans-unit>
        <trans-unit id="da5029a017fab6364fe3776821fcb6e385dc5dee" translate="yes" xml:space="preserve">
          <source>Object Transfer Basics.</source>
          <target state="translated">Conceptos básicos de la transferencia de objetos.</target>
        </trans-unit>
        <trans-unit id="720b937cd9168a2afdad295cde0f6e29e57ba3f8" translate="yes" xml:space="preserve">
          <source>Object configuration and computing the result: &lt;code&gt;run&lt;/code&gt;</source>
          <target state="translated">Configuraci&amp;oacute;n de objetos y c&amp;aacute;lculo del resultado: &lt;code&gt;run&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1602dbe04f927f110613a2ff025fac15d0ab85e1" translate="yes" xml:space="preserve">
          <source>Object configuration: &lt;code&gt;apply&lt;/code&gt;</source>
          <target state="translated">Configuraci&amp;oacute;n de objeto: &lt;code&gt;apply&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3d1d8d22ba8224cd8039f6fb03638fcc7cc89d7" translate="yes" xml:space="preserve">
          <source>Object declaration's initialization is thread-safe and done at first access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a447624065dc9ff0a50d2837d5bc597740342d7d" translate="yes" xml:space="preserve">
          <source>Object declaration's initialization is thread-safe.</source>
          <target state="translated">La inicialización de la declaración de objetos es segura.</target>
        </trans-unit>
        <trans-unit id="628c7c8804cdd6233ca4db93a682c55cf0920e38" translate="yes" xml:space="preserve">
          <source>Object declarations</source>
          <target state="translated">Declaraciones de objetos</target>
        </trans-unit>
        <trans-unit id="cae8f3bd29605b55880171db0511493e6eb7c132" translate="yes" xml:space="preserve">
          <source>Object describing the current platform program executes upon.</source>
          <target state="translated">Objeto que describe la plataforma en la que se ejecuta el programa actual.</target>
        </trans-unit>
        <trans-unit id="652916453e90e519555e6ab21189e4862e16ddc5" translate="yes" xml:space="preserve">
          <source>Object expressions</source>
          <target state="translated">Expresiones de objetos</target>
        </trans-unit>
        <trans-unit id="a5005a7247de5e6b7399fc2c0fe58f85332088cd" translate="yes" xml:space="preserve">
          <source>Object pinning</source>
          <target state="translated">Fijación de objetos</target>
        </trans-unit>
        <trans-unit id="bd34180a1517f8541977dbe1575129ec09ee4ed0" translate="yes" xml:space="preserve">
          <source>Object reference</source>
          <target state="translated">Referencia del objeto</target>
        </trans-unit>
        <trans-unit id="c74457d6502afea678cde0191acb0c28174b3019" translate="yes" xml:space="preserve">
          <source>Object subgraph detachment</source>
          <target state="translated">Desprendimiento del subgrafo de objetos</target>
        </trans-unit>
        <trans-unit id="9e612181ece96085e9c01a6c4c75420948e3db15" translate="yes" xml:space="preserve">
          <source>Object subgraph freezing</source>
          <target state="translated">Congelación del subgrafo de objetos</target>
        </trans-unit>
        <trans-unit id="f714255fe9b4b0abd289766d10b307beefd8bdca" translate="yes" xml:space="preserve">
          <source>Object subgraph ownership transfer</source>
          <target state="translated">Transferencia de la propiedad del subgrafo del objeto</target>
        </trans-unit>
        <trans-unit id="f7e1ff28ab70fc23071798b8c0343f8a27fa8277" translate="yes" xml:space="preserve">
          <source>Object transfer and freezing</source>
          <target state="translated">Transferencia y congelación de objetos</target>
        </trans-unit>
        <trans-unit id="9cf4af30df052d80876381f9ec0e05811ecd3d08" translate="yes" xml:space="preserve">
          <source>Objective-C</source>
          <target state="translated">Objective-C</target>
        </trans-unit>
        <trans-unit id="f624b8a4ac060c545ced78fe5b569d299005d811" translate="yes" xml:space="preserve">
          <source>Objective-C allows generics to be declared covariant or contravariant. Swift has no support for variance. Generic classes coming from Objective-C can be force-cast as needed.</source>
          <target state="translated">El objetivo C permite que los genéricos se declaren covariantes o contravariantes.Swift no tiene apoyo para la varianza.Las clases genéricas procedentes del Objetivo-C pueden ser forzosamente fundidas según sea necesario.</target>
        </trans-unit>
        <trans-unit id="c34ace6f5a2b6e2147c689be6867500eabe88ca9" translate="yes" xml:space="preserve">
          <source>Objective-C and Swift use reference counting. Kotlin/Native has its own garbage collection too. Kotlin/Native garbage collection is integrated with Objective-C/Swift reference counting. We do not need to use anything special to control the lifetime of Kotlin/Native instances from Swift or Objective-C.</source>
          <target state="translated">Objetivo-C y Swift utilizan el recuento de referencia.Kotlin/Native también tiene su propia colección de basura.La recogida de basura de Kotlin/Native está integrada en el recuento de referencia de Objective-C/Swift.No necesitamos usar nada especial para controlar la vida útil de Kotlin/Native instancias de Swift o Objective-C.</target>
        </trans-unit>
        <trans-unit id="81b529433016c0d2c2b79263ff487c0612e2136f" translate="yes" xml:space="preserve">
          <source>Objective-C classes and protocols</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d9bdb0193a26ed15d57450ee6f73bec2393ce7" translate="yes" xml:space="preserve">
          <source>Objective-C classes are imported into Kotlin with their original names. Protocols are imported as interfaces with &lt;code&gt;Protocol&lt;/code&gt; name suffix, i.e. &lt;code&gt;@protocol Foo&lt;/code&gt; -&amp;gt; &lt;code&gt;interface FooProtocol&lt;/code&gt;. These classes and interfaces are placed into a package &lt;a href=&quot;#usage&quot;&gt;specified in build configuration&lt;/a&gt; (&lt;code&gt;platform.*&lt;/code&gt; packages for preconfigured system frameworks).</source>
          <target state="translated">Las clases de Objective-C se importan a Kotlin con sus nombres originales. Los protocolos se importan como interfaces con sufijo de nombre de &lt;code&gt;Protocol&lt;/code&gt; , es decir, &lt;code&gt;@protocol Foo&lt;/code&gt; -&amp;gt; &lt;code&gt;interface FooProtocol&lt;/code&gt; . Estas clases e interfaces se colocan en un paquete &lt;a href=&quot;#usage&quot;&gt;especificado en la configuraci&amp;oacute;n de compilaci&amp;oacute;n&lt;/a&gt; ( paquetes &lt;code&gt;platform.*&lt;/code&gt; Para marcos de sistema preconfigurados).</target>
        </trans-unit>
        <trans-unit id="b3bedf7fe9ff2e5f1e147876d97ca0b4c0ba2684" translate="yes" xml:space="preserve">
          <source>Objective-C framework</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e563d45ab29b050e192482831ebb08e8407b5c5" translate="yes" xml:space="preserve">
          <source>Objective-C framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28ecca8c4c63098937f693b564f06106597a69f" translate="yes" xml:space="preserve">
          <source>Objective-C generics do not support all features of either Kotlin or Swift, so there will be some information lost in the translation.</source>
          <target state="translated">Los genéricos de Objective-C no soportan todas las características de Kotlin o Swift,así que habrá alguna información perdida en la traducción.</target>
        </trans-unit>
        <trans-unit id="fd4cb7b4a24f9701dc73190cfa973310962d6251" translate="yes" xml:space="preserve">
          <source>Objective-C generics support by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc50c4e6d2116d2eefbad12ba8e08e873a18c54" translate="yes" xml:space="preserve">
          <source>Objective-C supports &quot;lightweight generics&quot; defined on classes, with a relatively limited feature set. Swift can import generics defined on classes to help provide additional type information to the compiler.</source>
          <target state="translated">El Objetivo C apoya a los &quot;genéricos ligeros&quot; definidos en clases,con un conjunto de características relativamente limitado.Swift puede importar genéricos definidos en clases para ayudar a proporcionar información adicional de tipos al compilador.</target>
        </trans-unit>
        <trans-unit id="872324a80a8df1d396c94677f04ea994d1ae3329" translate="yes" xml:space="preserve">
          <source>Objects and companion objects</source>
          <target state="translated">Objetos y objetos acompañantes</target>
        </trans-unit>
        <trans-unit id="baa64e9ea92fa8d9f0990d9b1a5bc22ee025b445" translate="yes" xml:space="preserve">
          <source>Objects can be passed between threads in one of two possible modes.</source>
          <target state="translated">Los objetos pueden pasar entre hilos en uno de dos modos posibles.</target>
        </trans-unit>
        <trans-unit id="c92258fa87a7fd87bfb0eac39b2cad3876c1531d" translate="yes" xml:space="preserve">
          <source>Observable</source>
          <target state="translated">Observable</target>
        </trans-unit>
        <trans-unit id="53d6bf00994a7a961b92ecd0048f0ecd77a13ddf" translate="yes" xml:space="preserve">
          <source>ObservableProperty</source>
          <target state="translated">ObservableProperty</target>
        </trans-unit>
        <trans-unit id="1145800f1de30eba6d1df3a4fd2cc70c1f07f939" translate="yes" xml:space="preserve">
          <source>Obtain the Kotlin/Native compiler</source>
          <target state="translated">Obtener el compilador Kotlin/Native</target>
        </trans-unit>
        <trans-unit id="cdf71ecbbe212f441c04603a28909072a535e232" translate="yes" xml:space="preserve">
          <source>Obtaining member references from a class reference</source>
          <target state="translated">Obtención de referencias de miembros de una referencia de clase</target>
        </trans-unit>
        <trans-unit id="df8298dcee7334200280003820f9875dbf3c187b" translate="yes" xml:space="preserve">
          <source>Obtaining the Compiler</source>
          <target state="translated">Obtención del compilador</target>
        </trans-unit>
        <trans-unit id="b10db2a36e46741d4da85b74ece4b6f72fb9bfd8" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;KClass&lt;/code&gt; instance for the given constructor reference.</source>
          <target state="translated">Obtiene una instancia de &lt;code&gt;KClass&lt;/code&gt; para la referencia de constructor dada.</target>
        </trans-unit>
        <trans-unit id="9910159f8fee624aa4548124f031d4745a86c889" translate="yes" xml:space="preserve">
          <source>Obtains a constructor reference for the given &lt;code&gt;KClass&lt;/code&gt;.</source>
          <target state="translated">Obtiene una referencia de constructor para la &lt;code&gt;KClass&lt;/code&gt; dada .</target>
        </trans-unit>
        <trans-unit id="0219b4a8ea1da937bc70be9c1ab95184f21fc8c4" translate="yes" xml:space="preserve">
          <source>Obtains the current continuation instance inside suspend functions and either suspends currently running coroutine or returns result immediately without suspension.</source>
          <target state="translated">Obtiene la instancia de continuación actual dentro de las funciones de suspensión y o bien suspende la rutina actual o devuelve el resultado inmediatamente sin suspensión.</target>
        </trans-unit>
        <trans-unit id="646fc575bcb6c35847d73d3b2dd2cc5db56f01df" translate="yes" xml:space="preserve">
          <source>Obtains the current continuation instance inside suspend functions and suspends currently running coroutine.</source>
          <target state="translated">Obtiene la instancia de continuación actual dentro de las funciones de suspensión y suspende la cortinilla que se está ejecutando actualmente.</target>
        </trans-unit>
        <trans-unit id="dedd1425a40b177d169a6eb17080f5f8210d2fe7" translate="yes" xml:space="preserve">
          <source>Obtains the current continuation instance inside suspend functions and suspends the currently running coroutine.</source>
          <target state="translated">Obtiene la instancia de continuación actual dentro de las funciones de suspensión y suspende la cortinilla que se está ejecutando actualmente.</target>
        </trans-unit>
        <trans-unit id="0e481b647fccdeaa073311d1f3e53a76a5713079" translate="yes" xml:space="preserve">
          <source>Of course, there are use cases, where we need to pass a struct as a value to one call, and then, to pass the same struct as a reference to another call. This is possible in Kotlin/Native too. A &lt;code&gt;NativePlacement&lt;/code&gt; will be needed here.</source>
          <target state="translated">Por supuesto, hay casos de uso en los que necesitamos pasar una estructura como valor a una llamada y luego pasar la misma estructura como referencia a otra llamada. Esto tambi&amp;eacute;n es posible en Kotlin / Native. Se &lt;code&gt;NativePlacement&lt;/code&gt; un NativePlacement aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="31883564163ba418ee2d22f8e75f951da14db61c" translate="yes" xml:space="preserve">
          <source>Of course, this function makes sense for any &lt;code&gt;MutableList&amp;lt;T&amp;gt;&lt;/code&gt;, and we can make it generic:</source>
          <target state="translated">Por supuesto, esta funci&amp;oacute;n tiene sentido para cualquier &lt;code&gt;MutableList&amp;lt;T&amp;gt;&lt;/code&gt; , y podemos hacerla gen&amp;eacute;rica:</target>
        </trans-unit>
        <trans-unit id="a8b4afe53634485a00aaaa6addcb6e74df14c763" translate="yes" xml:space="preserve">
          <source>Of course, this is not a complete list of how you can use Kotlin/JS to your advantage, but merely a selection of cherry-picked cases. We invite you to experiment with combinations of these use cases, and find out what works best for your project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fad7001a3bd3884c94e7702bc3df04daa71091" translate="yes" xml:space="preserve">
          <source>Of course, you can use both &lt;code&gt;kotlin-allopen&lt;/code&gt; and &lt;code&gt;kotlin-spring&lt;/code&gt; in the same project.</source>
          <target state="translated">Por supuesto, puede usar &lt;code&gt;kotlin-allopen&lt;/code&gt; y &lt;code&gt;kotlin-spring&lt;/code&gt; en el mismo proyecto.</target>
        </trans-unit>
        <trans-unit id="42c11258f0fc4616029dfe363fc90cedc10dac00" translate="yes" xml:space="preserve">
          <source>Often C APIs allow passing some user data to callbacks. Such data is usually provided by the user when configuring the callback. It is passed to some C function (or written to the struct) as e.g. &lt;code&gt;void*&lt;/code&gt;. However, references to Kotlin objects can't be directly passed to C. So they require wrapping before configuring the callback and then unwrapping in the callback itself, to safely swim from Kotlin to Kotlin through the C world. Such wrapping is possible with &lt;code&gt;StableRef&lt;/code&gt; class.</source>
          <target state="translated">A menudo, las API de C permiten pasar algunos datos del usuario a las devoluciones de llamada. Estos datos suelen ser proporcionados por el usuario al configurar la devoluci&amp;oacute;n de llamada. Se pasa a alguna funci&amp;oacute;n de C (o se escribe en la estructura) como, por ejemplo, &lt;code&gt;void*&lt;/code&gt; . Sin embargo, las referencias a los objetos de Kotlin no se pueden pasar directamente a C. Por lo tanto, requieren un ajuste antes de configurar la devoluci&amp;oacute;n de llamada y luego desenvolver la devoluci&amp;oacute;n de llamada en s&amp;iacute;, para nadar de forma segura desde Kotlin a Kotlin a trav&amp;eacute;s del mundo C. Tal envoltura es posible con la clase &lt;code&gt;StableRef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="242f4c07d8050ddde5e50538c080e4ec4486413c" translate="yes" xml:space="preserve">
          <source>Often it's necessary to specify target-specific linker options for a Kotlin/Native binary using an interop. It can be done using the &lt;code&gt;target&lt;/code&gt; script block:</source>
          <target state="translated">A menudo es necesario especificar opciones de enlazador espec&amp;iacute;ficas de destino para un binario Kotlin / Native usando una interoperabilidad. Se puede hacer usando el bloque de script de &lt;code&gt;target&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="954df0a6263002ad270cb3cbc1c777c4a6fac8a1" translate="yes" xml:space="preserve">
          <source>Often it's necessary to specify target-specific linker options for a binary which uses a native library. It can by done using the &lt;code&gt;linkerOpts&lt;/code&gt; property of the binary. See the &lt;a href=&quot;#configuring-binaries&quot;&gt;Configuring binaries&lt;/a&gt; section for details.</source>
          <target state="translated">A menudo es necesario especificar opciones de enlazador espec&amp;iacute;ficas de destino para un binario que usa una biblioteca nativa. Puede hacerlo usando la propiedad &lt;code&gt;linkerOpts&lt;/code&gt; del binario. Consulte la secci&amp;oacute;n &lt;a href=&quot;#configuring-binaries&quot;&gt;Configuraci&amp;oacute;n de binarios&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="17450dcb9110eb38f3fe2d512c09098b5921aef0" translate="yes" xml:space="preserve">
          <source>Older compilers reject binaries that rely on new features (e.g. a 1.0 compiler rejects binaries that use coroutines).</source>
          <target state="translated">Los compiladores más antiguos rechazan los binarios que se basan en nuevas características (por ejemplo,un compilador 1.0 rechaza los binarios que utilizan corutinas).</target>
        </trans-unit>
        <trans-unit id="622d524446394c09abc4f2559c91821dbd352982" translate="yes" xml:space="preserve">
          <source>Omit semicolons whenever possible.</source>
          <target state="translated">Omite los punto y coma siempre que sea posible.</target>
        </trans-unit>
        <trans-unit id="902eb259efe55ed5caa3e21ba3397c994cd51091" translate="yes" xml:space="preserve">
          <source>On Apple platforms &lt;code&gt;objc&lt;/code&gt; library is provided for interoperability with &lt;a href=&quot;https://en.wikipedia.org/wiki/Objective-C&quot;&gt;Objective-C&lt;/a&gt;.</source>
          <target state="translated">En las plataformas de Apple, la biblioteca &lt;code&gt;objc&lt;/code&gt; se proporciona para la interoperabilidad con &lt;a href=&quot;https://en.wikipedia.org/wiki/Objective-C&quot;&gt;Objective-C&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3a12a3cf1289b0209f29a4a3a5bf9dabfcdb8788" translate="yes" xml:space="preserve">
          <source>On GitHub</source>
          <target state="translated">En GitHub</target>
        </trans-unit>
        <trans-unit id="0ff6abe6225db6537cb9fcfeabeeb790444677e0" translate="yes" xml:space="preserve">
          <source>On JS we will use the native &lt;a href=&quot;https://nodejs.org/docs/latest/api/buffer.html&quot;&gt;Buffer&lt;/a&gt; API and on Kotlin/Native we will write our own implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf6f3a6941945b11aa9a5fdede4394de03de479" translate="yes" xml:space="preserve">
          <source>On JVM implementation will use &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Base64.html&quot;&gt;&lt;code&gt;java.util.Base64&lt;/code&gt;&lt;/a&gt; which is known to be extremely efficient because JVM is aware of this particular class and compiles it in a special way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ab16d7d10cfcca8fa016bc8b366c04e76c5016" translate="yes" xml:space="preserve">
          <source>On JVM it is possible to redefine global exception handler for all coroutines by registering &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html&quot;&gt;CoroutineExceptionHandler&lt;/a&gt; via &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/ServiceLoader.html&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;. Global exception handler is similar to &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#setDefaultUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)&quot;&gt;&lt;code&gt;Thread.defaultUncaughtExceptionHandler&lt;/code&gt;&lt;/a&gt; which is used when no more specific handlers are registered. On Android, &lt;code&gt;uncaughtExceptionPreHandler&lt;/code&gt; is installed as a global coroutine exception handler.</source>
          <target state="translated">En JVM es posible redefinir el manejador de excepciones global para todas las corrutinas registrando &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html&quot;&gt;CoroutineExceptionHandler a&lt;/a&gt; trav&amp;eacute;s de &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/ServiceLoader.html&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; . El manejador de excepciones global es similar a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#setDefaultUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)&quot;&gt; &lt;code&gt;Thread.defaultUncaughtExceptionHandler&lt;/code&gt; &lt;/a&gt; que se usa cuando no se registran manejadores m&amp;aacute;s espec&amp;iacute;ficos. En Android, &lt;code&gt;uncaughtExceptionPreHandler&lt;/code&gt; se instala como un controlador de excepciones de corrutina global.</target>
        </trans-unit>
        <trans-unit id="52a2cc9b4e5cfa91fe617932ce29f7d004cf9460" translate="yes" xml:space="preserve">
          <source>On JVM the returned generator is NOT thread-safe. Do not invoke it from multiple threads without proper synchronization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d634a94c081c286c31c7efa035cd25a12a05ea49" translate="yes" xml:space="preserve">
          <source>On JVM this generator is thread-safe, its methods can be invoked from multiple threads.</source>
          <target state="translated">En la JVM este generador es seguro para los hilos,sus métodos pueden ser invocados desde múltiples hilos.</target>
        </trans-unit>
        <trans-unit id="82b7124cbe78a1bd0ee0229af53226a5b9d9303c" translate="yes" xml:space="preserve">
          <source>On Linux we call a similar command:</source>
          <target state="translated">En Linux llamamos a un comando similar:</target>
        </trans-unit>
        <trans-unit id="debaeb12f7add41593464f7eef76b63e195de057" translate="yes" xml:space="preserve">
          <source>On Windows, Dynamic libraries are included either via a generated static library wrapper or with manual code, which deals with the &lt;a href=&quot;https://docs.microsoft.com/en-gb/windows/win32/api/libloaderapi/nf-libloaderapi-loadlibrarya&quot;&gt;LoadLibrary&lt;/a&gt; or similar Win32API functions. We will follow the first option and generate the static wrapper library for the &lt;code&gt;libnative.dll&lt;/code&gt; on our own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32995a2978fac4fc27ca1ef6f69f7fd0261ff6b" translate="yes" xml:space="preserve">
          <source>On Windows, Dynamic libraries are included either via a generated static library wrapper or with manual code, which deals with the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms684175.aspx&quot;&gt;LoadLibrary&lt;/a&gt; or similar Win32API functions. We will follow the first option and generate the static wrapper library for the &lt;code&gt;libnative.dll&lt;/code&gt; on our own.</source>
          <target state="translated">En Windows, las bibliotecas din&amp;aacute;micas se incluyen a trav&amp;eacute;s de un contenedor de biblioteca est&amp;aacute;tica generado o con c&amp;oacute;digo manual, que se ocupa de &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms684175.aspx&quot;&gt;LoadLibrary&lt;/a&gt; o funciones similares de Win32API. Seguiremos la primera opci&amp;oacute;n y generaremos la biblioteca contenedora est&amp;aacute;tica para &lt;code&gt;libnative.dll&lt;/code&gt; por nuestra cuenta.</target>
        </trans-unit>
        <trans-unit id="215b62ee2a4bb5fa218d3c640f454cdd3fd9a459" translate="yes" xml:space="preserve">
          <source>On a &lt;code&gt;dynamic&lt;/code&gt; variable, you can call &lt;strong&gt;any&lt;/strong&gt; property or function, with any parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7653dc191105be976f3e4142a119bd4841c071b" translate="yes" xml:space="preserve">
          <source>On compiling, Gradle will produce the output of our application, which is by default placed under the &lt;code&gt;build/classes/main&lt;/code&gt; directory. This can be overridden using &lt;a href=&quot;#configuring-compiler-options&quot;&gt;the compiler options&lt;/a&gt;.</source>
          <target state="translated">Al compilar, Gradle producir&amp;aacute; la salida de nuestra aplicaci&amp;oacute;n, que se encuentra por defecto en el directorio &lt;code&gt;build/classes/main&lt;/code&gt; . Esto se puede anular utilizando &lt;a href=&quot;#configuring-compiler-options&quot;&gt;las opciones del compilador&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c14acaa8726202e56fd6764b8d4c4f4bf976a344" translate="yes" xml:space="preserve">
          <source>On compiling, Maven will produce the following output</source>
          <target state="translated">En la compilación,Maven producirá el siguiente resultado</target>
        </trans-unit>
        <trans-unit id="605e2cebf9185d39a487f4db48ecd6fb230665c8" translate="yes" xml:space="preserve">
          <source>On empty collections, &lt;code&gt;random()&lt;/code&gt; throws an exception. To receive &lt;code&gt;null&lt;/code&gt; instead, use &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/random-or-null&quot;&gt;&lt;code&gt;randomOrNull()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ef87d83192afbe39e72a5625c36f86574a1e36" translate="yes" xml:space="preserve">
          <source>On first start, the &lt;code&gt;kotlin.js&lt;/code&gt; Gradle plugin will download all required dependencies to get us up and running. After the build is completed, the program is executed, and we can see any logging output in the terminal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2882a4f2583407f0619da2020ec98bec3d44466d" translate="yes" xml:space="preserve">
          <source>On macOS 10.13 with Xcode, we compile the C code and link it with the dynamic library with the following command:</source>
          <target state="translated">En macOS 10.13 con Xcode,compilamos el código C y lo enlazamos con la biblioteca dinámica con el siguiente comando:</target>
        </trans-unit>
        <trans-unit id="c0b7123ffcc68bc8d459e2a35e03bf6cf58b317b" translate="yes" xml:space="preserve">
          <source>On the JS platform, Kotlin 1.4.0 provides the following improvements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29573262d66dff209bb25d8ca0d7651c0e4d12be" translate="yes" xml:space="preserve">
          <source>On the JVM platform, standard library contains extensions for reflection classes that provide a mapping to and from Java reflection objects (see package &lt;code&gt;kotlin.reflect.jvm&lt;/code&gt;). For example, to find a backing field or a Java method that serves as a getter for a Kotlin property, you can say something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99e2927eb300e8d0d8fcf2adae0bb05f7e1dd48" translate="yes" xml:space="preserve">
          <source>On the JVM platform, the runtime component required for using the reflection features is distributed as a separate artifact &lt;code&gt;kotlin-reflect.jar&lt;/code&gt; in the Kotlin compiler distribution. This is done to reduce the required size of the runtime library for applications that do not use reflection features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4ddd201d36fd87940a13588d6e11985482252b" translate="yes" xml:space="preserve">
          <source>On the JVM side, the main build tools include &lt;a href=&quot;using-gradle&quot;&gt;Gradle&lt;/a&gt;, &lt;a href=&quot;using-maven&quot;&gt;Maven&lt;/a&gt;, &lt;a href=&quot;using-ant&quot;&gt;Ant&lt;/a&gt;, and &lt;a href=&quot;http://beust.com/kobalt/home/index.html&quot;&gt;Kobalt&lt;/a&gt;. There are also some build tools available that target client-side JavaScript.</source>
          <target state="translated">En el lado de JVM, las principales herramientas de compilaci&amp;oacute;n incluyen &lt;a href=&quot;using-gradle&quot;&gt;Gradle&lt;/a&gt; , &lt;a href=&quot;using-maven&quot;&gt;Maven&lt;/a&gt; , &lt;a href=&quot;using-ant&quot;&gt;Ant&lt;/a&gt; y &lt;a href=&quot;http://beust.com/kobalt/home/index.html&quot;&gt;Kobalt&lt;/a&gt; . Tambi&amp;eacute;n hay algunas herramientas de compilaci&amp;oacute;n disponibles que apuntan a JavaScript del lado del cliente.</target>
        </trans-unit>
        <trans-unit id="8a846654c5fb7b58771a6c8aa68e2bb8f0431b17" translate="yes" xml:space="preserve">
          <source>On the JVM, if the generated class needs to have a parameterless constructor, default values for all properties have to be specified (see &lt;a href=&quot;classes#constructors&quot;&gt;Constructors&lt;/a&gt;).</source>
          <target state="translated">En la JVM, si la clase generada necesita tener un constructor sin par&amp;aacute;metros, se deben especificar los valores predeterminados para todas las propiedades (consulte &lt;a href=&quot;classes#constructors&quot;&gt;Constructores&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="22f3441381be355a57b0344800020b03a2e7fba9" translate="yes" xml:space="preserve">
          <source>On the JVM, non-nullable values of this type are represented as values of the primitive type &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">En la JVM, los valores que no aceptan valores NULL de este tipo se representan como valores del tipo primitivo &lt;code&gt;char&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c36ad8bfe3e9b420b17609f7d80f8fe5d46e556b" translate="yes" xml:space="preserve">
          <source>On the JVM, one could provide an implementation that writes the log to the standard output:</source>
          <target state="translated">En el JVM,uno podría proporcionar una implementación que escribe el registro en la salida estándar:</target>
        </trans-unit>
        <trans-unit id="37c721a8e1ab899d231ec42baf253266e008d200" translate="yes" xml:space="preserve">
          <source>On the JVM, the &lt;a href=&quot;basic-types#arrays&quot;&gt;array types&lt;/a&gt; (&lt;code&gt;Array&amp;lt;Foo&amp;gt;&lt;/code&gt;) retain the information about the erased type of their elements, and the type casts to an array type are partially checked: the nullability and actual type arguments of the elements type are still erased. For example, the cast &lt;code&gt;foo as Array&amp;lt;List&amp;lt;String&amp;gt;?&amp;gt;&lt;/code&gt; will succeed if &lt;code&gt;foo&lt;/code&gt; is an array holding any &lt;code&gt;List&amp;lt;*&amp;gt;&lt;/code&gt;, nullable or not.</source>
          <target state="translated">En la JVM, los &lt;a href=&quot;basic-types#arrays&quot;&gt;tipos de matriz&lt;/a&gt; ( &lt;code&gt;Array&amp;lt;Foo&amp;gt;&lt;/code&gt; ) retienen la informaci&amp;oacute;n sobre el tipo borrado de sus elementos, y las conversiones de tipo a un tipo de matriz se verifican parcialmente: la nulabilidad y los argumentos de tipo real del tipo de elementos a&amp;uacute;n se borran. Por ejemplo, el lanzamiento de &lt;code&gt;foo as Array&amp;lt;List&amp;lt;String&amp;gt;?&amp;gt;&lt;/code&gt; Tendr&amp;aacute; &amp;eacute;xito si &lt;code&gt;foo&lt;/code&gt; es un arreglo que contiene cualquier &lt;code&gt;List&amp;lt;*&amp;gt;&lt;/code&gt; , anulable o no.</target>
        </trans-unit>
        <trans-unit id="5506431e2bb120557c874e7652f1a65950568290" translate="yes" xml:space="preserve">
          <source>On the Java platform, numbers are physically stored as JVM primitive types, unless we need a nullable number reference (e.g. &lt;code&gt;Int?&lt;/code&gt;) or generics are involved. In the latter cases numbers are boxed.</source>
          <target state="translated">En la plataforma Java, los n&amp;uacute;meros se almacenan f&amp;iacute;sicamente como tipos primitivos de JVM, a menos que necesitemos una referencia num&amp;eacute;rica anulable (por ejemplo, &lt;code&gt;Int?&lt;/code&gt; ) O est&amp;eacute;n involucrados gen&amp;eacute;ricos. En los &amp;uacute;ltimos casos, los n&amp;uacute;meros est&amp;aacute;n encuadrados.</target>
        </trans-unit>
        <trans-unit id="fc1cc156e617b185ed0f40e773e41bff1f85a104" translate="yes" xml:space="preserve">
          <source>On the Java platform, standard library contains extensions for reflection classes that provide a mapping to and from Java reflection objects (see package &lt;code&gt;kotlin.reflect.jvm&lt;/code&gt;). For example, to find a backing field or a Java method that serves as a getter for a Kotlin property, you can say something like this:</source>
          <target state="translated">En la plataforma Java, la biblioteca est&amp;aacute;ndar contiene extensiones para clases de reflexi&amp;oacute;n que proporcionan un mapeo desde y hacia los objetos de reflexi&amp;oacute;n de Java (consulte el paquete &lt;code&gt;kotlin.reflect.jvm&lt;/code&gt; ). Por ejemplo, para encontrar un campo de respaldo o un m&amp;eacute;todo Java que sirva como captador para una propiedad de Kotlin, puede decir algo como esto:</target>
        </trans-unit>
        <trans-unit id="2a19f51c47052a4b52d4d3a45688012ff83885d4" translate="yes" xml:space="preserve">
          <source>On the Java platform, the runtime component required for using the reflection features is distributed as a separate JAR file (&lt;code&gt;kotlin-reflect.jar&lt;/code&gt;). This is done to reduce the required size of the runtime library for applications that do not use reflection features. If you do use reflection, please make sure that the .jar file is added to the classpath of your project.</source>
          <target state="translated">En la plataforma Java, el componente de tiempo de ejecuci&amp;oacute;n necesario para utilizar las funciones de reflexi&amp;oacute;n se distribuye como un archivo JAR independiente ( &lt;code&gt;kotlin-reflect.jar&lt;/code&gt; ). Esto se hace para reducir el tama&amp;ntilde;o requerido de la biblioteca en tiempo de ejecuci&amp;oacute;n para aplicaciones que no usan funciones de reflexi&amp;oacute;n. Si usa la reflexi&amp;oacute;n, aseg&amp;uacute;rese de que el archivo .jar se agregue a la ruta de clase de su proyecto.</target>
        </trans-unit>
        <trans-unit id="5d535cc279349339edec2b28152e5485a7cce0a0" translate="yes" xml:space="preserve">
          <source>On the JavaScript platform this code will be compiled &quot;as is&quot;: &lt;code&gt;dyn.whatever(1)&lt;/code&gt; in Kotlin becomes &lt;code&gt;dyn.whatever(1)&lt;/code&gt; in the generated JavaScript code.</source>
          <target state="translated">En la plataforma JavaScript, este c&amp;oacute;digo se compilar&amp;aacute; &quot;tal cual&quot;: &lt;code&gt;dyn.whatever(1)&lt;/code&gt; en Kotlin se convierte en &lt;code&gt;dyn.whatever(1)&lt;/code&gt; en el c&amp;oacute;digo JavaScript generado.</target>
        </trans-unit>
        <trans-unit id="5b66a81be58a9639896f5746359a7ffeeb1b2933" translate="yes" xml:space="preserve">
          <source>On the JavaScript platform, only class references are currently supported. &lt;a href=&quot;js-reflection&quot;&gt;Learn more about reflection in Kotlin/JS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7710454ff099464789e309cce04c505a88cd2a29" translate="yes" xml:space="preserve">
          <source>On the generic Native platform we don't have the luxury to use someone else's implementation, so we will have to write one ourselves. I won't explain the implementation details here, but it's pretty straightforward and follows Base64 format description without any optimizations:</source>
          <target state="translated">En la plataforma genérica de los nativos no podemos darnos el lujo de usar la implementación de otro,así que tendremos que escribir una nosotros mismos.No explicaré los detalles de la implementación aquí,pero es bastante sencilla y sigue la descripción del formato Base64 sin ninguna optimización:</target>
        </trans-unit>
        <trans-unit id="9c50e56d32902002043c169b5988a0483c089147" translate="yes" xml:space="preserve">
          <source>On the generic Native platform we don't have the luxury to use someone else's implementation, so we will have to write one ourselves. It's pretty straightforward and follows Base64 format description without any optimizations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc341284a94c1ff306b2072d23ec90c8ced7deca" translate="yes" xml:space="preserve">
          <source>On the one hand, to achieve this, the compiler has to provide certain ABI stability guarantees under the constraints of separate compilation. This is why every change in the language is examined from the point of view of binary compatibility.</source>
          <target state="translated">Por un lado,para lograrlo,el compilador tiene que proporcionar ciertas garantías de estabilidad de la ABI bajo las limitaciones de la compilación separada.Por ello,cada cambio de idioma se examina desde el punto de vista de la compatibilidad binaria.</target>
        </trans-unit>
        <trans-unit id="000c75f582537e6c16176741f98b45d2d110bbb3" translate="yes" xml:space="preserve">
          <source>On the other hand, Kotlin/Native supports interoperability to use existing libraries directly from Kotlin/Native:</source>
          <target state="translated">Por otro lado,Kotlin/Native apoya la interoperabilidad para usar las bibliotecas existentes directamente desde Kotlin/Native:</target>
        </trans-unit>
        <trans-unit id="60f0f1b25c5dff1f04424f892492e20e71e1b66d" translate="yes" xml:space="preserve">
          <source>On the other hand, a lot depends on the library authors being careful about which changes are safe to make. Thus it's very important that library authors understand how source changes affect compatibility and follow certain best practices to keep both APIs and ABIs of their libraries stable. Here are some assumptions that we make when considering language changes from the library evolution standpoint:</source>
          <target state="translated">Por otro lado,mucho depende de que los autores de la biblioteca sean cuidadosos sobre qué cambios son seguros de hacer.Por lo tanto,es muy importante que los autores de las bibliotecas comprendan cómo los cambios en el código fuente afectan a la compatibilidad y sigan ciertas prácticas óptimas para mantener tanto las API como las ABI de sus bibliotecas estables.A continuación se presentan algunas de las suposiciones que hacemos al considerar los cambios en el lenguaje desde el punto de vista de la evolución de las bibliotecas:</target>
        </trans-unit>
        <trans-unit id="24a6b58cfe3e05a456f0e657a9154e03adab1e36" translate="yes" xml:space="preserve">
          <source>On the other hand, if we don't need wildcards where they are generated, we can use &lt;code&gt;@JvmSuppressWildcards&lt;/code&gt;:</source>
          <target state="translated">Por otro lado, si no necesitamos comodines donde se generan, podemos usar &lt;code&gt;@JvmSuppressWildcards&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9fe83b5bff0a5d4a34dc3a1fd60b88652cfd8998" translate="yes" xml:space="preserve">
          <source>On the other hand, infix function call's precedence is higher than that of the boolean operators &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt;, &lt;code&gt;is&lt;/code&gt;- and &lt;code&gt;in&lt;/code&gt;-checks, and some other operators. These expressions are equivalent as well:</source>
          <target state="translated">Por otro lado, la precedencia de la llamada a la funci&amp;oacute;n infija es mayor que la de los operadores booleanos &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; y &lt;code&gt;||&lt;/code&gt; , &lt;code&gt;is&lt;/code&gt; - y &lt;code&gt;in&lt;/code&gt; cheques, y algunos otros operadores. Estas expresiones tambi&amp;eacute;n son equivalentes:</target>
        </trans-unit>
        <trans-unit id="4b4a432df45f297429fbc3cee76b5f8d7f65a8e2" translate="yes" xml:space="preserve">
          <source>On the other hand, it preserves equality:</source>
          <target state="translated">Por otro lado,preserva la igualdad:</target>
        </trans-unit>
        <trans-unit id="7e3c3918cd7bead7b21ab07c18b704638f85c9a4" translate="yes" xml:space="preserve">
          <source>On the other hand, the platform libs in the distribution are merely just wrappers and bindings to the native libraries. That means the native libraries themselves (&lt;code&gt;.so&lt;/code&gt;, &lt;code&gt;.a&lt;/code&gt;, &lt;code&gt;.dylib&lt;/code&gt;, &lt;code&gt;.dll&lt;/code&gt; etc) should be installed on the machine.</source>
          <target state="translated">Por otro lado, las bibliotecas de plataforma en la distribuci&amp;oacute;n son simplemente envoltorios y enlaces a las bibliotecas nativas. Eso significa que las propias bibliotecas nativas ( &lt;code&gt;.so&lt;/code&gt; , &lt;code&gt;.a&lt;/code&gt; , &lt;code&gt;.dylib&lt;/code&gt; , &lt;code&gt;.dll&lt;/code&gt; , etc.) deben instalarse en la m&amp;aacute;quina.</target>
        </trans-unit>
        <trans-unit id="a4bdeb370dbf1cefb8a423a42914a31fcb4ec6d9" translate="yes" xml:space="preserve">
          <source>On the other side, by default, a dispatcher for the outer &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScope&lt;/a&gt; is inherited. The default dispatcher for &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/run-blocking.html&quot;&gt;runBlocking&lt;/a&gt; coroutine, in particular, is confined to the invoker thread, so inheriting it has the effect of confining execution to this thread with a predictable FIFO scheduling.</source>
          <target state="translated">Por otro lado, de forma predeterminada, se hereda un distribuidor para el &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScope&lt;/a&gt; externo . El despachador predeterminado para la &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/run-blocking.html&quot;&gt;corrutina&lt;/a&gt; runBlocking, en particular, est&amp;aacute; confinado al subproceso invocador, por lo que heredarlo tiene el efecto de limitar la ejecuci&amp;oacute;n a este subproceso con una programaci&amp;oacute;n FIFO predecible.</target>
        </trans-unit>
        <trans-unit id="425d42a58936f61d420710d94f729d1304fe83b3" translate="yes" xml:space="preserve">
          <source>On the other side, the dispatcher is inherited from the outer &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScope&lt;/a&gt; by default. The default dispatcher for the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/run-blocking.html&quot;&gt;runBlocking&lt;/a&gt; coroutine, in particular, is confined to the invoker thread, so inheriting it has the effect of confining execution to this thread with predictable FIFO scheduling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40268462bf212f39b8385da7e84960f17dde7ce2" translate="yes" xml:space="preserve">
          <source>On this page, you'll learn how the modifiers apply to different types of declaring scopes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0097b825a22364e0ed5d52b543c2c2d7417ac42f" translate="yes" xml:space="preserve">
          <source>OnErrorAction</source>
          <target state="translated">OnErrorAction</target>
        </trans-unit>
        <trans-unit id="7f9a8be0ca558f3593cb5b5f3b700936ecc5c2c6" translate="yes" xml:space="preserve">
          <source>Once a change has been detected, the program will be recompiled automatically. If we still have the page open in our browser, the development server will trigger an automatic reload of the page, and our changes will become visible. This is thanks to the integrated &lt;code&gt;webpack-dev-server&lt;/code&gt; that is managed by the Kotlin/JS Gradle plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3390fd9bdb1b1f1af829e06104c3364aeb4907" translate="yes" xml:space="preserve">
          <source>Once a worker is started with the &lt;code&gt;Worker.start&lt;/code&gt; function call, it can be addressed with its own unique integer worker id. Other workers, or non-worker concurrency primitives, such as OS threads, can send a message to the worker with the &lt;code&gt;execute&lt;/code&gt; call.</source>
          <target state="translated">Una vez que un trabajador se inicia con la &lt;code&gt;Worker.start&lt;/code&gt; funci&amp;oacute;n Worker.start , se puede direccionar con su propio ID de trabajador entero &amp;uacute;nico. Otros trabajadores, o primitivas de concurrencia que no son trabajadores, como los subprocesos del sistema operativo, pueden enviar un mensaje al trabajador con la llamada de &lt;code&gt;execute&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e481522db976a28542f3f9fe77bb01d37901e83" translate="yes" xml:space="preserve">
          <source>Once an npm dependency is installed, you can use its API in your code as described in &lt;a href=&quot;js-interop&quot;&gt;Calling JS from Kotlin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df99b41ffc8e8869530eb6fc788d462a8f350ad0" translate="yes" xml:space="preserve">
          <source>Once that's done, we simply right-click on our &lt;code&gt;index.html&lt;/code&gt; file and select the Debug option. This launches Chrome and then stops at the breakpoint defined in our code inside IntelliJ IDEA, from where we can evaluate expressions, step through code, etc.</source>
          <target state="translated">Una vez hecho esto, simplemente hacemos clic derecho en nuestro archivo &lt;code&gt;index.html&lt;/code&gt; y seleccionamos la opci&amp;oacute;n Depurar. Esto inicia Chrome y luego se detiene en el punto de interrupci&amp;oacute;n definido en nuestro c&amp;oacute;digo dentro de IntelliJ IDEA, desde donde podemos evaluar expresiones, recorrer el c&amp;oacute;digo, etc.</target>
        </trans-unit>
        <trans-unit id="3775c8ff21ba04eef02e13e8e82e7fea59a82c9d" translate="yes" xml:space="preserve">
          <source>Once the IDE has finished creating the new project, we should be left with the following layout</source>
          <target state="translated">Una vez que el IDE ha terminado de crear el nuevo proyecto,debemos quedarnos con el siguiente esquema</target>
        </trans-unit>
        <trans-unit id="55ab715ec8152dbd6deea698238c1c1c021ebbc8" translate="yes" xml:space="preserve">
          <source>Once the build of your project has succeeded, the &lt;code&gt;webpack-dev-server&lt;/code&gt; will automatically refresh the browser page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9769c12f9ad9598db953dee152f3b5b5ad3daf0" translate="yes" xml:space="preserve">
          <source>Once the code is ready, select a fragment you want a learner to fill in, invoke &lt;strong&gt;Add Answer Placeholder&lt;/strong&gt; command from the right-click menu and add the placeholder text and some hints to help the learner find the right solution:</source>
          <target state="translated">Una vez que el c&amp;oacute;digo est&amp;eacute; listo, seleccione un fragmento que desee que complete el alumno, invoque el comando Agregar marcador de posici&amp;oacute;n de &lt;strong&gt;respuesta&lt;/strong&gt; desde el men&amp;uacute; contextual y agregue el texto del marcador de posici&amp;oacute;n y algunas sugerencias para ayudar al alumno a encontrar la soluci&amp;oacute;n correcta:</target>
        </trans-unit>
        <trans-unit id="46c1b63ed4fbeaebfc1fd631405807b64e959941" translate="yes" xml:space="preserve">
          <source>Once the dependency is included, we can access the different interfaces provided to generate DOM. The code below will add a new &lt;code&gt;span&lt;/code&gt; tag with the text &lt;code&gt;Hello&lt;/code&gt; inside a &lt;code&gt;div&lt;/code&gt; on the &lt;code&gt;window.load&lt;/code&gt; event.</source>
          <target state="translated">Una vez incluida la dependencia, podemos acceder a las diferentes interfaces proporcionadas para generar DOM. El siguiente c&amp;oacute;digo agregar&amp;aacute; una nueva etiqueta de &lt;code&gt;span&lt;/code&gt; con el texto &lt;code&gt;Hello&lt;/code&gt; dentro de un &lt;code&gt;div&lt;/code&gt; en el evento &lt;code&gt;window.load&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3074b83a84de5c870a614e01c75e5967e4cd5caf" translate="yes" xml:space="preserve">
          <source>Once the dependency is included, we can access the different interfaces provided to generate our DOM. To render a headline, some text, and a link, the following snippet would be sufficient, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0142e56236eba7d0f9779ea0961db259aa8e0d" translate="yes" xml:space="preserve">
          <source>Once the file is created, add the &lt;code&gt;main&lt;/code&gt; function which is the entry point to a Kotlin application. IntelliJ IDEA offers a template to do this quickly. Just type &lt;em&gt;main&lt;/em&gt; and press tab.</source>
          <target state="translated">Una vez creado el archivo, agregue la funci&amp;oacute;n &lt;code&gt;main&lt;/code&gt; que es el punto de entrada a una aplicaci&amp;oacute;n de Kotlin. IntelliJ IDEA ofrece una plantilla para hacer esto r&amp;aacute;pidamente. Solo escribe &lt;em&gt;main&lt;/em&gt; y presiona tabulador.</target>
        </trans-unit>
        <trans-unit id="c73312381dcc07c6b7a625ba7ed9e57ac7440a0f" translate="yes" xml:space="preserve">
          <source>Once the plugin is installed and Eclipse is restarted, make sure the plugin is installed correctly: open the &lt;strong&gt;Kotlin perspective&lt;/strong&gt; in the menu &lt;strong&gt;Window | Open Perspective | Other&amp;hellip;&lt;/strong&gt;</source>
          <target state="translated">Una vez que el complemento est&amp;aacute; instalado y Eclipse se reinicia, aseg&amp;uacute;rese de que el complemento est&amp;eacute; instalado correctamente: abra la &lt;strong&gt;perspectiva de Kotlin&lt;/strong&gt; en el men&amp;uacute; &lt;strong&gt;Ventana | Perspectiva abierta | Otro&amp;hellip;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea14fe002f3a94c4720dab1f2d5b5523e7e10653" translate="yes" xml:space="preserve">
          <source>Once we do that, we can start the app by running the following command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0796366ca4be24e6c9cb8aea2efb2652251fe7de" translate="yes" xml:space="preserve">
          <source>Once we do that, we can then invoke the corresponding extensions, which are properties named after the views in the XML file. For example, for this view:</source>
          <target state="translated">Una vez hecho esto,podemos invocar las extensiones correspondientes,que son propiedades con nombre de las vistas en el archivo XML.Por ejemplo,para esta vista:</target>
        </trans-unit>
        <trans-unit id="1c271397461aeb676abb2a2efff251e0af0e8c64" translate="yes" xml:space="preserve">
          <source>Once we have the build script defined with the correct dependencies, we can now create a controller</source>
          <target state="translated">Una vez que tenemos el script de construcción definido con las dependencias correctas,podemos crear un controlador</target>
        </trans-unit>
        <trans-unit id="a08b600d20b04c79c7a79b722bf898a01cce7fce" translate="yes" xml:space="preserve">
          <source>Once we have the definition file ready, we can create project files and open the project in an IDE.</source>
          <target state="translated">Una vez que tengamos listo el archivo de definición,podemos crear archivos de proyecto y abrir el proyecto en un IDE.</target>
        </trans-unit>
        <trans-unit id="d8045dca300b9f4677fd2c5dc7702ace1a03cfe2" translate="yes" xml:space="preserve">
          <source>Once we have the file generated, we can simply include it in our project and use it:</source>
          <target state="translated">Una vez que tengamos el archivo generado,podemos simplemente incluirlo en nuestro proyecto y usarlo:</target>
        </trans-unit>
        <trans-unit id="bd56b1bd7445724ec0021ec14943c2a384d08186" translate="yes" xml:space="preserve">
          <source>Once we run the application (using this previous run configuration), and on successful deployment, we should be able to navigate to the browser with the correct url and see the response:</source>
          <target state="translated">Una vez que ejecutemos la aplicación (usando esta configuración de ejecución previa),y en un despliegue exitoso,deberíamos ser capaces de navegar al navegador con la url correcta y ver la respuesta:</target>
        </trans-unit>
        <trans-unit id="1b6604db47f0dce985d7de59d4f23c0c4c5c9cca" translate="yes" xml:space="preserve">
          <source>Once you complete the steps, Android Studio creates a project. The project already contains all the code and resources for building an application that can run on your Android device or an emulator.</source>
          <target state="translated">Una vez que se completan los pasos,el Estudio Android crea un proyecto.El proyecto ya contiene todo el código y los recursos para construir una aplicación que pueda ejecutarse en tu dispositivo Android o en un emulador.</target>
        </trans-unit>
        <trans-unit id="07c62572d32f4ddef7a4fab02344f0c5993a4073" translate="yes" xml:space="preserve">
          <source>Once you have IntelliJ IDEA installed, it's time to create your first Kotlin application.</source>
          <target state="translated">Una vez que tengas instalado el IntelliJ IDEA,es hora de crear tu primera aplicación Kotlin.</target>
        </trans-unit>
        <trans-unit id="57c7fbdcf305fcf640a6242dec4553b583c17b02" translate="yes" xml:space="preserve">
          <source>Once you have a source file, add the &lt;code&gt;main&lt;/code&gt; function - the entry point to a Kotlin application. You can simply type &lt;code&gt;main&lt;/code&gt; and invoke code completion by hitting &lt;code&gt;Ctrl + Space&lt;/code&gt;.</source>
          <target state="translated">Una vez que tenga un archivo fuente, agregue la funci&amp;oacute;n &lt;code&gt;main&lt;/code&gt; : el punto de entrada a una aplicaci&amp;oacute;n de Kotlin. Simplemente puede escribir &lt;code&gt;main&lt;/code&gt; e invocar la finalizaci&amp;oacute;n del c&amp;oacute;digo &lt;code&gt;Ctrl + Space&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fa3667af3dcf22f38f5a4f6cb956886314b65e3" translate="yes" xml:space="preserve">
          <source>Once you have created your first application, you can go to Kotlin hands-on labs and complete long-form tutorials on Kotlin/JS. They include sample projects, which can serve as nice jumping-off points for your own projects, and contain useful snippets and patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca34f29092a5b2a45c212b38b4b70bf5e506a26f" translate="yes" xml:space="preserve">
          <source>Once you have created your first application, you can go to Kotlin hands-on labs and complete long-form tutorials on Kotlin/Native.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e85f75a1aece4509c955931a0b0a7c85d0dc463" translate="yes" xml:space="preserve">
          <source>Once you have finished writing your code in a scratch or a worksheet, click &lt;strong&gt;Run&lt;/strong&gt;. The execution results will appear in the lines opposite your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa63b1400c9ce7e7ad7fd702c1bdf8f5b62f244" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created this application, you can start to dive deeper into Kotlin syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463b5b7f2cc3df5cfb9db6a5d062203d573f4159" translate="yes" xml:space="preserve">
          <source>Once you've installed IntelliJ IDEA, it's time to create your first Kotlin application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a6706f9a5195749b89562afccc1b92e6fbb3a9" translate="yes" xml:space="preserve">
          <source>Once you've installed IntelliJ IDEA, it's time to create your first frontend application based on Kotlin/JS with React.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17939f0df56f8a8f1b07cbf026fcbc6c284de9b6" translate="yes" xml:space="preserve">
          <source>Once your experimental API graduates and is released in its final state, remove its marker annotation from declarations so that the clients can use it without restriction. However, you should leave the marker classes in modules so that the existing client code remains compatible. To let the API users update their modules accordingly (remove the markers from their code and recompile), mark the annotations as &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin/-deprecated/index&quot;&gt;&lt;code&gt;@Deprecated&lt;/code&gt;&lt;/a&gt; and provide the explanation in its message.</source>
          <target state="translated">Una vez que su API experimental se grad&amp;uacute;e y se publique en su estado final, elimine su anotaci&amp;oacute;n de marcador de las declaraciones para que los clientes puedan usarla sin restricciones. Sin embargo, debe dejar las clases de marcador en m&amp;oacute;dulos para que el c&amp;oacute;digo de cliente existente siga siendo compatible. Para permitir que los usuarios de la API actualicen sus m&amp;oacute;dulos en consecuencia (elimine los marcadores de su c&amp;oacute;digo y &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin/-deprecated/index&quot;&gt; &lt;code&gt;@Deprecated&lt;/code&gt; &lt;/a&gt; compilar), marque las anotaciones como @Deprecated y proporcione la explicaci&amp;oacute;n en su mensaje.</target>
        </trans-unit>
        <trans-unit id="0b14b7bec95fdea717ca2f09affb597a18bec820" translate="yes" xml:space="preserve">
          <source>Once your pre-stable API graduates and is released in a stable state, remove its opt-in requirement annotations from declarations. The clients will be able to use them without restriction. However, you should leave the annotation classes in modules so that the existing client code remains compatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2971b85ea49c26dcec5b2c744d22a818808e11" translate="yes" xml:space="preserve">
          <source>One can think of a coroutine as a light-weight thread. Like threads, coroutines can run in parallel, wait for each other and communicate. The biggest difference is that coroutines are very cheap, almost free: we can create thousands of them, and pay very little in terms of performance. True threads, on the other hand, are expensive to start and keep around. A thousand threads can be a serious challenge for a modern machine.</source>
          <target state="translated">Uno puede pensar en la corutina como un hilo ligero.Como los hilos,las cortinas pueden correr en paralelo,esperarse entre sí y comunicarse.La mayor diferencia es que los coroutines son muy baratos,casi gratis:podemos crear miles de ellos,y pagar muy poco en términos de rendimiento.Los hilos verdaderos,por otro lado,son caros para empezar y mantenerlos.Mil hilos pueden ser un serio desafío para una máquina moderna.</target>
        </trans-unit>
        <trans-unit id="ef394220529220df8824f487b3f420bc848dae8f" translate="yes" xml:space="preserve">
          <source>One common use case is storing the values of properties in a map. This comes up often in applications like parsing JSON or doing other &amp;ldquo;dynamic&amp;rdquo; things. In this case, you can use the map instance itself as the delegate for a delegated property.</source>
          <target state="translated">Un caso de uso com&amp;uacute;n es almacenar los valores de las propiedades en un mapa. Esto aparece a menudo en aplicaciones como analizar JSON o hacer otras cosas &quot;din&amp;aacute;micas&quot;. En este caso, puede utilizar la propia instancia del mapa como delegado de una propiedad delegada.</target>
        </trans-unit>
        <trans-unit id="295aff355ebc55ee584427ed710ab76e9197e01b" translate="yes" xml:space="preserve">
          <source>One element still represent one byte in the output data. This is the only way to create ImmutableBlob for now.</source>
          <target state="translated">Un elemento sigue representando un byte en los datos de salida.Esta es la única manera de crear ImmutableBlob por ahora.</target>
        </trans-unit>
        <trans-unit id="69552c7e67db21fed3933e5341eb7f8d6f1878a7" translate="yes" xml:space="preserve">
          <source>One has to remember that those definitions are given only for pure Kotlin. Compatibility of Kotlin code from the other languages perspective (e.g. from Java) is out of the scope of this document.</source>
          <target state="translated">Hay que recordar que esas definiciones se dan sólo para el Kotlin puro.La compatibilidad del código Kotlin desde la perspectiva de otros lenguajes (por ejemplo,de Java)está fuera del alcance de este documento.</target>
        </trans-unit>
        <trans-unit id="10295bca22700ae68c4bd22afa199c59a7bf9d2d" translate="yes" xml:space="preserve">
          <source>One might think that static typing would make it very impractical to make collection classes or any other class that needs to contain members whose types vary with each usage. Generics to the rescue: they allow you to specify a &quot;placeholder&quot; type in a class or function that must be filled in whenever the class or function is used. For example, a node in a linked list needs to contain data of some type that is not known when we write the class, so we introduce a &lt;em&gt;generic type parameter&lt;/em&gt;&lt;code&gt;T&lt;/code&gt; (they are conventionally given single-letter names):</source>
          <target state="translated">Se podr&amp;iacute;a pensar que la tipificaci&amp;oacute;n est&amp;aacute;tica har&amp;iacute;a muy poco pr&amp;aacute;ctico crear clases de colecci&amp;oacute;n o cualquier otra clase que necesite contener miembros cuyos tipos var&amp;iacute;en con cada uso. Gen&amp;eacute;ricos al rescate: te permiten especificar un tipo de &quot;marcador de posici&amp;oacute;n&quot; en una clase o funci&amp;oacute;n que se debe completar siempre que se utilice la clase o funci&amp;oacute;n. Por ejemplo, un nodo en una lista enlazada necesita contener datos de alg&amp;uacute;n tipo que no se conoce cuando escribimos la clase, as&amp;iacute; que introducimos un &lt;em&gt;par&amp;aacute;metro de tipo gen&amp;eacute;rico &lt;/em&gt; &lt;code&gt;T&lt;/code&gt; (convencionalmente se les da nombres de una sola letra):</target>
        </trans-unit>
        <trans-unit id="d91389670b253297bf40dd8c299f98764e30e6fa" translate="yes" xml:space="preserve">
          <source>One more way to create a sequence is by building it with a function that calculates its elements. To build a sequence based on a function, call &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/generate-sequence&quot;&gt;&lt;code&gt;generateSequence()&lt;/code&gt;&lt;/a&gt; with this function as an argument. Optionally, you can specify the first element as an explicit value or a result of a function call. The sequence generation stops when the provided function returns &lt;code&gt;null&lt;/code&gt;. So, the sequence in the example below is infinite.</source>
          <target state="translated">Una forma m&amp;aacute;s de crear una secuencia es construy&amp;eacute;ndola con una funci&amp;oacute;n que calcula sus elementos. Para construir una secuencia basada en una funci&amp;oacute;n, llame a &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/generate-sequence&quot;&gt; &lt;code&gt;generateSequence()&lt;/code&gt; &lt;/a&gt; con esta funci&amp;oacute;n como argumento. Opcionalmente, puede especificar el primer elemento como un valor expl&amp;iacute;cito o como resultado de una llamada de funci&amp;oacute;n. La generaci&amp;oacute;n de la secuencia se detiene cuando la funci&amp;oacute;n proporcionada devuelve un &lt;code&gt;null&lt;/code&gt; . Entonces, la secuencia en el siguiente ejemplo es infinita.</target>
        </trans-unit>
        <trans-unit id="fafa0cfeaea1b82981c57e5ae33aa6c2ac893b23" translate="yes" xml:space="preserve">
          <source>One of the benefits however of coroutines is that when it comes to the developer, writing non-blocking code is essentially the same as writing blocking code. The programming model in itself doesn't really change.</source>
          <target state="translated">Sin embargo,uno de los beneficios de las cortinas es que,en lo que respecta al desarrollador,escribir código no bloqueante es esencialmente lo mismo que escribir código bloqueante.El modelo de programación en sí mismo no cambia realmente.</target>
        </trans-unit>
        <trans-unit id="265251dce76905646b45b6f600aaf0f8ecf9a59f" translate="yes" xml:space="preserve">
          <source>One of the key capabilities of Kotlin's multiplatform code is a way for common code to depend on platform-specific declarations. In other languages, this can often be accomplished by building a set of interfaces in the common code and implementing these interfaces in platform-specific modules. However, this approach is not ideal in cases when you have a library on one of the platforms that implements the functionality you need, and you'd like to use the API of this library directly without extra wrappers. Also, it requires common declarations to be expressed as interfaces, which doesn't cover all possible cases.</source>
          <target state="translated">Una de las capacidades clave del código multiplataforma de Kotlin es una forma de que el código común dependa de declaraciones específicas de la plataforma.En otros idiomas,esto puede lograrse a menudo construyendo un conjunto de interfaces en el código común e implementando estas interfaces en módulos específicos de la plataforma.Sin embargo,este enfoque no es ideal en los casos en que se tiene una biblioteca en una de las plataformas que implementa la funcionalidad que se necesita,y se desea utilizar la API de esta biblioteca directamente sin envoltorios adicionales.Además,requiere que las declaraciones comunes se expresen como interfaces,lo que no cubre todos los casos posibles.</target>
        </trans-unit>
        <trans-unit id="dc2f355daff82042213227d21be547e3dba71d34" translate="yes" xml:space="preserve">
          <source>One of the most common pitfalls in many programming languages, including Java, is that accessing a member of a null reference will result in a null reference exception. In Java this would be the equivalent of a &lt;code&gt;NullPointerException&lt;/code&gt; or NPE for short.</source>
          <target state="translated">Uno de los errores m&amp;aacute;s comunes en muchos lenguajes de programaci&amp;oacute;n, incluido Java, es que acceder a un miembro de una referencia nula resultar&amp;aacute; en una excepci&amp;oacute;n de referencia nula. En Java, esto ser&amp;iacute;a el equivalente a una &lt;code&gt;NullPointerException&lt;/code&gt; o NPE para abreviar.</target>
        </trans-unit>
        <trans-unit id="e6f92c8a67f2d507591085679c40b475519d2dde" translate="yes" xml:space="preserve">
          <source>One of the most tricky parts of Java's type system is wildcard types (see &lt;a href=&quot;http://www.angelikalanger.com/GenericsFAQ/JavaGenericsFAQ.html&quot;&gt;Java Generics FAQ&lt;/a&gt;). And Kotlin doesn't have any. Instead, it has two other things: declaration-site variance and type projections.</source>
          <target state="translated">Una de las partes m&amp;aacute;s complicadas del sistema de tipos de Java son los tipos comod&amp;iacute;n (consulte las &lt;a href=&quot;http://www.angelikalanger.com/GenericsFAQ/JavaGenericsFAQ.html&quot;&gt;preguntas frecuentes sobre gen&amp;eacute;ricos de Java&lt;/a&gt; ). Y Kotlin no tiene ninguno. En cambio, tiene otras dos cosas: variaci&amp;oacute;n del sitio de declaraci&amp;oacute;n y proyecciones de tipo.</target>
        </trans-unit>
        <trans-unit id="38d02ab09e44aff951d70a40c329956aa2b8b363" translate="yes" xml:space="preserve">
          <source>One of the possible use cases of &lt;code&gt;provideDelegate&lt;/code&gt; is to check property consistency when the property is created, not only in its getter or setter.</source>
          <target state="translated">Uno de los posibles casos de uso de &lt;code&gt;provideDelegate&lt;/code&gt; es verificar la coherencia de la propiedad cuando se crea la propiedad, no solo en su getter o setter.</target>
        </trans-unit>
        <trans-unit id="3b32e2bb1023c8a77897c490d454d38c79282624" translate="yes" xml:space="preserve">
          <source>One of the possible use cases of &lt;code&gt;provideDelegate&lt;/code&gt; is to check the consistency of the property upon its initialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4385a0374e1c5c7b6c1f784715b203768aadd3" translate="yes" xml:space="preserve">
          <source>One of the solutions would have been to report each exception separately, but then &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/await.html&quot;&gt;Deferred.await&lt;/a&gt; should have had the same mechanism to avoid behavioural inconsistency and this would cause implementation details of a coroutines (whether it had delegated parts of its work to its children or not) to leak to its exception handler.</source>
          <target state="translated">Una de las soluciones habr&amp;iacute;a sido informar cada excepci&amp;oacute;n por separado, pero luego &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/await.html&quot;&gt;Deferred.await&lt;/a&gt; deber&amp;iacute;a haber tenido el mismo mecanismo para evitar la inconsistencia de comportamiento y esto causar&amp;iacute;a detalles de implementaci&amp;oacute;n de una corrutina (si hab&amp;iacute;a delegado partes de su trabajo a sus hijos o not) para filtrarse a su manejador de excepciones.</target>
        </trans-unit>
        <trans-unit id="4682051378a5cd9287062ccfaa20c54f71557242" translate="yes" xml:space="preserve">
          <source>One other difference between lambda expressions and anonymous functions is the behavior of &lt;a href=&quot;inline-functions#non-local-returns&quot;&gt;non-local returns&lt;/a&gt;. A &lt;em&gt;return&lt;/em&gt; statement without a label always returns from the function declared with the &lt;em&gt;fun&lt;/em&gt; keyword. This means that a &lt;em&gt;return&lt;/em&gt; inside a lambda expression will return from the enclosing function, whereas a &lt;em&gt;return&lt;/em&gt; inside an anonymous function will return from the anonymous function itself.</source>
          <target state="translated">Otra diferencia entre las expresiones lambda y las funciones an&amp;oacute;nimas es el comportamiento de &lt;a href=&quot;inline-functions#non-local-returns&quot;&gt;los retornos no locales&lt;/a&gt; . Una declaraci&amp;oacute;n de &lt;em&gt;retorno&lt;/em&gt; sin etiqueta siempre regresa de la funci&amp;oacute;n declarada con la palabra clave &lt;em&gt;fun&lt;/em&gt; . Esto significa que un &lt;em&gt;retorno&lt;/em&gt; dentro de una expresi&amp;oacute;n lambda retornar&amp;aacute; desde la funci&amp;oacute;n adjunta, mientras que un &lt;em&gt;retorno&lt;/em&gt; dentro de una funci&amp;oacute;n an&amp;oacute;nima retornar&amp;aacute; desde la funci&amp;oacute;n an&amp;oacute;nima misma.</target>
        </trans-unit>
        <trans-unit id="f184b36bfb713e43fbfa93f50dceca8dadfd2966" translate="yes" xml:space="preserve">
          <source>One other thing to be discussed here is how we add text to tag bodies. In the example above we say something like:</source>
          <target state="translated">Otra cosa que se discutirá aquí es cómo añadimos texto a los cuerpos de las etiquetas.En el ejemplo anterior decimos algo como:</target>
        </trans-unit>
        <trans-unit id="298f631b7015e52a7102aa3f6251e37e068b1948" translate="yes" xml:space="preserve">
          <source>One thing missing from the lambda expression syntax presented above is the ability to specify the return type of the function. In most cases, this is unnecessary because the return type can be inferred automatically. However, if you do need to specify it explicitly, you can use an alternative syntax: an &lt;em&gt;anonymous function&lt;/em&gt;.</source>
          <target state="translated">Una cosa que falta en la sintaxis de la expresi&amp;oacute;n lambda presentada anteriormente es la capacidad de especificar el tipo de retorno de la funci&amp;oacute;n. En la mayor&amp;iacute;a de los casos, esto es innecesario porque el tipo de retorno se puede inferir autom&amp;aacute;ticamente. Sin embargo, si necesita especificarlo expl&amp;iacute;citamente, puede usar una sintaxis alternativa: una &lt;em&gt;funci&amp;oacute;n an&amp;oacute;nima&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="642728af0fb0800824d7dd9f4eab6562d33e66c6" translate="yes" xml:space="preserve">
          <source>Online Courses</source>
          <target state="translated">Cursos en línea</target>
        </trans-unit>
        <trans-unit id="a56fd70563b4d9f0bebcf1cf95d7aaace3e6c084" translate="yes" xml:space="preserve">
          <source>Only &lt;code&gt;EXECUTABLE&lt;/code&gt; and &lt;code&gt;KLIBRARY&lt;/code&gt; binaries are published currently.</source>
          <target state="translated">&lt;code&gt;EXECUTABLE&lt;/code&gt; solo se publican los binarios EXECUTABLE y &lt;code&gt;KLIBRARY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da7677e45b190380bd45a6a9f12fa569b7b050cd" translate="yes" xml:space="preserve">
          <source>Only imports and declarations can exist at the top level of a Kotlin file. Therefore, &quot;running&quot; an individual file only makes sense if it contains an &lt;em&gt;entry point&lt;/em&gt;, which must be a function called &lt;code&gt;main&lt;/code&gt; with one argument called &lt;code&gt;args&lt;/code&gt; of the type &quot;array of strings&quot;. &lt;code&gt;args&lt;/code&gt; will contain the command-line arguments that the program is invoked with, similarly to &lt;code&gt;sys.argv&lt;/code&gt; in Python; it can be omitted if your program does not need to accept command-line arguments and you are using Kotlin 1.3:</source>
          <target state="translated">Solo las importaciones y declaraciones pueden existir en el nivel superior de un archivo Kotlin. Por lo tanto, &quot;ejecutar&quot; un archivo individual s&amp;oacute;lo tiene sentido si contiene un &lt;em&gt;punto de entrada&lt;/em&gt; , que debe ser una funci&amp;oacute;n llamada &lt;code&gt;main&lt;/code&gt; con un argumento llamado &lt;code&gt;args&lt;/code&gt; del tipo &quot;matriz de cadenas&quot;. &lt;code&gt;args&lt;/code&gt; contendr&amp;aacute; los argumentos de la l&amp;iacute;nea de comandos con los que se invoca el programa, de manera similar a &lt;code&gt;sys.argv&lt;/code&gt; en Python; se puede omitir si su programa no necesita aceptar argumentos de la l&amp;iacute;nea de comandos y est&amp;aacute; utilizando Kotlin 1.3:</target>
        </trans-unit>
        <trans-unit id="d5acf06992dbc80a4d90b07667e54904a5303d8d" translate="yes" xml:space="preserve">
          <source>Only one parameter may be marked as &lt;code&gt;vararg&lt;/code&gt;. If a &lt;code&gt;vararg&lt;/code&gt; parameter is not the last one in the list, values for the following parameters can be passed using the named argument syntax, or, if the parameter has a function type, by passing a lambda outside parentheses.</source>
          <target state="translated">Solo un par&amp;aacute;metro puede marcarse como &lt;code&gt;vararg&lt;/code&gt; . Si un par&amp;aacute;metro &lt;code&gt;vararg&lt;/code&gt; no es el &amp;uacute;ltimo en la lista, los valores para los siguientes par&amp;aacute;metros se pueden pasar usando la sintaxis del argumento con nombre o, si el par&amp;aacute;metro tiene un tipo de funci&amp;oacute;n, pasando un lambda fuera del par&amp;eacute;ntesis.</target>
        </trans-unit>
        <trans-unit id="62ae003ddbe718dd1517100f12cc23341d88734f" translate="yes" xml:space="preserve">
          <source>Only the property &lt;code&gt;name&lt;/code&gt; will be used inside the &lt;code&gt;toString()&lt;/code&gt;, &lt;code&gt;equals()&lt;/code&gt;, &lt;code&gt;hashCode()&lt;/code&gt;, and &lt;code&gt;copy()&lt;/code&gt; implementations, and there will only be one component function &lt;code&gt;component1()&lt;/code&gt;. While two &lt;code&gt;Person&lt;/code&gt; objects can have different ages, they will be treated as equal.</source>
          <target state="translated">Solo &lt;code&gt;name&lt;/code&gt; usar&amp;aacute; el nombre de la propiedad dentro de las implementaciones &lt;code&gt;toString()&lt;/code&gt; , &lt;code&gt;equals()&lt;/code&gt; , &lt;code&gt;hashCode()&lt;/code&gt; y &lt;code&gt;copy()&lt;/code&gt; , y solo habr&amp;aacute; una funci&amp;oacute;n de &lt;code&gt;component1()&lt;/code&gt; , component1 () . Si bien los objetos de dos &lt;code&gt;Person&lt;/code&gt; pueden tener diferentes edades, se tratar&amp;aacute;n como iguales.</target>
        </trans-unit>
        <trans-unit id="0991ef404e96f10fd9f12b53834c650d31c927f7" translate="yes" xml:space="preserve">
          <source>Only the top-level functions can have a contract for now.</source>
          <target state="translated">Sólo las funciones de nivel superior pueden tener un contrato por ahora.</target>
        </trans-unit>
        <trans-unit id="44fceaa53bcd4e0959ad0f0959b849cd53bad4d8" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;Task.kt&lt;/code&gt; file to write the code you want for the exercise:</source>
          <target state="translated">Abra el archivo &lt;code&gt;Task.kt&lt;/code&gt; para escribir el c&amp;oacute;digo que desea para el ejercicio:</target>
        </trans-unit>
        <trans-unit id="7314b40c316a1f266ab17c79c1dbaa5efa312fc4" translate="yes" xml:space="preserve">
          <source>Open Android Studio and click &lt;strong&gt;Start a new Android Studio project&lt;/strong&gt; on the welcome screen or &lt;strong&gt;File | New | New project&lt;/strong&gt;.</source>
          <target state="translated">Abra Android Studio y haga clic en &lt;strong&gt;Iniciar un nuevo proyecto de Android Studio&lt;/strong&gt; en la pantalla de bienvenida o &lt;strong&gt;Archivo | Nuevo | Nuevo proyecto&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a2734705c771bd152625d6b6e3be623f3d083e00" translate="yes" xml:space="preserve">
          <source>Open a Kotlin project in IntelliJ IDEA. If you don't have a project, &lt;a href=&quot;../jvm-get-started#create-an-application&quot;&gt;create one&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42061eb606b269e208e8b1d79d1d344a8bc755f" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;main.kt&lt;/code&gt; file in &lt;code&gt;src/main/kotlin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1734f46d15b7bc7096f0bb81eb4055641e6669c9" translate="yes" xml:space="preserve">
          <source>Open the file &lt;code&gt;main.kt&lt;/code&gt; in &lt;code&gt;src/&amp;lt;your_app_name&amp;gt;Main/kotlin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d052a8236e9f9d921a920878935578b824633115" translate="yes" xml:space="preserve">
          <source>Open the file &lt;code&gt;welcome.kt&lt;/code&gt; in &lt;code&gt;src/main/kotlin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d2d6c25074dfcfb7cab43ab30e7f03b9fd3e52" translate="yes" xml:space="preserve">
          <source>Opening the Project in IDE</source>
          <target state="translated">Apertura del proyecto en el IDE</target>
        </trans-unit>
        <trans-unit id="bb4f1019fb285f3b5642eff51d4dfdd6ac6d6388" translate="yes" xml:space="preserve">
          <source>Opening the project in an IDE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066186e62ea684ac1212e026a26d571f981c4d5a" translate="yes" xml:space="preserve">
          <source>Operating system family program executes upon.</source>
          <target state="translated">El programa de la familia del sistema operativo se ejecuta sobre.</target>
        </trans-unit>
        <trans-unit id="c791730b00e42caba4395b78632bfee149a435dc" translate="yes" xml:space="preserve">
          <source>Operating system family.</source>
          <target state="translated">Familia de sistemas operativos.</target>
        </trans-unit>
        <trans-unit id="a1fdaa6b2a846c8fcf18d414bf8c61db610eda6a" translate="yes" xml:space="preserve">
          <source>Operations</source>
          <target state="translated">Operations</target>
        </trans-unit>
        <trans-unit id="81a400d5fba1ee0821e50ecd6c5fe68fa3817f28" translate="yes" xml:space="preserve">
          <source>Operations described on these pages return their results without affecting the original collection. For example, a filtering operation produces a &lt;em&gt;new collection&lt;/em&gt; that contains all the elements matching the filtering predicate. Results of such operations should be either stored in variables, or used in some other way, for example, passed in other functions.</source>
          <target state="translated">Las operaciones descritas en estas p&amp;aacute;ginas devuelven sus resultados sin afectar la colecci&amp;oacute;n original. Por ejemplo, una operaci&amp;oacute;n de filtrado produce una &lt;em&gt;nueva colecci&amp;oacute;n&lt;/em&gt; que contiene todos los elementos que coinciden con el predicado de filtrado. Los resultados de tales operaciones deben almacenarse en variables o usarse de alguna otra manera, por ejemplo, pasarse a otras funciones.</target>
        </trans-unit>
        <trans-unit id="9bf7c09224d4e5f03f06eb1166a0d0d5843b1570" translate="yes" xml:space="preserve">
          <source>Operator overloading</source>
          <target state="translated">Sobrecarga do operador</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="0caa6abe0a90ca66988bc7871ced1b5719175a43" translate="yes" xml:space="preserve">
          <source>Operators and Special Symbols</source>
          <target state="translated">Operadores y símbolos especiales</target>
        </trans-unit>
        <trans-unit id="391a1d9fef3c27917074b6cfe64302d4a7548eb3" translate="yes" xml:space="preserve">
          <source>Operators and conversions for BigInteger and BigDecimal</source>
          <target state="translated">Operadores y conversiones para BigInteger y BigDecimal</target>
        </trans-unit>
        <trans-unit id="c5d3f5b49ace0d0f05244156b97cd9cc90ab2cd2" translate="yes" xml:space="preserve">
          <source>Operators to get the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/first.html&quot;&gt;first&lt;/a&gt; value and to ensure that a flow emits a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/single.html&quot;&gt;single&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9d5976e224ee99d4f3a99e937395d40098d487" translate="yes" xml:space="preserve">
          <source>Opt-in Requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb6a0f7be2ab956cf3368e29d050cd9efee6ce99" translate="yes" xml:space="preserve">
          <source>Opt-in requirement annotations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7c9191c343ce70721fc892a5c550dcd79ae5c2" translate="yes" xml:space="preserve">
          <source>Opt-in requirement annotations must meet several requirements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf24e04ef76d5f4acce31d60ece62aefd4cf145" translate="yes" xml:space="preserve">
          <source>Opt-in requirements for pre-stable APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ae71ce2f3f0b024ff8a6844677d2ceeb1dae5a" translate="yes" xml:space="preserve">
          <source>OptIn</source>
          <target state="translated">OptIn</target>
        </trans-unit>
        <trans-unit id="f99127d5973fa28e951036fe872de48afc7e4d1a" translate="yes" xml:space="preserve">
          <source>Opting in to using API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a15cb4802d6a2f5087bc78f9d683b8a1c586e0c" translate="yes" xml:space="preserve">
          <source>OptionalExpectation</source>
          <target state="translated">OptionalExpectation</target>
        </trans-unit>
        <trans-unit id="20b9ec19409d156d6e4d403e56248932a0c1c9e4" translate="yes" xml:space="preserve">
          <source>Optionally, &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html&quot;&gt;async&lt;/a&gt; can be made lazy by setting its &lt;code&gt;start&lt;/code&gt; parameter to &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-start/-l-a-z-y.html&quot;&gt;CoroutineStart.LAZY&lt;/a&gt;. In this mode it only starts the coroutine when its result is required by &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/await.html&quot;&gt;await&lt;/a&gt;, or if its &lt;code&gt;Job&lt;/code&gt;'s &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/start.html&quot;&gt;start&lt;/a&gt; function is invoked. Run the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a5dca52b1cba88b3d7679218fb5b6d2dfb1487" translate="yes" xml:space="preserve">
          <source>Optionally, a &lt;code&gt;mode&lt;/code&gt; parameter equal to &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-ticker-mode/-f-i-x-e-d_-d-e-l-a-y.html&quot;&gt;TickerMode.FIXED_DELAY&lt;/a&gt; can be specified to maintain a fixed delay between elements.</source>
          <target state="translated">Opcionalmente, se puede especificar un par&amp;aacute;metro de &lt;code&gt;mode&lt;/code&gt; igual a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-ticker-mode/-f-i-x-e-d_-d-e-l-a-y.html&quot;&gt;TickerMode.FIXED_DELAY&lt;/a&gt; para mantener un retraso fijo entre elementos.</target>
        </trans-unit>
        <trans-unit id="81e695612c6b558fba4d69087c222c3508c30997" translate="yes" xml:space="preserve">
          <source>Options for compiler plugins</source>
          <target state="translated">Opciones para los plugins del compilador</target>
        </trans-unit>
        <trans-unit id="ee5d3857fef9134f3bce39f927b9701b1bc6ca97" translate="yes" xml:space="preserve">
          <source>Options passed to a system linker during binary building.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99a34cf6e89392af307d2da71942e282bd91e96" translate="yes" xml:space="preserve">
          <source>Options passed to the C compiler (used to analyze headers, such as preprocessor definitions) and the linker (used to link final executables) can be passed in the definition file as &lt;code&gt;compilerOpts&lt;/code&gt; and &lt;code&gt;linkerOpts&lt;/code&gt; respectively. For example</source>
          <target state="translated">Las opciones pasadas al compilador de C (usado para analizar encabezados, como definiciones de preprocesador) y el vinculador (usado para vincular ejecutables finales) se pueden pasar en el archivo de definici&amp;oacute;n como &lt;code&gt;compilerOpts&lt;/code&gt; y &lt;code&gt;linkerOpts&lt;/code&gt; respectivamente. Por ejemplo</target>
        </trans-unit>
        <trans-unit id="e4c2b1391628bd110e5c7c3d0fb6e307472ae4c6" translate="yes" xml:space="preserve">
          <source>Options to pass to the compiler by the cinterop tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfefe272fa75c738fdc90c4c14d8bf8da5c74e2c" translate="yes" xml:space="preserve">
          <source>Or alternatively, even shorter:</source>
          <target state="translated">O alternativamente,incluso más corto:</target>
        </trans-unit>
        <trans-unit id="532bd8eaed87cda55870df17e6d9de316d9f4893" translate="yes" xml:space="preserve">
          <source>Or an entire package, which will bring in all the symbols from that package:</source>
          <target state="translated">O un paquete entero,que traerá todos los símbolos de ese paquete:</target>
        </trans-unit>
        <trans-unit id="84941468d72b41cd1e72e93f8755c37167fcb75c" translate="yes" xml:space="preserve">
          <source>Or commandline arguments: &lt;code&gt;-Xembed-bitcode&lt;/code&gt; (for release) and &lt;code&gt;-Xembed-bitcode-marker&lt;/code&gt; (debug)</source>
          <target state="translated">O argumentos de la l&amp;iacute;nea de comandos: &lt;code&gt;-Xembed-bitcode&lt;/code&gt; (para el lanzamiento) y &lt;code&gt;-Xembed-bitcode-marker&lt;/code&gt; (debug)</target>
        </trans-unit>
        <trans-unit id="4a6904cf48807fd990ed6c31cef633f6c1c024ac" translate="yes" xml:space="preserve">
          <source>Or using the Gradle plugins DSL:</source>
          <target state="translated">O usando los plugins de Gradle DSL:</target>
        </trans-unit>
        <trans-unit id="2a931f4319a05ea77891d9060114221f91b89607" translate="yes" xml:space="preserve">
          <source>Or you can fill in the right answer with the &lt;strong&gt;Bulb&lt;/strong&gt; icon:</source>
          <target state="translated">O puede completar la respuesta correcta con el icono de &lt;strong&gt;bombilla&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="b0a47a777023f4eb7437c94d1e83cf762ea69f2d" translate="yes" xml:space="preserve">
          <source>Or, in the case of using &lt;code&gt;plain&lt;/code&gt; as a module system setting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15a672c9b939d54a901c438c7829e4598ec3ac2" translate="yes" xml:space="preserve">
          <source>Or, use &lt;strong&gt;community-maintained Kotlin/JS frameworks&lt;/strong&gt; that take full advantage of Kotlin concepts, its expressive power and conciseness &amp;ndash; like &lt;a href=&quot;https://github.com/rjaros/kvision&quot;&gt;kvision&lt;/a&gt; or &lt;a href=&quot;https://www.fritz2.dev/&quot;&gt;fritz2&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="5f3c0a024546767e98619d4c704f350b22156152" translate="yes" xml:space="preserve">
          <source>Ordinary named value parameter.</source>
          <target state="translated">Parámetro de valor de nombre ordinario.</target>
        </trans-unit>
        <trans-unit id="4869781b0f55f4c1037bf2910220d1e6f2a7ce09" translate="yes" xml:space="preserve">
          <source>OsFamily</source>
          <target state="translated">OsFamily</target>
        </trans-unit>
        <trans-unit id="959184f53e7b6600b042795548ffeee55d75c4c1" translate="yes" xml:space="preserve">
          <source>Other CI Server</source>
          <target state="translated">Otro servidor de CI</target>
        </trans-unit>
        <trans-unit id="b22c85b9254408bacf27f231cb8b5205551c3cad" translate="yes" xml:space="preserve">
          <source>Other Language Features</source>
          <target state="translated">Otras características del lenguaje</target>
        </trans-unit>
        <trans-unit id="b9e470b1de14eca892c5fa77e2ebfe8529930c48" translate="yes" xml:space="preserve">
          <source>Other citations of this sort:</source>
          <target state="translated">Otras citas de este tipo:</target>
        </trans-unit>
        <trans-unit id="1f6194122ceb6cecad3809ca5a924ada067e2d97" translate="yes" xml:space="preserve">
          <source>Other collection operations are declared as extension functions. These are filtering, transformation, ordering, and other collection processing functions.</source>
          <target state="translated">Otras operaciones de recolección se declaran como funciones de extensión.Son funciones de filtrado,transformación,ordenamiento y otras funciones de procesamiento de la colección.</target>
        </trans-unit>
        <trans-unit id="126d7a1bf7e54d2a4bf4a9c0419a29fe417ffdb3" translate="yes" xml:space="preserve">
          <source>Other issues caused by external Java code.</source>
          <target state="translated">Otros problemas causados por el código Java externo.</target>
        </trans-unit>
        <trans-unit id="16cfd92afd47d77c945ee46ac4fb8ac72dfa3d58" translate="yes" xml:space="preserve">
          <source>Other language features</source>
          <target state="translated">Otras características del lenguaje</target>
        </trans-unit>
        <trans-unit id="d2503fbe45c5caffb865ef91cb9bcd7c9e6bde78" translate="yes" xml:space="preserve">
          <source>Other supported cases include acquiring a Java getter/setter method or a backing field for a Kotlin property, a &lt;code&gt;KProperty&lt;/code&gt; for a Java field, a Java method or constructor for a &lt;code&gt;KFunction&lt;/code&gt; and vice versa.</source>
          <target state="translated">Otros casos admitidos incluyen la adquisici&amp;oacute;n de un m&amp;eacute;todo getter / setter de Java o un campo de respaldo para una propiedad de Kotlin, una &lt;code&gt;KProperty&lt;/code&gt; para un campo de Java, un m&amp;eacute;todo o constructor de Java para una &lt;code&gt;KFunction&lt;/code&gt; y viceversa.</target>
        </trans-unit>
        <trans-unit id="147b4763a88551746a01b34cea5fb8cf55de75a8" translate="yes" xml:space="preserve">
          <source>Otherwise returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5454be13e8e63af0393432029da696ce74c13c" translate="yes" xml:space="preserve">
          <source>Otherwise, the return value of the &lt;a href=&quot;suspend-coroutine-or-return#kotlin.coroutines.experimental.intrinsics%24suspendCoroutineOrReturn%28kotlin.Function1%28%28kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.suspendCoroutineOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; must have a type assignable to &lt;a href=&quot;suspend-coroutine-or-return#T&quot;&gt;T&lt;/a&gt; and represents the result of this suspend function. It means that the execution was not suspended and the &lt;a href=&quot;../kotlin.coroutines.experimental/-continuation/index&quot;&gt;Continuation&lt;/a&gt; provided to the &lt;a href=&quot;suspend-coroutine-or-return#kotlin.coroutines.experimental.intrinsics%24suspendCoroutineOrReturn%28kotlin.Function1%28%28kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.suspendCoroutineOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; shall not be invoked. As the result type of the &lt;a href=&quot;suspend-coroutine-or-return#kotlin.coroutines.experimental.intrinsics%24suspendCoroutineOrReturn%28kotlin.Function1%28%28kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.suspendCoroutineOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; is declared as &lt;code&gt;Any?&lt;/code&gt; and cannot be correctly type-checked, its proper return type remains on the conscience of the suspend function's author.</source>
          <target state="translated">De lo contrario, el valor de retorno del &lt;a href=&quot;suspend-coroutine-or-return#kotlin.coroutines.experimental.intrinsics%24suspendCoroutineOrReturn%28kotlin.Function1%28%28kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.suspendCoroutineOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;bloque&lt;/a&gt; debe tener un tipo asignable a &lt;a href=&quot;suspend-coroutine-or-return#T&quot;&gt;T&lt;/a&gt; y representa el resultado de esta funci&amp;oacute;n de suspensi&amp;oacute;n. Significa que la ejecuci&amp;oacute;n no fue suspendida y la &lt;a href=&quot;../kotlin.coroutines.experimental/-continuation/index&quot;&gt;Continuaci&amp;oacute;n&lt;/a&gt; proporcionada al &lt;a href=&quot;suspend-coroutine-or-return#kotlin.coroutines.experimental.intrinsics%24suspendCoroutineOrReturn%28kotlin.Function1%28%28kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.suspendCoroutineOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;bloque&lt;/a&gt; no ser&amp;aacute; invocada. &amp;iquest;Como el tipo de resultado del &lt;a href=&quot;suspend-coroutine-or-return#kotlin.coroutines.experimental.intrinsics%24suspendCoroutineOrReturn%28kotlin.Function1%28%28kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.suspendCoroutineOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;bloque&lt;/a&gt; se declara como &lt;code&gt;Any?&lt;/code&gt; y no se puede verificar correctamente el tipo, su tipo de retorno adecuado permanece en la conciencia del autor de la funci&amp;oacute;n de suspensi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0de4f3d3a643debaa8825b8903404f8fc938727d" translate="yes" xml:space="preserve">
          <source>Otherwise, the return value of the &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn%28kotlin.Function1%28%28kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; must have a type assignable to &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; and represents the result of this suspend function. It means that the execution was not suspended and the &lt;a href=&quot;../kotlin.coroutines/-continuation/index&quot;&gt;Continuation&lt;/a&gt; provided to the &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn%28kotlin.Function1%28%28kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; shall not be invoked. As the result type of the &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn%28kotlin.Function1%28%28kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; is declared as &lt;code&gt;Any?&lt;/code&gt; and cannot be correctly type-checked, its proper return type remains on the conscience of the suspend function's author.</source>
          <target state="translated">De lo contrario, el valor de retorno del &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn%28kotlin.Function1%28%28kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;bloque&lt;/a&gt; debe tener un tipo asignable a &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; y representa el resultado de esta funci&amp;oacute;n de suspensi&amp;oacute;n. Significa que la ejecuci&amp;oacute;n no fue suspendida y la &lt;a href=&quot;../kotlin.coroutines/-continuation/index&quot;&gt;Continuaci&amp;oacute;n&lt;/a&gt; proporcionada al &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn%28kotlin.Function1%28%28kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;bloque&lt;/a&gt; no ser&amp;aacute; invocada. &amp;iquest;Como el tipo de resultado del &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn%28kotlin.Function1%28%28kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;bloque&lt;/a&gt; se declara como &lt;code&gt;Any?&lt;/code&gt; y no se puede verificar correctamente el tipo, su tipo de retorno adecuado permanece en la conciencia del autor de la funci&amp;oacute;n de suspensi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ed6753d99524ec7a57f5683ffdfd67a39be2ae9c" translate="yes" xml:space="preserve">
          <source>Otherwise, the return value of the &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn(kotlin.Function1((kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T)),%20kotlin.Any?)))/block&quot;&gt;block&lt;/a&gt; must have a type assignable to &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; and represents the result of this suspend function. It means that the execution was not suspended and the &lt;a href=&quot;../kotlin.coroutines/-continuation/index&quot;&gt;Continuation&lt;/a&gt; provided to the &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn(kotlin.Function1((kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T)),%20kotlin.Any?)))/block&quot;&gt;block&lt;/a&gt; shall not be invoked. As the result type of the &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn(kotlin.Function1((kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T)),%20kotlin.Any?)))/block&quot;&gt;block&lt;/a&gt; is declared as &lt;code&gt;Any?&lt;/code&gt; and cannot be correctly type-checked, its proper return type remains on the conscience of the suspend function's author.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80332318434bec9b581b702805f0a6036697bbb7" translate="yes" xml:space="preserve">
          <source>Otherwise, the structural equality is used, which disagrees with the standard so that &lt;code&gt;NaN&lt;/code&gt; is equal to itself, and &lt;code&gt;-0.0&lt;/code&gt; is not equal to &lt;code&gt;0.0&lt;/code&gt;.</source>
          <target state="translated">De lo contrario, se utiliza la igualdad estructural, que no est&amp;aacute; de acuerdo con el est&amp;aacute;ndar, por lo que &lt;code&gt;NaN&lt;/code&gt; es igual a s&amp;iacute; mismo y &lt;code&gt;-0.0&lt;/code&gt; no es igual a &lt;code&gt;0.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb380427bcdf9e2288105dd3444ff34884f91949" translate="yes" xml:space="preserve">
          <source>Otherwise, try to generate code for &lt;code&gt;a = a + b&lt;/code&gt; (this includes a type check: the type of &lt;code&gt;a + b&lt;/code&gt; must be a subtype of &lt;code&gt;a&lt;/code&gt;).</source>
          <target state="translated">De lo contrario, intente generar c&amp;oacute;digo para &lt;code&gt;a = a + b&lt;/code&gt; (esto incluye una verificaci&amp;oacute;n de tipo: el tipo de &lt;code&gt;a + b&lt;/code&gt; debe ser un subtipo de &lt;code&gt;a&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c4519fbda5213ca8ee3068e92e2d8eeb9a0128d9" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;build.gradle&lt;/code&gt; file should look like the following</source>
          <target state="translated">Nuestro archivo &lt;code&gt;build.gradle&lt;/code&gt; deber&amp;iacute;a verse como el siguiente</target>
        </trans-unit>
        <trans-unit id="adbbd30ddb3bdecc114802621e11ef40e9d64175" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;workload()&lt;/code&gt; function can be called from a coroutine (or another suspending function), but &lt;em&gt;can not&lt;/em&gt; be called from outside a coroutine. Naturally, &lt;code&gt;delay()&lt;/code&gt; and &lt;code&gt;await()&lt;/code&gt; that we used above are themselves declared as &lt;code&gt;suspend&lt;/code&gt;, and this is why we had to put them inside &lt;code&gt;runBlocking {}&lt;/code&gt;, &lt;code&gt;launch {}&lt;/code&gt; or &lt;code&gt;async {}&lt;/code&gt;.</source>
          <target state="translated">Nuestra funci&amp;oacute;n &lt;code&gt;workload()&lt;/code&gt; se puede llamar desde una corrutina (u otra funci&amp;oacute;n de suspensi&amp;oacute;n), pero &lt;em&gt;no se&lt;/em&gt; puede llamar desde fuera de una corrutina. Naturalmente, &lt;code&gt;delay()&lt;/code&gt; y &lt;code&gt;await()&lt;/code&gt; que usamos arriba est&amp;aacute;n declarados como &lt;code&gt;suspend&lt;/code&gt; idos , y es por eso que tuvimos que ponerlos dentro de &lt;code&gt;runBlocking {}&lt;/code&gt; , &lt;code&gt;launch {}&lt;/code&gt; o &lt;code&gt;async {}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e1afb67f53866f49e7511c060ec67ed3fb47fd7" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;workload()&lt;/code&gt; function can be called from a coroutine (or another suspending function), but &lt;em&gt;cannot&lt;/em&gt; be called from outside a coroutine. Naturally, &lt;code&gt;delay()&lt;/code&gt; and &lt;code&gt;await()&lt;/code&gt; that we used above are themselves declared as &lt;code&gt;suspend&lt;/code&gt;, and this is why we had to put them inside &lt;code&gt;runBlocking {}&lt;/code&gt;, &lt;code&gt;launch {}&lt;/code&gt; or &lt;code&gt;async {}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7460360fa1bf50529b473bc85864ff382d98b93c" translate="yes" xml:space="preserve">
          <source>Our JS implementation will be very similar to the JVM one. We create a file &lt;code&gt;Base64.kt&lt;/code&gt; in &lt;code&gt;jsMain/kotlin/jetbrains/base64&lt;/code&gt; and provide an implementation which delegates to NodeJS &lt;code&gt;Buffer&lt;/code&gt; API:</source>
          <target state="translated">Nuestra implementaci&amp;oacute;n de JS ser&amp;aacute; muy similar a la de JVM. Creamos un archivo &lt;code&gt;Base64.kt&lt;/code&gt; en &lt;code&gt;jsMain/kotlin/jetbrains/base64&lt;/code&gt; y proporcionamos una implementaci&amp;oacute;n que delega a NodeJS &lt;code&gt;Buffer&lt;/code&gt; API:</target>
        </trans-unit>
        <trans-unit id="0ab5b1cc96e82694a219ee123e8bd14970db091a" translate="yes" xml:space="preserve">
          <source>Our Library Functions</source>
          <target state="translated">Nuestras funciones de la biblioteca</target>
        </trans-unit>
        <trans-unit id="0625d1616b84e58f7d2be19de1e6f136e6542f1c" translate="yes" xml:space="preserve">
          <source>Our code to call functions with pointers will look like this:</source>
          <target state="translated">Nuestro código para llamar a las funciones con punteros se verá así:</target>
        </trans-unit>
        <trans-unit id="f69ec148e41489878ae4ebe4d543e3288d3df1fd" translate="yes" xml:space="preserve">
          <source>Our factory is marked with the &lt;code&gt;expect&lt;/code&gt; keyword. &lt;code&gt;expect&lt;/code&gt; is a mechanism to define a requirement, which every platform should provide in order for the common part to work properly. So on each platform we should provide the &lt;code&gt;actual&lt;/code&gt;&lt;code&gt;Base64Factory&lt;/code&gt; which knows how to create the platform-specific encoder. Learn more about &lt;a href=&quot;../../reference/mpp-connect-to-apis&quot;&gt;platform-specific declarations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b08dc063f75e99580fde46838e1e3a9e711f19" translate="yes" xml:space="preserve">
          <source>Our factory is marked with the &lt;code&gt;expect&lt;/code&gt; keyword. &lt;code&gt;expect&lt;/code&gt; is a mechanism to define a requirement, which every platform should provide in order for the common part to work properly. So on each platform we should provide the &lt;code&gt;actual&lt;/code&gt;&lt;code&gt;Base64Factory&lt;/code&gt; which knows how to create the platform-specific encoder. You can read more about platform specific declarations &lt;a href=&quot;../reference/platform-specific-declarations&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Nuestra f&amp;aacute;brica est&amp;aacute; marcada con la palabra clave &lt;code&gt;expect&lt;/code&gt; . &lt;code&gt;expect&lt;/code&gt; es un mecanismo para definir un requisito, que toda plataforma debe proporcionar para que la parte com&amp;uacute;n funcione correctamente. Por lo tanto, en cada plataforma deber&amp;iacute;amos proporcionar la &lt;code&gt;Base64Factory&lt;/code&gt; &lt;code&gt;actual&lt;/code&gt; que sabe c&amp;oacute;mo crear el codificador espec&amp;iacute;fico de la plataforma. Puede leer m&amp;aacute;s sobre las declaraciones espec&amp;iacute;ficas de la plataforma &lt;a href=&quot;../reference/platform-specific-declarations&quot;&gt;aqu&amp;iacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9618079b890493b724f82c893c8117a26cd9973f" translate="yes" xml:space="preserve">
          <source>Our first application is simply going to print some text on the standard output. In our case, this text is &quot;Hello Kotlin/Native&quot;. We can open up our favorite IDE or editor and write the following code in a file named &lt;code&gt;hello.kt&lt;/code&gt;:</source>
          <target state="translated">Nuestra primera aplicaci&amp;oacute;n simplemente imprimir&amp;aacute; texto en la salida est&amp;aacute;ndar. En nuestro caso, este texto es &quot;Hola Kotlin / Nativo&quot;. Podemos abrir nuestro IDE o editor favorito y escribir el siguiente c&amp;oacute;digo en un archivo llamado &lt;code&gt;hello.kt&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="567cf7880134d286f7285fca0033dd35caefddab" translate="yes" xml:space="preserve">
          <source>Our first multiplatform library is almost ready. The last step is to publish it, so other projects can then depend on our library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94bfc3111bbdf55e54097cc4c8b45667119c21af" translate="yes" xml:space="preserve">
          <source>Our first multiplatform library is almost ready. The last step is to publish it, so other projects can then depend on our library. To make the publishing mechanism work, you should enable the experimental Gradle feature in &lt;code&gt;settings.gradle&lt;/code&gt;:</source>
          <target state="translated">Nuestra primera biblioteca multiplataforma est&amp;aacute; casi lista. El &amp;uacute;ltimo paso es publicarlo, para que otros proyectos puedan depender de nuestra biblioteca. Para que el mecanismo de publicaci&amp;oacute;n funcione, debe habilitar la funci&amp;oacute;n experimental de Gradle en &lt;code&gt;settings.gradle&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="95dbdf808fd430fab749c0243fcb9f04f2b77f95" translate="yes" xml:space="preserve">
          <source>Our goal is to build a small multiplatform library to demonstrate the ability to share the code between the platforms and its benefits. In order to have a small implementation to focus on the multiplatform machinery, we will write a library which converts raw data (strings and byte arrays) to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Base64&quot;&gt;Base64&lt;/a&gt; format which can be used on JVM, JS, and any available K/N platform. On JVM implementation will be using &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Base64.html&quot;&gt;&lt;code&gt;java.util.Base64&lt;/code&gt;&lt;/a&gt; which is known to be extremely efficient because JVM is aware of this particular class and compiles it in a special way. On JS we will be using the native &lt;a href=&quot;https://nodejs.org/docs/latest/api/buffer.html&quot;&gt;Buffer&lt;/a&gt; API and on Kotlin/Native we will write our own implementation. We will cover this functionality with common tests and then publish the resulting library to Maven.</source>
          <target state="translated">Nuestro objetivo es construir una peque&amp;ntilde;a biblioteca multiplataforma para demostrar la capacidad de compartir el c&amp;oacute;digo entre las plataformas y sus beneficios. Para tener una peque&amp;ntilde;a implementaci&amp;oacute;n para enfocarnos en la maquinaria multiplataforma, escribiremos una biblioteca que convierta los datos brutos (cadenas y arreglos de bytes) al formato &lt;a href=&quot;https://en.wikipedia.org/wiki/Base64&quot;&gt;Base64&lt;/a&gt; que se puede usar en JVM, JS y cualquier plataforma K / N disponible. En la implementaci&amp;oacute;n de JVM se utilizar&amp;aacute; &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Base64.html&quot;&gt; &lt;code&gt;java.util.Base64&lt;/code&gt; ,&lt;/a&gt; que se sabe que es extremadamente eficiente porque JVM conoce esta clase en particular y la compila de una manera especial. En JS &lt;a href=&quot;https://nodejs.org/docs/latest/api/buffer.html&quot;&gt;usaremos la&lt;/a&gt; API de b&amp;uacute;fer nativa y en Kotlin / Native escribiremos nuestra propia implementaci&amp;oacute;n. Cubriremos esta funcionalidad con pruebas comunes y luego publicaremos la biblioteca resultante en Maven.</target>
        </trans-unit>
        <trans-unit id="6da7e647b6d6e9be9ec3fc992f8ff154a9ba18f9" translate="yes" xml:space="preserve">
          <source>Our goal is to build a small multiplatform library to demonstrate the ability to share the code between the platforms and its benefits. In order to have a small implementation to focus on the multiplatform machinery, we will write a library which converts raw data (strings and byte arrays) to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Base64&quot;&gt;Base64&lt;/a&gt; format which can be used on JVM, JS, and any available Kotlin/Native platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e418729eb2ef55e18bb9c364e7664f07141956" translate="yes" xml:space="preserve">
          <source>Our goal of this tutorial is to demonstrate the ability to share code within Kotlin and the benefits it provides. While what we'll be looking at is a simplified application, what is shown here can be applied to real world applications, independent of their size or complexity.</source>
          <target state="translated">Nuestro objetivo de este tutorial es demostrar la capacidad de compartir el código dentro de Kotlin y los beneficios que proporciona.Mientras que lo que veremos es una aplicación simplificada,lo que se muestra aquí puede aplicarse a aplicaciones del mundo real,independientemente de su tamaño o complejidad.</target>
        </trans-unit>
        <trans-unit id="4e88e8917a2f0fd2340eeca26b8e09a5c15c5c1b" translate="yes" xml:space="preserve">
          <source>OutOfMemoryError</source>
          <target state="translated">OutOfMemoryError</target>
        </trans-unit>
        <trans-unit id="7dd475eb7ae03f7efaa32eb90abdae0bea69163d" translate="yes" xml:space="preserve">
          <source>Outer &lt;code&gt;finally&lt;/code&gt; block inserted before &lt;code&gt;return&lt;/code&gt; is not excluded from the&lt;code&gt;catch&lt;/code&gt; interval of the inner &lt;code&gt;try&lt;/code&gt; block without &lt;code&gt;finally&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea2bd35ad59a2939c5dcd7aeb754e6a11bc0c9c" translate="yes" xml:space="preserve">
          <source>Output file path</source>
          <target state="translated">La ruta del archivo de salida</target>
        </trans-unit>
        <trans-unit id="4e314e13bdbb2fd6cd6b6a8ef78fddfab3a9b341" translate="yes" xml:space="preserve">
          <source>Output kinds</source>
          <target state="translated">Tipos de salida</target>
        </trans-unit>
        <trans-unit id="8d54e195aea506e4a8eb397299d73595ce957ff6" translate="yes" xml:space="preserve">
          <source>Output kinds (e.g. executable, library, framework etc)</source>
          <target state="translated">Tipos de salida (por ejemplo,ejecutable,biblioteca,marco de trabajo,etc.)</target>
        </trans-unit>
        <trans-unit id="691402679267af452a6063a6c55ee9c23954ac22" translate="yes" xml:space="preserve">
          <source>Output kinds can also be specified using a special property:</source>
          <target state="translated">Los tipos de salida también pueden especificarse utilizando una propiedad especial:</target>
        </trans-unit>
        <trans-unit id="eb8f8f7cf035e2bc6f0815048d7014d85e013954" translate="yes" xml:space="preserve">
          <source>Overall runtime performance has improved because of optimizations in GC. This improvement will be especially apparent in projects with a large number of long-lived objects. &lt;code&gt;HashMap&lt;/code&gt; and &lt;code&gt;HashSet&lt;/code&gt; collections now work faster by escaping redundant boxing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4172d77e28118d4345ad2b9c32b7c79ad5281e26" translate="yes" xml:space="preserve">
          <source>Overall, multiplatform is not about compiling all code for all platforms. This model has its obvious limitations, and we understand that modern applications need access to unique features of the platforms they are running on. Kotlin doesn't limit you to the common subset of all APIs in the world. Every component can share as much code as needed with others but can access platform APIs at any time through the &lt;a href=&quot;platform-specific-declarations&quot;&gt;&lt;code&gt;expect&lt;/code&gt;/&lt;code&gt;actual&lt;/code&gt; mechanism&lt;/a&gt; provided by the language.</source>
          <target state="translated">En general, la multiplataforma no se trata de compilar todo el c&amp;oacute;digo para todas las plataformas. Este modelo tiene sus limitaciones obvias y entendemos que las aplicaciones modernas necesitan acceso a caracter&amp;iacute;sticas &amp;uacute;nicas de las plataformas en las que se ejecutan. Kotlin no lo limita al subconjunto com&amp;uacute;n de todas las API del mundo. Cada componente puede compartir tanto c&amp;oacute;digo como sea necesario con otros, pero puede acceder a las API de la plataforma en cualquier momento a trav&amp;eacute;s del &lt;a href=&quot;platform-specific-declarations&quot;&gt;mecanismo &lt;/a&gt; &lt;code&gt;expect&lt;/code&gt; / &lt;code&gt;actual&lt;/code&gt; proporcionado por el lenguaje.</target>
        </trans-unit>
        <trans-unit id="7985f98f2e4e8de528bf2f20b91d10b65fb5b978" translate="yes" xml:space="preserve">
          <source>OverconstrainedErrorEventInit</source>
          <target state="translated">OverconstrainedErrorEventInit</target>
        </trans-unit>
        <trans-unit id="c952d0b1979fee4876fed3b2bae9f5ed565aaabe" translate="yes" xml:space="preserve">
          <source>Overload layout</source>
          <target state="translated">Diseño de la sobrecarga</target>
        </trans-unit>
        <trans-unit id="b66c392d53a75ec205c1d3c492b7e58a0e410210" translate="yes" xml:space="preserve">
          <source>OverloadResolutionByLambdaReturnType</source>
          <target state="translated">OverloadResolutionByLambdaReturnType</target>
        </trans-unit>
        <trans-unit id="3e7d88ee10c3c15b721eb8187cd87f4643715ad2" translate="yes" xml:space="preserve">
          <source>Overloaded functions and properties provided by the same library should do essentially the same thing. Changes in type inference may result in more precise static types to be known at call sites causing changes in overload resolution.</source>
          <target state="translated">Las funciones y propiedades sobrecargadas proporcionadas por la misma biblioteca deberían hacer esencialmente lo mismo.Los cambios en la inferencia de tipos pueden dar lugar a que se conozcan tipos estáticos más precisos en los sitios de llamada que causen cambios en la resolución de la sobrecarga.</target>
        </trans-unit>
        <trans-unit id="cb2f163ccc20cb7388203cf1edbc6860b44ea0f0" translate="yes" xml:space="preserve">
          <source>Overloading</source>
          <target state="translated">Overloading</target>
        </trans-unit>
        <trans-unit id="e6b45b9a5e179e49e414143db015c18fc536c9e5" translate="yes" xml:space="preserve">
          <source>Overloads generation</source>
          <target state="translated">Generación de sobrecargas</target>
        </trans-unit>
        <trans-unit id="da5b2097ee60b501632c6242ff39b9bd62ccc1fa" translate="yes" xml:space="preserve">
          <source>OverrideInit</source>
          <target state="translated">OverrideInit</target>
        </trans-unit>
        <trans-unit id="f6d0128873a034390aec66beae79d455e384657a" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-abstract-mutable-list/equals&quot;&gt;AbstractMutableList.equals&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13096f8424e6cbe9f79687fbd073e6c0b60a667" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-abstract-mutable-list/hash-code&quot;&gt;AbstractMutableList.hashCode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945393d320ad2e84b266063f79c1d098c79b4bbb" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-abstract-mutable-list/remove-range&quot;&gt;AbstractMutableList.removeRange&lt;/a&gt;</source>
          <target state="translated">Anula &lt;a href=&quot;../-abstract-mutable-list/remove-range&quot;&gt;AbstractMutableList.removeRange&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0412fb2e7e855fc5b71c429e7e8296c4512d1ddd" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-collection/contains&quot;&gt;Collection.contains&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../-collection/contains&quot;&gt;Colecci&amp;oacute;n de&lt;/a&gt; invalidaciones .</target>
        </trans-unit>
        <trans-unit id="e14d55c91b7965c1d6d631c1d07de9fa97080766" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-collection/contains-all&quot;&gt;Collection.containsAll&lt;/a&gt;</source>
          <target state="translated">Overrides &lt;a href=&quot;../-collection/contains-all&quot;&gt;Collection.containsAll&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ad0612dea8eaabf434ce52e7c783f5c48e2fddd" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-collection/is-empty&quot;&gt;Collection.isEmpty&lt;/a&gt;</source>
          <target state="translated">Anula &lt;a href=&quot;../-collection/is-empty&quot;&gt;Collection.isEmpty&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d8395525fedec5005642af530ca89906f16d5c31" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-collection/size&quot;&gt;Collection.size&lt;/a&gt;</source>
          <target state="translated">Reemplaza &lt;a href=&quot;../-collection/size&quot;&gt;Collection.size&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1bc61ce06e0fb2fbb1ac1456d5615e48f2ac19c" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-comparable/compare-to&quot;&gt;Comparable.compareTo&lt;/a&gt;</source>
          <target state="translated">Anula &lt;a href=&quot;../-comparable/compare-to&quot;&gt;Comparable.compareTo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1459fd426ebdbfd085b335b7740dd0d1604898aa" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-hash-map/create-entry-set&quot;&gt;HashMap.createEntrySet&lt;/a&gt;</source>
          <target state="translated">anulaciones &lt;a href=&quot;../-hash-map/create-entry-set&quot;&gt;HashMap.createEntrySet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a631c704ea221204bdf8458807af90d3c7b4aec9" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-k-callable/is-suspend&quot;&gt;KCallable.isSuspend&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080d8a8d69434dd0a8d63ec5fa94e660e073cb0e" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-k-declaration-container/members&quot;&gt;KDeclarationContainer.members&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1326929e31c2503ae4e7818f323a07a4a083c691" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-k-mutable-property/setter&quot;&gt;KMutableProperty.setter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d7c4653b6c31781dafc8f4ba1a8c2ee0d4f4cb" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-k-property/getter&quot;&gt;KProperty.getter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505ce4c5312a657ad2db2ad4fea4db1bac36448a" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-list/contains-all&quot;&gt;List.containsAll&lt;/a&gt;</source>
          <target state="translated">anulaciones &lt;a href=&quot;../-list/contains-all&quot;&gt;List.containsAll&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28eb9265deb1aca2369498234fa6e7ab3b001351" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-list/is-empty&quot;&gt;List.isEmpty&lt;/a&gt;</source>
          <target state="translated">anulaciones &lt;a href=&quot;../-list/is-empty&quot;&gt;List.isEmpty&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c04e861e843e37f9b39e84afa025cedf23f0ed4f" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-map/contains-key&quot;&gt;Map.containsKey&lt;/a&gt;</source>
          <target state="translated">anulaciones &lt;a href=&quot;../-map/contains-key&quot;&gt;Map.containsKey&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e53018f590dae1ff51f24c1f87b670d484b8f15a" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-map/contains-value&quot;&gt;Map.containsValue&lt;/a&gt;</source>
          <target state="translated">anulaciones &lt;a href=&quot;../-map/contains-value&quot;&gt;Map.containsValue&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfe3ee98c24d2eafcfa0a1b7987dfb17585cc22b" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-map/get&quot;&gt;Map.get&lt;/a&gt;</source>
          <target state="translated">anulaciones &lt;a href=&quot;../-map/get&quot;&gt;map.get&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7c1b304b14830a9f0f416fe6b1b545a7f67fb53" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-map/is-empty&quot;&gt;Map.isEmpty&lt;/a&gt;</source>
          <target state="translated">anulaciones &lt;a href=&quot;../-map/is-empty&quot;&gt;Map.isEmpty&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c9545ba01bf1ee531740e0b11ca9b68428d91ec" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-map/size&quot;&gt;Map.size&lt;/a&gt;</source>
          <target state="translated">anulaciones &lt;a href=&quot;../-map/size&quot;&gt;Map.size&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3810cd8fb4b8df070f0c23138c79569b47ec271b" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-mutable-collection/iterator&quot;&gt;MutableCollection.iterator&lt;/a&gt;</source>
          <target state="translated">anulaciones &lt;a href=&quot;../-mutable-collection/iterator&quot;&gt;MutableCollection.iterator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a16c6d97eeab4cc2591210ac7d932680db232505" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-mutable-list/add-all&quot;&gt;MutableList.addAll&lt;/a&gt;</source>
          <target state="translated">anulaciones &lt;a href=&quot;../-mutable-list/add-all&quot;&gt;MutableList.addAll&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ada0d5a0992424195238c6fd7c187d4766c440c7" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-mutable-list/remove&quot;&gt;MutableList.remove&lt;/a&gt;</source>
          <target state="translated">anulaciones &lt;a href=&quot;../-mutable-list/remove&quot;&gt;MutableList.remove&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc669baa4972bad392b7374e99e00a2abfded1a1" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-mutable-map/entries&quot;&gt;MutableMap.entries&lt;/a&gt;</source>
          <target state="translated">Invalida &lt;a href=&quot;../-mutable-map/entries&quot;&gt;MutableMap.entries&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c79ad03c13d000b71f177595ec492a2c28395c7c" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-mutable-map/keys&quot;&gt;MutableMap.keys&lt;/a&gt;</source>
          <target state="translated">Invalida &lt;a href=&quot;../-mutable-map/keys&quot;&gt;MutableMap.keys&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b4898ab832f11850009ac41b011794ef75cd869" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-mutable-map/put-all&quot;&gt;MutableMap.putAll&lt;/a&gt;</source>
          <target state="translated">anulaciones &lt;a href=&quot;../-mutable-map/put-all&quot;&gt;MutableMap.putAll&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cec29412680bec28164c0fe1f70dd087fad233d4" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-mutable-map/values&quot;&gt;MutableMap.values&lt;/a&gt;</source>
          <target state="translated">Invalida &lt;a href=&quot;../-mutable-map/values&quot;&gt;MutableMap.values&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed46cf9a43917b66a54752db98f6e6b09e0df162" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-mutable-set/add&quot;&gt;MutableSet.add&lt;/a&gt;</source>
          <target state="translated">Anula &lt;a href=&quot;../-mutable-set/add&quot;&gt;MutableSet.add&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dcf426c10d6d909d196a9b9f3bb5c61847249c1e" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-mutable-set/add-all&quot;&gt;MutableSet.addAll&lt;/a&gt;</source>
          <target state="translated">Anula &lt;a href=&quot;../-mutable-set/add-all&quot;&gt;MutableSet.addAll&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c002bcae05fefbc9d774039c0200e1713b4fb644" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-mutable-set/clear&quot;&gt;MutableSet.clear&lt;/a&gt;</source>
          <target state="translated">Anula &lt;a href=&quot;../-mutable-set/clear&quot;&gt;MutableSet.clear&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e205316a797cc598058f2ad91e62f19dc98b0380" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-mutable-set/iterator&quot;&gt;MutableSet.iterator&lt;/a&gt;</source>
          <target state="translated">Anula &lt;a href=&quot;../-mutable-set/iterator&quot;&gt;MutableSet.iterator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6eefd798285aa9425a8b6f34535ea9d116cd7648" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-mutable-set/remove&quot;&gt;MutableSet.remove&lt;/a&gt;</source>
          <target state="translated">Anula &lt;a href=&quot;../-mutable-set/remove&quot;&gt;MutableSet.remove&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5451bba7280c8ab2b1022ec4b8e432dddb2d0bb" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-mutable-set/remove-all&quot;&gt;MutableSet.removeAll&lt;/a&gt;</source>
          <target state="translated">Anula &lt;a href=&quot;../-mutable-set/remove-all&quot;&gt;MutableSet.removeAll&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13a378d256016ef3849bfd324183fff8ada7718f" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-mutable-set/retain-all&quot;&gt;MutableSet.retainAll&lt;/a&gt;</source>
          <target state="translated">Anula &lt;a href=&quot;../-mutable-set/retain-all&quot;&gt;MutableSet.retainAll&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5ffc92d2081ab9845fc58c54bbc6bf33bdd927b" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-set/contains&quot;&gt;Set.contains&lt;/a&gt;</source>
          <target state="translated">Overrides &lt;a href=&quot;../-set/contains&quot;&gt;Set.contains&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33d8d25ed831ccbd1a9c6a50b579b3e39a486849" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-set/contains-all&quot;&gt;Set.containsAll&lt;/a&gt;</source>
          <target state="translated">anulaciones &lt;a href=&quot;../-set/contains-all&quot;&gt;Set.containsAll&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ad60553efc9175c88ee2751fcb3da2043c4d1c8" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-set/is-empty&quot;&gt;Set.isEmpty&lt;/a&gt;</source>
          <target state="translated">anulaciones &lt;a href=&quot;../-set/is-empty&quot;&gt;Set.isEmpty&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4661e6d5d55bf62af3f8308493e1657e6b0acdc7" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../-set/size&quot;&gt;Set.size&lt;/a&gt;</source>
          <target state="translated">anulaciones &lt;a href=&quot;../-set/size&quot;&gt;Set.size&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6135137749f44ab01770866a1a5ad05ffe9fd2a" translate="yes" xml:space="preserve">
          <source>Overriding</source>
          <target state="translated">Overriding</target>
        </trans-unit>
        <trans-unit id="af9d2c60b74a53b5cbb456ba0c99630df9bb378f" translate="yes" xml:space="preserve">
          <source>Overriding Methods</source>
          <target state="translated">Métodos de anulación</target>
        </trans-unit>
        <trans-unit id="7b07f68f7f2b7a58542addc9fbcb507ada81c4d7" translate="yes" xml:space="preserve">
          <source>Overriding Properties</source>
          <target state="translated">Propiedades anulables</target>
        </trans-unit>
        <trans-unit id="fde9d61f62ecf5fdc44c2db7338a8f6a77860c34" translate="yes" xml:space="preserve">
          <source>Overriding Rules</source>
          <target state="translated">Reglas de anulación</target>
        </trans-unit>
        <trans-unit id="df0d0d85b110978af70f5bd1f72ba4d032e833dd" translate="yes" xml:space="preserve">
          <source>Overriding a member of an interface implemented by delegation</source>
          <target state="translated">La anulación de un miembro de una interfaz implementada por delegación</target>
        </trans-unit>
        <trans-unit id="3d33e5e332b0d870d1c5055d3a416e7a8f88ce54" translate="yes" xml:space="preserve">
          <source>Overriding methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18feeb4f63051a8c733b4345362ff0a45e9ffcb1" translate="yes" xml:space="preserve">
          <source>Overriding methods always use the same default parameter values as the base method. When overriding a method with default parameter values, the default parameter values must be omitted from the signature:</source>
          <target state="translated">Los métodos de anulación utilizan siempre los mismos valores de parámetros por defecto que el método de base.Al anular un método con valores de parámetros por defecto,los valores de los parámetros por defecto deben ser omitidos de la firma:</target>
        </trans-unit>
        <trans-unit id="a6d12143a28176cd000dbfa642bae145d40e6678" translate="yes" xml:space="preserve">
          <source>Overriding properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939e591297fdc051fb35c92fd6f0089d28174ab6" translate="yes" xml:space="preserve">
          <source>Overriding properties works in a similar way to overriding methods; properties declared on a superclass that are then redeclared on a derived class must be prefaced with &lt;em&gt;override&lt;/em&gt;, and they must have a compatible type. Each declared property can be overridden by a property with an initializer or by a property with a &lt;code&gt;get&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e581c34738ebec4dc6d1e8b2a8c45ac0c758a8" translate="yes" xml:space="preserve">
          <source>Overriding properties works in a similar way to overriding methods; properties declared on a superclass that are then redeclared on a derived class must be prefaced with &lt;em&gt;override&lt;/em&gt;, and they must have a compatible type. Each declared property can be overridden by a property with an initializer or by a property with a getter method.</source>
          <target state="translated">La invalidaci&amp;oacute;n de propiedades funciona de manera similar a la invalidaci&amp;oacute;n de m&amp;eacute;todos; las propiedades declaradas en una superclase que luego se vuelven a declarar en una clase derivada deben ir precedidas de &lt;em&gt;override&lt;/em&gt; y deben tener un tipo compatible. Cada propiedad declarada puede ser reemplazada por una propiedad con un inicializador o por una propiedad con un m&amp;eacute;todo getter.</target>
        </trans-unit>
        <trans-unit id="b97a6088d900f4c75aef6a7d938c26d0720684e6" translate="yes" xml:space="preserve">
          <source>Overriding rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="c7a86015f3f4daeacc41d303c97f2340f4320e19" translate="yes" xml:space="preserve">
          <source>PARAGRAPH_SEPARATOR</source>
          <target state="translated">PARAGRAPH_SEPARATOR</target>
        </trans-unit>
        <trans-unit id="fa7ff6fb00a7ace8d98cf880a492dc6c5ffc8ca7" translate="yes" xml:space="preserve">
          <source>PI</source>
          <target state="translated">PI</target>
        </trans-unit>
        <trans-unit id="090d50c51374f7c58b2081f1b3c850d6b151f3fb" translate="yes" xml:space="preserve">
          <source>PLEASE NOTE THAT THIS ANNOTATION MAY GO AWAY IN UPCOMING RELEASES.</source>
          <target state="translated">POR FAVOR,TENGA EN CUENTA QUE ESTA ANOTACIÓN PUEDE DESAPARECER EN LOS PRÓXIMOS LANZAMIENTOS.</target>
        </trans-unit>
        <trans-unit id="ac606dbad42d1c4714aa6a9bf09911a8e876ff06" translate="yes" xml:space="preserve">
          <source>POP_DIRECTIONAL_FORMAT</source>
          <target state="translated">POP_DIRECTIONAL_FORMAT</target>
        </trans-unit>
        <trans-unit id="8f1690cac270605877b569090a52e1dedb1b3cb7" translate="yes" xml:space="preserve">
          <source>POSITIVE_INFINITY</source>
          <target state="translated">POSITIVE_INFINITY</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
