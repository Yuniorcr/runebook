<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="kotlin">
    <body>
      <group id="kotlin">
        <trans-unit id="2e3cf95b689244eb673190f3f6791a8430eef505" translate="yes" xml:space="preserve">
          <source>To run tests, execute the standard lifecycle &lt;code&gt;check&lt;/code&gt; task:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d7a0df7bd3a304f110999cd04f5328dff8bc19" translate="yes" xml:space="preserve">
          <source>To run the application, right-click somewhere in the main file and select &lt;strong&gt;Run As | Kotlin Application&lt;/strong&gt;.</source>
          <target state="translated">Para ejecutar la aplicaci&amp;oacute;n, haga clic con el bot&amp;oacute;n derecho en alg&amp;uacute;n lugar del archivo principal y seleccione &lt;strong&gt;Ejecutar como | Aplicaci&amp;oacute;n Kotlin&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="307aa135f670640b026c3a84d1ad04d1025f9beb" translate="yes" xml:space="preserve">
          <source>To run the tests in the browser, we can execute the &lt;code&gt;browserTest&lt;/code&gt; task via IntelliJ IDEA, or use the gutter icons to execute all or individual tests:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4d15311fa7cd994c8e9ce22c145ce856d694db" translate="yes" xml:space="preserve">
          <source>To save your course as a zip file, go to &lt;strong&gt;Course Creator -&amp;gt; Generate Course Archive&lt;/strong&gt; action. The generated archive can be opened via the &lt;strong&gt;Browse Courses&lt;/strong&gt; available from the &lt;strong&gt;Welcome Screen&lt;/strong&gt; and in the &lt;strong&gt;File Menu&lt;/strong&gt; with the &lt;strong&gt;Import Course&lt;/strong&gt; icon:</source>
          <target state="translated">Para guardar su curso como un archivo zip, vaya a &lt;strong&gt;Course Creator -&amp;gt;&lt;/strong&gt; Acci&amp;oacute;n &lt;strong&gt;Generar archivo de curso&lt;/strong&gt; . El archivo generado se puede abrir mediante &lt;strong&gt;Examinar cursos&lt;/strong&gt; disponibles en la &lt;strong&gt;pantalla de bienvenida&lt;/strong&gt; y en el &lt;strong&gt;men&amp;uacute; Archivo&lt;/strong&gt; con el icono &lt;strong&gt;Importar curso&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="36a621d8894a43c60f62b88c51e7aa345450af8d" translate="yes" xml:space="preserve">
          <source>To search an element in a sorted list, call the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/binary-search&quot;&gt;&lt;code&gt;binarySearch()&lt;/code&gt;&lt;/a&gt; function passing the value as an argument. If such an element exists, the function returns its index; otherwise, it returns &lt;code&gt;(-insertionPoint - 1)&lt;/code&gt; where &lt;code&gt;insertionPoint&lt;/code&gt; is the index where this element should be inserted so that the list remains sorted. If there is more than one element with the given value, the search can return any of their indices.</source>
          <target state="translated">Para buscar un elemento en una lista ordenada, llame a la funci&amp;oacute;n &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/binary-search&quot;&gt; &lt;code&gt;binarySearch()&lt;/code&gt; &lt;/a&gt; pasando el valor como argumento. Si tal elemento existe, la funci&amp;oacute;n devuelve su &amp;iacute;ndice; de lo contrario, devuelve &lt;code&gt;(-insertionPoint - 1)&lt;/code&gt; donde &lt;code&gt;insertionPoint&lt;/code&gt; es el &amp;iacute;ndice donde se debe insertar este elemento para que la lista permanezca ordenada. Si hay m&amp;aacute;s de un elemento con el valor dado, la b&amp;uacute;squeda puede devolver cualquiera de sus &amp;iacute;ndices.</target>
        </trans-unit>
        <trans-unit id="bf705e6bade184c44c4ccccae5cda8a8acf3a41e" translate="yes" xml:space="preserve">
          <source>To see how we can express how elements in the DOM can be created and structured in a concise way, check out the the &lt;a href=&quot;typesafe-html-dsl&quot;&gt;Typesafe HTML DSL&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680ca05ae718e68cfb1629f08e49b399fcda4d93" translate="yes" xml:space="preserve">
          <source>To see the full Gradle script check out the source of the project on GitHub.</source>
          <target state="translated">Para ver el gui√≥n completo de Gradle comprueba la fuente del proyecto en GitHub.</target>
        </trans-unit>
        <trans-unit id="6bc22d1c45afda0ba0e9856d43874792a674530d" translate="yes" xml:space="preserve">
          <source>To select module kind, set the &lt;code&gt;moduleKind&lt;/code&gt; compiler option in the Gradle build script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d76d8df652a0954c4314eb6cd119fb4f22f648" translate="yes" xml:space="preserve">
          <source>To select module system when compiling via Gradle, you should set &lt;code&gt;moduleKind&lt;/code&gt; property, i.e.</source>
          <target state="translated">Para seleccionar el sistema de m&amp;oacute;dulos al compilar a trav&amp;eacute;s de Gradle, debe establecer la propiedad &lt;code&gt;moduleKind&lt;/code&gt; , es decir</target>
        </trans-unit>
        <trans-unit id="16681c84550456d5ff8bc73b03434df79d115f43" translate="yes" xml:space="preserve">
          <source>To select module system when compiling via Maven, you should set &lt;code&gt;moduleKind&lt;/code&gt; configuration property, i.e. your &lt;code&gt;pom.xml&lt;/code&gt; should look like this:</source>
          <target state="translated">Para seleccionar el sistema de m&amp;oacute;dulos al compilar a trav&amp;eacute;s de Maven, debe establecer la propiedad de configuraci&amp;oacute;n &lt;code&gt;moduleKind&lt;/code&gt; , es decir, su &lt;code&gt;pom.xml&lt;/code&gt; debe verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="45e994b1f4d37b99eaddc699cd613274dee03180" translate="yes" xml:space="preserve">
          <source>To set another location for project distribution files, add the &lt;code&gt;distribution&lt;/code&gt; block inside &lt;code&gt;browser&lt;/code&gt; in the build script and assign a value to the &lt;code&gt;directory&lt;/code&gt; property. Once you run a project build task, Gradle will save the output bundle in this location together with project resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269c5e540e50596c2266b2737868df5485939c07" translate="yes" xml:space="preserve">
          <source>To set the desired level, specify the &lt;code&gt;level&lt;/code&gt; parameter of the &lt;code&gt;@RequiresOptIn&lt;/code&gt; annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dfb90c4357595726b2e826922df2d26c2c78269" translate="yes" xml:space="preserve">
          <source>To setup a multiplatform project from scratch in a Gradle project, first apply the &lt;code&gt;kotlin-multiplatform&lt;/code&gt; plugin to the project by adding the following to the beginning of the &lt;code&gt;build.gradle&lt;/code&gt; file:</source>
          <target state="translated">Para configurar un proyecto multiplataforma desde cero en un proyecto Gradle, primero aplique el &lt;code&gt;kotlin-multiplatform&lt;/code&gt; al proyecto agregando lo siguiente al comienzo del archivo &lt;code&gt;build.gradle&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c7e47d17458659905c4f2f62bdab7488ae50c7a1" translate="yes" xml:space="preserve">
          <source>To skip automatic conversion and ensure raw pointers are used in the bindings, a &lt;code&gt;noStringConversion&lt;/code&gt; statement in the &lt;code&gt;.def&lt;/code&gt; file could be used, i.e.</source>
          <target state="translated">Para omitir la conversi&amp;oacute;n autom&amp;aacute;tica y garantizar que se usen punteros sin procesar en los enlaces, se &lt;code&gt;noStringConversion&lt;/code&gt; una declaraci&amp;oacute;n noStringConversion en el archivo &lt;code&gt;.def&lt;/code&gt; , es decir</target>
        </trans-unit>
        <trans-unit id="db6bb94ddd68466610ca12cc204d3d3c6bd7dd12" translate="yes" xml:space="preserve">
          <source>To solve such issues, Kotlin introduces a special kind of class called an &lt;code&gt;inline class&lt;/code&gt;, which is declared by placing an &lt;code&gt;inline&lt;/code&gt; modifier before the name of the class:</source>
          <target state="translated">Para resolver estos problemas, Kotlin introduce un tipo especial de clase llamada clase en &lt;code&gt;inline class&lt;/code&gt; , que se declara colocando un modificador en &lt;code&gt;inline&lt;/code&gt; antes del nombre de la clase:</target>
        </trans-unit>
        <trans-unit id="885ff03b6c597841318a22240c06f643cf1cd5fb" translate="yes" xml:space="preserve">
          <source>To solve this, mark the targets on both the library author and consumer sides with a custom attribute, which Gradle uses during dependency resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6edca763e12c6292a414b20b65eaba5f53f467b" translate="yes" xml:space="preserve">
          <source>To specify a visibility of the primary constructor of a class, use the following syntax (note that you need to add an explicit &lt;em&gt;constructor&lt;/em&gt; keyword):</source>
          <target state="translated">Para especificar una visibilidad del constructor principal de una clase, use la siguiente sintaxis (tenga en cuenta que debe agregar una palabra clave expl&amp;iacute;cita de &lt;em&gt;constructor&lt;/em&gt; ):</target>
        </trans-unit>
        <trans-unit id="419bcc45449c9e2a7d1fb4c22599e33f123b758a" translate="yes" xml:space="preserve">
          <source>To specify additional compilation options, use the &lt;code&gt;kotlinOptions&lt;/code&gt; property of a Kotlin compilation task.</source>
          <target state="translated">Para especificar opciones de compilaci&amp;oacute;n adicionales, use la propiedad &lt;code&gt;kotlinOptions&lt;/code&gt; de una tarea de compilaci&amp;oacute;n de Kotlin.</target>
        </trans-unit>
        <trans-unit id="0ac203e68342bc2b26ca6bd486204285a11e36be" translate="yes" xml:space="preserve">
          <source>To specify that a function type is &lt;a href=&quot;null-safety#nullable-types-and-non-null-types&quot;&gt;nullable&lt;/a&gt;, use parentheses: &lt;code&gt;((Int, Int) -&amp;gt; Int)?&lt;/code&gt;.</source>
          <target state="translated">Para especificar que un tipo de funci&amp;oacute;n es &lt;a href=&quot;null-safety#nullable-types-and-non-null-types&quot;&gt;anulable&lt;/a&gt; , use par&amp;eacute;ntesis: &lt;code&gt;((Int, Int) -&amp;gt; Int)?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa582abf300c214133b85270789a22565f82393f" translate="yes" xml:space="preserve">
          <source>To start coroutine debugging, you just need to set breakpoints and run the application in debug mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57f72b9d262e6ee5d6ce2e784cc4119575a7e41" translate="yes" xml:space="preserve">
          <source>To start executing the created coroutine, invoke &lt;code&gt;resume(Unit)&lt;/code&gt; on the returned &lt;a href=&quot;-continuation/index&quot;&gt;Continuation&lt;/a&gt; instance. The &lt;a href=&quot;create-coroutine#kotlin.coroutines%24createCoroutine%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.createCoroutine.T%29%29%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.createCoroutine.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception. Subsequent invocation of any resume function on the resulting continuation will produce an &lt;a href=&quot;../kotlin/-illegal-state-exception/index#kotlin.IllegalStateException&quot;&gt;IllegalStateException&lt;/a&gt;.</source>
          <target state="translated">Para comenzar a ejecutar la corrutina creada, invoque &lt;code&gt;resume(Unit)&lt;/code&gt; en la instancia de &lt;a href=&quot;-continuation/index&quot;&gt;continuaci&amp;oacute;n&lt;/a&gt; devuelta . La continuaci&amp;oacute;n de &lt;a href=&quot;create-coroutine#kotlin.coroutines%24createCoroutine%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.createCoroutine.T%29%29%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.createCoroutine.T%29%29%29%2Fcompletion&quot;&gt;finalizaci&amp;oacute;n&lt;/a&gt; se invoca cuando la corrutina se completa con un resultado o una excepci&amp;oacute;n. La invocaci&amp;oacute;n posterior de cualquier funci&amp;oacute;n de reanudaci&amp;oacute;n en la continuaci&amp;oacute;n resultante producir&amp;aacute; una &lt;a href=&quot;../kotlin/-illegal-state-exception/index#kotlin.IllegalStateException&quot;&gt;IllegalStateException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="29211ac1a181cd4bb3901bb410d7de3d38f88156" translate="yes" xml:space="preserve">
          <source>To start executing the created coroutine, invoke &lt;code&gt;resume(Unit)&lt;/code&gt; on the returned &lt;a href=&quot;-continuation/index&quot;&gt;Continuation&lt;/a&gt; instance. The &lt;a href=&quot;create-coroutine#kotlin.coroutines%24createCoroutine%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.createCoroutine.R%2C+kotlin.coroutines.createCoroutine.T%29%29%2C+kotlin.coroutines.createCoroutine.R%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.createCoroutine.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception. Subsequent invocation of any resume function on the resulting continuation will produce an &lt;a href=&quot;../kotlin/-illegal-state-exception/index#kotlin.IllegalStateException&quot;&gt;IllegalStateException&lt;/a&gt;.</source>
          <target state="translated">Para comenzar a ejecutar la corrutina creada, invoque &lt;code&gt;resume(Unit)&lt;/code&gt; en la instancia de &lt;a href=&quot;-continuation/index&quot;&gt;continuaci&amp;oacute;n&lt;/a&gt; devuelta . La continuaci&amp;oacute;n de &lt;a href=&quot;create-coroutine#kotlin.coroutines%24createCoroutine%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.createCoroutine.R%2C+kotlin.coroutines.createCoroutine.T%29%29%2C+kotlin.coroutines.createCoroutine.R%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.createCoroutine.T%29%29%29%2Fcompletion&quot;&gt;finalizaci&amp;oacute;n&lt;/a&gt; se invoca cuando la corrutina se completa con un resultado o una excepci&amp;oacute;n. La invocaci&amp;oacute;n posterior de cualquier funci&amp;oacute;n de reanudaci&amp;oacute;n en la continuaci&amp;oacute;n resultante producir&amp;aacute; una &lt;a href=&quot;../kotlin/-illegal-state-exception/index#kotlin.IllegalStateException&quot;&gt;IllegalStateException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="93a4c159e45ae9b13567d12cfe549a89c643e81c" translate="yes" xml:space="preserve">
          <source>To start executing the created coroutine, invoke &lt;code&gt;resume(Unit)&lt;/code&gt; on the returned &lt;a href=&quot;-continuation/index&quot;&gt;Continuation&lt;/a&gt; instance. The &lt;a href=&quot;create-coroutine#kotlin.coroutines%24createCoroutine(kotlin.coroutines.SuspendFunction0((kotlin.coroutines.createCoroutine.T)),%20kotlin.coroutines.Continuation((kotlin.coroutines.createCoroutine.T)))/completion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception. Subsequent invocation of any resume function on the resulting continuation will produce an &lt;a href=&quot;../kotlin/-illegal-state-exception/index#kotlin.IllegalStateException&quot;&gt;IllegalStateException&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03689575e5ce0d05cb5875c63b25386ef2dc70ce" translate="yes" xml:space="preserve">
          <source>To start executing the created coroutine, invoke &lt;code&gt;resume(Unit)&lt;/code&gt; on the returned &lt;a href=&quot;-continuation/index&quot;&gt;Continuation&lt;/a&gt; instance. The &lt;a href=&quot;create-coroutine#kotlin.coroutines%24createCoroutine(kotlin.coroutines.SuspendFunction1((kotlin.coroutines.createCoroutine.R,%20kotlin.coroutines.createCoroutine.T)),%20kotlin.coroutines.createCoroutine.R,%20kotlin.coroutines.Continuation((kotlin.coroutines.createCoroutine.T)))/completion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception. Subsequent invocation of any resume function on the resulting continuation will produce an &lt;a href=&quot;../kotlin/-illegal-state-exception/index#kotlin.IllegalStateException&quot;&gt;IllegalStateException&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b715c677cb96aa31e520707c8bf7a084527dde6c" translate="yes" xml:space="preserve">
          <source>To start executing the created coroutine, invoke &lt;code&gt;resume(Unit)&lt;/code&gt; on the returned &lt;a href=&quot;-continuation/index&quot;&gt;Continuation&lt;/a&gt; instance. The &lt;a href=&quot;create-coroutine#kotlin.coroutines.experimental%24createCoroutine%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.experimental.createCoroutine.T%29%29%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.createCoroutine.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when coroutine completes with result or exception. Repeated invocation of any resume function on the resulting continuation produces &lt;a href=&quot;../kotlin/-illegal-state-exception/index#kotlin.IllegalStateException&quot;&gt;IllegalStateException&lt;/a&gt;.</source>
          <target state="translated">Para comenzar a ejecutar la corrutina creada, invoque &lt;code&gt;resume(Unit)&lt;/code&gt; en la instancia de &lt;a href=&quot;-continuation/index&quot;&gt;continuaci&amp;oacute;n&lt;/a&gt; devuelta . La continuaci&amp;oacute;n de &lt;a href=&quot;create-coroutine#kotlin.coroutines.experimental%24createCoroutine%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.experimental.createCoroutine.T%29%29%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.createCoroutine.T%29%29%29%2Fcompletion&quot;&gt;finalizaci&amp;oacute;n&lt;/a&gt; se invoca cuando la corrutina se completa con resultado o excepci&amp;oacute;n. La invocaci&amp;oacute;n repetida de cualquier funci&amp;oacute;n de reanudaci&amp;oacute;n en la continuaci&amp;oacute;n resultante produce &lt;a href=&quot;../kotlin/-illegal-state-exception/index#kotlin.IllegalStateException&quot;&gt;IllegalStateException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7ae9d4ba7899cbe4180b0d690d30390847f2291f" translate="yes" xml:space="preserve">
          <source>To start executing the created coroutine, invoke &lt;code&gt;resume(Unit)&lt;/code&gt; on the returned &lt;a href=&quot;-continuation/index&quot;&gt;Continuation&lt;/a&gt; instance. The &lt;a href=&quot;create-coroutine#kotlin.coroutines.experimental%24createCoroutine%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.experimental.createCoroutine.R%2C+kotlin.coroutines.experimental.createCoroutine.T%29%29%2C+kotlin.coroutines.experimental.createCoroutine.R%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.createCoroutine.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when coroutine completes with result or exception. Repeated invocation of any resume function on the resulting continuation produces &lt;a href=&quot;../kotlin/-illegal-state-exception/index#kotlin.IllegalStateException&quot;&gt;IllegalStateException&lt;/a&gt;.</source>
          <target state="translated">Para comenzar a ejecutar la corrutina creada, invoque &lt;code&gt;resume(Unit)&lt;/code&gt; en la instancia de &lt;a href=&quot;-continuation/index&quot;&gt;continuaci&amp;oacute;n&lt;/a&gt; devuelta . La continuaci&amp;oacute;n de &lt;a href=&quot;create-coroutine#kotlin.coroutines.experimental%24createCoroutine%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.experimental.createCoroutine.R%2C+kotlin.coroutines.experimental.createCoroutine.T%29%29%2C+kotlin.coroutines.experimental.createCoroutine.R%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.createCoroutine.T%29%29%29%2Fcompletion&quot;&gt;finalizaci&amp;oacute;n&lt;/a&gt; se invoca cuando la corrutina se completa con resultado o excepci&amp;oacute;n. La invocaci&amp;oacute;n repetida de cualquier funci&amp;oacute;n de reanudaci&amp;oacute;n en la continuaci&amp;oacute;n resultante produce &lt;a href=&quot;../kotlin/-illegal-state-exception/index#kotlin.IllegalStateException&quot;&gt;IllegalStateException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dfc6df82451691b1971099e0817380884cac3aec" translate="yes" xml:space="preserve">
          <source>To start executing the created coroutine, invoke &lt;code&gt;resume(Unit)&lt;/code&gt; on the returned Continuation instance. The &lt;a href=&quot;create-coroutine-unchecked#kotlin.coroutines.experimental.intrinsics%24createCoroutineUnchecked%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.experimental.intrinsics.createCoroutineUnchecked.T%29%29%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.createCoroutineUnchecked.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when coroutine completes with result or exception.</source>
          <target state="translated">Para comenzar a ejecutar la corrutina creada, invoque &lt;code&gt;resume(Unit)&lt;/code&gt; en la instancia de continuaci&amp;oacute;n devuelta. La continuaci&amp;oacute;n de &lt;a href=&quot;create-coroutine-unchecked#kotlin.coroutines.experimental.intrinsics%24createCoroutineUnchecked%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.experimental.intrinsics.createCoroutineUnchecked.T%29%29%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.createCoroutineUnchecked.T%29%29%29%2Fcompletion&quot;&gt;finalizaci&amp;oacute;n&lt;/a&gt; se invoca cuando la corrutina se completa con resultado o excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e102b42121057a6878b15b2e0b7a9abdd7059c88" translate="yes" xml:space="preserve">
          <source>To start executing the created coroutine, invoke &lt;code&gt;resume(Unit)&lt;/code&gt; on the returned Continuation instance. The &lt;a href=&quot;create-coroutine-unchecked#kotlin.coroutines.experimental.intrinsics%24createCoroutineUnchecked%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.experimental.intrinsics.createCoroutineUnchecked.R%2C+kotlin.coroutines.experimental.intrinsics.createCoroutineUnchecked.T%29%29%2C+kotlin.coroutines.experimental.intrinsics.createCoroutineUnchecked.R%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.createCoroutineUnchecked.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when coroutine completes with result or exception.</source>
          <target state="translated">Para comenzar a ejecutar la corrutina creada, invoque &lt;code&gt;resume(Unit)&lt;/code&gt; en la instancia de continuaci&amp;oacute;n devuelta. La continuaci&amp;oacute;n de &lt;a href=&quot;create-coroutine-unchecked#kotlin.coroutines.experimental.intrinsics%24createCoroutineUnchecked%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.experimental.intrinsics.createCoroutineUnchecked.R%2C+kotlin.coroutines.experimental.intrinsics.createCoroutineUnchecked.T%29%29%2C+kotlin.coroutines.experimental.intrinsics.createCoroutineUnchecked.R%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.createCoroutineUnchecked.T%29%29%29%2Fcompletion&quot;&gt;finalizaci&amp;oacute;n&lt;/a&gt; se invoca cuando la corrutina se completa con resultado o excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a74d51560d5c774d1a56f8d84a208e43206f3604" translate="yes" xml:space="preserve">
          <source>To start executing the created coroutine, invoke &lt;code&gt;resume(Unit)&lt;/code&gt; on the returned Continuation instance. The &lt;a href=&quot;create-coroutine-unintercepted#kotlin.coroutines.intrinsics%24createCoroutineUnintercepted%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.intrinsics.createCoroutineUnintercepted.T%29%29%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.createCoroutineUnintercepted.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when coroutine completes with result or exception.</source>
          <target state="translated">Para comenzar a ejecutar la corrutina creada, invoque &lt;code&gt;resume(Unit)&lt;/code&gt; en la instancia de continuaci&amp;oacute;n devuelta. La continuaci&amp;oacute;n de &lt;a href=&quot;create-coroutine-unintercepted#kotlin.coroutines.intrinsics%24createCoroutineUnintercepted%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.intrinsics.createCoroutineUnintercepted.T%29%29%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.createCoroutineUnintercepted.T%29%29%29%2Fcompletion&quot;&gt;finalizaci&amp;oacute;n&lt;/a&gt; se invoca cuando la corrutina se completa con resultado o excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="aa80d28b000c404e7e7471739dc834ced4e443ec" translate="yes" xml:space="preserve">
          <source>To start executing the created coroutine, invoke &lt;code&gt;resume(Unit)&lt;/code&gt; on the returned Continuation instance. The &lt;a href=&quot;create-coroutine-unintercepted#kotlin.coroutines.intrinsics%24createCoroutineUnintercepted%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.intrinsics.createCoroutineUnintercepted.R%2C+kotlin.coroutines.intrinsics.createCoroutineUnintercepted.T%29%29%2C+kotlin.coroutines.intrinsics.createCoroutineUnintercepted.R%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.createCoroutineUnintercepted.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when coroutine completes with result or exception.</source>
          <target state="translated">Para comenzar a ejecutar la corrutina creada, invoque &lt;code&gt;resume(Unit)&lt;/code&gt; en la instancia de continuaci&amp;oacute;n devuelta. La continuaci&amp;oacute;n de &lt;a href=&quot;create-coroutine-unintercepted#kotlin.coroutines.intrinsics%24createCoroutineUnintercepted%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.intrinsics.createCoroutineUnintercepted.R%2C+kotlin.coroutines.intrinsics.createCoroutineUnintercepted.T%29%29%2C+kotlin.coroutines.intrinsics.createCoroutineUnintercepted.R%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.createCoroutineUnintercepted.T%29%29%29%2Fcompletion&quot;&gt;finalizaci&amp;oacute;n&lt;/a&gt; se invoca cuando la corrutina se completa con resultado o excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="107268b53cdccea4df633455aa08e9eb59213796" translate="yes" xml:space="preserve">
          <source>To start executing the created coroutine, invoke &lt;code&gt;resume(Unit)&lt;/code&gt; on the returned Continuation instance. The &lt;a href=&quot;create-coroutine-unintercepted#kotlin.coroutines.intrinsics%24createCoroutineUnintercepted(kotlin.coroutines.SuspendFunction0((kotlin.coroutines.intrinsics.createCoroutineUnintercepted.T)),%20kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.createCoroutineUnintercepted.T)))/completion&quot;&gt;completion&lt;/a&gt; continuation is invoked when coroutine completes with result or exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c18083bec73d38fe935b18a61bfb26719f41fa" translate="yes" xml:space="preserve">
          <source>To start executing the created coroutine, invoke &lt;code&gt;resume(Unit)&lt;/code&gt; on the returned Continuation instance. The &lt;a href=&quot;create-coroutine-unintercepted#kotlin.coroutines.intrinsics%24createCoroutineUnintercepted(kotlin.coroutines.SuspendFunction1((kotlin.coroutines.intrinsics.createCoroutineUnintercepted.R,%20kotlin.coroutines.intrinsics.createCoroutineUnintercepted.T)),%20kotlin.coroutines.intrinsics.createCoroutineUnintercepted.R,%20kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.createCoroutineUnintercepted.T)))/completion&quot;&gt;completion&lt;/a&gt; continuation is invoked when coroutine completes with result or exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2482fe90c75c3748aeac1be942111f81e932b33" translate="yes" xml:space="preserve">
          <source>To start the course, go to &lt;strong&gt;View -&amp;gt; Tool Windows -&amp;gt; Project&lt;/strong&gt;. You will find a course plan, the list of lessons. Every lesson has a set of tasks and code exercises you need to solve. Start with the very first one:</source>
          <target state="translated">Para iniciar el curso, vaya a &lt;strong&gt;Ver -&amp;gt; Ventanas de herramientas -&amp;gt; Proyecto&lt;/strong&gt; . Encontrar&amp;aacute; un plan del curso, la lista de lecciones. Cada lecci&amp;oacute;n tiene un conjunto de tareas y ejercicios de c&amp;oacute;digo que debe resolver. Comience con el primero:</target>
        </trans-unit>
        <trans-unit id="af4a3359bcc2d8aaecee721a7eaa5358429907bb" translate="yes" xml:space="preserve">
          <source>To start using Kotlin for JavaScript, please refer to the &lt;a href=&quot;js-project-setup&quot;&gt;Setting up a Kotlin/JS project&lt;/a&gt;, or pick a hands-on lab from the next section to work through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3ceec14c1433cf322f7865c09a18312ccb1945" translate="yes" xml:space="preserve">
          <source>To start with, we'll need a Microsoft Visual C++ compiler installed that supports a x64_64 target. The easiest way to do this is to have a version of Microsoft Visual Studio installed on a Windows machine.</source>
          <target state="translated">Para empezar,necesitaremos un compilador de Microsoft Visual C++instalado que soporte un objetivo x64_64.La forma m√°s f√°cil de hacerlo es tener una versi√≥n de Microsoft Visual Studio instalada en un equipo con Windows.</target>
        </trans-unit>
        <trans-unit id="66185b084e5432ac45a03abd883161f880e5f11e" translate="yes" xml:space="preserve">
          <source>To switch to the old behavior, pass the fallback flag &lt;code&gt;-Xno-receiver-assertions&lt;/code&gt; to the compiler.</source>
          <target state="translated">Para cambiar al comportamiento anterior, pase el indicador de reserva &lt;code&gt;-Xno-receiver-assertions&lt;/code&gt; al compilador.</target>
        </trans-unit>
        <trans-unit id="cc3b8fe9e3a75acdfca2d542f5fc3f0b9c8e0c32" translate="yes" xml:space="preserve">
          <source>To switch to the old smart casts behavior, pass the fallback flag &lt;code&gt;-Xlegacy-smart-cast-after-try&lt;/code&gt; as the compiler argument. It will become deprecated in Kotlin 1.3.</source>
          <target state="translated">Para cambiar al antiguo comportamiento de las &lt;code&gt;-Xlegacy-smart-cast-after-try&lt;/code&gt; , pase el indicador de reserva -Xlegacy-smart-cast-after-try como argumento del compilador. Quedar&amp;aacute; obsoleto en Kotlin 1.3.</target>
        </trans-unit>
        <trans-unit id="526447430819405af6d133c6984847835417ebe8" translate="yes" xml:space="preserve">
          <source>To symbolicate addresses in Kotlin code (e.g. for stack trace elements corresponding to Kotlin code) &lt;code&gt;.dSYM&lt;/code&gt; bundle for Kotlin code is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee56f12e381a099c59880a6823066a60e9d50df" translate="yes" xml:space="preserve">
          <source>To take all the elements except a given number of first or last elements, call the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/drop&quot;&gt;&lt;code&gt;drop()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/drop-last&quot;&gt;&lt;code&gt;dropLast()&lt;/code&gt;&lt;/a&gt; functions respectively.</source>
          <target state="translated">Para tomar todos los elementos excepto un n&amp;uacute;mero dado de primeros o &amp;uacute;ltimos elementos, llame a las funciones &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/drop&quot;&gt; &lt;code&gt;drop()&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/drop-last&quot;&gt; &lt;code&gt;dropLast()&lt;/code&gt; &lt;/a&gt; respectivamente.</target>
        </trans-unit>
        <trans-unit id="27b36af5861b299fc805f783568e62a3fc319e12" translate="yes" xml:space="preserve">
          <source>To target the JVM, apply the Kotlin JVM plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca844ba87cff8c023079c9be62782b3a3fde8a97" translate="yes" xml:space="preserve">
          <source>To target the JVM, apply the Kotlin JVM plugin. Starting with Kotlin 1.1.1, the plugin can be applied using the &lt;a href=&quot;https://docs.gradle.org/current/userguide/plugins.html#sec:plugins_block&quot;&gt;Gradle plugins DSL&lt;/a&gt;:</source>
          <target state="translated">Para apuntar a la JVM, aplique el complemento Kotlin JVM. A partir de Kotlin 1.1.1, el complemento se puede aplicar utilizando los &lt;a href=&quot;https://docs.gradle.org/current/userguide/plugins.html#sec:plugins_block&quot;&gt;complementos de Gradle DSL&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="089288f0ea4e442474ea533e687f95ceb53b919e" translate="yes" xml:space="preserve">
          <source>To tell Kotlin that a certain declaration is written in pure JavaScript, you should mark it with &lt;code&gt;external&lt;/code&gt; modifier. When the compiler sees such a declaration, it assumes that the implementation for the corresponding class, function or property is provided by the developer, and therefore does not try to generate any JavaScript code from the declaration. This means that you should omit bodies of &lt;code&gt;external&lt;/code&gt; declarations. For example:</source>
          <target state="translated">Para decirle a Kotlin que una determinada declaraci&amp;oacute;n est&amp;aacute; escrita en JavaScript puro, debe marcarla con &lt;code&gt;external&lt;/code&gt; modificador externo . Cuando el compilador ve dicha declaraci&amp;oacute;n, asume que el desarrollador proporciona la implementaci&amp;oacute;n para la clase, funci&amp;oacute;n o propiedad correspondiente y, por lo tanto, no intenta generar ning&amp;uacute;n c&amp;oacute;digo JavaScript a partir de la declaraci&amp;oacute;n. Esto significa que debe omitir los cuerpos de &lt;code&gt;external&lt;/code&gt; declaraciones externas . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c054ec329a7a56272832fde51ee7e82f8f4336b8" translate="yes" xml:space="preserve">
          <source>To tell Kotlin that a certain declaration is written in pure JavaScript, you should mark it with the &lt;code&gt;external&lt;/code&gt; modifier. When the compiler sees such a declaration, it assumes that the implementation for the corresponding class, function or property is provided externally (by the developer or via an &lt;a href=&quot;js-project-setup#npm-dependencies&quot;&gt;npm dependency&lt;/a&gt;), and therefore does not try to generate any JavaScript code from the declaration. This is also why &lt;code&gt;external&lt;/code&gt; declarations can't have a body. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b684242eb1261a088744c1edd0d98430ef5246" translate="yes" xml:space="preserve">
          <source>To tell Kotlin that an &lt;code&gt;external&lt;/code&gt; class, package, function or property is a JavaScript module, you can use &lt;code&gt;@JsModule&lt;/code&gt; annotation. Consider you have the following CommonJS module called &quot;hello&quot;:</source>
          <target state="translated">Para decirle a Kotlin que una clase, paquete, funci&amp;oacute;n o propiedad &lt;code&gt;external&lt;/code&gt; es un m&amp;oacute;dulo JavaScript, puede usar la anotaci&amp;oacute;n &lt;code&gt;@JsModule&lt;/code&gt; . Considere que tiene el siguiente m&amp;oacute;dulo CommonJS llamado &quot;hola&quot;:</target>
        </trans-unit>
        <trans-unit id="9709dd3d7713138256dbb958ab241135af68f988" translate="yes" xml:space="preserve">
          <source>To test it, we'll use a simple async function that resolves to a specified string after a specified time:</source>
          <target state="translated">Para probarlo,usaremos una simple funci√≥n de sincronizaci√≥n que se resuelve a una cadena espec√≠fica despu√©s de un tiempo determinado:</target>
        </trans-unit>
        <trans-unit id="1b99a15ae02c59db4c41dbf465be5149eb5f7541" translate="yes" xml:space="preserve">
          <source>To throw an exception object, use the &lt;em&gt;throw&lt;/em&gt;-expression:</source>
          <target state="translated">Para lanzar un objeto de excepci&amp;oacute;n, use la expresi&amp;oacute;n &lt;em&gt;throw&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c7a0e8b8a829212ce4bf38fa9f7e144c221c0093" translate="yes" xml:space="preserve">
          <source>To turn off DCE completely, use the &lt;code&gt;devMode&lt;/code&gt; option in the &lt;code&gt;dceTask&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d84f46ddf483c214d924898fdd70375c5841ef" translate="yes" xml:space="preserve">
          <source>To turn on CSS support in your project, set the &lt;code&gt;cssSupport.enabled&lt;/code&gt; flag in the Gradle build file for &lt;code&gt;webpackTask&lt;/code&gt;, &lt;code&gt;runTask&lt;/code&gt;, and &lt;code&gt;testTask&lt;/code&gt; respectively. This configuration is also enabled by default when creating a new project using the wizard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="374704e123399146f9a10acdf418e1645171dca5" translate="yes" xml:space="preserve">
          <source>To unwrap the reference:</source>
          <target state="translated">Para desenvolver la referencia:</target>
        </trans-unit>
        <trans-unit id="a91c18bfe059c0da75a37ebc4ffaf3efe0d2e769" translate="yes" xml:space="preserve">
          <source>To unzip a list of pairs, call &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/unzip&quot;&gt;&lt;code&gt;unzip()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para descomprimir una lista de pares, llame a &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/unzip&quot;&gt; &lt;code&gt;unzip()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2a0e0cb040b2c181af6e3ea61de668187d10e532" translate="yes" xml:space="preserve">
          <source>To use a property, simply refer to it by name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8bf5ffe82f149520490d0887cef3348767dda39" translate="yes" xml:space="preserve">
          <source>To use a property, we simply refer to it by name, as if it were a field in Java:</source>
          <target state="translated">Para usar una propiedad,simplemente nos referimos a ella por su nombre,como si fuera un campo en Java:</target>
        </trans-unit>
        <trans-unit id="f72769e7770abb5ce6cba411b555a198f8e3b8fb" translate="yes" xml:space="preserve">
          <source>To use an API that requires opt-in in all functions and classes in a file, add the file-level annotation &lt;code&gt;@file:OptIn&lt;/code&gt; to the top of the file before the package specification and imports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="213ffc2b7aa1496be9528a577f9f8df930989d35" translate="yes" xml:space="preserve">
          <source>To use an EAP build instead, we need to specify its version in &lt;code&gt;ext.kotlin_version&lt;/code&gt; and add the corresponding repository to the &lt;code&gt;buildscript&lt;/code&gt; section (usually EAP builds are located on &lt;a href=&quot;https://bintray.com/kotlin&quot;&gt;Bintray&lt;/a&gt;)</source>
          <target state="translated">Para usar una compilaci&amp;oacute;n EAP en su lugar, necesitamos especificar su versi&amp;oacute;n en &lt;code&gt;ext.kotlin_version&lt;/code&gt; y agregar el repositorio correspondiente a la secci&amp;oacute;n &lt;code&gt;buildscript&lt;/code&gt; (generalmente las compilaciones EAP se encuentran en &lt;a href=&quot;https://bintray.com/kotlin&quot;&gt;Bintray&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="95905a2dc80cd98916ed0f8c91572f9ae392d28e" translate="yes" xml:space="preserve">
          <source>To use an experimental API in all functions and classes in a file, add the file-level annotation &lt;code&gt;@file:UseExperimental&lt;/code&gt; to the top of the file before the package specification and imports.</source>
          <target state="translated">Para usar una API experimental en todas las funciones y clases de un archivo, agregue la anotaci&amp;oacute;n a nivel de archivo &lt;code&gt;@file:UseExperimental&lt;/code&gt; en la parte superior del archivo antes de la especificaci&amp;oacute;n del paquete y las importaciones.</target>
        </trans-unit>
        <trans-unit id="c7911ada2a93fd834ce5409496ee220d5914c628" translate="yes" xml:space="preserve">
          <source>To use classes or functions from a project in a scratch, import them into the scratch file as usual with the &lt;code&gt;import&lt;/code&gt; statement. Then write your code and run it with the appropriate module selected in &lt;strong&gt;Use classpath of module&lt;/strong&gt; list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905c85d4c4dbeeb5849e639296b6ff9051d12bf0" translate="yes" xml:space="preserve">
          <source>To use classes or functions from a project in the scratch, import them into the scratch file as usual with the &lt;code&gt;import&lt;/code&gt; statement. Then write your code and run it with the appropriate module selected in &lt;strong&gt;Use classpath of module&lt;/strong&gt; list. To rebuild the module automatically before running the scratch, select &lt;strong&gt;Make before Run&lt;/strong&gt;.</source>
          <target state="translated">Para usar clases o funciones de un proyecto en el scratch, imp&amp;oacute;rtelos al archivo scratch como de costumbre con la declaraci&amp;oacute;n de &lt;code&gt;import&lt;/code&gt; aci&amp;oacute;n . Luego escriba su c&amp;oacute;digo y ejec&amp;uacute;telo con el m&amp;oacute;dulo apropiado seleccionado en &lt;strong&gt;Use classpath of module&lt;/strong&gt; list. Para reconstruir el m&amp;oacute;dulo autom&amp;aacute;ticamente antes de ejecutar el scratch, seleccione &lt;strong&gt;Crear antes de ejecutar&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5befb1fd889ec3d540fc6857e1cc44328178daf4" translate="yes" xml:space="preserve">
          <source>To use different modes for the same project, use &lt;code&gt;cssSupport.rules&lt;/code&gt;. Here, you can specify a list of &lt;code&gt;KotlinWebpackCssRules&lt;/code&gt;, each of which define a mode, as well as &lt;a href=&quot;https://webpack.js.org/configuration/module/#ruleinclude&quot;&gt;include&lt;/a&gt; and &lt;a href=&quot;https://webpack.js.org/configuration/module/#ruleexclude&quot;&gt;exclude&lt;/a&gt; patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6f898d3fd804cbaaa8f5e41eecb4b87b3f095b" translate="yes" xml:space="preserve">
          <source>To use it with Kotlin configure annotation processing dependency using &lt;code&gt;kapt&lt;/code&gt;:</source>
          <target state="translated">Para usarlo con Kotlin, configure la dependencia de procesamiento de anotaciones usando &lt;code&gt;kapt&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6b18f46b3a0f449d7eb395f93e2e99d2ceb07f22" translate="yes" xml:space="preserve">
          <source>To use reflection in a Gradle or Maven project, add the dependency on &lt;code&gt;kotlin-reflect&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24de3bc480fd74ef920d5e8c2200b8ea53a9381" translate="yes" xml:space="preserve">
          <source>To use such an extension outside its declaring package, we need to import it at the call site:</source>
          <target state="translated">Para usar tal extensi√≥n fuera de su paquete de declaraci√≥n,necesitamos importarla en el lugar de la llamada:</target>
        </trans-unit>
        <trans-unit id="f45da6c5e75b429df6c944cb1a348aa71eac1487" translate="yes" xml:space="preserve">
          <source>To use the Gradle worker API for parallel execution of kapt tasks, add this line to your &lt;code&gt;gradle.properties&lt;/code&gt; file:</source>
          <target state="translated">Para usar la API de trabajador de Gradle para la ejecuci&amp;oacute;n paralela de tareas kapt, agregue esta l&amp;iacute;nea a su archivo &lt;code&gt;gradle.properties&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f4b36ae1fba60b209f3facc66006c1d59e359e4b" translate="yes" xml:space="preserve">
          <source>To use the library just</source>
          <target state="translated">Para usar la biblioteca s√≥lo</target>
        </trans-unit>
        <trans-unit id="f8b6262cd9dc8c43d7c667ac936a5f2566f2a0e4" translate="yes" xml:space="preserve">
          <source>To use these dependencies from a Kotlin code, import a package &lt;code&gt;cocoapods.&amp;lt;library-name&amp;gt;&lt;/code&gt;. In the example above, it's &lt;code&gt;cocoapods.AFNetworking&lt;/code&gt;.</source>
          <target state="translated">Para usar estas dependencias de un c&amp;oacute;digo de Kotlin, importe un paquete &lt;code&gt;cocoapods.&amp;lt;library-name&amp;gt;&lt;/code&gt; . En el ejemplo anterior, es &lt;code&gt;cocoapods.AFNetworking&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc228ddfd7202033ce71a7fc317732c5e0b0cb8d" translate="yes" xml:space="preserve">
          <source>To use these dependencies from the Kotlin code, import the packages &lt;code&gt;cocoapods.&amp;lt;library-name&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f56a6a1ece973c1e685039b7b24f3bed65f0bb" translate="yes" xml:space="preserve">
          <source>To verify that your code is formatted according to the style guide, go to &lt;strong&gt;Settings | Editor | Inspections&lt;/strong&gt; and enable the &lt;strong&gt;Kotlin | Style issues | File is not formatted according to project settings&lt;/strong&gt; inspection. Additional inspections that verify other issues described in the style guide (such as naming conventions) are enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ce373f521a913b58c57c24b3da2c509d708a6c" translate="yes" xml:space="preserve">
          <source>To verify that your code is formatted according to the style guide, go to the inspection settings and enable the &quot;Kotlin | Style issues | File is not formatted according to project settings&quot; inspection. Additional inspections that verify other issues described in the style guide (such as naming conventions) are enabled by default.</source>
          <target state="translated">Para verificar que su c√≥digo est√° formateado de acuerdo con la gu√≠a de estilo,vaya a la configuraci√≥n de la inspecci√≥n y active la inspecci√≥n &quot;Kotlin | Problemas de estilo | El archivo no est√° formateado de acuerdo con la configuraci√≥n del proyecto&quot;.Las inspecciones adicionales que verifican otras cuestiones descritas en la gu√≠a de estilo (como las convenciones de nomenclatura)est√°n habilitadas de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="a4960c3af648de37ee9fc988a1b8a755e743e505" translate="yes" xml:space="preserve">
          <source>To workaround this problem you can store a reference to the resource in the variable as opposed to returning it from the &lt;code&gt;withTimeout&lt;/code&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6747c485a8043bd5cfaa965ac1719dda893a066" translate="yes" xml:space="preserve">
          <source>To wrap the reference:</source>
          <target state="translated">Para envolver la referencia:</target>
        </trans-unit>
        <trans-unit id="4fc60ef5d69079c451ea67854c51808d9ec41c01" translate="yes" xml:space="preserve">
          <source>Tooling</source>
          <target state="translated">Tooling</target>
        </trans-unit>
        <trans-unit id="4fa8cc860c52b268dc6a3adcde7305e9415db5bb" translate="yes" xml:space="preserve">
          <source>Tools</source>
          <target state="translated">Tools</target>
        </trans-unit>
        <trans-unit id="a2b342afe760f02175e18eb57be53d77e5b4d945" translate="yes" xml:space="preserve">
          <source>Tools for Android Development</source>
          <target state="translated">Herramientas para el desarrollo de Android</target>
        </trans-unit>
        <trans-unit id="933c173dc4997663d3dd2b639f726f17d399abb1" translate="yes" xml:space="preserve">
          <source>Top level/global variables of non-primitive types are by default accessible in the main thread (i.e., the thread which initialized &lt;em&gt;Kotlin/Native&lt;/em&gt; runtime first) only. Access from another thread will lead to an &lt;code&gt;IncorrectDereferenceException&lt;/code&gt; being thrown. To make such variables accessible in other threads, you can use either the &lt;code&gt;@ThreadLocal&lt;/code&gt; annotation, and mark the value thread local or &lt;code&gt;@SharedImmutable&lt;/code&gt;, which will make the value frozen and accessible from other threads.</source>
          <target state="translated">Las variables de nivel superior / globales de tipos no primitivos son accesibles por defecto en el hilo principal (es decir, el hilo que inicializ&amp;oacute; primero el tiempo de ejecuci&amp;oacute;n de &lt;em&gt;Kotlin / Native&lt;/em&gt; ) solamente. El acceso desde otro hilo conducir&amp;aacute; a que se lance una &lt;code&gt;IncorrectDereferenceException&lt;/code&gt; . Para hacer que dichas variables sean accesibles en otros hilos, puede usar la anotaci&amp;oacute;n &lt;code&gt;@ThreadLocal&lt;/code&gt; y marcar el valor del hilo como local o &lt;code&gt;@SharedImmutable&lt;/code&gt; , lo que har&amp;aacute; que el valor se congele y sea accesible desde otros hilos.</target>
        </trans-unit>
        <trans-unit id="d10164060fa5359f1cc0440621a4aa0561a65a4b" translate="yes" xml:space="preserve">
          <source>Top-level Kotlin functions and properties are accessible as members of special classes. Each Kotlin file is translated into such a class. E.g.</source>
          <target state="translated">Las funciones y propiedades de Kotlin de alto nivel son accesibles como miembros de clases especiales.Cada archivo Kotlin se traduce a dicha clase.Por ejemplo</target>
        </trans-unit>
        <trans-unit id="72f832e9bb11ffaf0e6dadede4c2d82d643da82d" translate="yes" xml:space="preserve">
          <source>Top-level blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1be77aa458090db17874852b17692b274f4c30" translate="yes" xml:space="preserve">
          <source>Top-level functions and properties</source>
          <target state="translated">Funciones y propiedades de alto nivel</target>
        </trans-unit>
        <trans-unit id="73a9d7257a50c4b586e17a750a9b120479406586" translate="yes" xml:space="preserve">
          <source>Top-level variables:</source>
          <target state="translated">Variables de alto nivel:</target>
        </trans-unit>
        <trans-unit id="093982a5b38ce32bb690b5df5afe9cfb58db39b3" translate="yes" xml:space="preserve">
          <source>Top-level, or member of an &lt;a href=&quot;object-declarations#object-declarations&quot;&gt;&lt;em&gt;object&lt;/em&gt; declaration&lt;/a&gt; or &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;a &lt;em&gt;companion object&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">Nivel superior o miembro de una &lt;a href=&quot;object-declarations#object-declarations&quot;&gt;declaraci&amp;oacute;n de &lt;/a&gt;&lt;em&gt;objeto&lt;/em&gt; o &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;un &lt;em&gt;objeto complementario&lt;/em&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e3f139abb7a549a1210b36f7dbf89215ad6c9902" translate="yes" xml:space="preserve">
          <source>Touch</source>
          <target state="translated">Touch</target>
        </trans-unit>
        <trans-unit id="1efa29eabe3ababde0e86df3b6d2edc46db3122e" translate="yes" xml:space="preserve">
          <source>TouchList</source>
          <target state="translated">TouchList</target>
        </trans-unit>
        <trans-unit id="86c192cdf813e67ab4284db18cce6c47a873de77" translate="yes" xml:space="preserve">
          <source>TrackEventInit</source>
          <target state="translated">TrackEventInit</target>
        </trans-unit>
        <trans-unit id="04a727b8d4352f2bb05170808566a662370f1470" translate="yes" xml:space="preserve">
          <source>Trailing comma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5b3a2e5f602edd973d6bc7c27d9b7106a52ef4" translate="yes" xml:space="preserve">
          <source>Trailing commas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b9c6cd7256580987215cb5bd31fae33f7491a8" translate="yes" xml:space="preserve">
          <source>Trailing commas are entirely optional &amp;ndash; your code will still work without them. The Kotlin style guide encourages the use of trailing commas at the declaration site and leaves it at your discretion for the call site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c733cfc9ff52310bfeff0739e9d84bd974f090" translate="yes" xml:space="preserve">
          <source>Training Partners</source>
          <target state="translated">Socios de la formaci√≥n</target>
        </trans-unit>
        <trans-unit id="62000f6d60c7b6da6e48acb50b9e4d2454c263e3" translate="yes" xml:space="preserve">
          <source>TransferMode</source>
          <target state="translated">TransferMode</target>
        </trans-unit>
        <trans-unit id="5493525620b201e4aeb2e3e266e9b2a0148f6e9a" translate="yes" xml:space="preserve">
          <source>Transform operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d685ad7c59aeb1945ef867b52857539b62c1b81c" translate="yes" xml:space="preserve">
          <source>Transformations</source>
          <target state="translated">Transformations</target>
        </trans-unit>
        <trans-unit id="e58ba5ae9c3b287bdcbf2771b01865f2bca67751" translate="yes" xml:space="preserve">
          <source>Transformations to &lt;code&gt;Iterable&lt;/code&gt; on &lt;code&gt;Sequence&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c5e51e91e71b63dc5528985dabb38605c21cee" translate="yes" xml:space="preserve">
          <source>Transformations to &lt;code&gt;Sequence&lt;/code&gt; on &lt;code&gt;Iterable&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt;, and &lt;code&gt;Map&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d5bc5a6500f8488347501d41f5194f063eae68" translate="yes" xml:space="preserve">
          <source>Transient</source>
          <target state="translated">Transient</target>
        </trans-unit>
        <trans-unit id="ba8d3f89d630067e3ad00c3e459e314bd98fb9a0" translate="yes" xml:space="preserve">
          <source>Transitive: for any non-null values &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt;, if &lt;code&gt;x.equals(y)&lt;/code&gt; returns true and &lt;code&gt;y.equals(z)&lt;/code&gt; returns true, then &lt;code&gt;x.equals(z)&lt;/code&gt; should return true.</source>
          <target state="translated">Transitivo: para cualquier valor no nulo &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; y &lt;code&gt;z&lt;/code&gt; , si &lt;code&gt;x.equals(y)&lt;/code&gt; devuelve verdadero e &lt;code&gt;y.equals(z)&lt;/code&gt; devuelve verdadero, entonces &lt;code&gt;x.equals(z)&lt;/code&gt; debe devolver verdadero.</target>
        </trans-unit>
        <trans-unit id="a3b98ac58ac04384390fe968f8d17e1762075dcc" translate="yes" xml:space="preserve">
          <source>Translate primitive arrays to JS typed arrays</source>
          <target state="translated">Traducir las matrices primitivas a matrices tipo JS</target>
        </trans-unit>
        <trans-unit id="a1e378439cd6792c22e6754f9de426ee92e8887a" translate="yes" xml:space="preserve">
          <source>Translated to</source>
          <target state="translated">Traducido a</target>
        </trans-unit>
        <trans-unit id="bd2fa02487c23403447e0670b33275ea05db6a74" translate="yes" xml:space="preserve">
          <source>Translation Rules</source>
          <target state="translated">Reglas de traducci√≥n</target>
        </trans-unit>
        <trans-unit id="ab6dfa598f3ee1889c506fcb09d74fa1777c572b" translate="yes" xml:space="preserve">
          <source>Translation of type &lt;code&gt;Nothing&lt;/code&gt;</source>
          <target state="translated">Traducci&amp;oacute;n de type &lt;code&gt;Nothing&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6aceb57c8bb80570e896470165c635c1ee57a688" translate="yes" xml:space="preserve">
          <source>Translation rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d92e703a622ed46d6e27f0f0f77397beeb3e132" translate="yes" xml:space="preserve">
          <source>Transparent catch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15aca388afb19d901171e68fd72afd431d071e5" translate="yes" xml:space="preserve">
          <source>Traversing a map/list of pairs</source>
          <target state="translated">Atravesando un mapa/lista de pares</target>
        </trans-unit>
        <trans-unit id="c5549ac8b888e22b01fa637b7351d8e5201d7fba" translate="yes" xml:space="preserve">
          <source>TreeWalker</source>
          <target state="translated">TreeWalker</target>
        </trans-unit>
        <trans-unit id="bf7930508d19dc53b19991f963b30e949ffffae4" translate="yes" xml:space="preserve">
          <source>Trigonometric: &lt;code&gt;cos&lt;/code&gt;, &lt;code&gt;sin&lt;/code&gt;, &lt;code&gt;tan&lt;/code&gt; and inverse of them: &lt;code&gt;acos&lt;/code&gt;, &lt;code&gt;asin&lt;/code&gt;, &lt;code&gt;atan&lt;/code&gt;, &lt;code&gt;atan2&lt;/code&gt;;</source>
          <target state="translated">Trigonom&amp;eacute;trico: &lt;code&gt;cos&lt;/code&gt; , &lt;code&gt;sin&lt;/code&gt; , &lt;code&gt;tan&lt;/code&gt; e inverso de ellos: &lt;code&gt;acos&lt;/code&gt; , &lt;code&gt;asin&lt;/code&gt; , &lt;code&gt;atan&lt;/code&gt; , &lt;code&gt;atan2&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="b9283be1760ffff3d2b71a4bf3400fc0c777b4fb" translate="yes" xml:space="preserve">
          <source>Trims leading whitespace characters followed by &lt;a href=&quot;../../kotlin.text/trim-margin#kotlin.text%24trimMargin%28kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix&lt;/a&gt; from every line of a source string and removes the first and the last lines if they are blank (notice difference blank vs empty).</source>
          <target state="translated">Recorta los espacios en blanco &lt;a href=&quot;../../kotlin.text/trim-margin#kotlin.text%24trimMargin%28kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;iniciales&lt;/a&gt; seguidos de marginPrefix de cada l&amp;iacute;nea de una cadena de origen y elimina la primera y la &amp;uacute;ltima l&amp;iacute;nea si est&amp;aacute;n en blanco (observe la diferencia en blanco frente a vac&amp;iacute;o).</target>
        </trans-unit>
        <trans-unit id="5480c14a1f35b84e453f6cd73b5a2004a2f5d464" translate="yes" xml:space="preserve">
          <source>Trims leading whitespace characters followed by &lt;a href=&quot;../../kotlin.text/trim-margin#kotlin.text%24trimMargin(kotlin.String,%20kotlin.String)/marginPrefix&quot;&gt;marginPrefix&lt;/a&gt; from every line of a source string and removes the first and the last lines if they are blank (notice difference blank vs empty).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35e61d912f4e00490fababb98d899c86bab87f9" translate="yes" xml:space="preserve">
          <source>Trims leading whitespace characters followed by &lt;a href=&quot;trim-margin#kotlin.text%24trimMargin%28kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix&lt;/a&gt; from every line of a source string and removes the first and the last lines if they are blank (notice difference blank vs empty).</source>
          <target state="translated">Recorta los espacios en blanco &lt;a href=&quot;trim-margin#kotlin.text%24trimMargin%28kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;iniciales&lt;/a&gt; seguidos de marginPrefix de cada l&amp;iacute;nea de una cadena de origen y elimina la primera y la &amp;uacute;ltima l&amp;iacute;nea si est&amp;aacute;n en blanco (observe la diferencia en blanco frente a vac&amp;iacute;o).</target>
        </trans-unit>
        <trans-unit id="84a97aca5ec5480f19364dafde3094ff54f3e81a" translate="yes" xml:space="preserve">
          <source>Trims leading whitespace characters followed by &lt;a href=&quot;trim-margin#kotlin.text%24trimMargin(kotlin.String,%20kotlin.String)/marginPrefix&quot;&gt;marginPrefix&lt;/a&gt; from every line of a source string and removes the first and the last lines if they are blank (notice difference blank vs empty).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1a12e0ad64ac32c1b6bcc5a4f65c861d2ccdb6" translate="yes" xml:space="preserve">
          <source>Triple</source>
          <target state="translated">Triple</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="dd25f60abb02d8a8fead2fd0c632ac71f7dc7572" translate="yes" xml:space="preserve">
          <source>True if this BitSet contains no bits set to true.</source>
          <target state="translated">Cierto si este BitSet no contiene ning√∫n bit establecido como verdadero.</target>
        </trans-unit>
        <trans-unit id="ebadece2244cd8c3930af24f6efed50ba5303aeb" translate="yes" xml:space="preserve">
          <source>Try is an expression</source>
          <target state="translated">Intentar es una expresi√≥n</target>
        </trans-unit>
        <trans-unit id="76626410fd299e2579daa03a6a8e059a7c331dac" translate="yes" xml:space="preserve">
          <source>Try running the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab16b9ed40416d31269e0f90879c02e2beaffb5d" translate="yes" xml:space="preserve">
          <source>Try the following example:</source>
          <target state="translated">Pruebe el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="6598cd1f03cde7303010f8b82688f8cd83e05fd7" translate="yes" xml:space="preserve">
          <source>Try the hierarchical project structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8975e856a765f6b65172a38acea83accc861c3" translate="yes" xml:space="preserve">
          <source>Tuning the Gradle Build Script</source>
          <target state="translated">Afinando el gui√≥n de construcci√≥n de Gradle</target>
        </trans-unit>
        <trans-unit id="ea1b6a2e19cb07b905a5f8a640d896e87bcec9bf" translate="yes" xml:space="preserve">
          <source>Turn any warnings into a compilation error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486df8c49f3484e79ec93676a1d2d32e3c21544f" translate="yes" xml:space="preserve">
          <source>Turn off the discovery of annotation processors in the compile classpath by adding this line to your &lt;code&gt;gradle.properties&lt;/code&gt; file:</source>
          <target state="translated">Desactive el descubrimiento de procesadores de anotaciones en la ruta de &lt;code&gt;gradle.properties&lt;/code&gt; compilaci&amp;oacute;n agregando esta l&amp;iacute;nea a su archivo gradle.properties :</target>
        </trans-unit>
        <trans-unit id="654171647baa6be8557a5d627cf35c7075ebb257" translate="yes" xml:space="preserve">
          <source>Tutorials</source>
          <target state="translated">Tutorials</target>
        </trans-unit>
        <trans-unit id="a8a70d82aa05be09e708b91e7f3e4c134d89ffcd" translate="yes" xml:space="preserve">
          <source>Two characters are considered the same ignoring case if at least one of the following is &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">Dos caracteres se consideran el mismo caso ignorando si al menos uno de los siguientes es &lt;code&gt;true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ab472c51dfbccf051740af19176dfafb00b61af8" translate="yes" xml:space="preserve">
          <source>Two generators with the same seed produce the same sequence of values within the same version of Kotlin runtime.</source>
          <target state="translated">Dos generadores con la misma semilla producen la misma secuencia de valores dentro de la misma versi√≥n del tiempo de ejecuci√≥n de Kotlin.</target>
        </trans-unit>
        <trans-unit id="d137720f3328e5a478b178126ce3903c8817736d" translate="yes" xml:space="preserve">
          <source>Two maps containing the equal pairs are equal regardless of the pair order.</source>
          <target state="translated">Dos mapas que contienen los pares iguales son iguales sin importar el orden de los pares.</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="5f6616a8e5da9fee3d521ed755f2bea54b08215a" translate="yes" xml:space="preserve">
          <source>Type Checks and Casts: &amp;#x27;is&amp;#x27; and &amp;#x27;as&amp;#x27;</source>
          <target state="translated">Tipo de comprobaciones y conversiones: 'es' y 'como'</target>
        </trans-unit>
        <trans-unit id="d6cc07866d5f06f3719a56316deb52a9dd1a6362" translate="yes" xml:space="preserve">
          <source>Type Checks and Casts: 'is' and 'as'</source>
          <target state="translated">Chequeos de tipo y moldes:&quot;es&quot; y &quot;como&quot;.</target>
        </trans-unit>
        <trans-unit id="ba8b607d229159b7de176502ebe44f1a8317de01" translate="yes" xml:space="preserve">
          <source>Type alias</source>
          <target state="translated">Escriba el alias</target>
        </trans-unit>
        <trans-unit id="58cf557846d7f65d34e8a92739eef2665164fad4" translate="yes" xml:space="preserve">
          <source>Type aliases</source>
          <target state="translated">Escriba los alias</target>
        </trans-unit>
        <trans-unit id="723718d194ac3a64c7f264ffc4d4f72b344ce07d" translate="yes" xml:space="preserve">
          <source>Type aliases can have only one member, while functional interfaces can have multiple non-abstract members and one abstract member. Functional interfaces can also implement and extend other interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c8e849ce31321a314a70ac8ad4ed39beff1378" translate="yes" xml:space="preserve">
          <source>Type aliases do not introduce new types. They are equivalent to the corresponding underlying types. When you add &lt;code&gt;typealias Predicate&amp;lt;T&amp;gt;&lt;/code&gt; and use &lt;code&gt;Predicate&amp;lt;Int&amp;gt;&lt;/code&gt; in your code, the Kotlin compiler always expands it to &lt;code&gt;(Int) -&amp;gt; Boolean&lt;/code&gt;. Thus you can pass a variable of your type whenever a general function type is required and vice versa:</source>
          <target state="translated">Los alias de tipo no introducen nuevos tipos. Son equivalentes a los tipos subyacentes correspondientes. Cuando agrega &lt;code&gt;typealias Predicate&amp;lt;T&amp;gt;&lt;/code&gt; y usa &lt;code&gt;Predicate&amp;lt;Int&amp;gt;&lt;/code&gt; en su c&amp;oacute;digo, el compilador de Kotlin siempre lo expande a &lt;code&gt;(Int) -&amp;gt; Boolean&lt;/code&gt; . Por lo tanto, puede pasar una variable de su tipo siempre que se requiera un tipo de funci&amp;oacute;n general y viceversa:</target>
        </trans-unit>
        <trans-unit id="63f9c00fb5f4cc41a0eed5075c935b736c6b9723" translate="yes" xml:space="preserve">
          <source>Type aliases provide alternative names for existing types. If the type name is too long you can introduce a different shorter name and use the new one instead.</source>
          <target state="translated">Los alias de tipo proporcionan nombres alternativos para los tipos existentes.Si el nombre del tipo es demasiado largo,puede introducir un nombre m√°s corto diferente y utilizar el nuevo en su lugar.</target>
        </trans-unit>
        <trans-unit id="a2a8d10c5940641abcd5ce54fb8bcd8a1818a8ed" translate="yes" xml:space="preserve">
          <source>Type annotations in the JVM bytecode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c296bfc3cf8da18578c109dce183097398bf868c" translate="yes" xml:space="preserve">
          <source>Type annotations on method parameters, method return types and property types;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35e3a28b52f56ce98adcccb56e038088090c61a" translate="yes" xml:space="preserve">
          <source>Type arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97f977bc0dba85c3cc52fd08f6033a3696be06a" translate="yes" xml:space="preserve">
          <source>Type arguments can be omitted if they can be inferred from the context, so the following example works as well:</source>
          <target state="translated">Los argumentos de tipo pueden ser omitidos si se pueden deducir del contexto,por lo que el siguiente ejemplo tambi√©n funciona:</target>
        </trans-unit>
        <trans-unit id="c98c974ad55a448f7905288ae79a3c29e3dafc00" translate="yes" xml:space="preserve">
          <source>Type arguments passed for the parameters of the classifier in this type. For example, in the type &lt;code&gt;Array&amp;lt;out Number&amp;gt;&lt;/code&gt; the only type argument is &lt;code&gt;out Number&lt;/code&gt;.</source>
          <target state="translated">Escriba los argumentos pasados ‚Äã‚Äãpara los par&amp;aacute;metros del clasificador en este tipo. Por ejemplo, en el tipo &lt;code&gt;Array&amp;lt;out Number&amp;gt;&lt;/code&gt; el &amp;uacute;nico argumento de tipo es &lt;code&gt;out Number&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17f4a34465afc16c831c4800dd92a48a4229a238" translate="yes" xml:space="preserve">
          <source>Type casts to generic types with concrete type arguments, e.g. &lt;code&gt;foo as List&amp;lt;String&amp;gt;&lt;/code&gt;, cannot be checked at runtime.</source>
          <target state="translated">Las conversiones de tipos a tipos gen&amp;eacute;ricos con argumentos de tipo concretos, por ejemplo, &lt;code&gt;foo as List&amp;lt;String&amp;gt;&lt;/code&gt; , no se pueden verificar en tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="73156460a89d705ba62bd534bd81f39c8db2596a" translate="yes" xml:space="preserve">
          <source>Type checks and automatic casts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793f10e89d89960ec6635302ed647f148619a822" translate="yes" xml:space="preserve">
          <source>Type erasure</source>
          <target state="translated">Borrado de tipos</target>
        </trans-unit>
        <trans-unit id="40dc0a7305bb05f3cc921959233fc31aff814e2e" translate="yes" xml:space="preserve">
          <source>Type erasure and generic type checks</source>
          <target state="translated">Borrado de tipos y comprobaci√≥n de tipos gen√©ricos</target>
        </trans-unit>
        <trans-unit id="3a57e7033772e15f6c935d00cab613d6b63a13b4" translate="yes" xml:space="preserve">
          <source>Type inference for variable and property types</source>
          <target state="translated">Inferencia de tipos para los tipos de variables y propiedades</target>
        </trans-unit>
        <trans-unit id="6468c2c68f3a4de506104359dc49acb341f7ce4b" translate="yes" xml:space="preserve">
          <source>Type of this parameter. For a &lt;code&gt;vararg&lt;/code&gt; parameter, this is the type of the corresponding array, not the individual element.</source>
          <target state="translated">Tipo de este par&amp;aacute;metro. Para un par&amp;aacute;metro &lt;code&gt;vararg&lt;/code&gt; , este es el tipo de la matriz correspondiente, no el elemento individual.</target>
        </trans-unit>
        <trans-unit id="c9a3646a7ac556f56d25e93e18f2d2b1583d0264" translate="yes" xml:space="preserve">
          <source>Type parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67db91aa392a58df5790c33c41ae1990e5a33a95" translate="yes" xml:space="preserve">
          <source>Type projection is either the star projection, or an entity consisting of a specific type plus optional variance.</source>
          <target state="translated">La proyecci√≥n de tipo es la proyecci√≥n estelar,o una entidad que consiste en un tipo espec√≠fico m√°s una variaci√≥n opcional.</target>
        </trans-unit>
        <trans-unit id="a1c1994c749574f626726569018d7132330feb4f" translate="yes" xml:space="preserve">
          <source>Type projections</source>
          <target state="translated">Proyecciones de tipo</target>
        </trans-unit>
        <trans-unit id="390df132c9a4d4db52e48418904c22311abcfb25" translate="yes" xml:space="preserve">
          <source>Type projections (use-site covariance and contravariance)</source>
          <target state="translated">Proyecciones de tipo (covarianza y contravarianza del lugar de uso)</target>
        </trans-unit>
        <trans-unit id="abe0a5c2d281fcb1877a803065e24a61b33d5485" translate="yes" xml:space="preserve">
          <source>Type qualifier defaults (since 1.1.50)</source>
          <target state="translated">El calificador de tipo se ha predeterminado (desde el 1.1.50)</target>
        </trans-unit>
        <trans-unit id="7774fb35aa4a81a2d582ed079ba64fde2c6c6958" translate="yes" xml:space="preserve">
          <source>Type qualifier nicknames (since 1.1.50)</source>
          <target state="translated">Apodos del calificador de tipo (desde 1.1.50)</target>
        </trans-unit>
        <trans-unit id="acbd0130304bd83955856731709666b221130b62" translate="yes" xml:space="preserve">
          <source>Type safety problem because of incorrect subtyping for intersection types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9199f1fd6ec494778d67bf415e37aa0839ac622f" translate="yes" xml:space="preserve">
          <source>Type safety problem because of lack of captured conversion against nullable type argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb995680367f27e40ce4ad1d6abb4c604f7187b7" translate="yes" xml:space="preserve">
          <source>Type safety problem because several equal type variables are instantiated with a different types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40de16300b7ec7ebb7fd5b46ebfe06fa7442e5d2" translate="yes" xml:space="preserve">
          <source>Type usage</source>
          <target state="translated">Tipo de uso...</target>
        </trans-unit>
        <trans-unit id="4903c79122878e4bb6246343ee54954a9e90d953" translate="yes" xml:space="preserve">
          <source>Type variable leaks from builder inference because of using &lt;code&gt;this&lt;/code&gt; expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302ec0e139d68906dc0b295bb935fe896afa1e82" translate="yes" xml:space="preserve">
          <source>Type-Safe Builders</source>
          <target state="translated">Constructores de tipo seguro</target>
        </trans-unit>
        <trans-unit id="1c6379917dd2967a0cd2179d5b9d494b8ce1b4e8" translate="yes" xml:space="preserve">
          <source>Type-safe builders allow creating Kotlin-based domain-specific languages (DSLs) suitable for building complex hierarchical data structures in a semi-declarative way. Some of the example use cases for the builders are:</source>
          <target state="translated">Los constructores de tipo seguro permiten crear lenguajes espec√≠ficos de dominio basados en Kotlin (DSL)adecuados para construir estructuras de datos jer√°rquicos complejos de forma semideclarativa.Algunos de los casos de uso de los constructores son:</target>
        </trans-unit>
        <trans-unit id="5c15b26d8e7df3e3ffb8c17df0302ea2aa484921" translate="yes" xml:space="preserve">
          <source>TypeCastException</source>
          <target state="translated">TypeCastException</target>
        </trans-unit>
        <trans-unit id="5f0d1a781a66df1f72742486a55df1e5b04f2308" translate="yes" xml:space="preserve">
          <source>Typealias describing custom exception reporting hook.</source>
          <target state="translated">Tipalias que describen el gancho de informe de excepciones personalizadas.</target>
        </trans-unit>
        <trans-unit id="f3f4c434904369ad0a9f93c33f4c9768b4547a37" translate="yes" xml:space="preserve">
          <source>TypedArrays support enabled by default</source>
          <target state="translated">El soporte de TypedArrays est√° activado por defecto</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="5ee39ed12bcc53f39d2691296714b602c56e8452" translate="yes" xml:space="preserve">
          <source>Types in C Language</source>
          <target state="translated">Tipos en el lenguaje C</target>
        </trans-unit>
        <trans-unit id="9082e24429af3d96afc6c792bd53d243c13fe913" translate="yes" xml:space="preserve">
          <source>Types in Kotlin are optional in many places due to pervasive use of type-inference, but every declaration still has a well-defined static type that is known at compilation.</source>
          <target state="translated">Los tipos en Kotlin son opcionales en muchos lugares debido al uso generalizado de la interferencia de tipos,pero cada declaraci√≥n sigue teniendo un tipo est√°tico bien definido que se conoce en la compilaci√≥n.</target>
        </trans-unit>
        <trans-unit id="629a9e78a0114f36f48645e6ead99e73e5226592" translate="yes" xml:space="preserve">
          <source>Types mapping between C and Kotlin/Native</source>
          <target state="translated">La cartograf√≠a de los tipos entre C y Kotlin/Native</target>
        </trans-unit>
        <trans-unit id="23a10fa48ff804faeadfa8169422520460b61a41" translate="yes" xml:space="preserve">
          <source>Typesafe HTML DSL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4beb9af58f792082d8857ce30b4be1bdbe9b57a" translate="yes" xml:space="preserve">
          <source>Typography</source>
          <target state="translated">Typography</target>
        </trans-unit>
        <trans-unit id="4ae5c7578750deca68bcc325a7a71916e13eb9f0" translate="yes" xml:space="preserve">
          <source>UArraysKt</source>
          <target state="translated">UArraysKt</target>
        </trans-unit>
        <trans-unit id="bf674fff56341390c001cb60679614bd8b320e06" translate="yes" xml:space="preserve">
          <source>UByte</source>
          <target state="translated">UByte</target>
        </trans-unit>
        <trans-unit id="ffb6040505a41eac67ecae4d97b182ca73c78ec7" translate="yes" xml:space="preserve">
          <source>UByteArray</source>
          <target state="translated">UByteArray</target>
        </trans-unit>
        <trans-unit id="d70700d1cf06666209f322639803c081fb20d34b" translate="yes" xml:space="preserve">
          <source>UByteIterator</source>
          <target state="translated">UByteIterator</target>
        </trans-unit>
        <trans-unit id="5c472b4b939131094e43f08559b073c75fc2a028" translate="yes" xml:space="preserve">
          <source>UByteVar</source>
          <target state="translated">UByteVar</target>
        </trans-unit>
        <trans-unit id="f25071b42b8c8e395a2b2b3981b7f23745b87556" translate="yes" xml:space="preserve">
          <source>UByteVarOf</source>
          <target state="translated">UByteVarOf</target>
        </trans-unit>
        <trans-unit id="7df33eb953a0db74ecea7bf713e814fb3abc743c" translate="yes" xml:space="preserve">
          <source>UIEventInit</source>
          <target state="translated">UIEventInit</target>
        </trans-unit>
        <trans-unit id="9b81a5f58a08d125439c4fe920735e6f93f6c26f" translate="yes" xml:space="preserve">
          <source>UInt</source>
          <target state="translated">UInt</target>
        </trans-unit>
        <trans-unit id="e8203a992b0218cb4341f1de99192c75977adf66" translate="yes" xml:space="preserve">
          <source>UIntArray</source>
          <target state="translated">UIntArray</target>
        </trans-unit>
        <trans-unit id="107a5f6058e02cbfca8e781b5a2a6f523ad395cb" translate="yes" xml:space="preserve">
          <source>UIntIterator</source>
          <target state="translated">UIntIterator</target>
        </trans-unit>
        <trans-unit id="b426f73d819457b44ee2c1f6127ae0354bab9219" translate="yes" xml:space="preserve">
          <source>UIntProgression</source>
          <target state="translated">UIntProgression</target>
        </trans-unit>
        <trans-unit id="733f5415b770d705f77b9612bf3ea932f2bce7d0" translate="yes" xml:space="preserve">
          <source>UIntRange</source>
          <target state="translated">UIntRange</target>
        </trans-unit>
        <trans-unit id="c9533b600e74bcc2cae112123bf64c63ddcac0d1" translate="yes" xml:space="preserve">
          <source>UIntVar</source>
          <target state="translated">UIntVar</target>
        </trans-unit>
        <trans-unit id="77c6c1f150c9389635fa7924b4f92a8549cf352c" translate="yes" xml:space="preserve">
          <source>UIntVarOf</source>
          <target state="translated">UIntVarOf</target>
        </trans-unit>
        <trans-unit id="89e5acbaebf4cf3fe914f8e97ce3365330718921" translate="yes" xml:space="preserve">
          <source>ULong</source>
          <target state="translated">ULong</target>
        </trans-unit>
        <trans-unit id="0aede794cd54bbb254cbbba847a9015fdedd384b" translate="yes" xml:space="preserve">
          <source>ULongArray</source>
          <target state="translated">ULongArray</target>
        </trans-unit>
        <trans-unit id="f83610c14f64002be2365b4b214aea8d4eb7c555" translate="yes" xml:space="preserve">
          <source>ULongIterator</source>
          <target state="translated">ULongIterator</target>
        </trans-unit>
        <trans-unit id="7f4860e3cc03b10b3ed8b10361499545cea0082e" translate="yes" xml:space="preserve">
          <source>ULongProgression</source>
          <target state="translated">ULongProgression</target>
        </trans-unit>
        <trans-unit id="904eba861b0907dd0e83aefaefd037f230269422" translate="yes" xml:space="preserve">
          <source>ULongRange</source>
          <target state="translated">ULongRange</target>
        </trans-unit>
        <trans-unit id="c10238514adfeb120f1beff5e873dea7b5ed95a8" translate="yes" xml:space="preserve">
          <source>ULongVar</source>
          <target state="translated">ULongVar</target>
        </trans-unit>
        <trans-unit id="f9dbd48fa2388e1f99c73bab257c97f132eb1089" translate="yes" xml:space="preserve">
          <source>ULongVarOf</source>
          <target state="translated">ULongVarOf</target>
        </trans-unit>
        <trans-unit id="b9a5671fcf84e88d78fc3704de6f9b452eff55a8" translate="yes" xml:space="preserve">
          <source>UNASSIGNED</source>
          <target state="translated">UNASSIGNED</target>
        </trans-unit>
        <trans-unit id="67a492265c45012bb305d1d916be6fecf6ea8e3e" translate="yes" xml:space="preserve">
          <source>UNDEFINED</source>
          <target state="translated">UNDEFINED</target>
        </trans-unit>
        <trans-unit id="a7864204909e345af29e9c794841c9fe894997a9" translate="yes" xml:space="preserve">
          <source>UNIX_LINES</source>
          <target state="translated">UNIX_LINES</target>
        </trans-unit>
        <trans-unit id="25ba44ec3b391ba4ce5fbbd2979635e254775e7d" translate="yes" xml:space="preserve">
          <source>UNKNOWN</source>
          <target state="translated">UNKNOWN</target>
        </trans-unit>
        <trans-unit id="c12e2347be0a8619c1d9ecacaec292e6f681ff3c" translate="yes" xml:space="preserve">
          <source>UNSAFE</source>
          <target state="translated">UNSAFE</target>
        </trans-unit>
        <trans-unit id="260ff90ffb9b1a7afc1635ad4eeec327ff83ec80" translate="yes" xml:space="preserve">
          <source>UPPERCASE_LETTER</source>
          <target state="translated">UPPERCASE_LETTER</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="b19e8d66e7f004e226c44a75766dadab7d09911a" translate="yes" xml:space="preserve">
          <source>URLSearchParams</source>
          <target state="translated">URLSearchParams</target>
        </trans-unit>
        <trans-unit id="91e7bf3c4d0ab9784e0c43761883c8268e94bc3e" translate="yes" xml:space="preserve">
          <source>US_ASCII</source>
          <target state="translated">US_ASCII</target>
        </trans-unit>
        <trans-unit id="3f4264aca0374d417f001d13663bbf89f0617103" translate="yes" xml:space="preserve">
          <source>UShort</source>
          <target state="translated">UShort</target>
        </trans-unit>
        <trans-unit id="c9c0b8b91e36fe7c1c4c0418920e6f5691e8c55a" translate="yes" xml:space="preserve">
          <source>UShortArray</source>
          <target state="translated">UShortArray</target>
        </trans-unit>
        <trans-unit id="6c3a83167054246ea25835255ce7b0e018316b2a" translate="yes" xml:space="preserve">
          <source>UShortIterator</source>
          <target state="translated">UShortIterator</target>
        </trans-unit>
        <trans-unit id="a33eeb13596790b08a6df8799ea234e412c8c47b" translate="yes" xml:space="preserve">
          <source>UShortVar</source>
          <target state="translated">UShortVar</target>
        </trans-unit>
        <trans-unit id="282cb40f96ea3b82ef408a23ef69ab3812e1c45c" translate="yes" xml:space="preserve">
          <source>UShortVarOf</source>
          <target state="translated">UShortVarOf</target>
        </trans-unit>
        <trans-unit id="bdfd4d8d6952777c39403b2d2e2f8a2a52bf255f" translate="yes" xml:space="preserve">
          <source>UTC</source>
          <target state="translated">UTC</target>
        </trans-unit>
        <trans-unit id="f0217f65f3e1f538b0d8cda26e80a2285c43df22" translate="yes" xml:space="preserve">
          <source>UTF-16 code unit (see the section on &lt;a href=&quot;strings&quot;&gt;strings&lt;/a&gt; - in most cases, this is one Unicode character, but it might be just one half of a Unicode character)</source>
          <target state="translated">Unidad de c&amp;oacute;digo UTF-16 (consulte la secci&amp;oacute;n sobre &lt;a href=&quot;strings&quot;&gt;cadenas&lt;/a&gt; ; en la mayor&amp;iacute;a de los casos, este es un car&amp;aacute;cter Unicode, pero podr&amp;iacute;a ser solo la mitad de un car&amp;aacute;cter Unicode)</target>
        </trans-unit>
        <trans-unit id="3133dd8458a32c8b5ce4a722caa62b68748d9288" translate="yes" xml:space="preserve">
          <source>UTF_16</source>
          <target state="translated">UTF_16</target>
        </trans-unit>
        <trans-unit id="6ca2e2b19e1ecda564482fabe6d3670b269a5872" translate="yes" xml:space="preserve">
          <source>UTF_16BE</source>
          <target state="translated">UTF_16BE</target>
        </trans-unit>
        <trans-unit id="9754e677d06d03c4582e2dcf98147ca46f84d72e" translate="yes" xml:space="preserve">
          <source>UTF_16LE</source>
          <target state="translated">UTF_16LE</target>
        </trans-unit>
        <trans-unit id="447ed343c0ab25980389215d35f14db291c88450" translate="yes" xml:space="preserve">
          <source>UTF_32</source>
          <target state="translated">UTF_32</target>
        </trans-unit>
        <trans-unit id="92586032892e03cbec5d2f808289d67c3e5fe454" translate="yes" xml:space="preserve">
          <source>UTF_32BE</source>
          <target state="translated">UTF_32BE</target>
        </trans-unit>
        <trans-unit id="cbf0128f0e447f51c74b68507c6628894645216c" translate="yes" xml:space="preserve">
          <source>UTF_32LE</source>
          <target state="translated">UTF_32LE</target>
        </trans-unit>
        <trans-unit id="444b32f7d1774bb52a894fb896e3e3f1afe43c1f" translate="yes" xml:space="preserve">
          <source>UTF_8</source>
          <target state="translated">UTF_8</target>
        </trans-unit>
        <trans-unit id="ee17a2d4842b1562f38fb267817829d58a3dedfb" translate="yes" xml:space="preserve">
          <source>Uint16Array</source>
          <target state="translated">Uint16Array</target>
        </trans-unit>
        <trans-unit id="633c2aa79d88322b5d53222bfe0bb765531ece57" translate="yes" xml:space="preserve">
          <source>Uint32Array</source>
          <target state="translated">Uint32Array</target>
        </trans-unit>
        <trans-unit id="9dafd0a91ea1eadf5a4b323d71716a37f430543c" translate="yes" xml:space="preserve">
          <source>Uint8Array</source>
          <target state="translated">Uint8Array</target>
        </trans-unit>
        <trans-unit id="80d3d1902630c787d741b39af0ddaba8dab6c5b7" translate="yes" xml:space="preserve">
          <source>Uint8ClampedArray</source>
          <target state="translated">Uint8ClampedArray</target>
        </trans-unit>
        <trans-unit id="dbab18f3ded2bfe1f1beae0998ec97e669719cb0" translate="yes" xml:space="preserve">
          <source>Unary operations</source>
          <target state="translated">Operaciones unitarias</target>
        </trans-unit>
        <trans-unit id="700a41ed5d6a21b389d3a06a552007f7d4970e83" translate="yes" xml:space="preserve">
          <source>Unary operators &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;++&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;, and a function &lt;code&gt;inv&lt;/code&gt;.</source>
          <target state="translated">Operadores unarios &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;++&lt;/code&gt; , &lt;code&gt;--&lt;/code&gt; y una funci&amp;oacute;n &lt;code&gt;inv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7af4b44086924bef8511e74a06dc5652e98b37f" translate="yes" xml:space="preserve">
          <source>Unary prefix operators</source>
          <target state="translated">Operadores de prefijo unario</target>
        </trans-unit>
        <trans-unit id="71f09f8fe1dde2289c868a03cb103ae030625690" translate="yes" xml:space="preserve">
          <source>Unchecked casts</source>
          <target state="translated">Escayolas no revisadas</target>
        </trans-unit>
        <trans-unit id="b8d5b81db1752990f9a00626b0f1fe949182953e" translate="yes" xml:space="preserve">
          <source>Unconfined dispatcher is an advanced mechanism that can be helpful in certain corner cases where dispatching of coroutine for its execution later is not needed or produces undesirable side-effects, because some operation in a coroutine must be performed right away. Unconfined dispatcher should not be used in general code.</source>
          <target state="translated">El despachador no confinado es un mecanismo avanzado que puede ser √∫til en ciertos casos de esquina en los que no es necesario despachar la cortinilla para su ejecuci√≥n posterior o produce efectos secundarios indeseables,porque alguna operaci√≥n de la cortinilla debe realizarse de inmediato.El despachador no confinado no debe utilizarse en c√≥digo general.</target>
        </trans-unit>
        <trans-unit id="1ad54c8520658fa2b0366caffc5901ab7a388736" translate="yes" xml:space="preserve">
          <source>Unconfined vs confined dispatcher</source>
          <target state="translated">Despachante no confinado vs.despachante confinado</target>
        </trans-unit>
        <trans-unit id="a2570f4d995169cd25ade0e53aebb8dd50e4a603" translate="yes" xml:space="preserve">
          <source>Undefined bidirectional character type. Undefined &lt;code&gt;char&lt;/code&gt; values have undefined directionality in the Unicode specification.</source>
          <target state="translated">Tipo de car&amp;aacute;cter bidireccional indefinido. Indefinidos &lt;code&gt;char&lt;/code&gt; valores tienen direccionalidad definida en la especificaci&amp;oacute;n Unicode.</target>
        </trans-unit>
        <trans-unit id="36bdd28a04792d2d0be5dfb8e33b3534b2fbd55b" translate="yes" xml:space="preserve">
          <source>Under the hood for every delegated property the Kotlin compiler generates an auxiliary property and delegates to it. For instance, for the property &lt;code&gt;prop&lt;/code&gt; the hidden property &lt;code&gt;prop$delegate&lt;/code&gt; is generated, and the code of the accessors simply delegates to this additional property:</source>
          <target state="translated">Debajo del cap&amp;oacute; para cada propiedad delegada, el compilador de Kotlin genera una propiedad auxiliar y la delega. Por ejemplo, para la propiedad &lt;code&gt;prop&lt;/code&gt; , se genera la propiedad oculta &lt;code&gt;prop$delegate&lt;/code&gt; , y el c&amp;oacute;digo de los accesadores simplemente delega a esta propiedad adicional:</target>
        </trans-unit>
        <trans-unit id="dd8b30eeb866c4439bd48cb8b3176d8c5f111d35" translate="yes" xml:space="preserve">
          <source>Under the hood, for every delegated property the Kotlin compiler generates an auxiliary property and delegates to it. For instance, for the property &lt;code&gt;prop&lt;/code&gt; the hidden property &lt;code&gt;prop$delegate&lt;/code&gt; is generated, and the code of the accessors simply delegates to this additional property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3488dca90e45f8e2402977d7d251d68f390541e0" translate="yes" xml:space="preserve">
          <source>Underscore for unused variables (since 1.1)</source>
          <target state="translated">Subrayado para las variables no utilizadas (desde 1.1)</target>
        </trans-unit>
        <trans-unit id="fb79a41a5516422da2e439b9cf71e40fb6fb14d4" translate="yes" xml:space="preserve">
          <source>Underscores for unused parameters</source>
          <target state="translated">Subraya los par√°metros no utilizados</target>
        </trans-unit>
        <trans-unit id="c1313f733bf8697e7ec5cdf78f97cfd84d52c63d" translate="yes" xml:space="preserve">
          <source>Underscores in numeric literals</source>
          <target state="translated">Subraya en los literales num√©ricos</target>
        </trans-unit>
        <trans-unit id="a32a8ccb60d72fd24a8aa497590c0bf8ba9cd8dc" translate="yes" xml:space="preserve">
          <source>Underscores in numeric literals (since 1.1)</source>
          <target state="translated">Subraya en los literales num√©ricos (desde 1.1)</target>
        </trans-unit>
        <trans-unit id="796b398098842ca0559820831bbb74bc385b8a80" translate="yes" xml:space="preserve">
          <source>Unexpected behavior with &lt;code&gt;in&lt;/code&gt; infix operator and &lt;code&gt;ConcurrentHashMap&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d199ddedf7802afc54d34deabe810e8a6bf5c4f" translate="yes" xml:space="preserve">
          <source>Unfortunately, if you want an empty collection, you need to either declare the resulting collection type explicitly, or supply the element type(s) to the function that constructs the collection:</source>
          <target state="translated">Desafortunadamente,si se quiere una colecci√≥n vac√≠a,es necesario declarar expl√≠citamente el tipo de colecci√≥n resultante,o suministrar el/los tipo(s)de elemento a la funci√≥n que construye la colecci√≥n:</target>
        </trans-unit>
        <trans-unit id="e40bf9bbf42c1f6fc0258d8c13f458aad30b49f2" translate="yes" xml:space="preserve">
          <source>Unfortunately, the code formatter built into IntelliJ IDEA had to work long before this document was released and now has a default setup that produces different formatting from what is now recommended.</source>
          <target state="translated">Desafortunadamente,el formateador de c√≥digo incorporado en el IntelliJ IDEA tuvo que funcionar mucho antes de que se publicara este documento y ahora tiene una configuraci√≥n por defecto que produce un formato diferente al que se recomienda ahora.</target>
        </trans-unit>
        <trans-unit id="12945de7af176c634a0d8ce8b70c82d42353176c" translate="yes" xml:space="preserve">
          <source>Unfortunately, using this would require us to type &lt;code&gt;p.name.value&lt;/code&gt; every time we wanted to use the property. We could do the following, but that's also not great since it introduces an extra property:</source>
          <target state="translated">Desafortunadamente, usar esto nos obligar&amp;iacute;a a escribir &lt;code&gt;p.name.value&lt;/code&gt; cada vez que quisi&amp;eacute;ramos usar la propiedad. Podr&amp;iacute;amos hacer lo siguiente, pero eso tampoco es genial ya que introduce una propiedad adicional:</target>
        </trans-unit>
        <trans-unit id="8837f610cd63014d412facb51aa6f98460391f9a" translate="yes" xml:space="preserve">
          <source>Unicode correctness can be onerous in Python 2, since the &quot;default&quot; string type &lt;code&gt;str&lt;/code&gt; is really just a byte array, while &lt;code&gt;unicode&lt;/code&gt; is actually a sequence of &lt;em&gt;code units&lt;/em&gt; (see below) - and whether the code units are 16 or 32 bits wide depends on how your Python distribution was built. In Kotlin, there's no such confusion: &lt;code&gt;String&lt;/code&gt;, which is what you get when you make a string literal (which you can only do with double quotes), is an immutable sequence of UTF-16 code units. &lt;code&gt;ByteArray&lt;/code&gt; is a fixed-size (but otherwise mutable) byte array (and &lt;code&gt;String&lt;/code&gt; can specifically &lt;em&gt;not&lt;/em&gt; be used as a byte array).</source>
          <target state="translated">La correcci&amp;oacute;n Unicode puede ser onerosa en Python 2, ya que el tipo de cadena &quot;predeterminado&quot; &lt;code&gt;str&lt;/code&gt; es en realidad solo una matriz de bytes, mientras que &lt;code&gt;unicode&lt;/code&gt; es en realidad una secuencia de &lt;em&gt;unidades&lt;/em&gt; de &lt;em&gt;c&amp;oacute;digo&lt;/em&gt; (ver m&amp;aacute;s abajo) - y si las unidades de c&amp;oacute;digo tienen 16 o 32 bits de ancho depende sobre c&amp;oacute;mo se construy&amp;oacute; su distribuci&amp;oacute;n de Python. En Kotlin, no hay tal confusi&amp;oacute;n: &lt;code&gt;String&lt;/code&gt; , que es lo que obtienes cuando haces un string literal (que solo puedes hacer con comillas dobles), es una secuencia inmutable de unidades de c&amp;oacute;digo UTF-16. &lt;code&gt;ByteArray&lt;/code&gt; es una matriz de bytes de tama&amp;ntilde;o fijo (pero por lo dem&amp;aacute;s mutable) (y &lt;code&gt;String&lt;/code&gt; &lt;em&gt;no se&lt;/em&gt; puede usar espec&amp;iacute;ficamente como una matriz de bytes).</target>
        </trans-unit>
        <trans-unit id="505d5c38054a74d4b2175415322819ae4849fcad" translate="yes" xml:space="preserve">
          <source>Unified Module Definitions (UMD), which is compatible with both &lt;em&gt;AMD&lt;/em&gt; and &lt;em&gt;CommonJS&lt;/em&gt;, and works as &quot;plain&quot; when neither &lt;em&gt;AMD&lt;/em&gt; nor &lt;em&gt;CommonJS&lt;/em&gt; is available at runtime.</source>
          <target state="translated">Definiciones de m&amp;oacute;dulo unificadas (UMD), que es compatible con &lt;em&gt;AMD&lt;/em&gt; y &lt;em&gt;CommonJS&lt;/em&gt; , y funciona como &quot;simple&quot; cuando ni &lt;em&gt;AMD&lt;/em&gt; ni &lt;em&gt;CommonJS&lt;/em&gt; est&amp;aacute;n disponibles en tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="de5d8b50b3695e8d25f732afc1acabb23472bc08" translate="yes" xml:space="preserve">
          <source>Unified backends and extensibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8c9c639d9b52130075c5077a53018a3b076842" translate="yes" xml:space="preserve">
          <source>Unified exception type for null checks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0e76a89bd66d41a17ed421fa008af6ae14f66f" translate="yes" xml:space="preserve">
          <source>Unified standard library</source>
          <target state="translated">Biblioteca est√°ndar unificada</target>
        </trans-unit>
        <trans-unit id="c4aff5fbbb595afd545658cb39aa6df5dcca07e6" translate="yes" xml:space="preserve">
          <source>Unify exceptions from null checks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f58ff59e65d2d98ffef40514cadc0e589f2165" translate="yes" xml:space="preserve">
          <source>Unify split by an empty match regex result across the platforms</source>
          <target state="translated">Unificar la divisi√≥n por un resultado vac√≠o de match regex a trav√©s de las plataformas</target>
        </trans-unit>
        <trans-unit id="370ce5f1a9eb1b7143f06590af17c7841cb70b8d" translate="yes" xml:space="preserve">
          <source>UninitializedPropertyAccessException</source>
          <target state="translated">UninitializedPropertyAccessException</target>
        </trans-unit>
        <trans-unit id="a91e29c6a18b3d46ad21babc72fbe12a2806e9d6" translate="yes" xml:space="preserve">
          <source>UnionAudioTrackOrTextTrackOrVideoTrack</source>
          <target state="translated">UnionAudioTrackOrTextTrackOrVideoTrack</target>
        </trans-unit>
        <trans-unit id="b427069e00bef5cd6617471fa2f1c76d7e94c1b0" translate="yes" xml:space="preserve">
          <source>UnionClientOrMessagePortOrServiceWorker</source>
          <target state="translated">UnionClientOrMessagePortOrServiceWorker</target>
        </trans-unit>
        <trans-unit id="10052a20073fd80351eaa98a0618cc05908c3fe2" translate="yes" xml:space="preserve">
          <source>UnionElementOrHTMLCollection</source>
          <target state="translated">UnionElementOrHTMLCollection</target>
        </trans-unit>
        <trans-unit id="64df693fc6248e2d4b802ced57f664db2486df1a" translate="yes" xml:space="preserve">
          <source>UnionElementOrMouseEvent</source>
          <target state="translated">UnionElementOrMouseEvent</target>
        </trans-unit>
        <trans-unit id="5d95156c593ab4f5a1d6aa9b7adaaae5b5072eee" translate="yes" xml:space="preserve">
          <source>UnionElementOrProcessingInstruction</source>
          <target state="translated">UnionElementOrProcessingInstruction</target>
        </trans-unit>
        <trans-unit id="cb794bdbfe712bfdef6a341eb0ffeda3e61df94b" translate="yes" xml:space="preserve">
          <source>UnionElementOrRadioNodeList</source>
          <target state="translated">UnionElementOrRadioNodeList</target>
        </trans-unit>
        <trans-unit id="55e9b0c8b2893c068d7bad4f687cd74e04c97fae" translate="yes" xml:space="preserve">
          <source>UnionHTMLOptGroupElementOrHTMLOptionElement</source>
          <target state="translated">UnionHTMLOptGroupElementOrHTMLOptionElement</target>
        </trans-unit>
        <trans-unit id="9914d6bd1e51362b2ae64dd4e4f0c81df753f3a5" translate="yes" xml:space="preserve">
          <source>UnionMessagePortOrServiceWorker</source>
          <target state="translated">UnionMessagePortOrServiceWorker</target>
        </trans-unit>
        <trans-unit id="9f29b0aeda2c26ba869f1da1baf112b08de48285" translate="yes" xml:space="preserve">
          <source>UnionMessagePortOrWindow</source>
          <target state="translated">UnionMessagePortOrWindow</target>
        </trans-unit>
        <trans-unit id="0bdbd6bc95c6e23b6042a486f6d277c7a15fc86a" translate="yes" xml:space="preserve">
          <source>UnionMessagePortOrWindowProxy</source>
          <target state="translated">UnionMessagePortOrWindowProxy</target>
        </trans-unit>
        <trans-unit id="f6b935ab337145efdeadda28cae18aa89a845e36" translate="yes" xml:space="preserve">
          <source>Unit</source>
          <target state="translated">Unit</target>
        </trans-unit>
        <trans-unit id="6e47e918985f3919c21cc4a5d827ef9eada3d607" translate="yes" xml:space="preserve">
          <source>Unit return type. Must not be nullable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc244abccf5ca3308a1494c12878b0d0e26feea" translate="yes" xml:space="preserve">
          <source>Unit-returning functions</source>
          <target state="translated">Funciones de retorno de la unidad</target>
        </trans-unit>
        <trans-unit id="4e0950ee26dcc7da4ca806b4b340177a815e5066" translate="yes" xml:space="preserve">
          <source>Unless specified otherwise, the names of functions and modules can be &lt;a href=&quot;js-to-kotlin-interop#jsname-annotation&quot;&gt;mangled&lt;/a&gt; in the generated JavaScript code. To keep such functions from elimination, use the mangled names in the &lt;code&gt;keep&lt;/code&gt; arguments as they appear in the generated JavaScript code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e885d6886100fb26b71f7747ee932dbb05e71ce7" translate="yes" xml:space="preserve">
          <source>Unless you're working on a library, omit redundant modifiers (e.g. &lt;code&gt;public&lt;/code&gt;).</source>
          <target state="translated">A menos que est&amp;eacute; trabajando en una biblioteca, omita los modificadores redundantes (por ejemplo, &lt;code&gt;public&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8feafcdb2005e6ef556074da45e878f1b7bc1d3a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;suspend-coroutine-or-return&quot;&gt;suspendCoroutineOrReturn&lt;/a&gt; it does not intercept continuation.</source>
          <target state="translated">A diferencia de &lt;a href=&quot;suspend-coroutine-or-return&quot;&gt;suspendCoroutineOrReturn&lt;/a&gt; , no intercepta la continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b5baaedd3e64f7be16b02c01618d1a48a2f53082" translate="yes" xml:space="preserve">
          <source>Unlike Java, Kotlin does not have a separate &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/technotes/guides/language/static-import.html&quot;&gt;&quot;import static&quot;&lt;/a&gt; syntax; all of these declarations are imported using the regular &lt;code&gt;import&lt;/code&gt; keyword.</source>
          <target state="translated">A diferencia de Java, Kotlin no tiene una sintaxis de &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/technotes/guides/language/static-import.html&quot;&gt;&quot;importaci&amp;oacute;n est&amp;aacute;tica&quot;&lt;/a&gt; separada ; todas estas declaraciones se importan utilizando la palabra clave de &lt;code&gt;import&lt;/code&gt; aci&amp;oacute;n normal .</target>
        </trans-unit>
        <trans-unit id="7e26e1701ff3fbdbd8ab214ddee2ab24ae9fb3e0" translate="yes" xml:space="preserve">
          <source>Unlike Java, block comments in Kotlin can be nested.</source>
          <target state="translated">A diferencia de Java,los comentarios de bloque en Kotlin pueden ser anidados.</target>
        </trans-unit>
        <trans-unit id="d71d4e303da5f24db04f06a7b993b10b6d2cf202" translate="yes" xml:space="preserve">
          <source>Unlike Python, &lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt; is an expression: the last expression of the &lt;code&gt;try&lt;/code&gt; block (if it succeeds) or the chosen &lt;code&gt;catch&lt;/code&gt; block becomes the result value (&lt;code&gt;finally&lt;/code&gt; doesn't affect the result), so we can refactor the function body above to:</source>
          <target state="translated">A diferencia de Python, &lt;code&gt;try&lt;/code&gt; / &lt;code&gt;catch&lt;/code&gt; es una expresi&amp;oacute;n: la &amp;uacute;ltima expresi&amp;oacute;n del bloque &lt;code&gt;try&lt;/code&gt; (si tiene &amp;eacute;xito) o el bloque &lt;code&gt;catch&lt;/code&gt; elegido se convierte en el valor de resultado ( &lt;code&gt;finally&lt;/code&gt; no afecta el resultado), por lo que podemos refactorizar el cuerpo de la funci&amp;oacute;n anterior a :</target>
        </trans-unit>
        <trans-unit id="9ffcb8e6d8c0e1886c9139362bf8a80448f390b9" translate="yes" xml:space="preserve">
          <source>Unlike a queue, a channel can be closed to indicate that no more elements are coming. On the receiver side it is convenient to use a regular &lt;code&gt;for&lt;/code&gt; loop to receive elements from the channel.</source>
          <target state="translated">A diferencia de una cola, un canal se puede cerrar para indicar que no vienen m&amp;aacute;s elementos. En el lado del receptor es conveniente utilizar un bucle &lt;code&gt;for&lt;/code&gt; regular para recibir elementos del canal.</target>
        </trans-unit>
        <trans-unit id="79736268c87ef812b5a0caf77be57b249d138010" translate="yes" xml:space="preserve">
          <source>Unlike docstrings, KDoc blocks are not available to the program at runtime.</source>
          <target state="translated">A diferencia de las cadenas de doctores,los bloques KDoc no est√°n disponibles para el programa en tiempo de ejecuci√≥n.</target>
        </trans-unit>
        <trans-unit id="9e77ba9444bad622fec50b4242ad0088f476d99f" translate="yes" xml:space="preserve">
          <source>Unlike other pointers, the parameters of type &lt;code&gt;const char*&lt;/code&gt; are represented as a Kotlin &lt;code&gt;String&lt;/code&gt;. So it is possible to pass any Kotlin string to a binding expecting a C string.</source>
          <target state="translated">A diferencia de otros punteros, los par&amp;aacute;metros de tipo &lt;code&gt;const char*&lt;/code&gt; se representan como una &lt;code&gt;String&lt;/code&gt; Kotlin . Por lo tanto, es posible pasar cualquier cadena de Kotlin a un enlace que espera una cadena C.</target>
        </trans-unit>
        <trans-unit id="cd3405f910e07d811413c0ab883fbacf2fe2d5fb" translate="yes" xml:space="preserve">
          <source>Unlike sources that can be fixed by hand in the worst case, binaries are a lot harder to migrate, and this makes backwards compatibility very important in the case of binaries. Incompatible changes to binaries can make updates very uncomfortable and thus should be introduced with even more care than those in the source language syntax.</source>
          <target state="translated">A diferencia de las fuentes que pueden ser fijadas a mano en el peor de los casos,los binarios son mucho m√°s dif√≠ciles de migrar,y esto hace que la compatibilidad hacia atr√°s sea muy importante en el caso de los binarios.Los cambios incompatibles en los binarios pueden hacer que las actualizaciones sean muy inc√≥modas y,por lo tanto,deben introducirse con m√°s cuidado que los de la sintaxis del lenguaje fuente.</target>
        </trans-unit>
        <trans-unit id="71ea4413722e85a3b020d9ed01e939aac7d2c7c0" translate="yes" xml:space="preserve">
          <source>Unlike the overload that accepts an argument of type &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuffer.html&quot;&gt;StringBuffer&lt;/a&gt;, this function does not compare this string and the specified &lt;a href=&quot;../kotlin/-char-sequence/index#kotlin.CharSequence&quot;&gt;CharSequence&lt;/a&gt; in a synchronized block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418fd8181d764c26cb6aebed80be5ec76fed83e8" translate="yes" xml:space="preserve">
          <source>Unsafe mode is intended for most performance critical operations, where object graph ownership is expected to be correct (such as application debugged earlier in &lt;a href=&quot;-s-a-f-e&quot;&gt;SAFE&lt;/a&gt; mode), just transfers ownership without further checks.</source>
          <target state="translated">El modo Inseguro est&amp;aacute; dise&amp;ntilde;ado para la mayor&amp;iacute;a de las operaciones cr&amp;iacute;ticas para el rendimiento, donde se espera que la propiedad del gr&amp;aacute;fico de objetos sea correcta (como la aplicaci&amp;oacute;n depurada anteriormente en el modo &lt;a href=&quot;-s-a-f-e&quot;&gt;SEGURO&lt;/a&gt; ), simplemente transfiere la propiedad sin m&amp;aacute;s verificaciones.</target>
        </trans-unit>
        <trans-unit id="eb25c274c554703f1d6ac7eff8cabedc73b12953" translate="yes" xml:space="preserve">
          <source>UnsafeVariance</source>
          <target state="translated">UnsafeVariance</target>
        </trans-unit>
        <trans-unit id="cfba46d6859cfbbcea2df0d333b94927ce585d13" translate="yes" xml:space="preserve">
          <source>Unsigned arithmetics</source>
          <target state="translated">Aritm√©tica sin firmar</target>
        </trans-unit>
        <trans-unit id="5c5289ec1ae0731b7a3321d477acd024a60473b2" translate="yes" xml:space="preserve">
          <source>Unsigned integers</source>
          <target state="translated">Enteros sin firmar</target>
        </trans-unit>
        <trans-unit id="5b676d18e8ccf61f5e227df4adab6b4ac25f32fd" translate="yes" xml:space="preserve">
          <source>Unsigned integers are available only since Kotlin 1.3 and currently are &lt;em&gt;experimental&lt;/em&gt;. See details in the &lt;a href=&quot;basic-types#experimental-status-of-unsigned-integers&quot;&gt;reference&lt;/a&gt;.</source>
          <target state="translated">Los enteros sin signo est&amp;aacute;n disponibles solo desde Kotlin 1.3 y actualmente son &lt;em&gt;experimentales&lt;/em&gt; . Ver detalles en la &lt;a href=&quot;basic-types#experimental-status-of-unsigned-integers&quot;&gt;referencia&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3f300d5a964ee1dfe6f01eeb8815de2c1adedd0" translate="yes" xml:space="preserve">
          <source>Unsigned integers are available only since Kotlin 1.3 and currently are in &lt;a href=&quot;evolution/components-stability&quot;&gt;Beta&lt;/a&gt;. See details in the &lt;a href=&quot;basic-types#beta-status-of-unsigned-integers&quot;&gt;reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b747e738f03e7ea5b53d3e97fc3d06bb2fdd5460" translate="yes" xml:space="preserve">
          <source>Unsigned types are available only since Kotlin 1.3 and currently are &lt;em&gt;experimental&lt;/em&gt;. See details &lt;a href=&quot;#experimental-status-of-unsigned-integers&quot;&gt;below&lt;/a&gt;</source>
          <target state="translated">Los tipos sin firmar est&amp;aacute;n disponibles solo desde Kotlin 1.3 y actualmente son &lt;em&gt;experimentales&lt;/em&gt; . Ver detalles a &lt;a href=&quot;#experimental-status-of-unsigned-integers&quot;&gt;continuaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d65bd8aeb4b2e88a04a2f25ed0b812fa94ab0cb" translate="yes" xml:space="preserve">
          <source>Unsigned types are available only since Kotlin 1.3 and currently in &lt;a href=&quot;evolution/components-stability&quot;&gt;Beta&lt;/a&gt;. See details &lt;a href=&quot;#beta-status-of-unsigned-integers&quot;&gt;below&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69f19b70030748472412cf013c7f8262fa5cc73" translate="yes" xml:space="preserve">
          <source>Unsigned types are implemented using another experimental feature, namely &lt;a href=&quot;inline-classes&quot;&gt;inline classes&lt;/a&gt;.</source>
          <target state="translated">Los tipos sin firmar se implementan utilizando otra caracter&amp;iacute;stica experimental, a saber, &lt;a href=&quot;inline-classes&quot;&gt;clases en l&amp;iacute;nea&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="963c1b3d4bd7cb3c897cb1ca5167eb9af57242de" translate="yes" xml:space="preserve">
          <source>Unsigned types are implemented using another feature that's not yet stable, namely &lt;a href=&quot;inline-classes&quot;&gt;inline classes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22647f2117d5ec2026da9b7edc1161d8603f0593" translate="yes" xml:space="preserve">
          <source>Unsigned types support most of the operations of their signed counterparts.</source>
          <target state="translated">Los tipos no firmados apoyan la mayor√≠a de las operaciones de sus hom√≥logos firmados.</target>
        </trans-unit>
        <trans-unit id="a84f8397c523a0f7323640840daf25c5d28f242d" translate="yes" xml:space="preserve">
          <source>Unsound smartcasts on enum members</source>
          <target state="translated">Emisiones inteligentes poco s√≥lidas sobre los miembros del Nomencl√°tor</target>
        </trans-unit>
        <trans-unit id="fb52c13a5d3c511932c9721a05a0f30bebc8f773" translate="yes" xml:space="preserve">
          <source>Unsupported</source>
          <target state="translated">Unsupported</target>
        </trans-unit>
        <trans-unit id="d6b9cc70af4626956ac004db8653f110603b7231" translate="yes" xml:space="preserve">
          <source>UnsupportedOperationException</source>
          <target state="translated">UnsupportedOperationException</target>
        </trans-unit>
        <trans-unit id="2ce01f081a0318f94ee11d34764838aaa22a8009" translate="yes" xml:space="preserve">
          <source>Unused declarations can appear in cases like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d866719de20162a43b046be2b1dd937f0e0c8b0" translate="yes" xml:space="preserve">
          <source>Unzip the standalone compiler into a directory and optionally add the &lt;code&gt;bin&lt;/code&gt; directory to the system path. The &lt;code&gt;bin&lt;/code&gt; directory contains the scripts needed to compile and run Kotlin on Windows, OS X and Linux.</source>
          <target state="translated">Descomprima el compilador independiente en un directorio y, opcionalmente, agregue el directorio &lt;code&gt;bin&lt;/code&gt; a la ruta del sistema. El directorio &lt;code&gt;bin&lt;/code&gt; contiene los scripts necesarios para compilar y ejecutar Kotlin en Windows, OS X y Linux.</target>
        </trans-unit>
        <trans-unit id="ab7b8830d7d19c631f4db7f0e7cccdc5fc99c4ae" translate="yes" xml:space="preserve">
          <source>Update Gradle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd35499f667636f0205aff356fc79aa271c4a159" translate="yes" xml:space="preserve">
          <source>Update the application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756c6de970516b187b891362c635541de1071978" translate="yes" xml:space="preserve">
          <source>Update to version A (where the change is announced)</source>
          <target state="translated">Actualizaci√≥n a la versi√≥n A (donde se anuncia el cambio)</target>
        </trans-unit>
        <trans-unit id="a8909313fb96928caf2b3605836e51265cd9382c" translate="yes" xml:space="preserve">
          <source>Update to version B (where the change happens)</source>
          <target state="translated">Actualizaci√≥n a la versi√≥n B (donde se produce el cambio)</target>
        </trans-unit>
        <trans-unit id="bc69b0f01bd4bf2a5762f9802698425322ca8ecc" translate="yes" xml:space="preserve">
          <source>Updates this map with key/value pairs from the specified map &lt;a href=&quot;../-mutable-map/put-all#kotlin.collections.MutableMap%24putAll%28kotlin.collections.Map%28%28kotlin.collections.MutableMap.K%2C+kotlin.collections.MutableMap.V%29%29%29%2Ffrom&quot;&gt;from&lt;/a&gt;.</source>
          <target state="translated">Actualiza este mapa con pares clave / valor del mapa especificado &lt;a href=&quot;../-mutable-map/put-all#kotlin.collections.MutableMap%24putAll%28kotlin.collections.Map%28%28kotlin.collections.MutableMap.K%2C+kotlin.collections.MutableMap.V%29%29%29%2Ffrom&quot;&gt;de&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb9919809e0edbf2ce222896374072b2a1f62288" translate="yes" xml:space="preserve">
          <source>Updates this map with key/value pairs from the specified map &lt;a href=&quot;../-mutable-map/put-all#kotlin.collections.MutableMap%24putAll(kotlin.collections.Map((kotlin.collections.MutableMap.K,%20kotlin.collections.MutableMap.V)))/from&quot;&gt;from&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9592e59ae4a1ea78ffeef819217ff2d297efc8bf" translate="yes" xml:space="preserve">
          <source>Updates this map with key/value pairs from the specified map &lt;a href=&quot;put-all#kotlin.collections.MutableMap%24putAll%28kotlin.collections.Map%28%28kotlin.collections.MutableMap.K%2C+kotlin.collections.MutableMap.V%29%29%29%2Ffrom&quot;&gt;from&lt;/a&gt;.</source>
          <target state="translated">Actualiza este mapa con pares clave / valor del mapa especificado &lt;a href=&quot;put-all#kotlin.collections.MutableMap%24putAll%28kotlin.collections.Map%28%28kotlin.collections.MutableMap.K%2C+kotlin.collections.MutableMap.V%29%29%29%2Ffrom&quot;&gt;de&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ea39222df240b93c342df8ff54a9cb5e6582800" translate="yes" xml:space="preserve">
          <source>Updates this map with key/value pairs from the specified map &lt;a href=&quot;put-all#kotlin.collections.MutableMap%24putAll(kotlin.collections.Map((kotlin.collections.MutableMap.K,%20kotlin.collections.MutableMap.V)))/from&quot;&gt;from&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6952e09b9cc6aee90f3110c55ff105e4facbf9" translate="yes" xml:space="preserve">
          <source>Updating</source>
          <target state="translated">Updating</target>
        </trans-unit>
        <trans-unit id="d63c48198d515b24d1b1b235598c3c48c2a4be5a" translate="yes" xml:space="preserve">
          <source>Updating Gradle Scripts</source>
          <target state="translated">Actualizando los guiones de Gradle</target>
        </trans-unit>
        <trans-unit id="408c0db23a4308cddf6a6e9ce2a0a6679db93544" translate="yes" xml:space="preserve">
          <source>Updating elements</source>
          <target state="translated">Elementos de actualizaci√≥n</target>
        </trans-unit>
        <trans-unit id="5db2b695ba29ebd7f0ca8dec803b6b54c73ec2a6" translate="yes" xml:space="preserve">
          <source>Upper bounds</source>
          <target state="translated">L√≠mites superiores</target>
        </trans-unit>
        <trans-unit id="6fe7e1ccf58a63e3bc126e60c26bcc1a9fac8e17" translate="yes" xml:space="preserve">
          <source>Upper bounds, or generic constraints imposed on this type parameter. See the &lt;a href=&quot;../../../../../../docs/reference/generics#upper-bounds&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">L&amp;iacute;mites superiores o restricciones gen&amp;eacute;ricas impuestas a este par&amp;aacute;metro de tipo. Consulte la &lt;a href=&quot;../../../../../../docs/reference/generics#upper-bounds&quot;&gt;documentaci&amp;oacute;n del idioma Kotlin&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="034e0e826c171bc69a42734bf5f512ba3665a32d" translate="yes" xml:space="preserve">
          <source>Usage of the &lt;code&gt;!!&lt;/code&gt; operator that is described below;</source>
          <target state="translated">Uso del &lt;code&gt;!!&lt;/code&gt; operador que se describe a continuaci&amp;oacute;n;</target>
        </trans-unit>
        <trans-unit id="e1820bd9f032e11eff310c40682c9835a9eb3203" translate="yes" xml:space="preserve">
          <source>Usage of the deprecated element will be reported as a warning.</source>
          <target state="translated">El uso del elemento desaprobado ser√° reportado como una advertencia.</target>
        </trans-unit>
        <trans-unit id="8a6da2a0224bff4d0cdbf931eb3f79ea3c663d17" translate="yes" xml:space="preserve">
          <source>Usage of the deprecated element will be reported as an error.</source>
          <target state="translated">El uso del elemento desaprobado ser√° reportado como un error.</target>
        </trans-unit>
        <trans-unit id="2f2278b9118c021e0836f33b45c4b344bc07faf3" translate="yes" xml:space="preserve">
          <source>Usages of such API will be reported as warnings unless an explicit opt-in with the &lt;a href=&quot;../-opt-in/index&quot;&gt;OptIn&lt;/a&gt; annotation, e.g. &lt;code&gt;@OptIn(ExperimentalUnsignedTypes::class)&lt;/code&gt;, or with the &lt;code&gt;-Xopt-in=kotlin.ExperimentalUnsignedTypes&lt;/code&gt; compiler option is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2bd12dd174680813870a73e531a53b2704ad9f" translate="yes" xml:space="preserve">
          <source>Usages of such API will be reported as warnings unless an explicit opt-in with the &lt;a href=&quot;../-use-experimental/index&quot;&gt;UseExperimental&lt;/a&gt; annotation, e.g. &lt;code&gt;@UseExperimental(ExperimentalUnsignedTypes::class)&lt;/code&gt;, or with the &lt;code&gt;-Xuse-experimental=kotlin.ExperimentalUnsignedTypes&lt;/code&gt; compiler option is given.</source>
          <target state="translated">Los usos de dicha API se informar&amp;aacute;n como advertencias a menos que se proporcione una opci&amp;oacute;n expl&amp;iacute;cita con la anotaci&amp;oacute;n &lt;a href=&quot;../-use-experimental/index&quot;&gt;UseExperimental&lt;/a&gt; , por ejemplo, &lt;code&gt;@UseExperimental(ExperimentalUnsignedTypes::class)&lt;/code&gt; , o con la opci&amp;oacute;n del compilador &lt;code&gt;-Xuse-experimental=kotlin.ExperimentalUnsignedTypes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17a2b4afa5d97d07993ae00f2065c3a2c91e4e36" translate="yes" xml:space="preserve">
          <source>Usages of such annotations will be reported as warnings unless an explicit opt-in with the &lt;a href=&quot;../../kotlin/-opt-in/index&quot;&gt;OptIn&lt;/a&gt; annotation, e.g. &lt;code&gt;@OptIn(ExperimentalJsExport::class)&lt;/code&gt;, or with the &lt;code&gt;-Xopt-in=kotlin.js.ExperimentalJsExport&lt;/code&gt; compiler option is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5461bf95a53302a7c5df48274f6a4f3517903597" translate="yes" xml:space="preserve">
          <source>Usages of this annotation require an explicit compilation argument to be specified: either &lt;code&gt;-Xjvm-default=enable&lt;/code&gt; or &lt;code&gt;-Xjvm-default=compatibility&lt;/code&gt;.</source>
          <target state="translated">Los usos de esta anotaci&amp;oacute;n requieren que se especifique un argumento de compilaci&amp;oacute;n expl&amp;iacute;cito: &lt;code&gt;-Xjvm-default=enable&lt;/code&gt; o &lt;code&gt;-Xjvm-default=compatibility&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="070afea0c959ac4ab2122b78be879a1236b7d5f2" translate="yes" xml:space="preserve">
          <source>Use 4 spaces for indentation. Do not use tabs.</source>
          <target state="translated">Usa 4 espacios para la indentaci√≥n.No use pesta√±as.</target>
        </trans-unit>
        <trans-unit id="505b02e2c68810a100167ed2394b7b09d07536b9" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#calling-kotlin-code-from-swift&quot;&gt;Kotlin from Swift&lt;/a&gt;</source>
          <target state="translated">Usa &lt;a href=&quot;#calling-kotlin-code-from-swift&quot;&gt;Kotlin de Swift&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="259f61d0fe4d9980f69dcb9a143f67a783be3566" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../-simple-effect/implies&quot;&gt;SimpleEffect.implies&lt;/a&gt; function to describe a conditional effect that happens in such case.</source>
          <target state="translated">Utilice la funci&amp;oacute;n &lt;a href=&quot;../-simple-effect/implies&quot;&gt;SimpleEffect.implies&lt;/a&gt; para describir un efecto condicional que ocurre en tal caso.</target>
        </trans-unit>
        <trans-unit id="7b3d7f2e06019f3ce17f9b7609b4e12a0a852225" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../java.io.-file/walk&quot;&gt;File.walk&lt;/a&gt;, &lt;a href=&quot;../java.io.-file/walk-top-down&quot;&gt;File.walkTopDown&lt;/a&gt; or &lt;a href=&quot;../java.io.-file/walk-bottom-up&quot;&gt;File.walkBottomUp&lt;/a&gt; extension functions to instantiate a &lt;code&gt;FileTreeWalk&lt;/code&gt; instance.</source>
          <target state="translated">Utilice las funciones de extensi&amp;oacute;n &lt;a href=&quot;../java.io.-file/walk&quot;&gt;File.walk&lt;/a&gt; , &lt;a href=&quot;../java.io.-file/walk-top-down&quot;&gt;File.walkTopDown&lt;/a&gt; o &lt;a href=&quot;../java.io.-file/walk-bottom-up&quot;&gt;File.walkBottomUp&lt;/a&gt; para crear una instancia de &lt;code&gt;FileTreeWalk&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24479d1c98fbbe2aeb0187678fa3eb554ac97484" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://github.com/bintray/gradle-bintray-plugin/issues/229#issuecomment-473123891&quot;&gt;a workaround for the Bintray plugin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855c22b8caa56aad8a88d87618784ee61265712d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;apply&lt;/code&gt; for code blocks that don't return a value and mainly operate on the members of the receiver object. The common case for &lt;code&gt;apply&lt;/code&gt; is the object configuration. Such calls can be read as &amp;ldquo;&lt;em&gt;apply the following assignments to the object.&lt;/em&gt;&amp;rdquo;</source>
          <target state="translated">Use &lt;code&gt;apply&lt;/code&gt; para bloques de c&amp;oacute;digo que no devuelven un valor y operan principalmente en los miembros del objeto receptor. El caso com&amp;uacute;n para &lt;code&gt;apply&lt;/code&gt; es la configuraci&amp;oacute;n del objeto. Estas llamadas se pueden leer como &amp;ldquo; &lt;em&gt;aplicar las siguientes asignaciones al objeto. &lt;/em&gt;&quot;</target>
        </trans-unit>
        <trans-unit id="6ba975b0b8793e55988fa1e5cd1c3f8baae89326" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;arguments {}&lt;/code&gt; block to pass arguments to annotation processors:</source>
          <target state="translated">Utilice el bloque de &lt;code&gt;arguments {}&lt;/code&gt; para pasar argumentos a los procesadores de anotaciones:</target>
        </trans-unit>
        <trans-unit id="9068946a50ad967859350bf76f77d127a3ad6ba3" translate="yes" xml:space="preserve">
          <source>Use C function pointer from Kotlin</source>
          <target state="translated">Usar el puntero de la funci√≥n C de Kotlin</target>
        </trans-unit>
        <trans-unit id="8d59d0d06987ce05b43d207e59345cd58bf6234b" translate="yes" xml:space="preserve">
          <source>Use Gradle 6.0 and above to generate wrapper (&lt;code&gt;gradle wrapper&lt;/code&gt;) in the project root directory to generate &lt;code&gt;gradlew&lt;/code&gt;, &lt;code&gt;gradlew.bat&lt;/code&gt;, and &lt;code&gt;gradle/wrapper/gradle-wrapper.jar&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f14c4d527695edd872c7fe2172a6db2f31e9728" translate="yes" xml:space="preserve">
          <source>Use Kotlin from node.js with CommonJS</source>
          <target state="translated">Usar Kotlin de node.js con CommonJS</target>
        </trans-unit>
        <trans-unit id="7955d34ca487ac99a425deedc1ddb62d16416242" translate="yes" xml:space="preserve">
          <source>Use Kotlin in the browser with AMD</source>
          <target state="translated">Usar Kotlin en el navegador con AMD</target>
        </trans-unit>
        <trans-unit id="80ebd15dbf9fc53c163f2e8494fee09225815763" translate="yes" xml:space="preserve">
          <source>Use a &lt;a href=&quot;../../reference/basic-types#string-templates&quot;&gt;string template&lt;/a&gt; for your reversed name by adding a dollar sign &lt;code&gt;$&lt;/code&gt; and enclosing it in curly braces &amp;ndash; &lt;code&gt;${state.name.reversed()}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2449126f023eebada4dc8166f2d086abc1f70c85" translate="yes" xml:space="preserve">
          <source>Use a &lt;a href=&quot;../../reference/basic-types#string-templates&quot;&gt;string template&lt;/a&gt; to insert your name length into the string by adding a dollar sign &lt;code&gt;$&lt;/code&gt; and enclosing it in curly braces &amp;ndash; &lt;code&gt;${it.length}&lt;/code&gt;. &lt;code&gt;it&lt;/code&gt; is the default name of a &lt;a href=&quot;../../reference/coding-conventions#lambda-parameters&quot;&gt;lambda parameter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567ed77b3fedba236234b46ed9dd13b2639d5a1d" translate="yes" xml:space="preserve">
          <source>Use a Kotlin Gradle project as a CocoaPods dependency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad9d5856fb71823437fdf612d7806d4ef4bcde8" translate="yes" xml:space="preserve">
          <source>Use a custom JDK home directory to include into the classpath if it differs from the default &lt;code&gt;JAVA_HOME&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dafba398135044480a3e13e8cf827e6d5239bcb" translate="yes" xml:space="preserve">
          <source>Use a function returning nullable value:</source>
          <target state="translated">Utilice una funci√≥n que devuelva el valor nulo:</target>
        </trans-unit>
        <trans-unit id="09ab22034a8c650e65b27de7b44cb4d61caf9b2b" translate="yes" xml:space="preserve">
          <source>Use a string template by adding a dollar sign &lt;code&gt;$&lt;/code&gt; before this variable name directly in the text output like this &amp;ndash; &lt;code&gt;$name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6761a777f295b6258dc7a19c0a25a2a4cc06a051" translate="yes" xml:space="preserve">
          <source>Use any members that don't mention the star-projected type parameter(s) at all</source>
          <target state="translated">Use cualquier miembro que no mencione en absoluto los par√°metros del tipo de proyecci√≥n estelar</target>
        </trans-unit>
        <trans-unit id="02c711d6a5cfe540ce71589b8b208d49d3883457" translate="yes" xml:space="preserve">
          <source>Use any members that return the star-projected type parameter(s), but the return type will appear to be &lt;code&gt;Any?&lt;/code&gt; (unless the type parameter is constrained, in which case you'll get the type mentioned in the constraint)</source>
          <target state="translated">Utilice cualquier miembro que devuelva los par&amp;aacute;metros de tipo proyectado en estrella, pero el tipo de retorno parecer&amp;aacute; ser &lt;code&gt;Any?&lt;/code&gt; (a menos que el par&amp;aacute;metro de tipo est&amp;eacute; restringido, en cuyo caso obtendr&amp;aacute; el tipo mencionado en la restricci&amp;oacute;n)</target>
        </trans-unit>
        <trans-unit id="14a29ba383c84d15925a42f871530f52904ae908" translate="yes" xml:space="preserve">
          <source>Use cases</source>
          <target state="translated">Casos de uso</target>
        </trans-unit>
        <trans-unit id="6914afc57d4eceefab3ce74c4e34c13830de00b1" translate="yes" xml:space="preserve">
          <source>Use dynamic to interact with libraries</source>
          <target state="translated">Usar la din√°mica para interactuar con las bibliotecas</target>
        </trans-unit>
        <trans-unit id="a696c211088879b039bc564a3a89ee0e5d5cf819" translate="yes" xml:space="preserve">
          <source>Use extension functions liberally. Every time you have a function that works primarily on an object, consider making it an extension function accepting that object as a receiver. To minimize API pollution, restrict the visibility of extension functions as much as it makes sense. As necessary, use local extension functions, member extension functions, or top-level extension functions with private visibility.</source>
          <target state="translated">Use las funciones de extensi√≥n libremente.Cada vez que tenga una funci√≥n que funcione principalmente en un objeto,considere convertirla en una funci√≥n de extensi√≥n aceptando ese objeto como receptor.Para minimizar la contaminaci√≥n del API,restrinja la visibilidad de las funciones de extensi√≥n tanto como tenga sentido.Seg√∫n sea necesario,utilice funciones de extensi√≥n locales,funciones de extensi√≥n de miembros o funciones de extensi√≥n de nivel superior con visibilidad privada.</target>
        </trans-unit>
        <trans-unit id="d507109a798498dbaa1e633727d124b6d6bc26b0" translate="yes" xml:space="preserve">
          <source>Use for APIs which have a third-party implementation available at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1d8d5003fdff477f08dfe445e9b40450048a1d" translate="yes" xml:space="preserve">
          <source>Use for dependencies needed for the internal logic of a module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46a150eeba438f84a49eada07a259f489c6609a" translate="yes" xml:space="preserve">
          <source>Use four spaces for indentation. Do not use tabs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce69d8e8477848e488f670533689cb83c9f8c099" translate="yes" xml:space="preserve">
          <source>Use it &lt;a href=&quot;#using-sharedcode-from-android&quot;&gt;from Android app&lt;/a&gt;</source>
          <target state="translated">&amp;Uacute;selo &lt;a href=&quot;#using-sharedcode-from-android&quot;&gt;desde la aplicaci&amp;oacute;n de Android&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62f9973d0d21db3635e8a7ac730a624b82c527d3" translate="yes" xml:space="preserve">
          <source>Use kotlinx.html to generate HTML</source>
          <target state="translated">Usar kotlinx.html para generar HTML</target>
        </trans-unit>
        <trans-unit id="c9f5118d1f54f80362016bfd5b442c56f51dfc9b" translate="yes" xml:space="preserve">
          <source>Use native libraries in the hierarchical structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f896877d7535f3235fee51d8eb8bb2fc4692498" translate="yes" xml:space="preserve">
          <source>Use regular indent (4 spaces) for constructor parameters.</source>
          <target state="translated">Use la sangr√≠a regular (4 espacios)para los par√°metros de construcci√≥n.</target>
        </trans-unit>
        <trans-unit id="8e22c1db7346b432b927919ebe9e716628c63ef8" translate="yes" xml:space="preserve">
          <source>Use regular indent (4 spaces) for function parameters.</source>
          <target state="translated">Use la sangr√≠a regular (4 espacios)para los par√°metros de la funci√≥n.</target>
        </trans-unit>
        <trans-unit id="b28f6c3f00f4a4b985821c624ebe6f5d2ab53f74" translate="yes" xml:space="preserve">
          <source>Use regular indent (four spaces) for constructor parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f39c73e1f23d3754cec94f86de325d9e4b9a4f1" translate="yes" xml:space="preserve">
          <source>Use target shortcuts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6356c2b337336539cb098b460ea9fc43a2a742aa" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../../../api/latest/jvm/stdlib/kotlin.text/replace&quot;&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/a&gt; function to remove the empty spaces in the name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72171ae8b75ba095394479592bf8ca1cc4cab18c" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../../../api/latest/jvm/stdlib/stdlib/kotlin.io/println&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt; function to print computing status and the result of multiplication to the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7280e72c76af98308a3c66e2b7e24f9cc56702" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/await.html&quot;&gt;&lt;code&gt;await()&lt;/code&gt;&lt;/a&gt; function to await the computation result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0461db73580d6d4278fffb255e74938d931ed12e" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html&quot;&gt;&lt;code&gt;async()&lt;/code&gt;&lt;/a&gt; function to create coroutines that compute deferred values &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6065d1c978fbee3b2ff226845a77482cccebc712" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/delay.html&quot;&gt;&lt;code&gt;delay()&lt;/code&gt;&lt;/a&gt; function to imitate CPU-consuming blocking code. It suspends the coroutine for 100 ms without blocking the thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b591373cb35b1a0f6e2219e8ca5964a4f1c5a083" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/delay.html&quot;&gt;&lt;code&gt;delay()&lt;/code&gt;&lt;/a&gt; function to imitate CPU-consuming code. It suspends the coroutine for 300 ms without blocking the thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33adc7173a74761298cf96415d2790cf72a0ec3" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/run-blocking.html&quot;&gt;&lt;code&gt;runBlocking()&lt;/code&gt;&lt;/a&gt; block to wrap a coroutine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50099ad72d8ea21daa614b797c104f31da58f3d2" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;countDistinctCharacters()&lt;/code&gt; function to count the unique letters in your name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a252bcad831096a6694a845390d272ffaa5046b" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;maven-publish&lt;/code&gt; Gradle &lt;a href=&quot;https://docs.gradle.org/current/userguide/publishing_maven.html&quot;&gt;plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2153a3c57b5ac237e2457368e65faee188870aa7" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;until&lt;/code&gt; function to loop over an open range:</source>
          <target state="translated">Use la funci&amp;oacute;n &lt;code&gt;until&lt;/code&gt; para recorrer un rango abierto:</target>
        </trans-unit>
        <trans-unit id="0bd4c99e44de0d3ffdb3c45eb15b74d7b4c2b386" translate="yes" xml:space="preserve">
          <source>Use the IR backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e774b3c689a7ceab89fb14ac0440aed57436890" translate="yes" xml:space="preserve">
          <source>Use the Kotlin dynamic library from C</source>
          <target state="translated">Usar la biblioteca din√°mica de Kotlin de C</target>
        </trans-unit>
        <trans-unit id="44f7acf29bd5c28fb7d8d6e6f897b376b75ea2f3" translate="yes" xml:space="preserve">
          <source>Use the boxed version of an inline class in return type position for covariant and generic-specialized overrides</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2625d939200fe0f3767b996a1eaa8c5f1f235d" translate="yes" xml:space="preserve">
          <source>Use the following factory methods to declare elements of the &lt;code&gt;binaries&lt;/code&gt; collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca17390ef51588303bcc0395c954faa0b511dcd" translate="yes" xml:space="preserve">
          <source>Use the intention from the IDE to include the missing import line:</source>
          <target state="translated">Utilice la intenci√≥n del IDE para incluir la l√≠nea de importaci√≥n que falta:</target>
        </trans-unit>
        <trans-unit id="c9fe0e8ecff640eabedf59913fdfab4613b76bf4" translate="yes" xml:space="preserve">
          <source>Use the named argument syntax when a method takes multiple parameters of the same primitive type, or for parameters of &lt;code&gt;Boolean&lt;/code&gt; type, unless the meaning of all parameters is absolutely clear from context.</source>
          <target state="translated">Utilice la sintaxis del argumento con nombre cuando un m&amp;eacute;todo toma varios par&amp;aacute;metros del mismo tipo primitivo, o para par&amp;aacute;metros de tipo &lt;code&gt;Boolean&lt;/code&gt; , a menos que el significado de todos los par&amp;aacute;metros est&amp;eacute; absolutamente claro por el contexto.</target>
        </trans-unit>
        <trans-unit id="09617aa736694d6bc881574c01e808ebeb4fb7c7" translate="yes" xml:space="preserve">
          <source>Use the path to the Java runtime version 1.8 or 11 for the &lt;em&gt;Gradle JVM&lt;/em&gt; field. Check out the &lt;a href=&quot;https://jdk.java.net/11/&quot;&gt;https://jdk.java.net/11&lt;/a&gt; or &lt;a href=&quot;https://adoptopenjdk.net/&quot;&gt;https://adoptopenjdk.net/&lt;/a&gt; for the best JRE, OpenJDK, or JDK distribution.</source>
          <target state="translated">Utilice la ruta a la versi&amp;oacute;n 1.8 u 11 del tiempo de ejecuci&amp;oacute;n de Java para el campo &lt;em&gt;Gradle JVM&lt;/em&gt; . Consulte &lt;a href=&quot;https://jdk.java.net/11/&quot;&gt;https://jdk.java.net/11&lt;/a&gt; o &lt;a href=&quot;https://adoptopenjdk.net/&quot;&gt;https://adoptopenjdk.net/&lt;/a&gt; para obtener la mejor distribuci&amp;oacute;n de JRE, OpenJDK o JDK.</target>
        </trans-unit>
        <trans-unit id="b686514332051bdffa546563fa862bdb9f30b3de" translate="yes" xml:space="preserve">
          <source>Use the scope function &lt;a href=&quot;../../reference/scope-functions#let&quot;&gt;&lt;code&gt;let&lt;/code&gt;&lt;/a&gt; to run the function within the object context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe23756e108375f4f234fa62c62b1a3192f2334" translate="yes" xml:space="preserve">
          <source>Use the shared Kotlin library &lt;a href=&quot;#setting-up-framework-dependency-in-xcode&quot;&gt;from iOS app&lt;/a&gt;</source>
          <target state="translated">Utilice la biblioteca compartida de Kotlin &lt;a href=&quot;#setting-up-framework-dependency-in-xcode&quot;&gt;desde la aplicaci&amp;oacute;n iOS&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdbe6eb3123e18a3df48280aadc1acf4ad69906d" translate="yes" xml:space="preserve">
          <source>Use the specified paths as base directories. Base directories are used for calculating relative paths in the source map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e87c063aea31b41f461fabf9570d133ee5c90c0" translate="yes" xml:space="preserve">
          <source>Use the standard library function &lt;code&gt;reversed()&lt;/code&gt; to reverse your name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9852a84398c6954bfc8ee0f3c95a700b78ffafb" translate="yes" xml:space="preserve">
          <source>Use the types &lt;code&gt;Kotlin2JsCompile&lt;/code&gt; and &lt;code&gt;KotlinCompileCommon&lt;/code&gt; for the JS and Common targets, accordingly.</source>
          <target state="translated">Utilice los tipos &lt;code&gt;Kotlin2JsCompile&lt;/code&gt; y &lt;code&gt;KotlinCompileCommon&lt;/code&gt; para los objetivos JS y Common, seg&amp;uacute;n corresponda.</target>
        </trans-unit>
        <trans-unit id="ba751862add42b30b98929193759e854e81a1255" translate="yes" xml:space="preserve">
          <source>Use this function for projects that contain both Java and Kotlin source files. Note that the default source directories for Java sources don't follow the Java plugin's defaults. Instead, they are derived from the Kotlin source sets. For example, if the JVM target has the default name &lt;code&gt;jvm&lt;/code&gt;, the paths are &lt;code&gt;src/jvmMain/java&lt;/code&gt; (for production Java sources) and &lt;code&gt;src/jvmTest/java&lt;/code&gt; for test Java sources. Learn how to &lt;a href=&quot;mpp-configure-compilations#include-java-sources-in-jvm-compilations&quot;&gt;include Java sources in JVM compilations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e03be997274e2b63af86d76fc7bf98a2088dbc4" translate="yes" xml:space="preserve">
          <source>Use ts2kt to interact with libraries</source>
          <target state="translated">Usar ts2kt para interactuar con las bibliotecas</target>
        </trans-unit>
        <trans-unit id="106c8f3de5148d18865fbc697fa5d5cdeecc28c4" translate="yes" xml:space="preserve">
          <source>Use-site variance: Type projections</source>
          <target state="translated">Variaci√≥n del lugar de uso:Proyecciones de tipo</target>
        </trans-unit>
        <trans-unit id="e2476b5675d923b0014d65b682cc8d7c7848dd3a" translate="yes" xml:space="preserve">
          <source>UseExperimental</source>
          <target state="translated">UseExperimental</target>
        </trans-unit>
        <trans-unit id="5948d8b97ec29bff3672a84e9d432b919624dc55" translate="yes" xml:space="preserve">
          <source>Used both during compilation and at runtime and is exported to library consumers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac3c810c772a41c5e178656755fecd6523a14fa" translate="yes" xml:space="preserve">
          <source>Used during compilation and at runtime for the current module, but is not exposed for compilation of other modules depending on the one with the `implementation` dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73310b7839f171659371cc3680a3ce118bf8dc6d" translate="yes" xml:space="preserve">
          <source>Used for compilation of the current module and is not available at runtime nor during compilation of other modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c609f5a60b09cc00048be8eb23732ff873a513" translate="yes" xml:space="preserve">
          <source>Used only with &lt;code&gt;-Xjvm-default=compatibility|all-compatibility&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27716b3301b8979f846685e09578fc4d968ef31" translate="yes" xml:space="preserve">
          <source>User-defined contracts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2546ff21c7035e67f381dd0185abecc195a459e2" translate="yes" xml:space="preserve">
          <source>Users of Kotlin on the Server Side</source>
          <target state="translated">Los usuarios de Kotlin en el lado del servidor</target>
        </trans-unit>
        <trans-unit id="47181373df2bd78be6294c0add1dbe6339b4681b" translate="yes" xml:space="preserve">
          <source>Uses the provided &lt;a href=&quot;../../kotlin.text/format#kotlin.text%24format%28kotlin.String.Companion%2C+java.util.Locale%2C+kotlin.String%2C+kotlin.Array%28%28kotlin.Any%29%29%29%2Fformat&quot;&gt;format&lt;/a&gt; as a format string and returns a string obtained by substituting the specified arguments, using the specified locale.</source>
          <target state="translated">Utiliza el &lt;a href=&quot;../../kotlin.text/format#kotlin.text%24format%28kotlin.String.Companion%2C+java.util.Locale%2C+kotlin.String%2C+kotlin.Array%28%28kotlin.Any%29%29%29%2Fformat&quot;&gt;formato&lt;/a&gt; proporcionado como una cadena de formato y devuelve una cadena obtenida sustituyendo los argumentos especificados, utilizando la configuraci&amp;oacute;n regional especificada.</target>
        </trans-unit>
        <trans-unit id="3391e8d9489d92fff425335dfe200993b486d0ea" translate="yes" xml:space="preserve">
          <source>Uses the provided &lt;a href=&quot;../../kotlin.text/format#kotlin.text%24format%28kotlin.String.Companion%2C+kotlin.String%2C+kotlin.Array%28%28kotlin.Any%29%29%29%2Fformat&quot;&gt;format&lt;/a&gt; as a format string and returns a string obtained by substituting the specified arguments, using the default locale.</source>
          <target state="translated">Utiliza el &lt;a href=&quot;../../kotlin.text/format#kotlin.text%24format%28kotlin.String.Companion%2C+kotlin.String%2C+kotlin.Array%28%28kotlin.Any%29%29%29%2Fformat&quot;&gt;formato&lt;/a&gt; proporcionado como una cadena de formato y devuelve una cadena obtenida sustituyendo los argumentos especificados, utilizando la configuraci&amp;oacute;n regional predeterminada.</target>
        </trans-unit>
        <trans-unit id="704ebbde6e2b32eeb1c2f67d4e693a35f67af0fd" translate="yes" xml:space="preserve">
          <source>Uses the provided &lt;a href=&quot;../../kotlin.text/format#kotlin.text%24format(kotlin.String.Companion,%20java.util.Locale,%20kotlin.String,%20kotlin.Array((kotlin.Any?)))/format&quot;&gt;format&lt;/a&gt; as a format string and returns a string obtained by substituting the specified arguments, using the specified locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac052dc5a6c0e7fbd28f5bc3a043e4ecb32e5f5" translate="yes" xml:space="preserve">
          <source>Uses the provided &lt;a href=&quot;../../kotlin.text/format#kotlin.text%24format(kotlin.String.Companion,%20java.util.Locale?,%20kotlin.String,%20kotlin.Array((kotlin.Any?)))/format&quot;&gt;format&lt;/a&gt; as a format string and returns a string obtained by substituting the specified arguments, using the specified locale. If &lt;a href=&quot;../../kotlin.text/format#kotlin.text%24format(kotlin.String.Companion,%20java.util.Locale?,%20kotlin.String,%20kotlin.Array((kotlin.Any?)))/locale&quot;&gt;locale&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt; then no localization is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd3b1deb8f1d7bfb8c12c5a14f2ab32a21d65af" translate="yes" xml:space="preserve">
          <source>Uses the provided &lt;a href=&quot;../../kotlin.text/format#kotlin.text%24format(kotlin.String.Companion,%20kotlin.String,%20kotlin.Array((kotlin.Any?)))/format&quot;&gt;format&lt;/a&gt; as a format string and returns a string obtained by substituting the specified arguments, using the default locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a75a8ac839c741b8d08dc9c1deee0d88e4f979c" translate="yes" xml:space="preserve">
          <source>Uses the provided &lt;a href=&quot;format#kotlin.text%24format%28kotlin.String.Companion%2C+java.util.Locale%2C+kotlin.String%2C+kotlin.Array%28%28kotlin.Any%29%29%29%2Fformat&quot;&gt;format&lt;/a&gt; as a format string and returns a string obtained by substituting the specified arguments, using the specified locale.</source>
          <target state="translated">Utiliza el &lt;a href=&quot;format#kotlin.text%24format%28kotlin.String.Companion%2C+java.util.Locale%2C+kotlin.String%2C+kotlin.Array%28%28kotlin.Any%29%29%29%2Fformat&quot;&gt;formato&lt;/a&gt; proporcionado como una cadena de formato y devuelve una cadena obtenida sustituyendo los argumentos especificados, utilizando la configuraci&amp;oacute;n regional especificada.</target>
        </trans-unit>
        <trans-unit id="9d3ac3ea11a7f22b1d758a682e71f98cc029fa36" translate="yes" xml:space="preserve">
          <source>Uses the provided &lt;a href=&quot;format#kotlin.text%24format%28kotlin.String.Companion%2C+kotlin.String%2C+kotlin.Array%28%28kotlin.Any%29%29%29%2Fformat&quot;&gt;format&lt;/a&gt; as a format string and returns a string obtained by substituting the specified arguments, using the default locale.</source>
          <target state="translated">Utiliza el &lt;a href=&quot;format#kotlin.text%24format%28kotlin.String.Companion%2C+kotlin.String%2C+kotlin.Array%28%28kotlin.Any%29%29%29%2Fformat&quot;&gt;formato&lt;/a&gt; proporcionado como una cadena de formato y devuelve una cadena obtenida sustituyendo los argumentos especificados, utilizando la configuraci&amp;oacute;n regional predeterminada.</target>
        </trans-unit>
        <trans-unit id="10dc34a2059cb8159f0a883b5dd86e0bc6137e07" translate="yes" xml:space="preserve">
          <source>Uses the provided &lt;a href=&quot;format#kotlin.text%24format(kotlin.String.Companion,%20java.util.Locale,%20kotlin.String,%20kotlin.Array((kotlin.Any?)))/format&quot;&gt;format&lt;/a&gt; as a format string and returns a string obtained by substituting the specified arguments, using the specified locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82d324c322c9f91adb6f0983572279a3329ac89" translate="yes" xml:space="preserve">
          <source>Uses the provided &lt;a href=&quot;format#kotlin.text%24format(kotlin.String.Companion,%20java.util.Locale?,%20kotlin.String,%20kotlin.Array((kotlin.Any?)))/format&quot;&gt;format&lt;/a&gt; as a format string and returns a string obtained by substituting the specified arguments, using the specified locale. If &lt;a href=&quot;format#kotlin.text%24format(kotlin.String.Companion,%20java.util.Locale?,%20kotlin.String,%20kotlin.Array((kotlin.Any?)))/locale&quot;&gt;locale&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt; then no localization is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65bfa57761f82862cfd81ebd5b8013f5e01aaad7" translate="yes" xml:space="preserve">
          <source>Uses the provided &lt;a href=&quot;format#kotlin.text%24format(kotlin.String.Companion,%20kotlin.String,%20kotlin.Array((kotlin.Any?)))/format&quot;&gt;format&lt;/a&gt; as a format string and returns a string obtained by substituting the specified arguments, using the default locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42fcdb82df9fab88befa785457e65d1af96aa239" translate="yes" xml:space="preserve">
          <source>Uses this string as a format string and returns a string obtained by substituting the specified arguments, using the default locale.</source>
          <target state="translated">Utiliza esta cadena como cadena de formato y devuelve una cadena obtenida mediante la sustituci√≥n de los argumentos especificados,utilizando la localizaci√≥n por defecto.</target>
        </trans-unit>
        <trans-unit id="3f6866db3da817af6ed67e3dae70c3ec02de81e2" translate="yes" xml:space="preserve">
          <source>Uses this string as a format string and returns a string obtained by substituting the specified arguments, using the specified locale.</source>
          <target state="translated">Utiliza esta cadena como cadena de formato y devuelve una cadena obtenida mediante la sustituci√≥n de los argumentos especificados,utilizando la localizaci√≥n especificada.</target>
        </trans-unit>
        <trans-unit id="6484cdf608c52e6f223f86ea931137798547136f" translate="yes" xml:space="preserve">
          <source>Uses this string as a format string and returns a string obtained by substituting the specified arguments, using the specified locale. If &lt;a href=&quot;../../kotlin.text/format#kotlin.text%24format(kotlin.String,%20java.util.Locale?,%20kotlin.Array((kotlin.Any?)))/locale&quot;&gt;locale&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt; then no localization is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a6e896b98588b46d5642885789c195ba9adc2a" translate="yes" xml:space="preserve">
          <source>Uses this string as a format string and returns a string obtained by substituting the specified arguments, using the specified locale. If &lt;a href=&quot;format#kotlin.text%24format(kotlin.String,%20java.util.Locale?,%20kotlin.Array((kotlin.Any?)))/locale&quot;&gt;locale&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt; then no localization is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e62e86755452347944ce24bc99c8763bab8c2b5" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-receive-channel/receive.html&quot;&gt;receive&lt;/a&gt; suspending function we can receive &lt;em&gt;either&lt;/em&gt; from one channel or the other. But &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.selects/select.html&quot;&gt;select&lt;/a&gt; expression allows us to receive from &lt;em&gt;both&lt;/em&gt; simultaneously using its &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-receive-channel/on-receive.html&quot;&gt;onReceive&lt;/a&gt; clauses:</source>
          <target state="translated">Uso de &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-receive-channel/receive.html&quot;&gt;recibir&lt;/a&gt; la funci&amp;oacute;n de suspensi&amp;oacute;n podemos recibir &lt;em&gt;ya sea&lt;/em&gt; de un canal o el otro. Pero la expresi&amp;oacute;n &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.selects/select.html&quot;&gt;select&lt;/a&gt; nos permite recibir de &lt;em&gt;ambos&lt;/em&gt; simult&amp;aacute;neamente usando sus cl&amp;aacute;usulas &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-receive-channel/on-receive.html&quot;&gt;onReceive&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="08f3f41e2b1efe6c5dce0e5fec64099ed03bdf2b" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;lambdas&quot;&gt;higher-order functions&lt;/a&gt; imposes certain runtime penalties: each function is an object, and it captures a closure, i.e. those variables that are accessed in the body of the function. Memory allocations (both for function objects and classes) and virtual calls introduce runtime overhead.</source>
          <target state="translated">El uso &lt;a href=&quot;lambdas&quot;&gt;de funciones de orden superior&lt;/a&gt; impone ciertas penalizaciones en tiempo de ejecuci&amp;oacute;n: cada funci&amp;oacute;n es un objeto y captura un cierre, es decir, aquellas variables a las que se accede en el cuerpo de la funci&amp;oacute;n. Las asignaciones de memoria (tanto para objetos de funci&amp;oacute;n como para clases) y las llamadas virtuales introducen una sobrecarga en el tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="491e6c994c3baf4cc8af39219068162e74e38931" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;::Foo&lt;/code&gt;, the zero-argument constructor of the class Foo, we can simply call it like this:</source>
          <target state="translated">Usando &lt;code&gt;::Foo&lt;/code&gt; , el constructor de argumento cero de la clase Foo, podemos simplemente llamarlo as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="df28902f080c8e95c2e047504754d8fc98471dfb" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; inside &lt;code&gt;when&lt;/code&gt; expressions included in loops</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1288042cdb0bedb4cedef04fffbbc6421151560c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;when&lt;/code&gt; expression</source>
          <target state="translated">Usando &lt;code&gt;when&lt;/code&gt; expresi&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="b4d45feb4cce668fd7098830e83bf2557a415c16" translate="yes" xml:space="preserve">
          <source>Using &lt;em&gt;if&lt;/em&gt; as an expression:</source>
          <target state="translated">Usando &lt;em&gt;if&lt;/em&gt; como expresi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="7956ce97b97e87d0f55a6ea0cc6e4e05373fcf15" translate="yes" xml:space="preserve">
          <source>Using AMD</source>
          <target state="translated">Usando AMD</target>
        </trans-unit>
        <trans-unit id="aae897c446cafc25370dcce91792d5e6dfa9a087" translate="yes" xml:space="preserve">
          <source>Using Ant</source>
          <target state="translated">Usando la hormiga</target>
        </trans-unit>
        <trans-unit id="44ab2ab05f55d2266ffc569dcf7fc124a65679b4" translate="yes" xml:space="preserve">
          <source>Using C Interop and libcurl for an App</source>
          <target state="translated">Usando C Interop y libcurl para una aplicaci√≥n</target>
        </trans-unit>
        <trans-unit id="a59cc5aadf82954e8f0283bd3dfcaae639efbadd" translate="yes" xml:space="preserve">
          <source>Using C library from Kotlin/Native</source>
          <target state="translated">Usando la biblioteca C de Kotlin/Native</target>
        </trans-unit>
        <trans-unit id="d678710e9135632a43d33f3d5da6bf72dddacbe5" translate="yes" xml:space="preserve">
          <source>Using CommonJS</source>
          <target state="translated">Usando CommonJS</target>
        </trans-unit>
        <trans-unit id="e42f7c8cd0e8730768cbb184338fabc772fadfd5" translate="yes" xml:space="preserve">
          <source>Using Dynamic</source>
          <target state="translated">Usando Dynamic</target>
        </trans-unit>
        <trans-unit id="cbe69bb9e7692bc07945db15e10c51c3ee312db2" translate="yes" xml:space="preserve">
          <source>Using Generated Headers from C</source>
          <target state="translated">Usando las cabeceras generadas a partir de C</target>
        </trans-unit>
        <trans-unit id="27c679a18ee1d9ed93d7a66b728665e446e0b013" translate="yes" xml:space="preserve">
          <source>Using Gradle</source>
          <target state="translated">Usando Gradle</target>
        </trans-unit>
        <trans-unit id="17fbd0b7659b724c4b82377e5e5b6176a4a4d7c0" translate="yes" xml:space="preserve">
          <source>Using Gradle Kotlin DSL</source>
          <target state="translated">Usando el DSL de Gradle Kotlin</target>
        </trans-unit>
        <trans-unit id="71d5b086b763a415271837d49bf05b383ed34176" translate="yes" xml:space="preserve">
          <source>Using IntelliJ IDEA Build System</source>
          <target state="translated">Usando el sistema de construcci√≥n IntelliJ IDEA</target>
        </trans-unit>
        <trans-unit id="be4003165448a14831defb73021c979f0b4b46d4" translate="yes" xml:space="preserve">
          <source>Using IntelliJ IDEA debugger, you can dig deeper into each coroutine to debug your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81cb9f3916c8314e916dfe4f86e42b9f41066648" translate="yes" xml:space="preserve">
          <source>Using IntelliJ IDEA we can easily run and debug the application in any of the possible application servers defined such as Tomcat, Glassfish or WildFly. In this case we're going to use Tomcat which has previously &lt;a href=&quot;http://www.jetbrains.com/idea/webhelp/defining-application-servers-in-intellij-idea.html&quot;&gt;been defined as an application server in IntelliJ IDEA&lt;/a&gt;. Note that application server support is only available in IntelliJ IDEA Ultimate.</source>
          <target state="translated">Con IntelliJ IDEA podemos ejecutar y depurar f&amp;aacute;cilmente la aplicaci&amp;oacute;n en cualquiera de los posibles servidores de aplicaciones definidos como Tomcat, Glassfish o WildFly. En este caso, usaremos Tomcat, que se &lt;a href=&quot;http://www.jetbrains.com/idea/webhelp/defining-application-servers-in-intellij-idea.html&quot;&gt;defini&amp;oacute;&lt;/a&gt; previamente como un servidor de aplicaciones en IntelliJ IDEA . Tenga en cuenta que la compatibilidad con el servidor de aplicaciones solo est&amp;aacute; disponible en IntelliJ IDEA Ultimate.</target>
        </trans-unit>
        <trans-unit id="4709ae28ff320dfabd65f0869103704aedfcf674" translate="yes" xml:space="preserve">
          <source>Using JNI with Kotlin</source>
          <target state="translated">Usando JNI con Kotlin</target>
        </trans-unit>
        <trans-unit id="2bbc39d0664d569562a91137d4d90178cf23c617" translate="yes" xml:space="preserve">
          <source>Using Kotlin Android Extensions</source>
          <target state="translated">Usando las extensiones para Androides de Kotlin</target>
        </trans-unit>
        <trans-unit id="b022874247f51c944909afa759f623b6478ca32e" translate="yes" xml:space="preserve">
          <source>Using Kotlin for Android Development</source>
          <target state="translated">Usando Kotlin para el desarrollo de Android</target>
        </trans-unit>
        <trans-unit id="60a1392d0c8d40966f3ba2738ae5f701e549f245" translate="yes" xml:space="preserve">
          <source>Using Kotlin for Android development, you can benefit from:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf246aafd7124667a554d398075e5452aa83ed4" translate="yes" xml:space="preserve">
          <source>Using Kotlin for Server-side Development</source>
          <target state="translated">Usando Kotlin para el desarrollo del lado del servidor</target>
        </trans-unit>
        <trans-unit id="2b0fb5591f02bcbebcc2bd375ac8a71d601338b0" translate="yes" xml:space="preserve">
          <source>Using Kotlin/Native Targets</source>
          <target state="translated">Usando Kotlin/Objetivos Negativos</target>
        </trans-unit>
        <trans-unit id="936b968752b32f197dc84832341b3f607b83a027" translate="yes" xml:space="preserve">
          <source>Using Maven</source>
          <target state="translated">Usando Maven</target>
        </trans-unit>
        <trans-unit id="ef7af2346af2c37f7e6ee428aab1c98075a789a9" translate="yes" xml:space="preserve">
          <source>Using SharedCode from Android</source>
          <target state="translated">Usando el C√≥digo Compartido de Android</target>
        </trans-unit>
        <trans-unit id="603ab8042b5d1c17d5b50d529fa9db7d658d860a" translate="yes" xml:space="preserve">
          <source>Using Struct and Union Types from Kotlin</source>
          <target state="translated">Usando los tipos de estructura y uni√≥n de Kotlin</target>
        </trans-unit>
        <trans-unit id="6e4c13998b5f91e0846d37840959ab407900c453" translate="yes" xml:space="preserve">
          <source>Using a &lt;code&gt;for&lt;/code&gt; loop</source>
          <target state="translated">Usando un bucle &lt;code&gt;for&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fe7e2f58454fbb71457b9ce1e7ce104ef338243" translate="yes" xml:space="preserve">
          <source>Using a &lt;code&gt;while&lt;/code&gt; loop</source>
          <target state="translated">El uso de un &lt;code&gt;while&lt;/code&gt; de bucle</target>
        </trans-unit>
        <trans-unit id="29dae43467cc406389583f725ed8cb7bcc1c247d" translate="yes" xml:space="preserve">
          <source>Using a Kotlin/JavaScript library.</source>
          <target state="translated">Usando una biblioteca de Kotlin/JavaScript.</target>
        </trans-unit>
        <trans-unit id="d3383ee07c516c1fa1802c63fcedaaefadd8e48c" translate="yes" xml:space="preserve">
          <source>Using a callable reference to an existing declaration:</source>
          <target state="translated">Usando una referencia llamable a una declaraci√≥n existente:</target>
        </trans-unit>
        <trans-unit id="197fb49229d662d3379f8cffecb5a8e470235340" translate="yes" xml:space="preserve">
          <source>Using a code block within a function literal, in one of the forms:</source>
          <target state="translated">Usando un bloque de c√≥digo dentro de una funci√≥n literal,en una de las formas:</target>
        </trans-unit>
        <trans-unit id="a7c34a78b0f5530284b929714a111e0120a19cb8" translate="yes" xml:space="preserve">
          <source>Using a standard build tool</source>
          <target state="translated">Usando una herramienta de construcci√≥n est√°ndar</target>
        </trans-unit>
        <trans-unit id="6825ce8ddbdb846319b075044bc1aefd9c058144" translate="yes" xml:space="preserve">
          <source>Using artifacts built with Kotlin 1.4.x in a Kotlin 1.3.x project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3edbb4ebc2b355b2a8f195be33f5a03ead3d30" translate="yes" xml:space="preserve">
          <source>Using bindings</source>
          <target state="translated">Usando las fijaciones</target>
        </trans-unit>
        <trans-unit id="92c77c8ea60a2ffe09d3b8484f979577fe3fe402" translate="yes" xml:space="preserve">
          <source>Using cinterop</source>
          <target state="translated">Usando cinterop</target>
        </trans-unit>
        <trans-unit id="6f335b7fd336f32636cf82fea33e6e5a118b4de7" translate="yes" xml:space="preserve">
          <source>Using collections</source>
          <target state="translated">Usando las colecciones</target>
        </trans-unit>
        <trans-unit id="ce4da38f792e511ab4d77c2e6a228d9a0f717f17" translate="yes" xml:space="preserve">
          <source>Using conditional expressions</source>
          <target state="translated">Usando expresiones condicionales</target>
        </trans-unit>
        <trans-unit id="918641690842037efdc3f921e9d2a03a1b94d884" translate="yes" xml:space="preserve">
          <source>Using conditional statements</source>
          <target state="translated">Usando declaraciones condicionales</target>
        </trans-unit>
        <trans-unit id="3fc2b300fe4dab146a33f883986c605263212bcf" translate="yes" xml:space="preserve">
          <source>Using experimental APIs</source>
          <target state="translated">Usando APIs experimentales</target>
        </trans-unit>
        <trans-unit id="ebd9b5845829e10c5bf4bfdb285f0143f1b0cc17" translate="yes" xml:space="preserve">
          <source>Using extension functions</source>
          <target state="translated">Usando las funciones de extensi√≥n</target>
        </trans-unit>
        <trans-unit id="b252910d4e8badbe4bca9df0c30fd5478c5c630b" translate="yes" xml:space="preserve">
          <source>Using in CLI</source>
          <target state="translated">Usando en CLI</target>
        </trans-unit>
        <trans-unit id="30f417bc0504e6fe1552d975f144e48529a622bd" translate="yes" xml:space="preserve">
          <source>Using in Gradle</source>
          <target state="translated">Usando en Gradle</target>
        </trans-unit>
        <trans-unit id="987fbf118a45b1d5fc70735f1b4a9cb07d729a9e" translate="yes" xml:space="preserve">
          <source>Using in Maven</source>
          <target state="translated">Usando en Maven</target>
        </trans-unit>
        <trans-unit id="b58b6328c1df079d0d8cccee5234ec40deb70287" translate="yes" xml:space="preserve">
          <source>Using infix functions</source>
          <target state="translated">Usando las funciones de infijo</target>
        </trans-unit>
        <trans-unit id="a915c033f5e92eb86f6eb764c7d3fbfec97399c7" translate="yes" xml:space="preserve">
          <source>Using instances of a custom class that implements a function type as an interface:</source>
          <target state="translated">Usando instancias de una clase personalizada que implementa un tipo de funci√≥n como interfaz:</target>
        </trans-unit>
        <trans-unit id="b7d1f08b0755e4efecc6155b06410d6d8f47dd0c" translate="yes" xml:space="preserve">
          <source>Using kotlinx.html</source>
          <target state="translated">Usando kotlinx.html</target>
        </trans-unit>
        <trans-unit id="e33a647f9d820f02525a9e589cf38c7cb15aa9e1" translate="yes" xml:space="preserve">
          <source>Using lambda expressions to filter and map collections:</source>
          <target state="translated">Usando expresiones lambda para filtrar y mapear colecciones:</target>
        </trans-unit>
        <trans-unit id="85b9a9b134d068b76d1d9da5eba9082360a75376" translate="yes" xml:space="preserve">
          <source>Using loops</source>
          <target state="translated">Usando bucles</target>
        </trans-unit>
        <trans-unit id="e702f70d153e5bb48504257ee3c4806c305f3fd0" translate="yes" xml:space="preserve">
          <source>Using modules</source>
          <target state="translated">Usando m√≥dulos</target>
        </trans-unit>
        <trans-unit id="9af9fabd79c052500b25a5c07039f994d4da9bd7" translate="yes" xml:space="preserve">
          <source>Using nullable &lt;code&gt;Boolean&lt;/code&gt; values in conditions</source>
          <target state="translated">Usar valores &lt;code&gt;Boolean&lt;/code&gt; aceptan valores NULL en condiciones</target>
        </trans-unit>
        <trans-unit id="d6a1a404256e60f476abcfdb633a3c534e236959" translate="yes" xml:space="preserve">
          <source>Using nullable values and checking for &lt;em&gt;null&lt;/em&gt;</source>
          <target state="translated">Usar valores que aceptan valores NULL y verificar si hay &lt;em&gt;nulos&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="872ffc0740cd8cd114c0bd134533ae0bef8b975c" translate="yes" xml:space="preserve">
          <source>Using our favorite editor, we create a new file called &lt;em&gt;library.kt&lt;/em&gt;:</source>
          <target state="translated">Usando nuestro editor favorito, creamos un nuevo archivo llamado &lt;em&gt;library.kt&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="4b0f18fbc913dc4d928de83407023cd4eadce18c" translate="yes" xml:space="preserve">
          <source>Using packages from npm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550a8f8d20b2e8584106d065339f4d4da1689dfc" translate="yes" xml:space="preserve">
          <source>Using ranges</source>
          <target state="translated">Usando rangos</target>
        </trans-unit>
        <trans-unit id="51f179a48f07181aae2f460999afe3b38f8238e7" translate="yes" xml:space="preserve">
          <source>Using scope functions apply/with/run/also/let</source>
          <target state="translated">Usar las funciones de alcance aplicar/con/correr/tambi√©n/dejar</target>
        </trans-unit>
        <trans-unit id="3ec4dda09fda63d9abb963027b78f1d3b6ffe21e" translate="yes" xml:space="preserve">
          <source>Using string templates</source>
          <target state="translated">Usando plantillas de cadenas</target>
        </trans-unit>
        <trans-unit id="4e76a46a35a0080ea05cb7befbedfc77e476e034" translate="yes" xml:space="preserve">
          <source>Using strings</source>
          <target state="translated">Usando cuerdas</target>
        </trans-unit>
        <trans-unit id="e23bbbb1e9be4eb1c796c8553364504fb8af04eb" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;List&amp;lt;Int&amp;gt;&lt;/code&gt; result type, means we can only return all the values at once. To represent the stream of values that are being asynchronously computed, we can use a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow/index.html&quot;&gt;&lt;code&gt;Flow&amp;lt;Int&amp;gt;&lt;/code&gt;&lt;/a&gt; type just like we would use the &lt;code&gt;Sequence&amp;lt;Int&amp;gt;&lt;/code&gt; type for synchronously computed values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18148327a2ccfbb8e71316dac9304b16aaccd2b3" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;kotlin-multiplatform&lt;/code&gt; plugin for building &lt;a href=&quot;multiplatform&quot;&gt;multiplatform projects&lt;/a&gt; is described in &lt;a href=&quot;building-mpp-with-gradle&quot;&gt;Building Multiplatform Projects with Gradle&lt;/a&gt;.</source>
          <target state="translated">El uso del &lt;code&gt;kotlin-multiplatform&lt;/code&gt; para crear &lt;a href=&quot;multiplatform&quot;&gt;proyectos multiplataforma&lt;/a&gt; se describe en &lt;a href=&quot;building-mpp-with-gradle&quot;&gt;Creaci&amp;oacute;n de proyectos multiplataforma con Gradle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="662526f9ec265672a8f5eadc1e458fce90d93089" translate="yes" xml:space="preserve">
          <source>Using the C Function Pointer from Kotlin</source>
          <target state="translated">Usando el puntero de la funci√≥n C de Kotlin</target>
        </trans-unit>
        <trans-unit id="3b3c88f2622b6c11af48eeafb534d5bf373c1268" translate="yes" xml:space="preserve">
          <source>Using the Code from Objective-C</source>
          <target state="translated">Usando el c√≥digo del Objetivo-C</target>
        </trans-unit>
        <trans-unit id="2751cf504326591f0615360e90b35bf6098ad931" translate="yes" xml:space="preserve">
          <source>Using the Code from Swift</source>
          <target state="translated">Usando el c√≥digo de Swift</target>
        </trans-unit>
        <trans-unit id="d94748ae1985e15517523c51bbe68be1dc451c79" translate="yes" xml:space="preserve">
          <source>Using the Kotlin/JS IR compiler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e131a08f907def09c45df11a971dfb390d42ac" translate="yes" xml:space="preserve">
          <source>Using the command line to run scripts</source>
          <target state="translated">Usar la l√≠nea de comandos para ejecutar scripts</target>
        </trans-unit>
        <trans-unit id="0dde1829bc0d42dfa9d3d99dc69c6583462ddf28" translate="yes" xml:space="preserve">
          <source>Using the tool &lt;code&gt;ts2kt&lt;/code&gt; (TypeScript to Kotlin) we can convert any &lt;code&gt;d.ts&lt;/code&gt; files to Kotlin. To install the tool we can use &lt;code&gt;npm&lt;/code&gt;</source>
          <target state="translated">Usando la herramienta &lt;code&gt;ts2kt&lt;/code&gt; (TypeScript a Kotlin) podemos convertir cualquier archivo &lt;code&gt;d.ts&lt;/code&gt; a Kotlin. Para instalar la herramienta podemos usar &lt;code&gt;npm&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a89a0f28e4e5bf44543e1c9581c55c0e6aecc40d" translate="yes" xml:space="preserve">
          <source>Using trailing commas has several benefits:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebccac5de220cac33103fa30ac3780779ac2fcd" translate="yes" xml:space="preserve">
          <source>Using ts2kt to generate header files for Kotlin</source>
          <target state="translated">Usando ts2kt para generar archivos de cabecera para Kotlin</target>
        </trans-unit>
        <trans-unit id="e0fbba9738442b4c0647e5831e5969871c4f6a2a" translate="yes" xml:space="preserve">
          <source>Using type checks and automatic casts</source>
          <target state="translated">Usando controles de tipo y moldes autom√°ticos</target>
        </trans-unit>
        <trans-unit id="d8d81e999a726d52e9414f74a35f368a368d19de" translate="yes" xml:space="preserve">
          <source>Usually these fields are private but they can be exposed in one of the following ways:</source>
          <target state="translated">Normalmente estos campos son privados pero pueden ser expuestos de una de las siguientes maneras:</target>
        </trans-unit>
        <trans-unit id="c1278d398657af96687576590c71d68b9a3f58aa" translate="yes" xml:space="preserve">
          <source>Usually, a native binary can be compiled as &lt;em&gt;debug&lt;/em&gt; with more debug information and fewer optimizations, and &lt;em&gt;release&lt;/em&gt; where optimizations are enabled and there is no (or at least less) debug information available.</source>
          <target state="translated">Por lo general, un binario nativo puede compilarse como &lt;em&gt;depuraci&amp;oacute;n&lt;/em&gt; con m&amp;aacute;s informaci&amp;oacute;n de depuraci&amp;oacute;n y menos optimizaciones, y &lt;em&gt;publicarse&lt;/em&gt; donde las optimizaciones est&amp;aacute;n habilitadas y no hay (o al menos menos) informaci&amp;oacute;n de depuraci&amp;oacute;n disponible.</target>
        </trans-unit>
        <trans-unit id="12caefb8a5010ce40aa23c1ea29352f8837f75ed" translate="yes" xml:space="preserve">
          <source>Usually, the cast operator throws an exception if the cast is not possible. Thus, we call it &lt;em&gt;unsafe&lt;/em&gt;. The unsafe cast in Kotlin is done by the infix operator &lt;em&gt;as&lt;/em&gt; (see &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#expressions&quot;&gt;operator precedence&lt;/a&gt;):</source>
          <target state="translated">Normalmente, el operador de conversi&amp;oacute;n lanza una excepci&amp;oacute;n si la conversi&amp;oacute;n no es posible. Por lo tanto, lo llamamos &lt;em&gt;inseguro&lt;/em&gt; . La conversi&amp;oacute;n insegura en Kotlin la realiza el operador infijo &lt;em&gt;como&lt;/em&gt; (ver &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#expressions&quot;&gt;precedencia del operador&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="078efedb0f7a9297e4a66c7bf48c73578606e64d" translate="yes" xml:space="preserve">
          <source>Utility functions for concurrent programming.</source>
          <target state="translated">Funciones de utilidad para la programaci√≥n simult√°nea.</target>
        </trans-unit>
        <trans-unit id="54a27f71a3926c933fffb4cc8fcd736d36aae00b" translate="yes" xml:space="preserve">
          <source>Utility functions for working with Java 8 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html&quot;&gt;streams&lt;/a&gt;.</source>
          <target state="translated">Funciones de utilidad para trabajar con &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html&quot;&gt;flujos&lt;/a&gt; de Java 8 .</target>
        </trans-unit>
        <trans-unit id="70a0023fe530c9e1dc6b5efd1156df2342cee154" translate="yes" xml:space="preserve">
          <source>Utility functions for working with the browser DOM.</source>
          <target state="translated">Funciones de utilidad para trabajar con el navegador DOM.</target>
        </trans-unit>
        <trans-unit id="7dc10180b878fd7bd185c2d6a23c0519a292a3a0" translate="yes" xml:space="preserve">
          <source>VALUE</source>
          <target state="translated">VALUE</target>
        </trans-unit>
        <trans-unit id="b48498a5cff3c4e7ce37b18fdd81413319dd4656" translate="yes" xml:space="preserve">
          <source>VALUE_PARAMETER</source>
          <target state="translated">VALUE_PARAMETER</target>
        </trans-unit>
        <trans-unit id="242cc9162b91c0b54499ac05fdd663dcea97e3ff" translate="yes" xml:space="preserve">
          <source>ValidityState</source>
          <target state="translated">ValidityState</target>
        </trans-unit>
        <trans-unit id="4ca51107e6a14998cd7631ba2234ead0b2f51037" translate="yes" xml:space="preserve">
          <source>Value arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc813f9a338f88bada03e57203025b97e72de98e" translate="yes" xml:space="preserve">
          <source>Value parameter of a function or a constructor</source>
          <target state="translated">Par√°metro de valor de una funci√≥n o un constructor</target>
        </trans-unit>
        <trans-unit id="ae0d9f73010cf89531cbcdadc5148c931b0aba52" translate="yes" xml:space="preserve">
          <source>Values are &lt;em&gt;collected&lt;/em&gt; from the flow using &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/collect.html&quot;&gt;collect&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4b78efaf35ec9ac8ccb78b50e8f937f6c083fa" translate="yes" xml:space="preserve">
          <source>Values are &lt;em&gt;emitted&lt;/em&gt; from the flow using &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow-collector/emit.html&quot;&gt;emit&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7d4e58b65d5a70d4dfae24ee97f38d7c1a9ff0" translate="yes" xml:space="preserve">
          <source>Values can be updated. In turn, keys never change: once you add an entry, its key is constant.</source>
          <target state="translated">Los valores pueden ser actualizados.A su vez,las claves nunca cambian:una vez que a√±ades una entrada,su clave es constante.</target>
        </trans-unit>
        <trans-unit id="83ce8efcd219286f9e80c1c630307f7c0a05ac1f" translate="yes" xml:space="preserve">
          <source>Values of an annotation instance are exposed as properties to Kotlin code:</source>
          <target state="translated">Los valores de una instancia de anotaci√≥n se exponen como propiedades al c√≥digo Kotlin:</target>
        </trans-unit>
        <trans-unit id="e2e1116424b8a24a96cede1b506dcc3d11485f0b" translate="yes" xml:space="preserve">
          <source>VarType</source>
          <target state="translated">VarType</target>
        </trans-unit>
        <trans-unit id="42ec9490f36e6cae9913c4374b09e32237c707ad" translate="yes" xml:space="preserve">
          <source>Varargs and optional/named parameters</source>
          <target state="translated">Varargs y par√°metros opcionales/nombrados</target>
        </trans-unit>
        <trans-unit id="10eea16b487acafb1da690a6fa932f924aadcf7a" translate="yes" xml:space="preserve">
          <source>Variable inspection</source>
          <target state="translated">Inspecci√≥n variable</target>
        </trans-unit>
        <trans-unit id="342ee951b83918c9c708f1243be034edc6ba7220" translate="yes" xml:space="preserve">
          <source>Variable inspections for var variables works out of the box for primitive types. For non-primitive types there are custom pretty printers for lldb in &lt;code&gt;konan_lldb.py&lt;/code&gt;:</source>
          <target state="translated">Las inspecciones de variables para variables var funcionan de manera inmediata para tipos primitivos. Para los tipos no primitivos, hay impresoras bonitas personalizadas para lldb en &lt;code&gt;konan_lldb.py&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a018b33a39aac69fe200a8b99412d4c30ecc8054" translate="yes" xml:space="preserve">
          <source>Variable names should use &lt;code&gt;lowerCamelCase&lt;/code&gt; instead of &lt;code&gt;snake_case&lt;/code&gt;.</source>
          <target state="translated">Los nombres de las variables deben usar &lt;code&gt;lowerCamelCase&lt;/code&gt; en lugar de &lt;code&gt;snake_case&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43edb35cae8befc5879d0b7aa2cd22c92255e5d7" translate="yes" xml:space="preserve">
          <source>Variable number of arguments (Varargs)</source>
          <target state="translated">N√∫mero variable de argumentos (Varargs)</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="eaac90ed072370b9f57426b726154a33050c4fed" translate="yes" xml:space="preserve">
          <source>Variables &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; get the values returned by &lt;code&gt;component1()&lt;/code&gt; and &lt;code&gt;component2()&lt;/code&gt; called on elements of the collection.</source>
          <target state="translated">Variables &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; obtienen los valores devueltos por &lt;code&gt;component1()&lt;/code&gt; y &lt;code&gt;component2()&lt;/code&gt; llamada en los elementos de la colecci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="808412b58bbf8525d5dac7961edbdfc05c3db76a" translate="yes" xml:space="preserve">
          <source>Variables that can be reassigned use the &lt;code&gt;var&lt;/code&gt; keyword:</source>
          <target state="translated">Las variables que se pueden reasignar usan la palabra clave &lt;code&gt;var&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="eb39bbf6ccbbc8fdb77438c3cd6155bb1b7ec6b8" translate="yes" xml:space="preserve">
          <source>Variance</source>
          <target state="translated">Variance</target>
        </trans-unit>
        <trans-unit id="1a91ea423a97d4a87943d588b081e7e38282531c" translate="yes" xml:space="preserve">
          <source>Variance directions</source>
          <target state="translated">Direcciones de variaci√≥n</target>
        </trans-unit>
        <trans-unit id="5c16bf6df0ccb8c8f8d9897278f38f99a8d180ae" translate="yes" xml:space="preserve">
          <source>Variant generics</source>
          <target state="translated">Variantes gen√©ricas</target>
        </trans-unit>
        <trans-unit id="48aeb525f24a17a17a2746ff3465033889ff970a" translate="yes" xml:space="preserve">
          <source>Various collections and sequences can be converted to flows using &lt;code&gt;.asFlow()&lt;/code&gt; extension functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed714f305f37a57ecb8473b7415dfab9db01f6a" translate="yes" xml:space="preserve">
          <source>Various utilities for working with strings and char sequences.</source>
          <target state="translated">Varias utilidades para trabajar con cuerdas y secuencias de caracteres.</target>
        </trans-unit>
        <trans-unit id="280853b24c26b2f29a476f73ab7f87fbd08c6186" translate="yes" xml:space="preserve">
          <source>Vector128</source>
          <target state="translated">Vector128</target>
        </trans-unit>
        <trans-unit id="6c08e229ae1df722641eb28302211d6c86591e45" translate="yes" xml:space="preserve">
          <source>Vector128Var</source>
          <target state="translated">Vector128Var</target>
        </trans-unit>
        <trans-unit id="9ffb8650f3fdd46d87c18838f3017eda5ad872f4" translate="yes" xml:space="preserve">
          <source>Vector128VarOf</source>
          <target state="translated">Vector128VarOf</target>
        </trans-unit>
        <trans-unit id="288ce52d20fd503b110a72d86e9675e1c95e19eb" translate="yes" xml:space="preserve">
          <source>Verify the emulator configuration and click &lt;strong&gt;Finish&lt;/strong&gt;.</source>
          <target state="translated">Verifique la configuraci&amp;oacute;n del emulador y haga clic en &lt;strong&gt;Finalizar&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="de621f8c2654b2397c981cb428da06adf04bb6fe" translate="yes" xml:space="preserve">
          <source>Versioned separately from the language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84bee7b1488f1e88fea6081e11b80da21edf9ec4" translate="yes" xml:space="preserve">
          <source>VideoFacingModeEnum</source>
          <target state="translated">VideoFacingModeEnum</target>
        </trans-unit>
        <trans-unit id="fa871b63d316a5ccaf06d516a54da0961996827d" translate="yes" xml:space="preserve">
          <source>VideoResizeModeEnum</source>
          <target state="translated">VideoResizeModeEnum</target>
        </trans-unit>
        <trans-unit id="64fea40a0473c85795b9336e14b2b716b018b418" translate="yes" xml:space="preserve">
          <source>VideoTrack</source>
          <target state="translated">VideoTrack</target>
        </trans-unit>
        <trans-unit id="c02eab00438fffc417a6ac0aa9bb22fc06605beb" translate="yes" xml:space="preserve">
          <source>View binding</source>
          <target state="translated">Ver encuadernaci√≥n</target>
        </trans-unit>
        <trans-unit id="db9fea7c8a56a15e997acc428b673797be1af865" translate="yes" xml:space="preserve">
          <source>View caching</source>
          <target state="translated">Ver caching</target>
        </trans-unit>
        <trans-unit id="7d9ff4f0de398581c4640bcbb6e536c355a391be" translate="yes" xml:space="preserve">
          <source>Visibility</source>
          <target state="translated">Visibility</target>
        </trans-unit>
        <trans-unit id="0d73e14a3fcddf8956a7da60bbcb1e077c95f7a0" translate="yes" xml:space="preserve">
          <source>Visibility Modifiers</source>
          <target state="translated">Modificadores de visibilidad</target>
        </trans-unit>
        <trans-unit id="28ffb1b2d0c701707ce3c73f2c7cf4a513706777" translate="yes" xml:space="preserve">
          <source>Visibility is an aspect of a Kotlin declaration regulating where that declaration is accessible in the source code. Visibility can be changed with one of the following modifiers: &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, &lt;code&gt;internal&lt;/code&gt;, &lt;code&gt;private&lt;/code&gt;.</source>
          <target state="translated">La visibilidad es un aspecto de una declaraci&amp;oacute;n de Kotlin que regula d&amp;oacute;nde se puede acceder a esa declaraci&amp;oacute;n en el c&amp;oacute;digo fuente. La visibilidad se puede cambiar con uno de los siguientes modificadores: &lt;code&gt;public&lt;/code&gt; , &lt;code&gt;protected&lt;/code&gt; , &lt;code&gt;internal&lt;/code&gt; , &lt;code&gt;private&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="849b37d75d9e78cb34f760a7b86638406d0e4272" translate="yes" xml:space="preserve">
          <source>Visibility modifiers</source>
          <target state="translated">Modificadores de visibilidad</target>
        </trans-unit>
        <trans-unit id="572b59949083550c2f89c909f2a69634e1647c72" translate="yes" xml:space="preserve">
          <source>Visibility modifiers are required for declarations if the default visibility exposes them to the public API. This helps ensure that no declarations are exposed to the public API unintentionally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ccb166e167967c0af7bc8270ccff3bc3f332444" translate="yes" xml:space="preserve">
          <source>Visibility modifiers can't be placed on local variables, since their visibility is always limited to the containing block.</source>
          <target state="translated">Los modificadores de visibilidad no pueden colocarse en las variables locales,ya que su visibilidad siempre se limita al bloque de contenci√≥n.</target>
        </trans-unit>
        <trans-unit id="6cd8f7e2419769693129b0c2082de4e40a0da3a3" translate="yes" xml:space="preserve">
          <source>Visibility of Top-level Declarations</source>
          <target state="translated">Visibilidad de las declaraciones de alto nivel</target>
        </trans-unit>
        <trans-unit id="b794e604145c856d9c96b2bfb79a673421c9cf64" translate="yes" xml:space="preserve">
          <source>Visibility of declarations marked with the &lt;code&gt;internal&lt;/code&gt; modifier.</source>
          <target state="translated">Visibilidad de declaraciones marcadas con el modificador &lt;code&gt;internal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63bf3a48e0f5fd4c5b7c9576056b33b03784b05d" translate="yes" xml:space="preserve">
          <source>Visibility of declarations marked with the &lt;code&gt;private&lt;/code&gt; modifier.</source>
          <target state="translated">Visibilidad de las declaraciones marcadas con el modificador &lt;code&gt;private&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d02ce232d311d05d3099c6a996cbef8c4dd286f9" translate="yes" xml:space="preserve">
          <source>Visibility of declarations marked with the &lt;code&gt;protected&lt;/code&gt; modifier.</source>
          <target state="translated">Visibilidad de declaraciones marcadas con el modificador &lt;code&gt;protected&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd1c739248ca96578cca7f9bfb547899b54a876f" translate="yes" xml:space="preserve">
          <source>Visibility of declarations marked with the &lt;code&gt;public&lt;/code&gt; modifier, or with no modifier at all.</source>
          <target state="translated">Visibilidad de declaraciones marcadas con el modificador &lt;code&gt;public&lt;/code&gt; , o sin ning&amp;uacute;n modificador.</target>
        </trans-unit>
        <trans-unit id="de706486df3bb39a3413cb5cbbb1d996126bda21" translate="yes" xml:space="preserve">
          <source>Visibility of this callable, or &lt;code&gt;null&lt;/code&gt; if its visibility cannot be represented in Kotlin.</source>
          <target state="translated">Visibilidad de este invocable, o &lt;code&gt;null&lt;/code&gt; si su visibilidad no se puede representar en Kotlin.</target>
        </trans-unit>
        <trans-unit id="dac6119f07007062b4875b1638bac8a721585f4a" translate="yes" xml:space="preserve">
          <source>Visibility of this class, or &lt;code&gt;null&lt;/code&gt; if its visibility cannot be represented in Kotlin.</source>
          <target state="translated">Visibilidad de esta clase, o &lt;code&gt;null&lt;/code&gt; si su visibilidad no se puede representar en Kotlin.</target>
        </trans-unit>
        <trans-unit id="aabca03bdef260f1cffd784ffe10c2b762503211" translate="yes" xml:space="preserve">
          <source>Visibility rules regarding complex class hierarchies with companion objects</source>
          <target state="translated">Reglas de visibilidad relativas a las jerarqu√≠as de clase complejas con objetos compa√±eros</target>
        </trans-unit>
        <trans-unit id="ac3022e113442db8619d262ae03fa9c0097a6e0d" translate="yes" xml:space="preserve">
          <source>Volatile</source>
          <target state="translated">Volatile</target>
        </trans-unit>
        <trans-unit id="74365b04f91d0aa9f5cfe78a2b9d8c743270db07" translate="yes" xml:space="preserve">
          <source>Volatiles are of no help</source>
          <target state="translated">Los vol√°tiles no ayudan</target>
        </trans-unit>
        <trans-unit id="fd3edc641024a335a508fdacefb5f51ded5905cc" translate="yes" xml:space="preserve">
          <source>WARNING</source>
          <target state="translated">WARNING</target>
        </trans-unit>
        <trans-unit id="4e946026a7ff331eb2b9dc124f891817863bd199" translate="yes" xml:space="preserve">
          <source>WASM</source>
          <target state="translated">WASM</target>
        </trans-unit>
        <trans-unit id="25ca2ee13f635d58b0c2cff69efbc6a4f1b88f58" translate="yes" xml:space="preserve">
          <source>WASM32</source>
          <target state="translated">WASM32</target>
        </trans-unit>
        <trans-unit id="406538ae6cd24bca924c59857d3c75a306aa56eb" translate="yes" xml:space="preserve">
          <source>WATCHOS</source>
          <target state="translated">WATCHOS</target>
        </trans-unit>
        <trans-unit id="b9fac4aec6291b1c5ab0f9569e59e39d2636356c" translate="yes" xml:space="preserve">
          <source>WCString</source>
          <target state="translated">WCString</target>
        </trans-unit>
        <trans-unit id="c1cd547450ddf19820dbba6198904ce66087e598" translate="yes" xml:space="preserve">
          <source>WHITESPACE</source>
          <target state="translated">WHITESPACE</target>
        </trans-unit>
        <trans-unit id="2e31950e28a56c4fe6e7025b187b2fd4fefe4871" translate="yes" xml:space="preserve">
          <source>WINDOWS</source>
          <target state="translated">WINDOWS</target>
        </trans-unit>
        <trans-unit id="d9fff1c0dfb1298ad2bb377a3be85896a8fef6d6" translate="yes" xml:space="preserve">
          <source>Waiting for a job</source>
          <target state="translated">Esperando un trabajo</target>
        </trans-unit>
        <trans-unit id="43754c49f6c1a5cc1ea3d54dbf166c296a415ea2" translate="yes" xml:space="preserve">
          <source>Warning! Annotating your API with &lt;code&gt;@JvmDefault&lt;/code&gt; has serious implications on binary compatibility. Make sure to carefully read the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/index&quot;&gt;reference page&lt;/a&gt; before using &lt;code&gt;@JvmDefault&lt;/code&gt; in production.</source>
          <target state="translated">&amp;iexcl;Advertencia! &lt;code&gt;@JvmDefault&lt;/code&gt; su API con @JvmDefault tiene serias implicaciones en la compatibilidad binaria. Aseg&amp;uacute;rese de leer detenidamente la &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/index&quot;&gt;p&amp;aacute;gina de referencia&lt;/a&gt; antes de usar &lt;code&gt;@JvmDefault&lt;/code&gt; en producci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7d38e4cd7c43347e6b57a76218aeff28900c3be2" translate="yes" xml:space="preserve">
          <source>Warning: using reflection is usually the wrong way to solve problems in Kotlin! In particular, if you have several classes that all have some common properties/functions and you want to write a function that can take an instance of any of those classes and use those properties, the correct approach is to define an interface with the common properties/functions and make all the relevant classes implement it; the function can then take that interface as a parameter. If you don't control those classes, you can use the &lt;a href=&quot;https://en.wikipedia.org/wiki/Adapter_pattern&quot;&gt;Adapter pattern&lt;/a&gt; and write wrapper classes that implement the interface - this is very easy thanks to Kotlin's &lt;a href=&quot;inheritance#delegation&quot;&gt;delegation feature&lt;/a&gt;. You can also get a lot of leverage out of using generics in clever ways.</source>
          <target state="translated">Advertencia: usar la reflexi&amp;oacute;n suele ser la forma incorrecta de resolver problemas en Kotlin. En particular, si tiene varias clases que tienen algunas propiedades / funciones comunes y desea escribir una funci&amp;oacute;n que pueda tomar una instancia de cualquiera de esas clases y usar esas propiedades, el enfoque correcto es definir una interfaz con las propiedades comunes / funciones y hacer que todas las clases relevantes lo implementen; la funci&amp;oacute;n puede tomar esa interfaz como par&amp;aacute;metro. Si no controla esas clases, puede usar el &lt;a href=&quot;https://en.wikipedia.org/wiki/Adapter_pattern&quot;&gt;patr&amp;oacute;n Adaptador&lt;/a&gt; y escribir clases contenedoras que implementen la interfaz; esto es muy f&amp;aacute;cil gracias a la &lt;a href=&quot;inheritance#delegation&quot;&gt;funci&amp;oacute;n de delegaci&amp;oacute;n&lt;/a&gt; de Kotlin . Tambi&amp;eacute;n puede aprovechar mucho el uso de gen&amp;eacute;ricos de manera inteligente.</target>
        </trans-unit>
        <trans-unit id="5869fc3835710be9dffa94b09164944fe6c00863" translate="yes" xml:space="preserve">
          <source>Warnings as errors</source>
          <target state="translated">Las advertencias como errores</target>
        </trans-unit>
        <trans-unit id="7d7a6c37ae0a89dc47c6393b7b23a560c9ff63a7" translate="yes" xml:space="preserve">
          <source>Watch for deprecation warnings in advance for the best update experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621508220c73315e0bfc68d68f589c562907f45d" translate="yes" xml:space="preserve">
          <source>We add the &lt;code&gt;SharedCode&lt;/code&gt; framework to the Xcode project. For that let's click on the root node of the &lt;em&gt;project navigator&lt;/em&gt; and select the &lt;em&gt;target&lt;/em&gt; settings. Next, we click on the &lt;code&gt;+&lt;/code&gt; in the &lt;em&gt;Embedded Binaries&lt;/em&gt; section, click &lt;em&gt;Add Other&amp;hellip;&lt;/em&gt; button in the dialog to choose the framework from the disk. We can point to the following folder:</source>
          <target state="translated">A&amp;ntilde;adimos la &lt;code&gt;SharedCode&lt;/code&gt; marco del proyecto de Xcode. Para eso hagamos clic en el nodo ra&amp;iacute;z del &lt;em&gt;navegador&lt;/em&gt; del &lt;em&gt;proyecto&lt;/em&gt; y seleccionemos la configuraci&amp;oacute;n de &lt;em&gt;destino&lt;/em&gt; . A continuaci&amp;oacute;n, hacemos clic en el &lt;code&gt;+&lt;/code&gt; en la secci&amp;oacute;n &lt;em&gt;Binarios integrados&lt;/em&gt; , hacemos clic en el bot&amp;oacute;n &lt;em&gt;Agregar otro&amp;hellip;&lt;/em&gt; en el cuadro de di&amp;aacute;logo para elegir el marco del disco. Podemos apuntar a la siguiente carpeta:</target>
        </trans-unit>
        <trans-unit id="6a9f25c8723418966c0e0b17f9549ea1ce5a5f99" translate="yes" xml:space="preserve">
          <source>We also need to use the &lt;em&gt;war&lt;/em&gt; plugin that helps us generate the corresponding WAR artifacts for running/deploying</source>
          <target state="translated">Tambi&amp;eacute;n necesitamos usar el complemento &lt;em&gt;war&lt;/em&gt; que nos ayuda a generar los artefactos WAR correspondientes para ejecutar / implementar</target>
        </trans-unit>
        <trans-unit id="8f769d9a3ee354265c33ea15ceda2db82197765c" translate="yes" xml:space="preserve">
          <source>We are just trying out an idea and want some users to play with it and give feedback. If it doesn't work out, we may drop it any minute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f808d588d4d3fcebee5f5b3ff2c14b3f46e0e3a6" translate="yes" xml:space="preserve">
          <source>We are now migrating Kotlin/JVM and Kotlin/JS to the same IR. As a result, all three backends share a lot of logic and have a unified pipeline. This allows us to implement most features, optimizations, and bug fixes only once for all platforms. Both new IR-based back-ends are in &lt;a href=&quot;evolution/components-stability&quot;&gt;Alpha&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a06031f1e06a7952c57e44121ca5e185850421" translate="yes" xml:space="preserve">
          <source>We are now ready to start coding the iOS application and to use the Kotlin code from it</source>
          <target state="translated">Estamos listos para empezar a codificar la aplicaci√≥n del iOS y usar el c√≥digo Kotlin de la misma.</target>
        </trans-unit>
        <trans-unit id="cff8cb63586d851860fe613c1e521ee0461e4b2e" translate="yes" xml:space="preserve">
          <source>We are ready to use the &lt;code&gt;SharedCode&lt;/code&gt; library from our Android and iOS applications.</source>
          <target state="translated">Estamos listos para usar la biblioteca &lt;code&gt;SharedCode&lt;/code&gt; de nuestras aplicaciones de Android e iOS.</target>
        </trans-unit>
        <trans-unit id="14edea8060ff3b0350a868b06c73ba61ae235890" translate="yes" xml:space="preserve">
          <source>We are starting with an implementation for the JVM. Let's create a file &lt;code&gt;Base64.kt&lt;/code&gt; in &lt;code&gt;jvmMain/kotlin/jetbrains/base64&lt;/code&gt; folder and provide a simple implementation, which delegates to &lt;code&gt;java.util.Base64&lt;/code&gt;:</source>
          <target state="translated">Estamos comenzando con una implementaci&amp;oacute;n para la JVM. &lt;code&gt;Base64.kt&lt;/code&gt; un archivo Base64.kt en la &lt;code&gt;jvmMain/kotlin/jetbrains/base64&lt;/code&gt; y proporcionemos una implementaci&amp;oacute;n simple, que delega a &lt;code&gt;java.util.Base64&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b38f2316b8757428d73f475d7c1fadf769b873b4" translate="yes" xml:space="preserve">
          <source>We are using &lt;a href=&quot;https://jetbrains.com/idea&quot;&gt;IntelliJ IDEA&lt;/a&gt; for this tutorial. Both the &lt;a href=&quot;https://www.jetbrains.com/idea/features/editions_comparison_matrix.html&quot;&gt;free and open source&lt;/a&gt; IntelliJ IDEA &lt;a href=&quot;https://www.jetbrains.com/idea/download&quot;&gt;Community Edition&lt;/a&gt; and IntelliJ IDEA Ultimate Edition work for this tutorial. We can download and install both of them from &lt;a href=&quot;https://jetbrains.com/idea/download&quot;&gt;https://jetbrains.com/idea/download&lt;/a&gt; if necessary. The Kotlin plugin is included with IntelliJ IDEA by default, but still, we need to make sure the Kotlin plugin version is 1.3.41 (or newer) in the &lt;em&gt;Settings&lt;/em&gt; or &lt;em&gt;Preferences&lt;/em&gt; dialog, under the Language &amp;amp; Frameworks | Kotlin section.</source>
          <target state="translated">Estamos usando &lt;a href=&quot;https://jetbrains.com/idea&quot;&gt;IntelliJ IDEA&lt;/a&gt; para este tutorial. Tanto IntelliJ IDEA &lt;a href=&quot;https://www.jetbrains.com/idea/download&quot;&gt;Community Edition de &lt;/a&gt;&lt;a href=&quot;https://www.jetbrains.com/idea/features/editions_comparison_matrix.html&quot;&gt;c&amp;oacute;digo abierto y gratuito como&lt;/a&gt; IntelliJ IDEA Ultimate Edition funcionan para este tutorial. Podemos descargarlos e instalarlos desde &lt;a href=&quot;https://jetbrains.com/idea/download&quot;&gt;https://jetbrains.com/idea/download&lt;/a&gt; si es necesario. El complemento de Kotlin se incluye con IntelliJ IDEA de forma predeterminada, pero a&amp;uacute;n as&amp;iacute;, debemos asegurarnos de que la versi&amp;oacute;n del complemento de Kotlin sea 1.3.41 (o m&amp;aacute;s reciente) en el cuadro de di&amp;aacute;logo &lt;em&gt;Configuraci&amp;oacute;n&lt;/em&gt; o &lt;em&gt;Preferencias&lt;/em&gt; , en Idioma y marcos | Secci&amp;oacute;n de Kotlin.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="55cc632a1ea27e5e64ad2495a5384f62f48dbc86" translate="yes" xml:space="preserve">
          <source>We are using the &lt;code&gt;delay()&lt;/code&gt; function that's like &lt;code&gt;Thread.sleep()&lt;/code&gt;, but better: it &lt;em&gt;doesn't block a thread&lt;/em&gt;, but only suspends the coroutine itself. The thread is returned to the pool while the coroutine is waiting, and when the waiting is done, the coroutine resumes on a free thread in the pool.</source>
          <target state="translated">Estamos usando la funci&amp;oacute;n &lt;code&gt;delay()&lt;/code&gt; que es como &lt;code&gt;Thread.sleep()&lt;/code&gt; , pero mejor: &lt;em&gt;no bloquea un hilo&lt;/em&gt; , solo suspende la corrutina en s&amp;iacute;. El hilo se devuelve al grupo mientras la corrutina est&amp;aacute; esperando, y cuando finaliza la espera, la corrutina se reanuda en un hilo libre del grupo.</target>
        </trans-unit>
        <trans-unit id="da1efc61212d59164e482ecaadd2d5e755cb8ec9" translate="yes" xml:space="preserve">
          <source>We believe that a lot of users could use a much faster cycle, where critical compiler bug fixes arrive immediately, making the code more safe and correct. So, Kotlin 1.3 introduces &lt;em&gt;progressive&lt;/em&gt; compiler mode, which can be enabled by passing the argument &lt;code&gt;-progressive&lt;/code&gt; to the compiler.</source>
          <target state="translated">Creemos que muchos usuarios podr&amp;iacute;an usar un ciclo mucho m&amp;aacute;s r&amp;aacute;pido, donde las correcciones de errores cr&amp;iacute;ticos del compilador llegan de inmediato, haciendo que el c&amp;oacute;digo sea m&amp;aacute;s seguro y correcto. Entonces, Kotlin 1.3 introduce &lt;em&gt;el&lt;/em&gt; modo de compilador &lt;em&gt;progresivo&lt;/em&gt; , que se puede habilitar pasando el argumento &lt;code&gt;-progressive&lt;/code&gt; al compilador.</target>
        </trans-unit>
        <trans-unit id="0e996e5615a264af995c203eaebe6185c018bf0a" translate="yes" xml:space="preserve">
          <source>We believe that the words &lt;strong&gt;in&lt;/strong&gt; and &lt;strong&gt;out&lt;/strong&gt; are self-explaining (as they were successfully used in C# for quite some time already), thus the mnemonic mentioned above is not really needed, and one can rephrase it for a higher purpose:</source>
          <target state="translated">Creemos que las palabras &lt;strong&gt;de entrada&lt;/strong&gt; y &lt;strong&gt;salida&lt;/strong&gt; se explican por s&amp;iacute; mismas (ya que ya se usaron con &amp;eacute;xito en C # durante bastante tiempo), por lo que el mnem&amp;oacute;nico mencionado anteriormente no es realmente necesario, y uno puede reformularlo para un prop&amp;oacute;sito superior:</target>
        </trans-unit>
        <trans-unit id="a4b5a076e237cd86b9569bc0bd72070895b09bdf" translate="yes" xml:space="preserve">
          <source>We call &lt;code&gt;lib.exe&lt;/code&gt; from the toolchain to generate the static library wrapper &lt;code&gt;libnative.lib&lt;/code&gt; that automates the DLL usage from the code:</source>
          <target state="translated">Llamamos &lt;code&gt;lib.exe&lt;/code&gt; desde la cadena de herramientas para generar el contenedor de biblioteca est&amp;aacute;tica &lt;code&gt;libnative.lib&lt;/code&gt; que automatiza el uso de DLL desde el c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="b380a7bf1b634600b0c261666fb452d97fe21714" translate="yes" xml:space="preserve">
          <source>We call Kotlin classes directly from Objective-C code. A Kotlin &lt;code&gt;object&lt;/code&gt; has the class method function &lt;code&gt;object&lt;/code&gt;, which allows us to get the only instance of the object and to call &lt;code&gt;Object&lt;/code&gt; methods on it. The widespread pattern is used to create an instance of the &lt;code&gt;Clazz&lt;/code&gt; class. We call the &lt;code&gt;[[ DemoClazz alloc] init]&lt;/code&gt; on Objective-C. We may also use &lt;code&gt;[DemoClazz new]&lt;/code&gt; for constructors without parameters. Global declarations from the Kotlin sources are scoped under the &lt;code&gt;DemoLibKt&lt;/code&gt; class in Objective-C. All methods are turned into class methods of that class. The &lt;code&gt;strings&lt;/code&gt; function is turned into &lt;code&gt;DemoLibKt.stringsStr&lt;/code&gt; function in Objective-C, we can pass &lt;code&gt;NSString&lt;/code&gt; directly to it. The return is visible as &lt;code&gt;NSString&lt;/code&gt; too.</source>
          <target state="translated">Llamamos clases de Kotlin directamente desde el c&amp;oacute;digo Objective-C. Un &lt;code&gt;object&lt;/code&gt; Kotlin tiene el &lt;code&gt;object&lt;/code&gt; funci&amp;oacute;n de m&amp;eacute;todo de clase , que nos permite obtener la &amp;uacute;nica instancia del objeto y llamar a m&amp;eacute;todos de &lt;code&gt;Object&lt;/code&gt; en &amp;eacute;l. El patr&amp;oacute;n generalizado se utiliza para crear una instancia de la clase &lt;code&gt;Clazz&lt;/code&gt; . Llamamos al &lt;code&gt;[[ DemoClazz alloc] init]&lt;/code&gt; en Objective-C. Tambi&amp;eacute;n podemos usar &lt;code&gt;[DemoClazz new]&lt;/code&gt; para constructores sin par&amp;aacute;metros. Las declaraciones globales de las fuentes de Kotlin est&amp;aacute;n &lt;code&gt;DemoLibKt&lt;/code&gt; en la clase DemoLibKt en Objective-C. Todos los m&amp;eacute;todos se convierten en m&amp;eacute;todos de clase de esa clase. La funci&amp;oacute;n de &lt;code&gt;strings&lt;/code&gt; se convierte en &lt;code&gt;DemoLibKt.stringsStr&lt;/code&gt; en Objective-C, podemos pasarle &lt;code&gt;NSString&lt;/code&gt; directamente. La devoluci&amp;oacute;n tambi&amp;eacute;n es visible como &lt;code&gt;NSString&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6efbfc50d097338c67f6c25e5a2530e00802bbf1" translate="yes" xml:space="preserve">
          <source>We can also check a value for being &lt;em&gt;in&lt;/em&gt; or &lt;em&gt;!in&lt;/em&gt; a &lt;a href=&quot;ranges&quot;&gt;range&lt;/a&gt; or a collection:</source>
          <target state="translated">Tambi&amp;eacute;n podemos verificar un valor para estar &lt;em&gt;en&lt;/em&gt; o &lt;em&gt;! En&lt;/em&gt; un &lt;a href=&quot;ranges&quot;&gt;rango&lt;/a&gt; o una colecci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="6d48b261007df82564fff9e248b32f0b0877a7db" translate="yes" xml:space="preserve">
          <source>We can also run the project from the command line, without using IntelliJ IDEA Ultimate, if we apply the gretty plugin. In order to do this, we need to make the following changes to build.gradle:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be71c4616ae57b989081464748078b992e6a499b" translate="yes" xml:space="preserve">
          <source>We can also see how we can define whether we want the compiler to generate sourcemaps for us by indicating this via the &lt;code&gt;sourceMap&lt;/code&gt; option.</source>
          <target state="translated">Tambi&amp;eacute;n podemos ver c&amp;oacute;mo podemos definir si queremos que el compilador genere mapas de origen para nosotros indic&amp;aacute;ndolo a trav&amp;eacute;s de la opci&amp;oacute;n &lt;code&gt;sourceMap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db36be1716cde1f09b5bb491a1d29f546a1af582" translate="yes" xml:space="preserve">
          <source>We can also see how we can define whether we want the compiler to generate sourcemaps for us by indicating this via the &lt;code&gt;sourceMap&lt;/code&gt; parameter.</source>
          <target state="translated">Tambi&amp;eacute;n podemos ver c&amp;oacute;mo podemos definir si queremos que el compilador genere mapas de origen para nosotros indic&amp;aacute;ndolo mediante el par&amp;aacute;metro &lt;code&gt;sourceMap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5bd60fd46fe6ea1c5b448761b2e310af9a2b34e" translate="yes" xml:space="preserve">
          <source>We can check whether an object conforms to a given type at runtime by using the &lt;code&gt;is&lt;/code&gt; operator or its negated form &lt;code&gt;!is&lt;/code&gt;:</source>
          <target state="translated">Podemos comprobar si un objeto se ajusta a un tipo determinado en tiempo de ejecuci&amp;oacute;n mediante el uso de la &lt;code&gt;is&lt;/code&gt; explotador o su forma negada &lt;code&gt;!is&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="80fca726c567776685be62a6f296ba802e4a0c48" translate="yes" xml:space="preserve">
          <source>We can choose to let &lt;code&gt;MotorVehicle&lt;/code&gt; implement that interface, since it's got the required members - but now we need to mark those members with &lt;code&gt;override&lt;/code&gt;, and we can remove &lt;code&gt;open&lt;/code&gt; since an overridden function is implicitly open:</source>
          <target state="translated">Podemos optar por permitir que &lt;code&gt;MotorVehicle&lt;/code&gt; implemente esa interfaz, ya que tiene los miembros requeridos, pero ahora necesitamos marcar esos miembros con &lt;code&gt;override&lt;/code&gt; , y podemos eliminar la &lt;code&gt;open&lt;/code&gt; ya que una funci&amp;oacute;n anulada est&amp;aacute; impl&amp;iacute;citamente abierta:</target>
        </trans-unit>
        <trans-unit id="b29aa01092a4a2f64bc0e5bf97de56d6e4257337" translate="yes" xml:space="preserve">
          <source>We can click the file reference on the right to navigate directly to the corresponding statement. Alternatively, we can manually switch to the &lt;em&gt;Sources&lt;/em&gt; tab, and find the correct file in the file tree. Navigating to the Kotlin file actually shows us regular Kotlin code (as opposed to minified JavaScript):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df63e38e36909132576c3c502bfc7296d767131" translate="yes" xml:space="preserve">
          <source>We can combine the declarative nature of the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/catch.html&quot;&gt;catch&lt;/a&gt; operator with a desire to handle all the exceptions, by moving the body of the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/collect.html&quot;&gt;collect&lt;/a&gt; operator into &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/on-each.html&quot;&gt;onEach&lt;/a&gt; and putting it before the &lt;code&gt;catch&lt;/code&gt; operator. Collection of this flow must be triggered by a call to &lt;code&gt;collect()&lt;/code&gt; without parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab28e12a4329ff5188bb6bb1c34f1f3bf4ce258" translate="yes" xml:space="preserve">
          <source>We can configure the Kotlin compiler option to use any of these. The last option (UMD) will generate UMD and fallback to the other options if one is not available. Currently Kotlin compiler options are per IntelliJ IDEA project as opposed to a Kotlin module.</source>
          <target state="translated">Podemos configurar la opci√≥n del compilador Kotlin para usar cualquiera de estos.La √∫ltima opci√≥n (UMD)generar√° UMD y recurrir√° a las otras opciones si una no est√° disponible.Actualmente las opciones del compilador Kotlin son por el proyecto IntelliJ IDEA en vez de un m√≥dulo Kotlin.</target>
        </trans-unit>
        <trans-unit id="5b4c1b5549ed7b71f56b6d1ba48bd66bf46537dc" translate="yes" xml:space="preserve">
          <source>We can define async-style functions that invoke &lt;code&gt;doSomethingUsefulOne&lt;/code&gt; and &lt;code&gt;doSomethingUsefulTwo&lt;/code&gt;&lt;em&gt;asynchronously&lt;/em&gt; using &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html&quot;&gt;async&lt;/a&gt; coroutine builder with an explicit &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt; reference. We name such functions with &quot;Async&quot; suffix to highlight the fact that they only start asynchronous computation and one needs to use the resulting deferred value to get the result.</source>
          <target state="translated">Podemos definir las funciones de tipo as&amp;iacute;ncrono que invocan &lt;code&gt;doSomethingUsefulOne&lt;/code&gt; y &lt;code&gt;doSomethingUsefulTwo&lt;/code&gt; &lt;em&gt;de forma asincr&amp;oacute;nica&lt;/em&gt; utilizando &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html&quot;&gt;as&amp;iacute;ncrono&lt;/a&gt; constructor corrutina con una expl&amp;iacute;cita &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt; referencia. Nombramos tales funciones con el sufijo &quot;Async&quot; para resaltar el hecho de que solo inician el c&amp;aacute;lculo asincr&amp;oacute;nico y es necesario usar el valor diferido resultante para obtener el resultado.</target>
        </trans-unit>
        <trans-unit id="452dc3c84f7cabd350d9558a57e866a1cf25ff79" translate="yes" xml:space="preserve">
          <source>We can define async-style functions that invoke &lt;code&gt;doSomethingUsefulOne&lt;/code&gt; and &lt;code&gt;doSomethingUsefulTwo&lt;/code&gt;&lt;em&gt;asynchronously&lt;/em&gt; using the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html&quot;&gt;async&lt;/a&gt; coroutine builder with an explicit &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt; reference. We name such functions with the &quot;&amp;hellip;Async&quot; suffix to highlight the fact that they only start asynchronous computation and one needs to use the resulting deferred value to get the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ecb356b303055242a64963a7b2a1f314c6be1d3" translate="yes" xml:space="preserve">
          <source>We can define custom accessors for a property. If we define a custom getter, it will be called every time we access the property (this allows us to implement a computed property). Here's an example of a custom getter:</source>
          <target state="translated">Podemos definir accesorios personalizados para una propiedad.Si definimos un getter personalizado,se llamar√° cada vez que accedamos a la propiedad (esto nos permite implementar una propiedad computarizada).Aqu√≠ hay un ejemplo de un getter personalizado:</target>
        </trans-unit>
        <trans-unit id="b31aa9761950ea554c775fecf5e0c018baf882fd" translate="yes" xml:space="preserve">
          <source>We can easily call it directly (&lt;code&gt;isOdd(5)&lt;/code&gt;), but we can also use it as a function type value, e.g. pass it to another function. To do this, we use the &lt;code&gt;::&lt;/code&gt; operator:</source>
          <target state="translated">Podemos llamarlo directamente directamente ( &lt;code&gt;isOdd(5)&lt;/code&gt; ), pero tambi&amp;eacute;n podemos usarlo como un valor de tipo de funci&amp;oacute;n, por ejemplo, pasarlo a otra funci&amp;oacute;n. Para hacer esto, usamos el operador &lt;code&gt;::&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae17c1ca56657ad30866237b96021ef47b3cda29" translate="yes" xml:space="preserve">
          <source>We can explicitly convert a character to an &lt;code&gt;Int&lt;/code&gt; number:</source>
          <target state="translated">Podemos convertir expl&amp;iacute;citamente un car&amp;aacute;cter en un n&amp;uacute;mero &lt;code&gt;Int&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d31ec9f07f4bc208cadad8ae2ec0b5f65d7cdf75" translate="yes" xml:space="preserve">
          <source>We can explicitly return a value from the lambda using the &lt;a href=&quot;returns#return-at-labels&quot;&gt;qualified return&lt;/a&gt; syntax. Otherwise, the value of the last expression is implicitly returned.</source>
          <target state="translated">Podemos devolver expl&amp;iacute;citamente un valor de lambda utilizando la sintaxis de &lt;a href=&quot;returns#return-at-labels&quot;&gt;retorno calificada&lt;/a&gt; . De lo contrario, el valor de la &amp;uacute;ltima expresi&amp;oacute;n se devuelve impl&amp;iacute;citamente.</target>
        </trans-unit>
        <trans-unit id="5af6b3dce006afd131588be4e84caa508a65cc20" translate="yes" xml:space="preserve">
          <source>We can import either a single name, e.g.</source>
          <target state="translated">Podemos importar un solo nombre,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="8a9f3b72eb46629a298e0a057eccfdabab01c204" translate="yes" xml:space="preserve">
          <source>We can install &lt;code&gt;kotlinizer&lt;/code&gt; to the default repository:</source>
          <target state="translated">Podemos instalar &lt;code&gt;kotlinizer&lt;/code&gt; en el repositorio predeterminado:</target>
        </trans-unit>
        <trans-unit id="6d3bad56e3c4235f442b8c993bfc65c9b26cdc43" translate="yes" xml:space="preserve">
          <source>We can now add our first Kotlin source code file and IntelliJ IDEA will prompt us to configure the project for Kotlin. On doing so, we should select as target JavaScript</source>
          <target state="translated">Ahora podemos a√±adir nuestro primer archivo de c√≥digo fuente de Kotlin y el IntelliJ IDEA nos pedir√° que configuremos el proyecto para Kotlin.Al hacerlo,debemos seleccionar como objetivo el JavaScript</target>
        </trans-unit>
        <trans-unit id="dc96081c653c84bb3dd3b5b83bfc524f3cd03b65" translate="yes" xml:space="preserve">
          <source>We can now do this (but it's still possible to call the function the normal way):</source>
          <target state="translated">Ahora podemos hacer esto (pero todav√≠a es posible llamar a la funci√≥n de la manera normal):</target>
        </trans-unit>
        <trans-unit id="2028680260413907a6ff455452315ba4c9be7fe7" translate="yes" xml:space="preserve">
          <source>We can now start debugging our program. For example, we can set a breakpoint by clicking on one of the line numbers. The developer tools even support setting breakpoints within a statement. As with regular JavaScript code, any set breakpoints will persist across page reloads. This also makes it possible to debug Kotlin's main method which is executed when the script is first loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb97bda68a25be3b25091829fa426075294c2d71" translate="yes" xml:space="preserve">
          <source>We can now use any of the standard Gradle tasks for Spring Boot to run the application. As such, running</source>
          <target state="translated">Ahora podemos usar cualquiera de las tareas est√°ndar de Gradle para Spring Boot para ejecutar la aplicaci√≥n.Como tal,ejecutando</target>
        </trans-unit>
        <trans-unit id="c6898463443208b858c46602bd14f4fe18a2e216" translate="yes" xml:space="preserve">
          <source>We can override a non-abstract open member with an abstract one</source>
          <target state="translated">Podemos anular un miembro abierto no abstracto con uno abstracto</target>
        </trans-unit>
        <trans-unit id="443dbeb7b5959da838f042d1c795f241e1156ec7" translate="yes" xml:space="preserve">
          <source>We can replace &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/delay.html&quot;&gt;delay&lt;/a&gt; with &lt;code&gt;Thread.sleep&lt;/code&gt; in the body of &lt;code&gt;simple&lt;/code&gt;'s &lt;code&gt;flow { ... }&lt;/code&gt; and see that the main thread is blocked in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8ade084fb51f7b34b89fae3c572fe0de063884" translate="yes" xml:space="preserve">
          <source>We can run the compiler without parameters to have an interactive shell. We can type any valid Kotlin code and see the results.</source>
          <target state="translated">Podemos ejecutar el compilador sin par√°metros para tener un shell interactivo.Podemos escribir cualquier c√≥digo Kotlin v√°lido y ver los resultados.</target>
        </trans-unit>
        <trans-unit id="f29622b395465874ab1409644634bdf5bd547c3e" translate="yes" xml:space="preserve">
          <source>We can see how the API is created. To start with, we need to initialize the &lt;code&gt;libnative_ExportedSymbols&lt;/code&gt; structure. Let's take a look at the latest part of the &lt;code&gt;libnative_api.h&lt;/code&gt; for this:</source>
          <target state="translated">Podemos ver c&amp;oacute;mo se crea la API. Para empezar, necesitamos inicializar la estructura &lt;code&gt;libnative_ExportedSymbols&lt;/code&gt; . Echemos un vistazo a la &amp;uacute;ltima parte de &lt;code&gt;libnative_api.h&lt;/code&gt; para esto:</target>
        </trans-unit>
        <trans-unit id="3d6f52d4243822ccee088838c7cbe381743f9a4c" translate="yes" xml:space="preserve">
          <source>We can see the completion cause is not null, because the flow was aborted due to downstream exception:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27d56a268fbe45c1d0688c4606abf60011997ba" translate="yes" xml:space="preserve">
          <source>We can simply refer to any class or member function inside our node.js code by simply importing the module using &lt;code&gt;require&lt;/code&gt;:</source>
          <target state="translated">Simplemente podemos hacer referencia a cualquier clase o funci&amp;oacute;n miembro dentro de nuestro c&amp;oacute;digo node.js simplemente importando el m&amp;oacute;dulo usando &lt;code&gt;require&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="831ccd2e7105b549d27fa757caf8f798b465ce95" translate="yes" xml:space="preserve">
          <source>We can simulate custom infix operations by using &lt;a href=&quot;functions#infix-notation&quot;&gt;infix function calls&lt;/a&gt;.</source>
          <target state="translated">Podemos simular operaciones infijas personalizadas usando &lt;a href=&quot;functions#infix-notation&quot;&gt;llamadas a funciones infijas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="509f912bd5b5b6af65e5240f9ef362cc1a5f0b3f" translate="yes" xml:space="preserve">
          <source>We can start by creating a library file in Kotlin and save it as &lt;code&gt;hello.kt&lt;/code&gt;:</source>
          <target state="translated">Podemos comenzar creando un archivo de biblioteca en Kotlin y guardarlo como &lt;code&gt;hello.kt&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="89f8fe8ceb180f0a0bdf079538aa483abb6121b4" translate="yes" xml:space="preserve">
          <source>We can then do this:</source>
          <target state="translated">Entonces podemos hacer esto:</target>
        </trans-unit>
        <trans-unit id="ce9fbf3c0deb149f881d772488fa422e85d659ce" translate="yes" xml:space="preserve">
          <source>We can tune how tests are executed in Kotlin/JS by adjusting the settings available in the &lt;code&gt;testTask&lt;/code&gt; block in our &lt;code&gt;build.gradle.kts&lt;/code&gt;. For example, using the Karma test runner together with a headless instance of Chrome and an instance of Firefox looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16a2933e2edce96547337fb1fedcb97e299ea34" translate="yes" xml:space="preserve">
          <source>We can use a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/buffer.html&quot;&gt;buffer&lt;/a&gt; operator on a flow to run emitting code of the &lt;code&gt;simple&lt;/code&gt; flow concurrently with collecting code, as opposed to running them sequentially:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a4cc600951e3a005f1c78d3f5d6ddad7aa6cbe" translate="yes" xml:space="preserve">
          <source>We can use arbitrary expressions (not only constants) as branch conditions</source>
          <target state="translated">Podemos usar expresiones arbitrarias (no s√≥lo constantes)como condiciones de rama</target>
        </trans-unit>
        <trans-unit id="1d0515ada05fe82e395d7a6707b6351170a6e35a" translate="yes" xml:space="preserve">
          <source>We can use classes or functions from a Kotlin project, in our scratches and worksheets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b191724788dd23ede6b8c2149628b7a54092d58" translate="yes" xml:space="preserve">
          <source>We can use explicit conversions to widen numbers</source>
          <target state="translated">Podemos usar conversiones expl√≠citas para ampliar los n√∫meros</target>
        </trans-unit>
        <trans-unit id="dfb0038c9e10b5e80574a36666be3c3e86aa4353" translate="yes" xml:space="preserve">
          <source>We collectively refer to &lt;em&gt;Experimental&lt;/em&gt;, &lt;em&gt;Alpha&lt;/em&gt; and &lt;em&gt;Beta&lt;/em&gt; as &lt;strong&gt;pre-stable&lt;/strong&gt; levels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca14a2211b4e71b478b08b4747bfb20c5dc2a24" translate="yes" xml:space="preserve">
          <source>We continue to explore more C language types and their representation in Kotlin/Native in our other tutorials:</source>
          <target state="translated">Seguimos explorando m√°s tipos de lenguaje C y su representaci√≥n en Kotlin/Nativo en nuestros otros tutoriales:</target>
        </trans-unit>
        <trans-unit id="51b6f004886664d749f4d2984398143458f52375" translate="yes" xml:space="preserve">
          <source>We could call this using default arguments:</source>
          <target state="translated">Podr√≠amos llamarlo usando argumentos por defecto:</target>
        </trans-unit>
        <trans-unit id="8ae10259ccef551da0909b6299a0fa1b0a4f1215" translate="yes" xml:space="preserve">
          <source>We could do a similar thing with contravariant projection by using &lt;code&gt;in&lt;/code&gt;:</source>
          <target state="translated">Podr&amp;iacute;amos hacer algo similar con la proyecci&amp;oacute;n contravariante usando &lt;code&gt;in&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="39a9864b239884664ddf63f83dbaeb179ea24a10" translate="yes" xml:space="preserve">
          <source>We could use the same means of synchronization that are applicable to threads (a &lt;code&gt;CountDownLatch&lt;/code&gt; is what crosses my mind in this case), but let's take a safer and cleaner path.</source>
          <target state="translated">Podr&amp;iacute;amos usar los mismos medios de sincronizaci&amp;oacute;n que se aplican a los hilos (un &lt;code&gt;CountDownLatch&lt;/code&gt; es lo que se me pasa por la cabeza en este caso), pero tomemos un camino m&amp;aacute;s seguro y limpio.</target>
        </trans-unit>
        <trans-unit id="d12b57fa3f5ee09d20d2af80c6064fa21722785e" translate="yes" xml:space="preserve">
          <source>We covered the basics of setting up an IDE compatible project with Gradle in the &lt;a href=&quot;basic-kotlin-native-app#create-gradle-project&quot;&gt;A Basic Kotlin/Native Application&lt;/a&gt; tutorial. Please check it out if you are looking for detailed first steps and instructions on how to start a new Kotlin/Native project and open it in IntelliJ IDEA. In this tutorial, we'll look at the advanced C interop related usages of Kotlin/Native and &lt;a href=&quot;../../reference/building-mpp-with-gradle&quot;&gt;multiplatform&lt;/a&gt; builds with Gradle.</source>
          <target state="translated">Cubrimos los conceptos b&amp;aacute;sicos de la configuraci&amp;oacute;n de un proyecto compatible con IDE con Gradle en el tutorial &lt;a href=&quot;basic-kotlin-native-app#create-gradle-project&quot;&gt;A Basic Kotlin / Native Application&lt;/a&gt; . Compru&amp;eacute;belo si est&amp;aacute; buscando primeros pasos detallados e instrucciones sobre c&amp;oacute;mo iniciar un nuevo proyecto Kotlin / Native y abrirlo en IntelliJ IDEA. En este tutorial, veremos los usos avanzados relacionados con la interoperabilidad C de Kotlin / Native y compilaciones &lt;a href=&quot;../../reference/building-mpp-with-gradle&quot;&gt;multiplataforma&lt;/a&gt; con Gradle.</target>
        </trans-unit>
        <trans-unit id="34c7674c59bff58842f8120c227b39dfc459b5e2" translate="yes" xml:space="preserve">
          <source>We covered the basics of setting up an IDE compatible project with Gradle in the &lt;a href=&quot;using-gradle&quot;&gt;A Basic Kotlin/Native Application&lt;/a&gt; tutorial. Please check it out if you are looking for detailed first steps and instructions on how to start a new Kotlin/Native project and open it in IntelliJ IDEA. In this tutorial, we'll look at the advanced C interop related usages of Kotlin/Native and &lt;a href=&quot;../../reference/mpp-discover-project#multiplatform-plugin&quot;&gt;multiplatform&lt;/a&gt; builds with Gradle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1e2f897849388e9b5afd5f5e40ff3ed5d9341c" translate="yes" xml:space="preserve">
          <source>We create &lt;code&gt;build.gradle&lt;/code&gt;&lt;code&gt;build.gradle.kts&lt;/code&gt; Gradle build file with the following contents:</source>
          <target state="translated">Creamos &lt;code&gt;build.gradle&lt;/code&gt; &lt;code&gt;build.gradle.kts&lt;/code&gt; fichero de construcci&amp;oacute;n Gradle con el siguiente contenido:</target>
        </trans-unit>
        <trans-unit id="d792e0e9b2d61d7c507d6ac3c55fb78219ae3d1b" translate="yes" xml:space="preserve">
          <source>We create a &lt;code&gt;lib.h&lt;/code&gt; file to see how C functions are mapped into Kotlin:</source>
          <target state="translated">Creamos un archivo &lt;code&gt;lib.h&lt;/code&gt; para ver c&amp;oacute;mo se asignan las funciones de C a Kotlin:</target>
        </trans-unit>
        <trans-unit id="b48d0f7550a4bac04ad5285d58e805e5af18955b" translate="yes" xml:space="preserve">
          <source>We create a similar implementation file (and missing directories) for the iOS target in the &lt;code&gt;SharedCode/src/iosMain/kotlin/actual.kt&lt;/code&gt;:</source>
          <target state="translated">Creamos un archivo de implementaci&amp;oacute;n similar (y directorios faltantes) para el objetivo de iOS en &lt;code&gt;SharedCode/src/iosMain/kotlin/actual.kt&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="785942d151a588aee24ed9a38ee1d8176b8dc181" translate="yes" xml:space="preserve">
          <source>We create the &lt;code&gt;hello.kt&lt;/code&gt; file with the library contents:</source>
          <target state="translated">Creamos el archivo &lt;code&gt;hello.kt&lt;/code&gt; con el contenido de la biblioteca:</target>
        </trans-unit>
        <trans-unit id="fcb050d7cd97c1f800f9df98029b55284f1e77b7" translate="yes" xml:space="preserve">
          <source>We decided to productize this idea, but it hasn't reached the final shape yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ed76b8d0d9018634906744837677e15921589b" translate="yes" xml:space="preserve">
          <source>We declare the generic type parameter before the function name for it to be available in the receiver type expression. See &lt;a href=&quot;generics&quot;&gt;Generic functions&lt;/a&gt;.</source>
          <target state="translated">Declaramos el par&amp;aacute;metro de tipo gen&amp;eacute;rico antes del nombre de la funci&amp;oacute;n para que est&amp;eacute; disponible en la expresi&amp;oacute;n del tipo de receptor. Consulte &lt;a href=&quot;generics&quot;&gt;Funciones gen&amp;eacute;ricas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="908a5325e4c7755c51db166d96c5a188313020b0" translate="yes" xml:space="preserve">
          <source>We don&amp;rsquo;t currently support sharing a source set for these combinations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e038eb8a21b3199cc32241632b06a3909918bfe9" translate="yes" xml:space="preserve">
          <source>We don't have to annotate the &lt;code&gt;HTML&lt;/code&gt; or &lt;code&gt;Head&lt;/code&gt; classes with &lt;code&gt;@HtmlTagMarker&lt;/code&gt; because their superclass is already annotated:</source>
          <target state="translated">No tenemos que anotar las clases &lt;code&gt;HTML&lt;/code&gt; o &lt;code&gt;Head&lt;/code&gt; con &lt;code&gt;@HtmlTagMarker&lt;/code&gt; porque su superclase ya est&amp;aacute; anotada:</target>
        </trans-unit>
        <trans-unit id="0d7e408c93316e02af7f4048c236f0b36f5b8539" translate="yes" xml:space="preserve">
          <source>We encourage you to try out the new Kotlin/JVM backend, which is currently in Alpha, and to file any issues and feature requests to our &lt;a href=&quot;https://youtrack.jetbrains.com/issues/KT&quot;&gt;issue tracker&lt;/a&gt;. This will help us to unify the compiler pipelines and bring compiler extensions like Jetpack Compose to the Kotlin community more quickly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efdd6ede6c8f3bf00110a9f180aa0db3e0e10e52" translate="yes" xml:space="preserve">
          <source>We encourage you to use our new &lt;a href=&quot;#new-jvm-ir-backend&quot;&gt;JVM IR&lt;/a&gt; and &lt;a href=&quot;#new-js-ir-backend&quot;&gt;JS IR&lt;/a&gt; backends, which are currently in Alpha, and share your feedback with us.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3df53e494bf93b03698e74de62415d2b98fbd8" translate="yes" xml:space="preserve">
          <source>We evolve the Kotlin Standard Library (kotlin-stdlib) for stable platforms according to the principles stated above. Changes to the contracts for its API undergo the same procedures as changes in the language itself.</source>
          <target state="translated">Desarrollamos la Biblioteca Est√°ndar de Kotlin (kotlin-stdlib)para plataformas estables de acuerdo con los principios arriba mencionados.Los cambios en los contratos de su API se someten a los mismos procedimientos que los cambios en el propio lenguaje.</target>
        </trans-unit>
        <trans-unit id="a2535fe7404df5a6eb12c3a3917ab80b4135dbff" translate="yes" xml:space="preserve">
          <source>We frequently create classes whose main purpose is to hold data. In such a class some standard functionality and utility functions are often mechanically derivable from the data. In Kotlin, this is called a &lt;em&gt;data class&lt;/em&gt; and is marked as &lt;code&gt;data&lt;/code&gt;:</source>
          <target state="translated">Con frecuencia creamos clases cuyo objetivo principal es almacenar datos. En una clase de este tipo, algunas funciones est&amp;aacute;ndar y de utilidad a menudo se derivan mec&amp;aacute;nicamente de los datos. En Kotlin, esto se denomina &lt;em&gt;clase de datos&lt;/em&gt; y se marca como &lt;code&gt;data&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1a30f61b55b7b7e943a650a6aabc19b05c3bdf8d" translate="yes" xml:space="preserve">
          <source>We get only numbers up to 3 and a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-cancellation-exception/index.html&quot;&gt;CancellationException&lt;/a&gt; after trying to emit number 4:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24aab8ad063fec7c5b2558d6a061d3a136f3a35e" translate="yes" xml:space="preserve">
          <source>We get quite a different output, where a line is printed at each emission from either &lt;code&gt;nums&lt;/code&gt; or &lt;code&gt;strs&lt;/code&gt; flows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee091486d809b243b18a19355b403e23f19e065" translate="yes" xml:space="preserve">
          <source>We have significantly reworked the API for JSON serialization to make it more consistent and easier to use. From now on, we'll continue developing the JSON serialization API in a backward-compatible manner. However, if you have used previous versions of it, you'll need to rewrite some of your code when migrating to 1.0.0-RC. To help you with this, we also offer the &lt;a href=&quot;https://github.com/Kotlin/kotlinx.serialization/blob/master/docs/serialization-guide.md&quot;&gt;Kotlin Serialization Guide&lt;/a&gt; &amp;ndash; the complete set of documentation for &lt;code&gt;kotlinx.serialization&lt;/code&gt;. It will guide you through the process of using the most important features and it can help you address any issues that you might face.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1094efa9f8fd00ffe04a3c7c86c1ceab68f5986d" translate="yes" xml:space="preserve">
          <source>We make sure to document precisely which subcomponents are not stable. We also do our best to warn users where possible and ask to opt in explicitly to avoid accidental usages of features that have not been released as stable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a128ace07ce2a614969d8901fa6d436be396c723" translate="yes" xml:space="preserve">
          <source>We manage a lifecycle of our coroutines by creating an instance of &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScope&lt;/a&gt; that is tied to the lifecycle of our activity. &lt;code&gt;CoroutineScope&lt;/code&gt; instance can be created by &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope.html&quot;&gt;CoroutineScope()&lt;/a&gt; or &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-main-scope.html&quot;&gt;MainScope()&lt;/a&gt; factory functions. The former creates a general-purpose scope, while the latter creates scope for UI applications and uses &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-main.html&quot;&gt;Dispatchers.Main&lt;/a&gt; as default dispatcher:</source>
          <target state="translated">Gestionamos un ciclo de vida de nuestras corrutinas creando una instancia de &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScope&lt;/a&gt; que est&amp;aacute; vinculada al ciclo de vida de nuestra actividad. &lt;code&gt;CoroutineScope&lt;/code&gt; instancia de CoroutineScope se puede crear mediante las &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope.html&quot;&gt;funciones&lt;/a&gt; de f&amp;aacute;brica de CoroutineScope () o &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-main-scope.html&quot;&gt;MainScope ()&lt;/a&gt; . El primero crea un alcance de uso general, mientras que el segundo crea un alcance para aplicaciones de interfaz de usuario y utiliza &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-main.html&quot;&gt;Dispatchers.Main&lt;/a&gt; como despachador predeterminado:</target>
        </trans-unit>
        <trans-unit id="ccd2d1dce53a36cd421422934713d352fc3aea2f" translate="yes" xml:space="preserve">
          <source>We manage the lifecycles of our coroutines by creating an instance of &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScope&lt;/a&gt; tied to the lifecycle of our activity. A &lt;code&gt;CoroutineScope&lt;/code&gt; instance can be created by the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope.html&quot;&gt;CoroutineScope()&lt;/a&gt; or &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-main-scope.html&quot;&gt;MainScope()&lt;/a&gt; factory functions. The former creates a general-purpose scope, while the latter creates a scope for UI applications and uses &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-main.html&quot;&gt;Dispatchers.Main&lt;/a&gt; as the default dispatcher:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f8eb551efabdb4e2888f30edf606cbdfff7bc8" translate="yes" xml:space="preserve">
          <source>We may find the whole sources from that tutorial on &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples/tree/master/tutorials/mpp-iOS-Android&quot;&gt;GitHub&lt;/a&gt;.</source>
          <target state="translated">Podemos encontrar las fuentes completas de ese tutorial en &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples/tree/master/tutorials/mpp-iOS-Android&quot;&gt;GitHub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="990e3fee35a9a6ae47d7273521920489a64503a8" translate="yes" xml:space="preserve">
          <source>We may include all declarations directly into the &lt;code&gt;.def&lt;/code&gt; file after a &lt;code&gt;---&lt;/code&gt; separator. It can be helpful to include macros or other C defines into the code generated by the &lt;code&gt;cinterop&lt;/code&gt; tool. Method bodies are compiled and fully included into the binary too. Let's use that feature to have a runnable example without a need for a C compiler. To implement that, we need to add implementations to the C functions from the &lt;code&gt;lib.h&lt;/code&gt; file, and place these functions into a &lt;code&gt;.def&lt;/code&gt; file. We will have the following &lt;code&gt;interop.def&lt;/code&gt; result:</source>
          <target state="translated">Podemos incluir todas las declaraciones directamente en el archivo &lt;code&gt;.def&lt;/code&gt; despu&amp;eacute;s de un separador &lt;code&gt;---&lt;/code&gt; . Puede resultar &amp;uacute;til incluir macros u otras definiciones de C en el c&amp;oacute;digo generado por la herramienta &lt;code&gt;cinterop&lt;/code&gt; . Los cuerpos de los m&amp;eacute;todos tambi&amp;eacute;n se compilan y se incluyen completamente en el binario. Usemos esa caracter&amp;iacute;stica para tener un ejemplo ejecutable sin necesidad de un compilador de C. Para implementar eso, necesitamos agregar implementaciones a las funciones C desde el archivo &lt;code&gt;lib.h&lt;/code&gt; , y colocar estas funciones en un archivo &lt;code&gt;.def&lt;/code&gt; . Tendremos el siguiente resultado de &lt;code&gt;interop.def&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bb703fd0c61569a76d50c3b521794196aa1b8db0" translate="yes" xml:space="preserve">
          <source>We need to assign the &lt;code&gt;id&lt;/code&gt; to the &lt;code&gt;TextView&lt;/code&gt; control of our activity to access it from the code. Let's patch the &lt;code&gt;app/src/main/res/layout/activity_main.xml&lt;/code&gt; file (the name may be different if we changed it in the new project wizard) and add several more attributes to the &lt;code&gt;&amp;lt;TextView&amp;gt;&lt;/code&gt; element:</source>
          <target state="translated">Necesitamos asignar el &lt;code&gt;id&lt;/code&gt; al control &lt;code&gt;TextView&lt;/code&gt; de nuestra actividad para acceder a &amp;eacute;l desde el c&amp;oacute;digo. Parchemos el archivo &lt;code&gt;app/src/main/res/layout/activity_main.xml&lt;/code&gt; (el nombre puede ser diferente si lo cambiamos en el asistente de nuevo proyecto) y agreguemos varios atributos m&amp;aacute;s al elemento &lt;code&gt;&amp;lt;TextView&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6b59ffea87e48a8dddabef126cfdaa1e77887d03" translate="yes" xml:space="preserve">
          <source>We need to configure an Xcode project to use our framework. The configuration depends on the target platform.</source>
          <target state="translated">Necesitamos configurar un proyecto Xcode para usar nuestro marco de trabajo.La configuraci√≥n depende de la plataforma de destino.</target>
        </trans-unit>
        <trans-unit id="8c3349f607cc5a810a187a7d773102a89d925fbd" translate="yes" xml:space="preserve">
          <source>We need to have a Kotlin compiler on our machines. The &lt;a href=&quot;basic-kotlin-native-app#obtaining-the-compiler&quot;&gt;A Basic Kotlin Application&lt;/a&gt; tutorial contains more explanations for that step. Let's assume, we have a console, where the &lt;code&gt;kotlinc-native&lt;/code&gt;, &lt;code&gt;cinterop&lt;/code&gt;, and &lt;code&gt;klib&lt;/code&gt; commands are available.</source>
          <target state="translated">Necesitamos tener un compilador de Kotlin en nuestras m&amp;aacute;quinas. El tutorial &lt;a href=&quot;basic-kotlin-native-app#obtaining-the-compiler&quot;&gt;Una aplicaci&amp;oacute;n b&amp;aacute;sica de Kotlin&lt;/a&gt; contiene m&amp;aacute;s explicaciones para ese paso. Supongamos que tenemos una consola, donde est&amp;aacute;n disponibles los comandos &lt;code&gt;kotlinc-native&lt;/code&gt; , &lt;code&gt;cinterop&lt;/code&gt; y &lt;code&gt;klib&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="027177ad8c50f7e3918b01a86e99731d536a90cd" translate="yes" xml:space="preserve">
          <source>We need to have a Kotlin compiler on our machines. The &lt;a href=&quot;basic-kotlin-native-app#obtaining-the-compiler&quot;&gt;A Basic Kotlin Application&lt;/a&gt; tutorial covers that step in details. Let's assume that we have a console, where the &lt;code&gt;kotlinc-native&lt;/code&gt;, &lt;code&gt;cinterop&lt;/code&gt;, and &lt;code&gt;klib&lt;/code&gt; commands are available.</source>
          <target state="translated">Necesitamos tener un compilador de Kotlin en nuestras m&amp;aacute;quinas. El tutorial &lt;a href=&quot;basic-kotlin-native-app#obtaining-the-compiler&quot;&gt;A Basic Kotlin Application&lt;/a&gt; cubre ese paso en detalle. Supongamos que tenemos una consola, donde est&amp;aacute;n disponibles los comandos &lt;code&gt;kotlinc-native&lt;/code&gt; , &lt;code&gt;cinterop&lt;/code&gt; y &lt;code&gt;klib&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c043e1a723b8be73d20799e39d49b6268885069" translate="yes" xml:space="preserve">
          <source>We need to have a Kotlin compiler on our machines. The &lt;a href=&quot;basic-kotlin-native-app#obtaining-the-compiler&quot;&gt;A Basic Kotlin Application&lt;/a&gt; tutorial explains the steps in detail. Let's assume we have a console, where the &lt;code&gt;kotlinc-native&lt;/code&gt;, &lt;code&gt;cinterop&lt;/code&gt;, and &lt;code&gt;klib&lt;/code&gt; commands are available.</source>
          <target state="translated">Necesitamos tener un compilador de Kotlin en nuestras m&amp;aacute;quinas. El tutorial &lt;a href=&quot;basic-kotlin-native-app#obtaining-the-compiler&quot;&gt;A Basic Kotlin Application&lt;/a&gt; explica los pasos en detalle. Supongamos que tenemos una consola, donde est&amp;aacute;n disponibles los comandos &lt;code&gt;kotlinc-native&lt;/code&gt; , &lt;code&gt;cinterop&lt;/code&gt; y &lt;code&gt;klib&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab5784dabb9482fdb660b478b956f2503674f995" translate="yes" xml:space="preserve">
          <source>We need to refresh the Gradle Project settings to apply these changes. Click on the &lt;code&gt;Sync Now&lt;/code&gt; link or use the &lt;em&gt;Gradle&lt;/em&gt; tool window and click the refresh action from the context menu on the root Gradle project.</source>
          <target state="translated">Necesitamos actualizar la configuraci&amp;oacute;n del Proyecto Gradle para aplicar estos cambios. Haga clic en el enlace &lt;code&gt;Sync Now&lt;/code&gt; o use la ventana de la herramienta &lt;em&gt;Gradle&lt;/em&gt; y haga clic en la acci&amp;oacute;n de actualizaci&amp;oacute;n del men&amp;uacute; contextual en el proyecto ra&amp;iacute;z de Gradle.</target>
        </trans-unit>
        <trans-unit id="e0a25a2206a6fb40af56c49d12ab94e8fd653881" translate="yes" xml:space="preserve">
          <source>We need to supply the right Framework out of those four depending on the selected target in the Xcode project. It depends on the target configuration selected in Xcode. Also, we'd like to make Xcode compile the Framework for us before the build. We need to include the additional task to the end of the &lt;code&gt;SharedCode/build.gradle&lt;/code&gt; Gradle file:</source>
          <target state="translated">Necesitamos proporcionar el Framework correcto de esos cuatro dependiendo del objetivo seleccionado en el proyecto Xcode. Depende de la configuraci&amp;oacute;n de destino seleccionada en Xcode. Adem&amp;aacute;s, nos gustar&amp;iacute;a hacer que Xcode compile el Framework para nosotros antes de la compilaci&amp;oacute;n. Necesitamos incluir la tarea adicional al final del archivo &lt;code&gt;SharedCode/build.gradle&lt;/code&gt; Gradle:</target>
        </trans-unit>
        <trans-unit id="27d58e7d45f1a7f3fbb5989a56fe0b4132ca9bca" translate="yes" xml:space="preserve">
          <source>We now define the &lt;em&gt;GreetingController&lt;/em&gt; which serves requests of the form &lt;em&gt;/greeting?name={value}&lt;/em&gt; and returns a JSON object representing an instance of &lt;em&gt;Greeting&lt;/em&gt;</source>
          <target state="translated">Ahora definimos el &lt;em&gt;GreetingController&lt;/em&gt; que atiende solicitudes de la forma &lt;em&gt;/ greeting? Name = {value}&lt;/em&gt; y devuelve un objeto JSON que representa una instancia de &lt;em&gt;Greeting&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5172c1ac8d2fad040b4dc376d3d08d8d24a279b3" translate="yes" xml:space="preserve">
          <source>We now have a local variable &lt;code&gt;number&lt;/code&gt; whose value is 42 and whose type is &lt;code&gt;Int&lt;/code&gt; (because that's the type of the literal &lt;code&gt;42&lt;/code&gt;), and another local variable &lt;code&gt;message&lt;/code&gt; whose value is &lt;code&gt;&quot;Hello&quot;&lt;/code&gt; and whose type is &lt;code&gt;String&lt;/code&gt;. Subsequent usages of the variable must use only the name, not &lt;code&gt;var&lt;/code&gt;:</source>
          <target state="translated">Ahora tenemos un &lt;code&gt;number&lt;/code&gt; variable local cuyo valor es 42 y cuyo tipo es &lt;code&gt;Int&lt;/code&gt; (porque ese es el tipo del literal &lt;code&gt;42&lt;/code&gt; ), y otro &lt;code&gt;message&lt;/code&gt; variable local cuyo valor es &lt;code&gt;&quot;Hello&quot;&lt;/code&gt; y cuyo tipo es &lt;code&gt;String&lt;/code&gt; . Los usos posteriores de la variable deben usar solo el nombre, no &lt;code&gt;var&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="dfb0f090289673dd1e3bce3bdb08b454f3c07da9" translate="yes" xml:space="preserve">
          <source>We now need an HTML page to load the code, so we'll create a file called &lt;code&gt;index.html&lt;/code&gt;. If you want more information on how Kotlin compiles to JavaScript and the output generated, check out the &lt;a href=&quot;../kotlin-to-javascript/kotlin-to-javascript&quot;&gt;Kotlin to JavaScript&lt;/a&gt; tutorial.</source>
          <target state="translated">Ahora necesitamos una p&amp;aacute;gina HTML para cargar el c&amp;oacute;digo, as&amp;iacute; que crearemos un archivo llamado &lt;code&gt;index.html&lt;/code&gt; . Si desea obtener m&amp;aacute;s informaci&amp;oacute;n sobre c&amp;oacute;mo se compila Kotlin en JavaScript y la salida generada, consulte el tutorial de &lt;a href=&quot;../kotlin-to-javascript/kotlin-to-javascript&quot;&gt;Kotlin en JavaScript&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8ae2c927826795d420c34c1b15ddab31d41644c0" translate="yes" xml:space="preserve">
          <source>We observed that annotating your code almost hasn't changed when you switched to Kotlin. Now let's see what changes should be made to the build script.</source>
          <target state="translated">Observamos que anotar tu c√≥digo casi no ha cambiado cuando te cambiaste a Kotlin.Ahora veamos qu√© cambios se deben hacer en el script de construcci√≥n.</target>
        </trans-unit>
        <trans-unit id="8ffa6d76c8e1bf7a1c5dd4d42cd1a6d0515ef81b" translate="yes" xml:space="preserve">
          <source>We open Xcode and select &lt;em&gt;Create a new Xcode project&lt;/em&gt; option. In the dialog, we choose the iOS target and select the &lt;em&gt;Single View App&lt;/em&gt;. Fill the next page with defaults, and use the &lt;code&gt;KotlinIOS&lt;/code&gt; (or something else) as the &lt;em&gt;Product Name&lt;/em&gt;. Let's select Swift as the language (it is possible to use Objective-C too). We should instruct Xcode to place the project into the &lt;code&gt;native&lt;/code&gt; folder under our project, later we will use relative paths in the configuration files.</source>
          <target state="translated">Abrimos Xcode y seleccionamos la opci&amp;oacute;n &lt;em&gt;Crear un nuevo proyecto de Xcode&lt;/em&gt; . En el cuadro de di&amp;aacute;logo, elegimos el objetivo de iOS y seleccionamos la &lt;em&gt;aplicaci&amp;oacute;n de vista &amp;uacute;nica&lt;/em&gt; . Llene la p&amp;aacute;gina siguiente con los valores predeterminados y use &lt;code&gt;KotlinIOS&lt;/code&gt; (o algo m&amp;aacute;s) como &lt;em&gt;Nombre del producto&lt;/em&gt; . Seleccionemos Swift como idioma (tambi&amp;eacute;n es posible utilizar Objective-C). Debemos indicarle a Xcode que coloque el proyecto en la carpeta &lt;code&gt;native&lt;/code&gt; bajo nuestro proyecto, luego usaremos rutas relativas en los archivos de configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a2530cc820c7c771c8fc29995c153d4bf24643ea" translate="yes" xml:space="preserve">
          <source>We provide &lt;em&gt;all-open&lt;/em&gt; plugin support both for Gradle and Maven with the complete IDE integration.</source>
          <target state="translated">Proporcionamos compatibilidad con complementos &lt;em&gt;totalmente abiertos&lt;/em&gt; tanto para Gradle como para Maven con la integraci&amp;oacute;n IDE completa.</target>
        </trans-unit>
        <trans-unit id="8737e3b3a5c293a6cb9372838dbc9870d668570a" translate="yes" xml:space="preserve">
          <source>We provide the -language-version and -api-version flags that make a new version emulate the behaviour of an old one, for compatibility purposes. Normally, at least one previous version is supported. This effectively leaves a time span of two full feature release cycles for migration (which usually amounts to about two years). Using an older kotlin-stdlib or kotlin-reflect with a newer compiler without specifying compatibility flags is not recommended, and the compiler will report a &lt;a href=&quot;compatibility-modes&quot;&gt;warning&lt;/a&gt; when this happens.</source>
          <target state="translated">Proporcionamos los indicadores -language-version y -api-version que hacen que una nueva versi&amp;oacute;n emule el comportamiento de una anterior, por motivos de compatibilidad. Normalmente, se admite al menos una versi&amp;oacute;n anterior. Esto deja efectivamente un lapso de tiempo de dos ciclos completos de lanzamiento de funciones para la migraci&amp;oacute;n (que generalmente equivale a aproximadamente dos a&amp;ntilde;os). No se recomienda usar un kotlin-stdlib o kotlin-reflect m&amp;aacute;s antiguo con un compilador m&amp;aacute;s nuevo sin especificar indicadores de compatibilidad, y el compilador informar&amp;aacute; una &lt;a href=&quot;compatibility-modes&quot;&gt;advertencia&lt;/a&gt; cuando esto suceda.</target>
        </trans-unit>
        <trans-unit id="e91c098e8aab839aef30caa8d584e2cae0663d0e" translate="yes" xml:space="preserve">
          <source>We qualified the type parameter with the &lt;code&gt;reified&lt;/code&gt; modifier, now it&amp;rsquo;s accessible inside the function, almost as if it were a normal class. Since the function is inlined, no reflection is needed, normal operators like &lt;code&gt;!is&lt;/code&gt; and &lt;code&gt;as&lt;/code&gt; are working now. Also, we can call it as mentioned above: &lt;code&gt;myTree.findParentOfType&amp;lt;MyTreeNodeType&amp;gt;()&lt;/code&gt;.</source>
          <target state="translated">Calificamos el par&amp;aacute;metro de tipo con el modificador &lt;code&gt;reified&lt;/code&gt; , ahora es accesible dentro de la funci&amp;oacute;n, casi como si fuera una clase normal. Dado que la funci&amp;oacute;n est&amp;aacute; en l&amp;iacute;nea, no se necesita reflexi&amp;oacute;n, los operadores normales como &lt;code&gt;!is&lt;/code&gt; y &lt;code&gt;as&lt;/code&gt; est&amp;aacute;n funcionando ahora. Adem&amp;aacute;s, podemos llamarlo como se mencion&amp;oacute; anteriormente: &lt;code&gt;myTree.findParentOfType&amp;lt;MyTreeNodeType&amp;gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7840bc09de48b5cc97bf23a9db5d15e17420d9fa" translate="yes" xml:space="preserve">
          <source>We recommend &lt;code&gt;with&lt;/code&gt; for calling functions on the context object without providing the lambda result. In the code, &lt;code&gt;with&lt;/code&gt; can be read as &amp;ldquo;&lt;em&gt;with this object, do the following.&lt;/em&gt;&amp;rdquo;</source>
          <target state="translated">Recomendamos &lt;code&gt;with&lt;/code&gt; para llamar a funciones en el objeto de contexto sin proporcionar el resultado lambda. En el c&amp;oacute;digo, &lt;code&gt;with&lt;/code&gt; se puede leer como &amp;ldquo; &lt;em&gt;con este objeto, haga lo siguiente. &lt;/em&gt;&quot;</target>
        </trans-unit>
        <trans-unit id="ee965fb5c972bf1b84c2210f41280ef6b6a7b02d" translate="yes" xml:space="preserve">
          <source>We recommend that you use expected and actual declarations only for Kotlin declarations that have platform-specific dependencies. It is better to implement as much functionality as possible in the shared module even if doing so takes more time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55acd20cd8a96e52ff245292bd60de85bd57b76c" translate="yes" xml:space="preserve">
          <source>We see from these definitions that the Kotlin object &lt;code&gt;Object&lt;/code&gt; is mapped into &lt;code&gt;libnative_kref_example_Object&lt;/code&gt;, and &lt;code&gt;Clazz&lt;/code&gt; is mapped into &lt;code&gt;libnative_kref_example_Clazz&lt;/code&gt;. Both structs contain nothing but the &lt;code&gt;pinned&lt;/code&gt; field with a pointer, the field type &lt;code&gt;libnative_KNativePtr&lt;/code&gt; is defined as &lt;code&gt;void*&lt;/code&gt; above.</source>
          <target state="translated">Vemos en estas definiciones que el objeto de Kotlin &lt;code&gt;Object&lt;/code&gt; est&amp;aacute; mapeado en &lt;code&gt;libnative_kref_example_Object&lt;/code&gt; , y &lt;code&gt;Clazz&lt;/code&gt; est&amp;aacute; mapeado en &lt;code&gt;libnative_kref_example_Clazz&lt;/code&gt; . Ambas estructuras contienen nada m&amp;aacute;s que la &lt;code&gt;pinned&lt;/code&gt; campo con un puntero, el tipo de campo &lt;code&gt;libnative_KNativePtr&lt;/code&gt; se define como &lt;code&gt;void*&lt;/code&gt; arriba.</target>
        </trans-unit>
        <trans-unit id="e6899aab23e93f36bbb67e40e2a50b9ebcd2d51b" translate="yes" xml:space="preserve">
          <source>We see that &lt;code&gt;cinterop&lt;/code&gt; generated wrapper types for our &lt;code&gt;struct&lt;/code&gt; and &lt;code&gt;union&lt;/code&gt; types. For &lt;code&gt;MyStruct&lt;/code&gt; and &lt;code&gt;MyUnion&lt;/code&gt; type declarations in C, we have the Kotlin classes &lt;code&gt;MyStruct&lt;/code&gt; and &lt;code&gt;MyUnion&lt;/code&gt; generated respectively. The wrappers inherit from the &lt;code&gt;CStructVar&lt;/code&gt; base class and declare all fields as Kotlin properties. It uses &lt;code&gt;CValue&amp;lt;T&amp;gt;&lt;/code&gt; to represent a by-value structure parameter and &lt;code&gt;CValuesRef&amp;lt;T&amp;gt;?&lt;/code&gt; to represent passing a pointer to a structure or a union.</source>
          <target state="translated">Vemos que &lt;code&gt;cinterop&lt;/code&gt; gener&amp;oacute; tipos de envoltura para nuestros tipos de &lt;code&gt;struct&lt;/code&gt; y &lt;code&gt;union&lt;/code&gt; . Para las declaraciones de tipo &lt;code&gt;MyStruct&lt;/code&gt; y &lt;code&gt;MyUnion&lt;/code&gt; en C, tenemos las clases Kotlin &lt;code&gt;MyStruct&lt;/code&gt; y &lt;code&gt;MyUnion&lt;/code&gt; generadas respectivamente. Los contenedores heredan de la clase base &lt;code&gt;CStructVar&lt;/code&gt; y declaran todos los campos como propiedades de Kotlin. Utiliza &lt;code&gt;CValue&amp;lt;T&amp;gt;&lt;/code&gt; para representar un par&amp;aacute;metro de estructura por valor y &lt;code&gt;CValuesRef&amp;lt;T&amp;gt;?&lt;/code&gt; para representar el paso de un puntero a una estructura o uni&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f057034bf9d5d678ae656c6371649fbb0395e9c1" translate="yes" xml:space="preserve">
          <source>We see that Kotlin &lt;code&gt;String&lt;/code&gt; and Objective-C &lt;code&gt;NSString*&lt;/code&gt; are mapped transparently. Similarly, &lt;code&gt;Unit&lt;/code&gt; type from Kotlin is mapped to &lt;code&gt;void&lt;/code&gt;. We see primitive types are mapped directly. Non-nullable primitive types are mapped transparently. Nullable primitive types are mapped into &lt;code&gt;Kotlin&amp;lt;TYPE&amp;gt;*&lt;/code&gt; types, as shown in the table &lt;a href=&quot;#kotlin-numbers-and-nsnumber&quot;&gt;above&lt;/a&gt;. Both higher order functions &lt;code&gt;acceptFunF&lt;/code&gt; and &lt;code&gt;supplyFun&lt;/code&gt; are included, and accept Objective-C blocks.</source>
          <target state="translated">Vemos que Kotlin &lt;code&gt;String&lt;/code&gt; y Objective-C &lt;code&gt;NSString*&lt;/code&gt; est&amp;aacute;n mapeados de forma transparente. De manera similar, el tipo de &lt;code&gt;Unit&lt;/code&gt; de Kotlin se asigna a &lt;code&gt;void&lt;/code&gt; . Vemos que los tipos primitivos se asignan directamente. Los tipos primitivos que no aceptan valores NULL se asignan de forma transparente. Los tipos primitivos que aceptan valores NULL se asignan a tipos &lt;code&gt;Kotlin&amp;lt;TYPE&amp;gt;*&lt;/code&gt; , como se muestra en la tabla &lt;a href=&quot;#kotlin-numbers-and-nsnumber&quot;&gt;anterior&lt;/a&gt; . Se &lt;code&gt;acceptFunF&lt;/code&gt; funciones de orden superior acceptFunF y &lt;code&gt;supplyFun&lt;/code&gt; , y aceptan bloques Objective-C.</target>
        </trans-unit>
        <trans-unit id="35a16af72746a4a3a02afc71cbee1736ad51d23a" translate="yes" xml:space="preserve">
          <source>We see that our function typedef from C has been turned into Kotlin &lt;code&gt;typealias&lt;/code&gt;. It uses &lt;code&gt;CPointer&amp;lt;..&amp;gt;&lt;/code&gt; type to represent the pointer parameters, and &lt;code&gt;CFunction&amp;lt;(Int)-&amp;gt;Int&amp;gt;&lt;/code&gt; to represent the function signature. There is an &lt;code&gt;invoke&lt;/code&gt; operator extension function available for all &lt;code&gt;CPointer&amp;lt;CFunction&amp;lt;..&amp;gt;&lt;/code&gt; types, so that it is possible to call it as we would call any other function in Kotlin.</source>
          <target state="translated">Vemos que nuestra funci&amp;oacute;n typedef de C se ha convertido en &lt;code&gt;typealias&lt;/code&gt; de Kotlin . Utiliza el tipo &lt;code&gt;CPointer&amp;lt;..&amp;gt;&lt;/code&gt; para representar los par&amp;aacute;metros del puntero, y &lt;code&gt;CFunction&amp;lt;(Int)-&amp;gt;Int&amp;gt;&lt;/code&gt; para representar la firma de la funci&amp;oacute;n. Hay una funci&amp;oacute;n de extensi&amp;oacute;n de operador de &lt;code&gt;invoke&lt;/code&gt; disponible para todos los &lt;code&gt;CPointer&amp;lt;CFunction&amp;lt;..&amp;gt;&lt;/code&gt; , de modo que es posible llamarla como llamar&amp;iacute;amos a cualquier otra funci&amp;oacute;n en Kotlin.</target>
        </trans-unit>
        <trans-unit id="28a890b04741a752c8a070159a08ecb4fb5a731d" translate="yes" xml:space="preserve">
          <source>We see that while the first number was still being processed the second, and third were already produced, so the second one was &lt;em&gt;conflated&lt;/em&gt; and only the most recent (the third one) was delivered to the collector:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2878a9c7f0b432f6ca797d421e5946bffba2e7e" translate="yes" xml:space="preserve">
          <source>We should drag the created build phase to the top of the list</source>
          <target state="translated">Deber√≠amos arrastrar la fase de construcci√≥n creada a la parte superior de la lista</target>
        </trans-unit>
        <trans-unit id="96dd80304356c421140b6cec43e73736a5d2cf73" translate="yes" xml:space="preserve">
          <source>We simply take every coroutine and await its result here, then all results are added together by the standard library function &lt;code&gt;sumBy()&lt;/code&gt;. But the compiler rightfully complains:</source>
          <target state="translated">Simplemente tomamos cada corrutina y esperamos su resultado aqu&amp;iacute;, luego todos los resultados se suman mediante la funci&amp;oacute;n de biblioteca est&amp;aacute;ndar &lt;code&gt;sumBy()&lt;/code&gt; . Pero el compilador se queja con raz&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="256672724470d83204a91011d31c7585e8e896c2" translate="yes" xml:space="preserve">
          <source>We simply take every coroutine and await its result here, then all results are added together by the standard library function &lt;code&gt;sumOf()&lt;/code&gt;. But the compiler rightfully complains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4baf88fc00c2c6a8043a4496a26dfca6b633d7" translate="yes" xml:space="preserve">
          <source>We start with a very simple action that increments a shared mutable variable using multi-threaded &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-default.html&quot;&gt;Dispatchers.Default&lt;/a&gt;.</source>
          <target state="translated">Comenzamos con una acci&amp;oacute;n muy simple que incrementa una variable mutable compartida usando &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-default.html&quot;&gt;Dispatchers&lt;/a&gt; multiproceso .</target>
        </trans-unit>
        <trans-unit id="d6e2ee50e438c21fd164031d81fcec588a999b4f" translate="yes" xml:space="preserve">
          <source>We still have concurrent execution of both operations as evident from the output of the above main function:</source>
          <target state="translated">Todav√≠a tenemos la ejecuci√≥n simult√°nea de ambas operaciones,como se evidencia en el resultado de la funci√≥n principal anterior:</target>
        </trans-unit>
        <trans-unit id="d309cfebc83a39f58f865d0bd1891f05f3570150" translate="yes" xml:space="preserve">
          <source>We still have concurrent execution of both operations, as evident from the output of the above &lt;code&gt;main&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c80eca3836dfb2ec346ec74a1498c04b650629" translate="yes" xml:space="preserve">
          <source>We suggest you try the method &lt;a href=&quot;../java.io.-file/use-lines&quot;&gt;useLines&lt;/a&gt; instead which closes the stream when the processing is complete.</source>
          <target state="translated">Le sugerimos que pruebe el m&amp;eacute;todo &lt;a href=&quot;../java.io.-file/use-lines&quot;&gt;useLines&lt;/a&gt; en su lugar, que cierra la secuencia cuando se completa el procesamiento.</target>
        </trans-unit>
        <trans-unit id="1f5ae8ba8a817df47cdd30f0d60e67f7842b5f3f" translate="yes" xml:space="preserve">
          <source>We use a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/on-each.html&quot;&gt;onEach&lt;/a&gt; intermediate operator in this example to delay each element and make the code that emits sample flows more declarative and shorter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00e20f64ce7aa51453973eb86f6197d3fb8aac0" translate="yes" xml:space="preserve">
          <source>We use a normal sequential invocation, because the code in the coroutine, just like in the regular code, is &lt;em&gt;sequential&lt;/em&gt; by default. The following example demonstrates it by measuring the total time it takes to execute both suspending functions:</source>
          <target state="translated">Usamos una invocaci&amp;oacute;n secuencial normal, porque el c&amp;oacute;digo en la corrutina, al igual que en el c&amp;oacute;digo regular, es &lt;em&gt;secuencial&lt;/em&gt; por defecto. El siguiente ejemplo lo demuestra midiendo el tiempo total que se tarda en ejecutar ambas funciones de suspensi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="aadde77016fbc4d33f0abaca395b0e32828abddd" translate="yes" xml:space="preserve">
          <source>We use the &lt;code&gt;import SharedCode&lt;/code&gt; to import our Framework, which we compiled with Kotlin/Native from Kotlin code. Next, we call the Kotlin function from it as &lt;code&gt;CommonKt.createApplicationScreenMessage()&lt;/code&gt;. Follow the &lt;a href=&quot;apple-framework&quot;&gt;Kotlin/Native as an Apple Framework&lt;/a&gt; tutorial for more details on the Kotlin/Native to Swift (or Objective-C) interop.</source>
          <target state="translated">Usamos la &lt;code&gt;import SharedCode&lt;/code&gt; para importar nuestro Framework, que compilamos con Kotlin / Native desde el c&amp;oacute;digo de Kotlin. A continuaci&amp;oacute;n, llamamos a la funci&amp;oacute;n Kotlin desde ella como &lt;code&gt;CommonKt.createApplicationScreenMessage()&lt;/code&gt; . Siga el tutorial de &lt;a href=&quot;apple-framework&quot;&gt;Kotlin / Native como Apple Framework&lt;/a&gt; para obtener m&amp;aacute;s detalles sobre la interoperabilidad de Kotlin / Native to Swift (u Objective-C).</target>
        </trans-unit>
        <trans-unit id="085b9979a689e14ecd3808ec279a6c3ad33ba2ea" translate="yes" xml:space="preserve">
          <source>We use the &lt;code&gt;staticCFunction{..}&lt;/code&gt; helper function from Kotlin/Native to wrap a Kotlin lambda function into a C function pointer. It only allows having unbound and non-capturing lambda functions. For example, it is not able to use a local variable from the function. We may only use globally visible declarations. Throwing exceptions from a &lt;code&gt;staticCFunction{..}&lt;/code&gt; will end up in non-deterministic side-effects. It is vital to make sure that we are not throwing any sudden exceptions from it.</source>
          <target state="translated">Usamos la funci&amp;oacute;n auxiliar &lt;code&gt;staticCFunction{..}&lt;/code&gt; de Kotlin / Native para envolver una funci&amp;oacute;n lambda de Kotlin en un puntero de funci&amp;oacute;n C. Solo permite tener funciones lambda no vinculadas y sin captura. Por ejemplo, no puede usar una variable local de la funci&amp;oacute;n. Solo podemos utilizar declaraciones visibles globalmente. Lanzar excepciones desde una &lt;code&gt;staticCFunction{..}&lt;/code&gt; terminar&amp;aacute; en efectos secundarios no deterministas. Es vital asegurarse de no lanzar excepciones repentinas.</target>
        </trans-unit>
        <trans-unit id="6d750a9144d219b73169d8ec8ee3282a5ce16530" translate="yes" xml:space="preserve">
          <source>We use the condition in the Gradle script to select the target platform for the framework. It is either &lt;code&gt;iOS arm64&lt;/code&gt; or &lt;code&gt;iOS x86_64&lt;/code&gt; depending on environment variables.</source>
          <target state="translated">Usamos la condici&amp;oacute;n en el script de Gradle para seleccionar la plataforma de destino para el marco. Es &lt;code&gt;iOS arm64&lt;/code&gt; o &lt;code&gt;iOS x86_64&lt;/code&gt; dependiendo de las variables de entorno.</target>
        </trans-unit>
        <trans-unit id="87ead7e377be828bc8f924111dcab22679cf1455" translate="yes" xml:space="preserve">
          <source>We use the extension property &lt;code&gt;ptr&lt;/code&gt; which comes from &lt;code&gt;memScoped&lt;/code&gt; lambda receiver type to turn &lt;code&gt;MyStruct&lt;/code&gt; and &lt;code&gt;MyUnion&lt;/code&gt; instances into native pointers. Those pointers are only valid inside the &lt;code&gt;memScoped&lt;/code&gt; block.</source>
          <target state="translated">Usamos la propiedad de extensi&amp;oacute;n &lt;code&gt;ptr&lt;/code&gt; que proviene del tipo de receptor lambda &lt;code&gt;memScoped&lt;/code&gt; para convertir las instancias de &lt;code&gt;MyStruct&lt;/code&gt; y &lt;code&gt;MyUnion&lt;/code&gt; en punteros nativos. Esos punteros solo son v&amp;aacute;lidos dentro del bloque &lt;code&gt;memScoped&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d19fb9c3674e9e7d03350ce663d175de7004c2d" translate="yes" xml:space="preserve">
          <source>We will be using &lt;a href=&quot;https://developer.android.com/studio/&quot;&gt;Android Studio&lt;/a&gt; for the Android part of the tutorial. It is also possible to use &lt;a href=&quot;https://jetbrains.com/idea&quot;&gt;IntelliJ IDEA&lt;/a&gt; Community or Ultimate edition.</source>
          <target state="translated">Usaremos &lt;a href=&quot;https://developer.android.com/studio/&quot;&gt;Android Studio&lt;/a&gt; para la parte de Android del tutorial. Tambi&amp;eacute;n es posible utilizar &lt;a href=&quot;https://jetbrains.com/idea&quot;&gt;IntelliJ IDEA&lt;/a&gt; Community o Ultimate Edition.</target>
        </trans-unit>
        <trans-unit id="495de00f60f65274c47ffb67586fe526a49cb4f3" translate="yes" xml:space="preserve">
          <source>We will be using IntelliJ IDEA Community Edition for the example. You need to make sure you have the latest version of the Kotlin plugin installed, 1.3.x or newer. We select &lt;em&gt;File | New | Project&lt;/em&gt;, select &lt;em&gt;Kotlin | Kotlin (Multiplatform Library)&lt;/em&gt; and configure the project in the way we want.</source>
          <target state="translated">Usaremos IntelliJ IDEA Community Edition para el ejemplo. Debe asegurarse de tener instalada la &amp;uacute;ltima versi&amp;oacute;n del complemento de Kotlin, 1.3.xo m&amp;aacute;s reciente. Seleccionamos &lt;em&gt;Archivo | Nuevo | Proyecto&lt;/em&gt; , seleccione &lt;em&gt;Kotlin | Kotlin (Biblioteca Multiplataforma)&lt;/em&gt; y configuramos el proyecto de la forma que queramos.</target>
        </trans-unit>
        <trans-unit id="9c7906ddfb7d83aa5b930b2241b862ba86c46dd5" translate="yes" xml:space="preserve">
          <source>We will be using IntelliJ IDEA Community Edition for this tutorial, though using Ultimate edition is possible as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240e26cd69c673ca5063d1fec6c288458947715f" translate="yes" xml:space="preserve">
          <source>We will be using IntelliJ IDEA Community Edition for this tutorial, though using Ultimate edition is possible as well. The Kotlin plugin 1.3.x or higher should be installed in the IDE. This can be verified via the &lt;em&gt;Language &amp;amp; Frameworks | Kotlin Updates&lt;/em&gt; section in the &lt;em&gt;Settings&lt;/em&gt; (or &lt;em&gt;Preferences&lt;/em&gt;) of the IDE. Native part of this project is written using Mac OS X, but don't worry if you are using another platform, the platform affects only directory names in this particular tutorial.</source>
          <target state="translated">Usaremos IntelliJ IDEA Community Edition para este tutorial, aunque tambi&amp;eacute;n es posible usar la edici&amp;oacute;n Ultimate. El complemento Kotlin 1.3.xo superior debe instalarse en el IDE. Esto se puede verificar a trav&amp;eacute;s de &lt;em&gt;Language &amp;amp; Frameworks | La&lt;/em&gt; secci&amp;oacute;n &lt;em&gt;Actualizaciones de Kotlin&lt;/em&gt; en la &lt;em&gt;Configuraci&amp;oacute;n&lt;/em&gt; (o &lt;em&gt;Preferencias&lt;/em&gt; ) del IDE. La parte nativa de este proyecto est&amp;aacute; escrita usando Mac OS X, pero no se preocupe si est&amp;aacute; usando otra plataforma, la plataforma afecta solo a los nombres de directorio en este tutorial en particular.</target>
        </trans-unit>
        <trans-unit id="a5df86530b0f4b4eea42ee317054bed9ca2a9e03" translate="yes" xml:space="preserve">
          <source>We will be using the &lt;code&gt;x64 Native Tools Command Prompt &amp;lt;VERSION&amp;gt;&lt;/code&gt; console. We'll see the shortcut to open the console in the start menu. It comes with a Microsoft Visual Studio package.</source>
          <target state="translated">Usaremos la consola &lt;code&gt;x64 Native Tools Command Prompt &amp;lt;VERSION&amp;gt;&lt;/code&gt; . Veremos el atajo para abrir la consola en el men&amp;uacute; de inicio. Viene con un paquete de Microsoft Visual Studio.</target>
        </trans-unit>
        <trans-unit id="356ae5746574838fa3924ac6e010e44bd7dc600e" translate="yes" xml:space="preserve">
          <source>We will continue exploring more C language types and their representation in Kotlin/Native in next tutorials:</source>
          <target state="translated">Continuaremos explorando m√°s tipos de lenguaje C y su representaci√≥n en Kotlin/Nativo en los pr√≥ximos tutoriales:</target>
        </trans-unit>
        <trans-unit id="d5797487ddb0eb41e5d2e9c68ced4d766fd86f98" translate="yes" xml:space="preserve">
          <source>We will continue to explore more complicated C language types and their representation in Kotlin/Native in the next tutorials:</source>
          <target state="translated">Continuaremos explorando tipos de lenguaje C m√°s complicados y su representaci√≥n en Kotlin/Nativo en los pr√≥ximos tutoriales:</target>
        </trans-unit>
        <trans-unit id="6cf9027aa102f6f0a5c64a43d077861c549d000f" translate="yes" xml:space="preserve">
          <source>We will cover this functionality with common tests and then publish the final library to Maven.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c2f2e6b1a14ab9c7e2d8312c7379c2ecdd3c02" translate="yes" xml:space="preserve">
          <source>We will create a simple Kotlin/JavaScript library.</source>
          <target state="translated">Crearemos una simple biblioteca de Kotlin/JavaScript.</target>
        </trans-unit>
        <trans-unit id="194f5ab4f85b03618fc04358b4a842a9d1306f59" translate="yes" xml:space="preserve">
          <source>We will then see something similar to this:</source>
          <target state="translated">Entonces veremos algo similar a esto:</target>
        </trans-unit>
        <trans-unit id="3a29960a39a18059d04b2735de83331640c538de" translate="yes" xml:space="preserve">
          <source>We would like to emphasize that extension functions are dispatched &lt;strong&gt;statically&lt;/strong&gt;, i.e. they are not virtual by receiver type. This means that the extension function being called is determined by the type of the expression on which the function is invoked, not by the type of the result of evaluating that expression at runtime. For example:</source>
          <target state="translated">Nos gustar&amp;iacute;a enfatizar que las funciones de extensi&amp;oacute;n se distribuyen &lt;strong&gt;est&amp;aacute;ticamente&lt;/strong&gt; , es decir, no son virtuales por tipo de receptor. Esto significa que la funci&amp;oacute;n de extensi&amp;oacute;n que se llama est&amp;aacute; determinada por el tipo de expresi&amp;oacute;n en la que se invoca la funci&amp;oacute;n, no por el tipo de resultado de evaluar esa expresi&amp;oacute;n en tiempo de ejecuci&amp;oacute;n. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b83946b87080a81db62683de18b3b00c28f7ba2c" translate="yes" xml:space="preserve">
          <source>We wouldn't know if this function would be invoked on only activities from our sources or on plain Java activities also. Because of this, we don&amp;rsquo;t use caching there, even if &lt;code&gt;MyActivity&lt;/code&gt; instance from the previous example is passed as a receiver.</source>
          <target state="translated">No sabr&amp;iacute;amos si esta funci&amp;oacute;n se invocar&amp;iacute;a solo en actividades de nuestras fuentes o tambi&amp;eacute;n en actividades simples de Java. Debido a esto, no usamos el almacenamiento en cach&amp;eacute; all&amp;iacute;, incluso si la instancia de &lt;code&gt;MyActivity&lt;/code&gt; del ejemplo anterior se pasa como receptor.</target>
        </trans-unit>
        <trans-unit id="64fbc9430739427e8ecff708c04a32c1ecf8e64f" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve added a new API to &lt;code&gt;kotlin-reflect&lt;/code&gt; that can be used to enumerate all the direct subtypes of a &lt;code&gt;sealed&lt;/code&gt; class, namely &lt;code&gt;KClass.sealedSubclasses&lt;/code&gt;.</source>
          <target state="translated">Hemos agregado una nueva API a &lt;code&gt;kotlin-reflect&lt;/code&gt; que se puede usar para enumerar todos los subtipos directos de una clase &lt;code&gt;sealed&lt;/code&gt; , a saber, &lt;code&gt;KClass.sealedSubclasses&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8104ed41ba0ad6b8cb42477062cc9a8702abbeec" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve added one more action in IntelliJ IDEA 2020.1 with Gradle 6.0 and above &amp;ndash; &lt;strong&gt;Load Script Configurations&lt;/strong&gt;, which loads changes to the script configurations without updating the whole project. This takes much less time than reimporting the whole project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40438146e777422ec29b09a135f9a4faaaaf0ee2" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve reworked how C interop libraries are built. With the new tooling, Kotlin/Native produces interop libraries up to 4 times as fast as before, and artifacts are 25% to 30% the size they used to be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280290f99293d030e512b76f98e946df19f3aa24" translate="yes" xml:space="preserve">
          <source>We'd start solving it by creating a Kotlin source file with an arbitrary name. &lt;code&gt;A.kt&lt;/code&gt; will do well. First, we need to implement a function specified in the problem statement as:</source>
          <target state="translated">Comenzar&amp;iacute;amos a resolverlo creando un archivo fuente de Kotlin con un nombre arbitrario. &lt;code&gt;A.kt&lt;/code&gt; lo har&amp;aacute; bien. Primero, necesitamos implementar una funci&amp;oacute;n especificada en la declaraci&amp;oacute;n del problema como:</target>
        </trans-unit>
        <trans-unit id="48dd517a499e14c158e9fa4782184f8188502e0f" translate="yes" xml:space="preserve">
          <source>We'll be using IntelliJ IDEA (Ultimate or Community edition). To learn how to start a new Kotlin project in IntelliJ IDEA, see the &lt;a href=&quot;getting-started&quot;&gt;Getting Started with IntellJ IDEA&lt;/a&gt; tutorial. If you are using build tools, please see the corresponding entry under &lt;a href=&quot;build-tools&quot;&gt;Build Tools&lt;/a&gt;.</source>
          <target state="translated">Usaremos IntelliJ IDEA (edici&amp;oacute;n Ultimate o Community). Para aprender c&amp;oacute;mo iniciar un nuevo proyecto de Kotlin en IntelliJ IDEA, consulte el tutorial &lt;a href=&quot;getting-started&quot;&gt;Introducci&amp;oacute;n a IntellJ IDEA&lt;/a&gt; . Si est&amp;aacute; utilizando herramientas de compilaci&amp;oacute;n, consulte la entrada correspondiente en &lt;a href=&quot;build-tools&quot;&gt;Herramientas de compilaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="13befb7a01cdbb85144f68b9efce98f561e6a626" translate="yes" xml:space="preserve">
          <source>We'll be using IntelliJ IDEA (Ultimate or Community edition). To learn how to start a new Kotlin project in IntelliJ IDEA, see the &lt;a href=&quot;jvm-get-started&quot;&gt;Getting Started with IntellJ IDEA&lt;/a&gt; tutorial. If you are using build tools, please see the corresponding entry under &lt;a href=&quot;build-tools&quot;&gt;Build Tools&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7aa73d697a63f1be8df9974161860c77d7f65f" translate="yes" xml:space="preserve">
          <source>We'll create a new Android project via &lt;em&gt;Start New Android Project&lt;/em&gt; item. If using IntelliJ IDEA, we need to select &lt;em&gt;Android&lt;/em&gt; in the left panel of the &lt;em&gt;New Project&lt;/em&gt; wizard.</source>
          <target state="translated">Crearemos un nuevo proyecto de Android a trav&amp;eacute;s del elemento &lt;em&gt;Iniciar nuevo proyecto de Android&lt;/em&gt; . Si usamos IntelliJ IDEA, debemos seleccionar &lt;em&gt;Android&lt;/em&gt; en el panel izquierdo del asistente de &lt;em&gt;Nuevo Proyecto&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="adbf109def75db2c462938914849c5eb6eed73eb" translate="yes" xml:space="preserve">
          <source>We'll learn how to:</source>
          <target state="translated">Aprenderemos a hacerlo:</target>
        </trans-unit>
        <trans-unit id="65dfa3289b9a70c638718585acaabd5931d1b082" translate="yes" xml:space="preserve">
          <source>We'll look at &lt;a href=&quot;android-frameworks#dagger&quot;&gt;Dagger&lt;/a&gt;, &lt;a href=&quot;android-frameworks#butterknife&quot;&gt;Butterknife&lt;/a&gt;, &lt;a href=&quot;android-frameworks#data-binding&quot;&gt;Data Binding&lt;/a&gt; and &lt;a href=&quot;android-frameworks#dbflow&quot;&gt;DBFlow&lt;/a&gt; (other frameworks can be set up similarly). All these frameworks work through annotation processing: you annotate the code to have the boiler-plate code generated for you. Annotations allow to hide all the verbosity and keep your code simple, and if you need to understand what actually happens at runtime, you can look at the generated code. Note that all these frameworks generate source code in Java, not Kotlin.</source>
          <target state="translated">Veremos &lt;a href=&quot;android-frameworks#dagger&quot;&gt;Dagger&lt;/a&gt; , &lt;a href=&quot;android-frameworks#butterknife&quot;&gt;Butterknife&lt;/a&gt; , &lt;a href=&quot;android-frameworks#data-binding&quot;&gt;Data Binding&lt;/a&gt; y &lt;a href=&quot;android-frameworks#dbflow&quot;&gt;DBFlow&lt;/a&gt; (se pueden configurar otros marcos de manera similar). Todos estos marcos funcionan mediante el procesamiento de anotaciones: usted anota el c&amp;oacute;digo para que se genere el c&amp;oacute;digo de la placa de caldera. Las anotaciones permiten ocultar toda la verbosidad y mantener su c&amp;oacute;digo simple, y si necesita comprender qu&amp;eacute; sucede realmente en tiempo de ejecuci&amp;oacute;n, puede mirar el c&amp;oacute;digo generado. Tenga en cuenta que todos estos marcos generan c&amp;oacute;digo fuente en Java, no en Kotlin.</target>
        </trans-unit>
        <trans-unit id="c7ac9f8cb4bffee3deae462c300ad8acc7b22566" translate="yes" xml:space="preserve">
          <source>We'll use the following &lt;code&gt;build.gradle&lt;/code&gt;&lt;code&gt;build.gradle.kts&lt;/code&gt; Gradle build file with the following contents:</source>
          <target state="translated">Usaremos el siguiente &lt;code&gt;build.gradle&lt;/code&gt; &lt;code&gt;build.gradle.kts&lt;/code&gt; build.gradle.kts Gradle con el siguiente contenido:</target>
        </trans-unit>
        <trans-unit id="35e9daf2777de53728fdd63d8121926825802dd9" translate="yes" xml:space="preserve">
          <source>We're allowed to pass a &lt;code&gt;Car&lt;/code&gt; to &lt;code&gt;boast()&lt;/code&gt; because &lt;code&gt;Car&lt;/code&gt; is a subclass of &lt;code&gt;MotorVehicle&lt;/code&gt;. We're allowed to pass a &lt;code&gt;Car&lt;/code&gt; to &lt;code&gt;ride()&lt;/code&gt; because &lt;code&gt;Car&lt;/code&gt; implements &lt;code&gt;Driveable&lt;/code&gt; (thanks to being a subclass &lt;code&gt;MotorVehicle&lt;/code&gt;). Inside &lt;code&gt;boast()&lt;/code&gt;, we're only allowed to access the members of the declared parameter type &lt;code&gt;MotorVehicle&lt;/code&gt;, even if we're in a situation where we know that it's really a &lt;code&gt;Car&lt;/code&gt; (because there could be other callers that pass a non-&lt;code&gt;Car&lt;/code&gt;). Inside &lt;code&gt;ride()&lt;/code&gt;, we're only allowed to access the members of the declared parameter type &lt;code&gt;Driveable&lt;/code&gt;. This ensures that every member lookup is safe - the compiler only allows you to pass objects that are guaranteed to have the necessary members. The downside is that you will sometimes be forced to declare &quot;unnecessary&quot; interfaces or wrapper classes in order to make a function accept instances of different classes.</source>
          <target state="translated">Se nos permite pasar un &lt;code&gt;Car&lt;/code&gt; para &lt;code&gt;boast()&lt;/code&gt; porque &lt;code&gt;Car&lt;/code&gt; es una subclase de &lt;code&gt;MotorVehicle&lt;/code&gt; . Se nos permite pasar un &lt;code&gt;Car&lt;/code&gt; to &lt;code&gt;ride()&lt;/code&gt; porque &lt;code&gt;Car&lt;/code&gt; implementa &lt;code&gt;Driveable&lt;/code&gt; (gracias a ser una subclase &lt;code&gt;MotorVehicle&lt;/code&gt; ). Dentro de &lt;code&gt;boast()&lt;/code&gt; , solo se nos permite acceder a los miembros del tipo de par&amp;aacute;metro declarado &lt;code&gt;MotorVehicle&lt;/code&gt; , incluso si estamos en una situaci&amp;oacute;n en la que sabemos que realmente es un &lt;code&gt;Car&lt;/code&gt; (porque podr&amp;iacute;a haber otros llamadores que pasen un no- &lt;code&gt;Car&lt;/code&gt; ). &lt;code&gt;ride()&lt;/code&gt; interior (), solo se nos permite acceder a los miembros del tipo de par&amp;aacute;metro declarado &lt;code&gt;Driveable&lt;/code&gt; . Esto garantiza que todas las b&amp;uacute;squedas de miembros sean seguras: el compilador solo le permite pasar objetos que tienen garantizados los miembros necesarios. La desventaja es que a veces se ver&amp;aacute; obligado a declarar interfaces o clases contenedoras &quot;innecesarias&quot; para que una funci&amp;oacute;n acepte instancias de diferentes clases.</target>
        </trans-unit>
        <trans-unit id="a12f1bb4ce7d202790746259d8059bc20b4c1c93" translate="yes" xml:space="preserve">
          <source>We're going to see how to set up TeamCity to build our Kotlin project. For more information and basics of TeamCity please check the &lt;a href=&quot;https://www.jetbrains.com/teamcity/documentation/&quot;&gt;Documentation page&lt;/a&gt; which contains information about installation, basic configuration, etc.</source>
          <target state="translated">Veremos c&amp;oacute;mo configurar TeamCity para construir nuestro proyecto Kotlin. Para obtener m&amp;aacute;s informaci&amp;oacute;n y los conceptos b&amp;aacute;sicos de TeamCity, consulte la &lt;a href=&quot;https://www.jetbrains.com/teamcity/documentation/&quot;&gt;p&amp;aacute;gina de documentaci&amp;oacute;n&lt;/a&gt; que contiene informaci&amp;oacute;n sobre la instalaci&amp;oacute;n, la configuraci&amp;oacute;n b&amp;aacute;sica, etc.</target>
        </trans-unit>
        <trans-unit id="dfe8cb673d9e8e417b1ac641d5d52b9b44cf3e8b" translate="yes" xml:space="preserve">
          <source>We're not going to cover the &lt;a href=&quot;../../reference/control-flow#when-expression&quot;&gt;&lt;code&gt;when&lt;/code&gt; expression&lt;/a&gt; in depth here since it doesn't have a close equivalent in Python, but check it out - it's pretty nifty, as it lets you compare one expression against many kinds of expressions in a very compact way (but it's not a full functional-programming-style pattern matcher). For example:</source>
          <target state="translated">No vamos a cubrir la &lt;a href=&quot;../../reference/control-flow#when-expression&quot;&gt;expresi&amp;oacute;n &lt;/a&gt; &lt;code&gt;when&lt;/code&gt; en profundidad aqu&amp;iacute;, ya que no tiene un equivalente cercano en Python, pero compru&amp;eacute;balo, es bastante ingenioso, ya que te permite comparar una expresi&amp;oacute;n con muchos tipos de expresiones en un formato muy compacto. manera (pero no es un comparador de patrones de estilo de programaci&amp;oacute;n funcional completo). Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="859b2e88a4b107551034ec5b70f0408cd92fac5e" translate="yes" xml:space="preserve">
          <source>We've also added the &lt;code&gt;ArrayDeque&lt;/code&gt; class &amp;ndash; an implementation of a double-ended queue. Double-ended queue lets you can add or remove elements both at the beginning and the end of the queue in an amortized constant time. You can use a double-ended queue by default when you need a queue or a stack in your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6d4821c53a1c0b88e02c8ce15a60335e60fc0a" translate="yes" xml:space="preserve">
          <source>We've converted the ButterKnife &lt;a href=&quot;https://github.com/JakeWharton/butterknife/tree/master/sample/app/src/main/java/com/example&quot;&gt;sample&lt;/a&gt; to Kotlin. The resulting code can be found &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples/tree/master/gradle/android-butterknife&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Hemos convertido la &lt;a href=&quot;https://github.com/JakeWharton/butterknife/tree/master/sample/app/src/main/java/com/example&quot;&gt;muestra de&lt;/a&gt; ButterKnife a Kotlin. El c&amp;oacute;digo resultante se puede encontrar &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples/tree/master/gradle/android-butterknife&quot;&gt;aqu&amp;iacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="30d2a23216aee2ca42dc00c09139bd8bf210d9fc" translate="yes" xml:space="preserve">
          <source>We've deprecated the &lt;code&gt;contains()&lt;/code&gt;, &lt;code&gt;indexOf()&lt;/code&gt;, and &lt;code&gt;lastIndexOf()&lt;/code&gt; extension functions of &lt;code&gt;FloatArray&lt;/code&gt; and &lt;code&gt;DoubleArray&lt;/code&gt; because they use the &lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_754&quot;&gt;IEEE 754&lt;/a&gt; standard equality, which contradicts the total order equality in some corner cases. See &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-28753&quot;&gt;this issue&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9565458367bc75e7700ec47534de831e4a66b878" translate="yes" xml:space="preserve">
          <source>We've deprecated the &lt;code&gt;min()&lt;/code&gt; and &lt;code&gt;max()&lt;/code&gt; collection functions in favor of &lt;code&gt;minOrNull()&lt;/code&gt; and &lt;code&gt;maxOrNull()&lt;/code&gt;, which more properly reflect their behavior &amp;ndash; returning &lt;code&gt;null&lt;/code&gt; on empty collections. See &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-38854&quot;&gt;this issue&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215b5a7efdc1c89ee7092df264b96d7d1f704519" translate="yes" xml:space="preserve">
          <source>We've deprecated the functions &lt;code&gt;toShort()&lt;/code&gt; and &lt;code&gt;toByte()&lt;/code&gt; on &lt;code&gt;Double&lt;/code&gt; and &lt;code&gt;Float&lt;/code&gt; because they could lead to unexpected results because of the narrow value range and smaller variable size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c686dd7fee7d596ed3150966a1df858b5684ea" translate="yes" xml:space="preserve">
          <source>We've now seen all the definitions and it is time to fix the code. Let's run the &lt;code&gt;runDebugExecutableNative&lt;/code&gt; Gradle task &lt;a href=&quot;basic-kotlin-native-app#run-in-ide&quot;&gt;in the IDE&lt;/a&gt; or use the following command to run the code:</source>
          <target state="translated">Ahora hemos visto todas las definiciones y es hora de corregir el c&amp;oacute;digo. Vamos a ejecutar el &lt;code&gt;runDebugExecutableNative&lt;/code&gt; tarea Gradle &lt;a href=&quot;basic-kotlin-native-app#run-in-ide&quot;&gt;en el IDE&lt;/a&gt; o utilizar el siguiente comando para ejecutar el c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="7303eeb28a81c2ad71ddaf7a7ef26c96a5d46db5" translate="yes" xml:space="preserve">
          <source>We've now seen all the definitions and it is time to fix the code. Let's run the &lt;code&gt;runDebugExecutableNative&lt;/code&gt; Gradle task &lt;a href=&quot;using-intellij-idea&quot;&gt;in the IDE&lt;/a&gt; or use the following command to run the code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8159d531b6661d9ca1d3ee3cd78cdb26173e7e20" translate="yes" xml:space="preserve">
          <source>We've seen all definitions and it is the time to fix the code. Let's run the &lt;code&gt;runDebugExecutableNative&lt;/code&gt; Gradle task &lt;a href=&quot;basic-kotlin-native-app#run-in-ide&quot;&gt;in IDE&lt;/a&gt; or use the following command to run the code:</source>
          <target state="translated">Hemos visto todas las definiciones y es el momento de arreglar el c&amp;oacute;digo. Vamos a ejecutar el &lt;code&gt;runDebugExecutableNative&lt;/code&gt; tarea Gradle &lt;a href=&quot;basic-kotlin-native-app#run-in-ide&quot;&gt;en IDE&lt;/a&gt; o utilizar el siguiente comando para ejecutar el c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="5060dcbe8547bb3d7e1fb6bf0d1175fce384646a" translate="yes" xml:space="preserve">
          <source>We've seen all definitions and it is the time to fix the code. Let's run the &lt;code&gt;runDebugExecutableNative&lt;/code&gt; Gradle task &lt;a href=&quot;using-intellij-idea&quot;&gt;in IDE&lt;/a&gt; or use the following command to run the code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d875c328d56b6ba3de658fff30f901e7a7dadd62" translate="yes" xml:space="preserve">
          <source>We've seen all definitions and it is time to fix and run the code. Let's run the &lt;code&gt;runDebugExecutableNative&lt;/code&gt; Gradle task &lt;a href=&quot;basic-kotlin-native-app#run-in-ide&quot;&gt;in the IDE&lt;/a&gt; or use the following command to run the code:</source>
          <target state="translated">Hemos visto todas las definiciones y es hora de corregir y ejecutar el c&amp;oacute;digo. Vamos a ejecutar el &lt;code&gt;runDebugExecutableNative&lt;/code&gt; tarea Gradle &lt;a href=&quot;basic-kotlin-native-app#run-in-ide&quot;&gt;en el IDE&lt;/a&gt; o utilizar el siguiente comando para ejecutar el c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="6a79043503070152826fab6d2dc8528967704ffa" translate="yes" xml:space="preserve">
          <source>We've seen all definitions and it is time to fix and run the code. Let's run the &lt;code&gt;runDebugExecutableNative&lt;/code&gt; Gradle task &lt;a href=&quot;using-intellij-idea&quot;&gt;in the IDE&lt;/a&gt; or use the following command to run the code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a792d756a38347597c27360412bb8f8fa517b753" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;AN&quot; in the Unicode specification.</source>
          <target state="translated">D√©bil tipo de car√°cter bidireccional &quot;AN&quot; en la especificaci√≥n de Unicode.</target>
        </trans-unit>
        <trans-unit id="24dbecca4697c39dcb12d83d3e21e053a4fbf4ac" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;BN&quot; in the Unicode specification.</source>
          <target state="translated">D√©bil tipo de car√°cter bidireccional &quot;BN&quot; en la especificaci√≥n de Unicode.</target>
        </trans-unit>
        <trans-unit id="b592dbfa74287749b5b330052c7e3f462ec0a974" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;CS&quot; in the Unicode specification.</source>
          <target state="translated">D√©bil tipo de car√°cter bidireccional &quot;CS&quot; en la especificaci√≥n de Unicode.</target>
        </trans-unit>
        <trans-unit id="d484194528c4965d5cfe46ac4072c437b4f7364f" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;EN&quot; in the Unicode specification.</source>
          <target state="translated">D√©bil tipo de car√°cter bidireccional &quot;EN&quot; en la especificaci√≥n de Unicode.</target>
        </trans-unit>
        <trans-unit id="73f96fcc50384aeb2e177d07991c8003c66a6753" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;ES&quot; in the Unicode specification.</source>
          <target state="translated">D√©bil tipo de car√°cter bidireccional &quot;ES&quot; en la especificaci√≥n de Unicode.</target>
        </trans-unit>
        <trans-unit id="818ef5444e8d72a94e14f04b5d6b122d1830655b" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;ET&quot; in the Unicode specification.</source>
          <target state="translated">D√©bil tipo de personaje bidireccional &quot;ET&quot; en la especificaci√≥n de Unicode.</target>
        </trans-unit>
        <trans-unit id="34c6763955af9013896491090181dbcd5a8dd74c" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;NSM&quot; in the Unicode specification.</source>
          <target state="translated">D√©bil tipo de car√°cter bidireccional &quot;NSM&quot; en la especificaci√≥n de Unicode.</target>
        </trans-unit>
        <trans-unit id="956c2a4c465d4b08d54fa1ddb34419c1810351ef" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;PDF&quot; in the Unicode specification.</source>
          <target state="translated">D√©bil tipo de car√°cter bidireccional &quot;PDF&quot; en la especificaci√≥n de Unicode.</target>
        </trans-unit>
        <trans-unit id="5ea903ebda4f9f28f642d78e916dc09051395c95" translate="yes" xml:space="preserve">
          <source>WeakReference</source>
          <target state="translated">WeakReference</target>
        </trans-unit>
        <trans-unit id="051061c35dede06e751f127657cfd8dabc9b47ce" translate="yes" xml:space="preserve">
          <source>WebAssembly</source>
          <target state="translated">WebAssembly</target>
        </trans-unit>
        <trans-unit id="10cf3089a5d1b6f0fd308ab8ea55feb903fcea98" translate="yes" xml:space="preserve">
          <source>WebAssembly (wasm32)</source>
          <target state="translated">WebAssembly (wasm32)</target>
        </trans-unit>
        <trans-unit id="54a290ccb466e5479f81f8b2a84a8c409c89300b" translate="yes" xml:space="preserve">
          <source>WebGLActiveInfo</source>
          <target state="translated">WebGLActiveInfo</target>
        </trans-unit>
        <trans-unit id="e6b73caf842064140299b1ca0b4460e6e2d7b8db" translate="yes" xml:space="preserve">
          <source>WebGLContextAttributes</source>
          <target state="translated">WebGLContextAttributes</target>
        </trans-unit>
        <trans-unit id="4270da2ffdc4cd7b0f031d7be5d3da6756d9f418" translate="yes" xml:space="preserve">
          <source>WebGLContextEventInit</source>
          <target state="translated">WebGLContextEventInit</target>
        </trans-unit>
        <trans-unit id="40e776dc5c04c24ed694e56559baff72c6650985" translate="yes" xml:space="preserve">
          <source>WebGLObject</source>
          <target state="translated">WebGLObject</target>
        </trans-unit>
        <trans-unit id="21ae6cd2acfef9ca69acf1201e1d6a74d9cbc06a" translate="yes" xml:space="preserve">
          <source>WebGLRenderingContext</source>
          <target state="translated">WebGLRenderingContext</target>
        </trans-unit>
        <trans-unit id="4801b56eb1b5d686e9a1febe6821b4d7326421a2" translate="yes" xml:space="preserve">
          <source>WebGLRenderingContextBase</source>
          <target state="translated">WebGLRenderingContextBase</target>
        </trans-unit>
        <trans-unit id="5484abb27b9c8304c0334e77ca1817b8faf244f4" translate="yes" xml:space="preserve">
          <source>WebGLShaderPrecisionFormat</source>
          <target state="translated">WebGLShaderPrecisionFormat</target>
        </trans-unit>
        <trans-unit id="598b5bbd37e1ce6914df736dcaf0620916e3e37e" translate="yes" xml:space="preserve">
          <source>WebGLUniformLocation</source>
          <target state="translated">WebGLUniformLocation</target>
        </trans-unit>
        <trans-unit id="3a3301048780c886766fd5f9fc46f7ed9edce741" translate="yes" xml:space="preserve">
          <source>Webpack provides two different &quot;flavors&quot; of CommonJS, &lt;code&gt;commonjs&lt;/code&gt; and &lt;code&gt;commonjs2&lt;/code&gt;, which affect the way your declarations are made available. While in most cases, you probably want &lt;code&gt;commonjs2&lt;/code&gt;, which adds the &lt;code&gt;module.exports&lt;/code&gt; syntax to the generated library, you can also opt for the &quot;pure&quot; &lt;code&gt;commonjs&lt;/code&gt; option, which implements the CommonJS specification exactly. To learn more about the difference between &lt;code&gt;commonjs&lt;/code&gt; and &lt;code&gt;commonjs2&lt;/code&gt;, check &lt;a href=&quot;https://github.com/webpack/webpack/issues/1114&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee12f5d174e362fdee2c3d0937fed7a0a0418b29" translate="yes" xml:space="preserve">
          <source>What IDEs support Kotlin?</source>
          <target state="translated">¬øQu√© IDEs apoyan a Kotlin?</target>
        </trans-unit>
        <trans-unit id="f19e03186b38de86427a604326b5e20ce36b16e0" translate="yes" xml:space="preserve">
          <source>What Java has that Kotlin does not</source>
          <target state="translated">Lo que tiene Java que Kotlin no tiene</target>
        </trans-unit>
        <trans-unit id="7c25e3810f499ecbecfd573d100c2992ec85dfee" translate="yes" xml:space="preserve">
          <source>What Kotlin has that Java does not</source>
          <target state="translated">Lo que Kotlin tiene que Java no</target>
        </trans-unit>
        <trans-unit id="a0618cd665f03aa3f49f142cd97a9d8c33d6f6d0" translate="yes" xml:space="preserve">
          <source>What advantages does Kotlin give me over the Java programming language?</source>
          <target state="translated">¬øQu√© ventajas me da Kotlin sobre el lenguaje de programaci√≥n Java?</target>
        </trans-unit>
        <trans-unit id="2ec574e0a3bc1f92310ec6597730108793dbab22" translate="yes" xml:space="preserve">
          <source>What are we building?</source>
          <target state="translated">¬øQu√© estamos construyendo?</target>
        </trans-unit>
        <trans-unit id="54d0e194d6d22dc2c5cc598434a07c74290a1df0" translate="yes" xml:space="preserve">
          <source>What build tools support Kotlin?</source>
          <target state="translated">¬øQu√© herramientas de construcci√≥n apoyan a Kotlin?</target>
        </trans-unit>
        <trans-unit id="b663cb1b85b44f2ed22f76f75c249fd71cd30ee5" translate="yes" xml:space="preserve">
          <source>What can I use Kotlin for?</source>
          <target state="translated">¬øPara qu√© puedo usar Kotlin?</target>
        </trans-unit>
        <trans-unit id="1c253aa8f7093e6c010267944ec10ed903d9b3d6" translate="yes" xml:space="preserve">
          <source>What companies are using Kotlin?</source>
          <target state="translated">¬øQu√© compa√±√≠as est√°n usando Kotlin?</target>
        </trans-unit>
        <trans-unit id="05e8ab4ca375bf042d9384276202b934420c2059" translate="yes" xml:space="preserve">
          <source>What do we do if need to invoke them &lt;em&gt;sequentially&lt;/em&gt; &amp;ndash; first &lt;code&gt;doSomethingUsefulOne&lt;/code&gt;&lt;em&gt;and then&lt;/em&gt;&lt;code&gt;doSomethingUsefulTwo&lt;/code&gt; and compute the sum of their results? In practice we do this if we use the results of the first function to make a decision on whether we need to invoke the second one or to decide on how to invoke it.</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; hacemos si necesitamos invocarlos &lt;em&gt;secuencialmente&lt;/em&gt; - primero &lt;code&gt;doSomethingUsefulOne&lt;/code&gt; &lt;em&gt;y luego &lt;/em&gt; &lt;code&gt;doSomethingUsefulTwo&lt;/code&gt; y calcular la suma de sus resultados? En la pr&amp;aacute;ctica, hacemos esto si usamos los resultados de la primera funci&amp;oacute;n para tomar una decisi&amp;oacute;n sobre si necesitamos invocar la segunda o decidir c&amp;oacute;mo invocarla.</target>
        </trans-unit>
        <trans-unit id="ec5e65d31d420634cb6bd22727661d2a91c1e71b" translate="yes" xml:space="preserve">
          <source>What do we do if we need them to be invoked &lt;em&gt;sequentially&lt;/em&gt; &amp;mdash; first &lt;code&gt;doSomethingUsefulOne&lt;/code&gt;&lt;em&gt;and then&lt;/em&gt;&lt;code&gt;doSomethingUsefulTwo&lt;/code&gt;, and compute the sum of their results? In practice we do this if we use the result of the first function to make a decision on whether we need to invoke the second one or to decide on how to invoke it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75dc4fbbde8bc3398e1fc23b66dca3f704f50fe" translate="yes" xml:space="preserve">
          <source>What does Kotlin compile down to?</source>
          <target state="translated">¬øA qu√© se reduce Kotlin?</target>
        </trans-unit>
        <trans-unit id="cbc1b72459c6cd091c4b5fc250725f50ac98c379" translate="yes" xml:space="preserve">
          <source>What does it print at the end? It is highly unlikely to ever print &quot;Counter = 100000&quot;, because a hundred coroutines increment the &lt;code&gt;counter&lt;/code&gt; concurrently from multiple threads without any synchronization.</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; imprime al final? Es muy poco probable que alguna vez se imprima &quot;Contador = 100000&quot;, porque cien corrutinas incrementan el &lt;code&gt;counter&lt;/code&gt; simult&amp;aacute;neamente desde m&amp;uacute;ltiples subprocesos sin ninguna sincronizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="18807a12b7e25a451e442847837857201bfc7505" translate="yes" xml:space="preserve">
          <source>What does this signature say? It says that every time I append a string to something (a &lt;code&gt;StringBuilder&lt;/code&gt;, some kind of a log, a console, etc.) I have to catch those &lt;code&gt;IOExceptions&lt;/code&gt;. Why? Because it might be performing IO (&lt;code&gt;Writer&lt;/code&gt; also implements &lt;code&gt;Appendable&lt;/code&gt;)&amp;hellip; So it results in this kind of code all over the place:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f65d1bc84288a4305aabbbfaad8cd7fe25a6b3d" translate="yes" xml:space="preserve">
          <source>What does this signature say? It says that every time I append a string to something (a &lt;code&gt;StringBuilder&lt;/code&gt;, some kind of a log, a console, etc.) I have to catch those &lt;code&gt;IOExceptions&lt;/code&gt;. Why? Because it might be performing IO (&lt;code&gt;Writer&lt;/code&gt; also implements &lt;code&gt;Appendable&lt;/code&gt;)&amp;hellip; So it results into this kind of code all over the place:</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; dice esta firma? Dice que cada vez que agrego una cadena a algo (un &lt;code&gt;StringBuilder&lt;/code&gt; , alg&amp;uacute;n tipo de registro, una consola, etc.) tengo que capturar esas &lt;code&gt;IOExceptions&lt;/code&gt; . &amp;iquest;Por qu&amp;eacute;? Porque podr&amp;iacute;a estar realizando IO ( &lt;code&gt;Writer&lt;/code&gt; tambi&amp;eacute;n implementa &lt;code&gt;Appendable&lt;/code&gt; ) ... Entonces resulta en este tipo de c&amp;oacute;digo por todas partes:</target>
        </trans-unit>
        <trans-unit id="683b8d36e158b49d7282ac38785e02d0ec00e146" translate="yes" xml:space="preserve">
          <source>What happens if multiple children of a coroutine throw an exception? The general rule is &quot;the first exception wins&quot;, so the first thrown exception is exposed to the handler. But that may cause lost exceptions, for example if coroutine throws an exception in its &lt;code&gt;finally&lt;/code&gt; block. So, additional exceptions are suppressed.</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; sucede si varios hijos de una corrutina lanzan una excepci&amp;oacute;n? La regla general es &quot;la primera excepci&amp;oacute;n gana&quot;, por lo que la primera excepci&amp;oacute;n lanzada se expone al controlador. Pero eso puede causar excepciones perdidas, por ejemplo, si coroutine arroja una excepci&amp;oacute;n en su bloque &lt;code&gt;finally&lt;/code&gt; . Por tanto, se suprimen las excepciones adicionales.</target>
        </trans-unit>
        <trans-unit id="365b6a79e0879610a6d21849bc8cc5cf6d51d197" translate="yes" xml:space="preserve">
          <source>What has happened here is called &lt;strong&gt;type projection&lt;/strong&gt;: we said that &lt;code&gt;from&lt;/code&gt; is not simply an array, but a restricted (&lt;strong&gt;projected&lt;/strong&gt;) one: we can only call those methods that return the type parameter &lt;code&gt;T&lt;/code&gt;, in this case it means that we can only call &lt;code&gt;get()&lt;/code&gt;. This is our approach to &lt;strong&gt;use-site variance&lt;/strong&gt;, and corresponds to Java's &lt;code&gt;Array&amp;lt;? extends Object&amp;gt;&lt;/code&gt;, but in a slightly simpler way.</source>
          <target state="translated">Lo que ha sucedido aqu&amp;iacute; se llama &lt;strong&gt;proyecci&amp;oacute;n de tipo&lt;/strong&gt; : dijimos que &lt;code&gt;from&lt;/code&gt; no es simplemente una matriz, sino una restringida ( &lt;strong&gt;proyectada&lt;/strong&gt; ): solo podemos llamar a aquellos m&amp;eacute;todos que devuelven el par&amp;aacute;metro de tipo &lt;code&gt;T&lt;/code&gt; , en este caso significa que solo podemos llamar &lt;code&gt;get()&lt;/code&gt; . Este es nuestro enfoque de la &lt;strong&gt;varianza del sitio de uso&lt;/strong&gt; y corresponde a &lt;code&gt;Array&amp;lt;? extends Object&amp;gt;&lt;/code&gt; , pero de una manera un poco m&amp;aacute;s simple.</target>
        </trans-unit>
        <trans-unit id="77aa02de8be96f4d1a2d486916d80f88707bf2e0" translate="yes" xml:space="preserve">
          <source>What if there are no dependencies between invocation of &lt;code&gt;doSomethingUsefulOne&lt;/code&gt; and &lt;code&gt;doSomethingUsefulTwo&lt;/code&gt; and we want to get the answer faster, by doing both &lt;em&gt;concurrently&lt;/em&gt;? This is where &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html&quot;&gt;async&lt;/a&gt; comes to help.</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; pasa si no hay dependencias entre la invocaci&amp;oacute;n de &lt;code&gt;doSomethingUsefulOne&lt;/code&gt; y &lt;code&gt;doSomethingUsefulTwo&lt;/code&gt; y queremos obtener la respuesta m&amp;aacute;s r&amp;aacute;pido, haciendo ambas cosas al &lt;em&gt;mismo tiempo&lt;/em&gt; ? Aqu&amp;iacute; es donde &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html&quot;&gt;async&lt;/a&gt; viene a ayudar.</target>
        </trans-unit>
        <trans-unit id="6a9d26c1d8e7803f441abc75ddaa9a3cb6ee5810" translate="yes" xml:space="preserve">
          <source>What if there are no dependencies between invocations of &lt;code&gt;doSomethingUsefulOne&lt;/code&gt; and &lt;code&gt;doSomethingUsefulTwo&lt;/code&gt; and we want to get the answer faster, by doing both &lt;em&gt;concurrently&lt;/em&gt;? This is where &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html&quot;&gt;async&lt;/a&gt; comes to help.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c61df73a1cd1792c66d92381a767d6d084db44" translate="yes" xml:space="preserve">
          <source>What is Kotlin?</source>
          <target state="translated">¬øQu√© es Kotlin?</target>
        </trans-unit>
        <trans-unit id="9c97b9a8111f68ce8c52dfe8c2a3959e4d0cfd92" translate="yes" xml:space="preserve">
          <source>What is the current version of Kotlin?</source>
          <target state="translated">¬øCu√°l es la versi√≥n actual de Kotlin?</target>
        </trans-unit>
        <trans-unit id="72b9dc537736b5c80161df96b96d566c2340d8ed" translate="yes" xml:space="preserve">
          <source>What types do we have in the C language? Let's first list all of them. I have used the &lt;a href=&quot;https://en.wikipedia.org/wiki/C_data_types&quot;&gt;C data types&lt;/a&gt; article from Wikipedia as a basis. There are following types in the C programming language:</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; tipos tenemos en el lenguaje C? Primero enumeremos todos ellos. He utilizado el art&amp;iacute;culo de &lt;a href=&quot;https://en.wikipedia.org/wiki/C_data_types&quot;&gt;tipos de datos C&lt;/a&gt; de Wikipedia como base. Existen los siguientes tipos en el lenguaje de programaci&amp;oacute;n C:</target>
        </trans-unit>
        <trans-unit id="b3a3d061e51769639781e9a3b9954e0ba115ec4b" translate="yes" xml:space="preserve">
          <source>What we actually want is simply pass a type to this function, i.e. call it like this:</source>
          <target state="translated">Lo que en realidad queremos es simplemente pasar un tipo a esta funci√≥n,es decir,llamarlo as√≠:</target>
        </trans-unit>
        <trans-unit id="a50c7ef1f0fafc2256df6585bc99119f3c512a67" translate="yes" xml:space="preserve">
          <source>What&amp;#x27;s New in Kotlin 1.1</source>
          <target state="translated">Novedades de Kotlin 1.1</target>
        </trans-unit>
        <trans-unit id="9a4d9d06c26d113727033d8ae4c1b63e386642d5" translate="yes" xml:space="preserve">
          <source>What&amp;#x27;s New in Kotlin 1.2</source>
          <target state="translated">Novedades de Kotlin 1.2</target>
        </trans-unit>
        <trans-unit id="293419c5954282d33701ae5e04016a88fddb332a" translate="yes" xml:space="preserve">
          <source>What&amp;#x27;s New in Kotlin 1.3</source>
          <target state="translated">Novedades de Kotlin 1.3</target>
        </trans-unit>
        <trans-unit id="9389cd373bffcc015f87751d1dc27567fa32b8ba" translate="yes" xml:space="preserve">
          <source>What's New in Kotlin 1.1</source>
          <target state="translated">¬øQu√© hay de nuevo en Kotlin 1.1?</target>
        </trans-unit>
        <trans-unit id="39982142e8f2af3375fc2ff57e8c12a82c314d40" translate="yes" xml:space="preserve">
          <source>What's New in Kotlin 1.2</source>
          <target state="translated">¬øQu√© hay de nuevo en Kotlin 1.2?</target>
        </trans-unit>
        <trans-unit id="215e0c6f310ade62568bdc051de3a2c9b6801880" translate="yes" xml:space="preserve">
          <source>What's New in Kotlin 1.3</source>
          <target state="translated">¬øQu√© hay de nuevo en Kotlin 1.3?</target>
        </trans-unit>
        <trans-unit id="5d9f851e585b75f9f88496923e3d47ca44295647" translate="yes" xml:space="preserve">
          <source>What's New in Kotlin 1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4b36bc57457b9920995102b0eb6da42363fb68" translate="yes" xml:space="preserve">
          <source>What's next?</source>
          <target state="translated">¬øQu√© es lo siguiente?</target>
        </trans-unit>
        <trans-unit id="18389155bba5ed3245c0f065f5a1c5b22a9f917a" translate="yes" xml:space="preserve">
          <source>Whatever way you choose to solve koans, you can see the solution for each task: in the online version click on &quot;Show answer&quot;, inside EduTools plugin choose &quot;Peek solution&quot;. We recommend checking the solution after you implement the task to compare your solution with the proposed one. Make sure you don't cheat!</source>
          <target state="translated">Sea cual sea la forma en que elija para resolver koanes,puede ver la soluci√≥n para cada tarea:en la versi√≥n online haga clic en &quot;Mostrar respuesta&quot;,dentro del plugin de EduTools elija &quot;Peek solution&quot;.Recomendamos revisar la soluci√≥n despu√©s de implementar la tarea para comparar su soluci√≥n con la propuesta.Aseg√∫rese de no hacer trampa!</target>
        </trans-unit>
        <trans-unit id="00a0667e561fb370ec041d741f3ea97adc25dc28" translate="yes" xml:space="preserve">
          <source>WheelEventInit</source>
          <target state="translated">WheelEventInit</target>
        </trans-unit>
        <trans-unit id="e3117f509259d5d29ab1ad441436b902cca8f031" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Int%29%2Foverwrite&quot;&gt;overwrite&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; and &lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Int%29%2Ftarget&quot;&gt;target&lt;/a&gt; is a directory, it is replaced only if it is empty.</source>
          <target state="translated">Cuando &lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Int%29%2Foverwrite&quot;&gt;sobrescribir&lt;/a&gt; es &lt;code&gt;true&lt;/code&gt; y el &lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Int%29%2Ftarget&quot;&gt;destino&lt;/a&gt; es un directorio, se reemplaza solo si est&amp;aacute; vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="f0d8a684192ba53b6aed7c801b9b7ef648714954" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;copy-to#kotlin.io%24copyTo(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Int)/overwrite&quot;&gt;overwrite&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; and &lt;a href=&quot;copy-to#kotlin.io%24copyTo(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Int)/target&quot;&gt;target&lt;/a&gt; is a directory, it is replaced only if it is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d29ca92f5092a739732a54c47f3da4e556b36a7" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;mpp-create-lib&quot;&gt;creating a project with the Project Wizard&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f50fe0838c0d3908e85b9819f34dd2e3eeee8c8" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;launch { ... }&lt;/code&gt; is used without parameters, it inherits the context (and thus dispatcher) from the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScope&lt;/a&gt; it is being launched from. In this case, it inherits the context of the main &lt;code&gt;runBlocking&lt;/code&gt; coroutine which runs in the &lt;code&gt;main&lt;/code&gt; thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44dcaec5d16f5bf398df957b0d47d8f09a80f320" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;launch { ... }&lt;/code&gt; is used without parameters, it inherits the context (and thus dispatcher) from the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScope&lt;/a&gt; that it is being launched from. In this case, it inherits the context of the main &lt;code&gt;runBlocking&lt;/code&gt; coroutine which runs in the &lt;code&gt;main&lt;/code&gt; thread.</source>
          <target state="translated">Cuando se usa &lt;code&gt;launch { ... }&lt;/code&gt; sin par&amp;aacute;metros, hereda el contexto (y por lo tanto el dispatcher) del &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScope&lt;/a&gt; desde el que se est&amp;aacute; lanzando. En este caso, hereda el contexto de la &lt;code&gt;runBlocking&lt;/code&gt; principal runBlocking que se ejecuta en el hilo &lt;code&gt;main&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a67ed24b676d6021025f2b0f67bd9c35fd94aa47" translate="yes" xml:space="preserve">
          <source>When Expression</source>
          <target state="translated">Cuando la expresi√≥n</target>
        </trans-unit>
        <trans-unit id="e8a56a195bc479e7e07a6420a30ef594182bfdc7" translate="yes" xml:space="preserve">
          <source>When Java types are imported into Kotlin, all the references of the type &lt;code&gt;java.lang.Object&lt;/code&gt; are turned into &lt;code&gt;Any&lt;/code&gt;. Since &lt;code&gt;Any&lt;/code&gt; is not platform-specific, it only declares &lt;code&gt;toString()&lt;/code&gt;, &lt;code&gt;hashCode()&lt;/code&gt; and &lt;code&gt;equals()&lt;/code&gt; as its members, so to make other members of &lt;code&gt;java.lang.Object&lt;/code&gt; available, Kotlin uses &lt;a href=&quot;extensions&quot;&gt;extension functions&lt;/a&gt;.</source>
          <target state="translated">Cuando se importan tipos de Java a Kotlin, todas las referencias del tipo &lt;code&gt;java.lang.Object&lt;/code&gt; se convierten en &lt;code&gt;Any&lt;/code&gt; . Dado que &lt;code&gt;Any&lt;/code&gt; no es espec&amp;iacute;fico de la plataforma, solo declara &lt;code&gt;toString()&lt;/code&gt; , &lt;code&gt;hashCode()&lt;/code&gt; y &lt;code&gt;equals()&lt;/code&gt; como sus miembros, por lo que para que otros miembros de &lt;code&gt;java.lang.Object&lt;/code&gt; est&amp;eacute;n disponibles, Kotlin usa &lt;a href=&quot;extensions&quot;&gt;funciones de extensi&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="de657bff6abe90a927125239467dfc7f66aa4d06" translate="yes" xml:space="preserve">
          <source>When Kotlin classes make use of &lt;a href=&quot;generics#declaration-site-variance&quot;&gt;declaration-site variance&lt;/a&gt;, there are two options of how their usages are seen from the Java code. Let's say we have the following class and two functions that use it:</source>
          <target state="translated">Cuando las clases de Kotlin hacen uso de la &lt;a href=&quot;generics#declaration-site-variance&quot;&gt;varianza del sitio&lt;/a&gt; de declaraci&amp;oacute;n , hay dos opciones de c&amp;oacute;mo se ven sus usos en el c&amp;oacute;digo Java. Digamos que tenemos la siguiente clase y dos funciones que la usan:</target>
        </trans-unit>
        <trans-unit id="752a77d62b6432105ad9d079610666a77a3a539f" translate="yes" xml:space="preserve">
          <source>When Kotlin function called from Swift/Objective-C code throws an exception which is an instance of one of the &lt;a href=&quot;exception-classes#kotlin.Throws%24exceptionClasses&quot;&gt;exceptionClasses&lt;/a&gt; or their subclasses, it is propagated as &lt;code&gt;NSError&lt;/code&gt;. Other Kotlin exceptions reaching Swift/Objective-C are considered unhandled and cause program termination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df342c27a1154aea786d8fd951c9e3bea894932" translate="yes" xml:space="preserve">
          <source>When Kotlin function called from Swift/Objective-C code throws an exception which is an instance of one of the &lt;code&gt;@Throws&lt;/code&gt;-specified classes or their subclasses, it is propagated as &lt;code&gt;NSError&lt;/code&gt;. Other Kotlin exceptions reaching Swift/Objective-C are considered unhandled and cause program termination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32316c9a35a40c6afef037fd3a597555044f54d5" translate="yes" xml:space="preserve">
          <source>When a C function takes or returns a struct / union &lt;code&gt;T&lt;/code&gt; by value, the corresponding argument type or return type is represented as &lt;code&gt;CValue&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Cuando una funci&amp;oacute;n C toma o devuelve una estructura / uni&amp;oacute;n &lt;code&gt;T&lt;/code&gt; por valor, el tipo de argumento o tipo de retorno correspondiente se representa como &lt;code&gt;CValue&amp;lt;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dbdcfd2e9efefb419f2bd9e89cb02a695c22cf07" translate="yes" xml:space="preserve">
          <source>When a big team is migrating onto a new version, it may appear in a &quot;inconsistent state&quot; at some point, when some developers have already updated, and others haven't. To prevent the former from writing and committing code that others may not be able to compile, we provide the following command line switches (also available in the IDE and &lt;a href=&quot;../using-gradle#compiler-options&quot;&gt;Gradle&lt;/a&gt;/&lt;a href=&quot;../using-maven#specifying-compiler-options&quot;&gt;Maven&lt;/a&gt;):</source>
          <target state="translated">Cuando un gran equipo est&amp;aacute; migrando a una nueva versi&amp;oacute;n, puede aparecer en un &quot;estado inconsistente&quot; en alg&amp;uacute;n momento, cuando algunos desarrolladores ya se han actualizado y otros no. Para evitar que el primero escriba y confirme c&amp;oacute;digo que otros tal vez no puedan compilar, proporcionamos los siguientes modificadores de l&amp;iacute;nea de comando (tambi&amp;eacute;n disponibles en el IDE y &lt;a href=&quot;../using-gradle#compiler-options&quot;&gt;Gradle&lt;/a&gt; / &lt;a href=&quot;../using-maven#specifying-compiler-options&quot;&gt;Maven&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="18b8e63399abd55d3bbbdde25d3e2fcb80bd3160" translate="yes" xml:space="preserve">
          <source>When a coroutine is launched in the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScope&lt;/a&gt; of another coroutine, it inherits its context via &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/coroutine-context.html&quot;&gt;CoroutineScope.coroutineContext&lt;/a&gt; and the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/index.html&quot;&gt;Job&lt;/a&gt; of the new coroutine becomes a &lt;em&gt;child&lt;/em&gt; of the parent coroutine's job. When the parent coroutine is cancelled, all its children are recursively cancelled, too.</source>
          <target state="translated">Cuando se lanza una corrutina en el &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScope&lt;/a&gt; de otra corrutina, hereda su contexto a trav&amp;eacute;s de &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/coroutine-context.html&quot;&gt;CoroutineScope.coroutineContext&lt;/a&gt; y el &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/index.html&quot;&gt;trabajo&lt;/a&gt; de la nueva corrutina se convierte en un elemento &lt;em&gt;secundario&lt;/em&gt; del trabajo de la corrutina principal. Cuando se cancela la corrutina principal, todos sus elementos secundarios tambi&amp;eacute;n se cancelan de forma recursiva.</target>
        </trans-unit>
        <trans-unit id="8b40f9ca947a81bd12ef472c030664610317efac" translate="yes" xml:space="preserve">
          <source>When a data class derived from a type that already had the &lt;code&gt;copy&lt;/code&gt; function with the same signature, the &lt;code&gt;copy&lt;/code&gt; implementation generated for the data class used the defaults from the supertype, leading to counter-intuitive behavior, or failed at runtime if there were no default parameters in the supertype.</source>
          <target state="translated">Cuando una clase de datos deriva de un tipo que ya ten&amp;iacute;a la funci&amp;oacute;n de &lt;code&gt;copy&lt;/code&gt; con la misma firma, la implementaci&amp;oacute;n de &lt;code&gt;copy&lt;/code&gt; generada para la clase de datos utiliz&amp;oacute; los valores predeterminados del supertipo, lo que provoc&amp;oacute; un comportamiento contrario a la intuici&amp;oacute;n o fall&amp;oacute; en tiempo de ejecuci&amp;oacute;n si no hab&amp;iacute;a valores predeterminados. par&amp;aacute;metros en el supertipo.</target>
        </trans-unit>
        <trans-unit id="e1f3667f48b1b3a74567f895c3f805750be29c9e" translate="yes" xml:space="preserve">
          <source>When a declaration has &lt;code&gt;@JsModule&lt;/code&gt;, you can't use it from Kotlin code when you don't compile it to a JavaScript module. Usually, developers distribute their libraries both as JavaScript modules and downloadable &lt;code&gt;.js&lt;/code&gt; files that you can copy to project's static resources and include via &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element. To tell Kotlin that it's ok to use a &lt;code&gt;@JsModule&lt;/code&gt; declaration from non-module environment, you should put &lt;code&gt;@JsNonModule&lt;/code&gt; declaration. For example, given JavaScript code:</source>
          <target state="translated">Cuando una declaraci&amp;oacute;n tiene &lt;code&gt;@JsModule&lt;/code&gt; , no puede usarla desde el c&amp;oacute;digo Kotlin cuando no la compila en un m&amp;oacute;dulo JavaScript. Por lo general, los desarrolladores distribuyen sus bibliotecas como m&amp;oacute;dulos JavaScript y archivos &lt;code&gt;.js&lt;/code&gt; descargables que puede copiar a los recursos est&amp;aacute;ticos del proyecto e incluirlos mediante el elemento &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; . Para decirle a Kotlin que est&amp;aacute; bien usar una declaraci&amp;oacute;n &lt;code&gt;@JsModule&lt;/code&gt; desde un entorno que no sea un m&amp;oacute;dulo, debe poner la declaraci&amp;oacute;n &lt;code&gt;@JsNonModule&lt;/code&gt; . Por ejemplo, dado el c&amp;oacute;digo JavaScript:</target>
        </trans-unit>
        <trans-unit id="cdc056f54b314225b42eb84b111e0f374e0f43fb" translate="yes" xml:space="preserve">
          <source>When a declaration is marked as &lt;code&gt;@JsModule&lt;/code&gt;, you can't use it from Kotlin code when you don't compile it to a JavaScript module. Usually, developers distribute their libraries both as JavaScript modules and downloadable &lt;code&gt;.js&lt;/code&gt; files that you can copy to your project's static resources and include via a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. To tell Kotlin that it's okay to use a &lt;code&gt;@JsModule&lt;/code&gt; declaration from a non-module environment, add the &lt;code&gt;@JsNonModule&lt;/code&gt; annotation. For example, consider the following JavaScript code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2a92ee663b6eefd13c4799f36aa168f8eb6c67" translate="yes" xml:space="preserve">
          <source>When a flow represents partial results of the operation or operation status updates, it may not be necessary to process each value, but instead, only most recent ones. In this case, the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/conflate.html&quot;&gt;conflate&lt;/a&gt; operator can be used to skip intermediate values when a collector is too slow to process them. Building on the previous example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06eb4fdaeb1116ee0773fa0c7742573f91abd273" translate="yes" xml:space="preserve">
          <source>When a function is called with both positional and named arguments, all the positional arguments should be placed before the first named one. For example, the call &lt;code&gt;f(1, y = 2)&lt;/code&gt; is allowed, but &lt;code&gt;f(x = 1, 2)&lt;/code&gt; is not.</source>
          <target state="translated">Cuando se llama a una funci&amp;oacute;n con argumentos posicionales y con nombre, todos los argumentos posicionales deben colocarse antes del primero nombrado. Por ejemplo, la llamada &lt;code&gt;f(1, y = 2)&lt;/code&gt; est&amp;aacute; permitida, pero &lt;code&gt;f(x = 1, 2)&lt;/code&gt; no.</target>
        </trans-unit>
        <trans-unit id="c39ba3c630d6c34d1a8dfc3a61b0e9ace62da655" translate="yes" xml:space="preserve">
          <source>When a function of an external base class is overloaded by signature, you can't override it in a derived class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0551e05b4cdcabc413ed022b08af90ba98955ec" translate="yes" xml:space="preserve">
          <source>When a function of external base class is overloaded by signature, you can't override it in a derived class.</source>
          <target state="translated">Cuando una funci√≥n de la clase base externa es sobrecargada por la firma,no se puede anular en una clase derivada.</target>
        </trans-unit>
        <trans-unit id="1cc5a0d8a7f78114a2ac1e09f9cb178d1a485871" translate="yes" xml:space="preserve">
          <source>When a function returns a single expression, the curly braces can be omitted and the body is specified after a &lt;strong&gt;=&lt;/strong&gt; symbol:</source>
          <target state="translated">Cuando una funci&amp;oacute;n devuelve una sola expresi&amp;oacute;n, se pueden omitir las llaves y el cuerpo se especifica despu&amp;eacute;s de un s&amp;iacute;mbolo &lt;strong&gt;=&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="4d60c7b0c4e08585362731f2e3c9cea8a0422110" translate="yes" xml:space="preserve">
          <source>When a variable is assigned from a safe call expression and checked for null, the smart cast is now applied to the safe call receiver as well:</source>
          <target state="translated">Cuando se asigna una variable de una expresi√≥n de llamada segura y se comprueba que es nula,el molde inteligente se aplica ahora tambi√©n al receptor de la llamada segura:</target>
        </trans-unit>
        <trans-unit id="75ac04198276b2032c15af24079f880bbc7d4548" translate="yes" xml:space="preserve">
          <source>When an abstract class implements one or more interfaces, it is not required to provide definitions of the members of its interfaces (but it can if it wants to). It must still &lt;em&gt;declare&lt;/em&gt; such members, using &lt;code&gt;abstract override&lt;/code&gt; and not providing any body for the function or property:</source>
          <target state="translated">Cuando una clase abstracta implementa una o m&amp;aacute;s interfaces, no es necesario que proporcione definiciones de los miembros de sus interfaces (pero puede hacerlo si as&amp;iacute; lo desea). A&amp;uacute;n debe &lt;em&gt;declarar&lt;/em&gt; dichos miembros, utilizando &lt;code&gt;abstract override&lt;/code&gt; y sin proporcionar ning&amp;uacute;n cuerpo para la funci&amp;oacute;n o propiedad:</target>
        </trans-unit>
        <trans-unit id="78ca79aa88621d9e1ad1b6380be2be6eed3fd311" translate="yes" xml:space="preserve">
          <source>When an equality check operands are statically known to be &lt;code&gt;Float&lt;/code&gt; or &lt;code&gt;Double&lt;/code&gt; (nullable or not), the check follows the IEEE 754 Standard for Floating-Point Arithmetic.</source>
          <target state="translated">Cuando se sabe que los operandos de verificaci&amp;oacute;n de igualdad son est&amp;aacute;ticamente &lt;code&gt;Float&lt;/code&gt; o &lt;code&gt;Double&lt;/code&gt; (que aceptan valores nulos o no), la verificaci&amp;oacute;n sigue el est&amp;aacute;ndar IEEE 754 para aritm&amp;eacute;tica de coma flotante.</target>
        </trans-unit>
        <trans-unit id="a72bfaeeae8d98102d2bd16c961c912a01957df4" translate="yes" xml:space="preserve">
          <source>When an inline function is &lt;code&gt;public&lt;/code&gt; or &lt;code&gt;protected&lt;/code&gt; and is not a part of a &lt;code&gt;private&lt;/code&gt; or &lt;code&gt;internal&lt;/code&gt; declaration, it is considered a &lt;a href=&quot;visibility-modifiers#modules&quot;&gt;module&lt;/a&gt;'s public API. It can be called in other modules and is inlined at such call sites as well.</source>
          <target state="translated">Cuando una funci&amp;oacute;n en l&amp;iacute;nea es &lt;code&gt;public&lt;/code&gt; o &lt;code&gt;protected&lt;/code&gt; y no forma parte de una declaraci&amp;oacute;n &lt;code&gt;private&lt;/code&gt; o &lt;code&gt;internal&lt;/code&gt; , se considera la API p&amp;uacute;blica de un &lt;a href=&quot;visibility-modifiers#modules&quot;&gt;m&amp;oacute;dulo&lt;/a&gt; . Se puede llamar en otros m&amp;oacute;dulos y tambi&amp;eacute;n est&amp;aacute; integrado en dichos sitios de llamadas.</target>
        </trans-unit>
        <trans-unit id="a8b8b82c3468010f3b6d8941f07253746e1af976" translate="yes" xml:space="preserve">
          <source>When an instance of a subclass is constructed, the superclass &quot;part&quot; is constructed first (via the superclass constructor). This means that during execution of the constructor of an open class, it could be that the object being constructed is an instance of a subclass, in which case the subclass-specific properties have not been initialized yet. For that reason, calling an open function from a constructor is risky: it might be overridden in the subclass, and if it is accessing subclass-specific properties, those won't be initialized yet.</source>
          <target state="translated">Cuando se construye una instancia de una subclase,la &quot;parte&quot; de la superclase se construye primero (a trav√©s del constructor de la superclase).Esto significa que durante la ejecuci√≥n del constructor de una clase abierta,podr√≠a ser que el objeto que se construye sea una instancia de una subclase,en cuyo caso las propiedades espec√≠ficas de la subclase no se han inicializado todav√≠a.Por esa raz√≥n,llamar una funci√≥n abierta desde un constructor es arriesgado:podr√≠a ser anulada en la subclase,y si est√° accediendo a propiedades espec√≠ficas de la subclase,√©stas no se inicializar√°n todav√≠a.</target>
        </trans-unit>
        <trans-unit id="5b0f246d38c7c57581718b09879ae1a9f3dd0cfb" translate="yes" xml:space="preserve">
          <source>When applied to a class or a member with internal visibility allows to use it from public inline functions and makes it effectively public.</source>
          <target state="translated">Cuando se aplica a una clase o a un miembro con visibilidad interna permite utilizarlo desde las funciones p√∫blicas en l√≠nea y lo hace efectivamente p√∫blico.</target>
        </trans-unit>
        <trans-unit id="b2719f8cfa129fbdd0adc701d2dba400cfb7a4df" translate="yes" xml:space="preserve">
          <source>When applied to annotation class X specifies that X defines a DSL language</source>
          <target state="translated">Cuando se aplica a la clase de anotaci√≥n X especifica que X define un lenguaje DSL</target>
        </trans-unit>
        <trans-unit id="4383cdeb336d893261a8fd71ba6fa7f60d10ca1e" translate="yes" xml:space="preserve">
          <source>When applied, the CocoaPods plugin does the following:</source>
          <target state="translated">Cuando se aplica,el plugin CocoaPods hace lo siguiente:</target>
        </trans-unit>
        <trans-unit id="d3cb13a5dd74d5989c8544a9bd856469cfe20ca8" translate="yes" xml:space="preserve">
          <source>When both &lt;code&gt;excludeDependentModules&lt;/code&gt; and &lt;code&gt;headerFilter&lt;/code&gt; are used, they are applied as an intersection.</source>
          <target state="translated">Cuando se utilizan &lt;code&gt;excludeDependentModules&lt;/code&gt; y &lt;code&gt;headerFilter&lt;/code&gt; , se aplican como una intersecci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5bd916e17d31ae892ecde1eb2457f0a21c18c0ca" translate="yes" xml:space="preserve">
          <source>When building a Kotlin/JS project using Kotlin 1.3.xx, you may encounter a Gradle error if one of your dependencies (or any transitive dependency) was built using Kotlin 1.4 or higher: &lt;code&gt;Could not determine the dependencies of task ':client:jsTestPackageJson'.&lt;/code&gt; / &lt;code&gt;Cannot choose between the following variants&lt;/code&gt;. This is a known problem, a workaround is provided &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-40226&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f14a9a00a723afb155894bffae89af46e21d16f" translate="yes" xml:space="preserve">
          <source>When building an Objective-C framework or a native library (shared or static), you may need to pack not just the classes of the current project, but also the classes of its dependencies. Specify which dependencies to export to a binary using the &lt;code&gt;export&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05de934df0888bf3a4ea0106e90f35a575c92fc" translate="yes" xml:space="preserve">
          <source>When building an Objective-C framework, it is often necessary to pack not just the classes of the current project, but also the classes of some of its dependencies. The Binaries DSL allows one to specify which dependencies will be exported in the framework using the &lt;code&gt;export&lt;/code&gt; method. Note that only API dependencies of a corresponding source set can be exported.</source>
          <target state="translated">Al construir un marco Objective-C, a menudo es necesario empaquetar no solo las clases del proyecto actual, sino tambi&amp;eacute;n las clases de algunas de sus dependencias. El DSL de Binaries permite especificar qu&amp;eacute; dependencias se exportar&amp;aacute;n en el marco utilizando el m&amp;eacute;todo de &lt;code&gt;export&lt;/code&gt; aci&amp;oacute;n . Tenga en cuenta que solo se pueden exportar las dependencias de API de un conjunto de fuentes correspondiente.</target>
        </trans-unit>
        <trans-unit id="6c939554f4725c1c653be2725d54eb9e654761fc" translate="yes" xml:space="preserve">
          <source>When building from Xcode, you can use CocoaPods libraries without writing .def files manually and setting cinterop tool parameters. In this case, all required parameters can be obtained from the Xcode project configured by CocoaPods.</source>
          <target state="translated">Al construir desde Xcode,puedes usar las bibliotecas de CocoaPods sin tener que escribir manualmente los archivos .def y establecer los par√°metros de la herramienta cinterop.En este caso,todos los par√°metros requeridos pueden ser obtenidos del proyecto Xcode configurado por CocoaPods.</target>
        </trans-unit>
        <trans-unit id="c700148c224a841d5e4fb27c316b7b0f072a2aee" translate="yes" xml:space="preserve">
          <source>When called on an object with a predicate provided, &lt;code&gt;takeIf&lt;/code&gt; returns this object if it matches the predicate. Otherwise, it returns &lt;code&gt;null&lt;/code&gt;. So, &lt;code&gt;takeIf&lt;/code&gt; is a filtering function for a single object. In turn, &lt;code&gt;takeUnless&lt;/code&gt; returns the object if it doesn't match the predicate and &lt;code&gt;null&lt;/code&gt; if it does. The object is available as a lambda argument (&lt;code&gt;it&lt;/code&gt;).</source>
          <target state="translated">Cuando se llama a un objeto con un predicado proporcionado, &lt;code&gt;takeIf&lt;/code&gt; devuelve este objeto si coincide con el predicado. De lo contrario, devuelve &lt;code&gt;null&lt;/code&gt; . Entonces, &lt;code&gt;takeIf&lt;/code&gt; es una funci&amp;oacute;n de filtrado para un solo objeto. A su vez, &lt;code&gt;takeUnless&lt;/code&gt; devuelve el objeto si no coincide con el predicado y &lt;code&gt;null&lt;/code&gt; si lo hace. El objeto est&amp;aacute; disponible como un argumento lambda ( &lt;code&gt;it&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="70ae5c844919498cf5a44f8ce155a9c7029cae97" translate="yes" xml:space="preserve">
          <source>When called on lists, &lt;code&gt;addAll()&lt;/code&gt; adds new elements in the same order as they go in the argument. You can also call &lt;code&gt;addAll()&lt;/code&gt; specifying an element position as the first argument. The first element of the argument collection will be inserted at this position. Other elements of the argument collection will follow it, shifting the receiver elements to the end.</source>
          <target state="translated">Cuando se llama a las listas, &lt;code&gt;addAll()&lt;/code&gt; agrega nuevos elementos en el mismo orden en que aparecen en el argumento. Tambi&amp;eacute;n puede llamar a &lt;code&gt;addAll()&lt;/code&gt; especificando la posici&amp;oacute;n de un elemento como primer argumento. El primer elemento de la colecci&amp;oacute;n de argumentos se insertar&amp;aacute; en esta posici&amp;oacute;n. Otros elementos de la colecci&amp;oacute;n de argumentos lo seguir&amp;aacute;n, desplazando los elementos del receptor al final.</target>
        </trans-unit>
        <trans-unit id="4503c0345f7f96c5163267795a01f8ff6d6296b7" translate="yes" xml:space="preserve">
          <source>When called with the default arguments, the functions return the result similar to calling &lt;code&gt;toString()&lt;/code&gt; on the collection: a &lt;code&gt;String&lt;/code&gt; of elements' string representations separated by commas with spaces.</source>
          <target state="translated">Cuando se llama con los argumentos predeterminados, las funciones devuelven el resultado similar a llamar a &lt;code&gt;toString()&lt;/code&gt; en la colecci&amp;oacute;n: una &lt;code&gt;String&lt;/code&gt; de representaciones de cadenas de elementos separadas por comas con espacios.</target>
        </trans-unit>
        <trans-unit id="4f800ac9ce646dbfd1c595ccbbdab36f597cb7a9" translate="yes" xml:space="preserve">
          <source>When called with the key present in the map, operators overwrite the values of the corresponding entries.</source>
          <target state="translated">Cuando se llama con la clave presente en el mapa,los operadores sobrescriben los valores de las entradas correspondientes.</target>
        </trans-unit>
        <trans-unit id="0e3f5ee2c33fac5afe961b2bc4ee6475eb75da8a" translate="yes" xml:space="preserve">
          <source>When calling Kotlin functions from Java, nobody prevents us from passing &lt;em&gt;null&lt;/em&gt; as a non-null parameter. That's why Kotlin generates runtime checks for all public functions that expect non-nulls. This way we get a &lt;code&gt;NullPointerException&lt;/code&gt; in the Java code immediately.</source>
          <target state="translated">Al llamar a funciones de Kotlin desde Java, nadie nos impide pasar &lt;em&gt;nulo&lt;/em&gt; como par&amp;aacute;metro no nulo. Es por eso que Kotlin genera comprobaciones en tiempo de ejecuci&amp;oacute;n para todas las funciones p&amp;uacute;blicas que esperan no nulos. De esta manera obtenemos una &lt;code&gt;NullPointerException&lt;/code&gt; en el c&amp;oacute;digo Java inmediatamente.</target>
        </trans-unit>
        <trans-unit id="5bf4931382d70d2a150fc1284b61bdc2c9c96f9a" translate="yes" xml:space="preserve">
          <source>When calling a function, you can name one or more of its arguments. This may be helpful when a function has a large number of arguments, and it's difficult to associate a value with an argument, especially if it's a boolean or &lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afccfc52da19240ad334120985339616ba8ee626" translate="yes" xml:space="preserve">
          <source>When calling functions written in Kotlin on values of &lt;code&gt;dynamic&lt;/code&gt; type, keep in mind the name mangling performed by the Kotlin to JavaScript compiler. You may need to use the &lt;a href=&quot;js-to-kotlin-interop#jsname-annotation&quot;&gt;@JsName annotation&lt;/a&gt; or the &lt;a href=&quot;js-to-kotlin-interop#jsexport-annotation&quot;&gt;@JsExport annotation&lt;/a&gt; to assign well-defined names to the functions that you want to call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66c232a7677f7941a6400aa2f6dc79238791bec" translate="yes" xml:space="preserve">
          <source>When calling functions written in Kotlin on values of &lt;code&gt;dynamic&lt;/code&gt; type, keep in mind the name mangling performed by the Kotlin to JavaScript compiler. You may need to use the &lt;a href=&quot;js-to-kotlin-interop#jsname-annotation&quot;&gt;@JsName annotation&lt;/a&gt; to assign well-defined names to the functions that you need to call.</source>
          <target state="translated">Al llamar a funciones escritas en Kotlin en valores de tipo &lt;code&gt;dynamic&lt;/code&gt; , tenga en cuenta la modificaci&amp;oacute;n de nombres realizada por el compilador de Kotlin a JavaScript. Es posible que deba usar la &lt;a href=&quot;js-to-kotlin-interop#jsname-annotation&quot;&gt;anotaci&amp;oacute;n @JsName&lt;/a&gt; para asignar nombres bien definidos a las funciones que necesita llamar.</target>
        </trans-unit>
        <trans-unit id="f401901149779f5935d80aef38d169d9b80565b3" translate="yes" xml:space="preserve">
          <source>When calling this function, you don&amp;rsquo;t have to name all its arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a144ef75b391ae884d7e13a94311bf67580a2244" translate="yes" xml:space="preserve">
          <source>When chaining other functions after &lt;code&gt;takeIf&lt;/code&gt; and &lt;code&gt;takeUnless&lt;/code&gt;, don't forget to perform the null check or the safe call (&lt;code&gt;?.&lt;/code&gt;) because their return value is nullable.</source>
          <target state="translated">Al encadenar otras funciones despu&amp;eacute;s de &lt;code&gt;takeIf&lt;/code&gt; y &lt;code&gt;takeUnless&lt;/code&gt; , no olvide realizar la verificaci&amp;oacute;n nula o la llamada segura ( &lt;code&gt;?.&lt;/code&gt; ) Porque su valor de retorno es anulable.</target>
        </trans-unit>
        <trans-unit id="c0a48c6031f8ea84f7db041425c7fe40478df5e8" translate="yes" xml:space="preserve">
          <source>When compiling (we'll use this term interchangeably with &lt;a href=&quot;https://en.wiktionary.org/wiki/transpile&quot;&gt;transpiling&lt;/a&gt;) to JavaScript, Kotlin outputs two main files:</source>
          <target state="translated">Al compilar (usaremos este t&amp;eacute;rmino de manera intercambiable con &lt;a href=&quot;https://en.wiktionary.org/wiki/transpile&quot;&gt;transpilar&lt;/a&gt; ) en JavaScript, Kotlin genera dos archivos principales:</target>
        </trans-unit>
        <trans-unit id="9a71722d03195d233742cd235099b2a024ee3092" translate="yes" xml:space="preserve">
          <source>When compiling Kotlin code to targets JVM 1.8 and above, you could compile non-abstract methods of Kotlin interfaces into Java's &lt;code&gt;default&lt;/code&gt; methods. For this purpose, there was a mechanism that includes the &lt;code&gt;@JvmDefault&lt;/code&gt; annotation for marking such methods and the &lt;code&gt;-Xjvm-default&lt;/code&gt; compiler option that enables processing of this annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c097f144946019495809506583d55bf5b42ced5" translate="yes" xml:space="preserve">
          <source>When compiling to JVM byte codes, the compiler optimizes access to arrays so that there's no overhead introduced:</source>
          <target state="translated">Al compilar a los c√≥digos de bytes de la JVM,el compilador optimiza el acceso a los arrays para que no se introduzcan gastos generales:</target>
        </trans-unit>
        <trans-unit id="d5652ef4fdb2127a183b6f70658b4242e9138b50" translate="yes" xml:space="preserve">
          <source>When compiling to Objective-C/Swift framework, methods having or inheriting this annotation are represented as &lt;code&gt;NSError*&lt;/code&gt;-producing methods in Objective-C and as &lt;code&gt;throws&lt;/code&gt; methods in Swift. When such a method called through framework API throws an exception, it is either propagated as &lt;code&gt;NSError&lt;/code&gt; or considered unhandled (if exception &lt;code&gt;is&lt;/code&gt;&lt;a href=&quot;../../kotlin/-error/index#kotlin.Error&quot;&gt;kotlin.Error&lt;/a&gt; or &lt;a href=&quot;../../kotlin/-runtime-exception/index#kotlin.RuntimeException&quot;&gt;kotlin.RuntimeException&lt;/a&gt;). In any case exception is not checked to be instance of one of the &lt;a href=&quot;exception-classes&quot;&gt;exceptionClasses&lt;/a&gt;.</source>
          <target state="translated">Cuando se compila en el marco Objective-C / Swift, los m&amp;eacute;todos que tienen o heredan esta anotaci&amp;oacute;n se representan como &lt;code&gt;NSError*&lt;/code&gt; que producen NSError * en Objective-C y como m&amp;eacute;todos &lt;code&gt;throws&lt;/code&gt; en Swift. Cuando un m&amp;eacute;todo de este tipo llamado a trav&amp;eacute;s de la API de marco &lt;code&gt;NSError&lt;/code&gt; una excepci&amp;oacute;n, se propaga como NSError o se considera no manejada (si la excepci&amp;oacute;n &lt;code&gt;is&lt;/code&gt; &lt;a href=&quot;../../kotlin/-error/index#kotlin.Error&quot;&gt;kotlin.Error&lt;/a&gt; o &lt;a href=&quot;../../kotlin/-runtime-exception/index#kotlin.RuntimeException&quot;&gt;kotlin.RuntimeException&lt;/a&gt; ). En cualquier caso, no se comprueba que la &lt;a href=&quot;exception-classes&quot;&gt;excepci&amp;oacute;n&lt;/a&gt; sea ‚Äã‚Äãuna instancia de una de las clases de excepci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="6587d9ea4d853cd6df9a3004ea764022f98d9281" translate="yes" xml:space="preserve">
          <source>When compiling to Objective-C/Swift framework, non-&lt;code&gt;suspend&lt;/code&gt; functions having or inheriting &lt;code&gt;@Throws&lt;/code&gt; annotation are represented as &lt;code&gt;NSError*&lt;/code&gt;-producing methods in Objective-C and as &lt;code&gt;throws&lt;/code&gt; methods in Swift. Representations for &lt;code&gt;suspend&lt;/code&gt; functions always have &lt;code&gt;NSError*&lt;/code&gt;/&lt;code&gt;Error&lt;/code&gt; parameter in completion handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488e4ca566eb9082ca3b6286ce0e3243bb17b8f2" translate="yes" xml:space="preserve">
          <source>When compiling to Objective-C/Swift framework, non-&lt;code&gt;suspend&lt;/code&gt; functions having or inheriting this annotation are represented as &lt;code&gt;NSError*&lt;/code&gt;-producing methods in Objective-C and as &lt;code&gt;throws&lt;/code&gt; methods in Swift. Representations for &lt;code&gt;suspend&lt;/code&gt; functions always have &lt;code&gt;NSError*&lt;/code&gt;/&lt;code&gt;Error&lt;/code&gt; parameter in completion handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9ee7ef1045f5338ee8701cbc0ba2b21b7f1d68" translate="yes" xml:space="preserve">
          <source>When compiling to Swift or the Objective-C framework, functions that have or are inheriting &lt;code&gt;@Throws&lt;/code&gt; annotation are represented as &lt;code&gt;NSError*&lt;/code&gt;-producing methods in Objective-C and as &lt;code&gt;throws&lt;/code&gt; methods in Swift.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96c28145bcb8f6ff8815136a3e9f396b218615b" translate="yes" xml:space="preserve">
          <source>When compiling, the compiler always outputs the kotlin.js file. The easiest way to reference this without having to refer to paths, is to set the output library folder for the compiler options to &lt;code&gt;node_modules&lt;/code&gt;. This way, Node will automatically pick it up as it does an exhaustive search for files under these folders</source>
          <target state="translated">Al compilar, el compilador siempre genera el archivo kotlin.js. La forma m&amp;aacute;s f&amp;aacute;cil de hacer referencia a esto sin tener que hacer referencia a rutas, es establecer la carpeta de la biblioteca de salida para las opciones del compilador en &lt;code&gt;node_modules&lt;/code&gt; . De esta manera, Node lo recoger&amp;aacute; autom&amp;aacute;ticamente ya que realiza una b&amp;uacute;squeda exhaustiva de archivos en estas carpetas.</target>
        </trans-unit>
        <trans-unit id="5b6df5ad94ece159e4d2e7854f633a08ec2ced8b" translate="yes" xml:space="preserve">
          <source>When creating a new application or module that targets JavaScript, we need to select &lt;code&gt;Kotlin - JavaScript&lt;/code&gt; as the target</source>
          <target state="translated">Al crear una nueva aplicaci&amp;oacute;n o m&amp;oacute;dulo que tenga como destino JavaScript, debemos seleccionar &lt;code&gt;Kotlin - JavaScript&lt;/code&gt; como destino</target>
        </trans-unit>
        <trans-unit id="40c235de508210259df882cfb516e8a1d647fb3f" translate="yes" xml:space="preserve">
          <source>When declaring dependencies on npm packages, you are now required to explicitly specify a version or version range based on &lt;a href=&quot;https://docs.npmjs.com/misc/semver#versions&quot;&gt;npm&amp;rsquo;s semver syntax&lt;/a&gt;. Specifying multiple version ranges is also supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03565eec78cb8bfb0c999a9b15ff0e6c755df92b" translate="yes" xml:space="preserve">
          <source>When declaring parameter names in a multiline lambda, put the names on the first line, followed by the arrow and the newline:</source>
          <target state="translated">Cuando declare los nombres de los par√°metros en una lambda multil√≠nea,ponga los nombres en la primera l√≠nea,seguida de la flecha y la nueva l√≠nea:</target>
        </trans-unit>
        <trans-unit id="3ef5c76bfa4e43b35f38295e1d456c70ff2408cf" translate="yes" xml:space="preserve">
          <source>When executing this run configuration, we can note that the Gradle process continues watching for changes to the program:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04dc660c0cd261412da813263e6942fbca96f489" translate="yes" xml:space="preserve">
          <source>When flow collection completes (normally or exceptionally) it may need to execute an action. As you may have already noticed, it can be done in two ways: imperative or declarative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210a72ecd64e91bda5f9f64c7a09dfe81ca0e12e" translate="yes" xml:space="preserve">
          <source>When flow represents the most recent value of a variable or operation (see also the related section on &lt;a href=&quot;#conflation&quot;&gt;conflation&lt;/a&gt;), it might be needed to perform a computation that depends on the most recent values of the corresponding flows and to recompute it whenever any of the upstream flows emit a value. The corresponding family of operators is called &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/combine.html&quot;&gt;combine&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ca0ed2cf53ba99dfc24939c39b34cc8182bea3" translate="yes" xml:space="preserve">
          <source>When given a &lt;code&gt;-library foo&lt;/code&gt; flag, the compiler searches the &lt;code&gt;foo&lt;/code&gt; library in the following order:</source>
          <target state="translated">Cuando se le da un indicador &lt;code&gt;-library foo&lt;/code&gt; , el compilador busca en la biblioteca &lt;code&gt;foo&lt;/code&gt; en el siguiente orden:</target>
        </trans-unit>
        <trans-unit id="dd5a17a3b22c6470172a587dc5be67c1d1df4d62" translate="yes" xml:space="preserve">
          <source>When given the above snippet the &lt;code&gt;cinterop&lt;/code&gt; tool will search &lt;code&gt;libfoo.a&lt;/code&gt; in &lt;code&gt;/opt/local/lib&lt;/code&gt; and &lt;code&gt;/usr/local/opt/curl/lib&lt;/code&gt;, and if it is found include the library binary into &lt;code&gt;klib&lt;/code&gt;.</source>
          <target state="translated">Cuando se le proporcione el fragmento anterior, la herramienta &lt;code&gt;cinterop&lt;/code&gt; buscar&amp;aacute; &lt;code&gt;libfoo.a&lt;/code&gt; en &lt;code&gt;/opt/local/lib&lt;/code&gt; y &lt;code&gt;/usr/local/opt/curl/lib&lt;/code&gt; , y si se encuentra, incluir&amp;aacute; el binario de la biblioteca en &lt;code&gt;klib&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="010f9a9f094ca37e15156897e51ac67f748d0305" translate="yes" xml:space="preserve">
          <source>When implementing an interface, keep the implementing members in the same order as members of the interface (if necessary, interspersed with additional private methods used for the implementation)</source>
          <target state="translated">Al aplicar una interfaz,mantenga los miembros de la misma en el mismo orden que los miembros de la interfaz (de ser necesario,entremezclados con los m√©todos privados adicionales utilizados para la aplicaci√≥n)</target>
        </trans-unit>
        <trans-unit id="27dfae03dd6477eb5611a6a8eca02c237e81ed5f" translate="yes" xml:space="preserve">
          <source>When in &lt;code&gt;both&lt;/code&gt; mode, the IR compiler backend and default compiler backend are both used when building a library from your sources (hence the name). This means that both &lt;code&gt;klib&lt;/code&gt; files with Kotlin IR as well as &lt;code&gt;jar&lt;/code&gt; files for the default compiler will be generated. When published under the same Maven coordinate, Gradle will automatically choose the right artifact depending on the use case &amp;ndash; &lt;code&gt;js&lt;/code&gt; for the old compiler, &lt;code&gt;klib&lt;/code&gt; for the new one. This enables you to compile and publish your library for projects that are using either of the two compiler backends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8190bf6bb340fcc1bfe9465dd44a27ec0f22ba" translate="yes" xml:space="preserve">
          <source>When installed for the first time, EduTools plugin asks if you're a Learner or an Educator. Please choose &lt;strong&gt;Educator&lt;/strong&gt; to enable course creation functionality:</source>
          <target state="translated">Cuando se instala por primera vez, el complemento EduTools le pregunta si es un alumno o un educador. Elija &lt;strong&gt;Educador&lt;/strong&gt; para habilitar la funci&amp;oacute;n de creaci&amp;oacute;n de cursos:</target>
        </trans-unit>
        <trans-unit id="8932a8146c0a90dc2dd58707de728ef7a12acaa8" translate="yes" xml:space="preserve">
          <source>When installed for the first time, the EduTools plugin asks if you're a Learner or an Educator. Please choose &lt;strong&gt;Learner&lt;/strong&gt;:</source>
          <target state="translated">Cuando se instala por primera vez, el complemento EduTools le pregunta si es un alumno o un educador. Elija &lt;strong&gt;alumno&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="10a5b3cb7bba7c274d069162e0ee74e696f381e7" translate="yes" xml:space="preserve">
          <source>When library headers are imported to a C program with the &lt;code&gt;#include&lt;/code&gt; directive, all of the headers included by these headers are also included in the program. So all header dependencies are included in generated stubs as well.</source>
          <target state="translated">Cuando los encabezados de biblioteca se importan a un programa C con la directiva &lt;code&gt;#include&lt;/code&gt; , todos los encabezados incluidos por estos encabezados tambi&amp;eacute;n se incluyen en el programa. Por lo tanto, todas las dependencias del encabezado tambi&amp;eacute;n se incluyen en los stubs generados.</target>
        </trans-unit>
        <trans-unit id="3922383306a8a09a6b0e8b2eb8f9a1db1f1ab0db" translate="yes" xml:space="preserve">
          <source>When list elements aren't &lt;code&gt;Comparable&lt;/code&gt;, you should provide a &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin/-comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; to use in the binary search. The list must be sorted in ascending order according to this &lt;code&gt;Comparator&lt;/code&gt;. Let's have a look at an example:</source>
          <target state="translated">Cuando los elementos de la lista no son &lt;code&gt;Comparable&lt;/code&gt; , debe proporcionar un &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin/-comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt; para usar en la b&amp;uacute;squeda binaria. La lista se debe ordenar en orden ascendente de acuerdo con este &lt;code&gt;Comparator&lt;/code&gt; . Echemos un vistazo a un ejemplo:</target>
        </trans-unit>
        <trans-unit id="eb20fed2a040f5bec7d775d79d512be41c67a260" translate="yes" xml:space="preserve">
          <source>When making a choice between a complex expression using multiple higher-order functions and a loop, understand the cost of the operations being performed in each case and keep performance considerations in mind.</source>
          <target state="translated">Al elegir entre una expresi√≥n compleja que utiliza m√∫ltiples funciones de orden superior y un bucle,comprenda el costo de las operaciones que se realizan en cada caso y tenga en cuenta las consideraciones de rendimiento.</target>
        </trans-unit>
        <trans-unit id="34a85c247b6ac08983d01a72671ac866f48daed6" translate="yes" xml:space="preserve">
          <source>When multiple children of a coroutine fail with an exception, the general rule is &quot;the first exception wins&quot;, so the first exception gets handled. All additional exceptions that happen after the first one are attached to the first exception as suppressed ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2970ac1e3a2dbc090d5bfcbffc924f278b84baec" translate="yes" xml:space="preserve">
          <source>When returning a value, the parser gives preference to the qualified return, i.e.</source>
          <target state="translated">Cuando se devuelve un valor,el analizador da preferencia a la devoluci√≥n cualificada,es decir.</target>
        </trans-unit>
        <trans-unit id="91e0d5690967c5e3915ccf3388a11d3d82da8814" translate="yes" xml:space="preserve">
          <source>When running this example in the browser, the DOM will be assembled in a straightforward way. This is easily confirmed by checking the Elements of the website using the developer tools of our browser:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b57a6650ec36adfcbda42de47e0a60e863df953" translate="yes" xml:space="preserve">
          <source>When somebody calls the function &lt;code&gt;getDate()&lt;/code&gt;, they won't be informed about the experimental API used in its body.</source>
          <target state="translated">Cuando alguien llama a la funci&amp;oacute;n &lt;code&gt;getDate()&lt;/code&gt; , no se le informar&amp;aacute; sobre la API experimental utilizada en su cuerpo.</target>
        </trans-unit>
        <trans-unit id="bfa8681d13a7c615930222f478ec4f7aeac79c5a" translate="yes" xml:space="preserve">
          <source>When somebody calls the function &lt;code&gt;getDate()&lt;/code&gt;, they won't be informed about the opt-in requirements for APIs used in its body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6f8bdf23dc342f6366d0ca972d7d991572a9e7" translate="yes" xml:space="preserve">
          <source>When supported by the platform adds the specified exception to the list of exceptions that were suppressed in order to deliver this exception.</source>
          <target state="translated">Cuando est√° soportada por la plataforma a√±ade la excepci√≥n especificada a la lista de excepciones que fueron suprimidas para poder entregar esta excepci√≥n.</target>
        </trans-unit>
        <trans-unit id="6393b31c82857a557e8af4f2a0be0aaf5d58b5c5" translate="yes" xml:space="preserve">
          <source>When supported by the platform, adds the specified exception to the list of exceptions that were suppressed in order to deliver this exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c40217c2fbf96f7f32af012e76efee928b75c4a" translate="yes" xml:space="preserve">
          <source>When targeting JavaScript, a different plugin should be applied:</source>
          <target state="translated">Cuando se apunta a JavaScript,se debe aplicar un plugin diferente:</target>
        </trans-unit>
        <trans-unit id="6febffb6e2904e4bbf90391b0727f1dbf05ee0c1" translate="yes" xml:space="preserve">
          <source>When targeting JavaScript, the tasks are called &lt;code&gt;compileKotlin2Js&lt;/code&gt; and &lt;code&gt;compileTestKotlin2Js&lt;/code&gt; respectively, and &lt;code&gt;compile&amp;lt;Name&amp;gt;Kotlin2Js&lt;/code&gt; for custom source sets.</source>
          <target state="translated">Al apuntar a JavaScript, las tareas se denominan &lt;code&gt;compileKotlin2Js&lt;/code&gt; y &lt;code&gt;compileTestKotlin2Js&lt;/code&gt; respectivamente, y &lt;code&gt;compile&amp;lt;Name&amp;gt;Kotlin2Js&lt;/code&gt; para conjuntos de fuentes personalizados.</target>
        </trans-unit>
        <trans-unit id="fb89dbb9f04dc9361c7746b53e92457b21476e1a" translate="yes" xml:space="preserve">
          <source>When targeting JavaScript, the tasks are called &lt;code&gt;compileKotlinJs&lt;/code&gt; and &lt;code&gt;compileTestKotlinJs&lt;/code&gt; respectively, and &lt;code&gt;compile&amp;lt;Name&amp;gt;KotlinJs&lt;/code&gt; for custom source sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68caa257adc3424d8615357e16a81ae92f1364f3" translate="yes" xml:space="preserve">
          <source>When targeting Node.js with Kotlin/JS, we can simply execute the &lt;code&gt;run&lt;/code&gt; Gradle task. This can be done for example via the command line, using the Gradle wrapper:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8307ea9f68fd265bde506b102ae1144dc569ce2b" translate="yes" xml:space="preserve">
          <source>When targeting only JavaScript, use the &lt;code&gt;kotlin-js&lt;/code&gt; plugin. &lt;a href=&quot;js-project-setup&quot;&gt;Learn more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3700a9140aca950bb22b2b6e73a90e60e275240a" translate="yes" xml:space="preserve">
          <source>When targeting the JVM, Kotlin produces Java compatible bytecode. When targeting JavaScript, Kotlin transpiles to ES5.1 and generates code which is compatible with module systems including AMD and CommonJS. When targeting native, Kotlin will produce platform-specific code (via LLVM).</source>
          <target state="translated">Al apuntar a la JVM,Kotlin produce un c√≥digo de bytes compatible con Java.Cuando apunta a JavaScript,Kotlin transpone a ES5.1 y genera un c√≥digo compatible con los sistemas de m√≥dulos,incluyendo AMD y CommonJS.Cuando apunta al nativo,Kotlin producir√° c√≥digo espec√≠fico para la plataforma (a trav√©s de LLVM).</target>
        </trans-unit>
        <trans-unit id="2fd9751d3f79fd88ae2a197e9ec6c24a47840b01" translate="yes" xml:space="preserve">
          <source>When targeting the JVM, the tasks are called &lt;code&gt;compileKotlin&lt;/code&gt; for production code and &lt;code&gt;compileTestKotlin&lt;/code&gt; for test code. The tasks for custom source sets are called accordingly to the &lt;code&gt;compile&amp;lt;Name&amp;gt;Kotlin&lt;/code&gt; pattern.</source>
          <target state="translated">Cuando se dirige a la JVM, las tareas se denominan &lt;code&gt;compileKotlin&lt;/code&gt; para el c&amp;oacute;digo de producci&amp;oacute;n y &lt;code&gt;compileTestKotlin&lt;/code&gt; para el c&amp;oacute;digo de prueba. Las tareas para conjuntos de fuentes personalizados se llaman seg&amp;uacute;n el patr&amp;oacute;n de &lt;code&gt;compile&amp;lt;Name&amp;gt;Kotlin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb9436a471e8dbc8503c3b6e6a7c9d3c34f6ebb0" translate="yes" xml:space="preserve">
          <source>When targeting the browser, our project is required to have an HTML page. This page will be served by the development server while we are working on our application, and should embed our compiled Kotlin/JS file. Create and fill an HTML file &lt;code&gt;/src/main/resources/index.html&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18755d5fafc0688db03f9113e5e8aba876e9f17" translate="yes" xml:space="preserve">
          <source>When the argument type is final, there's usually no point in generating the wildcard, so &lt;code&gt;Box&amp;lt;String&amp;gt;&lt;/code&gt; is always &lt;code&gt;Box&amp;lt;String&amp;gt;&lt;/code&gt;, no matter what position it takes.</source>
          <target state="translated">Cuando el tipo de argumento es final, generalmente no tiene sentido generar el comod&amp;iacute;n, por lo que &lt;code&gt;Box&amp;lt;String&amp;gt;&lt;/code&gt; siempre es &lt;code&gt;Box&amp;lt;String&amp;gt;&lt;/code&gt; , sin importar la posici&amp;oacute;n que tome.</target>
        </trans-unit>
        <trans-unit id="4260e7c630e27226c5f3f5f47519e7ba6fce2dbf" translate="yes" xml:space="preserve">
          <source>When the operands &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are statically known to be &lt;code&gt;Float&lt;/code&gt; or &lt;code&gt;Double&lt;/code&gt; or their nullable counterparts (the type is declared or inferred or is a result of a &lt;a href=&quot;typecasts#smart-casts&quot;&gt;smart cast&lt;/a&gt;), the operations on the numbers and the range that they form follow the IEEE 754 Standard for Floating-Point Arithmetic.</source>
          <target state="translated">Cuando los operandos &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; son conocidos est&amp;aacute;ticamente ser &lt;code&gt;Float&lt;/code&gt; o &lt;code&gt;Double&lt;/code&gt; o sus hom&amp;oacute;logos con valores nulos (el tipo es declarado o deducirse o es el resultado de un &lt;a href=&quot;typecasts#smart-casts&quot;&gt;reparto inteligente&lt;/a&gt; ), las operaciones sobre el n&amp;uacute;mero y el alcance que forman seguir el IEEE 754 Est&amp;aacute;ndar para aritm&amp;eacute;tica de coma flotante.</target>
        </trans-unit>
        <trans-unit id="50fe39e80afdb0bafe5609ac0ee60d49bbca274d" translate="yes" xml:space="preserve">
          <source>When the original &lt;a href=&quot;intercept-continuation#kotlin.coroutines.ContinuationInterceptor%24interceptContinuation%28kotlin.coroutines.Continuation%28%28kotlin.coroutines.ContinuationInterceptor.interceptContinuation.T%29%29%29%2Fcontinuation&quot;&gt;continuation&lt;/a&gt; completes, coroutine framework invokes &lt;a href=&quot;release-intercepted-continuation&quot;&gt;releaseInterceptedContinuation&lt;/a&gt; with the resulting continuation if it was intercepted, that is if &lt;code&gt;interceptContinuation&lt;/code&gt; had previously returned a different continuation instance.</source>
          <target state="translated">Cuando &lt;a href=&quot;intercept-continuation#kotlin.coroutines.ContinuationInterceptor%24interceptContinuation%28kotlin.coroutines.Continuation%28%28kotlin.coroutines.ContinuationInterceptor.interceptContinuation.T%29%29%29%2Fcontinuation&quot;&gt;se&lt;/a&gt; completa la continuaci&amp;oacute;n original , el marco de rutina invoca &lt;a href=&quot;release-intercepted-continuation&quot;&gt;releaseInterceptedContinuation&lt;/a&gt; con la continuaci&amp;oacute;n resultante si fue interceptado, es decir, si &lt;code&gt;interceptContinuation&lt;/code&gt; hab&amp;iacute;a devuelto previamente una instancia de continuaci&amp;oacute;n diferente.</target>
        </trans-unit>
        <trans-unit id="41195e5948b5d9d14accce4fb777d5a5399f88d7" translate="yes" xml:space="preserve">
          <source>When the original &lt;a href=&quot;intercept-continuation#kotlin.coroutines.ContinuationInterceptor%24interceptContinuation(kotlin.coroutines.Continuation((kotlin.coroutines.ContinuationInterceptor.interceptContinuation.T)))/continuation&quot;&gt;continuation&lt;/a&gt; completes, coroutine framework invokes &lt;a href=&quot;release-intercepted-continuation&quot;&gt;releaseInterceptedContinuation&lt;/a&gt; with the resulting continuation if it was intercepted, that is if &lt;code&gt;interceptContinuation&lt;/code&gt; had previously returned a different continuation instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee129400c7cdc16a95ec0912c8a4fd0a5a9f195" translate="yes" xml:space="preserve">
          <source>When the processing of an &lt;code&gt;Iterable&lt;/code&gt; includes multiple steps, they are executed eagerly: each processing step completes and returns its result &amp;ndash; an intermediate collection. The following step executes on this collection. In turn, multi-step processing of sequences is executed lazily when possible: actual computing happens only when the result of the whole processing chain is requested.</source>
          <target state="translated">Cuando el procesamiento de un &lt;code&gt;Iterable&lt;/code&gt; incluye varios pasos, se ejecutan con entusiasmo: cada paso de procesamiento completa y devuelve su resultado: una colecci&amp;oacute;n intermedia. El siguiente paso se ejecuta en esta colecci&amp;oacute;n. A su vez, el procesamiento de m&amp;uacute;ltiples pasos de secuencias se ejecuta de manera perezosa cuando es posible: la computaci&amp;oacute;n real ocurre solo cuando se solicita el resultado de toda la cadena de procesamiento.</target>
        </trans-unit>
        <trans-unit id="45bf077d097fcdb663238684f69205850ecd18da" translate="yes" xml:space="preserve">
          <source>When the project consists of exclusively Kotlin source code, the easiest way to compile the project is to use the &lt;em&gt;kotlinc&lt;/em&gt; task:</source>
          <target state="translated">Cuando el proyecto consta exclusivamente de c&amp;oacute;digo fuente de Kotlin, la forma m&amp;aacute;s sencilla de compilar el proyecto es utilizar la tarea &lt;em&gt;kotlinc&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="de3a7fefd9c0e4fdceeb9aa1f2016defc2704512" translate="yes" xml:space="preserve">
          <source>When this annotation is placed on a generic function parameter of a function, it enables to infer the type arguments of that generic function from the lambda body passed to that parameter.</source>
          <target state="translated">Cuando esta anotaci√≥n se coloca en un par√°metro de funci√≥n gen√©rica de una funci√≥n,permite inferir los argumentos de tipo de esa funci√≥n gen√©rica a partir del cuerpo lambda pasado a ese par√°metro.</target>
        </trans-unit>
        <trans-unit id="4048f5f513aab453351704d3921c71dee68c7768" translate="yes" xml:space="preserve">
          <source>When this char sequence starts with and ends with the given &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fdelimiter&quot;&gt;delimiter&lt;/a&gt;, returns a new char sequence having this &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fdelimiter&quot;&gt;delimiter&lt;/a&gt; removed both from the start and end. Otherwise returns a new char sequence with the same characters.</source>
          <target state="translated">Cuando esta secuencia de caracteres comienza y termina con el &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fdelimiter&quot;&gt;delimitador&lt;/a&gt; dado , devuelve una nueva secuencia de caracteres que tiene este &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fdelimiter&quot;&gt;delimitador&lt;/a&gt; eliminado tanto del inicio como del final. De lo contrario, devuelve una nueva secuencia de caracteres con los mismos caracteres.</target>
        </trans-unit>
        <trans-unit id="71738510e58b58513693f2e894d632554b8f850d" translate="yes" xml:space="preserve">
          <source>When this char sequence starts with and ends with the given &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence)/delimiter&quot;&gt;delimiter&lt;/a&gt;, returns a new char sequence having this &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence)/delimiter&quot;&gt;delimiter&lt;/a&gt; removed both from the start and end. Otherwise returns a new char sequence with the same characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662d6d4b8c6d089b2ede0be25f7514459a1a7dc8" translate="yes" xml:space="preserve">
          <source>When this char sequence starts with and ends with the given &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fdelimiter&quot;&gt;delimiter&lt;/a&gt;, returns a new char sequence having this &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fdelimiter&quot;&gt;delimiter&lt;/a&gt; removed both from the start and end. Otherwise returns a new char sequence with the same characters.</source>
          <target state="translated">Cuando esta secuencia de caracteres comienza y termina con el &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fdelimiter&quot;&gt;delimitador&lt;/a&gt; dado , devuelve una nueva secuencia de caracteres que tiene este &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fdelimiter&quot;&gt;delimitador&lt;/a&gt; eliminado tanto del inicio como del final. De lo contrario, devuelve una nueva secuencia de caracteres con los mismos caracteres.</target>
        </trans-unit>
        <trans-unit id="7019a5ff21fc052821e44fe7b2517fb2a7e50ce1" translate="yes" xml:space="preserve">
          <source>When this char sequence starts with and ends with the given &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence)/delimiter&quot;&gt;delimiter&lt;/a&gt;, returns a new char sequence having this &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence)/delimiter&quot;&gt;delimiter&lt;/a&gt; removed both from the start and end. Otherwise returns a new char sequence with the same characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f3cdbdc4358626eb141b88edd210afb71fcf1c" translate="yes" xml:space="preserve">
          <source>When this char sequence starts with and ends with the given &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fdelimiter&quot;&gt;delimiter&lt;/a&gt;, returns a new char sequence having this &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fdelimiter&quot;&gt;delimiter&lt;/a&gt; removed both from the start and end. Otherwise returns a new char sequence with the same characters.</source>
          <target state="translated">Cuando esta secuencia de caracteres comienza y termina con el &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fdelimiter&quot;&gt;delimitador&lt;/a&gt; dado , devuelve una nueva secuencia de caracteres que tiene este &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fdelimiter&quot;&gt;delimitador&lt;/a&gt; eliminado tanto del inicio como del final. De lo contrario, devuelve una nueva secuencia de caracteres con los mismos caracteres.</target>
        </trans-unit>
        <trans-unit id="1343302e14e8f4c4b12b4a77e8795e48eee2bf82" translate="yes" xml:space="preserve">
          <source>When this char sequence starts with and ends with the given &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence)/delimiter&quot;&gt;delimiter&lt;/a&gt;, returns a new char sequence having this &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence)/delimiter&quot;&gt;delimiter&lt;/a&gt; removed both from the start and end. Otherwise returns a new char sequence with the same characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451a99a6d4be3b4584fd97e74744059ae797634b" translate="yes" xml:space="preserve">
          <source>When this char sequence starts with the given &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and ends with the given &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt;, returns a new char sequence having both the given &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt; removed. Otherwise returns a new char sequence with the same characters.</source>
          <target state="translated">Cuando esta secuencia de caracteres comienza con el &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefijo&lt;/a&gt; dado y termina con el &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;sufijo&lt;/a&gt; dado , devuelve una nueva secuencia de caracteres en la que se han eliminado tanto el &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefijo&lt;/a&gt; como el &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;sufijo&lt;/a&gt; . De lo contrario, devuelve una nueva secuencia de caracteres con los mismos caracteres.</target>
        </trans-unit>
        <trans-unit id="21ec09c18e0e164102ac5fa7a001d480731fe38a" translate="yes" xml:space="preserve">
          <source>When this char sequence starts with the given &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence)/prefix&quot;&gt;prefix&lt;/a&gt; and ends with the given &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence)/suffix&quot;&gt;suffix&lt;/a&gt;, returns a new char sequence having both the given &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence)/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.text/remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence)/suffix&quot;&gt;suffix&lt;/a&gt; removed. Otherwise returns a new char sequence with the same characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474027059649f995528fdc9848631cfc13badca6" translate="yes" xml:space="preserve">
          <source>When this char sequence starts with the given &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and ends with the given &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt;, returns a new char sequence having both the given &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt; removed. Otherwise returns a new char sequence with the same characters.</source>
          <target state="translated">Cuando esta secuencia de caracteres comienza con el &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefijo&lt;/a&gt; dado y termina con el &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;sufijo&lt;/a&gt; dado , devuelve una nueva secuencia de caracteres en la que se han eliminado tanto el &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefijo&lt;/a&gt; como el &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;sufijo&lt;/a&gt; . De lo contrario, devuelve una nueva secuencia de caracteres con los mismos caracteres.</target>
        </trans-unit>
        <trans-unit id="e1059589b0f168a1d76360357b34244200d2d5f4" translate="yes" xml:space="preserve">
          <source>When this char sequence starts with the given &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence)/prefix&quot;&gt;prefix&lt;/a&gt; and ends with the given &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence)/suffix&quot;&gt;suffix&lt;/a&gt;, returns a new char sequence having both the given &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence)/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence)/suffix&quot;&gt;suffix&lt;/a&gt; removed. Otherwise returns a new char sequence with the same characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f20b674cd62de8c48c773a81ba6fdddb62b434" translate="yes" xml:space="preserve">
          <source>When this char sequence starts with the given &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and ends with the given &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt;, returns a new char sequence having both the given &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt; removed. Otherwise returns a new char sequence with the same characters.</source>
          <target state="translated">Cuando esta secuencia de caracteres comienza con el &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefijo&lt;/a&gt; dado y termina con el &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;sufijo&lt;/a&gt; dado , devuelve una nueva secuencia de caracteres en la que se han eliminado tanto el &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefijo&lt;/a&gt; como el &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding%28kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;sufijo&lt;/a&gt; . De lo contrario, devuelve una nueva secuencia de caracteres con los mismos caracteres.</target>
        </trans-unit>
        <trans-unit id="cdb86094485044abedbde00e051a13f9d6e30f2e" translate="yes" xml:space="preserve">
          <source>When this char sequence starts with the given &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence)/prefix&quot;&gt;prefix&lt;/a&gt; and ends with the given &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence)/suffix&quot;&gt;suffix&lt;/a&gt;, returns a new char sequence having both the given &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence)/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;remove-surrounding#kotlin.text%24removeSurrounding(kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence)/suffix&quot;&gt;suffix&lt;/a&gt; removed. Otherwise returns a new char sequence with the same characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b6ffb12763bc2138c97cf448035b6d9b90a8a2" translate="yes" xml:space="preserve">
          <source>When this map already has an implicit default value provided with a former call to &lt;a href=&quot;with-default&quot;&gt;withDefault&lt;/a&gt;, it is being replaced by this call.</source>
          <target state="translated">Cuando este mapa ya tiene un valor predeterminado impl&amp;iacute;cito proporcionado con una llamada anterior a &lt;a href=&quot;with-default&quot;&gt;withDefault&lt;/a&gt; , est&amp;aacute; siendo reemplazado por esta llamada.</target>
        </trans-unit>
        <trans-unit id="4cb6af1ae576c542ddecdff3ea4125d59a9ee8e7" translate="yes" xml:space="preserve">
          <source>When to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17ab536e904cdcbae105ffd675f6f9b2f2e25d6" translate="yes" xml:space="preserve">
          <source>When transforming maps, you have two options: transform keys leaving values unchanged and vice versa. To apply a given transformation to keys, use &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/map-keys&quot;&gt;&lt;code&gt;mapKeys()&lt;/code&gt;&lt;/a&gt;; in turn, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/map-values&quot;&gt;&lt;code&gt;mapValues()&lt;/code&gt;&lt;/a&gt; transforms values. Both functions use the transformations that take a map entry as an argument, so you can operate both its key and value.</source>
          <target state="translated">Al transformar mapas, tiene dos opciones: transformar claves dejando los valores sin cambios y viceversa. Para aplicar una transformaci&amp;oacute;n dada a las claves, use &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/map-keys&quot;&gt; &lt;code&gt;mapKeys()&lt;/code&gt; &lt;/a&gt; ; a su vez, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/map-values&quot;&gt; &lt;code&gt;mapValues()&lt;/code&gt; &lt;/a&gt; transforma valores. Ambas funciones usan las transformaciones que toman una entrada de mapa como argumento, por lo que puede operar tanto su clave como su valor.</target>
        </trans-unit>
        <trans-unit id="8770eb3127ee3d553d5540c7c283a25cbf45081e" translate="yes" xml:space="preserve">
          <source>When two or more function overloads have otherwise the same parameter lists that differ only in the return type of a functional parameter, this annotation enables overload selection by the type of the value returned from the lambda function passed to this functional parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c33f3916421868809be7997c01c86f79f8dba67" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;https://github.com/gradle/kotlin-dsl&quot;&gt;Gradle Kotlin DSL&lt;/a&gt;, apply the Kotlin plugins using the &lt;code&gt;plugins { ... }&lt;/code&gt; block. If you apply them with &lt;code&gt;apply { plugin(...) }&lt;/code&gt; instead, you may encounter unresolved references to the extensions generated by Gradle Kotlin DSL. To resolve that, you can comment out the erroneous usages, run the Gradle task &lt;code&gt;kotlinDslAccessorsSnapshot&lt;/code&gt;, then uncomment the usages back and rerun the build or reimport the project into the IDE.</source>
          <target state="translated">Cuando use &lt;a href=&quot;https://github.com/gradle/kotlin-dsl&quot;&gt;Gradle Kotlin DSL&lt;/a&gt; , aplique los complementos de Kotlin usando el bloque de &lt;code&gt;plugins { ... }&lt;/code&gt; . Si los aplica con &lt;code&gt;apply { plugin(...) }&lt;/code&gt; lugar, puede encontrar referencias no resueltas a las extensiones generadas por Gradle Kotlin DSL. Para resolver eso, puede comentar los usos err&amp;oacute;neos, ejecutar la tarea de &lt;code&gt;kotlinDslAccessorsSnapshot&lt;/code&gt; , luego descomentar los usos y volver a ejecutar la compilaci&amp;oacute;n o volver a importar el proyecto al IDE.</target>
        </trans-unit>
        <trans-unit id="969e0f1eba169f04310601e387fff4607230faf4" translate="yes" xml:space="preserve">
          <source>When using AMD, we set the compiler option to use AMD. Once we do that, we can then reference any modules that we've defined as if they were regular AMD ones.</source>
          <target state="translated">Al usar AMD,configuramos la opci√≥n del compilador para usar AMD.Una vez que lo hacemos,podemos referirnos a cualquier m√≥dulo que hayamos definido como si fueran los normales de AMD.</target>
        </trans-unit>
        <trans-unit id="53fe6e4bace8d3f91a163b97ab403728f060528c" translate="yes" xml:space="preserve">
          <source>When using DSLs, one might have come across the problem that too many functions can be called in the context. We can call methods of every available implicit receiver inside a lambda and therefore get an inconsistent result, like the tag &lt;code&gt;head&lt;/code&gt; inside another &lt;code&gt;head&lt;/code&gt;:</source>
          <target state="translated">Al utilizar DSL, es posible que se haya encontrado con el problema de que se pueden llamar a demasiadas funciones en el contexto. Podemos llamar a m&amp;eacute;todos de cada receptor impl&amp;iacute;cito disponible dentro de una lambda y, por lo tanto, obtener un resultado inconsistente, como el &lt;code&gt;head&lt;/code&gt; la etiqueta dentro de otro &lt;code&gt;head&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fac3c8199ff8ff114bd0a9de76148fcb9a8c3dbd" translate="yes" xml:space="preserve">
          <source>When using UMD or CommonJS, for example, your callsite could look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c361123f4c7cb5fe21faa0f281e0ce914b368c3" translate="yes" xml:space="preserve">
          <source>When using a generic type where you have star-projected one or more of its type parameters, you can:</source>
          <target state="translated">Cuando se utiliza un tipo gen√©rico en el que se ha proyectado una estrella o m√°s de sus par√°metros de tipo,se puede:</target>
        </trans-unit>
        <trans-unit id="7db42a19309e043040b1f118ec7a9ccf3b7c095b" translate="yes" xml:space="preserve">
          <source>When using an acronym as part of a declaration name, capitalize it if it consists of two letters (&lt;code&gt;IOStream&lt;/code&gt;); capitalize only the first letter if it is longer (&lt;code&gt;XmlFormatter&lt;/code&gt;, &lt;code&gt;HttpInputStream&lt;/code&gt;).</source>
          <target state="translated">Cuando utilice un acr&amp;oacute;nimo como parte de un nombre de declaraci&amp;oacute;n, &lt;code&gt;IOStream&lt;/code&gt; may&amp;uacute;scula si consta de dos letras ( IOStream ); &lt;code&gt;XmlFormatter&lt;/code&gt; may&amp;uacute;scula solo la primera letra si es m&amp;aacute;s larga ( XmlFormatter , &lt;code&gt;HttpInputStream&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c3685d4fda3e975e4ad59872db610504afb8dcbd" translate="yes" xml:space="preserve">
          <source>When using if/else as an expression, the &lt;code&gt;else&lt;/code&gt; part is mandatory (but there can also be &lt;code&gt;else if&lt;/code&gt; parts). If the body that ends up being evaluated contains more than one line, it's the result of the last line that becomes the result of the &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt;.</source>
          <target state="translated">Cuando se usa if / else como expresi&amp;oacute;n, la parte &lt;code&gt;else&lt;/code&gt; es obligatoria (pero tambi&amp;eacute;n puede haber partes &lt;code&gt;else if&lt;/code&gt; ). Si el cuerpo que termina siendo evaluado contiene m&amp;aacute;s de una l&amp;iacute;nea, es el resultado de la &amp;uacute;ltima l&amp;iacute;nea que se convierte en el resultado del &lt;code&gt;if&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c13d37c9e596a2177cf34971de8b2f9ef301b366" translate="yes" xml:space="preserve">
          <source>When using such &lt;code&gt;klib&lt;/code&gt; in your program, the library is linked automatically.</source>
          <target state="translated">Al usar dicho &lt;code&gt;klib&lt;/code&gt; en su programa, la biblioteca se vincula autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="de988175b9de40e29ae018fb8ec5826b1dac85a5" translate="yes" xml:space="preserve">
          <source>When using the IR compiler, the &lt;code&gt;binaries.executable()&lt;/code&gt; instruction must be present in the &lt;code&gt;js&lt;/code&gt; target configuration block of your &lt;code&gt;build.gradle(.kts)&lt;/code&gt;. If this option is omitted, only Kotlin-internal library files are generated. These files can be used from other projects, but not run on their own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb8f752ff8f2ca50e7eef437c4f1437c5c24a5d" translate="yes" xml:space="preserve">
          <source>When using the command-line compiler, add the compiler option &lt;code&gt;-Xuse-ir&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23eb1fb1d8c12c86796891c59eb085c47d128eb5" translate="yes" xml:space="preserve">
          <source>When using the command-line compiler, switch to explicit API mode by adding the &lt;code&gt;-Xexplicit-api&lt;/code&gt; compiler option with the value &lt;code&gt;strict&lt;/code&gt; or &lt;code&gt;warning&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0acd4ad721ee61253910c4ba13a8be0c94889bbe" translate="yes" xml:space="preserve">
          <source>When we call a &lt;code&gt;vararg&lt;/code&gt;-function, we can pass arguments one-by-one, e.g. &lt;code&gt;asList(1, 2, 3)&lt;/code&gt;, or, if we already have an array and want to pass its contents to the function, we use the &lt;strong&gt;spread&lt;/strong&gt; operator (prefix the array with &lt;code&gt;*&lt;/code&gt;):</source>
          <target state="translated">Cuando llamamos a una &lt;code&gt;vararg&lt;/code&gt; vararg, podemos pasar argumentos uno por uno, por ejemplo, &lt;code&gt;asList(1, 2, 3)&lt;/code&gt; , o, si ya tenemos una matriz y queremos pasar su contenido a la funci&amp;oacute;n, usamos la &lt;strong&gt;extensi&amp;oacute;n&lt;/strong&gt; operador (prefijo la matriz con &lt;code&gt;*&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="79dc6e08abcd7d48d398a4ca21168dbf49b9bdf0" translate="yes" xml:space="preserve">
          <source>When we call methods on variables of platform types, Kotlin does not issue nullability errors at compile time, but the call may fail at runtime, because of a null-pointer exception or an assertion that Kotlin generates to prevent nulls from propagating:</source>
          <target state="translated">Cuando llamamos a los m√©todos sobre variables de tipos de plataformas,Kotlin no emite errores de anulabilidad en tiempo de compilaci√≥n,pero la llamada puede fallar en tiempo de ejecuci√≥n,debido a una excepci√≥n de nulidad o a una afirmaci√≥n que Kotlin genera para evitar que los nulos se propaguen:</target>
        </trans-unit>
        <trans-unit id="ad1fe34b679899f7dee6782797e3bf361c2fe90a" translate="yes" xml:space="preserve">
          <source>When we declare many types in our supertype list, it may appear that we inherit more than one implementation of the same method. For example</source>
          <target state="translated">Cuando declaramos muchos tipos en nuestra lista de supertipos,puede parecer que heredamos m√°s de una implementaci√≥n del mismo m√©todo.Por ejemplo</target>
        </trans-unit>
        <trans-unit id="08c1783813dd9fc626a089b7cae223c9d065db16" translate="yes" xml:space="preserve">
          <source>When we have a named function declared like this:</source>
          <target state="translated">Cuando tenemos una funci√≥n nombrada declarada as√≠:</target>
        </trans-unit>
        <trans-unit id="61f9a57deb03c55b45ac7741559138e62485b782" translate="yes" xml:space="preserve">
          <source>When we have a nullable reference &lt;code&gt;b&lt;/code&gt;, we can say &quot;if &lt;code&gt;b&lt;/code&gt; is not null, use it, otherwise use some non-null value&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc0820779d8db91f205b3ecbf7db0ccf41073a0" translate="yes" xml:space="preserve">
          <source>When we have a nullable reference &lt;code&gt;r&lt;/code&gt;, we can say &quot;if &lt;code&gt;r&lt;/code&gt; is not null, use it, otherwise use some non-null value &lt;code&gt;x&lt;/code&gt;&quot;:</source>
          <target state="translated">Cuando tenemos una referencia &lt;code&gt;r&lt;/code&gt; anulable , podemos decir &quot;si &lt;code&gt;r&lt;/code&gt; no es nulo, util&amp;iacute;celo, de lo contrario use alg&amp;uacute;n valor no nulo &lt;code&gt;x&lt;/code&gt; &quot;:</target>
        </trans-unit>
        <trans-unit id="5732d17582b0ef91e5bb01d205646ae68f3db2fc" translate="yes" xml:space="preserve">
          <source>When we pass a lambda to a dynamic call, all of its parameters by default have the type &lt;code&gt;dynamic&lt;/code&gt;:</source>
          <target state="translated">Cuando pasamos una lambda a una llamada din&amp;aacute;mica, todos sus par&amp;aacute;metros por defecto tienen el tipo &lt;code&gt;dynamic&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0be162a260a9be965f47e4e14ba8852bd8d1fa24" translate="yes" xml:space="preserve">
          <source>When we read from &lt;code&gt;p&lt;/code&gt; that delegates to an instance of &lt;code&gt;Delegate&lt;/code&gt;, the &lt;code&gt;getValue()&lt;/code&gt; function from &lt;code&gt;Delegate&lt;/code&gt; is called, so that its first parameter is the object we read &lt;code&gt;p&lt;/code&gt; from and the second parameter holds a description of &lt;code&gt;p&lt;/code&gt; itself (e.g. you can take its name). For example:</source>
          <target state="translated">Cuando leemos de &lt;code&gt;p&lt;/code&gt; que delega a una instancia de &lt;code&gt;Delegate&lt;/code&gt; , se llama a la funci&amp;oacute;n &lt;code&gt;getValue()&lt;/code&gt; de &lt;code&gt;Delegate&lt;/code&gt; , de modo que su primer par&amp;aacute;metro es el objeto del que leemos &lt;code&gt;p&lt;/code&gt; y el segundo par&amp;aacute;metro contiene una descripci&amp;oacute;n de &lt;code&gt;p&lt;/code&gt; en s&amp;iacute; mismo (por ejemplo, puede tomar su nombre). Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="111d8dd13a5f3aef5861ae64c3f6c02ff4cb90bb" translate="yes" xml:space="preserve">
          <source>When working from IntelliJ IDEA, we can find the &lt;code&gt;run&lt;/code&gt; action in the Gradle tool window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6c6017c96852fa45cd533d083255cb214a9f4c" translate="yes" xml:space="preserve">
          <source>When wrapping chained calls, put the &lt;code&gt;.&lt;/code&gt; character or the &lt;code&gt;?.&lt;/code&gt; operator on the next line, with a single indent:</source>
          <target state="translated">Al envolver llamadas encadenadas, ponga el &lt;code&gt;.&lt;/code&gt; personaje o el &lt;code&gt;?.&lt;/code&gt; operador en la siguiente l&amp;iacute;nea, con una sola sangr&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="9f05d7113cc0860bca9dd1b2c8b1f2efc8346629" translate="yes" xml:space="preserve">
          <source>When writing Kotlin code, an object may need to be converted from a Kotlin type to the equivalent Swift/Objective-C type (or vice versa). In this case a plain old Kotlin cast can be used, e.g.</source>
          <target state="translated">Al escribir el c√≥digo Kotlin,puede ser necesario convertir un objeto de tipo Kotlin al tipo Swift/Objetivo-C equivalente (o viceversa).En este caso,se puede utilizar un molde de Kotlin sencillo,por ejemplo</target>
        </trans-unit>
        <trans-unit id="9cafd8bf742afb2fbc35d3c6537af8b35836e156" translate="yes" xml:space="preserve">
          <source>When writing libraries, it's recommended to follow an additional set of rules to ensure API stability:</source>
          <target state="translated">Cuando se escriben bibliotecas,se recomienda seguir un conjunto adicional de reglas para asegurar la estabilidad de la API:</target>
        </trans-unit>
        <trans-unit id="d741918b948509f4aba6408fd1ef9e8a1136bd6e" translate="yes" xml:space="preserve">
          <source>When writing native applications, oftentimes we need to access certain functionality that is not included in the Kotlin standard library, such as making HTTP requests, reading and writing from disk, etc.</source>
          <target state="translated">Cuando escribimos aplicaciones nativas,a menudo necesitamos acceder a ciertas funcionalidades que no est√°n incluidas en la biblioteca est√°ndar de Kotlin,como hacer peticiones HTTP,leer y escribir desde el disco,etc.</target>
        </trans-unit>
        <trans-unit id="463d09586d01fae3ba7cf55cbbc35d4b7f20011b" translate="yes" xml:space="preserve">
          <source>When you &lt;a href=&quot;mpp-create-lib&quot;&gt;create a multiplatform project&lt;/a&gt;, the Project Wizard automatically applies the &lt;code&gt;kotlin-multiplatform&lt;/code&gt; Gradle plugin in the file &lt;code&gt;build.gradle&lt;/code&gt;(&lt;code&gt;.kts&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3156a4be9cfb99131296400d8e473f56e52183c" translate="yes" xml:space="preserve">
          <source>When you are ready, verify the task with the &lt;strong&gt;Check&lt;/strong&gt; icon at the top of &lt;strong&gt;Task Description&lt;/strong&gt; panel. If you passed, there will be the &lt;strong&gt;Congratulations!&lt;/strong&gt; message:</source>
          <target state="translated">Cuando est&amp;eacute; listo, verifique la tarea con el icono &lt;strong&gt;Verificar&lt;/strong&gt; en la parte superior del panel &lt;strong&gt;Descripci&amp;oacute;n&lt;/strong&gt; de la &lt;strong&gt;tarea&lt;/strong&gt; . Si pas&amp;oacute;, habr&amp;aacute; &lt;strong&gt;felicitaciones! &lt;/strong&gt;mensaje:</target>
        </trans-unit>
        <trans-unit id="598dab40b3272c1fb9a453390cd6e6de1808ea5d" translate="yes" xml:space="preserve">
          <source>When you call a member function on &lt;code&gt;this&lt;/code&gt;, you can skip the &lt;code&gt;this.&lt;/code&gt; part. If you have a non-member function with the same name, use this with caution, because in some cases it can be called instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4f91db759426c5c027f930c965bc523e90edeb" translate="yes" xml:space="preserve">
          <source>When you call this function, the compiler will know that the execution doesn't continue beyond the call:</source>
          <target state="translated">Cuando llame a esta funci√≥n,el compilador sabr√° que la ejecuci√≥n no contin√∫a m√°s all√° de la llamada:</target>
        </trans-unit>
        <trans-unit id="ebc718bb513c3e899345e0a1f6bade26496caf51" translate="yes" xml:space="preserve">
          <source>When you choose the JavaScript target, any Kotlin code that is part of the project as well as the standard library that ships with Kotlin is transpiled to JavaScript. However, this excludes the JDK and any JVM or Java framework or library used. Any file that is not Kotlin will be ignored during compilation.</source>
          <target state="translated">Cuando se elige el objetivo de JavaScript,cualquier c√≥digo de Kotlin que sea parte del proyecto as√≠ como la biblioteca est√°ndar que se env√≠a con Kotlin se transpone a JavaScript.Sin embargo,esto excluye el JDK y cualquier JVM o marco de trabajo Java o biblioteca utilizada.Cualquier archivo que no sea Kotlin ser√° ignorado durante la compilaci√≥n.</target>
        </trans-unit>
        <trans-unit id="61cb3b5bb55f1ec33f90df7914d7d8c5178a623a" translate="yes" xml:space="preserve">
          <source>When you compile a multiplatform project for a specific platform, the code for both the common and platform-specific parts is generated.</source>
          <target state="translated">Cuando se compila un proyecto multiplataforma para una plataforma espec√≠fica,se genera el c√≥digo para las partes comunes y las espec√≠ficas de la plataforma.</target>
        </trans-unit>
        <trans-unit id="a4955e4afeb340ef9f82c25ba0af627acbecccfb" translate="yes" xml:space="preserve">
          <source>When you create a multiplatform project, targets are added to the &lt;code&gt;kotlin&lt;/code&gt; block in the file &lt;code&gt;build.gradle&lt;/code&gt; (&lt;code&gt;build.gradle.kts&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487f53e65f3e40a392960d7ffe8fb70d789db81a" translate="yes" xml:space="preserve">
          <source>When you create a progression implicitly by iterating a range, this progression's &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; elements are the range's endpoints, and the &lt;code&gt;step&lt;/code&gt; is 1.</source>
          <target state="translated">Cuando crea una progresi&amp;oacute;n impl&amp;iacute;citamente iterando un rango, el &lt;code&gt;first&lt;/code&gt; y &lt;code&gt;last&lt;/code&gt; elemento de esta progresi&amp;oacute;n son los puntos finales del rango y el &lt;code&gt;step&lt;/code&gt; es 1.</target>
        </trans-unit>
        <trans-unit id="51bafee0f48839d4b74895eeb5d22b3bc95f6844" translate="yes" xml:space="preserve">
          <source>When you create own implementations of collection interfaces, you must implement their member functions. To make the creation of new implementations easier, use the skeletal implementations of collection interfaces from the standard library: &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-abstract-collection/index&quot;&gt;&lt;code&gt;AbstractCollection&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-abstract-list/index&quot;&gt;&lt;code&gt;AbstractList&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-abstract-set/index&quot;&gt;&lt;code&gt;AbstractSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-abstract-map/index&quot;&gt;&lt;code&gt;AbstractMap&lt;/code&gt;&lt;/a&gt;, and their mutable counterparts.</source>
          <target state="translated">Cuando crea sus propias implementaciones de interfaces de colecci&amp;oacute;n, debe implementar sus funciones miembro. Para facilitar la creaci&amp;oacute;n de nuevas implementaciones, utilice las implementaciones esquel&amp;eacute;ticas de las interfaces de colecci&amp;oacute;n de la biblioteca est&amp;aacute;ndar: &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-abstract-collection/index&quot;&gt; &lt;code&gt;AbstractCollection&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-abstract-list/index&quot;&gt; &lt;code&gt;AbstractList&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-abstract-set/index&quot;&gt; &lt;code&gt;AbstractSet&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-abstract-map/index&quot;&gt; &lt;code&gt;AbstractMap&lt;/code&gt; &lt;/a&gt; y sus contrapartes mutables.</target>
        </trans-unit>
        <trans-unit id="de5ca0060f568734c25c44dc064e42505647a415" translate="yes" xml:space="preserve">
          <source>When you create your own implementations of collection interfaces, you must implement their member functions. To make the creation of new implementations easier, use the skeletal implementations of collection interfaces from the standard library: &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-abstract-collection/index&quot;&gt;&lt;code&gt;AbstractCollection&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-abstract-list/index&quot;&gt;&lt;code&gt;AbstractList&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-abstract-set/index&quot;&gt;&lt;code&gt;AbstractSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-abstract-map/index&quot;&gt;&lt;code&gt;AbstractMap&lt;/code&gt;&lt;/a&gt;, and their mutable counterparts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3c8353ca1e574cdd5fef24454fb4fda2fc3277" translate="yes" xml:space="preserve">
          <source>When you have a &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;Pair&lt;/code&gt;s, you can do the reverse transformation &amp;ndash; &lt;em&gt;unzipping&lt;/em&gt; &amp;ndash; that builds two lists from these pairs:</source>
          <target state="translated">Cuando tiene una &lt;code&gt;List&lt;/code&gt; de &lt;code&gt;Pair&lt;/code&gt; , puede hacer la transformaci&amp;oacute;n inversa, &lt;em&gt;descomprimir&lt;/em&gt; , que crea dos listas a partir de estos pares:</target>
        </trans-unit>
        <trans-unit id="5c27d02fe0802eb2c5dc736c355913900c0370a9" translate="yes" xml:space="preserve">
          <source>When you have a variable or parameter of function type (sometimes called a &lt;em&gt;function reference&lt;/em&gt;), you can call it as if it were an ordinary function, and that will cause the referenced function to be called:</source>
          <target state="translated">Cuando tienes una variable o par&amp;aacute;metro de tipo de funci&amp;oacute;n (a veces llamado &lt;em&gt;referencia de funci&amp;oacute;n&lt;/em&gt; ), puedes llamarlo como si fuera una funci&amp;oacute;n ordinaria, y eso har&amp;aacute; que se llame a la funci&amp;oacute;n referenciada:</target>
        </trans-unit>
        <trans-unit id="e1aaa92f5ddb308d5297a444696d8b7457b69a72" translate="yes" xml:space="preserve">
          <source>When you have finished creating your course, it's a good idea to view your course from a learner's perspective and test it. Right-click on the course view and go to &lt;strong&gt;Course Creator -&amp;gt; Create Course Preview&lt;/strong&gt; to open your course in learner mode:</source>
          <target state="translated">Cuando haya terminado de crear su curso, es una buena idea verlo desde la perspectiva de un alumno y probarlo. Haga clic con el bot&amp;oacute;n derecho en la vista del curso y vaya a &lt;strong&gt;Course Creator -&amp;gt; Crear vista previa del curso&lt;/strong&gt; para abrir su curso en modo de alumno:</target>
        </trans-unit>
        <trans-unit id="a3250cc79c522d1ac623227bb111869e351b8f95" translate="yes" xml:space="preserve">
          <source>When you run this code, you'll see that the &lt;code&gt;filter()&lt;/code&gt; and &lt;code&gt;map()&lt;/code&gt; functions are executed in the same order as they appear in the code. First, you see &lt;code&gt;filter:&lt;/code&gt; for all elements, then &lt;code&gt;length:&lt;/code&gt; for the elements left after filtering, and then the output of the two last lines. This is how the list processing goes:</source>
          <target state="translated">Cuando ejecute este c&amp;oacute;digo, ver&amp;aacute; que las funciones &lt;code&gt;filter()&lt;/code&gt; y &lt;code&gt;map()&lt;/code&gt; se ejecutan en el mismo orden en que aparecen en el c&amp;oacute;digo. Primero, ver&amp;aacute; &lt;code&gt;filter:&lt;/code&gt; para todos los elementos, luego &lt;code&gt;length:&lt;/code&gt; para los elementos que quedan despu&amp;eacute;s de filtrar, y luego la salida de las dos &amp;uacute;ltimas l&amp;iacute;neas. As&amp;iacute; es como va el procesamiento de la lista:</target>
        </trans-unit>
        <trans-unit id="05ad4ed8cb6fd5863366c2a4f1abcdd6e5010b48" translate="yes" xml:space="preserve">
          <source>When you see &lt;code&gt;also&lt;/code&gt; in the code, you can read it as &amp;ldquo;&lt;em&gt;and also do the following with the object.&lt;/em&gt;&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6928284bef91c96791612dd21e00cae5d64a5053" translate="yes" xml:space="preserve">
          <source>When you see &lt;code&gt;also&lt;/code&gt; in the code, you can read it as &amp;ldquo;&lt;em&gt;and also do the following&lt;/em&gt;&amp;rdquo;.</source>
          <target state="translated">Cuando vea &lt;code&gt;also&lt;/code&gt; en el c&amp;oacute;digo, puede leerlo como &quot; &lt;em&gt;y tambi&amp;eacute;n hacer lo siguiente&lt;/em&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="8d24e43a2e1296ae8492ad2425aad4e306037e84" translate="yes" xml:space="preserve">
          <source>When you switch to Kotlin, your xml layout files don't change at all. For instance, you use &lt;code&gt;variable&lt;/code&gt; within &lt;code&gt;data&lt;/code&gt; to describe a variable that may be used within the layout. You can declare a variable of a Kotlin type:</source>
          <target state="translated">Cuando cambia a Kotlin, sus archivos de dise&amp;ntilde;o xml no cambian en absoluto. Por ejemplo, usa &lt;code&gt;variable&lt;/code&gt; dentro de los &lt;code&gt;data&lt;/code&gt; para describir una variable que puede usarse dentro del dise&amp;ntilde;o. Puede declarar una variable de tipo Kotlin:</target>
        </trans-unit>
        <trans-unit id="1239262e94d3c7df345c600c729ad2ad431b78a5" translate="yes" xml:space="preserve">
          <source>When you take an interface or an open class as a parameter, you generally don't know the real type of the parameter at runtime, since it could be an instance of a subclass or of any class that implements the interface. It is possible to check what the exact type is, but like in Python, you should generally avoid it and instead design your class hierarchy such that you can do what you need by proper overriding of functions or properties.</source>
          <target state="translated">Cuando se toma una interfaz o una clase abierta como par√°metro,generalmente no se conoce el tipo real del par√°metro en tiempo de ejecuci√≥n,ya que podr√≠a ser una instancia de una subclase o de cualquier clase que implemente la interfaz.Es posible comprobar cu√°l es el tipo exacto,pero como en Python,generalmente deber√≠as evitarlo y en su lugar dise√±ar tu jerarqu√≠a de clases de manera que puedas hacer lo que necesites anulando adecuadamente las funciones o propiedades.</target>
        </trans-unit>
        <trans-unit id="08daa6c22199d25d4c67e8e2145164a79b9c18ed" translate="yes" xml:space="preserve">
          <source>When you use an API in the code intended for third-party use (a library), you can propagate its opt-in requirement to your API as well. To do this, annotate your declaration with the &lt;a href=&quot;#opt-in-requirement-annotations&quot;&gt;&lt;em&gt;opt-in requirement annotation&lt;/em&gt;&lt;/a&gt; of the API used in its body. This enables you to use the API elements marked with this annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7fe00cf3644a358da554d74666746417284178" translate="yes" xml:space="preserve">
          <source>When you use an arithmetic operator on two integers of different types, the result is &quot;upgraded&quot; to the widest type. Note that the result might still overflow.</source>
          <target state="translated">Cuando se utiliza un operador aritm√©tico en dos n√∫meros enteros de tipos diferentes,el resultado se &quot;actualiza&quot; al tipo m√°s amplio.Tenga en cuenta que el resultado puede seguir desbord√°ndose.</target>
        </trans-unit>
        <trans-unit id="3c62a163cbef716d256d43a2d19d876bb12a78c5" translate="yes" xml:space="preserve">
          <source>When you use an experimental API in the code intended for third-party use (a library), you can mark your API as experimental as well. To do this, annotate your declaration with the &lt;em&gt;experimental marker annotation&lt;/em&gt; of the API used in its body. This enables you to use the API elements annotated with this marker.</source>
          <target state="translated">Cuando utiliza una API experimental en el c&amp;oacute;digo destinado a un uso de terceros (una biblioteca), tambi&amp;eacute;n puede marcar su API como experimental. Para hacer esto, anote su declaraci&amp;oacute;n con la &lt;em&gt;anotaci&amp;oacute;n&lt;/em&gt; de &lt;em&gt;marcador experimental&lt;/em&gt; de la API utilizada en su cuerpo. Esto le permite utilizar los elementos de la API anotados con este marcador.</target>
        </trans-unit>
        <trans-unit id="06b65a21854b89868579d67b03180df54f3544a9" translate="yes" xml:space="preserve">
          <source>When you use named arguments in a function call, you can freely change the order they are listed in, and if you want to use their default values you can just leave them out altogether.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d4e3a5ba4e31277cb9f0e61d2e54f709bf8961" translate="yes" xml:space="preserve">
          <source>When you're annotating a property or a primary constructor parameter, there are multiple Java elements which are generated from the corresponding Kotlin element, and therefore multiple possible locations for the annotation in the generated Java bytecode. To specify how exactly the annotation should be generated, use the following syntax:</source>
          <target state="translated">Cuando se est√° anotando una propiedad o un par√°metro constructor primario,hay m√∫ltiples elementos de Java que se generan a partir del correspondiente elemento Kotlin,y por lo tanto m√∫ltiples ubicaciones posibles para la anotaci√≥n en el bytecode de Java generado.Para especificar c√≥mo debe generarse exactamente la anotaci√≥n,utilice la siguiente sintaxis:</target>
        </trans-unit>
        <trans-unit id="b61884cef7d3f26b08581a78b91851698ab0fd2b" translate="yes" xml:space="preserve">
          <source>Whenever &lt;code&gt;jvmMain&lt;/code&gt; is compiled for a certain target, &lt;code&gt;commonMain&lt;/code&gt; takes part in that compilation as well and is also compiled into the same target binary form, such as JVM class files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ad1e4f32412313aa6f0bd650dfc39dcb173e7f" translate="yes" xml:space="preserve">
          <source>Whenever it is invoked on the same object more than once, the &lt;code&gt;hashCode&lt;/code&gt; method must consistently return the same integer, provided no information used in &lt;code&gt;equals&lt;/code&gt; comparisons on the object is modified.</source>
          <target state="translated">Siempre que se invoca en el mismo objeto m&amp;aacute;s de una vez, el m&amp;eacute;todo &lt;code&gt;hashCode&lt;/code&gt; debe devolver consistentemente el mismo entero, siempre que no se modifique la informaci&amp;oacute;n utilizada en las comparaciones &lt;code&gt;equals&lt;/code&gt; del objeto.</target>
        </trans-unit>
        <trans-unit id="55d78075233bceac802e1984993c3d3b3088601f" translate="yes" xml:space="preserve">
          <source>Whenever you create an instance of this class, you must specify an actual type in place of &lt;code&gt;T&lt;/code&gt;, unless the compiler can infer it from the constructor parameters: &lt;code&gt;TreeNode(&quot;foo&quot;)&lt;/code&gt; or &lt;code&gt;TreeNode&amp;lt;String&amp;gt;(null)&lt;/code&gt;. Every use of this instance will act as if it were an instance of a class that looks like this:</source>
          <target state="translated">Siempre que cree una instancia de esta clase, debe especificar un tipo real en lugar de &lt;code&gt;T&lt;/code&gt; , a menos que el compilador pueda inferirlo de los par&amp;aacute;metros del constructor: &lt;code&gt;TreeNode(&quot;foo&quot;)&lt;/code&gt; o &lt;code&gt;TreeNode&amp;lt;String&amp;gt;(null)&lt;/code&gt; . Cada uso de esta instancia actuar&amp;aacute; como si fuera una instancia de una clase que se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="8ca39f6f0f111844ff04d02c9f4bf0efee656845" translate="yes" xml:space="preserve">
          <source>Whenever you use an arithmetic operator on two integers of the same type (or when you use a unary operator like negation), &lt;em&gt;there is no automatic &quot;upgrading&quot; if the result doesn't fit in the type of the operands!&lt;/em&gt; Try this:</source>
          <target state="translated">Siempre que use un operador aritm&amp;eacute;tico en dos enteros del mismo tipo (o cuando use un operador unario como la negaci&amp;oacute;n), &lt;em&gt;no hay &quot;actualizaci&amp;oacute;n&quot; autom&amp;aacute;tica si el resultado no encaja en el tipo de operandos. &lt;/em&gt;Prueba esto:</target>
        </trans-unit>
        <trans-unit id="b65896c2c2c1091be4cf3076a04d4d7b1bc8f223" translate="yes" xml:space="preserve">
          <source>Whenever you want a variable that can only take on a limited number of values where the only feature of each value is that it's distinct from all the other values, you can create an &lt;em&gt;enum class&lt;/em&gt;:</source>
          <target state="translated">Siempre que desee una variable que solo pueda tomar un n&amp;uacute;mero limitado de valores donde la &amp;uacute;nica caracter&amp;iacute;stica de cada valor es que es distinto de todos los dem&amp;aacute;s valores, puede crear una &lt;em&gt;clase enum&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b72a1d211e3475b177a16c0ad833aad00f45de47" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;__TYPE__&lt;/code&gt; is one of the simple type names and &lt;code&gt;__CTYPE__&lt;/code&gt; is the related Objective-C type, e.g. &lt;code&gt;initWithChar(char)&lt;/code&gt;.</source>
          <target state="translated">Donde &lt;code&gt;__TYPE__&lt;/code&gt; es uno de los nombres de tipo simple y &lt;code&gt;__CTYPE__&lt;/code&gt; es el tipo de Objective-C relacionado, por ejemplo &lt;code&gt;initWithChar(char)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="279ee64e67a8a3e973e45233e8ce0a407cbaf608" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;declarationToKeep&lt;/code&gt; has the following syntax:</source>
          <target state="translated">Donde &lt;code&gt;declarationToKeep&lt;/code&gt; tiene la siguiente sintaxis:</target>
        </trans-unit>
        <trans-unit id="eb06827a60ce404697c981082d7a9ff58779079e" translate="yes" xml:space="preserve">
          <source>Where can I get an HD Kotlin logo?</source>
          <target state="translated">¬øD√≥nde puedo conseguir un logo de HD Kotlin?</target>
        </trans-unit>
        <trans-unit id="00d532d7604042ff0388fc0d8b327eb21555113f" translate="yes" xml:space="preserve">
          <source>Where can I learn more about Kotlin?</source>
          <target state="translated">¬øD√≥nde puedo aprender m√°s sobre Kotlin?</target>
        </trans-unit>
        <trans-unit id="60dc3003b0157a1bb3a0084a1e562958004b1c24" translate="yes" xml:space="preserve">
          <source>Whether a main function should be called</source>
          <target state="translated">Si una funci√≥n principal debe llamarse</target>
        </trans-unit>
        <trans-unit id="350fceb3b43601161521c9570f080755bec5203a" translate="yes" xml:space="preserve">
          <source>Whether metadata file with binary descriptors should be generated</source>
          <target state="translated">Si debe generarse un archivo de metadatos con descriptores binarios</target>
        </trans-unit>
        <trans-unit id="b1689158ae06f88b863b7fd9b887d675c25f4bd4" translate="yes" xml:space="preserve">
          <source>Whether sourcemap file should be generated</source>
          <target state="translated">Si el archivo sourcemap debe ser generado</target>
        </trans-unit>
        <trans-unit id="e52f46f155653a3c2a2e009ba12b0ccd1ff43ab6" translate="yes" xml:space="preserve">
          <source>Which prints:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c668af734b8bab593fb373580041499369e8214b" translate="yes" xml:space="preserve">
          <source>Which versions of JVM does Kotlin target?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02402c88e9d606c5d9042e0b0c12d1739344aeb9" translate="yes" xml:space="preserve">
          <source>While Kotlin annotations look like Python decorators, they are far less flexible: they can generally only be used for metadata. They are pure data-containing classes, and do not contain any executable code. Some built-in annotations have an effect on the compilation process (such as &lt;code&gt;@JvmStatic&lt;/code&gt;), but custom annotations are only useful for providing metadata that can be inspected at runtime by the reflection system. We won't delve deeply into annotations here, but here is an example. The annotations on the annotation declaration itself specify what constructs the annotation may be applied to and whether it is available for runtime inspection.</source>
          <target state="translated">Si bien las anotaciones de Kotlin se parecen a los decoradores de Python, son mucho menos flexibles: generalmente, solo se pueden usar para metadatos. Son clases que contienen datos puros y no contienen ning&amp;uacute;n c&amp;oacute;digo ejecutable. Algunas anotaciones integradas tienen un efecto en el proceso de compilaci&amp;oacute;n (como &lt;code&gt;@JvmStatic&lt;/code&gt; ), pero las anotaciones personalizadas solo son &amp;uacute;tiles para proporcionar metadatos que el sistema de reflexi&amp;oacute;n puede inspeccionar en tiempo de ejecuci&amp;oacute;n. No profundizaremos en las anotaciones aqu&amp;iacute;, pero aqu&amp;iacute; hay un ejemplo. Las anotaciones en la declaraci&amp;oacute;n de la anotaci&amp;oacute;n en s&amp;iacute; especifican a qu&amp;eacute; construcciones se puede aplicar la anotaci&amp;oacute;n y si est&amp;aacute; disponible para la inspecci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a68a67a970d91d390715c4a5723442211582200e" translate="yes" xml:space="preserve">
          <source>While Loops</source>
          <target state="translated">Mientras que los bucles</target>
        </trans-unit>
        <trans-unit id="c1b7c19248a78707f3905a80fc2242e3ecc22b20" translate="yes" xml:space="preserve">
          <source>While being different, conceptually, Flow &lt;em&gt;is&lt;/em&gt; a reactive stream and it is possible to convert it to the reactive (spec and TCK compliant) Publisher and vice versa. Such converters are provided by &lt;code&gt;kotlinx.coroutines&lt;/code&gt; out-of-the-box and can be found in corresponding reactive modules (&lt;code&gt;kotlinx-coroutines-reactive&lt;/code&gt; for Reactive Streams, &lt;code&gt;kotlinx-coroutines-reactor&lt;/code&gt; for Project Reactor and &lt;code&gt;kotlinx-coroutines-rx2&lt;/code&gt;/&lt;code&gt;kotlinx-coroutines-rx3&lt;/code&gt; for RxJava2/RxJava3). Integration modules include conversions from and to &lt;code&gt;Flow&lt;/code&gt;, integration with Reactor's &lt;code&gt;Context&lt;/code&gt; and suspension-friendly ways to work with various reactive entities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178ea4ef9776a99f280cbce3c37b6808c99bffb3" translate="yes" xml:space="preserve">
          <source>While compilation from the console seems to be easy and clear, it does not scale well for larger projects with hundreds of files and libraries. For real-world projects it is recommended to use a &lt;a href=&quot;using-gradle&quot;&gt;build system&lt;/a&gt; and &lt;a href=&quot;using-intellij-idea&quot;&gt;IDE&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405a10cf31f596bca1e965bfbd41f2ec04a34af9" translate="yes" xml:space="preserve">
          <source>While compilation from the console seems to be easy and clear, we should notice, that it does not scale well for bigger projects with hundreds of files and libraries. In addition to this, the command line approach does not explain to an IDE how to open such a project, where the sources are located, what dependencies are used, or how the dependencies are downloaded and so on.</source>
          <target state="translated">Aunque la compilaci√≥n desde la consola parece ser f√°cil y clara,debemos notar,que no se escala bien para proyectos m√°s grandes con cientos de archivos y bibliotecas.Adem√°s,el enfoque de l√≠nea de comandos no explica a un IDE c√≥mo abrir un proyecto de este tipo,d√≥nde se encuentran las fuentes,qu√© dependencias se utilizan o c√≥mo se descargan las dependencias,etc.</target>
        </trans-unit>
        <trans-unit id="1e744f3d4d9082a8982116fd4e4676866618d662" translate="yes" xml:space="preserve">
          <source>While cross-platform compilation is possible, which means using one platform to compile for a different one, in this case we'll be targeting the same platform we're compiling on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce105800554de67a92cb5eed4d6aabf562edfb9" translate="yes" xml:space="preserve">
          <source>While doing so was not useful in this particular example, one could get interesting effects by adding an unprojected parameter type &lt;code&gt;via: Bowl&amp;lt;T&amp;gt;&lt;/code&gt;, in which case the generic type parameter of &lt;code&gt;via&lt;/code&gt; would be forced to be &quot;in-between&quot; those of &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;to&lt;/code&gt;.</source>
          <target state="translated">Si bien hacerlo no fue &amp;uacute;til en este ejemplo en particular, se podr&amp;iacute;an obtener efectos interesantes agregando un tipo de par&amp;aacute;metro no proyectado a &lt;code&gt;via: Bowl&amp;lt;T&amp;gt;&lt;/code&gt; , en cuyo caso el par&amp;aacute;metro de tipo gen&amp;eacute;rico de &lt;code&gt;via&lt;/code&gt; se ver&amp;iacute;a obligado a estar &quot;entre&quot; los de &lt;code&gt;from&lt;/code&gt; y &lt;code&gt;to&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74f25352205ca76e991ebde88bff4a464449ff37" translate="yes" xml:space="preserve">
          <source>While it is possible in Kotlin to dynamically create new classes at runtime or to add members to a class, it's tricky and slow, and generally discouraged. However, it is easy to dynamically inspect an object to see e.g. what properties and functions it contains and which annotations exist on them. This is called &lt;em&gt;reflection&lt;/em&gt;, and it's not very performant, so avoid it unless you really need it.</source>
          <target state="translated">Si bien es posible en Kotlin crear din&amp;aacute;micamente nuevas clases en tiempo de ejecuci&amp;oacute;n o agregar miembros a una clase, es complicado y lento, y generalmente no se recomienda. Sin embargo, es f&amp;aacute;cil inspeccionar din&amp;aacute;micamente un objeto para ver, por ejemplo, qu&amp;eacute; propiedades y funciones contiene y qu&amp;eacute; anotaciones existen en ellas. Esto se llama &lt;em&gt;reflexi&amp;oacute;n&lt;/em&gt; y no es muy eficaz, as&amp;iacute; que ev&amp;iacute;telo a menos que realmente lo necesite.</target>
        </trans-unit>
        <trans-unit id="00ebcc3032e38c0f9dbd212c37ea7b7605032b6f" translate="yes" xml:space="preserve">
          <source>While it is possible to use the command line, either directly or by combining it with a script file (i.e., sh or bat file), we should notice, that it does not scale well for big projects that have hundreds of files and libraries. It is then better to use the Kotlin/Native compiler with a build system, as it helps to download and cache the Kotlin/Native compiler binaries and libraries with transitive dependencies and run the compiler and tests. Kotlin/Native can use the &lt;a href=&quot;https://gradle.org&quot;&gt;Gradle&lt;/a&gt; build system through the &lt;a href=&quot;../../reference/building-mpp-with-gradle&quot;&gt;kotlin-multiplatform&lt;/a&gt; plugin.</source>
          <target state="translated">Si bien es posible usar la l&amp;iacute;nea de comandos, ya sea directamente o combin&amp;aacute;ndola con un archivo de script (es decir, archivo sh o bat), debemos notar que no escala bien para proyectos grandes que tienen cientos de archivos y bibliotecas. Entonces es mejor usar el compilador Kotlin / Native con un sistema de compilaci&amp;oacute;n, ya que ayuda a descargar y almacenar en cach&amp;eacute; los binarios y bibliotecas del compilador Kotlin / Native con dependencias transitivas y ejecutar el compilador y las pruebas. Kotlin / Native puede usar el sistema de compilaci&amp;oacute;n &lt;a href=&quot;https://gradle.org&quot;&gt;Gradle a&lt;/a&gt; trav&amp;eacute;s del &lt;a href=&quot;../../reference/building-mpp-with-gradle&quot;&gt;complemento kotlin-multiplatform&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ccb7cdd4315f54dc22cc954a705304d8025d4496" translate="yes" xml:space="preserve">
          <source>While it is possible to use the command line, either directly or by combining it with a script file (i.e., sh or bat file), we should notice, that it does not scale well for big projects that have hundreds of files and libraries. It is then better to use the Kotlin/Native compiler with a build system, as it helps to download and cache the Kotlin/Native compiler binaries and libraries with transitive dependencies and run the compiler and tests. Kotlin/Native can use the &lt;a href=&quot;https://gradle.org&quot;&gt;Gradle&lt;/a&gt; build system through the &lt;a href=&quot;../../reference/mpp-discover-project#multiplatform-plugin&quot;&gt;kotlin-multiplatform&lt;/a&gt; plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4688c1c9cfee712dab9268862c4aa04c7274850f" translate="yes" xml:space="preserve">
          <source>While it was already possible to extract this variable just before &lt;code&gt;when&lt;/code&gt; , &lt;code&gt;val&lt;/code&gt; in &lt;code&gt;when&lt;/code&gt; has its scope properly restricted to the body of &lt;code&gt;when&lt;/code&gt;, and so preventing namespace pollution. See the full documentation on &lt;code&gt;when&lt;/code&gt;&lt;a href=&quot;control-flow#when-expression&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Si bien ya era posible extraer esta variable justo antes de &lt;code&gt;when&lt;/code&gt; , &lt;code&gt;val&lt;/code&gt; in &lt;code&gt;when&lt;/code&gt; tiene su alcance correctamente restringido al cuerpo de &lt;code&gt;when&lt;/code&gt; , y as&amp;iacute; evitar la contaminaci&amp;oacute;n del espacio de nombres. Consulte la documentaci&amp;oacute;n completa sobre &lt;code&gt;when&lt;/code&gt; &lt;a href=&quot;control-flow#when-expression&quot;&gt;aqu&amp;iacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="18fc211f02fff65fa62198ec0d6b2196f5fda852" translate="yes" xml:space="preserve">
          <source>While most IDE's including &lt;a href=&quot;https://www.jetbrains.com/idea&quot;&gt;IntelliJ IDEA&lt;/a&gt; can generate the corresponding Gradle file, we're going to take a look at how to create this manually, to have a better understanding of how things work under the covers. If you'd like to use the IDE, check out &lt;a href=&quot;using-intellij-idea&quot;&gt;Using IntelliJ IDEA&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf1dfe40b0f0a7f06896b58374c31b6b8d9a056" translate="yes" xml:space="preserve">
          <source>While most of the language changes were already announced through other channels, like update changelogs or compiler warnings, this document summarizes them all, providing a complete reference for migration from Kotlin 1.2 to Kotlin 1.3</source>
          <target state="translated">Si bien la mayor√≠a de los cambios de idioma ya se anunciaron por otros canales,como los registros de cambios de actualizaci√≥n o las advertencias del compilador,en el presente documento se resumen todos ellos,proporcionando una referencia completa para la migraci√≥n de Kotlin 1.2 a Kotlin 1.3</target>
        </trans-unit>
        <trans-unit id="b3798978e8389c22f139d4b97896bde1b7b9685d" translate="yes" xml:space="preserve">
          <source>While most of the language changes were already announced through other channels, like update changelogs or compiler warnings, this document summarizes them all, providing a complete reference for migration from Kotlin 1.3 to Kotlin 1.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399ba37d2ce977b9a644dbef3594c75ca535f65a" translate="yes" xml:space="preserve">
          <source>While the above solution works well for situations in which we have a corresponding header file (be this something we've defined ourselves or converted from a TypeScript header), often times we need to work with some library that does not have a header. For instance, let's say we want to use a jQuery plugin, that allows us to convert an HTML table to a nice looking navigable grid.</source>
          <target state="translated">Aunque la soluci√≥n anterior funciona bien para situaciones en las que tenemos un archivo de cabecera correspondiente (ya sea algo que hemos definido nosotros mismos o convertido a partir de una cabecera de TypeScript),a menudo tenemos que trabajar con alguna biblioteca que no tenga una cabecera.Por ejemplo,digamos que queremos usar un plugin jQuery,que nos permite convertir una tabla HTML en una grilla navegable de aspecto agradable.</target>
        </trans-unit>
        <trans-unit id="7193542d5cd6b24f8c9a4e41a255c37b1a878838" translate="yes" xml:space="preserve">
          <source>While the converter is not fool-proof, it does a pretty decent job of converting most boilerplate code from Java to Kotlin. Some manual tweaking however is sometimes required.</source>
          <target state="translated">Aunque el convertidor no es a prueba de tontos,hace un trabajo bastante decente al convertir la mayor√≠a del c√≥digo de la placa de calderas de Java a Kotlin.Sin embargo,a veces se requiere alg√∫n ajuste manual.</target>
        </trans-unit>
        <trans-unit id="d3c9392710d351a08ea5a20fd29014ffdd0dc8f8" translate="yes" xml:space="preserve">
          <source>While the dots suggest that packages are nested inside each other, that's not actually the case from a language standpoint. While it's a good idea to organize your code such that the &quot;subpackages&quot; of &lt;code&gt;content&lt;/code&gt;, such as &lt;code&gt;content.exercises&lt;/code&gt; and &lt;code&gt;content.articles&lt;/code&gt;, both contain content-related code, these three packages are unrelated from a language standpoint. However, if you use &lt;em&gt;modules&lt;/em&gt; (as defined by your build system), it is typically the case that all &quot;subpackages&quot; go in the same module, in which case symbols with &lt;a href=&quot;visibility-modifiers&quot;&gt;&lt;code&gt;internal&lt;/code&gt; visibility&lt;/a&gt; are visible throughout the subpackages.</source>
          <target state="translated">Si bien los puntos sugieren que los paquetes est&amp;aacute;n anidados unos dentro de otros, ese no es el caso desde el punto de vista del lenguaje. Si bien es una buena idea organizar su c&amp;oacute;digo de manera que los &quot;subpaquetes&quot; de &lt;code&gt;content&lt;/code&gt; , como &lt;code&gt;content.exercises&lt;/code&gt; y &lt;code&gt;content.articles&lt;/code&gt; , ambos contengan c&amp;oacute;digo relacionado con el contenido, estos tres paquetes no est&amp;aacute;n relacionados desde el punto de vista del lenguaje. Sin embargo, si usa &lt;em&gt;m&amp;oacute;dulos&lt;/em&gt; (seg&amp;uacute;n lo definido por su sistema de compilaci&amp;oacute;n), es t&amp;iacute;pico que todos los &quot;subpaquetes&quot; vayan en el mismo m&amp;oacute;dulo, en cuyo caso los s&amp;iacute;mbolos con &lt;a href=&quot;visibility-modifiers&quot;&gt;visibilidad &lt;/a&gt; &lt;code&gt;internal&lt;/code&gt; son visibles en todos los subpaquetes.</target>
        </trans-unit>
        <trans-unit id="6f4289b089753c293140e137503818ca7bef2f53" translate="yes" xml:space="preserve">
          <source>While the output of the compiler does not have any dependencies or virtual machine requirements, the compiler itself and the Gradle build system require a Java 1.8 or 11 runtime. Check out the &lt;a href=&quot;https://jdk.java.net/11/&quot;&gt;https://jdk.java.net/11&lt;/a&gt; or another resource for the best JRE, OpenJDK, or JDK distribution.</source>
          <target state="translated">Si bien la salida del compilador no tiene dependencias ni requisitos de m&amp;aacute;quina virtual, el compilador en s&amp;iacute; y el sistema de compilaci&amp;oacute;n Gradle requieren un tiempo de ejecuci&amp;oacute;n de Java 1.8 o 11. Consulte &lt;a href=&quot;https://jdk.java.net/11/&quot;&gt;https://jdk.java.net/11&lt;/a&gt; u otro recurso para obtener la mejor distribuci&amp;oacute;n de JRE, OpenJDK o JDK.</target>
        </trans-unit>
        <trans-unit id="10c2d0246f094d4009ab7bad0367365f4bcc7c84" translate="yes" xml:space="preserve">
          <source>While the output of the compiler does not have any dependencies or virtual machine requirements, the compiler itself requires &lt;a href=&quot;https://jdk.java.net/11/&quot;&gt;Java 1.8 or higher runtime&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d621226a511f26c66770b36d29a5c867fde780" translate="yes" xml:space="preserve">
          <source>While this example happened to use the same expression, that is not necessary - overloaded functions can do completely different things if need be (although your code can get confusing if you make functions that have very different behavior be overloads of each other).</source>
          <target state="translated">Aunque en este ejemplo se utiliz√≥ la misma expresi√≥n,no es necesario-las funciones sobrecargadas pueden hacer cosas completamente diferentes si es necesario (aunque tu c√≥digo puede resultar confuso si haces que funciones que tienen un comportamiento muy diferente se sobrecarguen unas a otras).</target>
        </trans-unit>
        <trans-unit id="68ab041f58d77da2145ef925bbf99b70a47a9c63" translate="yes" xml:space="preserve">
          <source>While uploading your library to Bintray, you will see multiple versions for each artifact (such as &lt;code&gt;my-library-jvm&lt;/code&gt;, &lt;code&gt;my-library-metadata&lt;/code&gt;, etc.). To fix this, add &lt;code&gt;systemProp.org.gradle.internal.publish.checksums.insecure=true&lt;/code&gt;. See &lt;a href=&quot;https://github.com/gradle/gradle/issues/11412&quot;&gt;this issue&lt;/a&gt; for details. This is a common Gradle 6.0 issue that is neither MPP nor Kotlin specific.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d4507848ac2db4dd040b8f1b98e137154ce676" translate="yes" xml:space="preserve">
          <source>While we don&amp;rsquo;t recommend it, you can use a wildcard &lt;code&gt;*&lt;/code&gt; in place of a version number if you do not want to specify a version or version range explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79482c24120b8d210f4051a8c238d3feb29fa237" translate="yes" xml:space="preserve">
          <source>Who develops Kotlin?</source>
          <target state="translated">¬øQui√©n desarrolla Kotlin?</target>
        </trans-unit>
        <trans-unit id="6b8ca7e4bd278a327d17a1ff62cc87137c652d74" translate="yes" xml:space="preserve">
          <source>Why Kotlin/Native?</source>
          <target state="translated">¬øPor qu√© Kotlin/Nativo?</target>
        </trans-unit>
        <trans-unit id="5327cb3e3f7820311f240e8254b2120a882043dc" translate="yes" xml:space="preserve">
          <source>Why not just add required manifest options to all Kotlin libraries</source>
          <target state="translated">¬øPor qu√© no a√±adir las opciones de manifiesto requeridas a todas las bibliotecas de Kotlin</target>
        </trans-unit>
        <trans-unit id="dc289721e21b7419371258307342fbd161fffe25" translate="yes" xml:space="preserve">
          <source>Wildcard-types</source>
          <target state="translated">Wildcard-types</target>
        </trans-unit>
        <trans-unit id="1a6e732a37845c36fcda3afa6f1ba0d920b0ebca" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers</source>
          <target state="translated">WindowEventHandlers</target>
        </trans-unit>
        <trans-unit id="0be6c8c411ba30d8cffb7e90ca7acef58e77aa71" translate="yes" xml:space="preserve">
          <source>WindowLocalStorage</source>
          <target state="translated">WindowLocalStorage</target>
        </trans-unit>
        <trans-unit id="4695cae95157eec4a2f36b8710914191b7160a60" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope</source>
          <target state="translated">WindowOrWorkerGlobalScope</target>
        </trans-unit>
        <trans-unit id="837e70bad69f4bf6bd4622325d1fb73918d9e99b" translate="yes" xml:space="preserve">
          <source>WindowSessionStorage</source>
          <target state="translated">WindowSessionStorage</target>
        </trans-unit>
        <trans-unit id="7d22ecce0385c959845f551d5a3b5ab183398dfa" translate="yes" xml:space="preserve">
          <source>Windowed</source>
          <target state="translated">Windowed</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="628596087f96fc1704310fa20e91f817ad0907ae" translate="yes" xml:space="preserve">
          <source>Windows (mingw x86_64, x86)</source>
          <target state="translated">Windows (mingw x86_64,x86)</target>
        </trans-unit>
        <trans-unit id="3501a24aebe2c74160390742479cffed6294f769" translate="yes" xml:space="preserve">
          <source>Windows targets require a Windows host;</source>
          <target state="translated">Los objetivos Windows requieren un host Windows;</target>
        </trans-unit>
        <trans-unit id="ce9d44e441b23e1629b147f917e9518ae0913959" translate="yes" xml:space="preserve">
          <source>Windows: &lt;code&gt;libnative_api.h&lt;/code&gt;, &lt;code&gt;libnative_symbols.def&lt;/code&gt; and &lt;code&gt;libnative.dll&lt;/code&gt;</source>
          <target state="translated">Windows: &lt;code&gt;libnative_api.h&lt;/code&gt; , &lt;code&gt;libnative_symbols.def&lt;/code&gt; y &lt;code&gt;libnative.dll&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1a374d672ab75b4235e338c90ddfcf6afbecca5" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://plugins.jetbrains.com/plugin/10081-edutools&quot;&gt;EduTools&lt;/a&gt; plugin you can learn and teach Kotlin through code practicing tasks. It is available both in &lt;a href=&quot;https://developer.android.com/studio&quot;&gt;Android Studio&lt;/a&gt; and &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;IntelliJ IDEA&lt;/a&gt;. This tutorial describes course creation for an educator. If you want to use EduTools plugin for learning, read &lt;a href=&quot;edu-tools-learner&quot;&gt;&quot;Learning Kotlin with EduTools plugin&quot;&lt;/a&gt;.</source>
          <target state="translated">Con el complemento &lt;a href=&quot;https://plugins.jetbrains.com/plugin/10081-edutools&quot;&gt;EduTools&lt;/a&gt; puedes aprender y ense&amp;ntilde;ar a Kotlin a trav&amp;eacute;s de tareas de pr&amp;aacute;ctica de c&amp;oacute;digo. Est&amp;aacute; disponible tanto en &lt;a href=&quot;https://developer.android.com/studio&quot;&gt;Android Studio&lt;/a&gt; como en &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;IntelliJ IDEA&lt;/a&gt; . Este tutorial describe la creaci&amp;oacute;n de cursos para un educador. Si desea utilizar el complemento EduTools para aprender, lea &lt;a href=&quot;edu-tools-learner&quot;&gt;&quot;Aprender Kotlin con el complemento EduTools&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d7e4afdf3ca90295d086cf8bfcf9a9049903e7a2" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://plugins.jetbrains.com/plugin/10081-edutools&quot;&gt;EduTools&lt;/a&gt; plugin you can learn and teach Kotlin through code practicing tasks. It is available both in &lt;a href=&quot;https://developer.android.com/studio&quot;&gt;Android Studio&lt;/a&gt; and &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;IntelliJ IDEA&lt;/a&gt;. This tutorial describes the interactive learning. If you want to use the EduTools plugin for teaching, read &lt;a href=&quot;edu-tools-educator&quot;&gt;&quot;Teaching Kotlin with EduTools plugin&quot;&lt;/a&gt;.</source>
          <target state="translated">Con el complemento &lt;a href=&quot;https://plugins.jetbrains.com/plugin/10081-edutools&quot;&gt;EduTools&lt;/a&gt; puedes aprender y ense&amp;ntilde;ar a Kotlin a trav&amp;eacute;s de tareas de pr&amp;aacute;ctica de c&amp;oacute;digo. Est&amp;aacute; disponible tanto en &lt;a href=&quot;https://developer.android.com/studio&quot;&gt;Android Studio&lt;/a&gt; como en &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;IntelliJ IDEA&lt;/a&gt; . Este tutorial describe el aprendizaje interactivo. Si desea utilizar el complemento EduTools para la ense&amp;ntilde;anza, lea &lt;a href=&quot;edu-tools-educator&quot;&gt;&quot;Ense&amp;ntilde;ando Kotlin con el complemento EduTools&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ddbee1008f9f20e446d88d4f79956907a6b4c399" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;mpp-share-on-platforms#share-code-on-similar-platforms&quot;&gt;the new hierarchical project structure support&lt;/a&gt;, you can share code among several targets in a multiplatform project. You can use platform-dependent libraries, such as &lt;code&gt;Foundation&lt;/code&gt;, &lt;code&gt;UIKit&lt;/code&gt;, and &lt;code&gt;posix&lt;/code&gt; in source sets shared among several native targets. This can help you share more native code without being limited by platform-specific dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c32707acceb3a92d660aaa2664e3b3b359ee59" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;let&lt;/code&gt;, you can rewrite it:</source>
          <target state="translated">Con &lt;code&gt;let&lt;/code&gt; , puede reescribirlo:</target>
        </trans-unit>
        <trans-unit id="af688b954f4540e476c35b0f74f11c5204100c85" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;lisa&lt;/code&gt; and &lt;code&gt;anne&lt;/code&gt; from the infix example, you can now do:</source>
          <target state="translated">Con &lt;code&gt;lisa&lt;/code&gt; y &lt;code&gt;anne&lt;/code&gt; del ejemplo infijo, ahora puede hacer:</target>
        </trans-unit>
        <trans-unit id="32acfa5cff03b7f1ee491ea16213412942069586" translate="yes" xml:space="preserve">
          <source>With Gradle 6.0 and above, you are now able to load all scripts at once as opposed to the previous implementation where they were loaded individually. Since each request requires the Gradle configuration phase to be executed, this could be resource-intensive for large Gradle projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bc622686f7933d6457fe256aa33e7162dce61a" translate="yes" xml:space="preserve">
          <source>With Gradle Kotlin DSL, configure source sets with &lt;code&gt;java.sourceSets { ... }&lt;/code&gt; instead.</source>
          <target state="translated">Con Gradle Kotlin DSL, configure los conjuntos de fuentes con &lt;code&gt;java.sourceSets { ... }&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="bf21fbd8ac94a33fdcdb64a0972b9b5c1c2c5132" translate="yes" xml:space="preserve">
          <source>With Gradle metadata enabled, an additional 'root' publication named &lt;code&gt;kotlinMultiplatform&lt;/code&gt; is added to the project's publications. The default artifact ID of this publication matches the project name without any additional suffix. To configure this publication, access it via the &lt;code&gt;publishing { ... }&lt;/code&gt; DSL of the &lt;code&gt;maven-publish&lt;/code&gt; plugin:</source>
          <target state="translated">Con los metadatos de Gradle habilitados, se agrega una publicaci&amp;oacute;n 'ra&amp;iacute;z' adicional llamada &lt;code&gt;kotlinMultiplatform&lt;/code&gt; a las publicaciones del proyecto. El ID de artefacto predeterminado de esta publicaci&amp;oacute;n coincide con el nombre del proyecto sin ning&amp;uacute;n sufijo adicional. Para configurar esta publicaci&amp;oacute;n, acceda a ella a trav&amp;eacute;s de la &lt;code&gt;publishing { ... }&lt;/code&gt; DSL del complemento &lt;code&gt;maven-publish&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cfc45b937026fd4fbaf26509635a71da2f380172" translate="yes" xml:space="preserve">
          <source>With Kotlin 1.3, it is possible to mark members of a &lt;code&gt;companion&lt;/code&gt; object of interfaces with annotations &lt;code&gt;@JvmStatic&lt;/code&gt; and &lt;code&gt;@JvmField&lt;/code&gt;. In the classfile, such members will be lifted to the corresponding interface and marked as &lt;code&gt;static&lt;/code&gt;.</source>
          <target state="translated">Con Kotlin 1.3, es posible marcar miembros de un objeto &lt;code&gt;companion&lt;/code&gt; de interfaces con anotaciones &lt;code&gt;@JvmStatic&lt;/code&gt; y &lt;code&gt;@JvmField&lt;/code&gt; . En el archivo de clase, dichos miembros se elevar&amp;aacute;n a la interfaz correspondiente y se marcar&amp;aacute;n como &lt;code&gt;static&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b65590d91561b1b8e789678b4dd06427d7909a3" translate="yes" xml:space="preserve">
          <source>With Kotlin 1.4 you can now add a trailing comma in enumerations such as argument and parameter lists, &lt;code&gt;when&lt;/code&gt; entries, and components of destructuring declarations. With a trailing comma, you can add new items and change their order without adding or removing commas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492f25a9a5171ae34e810e40b21b2cb1efcdaaeb" translate="yes" xml:space="preserve">
          <source>With Kotlin 1.4, you can use the new tools in IntelliJ IDEA to simplify Kotlin development:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed9b754f624185d343cb02b0b8d34dd9ae4ed13" translate="yes" xml:space="preserve">
          <source>With Kotlin 1.4.0, we are shipping the first stable version of &lt;a href=&quot;https://github.com/Kotlin/kotlinx.serialization&quot;&gt;kotlinx.serialization&lt;/a&gt; - 1.0.0-RC. Now we are pleased to declare the JSON serialization API in &lt;code&gt;kotlinx-serialization-core&lt;/code&gt; (previously known as &lt;code&gt;kotlinx-serialization-runtime&lt;/code&gt;) stable. Libraries for other serialization formats remain experimental, along with some advanced parts of the core library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6d7af5fe3aafc8094b8a2cfd86e6ef8192a99f" translate="yes" xml:space="preserve">
          <source>With Kotlin &lt;a href=&quot;../../reference/multiplatform&quot;&gt;multiplatform&lt;/a&gt; projects, it is possible to share the same Kotlin code between all the supported platforms. Check out the tutorial on &lt;a href=&quot;mpp-ios-android&quot;&gt;sharing Kotlin code between iOS and Android&lt;/a&gt; or have a look at how to build your own &lt;a href=&quot;../multiplatform-library&quot;&gt;multiplatform library&lt;/a&gt;.</source>
          <target state="translated">Con los proyectos &lt;a href=&quot;../../reference/multiplatform&quot;&gt;multiplataforma de&lt;/a&gt; Kotlin , es posible compartir el mismo c&amp;oacute;digo de Kotlin entre todas las plataformas compatibles. Consulte el tutorial sobre c&amp;oacute;mo &lt;a href=&quot;mpp-ios-android&quot;&gt;compartir c&amp;oacute;digo Kotlin entre iOS y Android&lt;/a&gt; o eche un vistazo a c&amp;oacute;mo crear su propia &lt;a href=&quot;../multiplatform-library&quot;&gt;biblioteca multiplataforma&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="63565c10375a2623a1558273ad959c355a70e5ce" translate="yes" xml:space="preserve">
          <source>With Kotlin Gradle DSL, the sections of predefined source sets should be marked &lt;code&gt;by getting&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7fe3c48a3cadc6919466836bffd195ba2a63be" translate="yes" xml:space="preserve">
          <source>With Kotlin Multiplatform libraries, you can reuse the multiplatform logic in common and platform-specific code. Common code can rely on a set of libraries that cover everyday tasks such as &lt;a href=&quot;http://ktor.io/clients/http-client/multiplatform.html&quot;&gt;HTTP&lt;/a&gt;, &lt;a href=&quot;https://github.com/Kotlin/kotlinx.serialization&quot;&gt;serialization&lt;/a&gt;, and &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines&quot;&gt;managing coroutines&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3221afc2f20039e82884001a629bfe8610d1ab" translate="yes" xml:space="preserve">
          <source>With Kotlin Multiplatform, share the code using the mechanisms Kotlin provides:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbab2d42979bafe508a0df0d9f59300200f67c7" translate="yes" xml:space="preserve">
          <source>With Kotlin Multiplatform, spend less time on writing and maintaining the same code for &lt;a href=&quot;mpp-supported-platforms&quot;&gt;different platforms&lt;/a&gt; &amp;ndash; just share it using the mechanisms Kotlin provides:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e972123cd69ffcab96ad056c6c91d5aacf5be07" translate="yes" xml:space="preserve">
          <source>With Kotlin Multiplatform, you can share the code using the mechanisms Kotlin provides:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3962fde44c4aec537b82dcd2abfc22db4cc626fa" translate="yes" xml:space="preserve">
          <source>With a value of 1, walker visits only the origin directory and all its immediate children, with a value of 2 also grandchildren, etc.</source>
          <target state="translated">Con un valor de 1,el caminante visita s√≥lo el directorio de origen y todos sus hijos inmediatos,con un valor de 2 tambi√©n los nietos,etc.</target>
        </trans-unit>
        <trans-unit id="ef51393788d21d74c116e9c29eea336ed0a6d471" translate="yes" xml:space="preserve">
          <source>With callbacks, the idea is to pass one function as a parameter to another function, and have this one invoked once the process has completed.</source>
          <target state="translated">Con las llamadas de retorno,la idea es pasar una funci√≥n como par√°metro a otra funci√≥n,y hacer que √©sta sea invocada una vez que el proceso haya terminado.</target>
        </trans-unit>
        <trans-unit id="016040b5eae4bf27f5a939a1b5c8156662185437" translate="yes" xml:space="preserve">
          <source>With collections and functions, polymorphism becomes more complicated - see the section on &lt;a href=&quot;generics&quot;&gt;generics&lt;/a&gt;.</source>
          <target state="translated">Con colecciones y funciones, el polimorfismo se vuelve m&amp;aacute;s complicado; consulte la secci&amp;oacute;n sobre &lt;a href=&quot;generics&quot;&gt;gen&amp;eacute;ricos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c1dcb9e12e7f211f30c8a5176d8ae68de49c58b9" translate="yes" xml:space="preserve">
          <source>With either version of the import, you can now simply do:</source>
          <target state="translated">Con cualquiera de las versiones de la importaci√≥n,ahora puedes simplemente hacer:</target>
        </trans-unit>
        <trans-unit id="fe95a6fd3800d1f0d89afcda519d105e6e6110b2" translate="yes" xml:space="preserve">
          <source>With function literals, local functions and object expression, functions can be nested in Kotlin. Qualified &lt;em&gt;return&lt;/em&gt;s allow us to return from an outer function. The most important use case is returning from a lambda expression. Recall that when we write this:</source>
          <target state="translated">Con literales de funci&amp;oacute;n, funciones locales y expresi&amp;oacute;n de objeto, las funciones se pueden anidar en Kotlin. Los &lt;em&gt;retornos&lt;/em&gt; calificados nos permiten regresar desde una funci&amp;oacute;n externa. El caso de uso m&amp;aacute;s importante es regresar de una expresi&amp;oacute;n lambda. Recuerda que cuando escribimos esto:</target>
        </trans-unit>
        <trans-unit id="eb6ed75ff29820dbdcda23941139d4c1d4ba7dd2" translate="yes" xml:space="preserve">
          <source>With named arguments we can make the code much more readable:</source>
          <target state="translated">Con argumentos con nombre podemos hacer el c√≥digo mucho m√°s legible:</target>
        </trans-unit>
        <trans-unit id="3450c7c71d6bf1ddf49a4323aca70311d456d430" translate="yes" xml:space="preserve">
          <source>With that, our project should now build and produce the corresponding artifacts.</source>
          <target state="translated">Con eso,nuestro proyecto deber√≠a ahora construir y producir los artefactos correspondientes.</target>
        </trans-unit>
        <trans-unit id="355ad4d87e7870b0c272b188aa3ef65d4dc920f9" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;https://plugins.jetbrains.com/plugin/10081-edutools&quot;&gt;EduTools plugin&lt;/a&gt;, available both in &lt;a href=&quot;https://developer.android.com/studio&quot;&gt;Android Studio&lt;/a&gt; and &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;IntelliJ IDEA&lt;/a&gt;, you can learn Kotlin through code practicing tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b14af153f14d3f9734df37394a46678fa4ba5c" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;https://plugins.jetbrains.com/plugin/10081-edutools&quot;&gt;EduTools plugin&lt;/a&gt;, available both in &lt;a href=&quot;https://developer.android.com/studio&quot;&gt;Android Studio&lt;/a&gt; and &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;IntelliJ IDEA&lt;/a&gt;, you can teach Kotlin through code practicing tasks. Take a look at the &lt;a href=&quot;https://www.jetbrains.com/help/education/educator-start-guide.html?section=Kotlin&quot;&gt;Educator Start Guide&lt;/a&gt; to learn how to create a simple Kotlin course that includes a set of programming tasks and integrated tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5382fb55641e05a034b3ea5d0c0d4be768aee31" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;PropertyDelegateProvider&lt;/code&gt; interface from the standard library, you can create delegate providers without creating new classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadda346a2629bde84d619a153f6df49f573d66b" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;cancellable&lt;/code&gt; operator only the numbers from 1 to 3 are collected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f45b301e2a74f1dd5893d4a531ceba47efa69ee" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;kotlin-multiplatform&lt;/code&gt; plugin &lt;strong&gt;source&lt;/strong&gt;&lt;strong&gt;sets&lt;/strong&gt; are also used to group sources but source files for different platforms are located in different source sets. For each declared target two source sets are created: &lt;code&gt;&amp;lt;target-name&amp;gt;Main&lt;/code&gt; and &lt;code&gt;&amp;lt;target-name&amp;gt;Test&lt;/code&gt; containing product and test sources for this platform. Common for all platforms sources are located in &lt;code&gt;commonMain&lt;/code&gt; and &lt;code&gt;commonTest&lt;/code&gt; source sets created by default. More information about source sets can be found &lt;a href=&quot;../building-mpp-with-gradle#configuring-source-sets&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Con los &lt;code&gt;kotlin-multiplatform&lt;/code&gt; plug-in &lt;strong&gt;de c&amp;oacute;digo &lt;/strong&gt;&lt;strong&gt;conjuntos&lt;/strong&gt; tambi&amp;eacute;n se utilizan para las fuentes grupo, pero los archivos de origen para diferentes plataformas se encuentran en diferentes conjuntos de origen. Para cada destino declarado, se crean dos conjuntos de fuentes: &lt;code&gt;&amp;lt;target-name&amp;gt;Main&lt;/code&gt; y &lt;code&gt;&amp;lt;target-name&amp;gt;Test&lt;/code&gt; contiene el producto y las fuentes de prueba para esta plataforma. Las fuentes comunes para todas las plataformas se encuentran en los &lt;code&gt;commonMain&lt;/code&gt; fuentes commonTest y &lt;code&gt;commonTest&lt;/code&gt; creados de forma predeterminada. Puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre conjuntos de fuentes &lt;a href=&quot;../building-mpp-with-gradle#configuring-source-sets&quot;&gt;aqu&amp;iacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c5d94234e74f15ed4145669bdb5e37f9dfb14ae3" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;kotlin-multiplatform&lt;/code&gt; plugin a compilation always produces a &lt;code&gt;*.klib&lt;/code&gt; file. A separate &lt;code&gt;binaries&lt;/code&gt; block is used to configure what final native binaries should be produced by each target. Each binary can be configured independently including linker options, executable entry point etc.</source>
          <target state="translated">Con el &lt;code&gt;kotlin-multiplatform&lt;/code&gt; una compilaci&amp;oacute;n siempre produce un archivo &lt;code&gt;*.klib&lt;/code&gt; . Se utiliza un bloque de &lt;code&gt;binaries&lt;/code&gt; independiente para configurar qu&amp;eacute; binarios nativos finales debe producir cada objetivo. Cada binario se puede configurar de forma independiente, incluidas las opciones del enlazador, el punto de entrada ejecutable, etc.</target>
        </trans-unit>
        <trans-unit id="c6cb3a91147cfe093062a0839b721e658dabc4bd" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;kotlin-multiplatform&lt;/code&gt; plugin interops are configured as a part of a compilation (see details &lt;a href=&quot;../building-mpp-with-gradle#cinterop-support&quot;&gt;here&lt;/a&gt;). The rest of an interop configuration is the same as for the &lt;code&gt;kotlin-platform-native&lt;/code&gt; plugin.</source>
          <target state="translated">Con el &lt;code&gt;kotlin-multiplatform&lt;/code&gt; interops se configuran como parte de una compilaci&amp;oacute;n (consulte los detalles &lt;a href=&quot;../building-mpp-with-gradle#cinterop-support&quot;&gt;aqu&amp;iacute;&lt;/a&gt; ). El resto de la configuraci&amp;oacute;n de interoperabilidad es el mismo que para el &lt;code&gt;kotlin-platform-native&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1706d3b6b7ce15bdbf71dc7c9e04a857f530061f" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;kotlin-multiplatform&lt;/code&gt; plugin target platforms can be added into a project using special methods available in the &lt;code&gt;kotlin&lt;/code&gt; extension. Each method adds into a project one &lt;strong&gt;target&lt;/strong&gt; which can be accessed using the &lt;code&gt;targets&lt;/code&gt; property. Each target can be configured independently including output kinds, additional compiler options etc. See details about targets at the &lt;a href=&quot;../building-mpp-with-gradle#setting-up-targets&quot;&gt;corresponding page&lt;/a&gt;.</source>
          <target state="translated">Con el &lt;code&gt;kotlin-multiplatform&lt;/code&gt; las plataformas de destino se pueden agregar a un proyecto utilizando m&amp;eacute;todos especiales disponibles en la extensi&amp;oacute;n &lt;code&gt;kotlin&lt;/code&gt; . Cada m&amp;eacute;todo agrega a un proyecto un &lt;strong&gt;objetivo al&lt;/strong&gt; que se puede acceder utilizando la propiedad de &lt;code&gt;targets&lt;/code&gt; . Cada objetivo se puede configurar de forma independiente, incluidos tipos de salida, opciones adicionales del compilador, etc. Consulte los detalles sobre los objetivos en la &lt;a href=&quot;../building-mpp-with-gradle#setting-up-targets&quot;&gt;p&amp;aacute;gina correspondiente&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="71022b4d02eeeda0e92ce39399dff9342c3334b7" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;kotlin-platform-native&lt;/code&gt; plugin a set of target platforms is specified as a list in properties of the main component:</source>
          <target state="translated">Con el &lt;code&gt;kotlin-platform-native&lt;/code&gt; , se especifica un conjunto de plataformas de destino como una lista en las propiedades del componente principal:</target>
        </trans-unit>
        <trans-unit id="6a03f6034b00496a7bad530da3196155a72cc860" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;kotlin-platform-native&lt;/code&gt; plugin dependencies are configured in a traditional for Gradle way by grouping them into configurations using the project &lt;code&gt;dependencies&lt;/code&gt; block:</source>
          <target state="translated">Con el &lt;code&gt;kotlin-platform-native&lt;/code&gt; dependencias se configuran de forma tradicional para Gradle agrup&amp;aacute;ndolas en configuraciones utilizando el bloque de &lt;code&gt;dependencies&lt;/code&gt; del proyecto :</target>
        </trans-unit>
        <trans-unit id="e33e92feed8df1d895d9a97b45aacf36671d526c" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;kotlin-platform-native&lt;/code&gt; plugin interop with a native library can be declared in component dependencies:</source>
          <target state="translated">Con el complemento &lt;code&gt;kotlin-platform-native&lt;/code&gt; interoperabilidad con una biblioteca nativa se puede declarar en las dependencias de los componentes:</target>
        </trans-unit>
        <trans-unit id="a97bf25e776050662c47b29cee8cd98d22ea2c1d" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;kotlin-platform-native&lt;/code&gt; plugin output kinds are specified as a list in properties of a component:</source>
          <target state="translated">Con el &lt;code&gt;kotlin-platform-native&lt;/code&gt; los tipos de salida se especifican como una lista en las propiedades de un componente:</target>
        </trans-unit>
        <trans-unit id="32e186967f7559f8d4cf421fcfd2faf96d838898" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;kotlin-platform-native&lt;/code&gt; plugin source sets are used to separate test and product sources. Also you can specify different sources for different platforms in the same source set:</source>
          <target state="translated">Con el complemento &lt;code&gt;kotlin-platform-native&lt;/code&gt; conjuntos de fuentes se utilizan para separar las fuentes de prueba y de producto. Tambi&amp;eacute;n puede especificar diferentes fuentes para diferentes plataformas en el mismo conjunto de fuentes:</target>
        </trans-unit>
        <trans-unit id="7fa674450fbd80d59d43844df0d5a16d3f6b263d" translate="yes" xml:space="preserve">
          <source>With the coroutine debugger, you can:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b0fbf80a9fbc5a69ad66b25c87ece38e49f33b" translate="yes" xml:space="preserve">
          <source>With the flexible new Kotlin Project Wizard, you have a place to easily create and configure different types of Kotlin projects, including multiplatform projects, which can be difficult to configure without a UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c6c878f4a74b6cd56b16a6f707da3f34b03dce" translate="yes" xml:space="preserve">
          <source>With the help of IntelliJ IDEA's &lt;em&gt;Goto Declaration&lt;/em&gt; or compiler errors we see the following declarations for our C functions:</source>
          <target state="translated">Con la ayuda de la &lt;em&gt;declaraci&amp;oacute;n Goto&lt;/em&gt; de IntelliJ IDEA o los errores del compilador, vemos las siguientes declaraciones para nuestras funciones C:</target>
        </trans-unit>
        <trans-unit id="cf252d7abb4fe418f54b8621d262b977ba904b60" translate="yes" xml:space="preserve">
          <source>With the help of IntelliJ IDEA's &lt;em&gt;Goto Declaration&lt;/em&gt; or compiler errors we see the following generated API for our C functions, &lt;code&gt;struct&lt;/code&gt;, and &lt;code&gt;union&lt;/code&gt;:</source>
          <target state="translated">Con la ayuda de la &lt;em&gt;declaraci&amp;oacute;n Goto&lt;/em&gt; de IntelliJ IDEA o los errores del compilador, vemos la siguiente API generada para nuestras funciones, &lt;code&gt;struct&lt;/code&gt; y &lt;code&gt;union&lt;/code&gt; C :</target>
        </trans-unit>
        <trans-unit id="874119f71c620e91c1bb9c2e75fd174caab63b63" translate="yes" xml:space="preserve">
          <source>With the help of IntelliJ IDEA's &lt;em&gt;Goto Declaration&lt;/em&gt; or compiler errors we see the following generated API for our C functions:</source>
          <target state="translated">Con la ayuda de la &lt;em&gt;declaraci&amp;oacute;n Goto&lt;/em&gt; de IntelliJ IDEA o los errores del compilador, vemos la siguiente API generada para nuestras funciones C:</target>
        </trans-unit>
        <trans-unit id="566c1425784d4c2e6ede1f7dfe672ee70373f129" translate="yes" xml:space="preserve">
          <source>With the new &lt;a href=&quot;js-to-kotlin-interop#jsexport-annotation&quot;&gt;&lt;code&gt;@JsExport&lt;/code&gt;&lt;/a&gt; annotation and the ability to &lt;strong&gt;&lt;a href=&quot;js-ir-compiler#preview-generation-of-typescript-declaration-files-dts&quot;&gt;generate TypeScript definitions&lt;/a&gt; from Kotlin code&lt;/strong&gt;, the Kotlin/JS IR compiler backend improves JavaScript &amp;amp; TypeScript interoperability. This also makes it easier to integrate Kotlin/JS code with existing tooling, to create &lt;strong&gt;hybrid applications&lt;/strong&gt; and leverage code-sharing functionality in multiplatform projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc753b11e4bb4891a70a654bb57daca9017fc7f" translate="yes" xml:space="preserve">
          <source>With the new hierarchical project structure support, you can share code among &lt;a href=&quot;mpp-supported-platforms&quot;&gt;several platforms&lt;/a&gt; in a &lt;a href=&quot;mpp-discover-project&quot;&gt;multiplatform project&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574c1c740a16fa65a0f397005ee3b1c60f44325d" translate="yes" xml:space="preserve">
          <source>With these features, you can make your Gradle build file much more concise and easy to read:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c0b9fe68cd1e4b20ebebcee0ed1689356c0a07" translate="yes" xml:space="preserve">
          <source>With these helpers, the part of code for reading input becomes simpler, closely following the input specification in the problem statement line by line:</source>
          <target state="translated">Con estos ayudantes,la parte del c√≥digo para la lectura de la entrada se hace m√°s simple,siguiendo de cerca la especificaci√≥n de la entrada en la declaraci√≥n del problema l√≠nea por l√≠nea:</target>
        </trans-unit>
        <trans-unit id="a228c17a745863a462bf780050c335cd1bf004e4" translate="yes" xml:space="preserve">
          <source>With these two interfaces, we can make a more versatile fruit bowl. The bowl itself needs to both produce and consume its generic type, so it can neither be covariant nor contravariant, but it can implement our covariant and contravariant interfaces:</source>
          <target state="translated">Con estas dos interfaces,podemos hacer un frutero m√°s vers√°til.El taz√≥n en s√≠ necesita producir y consumir su tipo gen√©rico,por lo que no puede ser ni covariante ni contravariante,pero puede implementar nuestras interfaces covariantes y contravariantes:</target>
        </trans-unit>
        <trans-unit id="4a7d204c839bbeda2e10e199023fa5b9c64dcb76" translate="yes" xml:space="preserve">
          <source>With this external declaration, you can call &lt;code&gt;myFunWithOptionalArgs&lt;/code&gt; with one required argument and two optional arguments, where the default values are calculated by the JavaScript implementation of &lt;code&gt;myFunWithOptionalArgs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d67501a892da363116927ae13a84e4aecbce70" translate="yes" xml:space="preserve">
          <source>With this mechanism, a common source set defines an &lt;em&gt;expected declaration&lt;/em&gt;, and platform source sets must provide the &lt;em&gt;actual declaration&lt;/em&gt; that corresponds to the expected declaration. This works for most Kotlin declarations, such as functions, classes, interfaces, enumerations, properties, and annotations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717e11f293d4b13a9a59d035d72d380a87efce32" translate="yes" xml:space="preserve">
          <source>With this setup, we can access elements of our DOM. To access the properties of the &lt;code&gt;input&lt;/code&gt; field, we invoke &lt;code&gt;getElementById&lt;/code&gt; and cast it to &lt;code&gt;HTMLInputElement&lt;/code&gt;. We can then safely access its properties, such as &lt;code&gt;value&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b77f41d3f8979c93fc79a64e556733e4160ef4" translate="yes" xml:space="preserve">
          <source>With this setup, we can recompile our project after each code change to see our changes. Kotlin/JS also supports a more convenient way of automatically rebuilding our application while we are developing it. To find out how to set up this &lt;em&gt;continuous mode&lt;/em&gt;, check out the &lt;a href=&quot;dev-server-continuous-compilation&quot;&gt;corresponding tutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9928576b159a395a58ce4f2d7b6c66f40874468" translate="yes" xml:space="preserve">
          <source>With this, we can then access any of the functionality defined inside &lt;code&gt;customerBL&lt;/code&gt;.</source>
          <target state="translated">Con esto, podemos acceder a cualquiera de las funcionalidades definidas dentro de &lt;code&gt;customerBL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8dacc9ec11c6c308f4e37da6d574002e02a0ff3a" translate="yes" xml:space="preserve">
          <source>Without the curly braces, only the first line is a part of the body. Indentation in Kotlin matters only for human readers, so the second print is outside the if and will always be executed.</source>
          <target state="translated">Sin los tirantes rizados,s√≥lo la primera l√≠nea es una parte del cuerpo.La indentaci√≥n en Kotlin s√≥lo importa para los lectores humanos,as√≠ que la segunda impresi√≥n est√° fuera del si y siempre ser√° ejecutada.</target>
        </trans-unit>
        <trans-unit id="d2ecf10500acdd56e5aa15cdc3d632f4d1b83484" translate="yes" xml:space="preserve">
          <source>Without this ability to intercept the binding between the property and its delegate, to achieve the same functionality you'd have to pass the property name explicitly, which isn't very convenient:</source>
          <target state="translated">Sin esta capacidad de interceptar la vinculaci√≥n entre la propiedad y su delegado,para lograr la misma funcionalidad habr√≠a que pasar el nombre de la propiedad expl√≠citamente,lo cual no es muy conveniente:</target>
        </trans-unit>
        <trans-unit id="99edd8c8e615e373739d2cdd38a8942b8a573113" translate="yes" xml:space="preserve">
          <source>Worker</source>
          <target state="translated">Worker</target>
        </trans-unit>
        <trans-unit id="b539d8a8b3ce433f937b71658160ff7e5f64cd4c" translate="yes" xml:space="preserve">
          <source>Worker that &lt;a href=&quot;value&quot;&gt;value&lt;/a&gt; is bound to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a502b8bb9786901c6dc61e82d98c92b4b73ae927" translate="yes" xml:space="preserve">
          <source>WorkerBoundReference</source>
          <target state="translated">WorkerBoundReference</target>
        </trans-unit>
        <trans-unit id="74a0d635bad8cb921832f022e80f37a47e5b135d" translate="yes" xml:space="preserve">
          <source>WorkerLocation</source>
          <target state="translated">WorkerLocation</target>
        </trans-unit>
        <trans-unit id="315e6d0000af41369aa07e54a100988d3fd17dee" translate="yes" xml:space="preserve">
          <source>WorkerNavigator</source>
          <target state="translated">WorkerNavigator</target>
        </trans-unit>
        <trans-unit id="2c80abf6e395bd6f326cb30a261f19ee445cba02" translate="yes" xml:space="preserve">
          <source>WorkerOptions</source>
          <target state="translated">WorkerOptions</target>
        </trans-unit>
        <trans-unit id="87bb291b389446f9344ad088d8d62a7a62a19eca" translate="yes" xml:space="preserve">
          <source>WorkerType</source>
          <target state="translated">WorkerType</target>
        </trans-unit>
        <trans-unit id="b6ef3acd0f91c0c6e2a6bad2692c8aa84dfc4c73" translate="yes" xml:space="preserve">
          <source>Workers</source>
          <target state="translated">Workers</target>
        </trans-unit>
        <trans-unit id="4854bbfffb40975ef729e9def93b58f75765479a" translate="yes" xml:space="preserve">
          <source>Workers with message passing</source>
          <target state="translated">Los trabajadores con el paso del mensaje</target>
        </trans-unit>
        <trans-unit id="d7a484140f5f9f7f5427e1f2c44dbfc1d3ad9eea" translate="yes" xml:space="preserve">
          <source>Workflow</source>
          <target state="translated">Workflow</target>
        </trans-unit>
        <trans-unit id="7323cd213254c74db3a887f36bfadb481e7d4c0e" translate="yes" xml:space="preserve">
          <source>Working on all platforms is an explicit goal for Kotlin, but we see it as a premise to a much more important goal: sharing code between platforms. With support for JVM, Android, JavaScript, iOS, Linux, Windows, Mac and even embedded systems like STM32, Kotlin can handle any and all components of a modern application. And this brings the invaluable benefit of reuse for code and expertise, saving the effort for tasks more challenging than implementing everything twice or multiple times.</source>
          <target state="translated">Trabajar en todas las plataformas es un objetivo expl√≠cito para Kotlin,pero lo vemos como una premisa para un objetivo mucho m√°s importante:compartir el c√≥digo entre las plataformas.Con soporte para JVM,Android,JavaScript,iOS,Linux,Windows,Mac e incluso sistemas empotrados como STM32,Kotlin puede manejar todos y cada uno de los componentes de una aplicaci√≥n moderna.Y esto aporta el inestimable beneficio de la reutilizaci√≥n para el c√≥digo y la experiencia,ahorrando el esfuerzo para tareas m√°s desafiantes que implementar todo dos o m√°s veces.</target>
        </trans-unit>
        <trans-unit id="f538870f3ed8ccb71b1f28d4023b06274de86076" translate="yes" xml:space="preserve">
          <source>Working with Build Tools</source>
          <target state="translated">Trabajando con herramientas de construcci√≥n</target>
        </trans-unit>
        <trans-unit id="4c5d22ef62b4e454bd0bf1e1374aa13390ad7ed1" translate="yes" xml:space="preserve">
          <source>Working with C strings</source>
          <target state="translated">Trabajando con cuerdas de C</target>
        </trans-unit>
        <trans-unit id="9ac89fee8e06569c4ebc756f83cddf2bbd9a8ca8" translate="yes" xml:space="preserve">
          <source>Working with Enum Constants</source>
          <target state="translated">Trabajando con las constantes de Enum</target>
        </trans-unit>
        <trans-unit id="1f8482b2bf142fad82a2f635e71a135183f56a5d" translate="yes" xml:space="preserve">
          <source>Working with JavaScript</source>
          <target state="translated">Trabajando con JavaScript</target>
        </trans-unit>
        <trans-unit id="8fc3285c1f9933f649e39499a1f3946c5619cf72" translate="yes" xml:space="preserve">
          <source>Working with Kotlin and JavaScript Modules</source>
          <target state="translated">Trabajando con los m√≥dulos Kotlin y JavaScript</target>
        </trans-unit>
        <trans-unit id="9a49aac8293420ff01c5e9c031ff773d05799074" translate="yes" xml:space="preserve">
          <source>Working with nulls</source>
          <target state="translated">Trabajando con nulos</target>
        </trans-unit>
        <trans-unit id="e5c0c5bddfae833279acedcc9a537af19daf0f06" translate="yes" xml:space="preserve">
          <source>Working with tasks</source>
          <target state="translated">Trabajando con tareas</target>
        </trans-unit>
        <trans-unit id="7d46e00971b365b4ef3386294882d7496a7f75ed" translate="yes" xml:space="preserve">
          <source>Working with the Command Line Compiler</source>
          <target state="translated">Trabajando con el Compilador de L√≠nea de Comando</target>
        </trans-unit>
        <trans-unit id="f2a7db7b02d37c7f54b499213bb3a991f17a1744" translate="yes" xml:space="preserve">
          <source>Working with the strings</source>
          <target state="translated">Trabajando con las cuerdas</target>
        </trans-unit>
        <trans-unit id="075cb3c4378fe512dd51ed618315bfebed19ab49" translate="yes" xml:space="preserve">
          <source>Worksheets automatically get access to classes and functions from the module where they reside.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298b3785e2ae406d29010843be91172dd4b7a909" translate="yes" xml:space="preserve">
          <source>Wraps the specified &lt;a href=&quot;timer-task#kotlin.concurrent%24timerTask%28kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; in a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/TimerTask.html&quot;&gt;TimerTask&lt;/a&gt;.</source>
          <target state="translated">Envuelve la &lt;a href=&quot;timer-task#kotlin.concurrent%24timerTask%28kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;acci&amp;oacute;n&lt;/a&gt; especificada en un &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/TimerTask.html&quot;&gt;TimerTask&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bc7e6a2c63b3a339c10a75fe3c57e0e79aab2702" translate="yes" xml:space="preserve">
          <source>Wraps the specified &lt;a href=&quot;timer-task#kotlin.concurrent%24timerTask(kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; in a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/TimerTask.html&quot;&gt;TimerTask&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2525837a1ad8d7e8a649a7a5e6c45999c5553523" translate="yes" xml:space="preserve">
          <source>Write &lt;strong&gt;full, type-safe React applications with Kotlin/JS&lt;/strong&gt; using the &lt;a href=&quot;https://github.com/JetBrains/kotlin-wrappers&quot;&gt;&lt;code&gt;kotlin-wrappers&lt;/code&gt;&lt;/a&gt; provided by JetBrains, which provide convenient abstractions and deep integrations for one of the most popular JavaScript frameworks. &lt;code&gt;kotlin-wrappers&lt;/code&gt; also provides support for a select number of adjacent technologies like &lt;code&gt;react-redux&lt;/code&gt;, &lt;code&gt;react-router&lt;/code&gt;, or &lt;code&gt;styled-components&lt;/code&gt;. Interoperability with the JavaScript ecosystem also means that you can also use third-party React components and component libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7df02929ed6ce55a8f16204596caaf82c53075" translate="yes" xml:space="preserve">
          <source>Write operations</source>
          <target state="translated">Operaciones de escritura</target>
        </trans-unit>
        <trans-unit id="16f06037425e5570c7fb6c4cb0b8e9b025bb037c" translate="yes" xml:space="preserve">
          <source>Write the application</source>
          <target state="translated">Escriba la solicitud</target>
        </trans-unit>
        <trans-unit id="5c829704c2a3eee8b986648971ed06cb5f976567" translate="yes" xml:space="preserve">
          <source>Write your code in the scratch and click &lt;strong&gt;Run&lt;/strong&gt;. The execution results will appear opposite the lines of your code.</source>
          <target state="translated">Escriba su c&amp;oacute;digo en el scratch y haga clic en &lt;strong&gt;Ejecutar&lt;/strong&gt; . Los resultados de la ejecuci&amp;oacute;n aparecer&amp;aacute;n frente a las l&amp;iacute;neas de su c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="d5a79e41535865d72222565d75328e9ec50eab15" translate="yes" xml:space="preserve">
          <source>Writeable Objective-C properties overriding read-only properties of the superclass are represented as &lt;code&gt;setFoo()&lt;/code&gt; method for the property &lt;code&gt;foo&lt;/code&gt;. Same goes for a protocol's read-only properties that are implemented as mutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96451968bc66bdb3ac0027e8c45718ed0567089" translate="yes" xml:space="preserve">
          <source>Writing output in Kotlin is usually straightforward with &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.io/println&quot;&gt;println(&amp;hellip;)&lt;/a&gt; calls and using Kotlin's &lt;a href=&quot;../reference/basic-types#string-templates&quot;&gt;string templates&lt;/a&gt;. However, care must be taken when output contains on order of 10&lt;sup&gt;5&lt;/sup&gt; lines or more. Issuing so many &lt;code&gt;println&lt;/code&gt; calls is too slow, since the output in Kotlin is automatically flushed after each line. A faster way to write many lines from an array or a list is using &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/join-to-string&quot;&gt;joinToString()&lt;/a&gt; function with &lt;code&gt;&quot;\n&quot;&lt;/code&gt; as the separator, like this:</source>
          <target state="translated">Escribir resultados en Kotlin suele ser sencillo con &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.io/println&quot;&gt;llamadas&lt;/a&gt; a println (&amp;hellip;) y usando las &lt;a href=&quot;../reference/basic-types#string-templates&quot;&gt;plantillas de cadenas&lt;/a&gt; de Kotlin . Sin embargo, se debe tener cuidado cuando la salida contiene en orden de 10 &lt;sup&gt;5&lt;/sup&gt; l&amp;iacute;neas o m&amp;aacute;s. Emitir tantas llamadas &lt;code&gt;println&lt;/code&gt; es demasiado lento, ya que la salida en Kotlin se vac&amp;iacute;a autom&amp;aacute;ticamente despu&amp;eacute;s de cada l&amp;iacute;nea. Una forma m&amp;aacute;s r&amp;aacute;pida de escribir muchas l&amp;iacute;neas de una matriz o una lista es usar la funci&amp;oacute;n &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/join-to-string&quot;&gt;joinToString ()&lt;/a&gt; con &lt;code&gt;&quot;\n&quot;&lt;/code&gt; como separador, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="ab2816d4bb9622be7220e5163963f6a9c487ee4d" translate="yes" xml:space="preserve">
          <source>Writing tests</source>
          <target state="translated">Pruebas de escritura</target>
        </trans-unit>
        <trans-unit id="9ef22deec2645bc05aadf8f135a7bff939813776" translate="yes" xml:space="preserve">
          <source>Written common tests which are executed on every platform.</source>
          <target state="translated">Pruebas comunes escritas que se ejecutan en cada plataforma.</target>
        </trans-unit>
        <trans-unit id="fd2be2d7287c5cdb16fe41c84b1e6ca191ff755e" translate="yes" xml:space="preserve">
          <source>Wrong common supertype between raw and integer literal type leads to unsound code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854c8fc48ee154c6555f79a9bf3716b40f710db3" translate="yes" xml:space="preserve">
          <source>Wrong emission withContext</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541421193abf48f2287369752c7bf0243245c291" translate="yes" xml:space="preserve">
          <source>Wrong overload resolution for contravariant types with nullable type arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f216eec525b148735e7bf76a9146b212361d45a9" translate="yes" xml:space="preserve">
          <source>Wrote common tests which are executed on every platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc69ef99140607442e7db36f023118fd57bd0f0" translate="yes" xml:space="preserve">
          <source>X64</source>
          <target state="translated">X64</target>
        </trans-unit>
        <trans-unit id="c5b176396b5ad771a343d5324e35e073e54c2249" translate="yes" xml:space="preserve">
          <source>X86</source>
          <target state="translated">X86</target>
        </trans-unit>
        <trans-unit id="5fff9cda50156cd056976ef35552984685930eca" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestResponseType</source>
          <target state="translated">XMLHttpRequestResponseType</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
