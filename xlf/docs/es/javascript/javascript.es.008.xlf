<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="javascript">
    <body>
      <group id="javascript">
        <trans-unit id="e410f550731be85f946b7f2f4aed03a005c57a1c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;length&lt;/code&gt; is omitted, &lt;code&gt;substr()&lt;/code&gt; extracts characters to the end of the string.</source>
          <target state="translated">Si se omite la &lt;code&gt;length&lt;/code&gt; , &lt;code&gt;substr()&lt;/code&gt; extrae caracteres hasta el final de la cadena.</target>
        </trans-unit>
        <trans-unit id="a34d5712abc36aaa2eaef3f633100f03db354c27" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;maximum&lt;/code&gt; is specified and is smaller than &lt;code&gt;initial&lt;/code&gt;, a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Si se especifica el &lt;code&gt;maximum&lt;/code&gt; y es menor que el &lt;code&gt;initial&lt;/code&gt; , se lanza un &lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c0f0bc257bf3b949201321dcae7fcebf0bb14339" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;memoryDescriptor&lt;/code&gt; is not of type object, a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Si &lt;code&gt;memoryDescriptor&lt;/code&gt; no es de tipo objeto, se lanza un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="73a182f41773189b8cfdf256c034f5a1d80c29e6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;module&lt;/code&gt; is not a &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object instance, a &lt;a href=&quot;../../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Si el &lt;code&gt;module&lt;/code&gt; no es una instancia de objeto &lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt; , se lanza un &lt;a href=&quot;../../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ae5c7ddce76e5aae957eb4fa1138ed2f02a10861" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;onFulfilled&lt;/code&gt; returns a promise, the return value of &lt;code&gt;then&lt;/code&gt; will be resolved/rejected by the promise.</source>
          <target state="translated">Si &lt;code&gt;onFulfilled&lt;/code&gt; devuelve una promesa, el valor de devoluci&amp;oacute;n de &lt;code&gt;then&lt;/code&gt; ser&amp;aacute; resuelto / rechazado por la promesa.</target>
        </trans-unit>
        <trans-unit id="2f2728a4f70add9e2f77317adda6b2ef26418eaa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;parseFloat&lt;/code&gt; encounters a character other than a plus sign (&lt;code&gt;+&lt;/code&gt;), minus sign (&lt;code&gt;-&lt;/code&gt; U+002D HYPHEN-MINUS), numeral (&lt;code&gt;0&lt;/code&gt;&amp;ndash;&lt;code&gt;9&lt;/code&gt;), decimal point (&lt;code&gt;.&lt;/code&gt;), or exponent (&lt;code&gt;e&lt;/code&gt; or &lt;code&gt;E&lt;/code&gt;), it returns the value up to that character, ignoring the invalid character and characters following it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83728eb0d2a9e584dc04b1ee5d31294530473376" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;parseInt&lt;/code&gt; encounters a character that is not a numeral in the specified &lt;code&gt;radix&lt;/code&gt;, it ignores it and all succeeding characters and returns the integer value parsed up to that point. &lt;code&gt;parseInt&lt;/code&gt; truncates numbers to integer values. Leading and trailing spaces are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ead9333b62110d8b1b732ad127cf111fdc2eaf4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;parseInt&lt;/code&gt; encounters a character that is not a numeral in the specified radix, it ignores it and all succeeding characters and returns the integer value parsed up to that point. &lt;code&gt;parseInt&lt;/code&gt; truncates numbers to integer values. Leading and trailing spaces are allowed.</source>
          <target state="translated">Si &lt;code&gt;parseInt&lt;/code&gt; encuentra un car&amp;aacute;cter que no es un numeral en la base especificada, lo ignora y todos los caracteres siguientes y devuelve el valor entero analizado hasta ese punto. &lt;code&gt;parseInt&lt;/code&gt; trunca n&amp;uacute;meros a valores enteros. Se permiten espacios al principio y al final.</target>
        </trans-unit>
        <trans-unit id="5ffbeddf0bcd7aec9bc1eee89d991e6401f78d4b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;precision&lt;/code&gt; is not between 1 and 100 (inclusive), a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown. Implementations are allowed to support larger and smaller values as well. ECMA-262 only requires a precision of up to 21 significant digits.</source>
          <target state="translated">Si la &lt;code&gt;precision&lt;/code&gt; no est&amp;aacute; entre 1 y 100 (inclusive), se lanza un &lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt; . Las implementaciones tambi&amp;eacute;n pueden admitir valores m&amp;aacute;s grandes y m&amp;aacute;s peque&amp;ntilde;os. ECMA-262 solo requiere una precisi&amp;oacute;n de hasta 21 d&amp;iacute;gitos significativos.</target>
        </trans-unit>
        <trans-unit id="46150c365467758d22f0868ddafd9b7825000fcb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;precision&lt;/code&gt; is not between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;100&lt;/code&gt; (inclusive), a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown. Implementations are allowed to support larger and smaller values as well. ECMA-262 only requires a precision of up to 21 significant digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5460969a95744dffb5bbddf36d4bfb1069be0e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;proto&lt;/code&gt; is neither of these a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c87e445a7edd2b640f50dae6ac2b0133882f41" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;replacer&lt;/code&gt; is an array, the array's values indicate the names of the properties in the object that should be included in the resulting JSON string.</source>
          <target state="translated">Si el &lt;code&gt;replacer&lt;/code&gt; es una matriz, los valores de la matriz indican los nombres de las propiedades en el objeto que deben incluirse en la cadena JSON resultante.</target>
        </trans-unit>
        <trans-unit id="3c3a227a6da9d264dbe28f5f791a62dedb0625b0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;return(&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; is called on a generator that is already in &quot;completed&quot; state, the generator will remain in &quot;completed&quot; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bf4b6e3dc943f062b1864ad40de7d0964087f1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;return(value)&lt;/code&gt; is called on a generator that is already in &quot;completed&quot; state, the generator will remain in &quot;completed&quot; state. If no argument is provided, the return object is the same as if &lt;code&gt;.next()&lt;/code&gt;. If an argument is provided, it will be set to the value of the &lt;code&gt;value&lt;/code&gt; property of the returned object.</source>
          <target state="translated">Si se llama a &lt;code&gt;return(value)&lt;/code&gt; en un generador que ya est&amp;aacute; en estado &quot;completado&quot;, el generador permanecer&amp;aacute; en estado &quot;completado&quot;. Si no se proporciona ning&amp;uacute;n argumento, el objeto de retorno es el mismo que si &lt;code&gt;.next()&lt;/code&gt; . Si se proporciona un argumento, se establecer&amp;aacute; en el valor de la propiedad &lt;code&gt;value&lt;/code&gt; del objeto devuelto.</target>
        </trans-unit>
        <trans-unit id="cc1bfe2351b82485683c733bf222344eda1527d5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;separator&lt;/code&gt; is a regular expression that contains capturing parentheses &lt;code&gt;(&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;, matched results are included in the array.</source>
          <target state="translated">Si el &lt;code&gt;separator&lt;/code&gt; es una expresi&amp;oacute;n regular que contiene par&amp;eacute;ntesis de captura &lt;code&gt;(&lt;/code&gt; &lt;code&gt;)&lt;/code&gt; , los resultados coincidentes se incluyen en la matriz.</target>
        </trans-unit>
        <trans-unit id="d1eff576ddb621e4680b204ed4d5b41859eeef85" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;separator&lt;/code&gt; is a regular expression that contains capturing parentheses, then each time &lt;code&gt;separator&lt;/code&gt; is matched, the results (including any undefined results) of the capturing parentheses are spliced into the output array.</source>
          <target state="translated">Si el &lt;code&gt;separator&lt;/code&gt; es una expresi&amp;oacute;n regular que contiene par&amp;eacute;ntesis de captura, cada vez que se hace coincidir el &lt;code&gt;separator&lt;/code&gt; , los resultados (incluidos los resultados no definidos) de los par&amp;eacute;ntesis de captura se empalman en la matriz de salida.</target>
        </trans-unit>
        <trans-unit id="58a1c53b01b40592a9c84549b9f166da18ea38eb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is a negative number, the index starts counting from the end of the string. Its value is capped at &lt;code&gt;-str.length&lt;/code&gt;.</source>
          <target state="translated">Si &lt;code&gt;start&lt;/code&gt; es un n&amp;uacute;mero negativo, el &amp;iacute;ndice comienza a contar desde el final de la cadena. Su valor est&amp;aacute; limitado a &lt;code&gt;-str.length&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c54578109a534f15d42b5a741a3d3d14d8a65f39" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is a positive number, the index starts counting at the start of the string. Its value is capped at &lt;code&gt;str.length&lt;/code&gt;.</source>
          <target state="translated">Si &lt;code&gt;start&lt;/code&gt; es un n&amp;uacute;mero positivo, el &amp;iacute;ndice comienza a contar al comienzo de la cadena. Su valor est&amp;aacute; limitado a &lt;code&gt;str.length&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca01d0a0b0471740d571f8985792b98bb6955453" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is negative, it is treated as &lt;code&gt;array.length + start&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a731fd434daa5cb19e9e29afc38306b20ebfb1ef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is negative, it is treated as &lt;code&gt;length+start&lt;/code&gt; where &lt;code&gt;length&lt;/code&gt; is the length of the array. If &lt;code&gt;end&lt;/code&gt; is negative, it is treated as &lt;code&gt;length+end&lt;/code&gt;.</source>
          <target state="translated">Si el &lt;code&gt;start&lt;/code&gt; es negativo, se trata como &lt;code&gt;length+start&lt;/code&gt; donde &lt;code&gt;length&lt;/code&gt; es la longitud de la matriz. Si &lt;code&gt;end&lt;/code&gt; es negativo, se trata como &lt;code&gt;length+end&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4de0599f1ce5809ec70b824f6abdd7e50e9e2834" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is omitted, &lt;code&gt;copyWithin&lt;/code&gt; will copy from index &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf5416996cbb15b5dc86c882e373b81b313cbcb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is omitted, &lt;code&gt;copyWithin&lt;/code&gt; will copy from the start (defaults to 0).</source>
          <target state="translated">Si &lt;code&gt;start&lt;/code&gt; se omite, &lt;code&gt;copyWithin&lt;/code&gt; copiar&amp;aacute; desde el principio (por defecto 0).</target>
        </trans-unit>
        <trans-unit id="779eb5bbe71bf9f737544ad79ab2ebdb40b507a1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tableDescriptor&lt;/code&gt; is not of type object, a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Si &lt;code&gt;tableDescriptor&lt;/code&gt; no es de tipo objeto, se lanza un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e03af582a3944b0e649958576a4fa9f071ece201" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;target&lt;/code&gt; is at or greater than &lt;code&gt;arr.length&lt;/code&gt;, nothing will be copied. If &lt;code&gt;target&lt;/code&gt; is positioned after &lt;code&gt;start&lt;/code&gt;, the copied sequence will be trimmed to fit &lt;code&gt;arr.length&lt;/code&gt;.</source>
          <target state="translated">Si el &lt;code&gt;target&lt;/code&gt; es superior o &lt;code&gt;arr.length&lt;/code&gt; a la longitud de arr. , No se copiar&amp;aacute; nada. Si el &lt;code&gt;target&lt;/code&gt; se posiciona despu&amp;eacute;s del &lt;code&gt;start&lt;/code&gt; , la secuencia copiada se recortar&amp;aacute; para adaptarse a la &lt;code&gt;arr.length&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a0d8e33e57948f6db6a21fc620101b71b816549" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;target&lt;/code&gt; is not extensible, &lt;code&gt;Object.getPrototypeOf(proxy)&lt;/code&gt; method must return the same value as &lt;code&gt;Object.getPrototypeOf(target)&lt;/code&gt;.</source>
          <target state="translated">Si el &lt;code&gt;target&lt;/code&gt; no es extensible, el &lt;code&gt;Object.getPrototypeOf(proxy)&lt;/code&gt; debe devolver el mismo valor que &lt;code&gt;Object.getPrototypeOf(target)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d26238ec78eee84e2aeb55c52477788256e17a5e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;target&lt;/code&gt; is not extensible, the &lt;code&gt;prototype&lt;/code&gt; parameter must be the same value as &lt;code&gt;Object.getPrototypeOf(target)&lt;/code&gt;.</source>
          <target state="translated">Si &lt;code&gt;target&lt;/code&gt; no es extensible, el par&amp;aacute;metro &lt;code&gt;prototype&lt;/code&gt; debe tener el mismo valor que &lt;code&gt;Object.getPrototypeOf(target)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="984a9eed37b95f2c80689bed658a7a680c02c700" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; is a mystery, please refer to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;this document&lt;/a&gt; for more information on how &lt;code&gt;this&lt;/code&gt; works. To summarize, &lt;code&gt;this&lt;/code&gt; refers to the instance. Instances are created when the &lt;code&gt;new&lt;/code&gt; keyword is invoked. Otherwise, &lt;code&gt;this&lt;/code&gt; will default to the window &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Scope&quot;&gt;scope&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19cd77cae60ad00d362fc1024e84e33d0571105" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;three&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, nothing will happen, &lt;code&gt;four&lt;/code&gt; does not matter, and also the &lt;code&gt;launchRocket()&lt;/code&gt; function in the &lt;code&gt;else&lt;/code&gt; case will not be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eef6456246e4dbfc287e8737faddd2509501cbb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;toString()&lt;/code&gt; is given a &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; less than &lt;code&gt;2&lt;/code&gt; or greater than &lt;code&gt;36&lt;/code&gt;, a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c379906b5792e3372d4efc200a114b3805195e4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;toString()&lt;/code&gt; is given a radix less than 2 or greater than 36, a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Si a &lt;code&gt;toString()&lt;/code&gt; se le da una base menor que 2 o mayor que 36, se lanza un &lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed0a1bf3b0563282d5e450783f1851ac37bf1a0e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x&lt;/code&gt; is not a number, then it will be converted to a number first, then converted to a 32-bit unsigned integer.</source>
          <target state="translated">Si &lt;code&gt;x&lt;/code&gt; no es un n&amp;uacute;mero, primero se convertir&amp;aacute; en un n&amp;uacute;mero y luego en un entero sin signo de 32 bits.</target>
        </trans-unit>
        <trans-unit id="e2747de4d9fc8c30f2b40be49e35fdbf847eb82f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;index&lt;/em&gt; is greater than or equal to &lt;a href=&quot;length&quot;&gt;&lt;code&gt;Table.prototype.length&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;../../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Si el &lt;em&gt;&amp;iacute;ndice&lt;/em&gt; es mayor o igual que &lt;a href=&quot;length&quot;&gt; &lt;code&gt;Table.prototype.length&lt;/code&gt; &lt;/a&gt; , se lanza un &lt;a href=&quot;../../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3c1e63156a59a69e643e2a9b0e2e65948c77850e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not an exported WebAssembly function or &lt;code&gt;&lt;a href=&quot;../../null&quot;&gt;null&lt;/a&gt;&lt;/code&gt;, a &lt;a href=&quot;../../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Si el &lt;em&gt;valor&lt;/em&gt; no es una funci&amp;oacute;n de WebAssembly exportada o es &lt;code&gt;&lt;a href=&quot;../../null&quot;&gt;null&lt;/a&gt;&lt;/code&gt; , se lanza un &lt;a href=&quot;../../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d1f4c5491a947837a75b2577ec9165501da34cd8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;radix&lt;/var&gt; is &lt;code&gt;undefined&lt;/code&gt; or 0 (or absent), JavaScript assumes the following:</source>
          <target state="translated">Si &lt;var&gt;radix&lt;/var&gt; &lt;code&gt;undefined&lt;/code&gt; est&amp;aacute; definido o es 0 (o est&amp;aacute; ausente), JavaScript asume lo siguiente:</target>
        </trans-unit>
        <trans-unit id="bed881bbe4332a3924a8e5000bd3b3ce26c729d3" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; is used a function name and the symbol has a description, the method's name is the description in square brackets.</source>
          <target state="translated">Si un &lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; se utiliza un nombre de funci&amp;oacute;n y el s&amp;iacute;mbolo tiene una descripci&amp;oacute;n, el nombre del m&amp;eacute;todo es la descripci&amp;oacute;n entre corchetes.</target>
        </trans-unit>
        <trans-unit id="6c5ecf5b73187ab3241c34814c90ceb806d68640" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;reviver&lt;/var&gt;&lt;/code&gt; is specified, the value computed by parsing is &lt;em&gt;transformed&lt;/em&gt; before being returned. Specifically, the computed value and all its properties (beginning with the most nested properties and proceeding to the original value itself) are individually run through the &lt;code&gt;&lt;var&gt;reviver&lt;/var&gt;&lt;/code&gt;. Then it is called, with the object containing the property being processed as &lt;code&gt;this&lt;/code&gt;, and with the property name as a string, and the property value as arguments. If the &lt;code&gt;&lt;var&gt;reviver&lt;/var&gt;&lt;/code&gt; function returns &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; (or returns no value, for example, if execution falls off the end of the function), the property is deleted from the object. Otherwise, the property is redefined to be the return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53eaa65f5d849d2ba7af580ec11f6071fb51361" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is passed to &lt;code&gt;findIndex()&lt;/code&gt;, it will be used as the &lt;code&gt;this&lt;/code&gt; inside each invocation of the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. If it is not provided, then &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3191155df0440c882d493d118c3dac1f4c66d1" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is provided to &lt;code&gt;every&lt;/code&gt;, it will be used as callback's &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f498864454499bf2fa726743bb2df845d90f352" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is provided to &lt;code&gt;filter&lt;/code&gt;, it will be used as the callback's &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22cacfb6b4ad93d1afb332b58bc2b8b9e92dbe4" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is provided to &lt;code&gt;find&lt;/code&gt;, it will be used as the &lt;code&gt;this&lt;/code&gt; value inside each invocation of the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. If it is not provided, then &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09097dc35d89b7d28dbca20d40abc8970c3cab00" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is provided to &lt;code&gt;forEach()&lt;/code&gt;, it will be passed to &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ab4918e0c8bd05f962be5b62c98b05000b19de" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is provided to &lt;code&gt;forEach()&lt;/code&gt;, it will be used as callback's &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; value ultimately observable by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ead08dc3ec7c47ac1db79cebb6c9921620ff42a" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is provided to &lt;code&gt;forEach&lt;/code&gt;, it will be passed to &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8f21a8595a09932fdcda7eaee1666d3af2bf6a" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is provided to &lt;code&gt;map()&lt;/code&gt;, it will be passed to &lt;code&gt;&lt;var&gt;mapFn&lt;/var&gt;&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;&lt;var&gt;mapFn&lt;/var&gt;&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad3e1dc3914885dba756cd8beedafc58dbd95b7" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is provided to &lt;code&gt;some()&lt;/code&gt;, it will be used as the callback's &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2836faa89237b75d06562d178e0d8e7b62b20e4a" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;Promise&lt;/code&gt; is passed to an &lt;code&gt;await&lt;/code&gt; expression, it waits for the &lt;code&gt;Promise&lt;/code&gt; to be fulfilled and returns the fulfilled value.</source>
          <target state="translated">Si una &lt;code&gt;Promise&lt;/code&gt; se pasa a un &lt;code&gt;await&lt;/code&gt; expresi&amp;oacute;n, se espera a que la &lt;code&gt;Promise&lt;/code&gt; sea cumplida y devuelve el valor cumplido.</target>
        </trans-unit>
        <trans-unit id="2f0cd65c256b789ded1c56afc95a831c106e6d12" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;reviver&lt;/code&gt; is specified, the value computed by parsing is &lt;em&gt;transformed&lt;/em&gt; before being returned. Specifically, the computed value and all its properties (beginning with the most nested properties and proceeding to the original value itself) are individually run through the &lt;code&gt;reviver&lt;/code&gt;. Then it is called, with the object containing the property being processed as &lt;code&gt;this&lt;/code&gt;, and with the property name as a string, and the property value as arguments. If the &lt;code&gt;reviver&lt;/code&gt; function returns &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; (or returns no value, for example, if execution falls off the end of the function), the property is deleted from the object. Otherwise, the property is redefined to be the return value.</source>
          <target state="translated">Si se especifica un &lt;code&gt;reviver&lt;/code&gt; , el valor calculado mediante el an&amp;aacute;lisis se &lt;em&gt;transforma&lt;/em&gt; antes de devolverse. Espec&amp;iacute;ficamente, el valor calculado y todas sus propiedades (comenzando con las propiedades m&amp;aacute;s anidadas y continuando con el valor original en s&amp;iacute;) se ejecutan individualmente a trav&amp;eacute;s del &lt;code&gt;reviver&lt;/code&gt; . Luego se llama, con el objeto que contiene la propiedad que se procesa como &lt;code&gt;this&lt;/code&gt; , y con el nombre de la propiedad como una cadena y el valor de la propiedad como argumentos. Si la funci&amp;oacute;n &lt;code&gt;reviver&lt;/code&gt; devuelve &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; (o no devuelve ning&amp;uacute;n valor, por ejemplo, si la ejecuci&amp;oacute;n cae al final de la funci&amp;oacute;n), la propiedad se elimina del objeto. De lo contrario, la propiedad se redefine para ser el valor de retorno.</target>
        </trans-unit>
        <trans-unit id="f242b5dc288eac0b5d0ce91ad4f100013514504d" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is passed to &lt;code&gt;findIndex&lt;/code&gt;, it will be used as the &lt;code&gt;this&lt;/code&gt; inside each invocation of the &lt;code&gt;callback&lt;/code&gt;. If it is not provided, then &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">Si se &lt;code&gt;thisArg&lt;/code&gt; un par&amp;aacute;metro thisArg a &lt;code&gt;findIndex&lt;/code&gt; , se usar&amp;aacute; como &lt;code&gt;this&lt;/code&gt; dentro de cada invocaci&amp;oacute;n de la &lt;code&gt;callback&lt;/code&gt; de llamada . Si no se proporciona, se utiliza &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c6932692e1d4fb28b8121dffe2f3e2d0eb25fc31" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;every&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">Si se proporciona un par&amp;aacute;metro &lt;code&gt;thisArg&lt;/code&gt; a &lt;code&gt;every&lt;/code&gt; , se pasar&amp;aacute; a la &lt;code&gt;callback&lt;/code&gt; de llamada cuando se invoque, para usarlo como &lt;code&gt;this&lt;/code&gt; valor. De lo contrario, el valor &lt;code&gt;undefined&lt;/code&gt; pasar&amp;aacute; para su uso como &lt;code&gt;this&lt;/code&gt; valor. El valor de &lt;code&gt;this&lt;/code&gt; finalmente observable por &lt;code&gt;callback&lt;/code&gt; de llamada se determina de acuerdo con &lt;a href=&quot;../../operators/this&quot;&gt;las reglas habituales para determinar el &lt;code&gt;this&lt;/code&gt; visto por una funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c67511fcd2a06b290b63f0afdae294248024ceaa" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;every&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03473c038dbaa94c0f2f584238f87bb0a1c995c4" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;every&lt;/code&gt;, it will be used as callback's &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">Si se proporciona un par&amp;aacute;metro &lt;code&gt;thisArg&lt;/code&gt; a &lt;code&gt;every&lt;/code&gt; , se utilizar&amp;aacute; como &lt;code&gt;this&lt;/code&gt; valor de devoluci&amp;oacute;n de llamada . De lo contrario, el valor &lt;code&gt;undefined&lt;/code&gt; se utilizar&amp;aacute; como &lt;code&gt;this&lt;/code&gt; valor. El valor de &lt;code&gt;this&lt;/code&gt; finalmente observable por &lt;code&gt;callback&lt;/code&gt; de llamada se determina de acuerdo con &lt;a href=&quot;../../operators/this&quot;&gt;las reglas habituales para determinar el &lt;code&gt;this&lt;/code&gt; visto por una funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e885503fc50fcf3433a76da451d3a39bdb27787" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;filter&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">Si se proporciona un par&amp;aacute;metro &lt;code&gt;thisArg&lt;/code&gt; para &lt;code&gt;filter&lt;/code&gt; , se pasar&amp;aacute; a la &lt;code&gt;callback&lt;/code&gt; de llamada cuando se invoque, para usarlo como &lt;code&gt;this&lt;/code&gt; valor. De lo contrario, el valor &lt;code&gt;undefined&lt;/code&gt; pasar&amp;aacute; para su uso como &lt;code&gt;this&lt;/code&gt; valor. El valor de &lt;code&gt;this&lt;/code&gt; finalmente observable por &lt;code&gt;callback&lt;/code&gt; de llamada se determina de acuerdo con &lt;a href=&quot;../../operators/this&quot;&gt;las reglas habituales para determinar el &lt;code&gt;this&lt;/code&gt; visto por una funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="74757f9a027a1bd668415335ce369872b5c572ad" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;filter&lt;/code&gt;, it will be used as the callback's &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">Si se proporciona un par&amp;aacute;metro &lt;code&gt;thisArg&lt;/code&gt; para &lt;code&gt;filter&lt;/code&gt; , se utilizar&amp;aacute; como &lt;code&gt;this&lt;/code&gt; valor de devoluci&amp;oacute;n de llamada . De lo contrario, el valor &lt;code&gt;undefined&lt;/code&gt; se utilizar&amp;aacute; como &lt;code&gt;this&lt;/code&gt; valor. El valor de &lt;code&gt;this&lt;/code&gt; finalmente observable por &lt;code&gt;callback&lt;/code&gt; de llamada se determina de acuerdo con &lt;a href=&quot;../../operators/this&quot;&gt;las reglas habituales para determinar el &lt;code&gt;this&lt;/code&gt; visto por una funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf9143a7a8700db09906f59debf6818c19eb9dde" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;find&lt;/code&gt;, it will be used as the &lt;code&gt;this&lt;/code&gt; for each invocation of the &lt;code&gt;callback&lt;/code&gt;. If it is not provided, then &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">Si se proporciona un par&amp;aacute;metro &lt;code&gt;thisArg&lt;/code&gt; para &lt;code&gt;find&lt;/code&gt; , se utilizar&amp;aacute; como &lt;code&gt;this&lt;/code&gt; para cada invocaci&amp;oacute;n de la &lt;code&gt;callback&lt;/code&gt; de llamada . Si no se proporciona, se utiliza &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eb1fb27d6a8d4daf130eff947e69b141ae7f6214" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;findIndex&lt;/code&gt;, it will be used as the &lt;code&gt;this&lt;/code&gt; for each invocation of the &lt;code&gt;callback&lt;/code&gt;. If it is not provided, then &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">Si se proporciona un par&amp;aacute;metro &lt;code&gt;thisArg&lt;/code&gt; para &lt;code&gt;findIndex&lt;/code&gt; , se utilizar&amp;aacute; como &lt;code&gt;this&lt;/code&gt; para cada invocaci&amp;oacute;n de la &lt;code&gt;callback&lt;/code&gt; de llamada . Si no se proporciona, se utiliza &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9bf571e8c9fd950c0cba47616f69e3244e8ac908" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;forEach()&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">Si se proporciona un par&amp;aacute;metro &lt;code&gt;thisArg&lt;/code&gt; a &lt;code&gt;forEach()&lt;/code&gt; , se pasar&amp;aacute; a la &lt;code&gt;callback&lt;/code&gt; de llamada cuando se invoque, para usarlo como &lt;code&gt;this&lt;/code&gt; valor. De lo contrario, el valor &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; pasar&amp;aacute; para su uso como &lt;code&gt;this&lt;/code&gt; valor. El valor de &lt;code&gt;this&lt;/code&gt; finalmente observable por &lt;code&gt;callback&lt;/code&gt; de llamada se determina de acuerdo con &lt;a href=&quot;../../operators/this&quot;&gt;las reglas habituales para determinar el &lt;code&gt;this&lt;/code&gt; visto por una funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dadf3c2d4b8690337dfbe93c3a13c6ba5122a763" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;forEach()&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">Si se proporciona un par&amp;aacute;metro &lt;code&gt;thisArg&lt;/code&gt; a &lt;code&gt;forEach()&lt;/code&gt; , se pasar&amp;aacute; a la &lt;code&gt;callback&lt;/code&gt; de llamada cuando se invoque, para usarlo como &lt;code&gt;this&lt;/code&gt; valor. De lo contrario, el valor &lt;code&gt;undefined&lt;/code&gt; pasar&amp;aacute; para su uso como &lt;code&gt;this&lt;/code&gt; valor. El valor de &lt;code&gt;this&lt;/code&gt; finalmente observable por &lt;code&gt;callback&lt;/code&gt; de llamada se determina de acuerdo con &lt;a href=&quot;../../operators/this&quot;&gt;las reglas habituales para determinar el &lt;code&gt;this&lt;/code&gt; visto por una funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ff6f3b4478f7d568a6bd567df8cf574b18334edf" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;forEach()&lt;/code&gt;, it will be used as callback's &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">Si se proporciona un par&amp;aacute;metro &lt;code&gt;thisArg&lt;/code&gt; a &lt;code&gt;forEach()&lt;/code&gt; , se utilizar&amp;aacute; como &lt;code&gt;this&lt;/code&gt; valor de devoluci&amp;oacute;n de llamada . De lo contrario, el valor &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; se utilizar&amp;aacute; como &lt;code&gt;this&lt;/code&gt; valor. El valor de &lt;code&gt;this&lt;/code&gt; finalmente observable por &lt;code&gt;callback&lt;/code&gt; de llamada se determina de acuerdo con &lt;a href=&quot;../../operators/this&quot;&gt;las reglas habituales para determinar el &lt;code&gt;this&lt;/code&gt; visto por una funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b270f7b4f88096d2dc8decbc2a68475af4db9b54" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;forEach&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">Si se proporciona un par&amp;aacute;metro &lt;code&gt;thisArg&lt;/code&gt; a &lt;code&gt;forEach&lt;/code&gt; , se pasar&amp;aacute; a la &lt;code&gt;callback&lt;/code&gt; de llamada cuando se invoque, para usarlo como &lt;code&gt;this&lt;/code&gt; valor. De lo contrario, el valor &lt;code&gt;undefined&lt;/code&gt; pasar&amp;aacute; para su uso como &lt;code&gt;this&lt;/code&gt; valor. El valor de &lt;code&gt;this&lt;/code&gt; finalmente observable por &lt;code&gt;callback&lt;/code&gt; de llamada se determina de acuerdo con &lt;a href=&quot;../../operators/this&quot;&gt;las reglas habituales para determinar el &lt;code&gt;this&lt;/code&gt; visto por una funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e2c264894e88d2165b79806c0e46c3a7c2ac7698" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;map&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">Si se proporciona un par&amp;aacute;metro &lt;code&gt;thisArg&lt;/code&gt; para &lt;code&gt;map&lt;/code&gt; ear , se pasar&amp;aacute; a la &lt;code&gt;callback&lt;/code&gt; de llamada cuando se invoque, para usarlo como &lt;code&gt;this&lt;/code&gt; valor. De lo contrario, el valor &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; pasar&amp;aacute; para su uso como &lt;code&gt;this&lt;/code&gt; valor. El valor de &lt;code&gt;this&lt;/code&gt; finalmente observable por &lt;code&gt;callback&lt;/code&gt; de llamada se determina de acuerdo con &lt;a href=&quot;../../operators/this&quot;&gt;las reglas habituales para determinar el &lt;code&gt;this&lt;/code&gt; visto por una funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="abc6187e52a5196ebde638cf0d74059344cc96a3" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;map&lt;/code&gt;, it will be used as callback's &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">Si se proporciona un par&amp;aacute;metro &lt;code&gt;thisArg&lt;/code&gt; para &lt;code&gt;map&lt;/code&gt; ear , se utilizar&amp;aacute; como devoluci&amp;oacute;n de llamada de &lt;code&gt;this&lt;/code&gt; valor. De lo contrario, el valor &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; se utilizar&amp;aacute; como &lt;code&gt;this&lt;/code&gt; valor. El valor de &lt;code&gt;this&lt;/code&gt; finalmente observable por &lt;code&gt;callback&lt;/code&gt; de llamada se determina de acuerdo con &lt;a href=&quot;../../operators/this&quot;&gt;las reglas habituales para determinar el &lt;code&gt;this&lt;/code&gt; visto por una funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cfcc5144fcb480f5a9615bf35d8d640124ed689e" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;some()&lt;/code&gt;, it will be used as callbacks' &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">Si se proporciona un par&amp;aacute;metro &lt;code&gt;thisArg&lt;/code&gt; a &lt;code&gt;some()&lt;/code&gt; , se utilizar&amp;aacute; como devoluciones de llamada de &lt;code&gt;this&lt;/code&gt; valor. De lo contrario, el valor &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; se utilizar&amp;aacute; como &lt;code&gt;this&lt;/code&gt; valor. El valor de &lt;code&gt;this&lt;/code&gt; finalmente observable por &lt;code&gt;callback&lt;/code&gt; de llamada se determina de acuerdo con &lt;a href=&quot;../../operators/this&quot;&gt;las reglas habituales para determinar el &lt;code&gt;this&lt;/code&gt; visto por una funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c67518b6a0defe9f309867be0175b853cf5c13a8" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;some&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">Si se proporciona un par&amp;aacute;metro &lt;code&gt;thisArg&lt;/code&gt; a &lt;code&gt;some&lt;/code&gt; , se pasar&amp;aacute; a la &lt;code&gt;callback&lt;/code&gt; de llamada cuando se invoque, para usarlo como &lt;code&gt;this&lt;/code&gt; valor. De lo contrario, el valor &lt;code&gt;undefined&lt;/code&gt; pasar&amp;aacute; para su uso como &lt;code&gt;this&lt;/code&gt; valor. El valor de &lt;code&gt;this&lt;/code&gt; finalmente observable por &lt;code&gt;callback&lt;/code&gt; de llamada se determina de acuerdo con &lt;a href=&quot;../../operators/this&quot;&gt;las reglas habituales para determinar el &lt;code&gt;this&lt;/code&gt; visto por una funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9064bb0e6133b19da0f634085d617942132a380b" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;some&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bda7ab606ed3004f2ea85c74dca1da94e54a790" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided, it will be used as callback's &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15cc313fa96f0002ca8177237c5a6a7eaf8200b" translate="yes" xml:space="preserve">
          <source>If a browser doesn't support the &lt;code&gt;TypedArray.prototype.toString()&lt;/code&gt; method yet, JavaScript will call the &lt;code&gt;toString&lt;/code&gt; method of &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Si un navegador no es compatible con el m&amp;eacute;todo &lt;code&gt;TypedArray.prototype.toString()&lt;/code&gt; todav&amp;iacute;a, JavaScript llamar&amp;aacute; al m&amp;eacute;todo &lt;code&gt;toString&lt;/code&gt; de &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="2d6530ce720bdee0f80c81e26f6ecfbd283b444c" translate="yes" xml:space="preserve">
          <source>If a descriptor has neither of &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;writable&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; keys, it is treated as a data descriptor. If a descriptor has both &lt;code&gt;value&lt;/code&gt; or &lt;code&gt;writable&lt;/code&gt; and &lt;code&gt;get&lt;/code&gt; or &lt;code&gt;set&lt;/code&gt; keys, an exception is thrown.</source>
          <target state="translated">Si un descriptor no tiene claves de &lt;code&gt;value&lt;/code&gt; , &lt;code&gt;writable&lt;/code&gt; , &lt;code&gt;get&lt;/code&gt; y &lt;code&gt;set&lt;/code&gt; , se trata como un descriptor de datos. Si un descriptor tiene tanto &lt;code&gt;value&lt;/code&gt; o &lt;code&gt;writable&lt;/code&gt; y &lt;code&gt;get&lt;/code&gt; o &lt;code&gt;set&lt;/code&gt; keys, se lanza una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2c34c6a69dfdce3e819260be6a04cfda0fbf1dc6" translate="yes" xml:space="preserve">
          <source>If a descriptor has neither of &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;writable&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; keys, it is treated as a data descriptor. If a descriptor has both [&lt;code&gt;value&lt;/code&gt; or &lt;code&gt;writable&lt;/code&gt;] and [&lt;code&gt;get&lt;/code&gt; or &lt;code&gt;set&lt;/code&gt;] keys, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e83c8dedbe6c06d159a3f6dfaa971e14e68ad6d" translate="yes" xml:space="preserve">
          <source>If a function, this prescribes how the value originally produced by parsing is transformed, before being returned.</source>
          <target state="translated">Si una función,ésta prescribe cómo se transforma el valor originalmente producido por el análisis sintáctico,antes de ser devuelto.</target>
        </trans-unit>
        <trans-unit id="391bf4a33b8c432c6b93a5a5e69abe068858d3be" translate="yes" xml:space="preserve">
          <source>If a negative number is provided for &lt;code&gt;&lt;var&gt;dayValue&lt;/var&gt;&lt;/code&gt;, the date will be set counting backwards from the last day of the previous month. -1 would result in the date being set to 1 day before the last day of the previous month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676a3f09e860cb1fdd6b7c64da13dd48930a4a79" translate="yes" xml:space="preserve">
          <source>If a new element is added to either array, the other array is not affected.</source>
          <target state="translated">Si se añade un nuevo elemento a cualquiera de las matrices,la otra matriz no se ve afectada.</target>
        </trans-unit>
        <trans-unit id="be4193e9e29d983836aef2375c967598b0df9279" translate="yes" xml:space="preserve">
          <source>If a new element is added to either typed array, the other typed array is not affected.</source>
          <target state="translated">Si se agrega un nuevo elemento a cualquiera de las matrices tipificadas,la otra matriz tipificada no se ve afectada.</target>
        </trans-unit>
        <trans-unit id="be50878ec0b2563ddd3389f7eebc5e92b8258b9c" translate="yes" xml:space="preserve">
          <source>If a non-RegExp object &lt;code&gt;&lt;var&gt;regexp&lt;/var&gt;&lt;/code&gt; is passed, it is implicitly converted to a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;new RegExp(&lt;var&gt;regexp&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281423783d855ddb3f0a19f8508114c22a018543" translate="yes" xml:space="preserve">
          <source>If a non-strict function &lt;strong&gt;&lt;strong&gt;does &lt;/strong&gt;not&lt;/strong&gt; contain rest, default, or destructured parameters, then the values in the &lt;code&gt;arguments&lt;/code&gt; object &lt;strong&gt;do&lt;/strong&gt; change in sync with the values of the argument variables. See the code below:</source>
          <target state="translated">Si una funci&amp;oacute;n no estricto &lt;strong&gt;&lt;strong&gt;no&lt;/strong&gt; no&lt;/strong&gt; contiene resto, por defecto, o los par&amp;aacute;metros desestructuradas, a continuaci&amp;oacute;n, los valores de los &lt;code&gt;arguments&lt;/code&gt; objeto &lt;strong&gt;hacer&lt;/strong&gt; el cambio en sincron&amp;iacute;a con los valores de las variables de argumentos. Vea el c&amp;oacute;digo a continuaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="25fb90bb85af1ebb4d9188ee2fd33dfe9e1c2f50" translate="yes" xml:space="preserve">
          <source>If a nonempty &lt;em&gt;iterable&lt;/em&gt; is passed, and &lt;strong&gt;all&lt;/strong&gt; of the promises fulfill, or are not promises, then the promise returned by this method is fulfilled asynchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d069c32d6d18bca5b8bc39c5dc8fb8c3caa232ba" translate="yes" xml:space="preserve">
          <source>If a number has more digits than requested by the &lt;code&gt;&lt;var&gt;fractionDigits&lt;/var&gt;&lt;/code&gt; parameter, the number is rounded to the nearest number represented by &lt;code&gt;&lt;var&gt;fractionDigits&lt;/var&gt;&lt;/code&gt; digits. See the discussion of rounding in the description of the &lt;a href=&quot;tofixed&quot;&gt;&lt;code&gt;toFixed()&lt;/code&gt;&lt;/a&gt; method, which also applies to &lt;code&gt;toExponential()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea7ce40a49626eb3ae67d76fb0cb47271742b47" translate="yes" xml:space="preserve">
          <source>If a number has more digits than requested by the &lt;code&gt;fractionDigits&lt;/code&gt; parameter, the number is rounded to the nearest number represented by &lt;code&gt;fractionDigits&lt;/code&gt; digits. See the discussion of rounding in the description of the &lt;a href=&quot;tofixed&quot;&gt;&lt;code&gt;toFixed()&lt;/code&gt;&lt;/a&gt; method, which also applies to &lt;code&gt;toExponential()&lt;/code&gt;.</source>
          <target state="translated">Si un n&amp;uacute;mero tiene m&amp;aacute;s d&amp;iacute;gitos de los solicitados por el par&amp;aacute;metro &lt;code&gt;fractionDigits&lt;/code&gt; , el n&amp;uacute;mero se redondea al n&amp;uacute;mero m&amp;aacute;s cercano representado por los d&amp;iacute;gitos &lt;code&gt;fractionDigits&lt;/code&gt; . Vea la discusi&amp;oacute;n sobre redondeo en la descripci&amp;oacute;n del m&amp;eacute;todo &lt;a href=&quot;tofixed&quot;&gt; &lt;code&gt;toFixed()&lt;/code&gt; &lt;/a&gt; , que tambi&amp;eacute;n se aplica a &lt;code&gt;toExponential()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="288361a178a4532457b48ca23e1080ecff1e23e8" translate="yes" xml:space="preserve">
          <source>If a parameter is outside of the expected range, the &lt;code&gt;UTC()&lt;/code&gt; method updates the other parameters to accommodate the value. For example, if 15 is used for month, the year will be incremented by 1 &lt;code&gt;(year + 1)&lt;/code&gt; and 3 will be used for the month.</source>
          <target state="translated">Si un par&amp;aacute;metro est&amp;aacute; fuera del rango esperado, el m&amp;eacute;todo &lt;code&gt;UTC()&lt;/code&gt; actualiza los otros par&amp;aacute;metros para acomodar el valor. Por ejemplo, si se usa 15 para el mes, el a&amp;ntilde;o se incrementar&amp;aacute; en 1 &lt;code&gt;(year + 1)&lt;/code&gt; y se usar&amp;aacute; 3 para el mes.</target>
        </trans-unit>
        <trans-unit id="c725aba9dc8cfc4ecef16eaeb9213edebcbb05da" translate="yes" xml:space="preserve">
          <source>If a parameter is outside of the expected range, the &lt;code&gt;UTC()&lt;/code&gt; method updates the other parameters to accommodate the value. For example, if &lt;code&gt;15&lt;/code&gt; is used for &lt;code&gt;&lt;var&gt;month&lt;/var&gt;&lt;/code&gt;, the year will be incremented by 1 &lt;code&gt;(&lt;var&gt;year&lt;/var&gt; + 1)&lt;/code&gt; and &lt;code&gt;3&lt;/code&gt; will be used for the month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e695a5051810de75d193b74766ab525b424229" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setFullYear()&lt;/code&gt; attempts to update the other parameters and the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you specify 15 for &lt;code&gt;&lt;var&gt;monthValue&lt;/var&gt;&lt;/code&gt;, the year is incremented by 1 (&lt;code&gt;&lt;var&gt;yearValue&lt;/var&gt; + 1&lt;/code&gt;), and 3 is used for the month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc226135066c452e9f891ad0716eedfaf99c4f78" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setFullYear()&lt;/code&gt; attempts to update the other parameters and the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you specify 15 for &lt;code&gt;monthValue&lt;/code&gt;, the year is incremented by 1 (&lt;code&gt;yearValue + 1&lt;/code&gt;), and 3 is used for the month.</source>
          <target state="translated">Si un par&amp;aacute;metro que especifica est&amp;aacute; fuera del rango esperado, &lt;code&gt;setFullYear()&lt;/code&gt; intenta actualizar los otros par&amp;aacute;metros y la informaci&amp;oacute;n de fecha en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; en&lt;/a&gt; consecuencia. Por ejemplo, si especifica 15 para &lt;code&gt;monthValue&lt;/code&gt; , el a&amp;ntilde;o se incrementa en 1 ( &lt;code&gt;yearValue + 1&lt;/code&gt; ) y se usa 3 para el mes.</target>
        </trans-unit>
        <trans-unit id="ccc6a64d169dbd4da5c7d23a80b1dd0d637ecc21" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setHours()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt;, the minutes will be incremented by 1 (&lt;code&gt;&lt;var&gt;minutesValue&lt;/var&gt; + 1&lt;/code&gt;), and 40 will be used for seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0bae704c8f363a3c418460072e51a073a948dc4" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setHours()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;secondsValue&lt;/code&gt;, the minutes will be incremented by 1 (&lt;code&gt;minutesValue + 1&lt;/code&gt;), and 40 will be used for seconds.</source>
          <target state="translated">Si un par&amp;aacute;metro que especificas est&amp;aacute; fuera del rango esperado, &lt;code&gt;setHours()&lt;/code&gt; intenta actualizar la informaci&amp;oacute;n de fecha en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; en&lt;/a&gt; consecuencia. Por ejemplo, si usa 100 para &lt;code&gt;secondsValue&lt;/code&gt; , los minutos se incrementar&amp;aacute;n en 1 ( &lt;code&gt;minutesValue + 1&lt;/code&gt; ) y 40 se usar&amp;aacute;n para los segundos.</target>
        </trans-unit>
        <trans-unit id="23b4dd0c538d62e6f6e8b5adb2fc8de560c3e8ba" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setMinutes()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt;, the minutes will be incremented by 1 (&lt;code&gt;&lt;var&gt;minutesValue&lt;/var&gt; + 1&lt;/code&gt;), and 40 will be used for seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd78caa2b59300ea65d3ff5bde2b0076413d09a" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setMinutes()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;secondsValue&lt;/code&gt;, the minutes will be incremented by 1 (&lt;code&gt;minutesValue + 1&lt;/code&gt;), and 40 will be used for seconds.</source>
          <target state="translated">Si un par&amp;aacute;metro que especificas est&amp;aacute; fuera del rango esperado, &lt;code&gt;setMinutes()&lt;/code&gt; intenta actualizar la informaci&amp;oacute;n de fecha en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; en&lt;/a&gt; consecuencia. Por ejemplo, si usa 100 para &lt;code&gt;secondsValue&lt;/code&gt; , los minutos se incrementar&amp;aacute;n en 1 ( &lt;code&gt;minutesValue + 1&lt;/code&gt; ) y 40 se usar&amp;aacute;n para los segundos.</target>
        </trans-unit>
        <trans-unit id="18bd212d1a40736bf3e113a154e00179fdae9e3c" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setMonth()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 15 for &lt;code&gt;&lt;var&gt;monthValue&lt;/var&gt;&lt;/code&gt;, the year will be incremented by 1, and 3 will be used for month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbcdc0755030f824b7ef9e0e2ebcf2e5cbc9c6f" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setMonth()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 15 for &lt;code&gt;monthValue&lt;/code&gt;, the year will be incremented by 1, and 3 will be used for month.</source>
          <target state="translated">Si un par&amp;aacute;metro que especificas est&amp;aacute; fuera del rango esperado, &lt;code&gt;setMonth()&lt;/code&gt; intenta actualizar la informaci&amp;oacute;n de fecha en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; en&lt;/a&gt; consecuencia. Por ejemplo, si usa 15 para &lt;code&gt;monthValue&lt;/code&gt; , el a&amp;ntilde;o se incrementar&amp;aacute; en 1 y 3 se usar&amp;aacute; para el mes.</target>
        </trans-unit>
        <trans-unit id="ad6f7cf92def3c1f8a1915da21b1d6f52234d3f7" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setSeconds()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt;, the minutes stored in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object will be incremented by 1, and 40 will be used for seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c6676cd42b85e15c3ec0b0481c70d568ae9434" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setSeconds()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;secondsValue&lt;/code&gt;, the minutes stored in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object will be incremented by 1, and 40 will be used for seconds.</source>
          <target state="translated">Si un par&amp;aacute;metro que especifica est&amp;aacute; fuera del rango esperado, &lt;code&gt;setSeconds()&lt;/code&gt; intenta actualizar la informaci&amp;oacute;n de fecha en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; en&lt;/a&gt; consecuencia. Por ejemplo, si usa 100 para &lt;code&gt;secondsValue&lt;/code&gt; , los minutos almacenados en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; se incrementar&amp;aacute;n en 1 y 40 se usar&amp;aacute;n para los segundos.</target>
        </trans-unit>
        <trans-unit id="df01689b65802985e92b006b852bab1789537c7d" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCDate()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 40 for &lt;code&gt;dayValue&lt;/code&gt;, and the month stored in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object is June, the day will be changed to 10 and the month will be incremented to July.</source>
          <target state="translated">Si un par&amp;aacute;metro que especificas est&amp;aacute; fuera del rango esperado, &lt;code&gt;setUTCDate()&lt;/code&gt; intenta actualizar la informaci&amp;oacute;n de fecha en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; en&lt;/a&gt; consecuencia. Por ejemplo, si usa 40 para &lt;code&gt;dayValue&lt;/code&gt; , y el mes almacenado en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; es junio, el d&amp;iacute;a se cambiar&amp;aacute; a 10 y el mes se incrementar&amp;aacute; a julio.</target>
        </trans-unit>
        <trans-unit id="0f6027596c322cca311a687bf3cf406e0ffc5812" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCFullYear()&lt;/code&gt; attempts to update the other parameters and the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you specify 15 for &lt;code&gt;&lt;var&gt;monthValue&lt;/var&gt;&lt;/code&gt;, the year is incremented by 1 (&lt;code&gt;&lt;var&gt;yearValue&lt;/var&gt; + 1&lt;/code&gt;), and 3 is used for the month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52dac7927320e1182e697b79ec8295155d19dc5c" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCFullYear()&lt;/code&gt; attempts to update the other parameters and the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you specify 15 for &lt;code&gt;monthValue&lt;/code&gt;, the year is incremented by 1 (&lt;code&gt;yearValue + 1&lt;/code&gt;), and 3 is used for the month.</source>
          <target state="translated">Si un par&amp;aacute;metro que especificas est&amp;aacute; fuera del rango esperado, &lt;code&gt;setUTCFullYear()&lt;/code&gt; intenta actualizar los otros par&amp;aacute;metros y la informaci&amp;oacute;n de fecha en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; en&lt;/a&gt; consecuencia. Por ejemplo, si especifica 15 para &lt;code&gt;monthValue&lt;/code&gt; , el a&amp;ntilde;o se incrementa en 1 ( &lt;code&gt;yearValue + 1&lt;/code&gt; ) y se usa 3 para el mes.</target>
        </trans-unit>
        <trans-unit id="5a55c9e4f35d76aa47c88004d1e11b285eaed954" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCHours()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt;, the minutes will be incremented by 1 (&lt;code&gt;minutesValue + 1&lt;/code&gt;), and 40 will be used for seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11c6ecd9791e9b4a84c89341e5b7e2f0989ca49" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCHours()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;secondsValue&lt;/code&gt;, the minutes will be incremented by 1 (&lt;code&gt;minutesValue + 1&lt;/code&gt;), and 40 will be used for seconds.</source>
          <target state="translated">Si un par&amp;aacute;metro que especificas est&amp;aacute; fuera del rango esperado, &lt;code&gt;setUTCHours()&lt;/code&gt; intenta actualizar la informaci&amp;oacute;n de fecha en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; en&lt;/a&gt; consecuencia. Por ejemplo, si usa 100 para &lt;code&gt;secondsValue&lt;/code&gt; , los minutos se incrementar&amp;aacute;n en 1 ( &lt;code&gt;minutesValue + 1&lt;/code&gt; ) y 40 se usar&amp;aacute;n para los segundos.</target>
        </trans-unit>
        <trans-unit id="0be0566f667d3135990a5889ec32194ccf1a34d5" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCMilliseconds()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 1100 for &lt;code&gt;&lt;var&gt;millisecondsValue&lt;/var&gt;&lt;/code&gt;, the seconds stored in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object will be incremented by 1, and 100 will be used for milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0fddf94acbeb7b53ae965497ce04cbb007f210" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCMilliseconds()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 1100 for &lt;code&gt;millisecondsValue&lt;/code&gt;, the seconds stored in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object will be incremented by 1, and 100 will be used for milliseconds.</source>
          <target state="translated">Si un par&amp;aacute;metro que especificas est&amp;aacute; fuera del rango esperado, &lt;code&gt;setUTCMilliseconds()&lt;/code&gt; intenta actualizar la informaci&amp;oacute;n de fecha en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; en&lt;/a&gt; consecuencia. Por ejemplo, si usa 1100 para &lt;code&gt;millisecondsValue&lt;/code&gt; , los segundos almacenados en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; se incrementar&amp;aacute;n en 1 y 100 se usar&amp;aacute;n para milisegundos.</target>
        </trans-unit>
        <trans-unit id="0844e22920653f7ff879d175734f8ca20542884e" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCMinutes()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt;, the minutes will be incremented by 1 (&lt;code&gt;&lt;var&gt;minutesValue&lt;/var&gt; + 1&lt;/code&gt;), and 40 will be used for seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ab1e641e438a15929a07e53e62551090004df3" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCMinutes()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;secondsValue&lt;/code&gt;, the minutes will be incremented by 1 (&lt;code&gt;minutesValue + 1&lt;/code&gt;), and 40 will be used for seconds.</source>
          <target state="translated">Si un par&amp;aacute;metro que especifica est&amp;aacute; fuera del rango esperado, &lt;code&gt;setUTCMinutes()&lt;/code&gt; intenta actualizar la informaci&amp;oacute;n de fecha en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; en&lt;/a&gt; consecuencia. Por ejemplo, si usa 100 para &lt;code&gt;secondsValue&lt;/code&gt; , los minutos se incrementar&amp;aacute;n en 1 ( &lt;code&gt;minutesValue + 1&lt;/code&gt; ) y 40 se usar&amp;aacute;n para los segundos.</target>
        </trans-unit>
        <trans-unit id="77a89ca3d2dd51667af8624bdb97060e7f86c012" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCMonth()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 15 for &lt;code&gt;monthValue&lt;/code&gt;, the year will be incremented by 1, and 3 will be used for month.</source>
          <target state="translated">Si un par&amp;aacute;metro que especifica est&amp;aacute; fuera del rango esperado, &lt;code&gt;setUTCMonth()&lt;/code&gt; intenta actualizar la informaci&amp;oacute;n de fecha en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; en&lt;/a&gt; consecuencia. Por ejemplo, si usa 15 para &lt;code&gt;monthValue&lt;/code&gt; , el a&amp;ntilde;o se incrementar&amp;aacute; en 1 y 3 se usar&amp;aacute; para el mes.</target>
        </trans-unit>
        <trans-unit id="d37c5d009a9e0ab4ebd4c03c9cbe96e7a5031ea7" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCSeconds()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;secondsValue&lt;/code&gt;, the minutes stored in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object will be incremented by 1, and 40 will be used for seconds.</source>
          <target state="translated">Si un par&amp;aacute;metro que especifica est&amp;aacute; fuera del rango esperado, &lt;code&gt;setUTCSeconds()&lt;/code&gt; intenta actualizar la informaci&amp;oacute;n de fecha en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; en&lt;/a&gt; consecuencia. Por ejemplo, si usa 100 para &lt;code&gt;secondsValue&lt;/code&gt; , los minutos almacenados en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; se incrementar&amp;aacute;n en 1 y 40 se usar&amp;aacute;n para los segundos.</target>
        </trans-unit>
        <trans-unit id="54e5d5b9374c3920ec4b4ed3a7977f0fa06e19b2" translate="yes" xml:space="preserve">
          <source>If a property has a corresponding target object property then &lt;code&gt;Object.defineProperty(target, prop, descriptor)&lt;/code&gt; will not throw an exception.</source>
          <target state="translated">Si una propiedad tiene una propiedad de objeto de destino correspondiente, &lt;code&gt;Object.defineProperty(target, prop, descriptor)&lt;/code&gt; no lanzar&amp;aacute; una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="837d8d104001710dc6b1a33f7143ccc511c3351f" translate="yes" xml:space="preserve">
          <source>If a property is modified in one iteration and then visited at a later time, its value in the loop is its value at that later time. A property that is deleted before it has been visited will not be visited later. Properties added to the object over which iteration is occurring may either be visited or omitted from iteration.</source>
          <target state="translated">Si una propiedad es modificada en una iteración y luego es visitada en un momento posterior,su valor en el bucle es su valor en ese momento posterior.Una propiedad que se borra antes de ser visitada no será visitada después.Las propiedades añadidas al objeto sobre el que se está produciendo la iteración pueden ser visitadas u omitidas de la iteración.</target>
        </trans-unit>
        <trans-unit id="a5534a4c3390c3a7ec2f13247ce7f50b399f6066" translate="yes" xml:space="preserve">
          <source>If a property with the same name exists on the object's prototype chain, then, after deletion, the object will use the property from the prototype chain (in other words, &lt;code&gt;delete&lt;/code&gt; only has an effect on own properties).</source>
          <target state="translated">Si existe una propiedad con el mismo nombre en la cadena del prototipo del objeto, despu&amp;eacute;s de la eliminaci&amp;oacute;n, el objeto utilizar&amp;aacute; la propiedad de la cadena del prototipo (en otras palabras, la &lt;code&gt;delete&lt;/code&gt; solo tiene efecto en las propiedades propias).</target>
        </trans-unit>
        <trans-unit id="5e95bbcb4d00da3194f60f32b87c232cfe48eb8b" translate="yes" xml:space="preserve">
          <source>If a value can be converted to &lt;code&gt;true&lt;/code&gt;, the value is so-called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt;. If a value can be converted to &lt;code&gt;false&lt;/code&gt;, the value is so-called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt;.</source>
          <target state="translated">Si un valor se puede convertir a &lt;code&gt;true&lt;/code&gt; , el valor se denomina &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;veraz&lt;/a&gt; . Si un valor se puede convertir a &lt;code&gt;false&lt;/code&gt; , el valor se denomina &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falso&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8ab400bc46efabee8fe3b7f7d0f93c12a2cfeb1f" translate="yes" xml:space="preserve">
          <source>If all of the passed-in promises fulfill, or are not promises, the promise returned by &lt;code&gt;Promise.all&lt;/code&gt; is fulfilled asynchronously.</source>
          <target state="translated">Si todas las promesas pasadas se cumplen, o no son promesas, la promesa devuelta por &lt;code&gt;Promise.all&lt;/code&gt; se cumple de forma asincr&amp;oacute;nica.</target>
        </trans-unit>
        <trans-unit id="6f42c36a852e8a0e3d96038c9b48c242a9784442" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;../statements/for...of&quot;&gt;iterable object &lt;/a&gt;is passed, all of its elements will be added to the new &lt;code&gt;Set&lt;/code&gt;. If you don't specify this parameter, or its value is &lt;code&gt;null&lt;/code&gt;, the new &lt;code&gt;Set&lt;/code&gt; is empty.</source>
          <target state="translated">Si se pasa un &lt;a href=&quot;../statements/for...of&quot;&gt;objeto iterable&lt;/a&gt; , todos sus elementos se agregar&amp;aacute;n al nuevo &lt;code&gt;Set&lt;/code&gt; . Si no especifica este par&amp;aacute;metro, o su valor es &lt;code&gt;null&lt;/code&gt; , el nuevo &lt;code&gt;Set&lt;/code&gt; est&amp;aacute; vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="3d39d83ba6dd7a9c8c32bf2347faf691e07c8e4e" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;../statements/for...of&quot;&gt;iterable object &lt;/a&gt;is passed, all of its elements will be added to the new &lt;code&gt;WeakSet&lt;/code&gt;. null is treated as undefined.</source>
          <target state="translated">Si se pasa un &lt;a href=&quot;../statements/for...of&quot;&gt;objeto iterable&lt;/a&gt; , todos sus elementos se agregar&amp;aacute;n al nuevo &lt;code&gt;WeakSet&lt;/code&gt; . null se trata como indefinido.</target>
        </trans-unit>
        <trans-unit id="2d3fe08780b4a61c2df0afb894ef6c7d6c984467" translate="yes" xml:space="preserve">
          <source>If an accessor property is inherited, its &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; methods will be called when the property is accessed and modified on descendant objects. If these methods use a variable to store the value, this value will be shared by all objects.</source>
          <target state="translated">Si se hereda una propiedad de acceso, sus m&amp;eacute;todos &lt;code&gt;get&lt;/code&gt; y &lt;code&gt;set&lt;/code&gt; se llamar&amp;aacute;n cuando se acceda a la propiedad y se modifique en los objetos descendientes. Si estos m&amp;eacute;todos utilizan una variable para almacenar el valor, este valor ser&amp;aacute; compartido por todos los objetos.</target>
        </trans-unit>
        <trans-unit id="0a6096c9d36c7d06be6e0a07577d30ae12433148" translate="yes" xml:space="preserve">
          <source>If an arrow function needs to access the &lt;code&gt;this&lt;/code&gt; variable, you can use the arrow function as the enclosing function:</source>
          <target state="translated">Si una funci&amp;oacute;n de flecha necesita acceder a &lt;code&gt;this&lt;/code&gt; variable, puede usar la funci&amp;oacute;n de flecha como funci&amp;oacute;n de cierre:</target>
        </trans-unit>
        <trans-unit id="7b4be48e7bf99e7bb43a149c21ac7c6e39523941" translate="yes" xml:space="preserve">
          <source>If an element is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;, it is converted to the empty string.</source>
          <target state="translated">Si un elemento &lt;code&gt;undefined&lt;/code&gt; est&amp;aacute; definido o es &lt;code&gt;null&lt;/code&gt; , se convierte en la cadena vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="e363aa536e88387e5c0cbd67a99ffab5a7c14024" translate="yes" xml:space="preserve">
          <source>If an element is &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; or an empty array &lt;code&gt;[]&lt;/code&gt;, it is converted to an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082c0044fd10aae386a6cf9e4adb69b5ca782b44" translate="yes" xml:space="preserve">
          <source>If an empty &lt;var&gt;iterable&lt;/var&gt; is passed, then the promise returned by this method is fulfilled synchronously. The resolved value is an empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54bc642374ee70081e3afb8490bd2269bdefd134" translate="yes" xml:space="preserve">
          <source>If an empty &lt;var&gt;iterable&lt;/var&gt; is passed, then this method returns (synchronously) an already resolved promise.</source>
          <target state="translated">Si se pasa un &lt;var&gt;iterable&lt;/var&gt; vac&amp;iacute;o , este m&amp;eacute;todo devuelve (sincr&amp;oacute;nicamente) una promesa ya resuelta.</target>
        </trans-unit>
        <trans-unit id="115182e50bdd6201c48fa9cf7d25930ad3769130" translate="yes" xml:space="preserve">
          <source>If an existing, yet-unvisited element of the array is changed by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;, its value passed to the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; will be the value at the time &lt;code&gt;find&lt;/code&gt; visits that element's index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd198759ec716bf61d3d545c999fb000e2238a04" translate="yes" xml:space="preserve">
          <source>If an iterable's &lt;code&gt;@@iterator&lt;/code&gt; method does not return an iterator object, then it is a non-well-formed iterable. Using it as such is likely to result in runtime exceptions or buggy behavior:</source>
          <target state="translated">Si el m&amp;eacute;todo &lt;code&gt;@@iterator&lt;/code&gt; iterator de un iterable no devuelve un objeto iterador, entonces es un iterable no bien formado. Es probable que su uso como tal resulte en excepciones en tiempo de ejecuci&amp;oacute;n o comportamiento con errores:</target>
        </trans-unit>
        <trans-unit id="d69c0eecc261f462796bd6ac56dedc90c4a7ce55" translate="yes" xml:space="preserve">
          <source>If an iterable's &lt;code&gt;@@iterator&lt;/code&gt; method doesn't return an iterator object, then it's a non-well-formed iterable. Using it as such is likely to result in runtime exceptions or buggy behavior:</source>
          <target state="translated">Si el m&amp;eacute;todo de &lt;code&gt;@@iterator&lt;/code&gt; un iterable no devuelve un objeto iterador, entonces es un iterable no bien formado. Es probable que su uso como tal resulte en excepciones en tiempo de ejecuci&amp;oacute;n o comportamiento con errores:</target>
        </trans-unit>
        <trans-unit id="2112de509477c036e2a78f9bd9296395f6174868" translate="yes" xml:space="preserve">
          <source>If an iterable's &lt;code&gt;@@iterator&lt;/code&gt; method doesn't return an iterator object, then it's considered a &lt;em&gt;non-well-formed&lt;/em&gt; iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b3cbae51b5fe192cd7a0df742cf2ba526bfcfb" translate="yes" xml:space="preserve">
          <source>If an object being stringified has a property named &lt;code&gt;toJSON&lt;/code&gt; whose value is a function, then the &lt;code&gt;toJSON()&lt;/code&gt; method customizes JSON stringification behavior: instead of the object being serialized, the value returned by the &lt;code&gt;toJSON()&lt;/code&gt; method when called will be serialized. &lt;code&gt;JSON.stringify()&lt;/code&gt; calls &lt;code&gt;toJSON&lt;/code&gt; with one parameter:</source>
          <target state="translated">Si un objeto en cadena tiene una propiedad llamada &lt;code&gt;toJSON&lt;/code&gt; cuyo valor es una funci&amp;oacute;n, entonces el &lt;code&gt;toJSON()&lt;/code&gt; personaliza el comportamiento de cadena JSON: en lugar de que el objeto sea serializado, el valor devuelto por el &lt;code&gt;toJSON()&lt;/code&gt; cuando es llamado ser&amp;aacute; serializado. &lt;code&gt;JSON.stringify()&lt;/code&gt; llama a &lt;code&gt;toJSON&lt;/code&gt; con un par&amp;aacute;metro:</target>
        </trans-unit>
        <trans-unit id="cef8f2323faa3f13ce8f7260bf8626d3157109e1" translate="yes" xml:space="preserve">
          <source>If an object is compared with a number or string, JavaScript attempts to return the default value for the object. Operators attempt to convert the object to a primitive value, a &lt;code&gt;String&lt;/code&gt; or &lt;code&gt;Number&lt;/code&gt; value, using the &lt;code&gt;valueOf&lt;/code&gt; and &lt;code&gt;toString&lt;/code&gt; methods of the objects. If this attempt to convert the object fails, a runtime error is generated.</source>
          <target state="translated">Si un objeto se compara con un n&amp;uacute;mero o una cadena, JavaScript intenta devolver el valor predeterminado para el objeto. Los operadores intentan convertir el objeto en un valor primitivo, un valor &lt;code&gt;String&lt;/code&gt; o &lt;code&gt;Number&lt;/code&gt; , utilizando los m&amp;eacute;todos &lt;code&gt;valueOf&lt;/code&gt; y &lt;code&gt;toString&lt;/code&gt; de los objetos. Si este intento de convertir el objeto falla, se genera un error de tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5d9c8d242f07d4b8da5fc1c766cac77ace48f8da" translate="yes" xml:space="preserve">
          <source>If an optional value is passed to the generator's &lt;code&gt;next()&lt;/code&gt; method, that value becomes the value returned by the generator's current &lt;code&gt;yield&lt;/code&gt; operation.</source>
          <target state="translated">Si se pasa un valor opcional al m&amp;eacute;todo &lt;code&gt;next()&lt;/code&gt; del generador , ese valor se convierte en el valor devuelto por la operaci&amp;oacute;n de &lt;code&gt;yield&lt;/code&gt; actual del generador .</target>
        </trans-unit>
        <trans-unit id="eab9a8913c422ab58b02bbfa5d83f5998bdc01c2" translate="yes" xml:space="preserve">
          <source>If any of the arguments are &lt;code&gt;NaN&lt;/code&gt; or cannot be converted to a number, the result is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e60bca484450eba75e83eae86d457071ed10b7" translate="yes" xml:space="preserve">
          <source>If any of the passed-in promises reject, &lt;code&gt;Promise.all&lt;/code&gt; asynchronously rejects with the value of the promise that rejected, whether or not the other promises have resolved.</source>
          <target state="translated">Si alguna de las promesas &lt;code&gt;Promise.all&lt;/code&gt; rechaza , Promise.all rechaza asincr&amp;oacute;nicamente con el valor de la promesa que se rechaz&amp;oacute;, ya sea que las otras promesas se hayan resuelto o no.</target>
        </trans-unit>
        <trans-unit id="48d47027ffc774196b349859fb3e9da455a451c9" translate="yes" xml:space="preserve">
          <source>If at least one of arguments cannot be converted to a number, the result is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si al menos uno de los argumentos no se puede convertir en un n&amp;uacute;mero, el resultado es &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5be6d3c080275816767e73cf9852e3c597d6d12" translate="yes" xml:space="preserve">
          <source>If at least one of the arguments cannot be converted to a number, the result is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si al menos uno de los argumentos no se puede convertir en un n&amp;uacute;mero, el resultado es &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09f549348155baea9ff0cca9052911fb73fa52d5" translate="yes" xml:space="preserve">
          <source>If at least two arguments are supplied, missing arguments are either set to 1 (if the day is missing) or 0 for all others.</source>
          <target state="translated">Si se suministran por lo menos dos argumentos,los argumentos que faltan se fijan en 1 (si falta el día)o en 0 para todos los demás.</target>
        </trans-unit>
        <trans-unit id="82315591edcb2db1b2e04264330ce3348f0aee52" translate="yes" xml:space="preserve">
          <source>If compilation fails, the promise rejects with a &lt;a href=&quot;compileerror&quot;&gt;&lt;code&gt;WebAssembly.CompileError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si la compilaci&amp;oacute;n falla, la promesa se rechaza con un &lt;a href=&quot;compileerror&quot;&gt; &lt;code&gt;WebAssembly.CompileError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cea3dd981e7a3aff7561a6922483101c40442bb9" translate="yes" xml:space="preserve">
          <source>If default parameters are defined for one or more parameter, then a &lt;a href=&quot;https://tc39.es/ecma262/#sec-functiondeclarationinstantiation&quot;&gt;second scope&lt;/a&gt; (Environment Record) is created, specifically for the identifiers within the parameter list. This scope is a parent of the scope created for the function body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f0c5928a0099cfe5ce965bc4209aa587dd166e" translate="yes" xml:space="preserve">
          <source>If either of the parameters are not of the correct type or structure, a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Si alguno de los par&amp;aacute;metros no es del tipo o estructura correcta, se lanza un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="329fa71267e94c738bbeefa5e7aa0eabd7f7ae7a" translate="yes" xml:space="preserve">
          <source>If either or both of the arguments are negative or &lt;code&gt;NaN&lt;/code&gt;, the &lt;code&gt;substring()&lt;/code&gt; method treats them as if they were &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69769f880229b3b08f71eee7e43ec58963b459f3" translate="yes" xml:space="preserve">
          <source>If greater than the length of the array, &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt; will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb72faf000f170f1b80581e4a48d82155c0c3894" translate="yes" xml:space="preserve">
          <source>If instead, you want to remove an array element by changing the contents of the array, use the &lt;a href=&quot;../global_objects/array/splice&quot;&gt;&lt;code&gt;splice()&lt;/code&gt;&lt;/a&gt; method. In the following example, &lt;code&gt;trees[3]&lt;/code&gt; is removed from the array completely using &lt;a href=&quot;../global_objects/array/splice&quot;&gt;&lt;code&gt;splice()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fc2322ca24a4cc53ec295316ce4fd08b085e67" translate="yes" xml:space="preserve">
          <source>If instead, you want to remove an array element by changing the contents of the array, use the &lt;code&gt;&lt;a href=&quot;../global_objects/array/splice&quot;&gt;&lt;code&gt;splice&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method. In the following example, &lt;code&gt;trees[3]&lt;/code&gt; is removed from the array completely using &lt;code&gt;&lt;a href=&quot;../global_objects/array/splice&quot;&gt;&lt;code&gt;splice&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Si, en cambio, desea eliminar un elemento de la matriz cambiando el contenido de la matriz, utilice el m&amp;eacute;todo de &lt;code&gt;&lt;a href=&quot;../global_objects/array/splice&quot;&gt;&lt;code&gt;splice&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; . En el siguiente ejemplo, los &lt;code&gt;trees[3]&lt;/code&gt; se eliminan de la matriz por completo mediante &lt;code&gt;&lt;a href=&quot;../global_objects/array/splice&quot;&gt;&lt;code&gt;splice&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2aa5046f9eb74295f861c69f7b20dc6058c9f652" translate="yes" xml:space="preserve">
          <source>If it is a positive number with a positive sign, &lt;code&gt;RegExp()&lt;/code&gt; will ignore the positive sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe41e69103f9edde244c8197d5369fb1ea48d61" translate="yes" xml:space="preserve">
          <source>If it is resolved</source>
          <target state="translated">Si se resuelve</target>
        </trans-unit>
        <trans-unit id="446ee71b57c4dc727ad4482eb4cb20418b406cbe" translate="yes" xml:space="preserve">
          <source>If it rejects, it is rejected with the reason from the first promise in the iterable that was rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d9729db77586d30dcb90e9b3c12a312fac9880" translate="yes" xml:space="preserve">
          <source>If it rejects, it is rejected with the reason from the first promise that was rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb1cc05b2c2ef7200a99e47d5f93b8653470671" translate="yes" xml:space="preserve">
          <source>If it's used, it will be accessed several times, and there is no need to re-calculate that value will never be changed or shouldn't be re-calculated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d09c7d906444b72f87c57393ac10ac8d90cbc87" translate="yes" xml:space="preserve">
          <source>If it's used, it will be accessed several times, and there is no need to re-calculate that value will never be changed, or shouldn't be re-calculated.</source>
          <target state="translated">Si se utiliza,se accederá a él varias veces,y no es necesario volver a calcular ese valor nunca se cambiará,o no se debería volver a calcular.</target>
        </trans-unit>
        <trans-unit id="d31244b48c8d3b0b322ef9ce1f75a06324d0d657" translate="yes" xml:space="preserve">
          <source>If module is not a &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object instance, a &lt;a href=&quot;../../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Si el m&amp;oacute;dulo no es una instancia de objeto &lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt; , se lanza un &lt;a href=&quot;../../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a6b8e3ea5e20c3a5881face3771f7491d5f74865" translate="yes" xml:space="preserve">
          <source>If negative, it will begin that many elements from the end of the array. (In this case, the origin &lt;code&gt;-1&lt;/code&gt;, meaning &lt;code&gt;-&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; is the index of the &lt;code&gt;&lt;var&gt;n&lt;/var&gt;&lt;/code&gt;&lt;sup&gt;th&lt;/sup&gt; last element, and is therefore equivalent to the index of &lt;code&gt;&lt;var&gt;array&lt;/var&gt;.length - &lt;var&gt;n&lt;/var&gt;&lt;/code&gt;.) If &lt;code&gt;&lt;var&gt;array&lt;/var&gt;.length + &lt;var&gt;start&lt;/var&gt;&lt;/code&gt; is less than &lt;code&gt;0&lt;/code&gt;, it will begin from index &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f05381949d7c897bb41de21ca73f9e4317dd755" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt; is provided to &lt;code&gt;charAt()&lt;/code&gt;, the default is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91f0e4cc5abd9a5b3dbdbb7a0297c9b1abf06c5" translate="yes" xml:space="preserve">
          <source>If no argument is provided, the &lt;code&gt;value&lt;/code&gt; property of returned object is the same as if &lt;code&gt;.next()&lt;/code&gt;. If an argument is provided, it will be set to the value of the &lt;code&gt;value&lt;/code&gt; property of the returned object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0091f074b8afb9219bdfed384f304735f7b83e" translate="yes" xml:space="preserve">
          <source>If no arguments are given, the result is +0.</source>
          <target state="translated">Si no se dan argumentos,el resultado es +0.</target>
        </trans-unit>
        <trans-unit id="9990c049d2e8a0255f2ea7fdd43424a88bf9391b" translate="yes" xml:space="preserve">
          <source>If no arguments are given, the result is +0. If any of the arguments is &amp;plusmn;Infinity, the result is Infinity. If any of the arguments is NaN (unless another argument is &amp;plusmn;Infinity), the result is NaN. If at least one of the arguments cannot be converted to a number, the result is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec49b483dc5f92d00626cab7c85c35367d1467e" translate="yes" xml:space="preserve">
          <source>If no arguments are given, the result is -&lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si no se dan argumentos, el resultado es - &lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d63e690a371b2f42dfb850c4bf3dbb9ed32758d6" translate="yes" xml:space="preserve">
          <source>If no arguments are given, the result is &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si no se dan argumentos, el resultado es &lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1ce565041aff6de5300fa5e4efb7b43bee1e0ca9" translate="yes" xml:space="preserve">
          <source>If no arguments are provided, the constructor creates a JavaScript &lt;code&gt;Date&lt;/code&gt; object for the current date and time according to system settings for timezone offset.</source>
          <target state="translated">Si no se proporcionan argumentos, el constructor crea un objeto &lt;code&gt;Date&lt;/code&gt; JavaScript para la fecha y hora actuales de acuerdo con la configuraci&amp;oacute;n del sistema para el desplazamiento de la zona horaria.</target>
        </trans-unit>
        <trans-unit id="349be3fe930215fab503b160fac65a4afd9578ab" translate="yes" xml:space="preserve">
          <source>If no elements are removed, an empty array is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f768f5cdd68c2b69894b9dde66eb214e5224574b" translate="yes" xml:space="preserve">
          <source>If no index is provided to &lt;code&gt;charAt()&lt;/code&gt;, the default is 0.</source>
          <target state="translated">Si no se proporciona un &amp;iacute;ndice a &lt;code&gt;charAt()&lt;/code&gt; , el valor predeterminado es 0.</target>
        </trans-unit>
        <trans-unit id="df2278328be6b4739a3d8c782a34d0454e15f504" translate="yes" xml:space="preserve">
          <source>If no matching &lt;code&gt;case&lt;/code&gt; clause is found, the program looks for the optional &lt;code&gt;default&lt;/code&gt; clause, and if found, transfers control to that clause, executing the associated statements. If no &lt;code&gt;default&lt;/code&gt; clause is found, the program continues execution at the statement following the end of &lt;code&gt;switch&lt;/code&gt;. By convention, the &lt;code&gt;default&lt;/code&gt; clause is the last clause, but it does not need to be so.</source>
          <target state="translated">Si no se encuentra una cl&amp;aacute;usula de &lt;code&gt;case&lt;/code&gt; coincidente , el programa busca la cl&amp;aacute;usula &lt;code&gt;default&lt;/code&gt; opcional y, si la encuentra, transfiere el control a esa cl&amp;aacute;usula, ejecutando las declaraciones asociadas. Si no se encuentra una cl&amp;aacute;usula &lt;code&gt;default&lt;/code&gt; , el programa contin&amp;uacute;a la ejecuci&amp;oacute;n en la declaraci&amp;oacute;n que sigue al final del &lt;code&gt;switch&lt;/code&gt; . Por convenci&amp;oacute;n, la cl&amp;aacute;usula &lt;code&gt;default&lt;/code&gt; es la &amp;uacute;ltima cl&amp;aacute;usula, pero no es necesario que sea as&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="f9c179b8d44481d64d61150bf0f2642fed87585c" translate="yes" xml:space="preserve">
          <source>If no string is explicitly provided, &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-tostring&quot;&gt;&lt;var&gt;searchValue&lt;/var&gt; will be coerced to &quot;&lt;code&gt;undefined&lt;/code&gt;&quot;&lt;/a&gt;, and this value will be searched for in &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d6fe27bce7cb59badbbf88b73e5ae858f2f1f6" translate="yes" xml:space="preserve">
          <source>If not &lt;code&gt;NaN&lt;/code&gt;, the return value will be the integer that is the first argument taken as a number in the specified &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt;. (For example, a &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; of &lt;code&gt;10&lt;/code&gt; converts from a decimal number, &lt;code&gt;8&lt;/code&gt; converts from octal, &lt;code&gt;16&lt;/code&gt; from hexadecimal, and so on.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157db00b7126c89fc2532f635dc2767990139ad4" translate="yes" xml:space="preserve">
          <source>If one of the operands is &lt;code&gt;Boolean&lt;/code&gt;, the Boolean operand is converted to 1 if it is &lt;code&gt;true&lt;/code&gt; and +0 if it is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Si uno de los operandos es &lt;code&gt;Boolean&lt;/code&gt; , el operando booleano se convierte en 1 si es &lt;code&gt;true&lt;/code&gt; y +0 si es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5aa8b2baae192e612c1543533ffaebb114c4ec0f" translate="yes" xml:space="preserve">
          <source>If one or both arguments are omitted or are provided non-functions, then &lt;code&gt;then&lt;/code&gt; will be missing the handler(s), but will not generate any errors. If the &lt;code&gt;Promise&lt;/code&gt; that &lt;code&gt;then&lt;/code&gt; is called on adopts a state (&lt;code&gt;fulfillment&lt;/code&gt; or &lt;code&gt;rejection&lt;/code&gt;) for which &lt;code&gt;then&lt;/code&gt; has no handler, a new &lt;code&gt;Promise&lt;/code&gt; is created with no additional handlers, simply adopting the final state of the original &lt;code&gt;Promise&lt;/code&gt; on which &lt;code&gt;then&lt;/code&gt; was called.</source>
          <target state="translated">Si uno o ambos argumentos se omiten o se proporcionan los no funciona, a continuaci&amp;oacute;n, &lt;code&gt;then&lt;/code&gt; no podr&amp;aacute; contar con el manejador (s), pero no generar&amp;aacute; ning&amp;uacute;n error. Si la &lt;code&gt;Promise&lt;/code&gt; que &lt;code&gt;then&lt;/code&gt; es invocada adopta un estado ( &lt;code&gt;fulfillment&lt;/code&gt; o &lt;code&gt;rejection&lt;/code&gt; ) para el cual &lt;code&gt;then&lt;/code&gt; no tiene manejador, se crea una nueva &lt;code&gt;Promise&lt;/code&gt; sin manejadores adicionales, simplemente adoptando el estado final de la &lt;code&gt;Promise&lt;/code&gt; original en la que &lt;code&gt;then&lt;/code&gt; fue invocada.</target>
        </trans-unit>
        <trans-unit id="3b2d6b28b997335014500b08d8f04f7c3691b2c8" translate="yes" xml:space="preserve">
          <source>If one or both arguments are omitted or are provided non-functions, then &lt;code&gt;then&lt;/code&gt; will be missing the handler(s), but will not generate any errors. If the &lt;code&gt;Promise&lt;/code&gt; that &lt;code&gt;then&lt;/code&gt; is called on adopts a state (&lt;code&gt;fulfillment&lt;/code&gt; or &lt;code&gt;rejection&lt;/code&gt;) for which &lt;code&gt;then&lt;/code&gt; has no handler, the returned promise simply adopts the final state of the original &lt;code&gt;Promise&lt;/code&gt; on which &lt;code&gt;then&lt;/code&gt; was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457b342baa5fd75eb025ca9f5b99efd20082c5f4" translate="yes" xml:space="preserve">
          <source>If one wishes to follow the more recent &lt;a href=&quot;http://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt; for URLs, which makes square brackets reserved (for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IPv6&quot;&gt;IPv6&lt;/a&gt;) and thus not encoded when forming something which could be part of a URL (such as a host), the following code snippet may help:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c69555d0da6cfd17e4847850dca3e2008fe6a4" translate="yes" xml:space="preserve">
          <source>If only one element is removed, an array of one element is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d18e2f04f7d7d60c84e76982daf3b58967d734" translate="yes" xml:space="preserve">
          <source>If passing the function argument using an &lt;a href=&quot;../../functions/arrow_functions&quot;&gt;arrow function expression&lt;/a&gt; the &lt;code&gt;thisArg&lt;/code&gt; parameter can be omitted as arrow functions lexically bind the &lt;a href=&quot;../../operators/this&quot;&gt;&lt;code&gt;this&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">Si se pasa el argumento de la funci&amp;oacute;n utilizando una &lt;a href=&quot;../../functions/arrow_functions&quot;&gt;expresi&amp;oacute;n de funci&amp;oacute;n de flecha,&lt;/a&gt; el par&amp;aacute;metro &lt;code&gt;thisArg&lt;/code&gt; se puede omitir ya que las funciones de flecha enlazan l&amp;eacute;xicamente &lt;a href=&quot;../../operators/this&quot;&gt; &lt;code&gt;this&lt;/code&gt; &lt;/a&gt; valor.</target>
        </trans-unit>
        <trans-unit id="6b009fba48b5763df48e0358044ceb1e1dc86d5e" translate="yes" xml:space="preserve">
          <source>If pattern argument is &lt;strong&gt;not&lt;/strong&gt; a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object, &lt;a href=&quot;../string/replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt; doesn't call this method, nor creates a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Si el argumento del patr&amp;oacute;n &lt;strong&gt;no&lt;/strong&gt; es un objeto &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../string/replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; &lt;/a&gt; no llama a este m&amp;eacute;todo ni crea un objeto &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6c9e2fc126b23061bb02204abf1952156dba945b" translate="yes" xml:space="preserve">
          <source>If provided, it is used as the length of &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt;. Defaults to &lt;code&gt;&lt;var&gt;str&lt;/var&gt;.length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe3f0eab5663e5d1ba57f7d29abefac6af921f5" translate="yes" xml:space="preserve">
          <source>If specified and not &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, an object whose enumerable own properties (that is, those properties defined upon itself and &lt;em&gt;not&lt;/em&gt; enumerable properties along its prototype chain) specify property descriptors to be added to the newly-created object, with the corresponding property names. These properties correspond to the second argument of &lt;a href=&quot;defineproperties&quot;&gt;&lt;code&gt;Object.defineProperties()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffe4874009bf36af9606205e966fc91f48654a0" translate="yes" xml:space="preserve">
          <source>If specified, &lt;code&gt;flags&lt;/code&gt; indicates the flags to add, or if an object is supplied for the pattern, the &lt;code&gt;flags&lt;/code&gt; value will replace any of that object's flags (and &lt;code&gt;lastIndex&lt;/code&gt; will be reset to 0) (as of ES2015). If &lt;code&gt;flags&lt;/code&gt; is not specified and a regular expressions object is supplied, that object's flags (and &lt;code&gt;lastIndex&lt;/code&gt; value) will be copied over. The value is a string containing any combination of the following values:</source>
          <target state="translated">Si se especifica, &lt;code&gt;flags&lt;/code&gt; indican las banderas que se agregar&amp;aacute;n, o si se proporciona un objeto para el patr&amp;oacute;n, el valor de las &lt;code&gt;flags&lt;/code&gt; reemplazar&amp;aacute; cualquiera de las banderas de ese objeto (y &lt;code&gt;lastIndex&lt;/code&gt; se restablecer&amp;aacute; a 0) (a partir de ES2015). Si &lt;code&gt;flags&lt;/code&gt; no se especifica y un objeto de expresiones regulares se suministra, banderas de ese objeto (y &lt;code&gt;lastIndex&lt;/code&gt; valor) se copiar&amp;aacute;n. El valor es una cadena que contiene cualquier combinaci&amp;oacute;n de los siguientes valores:</target>
        </trans-unit>
        <trans-unit id="0f278705572fe4cf68405aa4e5bdb3c3070a0a9a" translate="yes" xml:space="preserve">
          <source>If specified, flags can have any combination of the following values:</source>
          <target state="translated">Si se especifica,las banderas pueden tener cualquier combinación de los siguientes valores:</target>
        </trans-unit>
        <trans-unit id="d41c0656b3d2ecfbd3b7ffcf0502574cc52a75c7" translate="yes" xml:space="preserve">
          <source>If successful, &lt;code&gt;[@@search]()&lt;/code&gt; returns the index of the first match of the regular expression inside the string. Otherwise, it returns -1.</source>
          <target state="translated">Si tiene &amp;eacute;xito, &lt;code&gt;[@@search]()&lt;/code&gt; devuelve el &amp;iacute;ndice de la primera coincidencia de la expresi&amp;oacute;n regular dentro de la cadena. De lo contrario, devuelve -1.</target>
        </trans-unit>
        <trans-unit id="ee11a9ac2ddedc856e6b1b7ccdce4f9c79a7d963" translate="yes" xml:space="preserve">
          <source>If such an element is found, &lt;code&gt;findIndex()&lt;/code&gt; immediately returns the element's index. If &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; never returns a truthy value (or the array's &lt;code&gt;length&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;), &lt;code&gt;findIndex()&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c16da19397f9747a7c13f6fa34a9db0332a7be3" translate="yes" xml:space="preserve">
          <source>If such an element is found, &lt;code&gt;findIndex&lt;/code&gt; immediately returns that found element's index. If the callback never returns a truthy value or the array's &lt;code&gt;length&lt;/code&gt; is 0, &lt;code&gt;findIndex&lt;/code&gt; returns -1. Unlike some other array methods such as &lt;a href=&quot;some&quot;&gt;&lt;code&gt;Array.some&lt;/code&gt;&lt;/a&gt;, in sparse arrays the &lt;code&gt;callback&lt;/code&gt;&lt;strong&gt;is called&lt;/strong&gt; even for indexes of entries not present in the array.</source>
          <target state="translated">Si se encuentra dicho elemento, &lt;code&gt;findIndex&lt;/code&gt; devuelve inmediatamente el &amp;iacute;ndice del elemento encontrado. Si la devoluci&amp;oacute;n de llamada nunca devuelve un valor verdadero o la &lt;code&gt;length&lt;/code&gt; la matriz es 0, &lt;code&gt;findIndex&lt;/code&gt; devuelve -1. A diferencia de otros m&amp;eacute;todos de matriz, como &lt;a href=&quot;some&quot;&gt; &lt;code&gt;Array.some&lt;/code&gt; &lt;/a&gt; , en matrices dispersas, la &lt;code&gt;callback&lt;/code&gt; &lt;strong&gt;se llama&lt;/strong&gt; incluso para &amp;iacute;ndices de entradas que no est&amp;aacute;n presentes en la matriz.</target>
        </trans-unit>
        <trans-unit id="aa1e6e164506acad60b43c996244e0ccc14c8ac0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;dayValue&lt;/var&gt;&lt;/code&gt; is outside of the range of date values for the month, &lt;code&gt;setDate()&lt;/code&gt; will update the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50246270bc94fbe34619b2358197206035242ab3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;fractionDigits&lt;/var&gt;&lt;/code&gt; argument is omitted, the number of digits after the decimal point defaults to the number of digits necessary to represent the value uniquely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a042a031513c64b3651a694e6ea1a7b0776593" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;numObj&lt;/var&gt;&lt;/code&gt; is negative, the sign is preserved. This is the case even if the radix is &lt;code&gt;2&lt;/code&gt;; the string returned is the positive binary representation of the &lt;code&gt;&lt;var&gt;numObj&lt;/var&gt;&lt;/code&gt; preceded by a &lt;code&gt;-&lt;/code&gt; sign, &lt;strong&gt;not&lt;/strong&gt; the two's complement of the &lt;code&gt;&lt;var&gt;numObj&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7a7c24bdbbc78170e073659c5f668b16269b25" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;numObj&lt;/var&gt;&lt;/code&gt; is not a whole number, the 'dot' sign is used to separate the decimal places.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b245f6f7566843542a7c173cff50732fbfd3bacf" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; is not specified, the preferred radix is assumed to be &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ad481de4c33588fdb0802190cf8b149d7966ee" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; is smaller than &lt;code&gt;2&lt;/code&gt; or bigger than &lt;code&gt;36&lt;/code&gt;, and the first non-whitespace character cannot be converted to a number, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a67a27ec1cbf334f567215905a7753278f9f6b8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;reviver&lt;/var&gt;&lt;/code&gt; only transforms some values and not others, be certain to return all untransformed values as-is, otherwise, they will be deleted from the resulting object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f05af6384b04457cbb7e13272e0dc49a80bd675" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. With &lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt;&lt;/a&gt;, a non-object first argument will be coerced to an object at first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9f99648bb256a49a00568bf5dfb30e3033d62e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. With &lt;a href=&quot;../object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;, a non-object first argument will be coerced to an object at first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dcf4e160575e283d63147e2cc65d135d2974ea8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. With &lt;a href=&quot;../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;, a non-object &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; will be coerced to an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3ac025020aed5a0890e8afac6c32f2c8ae815b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; value passed to &lt;code&gt;TypedArray.from()&lt;/code&gt; is not a constructor, &lt;code&gt;TypedArray.from()&lt;/code&gt; will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;Array.from()&lt;/code&gt; defaults to creating a new &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38a2717bbd5bd5ac9ed570a97494bee3fa7ab86" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Promise&lt;/code&gt; is rejected, the &lt;code&gt;await&lt;/code&gt; expression throws the rejected value.</source>
          <target state="translated">Si se rechaza la &lt;code&gt;Promise&lt;/code&gt; , la expresi&amp;oacute;n de &lt;code&gt;await&lt;/code&gt; arroja el valor rechazado.</target>
        </trans-unit>
        <trans-unit id="35e4d659d7d35a3c85c18d904b4849b0e0e985e0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Promise&lt;/code&gt; is rejected, the rejected value is thrown.</source>
          <target state="translated">Si se rechaza la &lt;code&gt;Promise&lt;/code&gt; , se arroja el valor rechazado.</target>
        </trans-unit>
        <trans-unit id="be3b876046ad63614f4af66a1f82f87240d95fa8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;configurable&lt;/code&gt; attribute of &lt;code&gt;o.a&lt;/code&gt; had been &lt;code&gt;true&lt;/code&gt;, none of the errors would be thrown and the property would be deleted at the end.</source>
          <target state="translated">Si el atributo &lt;code&gt;configurable&lt;/code&gt; de &lt;code&gt;o.a&lt;/code&gt; hubiera sido &lt;code&gt;true&lt;/code&gt; , no se lanzar&amp;iacute;a ninguno de los errores y la propiedad se eliminar&amp;iacute;a al final.</target>
        </trans-unit>
        <trans-unit id="ac47f72ce3f75c7a5073bd32d1f6a7c725984cd3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;dayValue&lt;/code&gt; is outside of the range of date values for the month, &lt;code&gt;setDate()&lt;/code&gt; will update the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if 0 is provided for &lt;code&gt;dayValue&lt;/code&gt;, the date will be set to the last day of the previous month.</source>
          <target state="translated">Si &lt;code&gt;dayValue&lt;/code&gt; est&amp;aacute; fuera del rango de valores de fecha para el mes, &lt;code&gt;setDate()&lt;/code&gt; actualizar&amp;aacute; el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; en&lt;/a&gt; consecuencia. Por ejemplo, si se proporciona 0 para &lt;code&gt;dayValue&lt;/code&gt; , la fecha se establecer&amp;aacute; en el &amp;uacute;ltimo d&amp;iacute;a del mes anterior.</target>
        </trans-unit>
        <trans-unit id="8c831ca3402dbcf2a32deaa1dbe0ffc5d3e40992" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;finally&lt;/code&gt; block returns a value, this value becomes the return value of the entire &lt;code&gt;try-catch-finally&lt;/code&gt; production, regardless of any &lt;code&gt;return&lt;/code&gt; statements in the &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt; blocks. This includes exceptions thrown inside of the catch block:</source>
          <target state="translated">Si el bloque &lt;code&gt;finally&lt;/code&gt; devuelve un valor, este valor se convierte en el valor de retorno de toda la producci&amp;oacute;n &lt;code&gt;try-catch-finally&lt;/code&gt; , independientemente de las declaraciones de &lt;code&gt;return&lt;/code&gt; en los bloques &lt;code&gt;try&lt;/code&gt; y &lt;code&gt;catch&lt;/code&gt; . Esto incluye excepciones lanzadas dentro del bloque de captura:</target>
        </trans-unit>
        <trans-unit id="6bd8c3283258f28a255b8f9242378a0b430c842d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;finally&lt;/code&gt;-block returns a value, this value becomes the return value of the entire &lt;code&gt;try-catch-finally&lt;/code&gt; statement, regardless of any &lt;code&gt;return&lt;/code&gt; statements in the &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt;-blocks. This includes exceptions thrown inside of the &lt;code&gt;catch&lt;/code&gt;-block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887007377f2e5472d0d2ce3630b6c75058342d26" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;fractionDigits&lt;/code&gt; argument is omitted, the number of digits after the decimal point defaults to the number of digits necessary to represent the value uniquely.</source>
          <target state="translated">Si se omite el argumento &lt;code&gt;fractionDigits&lt;/code&gt; , el n&amp;uacute;mero de d&amp;iacute;gitos despu&amp;eacute;s del punto decimal se establece de forma predeterminada en el n&amp;uacute;mero de d&amp;iacute;gitos necesarios para representar el valor de forma &amp;uacute;nica.</target>
        </trans-unit>
        <trans-unit id="3945a3dae8e73ba351db0fe2aed7b731eb381952" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;g&lt;/code&gt; flag is used, all results matching the complete regular expression will be returned, but capturing groups will not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef660d2f00a701c21aacee179340977e0be81003" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;grow()&lt;/code&gt; operation fails for whatever reason, a &lt;a href=&quot;../../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Si la operaci&amp;oacute;n &lt;code&gt;grow()&lt;/code&gt; falla por cualquier motivo, se lanza un &lt;a href=&quot;../../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="62ed07c8a605b46ecbd26f7316bd0d1b6317b32f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;numObj&lt;/code&gt; is negative, the sign is preserved. This is the case even if the radix is 2; the string returned is the positive binary representation of the &lt;code&gt;numObj&lt;/code&gt; preceded by a &lt;code&gt;-&lt;/code&gt; sign, &lt;strong&gt;not&lt;/strong&gt; the two's complement of the &lt;code&gt;numObj&lt;/code&gt;.</source>
          <target state="translated">Si &lt;code&gt;numObj&lt;/code&gt; es negativo, se conserva el signo. Este es el caso incluso si la base es 2; la cadena devuelta es la representaci&amp;oacute;n binaria positiva del &lt;code&gt;numObj&lt;/code&gt; precedida por un signo &lt;code&gt;-&lt;/code&gt; , &lt;strong&gt;no&lt;/strong&gt; el complemento a dos del &lt;code&gt;numObj&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="964309f504b1e8dbcd7544bd0f936b81ccb62f80" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;numObj&lt;/code&gt; is not a whole number, the 'dot' sign is used to separate the decimal places.</source>
          <target state="translated">Si &lt;code&gt;numObj&lt;/code&gt; no es un n&amp;uacute;mero entero, el signo 'punto' se usa para separar los lugares decimales.</target>
        </trans-unit>
        <trans-unit id="a28f6f94f14d2f4d2bb91f60f2a5ef633b20a00e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;precision&lt;/code&gt; argument is omitted, behaves as &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;Number.prototype.toString()&lt;/code&gt;&lt;/a&gt;. If the &lt;code&gt;precision&lt;/code&gt; argument is a non-integer value, it is rounded to the nearest integer.</source>
          <target state="translated">Si se omite el argumento de &lt;code&gt;precision&lt;/code&gt; , se comporta como &lt;a href=&quot;tostring&quot;&gt; &lt;code&gt;Number.prototype.toString()&lt;/code&gt; &lt;/a&gt; . Si el argumento de &lt;code&gt;precision&lt;/code&gt; es un valor no entero, se redondea al n&amp;uacute;mero entero m&amp;aacute;s cercano.</target>
        </trans-unit>
        <trans-unit id="6a944bff6bb8c754d1d8d302d8f5101d5f14b110" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;radix&lt;/code&gt; is not specified, the preferred radix is assumed to be 10.</source>
          <target state="translated">Si el &lt;code&gt;radix&lt;/code&gt; no se especifica, el radix preferida se supone que es 10.</target>
        </trans-unit>
        <trans-unit id="d18fb91572aa023d50209da5a43a714383069e99" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;reviver&lt;/code&gt; only transforms some values and not others, be certain to return all untransformed values as-is, otherwise they will be deleted from the resulting object.</source>
          <target state="translated">Si el &lt;code&gt;reviver&lt;/code&gt; solo transforma algunos valores y no otros, aseg&amp;uacute;rese de devolver todos los valores sin transformar tal cual, de lo contrario, se eliminar&amp;aacute;n del objeto resultante.</target>
        </trans-unit>
        <trans-unit id="a158dec28bab58d57879567bd00f0791b3830d8a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;revoke()&lt;/code&gt; function gets called, the proxy becomes unusable: Any trap to a handler will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. Once a proxy is revoked, it will remain revoked and can be garbage collected. Calling &lt;code&gt;revoke()&lt;/code&gt; again has no effect.</source>
          <target state="translated">Si se llama a la funci&amp;oacute;n &lt;code&gt;revoke()&lt;/code&gt; , el proxy se vuelve inutilizable: cualquier trampa a un controlador arrojar&amp;aacute; un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; . Una vez que se revoca un proxy, permanecer&amp;aacute; revocado y se puede recolectar basura. Llamar a &lt;code&gt;revoke()&lt;/code&gt; nuevo no tiene ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="fb5c716988ff9e8f76361370d17e445497a6277b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;str&lt;/code&gt; argument is &lt;strong&gt;not&lt;/strong&gt; a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object, &lt;a href=&quot;../string/split&quot;&gt;&lt;code&gt;String.prototype.split()&lt;/code&gt;&lt;/a&gt; doesn't call this method, nor create a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Si el argumento &lt;code&gt;str&lt;/code&gt; &lt;strong&gt;no&lt;/strong&gt; es un objeto &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../string/split&quot;&gt; &lt;code&gt;String.prototype.split()&lt;/code&gt; &lt;/a&gt; no llama a este m&amp;eacute;todo ni crea un objeto &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8eb4dd6a3439d48edde8782414da2fc33e520fe8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;this&lt;/code&gt; value passed to &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.of&lt;/code&gt; is not a constructor, &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.of&lt;/code&gt; will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;Array.of&lt;/code&gt; defaults to creating a new &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si el &lt;code&gt;this&lt;/code&gt; valor pasado a &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.of&lt;/code&gt; no es un constructor, &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.of&lt;/code&gt; lanzar&amp;aacute; una &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; , donde &lt;code&gt;Array.of&lt;/code&gt; por defecto a la creaci&amp;oacute;n de una nueva &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="723c644a1915a6d351777f6cab8660518aaa2659" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;this&lt;/code&gt; value passed to &lt;code&gt;&lt;var&gt;TypedArray&lt;/var&gt;.of&lt;/code&gt; is not a constructor, &lt;code&gt;&lt;var&gt;TypedArray&lt;/var&gt;.of&lt;/code&gt; will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;Array.of&lt;/code&gt; defaults to creating a new &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c65f33aa598404d3369137e257e8e881b958f5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;toString()&lt;/code&gt; method is called on a function created by the &lt;code&gt;Function&lt;/code&gt; constructor, &lt;code&gt;toString()&lt;/code&gt; returns the source code of a synthesized function declaration named &quot;anonymous&quot; using the provided parameters and function body.</source>
          <target state="translated">Si se llama al m&amp;eacute;todo &lt;code&gt;toString()&lt;/code&gt; en una funci&amp;oacute;n creada por el constructor de &lt;code&gt;Function&lt;/code&gt; , &lt;code&gt;toString()&lt;/code&gt; devuelve el c&amp;oacute;digo fuente de una declaraci&amp;oacute;n de funci&amp;oacute;n sintetizada denominada &quot;an&amp;oacute;nimo&quot; utilizando los par&amp;aacute;metros y el cuerpo de la funci&amp;oacute;n proporcionados.</target>
        </trans-unit>
        <trans-unit id="d2d395675e98f1c324b31de3e7f800ca7f0ca1d0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;toString()&lt;/code&gt; method is called on built-in function objects or a function created by &lt;code&gt;Function.prototype.bind&lt;/code&gt;, &lt;code&gt;toString()&lt;/code&gt; returns a &lt;em&gt;native function string&lt;/em&gt; which looks like</source>
          <target state="translated">Si se llama al m&amp;eacute;todo &lt;code&gt;toString()&lt;/code&gt; en objetos de funci&amp;oacute;n incorporados o en una funci&amp;oacute;n creada por &lt;code&gt;Function.prototype.bind&lt;/code&gt; , &lt;code&gt;toString()&lt;/code&gt; devuelve una &lt;em&gt;cadena de funci&amp;oacute;n nativa&lt;/em&gt; que se parece a</target>
        </trans-unit>
        <trans-unit id="4e56640ad0ffad1ff5993fcb62e39036efe032f5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;|this|&lt;/code&gt; value passed to &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from&lt;/code&gt; is not a constructor, &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from&lt;/code&gt; will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;Array.from&lt;/code&gt; defaults to creating a new &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si el &lt;code&gt;|this|&lt;/code&gt; valor pasado a &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from&lt;/code&gt; no es un constructor, &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from&lt;/code&gt; lanzar&amp;aacute; una &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; , donde &lt;code&gt;Array.from&lt;/code&gt; por defecto a la creaci&amp;oacute;n de una nueva &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="77fff64ff9eae8df8bbff897e13e7521a4049f5a" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;iterable&lt;/var&gt; contains non-promise values, they will be ignored, but still counted in the returned promise array value (if the promise is fulfilled):</source>
          <target state="translated">Si el &lt;var&gt;iterable&lt;/var&gt; contiene valores que no son de promesa, se ignorar&amp;aacute;n, pero a&amp;uacute;n as&amp;iacute; se contar&amp;aacute;n en el valor de matriz de promesa devuelto (si se cumple la promesa):</target>
        </trans-unit>
        <trans-unit id="4d5a749e884b72ff7fdb5c875dfb8ade05e78e57" translate="yes" xml:space="preserve">
          <source>If the JavaScript interpreter cannot guarantee that all the provided arguments are numbers at the point that the call is made, it needs to either insert checks for all the arguments before the inlined code, or it cannot inline the function. Now in this particular case a smart interpreter should be able to rearrange the checks to be more optimal and not check any values that would not be used. However in many cases that's just not possible and therefore it becomes impossible to inline.</source>
          <target state="translated">Si el intérprete de JavaScript no puede garantizar que todos los argumentos proporcionados son números en el punto en que se hace la llamada,necesita insertar comprobaciones de todos los argumentos antes del código inlineado,o no puede inlinear la función.Ahora bien,en este caso particular un intérprete inteligente debería ser capaz de reorganizar las comprobaciones para que sean más óptimas y no comprobar valores que no se utilizarían.Sin embargo,en muchos casos eso no es posible y por lo tanto se vuelve imposible de inlinear.</target>
        </trans-unit>
        <trans-unit id="68a358bd84ef01c0635528f27a3fd8e8510d7208" translate="yes" xml:space="preserve">
          <source>If the above is written using traditional function-based syntax, then autoboxing in method calls will happen in non&amp;ndash;strict mode based on the initial &lt;em&gt;this&lt;/em&gt; value. If the initial value is &lt;code&gt;undefined&lt;/code&gt;, &lt;em&gt;this&lt;/em&gt; will be set to the global object.</source>
          <target state="translated">Si lo anterior se escribe usando la sintaxis tradicional basada en funciones, entonces el autoboxing en las llamadas a m&amp;eacute;todos ocurrir&amp;aacute; en modo no estricto basado en &lt;em&gt;este&lt;/em&gt; valor inicial . Si el valor inicial es &lt;code&gt;undefined&lt;/code&gt; , &lt;em&gt;esto&lt;/em&gt; se establece en el objeto global.</target>
        </trans-unit>
        <trans-unit id="2de2f8611418b917390e5f634cefd48a2681c4fe" translate="yes" xml:space="preserve">
          <source>If the argument cannot be converted into a number, it returns &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si el argumento no se puede convertir en un n&amp;uacute;mero, devuelve &lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f86e9bf415bebd29a0f92aca1846c02d35a1eafa" translate="yes" xml:space="preserve">
          <source>If the argument is negative zero, returns &lt;code&gt;-0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289d26426ef6dd5e6d6eab0c14be2df2d5ca5e8d" translate="yes" xml:space="preserve">
          <source>If the argument is negative, returns &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e8a717149be7c86d7d72f862e113481d8afe3c" translate="yes" xml:space="preserve">
          <source>If the argument is positive zero, returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d32df946129f68834ae9d6e3c48b76560ca41a5" translate="yes" xml:space="preserve">
          <source>If the argument is positive, returns &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a314159461e2f1c2180c3f2cc15ad46da26b49" translate="yes" xml:space="preserve">
          <source>If the argument of &lt;code&gt;eval()&lt;/code&gt; is not a string, &lt;code&gt;eval()&lt;/code&gt; returns the argument unchanged. In the following example, the &lt;code&gt;String&lt;/code&gt; constructor is specified and &lt;code&gt;eval()&lt;/code&gt; returns a &lt;code&gt;String&lt;/code&gt; object rather than evaluating the string.</source>
          <target state="translated">Si el argumento de &lt;code&gt;eval()&lt;/code&gt; no es una cadena, &lt;code&gt;eval()&lt;/code&gt; devuelve el argumento sin cambios. En el siguiente ejemplo, se especifica el constructor &lt;code&gt;String&lt;/code&gt; y &lt;code&gt;eval()&lt;/code&gt; devuelve un objeto &lt;code&gt;String&lt;/code&gt; en lugar de evaluar la cadena.</target>
        </trans-unit>
        <trans-unit id="1bfa86a1ae20fafacc59165c12911fe2c76ebf6c" translate="yes" xml:space="preserve">
          <source>If the argument&amp;rsquo;s first character can&amp;rsquo;t be converted to a number (it&amp;rsquo;s not any of the above characters), &lt;code&gt;parseFloat&lt;/code&gt; returns &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9039cba0fc2b860a2bac0dd4ce6f62caa5dec6d9" translate="yes" xml:space="preserve">
          <source>If the arguments are not of the type string, they are converted to string values before concatenating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa2bcd893cb4d56cf48e54162eb8eabb074cee3" translate="yes" xml:space="preserve">
          <source>If the array is empty and no &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is provided, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251133e014c170d65b3f1b94cd31ef8f9657cbc6" translate="yes" xml:space="preserve">
          <source>If the array is empty and no &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; was provided, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; would be thrown. If the array has only one element (regardless of position) and no &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; was provided, or if &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is provided but the array is empty, the solo value would be returned without calling &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca4c7e25be73952009dedc5b8fea1da899df392" translate="yes" xml:space="preserve">
          <source>If the array is empty and no &lt;code&gt;initialValue &lt;/code&gt;was provided, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; would be thrown. If the array has only one element (regardless of position) and no &lt;code&gt;initialValue &lt;/code&gt;was provided, or if &lt;code&gt;initialValue&lt;/code&gt; is provided but the array is empty, the solo value would be returned without calling &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">Si la matriz est&amp;aacute; vac&amp;iacute;a y no se proporcion&amp;oacute; &lt;code&gt;initialValue &lt;/code&gt; , se lanzar&amp;iacute;a &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; . Si la matriz tiene solo un elemento (independientemente de la posici&amp;oacute;n) y no se proporcion&amp;oacute; &lt;code&gt;initialValue &lt;/code&gt; , o si se proporciona &lt;code&gt;initialValue&lt;/code&gt; pero la matriz est&amp;aacute; vac&amp;iacute;a, el valor solo se devolver&amp;aacute; sin llamar a la &lt;code&gt;callback&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c59f20390f4add64d4abadd81feb605dba0b978" translate="yes" xml:space="preserve">
          <source>If the array is empty and no &lt;code&gt;initialValue&lt;/code&gt; is provided, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be thrown. If the array has only one element (regardless of position) and no &lt;code&gt;initialValue&lt;/code&gt; is provided, or if &lt;code&gt;initialValue&lt;/code&gt; is provided but the array is empty, the solo value will be returned &lt;em&gt;without calling &lt;code&gt;callback&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">Si la matriz est&amp;aacute; vac&amp;iacute;a y no se proporciona &lt;code&gt;initialValue&lt;/code&gt; , se lanzar&amp;aacute; &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; . Si la matriz tiene solo un elemento (independientemente de la posici&amp;oacute;n) y no se proporciona &lt;code&gt;initialValue&lt;/code&gt; , o si se proporciona &lt;code&gt;initialValue&lt;/code&gt; pero la matriz est&amp;aacute; vac&amp;iacute;a, el valor solo se devolver&amp;aacute; &lt;em&gt;sin llamar a la &lt;code&gt;callback&lt;/code&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1066bdb8f6e775da5b0f08dd139c62f7735718b8" translate="yes" xml:space="preserve">
          <source>If the array is modified during iteration, other elements might be skipped.</source>
          <target state="translated">Si la matriz se modifica durante la iteración,podrían omitirse otros elementos.</target>
        </trans-unit>
        <trans-unit id="b7918e87d675662b81e34c9d4d3015efc6c03c96" translate="yes" xml:space="preserve">
          <source>If the array only has one element (regardless of position) and no &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is provided, or if &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is provided but the array is empty, the solo value will be returned &lt;em&gt;without &lt;/em&gt;calling&lt;em&gt; &lt;code&gt;callback&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8c9b894a110d1dce237c3ffe9e8ff7d483f6e8" translate="yes" xml:space="preserve">
          <source>If the calculation of a property value is expensive (takes much RAM or CPU time, spawns worker thread, retrieves remote file, etc).</source>
          <target state="translated">Si el cálculo del valor de una propiedad es costoso (toma mucho tiempo de RAM o CPU,genera un hilo de trabajo,recupera un archivo remoto,etc.).</target>
        </trans-unit>
        <trans-unit id="b4773ffb9070fe50ec4b5a95d53687ea8941a3c4" translate="yes" xml:space="preserve">
          <source>If the calculation of a property value is expensive (takes much RAM or CPU time, spawns worker threads, retrieves remote file, etc).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97084eab376f3b04d4908cc6bf47f923311c72b1" translate="yes" xml:space="preserve">
          <source>If the converted 32-bit unsigned integer is &lt;code&gt;0&lt;/code&gt;, then return &lt;code&gt;32&lt;/code&gt;, because all bits are &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Si el entero de 32 bits sin signo convertido es &lt;code&gt;0&lt;/code&gt; , devuelve &lt;code&gt;32&lt;/code&gt; , porque todos los bits son &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ad167e307d5ae6b6eba5969fea22aadee5ee633" translate="yes" xml:space="preserve">
          <source>If the first argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. With &lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt;&lt;/a&gt;, a non-object first argument will be coerced to an object at first.</source>
          <target state="translated">Si el primer argumento de este m&amp;eacute;todo no es un objeto (una primitiva), causar&amp;aacute; un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; . Con &lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt; &lt;/a&gt; , un primer argumento que no sea un objeto ser&amp;aacute; forzado a un objeto al principio.</target>
        </trans-unit>
        <trans-unit id="f5e9511e31d3fc65e2014860d72bf862465ad596" translate="yes" xml:space="preserve">
          <source>If the first argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. With &lt;a href=&quot;../object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;, a non-object first argument will be coerced to an object at first.</source>
          <target state="translated">Si el primer argumento de este m&amp;eacute;todo no es un objeto (una primitiva), provocar&amp;aacute; un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; . Con &lt;a href=&quot;../object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible()&lt;/code&gt; &lt;/a&gt; , un primer argumento que no sea un objeto ser&amp;aacute; forzado a un objeto al principio.</target>
        </trans-unit>
        <trans-unit id="1fce2befc5daf124a888421997f4eb1a74803bb3" translate="yes" xml:space="preserve">
          <source>If the first argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. With &lt;a href=&quot;../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;, a non-object first argument will be coerced to an object at first.</source>
          <target state="translated">Si el primer argumento de este m&amp;eacute;todo no es un objeto (una primitiva), provocar&amp;aacute; un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; . Con &lt;a href=&quot;../object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt; , un primer argumento que no sea de objeto ser&amp;aacute; forzado a un objeto al principio.</target>
        </trans-unit>
        <trans-unit id="74367fdf24ade95ee132ed1601c1dd829d6eab8f" translate="yes" xml:space="preserve">
          <source>If the first character cannot be converted to a number with the radix in use, &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace5bb08886884c70b8510126b7ab1ac0624e793" translate="yes" xml:space="preserve">
          <source>If the first character cannot be converted to a number, &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">Si el primer car&amp;aacute;cter no se puede convertir en un n&amp;uacute;mero, &lt;code&gt;parseInt&lt;/code&gt; devuelve &lt;code&gt;NaN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2466baa3d5ce80a7bc532ef0c023761bde57195c" translate="yes" xml:space="preserve">
          <source>If the first parameter is an object, each slot in the array will reference that object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e830391a32752966b6f8d6e46ae869596b43464d" translate="yes" xml:space="preserve">
          <source>If the following invariants are violated, the proxy will throw a &lt;a href=&quot;../../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Si se violan los siguientes invariantes, el proxy arrojar&amp;aacute; un &lt;a href=&quot;../../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="02ea11ae320384d65baba2b2012559732cdf307a" translate="yes" xml:space="preserve">
          <source>If the following invariants are violated, the proxy will throw a TypeError:</source>
          <target state="translated">Si se violan las siguientes invariantes,el apoderado lanzará un TypeError:</target>
        </trans-unit>
        <trans-unit id="9a774c38f7a09fed2dfaac1cf3398252fa33b21d" translate="yes" xml:space="preserve">
          <source>If the fractional portion of the argument is greater than 0.5, the argument is rounded to the integer with the next higher absolute value. If it is less than 0.5, the argument is rounded to the integer with the lower absolute value. If the fractional portion is exactly 0.5, the argument is rounded to the next integer in the direction of +&amp;infin;. &lt;strong&gt;Note that this differs from many languages' &lt;code&gt;round()&lt;/code&gt; functions, which often round this case to the next integer &lt;em&gt;away from zero&lt;/em&gt;&lt;/strong&gt;, instead giving a different result in the case of negative numbers with a fractional part of exactly 0.5.</source>
          <target state="translated">Si la parte fraccionaria del argumento es mayor que 0,5, el argumento se redondea al n&amp;uacute;mero entero con el siguiente valor absoluto m&amp;aacute;s alto. Si es menor que 0.5, el argumento se redondea al n&amp;uacute;mero entero con el valor absoluto m&amp;aacute;s bajo. Si la porci&amp;oacute;n fraccionaria es exactamente 0.5, el argumento se redondea al siguiente entero en la direcci&amp;oacute;n de + &amp;infin;. &lt;strong&gt;Tenga en cuenta que esto difiere de las funciones &lt;code&gt;round()&lt;/code&gt; de muchos idiomas , que a menudo redondean este caso al siguiente entero &lt;em&gt;alejado de cero&lt;/em&gt;&lt;/strong&gt; , en lugar de dar un resultado diferente en el caso de n&amp;uacute;meros negativos con una parte fraccionaria de exactamente 0,5.</target>
        </trans-unit>
        <trans-unit id="b0634e6f899b35ea60f41dd19d559af0166b4abf" translate="yes" xml:space="preserve">
          <source>If the function &lt;code&gt;eval&lt;/code&gt; is invoked by an expression of the form &lt;code&gt;eval(...)&lt;/code&gt; in strict mode code, the code will be evaluated as strict mode code. The code may explicitly invoke strict mode, but it's unnecessary to do so.</source>
          <target state="translated">Si la funci&amp;oacute;n &lt;code&gt;eval&lt;/code&gt; es invocada por una expresi&amp;oacute;n de la forma &lt;code&gt;eval(...)&lt;/code&gt; en c&amp;oacute;digo de modo estricto, el c&amp;oacute;digo se evaluar&amp;aacute; como c&amp;oacute;digo de modo estricto. El c&amp;oacute;digo puede invocar expl&amp;iacute;citamente el modo estricto, pero no es necesario hacerlo.</target>
        </trans-unit>
        <trans-unit id="24479fad2ce8f41c59aa63feefedbe701c9c9fa0" translate="yes" xml:space="preserve">
          <source>If the function passed as handler to &lt;code&gt;then&lt;/code&gt; returns a &lt;code&gt;Promise&lt;/code&gt;, an equivalent &lt;code&gt;Promise&lt;/code&gt; will be exposed to the subsequent &lt;code&gt;then&lt;/code&gt; in the method chain. The below snippet simulates asynchronous code with the &lt;code&gt;setTimeout&lt;/code&gt; function.</source>
          <target state="translated">Si la funci&amp;oacute;n pasa como manejador a &lt;code&gt;then&lt;/code&gt; devuelve una &lt;code&gt;Promise&lt;/code&gt; , un equivalente &lt;code&gt;Promise&lt;/code&gt; estar&amp;aacute; expuesto a la posterior &lt;code&gt;then&lt;/code&gt; en la cadena de m&amp;eacute;todo. El siguiente fragmento simula c&amp;oacute;digo asincr&amp;oacute;nico con la funci&amp;oacute;n &lt;code&gt;setTimeout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d889ec98d8457e0aea924810e5726b978b821209" translate="yes" xml:space="preserve">
          <source>If the function should be in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;, and the entire script or enclosing function is also okay to be in strict mode, you can move the &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; directive outside of the function:</source>
          <target state="translated">Si la funci&amp;oacute;n debe estar en &lt;a href=&quot;../strict_mode&quot;&gt;modo estricto&lt;/a&gt; , y todo el script o la funci&amp;oacute;n adjunta tambi&amp;eacute;n est&amp;aacute; bien para estar en modo estricto, puede mover la directiva &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; fuera de la funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="32ec2a558d2d7d263d497637245a807ee03c4f24" translate="yes" xml:space="preserve">
          <source>If the host system is configured for daylight saving, the offset will change depending on the date and time that the Date represents and that daylight saving applies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f63a4a41145b733714a201b2e285ab0739d3b7" translate="yes" xml:space="preserve">
          <source>If the input &lt;code&gt;string&lt;/code&gt; begins with &quot;0&quot;, &lt;var&gt;radix&lt;/var&gt; is eight (octal) or 10 (decimal). Exactly which radix is chosen is implementation-dependent. ECMAScript 5 specifies that 10 (decimal) is used, but not all browsers support this yet. For this reason &lt;code&gt;parseInt&lt;/code&gt;.</source>
          <target state="translated">Si la &lt;code&gt;string&lt;/code&gt; entrada comienza con &quot;0&quot;, la &lt;var&gt;radix&lt;/var&gt; es ocho (octal) o 10 (decimal). Exactamente qu&amp;eacute; base se elige depende de la implementaci&amp;oacute;n. ECMAScript 5 especifica que se usa 10 (decimal), pero no todos los navegadores lo admiten todav&amp;iacute;a. Por esta raz&amp;oacute;n &lt;code&gt;parseInt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="014fd7b5028fdfd4181a76d255e1c44887ca6dae" translate="yes" xml:space="preserve">
          <source>If the input &lt;code&gt;string&lt;/code&gt; begins with &quot;0x&quot; or &quot;0X&quot;, &lt;var&gt;radix&lt;/var&gt; is 16 (hexadecimal) and the remainder of the string is parsed.</source>
          <target state="translated">Si la &lt;code&gt;string&lt;/code&gt; entrada comienza con &quot;0x&quot; o &quot;0X&quot;, la &lt;var&gt;radix&lt;/var&gt; es 16 (hexadecimal) y se analiza el resto de la cadena.</target>
        </trans-unit>
        <trans-unit id="f247d76b51985796282d05631d015cfe0ded8f0d" translate="yes" xml:space="preserve">
          <source>If the input &lt;code&gt;string&lt;/code&gt; begins with &quot;&lt;code&gt;0&lt;/code&gt;&quot; (a zero), &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; is assumed to be &lt;code&gt;8&lt;/code&gt; (octal) or &lt;code&gt;10&lt;/code&gt; (decimal). Exactly which radix is chosen is implementation-dependent. ECMAScript 5 clarifies that &lt;code&gt;10&lt;/code&gt; (decimal) &lt;em&gt;should&lt;/em&gt; be used, but not all browsers support this yet. For this reason, &lt;strong&gt;always specify a &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; when using &lt;code&gt;parseInt&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d899c9908f1b8511a58cfbfbbc6efdff187932" translate="yes" xml:space="preserve">
          <source>If the input &lt;code&gt;string&lt;/code&gt; begins with &quot;&lt;code&gt;0x&lt;/code&gt;&quot; or &quot;&lt;code&gt;0X&lt;/code&gt;&quot; (a zero, followed by lowercase or uppercase X), &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; is assumed to be &lt;code&gt;16&lt;/code&gt; and the rest of the string is parsed as a hexidecimal number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7391a0c805a3a7880ff98c62370413cf4a99a3c4" translate="yes" xml:space="preserve">
          <source>If the input &lt;code&gt;string&lt;/code&gt; begins with any other value, the radix is 10 (decimal).</source>
          <target state="translated">Si la &lt;code&gt;string&lt;/code&gt; entrada comienza con cualquier otro valor, la base es 10 (decimal).</target>
        </trans-unit>
        <trans-unit id="d48b16e0cf301f14341f3f7bd0a5ddc3c6245fa4" translate="yes" xml:space="preserve">
          <source>If the input &lt;code&gt;string&lt;/code&gt; begins with any other value, the radix is &lt;code&gt;10&lt;/code&gt; (decimal).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f0eb6abc2d809f6720afec4140ffa6145e1b16" translate="yes" xml:space="preserve">
          <source>If the iterable contains one or more non-promise value and/or an already resolved/rejected promise, then &lt;code&gt;Promise.race&lt;/code&gt; will resolve to the first of these values found in the array:</source>
          <target state="translated">Si el iterable contiene uno o m&amp;aacute;s valores que no son de promesa y / o una promesa ya resuelta / rechazada, &lt;code&gt;Promise.race&lt;/code&gt; se resolver&amp;aacute; con el primero de estos valores que se encuentran en la matriz:</target>
        </trans-unit>
        <trans-unit id="42bb8061af2674b09d2e81c3c794c84558b5c8c1" translate="yes" xml:space="preserve">
          <source>If the iterable contains one or more non-promise value and/or an already resolved/rejected promise, then &lt;code&gt;Promise.race&lt;/code&gt; will resolve to the first of these values found in the iterable.</source>
          <target state="translated">Si el iterable contiene uno o m&amp;aacute;s valores que no son de promesa y / o una promesa ya resuelta / rechazada, &lt;code&gt;Promise.race&lt;/code&gt; se resolver&amp;aacute; con el primero de estos valores que se encuentre en el iterable.</target>
        </trans-unit>
        <trans-unit id="eba5348fb21f253314c74035ef8a94d981d39d85" translate="yes" xml:space="preserve">
          <source>If the iterable contains one or more non-promise value and/or an already settled promise, then &lt;code&gt;Promise.race&lt;/code&gt; will resolve to the first of these values found in the array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8455736e47a9a384da44aad6c284be518f32649f" translate="yes" xml:space="preserve">
          <source>If the iterable contains one or more non-promise value and/or an already settled promise, then &lt;code&gt;Promise.race&lt;/code&gt; will resolve to the first of these values found in the iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133cdb90b6400a76c679993e7493ba162315d6a4" translate="yes" xml:space="preserve">
          <source>If the iterable passed is empty, the promise returned will be forever pending.</source>
          <target state="translated">Si el iterable pasado está vacío,la promesa devuelta quedará pendiente para siempre.</target>
        </trans-unit>
        <trans-unit id="5929c9470016412d62a0f7f3f9a21acab412f404" translate="yes" xml:space="preserve">
          <source>If the match fails, the &lt;code&gt;exec()&lt;/code&gt; method returns &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, and sets &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed5bcc169dd3c7fb57fbf0f3eae42cda09790da" translate="yes" xml:space="preserve">
          <source>If the match fails, the &lt;code&gt;exec()&lt;/code&gt; method returns &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si la coincidencia falla, el m&amp;eacute;todo &lt;code&gt;exec()&lt;/code&gt; devuelve un &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="992c9b88d4c619e867d5faf6f752e55dcfba43d1" translate="yes" xml:space="preserve">
          <source>If the match succeeds, the &lt;code&gt;exec()&lt;/code&gt; method returns an array (with extra properties &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;input&lt;/code&gt;; see below) and updates the &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; property of the regular expression object. The returned array has the matched text as the first item, and then one item for each parenthetical capture group of the matched text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad048d5802a4482d98378bb3e60f9d8891c84dff" translate="yes" xml:space="preserve">
          <source>If the match succeeds, the &lt;code&gt;exec()&lt;/code&gt; method returns an array and updates properties of the regular expression object. The returned array has the matched text as the first item, and then one item for each capturing parenthesis that matched containing the text that was captured.</source>
          <target state="translated">Si la coincidencia tiene &amp;eacute;xito, el m&amp;eacute;todo &lt;code&gt;exec()&lt;/code&gt; devuelve una matriz y actualiza las propiedades del objeto de expresi&amp;oacute;n regular. La matriz devuelta tiene el texto coincidente como primer elemento, y luego un elemento por cada par&amp;eacute;ntesis de captura que coincide con el texto capturado.</target>
        </trans-unit>
        <trans-unit id="06b04d89d7ced98dfbbede5881b9b567808008e8" translate="yes" xml:space="preserve">
          <source>If the method is a function in &lt;a href=&quot;../../strict_mode&quot;&gt;non-strict mode&lt;/a&gt;, &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be replaced with the global object, and primitive values will be converted to objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74a4cb5fa65d9b34a16e5d974e6dcf978094959" translate="yes" xml:space="preserve">
          <source>If the number is greater than 1e+21 (including) or less than 1e-7 (including), it will return &lt;code&gt;1&lt;/code&gt;. (when using radix 10).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076b090beef22f90ac6afa326097c3fb2ace6350" translate="yes" xml:space="preserve">
          <source>If the object is sealed/frozen then the change has no effect and no exception is thrown:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7372e8703a5521adb89c3b333094c42fd39770" translate="yes" xml:space="preserve">
          <source>If the only argument passed to the &lt;code&gt;Array&lt;/code&gt; constructor is an integer between 0 and 2&lt;sup&gt;32&lt;/sup&gt;-1 (inclusive), this returns a new JavaScript array with its &lt;code&gt;length&lt;/code&gt; property set to that number (&lt;strong&gt;Note:&lt;/strong&gt; this implies an array of &lt;code&gt;arrayLength&lt;/code&gt; empty slots, not slots with actual &lt;code&gt;undefined&lt;/code&gt; values). If the argument is any other number, a &lt;a href=&quot;rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; exception is thrown.</source>
          <target state="translated">Si el &amp;uacute;nico argumento pasado al constructor &lt;code&gt;Array&lt;/code&gt; es un n&amp;uacute;mero entero entre 0 y 2 &lt;sup&gt;32&lt;/sup&gt; -1 (inclusive), esto devuelve una nueva matriz JavaScript con su propiedad &lt;code&gt;length&lt;/code&gt; establecida en ese n&amp;uacute;mero ( &lt;strong&gt;Nota:&lt;/strong&gt; esto implica una matriz de ranuras vac&amp;iacute;as &lt;code&gt;arrayLength&lt;/code&gt; , no ranuras con valores reales &lt;code&gt;undefined&lt;/code&gt; ). Si el argumento es cualquier otro n&amp;uacute;mero, se lanza una excepci&amp;oacute;n &lt;a href=&quot;rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3de7d3547772b56e44d561daed2b5f4e5c0051e3" translate="yes" xml:space="preserve">
          <source>If the operation fails, the promise rejects with a &lt;a href=&quot;compileerror&quot;&gt;&lt;code&gt;WebAssembly.CompileError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;linkerror&quot;&gt;&lt;code&gt;WebAssembly.LinkError&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;WebAssembly.RuntimeError&lt;/code&gt;&lt;/a&gt;, depending on the cause of the failure.</source>
          <target state="translated">Si la operaci&amp;oacute;n falla, la promesa se rechaza con un &lt;a href=&quot;compileerror&quot;&gt; &lt;code&gt;WebAssembly.CompileError&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;linkerror&quot;&gt; &lt;code&gt;WebAssembly.LinkError&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;WebAssembly.RuntimeError&lt;/code&gt; &lt;/a&gt; , seg&amp;uacute;n la causa del error.</target>
        </trans-unit>
        <trans-unit id="c7ae6267575070773ce0e34354913d3b4cb253db" translate="yes" xml:space="preserve">
          <source>If the parameter cannot be converted to a number, or it is &lt;a href=&quot;https://en.wikipedia.org/wiki/NaN&quot;&gt;not-a-number&lt;/a&gt; (&lt;code&gt;NaN&lt;/code&gt;), &lt;code&gt;Math.fround()&lt;/code&gt; will return &lt;code&gt;NaN&lt;/code&gt;:</source>
          <target state="translated">Si el par&amp;aacute;metro no se puede convertir a un n&amp;uacute;mero, o no es &lt;a href=&quot;https://en.wikipedia.org/wiki/NaN&quot;&gt;un n&amp;uacute;mero&lt;/a&gt; ( &lt;code&gt;NaN&lt;/code&gt; ), &lt;code&gt;Math.fround()&lt;/code&gt; devolver&amp;aacute; &lt;code&gt;NaN&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a4cb915c64d1dc820b0c684cdac48718bd6a3e1d" translate="yes" xml:space="preserve">
          <source>If the property which you are trying to delete does not exist, &lt;code&gt;delete&lt;/code&gt; will not have any effect and will return &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">Si la propiedad que est&amp;aacute; intentando eliminar no existe, &lt;code&gt;delete&lt;/code&gt; no tendr&amp;aacute; ning&amp;uacute;n efecto y devolver&amp;aacute; &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9571ccb67395bfe77750e491cdef9006177ddfa8" translate="yes" xml:space="preserve">
          <source>If the property which you are trying to delete does not exist, &lt;code&gt;delete&lt;/code&gt; will not have any effect and will return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928fd5633160fac29d5cef2872c5f9bc821a1144" translate="yes" xml:space="preserve">
          <source>If the regex has the global flag set, &lt;code&gt;test()&lt;/code&gt; will advance the &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; of the regex. A subsequent use of &lt;code&gt;test()&lt;/code&gt; will start the search at the substring of &lt;code&gt;str&lt;/code&gt; specified by &lt;code&gt;lastIndex&lt;/code&gt; (&lt;a href=&quot;exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; will also advance the &lt;code&gt;lastIndex&lt;/code&gt; property). It is worth noting that the &lt;code&gt;lastIndex&lt;/code&gt; will not reset when testing a different string.</source>
          <target state="translated">Si la expresi&amp;oacute;n regular tiene la bandera global establecida, &lt;code&gt;test()&lt;/code&gt; avanzar&amp;aacute; el &lt;a href=&quot;lastindex&quot;&gt; &lt;code&gt;lastIndex&lt;/code&gt; &lt;/a&gt; de la expresi&amp;oacute;n regular. Un uso posterior de &lt;code&gt;test()&lt;/code&gt; iniciar&amp;aacute; la b&amp;uacute;squeda en la subcadena de &lt;code&gt;str&lt;/code&gt; especificada por &lt;code&gt;lastIndex&lt;/code&gt; ( &lt;a href=&quot;exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt; tambi&amp;eacute;n avanzar&amp;aacute; la propiedad &lt;code&gt;lastIndex&lt;/code&gt; ). Vale la pena se&amp;ntilde;alar que &lt;code&gt;lastIndex&lt;/code&gt; no se restablecer&amp;aacute; al probar una cadena diferente.</target>
        </trans-unit>
        <trans-unit id="54e623d784ebb3ca9ec36dc663b3600d3fafdecc" translate="yes" xml:space="preserve">
          <source>If the regular expression does not include the &lt;code&gt;g&lt;/code&gt; flag, &lt;code&gt;str.match()&lt;/code&gt; will return the same result as &lt;a href=&quot;../regexp/exec&quot;&gt;&lt;code&gt;RegExp.exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0d349d09340572916f1b2c5d1d97584f2175f9" translate="yes" xml:space="preserve">
          <source>If the regular expression does not include the &lt;code&gt;g&lt;/code&gt; flag, &lt;code&gt;str.match()&lt;/code&gt; will return the same result as &lt;a href=&quot;../regexp/exec&quot;&gt;&lt;code&gt;RegExp.exec()&lt;/code&gt;&lt;/a&gt;. The returned &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; has an extra &lt;code&gt;input&lt;/code&gt; property, which contains the original string that was parsed. In addition, it has an &lt;code&gt;index&lt;/code&gt; property, which represents the zero-based index of the match in the string.</source>
          <target state="translated">Si la expresi&amp;oacute;n regular no incluye el indicador &lt;code&gt;g&lt;/code&gt; , &lt;code&gt;str.match()&lt;/code&gt; devolver&amp;aacute; el mismo resultado que &lt;a href=&quot;../regexp/exec&quot;&gt; &lt;code&gt;RegExp.exec()&lt;/code&gt; &lt;/a&gt; . La &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; devuelta tiene una propiedad de &lt;code&gt;input&lt;/code&gt; adicional , que contiene la cadena original que se analiz&amp;oacute;. Adem&amp;aacute;s, tiene una propiedad de &lt;code&gt;index&lt;/code&gt; , que representa el &amp;iacute;ndice de base cero de la coincidencia en la cadena.</target>
        </trans-unit>
        <trans-unit id="30138364a3c3af0aa6191de310201697ce047a82" translate="yes" xml:space="preserve">
          <source>If the regular expression includes the &lt;code&gt;g&lt;/code&gt; flag, the method returns an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; containing all matched substrings rather than match objects. Captured groups are not returned. If there were no matches, the method returns &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si la expresi&amp;oacute;n regular incluye el indicador &lt;code&gt;g&lt;/code&gt; , el m&amp;eacute;todo devuelve una &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; contiene todas las subcadenas coincidentes en lugar de los objetos coincidentes. Los grupos capturados no se devuelven. Si no hubo coincidencias, el m&amp;eacute;todo devuelve &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b959552ef94320337e1ed0aeb1c7362f749576d" translate="yes" xml:space="preserve">
          <source>If the returned promise resolves, it is resolved with an aggregating array of the values from the resolved promises, in the same order as defined in the iterable of multiple promises.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aad8e2f8495619d7aae6f0803f38d9b68950bdc" translate="yes" xml:space="preserve">
          <source>If the returned promise resolves, it is resolved with the value of the first promise in the iterable that resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a177c490157a79f5a76e27fe6956e99555e128cb" translate="yes" xml:space="preserve">
          <source>If the selected language tag had a Unicode extension substring, that extension is now used to customize the constructed object or the behavior of the function. Each constructor or function supports only a subset of the keys defined for the Unicode extension, and the supported values often depend on the language tag. For example, the &quot;&lt;code&gt;co&lt;/code&gt;&quot; key (collation) is only supported by &lt;a href=&quot;intl/collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt;, and its &quot;&lt;code&gt;phonebk&lt;/code&gt;&quot; value is only supported for German.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e0cd12612909bf0c4a612be8384c6d969c9ac4" translate="yes" xml:space="preserve">
          <source>If the selected language tag had a Unicode extension substring, that extension is now used to customize the constructed object or the behavior of the function. Each constructor or function supports only a subset of the keys defined for the Unicode extension, and the supported values often depend on the language tag. For example, the &lt;code&gt;&quot;co&quot;&lt;/code&gt; key (collation) is only supported by &lt;a href=&quot;collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt;, and its &lt;code&gt;&quot;phonebk&quot;&lt;/code&gt; value is only supported for German.</source>
          <target state="translated">Si la etiqueta de idioma seleccionada ten&amp;iacute;a una subcadena de extensi&amp;oacute;n Unicode, esa extensi&amp;oacute;n ahora se usa para personalizar el objeto construido o el comportamiento de la funci&amp;oacute;n. Cada constructor o funci&amp;oacute;n admite solo un subconjunto de las claves definidas para la extensi&amp;oacute;n Unicode, y los valores admitidos a menudo dependen de la etiqueta de idioma. Por ejemplo, la tecla &lt;code&gt;&quot;co&quot;&lt;/code&gt; (intercalaci&amp;oacute;n) solo es compatible con &lt;a href=&quot;collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; , y su valor &lt;code&gt;&quot;phonebk&quot;&lt;/code&gt; solo es compatible con el alem&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="0051f2f9e3b0c3c5f0efed5769af9ea4eeaaac1c" translate="yes" xml:space="preserve">
          <source>If the separator is an array, then that Array is coerced to a String and used as a separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b286f7a3b45c9d956b26ab348a1958c44fb5f42" translate="yes" xml:space="preserve">
          <source>If the source array is a typed array, the two arrays may share the same underlying &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;; the JavaScript engine will intelligently &lt;strong&gt;copy&lt;/strong&gt; the source range of the buffer to the destination range.</source>
          <target state="translated">Si la matriz de origen es una matriz con tipo, las dos matrices pueden compartir el mismo &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; subyacente ; el motor de JavaScript &lt;strong&gt;copiar&amp;aacute; de forma&lt;/strong&gt; inteligente el rango de origen del b&amp;uacute;fer en el rango de destino.</target>
        </trans-unit>
        <trans-unit id="b353db1fb14273700c08d890316bc02b3fd861ed" translate="yes" xml:space="preserve">
          <source>If the source value is a reference to an object, it only copies the reference value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4ef9aab8e43c2b5e9c78c499c653ff6b14a42f" translate="yes" xml:space="preserve">
          <source>If the specified number of elements to insert differs from the number of elements being removed, the array's &lt;code&gt;length&lt;/code&gt; will be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11118b48f62c5ceba27585b77797df31fab20d6a" translate="yes" xml:space="preserve">
          <source>If the string matches the expression, it will return an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; containing the entire matched string as the first element, followed by any results captured in parentheses. If there were no matches, &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Si la cadena coincide con la expresi&amp;oacute;n, devolver&amp;aacute; una &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; contiene toda la cadena coincidente como primer elemento, seguida de los resultados capturados entre par&amp;eacute;ntesis. Si no hubo coincidencias, se devuelve un &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8df86ca042f37da0bf772e9d1368d49d51710bb8" translate="yes" xml:space="preserve">
          <source>If the string you're calling &lt;code&gt;eval()&lt;/code&gt; on contains data (for example, an array: &lt;code&gt;&quot;[1, 2, 3]&quot;&lt;/code&gt;), as opposed to code, you should consider switching to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt;, which allows the string to use a subset of JavaScript syntax to represent data. See also &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Downloading_JSON_and_JavaScript_in_extensions&quot;&gt;Downloading JSON and JavaScript in extensions&lt;/a&gt;.</source>
          <target state="translated">Si la cadena en la que est&amp;aacute; llamando &lt;code&gt;eval()&lt;/code&gt; contiene datos (por ejemplo, una matriz: &lt;code&gt;&quot;[1, 2, 3]&quot;&lt;/code&gt; ), en lugar de c&amp;oacute;digo, deber&amp;iacute;a considerar cambiar a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt; , que permite que la cadena use una subconjunto de sintaxis de JavaScript para representar datos. Consulte tambi&amp;eacute;n &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Downloading_JSON_and_JavaScript_in_extensions&quot;&gt;Descarga de JSON y JavaScript en extensiones&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b7e003732737f7eeca987515a181e7a6c0886873" translate="yes" xml:space="preserve">
          <source>If the target object is not extensible, then the result List must contain all the keys of the own properties of the target object and no other values.</source>
          <target state="translated">Si el objeto de destino no es extensible,entonces la lista de resultados debe contener todas las claves de las propiedades propias del objeto de destino y ningún otro valor.</target>
        </trans-unit>
        <trans-unit id="e848b7dd6ac3915d3833ea99453aeb25eaa52820" translate="yes" xml:space="preserve">
          <source>If the target value is an integer, return &lt;code&gt;true&lt;/code&gt;, otherwise return &lt;code&gt;false&lt;/code&gt;. If the value is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;, return &lt;code&gt;false&lt;/code&gt;. The method will also return &lt;code&gt;true&lt;/code&gt; for floating point numbers that can be represented as integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd4f6c5189b324bbcf046826b6268c8f7662e9b" translate="yes" xml:space="preserve">
          <source>If the target value is an integer, return &lt;code&gt;true&lt;/code&gt;, otherwise return &lt;code&gt;false&lt;/code&gt;. If the value is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; or infinite, return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Si el valor objetivo es un n&amp;uacute;mero entero, devuelve &lt;code&gt;true&lt;/code&gt; ; de lo contrario, devuelve &lt;code&gt;false&lt;/code&gt; . Si el valor es &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; o infinito, devuelve &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b163d07b932ce80b4a6e15721f922f7fb30650e" translate="yes" xml:space="preserve">
          <source>If the typed array is empty and no &lt;code&gt;initialValue &lt;/code&gt;was provided, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; would be thrown. If the typed array has only one element (regardless of position) and no &lt;code&gt;initialValue &lt;/code&gt;was provided, or if &lt;code&gt;initialValue&lt;/code&gt; is provided but the typed array is empty, the solo value would be returned without calling &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">Si la matriz escrita est&amp;aacute; vac&amp;iacute;a y no se proporcion&amp;oacute; &lt;code&gt;initialValue &lt;/code&gt; , se lanzar&amp;iacute;a &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; . Si la matriz con tipo tiene solo un elemento (independientemente de la posici&amp;oacute;n) y no se proporcion&amp;oacute; &lt;code&gt;initialValue &lt;/code&gt; , o si se proporciona &lt;code&gt;initialValue&lt;/code&gt; pero la matriz con tipo est&amp;aacute; vac&amp;iacute;a, el valor solo se devolver&amp;aacute; sin llamar a la &lt;code&gt;callback&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32f1892613c48627e71e01cfec6b0670419135f0" translate="yes" xml:space="preserve">
          <source>If the typed array is empty and no &lt;code&gt;initialValue&lt;/code&gt; was provided, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; would be thrown. If the typed array has only one element (regardless of position) and no &lt;code&gt;initialValue&lt;/code&gt; was provided, or if &lt;code&gt;initialValue&lt;/code&gt; is provided but the typed array is empty, the solo value would be returned without calling &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">Si la matriz escrita est&amp;aacute; vac&amp;iacute;a y no se proporcion&amp;oacute; &lt;code&gt;initialValue&lt;/code&gt; , se lanzar&amp;iacute;a &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; . Si la matriz con tipo tiene solo un elemento (independientemente de la posici&amp;oacute;n) y no se proporcion&amp;oacute; &lt;code&gt;initialValue&lt;/code&gt; , o si se proporciona &lt;code&gt;initialValue&lt;/code&gt; pero la matriz con tipo est&amp;aacute; vac&amp;iacute;a, el valor solo se devolver&amp;aacute; sin llamar a la &lt;code&gt;callback&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="510bd268f45e4d1729f707209afb02f9c7b0083d" translate="yes" xml:space="preserve">
          <source>If the value has a &lt;a href=&quot;#toJSON()_behavior&quot;&gt;toJSON()&lt;/a&gt; method, it's responsible to define what data will be serialized.</source>
          <target state="translated">Si el valor tiene un &lt;a href=&quot;#toJSON()_behavior&quot;&gt;m&amp;eacute;todo toJSON ()&lt;/a&gt; , es responsable de definir qu&amp;eacute; datos se serializar&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="e00674da0b18b7b91ffb49a53cd9a91a4d73a00f" translate="yes" xml:space="preserve">
          <source>If the value has a &lt;code&gt;&lt;a href=&quot;#toJSON_behavior&quot;&gt;toJSON()&lt;/a&gt;&lt;/code&gt; method, it's responsible to define what data will be serialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54140dc9eb589e0c204678e22bbbdb9cf79a2d04" translate="yes" xml:space="preserve">
          <source>If the value is &lt;a href=&quot;null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, it will create and return an empty object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561c9acef125c9f472e17089eda2c02ed61b2c26" translate="yes" xml:space="preserve">
          <source>If the value is a string and first character cannot be converted to a number, &lt;code&gt;parseFloat&lt;/code&gt; returns &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si el valor es una cadena y el primer car&amp;aacute;cter no se puede convertir en un n&amp;uacute;mero, &lt;code&gt;parseFloat&lt;/code&gt; devuelve &lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef9bb279e649c6b04963f948bf7ce36a932c8c2d" translate="yes" xml:space="preserve">
          <source>If the value is an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;true&lt;/code&gt; is returned; otherwise, &lt;code&gt;false&lt;/code&gt; is.</source>
          <target state="translated">Si el valor es una &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; , se devuelve &lt;code&gt;true&lt;/code&gt; ; de lo contrario, &lt;code&gt;false&lt;/code&gt; es.</target>
        </trans-unit>
        <trans-unit id="53a1da54003d5163c28e486b08412caa8da3e737" translate="yes" xml:space="preserve">
          <source>If the value is an object already, it will return the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1640abfaf088fbcbdcadda1eedf8dab180bb6242" translate="yes" xml:space="preserve">
          <source>If the value is not a &lt;code&gt;Promise&lt;/code&gt;, it converts the value to a resolved &lt;code&gt;Promise&lt;/code&gt;, and waits for it.</source>
          <target state="translated">Si el valor no es una &lt;code&gt;Promise&lt;/code&gt; , convierte el valor en una &lt;code&gt;Promise&lt;/code&gt; resuelta y lo espera.</target>
        </trans-unit>
        <trans-unit id="f0a64651c26d9a65bc75cc4516d6f569cc7361ac" translate="yes" xml:space="preserve">
          <source>If the value is omitted, &lt;code&gt;undefined&lt;/code&gt; is returned instead.</source>
          <target state="translated">Si se omite el valor, se devuelve &lt;code&gt;undefined&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="7ea4c0759ce10f3ec998abec7f06323cfdcb044e" translate="yes" xml:space="preserve">
          <source>If the value isn't needed just now. It will be used later, or in some case it's not used at all.</source>
          <target state="translated">Si el valor no se necesita ahora mismo.Se usará más tarde,o en algún caso no se usa en absoluto.</target>
        </trans-unit>
        <trans-unit id="dcd7892bd313c45ff27bee53ccf94aa493673289" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; is 0, the return value is always &lt;a href=&quot;../number/negative_infinity&quot;&gt;&lt;code&gt;-Infinity&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f9318ece72f4c2eeef6e7c2a93aef5af0daf69" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; is less than 0, the return value is always &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1239996883a93b9b2c50ccbd8a405e2eb8177812" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; is negative, &lt;code&gt;Math.sqrt()&lt;/code&gt; returns &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059376bc4439a5267686d0fa5d49aac6a927f1ff" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; is negative, the return value is always &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2d5fb2a300d0369ab4234e82cc168cc8762ee4" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;x&lt;/code&gt; is less than -1, the return value is always &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si el valor de &lt;code&gt;x&lt;/code&gt; es menor que -1, el valor de retorno es siempre &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9274a7a137b577eeaa2f04b6902d872eb4466cee" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;x&lt;/code&gt; is less than 0, the return value is always &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si el valor de &lt;code&gt;x&lt;/code&gt; es menor que 0, el valor de retorno es siempre &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9eb70669a6e170dc1e8ae977b8cb8a15a0498f1" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;x&lt;/code&gt; is negative, &lt;code&gt;Math.sqrt()&lt;/code&gt; returns &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si el valor de &lt;code&gt;x&lt;/code&gt; es negativo, &lt;code&gt;Math.sqrt()&lt;/code&gt; devuelve &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6dbda7783aa9232721a5872c34710ccbbff0ffb5" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;x&lt;/code&gt; is negative, the return value is always &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si el valor de &lt;code&gt;x&lt;/code&gt; es negativo, el valor de retorno es siempre &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7c96df6c0dbc7425e0d4c9a6c302f795ee1fc7c1" translate="yes" xml:space="preserve">
          <source>If the value of the &lt;em&gt;expression&lt;/em&gt; following the &lt;code&gt;await&lt;/code&gt; operator is not a &lt;code&gt;Promise&lt;/code&gt;, it's converted to a &lt;a href=&quot;../global_objects/promise/resolve&quot;&gt;resolved Promise&lt;/a&gt;.</source>
          <target state="translated">Si el valor de la &lt;em&gt;expresi&amp;oacute;n que&lt;/em&gt; sigue al operador de &lt;code&gt;await&lt;/code&gt; no es una &lt;code&gt;Promise&lt;/code&gt; , se convierte en una &lt;a href=&quot;../global_objects/promise/resolve&quot;&gt;Promesa resuelta&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7777a3173c1fc93619bfe4928f7864e3ee37ca7e" translate="yes" xml:space="preserve">
          <source>If there is a constructor present in the subclass, it needs to first call super() before using &quot;this&quot;.</source>
          <target state="translated">Si hay un constructor presente en la subclase,necesita llamar primero a super()antes de usar &quot;esto&quot;.</target>
        </trans-unit>
        <trans-unit id="21978f541a285d4f0f6b8649673a45e9d8c65652" translate="yes" xml:space="preserve">
          <source>If there is no element at the specified position, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is returned. If no UTF-16 surrogate pair begins at &lt;code&gt;&lt;var&gt;pos&lt;/var&gt;&lt;/code&gt;, the code unit at &lt;code&gt;&lt;var&gt;pos&lt;/var&gt;&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a5e90cc482f2c146104da9fc8a32ddba669924" translate="yes" xml:space="preserve">
          <source>If there is no element at the specified position, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is returned. If no UTF-16 surrogate pair begins at &lt;code&gt;pos&lt;/code&gt;, the code unit at &lt;code&gt;pos&lt;/code&gt; is returned.</source>
          <target state="translated">Si no hay ning&amp;uacute;n elemento en la posici&amp;oacute;n especificada, se devuelve &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; . Si ning&amp;uacute;n par sustituto UTF-16 comienza en &lt;code&gt;pos&lt;/code&gt; , se devuelve la unidad de c&amp;oacute;digo en &lt;code&gt;pos&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="afdb33990e63ce9b5d36a9e521b9b2dbdc06c9d9" translate="yes" xml:space="preserve">
          <source>If this is a &lt;code&gt;Number&lt;/code&gt;, it indicates the number of space characters to use as white space; this number is capped at 10 (if it is greater, the value is just &lt;code&gt;10&lt;/code&gt;). Values less than 1 indicate that no space should be used.</source>
          <target state="translated">Si se trata de un &lt;code&gt;Number&lt;/code&gt; , que indica el n&amp;uacute;mero de caracteres de espacio para su uso como espacio en blanco; este n&amp;uacute;mero est&amp;aacute; limitado a 10 (si es mayor, el valor es solo &lt;code&gt;10&lt;/code&gt; ). Los valores inferiores a 1 indican que no se debe utilizar ning&amp;uacute;n espacio.</target>
        </trans-unit>
        <trans-unit id="4657fbccd094cf1a6aae2b07836eaa2e143cf7da" translate="yes" xml:space="preserve">
          <source>If this is a &lt;code&gt;String&lt;/code&gt;, the string (or the first 10 characters of the string, if it's longer than that) is used as white space. If this parameter is not provided (or is &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;), no white space is used.</source>
          <target state="translated">Si se trata de una &lt;code&gt;String&lt;/code&gt; , la cadena (o los primeros 10 caracteres de la cadena, si es m&amp;aacute;s larga) se utiliza como espacio en blanco. Si no se proporciona este par&amp;aacute;metro (o es &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; ), no se utilizan espacios en blanco.</target>
        </trans-unit>
        <trans-unit id="3fe1411948efd2142af6ac7caf00bbd4cd925703" translate="yes" xml:space="preserve">
          <source>If this method is invoked on an object that is not a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si este m&amp;eacute;todo se invoca en un objeto que no es un &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fe15855eb8f13ceac6922262bfec88886e019764" translate="yes" xml:space="preserve">
          <source>If used immediately after any of the quantifiers &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, or &lt;code&gt;{}&lt;/code&gt;, makes the quantifier non-greedy (matching the minimum number of times), as opposed to the default, which is greedy (matching the maximum number of times).</source>
          <target state="translated">Si se utiliza inmediatamente despu&amp;eacute;s de cualquiera de los cuantificadores &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;?&lt;/code&gt; , o &lt;code&gt;{}&lt;/code&gt; , hace que el cuantificador no sea codicioso (coincida con el n&amp;uacute;mero m&amp;iacute;nimo de veces), a diferencia del valor predeterminado, que es codicioso (que coincida con el n&amp;uacute;mero m&amp;aacute;ximo de veces).</target>
        </trans-unit>
        <trans-unit id="9fd706dc1d0360b94ec21dbf8552ac9d5f3e383e" translate="yes" xml:space="preserve">
          <source>If used postfix (for example, x--), then it returns the value before decrementing.</source>
          <target state="translated">Si se usa postfix (por ejemplo,x--),entonces devuelve el valor antes de disminuir.</target>
        </trans-unit>
        <trans-unit id="de1231f0f16dedb361c482a319c20aff31b05c5e" translate="yes" xml:space="preserve">
          <source>If used postfix, with operator after operand (for example, x++), then it returns the value before incrementing.</source>
          <target state="translated">Si se utiliza postfix,con operador después de operando (por ejemplo,x++),entonces devuelve el valor antes de incrementar.</target>
        </trans-unit>
        <trans-unit id="e6e40e35ce4cf016961cce9be2454b86125ceb4b" translate="yes" xml:space="preserve">
          <source>If used prefix (for example, --x), then it returns the value after decrementing.</source>
          <target state="translated">Si se utiliza el prefijo (por ejemplo,--x),entonces devuelve el valor después de disminuir.</target>
        </trans-unit>
        <trans-unit id="9df9321ebb8182da95c82368fad1cd967b2ab528" translate="yes" xml:space="preserve">
          <source>If used prefix with operator before operand (for example, ++x), then it returns the value after incrementing.</source>
          <target state="translated">Si se utiliza el prefijo con el operador antes del operando (por ejemplo,++x),entonces devuelve el valor después de incrementarlo.</target>
        </trans-unit>
        <trans-unit id="f7ff4cc4432ffc5f89ff00a0952d717a8a1a68b0" translate="yes" xml:space="preserve">
          <source>If we rewrite the above using traditional function-based syntax in non&amp;ndash;strict mode, then &lt;code&gt;this&lt;/code&gt; method calls are automatically bound to the initial &lt;code&gt;this&lt;/code&gt; value, which by default is the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Global_object&quot;&gt;global object&lt;/a&gt;. In strict mode, autobinding will not happen; the value of &lt;code&gt;this&lt;/code&gt; remains as passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263dbd217b7b782c539a10e8e47d0cd7d0c685a1" translate="yes" xml:space="preserve">
          <source>If we want to calculate the height of an equalateral triangle, and we know its side length is 100, we can use the formulae &lt;em&gt;length of the adjacent multiplied by the tangent of the angle is equal to the opposite.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44416e4cb440058b3e2168092fa043d526ea6bd6" translate="yes" xml:space="preserve">
          <source>If we want to export a single value or to have a fallback value for our module, we could use a default export:</source>
          <target state="translated">Si queremos exportar un único valor o tener un valor de reserva para nuestro módulo,podríamos utilizar una exportación por defecto:</target>
        </trans-unit>
        <trans-unit id="e8ced299cf7385e721622ed81fc4d2edb2bdf9e3" translate="yes" xml:space="preserve">
          <source>If we want to export a single value or to have a fallback value for your module, you could use a default export:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e42279903ed183e261f8299c80921fedf73370" translate="yes" xml:space="preserve">
          <source>If we want to export default, and star from another module (effectively creating a &quot;redirect&quot;):</source>
          <target state="translated">Si queremos exportar por defecto,y empezar desde otro módulo (creando efectivamente una &quot;redirección&quot;):</target>
        </trans-unit>
        <trans-unit id="d6463f6ee85e1b3683452de8f289526c45b1d166" translate="yes" xml:space="preserve">
          <source>If you are coming from another programming language (like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/PHP&quot;&gt;PHP&lt;/a&gt;), it is also easy to mix up the dot operator (&lt;code&gt;.&lt;/code&gt;) and the concatenation operator (&lt;code&gt;+&lt;/code&gt;).</source>
          <target state="translated">Si viene de otro lenguaje de programaci&amp;oacute;n (como &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/PHP&quot;&gt;PHP&lt;/a&gt; ), tambi&amp;eacute;n es f&amp;aacute;cil mezclar el operador de punto ( &lt;code&gt;.&lt;/code&gt; ) Y el operador de concatenaci&amp;oacute;n ( &lt;code&gt;+&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b266e11ed2f48331bcbc5cd3a2651fd6ea8db942" translate="yes" xml:space="preserve">
          <source>If you are coming from another programming language (like &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/PHP&quot;&gt;PHP&lt;/a&gt;), it is also easy to mix up the dot operator (&lt;code&gt;.&lt;/code&gt;) and the concatenation operator (&lt;code&gt;+&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb66cb61a06782782fcf8588e20af249ee21a6b0" translate="yes" xml:space="preserve">
          <source>If you are coming from another programming language, it is also easy to add keywords that don't mean the same or have no meaning at all in JavaScript.</source>
          <target state="translated">Si vienes de otro lenguaje de programación,también es fácil añadir palabras clave que no tienen el mismo significado o no tienen ningún significado en JavaScript.</target>
        </trans-unit>
        <trans-unit id="659845dc301670bca252df4853db8e2f3ac23b6a" translate="yes" xml:space="preserve">
          <source>If you are creating an &lt;code&gt;Array&lt;/code&gt;, using the constructor, you probably want to use the literal notation instead, as the first argument is interpreted as the length of the &lt;code&gt;Array&lt;/code&gt;.</source>
          <target state="translated">Si est&amp;aacute; creando una &lt;code&gt;Array&lt;/code&gt; , utilizando el constructor, probablemente desee utilizar la notaci&amp;oacute;n literal en su lugar, ya que el primer argumento se interpreta como la longitud de la &lt;code&gt;Array&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d24793ed02c1f52e768f26367f343405e5dd686" translate="yes" xml:space="preserve">
          <source>If you are executing a match simply to find &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, use &lt;a href=&quot;test&quot;&gt;&lt;code&gt;RegExp.prototype.test()&lt;/code&gt;&lt;/a&gt; method or &lt;a href=&quot;../string/search&quot;&gt;&lt;code&gt;String.prototype.search()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c1a323209deeb808a2a36b6ad4684b94b02231" translate="yes" xml:space="preserve">
          <source>If you are executing a match simply to find true or false, use the &lt;a href=&quot;test&quot;&gt;&lt;code&gt;RegExp.prototype.test()&lt;/code&gt;&lt;/a&gt; method or the &lt;a href=&quot;../string/search&quot;&gt;&lt;code&gt;String.prototype.search()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Si est&amp;aacute; ejecutando una coincidencia simplemente para encontrar verdadero o falso, use el m&amp;eacute;todo &lt;a href=&quot;test&quot;&gt; &lt;code&gt;RegExp.prototype.test()&lt;/code&gt; &lt;/a&gt; o el m&amp;eacute;todo &lt;a href=&quot;../string/search&quot;&gt; &lt;code&gt;String.prototype.search()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="68b817fe3ff3a62bc615632f841b38339b8524eb" translate="yes" xml:space="preserve">
          <source>If you are new to JavaScript, start with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide&quot;&gt;guide&lt;/a&gt;. Once you have a firm grasp of the fundamentals, you can use the &lt;a href=&quot;index&quot;&gt;reference&lt;/a&gt; to get more details on individual objects and language constructs.</source>
          <target state="translated">Si es nuevo en JavaScript, comience con la &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide&quot;&gt;gu&amp;iacute;a&lt;/a&gt; . Una vez que tenga una comprensi&amp;oacute;n firme de los fundamentos, puede usar la &lt;a href=&quot;index&quot;&gt;referencia&lt;/a&gt; para obtener m&amp;aacute;s detalles sobre objetos individuales y construcciones del lenguaje.</target>
        </trans-unit>
        <trans-unit id="a535257a688b66c7fecab217e89655ac1ba3f8dc" translate="yes" xml:space="preserve">
          <source>If you are new to JavaScript, start with the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide&quot;&gt;guide&lt;/a&gt;. Once you have a firm grasp of the fundamentals, you can use the &lt;a href=&quot;index&quot;&gt;reference&lt;/a&gt; to get more details on individual objects and language constructs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613a62f0a62a3e51be50183314f313d624f6bc5b" translate="yes" xml:space="preserve">
          <source>If you are using an older browser that does not yet implement &lt;code&gt;&lt;a href=&quot;../statements/let&quot;&gt;let&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../statements/class&quot;&gt;class&lt;/a&gt;&lt;/code&gt;, for example, you should update to a more recent browser version that does support these new language features.</source>
          <target state="translated">Si est&amp;aacute; utilizando un navegador m&amp;aacute;s antiguo que a&amp;uacute;n no implementa &lt;code&gt;&lt;a href=&quot;../statements/let&quot;&gt;let&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../statements/class&quot;&gt;class&lt;/a&gt;&lt;/code&gt; , por ejemplo, debe actualizar a una versi&amp;oacute;n m&amp;aacute;s reciente del navegador que admita estas nuevas funciones de idioma.</target>
        </trans-unit>
        <trans-unit id="b2c3a9d53d40d1800d714f24dc84a4f4ba306069" translate="yes" xml:space="preserve">
          <source>If you are using function &lt;a href=&quot;../statements/label&quot;&gt;labels&lt;/a&gt;, you will still need to provide a function name after the &lt;code&gt;function&lt;/code&gt; keyword. This doesn't work:</source>
          <target state="translated">Si est&amp;aacute; utilizando &lt;a href=&quot;../statements/label&quot;&gt;etiquetas de&lt;/a&gt; funci&amp;oacute;n , a&amp;uacute;n deber&amp;aacute; proporcionar un nombre de funci&amp;oacute;n despu&amp;eacute;s de la palabra clave de &lt;code&gt;function&lt;/code&gt; . Esto no funciona:</target>
        </trans-unit>
        <trans-unit id="77903e97dc13aed96b929fd6a5c838a5b3a347a1" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;f([1,2,3], obj)&lt;/code&gt; in an ECMAScript 5 environment, then the &lt;code&gt;values&lt;/code&gt; reference inside the &lt;code&gt;with&lt;/code&gt; statement will resolve to &lt;code&gt;obj&lt;/code&gt;. However, ECMAScript 2015 introduces a &lt;code&gt;values&lt;/code&gt; property on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/prototype&quot;&gt;&lt;code&gt;Array.prototype&lt;/code&gt;&lt;/a&gt; (so that it will be available on every array). So, in a JavaScript environment that supports ECMAScript 2015, the &lt;code&gt;values&lt;/code&gt; reference inside the &lt;code&gt;with&lt;/code&gt; statement could resolve to &lt;code&gt;[1,2,3].values&lt;/code&gt;. However, in this particular example, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/prototype&quot;&gt;&lt;code&gt;Array.prototype&lt;/code&gt;&lt;/a&gt; has been defined with &lt;code&gt;values&lt;/code&gt; in its &lt;a href=&quot;../global_objects/symbol/unscopables&quot;&gt;&lt;code&gt;Symbol.unscopables&lt;/code&gt;&lt;/a&gt; object. If it were not, one can see how this would be a difficult issue to debug.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a590cd4ce738fdd82efe0e9731e381f8954b9061" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;f([1,2,3], obj)&lt;/code&gt; in an ECMAScript 5 environment, then the &lt;code&gt;values&lt;/code&gt; reference inside the &lt;code&gt;with&lt;/code&gt; statement will resolve to &lt;code&gt;obj&lt;/code&gt;. However, ECMAScript 6 introduces a &lt;code&gt;values&lt;/code&gt; property on &lt;a href=&quot;../global_objects/array/prototype&quot;&gt;&lt;code&gt;Array.prototype&lt;/code&gt;&lt;/a&gt; (so that it will be available on every array). So, in a JavaScript environment that supports ECMAScript 6, the &lt;code&gt;values&lt;/code&gt; reference inside the &lt;code&gt;with&lt;/code&gt; statement could resolve to &lt;code&gt;[1,2,3].values&lt;/code&gt;. However, in this particular example, &lt;a href=&quot;../global_objects/array/prototype&quot;&gt;&lt;code&gt;Array.prototype&lt;/code&gt;&lt;/a&gt; has been defined with &lt;code&gt;values&lt;/code&gt; in its &lt;a href=&quot;../global_objects/symbol/unscopables&quot;&gt;&lt;code&gt;Symbol.unscopables&lt;/code&gt;&lt;/a&gt; object. If it were not, one can see how this would be a difficult issue to debug.</source>
          <target state="translated">Si llama a &lt;code&gt;f([1,2,3], obj)&lt;/code&gt; en un entorno ECMAScript 5, la referencia de &lt;code&gt;values&lt;/code&gt; dentro de la instrucci&amp;oacute;n &lt;code&gt;with&lt;/code&gt; se resolver&amp;aacute; en &lt;code&gt;obj&lt;/code&gt; . Sin embargo, ECMAScript 6 introduce una propiedad de &lt;code&gt;values&lt;/code&gt; en &lt;a href=&quot;../global_objects/array/prototype&quot;&gt; &lt;code&gt;Array.prototype&lt;/code&gt; &lt;/a&gt; (para que est&amp;eacute; disponible en cada matriz). Por lo tanto, en un entorno de JavaScript que admita ECMAScript 6, los &lt;code&gt;values&lt;/code&gt; referencia dentro de la instrucci&amp;oacute;n &lt;code&gt;with&lt;/code&gt; podr&amp;iacute;an resolverse en &lt;code&gt;[1,2,3].values&lt;/code&gt; . Sin embargo, en este ejemplo en particular, &lt;a href=&quot;../global_objects/array/prototype&quot;&gt; &lt;code&gt;Array.prototype&lt;/code&gt; &lt;/a&gt; se ha definido con &lt;code&gt;values&lt;/code&gt; en su &lt;a href=&quot;../global_objects/symbol/unscopables&quot;&gt; &lt;code&gt;Symbol.unscopables&lt;/code&gt; &lt;/a&gt;objeto. Si no fuera as&amp;iacute;, se puede ver c&amp;oacute;mo este ser&amp;iacute;a un problema dif&amp;iacute;cil de depurar.</target>
        </trans-unit>
        <trans-unit id="5c956ed676ebd4cdf0ef2b881c4cdd44209fec2e" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;pop()&lt;/code&gt; on an empty array, it returns &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si llama a &lt;code&gt;pop()&lt;/code&gt; en una matriz vac&amp;iacute;a, devuelve &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="982fa524918e289d54b948aa1c92f09ae356ee5c" translate="yes" xml:space="preserve">
          <source>If you call the &lt;code&gt;toString()&lt;/code&gt; method on this custom object, it returns the default value inherited from &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Si llama al m&amp;eacute;todo &lt;code&gt;toString()&lt;/code&gt; en este objeto personalizado, devuelve el valor predeterminado heredado de &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="9d335486efc475b952d22569f82a62a2788b89c6" translate="yes" xml:space="preserve">
          <source>If you choose to use this partial implementation, &lt;strong&gt;you must not rely on those cases where behavior deviates from ECMA-262, 5&lt;sup&gt;th&lt;/sup&gt; edition!&lt;/strong&gt; Thankfully, these deviations from the specification rarely (if ever) come up in most coding situations. If you do not understand any of the deviations from the specification above, then it is safe in this particular case to not worry about these noncompliant deviation details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67afcf342da3e90693d7ecef744d3642516938dd" translate="yes" xml:space="preserve">
          <source>If you choose to use this partial implementation, &lt;strong&gt;you must not rely on those cases where behavior deviates from ECMA-262, 5th edition!&lt;/strong&gt; With some care, however (and perhaps with additional modification to suit specific needs), this partial implementation may be a reasonable bridge to the time when &lt;code&gt;bind()&lt;/code&gt; is widely implemented according to the specification.</source>
          <target state="translated">Si elige utilizar esta implementaci&amp;oacute;n parcial, &lt;strong&gt;&amp;iexcl;no debe confiar en aquellos casos en los que el comportamiento se desv&amp;iacute;a del ECMA-262, 5&amp;ordf; edici&amp;oacute;n! &lt;/strong&gt;Sin embargo, con algo de cuidado (y quiz&amp;aacute;s con modificaciones adicionales para adaptarse a necesidades espec&amp;iacute;ficas), esta implementaci&amp;oacute;n parcial puede ser un puente razonable para el momento en que &lt;code&gt;bind()&lt;/code&gt; se implementa ampliamente de acuerdo con la especificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7d8ff152a7506a8df981872cd6144a994c604418" translate="yes" xml:space="preserve">
          <source>If you come from another programming language, it is also common to use keywords that don't mean the same or have no meaning at all in javaScript:</source>
          <target state="translated">Si vienes de otro lenguaje de programación,también es común usar palabras clave que no significan lo mismo o no tienen ningún significado en javaScript:</target>
        </trans-unit>
        <trans-unit id="56181bd1d66f2b2ed3709ed12001807e1c6d7be4" translate="yes" xml:space="preserve">
          <source>If you construct an arithmetic expression as a string, you can use &lt;code&gt;eval()&lt;/code&gt; to evaluate it at a later time. For example, suppose you have a variable &lt;code&gt;x&lt;/code&gt;. You can postpone evaluation of an expression involving &lt;code&gt;x&lt;/code&gt; by assigning the string value of the expression, say &quot;&lt;code&gt;3 * x + 2&lt;/code&gt;&quot;, to a variable, and then calling &lt;code&gt;eval()&lt;/code&gt; at a later point in your script.</source>
          <target state="translated">Si construye una expresi&amp;oacute;n aritm&amp;eacute;tica como una cadena, puede usar &lt;code&gt;eval()&lt;/code&gt; para evaluarla en un momento posterior. Por ejemplo, suponga que tiene una variable &lt;code&gt;x&lt;/code&gt; . Puede posponer la evaluaci&amp;oacute;n de una expresi&amp;oacute;n que involucre &lt;code&gt;x&lt;/code&gt; asignando el valor de cadena de la expresi&amp;oacute;n, digamos &quot; &lt;code&gt;3 * x + 2&lt;/code&gt; &quot;, a una variable, y luego llamando a &lt;code&gt;eval()&lt;/code&gt; en un punto posterior de su script.</target>
        </trans-unit>
        <trans-unit id="8d68f6b9f418726c69743b66c16ac037f82b5627" translate="yes" xml:space="preserve">
          <source>If you create a property key from an expression, you need to use square brackets. Otherwise the property name can't be computed:</source>
          <target state="translated">Si creas una clave de propiedad a partir de una expresión,necesitas usar corchetes.De lo contrario,el nombre de la propiedad no puede ser computado:</target>
        </trans-unit>
        <trans-unit id="be14b3ea8c1e9826f6190d19d2cab72fdf85cb50" translate="yes" xml:space="preserve">
          <source>If you define multiple values then the last value is returned.</source>
          <target state="translated">Si se definen varios valores,entonces se devuelve el último valor.</target>
        </trans-unit>
        <trans-unit id="f10d361ef5a163329364a3df976bc77ea83e3dc0" translate="yes" xml:space="preserve">
          <source>If you delete a property for which a watchpoint has been set, that watchpoint does not disappear. If you later recreate the property, the watchpoint is still in effect.</source>
          <target state="translated">Si se borra una propiedad para la que se ha establecido un punto de vigilancia,ese punto de vigilancia no desaparece.Si más tarde se vuelve a crear la propiedad,el punto de vigilancia sigue en vigor.</target>
        </trans-unit>
        <trans-unit id="9e2bd2b895541007ef32841e0415947532555ac7" translate="yes" xml:space="preserve">
          <source>If you delete a property with the &lt;code&gt;&lt;a href=&quot;delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; operator, the &lt;code&gt;in&lt;/code&gt; operator returns &lt;code&gt;false&lt;/code&gt; for that property.</source>
          <target state="translated">Si elimina una propiedad con el operador de &lt;code&gt;&lt;a href=&quot;delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; , el operador &lt;code&gt;in&lt;/code&gt; devuelve &lt;code&gt;false&lt;/code&gt; para esa propiedad.</target>
        </trans-unit>
        <trans-unit id="5f6e1de3c0913e4cc6a427cd152ae3adbdbf83ba" translate="yes" xml:space="preserve">
          <source>If you didn't write the &lt;code&gt;new&lt;/code&gt; operator, &lt;strong&gt;the Constructor Function would be invoked like any Regular Function,&lt;/strong&gt;&lt;em&gt;without creating an Object.&lt;/em&gt; In this case, the value of &lt;code&gt;this&lt;/code&gt; is also different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bddfe554f36b287490547eed85632d9e23d92c9d" translate="yes" xml:space="preserve">
          <source>If you didn't write the &lt;code&gt;new&lt;/code&gt; operator, &lt;strong&gt;the Constructor Function would be invoked like any Regular Function,&lt;/strong&gt;&lt;em&gt;without creating an Object.&lt;/em&gt;In this case, the value of &lt;code&gt;this&lt;/code&gt; is also different.</source>
          <target state="translated">Si no escribi&amp;oacute; el operador &lt;code&gt;new&lt;/code&gt; , &lt;strong&gt;la funci&amp;oacute;n de constructor se invocar&amp;iacute;a como cualquier funci&amp;oacute;n regular, &lt;/strong&gt;&lt;em&gt;sin crear un objeto. &lt;/em&gt;En este caso, el valor de &lt;code&gt;this&lt;/code&gt; tambi&amp;eacute;n es diferente.</target>
        </trans-unit>
        <trans-unit id="d5715ce7b490b3178a67fbab44e46e0895854da4" translate="yes" xml:space="preserve">
          <source>If you do not specify a constructor method, a default constructor is used.</source>
          <target state="translated">Si no se especifica un método constructor,se utiliza un constructor por defecto.</target>
        </trans-unit>
        <trans-unit id="91809d53b8b015a60ef70d0dcdc8f1e75e790479" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;&lt;var&gt;dayValue&lt;/var&gt;&lt;/code&gt; parameter, the value returned from the &lt;a href=&quot;getdate&quot;&gt;&lt;code&gt;getDate()&lt;/code&gt;&lt;/a&gt; method is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad54b71740a03f15b390b615e6bf7ef289e62f3" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;&lt;var&gt;minutesValue&lt;/var&gt;&lt;/code&gt;, &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;msValue&lt;/var&gt;&lt;/code&gt; parameters, the values returned from the &lt;a href=&quot;getminutes&quot;&gt;&lt;code&gt;getMinutes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;getseconds&quot;&gt;&lt;code&gt;getSeconds()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;getmilliseconds&quot;&gt;&lt;code&gt;getMilliseconds()&lt;/code&gt;&lt;/a&gt; methods are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b14924a4ad8ffa7796c3bfab19bb7a60650112" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;&lt;var&gt;minutesValue&lt;/var&gt;&lt;/code&gt;, &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;msValue&lt;/var&gt;&lt;/code&gt; parameters, the values returned from the &lt;a href=&quot;getutcminutes&quot;&gt;&lt;code&gt;getUTCMinutes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;getutcseconds&quot;&gt;&lt;code&gt;getUTCSeconds()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;getutcmilliseconds&quot;&gt;&lt;code&gt;getUTCMilliseconds()&lt;/code&gt;&lt;/a&gt; methods are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82fa69a0144131eaebaa23e3873fb3414a94568f" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;&lt;var&gt;monthValue&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;dateValue&lt;/var&gt;&lt;/code&gt; parameters, the values returned from the &lt;a href=&quot;getmonth&quot;&gt;&lt;code&gt;getMonth()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;getdate&quot;&gt;&lt;code&gt;getDate()&lt;/code&gt;&lt;/a&gt; methods are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df5d83c279d0c8023216b21336a639196b7ed77" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;&lt;var&gt;monthValue&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;dayValue&lt;/var&gt;&lt;/code&gt; parameters, the values returned from the &lt;a href=&quot;getutcmonth&quot;&gt;&lt;code&gt;getUTCMonth()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;getutcdate&quot;&gt;&lt;code&gt;getUTCDate()&lt;/code&gt;&lt;/a&gt; methods are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47bc293e91c6175b64ee14299e94b76f046b77c1" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;&lt;var&gt;msValue&lt;/var&gt;&lt;/code&gt; parameter, the value returned from the &lt;a href=&quot;getmilliseconds&quot;&gt;&lt;code&gt;getMilliseconds()&lt;/code&gt;&lt;/a&gt; method is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f5fcbf1f345056595a0febb2d4450e65ef680f" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;msValue&lt;/var&gt;&lt;/code&gt; parameters, the values returned from &lt;a href=&quot;getseconds&quot;&gt;&lt;code&gt;getSeconds()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;getmilliseconds&quot;&gt;&lt;code&gt;getMilliseconds()&lt;/code&gt;&lt;/a&gt; methods are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9f19a7f8ab4f40f5bd17f11354e3f6271fb12c" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;msValue&lt;/var&gt;&lt;/code&gt; parameters, the values returned from &lt;a href=&quot;getutcseconds&quot;&gt;&lt;code&gt;getUTCSeconds()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;getutcmilliseconds&quot;&gt;&lt;code&gt;getUTCMilliseconds()&lt;/code&gt;&lt;/a&gt; methods are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59226b478f68551a725b4904aa9e073fdd1245c0" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;dayValue&lt;/code&gt; parameter, the value returned from the &lt;a href=&quot;getdate&quot;&gt;&lt;code&gt;getDate()&lt;/code&gt;&lt;/a&gt; method is used.</source>
          <target state="translated">Si no especifica el par&amp;aacute;metro &lt;code&gt;dayValue&lt;/code&gt; , se utiliza el valor devuelto por el m&amp;eacute;todo &lt;a href=&quot;getdate&quot;&gt; &lt;code&gt;getDate()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f69c9e92ce00676ee4d2916a406ce0640412ab41" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;dayValue&lt;/code&gt; parameter, the value returned from the &lt;a href=&quot;getutcdate&quot;&gt;&lt;code&gt;getUTCDate()&lt;/code&gt;&lt;/a&gt; method is used.</source>
          <target state="translated">Si no especifica el par&amp;aacute;metro &lt;code&gt;dayValue&lt;/code&gt; , se utiliza el valor devuelto por el m&amp;eacute;todo &lt;a href=&quot;getutcdate&quot;&gt; &lt;code&gt;getUTCDate()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3a6e5b4b10c44b2a624b4d411895f115df5e9376" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;minutesValue&lt;/code&gt;, &lt;code&gt;secondsValue&lt;/code&gt;, and &lt;code&gt;msValue&lt;/code&gt; parameters, the values returned from the &lt;a href=&quot;getminutes&quot;&gt;&lt;code&gt;getMinutes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;getseconds&quot;&gt;&lt;code&gt;getSeconds()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;getmilliseconds&quot;&gt;&lt;code&gt;getMilliseconds()&lt;/code&gt;&lt;/a&gt; methods are used.</source>
          <target state="translated">Si no especifica los &lt;code&gt;minutesValue&lt;/code&gt; , &lt;code&gt;secondsValue&lt;/code&gt; y msValue , se &lt;code&gt;msValue&lt;/code&gt; los valores devueltos por los &lt;a href=&quot;getminutes&quot;&gt; &lt;code&gt;getMinutes()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;getseconds&quot;&gt; &lt;code&gt;getSeconds()&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;getmilliseconds&quot;&gt; &lt;code&gt;getMilliseconds()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="196d20153d788622cbd58314f072ed3ac7c88814" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;minutesValue&lt;/code&gt;, &lt;code&gt;secondsValue&lt;/code&gt;, and &lt;code&gt;msValue&lt;/code&gt; parameters, the values returned from the &lt;a href=&quot;getutcminutes&quot;&gt;&lt;code&gt;getUTCMinutes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;getutcseconds&quot;&gt;&lt;code&gt;getUTCSeconds()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;getutcmilliseconds&quot;&gt;&lt;code&gt;getUTCMilliseconds()&lt;/code&gt;&lt;/a&gt; methods are used.</source>
          <target state="translated">Si no especifica los &lt;code&gt;minutesValue&lt;/code&gt; , &lt;code&gt;secondsValue&lt;/code&gt; y msValue , se &lt;code&gt;msValue&lt;/code&gt; los valores devueltos por los &lt;a href=&quot;getutcminutes&quot;&gt; &lt;code&gt;getUTCMinutes()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;getutcseconds&quot;&gt; &lt;code&gt;getUTCSeconds()&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;getutcmilliseconds&quot;&gt; &lt;code&gt;getUTCMilliseconds()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3e065f2df26eadd9c019745d680d610654be27e8" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;monthValue&lt;/code&gt; and &lt;code&gt;dateValue&lt;/code&gt; parameters, the values returned from the &lt;a href=&quot;getmonth&quot;&gt;&lt;code&gt;getMonth()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;getdate&quot;&gt;&lt;code&gt;getDate()&lt;/code&gt;&lt;/a&gt; methods are used.</source>
          <target state="translated">Si no especifica los par&amp;aacute;metros &lt;code&gt;monthValue&lt;/code&gt; y &lt;code&gt;dateValue&lt;/code&gt; , se utilizan los valores devueltos por los &lt;a href=&quot;getmonth&quot;&gt; &lt;code&gt;getMonth()&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;getdate&quot;&gt; &lt;code&gt;getDate()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f17a4828fb9f406dde0b1835b9d908b2753f5da" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;monthValue&lt;/code&gt; and &lt;code&gt;dayValue&lt;/code&gt; parameters, the values returned from the &lt;a href=&quot;getutcmonth&quot;&gt;&lt;code&gt;getUTCMonth()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;getutcdate&quot;&gt;&lt;code&gt;getUTCDate()&lt;/code&gt;&lt;/a&gt; methods are used.</source>
          <target state="translated">Si no especifica los par&amp;aacute;metros &lt;code&gt;monthValue&lt;/code&gt; y &lt;code&gt;dayValue&lt;/code&gt; , se utilizan los valores devueltos por los &lt;a href=&quot;getutcmonth&quot;&gt; &lt;code&gt;getUTCMonth()&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;getutcdate&quot;&gt; &lt;code&gt;getUTCDate()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5d6a263711a564bafff20ce9a44e33aecf895b2" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;msValue&lt;/code&gt; parameter, the value returned from the &lt;a href=&quot;getmilliseconds&quot;&gt;&lt;code&gt;getMilliseconds()&lt;/code&gt;&lt;/a&gt; method is used.</source>
          <target state="translated">Si no especifica el par&amp;aacute;metro &lt;code&gt;msValue&lt;/code&gt; , se utiliza el valor devuelto por el m&amp;eacute;todo &lt;a href=&quot;getmilliseconds&quot;&gt; &lt;code&gt;getMilliseconds()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="13b2fd50258a2835809a9814d00ddc68fb9b08a2" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;msValue&lt;/code&gt; parameter, the value returned from the &lt;a href=&quot;getutcmilliseconds&quot;&gt;&lt;code&gt;getUTCMilliseconds()&lt;/code&gt;&lt;/a&gt; method is used.</source>
          <target state="translated">Si no especifica el par&amp;aacute;metro &lt;code&gt;msValue&lt;/code&gt; , se utiliza el valor devuelto por el m&amp;eacute;todo &lt;a href=&quot;getutcmilliseconds&quot;&gt; &lt;code&gt;getUTCMilliseconds()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ae79f7fb255a43982f924ce9d07ff130cc8750c" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;secondsValue&lt;/code&gt; and &lt;code&gt;msValue&lt;/code&gt; parameters, the values returned from &lt;a href=&quot;getseconds&quot;&gt;&lt;code&gt;getSeconds()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;getmilliseconds&quot;&gt;&lt;code&gt;getMilliseconds()&lt;/code&gt;&lt;/a&gt; methods are used.</source>
          <target state="translated">Si no especifica los par&amp;aacute;metros &lt;code&gt;secondsValue&lt;/code&gt; y &lt;code&gt;msValue&lt;/code&gt; , se utilizan los valores devueltos por los &lt;a href=&quot;getseconds&quot;&gt; &lt;code&gt;getSeconds()&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;getmilliseconds&quot;&gt; &lt;code&gt;getMilliseconds()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f9b9c693ad5b1943fcbb6c027381de26570f41e6" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;secondsValue&lt;/code&gt; and &lt;code&gt;msValue&lt;/code&gt; parameters, the values returned from &lt;a href=&quot;getutcseconds&quot;&gt;&lt;code&gt;getUTCSeconds()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;getutcmilliseconds&quot;&gt;&lt;code&gt;getUTCMilliseconds()&lt;/code&gt;&lt;/a&gt; methods are used.</source>
          <target state="translated">Si no especifica los par&amp;aacute;metros &lt;code&gt;secondsValue&lt;/code&gt; y &lt;code&gt;msValue&lt;/code&gt; , se utilizan los valores devueltos por los &lt;a href=&quot;getutcseconds&quot;&gt; &lt;code&gt;getUTCSeconds()&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;getutcmilliseconds&quot;&gt; &lt;code&gt;getUTCMilliseconds()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="05cb4b511b1661f5586af08ed24530681a2151ee" translate="yes" xml:space="preserve">
          <source>If you don't give any parameter and use the &lt;code&gt;match()&lt;/code&gt; method directly, you will get an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; with an empty string: &lt;code&gt;[&quot;&quot;]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af40479ee91482e63e43f4df0bb7624dbe144771" translate="yes" xml:space="preserve">
          <source>If you don't provide your own constructor, then a default constructor will be supplied for you. If your class is a base class, the default constructor is empty:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c32852d31c81ac10578986fc553bf83224d9e5" translate="yes" xml:space="preserve">
          <source>If you express color as a hexadecimal RGB triplet, you must use the format &lt;code&gt;rrggbb&lt;/code&gt;. For example, the hexadecimal RGB values for salmon are red=FA, green=80, and blue=72, so the RGB triplet for salmon is &lt;code&gt;&quot;FA8072&quot;&lt;/code&gt;.</source>
          <target state="translated">Si expresa el color como un triplete RGB hexadecimal, debe utilizar el formato &lt;code&gt;rrggbb&lt;/code&gt; . Por ejemplo, los valores RGB hexadecimales para el salm&amp;oacute;n son rojo = FA, verde = 80 y azul = 72, por lo que el triplete RGB para el salm&amp;oacute;n es &lt;code&gt;&quot;FA8072&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="424cbece6047c20988ec0b925f0d69bf351d88e0" translate="yes" xml:space="preserve">
          <source>If you forget a &lt;code&gt;break&lt;/code&gt; then the script will run from the &lt;code&gt;case&lt;/code&gt; where the criterion is met and will run the cases after that &lt;strong&gt;regardless if a criterion was met&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5829843e73f7b32286683290a76dfea716fae9b0" translate="yes" xml:space="preserve">
          <source>If you forget a break then the script will run from the case where the criterion is met and will run the case after that regardless if criterion was met. See example here:</source>
          <target state="translated">Si se olvida una pausa,el guión se ejecutará a partir del caso en que se cumpla el criterio y se ejecutará el caso después,independientemente de si se cumplió el criterio.Ver ejemplo aquí:</target>
        </trans-unit>
        <trans-unit id="392bc9770f3f38cbe5fa9323408292a9e2ec9a76" translate="yes" xml:space="preserve">
          <source>If you intended to create a method of an object, you will need to create an object. The following syntax without a name after the &lt;code&gt;function&lt;/code&gt; keyword is valid then.</source>
          <target state="translated">Si pretend&amp;iacute;a crear un m&amp;eacute;todo de un objeto, necesitar&amp;aacute; crear un objeto. La siguiente sintaxis sin un nombre despu&amp;eacute;s de la palabra clave de &lt;code&gt;function&lt;/code&gt; es v&amp;aacute;lida entonces.</target>
        </trans-unit>
        <trans-unit id="2b7602e387bd2af7647914f024cab0e3d3062237" translate="yes" xml:space="preserve">
          <source>If you meant to declare another constant, pick another name and re-name. This constant name is already taken in this scope.</source>
          <target state="translated">Si querías declarar otra constante,elige otro nombre y vuelve a nombrarla.Este nombre de constante ya está tomado en este ámbito.</target>
        </trans-unit>
        <trans-unit id="4f1e13b196b133d23d16e2eca23049991007c75b" translate="yes" xml:space="preserve">
          <source>If you must run the code, consider running it with reduced privileges. This advice applies mainly to extensions and XUL applications, which can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Components.utils.evalInSandbox&quot;&gt;Components.utils.evalInSandbox&lt;/a&gt; for this.</source>
          <target state="translated">Si debe ejecutar el c&amp;oacute;digo, considere ejecutarlo con privilegios reducidos. Este consejo se aplica principalmente a las extensiones y aplicaciones XUL, que pueden usar &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Components.utils.evalInSandbox&quot;&gt;Components.utils.evalInSandbox&lt;/a&gt; para esto.</target>
        </trans-unit>
        <trans-unit id="f05da75db7bf9aa79df3571a16ac371a8a1c09b8" translate="yes" xml:space="preserve">
          <source>If you need the &lt;strong&gt;index&lt;/strong&gt; of the found element in the array, use &lt;a href=&quot;findindex&quot;&gt;&lt;code&gt;findIndex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44577c6fc47c8a13363a3871df6144ffae8f08db" translate="yes" xml:space="preserve">
          <source>If you need the natural log of 2 or 10, use the constants &lt;a href=&quot;ln2&quot;&gt;&lt;code&gt;Math.LN2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;ln10&quot;&gt;&lt;code&gt;Math.LN10&lt;/code&gt;&lt;/a&gt; . If you need a logarithm to base 2 or 10, use &lt;a href=&quot;log2&quot;&gt;&lt;code&gt;Math.log2()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;log10&quot;&gt;&lt;code&gt;Math.log10()&lt;/code&gt;&lt;/a&gt; . If you need a logarithm to other bases, use Math.log(x) / Math.log(otherBase) as in the example below; you might want to precalculate 1 / Math.log(otherBase) .</source>
          <target state="translated">Si necesita el logaritmo natural de 2 o 10, use las constantes &lt;a href=&quot;ln2&quot;&gt; &lt;code&gt;Math.LN2&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;ln10&quot;&gt; &lt;code&gt;Math.LN10&lt;/code&gt; &lt;/a&gt; . Si necesita un logaritmo en base 2 o 10, use &lt;a href=&quot;log2&quot;&gt; &lt;code&gt;Math.log2()&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;log10&quot;&gt; &lt;code&gt;Math.log10()&lt;/code&gt; &lt;/a&gt; . Si necesita un logaritmo en otras bases, use Math.log (x) / Math.log (otherBase) como en el ejemplo siguiente; es posible que desee calcular previamente 1 / Math.log (otherBase).</target>
        </trans-unit>
        <trans-unit id="68beaac9d5aafe09513d7eccd070b1b3d71bb486" translate="yes" xml:space="preserve">
          <source>If you need the natural log of 2 or 10, use the constants &lt;a href=&quot;ln2&quot;&gt;&lt;code&gt;Math.LN2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;ln10&quot;&gt;&lt;code&gt;Math.LN10&lt;/code&gt;&lt;/a&gt;. If you need a logarithm to base 2 or 10, use &lt;a href=&quot;log2&quot;&gt;&lt;code&gt;Math.log2()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;log10&quot;&gt;&lt;code&gt;Math.log10()&lt;/code&gt;&lt;/a&gt;. If you need a logarithm to other bases, use Math.log(x) / Math.log(otherBase) as in the example below; you might want to precalculate 1 / Math.log(otherBase).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9dd66eafaabe75ecf9115145d2b767ab19cb10" translate="yes" xml:space="preserve">
          <source>If you need to define a property without a value, you might use &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; as a value.</source>
          <target state="translated">Si necesita definir una propiedad sin un valor, puede usar &lt;a href=&quot;../global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; como valor.</target>
        </trans-unit>
        <trans-unit id="8f2598944e0ea66e2ceaf4e11c59c0cdff9b64a0" translate="yes" xml:space="preserve">
          <source>If you need to export the default, write the following instead:</source>
          <target state="translated">Si necesita exportar el valor predeterminado,escriba lo siguiente en su lugar:</target>
        </trans-unit>
        <trans-unit id="48354edaa3e95aef6e6a48c3e5f6b6df17eeb92b" translate="yes" xml:space="preserve">
          <source>If you need to find if a value &lt;strong&gt;exists&lt;/strong&gt; in an array, use &lt;a href=&quot;includes&quot;&gt;&lt;code&gt;Array.prototype.includes()&lt;/code&gt;&lt;/a&gt;. Again, it checks each element for equality with the value instead of using a testing function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d63d0046baee1f832f04d68cdceccdcee365fd" translate="yes" xml:space="preserve">
          <source>If you need to find if any element satisfies the provided testing function, use &lt;a href=&quot;some&quot;&gt;&lt;code&gt;Array.prototype.some()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ed2ad090bbb7a6fac237e3660f1c52e2f3ec91" translate="yes" xml:space="preserve">
          <source>If you need to find the &lt;strong&gt;index of a value&lt;/strong&gt;, use &lt;a href=&quot;indexof&quot;&gt;&lt;code&gt;Array.prototype.indexOf()&lt;/code&gt;&lt;/a&gt;. (It&amp;rsquo;s similar to &lt;a href=&quot;findindex&quot;&gt;&lt;code&gt;findIndex()&lt;/code&gt;&lt;/a&gt;, but checks each element for equality with the value instead of using a testing function.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7b0f1b470fc3559b362594aea4dada581a211a" translate="yes" xml:space="preserve">
          <source>If you need to find the position of an element or whether an element exists in an array, use &lt;a href=&quot;indexof&quot;&gt;&lt;code&gt;Array.prototype.indexOf()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;includes&quot;&gt;&lt;code&gt;Array.prototype.includes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si necesita encontrar la posici&amp;oacute;n de un elemento o si un elemento existe en una matriz, use &lt;a href=&quot;indexof&quot;&gt; &lt;code&gt;Array.prototype.indexOf()&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;includes&quot;&gt; &lt;code&gt;Array.prototype.includes()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="53ac54e6412bacc63b8624a67da085e48a736a3a" translate="yes" xml:space="preserve">
          <source>If you need to know if a string matches a regular expression &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt;, use &lt;a href=&quot;../regexp/test&quot;&gt;&lt;code&gt;RegExp.test()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si lo que necesita saber si una cadena coincide con una expresi&amp;oacute;n regular &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; , utilice &lt;a href=&quot;../regexp/test&quot;&gt; &lt;code&gt;RegExp.test()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9701887d047bb96bcab9229f97c6b2c436038b1d" translate="yes" xml:space="preserve">
          <source>If you need to support truly obsolete JavaScript engines that do not support &lt;a href=&quot;../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty&lt;/code&gt;&lt;/a&gt;, it is best not to polyfill &lt;code&gt;Array.prototype&lt;/code&gt; methods at all, as you cannot make them non-enumerable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c814d727deb065c2a896b0632604aebd175c33" translate="yes" xml:space="preserve">
          <source>If you need to support truly obsolete JavaScript engines that don't support &lt;a href=&quot;../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty&lt;/code&gt;&lt;/a&gt;, it's best not to polyfill &lt;code&gt;Array.prototype&lt;/code&gt; methods at all, as you can't make them non-enumerable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe432265bccad633d8efa5ca4d1fac0eea99e3f" translate="yes" xml:space="preserve">
          <source>If you need to support truly obsolete JavaScript engines that don't support &lt;code&gt;&lt;a href=&quot;../object/defineproperty&quot;&gt;Object.defineProperty()&lt;/a&gt;&lt;/code&gt;, it's best not to polyfill &lt;code&gt;Array.prototype&lt;/code&gt; methods at all, as you can't make them &lt;strong&gt;non-enumerable&lt;/strong&gt;.</source>
          <target state="translated">Si necesita admitir motores de JavaScript realmente obsoletos que no admiten &lt;code&gt;&lt;a href=&quot;../object/defineproperty&quot;&gt;Object.defineProperty()&lt;/a&gt;&lt;/code&gt; , es mejor no rellenar los m&amp;eacute;todos &lt;code&gt;Array.prototype&lt;/code&gt; en absoluto, ya que no puede convertirlos en &lt;strong&gt;no enumerables&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b656e640c400c1887a63c15bbd8901d8a955a1f8" translate="yes" xml:space="preserve">
          <source>If you need to support truly obsolete JavaScript engines that don't support &lt;code&gt;&lt;a href=&quot;../object/defineproperty&quot;&gt;Object.defineProperty()&lt;/a&gt;&lt;/code&gt;, it's best not to polyfill &lt;code&gt;Array.prototype&lt;/code&gt; methods at all, as you can't make them non-enumerable.</source>
          <target state="translated">Si necesita admitir motores JavaScript realmente obsoletos que no admiten &lt;code&gt;&lt;a href=&quot;../object/defineproperty&quot;&gt;Object.defineProperty()&lt;/a&gt;&lt;/code&gt; , es mejor no rellenar los m&amp;eacute;todos &lt;code&gt;Array.prototype&lt;/code&gt; en absoluto, ya que no puede convertirlos en no enumerables.</target>
        </trans-unit>
        <trans-unit id="bd9f376dc29844e3f900bec4366cbbf039c586ee" translate="yes" xml:space="preserve">
          <source>If you need to support truly obsolete JavaScript engines that don't support &lt;code&gt;&lt;a href=&quot;../object/defineproperty&quot;&gt;Object.defineProperty&lt;/a&gt;&lt;/code&gt;, it is best not to polyfill &lt;code&gt;Array.prototype&lt;/code&gt; at all, as you cannot make it non-enumerable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57168d3fef20557c94e31ea753dbe3ba115b9dc4" translate="yes" xml:space="preserve">
          <source>If you need to support truly obsolete JavaScript engines that don't support &lt;code&gt;&lt;a href=&quot;../object/defineproperty&quot;&gt;Object.defineProperty&lt;/a&gt;&lt;/code&gt;, it's best not to polyfill &lt;code&gt;Array.prototype&lt;/code&gt; methods at all, as you can't make them non-enumerable.</source>
          <target state="translated">Si necesita admitir motores de JavaScript verdaderamente obsoletos que no admiten &lt;code&gt;&lt;a href=&quot;../object/defineproperty&quot;&gt;Object.defineProperty&lt;/a&gt;&lt;/code&gt; , es mejor no rellenar los m&amp;eacute;todos &lt;code&gt;Array.prototype&lt;/code&gt; en absoluto, ya que no puede convertirlos en no enumerables.</target>
        </trans-unit>
        <trans-unit id="3edaaddf2630ab4d776484bd61b50696d946fc29" translate="yes" xml:space="preserve">
          <source>If you need to use an assignment in a conditional expression, a common practice is to put additional parentheses around the assignment. For example:</source>
          <target state="translated">Si es necesario utilizar una asignación en una expresión condicional,una práctica común es poner paréntesis adicionales alrededor de la asignación.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="d40d82c950e9a812cd674e6001dbf28de03af32b" translate="yes" xml:space="preserve">
          <source>If you only want the first match found, you might want to use &lt;a href=&quot;../regexp/exec&quot;&gt;&lt;code&gt;RegExp.exec()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Si solo desea que se encuentre la primera coincidencia, es posible que desee utilizar &lt;a href=&quot;../regexp/exec&quot;&gt; &lt;code&gt;RegExp.exec()&lt;/code&gt; &lt;/a&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="c57242f318553d3f36f9cf38af0a4f7480baa928" translate="yes" xml:space="preserve">
          <source>If you only want to consider properties attached to the object itself, and not its prototypes, use &lt;a href=&quot;../global_objects/object/getownpropertynames&quot;&gt;&lt;code&gt;getOwnPropertyNames()&lt;/code&gt;&lt;/a&gt; or perform a &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt;&lt;code&gt;hasOwnProperty()&lt;/code&gt;&lt;/a&gt; check (&lt;a href=&quot;../global_objects/object/propertyisenumerable&quot;&gt;&lt;code&gt;propertyIsEnumerable()&lt;/code&gt;&lt;/a&gt; can also be used). Alternatively, if you know there won't be any outside code interference, you can extend built-in prototypes with a check method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735530012ac3a4439f6528b8ed499f68e90f9884" translate="yes" xml:space="preserve">
          <source>If you only want to consider properties attached to the object itself, and not its prototypes, use &lt;a href=&quot;../global_objects/object/getownpropertynames&quot;&gt;&lt;code&gt;getOwnPropertyNames()&lt;/code&gt;&lt;/a&gt; or perform a &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt;&lt;code&gt;hasOwnProperty()&lt;/code&gt;&lt;/a&gt; check (&lt;a href=&quot;../global_objects/object/propertyisenumerable&quot;&gt;&lt;code&gt;propertyIsEnumerable&lt;/code&gt;&lt;/a&gt; can also be used). Alternatively, if you know there won't be any outside code interference, you can extend built-in prototypes with a check method.</source>
          <target state="translated">Si solo desea considerar las propiedades adjuntas al objeto en s&amp;iacute;, y no sus prototipos, use &lt;a href=&quot;../global_objects/object/getownpropertynames&quot;&gt; &lt;code&gt;getOwnPropertyNames()&lt;/code&gt; &lt;/a&gt; o realice una &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt; &lt;code&gt;hasOwnProperty()&lt;/code&gt; &lt;/a&gt; ( tambi&amp;eacute;n se puede usar &lt;a href=&quot;../global_objects/object/propertyisenumerable&quot;&gt; &lt;code&gt;propertyIsEnumerable&lt;/code&gt; &lt;/a&gt; ). Alternativamente, si sabe que no habr&amp;aacute; ninguna interferencia de c&amp;oacute;digo externo, puede extender los prototipos incorporados con un m&amp;eacute;todo de verificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0e97d2b27233fdaf7731ef52386bfd0124047bc8" translate="yes" xml:space="preserve">
          <source>If you really want to create a &lt;code&gt;Symbol&lt;/code&gt; wrapper object, you can use the &lt;code&gt;Object()&lt;/code&gt; function:</source>
          <target state="translated">Si realmente desea crear un objeto contenedor de &lt;code&gt;Symbol&lt;/code&gt; , puede usar la funci&amp;oacute;n &lt;code&gt;Object()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a1843b29c2d5c6fd4913d7563bf6437e92296a87" translate="yes" xml:space="preserve">
          <source>If you return &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; will be added to the JSON string.</source>
          <target state="translated">Si devuelve &lt;code&gt;null&lt;/code&gt; , se agregar&amp;aacute; &lt;code&gt;null&lt;/code&gt; a la cadena JSON.</target>
        </trans-unit>
        <trans-unit id="7ec5df79d7c885974c5aa582c610905dc7cdac8d" translate="yes" xml:space="preserve">
          <source>If you return &lt;code&gt;undefined&lt;/code&gt;, the property is not included (i.e., filtered out) in the output JSON string.</source>
          <target state="translated">Si devuelve &lt;code&gt;undefined&lt;/code&gt; , la propiedad no se incluye (es decir, se filtra) en la cadena JSON de salida.</target>
        </trans-unit>
        <trans-unit id="2c70929d7e200a5fe36f9edeb06a1b0a8c7a9d88" translate="yes" xml:space="preserve">
          <source>If you return a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;, &quot;true&quot; or &quot;false&quot; is used as the property's value, as appropriate, when adding it to the JSON string.</source>
          <target state="translated">Si devuelve un valor &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; , se utiliza &quot;verdadero&quot; o &quot;falso&quot; como valor de la propiedad, seg&amp;uacute;n corresponda, al agregarlo a la cadena JSON.</target>
        </trans-unit>
        <trans-unit id="aebe43fc49075ca5e764acfd1f8b57b86a33df55" translate="yes" xml:space="preserve">
          <source>If you return a &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, the property is not included in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba4f295774a527ffbb538fec3b29039be43a105" translate="yes" xml:space="preserve">
          <source>If you return a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, the stringified version of that value is used as the property's value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb68ba0a762626c3b4353aedeeb2ffb44a69ed51" translate="yes" xml:space="preserve">
          <source>If you return a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;, the string corresponding to that number is used as the value for the property when added to the JSON string.</source>
          <target state="translated">Si devuelve un &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; , la cadena correspondiente a ese n&amp;uacute;mero se utiliza como valor de la propiedad cuando se agrega a la cadena JSON.</target>
        </trans-unit>
        <trans-unit id="0b5099af9e7be5c72550fd23afd94bd55e6142b2" translate="yes" xml:space="preserve">
          <source>If you return a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, that string is used as the property's value when adding it to the JSON string.</source>
          <target state="translated">Si devuelve una &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , esa cadena se utiliza como el valor de la propiedad al agregarla a la cadena JSON.</target>
        </trans-unit>
        <trans-unit id="131cdc0db5e0530808f6767f2a2daddd0e55eba1" translate="yes" xml:space="preserve">
          <source>If you return any other object, the object is recursively stringified into the JSON string, calling the &lt;code&gt;replacer&lt;/code&gt; function on each property, unless the object is a function, in which case nothing is added to the JSON string.</source>
          <target state="translated">Si devuelve cualquier otro objeto, el objeto se secuencia recursivamente en la cadena JSON, llamando a la funci&amp;oacute;n de &lt;code&gt;replacer&lt;/code&gt; en cada propiedad, a menos que el objeto sea una funci&amp;oacute;n, en cuyo caso no se agrega nada a la cadena JSON.</target>
        </trans-unit>
        <trans-unit id="ce9a704ee385f7c72710bc2ca6fef00b73d2fb09" translate="yes" xml:space="preserve">
          <source>If you return any other object, the object is recursively stringified, calling the &lt;code&gt;&lt;var&gt;replacer&lt;/var&gt;&lt;/code&gt; function on each property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d92592decdab65c8c7d88c8b2e526399e93164" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;getBaseLog(10, 1000)&lt;/code&gt; it returns &lt;code&gt;2.9999999999999996&lt;/code&gt; due to floating-point rounding, which is very close to the actual answer of 3.</source>
          <target state="translated">Si ejecuta &lt;code&gt;getBaseLog(10, 1000)&lt;/code&gt; , devuelve &lt;code&gt;2.9999999999999996&lt;/code&gt; debido al redondeo de punto flotante, que est&amp;aacute; muy cerca de la respuesta real de 3.</target>
        </trans-unit>
        <trans-unit id="935b1b976508db5afe6cca08176c17239b09c114" translate="yes" xml:space="preserve">
          <source>If you set a property to &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; but do not delete it, the &lt;code&gt;in&lt;/code&gt; operator returns true for that property.</source>
          <target state="translated">Si establece una propiedad como &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; pero no la elimina, el operador &lt;code&gt;in&lt;/code&gt; devuelve verdadero para esa propiedad.</target>
        </trans-unit>
        <trans-unit id="34e10440b87179c5669d287c33d08bce47b6fa19" translate="yes" xml:space="preserve">
          <source>If you specify a different number of elements to insert than the number you're removing, the array will have a different length at the end of the call.</source>
          <target state="translated">Si especificas un número diferente de elementos a insertar que el número que estás quitando,la matriz tendrá una longitud diferente al final de la llamada.</target>
        </trans-unit>
        <trans-unit id="682d3439d2fa9871ecad9eae1652e23eb74f6221" translate="yes" xml:space="preserve">
          <source>If you specify a number outside the expected range, the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object is updated accordingly. For example, if you specify 1005, the number of seconds is incremented by 1, and 5 is used for the milliseconds.</source>
          <target state="translated">Si especifica un n&amp;uacute;mero fuera del rango esperado, la informaci&amp;oacute;n de fecha en el objeto &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; se actualiza en consecuencia. Por ejemplo, si especifica 1005, el n&amp;uacute;mero de segundos se incrementa en 1 y se usa 5 para los milisegundos.</target>
        </trans-unit>
        <trans-unit id="32c4cced0b807fb68ae6694984513b4abd3c73a9" translate="yes" xml:space="preserve">
          <source>If you specify any object, including a &lt;code&gt;Boolean&lt;/code&gt; object whose value is &lt;code&gt;false&lt;/code&gt;, as the initial value of a &lt;code&gt;Boolean&lt;/code&gt; object, the new &lt;code&gt;Boolean&lt;/code&gt; object has a value of &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Si especifica cualquier objeto, incluido un objeto &lt;code&gt;Boolean&lt;/code&gt; cuyo valor es &lt;code&gt;false&lt;/code&gt; , como valor inicial de un objeto &lt;code&gt;Boolean&lt;/code&gt; , el nuevo objeto &lt;code&gt;Boolean&lt;/code&gt; tiene un valor &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98ae5f892e8f6de3201d6782cad351ca1383c87b" translate="yes" xml:space="preserve">
          <source>If you use a method for a numeric literal and the numeric literal has no exponent and no decimal point, leave white-space(s) before the dot that precedes the method call to prevent the dot from being interpreted as a decimal point.</source>
          <target state="translated">Si se utiliza un método para un literal numérico y el literal numérico no tiene exponente ni punto decimal,deje espacios en blanco antes del punto que precede a la llamada del método para evitar que el punto se interprete como un punto decimal.</target>
        </trans-unit>
        <trans-unit id="edd6afd92c9f7a2538aece19a2aa77da3a6f3da8" translate="yes" xml:space="preserve">
          <source>If you use a method for a numeric literal, and the numeric literal has no exponent and no decimal point, you should leave &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Whitespace&quot;&gt;white-space(s)&lt;/a&gt; before the dot preceding the method call, so that the dot is not interpreted as a decimal point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f1d9b94d0b0382335af42f55617a4070d22713" translate="yes" xml:space="preserve">
          <source>If you use an unconditional &lt;code&gt;catch&lt;/code&gt; clause with one or more conditional &lt;code&gt;catch&lt;/code&gt; clauses, the unconditional &lt;code&gt;catch&lt;/code&gt; clause must be specified last. Otherwise, the unconditional &lt;code&gt;catch&lt;/code&gt; clause will intercept all types of exception before they can reach the conditional ones.</source>
          <target state="translated">Si usa una cl&amp;aacute;usula &lt;code&gt;catch&lt;/code&gt; incondicional con una o m&amp;aacute;s cl&amp;aacute;usulas &lt;code&gt;catch&lt;/code&gt; condicionales , la cl&amp;aacute;usula &lt;code&gt;catch&lt;/code&gt; incondicional debe especificarse en &amp;uacute;ltimo lugar. De lo contrario, la cl&amp;aacute;usula &lt;code&gt;catch&lt;/code&gt; incondicional interceptar&amp;aacute; todos los tipos de excepciones antes de que puedan alcanzar las condicionales.</target>
        </trans-unit>
        <trans-unit id="78afbb13097de5c8b78471387fa8f8af3bf94b11" translate="yes" xml:space="preserve">
          <source>If you use normal JavaScript floating point numbers in imul, you will experience a degrade in performance. This is because of the costly conversion from a floating point to an integer for multiplication, and then converting the multiplied integer back into a floating point. The reason imul exists is because it is faster in only one (so far) circumstance: AsmJS. AsmJS allows for JIST-optimizers to more easily implement internal integers in JavaScript. Multiplying two numbers stored internally as integers (which is only possible with AsmJS) with imul is the only potential circumstance where Math.imul may prove performant in current browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d05f89ff9b94e2efe15b7bec1cbbc6dcdeb7392" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;eval&lt;/code&gt; function &lt;em&gt;indirectly,&lt;/em&gt; by invoking it via a reference other than &lt;code&gt;eval&lt;/code&gt;, &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-10.4.2&quot;&gt;as of ECMAScript 5&lt;/a&gt; it works in the global scope rather than the local scope. This means, for instance, that function declarations create global functions, and that the code being evaluated doesn't have access to local variables within the scope where it's being called.</source>
          <target state="translated">Si usa la funci&amp;oacute;n &lt;code&gt;eval&lt;/code&gt; &lt;em&gt;indirectamente,&lt;/em&gt; invoc&amp;aacute;ndola a trav&amp;eacute;s de una referencia que no sea &lt;code&gt;eval&lt;/code&gt; , a &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-10.4.2&quot;&gt;partir de ECMAScript 5&lt;/a&gt; funciona en el &amp;aacute;mbito global en lugar del &amp;aacute;mbito local. Esto significa, por ejemplo, que las declaraciones de funci&amp;oacute;n crean funciones globales y que el c&amp;oacute;digo que se eval&amp;uacute;a no tiene acceso a las variables locales dentro del &amp;aacute;mbito donde se llama.</target>
        </trans-unit>
        <trans-unit id="73d1c2ee0e60284da071d578e3277739538eefac" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;toExponential()&lt;/code&gt; method for a numeric literal and the numeric literal has no exponent and no decimal point, leave whitespace(s) before the dot that precedes the method call to prevent the dot from being interpreted as a decimal point.</source>
          <target state="translated">Si usa el m&amp;eacute;todo &lt;code&gt;toExponential()&lt;/code&gt; para un literal num&amp;eacute;rico y el literal num&amp;eacute;rico no tiene exponente ni punto decimal, deje espacios en blanco antes del punto que precede a la llamada al m&amp;eacute;todo para evitar que el punto se interprete como un punto decimal.</target>
        </trans-unit>
        <trans-unit id="597a2c20eb78f0898e472f8de984f91f02ea471c" translate="yes" xml:space="preserve">
          <source>If you want &lt;em&gt;all&lt;/em&gt; properties&amp;mdash;including non-enumerables&amp;mdash;see &lt;a href=&quot;getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d19c207f7baf216ddd324adb7472fc913a7eb3d" translate="yes" xml:space="preserve">
          <source>If you want all properties, even non-enumerables, see &lt;a href=&quot;getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si desea todas las propiedades, incluso las no enumerables, consulte &lt;a href=&quot;getownpropertynames&quot;&gt; &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2948b5beeb992bfbdd3d635cd05e062df02e23d7" translate="yes" xml:space="preserve">
          <source>If you want an array element to exist but have an undefined value, use the &lt;code&gt;undefined&lt;/code&gt; value instead of the &lt;code&gt;delete&lt;/code&gt; operator. In the following example, &lt;code&gt;trees[3]&lt;/code&gt; is assigned the value &lt;code&gt;undefined&lt;/code&gt;, but the array element still exists:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b17dbe4a9978e35e0df77cda82cc871d93e5145" translate="yes" xml:space="preserve">
          <source>If you want an array element to exist but have an undefined value, use the &lt;code&gt;undefined&lt;/code&gt; value instead of the &lt;code&gt;delete&lt;/code&gt; operator. In the following example, &lt;code&gt;trees[3]&lt;/code&gt; is assigned the value undefined, but the array element still exists:</source>
          <target state="translated">Si desea que exista un elemento de matriz pero tiene un valor indefinido, use el valor &lt;code&gt;undefined&lt;/code&gt; lugar del operador de &lt;code&gt;delete&lt;/code&gt; . En el siguiente ejemplo, a los &lt;code&gt;trees[3]&lt;/code&gt; se le asigna el valor indefinido, pero el elemento de la matriz a&amp;uacute;n existe:</target>
        </trans-unit>
        <trans-unit id="2418cdf14fe502c2af1708e66eb2202ca0a9648f" translate="yes" xml:space="preserve">
          <source>If you want only the enumerable properties, see &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;Object.keys()&lt;/code&gt;&lt;/a&gt; or use a &lt;a href=&quot;../../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop (although note that this will return enumerable properties not only found directly upon that object but also along the prototype chain for the object unless the latter is filtered with &lt;a href=&quot;hasownproperty&quot;&gt;&lt;code&gt;hasOwnProperty()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Si solo desea las propiedades enumerables, consulte &lt;a href=&quot;keys&quot;&gt; &lt;code&gt;Object.keys()&lt;/code&gt; &lt;/a&gt; o use un bucle &lt;a href=&quot;../../statements/for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt; (aunque tenga en cuenta que esto devolver&amp;aacute; propiedades enumerables no solo que se encuentran directamente en ese objeto sino tambi&amp;eacute;n a lo largo de la cadena de prototipos para el objeto a menos que el este &amp;uacute;ltimo se filtra con &lt;a href=&quot;hasownproperty&quot;&gt; &lt;code&gt;hasOwnProperty()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="39e653fdc0628060fb29f300dfac7bff4e0e7b80" translate="yes" xml:space="preserve">
          <source>If you want only the enumerable properties, see &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;Object.keys()&lt;/code&gt;&lt;/a&gt; or use a &lt;a href=&quot;../../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop (note that this will also return enumerable properties found along the prototype chain for the object unless the latter is filtered with &lt;a href=&quot;hasownproperty&quot;&gt;&lt;code&gt;hasOwnProperty()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081dc7a00575a1581dcf7b3a349ab503bed65012" translate="yes" xml:space="preserve">
          <source>If you want to change the value of &quot;arg&quot; in the function body, you can do so, but you do not need to declare the same variable again. In other words: you can omit the &lt;code&gt;let&lt;/code&gt; keyword. If you want to create a new variable, you need to rename it as conflicts with the function parameter already.</source>
          <target state="translated">Si desea cambiar el valor de &quot;arg&quot; en el cuerpo de la funci&amp;oacute;n, puede hacerlo, pero no es necesario que vuelva a declarar la misma variable. En otras palabras: puede omitir la palabra clave &lt;code&gt;let&lt;/code&gt; . Si desea crear una nueva variable, debe cambiarle el nombre porque ya entra en conflicto con el par&amp;aacute;metro de la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c5c69934f7bf2e4d350baba14d96404b2849e4d9" translate="yes" xml:space="preserve">
          <source>If you want to create an &lt;code&gt;&lt;a href=&quot;../global_objects/array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;&lt;a href=&quot;../global_objects/boolean&quot;&gt;Booleans&lt;/a&gt;&lt;/code&gt; from a mask you can use this code:</source>
          <target state="translated">Si desea crear una &lt;code&gt;&lt;a href=&quot;../global_objects/array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;../global_objects/boolean&quot;&gt;Booleans&lt;/a&gt;&lt;/code&gt; partir de una m&amp;aacute;scara, puede usar este c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="b4a31baeccc4d5cda15fdaad0b7733d54070608b" translate="yes" xml:space="preserve">
          <source>If you want to disallow setting a new prototype for your object, your handler's &lt;code&gt;setPrototypeOf&lt;/code&gt; method can either return &lt;code&gt;false&lt;/code&gt;, or it can throw an exception.</source>
          <target state="translated">Si desea no permitir la configuraci&amp;oacute;n de un nuevo prototipo para su objeto, el m&amp;eacute;todo &lt;code&gt;setPrototypeOf&lt;/code&gt; de su controlador puede devolver &lt;code&gt;false&lt;/code&gt; o lanzar una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8f4823c44fafa3ab81be841e2d53941d57b47410" translate="yes" xml:space="preserve">
          <source>If you want to export a single value or need a fallback value for a module, a default export can be used:</source>
          <target state="translated">Si desea exportar un valor individual o necesita un valor de reserva para un módulo,se puede utilizar una exportación por defecto:</target>
        </trans-unit>
        <trans-unit id="50cbe95c4ee11ee4d5865b13d455d501fdd62c86" translate="yes" xml:space="preserve">
          <source>If you want to obtain capture groups and the global flag is set, you need to use &lt;a href=&quot;../regexp/exec&quot;&gt;&lt;code&gt;RegExp.exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;matchall&quot;&gt;&lt;code&gt;String.prototype.matchAll()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27f9e5e25120e14455ea16bd96cef1e320218ef" translate="yes" xml:space="preserve">
          <source>If you want to refer to the current class inside the class body, you can create a &lt;em&gt;named class expression&lt;/em&gt;. The name is only visible within the scope of the class expression itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc47424fb527730f62198aaaa25c3348ff0fba7" translate="yes" xml:space="preserve">
          <source>If you want to refer to the current class inside the class body, you can create a named class expression. This name is only visible in the scope of the class expression itself.</source>
          <target state="translated">Si quieres referirte a la clase actual dentro del cuerpo de la clase,puedes crear una expresión de clase con nombre.Este nombre sólo es visible en el ámbito de la propia expresión de clase.</target>
        </trans-unit>
        <trans-unit id="481ba14f2f65c81318d305b87a92b52bfe033114" translate="yes" xml:space="preserve">
          <source>If you want to refer to the current function inside the function body, you need to create a named function expression. &lt;u&gt;&lt;strong&gt;This name is then local only to the function body (scope)&lt;/strong&gt;&lt;/u&gt;. This also avoids using the non-standard &lt;a href=&quot;../functions/arguments/callee&quot;&gt;&lt;code&gt;arguments.callee&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9597ad4f9e7ad14879829bc41d7ee7dd8599f31b" translate="yes" xml:space="preserve">
          <source>If you want to refer to the current function inside the function body, you need to create a named function expression. &lt;u&gt;&lt;strong&gt;This name is then local only to the function body (scope)&lt;/strong&gt;&lt;/u&gt;. This also avoids using the non-standard &lt;code&gt;&lt;a href=&quot;../functions/arguments/callee&quot;&gt;arguments.callee&lt;/a&gt;&lt;/code&gt; property.</source>
          <target state="translated">Si desea hacer referencia a la funci&amp;oacute;n actual dentro del cuerpo de la funci&amp;oacute;n, debe crear una expresi&amp;oacute;n de funci&amp;oacute;n con nombre. &lt;u&gt;&lt;strong&gt;Este nombre es local solo para el cuerpo de la funci&amp;oacute;n (alcance)&lt;/strong&gt;&lt;/u&gt; . Esto tambi&amp;eacute;n evita el uso de la propiedad &lt;code&gt;&lt;a href=&quot;../functions/arguments/callee&quot;&gt;arguments.callee&lt;/a&gt;&lt;/code&gt; no est&amp;aacute;ndar .</target>
        </trans-unit>
        <trans-unit id="99528303e4fa98874c6d3b7da8c65a874a1f9d0b" translate="yes" xml:space="preserve">
          <source>If you want to remove the getter, you can just &lt;a href=&quot;../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7fc22c8401e0f59ce33412d5d1a62fa14a2a8f0" translate="yes" xml:space="preserve">
          <source>If you want to remove the getter, you can just &lt;code&gt;&lt;a href=&quot;../operators/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; it:</source>
          <target state="translated">Si desea eliminar el captador, simplemente puede &lt;code&gt;&lt;a href=&quot;../operators/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e1fd57c263b80cc07ff24ec488e383d11e16fe7f" translate="yes" xml:space="preserve">
          <source>If you want to remove the setter, you can just &lt;a href=&quot;../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afab6a24815f73f4c694b81bf63bd41e2e5c193b" translate="yes" xml:space="preserve">
          <source>If you want to remove the setter, you can just &lt;code&gt;&lt;a href=&quot;../operators/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; it:</source>
          <target state="translated">Si desea eliminar el establecedor, simplemente puede &lt;code&gt;&lt;a href=&quot;../operators/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c7a8801610bdd961430a0f13ef356227a205175f" translate="yes" xml:space="preserve">
          <source>If you want to see how to use the &lt;code&gt;Object.defineProperty&lt;/code&gt; method with a &lt;em&gt;binary-flags-like&lt;/em&gt; syntax, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty/Additional_examples&quot;&gt;additional examples&lt;/a&gt;.</source>
          <target state="translated">Si desea ver c&amp;oacute;mo utilizar el m&amp;eacute;todo &lt;code&gt;Object.defineProperty&lt;/code&gt; con una sintaxis &lt;em&gt;similar a las banderas binarias&lt;/em&gt; , consulte &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty/Additional_examples&quot;&gt;ejemplos adicionales&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a33a81af4ee501f0c074526b9710c19c67c2ea6e" translate="yes" xml:space="preserve">
          <source>If you want to see how to use the &lt;code&gt;Object.defineProperty&lt;/code&gt; method with a &lt;em&gt;binary-flags-like&lt;/em&gt; syntax, see &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty/Additional_examples&quot;&gt;additional examples&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088b49e17dfc48492f7ae931aa8eea2f898fed94" translate="yes" xml:space="preserve">
          <source>If you want to use an ordered associative array in a cross-browser environment, use a &lt;a href=&quot;../global_objects/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; object if available, or simulate this structure with two separate arrays (one for the keys and the other for the values), or build an array of single-property objects, etc.</source>
          <target state="translated">Si desea utilizar una matriz asociativa ordenada en un entorno de varios navegadores, utilice un objeto &lt;a href=&quot;../global_objects/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; si est&amp;aacute; disponible, o simule esta estructura con dos matrices separadas (una para las claves y la otra para los valores), o cree una matriz de un solo -objetos de propiedad, etc.</target>
        </trans-unit>
        <trans-unit id="19381b630a3a814e91674608c14a389044af178b" translate="yes" xml:space="preserve">
          <source>If you were to provide an &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; as the second argument to &lt;code&gt;reduce()&lt;/code&gt;, the result would look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb5ffcd2b43a51e7c0b5d8ecc72c4f2fa812052" translate="yes" xml:space="preserve">
          <source>If you were to provide an initial value as the second argument to &lt;code&gt;reduce()&lt;/code&gt;, the result would look like this:</source>
          <target state="translated">Si tuviera que proporcionar un valor inicial como segundo argumento para &lt;code&gt;reduce()&lt;/code&gt; , el resultado se ver&amp;iacute;a as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="9641348677babae98e66baf7b0dc8fe9f67d1d9b" translate="yes" xml:space="preserve">
          <source>If you wish to await two or more promises in parallel, you must still use &lt;code&gt;Promise#then&lt;/code&gt;, as &lt;code&gt;parallel&lt;/code&gt; does in the example.</source>
          <target state="translated">Si desea esperar dos o m&amp;aacute;s promesas en paralelo, a&amp;uacute;n debe usar &lt;code&gt;Promise#then&lt;/code&gt; , como lo hace el &lt;code&gt;parallel&lt;/code&gt; en el ejemplo.</target>
        </trans-unit>
        <trans-unit id="c253c1c3b6acd6d4520eacac9b373475e00e1fb8" translate="yes" xml:space="preserve">
          <source>If you wish to inherit from multiple objects, then mixins are a possibility.</source>
          <target state="translated">Si desea heredar de múltiples objetos,entonces las mezclas son una posibilidad.</target>
        </trans-unit>
        <trans-unit id="b358a85c79019bc0c27a5e9a086df327f3612e47" translate="yes" xml:space="preserve">
          <source>If you wish to safely perform two or more jobs in parallel, you must await a call to &lt;code&gt;&lt;a href=&quot;../global_objects/promise/all&quot;&gt;Promise.all&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;../global_objects/promise/allsettled&quot;&gt;Promise.allSettled&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d85b069cf65c1056e4db1149435fcd8a68335dc" translate="yes" xml:space="preserve">
          <source>If you wish to support the use of a bound function only using &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;, or only by calling it, the target function must enforce that restriction.</source>
          <target state="translated">Si desea admitir el uso de una funci&amp;oacute;n vinculada solo usando &lt;a href=&quot;../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; , o solo llam&amp;aacute;ndolo, la funci&amp;oacute;n de destino debe hacer cumplir esa restricci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="28b16738f775180a66d096e17e9c0fac48e31c55" translate="yes" xml:space="preserve">
          <source>If you're experimenting with code in a web browser, such as the Firefox Web Console (&lt;strong&gt;Tools &lt;/strong&gt;&amp;gt;&lt;strong&gt; Web Developer &lt;/strong&gt;&amp;gt;&lt;strong&gt; Web Console&lt;/strong&gt;) and you 'Run' a definition of a class with the same name twice, you'll get a &lt;code&gt;SyntaxError: redeclaration of let &lt;em&gt;ClassName&lt;/em&gt;;&lt;/code&gt;. (See further discussion of this issue in &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1428672&quot;&gt;bug 1428672&lt;/a&gt;.) Doing something similar in Chrome Developer Tools gives you a message like &lt;code&gt;Uncaught SyntaxError: Identifier '&lt;em&gt;ClassName&lt;/em&gt;' has already been declared at &amp;lt;anonymous&amp;gt;:1:1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1718e56ab56bc63e9b5c1230d10ad98783a6bcb6" translate="yes" xml:space="preserve">
          <source>If your class is a derived class, the default constructor calls the parent constructor, passing along any arguments that were provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3ce3648420f55b4147d24cab187f467076e9ce" translate="yes" xml:space="preserve">
          <source>If your project uses packages that export ESM, you can also import them for side effects only. This will run the code in the package entry point file (and any files it imports) only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9752f0db065b6780513593f5577369639a2acaaf" translate="yes" xml:space="preserve">
          <source>If your regular expression uses the &quot;&lt;code&gt;g&lt;/code&gt;&quot; flag, you can use the &lt;code&gt;exec()&lt;/code&gt; method multiple times to find successive matches in the same string. When you do so, the search starts at the substring of &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt; specified by the regular expression's &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; property (&lt;a href=&quot;test&quot;&gt;&lt;code&gt;test()&lt;/code&gt;&lt;/a&gt; will also advance the &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; property). Note that the &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; property will not be reset when searching a different string, it will start its search at its existing &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d04674a5af9a41b5f728b702f2b91de19a7082" translate="yes" xml:space="preserve">
          <source>If your regular expression uses the &quot;&lt;code&gt;g&lt;/code&gt;&quot; flag, you can use the &lt;code&gt;exec()&lt;/code&gt; method multiple times to find successive matches in the same string. When you do so, the search starts at the substring of &lt;code&gt;str&lt;/code&gt; specified by the regular expression's &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; property (&lt;a href=&quot;test&quot;&gt;&lt;code&gt;test()&lt;/code&gt;&lt;/a&gt; will also advance the &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; property). Note that the &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; property will not be reset when searching a different string it will start its search at its existing &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; .</source>
          <target state="translated">Si su expresi&amp;oacute;n regular usa la bandera &quot; &lt;code&gt;g&lt;/code&gt; &quot;, puede usar el m&amp;eacute;todo &lt;code&gt;exec()&lt;/code&gt; varias veces para encontrar coincidencias sucesivas en la misma cadena. Cuando lo hace, la b&amp;uacute;squeda comienza en la subcadena de &lt;code&gt;str&lt;/code&gt; especificada por la propiedad &lt;a href=&quot;lastindex&quot;&gt; &lt;code&gt;lastIndex&lt;/code&gt; de&lt;/a&gt; la expresi&amp;oacute;n regular ( &lt;a href=&quot;test&quot;&gt; &lt;code&gt;test()&lt;/code&gt; &lt;/a&gt; tambi&amp;eacute;n avanzar&amp;aacute; la propiedad &lt;a href=&quot;lastindex&quot;&gt; &lt;code&gt;lastIndex&lt;/code&gt; &lt;/a&gt; ). Tenga en cuenta que la propiedad &lt;a href=&quot;lastindex&quot;&gt; &lt;code&gt;lastIndex&lt;/code&gt; &lt;/a&gt; no se restablecer&amp;aacute; cuando busque una cadena diferente, comenzar&amp;aacute; su b&amp;uacute;squeda en su &lt;a href=&quot;lastindex&quot;&gt; &lt;code&gt;lastIndex&lt;/code&gt; &lt;/a&gt; existente .</target>
        </trans-unit>
        <trans-unit id="3a9f12b1dc332abbb2f8fc8ea3de59b0640a4c8e" translate="yes" xml:space="preserve">
          <source>If your value array might grow into the tens of thousands, use a hybrid strategy: apply your function to chunks of the array at a time:</source>
          <target state="translated">Si tu matriz de valores puede crecer hasta las decenas de miles,usa una estrategia híbrida:aplica tu función a trozos de la matriz a la vez:</target>
        </trans-unit>
        <trans-unit id="00f07d80e0be0674f46c91673837e8b3acb3567d" translate="yes" xml:space="preserve">
          <source>Ignoring some returned values</source>
          <target state="translated">Ignorando algunos valores devueltos</target>
        </trans-unit>
        <trans-unit id="57f2c95b766adf67d35d720bd7a552837b1ff2f2" translate="yes" xml:space="preserve">
          <source>Illegal character</source>
          <target state="translated">Carácter ilegal</target>
        </trans-unit>
        <trans-unit id="bf8a946bee9899de71266d734c579d7b3e7c14a0" translate="yes" xml:space="preserve">
          <source>Immediately Invoked Function Expressions</source>
          <target state="translated">Expresiones de función inmediatamente invocadas</target>
        </trans-unit>
        <trans-unit id="0a98f9ab649d5842f0e2d4409933f707c73e764f" translate="yes" xml:space="preserve">
          <source>Implementation Progress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d77a4da59a498bc0526734d1d32ceaf44b25a12" translate="yes" xml:space="preserve">
          <source>Implementations may support other subsets, and requests will be negotiated against all available subset-representation combinations to find the best match. Two algorithms are available for this negotiation and selected by the &lt;code&gt;formatMatcher&lt;/code&gt; property: A &lt;a href=&quot;http://www.ecma-international.org/ecma-402/1.0/#BasicFormatMatcher&quot;&gt;fully specified &lt;code&gt;&quot;basic&quot;&lt;/code&gt; algorithm&lt;/a&gt; and an implementation-dependent &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; algorithm.</source>
          <target state="translated">Las implementaciones pueden admitir otros subconjuntos y las solicitudes se negociar&amp;aacute;n con todas las combinaciones de subconjunto-representaci&amp;oacute;n disponibles para encontrar la mejor coincidencia. Hay dos algoritmos disponibles para esta negociaci&amp;oacute;n y seleccionados por la propiedad &lt;code&gt;formatMatcher&lt;/code&gt; : un &lt;a href=&quot;http://www.ecma-international.org/ecma-402/1.0/#BasicFormatMatcher&quot;&gt;algoritmo &lt;/a&gt; &lt;code&gt;&quot;basic&quot;&lt;/code&gt; completamente especificado y un algoritmo de &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; dependiente de la implementaci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="9891b7f1f9d2e885ea5e7211c73846949ae5ce55" translate="yes" xml:space="preserve">
          <source>Implemented in JavaScript 1.0.</source>
          <target state="translated">Implementado en JavaScript 1.0.</target>
        </trans-unit>
        <trans-unit id="f33ba6d0736fb021c9fc01268c7a34b22e5f56c8" translate="yes" xml:space="preserve">
          <source>Implementing a &lt;code&gt;WeakMap&lt;/code&gt;-like class with a .clear() method</source>
          <target state="translated">Implementar una clase similar a &lt;code&gt;WeakMap&lt;/code&gt; con un m&amp;eacute;todo .clear ()</target>
        </trans-unit>
        <trans-unit id="0532eeb0dfeca745a29b54a058021727371ec22f" translate="yes" xml:space="preserve">
          <source>Implementing a WeakMap-like class with a .clear() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c749b374aeb24624ee8aa56bb696c115d5f5e9a5" translate="yes" xml:space="preserve">
          <source>Implementing basic set operations</source>
          <target state="translated">Ejecución de las operaciones del conjunto básico</target>
        </trans-unit>
        <trans-unit id="b88a338120312301e3ec4ab586557d6a7e9f0f33" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;Function.prototype.toString&lt;/code&gt; revision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380f227f10005ab46ff9c7c323b946317aa5a7e7" translate="yes" xml:space="preserve">
          <source>Implicit call:</source>
          <target state="translated">Llamada implícita:</target>
        </trans-unit>
        <trans-unit id="7cf7edc6eed680f670f1903e2fa95dffe98c8491" translate="yes" xml:space="preserve">
          <source>Implicit globals and outer function scope</source>
          <target state="translated">Los globos implícitos y el alcance de la función externa</target>
        </trans-unit>
        <trans-unit id="23dadb4aba4124154d197243dcf4d7ef8b8da923" translate="yes" xml:space="preserve">
          <source>Import a module for its side effects only</source>
          <target state="translated">Importar un módulo sólo para sus efectos secundarios</target>
        </trans-unit>
        <trans-unit id="c5b568ec8548086b4de521e5d8033aec1c934aac" translate="yes" xml:space="preserve">
          <source>Import a single export from a module</source>
          <target state="translated">Importar una sola exportación de un módulo</target>
        </trans-unit>
        <trans-unit id="a221101514292b5fcf882207fe6e9cbe5953924e" translate="yes" xml:space="preserve">
          <source>Import an entire module for side effects only, without importing anything. This runs the module's global code, but doesn't actually import any values.</source>
          <target state="translated">Importar un módulo entero sólo para efectos secundarios,sin importar nada.Esto ejecuta el código global del módulo,pero en realidad no importa ningún valor.</target>
        </trans-unit>
        <trans-unit id="6dba1b2f0c4295b30c790350d8885ab2810a087e" translate="yes" xml:space="preserve">
          <source>Import an entire module's contents</source>
          <target state="translated">Importar el contenido de un módulo completo</target>
        </trans-unit>
        <trans-unit id="b51d3f221713e66532ca8daeac5ec886156d5d57" translate="yes" xml:space="preserve">
          <source>Import an export with a more convenient alias</source>
          <target state="translated">Importar una exportación con un alias más conveniente</target>
        </trans-unit>
        <trans-unit id="478b4766b3a380867a3862a6ca8bdb0a668262eb" translate="yes" xml:space="preserve">
          <source>Import multiple exports from a module with convenient aliases.</source>
          <target state="translated">Importar múltiples exportaciones desde un módulo con cómodos alias.</target>
        </trans-unit>
        <trans-unit id="bd9c8faa833f0f94f37e3eaac33816aac5e508cc" translate="yes" xml:space="preserve">
          <source>Import multiple exports from module</source>
          <target state="translated">Importación de múltiples exportaciones del módulo</target>
        </trans-unit>
        <trans-unit id="2adb455832e9c0f94412f3522b3179fa5ada0ef0" translate="yes" xml:space="preserve">
          <source>Import the exported module correctly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4ecf2834d54b456e6157b4f56fd8d7bf4ecc2a" translate="yes" xml:space="preserve">
          <source>Import/Export mutable globals proposal</source>
          <target state="translated">Propuesta de importación/exportación de globos mutables</target>
        </trans-unit>
        <trans-unit id="102ff9d8f76a710f00d76cead3a7e8bba6f5cdfc" translate="yes" xml:space="preserve">
          <source>Importing defaults</source>
          <target state="translated">Importación de valores predeterminados</target>
        </trans-unit>
        <trans-unit id="f71dcbf6278006d50e621d3d0c3ded43630b6564" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../functions/arrow_functions&quot;&gt;arrow functions&lt;/a&gt;, &lt;code&gt;new.target&lt;/code&gt; is inherited from the surrounding scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a195036ba7dec4c4382e6cf6537c69752b0ed431" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../functions/arrow_functions&quot;&gt;arrow functions&lt;/a&gt;, &lt;code&gt;this&lt;/code&gt; retains the value of the enclosing lexical context's &lt;code&gt;this&lt;/code&gt;. In global code, it will be set to the global object:</source>
          <target state="translated">En &lt;a href=&quot;../functions/arrow_functions&quot;&gt;las funciones de flecha&lt;/a&gt; , &lt;code&gt;this&lt;/code&gt; retiene el valor de &lt;code&gt;this&lt;/code&gt; del contexto l&amp;eacute;xico adjunto . En el c&amp;oacute;digo global, se establecer&amp;aacute; en el objeto global:</target>
        </trans-unit>
        <trans-unit id="6c73f4538311a378c8c9424d32c3f8811910d419" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt; code, however, this will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">En el c&amp;oacute;digo de &lt;a href=&quot;../strict_mode&quot;&gt;modo estricto&lt;/a&gt; , sin embargo, esto arrojar&amp;aacute; un &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="82dc5204fd47b97a4c4e971fee4ed30a2687404c" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt; code, you can't use &quot;&lt;code&gt;let&lt;/code&gt;&quot; as a label name. It will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; (let is a reserved identifier).</source>
          <target state="translated">En el c&amp;oacute;digo de &lt;a href=&quot;../strict_mode&quot;&gt;modo estricto&lt;/a&gt; , no puede usar &quot; &lt;code&gt;let&lt;/code&gt; &quot; como nombre de etiqueta. &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; un SyntaxError (let es un identificador reservado).</target>
        </trans-unit>
        <trans-unit id="c6054ae0aa42f967abbaaff8c7c370a661682c9b" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;, attempting to add new properties to a non-extensible object throws a &lt;code&gt;TypeError&lt;/code&gt;. In sloppy mode, the addition of the &quot;x&quot; property is silently ignored.</source>
          <target state="translated">En &lt;a href=&quot;../strict_mode&quot;&gt;modo estricto&lt;/a&gt; , intentar agregar nuevas propiedades a un objeto no extensible arroja un &lt;code&gt;TypeError&lt;/code&gt; . En modo descuidado, la adici&amp;oacute;n de la propiedad &quot;x&quot; se ignora en silencio.</target>
        </trans-unit>
        <trans-unit id="af9aba5cd8d260931e6c60474eae352d67a9887b" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;, starting with ES2015, functions inside blocks are scoped to that block. Prior to ES2015, block-level functions were forbidden in strict mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216d48a6757220d152e7f994000123b4833e4e79" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;, the &lt;a href=&quot;../global_objects/function/caller&quot;&gt;&lt;code&gt;Function.caller&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/function/arguments&quot;&gt;&lt;code&gt;Function.arguments&lt;/code&gt;&lt;/a&gt; properties are used and shouldn't be. They are deprecated, because they leak the function caller, are non-standard, hard to optimize and potentially a performance-harmful feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ea4e9343d838f1294b3b7ae8cc65f8857960e3" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller&quot;&gt;&lt;code&gt;Function.caller&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/function/arguments&quot;&gt;&lt;code&gt;Function.arguments&lt;/code&gt;&lt;/a&gt; properties are used and shouldn't be. They are deprecated, because they leak the function caller, are non-standard, hard to optimize and potentially a performance-harmful feature.</source>
          <target state="translated">En &lt;a href=&quot;../strict_mode&quot;&gt;modo estricto&lt;/a&gt; , las propiedades &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller&quot;&gt; &lt;code&gt;Function.caller&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;../global_objects/function/arguments&quot;&gt; &lt;code&gt;Function.arguments&lt;/code&gt; &lt;/a&gt; se utilizan y no deber&amp;iacute;an. Est&amp;aacute;n en desuso porque filtran la funci&amp;oacute;n que llama, no son est&amp;aacute;ndar, son dif&amp;iacute;ciles de optimizar y son una caracter&amp;iacute;stica potencialmente da&amp;ntilde;ina para el rendimiento.</target>
        </trans-unit>
        <trans-unit id="9ae11f4b28ed355c17fb2cf7b60c3de003e3a4a0" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JavaScript&quot;&gt;JavaScript&lt;/a&gt;, identifiers can contain only alphanumeric characters (or &quot;$&quot; or &quot;_&quot;), and may not start with a digit. An identifier differs from a &lt;strong&gt;string&lt;/strong&gt; in that a string is data, while an identifier is part of the code.</source>
          <target state="translated">En &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JavaScript&quot;&gt;JavaScript&lt;/a&gt; , los identificadores solo pueden contener caracteres alfanum&amp;eacute;ricos (o &quot;$&quot; o &quot;_&quot;) y no pueden comenzar con un d&amp;iacute;gito. Un identificador se diferencia de una &lt;strong&gt;cadena&lt;/strong&gt; en que una cadena son datos, mientras que un identificador es parte del c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="b1cf0c9af0f3437de670684af61db176a2e024d0" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/JavaScript&quot;&gt;JavaScript&lt;/a&gt;, identifiers can contain only alphanumeric characters (or &quot;$&quot; or &quot;_&quot;), and may not start with a digit. An identifier differs from a &lt;strong&gt;string&lt;/strong&gt; in that a string is data, while an identifier is part of the code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ceac41023ca7e64457c2a69427be9598fb1653c" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;strict_mode&quot;&gt;strict mode&lt;/a&gt;, all browsers that support ES2015 handle this the same way: &lt;code&gt;zero&lt;/code&gt; is defined only if &lt;code&gt;shouldDefineZero&lt;/code&gt; is true, and only in the scope of the &lt;code&gt;if&lt;/code&gt;-block.</source>
          <target state="translated">En &lt;a href=&quot;strict_mode&quot;&gt;modo estricto&lt;/a&gt; , todos los navegadores que admiten ES2015 manejan esto de la misma manera: &lt;code&gt;zero&lt;/code&gt; se define solo si &lt;code&gt;shouldDefineZero&lt;/code&gt; es verdadero, y solo en el alcance del bloque &lt;code&gt;if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29666e4908ed732ae018d4d4721ff9754d3c167b" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;strict_mode&quot;&gt;strict mode&lt;/a&gt;, starting with ES2015, functions inside blocks are now scoped to that block. Prior to ES2015, block-level functions were forbidden in strict mode.</source>
          <target state="translated">En el &lt;a href=&quot;strict_mode&quot;&gt;modo estricto&lt;/a&gt; , comenzando con ES2015, las funciones dentro de los bloques ahora tienen como alcance ese bloque. Antes de ES2015, las funciones a nivel de bloque estaban prohibidas en modo estricto.</target>
        </trans-unit>
        <trans-unit id="873415a6a8f203e4bdfe8b79a65ee0b40b608117" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;concurrentPromise,&lt;/code&gt;&lt;code&gt;Promise.all&lt;/code&gt; wires up the promise chain in one go, meaning that the operation will fail-fast regardless of the order of rejection of the promises, and the error will always occur within the configured promise chain, enabling it to be caught in the normal way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221555bbaf990eeb6c49e029c703b9faa3ef204e" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;concurrentStart&lt;/code&gt;, both timers are created and then &lt;code&gt;await&lt;/code&gt;ed. The timers are running concurrently but the &lt;code&gt;await&lt;/code&gt; calls are still running in series, meaning the second &lt;code&gt;await&lt;/code&gt; will wait for the first one to finish. This leads the code to finish in 2 rather than 3 seconds, which is the time the slowest timer needs. The same happens in &lt;code&gt;stillConcurrent&lt;/code&gt; using &lt;code&gt;Promise.all&lt;/code&gt; this time.</source>
          <target state="translated">En &lt;code&gt;concurrentStart&lt;/code&gt; , se crean ambos temporizadores y luego se &lt;code&gt;await&lt;/code&gt; . Los temporizadores se ejecutan al mismo tiempo, pero las llamadas en &lt;code&gt;await&lt;/code&gt; todav&amp;iacute;a se ejecutan en serie, lo que significa que la segunda &lt;code&gt;await&lt;/code&gt; esperar&amp;aacute; a que termine la primera. Esto hace que el c&amp;oacute;digo finalice en 2 en lugar de 3 segundos, que es el tiempo que necesita el temporizador m&amp;aacute;s lento. Lo mismo sucede en &lt;code&gt;stillConcurrent&lt;/code&gt; usando &lt;code&gt;Promise.all&lt;/code&gt; este tiempo.</target>
        </trans-unit>
        <trans-unit id="dca20ace845e482ba3a705f727cc3a8ad77cf9d7" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;concurrentStart&lt;/code&gt;, both timers are created and then &lt;code&gt;await&lt;/code&gt;ed. The timers run concurrently, which means the code finishes in 2 rather than 3 seconds, i.e. the slowest timer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f97a7bbaeebe37b6849072c8d4d0a9f173528d" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;concurrentStart&lt;/code&gt;, if promise &lt;code&gt;fast&lt;/code&gt; rejects before promise &lt;code&gt;slow&lt;/code&gt; is fulfilled, then an unhandled promise rejection error will be raised, regardless of whether the caller has configured a catch clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7a6fe3cf2916c84be2ef5c18d5e7128c24c00e" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;for...of&lt;/code&gt; loops, abrupt iteration termination can be caused by &lt;code&gt;break&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt; or &lt;code&gt;return&lt;/code&gt;. In these cases, the iterator is closed.</source>
          <target state="translated">En &lt;code&gt;for...of&lt;/code&gt; bucles, la terminaci&amp;oacute;n abrupta de la iteraci&amp;oacute;n puede ser causada por &lt;code&gt;break&lt;/code&gt; , &lt;code&gt;continue&lt;/code&gt; , &lt;code&gt;throw&lt;/code&gt; o &lt;code&gt;return&lt;/code&gt; . En estos casos, el iterador est&amp;aacute; cerrado.</target>
        </trans-unit>
        <trans-unit id="f24173b93852ae7003f7140596ebc37c863720d7" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;for...of&lt;/code&gt; loops, abrupt iteration termination can be caused by &lt;code&gt;break&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt; or &lt;code&gt;return&lt;/code&gt;. In these cases, the iterator is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6add7a612b365f8147b939f3c6f66bc22b629f" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;sequentialStart&lt;/code&gt;, execution suspends 2 seconds for the first &lt;code&gt;await&lt;/code&gt;, and then again another 1 second for the second &lt;code&gt;await&lt;/code&gt;. The second timer is not created until the first has already fired.</source>
          <target state="translated">En &lt;code&gt;sequentialStart&lt;/code&gt; , la ejecuci&amp;oacute;n suspende 2 segundos para la primera &lt;code&gt;await&lt;/code&gt; y luego otro 1 segundo para la segunda &lt;code&gt;await&lt;/code&gt; . El segundo temporizador no se crea hasta que el primero ya se ha disparado.</target>
        </trans-unit>
        <trans-unit id="8ffa1771a0ac6f2ae699ccfcc00a18930b4b803c" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;sequentialStart&lt;/code&gt;, execution suspends 2 seconds for the first &lt;code&gt;await&lt;/code&gt;, and then another second for the second &lt;code&gt;await&lt;/code&gt;. The second timer is not created until the first has already fired, so the code finishes after 3 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176a20a11517113033606aab1e61e3d4ca20c6ad" translate="yes" xml:space="preserve">
          <source>In C, the &lt;code&gt;strcmp()&lt;/code&gt; function is used for comparing strings. In JavaScript, you just use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators&quot;&gt;less-than and greater-than operators&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309d60f8743568aecbdf811d2d351da393f4b34d" translate="yes" xml:space="preserve">
          <source>In ECMAScript 2015 There is a way to concisely define properties whose values are generator functions:</source>
          <target state="translated">En ECMAScript 2015 hay una forma de definir concisamente las propiedades cuyos valores son funciones generadoras:</target>
        </trans-unit>
        <trans-unit id="a8ee30c3781491b37d2d91aa12c3f275c2e033a0" translate="yes" xml:space="preserve">
          <source>In ECMAScript 2015, a shorthand notation is available, so that the keyword &quot;&lt;code&gt;function&lt;/code&gt;&quot; is no longer necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df1fd3d991e32f1320629672612245d3c92c0f7" translate="yes" xml:space="preserve">
          <source>In ECMAScript 2015, a shorthand notation is available, so that the keyword &quot;function&quot; is no longer necessary.</source>
          <target state="translated">En ECMAScript 2015,se dispone de una notación abreviada,por lo que la palabra clave &quot;función&quot; ya no es necesaria.</target>
        </trans-unit>
        <trans-unit id="fbe274850fe44af194eea5fda8294e245f5d4c8b" translate="yes" xml:space="preserve">
          <source>In ECMAScript 2015, there is a way to concisely define properties whose values are generator functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948177c7ae9848dd8e493ddbacacd75cb5473d9a" translate="yes" xml:space="preserve">
          <source>In ECMAScript 3/5, the &lt;code&gt;this&lt;/code&gt; issue was fixable by assigning the value in &lt;code&gt;this&lt;/code&gt; to a variable that could be closed over.</source>
          <target state="translated">En ECMAScript 3/5, &lt;code&gt;this&lt;/code&gt; problema se solucion&amp;oacute; asignando el valor en &lt;code&gt;this&lt;/code&gt; a una variable que podr&amp;iacute;a cerrarse.</target>
        </trans-unit>
        <trans-unit id="4fd06900882a105e2510f94e9cdbf294840e46f9" translate="yes" xml:space="preserve">
          <source>In ECMAScript 5 strict mode code, duplicate property names were considered a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;. With the introduction of computed property names making duplication possible at runtime, ECMAScript 2015 has removed this restriction.</source>
          <target state="translated">En el c&amp;oacute;digo de modo estricto de ECMAScript 5, los nombres de propiedad duplicados se consideraban un &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; . Con la introducci&amp;oacute;n de nombres de propiedades computados que hacen posible la duplicaci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n, ECMAScript 2015 ha eliminado esta restricci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="02e140d416437887a7872326dba6eed9437d2415" translate="yes" xml:space="preserve">
          <source>In ECMAScript 5, this behavior was changed for &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;. Assignment to an unqualified identifier in strict mode will result in a &lt;code&gt;ReferenceError&lt;/code&gt;, to avoid the accidental creation of properties on the global object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82de7fe847ca3c223f7295513a60c00f3cc6f251" translate="yes" xml:space="preserve">
          <source>In ES2015 with nested template literals:</source>
          <target state="translated">En ES2015 con literales de plantilla anidados:</target>
        </trans-unit>
        <trans-unit id="2e28d1359b78caea73bd201eb664d9160434980d" translate="yes" xml:space="preserve">
          <source>In ES2015 with template literals and without nesting:</source>
          <target state="translated">En ES2015 con literales de plantilla y sin anidar:</target>
        </trans-unit>
        <trans-unit id="f3672427c7965f113f3fe4cb570beacc248c8428" translate="yes" xml:space="preserve">
          <source>In ES2015, the class syntax allows for sub-classing of both built-in and user defined classes; as a result, static methods such as &lt;code&gt;Array.from&lt;/code&gt; are &quot;inherited&quot; by subclasses of &lt;code&gt;Array&lt;/code&gt; and create new instances of the subclass, not &lt;code&gt;Array&lt;/code&gt;.</source>
          <target state="translated">En ES2015, la sintaxis de clase permite la subclasificaci&amp;oacute;n de clases integradas y definidas por el usuario; como resultado, los m&amp;eacute;todos est&amp;aacute;ticos como &lt;code&gt;Array.from&lt;/code&gt; son &quot;heredados&quot; por subclases de &lt;code&gt;Array&lt;/code&gt; y crean nuevas instancias de la subclase, no &lt;code&gt;Array&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c41c52a21154ec2619b7bacc530a4f16cecd0dd3" translate="yes" xml:space="preserve">
          <source>In ES2015, the class syntax allows sub-classing of both built-in and user-defined classes. As a result, static methods such as &lt;code&gt;Array.from()&lt;/code&gt; are &quot;inherited&quot; by subclasses of &lt;code&gt;Array&lt;/code&gt;, and create new instances &lt;em&gt;of the subclass&lt;/em&gt;, not &lt;code&gt;Array&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef0e40b46bde57de45d710a8decfe4f424e88a4" translate="yes" xml:space="preserve">
          <source>In ES5, if the argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53864ec850c8528b35459bfdb64c830661afe252" translate="yes" xml:space="preserve">
          <source>In ES5, if the argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. In ES2015, a non-object argument will be coerced to an object.</source>
          <target state="translated">En ES5, si el argumento de este m&amp;eacute;todo no es un objeto (una primitiva), provocar&amp;aacute; un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; . En ES2015, un argumento que no es de objeto se convertir&amp;aacute; en un objeto.</target>
        </trans-unit>
        <trans-unit id="0030a6d3d27dbe9c4a6e9e4e06ecd6adb4308138" translate="yes" xml:space="preserve">
          <source>In ES5, if the argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. In ES2015, a non-object argument will be treated as if it was a frozen ordinary object, simply return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">En ES5, si el argumento de este m&amp;eacute;todo no es un objeto (una primitiva), provocar&amp;aacute; un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; . En ES2015, un argumento que no sea de objeto se tratar&amp;aacute; como si fuera un objeto ordinario congelado, simplemente devuelva &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ca534830639609923b78d052142ef445d9da986" translate="yes" xml:space="preserve">
          <source>In ES5, if the argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. In ES2015, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">En ES5, si el argumento de este m&amp;eacute;todo no es un objeto (una primitiva), provocar&amp;aacute; un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; . En ES2015, un argumento que no es de objeto se tratar&amp;aacute; como si fuera un objeto ordinario no extensible, simplemente devuelve &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bcfc35ed6e7f198824d6e0b0dcb22d3b293ba28" translate="yes" xml:space="preserve">
          <source>In ES5, if the argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. In ES2015, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return it.</source>
          <target state="translated">En ES5, si el argumento de este m&amp;eacute;todo no es un objeto (una primitiva), provocar&amp;aacute; un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; . En ES2015, un argumento que no sea de objeto se tratar&amp;aacute; como si fuera un objeto ordinario no extensible, simplemente devu&amp;eacute;lvalo.</target>
        </trans-unit>
        <trans-unit id="007cf956ed6956737327164237b3afece1b87b2b" translate="yes" xml:space="preserve">
          <source>In ES5, if the argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. In ES2015, a non-object argument will be treated as if it was a sealed ordinary object by simply returning it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d58ae111e6808420d9135fd6bfc1e632b51c47" translate="yes" xml:space="preserve">
          <source>In ES5, if the argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. In ES2015, a non-object argument will be treated as if it was a sealed ordinary object, simply return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">En ES5, si el argumento de este m&amp;eacute;todo no es un objeto (una primitiva), provocar&amp;aacute; un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; . En ES2015, un argumento que no es de objeto se tratar&amp;aacute; como si fuera un objeto ordinario sellado, simplemente devuelva &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a25f137ee01cf4301c10ca6fc3d32a3d19298e37" translate="yes" xml:space="preserve">
          <source>In ES5, if the argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. In ES2015, a non-object argument will be treated as if it was a sealed ordinary object, simply return it.</source>
          <target state="translated">En ES5, si el argumento de este m&amp;eacute;todo no es un objeto (una primitiva), provocar&amp;aacute; un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; . En ES2015, un argumento que no sea de objeto se tratar&amp;aacute; como si fuera un objeto ordinario sellado, simplemente devu&amp;eacute;lvalo.</target>
        </trans-unit>
        <trans-unit id="3d0bff99dd5b84da47050253c2c62698a5c39a02" translate="yes" xml:space="preserve">
          <source>In ES5, if the argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. In ES2015, a non-object argument will be treated as if it were a frozen ordinary object, and be simply returned.</source>
          <target state="translated">En ES5, si el argumento de este m&amp;eacute;todo no es un objeto (una primitiva), provocar&amp;aacute; un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; . En ES2015, un argumento que no es de objeto se tratar&amp;aacute; como si fuera un objeto ordinario congelado y simplemente se devolver&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="8598ec4f16e006f73c4b98ace30ef3c88220ab1a" translate="yes" xml:space="preserve">
          <source>In ES5, if the first argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. In ES2015, a non-object first argument will be coerced to an object at first.</source>
          <target state="translated">En ES5, si el primer argumento de este m&amp;eacute;todo no es un objeto (una primitiva), provocar&amp;aacute; un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; . En ES2015, un primer argumento que no sea de objeto ser&amp;aacute; forzado a un objeto al principio.</target>
        </trans-unit>
        <trans-unit id="e2c167c36d97c1d699b099b1ec68b4a0acdf0879" translate="yes" xml:space="preserve">
          <source>In ES5, it will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception if the &lt;var&gt;obj&lt;/var&gt; parameter isn't an object. In ES2015, the parameter will be coerced to an &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">En ES5, lanzar&amp;aacute; una excepci&amp;oacute;n &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; si el par&amp;aacute;metro &lt;var&gt;obj&lt;/var&gt; no es un objeto. En ES2015, el par&amp;aacute;metro se convertir&amp;aacute; en un &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e6d38ce849906adde58d4d32cd183bb3cd5e181f" translate="yes" xml:space="preserve">
          <source>In ES5, you typically use the &lt;a href=&quot;../function/apply&quot;&gt;&lt;code&gt;Function.prototype.apply()&lt;/code&gt;&lt;/a&gt; method to call a function with a given &lt;code&gt;this&lt;/code&gt; value and &lt;code&gt;arguments&lt;/code&gt; provided as an array (or an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Indexed_collections#Working_with_array-like_objects&quot;&gt;array-like object&lt;/a&gt;).</source>
          <target state="translated">En ES5, normalmente se utiliza el &lt;a href=&quot;../function/apply&quot;&gt; &lt;code&gt;Function.prototype.apply()&lt;/code&gt; &lt;/a&gt; m&amp;eacute;todo para llamar a una funci&amp;oacute;n con un dado &lt;code&gt;this&lt;/code&gt; valor y &lt;code&gt;arguments&lt;/code&gt; proporcionado como una matriz (o un &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Indexed_collections#Working_with_array-like_objects&quot;&gt;array-como objeto&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="7e6653f25dc7136aed24c5070c600b114c374f9a" translate="yes" xml:space="preserve">
          <source>In ES5, you typically use the &lt;a href=&quot;../function/apply&quot;&gt;&lt;code&gt;Function.prototype.apply()&lt;/code&gt;&lt;/a&gt; method to call a function with a given &lt;code&gt;this&lt;/code&gt; value and &lt;code&gt;arguments&lt;/code&gt; provided as an array (or an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Indexed_collections#Working_with_array-like_objects&quot;&gt;array-like object&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9d84f212ebfd0b494629810bc4f123430adee3" translate="yes" xml:space="preserve">
          <source>In ES5:</source>
          <target state="translated">En ES5:</target>
        </trans-unit>
        <trans-unit id="4867ea47a940c21ea6c6af42152c706a4ec82ba3" translate="yes" xml:space="preserve">
          <source>In Edge 12 and 13, &lt;code&gt;let&lt;/code&gt; within a &lt;code&gt;for&lt;/code&gt; loop initializer does not create a separate variable for each loop iteration as defined by ES2015. Instead, it behaves as though the loop were wrapped in a scoping block with the &lt;code&gt;let&lt;/code&gt; immediately before the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f05042b00889b690877f9c1f38bccf3790a39b" translate="yes" xml:space="preserve">
          <source>In Firefox 18 - 39, the name of this method was &lt;code&gt;contains()&lt;/code&gt;. It was renamed to &lt;code&gt;includes()&lt;/code&gt; in &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1102219&quot;&gt;bug 1102219&lt;/a&gt; due to the following reason:</source>
          <target state="translated">En Firefox 18 - 39, el nombre de este m&amp;eacute;todo era &lt;code&gt;contains()&lt;/code&gt; . Se le cambi&amp;oacute; el nombre a &lt;code&gt;includes()&lt;/code&gt; en el &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1102219&quot;&gt;error 1102219&lt;/a&gt; debido a la siguiente raz&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="b3441497965bb64df9474736353a9248115e770e" translate="yes" xml:space="preserve">
          <source>In Firefox 42, the implementation got updated to reflect the final ES2015 specification: The result is now checked if it is an array and if the array elements are either of type string or of type symbol. Enumerating duplicate own property names is not a failure anymore.</source>
          <target state="translated">En Firefox 42,la implementación se actualizó para reflejar la especificación final ES2015:Ahora se comprueba si se trata de una matriz y si los elementos de la matriz son de tipo cadena o de tipo símbolo.La enumeración de nombres de propiedades propias duplicadas ya no es un fallo.</target>
        </trans-unit>
        <trans-unit id="be8d03fdcab501aecd669f36c6937ea8fde7271a" translate="yes" xml:space="preserve">
          <source>In Firefox 48, &lt;code&gt;String.prototype.contains()&lt;/code&gt; has been removed. Use &lt;code&gt;String.prototype.includes()&lt;/code&gt; only.</source>
          <target state="translated">En Firefox 48, se ha eliminado &lt;code&gt;String.prototype.contains()&lt;/code&gt; . Utilice &lt;code&gt;String.prototype.includes()&lt;/code&gt; &amp;uacute;nicamente.</target>
        </trans-unit>
        <trans-unit id="6eab913afe11ef8c151060fcbf4894152ade8632" translate="yes" xml:space="preserve">
          <source>In Firefox 58, when the exception is unused, the identifier can be omitted, as in the code below. This is also &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-5.html&quot;&gt;allowed in TypeScript 2.5&lt;/a&gt; and later. However, at the time of this writing (August 2018), &lt;a href=&quot;https://github.com/tc39/proposal-optional-catch-binding&quot;&gt;the proposal to support this&lt;/a&gt; has not yet been included into an ECMAScript standard, so this syntax may not work in other browsers.</source>
          <target state="translated">En Firefox 58, cuando la excepci&amp;oacute;n no se utiliza, el identificador se puede omitir, como en el siguiente c&amp;oacute;digo. Esto tambi&amp;eacute;n est&amp;aacute; &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-5.html&quot;&gt;permitido en TypeScript 2.5&lt;/a&gt; y versiones posteriores. Sin embargo, en el momento de escribir este art&amp;iacute;culo (agosto de 2018), &lt;a href=&quot;https://github.com/tc39/proposal-optional-catch-binding&quot;&gt;la propuesta para respaldar esto&lt;/a&gt; a&amp;uacute;n no se ha incluido en un est&amp;aacute;ndar ECMAScript, por lo que es posible que esta sintaxis no funcione en otros navegadores.</target>
        </trans-unit>
        <trans-unit id="1730c0df30cd5ba97c5141ded4e91edebdb5d504" translate="yes" xml:space="preserve">
          <source>In Firefox, &lt;code&gt;handler&lt;/code&gt; is only called from assignments in script, not from native code. For example, &lt;code&gt;window.watch('location', myHandler)&lt;/code&gt; will not call &lt;code&gt;myHandler&lt;/code&gt; if the user clicks a link to an anchor within the current document. However, &lt;code&gt;window.location += '#myAnchor'&lt;/code&gt; will call &lt;code&gt;myHandler&lt;/code&gt;.</source>
          <target state="translated">En Firefox, el &lt;code&gt;handler&lt;/code&gt; solo se llama desde asignaciones en un script, no desde c&amp;oacute;digo nativo. Por ejemplo, &lt;code&gt;window.watch('location', myHandler)&lt;/code&gt; no llamar&amp;aacute; a &lt;code&gt;myHandler&lt;/code&gt; si el usuario hace clic en un enlace a un ancla dentro del documento actual. Sin embargo, &lt;code&gt;window.location += '#myAnchor'&lt;/code&gt; llamar&amp;aacute; a &lt;code&gt;myHandler&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20427e6f530262dedd1f66d1091224f92b38be66" translate="yes" xml:space="preserve">
          <source>In Firefox, the &lt;code&gt;privacy.reduceTimerPrecision&lt;/code&gt; preference is enabled by default and defaults to 20&amp;micro;s in Firefox 59; in 60 it will be 2ms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af97ad69484c392ea6d2c53e11669126d6b3def" translate="yes" xml:space="preserve">
          <source>In Firefox, the &lt;code&gt;privacy.reduceTimerPrecision&lt;/code&gt; preference is enabled by default and defaults to 20us in Firefox 59; in 60 it will be 2ms.</source>
          <target state="translated">En Firefox, la preferencia &lt;code&gt;privacy.reduceTimerPrecision&lt;/code&gt; est&amp;aacute; habilitada de forma predeterminada y su valor predeterminado es 20us en Firefox 59; en 60 ser&amp;aacute;n 2 ms.</target>
        </trans-unit>
        <trans-unit id="2760c20e75f06135284b55f675e6ca0ea87f3385" translate="yes" xml:space="preserve">
          <source>In Firefox, you can also enable &lt;code&gt;privacy.resistFingerprinting&lt;/code&gt;, the precision will be 100ms or the value of &lt;code&gt;privacy.resistFingerprinting.reduceTimerPrecision.microseconds&lt;/code&gt;, whichever is larger.</source>
          <target state="translated">En Firefox, tambi&amp;eacute;n puede habilitar &lt;code&gt;privacy.resistFingerprinting&lt;/code&gt; , la precisi&amp;oacute;n ser&amp;aacute; de 100ms o el valor de &lt;code&gt;privacy.resistFingerprinting.reduceTimerPrecision.microseconds&lt;/code&gt; , el que sea mayor.</target>
        </trans-unit>
        <trans-unit id="9c7ba06ca4f441cd2e83c2b7bd2b5b0d766466d1" translate="yes" xml:space="preserve">
          <source>In Firefox, you can also enabled &lt;code&gt;privacy.resistFingerprinting&lt;/code&gt;, the precision will be 100ms or the value of &lt;code&gt;privacy.resistFingerprinting.reduceTimerPrecision.microseconds&lt;/code&gt;, whichever is larger.</source>
          <target state="translated">En Firefox, tambi&amp;eacute;n puede habilitar &lt;code&gt;privacy.resistFingerprinting&lt;/code&gt; , la precisi&amp;oacute;n ser&amp;aacute; de 100 ms o el valor de &lt;code&gt;privacy.resistFingerprinting.reduceTimerPrecision.microseconds&lt;/code&gt; , lo que sea mayor.</target>
        </trans-unit>
        <trans-unit id="5b8bed5863664df70343acda1590937b7118915f" translate="yes" xml:space="preserve">
          <source>In Internet Explorer 11, numbers are rounded to 15 decimal digits. For example, &lt;code&gt;(1000000000000005).toLocaleString('en-US')&lt;/code&gt; returns &lt;code&gt;&quot;1,000,000,000,000,010&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ae8ad7d0e4ba6962d4b6f17b97388cf31cdc72" translate="yes" xml:space="preserve">
          <source>In Internet Explorer 8, this was only supported on DOM objects and with some non-standard behaviors. This was later fixed in Internet Explorer 9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db24d0846e3ba3185a867d8668c69a5571ec019" translate="yes" xml:space="preserve">
          <source>In Internet Explorer, &lt;code&gt;let&lt;/code&gt; within a &lt;code&gt;for&lt;/code&gt; loop initializer does not create a separate variable for each loop iteration as defined by ES2015. Instead, it behaves as though the loop were wrapped in a scoping block with the &lt;code&gt;let&lt;/code&gt; immediately before the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5615497b68ccaa1ea32d698e965d876cea2548f" translate="yes" xml:space="preserve">
          <source>In JSON the values can only be strings, numbers, arrays, &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, or another (JSON) object.</source>
          <target state="translated">En JSON, los valores solo pueden ser cadenas, n&amp;uacute;meros, matrices, &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; , &lt;code&gt;null&lt;/code&gt; u otro objeto (JSON).</target>
        </trans-unit>
        <trans-unit id="668b19b6452d0e28e81f530219de59631b89f0c9" translate="yes" xml:space="preserve">
          <source>In JavaScript, &lt;a href=&quot;../global_objects/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;s are not iterable unless they implement the &lt;a href=&quot;../iteration_protocols#The_iterable_protocol&quot;&gt;iterable protocol&lt;/a&gt;. Therefore, you cannot use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration#for...of_statement&quot;&gt;for&amp;hellip;of &lt;/a&gt;to iterate over the properties of an object.</source>
          <target state="translated">En JavaScript, los &lt;a href=&quot;../global_objects/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; no son iterables a menos que implementen el &lt;a href=&quot;../iteration_protocols#The_iterable_protocol&quot;&gt;protocolo iterable&lt;/a&gt; . Por lo tanto, no puede usar &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration#for...of_statement&quot;&gt;for ... of&lt;/a&gt; para iterar sobre las propiedades de un objeto.</target>
        </trans-unit>
        <trans-unit id="895cd1421cbf51353ea473367f38e162aabe3974" translate="yes" xml:space="preserve">
          <source>In JavaScript, &lt;a href=&quot;../global_objects/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;s are not iterable unless they implement the &lt;a href=&quot;../iteration_protocols#The_iterable_protocol&quot;&gt;iterable protocol&lt;/a&gt;. Therefore, you cannot use &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration#for...of_statement&quot;&gt;for&amp;hellip;of &lt;/a&gt;to iterate over the properties of an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2855ac845af4473bd3a6be21040f1c7e0ad7b25b" translate="yes" xml:space="preserve">
          <source>In JavaScript, a setter can be used to execute a function whenever a specified property is attempted to be changed. Setters are most often used in conjunction with getters to create a type of pseudo-property. It is not possible to simultaneously have a setter on a property that holds an actual value.</source>
          <target state="translated">En JavaScript,se puede utilizar un configurador para ejecutar una función siempre que se intente cambiar una propiedad especificada.Los setters se utilizan más a menudo en conjunto con los getters para crear un tipo de pseudo-propiedad.No es posible tener simultáneamente un setter en una propiedad que tiene un valor real.</target>
        </trans-unit>
        <trans-unit id="ca543fb85472cc8f29fc43d21952496053e3fecd" translate="yes" xml:space="preserve">
          <source>In JavaScript, function parameters default to &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;. However, it's often useful to set a different default value. This is where default parameters can help.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19c8d5903929df29ffd31d91bc12841578c097c" translate="yes" xml:space="preserve">
          <source>In JavaScript, function parameters default to &lt;code&gt;&lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;. However, it's often useful to set a different default value. This is where default parameters can help.</source>
          <target state="translated">En JavaScript, los par&amp;aacute;metros de funci&amp;oacute;n est&amp;aacute;n predeterminados como &lt;code&gt;&lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; . Sin embargo, a menudo es &amp;uacute;til establecer un valor predeterminado diferente. Aqu&amp;iacute; es donde los par&amp;aacute;metros predeterminados pueden ayudar.</target>
        </trans-unit>
        <trans-unit id="a20f27b3f1c13809f77edbf8f97737045dcbcf21" translate="yes" xml:space="preserve">
          <source>In JavaScript, functions are first-class objects, because they can have properties and methods just like any other object. What distinguishes them from other objects is that functions can be called. In brief, they are &lt;code&gt;&lt;a href=&quot;global_objects/function&quot;&gt;Function&lt;/a&gt;&lt;/code&gt; objects.</source>
          <target state="translated">En JavaScript, las funciones son objetos de primera clase, porque pueden tener propiedades y m&amp;eacute;todos como cualquier otro objeto. Lo que los distingue de otros objetos es que se pueden llamar funciones. En resumen, son objetos de &lt;code&gt;&lt;a href=&quot;global_objects/function&quot;&gt;Function&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0482de27c3e98ed79056a4c8e3487f1d9c7e2eb4" translate="yes" xml:space="preserve">
          <source>In JavaScript, there are several reduce functions:</source>
          <target state="translated">En JavaScript,hay varias funciones de reducción:</target>
        </trans-unit>
        <trans-unit id="4e500e271dd9c768e0229c1f8cd060c64d5a885f" translate="yes" xml:space="preserve">
          <source>In JavaScript, we can do this with the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67dd1e314b8d816c5d9c9ed86c33a7c3051041e8" translate="yes" xml:space="preserve">
          <source>In Promises</source>
          <target state="translated">En Promesas</target>
        </trans-unit>
        <trans-unit id="8753023eb7cfee3b18013db421fe39f22ac9cfb7" translate="yes" xml:space="preserve">
          <source>In UTF-16, the most common characters can be represented by a single 16-bit value (i.e. a code unit). However, this set of characters, known as the Base Multilingual Plane (BMP), is only &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;17&lt;/sub&gt;&lt;sup&gt;th&lt;/sup&gt; of the total addressable Unicode code points. The remaining code points, in the range of &lt;code&gt;65536&lt;/code&gt; (&lt;code&gt;0x010000&lt;/code&gt;) to &lt;code&gt;1114111&lt;/code&gt; (&lt;code&gt;0x10FFFF&lt;/code&gt;) are known as supplementary characters. In UTF-16, supplementary characters are represented by two 16-bit code units, known as surrogates, that were reserved for this purpose. A valid combination of two surrogates used to represent a supplementary character is known as a surrogate pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af0213442e56d88e4f08027d4396f1d413cc06e" translate="yes" xml:space="preserve">
          <source>In Unicode, two sequences of code points are compatible if they represent the same abstract characters, and should be treated alike in some &amp;mdash; but not necessarily all &amp;mdash; applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fcf052ca7ee2994caca99f7c2a53bdfa453a22" translate="yes" xml:space="preserve">
          <source>In Unicode, two sequences of code points have canonical equivalence if they represent the same abstract characters, and should always have the same visual appearance and behavior (for example, they should always be sorted in the same way).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ccea940dd72f9de64442358a3ee98e6136515f" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loop, it jumps to the update expression.</source>
          <target state="translated">En un bucle &lt;a href=&quot;for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt; , salta a la expresi&amp;oacute;n de actualizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f0090629de3eb7e932efc2299ea2b0e11274be76" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;while&quot;&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt; loop, it jumps back to the condition.</source>
          <target state="translated">En un &lt;a href=&quot;while&quot;&gt; &lt;code&gt;while&lt;/code&gt; &lt;/a&gt; de bucle, salta de nuevo a la condici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="802ad80650674fefbc5baab939de5d45ff49c037" translate="yes" xml:space="preserve">
          <source>In a case where you want to store an object created by your user and allowing it to be restored even after the browser has been closed, the following example is a model for the applicability of &lt;code&gt;JSON.stringify()&lt;/code&gt;:</source>
          <target state="translated">En el caso de que desee almacenar un objeto creado por su usuario y permitir que se restaure incluso despu&amp;eacute;s de que se haya cerrado el navegador, el siguiente ejemplo es un modelo para la aplicabilidad de &lt;code&gt;JSON.stringify()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b974b8e0c8cc3adb8992389d2d0a1cd08b75c03c" translate="yes" xml:space="preserve">
          <source>In a circular structure like the following</source>
          <target state="translated">En una estructura circular como la siguiente</target>
        </trans-unit>
        <trans-unit id="9a9eae68242ed66a24716ccc35563a64f014c279" translate="yes" xml:space="preserve">
          <source>In a concise body, only an expression is specified, which becomes the implicit return value. In a block body, you must use an explicit &lt;code&gt;return&lt;/code&gt; statement.</source>
          <target state="translated">En un cuerpo conciso, solo se especifica una expresi&amp;oacute;n, que se convierte en el valor de retorno impl&amp;iacute;cito. En un cuerpo de bloque, debe utilizar una declaraci&amp;oacute;n de &lt;code&gt;return&lt;/code&gt; expl&amp;iacute;cita .</target>
        </trans-unit>
        <trans-unit id="e4f1b8f09e11f544c05027c4ef2b7cb80ca9f74d" translate="yes" xml:space="preserve">
          <source>In a derived collection object (e.g. your custom array &lt;code&gt;MyArray&lt;/code&gt;), the &lt;code&gt;MyArray&lt;/code&gt; species is the &lt;code&gt;MyArray&lt;/code&gt; constructor. However, you might want to overwrite this, in order to return parent &lt;code&gt;Array&lt;/code&gt; objects in your derived class methods:</source>
          <target state="translated">En un objeto de colecci&amp;oacute;n derivado (por ejemplo, su matriz personalizada &lt;code&gt;MyArray&lt;/code&gt; ), la especie &lt;code&gt;MyArray&lt;/code&gt; es el constructor &lt;code&gt;MyArray&lt;/code&gt; . Sin embargo, es posible que desee sobrescribir esto, para devolver objetos de &lt;code&gt;Array&lt;/code&gt; principal en sus m&amp;eacute;todos de clase derivada:</target>
        </trans-unit>
        <trans-unit id="cf6e2e091bde1b1e25306a26d58b0ccc4c15bee3" translate="yes" xml:space="preserve">
          <source>In a derived collection object (e.g. your custom array buffer &lt;code&gt;MyArrayBuffer&lt;/code&gt;), the &lt;code&gt;MyArrayBuffer&lt;/code&gt; species is the &lt;code&gt;MyArrayBuffer&lt;/code&gt; constructor. However, you might want to overwrite this, in order to return parent &lt;code&gt;ArrayBuffer&lt;/code&gt; objects in your derived class methods:</source>
          <target state="translated">En un objeto de colecci&amp;oacute;n derivado (por ejemplo, su b&amp;uacute;fer de matriz personalizado &lt;code&gt;MyArrayBuffer&lt;/code&gt; ), la especie &lt;code&gt;MyArrayBuffer&lt;/code&gt; es el constructor &lt;code&gt;MyArrayBuffer&lt;/code&gt; . Sin embargo, es posible que desee sobrescribir esto para devolver los objetos principales &lt;code&gt;ArrayBuffer&lt;/code&gt; en sus m&amp;eacute;todos de clase derivada:</target>
        </trans-unit>
        <trans-unit id="8676f845dcd23c9b49f4af2f5389c64e7e8218ba" translate="yes" xml:space="preserve">
          <source>In a derived collection object (e.g. your custom map &lt;code&gt;MyMap&lt;/code&gt;), the &lt;code&gt;MyMap&lt;/code&gt; species is the &lt;code&gt;MyMap&lt;/code&gt; constructor. However, you might want to overwrite this, in order to return parent &lt;code&gt;Map&lt;/code&gt; objects in your derived class methods:</source>
          <target state="translated">En un objeto de colecci&amp;oacute;n derivado (por ejemplo, su mapa personalizado &lt;code&gt;MyMap&lt;/code&gt; ), la especie &lt;code&gt;MyMap&lt;/code&gt; es el constructor &lt;code&gt;MyMap&lt;/code&gt; . Sin embargo, es posible que desee sobrescribir esto para devolver objetos de &lt;code&gt;Map&lt;/code&gt; principales en sus m&amp;eacute;todos de clase derivada:</target>
        </trans-unit>
        <trans-unit id="6a21922d4d45a039d44b74194264a3b6620d0aa9" translate="yes" xml:space="preserve">
          <source>In a derived collection object (e.g. your custom regexp &lt;code&gt;MyRegExp&lt;/code&gt;), the &lt;code&gt;MyRegExp&lt;/code&gt; species is the &lt;code&gt;MyRegExp&lt;/code&gt; constructor. However, you might want to overwrite this, in order to return parent &lt;code&gt;RegExp&lt;/code&gt; objects in your derived class methods:</source>
          <target state="translated">En un objeto de colecci&amp;oacute;n derivado (por ejemplo, su &lt;code&gt;MyRegExp&lt;/code&gt; personalizada MyRegExp ), la especie &lt;code&gt;MyRegExp&lt;/code&gt; es el constructor &lt;code&gt;MyRegExp&lt;/code&gt; . Sin embargo, es posible que desee sobrescribir esto para devolver objetos &lt;code&gt;RegExp&lt;/code&gt; principales en sus m&amp;eacute;todos de clase derivada:</target>
        </trans-unit>
        <trans-unit id="a1c37cca7fcf5c973f743b17eb0dd855d1eeaf6f" translate="yes" xml:space="preserve">
          <source>In a derived collection object (e.g. your custom set &lt;code&gt;MySet&lt;/code&gt;), the &lt;code&gt;MySet&lt;/code&gt; species is the &lt;code&gt;MySet&lt;/code&gt; constructor. However, you might want to overwrite this, in order to return parent &lt;code&gt;Set&lt;/code&gt; objects in your derived class methods:</source>
          <target state="translated">En un objeto de colecci&amp;oacute;n derivado (por ejemplo, su conjunto personalizado &lt;code&gt;MySet&lt;/code&gt; ), la especie &lt;code&gt;MySet&lt;/code&gt; es el constructor &lt;code&gt;MySet&lt;/code&gt; . Sin embargo, es posible que desee sobrescribir esto para devolver los objetos &lt;code&gt;Set&lt;/code&gt; principales en sus m&amp;eacute;todos de clase derivada:</target>
        </trans-unit>
        <trans-unit id="1133b3da65f4298a37b3e1fc081e7c925554e075" translate="yes" xml:space="preserve">
          <source>In a derived collection object (e.g. your custom typed array &lt;code&gt;MyTypedArray&lt;/code&gt;), the &lt;code&gt;MyTypedArray&lt;/code&gt; species is the &lt;code&gt;MyTypedArray&lt;/code&gt; constructor. However, you might want to overwrite this, in order to return a parent &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array&lt;/a&gt; object in your derived class methods:</source>
          <target state="translated">En un objeto de colecci&amp;oacute;n derivado (por ejemplo, su matriz &lt;code&gt;MyTypedArray&lt;/code&gt; con tipo personalizado ), la especie &lt;code&gt;MyTypedArray&lt;/code&gt; es el constructor &lt;code&gt;MyTypedArray&lt;/code&gt; . Sin embargo, es posible que desee sobrescribir esto para devolver un objeto de &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;matriz con tipo&lt;/a&gt; primario en sus m&amp;eacute;todos de clase derivada:</target>
        </trans-unit>
        <trans-unit id="2ce247dad140e8fba2d68c52d0b5deed3560020a" translate="yes" xml:space="preserve">
          <source>In a derived collection object (e.g. your custom typed array &lt;code&gt;MyTypedArray&lt;/code&gt;), the &lt;code&gt;MyTypedArray&lt;/code&gt; species is the &lt;code&gt;MyTypedArray&lt;/code&gt; constructor. However, you might want to overwrite this, in order to return a parent &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;typed array&lt;/a&gt; object in your derived class methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350adacc4d9e715c786318e8468e47b1e9d05e5a" translate="yes" xml:space="preserve">
          <source>In a module &lt;code&gt;my-module.js&lt;/code&gt;, we could include the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340c77fb144b30a4542ea8a0c0d5a2ac8c4b516d" translate="yes" xml:space="preserve">
          <source>In a non-constructor context (i.e., without the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator), &lt;code&gt;Number&lt;/code&gt; can be used to perform a type conversion.</source>
          <target state="translated">En un contexto de no constructor (es decir, sin el operador &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; ), se puede usar &lt;code&gt;Number&lt;/code&gt; para realizar una conversi&amp;oacute;n de tipo.</target>
        </trans-unit>
        <trans-unit id="e7dda02a1acb072f90af69f2907af38348fc815a" translate="yes" xml:space="preserve">
          <source>In a related circumstance, what if you actually wanted your &lt;code&gt;Date()&lt;/code&gt; function to be able to be called from the code inside &lt;code&gt;Function()&lt;/code&gt;. Should you just take the easy way out and fall back to &lt;code&gt;eval()&lt;/code&gt;? No! Never. Instead try the approach below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810fedbd7d3efd9acd82311336fa539410213dc0" translate="yes" xml:space="preserve">
          <source>In a related circumstance, what if you actually wanted your &lt;code&gt;Date&lt;/code&gt; function to be able to be called from the code inside &lt;code&gt;Function()&lt;/code&gt;. Should you just wimp out and fall back to &lt;code&gt;eval()&lt;/code&gt;? Absolutely not, never ever. Instead try the approach below.</source>
          <target state="translated">En una circunstancia relacionada, &amp;iquest;qu&amp;eacute; suceder&amp;iacute;a si realmente quisiera que su funci&amp;oacute;n &lt;code&gt;Date&lt;/code&gt; pueda ser llamada desde el c&amp;oacute;digo dentro de &lt;code&gt;Function()&lt;/code&gt; ? &amp;iquest;Deber&amp;iacute;a debilitarse y volver a &lt;code&gt;eval()&lt;/code&gt; ? Absolutamente no, nunca jam&amp;aacute;s. En su lugar, pruebe el enfoque a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b2fc3d6faac50dc84e09287729aea3901d7164ff" translate="yes" xml:space="preserve">
          <source>In a word: Don't.</source>
          <target state="translated">En una palabra:No lo hagas.</target>
        </trans-unit>
        <trans-unit id="3a3bc3b6e0682977940132c5c77dc0be406db238" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Whitespace&quot;&gt;white space&lt;/a&gt; characters, line terminator characters are used to improve the readability of the source text. However, in some cases, line terminators can influence the execution of JavaScript code as there are a few places where they are forbidden. Line terminators also affect the process of &lt;a href=&quot;#Automatic_semicolon_insertion&quot;&gt;automatic semicolon insertion&lt;/a&gt;. Line terminators are matched by the &lt;strong&gt;\s&lt;/strong&gt; class in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;regular expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45902b9c216bd387d2fe70315207b8d21f3b38a8" translate="yes" xml:space="preserve">
          <source>In addition to methods to read and alter individual components of the local date and time (such as &lt;a href=&quot;date/getday&quot;&gt;&lt;code&gt;getDay()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;date/sethours&quot;&gt;&lt;code&gt;setHours()&lt;/code&gt;&lt;/a&gt;), there are also versions of the same methods that read and manipulate the date and time using UTC (such as &lt;a href=&quot;date/getutcday&quot;&gt;&lt;code&gt;getUTCDay()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;date/setutchours&quot;&gt;&lt;code&gt;setUTCHours()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae3ca63d02d68155e6bfd686d4025760d2e921e" translate="yes" xml:space="preserve">
          <source>In addition to white space characters, line terminator characters are used to improve the readability of the source text. However, in some cases, line terminators can influence the execution of JavaScript code as there are a few places where they are forbidden. Line terminators also affect the process of &lt;a href=&quot;#Automatic_semicolon_insertion&quot;&gt;automatic semicolon insertion&lt;/a&gt;. Line terminators are matched by the &lt;strong&gt;\s&lt;/strong&gt; class in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;regular expressions&lt;/a&gt;.</source>
          <target state="translated">Adem&amp;aacute;s de los espacios en blanco, los caracteres de terminaci&amp;oacute;n de l&amp;iacute;nea se utilizan para mejorar la legibilidad del texto fuente. Sin embargo, en algunos casos, los terminadores de l&amp;iacute;nea pueden influir en la ejecuci&amp;oacute;n del c&amp;oacute;digo JavaScript, ya que hay algunos lugares donde est&amp;aacute;n prohibidos. Los terminadores de l&amp;iacute;nea tambi&amp;eacute;n afectan el proceso de &lt;a href=&quot;#Automatic_semicolon_insertion&quot;&gt;inserci&amp;oacute;n autom&amp;aacute;tica de punto y coma&lt;/a&gt; . Los terminadores de l&amp;iacute;nea coinciden con la clase &lt;strong&gt;\ s&lt;/strong&gt; en &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;expresiones regulares&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d1dbbf23ea13be77ce53036651bf06faa4f98b65" translate="yes" xml:space="preserve">
          <source>In addition to your own symbols, JavaScript has some built-in symbols which represent internal language behaviors which were not exposed to developers in ECMAScript 5 and before. These symbols can be accessed using the following properties:</source>
          <target state="translated">Además de sus propios símbolos,JavaScript tiene algunos símbolos incorporados que representan comportamientos internos del lenguaje que no fueron expuestos a los desarrolladores en ECMAScript 5 y antes.Se puede acceder a estos símbolos usando las siguientes propiedades:</target>
        </trans-unit>
        <trans-unit id="541fce84d020f8e809b1424cc43c2d8605b35d86" translate="yes" xml:space="preserve">
          <source>In addition, since true iterables cannot be polyfilled, this implementation does not support generic iterables as defined in the 6&lt;sup&gt;th&lt;/sup&gt; Edition of ECMA-262.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772f53b7684325c70c59fb803ea949efc447df73" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;a href=&quot;global_objects/string/raw&quot;&gt;&lt;code&gt;String.raw()&lt;/code&gt;&lt;/a&gt; method exists to create raw strings just like the default template function and string concatenation would create.</source>
          <target state="translated">Adem&amp;aacute;s, el m&amp;eacute;todo &lt;a href=&quot;global_objects/string/raw&quot;&gt; &lt;code&gt;String.raw()&lt;/code&gt; &lt;/a&gt; existe para crear cadenas sin procesar tal como lo har&amp;iacute;a la funci&amp;oacute;n de plantilla predeterminada y la concatenaci&amp;oacute;n de cadenas.</target>
        </trans-unit>
        <trans-unit id="afdac2e1c883f1486c41d87b72385f76020d0b90" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;a href=&quot;global_objects/string/raw&quot;&gt;&lt;code&gt;String.raw()&lt;/code&gt;&lt;/a&gt; method exists to create raw strings&amp;mdash;just like the default template function and string concatenation would create.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6c8d3bc5587fba3a2992288ddc497a933c9e1d" translate="yes" xml:space="preserve">
          <source>In addition, you can use it to disable code to prevent it from running, by wrapping code in a comment, like this:</source>
          <target state="translated">Además,puedes usarlo para desactivar el código para evitar que se ejecute,envolviendo el código en un comentario,como este:</target>
        </trans-unit>
        <trans-unit id="3895a9d4c10daddb44b0baf3cea41b98e617fe5c" translate="yes" xml:space="preserve">
          <source>In all cases, the returned promise is fulfilled with an array containing &lt;strong&gt;all &lt;/strong&gt;the values of the &lt;var&gt;iterable&lt;/var&gt; passed as argument (also non-promise values).</source>
          <target state="translated">En todos los casos, la promesa devuelta se cumple con una matriz que contiene &lt;strong&gt;todos&lt;/strong&gt; los valores del &lt;var&gt;iterable&lt;/var&gt; pasado como argumento (tambi&amp;eacute;n valores que no son de promesa).</target>
        </trans-unit>
        <trans-unit id="c81b508fa4aa4f5e76e7a5fb07f3df97a3e6e267" translate="yes" xml:space="preserve">
          <source>In all other cases, a resolving Promise is returned. In the following example, the first &lt;code&gt;then()&lt;/code&gt; will return &lt;code&gt;42&lt;/code&gt; wrapped in a resolving Promise even though the previous Promise in the chain was rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2e12a377e763cd095116ed09fef665af7281bf" translate="yes" xml:space="preserve">
          <source>In all other cases, a resolving Promise is returned. In the following example, the first &lt;code&gt;then()&lt;/code&gt; will return &lt;code&gt;42&lt;/code&gt; wrapped resolving Promise even though the previous Promise in the chain was rejected.</source>
          <target state="translated">En todos los dem&amp;aacute;s casos, se devuelve una Promesa en resoluci&amp;oacute;n. En el siguiente ejemplo, el primero &lt;code&gt;then()&lt;/code&gt; devolver&amp;aacute; &lt;code&gt;42&lt;/code&gt; Promesa de resoluci&amp;oacute;n envuelta aunque la Promesa anterior en la cadena fue rechazada.</target>
        </trans-unit>
        <trans-unit id="4f386d0fd63e7041445027553d8387adba4f48a3" translate="yes" xml:space="preserve">
          <source>In an ECMAScript 2016 environment which allows destructured assignment, the following is a more succinct and somewhat more flexible alternative in that it does increment for an incrementing variable automatically (if the character warrants it in being a surrogate pair).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b003a314ef1e4fb418bf66b8bc466ac14403b108" translate="yes" xml:space="preserve">
          <source>In an ECMAScript 2016 environment which allows destructured assignment, the following is a more succinct and somewhat more flexible alternative in that it does incrementing for an incrementing variable automatically (if the character warrants it in being a surrogate pair).</source>
          <target state="translated">En un entorno ECMAScript 2016 que permite una asignación desestructurada,la siguiente es una alternativa más sucinta y algo más flexible en el sentido de que hace el incremento para una variable de incremento automáticamente (si el personaje lo justifica al ser un par sustituto).</target>
        </trans-unit>
        <trans-unit id="6ae1d411c5185e7a3f1b56084729d3af21f20494" translate="yes" xml:space="preserve">
          <source>In an inline event handler</source>
          <target state="translated">En un manejador de eventos en línea</target>
        </trans-unit>
        <trans-unit id="15a234979acf5c85ed72ab3a44cfa7cf0c039e37" translate="yes" xml:space="preserve">
          <source>In basic use without specifying a locale, &lt;code&gt;DateTimeFormat&lt;/code&gt; uses the default locale and default options.</source>
          <target state="translated">En el uso b&amp;aacute;sico sin especificar una configuraci&amp;oacute;n regional, &lt;code&gt;DateTimeFormat&lt;/code&gt; usa la configuraci&amp;oacute;n regional predeterminada y las opciones predeterminadas.</target>
        </trans-unit>
        <trans-unit id="6c8fca8d2d4d72fbc7ff12349b16baad5284d084" translate="yes" xml:space="preserve">
          <source>In basic use without specifying a locale, a formatted string in the default locale and with default options is returned.</source>
          <target state="translated">En el uso básico sin especificar una localización,se devuelve una cadena formateada en la localización predeterminada y con opciones predeterminadas.</target>
        </trans-unit>
        <trans-unit id="e30dc2f73ac6e65084e81c106ff21218b79a2446" translate="yes" xml:space="preserve">
          <source>In basic use without specifying a locale, a formatted string in the default locale and with default options is returned. This is useful to distinguish between singular and plural forms, e.g. &quot;dog&quot; and &quot;dogs&quot;.</source>
          <target state="translated">En el uso básico sin especificar una localización,se devuelve una cadena formateada en la localización predeterminada y con opciones predeterminadas.Esto es útil para distinguir entre formas singulares y plurales,por ejemplo,&quot;perro&quot; y &quot;perros&quot;.</target>
        </trans-unit>
        <trans-unit id="4e6edcf1e99e27f4a3c003689651a55d0701af0f" translate="yes" xml:space="preserve">
          <source>In both, &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt; and sloppy mode, a call to &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; throws when adding a new property to a non-extensible object.</source>
          <target state="translated">Tanto en &lt;a href=&quot;../strict_mode&quot;&gt;modo estricto como en modo&lt;/a&gt; descuidado, se lanza una llamada a &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; al agregar una nueva propiedad a un objeto no extensible.</target>
        </trans-unit>
        <trans-unit id="1c5b208d6a1696deaa27e5631e305def887a5f0d" translate="yes" xml:space="preserve">
          <source>In browser versions supporting named capturing groups, will be an object whose keys are the used group names, and whose values are the matched portions (&lt;code&gt;undefined&lt;/code&gt; if not matched).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212201f4cd8f19efb2a09bdffc69dc9cf7ec33b3" translate="yes" xml:space="preserve">
          <source>In browsers which support named capturing groups, the following code captures &quot;&lt;code&gt;fox&lt;/code&gt;&quot; or &quot;&lt;code&gt;cat&lt;/code&gt;&quot; into a group named &quot;&lt;code&gt;animal&lt;/code&gt;&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fec9e70a7a8e5a0b462b870bc9aad4fb731e521" translate="yes" xml:space="preserve">
          <source>In case of an error, for example if a property is non-writable, a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised, and the &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; object is changed if any properties are added before the error is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c53b39ddf5eb1e541cbcb2fd25d92feed9aab69" translate="yes" xml:space="preserve">
          <source>In case of an error, for example if a property is non-writable, a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be raised, and the &lt;code&gt;target&lt;/code&gt; object can be changed if any properties are added before error is raised.</source>
          <target state="translated">En caso de error, por ejemplo, si una propiedad no se puede escribir, se generar&amp;aacute; un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; y el objeto de &lt;code&gt;target&lt;/code&gt; se puede cambiar si se agregan propiedades antes de que se genere el error.</target>
        </trans-unit>
        <trans-unit id="2715483284a25ba548ae565967fe75b81647c6bb" translate="yes" xml:space="preserve">
          <source>In certain cases, nesting a template is the easiest (and perhaps more readable) way to have configurable strings. Within a backticked template, it is simple to allow inner backticks simply by using them inside a placeholder &lt;code&gt;${ }&lt;/code&gt; within the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185b559f3c0aaf526e6b24fa70557e54bd43808c" translate="yes" xml:space="preserve">
          <source>In certain times, nesting a template is the easiest and perhaps more readable way to have configurable strings. Within a backticked template it is simple to allow inner backticks simply by using them inside a placeholder &lt;code&gt;${ }&lt;/code&gt; within the template. For instance, if condition a is true: then return this templated literal.</source>
          <target state="translated">En ciertos momentos, anidar una plantilla es la forma m&amp;aacute;s f&amp;aacute;cil y quiz&amp;aacute;s m&amp;aacute;s legible de tener cadenas configurables. Dentro de una plantilla con comillas inversas es simple permitir comillas inversas internas simplemente us&amp;aacute;ndolas dentro de un marcador &lt;code&gt;${ }&lt;/code&gt; posici&amp;oacute;n $ {} dentro de la plantilla. Por ejemplo, si la condici&amp;oacute;n a es verdadera: entonces devuelve este literal con plantilla.</target>
        </trans-unit>
        <trans-unit id="4db1a326096311ea6af1c3fb975c7c9930e3121d" translate="yes" xml:space="preserve">
          <source>In class constructors, &lt;code&gt;new.target&lt;/code&gt; refers to the constructor that was directly invoked by &lt;code&gt;new&lt;/code&gt;. This is also the case if the constructor is in a parent class and was delegated from a child constructor.</source>
          <target state="translated">En los constructores de clases, &lt;code&gt;new.target&lt;/code&gt; se refiere al constructor que fue invocado directamente por &lt;code&gt;new&lt;/code&gt; . Este tambi&amp;eacute;n es el caso si el constructor est&amp;aacute; en una clase padre y fue delegado de un constructor hijo.</target>
        </trans-unit>
        <trans-unit id="6bdb1b0d5feb35f9fbe77dd15e2d3235928fcdf4" translate="yes" xml:space="preserve">
          <source>In class constructors, it refers to the constructed class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94af82422eceede92c75ba324542543e93fcf1e0" translate="yes" xml:space="preserve">
          <source>In code using XPCOM &lt;code&gt;instanceof&lt;/code&gt; has special effect: &lt;code&gt;obj instanceof &lt;/code&gt;&lt;em&gt;&lt;code&gt;xpcomInterface&lt;/code&gt;&lt;/em&gt; (e.g. &lt;code&gt;Components.interfaces.nsIFile&lt;/code&gt;) calls &lt;code&gt;obj.QueryInterface(&lt;em&gt;xpcomInterface&lt;/em&gt;)&lt;/code&gt; and returns &lt;code&gt;true&lt;/code&gt; if QueryInterface succeeded. A side effect of such call is that you can use &lt;em&gt;&lt;code&gt;xpcomInterface&lt;/code&gt;&lt;/em&gt;'s properties on &lt;code&gt;obj&lt;/code&gt; after a successful &lt;code&gt;instanceof&lt;/code&gt; test. Unlike standard JavaScript globals, the test &lt;code&gt;obj instanceof xpcomInterface&lt;/code&gt; works as expected even if &lt;code&gt;obj&lt;/code&gt; is from a different scope.</source>
          <target state="translated">En el c&amp;oacute;digo, el uso de XPCOM &lt;code&gt;instanceof&lt;/code&gt; tiene un efecto especial: &lt;code&gt;obj instanceof &lt;/code&gt; &lt;em&gt; &lt;code&gt;xpcomInterface&lt;/code&gt; &lt;/em&gt; (por ejemplo, &lt;code&gt;Components.interfaces.nsIFile&lt;/code&gt; ) llama a &lt;code&gt;obj.QueryInterface(&lt;em&gt;xpcomInterface&lt;/em&gt;)&lt;/code&gt; y devuelve &lt;code&gt;true&lt;/code&gt; si QueryInterface tuvo &amp;eacute;xito. Un efecto secundario de dicha llamada es que puede usar las propiedades de &lt;em&gt; &lt;code&gt;xpcomInterface&lt;/code&gt; &lt;/em&gt; en &lt;code&gt;obj&lt;/code&gt; despu&amp;eacute;s de una prueba de &lt;code&gt;instanceof&lt;/code&gt; exitosa . A diferencia de los globales de JavaScript est&amp;aacute;ndar, la &lt;code&gt;obj instanceof xpcomInterface&lt;/code&gt; prueba obj de xpcomInterface funciona como se esperaba, incluso si &lt;code&gt;obj&lt;/code&gt; es de un alcance diferente.</target>
        </trans-unit>
        <trans-unit id="14cfe9e8018b79bf958a062759f1007e85f4498c" translate="yes" xml:space="preserve">
          <source>In code using XPCOM, &lt;code&gt;instanceof&lt;/code&gt; has special effect: &lt;code&gt;&lt;var&gt;obj&lt;/var&gt; instanceof &lt;var&gt;xpcomInterface&lt;/var&gt;&lt;/code&gt; (e.g. &lt;code&gt;Components.interfaces.nsIFile&lt;/code&gt;) calls &lt;code&gt;&lt;var&gt;obj&lt;/var&gt;.QueryInterface(&lt;var&gt;xpcomInterface&lt;/var&gt;)&lt;/code&gt; and returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;QueryInterface&lt;/code&gt; succeeded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992fc64c413d9c88cc713416bf184f970d9fbfac" translate="yes" xml:space="preserve">
          <source>In comparison to the global &lt;a href=&quot;../isfinite&quot;&gt;&lt;code&gt;isFinite()&lt;/code&gt;&lt;/a&gt; function, this method doesn't first convert the parameter to a number. This means only values of the type number &lt;em&gt;and&lt;/em&gt; are finite return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a613e3bd8d9172c0deeee7a9b7b65c63525ed0bb" translate="yes" xml:space="preserve">
          <source>In comparison to the global &lt;a href=&quot;../isfinite&quot;&gt;&lt;code&gt;isFinite()&lt;/code&gt;&lt;/a&gt; function, this method doesn't forcibly convert the parameter to a number. This means only values of the type number, that are also finite, return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">En comparaci&amp;oacute;n con la funci&amp;oacute;n global &lt;a href=&quot;../isfinite&quot;&gt; &lt;code&gt;isFinite()&lt;/code&gt; &lt;/a&gt; , este m&amp;eacute;todo no convierte a la fuerza el par&amp;aacute;metro en un n&amp;uacute;mero. Esto significa que solo los valores del tipo n&amp;uacute;mero, que tambi&amp;eacute;n son finitos, devuelven &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d244f5107598de168b205e3c43fd027e6571c188" translate="yes" xml:space="preserve">
          <source>In comparison to the global &lt;a href=&quot;../isnan&quot;&gt;&lt;code&gt;isNaN()&lt;/code&gt;&lt;/a&gt; function, &lt;code&gt;Number.isNaN()&lt;/code&gt; doesn't suffer the problem of forcefully converting the parameter to a number. This means it is now safe to pass values that would normally convert to &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;, but aren't actually the same value as &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;. This also means that only values of the type number, that are also &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;, return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">En comparaci&amp;oacute;n con la funci&amp;oacute;n global &lt;a href=&quot;../isnan&quot;&gt; &lt;code&gt;isNaN()&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;Number.isNaN()&lt;/code&gt; no sufre el problema de convertir forzosamente el par&amp;aacute;metro en un n&amp;uacute;mero. Esto significa que ahora es seguro pasar valores que normalmente se convertir&amp;iacute;an a &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; , pero que en realidad no son el mismo valor que &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; . Esto tambi&amp;eacute;n significa que solo los valores del tipo n&amp;uacute;mero, que tambi&amp;eacute;n son &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; , devuelven &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8217e6b58b2edad9f5a6741e352a92ad99a7c0e8" translate="yes" xml:space="preserve">
          <source>In constructors, &lt;code&gt;new.target&lt;/code&gt; refers to the constructor that was invoked by &lt;a href=&quot;operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">En constructores, &lt;code&gt;new.target&lt;/code&gt; se refiere al constructor que fue invocado por &lt;a href=&quot;operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f621dfa4be91ca91418c57854499d4ee4a81c259" translate="yes" xml:space="preserve">
          <source>In contrast to &lt;code&gt;Sets&lt;/code&gt;, &lt;code&gt;WeakSets&lt;/code&gt; are &lt;strong&gt;collections of objects only&lt;/strong&gt; and not of arbitrary values of any type.</source>
          <target state="translated">A diferencia de los &lt;code&gt;Sets&lt;/code&gt; , los conjuntos &lt;code&gt;WeakSets&lt;/code&gt; son &lt;strong&gt;colecciones de objetos &amp;uacute;nicamente&lt;/strong&gt; y no de valores arbitrarios de ning&amp;uacute;n tipo.</target>
        </trans-unit>
        <trans-unit id="29612058b2a37d96155ca6d8e8846e19f5383f8e" translate="yes" xml:space="preserve">
          <source>In contrast to &lt;code&gt;Symbol()&lt;/code&gt;, the &lt;code&gt;Symbol.for()&lt;/code&gt; function creates a symbol available in a global symbol registry list. &lt;code&gt;Symbol.for()&lt;/code&gt; does also not necessarily create a new symbol on every call, but checks first if a symbol with the given &lt;code&gt;key&lt;/code&gt; is already present in the registry. In that case, that symbol is returned. If no symbol with the given key is found, &lt;code&gt;Symbol.for()&lt;/code&gt; will create a new global symbol.</source>
          <target state="translated">A diferencia de &lt;code&gt;Symbol()&lt;/code&gt; , la funci&amp;oacute;n &lt;code&gt;Symbol.for()&lt;/code&gt; crea un s&amp;iacute;mbolo disponible en una lista de registro de s&amp;iacute;mbolos global. &lt;code&gt;Symbol.for()&lt;/code&gt; tampoco crea necesariamente un nuevo s&amp;iacute;mbolo en cada llamada, pero comprueba primero si un s&amp;iacute;mbolo con la &lt;code&gt;key&lt;/code&gt; dada ya est&amp;aacute; presente en el registro. En ese caso, se devuelve ese s&amp;iacute;mbolo. Si no se encuentra ning&amp;uacute;n s&amp;iacute;mbolo con la clave dada, &lt;code&gt;Symbol.for()&lt;/code&gt; crear&amp;aacute; un nuevo s&amp;iacute;mbolo global.</target>
        </trans-unit>
        <trans-unit id="2ff9ea516bcf681c13dab78eda856670cc61010b" translate="yes" xml:space="preserve">
          <source>In contrast to the &lt;a href=&quot;break&quot;&gt;&lt;code&gt;break&lt;/code&gt;&lt;/a&gt; statement, &lt;code&gt;continue&lt;/code&gt; does not terminate the execution of the loop entirely: instead,</source>
          <target state="translated">A diferencia de la instrucci&amp;oacute;n &lt;a href=&quot;break&quot;&gt; &lt;code&gt;break&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;continue&lt;/code&gt; no termina la ejecuci&amp;oacute;n del bucle por completo: en su lugar,</target>
        </trans-unit>
        <trans-unit id="abde0a67e7f66ee66240fa3ae208e8af08646767" translate="yes" xml:space="preserve">
          <source>In dealing with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Constructor&quot;&gt;constructors&lt;/a&gt; it is possible to use the &lt;code&gt;let&lt;/code&gt; bindings to share one or more private members without using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;closures&lt;/a&gt;:</source>
          <target state="translated">Al tratar con &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Constructor&quot;&gt;constructores&lt;/a&gt; , es posible usar los enlaces &lt;code&gt;let&lt;/code&gt; para compartir uno o m&amp;aacute;s miembros privados sin usar &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;cierres&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="add9606929e73b3d9b2d5274b0b0c6a25af99476" translate="yes" xml:space="preserve">
          <source>In depth analysis on delete</source>
          <target state="translated">Análisis en profundidad sobre la eliminación</target>
        </trans-unit>
        <trans-unit id="1ee02026d6da5c79915a450ae4a367bd8161a9d5" translate="yes" xml:space="preserve">
          <source>In following code, values yielded by &lt;code&gt;g1()&lt;/code&gt; are returned from &lt;code&gt;next()&lt;/code&gt; calls just like those which are yielded by &lt;code&gt;g2()&lt;/code&gt;.</source>
          <target state="translated">En el siguiente c&amp;oacute;digo, los valores producidos por &lt;code&gt;g1()&lt;/code&gt; se devuelven de las llamadas &lt;code&gt;next()&lt;/code&gt; al igual que los que genera &lt;code&gt;g2()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a15b0c2b14bd2c1fe2943c815c7efbf0fce1279" translate="yes" xml:space="preserve">
          <source>In function calls like &lt;code&gt;f()&lt;/code&gt;, the &lt;code&gt;this&lt;/code&gt; value was the global object. In strict mode, it is now &lt;code&gt;undefined&lt;/code&gt;. When a function was called with &lt;code&gt;&lt;a href=&quot;../global_objects/function/call&quot;&gt;call&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../global_objects/function/apply&quot;&gt;apply&lt;/a&gt;&lt;/code&gt;, if the value was a primitive value, this one was boxed into an object (or the global object for &lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt;). In strict mode, the value is passed directly without conversion or replacement.</source>
          <target state="translated">En llamadas a funciones como &lt;code&gt;f()&lt;/code&gt; , &lt;code&gt;this&lt;/code&gt; valor era el objeto global. En modo estricto, ahora &lt;code&gt;undefined&lt;/code&gt; est&amp;aacute; definido . Cuando se llamaba a una funci&amp;oacute;n con &lt;code&gt;&lt;a href=&quot;../global_objects/function/call&quot;&gt;call&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../global_objects/function/apply&quot;&gt;apply&lt;/a&gt;&lt;/code&gt; , si el valor era un valor primitivo, este se encajonaba en un objeto (o el objeto global para &lt;code&gt;undefined&lt;/code&gt; y &lt;code&gt;null&lt;/code&gt; ). En modo estricto, el valor se pasa directamente sin conversi&amp;oacute;n ni reemplazo.</target>
        </trans-unit>
        <trans-unit id="bcb456854f7e12a1b6d3067042522e245c1c473c" translate="yes" xml:space="preserve">
          <source>In general, it is best not to add, modify, or remove properties from the object during iteration, other than the property currently being visited. There is no guarantee whether an added property will be visited, whether a modified property (other than the current one) will be visited before or after it is modified, or whether a deleted property will be visited before it is deleted.</source>
          <target state="translated">En general,es mejor no añadir,modificar o eliminar propiedades del objeto durante la iteración,aparte de la propiedad que se está visitando actualmente.No hay garantía de que una propiedad añadida sea visitada,de que una propiedad modificada (distinta de la actual)sea visitada antes o después de ser modificada,o de que una propiedad eliminada sea visitada antes de ser eliminada.</target>
        </trans-unit>
        <trans-unit id="469cf6b2ef6e68adf3f920541f214faf833cd651" translate="yes" xml:space="preserve">
          <source>In math, you can write 2 &amp;times; (3 + 5) as 2*(3 + 5) or just 2(3 + 5).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd4e3c69a66abeb7081b617a2e513e6ed402c377" translate="yes" xml:space="preserve">
          <source>In math, you can write 2 x (3 + 5) as 2*(3 + 5) or just 2(3 + 5). Using the latter will throw an error:</source>
          <target state="translated">En matemáticas,puedes escribir 2 x (3+5)como 2*(3+5)o sólo 2(3+5).Usar esto último arrojará un error:</target>
        </trans-unit>
        <trans-unit id="15f72587f05206c7a8bbb329e12777545b394d35" translate="yes" xml:space="preserve">
          <source>In modern browsers (JavaScript 1.8.5 / Firefox 4+), &lt;code&gt;undefined&lt;/code&gt; is a non-configurable, non-writable property per the ECMAScript 5 specification. Even when this is not the case, avoid overriding it.</source>
          <target state="translated">En los navegadores modernos (JavaScript 1.8.5 / Firefox 4+), &lt;code&gt;undefined&lt;/code&gt; es una propiedad no configurable y no modificable seg&amp;uacute;n la especificaci&amp;oacute;n ECMAScript 5. Incluso cuando este no sea el caso, evite anularlo.</target>
        </trans-unit>
        <trans-unit id="4e0d4934fe476d8eb4009f64ddad5959ccf4aadb" translate="yes" xml:space="preserve">
          <source>In modern browsers (JavaScript 1.8.5 / Firefox 4+), &lt;code&gt;undefined&lt;/code&gt; is a non-configurable, non-writable property, per the ECMAScript 5 specification. (Even when this is not the case, avoid overriding it.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6effb59d91f10a30d514644f887cd90896f02d7" translate="yes" xml:space="preserve">
          <source>In most cases, &lt;code&gt;String.raw()&lt;/code&gt; is used with template strings. The first syntax mentioned above is only rarely used, because the JavaScript engine will call this with proper arguments for you, (just like with other &lt;a href=&quot;../../template_literals#Tagged_template_literals&quot;&gt;tag functions&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a29654e172b7c9185515aad6d728b59b008dcd2" translate="yes" xml:space="preserve">
          <source>In most cases, &lt;code&gt;String.raw()&lt;/code&gt; is used with template strings. The first syntax mentioned above is only rarely used, because the JavaScript engine will call this with proper arguments for you, just like with other &lt;a href=&quot;../../template_literals#Tagged_template_literals&quot;&gt;tag functions&lt;/a&gt;.</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, &lt;code&gt;String.raw()&lt;/code&gt; se usa con cadenas de plantilla. La primera sintaxis mencionada anteriormente solo se usa raramente, porque el motor de JavaScript lo llamar&amp;aacute; con los argumentos adecuados para usted, al igual que con otras &lt;a href=&quot;../../template_literals#Tagged_template_literals&quot;&gt;funciones de etiqueta&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eb884e7d7586dde23b9e701c398786a65a36db9b" translate="yes" xml:space="preserve">
          <source>In most cases, the value of &lt;code&gt;this&lt;/code&gt; is determined by how a function is called (runtime binding). It can't be set by assignment during execution, and it may be different each time the function is called. ES5 introduced the &lt;a href=&quot;../global_objects/function/bind&quot;&gt;&lt;code&gt;bind()&lt;/code&gt;&lt;/a&gt; method to &lt;a href=&quot;this#The_bind_method&quot;&gt;set the value of a function's &lt;code&gt;this&lt;/code&gt; regardless of how it's called&lt;/a&gt;, and ES2015 introduced &lt;a href=&quot;../functions/arrow_functions&quot;&gt;arrow functions&lt;/a&gt; which don't provide their own &lt;code&gt;this&lt;/code&gt; binding (it retains the &lt;code&gt;this&lt;/code&gt; value of the enclosing lexical context).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac60cdf424b99dce62b5701d4d143d86d375a54d" translate="yes" xml:space="preserve">
          <source>In most cases, the value of &lt;code&gt;this&lt;/code&gt; is determined by how a function is called. It can't be set by assignment during execution, and it may be different each time the function is called. ES5 introduced the &lt;a href=&quot;../global_objects/function/bind&quot;&gt;&lt;code&gt;bind()&lt;/code&gt;&lt;/a&gt; method to &lt;a href=&quot;#The_bind_method&quot;&gt;set the value of a function's &lt;code&gt;this&lt;/code&gt; regardless of how it's called&lt;/a&gt;, and ES2015 introduced &lt;a href=&quot;../functions/arrow_functions&quot;&gt;arrow functions&lt;/a&gt; which don't provide their own &lt;code&gt;this&lt;/code&gt; binding (it retains the &lt;code&gt;this&lt;/code&gt; value of the enclosing lexical context).</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, el valor de &lt;code&gt;this&lt;/code&gt; est&amp;aacute; determinado por c&amp;oacute;mo se llama a una funci&amp;oacute;n. No se puede configurar por asignaci&amp;oacute;n durante la ejecuci&amp;oacute;n y puede ser diferente cada vez que se llama a la funci&amp;oacute;n. ES5 introdujo el &lt;a href=&quot;../global_objects/function/bind&quot;&gt; &lt;code&gt;bind()&lt;/code&gt; &lt;/a&gt; m&amp;eacute;todo para &lt;a href=&quot;#The_bind_method&quot;&gt;establecer el valor de una funci&amp;oacute;n es &lt;code&gt;this&lt;/code&gt; , independientemente de c&amp;oacute;mo se llama&lt;/a&gt; , y ES2015 introdujo &lt;a href=&quot;../functions/arrow_functions&quot;&gt;flecha funciones&lt;/a&gt; que no proporcionan su propia &lt;code&gt;this&lt;/code&gt; uni&amp;oacute;n (que conserva el &lt;code&gt;this&lt;/code&gt; valor del contexto l&amp;eacute;xico que encierra).</target>
        </trans-unit>
        <trans-unit id="6d3bbd72aff7458ac96d23ca8ea12c673fb557f5" translate="yes" xml:space="preserve">
          <source>In most cases, using &lt;a href=&quot;rest_parameters&quot;&gt;rest parameters&lt;/a&gt; is a good alternative to using an &lt;code&gt;arguments&lt;/code&gt; object.</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, el uso de &lt;a href=&quot;rest_parameters&quot;&gt;par&amp;aacute;metros de descanso&lt;/a&gt; es una buena alternativa al uso de un objeto de &lt;code&gt;arguments&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fc6c6c77ddc6a5c73413e02d1078992067d9c03" translate="yes" xml:space="preserve">
          <source>In most languages like PHP and Python and others that have an exponentiation operator (**), the exponentiation operator is defined to have a higher precedence than unary operators such as unary + and unary -, but there are a few exceptions. For example, in Bash the ** operator is defined to have a lower precedence than unary operators. In JavaScript, it is impossible to write an ambiguous exponentiation expression, i.e. you cannot put a unary operator (&lt;code&gt;+/-/~/!/delete/void/typeof&lt;/code&gt;) immediately before the base number.</source>
          <target state="translated">En la mayor&amp;iacute;a de lenguajes como PHP y Python y otros que tienen un operador de exponenciaci&amp;oacute;n (**), el operador de exponenciaci&amp;oacute;n se define para tener una precedencia m&amp;aacute;s alta que los operadores unarios como unario + y unario -, pero hay algunas excepciones. Por ejemplo, en Bash, el operador ** se define para tener una precedencia menor que los operadores unarios. En JavaScript, es imposible escribir una expresi&amp;oacute;n de potenciaci&amp;oacute;n ambigua, es decir, no se puede poner un operador unario ( &lt;code&gt;+/-/~/!/delete/void/typeof&lt;/code&gt; ) inmediatamente antes del n&amp;uacute;mero base.</target>
        </trans-unit>
        <trans-unit id="22a5793df1225a02f211cbab4dd35b2dfa4aa24a" translate="yes" xml:space="preserve">
          <source>In non-strict code, function declarations inside blocks behave strangely. Do not use them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1874ca4c77d194ed9a187f427ff439010d26be13" translate="yes" xml:space="preserve">
          <source>In non-strict code, function declarations inside blocks behave strangely. For example:</source>
          <target state="translated">En código no estricto,las declaraciones de funciones dentro de los bloques se comportan de forma extraña.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="860c9839372531fc54aae6d18e28914fe55a5604" translate="yes" xml:space="preserve">
          <source>In non-strict mode, modifying a value in the &lt;code&gt;arguments&lt;/code&gt; object modifies the corresponding named argument. This made optimizations complicated for JavaScript engine and made code harder to read/understand. In strict mode, the &lt;code&gt;arguments&lt;/code&gt; object is created and initialized with the same values than the named arguments, but changes to either the &lt;code&gt;arguments&lt;/code&gt; object or the named arguments aren't reflected in one another.</source>
          <target state="translated">En modo no estricto, la modificaci&amp;oacute;n de un valor en el objeto de &lt;code&gt;arguments&lt;/code&gt; modifica el argumento con nombre correspondiente. Esto complic&amp;oacute; las optimizaciones para el motor JavaScript y dificult&amp;oacute; la lectura / comprensi&amp;oacute;n del c&amp;oacute;digo. En modo estricto, el objeto de &lt;code&gt;arguments&lt;/code&gt; se crea e inicializa con los mismos valores que los argumentos con nombre, pero los cambios en el objeto de &lt;code&gt;arguments&lt;/code&gt; o los argumentos con nombre no se reflejan entre s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="95aa3b03b2032d638c1633fec4e82b00ad7a1890" translate="yes" xml:space="preserve">
          <source>In non-strict, this would silently fail, in contradiction with the user expectation.</source>
          <target state="translated">En no estricto,esto fallaría silenciosamente,en contradicción con la expectativa del usuario.</target>
        </trans-unit>
        <trans-unit id="cb7ee7b5cd4eb0f5efd8c7fee9d564b5efb524f6" translate="yes" xml:space="preserve">
          <source>In normal function calls (as opposed to constructor function calls), &lt;code&gt;new.target&lt;/code&gt; is &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;. This lets you detect if a function was called with &lt;a href=&quot;new&quot;&gt;new&lt;/a&gt; as a constructor.</source>
          <target state="translated">En las llamadas a funciones normales (a diferencia de las llamadas a funciones de constructor), &lt;code&gt;new.target&lt;/code&gt; &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; est&amp;aacute; definido . Esto le permite detectar si se llam&amp;oacute; a una funci&amp;oacute;n con &lt;a href=&quot;new&quot;&gt;new&lt;/a&gt; como constructor.</target>
        </trans-unit>
        <trans-unit id="230572d6652702c77e4d55e58d676991394f1446" translate="yes" xml:space="preserve">
          <source>In normal function calls (as opposed to constructor function calls), &lt;code&gt;new.target&lt;/code&gt; is &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;. This lets you detect whether a function was called with &lt;a href=&quot;new&quot;&gt;new&lt;/a&gt; as a constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a271923b767ecf71d00311996c399f935078d0" translate="yes" xml:space="preserve">
          <source>In older implementations, which ignore the &lt;code&gt;&lt;var&gt;locales&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;options&lt;/var&gt;&lt;/code&gt; arguments, the locale used and the form of the string returned are entirely implementation-dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68eef8c5fb49c60634ed1d21df3a98ae0e0f974" translate="yes" xml:space="preserve">
          <source>In order to be &lt;strong&gt;iterable&lt;/strong&gt;, an object must implement the &lt;code&gt;@@iterator&lt;/code&gt; method, meaning that the object (or one of the objects up its &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Inheritance_and_the_prototype_chain&quot;&gt;prototype chain&lt;/a&gt;) must have a property with a &lt;code&gt;@@iterator&lt;/code&gt; key which is available via constant &lt;a href=&quot;global_objects/symbol/iterator&quot;&gt;&lt;code&gt;Symbol.iterator&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0eefb52bc8e7160456b7047e4f143d09203972a" translate="yes" xml:space="preserve">
          <source>In order to be &lt;strong&gt;iterable&lt;/strong&gt;, an object must implement the &lt;strong&gt;@@iterator&lt;/strong&gt; method, meaning that the object (or one of the objects up its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Inheritance_and_the_prototype_chain&quot;&gt;prototype chain&lt;/a&gt;) must have a property with a &lt;strong&gt;@@iterator &lt;/strong&gt;key which is available via constant &lt;code&gt;&lt;a href=&quot;global_objects/symbol/iterator&quot;&gt;&lt;code&gt;Symbol.iterator&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Para ser &lt;strong&gt;iterable&lt;/strong&gt; , un objeto debe implementar el m&amp;eacute;todo &lt;strong&gt;@@ iterator&lt;/strong&gt; , lo que significa que el objeto (o uno de los objetos en su &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Inheritance_and_the_prototype_chain&quot;&gt;cadena de prototipo&lt;/a&gt; ) debe tener una propiedad con una clave &lt;strong&gt;@@ iterator&lt;/strong&gt; que est&amp;aacute; disponible a trav&amp;eacute;s de la constante &lt;code&gt;&lt;a href=&quot;global_objects/symbol/iterator&quot;&gt;&lt;code&gt;Symbol.iterator&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9de074ed49182f2a1dc2aec280709fa9abad4868" translate="yes" xml:space="preserve">
          <source>In order to call a static method or property within another static method of the same class, you can use the &lt;code&gt;&lt;a href=&quot;../operators/this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862bd58d82c44825625f345f8000cff5f3f26277" translate="yes" xml:space="preserve">
          <source>In order to call a static method within another static method of the same class, you can use the &lt;code&gt;&lt;a href=&quot;../operators/this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; keyword.</source>
          <target state="translated">Para llamar a un m&amp;eacute;todo est&amp;aacute;tico dentro de otro m&amp;eacute;todo est&amp;aacute;tico de la misma clase, puede usar la palabra clave &lt;code&gt;&lt;a href=&quot;../operators/this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e455045de218103473f428d3071d54854bd467dc" translate="yes" xml:space="preserve">
          <source>In order to create and get dates between the years 0 and 99 the &lt;a href=&quot;date/setfullyear&quot;&gt;&lt;code&gt;Date.prototype.setFullYear()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;date/getfullyear&quot;&gt;&lt;code&gt;Date.prototype.getFullYear()&lt;/code&gt;&lt;/a&gt; methods should be used.</source>
          <target state="translated">Para crear y obtener fechas entre los a&amp;ntilde;os 0 y 99 se deben utilizar los m&amp;eacute;todos &lt;a href=&quot;date/setfullyear&quot;&gt; &lt;code&gt;Date.prototype.setFullYear()&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;date/getfullyear&quot;&gt; &lt;code&gt;Date.prototype.getFullYear()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b7bdbb65503f173efe6d93b336bcc3c56478167b" translate="yes" xml:space="preserve">
          <source>In order to create and get dates between the years &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;99&lt;/code&gt; the &lt;a href=&quot;date/setfullyear&quot;&gt;&lt;code&gt;Date.prototype.setFullYear()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;date/getfullyear&quot;&gt;&lt;code&gt;Date.prototype.getFullYear()&lt;/code&gt;&lt;/a&gt; methods should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a06ff19557c3cd24895157a5889dec3667d90b42" translate="yes" xml:space="preserve">
          <source>In order to embed expressions within normal strings, you would use the following syntax:</source>
          <target state="translated">Para incrustar expresiones dentro de las cadenas normales,se utilizaría la siguiente sintaxis:</target>
        </trans-unit>
        <trans-unit id="261c57c7b8631ce4358a48ec7330061dc4f99420" translate="yes" xml:space="preserve">
          <source>In ordinary functions, it refers to the function itself, assuming it was invoked via the &lt;a href=&quot;new&quot;&gt;new&lt;/a&gt; operator; otherwise &lt;code&gt;new.target&lt;/code&gt; is &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30f8199b4dd458c0968198031c49f62bc167924" translate="yes" xml:space="preserve">
          <source>In our example above, the arrow function does not have its own &lt;code&gt;this&lt;/code&gt;. The &lt;code&gt;this&lt;/code&gt; value of the enclosing lexical &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Scope&quot;&gt;scope&lt;/a&gt; is used; arrow functions follow the normal variable lookup rules. So while searching for &lt;code&gt;this&lt;/code&gt; which is not present in the current &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Scope&quot;&gt;scope&lt;/a&gt;, an arrow function ends up finding the &lt;code&gt;this&lt;/code&gt; from its enclosing &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Scope&quot;&gt;scope&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa11c5c2db715285eac1e1df98254200504f278" translate="yes" xml:space="preserve">
          <source>In practice, it is often desirable to catch rejected promises rather than use &lt;code&gt;then&lt;/code&gt;'s two case syntax, as demonstrated below.</source>
          <target state="translated">En la pr&amp;aacute;ctica, a menudo es deseable para atrapar promesas rechazados en lugar de utilizar &lt;code&gt;then&lt;/code&gt; 's sintaxis dos casos, como se demuestra a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1fbd7dce6756453ed26553376d0427f3b5a41799" translate="yes" xml:space="preserve">
          <source>In some respects (such as sorting) they should be treated as equivalent&amp;mdash;and in some (such as visual appearance) they should not, so they are not canonically equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bd329bf1a6fca5cc1d9f8ca14653cea85fd687" translate="yes" xml:space="preserve">
          <source>In some ways, recursion is analogous to a loop. Both execute the same code multiple times, and both require a condition (to avoid an infinite loop, or rather, infinite recursion in this case). When there are too many function calls, or a function is missing a base case, JavaScript will throw this error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc3359fcfde967d3f070026eabf07f701112c4c" translate="yes" xml:space="preserve">
          <source>In strict mode code, &lt;code&gt;eval&lt;/code&gt; doesn't create a new variable in the scope from which it was called. Also, of course, in strict mode, the string is evaluated with strict mode rules. Thorough testing will need to be performed to make sure nothing breaks. Not using eval if you don't really need it may be another pragmatic solution.</source>
          <target state="translated">En el c&amp;oacute;digo de modo estricto, &lt;code&gt;eval&lt;/code&gt; no crea una nueva variable en el &amp;aacute;mbito desde el que se llam&amp;oacute;. Adem&amp;aacute;s, por supuesto, en modo estricto, la cadena se eval&amp;uacute;a con reglas de modo estricto. Ser&amp;aacute; necesario realizar pruebas exhaustivas para asegurarse de que nada se rompa. No usar eval si realmente no lo necesita puede ser otra soluci&amp;oacute;n pragm&amp;aacute;tica.</target>
        </trans-unit>
        <trans-unit id="c986ac9c061545ea61f73243c079a502c902273c" translate="yes" xml:space="preserve">
          <source>In strict mode code, more identifiers are reserved.</source>
          <target state="translated">En el código de modo estricto,se reservan más identificadores.</target>
        </trans-unit>
        <trans-unit id="0305e05ae84323bdcca0727b14cfc634f066fb00" translate="yes" xml:space="preserve">
          <source>In strict mode, a &lt;code&gt;false&lt;/code&gt; return value from the &lt;code&gt;defineProperty&lt;/code&gt; handler will throw a &lt;a href=&quot;../../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">En modo estricto, un valor de retorno &lt;code&gt;false&lt;/code&gt; del controlador &lt;code&gt;defineProperty&lt;/code&gt; lanzar&amp;aacute; una excepci&amp;oacute;n &lt;a href=&quot;../../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d09582a0bc85e38ae88283afb2b5fcbd5053155" translate="yes" xml:space="preserve">
          <source>In strict mode, a &lt;code&gt;false&lt;/code&gt; return value from the &lt;code&gt;set&lt;/code&gt; handler will throw a &lt;a href=&quot;../../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">En modo estricto, un valor de retorno &lt;code&gt;false&lt;/code&gt; del controlador de &lt;code&gt;set&lt;/code&gt; lanzar&amp;aacute; una excepci&amp;oacute;n &lt;a href=&quot;../../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6b6d02975bb8de9c2d2b0b5332c5792b28df3140" translate="yes" xml:space="preserve">
          <source>In strict mode, however, if the value of &lt;code&gt;this&lt;/code&gt; is not set when entering an execution context, it remains as &lt;code&gt;undefined&lt;/code&gt;, as shown in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4bd884970a79efd62e157b542fb73cb029e026" translate="yes" xml:space="preserve">
          <source>In strict mode, however, the value of &lt;code&gt;this&lt;/code&gt; remains at whatever it was set to when entering the execution context, so, in the following case, &lt;code&gt;this&lt;/code&gt;will default to &lt;code&gt;undefined&lt;/code&gt;&lt;strong&gt;:&lt;/strong&gt;</source>
          <target state="translated">Sin embargo, en el modo estricto, el valor de &lt;code&gt;this&lt;/code&gt; permanece en el valor que se estableci&amp;oacute; al ingresar al contexto de ejecuci&amp;oacute;n, por lo que, en el siguiente caso, &lt;code&gt;this&lt;/code&gt; valor predeterminado ser&amp;aacute; &lt;code&gt;undefined&lt;/code&gt; &lt;strong&gt;:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5edd29a28bbd08562217025986be25352d683242" translate="yes" xml:space="preserve">
          <source>In strict mode, this would have raised an exception.</source>
          <target state="translated">En modo estricto,esto habría planteado una excepción.</target>
        </trans-unit>
        <trans-unit id="d019380674a16813ef94c54a0d343b4618bc0042" translate="yes" xml:space="preserve">
          <source>In strict-mode code, the &lt;code&gt;arguments&lt;/code&gt; object behaves the same whether or not a function is passed rest, default, or destructured parameters. That is, assigning new values to variables in the body of the function will not affect the &lt;code&gt;arguments&lt;/code&gt; object. Nor will assigning new variables to the &lt;code&gt;arguments&lt;/code&gt; object affect the value of variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ba434dcfc26a308be81afbb8f480fb122aa093" translate="yes" xml:space="preserve">
          <source>In that very line, the &lt;u&gt;if block's &quot;foo&quot;&lt;/u&gt; has already been created in the lexical environment, but has not yet reached (and &lt;strong&gt;terminated&lt;/strong&gt;) its initialization (which is part of the statement itself): it's still in the temporal dead zone.</source>
          <target state="translated">En esa misma l&amp;iacute;nea, el &lt;u&gt;&quot;foo&quot; del bloque if&lt;/u&gt; ya se ha creado en el entorno l&amp;eacute;xico, pero a&amp;uacute;n no ha alcanzado (ni &lt;strong&gt;terminado&lt;/strong&gt; ) su inicializaci&amp;oacute;n (que es parte de la declaraci&amp;oacute;n en s&amp;iacute;): todav&amp;iacute;a est&amp;aacute; en la zona muerta temporal.</target>
        </trans-unit>
        <trans-unit id="344dc469ad2fb516272004fea64179e2bc4964ae" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt; JavaScript engine, this string would be &quot;&lt;code&gt;[object Object]&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc766e1776bb917de6591132669602b3df9697de" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;3d&lt;/code&gt; example, &lt;code&gt;'3d'&lt;/code&gt;&lt;em&gt;had &lt;/em&gt;to be quoted (because it begins with a digit). But it's also possible to quote the array indexes as well (e.g., &lt;code&gt;years['2']&lt;/code&gt; instead of &lt;code&gt;years[2]&lt;/code&gt;), although it's not necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb123889f9c99fb835bcc26628fcbd3f7f67f01" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;&lt;var&gt;object.property&lt;/var&gt;&lt;/code&gt; syntax, the &lt;code&gt;property&lt;/code&gt; must be a valid JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/identifier&quot;&gt;identifier&lt;/a&gt;. (In the ECMAScript standard, the names of properties are technically &quot;IdentifierNames&quot;, not &quot;Identifiers&quot;, so reserved words can be used but are not recommended). For example, &lt;code&gt;&lt;var&gt;object&lt;/var&gt;.$1&lt;/code&gt; is valid, while &lt;code&gt;&lt;var&gt;object&lt;/var&gt;.1&lt;/code&gt; is not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc2a210be3838d3448081d22f4b72f5712e5f4a" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;if&lt;/code&gt; statement, you want to use a comparison operator (&quot;==&quot;), and for the string concatenation, the plus (&quot;+&quot;) operator is needed.</source>
          <target state="translated">En la instrucci&amp;oacute;n &lt;code&gt;if&lt;/code&gt; , desea utilizar un operador de comparaci&amp;oacute;n (&quot;==&quot;), y para la concatenaci&amp;oacute;n de cadenas, se necesita el operador m&amp;aacute;s (&quot;+&quot;).</target>
        </trans-unit>
        <trans-unit id="bc49181d6c445c536525c61ec569330429a69827" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;object[property_name]&lt;/code&gt; syntax, the &lt;code&gt;&lt;var&gt;property_name&lt;/var&gt;&lt;/code&gt; is just a string or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Symbol&quot;&gt;Symbol&lt;/a&gt;. So, it can be any string, including &lt;code&gt;'1foo'&lt;/code&gt;, &lt;code&gt;'!bar!'&lt;/code&gt;, or even &lt;code&gt;' '&lt;/code&gt; (a space).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504e2effa4c01ce2afda7c35aaa16e32fcaa9400" translate="yes" xml:space="preserve">
          <source>In the JavaScript reference you can find the following chapters:</source>
          <target state="translated">En la referencia de JavaScript se encuentran los siguientes capítulos:</target>
        </trans-unit>
        <trans-unit id="f9ebab3674334dea74506ab92354e81bf49a5348" translate="yes" xml:space="preserve">
          <source>In the above example, notice there is no &lt;code&gt;await&lt;/code&gt; statement after the &lt;code&gt;return&lt;/code&gt; keyword, although that would be valid too: The return value of an &lt;code&gt;async function&lt;/code&gt; is implicitly wrapped in &lt;a href=&quot;../global_objects/promise/resolve&quot;&gt;&lt;code&gt;Promise.resolve&lt;/code&gt;&lt;/a&gt; - if it's not already a promise itself (as in this example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b25d369879120965a73c97bd3bb3c4bc0dcba2" translate="yes" xml:space="preserve">
          <source>In the above example, the spread syntax does not work as one might expect: it spreads an &lt;em&gt;array&lt;/em&gt; of arguments into the object literal, due to the rest parameter.</source>
          <target state="translated">En el ejemplo anterior, la sintaxis de propagaci&amp;oacute;n no funciona como cabr&amp;iacute;a esperar: propaga una &lt;em&gt;matriz&lt;/em&gt; de argumentos en el objeto literal, debido al par&amp;aacute;metro rest.</target>
        </trans-unit>
        <trans-unit id="639bc8814e61c3ad66222c2a753077d09d6095ed" translate="yes" xml:space="preserve">
          <source>In the above polyfill, no extra type-coercing is needed to make &lt;code&gt;(x &amp;gt; 0) or&amp;nbsp;(x &amp;lt; 0)&lt;/code&gt; numbers because subtracting them from each other forces a type conversion from boolean to numbers.</source>
          <target state="translated">En el polyfill anterior, no se necesita coerci&amp;oacute;n de tipo adicional para hacer n&amp;uacute;meros &lt;code&gt;(x &amp;gt; 0) or&amp;nbsp;(x &amp;lt; 0)&lt;/code&gt; porque restarlos entre s&amp;iacute; obliga a una conversi&amp;oacute;n de tipo de booleano a n&amp;uacute;meros.</target>
        </trans-unit>
        <trans-unit id="97c92f0acdf5c43d4bf308a9791b1d873616af45" translate="yes" xml:space="preserve">
          <source>In the above polyfill, no extra type-coercing is needed to make &lt;code&gt;(x &amp;gt; 0)&lt;/code&gt; or &lt;code&gt;(x &amp;lt; 0)&lt;/code&gt; numbers because subtracting them from each other forces a type conversion from booleans to numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3320efd6ed4bd76923685057972479f17a63057a" translate="yes" xml:space="preserve">
          <source>In the above, the function (call it anonymous function A) assigned to &lt;code&gt;obj.bar&lt;/code&gt; returns another function (call it anonymous function B) that is created as an arrow function. As a result, function B's &lt;code&gt;this&lt;/code&gt; is permanently set to the &lt;code&gt;this&lt;/code&gt; of &lt;code&gt;obj.bar&lt;/code&gt; (function A) when called. When the returned function (function B) is called, its &lt;code&gt;this&lt;/code&gt; will always be what it was set to initially. In the above code example, function B's &lt;code&gt;this&lt;/code&gt; is set to function A's &lt;code&gt;this&lt;/code&gt; which is &lt;code&gt;obj&lt;/code&gt;, so it remains set to &lt;code&gt;obj&lt;/code&gt; even when called in a manner that would normally set its &lt;code&gt;this&lt;/code&gt; to &lt;code&gt;undefined&lt;/code&gt; or the global object (or any other method as in the previous example in the global execution context).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62bdda2e0a21fb28a7f5675957c393b044577a67" translate="yes" xml:space="preserve">
          <source>In the above, the function(call it anonymous function A) assigned to &lt;code&gt;obj.bar&lt;/code&gt; returns another function(call it anonymous function B) that is created as an arrow function. As a result, function B's &lt;code&gt;this&lt;/code&gt; is permanently set to the &lt;code&gt;this&lt;/code&gt; of &lt;code&gt;obj.bar&lt;/code&gt; (function A)when called. When the returned function(function B) is called, its &lt;code&gt;this&lt;/code&gt; will always be what it was set to initially. In the above code example, function B's &lt;code&gt;this&lt;/code&gt; is set to function A's &lt;code&gt;this&lt;/code&gt; which is obj, so it remains set to &lt;code&gt;obj&lt;/code&gt; even when called in a manner that would normally set its &lt;code&gt;this&lt;/code&gt; to &lt;code&gt;undefined&lt;/code&gt; or the global object (or any other method as in the previous example in the global execution context).</source>
          <target state="translated">En lo anterior, la funci&amp;oacute;n ( &lt;code&gt;obj.bar&lt;/code&gt; funci&amp;oacute;n an&amp;oacute;nima A) asignada a obj.bar devuelve otra funci&amp;oacute;n ( ll&amp;aacute;mela funci&amp;oacute;n an&amp;oacute;nima B) que se crea como una funci&amp;oacute;n de flecha. Como resultado, la funci&amp;oacute;n B's &lt;code&gt;this&lt;/code&gt; se establece permanentemente en el &lt;code&gt;this&lt;/code&gt; de &lt;code&gt;obj.bar&lt;/code&gt; (funci&amp;oacute;n A) cuando se llama. Cuando la funci&amp;oacute;n devuelta (funci&amp;oacute;n B) se llama, su &lt;code&gt;this&lt;/code&gt; ser&amp;aacute; siempre lo que se establece en un principio. En el ejemplo el c&amp;oacute;digo de seguridad, la funci&amp;oacute;n B es &lt;code&gt;this&lt;/code&gt; se establece en funci&amp;oacute;n A es &lt;code&gt;this&lt;/code&gt; que es obj, por lo que permanece establecido a &lt;code&gt;obj&lt;/code&gt; incluso cuando se llama de manera que normalmente establecer su &lt;code&gt;this&lt;/code&gt; a &lt;code&gt;undefined&lt;/code&gt; o el objeto global (o cualquier otro m&amp;eacute;todo como en el ejemplo anterior en el contexto de ejecuci&amp;oacute;n global).</target>
        </trans-unit>
        <trans-unit id="42d2f894ef11d503ede81ebcedd96f07d7f0fab6" translate="yes" xml:space="preserve">
          <source>In the case of recursion, i.e. if function &lt;code&gt;f&lt;/code&gt; appears several times on the call stack, the value of &lt;code&gt;f.arguments&lt;/code&gt; represents the arguments corresponding to the most recent invocation of the function.</source>
          <target state="translated">En el caso de la recursividad, es decir, si la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; aparece varias veces en la pila de llamadas, el valor de &lt;code&gt;f.arguments&lt;/code&gt; representa los argumentos correspondientes a la invocaci&amp;oacute;n m&amp;aacute;s reciente de la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="661fd464b4a2050134037311daed90c57e20fd0a" translate="yes" xml:space="preserve">
          <source>In the current ECMAScript specification, &lt;code&gt;-0&lt;/code&gt; and &lt;code&gt;+0&lt;/code&gt; are considered equal, although this was not so in earlier drafts. See &lt;em&gt;&quot;Value equality for -0 and 0&quot;&lt;/em&gt; in the &lt;a href=&quot;#Browser_compatibility&quot;&gt;Browser compatibility&lt;/a&gt; table for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de188306b04f104700fac924cdd1e9567febef02" translate="yes" xml:space="preserve">
          <source>In the example above the exception will be shown since constructor links to Parent.</source>
          <target state="translated">En el ejemplo anterior se mostrará la excepción ya que el constructor se vincula a Parent.</target>
        </trans-unit>
        <trans-unit id="acef3bf46acb0ba10cb256e32b5f0d0bb458c455" translate="yes" xml:space="preserve">
          <source>In the example above the exception will be shown since the constructor links to Parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8390434acf6607f1bb47c24b30e5f18f5b3f46" translate="yes" xml:space="preserve">
          <source>In the example below, we invoke the &lt;code&gt;display&lt;/code&gt; function without passing the first argument. If the first argument is not passed, the value of &lt;code&gt;this&lt;/code&gt; is bound to the global object.</source>
          <target state="translated">En el siguiente ejemplo, invocamos la funci&amp;oacute;n de &lt;code&gt;display&lt;/code&gt; sin pasar el primer argumento. Si no se pasa el primer argumento, el valor de &lt;code&gt;this&lt;/code&gt; se vincula al objeto global.</target>
        </trans-unit>
        <trans-unit id="0c4da435fcb2e56dfca1fdbb66425c53d9f93888" translate="yes" xml:space="preserve">
          <source>In the example below, when we call &lt;code&gt;greet&lt;/code&gt;, the value of &lt;code&gt;this&lt;/code&gt; will be bound to object &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">En el siguiente ejemplo, cuando llamamos a &lt;code&gt;greet&lt;/code&gt; , el valor de &lt;code&gt;this&lt;/code&gt; estar&amp;aacute; vinculado al objeto &lt;code&gt;obj&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c878dda71bd4d57212f4760d1a5d6612fffe1a77" translate="yes" xml:space="preserve">
          <source>In the first implementation of JavaScript, JavaScript values were represented as a type tag and a value. The type tag for objects was 0. &lt;code&gt;null&lt;/code&gt; was represented as the NULL pointer (0x00 in most platforms). Consequently, null had 0 as type tag, hence the bogus &lt;code&gt;typeof&lt;/code&gt; return value. (&lt;a href=&quot;http://www.2ality.com/2013/10/typeof-null.html&quot;&gt;reference&lt;/a&gt;)</source>
          <target state="translated">En la primera implementaci&amp;oacute;n de JavaScript, los valores de JavaScript se representaron como una etiqueta de tipo y un valor. La etiqueta de tipo para los objetos era 0. &lt;code&gt;null&lt;/code&gt; se represent&amp;oacute; como el puntero NULL (0x00 en la mayor&amp;iacute;a de las plataformas). En consecuencia, null ten&amp;iacute;a 0 como etiqueta tipo, de ah&amp;iacute; el falso &lt;code&gt;typeof&lt;/code&gt; valor de retorno. ( &lt;a href=&quot;http://www.2ality.com/2013/10/typeof-null.html&quot;&gt;referencia&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="857eee85d465027bf36c77ed510b6ca131138764" translate="yes" xml:space="preserve">
          <source>In the first implementation of JavaScript, JavaScript values were represented as a type tag and a value. The type tag for objects was &lt;code&gt;0&lt;/code&gt;. &lt;code&gt;null&lt;/code&gt; was represented as the NULL pointer (&lt;code&gt;0x00&lt;/code&gt; in most platforms). Consequently, &lt;code&gt;null&lt;/code&gt; had &lt;code&gt;0&lt;/code&gt; as type tag, hence the &lt;code&gt;&quot;object&quot;&lt;/code&gt;&lt;code&gt;typeof&lt;/code&gt; return value. (&lt;a href=&quot;http://www.2ality.com/2013/10/typeof-null.html&quot;&gt;reference&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c1b2e168bd2c3f0960e008564fab4afcfb0149" translate="yes" xml:space="preserve">
          <source>In the following code, &lt;code&gt;flag.toString()&lt;/code&gt; returns &quot;&lt;code&gt;true&lt;/code&gt;&quot;:</source>
          <target state="translated">En el siguiente c&amp;oacute;digo, &lt;code&gt;flag.toString()&lt;/code&gt; devuelve &quot; &lt;code&gt;true&lt;/code&gt; &quot;:</target>
        </trans-unit>
        <trans-unit id="326dc4a22d6e5d66e05e913ed076ab8871545c67" translate="yes" xml:space="preserve">
          <source>In the following code, both of the statements containing &lt;code&gt;eval()&lt;/code&gt; return 42. The first evaluates the string &quot;&lt;code&gt;x + y + 1&lt;/code&gt;&quot;; the second evaluates the string &quot;&lt;code&gt;42&lt;/code&gt;&quot;.</source>
          <target state="translated">En el siguiente c&amp;oacute;digo, las dos declaraciones que contienen &lt;code&gt;eval()&lt;/code&gt; devuelven 42. La primera eval&amp;uacute;a la cadena &quot; &lt;code&gt;x + y + 1&lt;/code&gt; &quot;; el segundo eval&amp;uacute;a la cadena &quot; &lt;code&gt;42&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="7227f231dba8b388ff90697deb637f835c642754" translate="yes" xml:space="preserve">
          <source>In the following example we will create a global &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; method called &lt;code&gt;construct&lt;/code&gt;, which will enable you to use an array-like object with a constructor instead of an arguments list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccaa53cc09c2b150a701f3de632d7c64e3076c6" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;match()&lt;/code&gt; is used to find '&lt;code&gt;Chapter&lt;/code&gt;' followed by 1 or more numeric characters followed by a decimal point and numeric character 0 or more times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551908074dab38737ca378f22dc2a0152b483db4" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;match()&lt;/code&gt; is used to find &lt;code&gt;'Chapter'&lt;/code&gt; followed by 1 or more numeric characters followed by a decimal point and numeric character 0 or more times. The regular expression includes the &lt;code&gt;i&lt;/code&gt; flag so that upper/lower case differences will be ignored.</source>
          <target state="translated">En el siguiente ejemplo, &lt;code&gt;match()&lt;/code&gt; se usa para buscar &lt;code&gt;'Chapter'&lt;/code&gt; seguido de 1 o m&amp;aacute;s caracteres num&amp;eacute;ricos seguidos de un punto decimal y un car&amp;aacute;cter num&amp;eacute;rico 0 o m&amp;aacute;s veces. La expresi&amp;oacute;n regular incluye la bandera &lt;code&gt;i&lt;/code&gt; para que se ignoren las diferencias entre may&amp;uacute;sculas y min&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="3a1da1e1b8bfab54b105a4ada0152c93b74660c6" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;slice&lt;/code&gt; creates a new array, &lt;code&gt;newCar&lt;/code&gt;, from &lt;code&gt;myCar&lt;/code&gt;. Both include a reference to the object &lt;code&gt;myHonda&lt;/code&gt;. When the color of &lt;code&gt;myHonda&lt;/code&gt; is changed to purple, both arrays reflect the change.</source>
          <target state="translated">En el siguiente ejemplo, &lt;code&gt;slice&lt;/code&gt; crea una nueva matriz, &lt;code&gt;newCar&lt;/code&gt; , desde &lt;code&gt;myCar&lt;/code&gt; . Ambos incluyen una referencia al objeto &lt;code&gt;myHonda&lt;/code&gt; . Cuando el color de &lt;code&gt;myHonda&lt;/code&gt; se cambia a violeta, ambas matrices reflejan el cambio.</target>
        </trans-unit>
        <trans-unit id="b027578ad80c9e8c2b2c3dd35b71ae535a33dd33" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;split()&lt;/code&gt; looks for 0 or more spaces followed by a semicolon followed by 0 or more spaces and, when found, removes the spaces and the semicolon from the string. &lt;code&gt;nameList&lt;/code&gt; is the array returned as a result of &lt;code&gt;split()&lt;/code&gt;.</source>
          <target state="translated">En el siguiente ejemplo, &lt;code&gt;split()&lt;/code&gt; busca 0 o m&amp;aacute;s espacios seguidos de un punto y coma seguido de 0 o m&amp;aacute;s espacios y, cuando se encuentra, elimina los espacios y el punto y coma de la cadena. &lt;code&gt;nameList&lt;/code&gt; es la matriz devuelta como resultado de &lt;code&gt;split()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c2e6d8d45fd169d7a77ecae81e085840f806133" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;split()&lt;/code&gt; looks for spaces in a string and returns the first 3 splits that it finds.</source>
          <target state="translated">En el siguiente ejemplo, &lt;code&gt;split()&lt;/code&gt; busca espacios en una cadena y devuelve las primeras 3 divisiones que encuentra.</target>
        </trans-unit>
        <trans-unit id="2489eb3658fe2037e9cdda5effddf0b3a84f250d" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;split()&lt;/code&gt; looks for zero or more spaces, followed by a semicolon, followed by zero or more spaces&amp;mdash;and, when found, removes the spaces and the semicolon from the string. &lt;code&gt;nameList&lt;/code&gt; is the array returned as a result of &lt;code&gt;split()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb536da7c5287e832a975ca6e887bf6be2e7026" translate="yes" xml:space="preserve">
          <source>In the following example, a statement labeled &lt;code&gt;checkiandj&lt;/code&gt; contains a statement labeled &lt;code&gt;checkj&lt;/code&gt;. If &lt;code&gt;continue&lt;/code&gt; is encountered, the program continues at the top of the &lt;code&gt;checkj&lt;/code&gt; statement. Each time &lt;code&gt;continue&lt;/code&gt; is encountered, &lt;code&gt;checkj&lt;/code&gt; reiterates until its condition returns false. When false is returned, the remainder of the &lt;code&gt;checkiandj&lt;/code&gt; statement is completed.</source>
          <target state="translated">En el siguiente ejemplo, una declaraci&amp;oacute;n etiquetada &lt;code&gt;checkiandj&lt;/code&gt; contiene una declaraci&amp;oacute;n etiquetada &lt;code&gt;checkj&lt;/code&gt; . Si se encuentra &lt;code&gt;continue&lt;/code&gt; , el programa contin&amp;uacute;a en la parte superior de la instrucci&amp;oacute;n &lt;code&gt;checkj&lt;/code&gt; . Cada vez que &lt;code&gt;continue&lt;/code&gt; se encuentra, &lt;code&gt;checkj&lt;/code&gt; reitera hasta que su condici&amp;oacute;n vuelve falsa. Cuando se devuelve falso, se completa el resto de la instrucci&amp;oacute;n &lt;code&gt;checkiandj&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b489dc35a2ac4c8c478d127272578dceb8f8cdb" translate="yes" xml:space="preserve">
          <source>In the following example, if &lt;code&gt;expr&lt;/code&gt; evaluates to &quot;Bananas&quot;, the program matches the value with case &quot;Bananas&quot; and executes the associated statement. When &lt;code&gt;break&lt;/code&gt; is encountered, the program breaks out of &lt;code&gt;switch&lt;/code&gt; and executes the statement following &lt;code&gt;switch&lt;/code&gt;. If &lt;code&gt;break&lt;/code&gt; were omitted, the statement for case &quot;Cherries&quot; would also be executed.</source>
          <target state="translated">En el siguiente ejemplo, si &lt;code&gt;expr&lt;/code&gt; se eval&amp;uacute;a como &quot;Bananas&quot;, el programa compara el valor con el caso &quot;Bananas&quot; y ejecuta la instrucci&amp;oacute;n asociada. Cuando se encuentra una &lt;code&gt;break&lt;/code&gt; , el programa sale del &lt;code&gt;switch&lt;/code&gt; y ejecuta la instrucci&amp;oacute;n que sigue al &lt;code&gt;switch&lt;/code&gt; . Si se omite la &lt;code&gt;break&lt;/code&gt; , tambi&amp;eacute;n se ejecutar&amp;aacute; la instrucci&amp;oacute;n para el caso &quot;Cerezas&quot;.</target>
        </trans-unit>
        <trans-unit id="96f6335874bf336b7e951fdce7655cff74fd7933" translate="yes" xml:space="preserve">
          <source>In the following example, if &lt;code&gt;expr&lt;/code&gt; evaluates to &quot;Oranges&quot; or &quot;Apples&quot;, the program matches the values with either the case &quot;Oranges&quot; or &quot;Apples&quot; and executes the corresponding statement. The &lt;code&gt;default&lt;/code&gt; keyword will help in any other case and executes the associated statement.</source>
          <target state="translated">En el siguiente ejemplo, si &lt;code&gt;expr&lt;/code&gt; se eval&amp;uacute;a como &quot;Naranjas&quot; o &quot;Manzanas&quot;, el programa compara los valores con el caso &quot;Naranjas&quot; o &quot;Manzanas&quot; y ejecuta la instrucci&amp;oacute;n correspondiente. La palabra clave &lt;code&gt;default&lt;/code&gt; ayudar&amp;aacute; en cualquier otro caso y ejecuta la declaraci&amp;oacute;n asociada.</target>
        </trans-unit>
        <trans-unit id="8237fe8e3542597e9f1b9aab949f95c7735fe5b9" translate="yes" xml:space="preserve">
          <source>In the following example, if &lt;code&gt;expr&lt;/code&gt; evaluates to &lt;code&gt;Bananas&lt;/code&gt;, the program matches the value with case &lt;code&gt;case 'Bananas'&lt;/code&gt; and executes the associated statement. When &lt;code&gt;break&lt;/code&gt; is encountered, the program breaks out of &lt;code&gt;switch&lt;/code&gt; and executes the statement following &lt;code&gt;switch&lt;/code&gt;. If &lt;code&gt;break&lt;/code&gt; were omitted, the statement for the &lt;code&gt;case 'Cherries'&lt;/code&gt; would also be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f90002f54cb6c6ac4fe50fef20e7a2668d7f3de" translate="yes" xml:space="preserve">
          <source>In the following example, if no value is provided for &lt;code&gt;&lt;var&gt;b&lt;/var&gt;&lt;/code&gt; when &lt;code&gt;multiply&lt;/code&gt; is called, &lt;code&gt;&lt;var&gt;b&lt;/var&gt;&lt;/code&gt;'s value would be &lt;code&gt;undefined&lt;/code&gt; when evaluating &lt;code&gt;&lt;var&gt;a&lt;/var&gt; * &lt;var&gt;b&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;multiply&lt;/code&gt; would return &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ddded5321b57a0d866951feace6e4cea99bc3c" translate="yes" xml:space="preserve">
          <source>In the following example, if no value is provided for &lt;code&gt;b&lt;/code&gt; when &lt;code&gt;multiply&lt;/code&gt; is called, &lt;code&gt;b&lt;/code&gt;&amp;rsquo;s value would be &lt;code&gt;undefined&lt;/code&gt; when evaluating &lt;code&gt;a * b&lt;/code&gt; and &lt;code&gt;multiply&lt;/code&gt; would return &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">En el ejemplo siguiente, si no se proporciona ning&amp;uacute;n valor para &lt;code&gt;b&lt;/code&gt; cuando &lt;code&gt;multiply&lt;/code&gt; se llama, &lt;code&gt;b&lt;/code&gt; &amp;lsquo;s valor ser&amp;iacute;a &lt;code&gt;undefined&lt;/code&gt; cuando se eval&amp;uacute;a &lt;code&gt;a * b&lt;/code&gt; y &lt;code&gt;multiply&lt;/code&gt; volver&amp;iacute;a &lt;code&gt;NaN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9742f1b1d9915daea9f896ab1adc27f1b391e232" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;code&gt;do...while&lt;/code&gt; loop iterates at least once and reiterates until &lt;code&gt;i&lt;/code&gt; is no longer less than 5.</source>
          <target state="translated">En el siguiente ejemplo, el ciclo &lt;code&gt;do...while&lt;/code&gt; while itera al menos una vez y se reitera hasta que &lt;code&gt;i&lt;/code&gt; no es menor que 5.</target>
        </trans-unit>
        <trans-unit id="290da318e59120487518c92d769cd84cc341a64b" translate="yes" xml:space="preserve">
          <source>In the following example, the array &lt;code&gt;numbers&lt;/code&gt; is iterated through by looking at the &lt;code&gt;length&lt;/code&gt; property. The value in each element is then doubled.</source>
          <target state="translated">En el siguiente ejemplo, los &lt;code&gt;numbers&lt;/code&gt; matriz se repiten observando la propiedad &lt;code&gt;length&lt;/code&gt; . A continuaci&amp;oacute;n, se duplica el valor de cada elemento.</target>
        </trans-unit>
        <trans-unit id="3e970986a7e8da7faf5f169eb8ef1a860c621631" translate="yes" xml:space="preserve">
          <source>In the following example, the constructor for the &lt;code&gt;Product&lt;/code&gt; object is defined with two parameters: &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;price&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c716507b55f4e7d36a7bf5bbf5705d645b4cfbd" translate="yes" xml:space="preserve">
          <source>In the following example, the object has a getter as its own property. On getting the property, the property is removed from the object and re-added, but implicitly as a data property this time. Finally the value gets returned.</source>
          <target state="translated">En el siguiente ejemplo,el objeto tiene un getter como su propia propiedad.Al obtener la propiedad,la propiedad se quita del objeto y se vuelve a añadir,pero esta vez implícitamente como una propiedad de datos.Finalmente el valor es devuelto.</target>
        </trans-unit>
        <trans-unit id="948e31f9a2ae361570277883f29ebf342acf68b5" translate="yes" xml:space="preserve">
          <source>In the following example, the object has a getter as its own property. On getting the property, the property is removed from the object and re-added, but implicitly as a data property this time. Finally, the value gets returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63491fcad57234202d5746abce8c2f912c702dac" translate="yes" xml:space="preserve">
          <source>In the following example, the regular expression is defined in &lt;code&gt;replace()&lt;/code&gt; and includes the ignore case flag.</source>
          <target state="translated">En el siguiente ejemplo, la expresi&amp;oacute;n regular se define en &lt;code&gt;replace()&lt;/code&gt; e incluye la marca de ignorar may&amp;uacute;sculas y min&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="e10c0f043f02b2123d978ede8da98693e4584598" translate="yes" xml:space="preserve">
          <source>In the following example, the usage is probably not intentional:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3a594f9a72b0094faccc4763da19747b8d1679" translate="yes" xml:space="preserve">
          <source>In the following example, the variable &lt;code&gt;bigNumber&lt;/code&gt; is assigned a value that is larger than the maximum value. When the &lt;a href=&quot;../../statements/if...else&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; statement executes, &lt;code&gt;bigNumber&lt;/code&gt; has the value &lt;code&gt;Infinity&lt;/code&gt;, so &lt;code&gt;bigNumber&lt;/code&gt; is set to a more manageable value before continuing.</source>
          <target state="translated">En el siguiente ejemplo, a la variable &lt;code&gt;bigNumber&lt;/code&gt; se le asigna un valor que es mayor que el valor m&amp;aacute;ximo. Cuando se ejecuta la instrucci&amp;oacute;n &lt;a href=&quot;../../statements/if...else&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;bigNumber&lt;/code&gt; tiene el valor &lt;code&gt;Infinity&lt;/code&gt; , por lo que &lt;code&gt;bigNumber&lt;/code&gt; se establece en un valor m&amp;aacute;s manejable antes de continuar.</target>
        </trans-unit>
        <trans-unit id="a0d991c308ff8ad2345c76fb15afab7a3798cf66" translate="yes" xml:space="preserve">
          <source>In the following example, the variable &lt;code&gt;smallNumber&lt;/code&gt; is assigned a value that is smaller than the minimum value. When the &lt;a href=&quot;../../statements/if...else&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; statement executes, &lt;code&gt;smallNumber&lt;/code&gt; has the value &lt;code&gt;-Infinity&lt;/code&gt;, so &lt;code&gt;smallNumber&lt;/code&gt; is set to a more manageable value before continuing.</source>
          <target state="translated">En el siguiente ejemplo, a la variable &lt;code&gt;smallNumber&lt;/code&gt; se le asigna un valor que es menor que el valor m&amp;iacute;nimo. Cuando se ejecuta la instrucci&amp;oacute;n &lt;a href=&quot;../../statements/if...else&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;smallNumber&lt;/code&gt; tiene el valor &lt;code&gt;-Infinity&lt;/code&gt; , por lo que &lt;code&gt;smallNumber&lt;/code&gt; se establece en un valor m&amp;aacute;s manejable antes de continuar.</target>
        </trans-unit>
        <trans-unit id="d0bdf3814229a99d3d55903e9dbbccafa691e79d" translate="yes" xml:space="preserve">
          <source>In the following example, we delete an own property of an object while a property with the same name is available on the prototype chain:</source>
          <target state="translated">En el siguiente ejemplo,eliminamos una propiedad propia de un objeto mientras que una propiedad con el mismo nombre está disponible en la cadena del prototipo:</target>
        </trans-unit>
        <trans-unit id="d1688dd1bc4311871facdb22d215ac29f4cfd269" translate="yes" xml:space="preserve">
          <source>In the following example, we first define a class named &lt;code&gt;Polygon&lt;/code&gt;, then extend it to create a class named &lt;code&gt;Square&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3915fb85a203c34c4701029950bb8a9c14f92f1b" translate="yes" xml:space="preserve">
          <source>In the following example, we first define a class named Polygon, then extend it to create a class named Square. Note that super(), used in the constructor, can only be used in constructors and must be called before the &lt;code&gt;this&lt;/code&gt; keyword can be used.</source>
          <target state="translated">En el siguiente ejemplo, primero definimos una clase llamada Pol&amp;iacute;gono, luego la ampliamos para crear una clase llamada Cuadrado. Tenga en cuenta que super (), utilizado en el constructor, solo se puede utilizar en constructores y debe invocarse antes de que se pueda utilizar la palabra clave &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="382dd03774580bb2f9d04acd67e5dab59c412528" translate="yes" xml:space="preserve">
          <source>In the following example, we successively await two promises. Progress moves through function &lt;code&gt;foo&lt;/code&gt; in three stages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec0333973c02fd58485ca1aa0e462c7548eff95" translate="yes" xml:space="preserve">
          <source>In the following example, when &lt;code&gt;o.f()&lt;/code&gt; is invoked, inside the function &lt;code&gt;this&lt;/code&gt; is bound to the &lt;code&gt;o&lt;/code&gt; object.</source>
          <target state="translated">En el siguiente ejemplo, cuando se invoca &lt;code&gt;o.f()&lt;/code&gt; , dentro de la funci&amp;oacute;n, &lt;code&gt;this&lt;/code&gt; est&amp;aacute; vinculado al objeto &lt;code&gt;o&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04bcd5d96a4ccd8139ff398132b2d5a23f10fbfa" translate="yes" xml:space="preserve">
          <source>In the following piece of code, &lt;code&gt;slice()&lt;/code&gt; is a bound function to the &lt;a href=&quot;apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt; function of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function.prototype&lt;/code&gt;&lt;/a&gt;, with the &lt;code&gt;this&lt;/code&gt; value set to the &lt;a href=&quot;../array/slice&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt; function of &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/prototype&quot;&gt;&lt;code&gt;Array.prototype&lt;/code&gt;&lt;/a&gt;. This means that additional &lt;code&gt;apply()&lt;/code&gt; calls can be eliminated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="910701d472ecd5b702fc4b46aec86e952f4bac39" translate="yes" xml:space="preserve">
          <source>In the former instance, JS seems to find an empty string just after the specified index value. In the latter instance, JS seems to be finding an empty string at the end of the searched string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95ef1758d9879398c7d717728553d776121d64a" translate="yes" xml:space="preserve">
          <source>In the function signature for &lt;code&gt;drawChart&lt;/code&gt; above, the destructured left-hand side is assigned to an empty object literal on the right-hand side: &lt;code&gt;{size = 'big', coords = {x: 0, y: 0}, radius = 25} = {}&lt;/code&gt;. You could have also written the function without the right-hand side assignment. However, if you leave out the right-hand side assignment, the function will look for at least one argument to be supplied when invoked, whereas in its current form, you can simply call &lt;code&gt;&lt;strong&gt;drawChart()&lt;/strong&gt;&lt;/code&gt; without supplying any parameters. The current design is useful if you want to be able to call the function without supplying any parameters, the other can be useful when you want to ensure an object is passed to the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320ac0eafa6debb7dcd8b9758ef8cfe6b6f8db61" translate="yes" xml:space="preserve">
          <source>In the function signature for &lt;code&gt;drawES2015Chart&lt;/code&gt; above, the destructured left-hand side is assigned to an empty object literal on the right-hand side: &lt;code&gt;{size = 'big', cords = {x: 0, y: 0}, radius = 25} = {}&lt;/code&gt;. You could have also written the function without the right-hand side assignment. However, if you leave out the right-hand side assignment, the function will look for at least one argument to be supplied when invoked, whereas in its current form, you can simply call &lt;code&gt;&lt;strong&gt;drawES2015Chart()&lt;/strong&gt;&lt;/code&gt; without supplying any parameters. The current design is useful if you want to be able to call the function without supplying any parameters, the other can be useful when you want to ensure an object is passed to the function.</source>
          <target state="translated">En la firma de la funci&amp;oacute;n para &lt;code&gt;drawES2015Chart&lt;/code&gt; anterior, el lado izquierdo desestructurado se asigna a un objeto literal vac&amp;iacute;o en el lado derecho: &lt;code&gt;{size = 'big', cords = {x: 0, y: 0}, radius = 25} = {}&lt;/code&gt; . Tambi&amp;eacute;n podr&amp;iacute;a haber escrito la funci&amp;oacute;n sin la asignaci&amp;oacute;n del lado derecho. Sin embargo, si &lt;code&gt;&lt;strong&gt;drawES2015Chart()&lt;/strong&gt;&lt;/code&gt; asignaci&amp;oacute;n del lado derecho, la funci&amp;oacute;n buscar&amp;aacute; al menos un argumento que se proporcionar&amp;aacute; cuando se invoque, mientras que en su forma actual, simplemente puede llamar a &lt;strong&gt;drawES2015Chart ()&lt;/strong&gt; sin proporcionar ning&amp;uacute;n par&amp;aacute;metro. El dise&amp;ntilde;o actual es &amp;uacute;til si desea poder llamar a la funci&amp;oacute;n sin proporcionar ning&amp;uacute;n par&amp;aacute;metro, el otro puede ser &amp;uacute;til cuando desea asegurarse de que se pase un objeto a la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="384cd9fe2f63891e05c6315f490a0fe09b2696a0" translate="yes" xml:space="preserve">
          <source>In the global context, a variable declared using &lt;code&gt;var&lt;/code&gt; is added as a non-configurable property of the global object. This means its property descriptor cannot be changed and it cannot be deleted using &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt;. The corresponding name is also added to a list on the internal &lt;code&gt;[[VarNames]]&lt;/code&gt; slot on the &lt;a href=&quot;https://www.ecma-international.org/ecma-262/10.0/index.html#sec-global-environment-records&quot;&gt;global environment record&lt;/a&gt; (which forms part of the global lexical environment). The list of names in &lt;code&gt;[[VarNames]]&lt;/code&gt; enables the runtime to distinguish between global variables and straightforward properties on the global object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec2ed1a49c59897eb318170d9b6bd3065461b6d" translate="yes" xml:space="preserve">
          <source>In the global execution context (outside of any function), &lt;code&gt;this&lt;/code&gt; refers to the global object whether in strict mode or not.</source>
          <target state="translated">En el contexto de ejecuci&amp;oacute;n global (fuera de cualquier funci&amp;oacute;n), &lt;code&gt;this&lt;/code&gt; refiere al objeto global ya sea en modo estricto o no.</target>
        </trans-unit>
        <trans-unit id="4323cb3e94dbb71c6dea4adf5e31307a360729a9" translate="yes" xml:space="preserve">
          <source>In the last example (&lt;code&gt;C2&lt;/code&gt;), because an object was returned during construction, the new object that &lt;code&gt;this&lt;/code&gt; was bound to simply gets discarded. (This essentially makes the statement &quot;&lt;code&gt;this.a = 37;&lt;/code&gt;&quot; dead code. It's not exactly dead because it gets executed, but it can be eliminated with no outside effects.)</source>
          <target state="translated">En el &amp;uacute;ltimo ejemplo ( &lt;code&gt;C2&lt;/code&gt; ), porque un objeto fue devuelto durante la construcci&amp;oacute;n, el nuevo objeto de que &lt;code&gt;this&lt;/code&gt; se une a simplemente se descarta. (Esto esencialmente hace que la declaraci&amp;oacute;n &quot; &lt;code&gt;this.a = 37;&lt;/code&gt; &quot; sea un c&amp;oacute;digo muerto. No est&amp;aacute; exactamente muerto porque se ejecuta, pero se puede eliminar sin efectos externos).</target>
        </trans-unit>
        <trans-unit id="00e90f9a8f3cbcb6e3ee4661127d9871d59bd623" translate="yes" xml:space="preserve">
          <source>In the module, we could use the following code:</source>
          <target state="translated">En el módulo,podríamos usar el siguiente código:</target>
        </trans-unit>
        <trans-unit id="f8a9e58aa43466c9b9026972ff36cb4dd102c297" translate="yes" xml:space="preserve">
          <source>In the next example, a rest parameter is used to collect all arguments after the first one in an array. Each one of them is then multiplied by the first parameter and the array is returned:</source>
          <target state="translated">En el siguiente ejemplo,se utiliza un parámetro de reposo para recoger todos los argumentos después del primero de una matriz.Cada uno de ellos se multiplica entonces por el primer parámetro y se devuelve el array:</target>
        </trans-unit>
        <trans-unit id="a1d0de29c2467a1bcda0bcf6cead5586e0aa1d34" translate="yes" xml:space="preserve">
          <source>In the next example, a rest parameter is used to collect all parameters after the first into an array. Each one of them is then multiplied by the first parameter, and the array is returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deb91bb9b2b1254cf0c448c27969519e3a92034" translate="yes" xml:space="preserve">
          <source>In the next example, an &lt;a href=&quot;if...else&quot;&gt;&lt;code&gt;if...else&lt;/code&gt;&lt;/a&gt; statement without curly braces (&lt;code&gt;{}&lt;/code&gt;) is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e204d4b72625c73764da0600a44e35ab5711b4a" translate="yes" xml:space="preserve">
          <source>In the past, the general strategy for setting defaults was to test parameter values in the function body and assign a value if they are &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">En el pasado, la estrategia general para establecer valores predeterminados era probar los valores de los par&amp;aacute;metros en el cuerpo de la funci&amp;oacute;n y asignar un valor si no estaban &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="118743fe11f8aa51b1246d6b929e4cf6c2a3a3c4" translate="yes" xml:space="preserve">
          <source>In the replacement text, the script uses &lt;code&gt;$1&lt;/code&gt; and &lt;code&gt;$2&lt;/code&gt; to indicate the results of the corresponding matching parentheses in the regular expression pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18901524c393bd6c9d4140d7173cf206ad8f759d" translate="yes" xml:space="preserve">
          <source>In the same line, the &lt;code&gt;if&lt;/code&gt; block's &lt;code&gt;foo&lt;/code&gt; has already been created in the lexical environment, but has not yet reached (and terminated) its initialization (which is part of the statement itself).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f67384bff317df6dc3f3c5721272dbec196a342" translate="yes" xml:space="preserve">
          <source>In the second call in this example, even if the first argument is set explicitly to &lt;code&gt;undefined&lt;/code&gt; (though not &lt;code&gt;null&lt;/code&gt; or other &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt; values), the value of the &lt;code&gt;&lt;var&gt;num&lt;/var&gt;&lt;/code&gt; argument is still the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b8cef8365495d74b0b650d8145880b109b506c" translate="yes" xml:space="preserve">
          <source>In the second call in this example, even if the first argument is set explicitly to &lt;code&gt;undefined&lt;/code&gt; (though not &lt;code&gt;null&lt;/code&gt; or other &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Falsy&quot;&gt;falsy&lt;/a&gt; values&lt;/em&gt;), the value of the &lt;code&gt;num&lt;/code&gt; argument is still the default.</source>
          <target state="translated">En la segunda llamada de este ejemplo, incluso si el primer argumento se establece expl&amp;iacute;citamente en &lt;code&gt;undefined&lt;/code&gt; (aunque no es &lt;code&gt;null&lt;/code&gt; u otros &lt;em&gt;valores &lt;/em&gt;&lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Falsy&quot;&gt;falsos&lt;/a&gt;&lt;/em&gt; ), el valor del argumento &lt;code&gt;num&lt;/code&gt; sigue siendo el predeterminado.</target>
        </trans-unit>
        <trans-unit id="7b79ff68d3fff0dd724c0e66e2c8369970388f4e" translate="yes" xml:space="preserve">
          <source>In the second example, &lt;code&gt;this&lt;/code&gt; should be &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, because &lt;code&gt;f2&lt;/code&gt; was called directly and not as a method or property of an object (e.g. &lt;code&gt;window.f2()&lt;/code&gt;). This feature wasn't implemented in some browsers when they first started to support &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;. As a result, they incorrectly returned the &lt;code&gt;window&lt;/code&gt; object.</source>
          <target state="translated">En el segundo ejemplo, &lt;code&gt;this&lt;/code&gt; deber&amp;iacute;a estar &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , porque &lt;code&gt;f2&lt;/code&gt; se llam&amp;oacute; directamente y no como un m&amp;eacute;todo o propiedad de un objeto (por ejemplo, &lt;code&gt;window.f2()&lt;/code&gt; ). Esta funci&amp;oacute;n no se implement&amp;oacute; en algunos navegadores cuando comenzaron a admitir el &lt;a href=&quot;../strict_mode&quot;&gt;modo estricto&lt;/a&gt; . Como resultado, devolvieron incorrectamente el objeto de &lt;code&gt;window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cd33ef758331369d99dcee31aeb7e6ca215fa7f" translate="yes" xml:space="preserve">
          <source>In the syntax, the text string represents the literal text that you want the user to see. The &lt;code&gt;name&lt;/code&gt; parameter string represents the &lt;code&gt;name&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">En la sintaxis, la cadena de texto representa el texto literal que desea que vea el usuario. La cadena de par&amp;aacute;metro de &lt;code&gt;name&lt;/code&gt; representa el atributo de &lt;code&gt;name&lt;/code&gt; del elemento &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eae556c3be7f945436b5d6044a42766b280d5e47" translate="yes" xml:space="preserve">
          <source>In the table below, &lt;strong&gt;Grouping&lt;/strong&gt; is listed as having the highest precedence. However, that does not always mean the expression within the grouping symbols &lt;code&gt;( &amp;hellip; )&lt;/code&gt; is evaluated first, especially when it comes to short-circuiting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bb1c4268b088f014ea5a9a7d9ea551816d49cc" translate="yes" xml:space="preserve">
          <source>In the uncompressed version, the program runs into the truthy-branch and logs &quot;&lt;code&gt;'foo' is an instance of 'Foo'&lt;/code&gt;&quot;. Whereas, in the compressed version it behaves differently, and runs into the else-branch. If you rely on &lt;code&gt;Function.name&lt;/code&gt;, like in the example above, make sure your build pipeline doesn't change function names, or don't assume a function to have a particular name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bb87933d62241b361f74acb67f3e98a281c829" translate="yes" xml:space="preserve">
          <source>In the uncompressed version, the program runs into the truthy-branch and logs &lt;em&gt;'foo' is an instance of 'Foo'&lt;/em&gt;. Whereas, in the compressed version it behaves differently, and runs into the else-branch. If you rely on &lt;code&gt;Function.name&lt;/code&gt;, like in the example above, make sure your build pipeline doesn't change function names, or don't assume a function to have a particular name.</source>
          <target state="translated">En la versi&amp;oacute;n sin comprimir, el programa se ejecuta en la rama de verdad y logs &lt;em&gt;'foo' es una instancia de 'Foo'&lt;/em&gt; . Mientras que, en la versi&amp;oacute;n comprimida, se comporta de manera diferente y se ejecuta en la rama else. Si conf&amp;iacute;a en &lt;code&gt;Function.name&lt;/code&gt; , como en el ejemplo anterior, aseg&amp;uacute;rese de que su canal de compilaci&amp;oacute;n no cambie los nombres de las funciones, o no asuma que una funci&amp;oacute;n tiene un nombre en particular.</target>
        </trans-unit>
        <trans-unit id="a6045774c4491fab11ca343b8a71fe9f28294720" translate="yes" xml:space="preserve">
          <source>In the worker (see &lt;code&gt;&lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/wasm_worker.js&quot;&gt;wasm_worker.js&lt;/a&gt;&lt;/code&gt;) we define an import object for the module to use, then set up an event handler to receive the module from the main thread. When the module is received, we create an instance from it using the &lt;a href=&quot;instantiate&quot;&gt;&lt;code&gt;WebAssembly.instantiate()&lt;/code&gt;&lt;/a&gt; method and invoke an exported function from inside it.</source>
          <target state="translated">En el trabajador (ver &lt;code&gt;&lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/wasm_worker.js&quot;&gt;wasm_worker.js&lt;/a&gt;&lt;/code&gt; ) definimos un objeto de importaci&amp;oacute;n para que lo use el m&amp;oacute;dulo, luego configuramos un controlador de eventos para recibir el m&amp;oacute;dulo desde el hilo principal. Cuando se recibe el m&amp;oacute;dulo, creamos una instancia a partir de &amp;eacute;l utilizando el m&amp;eacute;todo &lt;a href=&quot;instantiate&quot;&gt; &lt;code&gt;WebAssembly.instantiate()&lt;/code&gt; &lt;/a&gt; e invocamos una funci&amp;oacute;n exportada desde su interior.</target>
        </trans-unit>
        <trans-unit id="012ee32c213d819cb9d3fb7476f49f1095628ce9" translate="yes" xml:space="preserve">
          <source>In the worker (see &lt;code&gt;&lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/wasm_worker.js&quot;&gt;wasm_worker.js&lt;/a&gt;&lt;/code&gt;) we define an import object for the module to use, then set up an event handler to receive the module from the main thread. when the module is received, we create an instance from it using the &lt;a href=&quot;../instantiate&quot;&gt;&lt;code&gt;WebAssembly.Instantiate()&lt;/code&gt;&lt;/a&gt; method, invoke an exported function from inside it, then show how we can return information on the available exports on a module using &lt;code&gt;WebAssembly.Module.exports&lt;/code&gt;.</source>
          <target state="translated">En el trabajador (ver &lt;code&gt;&lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/wasm_worker.js&quot;&gt;wasm_worker.js&lt;/a&gt;&lt;/code&gt; ) definimos un objeto de importaci&amp;oacute;n para que lo use el m&amp;oacute;dulo, luego configuramos un controlador de eventos para recibir el m&amp;oacute;dulo desde el hilo principal. cuando se recibe el m&amp;oacute;dulo, creamos una instancia a partir de &amp;eacute;l usando el m&amp;eacute;todo &lt;a href=&quot;../instantiate&quot;&gt; &lt;code&gt;WebAssembly.Instantiate()&lt;/code&gt; &lt;/a&gt; , invocamos una funci&amp;oacute;n exportada desde su interior, luego mostramos c&amp;oacute;mo podemos devolver informaci&amp;oacute;n sobre las exportaciones disponibles en un m&amp;oacute;dulo usando &lt;code&gt;WebAssembly.Module.exports&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70bec1ed815f54f78684ae17e4732e9e7306cdd6" translate="yes" xml:space="preserve">
          <source>In this case it's important to return only an integer (so a simple division won't do), and also to only return actually elapsed seconds (that's why this code uses &lt;a href=&quot;math/floor&quot;&gt;&lt;code&gt;Math.floor()&lt;/code&gt;&lt;/a&gt; and not &lt;a href=&quot;math/round&quot;&gt;&lt;code&gt;Math.round()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">En este caso, es importante devolver solo un n&amp;uacute;mero entero (por lo que una divisi&amp;oacute;n simple no servir&amp;aacute;), y tambi&amp;eacute;n devolver solo los segundos realmente transcurridos (por eso este c&amp;oacute;digo usa &lt;a href=&quot;math/floor&quot;&gt; &lt;code&gt;Math.floor()&lt;/code&gt; &lt;/a&gt; y no &lt;a href=&quot;math/round&quot;&gt; &lt;code&gt;Math.round()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8c9f7d01af5e1fce725fc980e3a1487d78434b0a" translate="yes" xml:space="preserve">
          <source>In this case, it's important to return only an integer&amp;mdash;so a simple division won't do. It's also important to only return actually elapsed seconds. (That's why this code uses &lt;a href=&quot;math/floor&quot;&gt;&lt;code&gt;Math.floor()&lt;/code&gt;&lt;/a&gt;, and &lt;em&gt;not&lt;/em&gt;&lt;a href=&quot;math/round&quot;&gt;&lt;code&gt;Math.round()&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186a0d96b6bdd1c3792c513064740ed74358e3ab" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;console.log()&lt;/code&gt; call is never issued, since it's inside a comment. Any number of lines of code can be disabled this way.</source>
          <target state="translated">En este caso, la llamada &lt;code&gt;console.log()&lt;/code&gt; nunca se emite, ya que est&amp;aacute; dentro de un comentario. De esta forma se puede desactivar cualquier n&amp;uacute;mero de l&amp;iacute;neas de c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="03c6fb8b542b497eb35334ab759b3e7f836b4e4a" translate="yes" xml:space="preserve">
          <source>In this case, the function &lt;code&gt;sum&lt;/code&gt; has default parameters &lt;code&gt;a=1&lt;/code&gt; and &lt;code&gt;b=2&lt;/code&gt;:</source>
          <target state="translated">En este caso, la funci&amp;oacute;n &lt;code&gt;sum&lt;/code&gt; a tiene los par&amp;aacute;metros predeterminados &lt;code&gt;a=1&lt;/code&gt; y &lt;code&gt;b=2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="83c25e00d5dc533083c80281b6cb39e68fc1bfd2" translate="yes" xml:space="preserve">
          <source>In this case, the inner function's &lt;code&gt;this&lt;/code&gt; isn't set so it returns the global/window object (i.e. the default object in non&amp;ndash;strict mode where &lt;code&gt;this&lt;/code&gt; isn't set by the call).</source>
          <target state="translated">En este caso, la funci&amp;oacute;n interna es &lt;code&gt;this&lt;/code&gt; no se establece de modo que devuelve el objeto global de la ventana / (es decir, el objeto por defecto en modo no estricta donde &lt;code&gt;this&lt;/code&gt; no est&amp;aacute; establecido por la llamada).</target>
        </trans-unit>
        <trans-unit id="ee090e37a02dcb4f76244ca9578ebc7366ff2c73" translate="yes" xml:space="preserve">
          <source>In this case, the property &lt;code&gt;bar&lt;/code&gt; is an undefined property, so a &lt;code&gt;ReferenceError&lt;/code&gt; will occur.</source>
          <target state="translated">En este caso, la &lt;code&gt;bar&lt;/code&gt; ra de propiedades es una propiedad no definida, por lo que se producir&amp;aacute; un &lt;code&gt;ReferenceError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ba12f762c8080d1368efbc5da9ff771dc86bdae" translate="yes" xml:space="preserve">
          <source>In this case, the variable &quot;arg&quot; redeclares the argument.</source>
          <target state="translated">En este caso,la variable &quot;arg&quot; redeclara el argumento.</target>
        </trans-unit>
        <trans-unit id="37c152d2215becaac46c7389493a06f938d3439c" translate="yes" xml:space="preserve">
          <source>In this case, the variable &quot;bar&quot; is an undeclared variable.</source>
          <target state="translated">En este caso,la variable &quot;barra&quot; es una variable no declarada.</target>
        </trans-unit>
        <trans-unit id="1089c3880315f3e567e584d5eccf757d257bcc7e" translate="yes" xml:space="preserve">
          <source>In this case, the variable &quot;foo&quot; is redeclared in the block statement using &lt;code&gt;let&lt;/code&gt;.</source>
          <target state="translated">En este caso, la variable &quot;foo&quot; se vuelve a declarar en la declaraci&amp;oacute;n del bloque usando &lt;code&gt;let&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="607fad50d33fb3b355e7cc4cdeae47a48846941f" translate="yes" xml:space="preserve">
          <source>In this case, we return all the selected &lt;code&gt;option&lt;/code&gt;s' values on the screen:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5233ec322e51b52c87cb640dd6c9fe7a2b2a7d5" translate="yes" xml:space="preserve">
          <source>In this case, which happens way too often, there is a typo in the method name:</source>
          <target state="translated">En este caso,que sucede con demasiada frecuencia,hay un error en el nombre del método:</target>
        </trans-unit>
        <trans-unit id="ce98cc8bdab5c6d18ec608646a8a392ecc6990dc" translate="yes" xml:space="preserve">
          <source>In this code, &lt;code&gt;property&lt;/code&gt; must be a valid JavaScript identifier, i.e. a sequence of alphanumerical characters, also including the underscore (&quot;&lt;code&gt;_&lt;/code&gt;&quot;) and dollar sign (&quot;&lt;code&gt;$&lt;/code&gt;&quot;), that cannot start with a number. For example, &lt;code&gt;object.$1&lt;/code&gt; is valid, while &lt;code&gt;object.1&lt;/code&gt; is not.</source>
          <target state="translated">En este c&amp;oacute;digo, la &lt;code&gt;property&lt;/code&gt; debe ser un identificador JavaScript v&amp;aacute;lido, es decir, una secuencia de caracteres alfanum&amp;eacute;ricos, que tambi&amp;eacute;n incluye el gui&amp;oacute;n bajo (&quot; &lt;code&gt;_&lt;/code&gt; &quot;) y el signo de d&amp;oacute;lar (&quot; &lt;code&gt;$&lt;/code&gt; &quot;), que no puede comenzar con un n&amp;uacute;mero. Por ejemplo, &lt;code&gt;object.$1&lt;/code&gt; es v&amp;aacute;lido, mientras que &lt;code&gt;object.1&lt;/code&gt; no lo es.</target>
        </trans-unit>
        <trans-unit id="bcac0f21dd62d88cc1fc1d7c5edc9c0b7b37a5fd" translate="yes" xml:space="preserve">
          <source>In this example we define a function that can add two or more numbers together.</source>
          <target state="translated">En este ejemplo definimos una función que puede sumar dos o más números.</target>
        </trans-unit>
        <trans-unit id="44ecc52fcc1dd532a59d37d9c27852cb4e6632c6" translate="yes" xml:space="preserve">
          <source>In this example when the setter is triggered, it is told to do the same thing again: &lt;em&gt;to set the same property that it is meant to handle.&lt;/em&gt; This causes the function to call itself, again and again, making it infinitely recursive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfda2fb9a04305f886bcd0e49716e0ef48179b89" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;f()&lt;/code&gt; returns the values &lt;code&gt;[1, 2]&lt;/code&gt; as its output, which can be parsed in a single line with destructuring.</source>
          <target state="translated">En este ejemplo, &lt;code&gt;f()&lt;/code&gt; devuelve los valores &lt;code&gt;[1, 2]&lt;/code&gt; como su salida, que se puede analizar en una sola l&amp;iacute;nea con desestructuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4ec37b22188853fa195e1eb0a40dd6fc5647d4b0" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;next&lt;/code&gt; is called with a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a73078322457f6e2a4f76866f7f2bd2d296423" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;next&lt;/code&gt; is called with a value. Note that the first call did not log anything, because the generator was not yielding anything initially.</source>
          <target state="translated">En este ejemplo, &lt;code&gt;next&lt;/code&gt; se llama con un valor. Tenga en cuenta que la primera llamada no registr&amp;oacute; nada, porque el generador no estaba produciendo nada inicialmente.</target>
        </trans-unit>
        <trans-unit id="563d6171046b28102d99d569274b89bdabeb1e27" translate="yes" xml:space="preserve">
          <source>In this example, a getter always returns the same value.</source>
          <target state="translated">En este ejemplo,un getter siempre devuelve el mismo valor.</target>
        </trans-unit>
        <trans-unit id="2d925e67a635ae1e3d2c5b8950ddc3283286c2d1" translate="yes" xml:space="preserve">
          <source>In this example, all occurrences of capital letters in the string are converted to lower case, and a hyphen is inserted just before the match location. The important thing here is that additional operations are needed on the matched item before it is given back as a replacement.</source>
          <target state="translated">En este ejemplo,todas las apariciones de mayúsculas en la cadena se convierten en minúsculas,y se inserta un guión justo antes de la ubicación de la coincidencia.Lo importante aquí es que se necesitan operaciones adicionales en el artículo emparejado antes de que sea devuelto como reemplazo.</target>
        </trans-unit>
        <trans-unit id="f33012959cef3631ac1b179a71cdf251a2d34c8f" translate="yes" xml:space="preserve">
          <source>In this example, the first argument is mapped to &lt;code&gt;&quot;a&quot;&lt;/code&gt; and the second to &lt;code&gt;&quot;b&quot;&lt;/code&gt;, so these named arguments are used like normal. However the third argument &lt;code&gt;&quot;manyMoreArgs&quot;&lt;/code&gt; will be an array that contains the 3rd, 4th, 5th, 6th ... nth -- as many arguments that the user includes.</source>
          <target state="translated">En este ejemplo, el primer argumento se asigna a &lt;code&gt;&quot;a&quot;&lt;/code&gt; y el segundo a &lt;code&gt;&quot;b&quot;&lt;/code&gt; , por lo que estos argumentos con nombre se utilizan normalmente. Sin embargo, el tercer argumento &lt;code&gt;&quot;manyMoreArgs&quot;&lt;/code&gt; ser&amp;aacute; una matriz que contiene el 3&amp;ordm;, 4&amp;ordm;, 5&amp;ordm;, 6&amp;ordm; ... en&amp;eacute;simo - tantos argumentos como el usuario incluya.</target>
        </trans-unit>
        <trans-unit id="b5ba9ccc89fc1604d1696a6f06c45a0e15818a82" translate="yes" xml:space="preserve">
          <source>In this example, the first argument is mapped to &lt;code&gt;a&lt;/code&gt; and the second to &lt;code&gt;b&lt;/code&gt;, so these named arguments are used as normal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694ce76b4ee53e67741df07c604b0136305f4feb" translate="yes" xml:space="preserve">
          <source>In this example, the object assigned to the variable &lt;code&gt;p&lt;/code&gt; doesn't have its own &lt;code&gt;f&lt;/code&gt; property, it inherits it from its prototype. But it doesn't matter that the lookup for &lt;code&gt;f&lt;/code&gt; eventually finds a member with that name on &lt;code&gt;o&lt;/code&gt;; the lookup began as a reference to &lt;code&gt;p.f&lt;/code&gt;, so &lt;code&gt;this&lt;/code&gt; inside the function takes the value of the object referred to as &lt;code&gt;p&lt;/code&gt;. That is, since &lt;code&gt;f&lt;/code&gt; is called as a method of &lt;code&gt;p&lt;/code&gt;, its &lt;code&gt;this&lt;/code&gt; refers to &lt;code&gt;p&lt;/code&gt;. This is an interesting feature of JavaScript's prototype inheritance.</source>
          <target state="translated">En este ejemplo, el objeto asignado a la variable &lt;code&gt;p&lt;/code&gt; no tiene su propia propiedad &lt;code&gt;f&lt;/code&gt; , la hereda de su prototipo. Pero no importa que la b&amp;uacute;squeda de &lt;code&gt;f&lt;/code&gt; finalmente encuentre un miembro con ese nombre en &lt;code&gt;o&lt;/code&gt; ; la b&amp;uacute;squeda comenz&amp;oacute; como una referencia a &lt;code&gt;p.f&lt;/code&gt; , por lo que &lt;code&gt;this&lt;/code&gt; dentro de la funci&amp;oacute;n toma el valor del objeto al que se hace referencia como &lt;code&gt;p&lt;/code&gt; . Es decir, dado que &lt;code&gt;f&lt;/code&gt; se llama como un m&amp;eacute;todo de &lt;code&gt;p&lt;/code&gt; , &lt;code&gt;this&lt;/code&gt; refiere a &lt;code&gt;p&lt;/code&gt; . Esta es una caracter&amp;iacute;stica interesante de la herencia de prototipos de JavaScript.</target>
        </trans-unit>
        <trans-unit id="66ff041dbef1cfc7f06522a5a35ef052cd6ff39d" translate="yes" xml:space="preserve">
          <source>In this example, we are using a native JavaScript object to which our proxy will forward all operations that are applied to it.</source>
          <target state="translated">En este ejemplo,estamos usando un objeto JavaScript nativo al que nuestro proxy reenviará todas las operaciones que se le apliquen.</target>
        </trans-unit>
        <trans-unit id="38f8bcdd4576e052baef77d87b035aec5006ad25" translate="yes" xml:space="preserve">
          <source>In this example, we create a 8-byte buffer with a &lt;a href=&quot;int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt; view referring to the buffer:</source>
          <target state="translated">En este ejemplo, creamos un b&amp;uacute;fer de 8 bytes con una vista &lt;a href=&quot;int32array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt; que hace referencia al b&amp;uacute;fer:</target>
        </trans-unit>
        <trans-unit id="87a870c20fd5c4ac21e8e1fefbf9420b0799bf46" translate="yes" xml:space="preserve">
          <source>In this example, we create an anonymous function and use &lt;code&gt;call&lt;/code&gt; to invoke it on every object in an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d622e8d0d99304a0a0a4b1c302b418fb7d05cf" translate="yes" xml:space="preserve">
          <source>In this example, we create an anonymous function and use &lt;code&gt;call&lt;/code&gt; to invoke it on every object in an array. The main purpose of the anonymous function here is to add a print function to every object, which is able to print the right index of the object in the array. Passing the object as &lt;code&gt;this&lt;/code&gt; value was not strictly necessary, but is done for explanatory purpose.</source>
          <target state="translated">En este ejemplo, creamos una funci&amp;oacute;n an&amp;oacute;nima y usamos una &lt;code&gt;call&lt;/code&gt; para invocarla en cada objeto de una matriz. El prop&amp;oacute;sito principal de la funci&amp;oacute;n an&amp;oacute;nima aqu&amp;iacute; es agregar una funci&amp;oacute;n de impresi&amp;oacute;n a cada objeto, que puede imprimir el &amp;iacute;ndice correcto del objeto en la matriz. Pasar el objeto como &lt;code&gt;this&lt;/code&gt; valor no era estrictamente necesario, pero se hace con fines explicativos.</target>
        </trans-unit>
        <trans-unit id="d35974a3e7587dcc087e5970b5717fe14b1ffcde" translate="yes" xml:space="preserve">
          <source>In this list, each page is listed by name (the type of error) and message (a more detailed human-readable error message). Together, these two properties provide a starting point toward understanding and resolving the error. For more information, follow the links below!</source>
          <target state="translated">En esta lista,cada página se enumera por nombre (el tipo de error)y mensaje (un mensaje de error más detallado y legible por el ser humano).Juntas,estas dos propiedades proporcionan un punto de partida para entender y resolver el error.Para obtener más información,sigue los siguientes enlaces!</target>
        </trans-unit>
        <trans-unit id="84cc35eeca38031ad4f482983b4a69f835b760cf" translate="yes" xml:space="preserve">
          <source>In this simple example the number &lt;code&gt;37&lt;/code&gt; gets returned as the default value when the property name is not in the object. It is using the &lt;a href=&quot;proxy/handler/get&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="translated">En este ejemplo simple, el n&amp;uacute;mero &lt;code&gt;37&lt;/code&gt; se devuelve como valor predeterminado cuando el nombre de la propiedad no est&amp;aacute; en el objeto. Est&amp;aacute; usando el controlador &lt;a href=&quot;proxy/handler/get&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c9f63da3eb0045c2357f1cdb851b284fdcaffc13" translate="yes" xml:space="preserve">
          <source>In this simple example, the number &lt;code&gt;37&lt;/code&gt; gets returned as the default value when the property name is not in the object. It is using the &lt;a href=&quot;proxy/proxy/get&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590403612835e59c245f0cdab1e404168d22e494" translate="yes" xml:space="preserve">
          <source>In unusual situations, the assignment operator (e.g.&lt;code&gt; x += y&lt;/code&gt;) is not identical to the meaning expression (here &lt;code&gt;x = x + y&lt;/code&gt;). When the left operand of an assignment operator itself contains an assignment operator, the left operand is evaluated only once. For example:</source>
          <target state="translated">En situaciones inusuales, el operador de asignaci&amp;oacute;n (por ejemplo, &lt;code&gt; x += y&lt;/code&gt; ) no es id&amp;eacute;ntico a la expresi&amp;oacute;n de significado (aqu&amp;iacute; &lt;code&gt;x = x + y&lt;/code&gt; ). Cuando el operando izquierdo de un operador de asignaci&amp;oacute;n contiene un operador de asignaci&amp;oacute;n, el operando izquierdo se eval&amp;uacute;a solo una vez. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="a131dacbe54fb64553702d39cdf6558030b34fb8" translate="yes" xml:space="preserve">
          <source>Included in the (normative) annex for additional ECMAScript legacy features for Web browsers (note that the specification codifies what is already in implementations).</source>
          <target state="translated">Incluido en el anexo (normativo)para las características adicionales del legado de ECMAScript para los navegadores web (obsérvese que la especificación codifica lo que ya está en implementación).</target>
        </trans-unit>
        <trans-unit id="4041f4126b0351dfe2e79c79a3f6557e3c70b29b" translate="yes" xml:space="preserve">
          <source>Incomplete array initializer</source>
          <target state="translated">Inicializador de arreglos incompletos</target>
        </trans-unit>
        <trans-unit id="4c69aeda2103b6e78518bbb410b414f8da34036f" translate="yes" xml:space="preserve">
          <source>Increases the size of the Table instance by a specified number of elements.</source>
          <target state="translated">Aumenta el tamaño de la instancia de la Tabla en un número determinado de elementos.</target>
        </trans-unit>
        <trans-unit id="1ad7f4e9bdfd8b6afc5185d816fa7e2287a97748" translate="yes" xml:space="preserve">
          <source>Increases the size of the Table instance by a specified number of references.</source>
          <target state="translated">Aumenta el tamaño de la instancia de la Tabla en un número determinado de referencias.</target>
        </trans-unit>
        <trans-unit id="c99f880b72799cc04c963d4317c186789a75c6d6" translate="yes" xml:space="preserve">
          <source>Increases the size of the memory instance by a specified number of WebAssembly pages (each one is 64KB in size).</source>
          <target state="translated">Aumenta el tamaño de la instancia de memoria en un número determinado de páginas de WebAssembly (cada una tiene un tamaño de 64KB).</target>
        </trans-unit>
        <trans-unit id="401d8f49917326f6d322f2dadc2fa0c24677d373" translate="yes" xml:space="preserve">
          <source>Increasing the &lt;a href=&quot;array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Aumentando la &lt;a href=&quot;array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="65bc9ccd743dd3dce9047eb75c52a48c168f2c7a" translate="yes" xml:space="preserve">
          <source>Increment &amp;amp; decrement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6baea39d0ecb0d64a9c1b43f7ae26c1991070ca" translate="yes" xml:space="preserve">
          <source>Increment (++)</source>
          <target state="translated">Incremento (++)</target>
        </trans-unit>
        <trans-unit id="7137b97519cd5a3352b194f1a47ef7b8d00c0803" translate="yes" xml:space="preserve">
          <source>Increment (&lt;code&gt;++&lt;/code&gt;)</source>
          <target state="translated">Incremento ( &lt;code&gt;++&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7e427ab8b4862191565a1a29a01d981f9c08b30f" translate="yes" xml:space="preserve">
          <source>Increment and decrement</source>
          <target state="translated">Incremento y disminución</target>
        </trans-unit>
        <trans-unit id="6ffb5e37a0de256063704a907edfe0ba275b1cf7" translate="yes" xml:space="preserve">
          <source>Indeterminate form (e.g. &lt;code&gt;0 * Infinity&lt;/code&gt;, or &lt;code&gt;undefined + undefined&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37f91419162687bd95af5bf7c6d8af3c0b436e1" translate="yes" xml:space="preserve">
          <source>Index at which to start changing the array (with origin 0). If greater than the length of the array, actual starting index will be set to the length of the array. If negative, will begin that many elements from the end of the array (with origin -1) and will be set to 0 if absolute value is greater than the length of the array.</source>
          <target state="translated">Índice con el que empezar a cambiar la matriz (con origen 0).Si es mayor que la longitud del conjunto,el índice de inicio real se ajustará a la longitud del conjunto.Si es negativo,comenzará ese número de elementos desde el final del conjunto (con origen -1)y se fijará en 0 si el valor absoluto es mayor que la longitud del conjunto.</target>
        </trans-unit>
        <trans-unit id="45e917d5246c9f80b81acc22465ce7ef8dada20f" translate="yes" xml:space="preserve">
          <source>Indexed Collections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5a3ab920950c8b210b9bac77077845cb8eefef" translate="yes" xml:space="preserve">
          <source>Indexed collections</source>
          <target state="translated">Colecciones indexadas</target>
        </trans-unit>
        <trans-unit id="ad269f38c4b63f8bfa0ecb35d25d42a1aaead76a" translate="yes" xml:space="preserve">
          <source>Indexed properties not consulting prototype</source>
          <target state="translated">Propiedades indexadas que no consultan el prototipo</target>
        </trans-unit>
        <trans-unit id="7600e0fb90c939a2d9f2134c598b9b3ebcc27ac1" translate="yes" xml:space="preserve">
          <source>Indicates an error during WebAssembly decoding or validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="018b8e5d38f9e27fad5f584feea16ea2dc658705" translate="yes" xml:space="preserve">
          <source>Indicates an error during module instantiation (besides &lt;a href=&quot;http://webassembly.org/docs/semantics/#traps&quot;&gt;traps&lt;/a&gt; from the start function).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c0a83d7993f36b5134ae07826c8ecfe2d53d68" translate="yes" xml:space="preserve">
          <source>Indicates if the &lt;code&gt;g&lt;/code&gt; flag was used for a global match.</source>
          <target state="translated">Indica si la bandera &lt;code&gt;g&lt;/code&gt; se us&amp;oacute; para una coincidencia global.</target>
        </trans-unit>
        <trans-unit id="7dceb2034a666f7087defcc0f1f7e6314d0528af" translate="yes" xml:space="preserve">
          <source>Indicates if the &lt;code&gt;i&lt;/code&gt; flag was used to ignore case.</source>
          <target state="translated">Indica si se us&amp;oacute; la bandera &lt;code&gt;i&lt;/code&gt; para ignorar may&amp;uacute;sculas y min&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="8b87a4dc659a01a5ec6a2bb79eda040056bd8bfe" translate="yes" xml:space="preserve">
          <source>Indicates if the &lt;code&gt;m&lt;/code&gt; flag was used to search across multiple lines.</source>
          <target state="translated">Indica si la bandera &lt;code&gt;m&lt;/code&gt; se us&amp;oacute; para buscar en varias l&amp;iacute;neas.</target>
        </trans-unit>
        <trans-unit id="5c3c699849bd9690ce57a8e4f7dfc1232fdafc22" translate="yes" xml:space="preserve">
          <source>Individual flag values can be extracted by ANDing them with a bitmask, where each bit with the value of one will &quot;extract&quot; the corresponding flag. The bitmask &lt;em&gt;masks&lt;/em&gt; out the non-relevant flags by ANDing with zeroes (hence the term &quot;bitmask&quot;). For example, the bitmask 0100 can be used to see if flag C is set:</source>
          <target state="translated">Los valores de las banderas individuales se pueden extraer haciendo un AND con una m&amp;aacute;scara de bits, donde cada bit con el valor de uno &quot;extraer&amp;aacute;&quot; la bandera correspondiente. La m&amp;aacute;scara de bits &lt;em&gt;enmascara&lt;/em&gt; los indicadores no relevantes haciendo un AND con ceros (de ah&amp;iacute; el t&amp;eacute;rmino &quot;m&amp;aacute;scara de bits&quot;). Por ejemplo, la m&amp;aacute;scara de bits 0100 se puede usar para ver si el indicador C est&amp;aacute; establecido:</target>
        </trans-unit>
        <trans-unit id="a9e2bf39c1e2a07161681d68dede8a4a0984febe" translate="yes" xml:space="preserve">
          <source>Individual operators</source>
          <target state="translated">Operadores individuales</target>
        </trans-unit>
        <trans-unit id="8d4cadd23dc0f47618e0017475e1b69c0cbc8e21" translate="yes" xml:space="preserve">
          <source>Inequality</source>
          <target state="translated">Inequality</target>
        </trans-unit>
        <trans-unit id="e6cec31e8a65681ae7ec444c7f456b4cab73fee8" translate="yes" xml:space="preserve">
          <source>Inequality (!=)</source>
          <target state="translated">Desigualdad (!=)</target>
        </trans-unit>
        <trans-unit id="68eb52167d8b6624a0b93dc5831d7c86c5135093" translate="yes" xml:space="preserve">
          <source>Inequality (&lt;code&gt;a != b&lt;/code&gt;)</source>
          <target state="translated">Desigualdad ( &lt;code&gt;a != b&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d488f35d25db0196ffb7b0d1ffbbaed095958c24" translate="yes" xml:space="preserve">
          <source>Inequality operator.</source>
          <target state="translated">Operador de la desigualdad.</target>
        </trans-unit>
        <trans-unit id="a79dc3d005cf68005384e3b181f0842a749aefcd" translate="yes" xml:space="preserve">
          <source>Inferred function names</source>
          <target state="translated">Nombres de las funciones inferidas</target>
        </trans-unit>
        <trans-unit id="ae29dd030af2c6013a342baa4496df5423ffebe1" translate="yes" xml:space="preserve">
          <source>Inferred names on anonymous functions</source>
          <target state="translated">Los nombres deducidos en las funciones anónimas</target>
        </trans-unit>
        <trans-unit id="f6c883b54018ef7a4cdbcff87341648a7e230e30" translate="yes" xml:space="preserve">
          <source>Infinite iterator</source>
          <target state="translated">Iterador infinito</target>
        </trans-unit>
        <trans-unit id="0219fd54bd5841008b18c414a5b2dea331bad1c5" translate="yes" xml:space="preserve">
          <source>Infinity</source>
          <target state="translated">Infinity</target>
        </trans-unit>
        <trans-unit id="59e354f06c04e0eb393e460ca726f509ae4ece3e" translate="yes" xml:space="preserve">
          <source>Inheritance of properties</source>
          <target state="translated">Herencia de propiedades</target>
        </trans-unit>
        <trans-unit id="7951150c36a5b0078509be63ec158d0a10f3f90a" translate="yes" xml:space="preserve">
          <source>Inherited properties</source>
          <target state="translated">Propiedades heredadas</target>
        </trans-unit>
        <trans-unit id="df616f44e2c500bdaf1406df4828fd9ed5d52f72" translate="yes" xml:space="preserve">
          <source>Inherited property access: &lt;code&gt;Object.create(proxy)[foo]&lt;/code&gt;</source>
          <target state="translated">Acceso de propiedad heredado: &lt;code&gt;Object.create(proxy)[foo]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c2150882f012dfc772b92621683506749d96ecd3" translate="yes" xml:space="preserve">
          <source>Inherited property assignment: &lt;code&gt;Object.create(proxy)[foo] = bar&lt;/code&gt;</source>
          <target state="translated">Asignaci&amp;oacute;n de propiedad heredada: &lt;code&gt;Object.create(proxy)[foo] = bar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a75868d63eb79c862251acc96e281c4c93b846e2" translate="yes" xml:space="preserve">
          <source>Inherited property query: &lt;code&gt;foo in Object.create(proxy)&lt;/code&gt;</source>
          <target state="translated">Consulta de propiedad heredada: &lt;code&gt;foo in Object.create(proxy)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abd7f16fa284794d2ca981389668e28d3cd48524" translate="yes" xml:space="preserve">
          <source>Initial WebAssembly draft definition.</source>
          <target state="translated">Definición inicial del proyecto de WebAssembly.</target>
        </trans-unit>
        <trans-unit id="9e915d7086e42ba7ad8fb470ce6fd37be732353b" translate="yes" xml:space="preserve">
          <source>Initial definition</source>
          <target state="translated">Definición inicial</target>
        </trans-unit>
        <trans-unit id="a37acae44fb32c850ce995533205c3c2eb69f53c" translate="yes" xml:space="preserve">
          <source>Initial definition in ECMA standard.</source>
          <target state="translated">Definición inicial en la norma ECMA.</target>
        </trans-unit>
        <trans-unit id="35e9e36e8328392208cdb962c3a79bddae0d63a2" translate="yes" xml:space="preserve">
          <source>Initial definition in ECMAScript 2017.</source>
          <target state="translated">Definición inicial en ECMAScript 2017.</target>
        </trans-unit>
        <trans-unit id="f7d55f8d05c9e8c07926850628936b042dbed3d6" translate="yes" xml:space="preserve">
          <source>Initial definition in ES2017.</source>
          <target state="translated">Definición inicial en ES2017.</target>
        </trans-unit>
        <trans-unit id="6b379dfab4923f85c6fe72c56d94f6fd30cd942c" translate="yes" xml:space="preserve">
          <source>Initial definition in an ECMA standard</source>
          <target state="translated">Definición inicial en una norma de la ECMA</target>
        </trans-unit>
        <trans-unit id="bee4945b5c9770ada5b145f4f6bd2f1332eb9f3f" translate="yes" xml:space="preserve">
          <source>Initial definition in an ECMA standard.</source>
          <target state="translated">Definición inicial en una norma de la ECMA.</target>
        </trans-unit>
        <trans-unit id="e29784b04e2a292b41764fd796f01398698302ab" translate="yes" xml:space="preserve">
          <source>Initial definition in an ECMA standard. Specified behaviour for indexed and named properties. Specified that &lt;code&gt;new&lt;/code&gt; is required.</source>
          <target state="translated">Definici&amp;oacute;n inicial en un est&amp;aacute;ndar ECMA. Comportamiento especificado para propiedades indexadas y con nombre. Especific&amp;oacute; que se requiere &lt;code&gt;new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82c35f70e5937c8e4260b39081fd9fc366d7bedb" translate="yes" xml:space="preserve">
          <source>Initial definition in an ECMA standard. Specified that &lt;code&gt;new&lt;/code&gt; is required.</source>
          <target state="translated">Definici&amp;oacute;n inicial en un est&amp;aacute;ndar ECMA. Especific&amp;oacute; que se requiere &lt;code&gt;new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="804103ada9286a91818a9c6f943e1357a3cee5f3" translate="yes" xml:space="preserve">
          <source>Initial definition was in ECMAScript 3.</source>
          <target state="translated">La definición inicial estaba en ECMAScript 3.</target>
        </trans-unit>
        <trans-unit id="1996078361460df53a1d2f9e9930c7c26d7f873c" translate="yes" xml:space="preserve">
          <source>Initial definition.</source>
          <target state="translated">Definición inicial.</target>
        </trans-unit>
        <trans-unit id="c74d3aa9086119cde5be85b65c88465515b8ab05" translate="yes" xml:space="preserve">
          <source>Initial definition. Defined in several section of the specification: &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-template-literals&quot;&gt;Template Literals&lt;/a&gt;, &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-tagged-templates&quot;&gt;Tagged Templates&lt;/a&gt;</source>
          <target state="translated">Definici&amp;oacute;n inicial. Definido en varias secciones de la especificaci&amp;oacute;n: &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-template-literals&quot;&gt;Literales de plantilla&lt;/a&gt; , &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-tagged-templates&quot;&gt;Plantillas etiquetadas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d8b74490582a852fffa70f4fc964c8e54beb501" translate="yes" xml:space="preserve">
          <source>Initial definition. Defined in the (normative) Annex B for Additional ECMAScript Features for Web Browsers.</source>
          <target state="translated">Definición inicial.Definido en el Anexo B (normativo)para las características adicionales de ECMAScript para navegadores web.</target>
        </trans-unit>
        <trans-unit id="cf63efa5c0322f19ea7d903fb16ba743a12e456d" translate="yes" xml:space="preserve">
          <source>Initial definition. Does not specify let expressions or let blocks.</source>
          <target state="translated">Definición inicial.No especifica expresiones letales ni bloques letales.</target>
        </trans-unit>
        <trans-unit id="40263062f582b9167e63d837c485ac319158cdd4" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.0</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.0</target>
        </trans-unit>
        <trans-unit id="4ce05f6ce50ee64e9b4ab5c56bb413d0aef9cda2" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.0.</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.0.</target>
        </trans-unit>
        <trans-unit id="ef9ece1071525c79ebc962c49979dc6140499d8b" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.0. Defined in the (normative) Annex B for Additional ECMAScript Features for Web Browsers.</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.0.Definido en el Anexo B (normativo)para las características adicionales de ECMAScript para navegadores web.</target>
        </trans-unit>
        <trans-unit id="a3477ed16aca83fcc6cb881f80d7e09ec7c62282" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.0. Deprecated in favor of &lt;a href=&quot;../../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; in ES3.</source>
          <target state="translated">Definici&amp;oacute;n inicial. Implementado en JavaScript 1.0. Desaprobado a favor de &lt;a href=&quot;../../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt; en ES3.</target>
        </trans-unit>
        <trans-unit id="9ed464ab05f4b7a4db1b22334a85ff353174c997" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.1</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.1</target>
        </trans-unit>
        <trans-unit id="ac3e55bf74a2e48b37e9ce44c0f80517a3bec394" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.1.</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.1.</target>
        </trans-unit>
        <trans-unit id="bb8e116565952c369a0e33d04e78e8cfdb7d6847" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.2</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.2</target>
        </trans-unit>
        <trans-unit id="941a5c7ff7cd2d2d4aa695b24556fd6f3bfb1a20" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.2.</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.2.</target>
        </trans-unit>
        <trans-unit id="dc7ad3d394c062cdaa8069fe5fd888ffa41f60f1" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.2. JavaScript 1.5: &lt;code&gt;global&lt;/code&gt; is a property of a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; instance, not the &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Definici&amp;oacute;n inicial. Implementado en JavaScript 1.2. JavaScript 1.5: &lt;code&gt;global&lt;/code&gt; es una propiedad de una instancia de &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; , no &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; objeto RegExp .</target>
        </trans-unit>
        <trans-unit id="c66c9736512070345f9e9afd89f67fb870b37654" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.2. JavaScript 1.5: &lt;code&gt;ignoreCase&lt;/code&gt; is a property of a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; instance, not the &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Definici&amp;oacute;n inicial. Implementado en JavaScript 1.2. JavaScript 1.5: &lt;code&gt;ignoreCase&lt;/code&gt; es una propiedad de una instancia de &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; , no &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; objeto RegExp .</target>
        </trans-unit>
        <trans-unit id="bbd4b92992b6ccec49a23065c54399ff4c99f8d4" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.2. JavaScript 1.5: &lt;code&gt;lastIndex&lt;/code&gt; is a property of a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; instance, not the &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Definici&amp;oacute;n inicial. Implementado en JavaScript 1.2. JavaScript 1.5: &lt;code&gt;lastIndex&lt;/code&gt; es una propiedad de una instancia &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; , no el objeto &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fad0be06a8ade79e3f7b0862a68a4d8db5a2420c" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.2. JavaScript 1.5: &lt;code&gt;multiline&lt;/code&gt; is a property of a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; instance, not the &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Definici&amp;oacute;n inicial. Implementado en JavaScript 1.2. JavaScript 1.5: &lt;code&gt;multiline&lt;/code&gt; es una propiedad de una instancia de &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; , no &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; objeto RegExp .</target>
        </trans-unit>
        <trans-unit id="cbac5462a80516b70d45fe45a2fbbd5e4d6ceb8d" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.2. JavaScript 1.5: &lt;code&gt;source&lt;/code&gt; is a property of a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; instance, not the &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Definici&amp;oacute;n inicial. Implementado en JavaScript 1.2. JavaScript 1.5: la &lt;code&gt;source&lt;/code&gt; es una propiedad de una instancia de &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; , no el objeto &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a85f7a92d71856d124832fd97d098db448fd811d" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.3</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.3</target>
        </trans-unit>
        <trans-unit id="b38e7ce9b5cf83a8b1f0b1490a6268e2b973a0a3" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.3.</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.3.</target>
        </trans-unit>
        <trans-unit id="ae0b462c8892ec0161d3febb8a3272c7c02d863f" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.3. Format is implementation dependent.</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.3.El formato depende de la implementación.</target>
        </trans-unit>
        <trans-unit id="059285ca9aa0072aad8a001d0290031512394a78" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.4</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.4</target>
        </trans-unit>
        <trans-unit id="c1808274911cabdf7ca684c1f1735365f7772fde" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.4.</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.4.</target>
        </trans-unit>
        <trans-unit id="a40791e2d6b8b660293bab3f511003e62d469c50" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.5.</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.5.</target>
        </trans-unit>
        <trans-unit id="b912d0e0846319e918d16802811ba094f6f47499" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.6.</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.6.</target>
        </trans-unit>
        <trans-unit id="26a478c8236e6faa48a87a57bc5275286f41b4d7" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.7.</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.7.</target>
        </trans-unit>
        <trans-unit id="078ca5ed2fd128eff8b0b9a2d46b4238264e128c" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.8.</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.8.</target>
        </trans-unit>
        <trans-unit id="8a4d24fd7dd67bd64acdeb068c2c167ada819f10" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.8.1.</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.8.1.</target>
        </trans-unit>
        <trans-unit id="58d49a89bac6a7dedf8b042873e15e72e65f0ebb" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.8.5</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.8.5</target>
        </trans-unit>
        <trans-unit id="cad1ad3e2afcf629593f6eb50d4bac93cd34486b" translate="yes" xml:space="preserve">
          <source>Initial definition. Implemented in JavaScript 1.8.5.</source>
          <target state="translated">Definición inicial.Implementado en JavaScript 1.8.5.</target>
        </trans-unit>
        <trans-unit id="2018c675b7f3b4f89b1656e50a4ae4c9277685f2" translate="yes" xml:space="preserve">
          <source>Initial definition. JavaScript 1.0 (UNIX Only) / JavaScript 1.1 (All platforms).</source>
          <target state="translated">Definición inicial.JavaScript 1.0 (Sólo UNIX)/JavaScript 1.1 (Todas las plataformas).</target>
        </trans-unit>
        <trans-unit id="7173bef762ccdf92ab23687cfc1d5be4a9ad804d" translate="yes" xml:space="preserve">
          <source>Initial definition. See also: &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-C&quot;&gt;Strict mode restriction and exceptions&lt;/a&gt;</source>
          <target state="translated">Definici&amp;oacute;n inicial. Ver tambi&amp;eacute;n: &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-C&quot;&gt;Restricciones y excepciones del modo estricto&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57325d451f55171c368ce61331d89e6d3d0aeaf6" translate="yes" xml:space="preserve">
          <source>Initial definition. Unlabeled version.</source>
          <target state="translated">Definición inicial.Versión no etiquetada.</target>
        </trans-unit>
        <trans-unit id="022515f406a57864f40cd1203eb4dcb41febf436" translate="yes" xml:space="preserve">
          <source>Initial defintion.</source>
          <target state="translated">Definición inicial.</target>
        </trans-unit>
        <trans-unit id="69a9e0de842d8ae55591da42504603cd7e7262df" translate="yes" xml:space="preserve">
          <source>Initial draft definition.</source>
          <target state="translated">Proyecto de definición inicial.</target>
        </trans-unit>
        <trans-unit id="b975dbb1192b113cadea247a55fa22b519dfca4d" translate="yes" xml:space="preserve">
          <source>Initial publication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02800d28cb9343126029438b218e44c2370a6a7" translate="yes" xml:space="preserve">
          <source>Initial value of the variable. It can be any legal expression. Default value is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1b224617736038fb54e6a25aa285ec6283eba9" translate="yes" xml:space="preserve">
          <source>Initial value of the variable. It can be any legal expression. Default value is &lt;em&gt;undefined&lt;/em&gt;.</source>
          <target state="translated">Valor inicial de la variable. Puede ser cualquier expresi&amp;oacute;n legal. El valor predeterminado &lt;em&gt;no&lt;/em&gt; est&amp;aacute; &lt;em&gt;definido&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8c5eae6e8ad5c7eff82b70392594bd4874c1a340" translate="yes" xml:space="preserve">
          <source>Initialization of several variables</source>
          <target state="translated">Inicialización de varias variables</target>
        </trans-unit>
        <trans-unit id="9f8693a57ce3d9a432b19813a82043b25a29e309" translate="yes" xml:space="preserve">
          <source>Initially, the &lt;code&gt;&lt;var&gt;replacer&lt;/var&gt;&lt;/code&gt; function is called with an empty string as key representing the object being stringified. It is then called for each property on the object or array being stringified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d858124bcdda6ccdc66224e0325d22439387781d" translate="yes" xml:space="preserve">
          <source>Initially, the &lt;code&gt;replacer&lt;/code&gt; function is called with an empty string as key representing the object being stringified. It is then called for each property on the object or array being stringified.</source>
          <target state="translated">Inicialmente, se llama a la funci&amp;oacute;n de &lt;code&gt;replacer&lt;/code&gt; con una cadena vac&amp;iacute;a como clave que representa el objeto que se est&amp;aacute; secuenciando. Luego se llama para cada propiedad en el objeto o matriz que se est&amp;aacute; secuenciando.</target>
        </trans-unit>
        <trans-unit id="08711e711134e579523d56126b09874d8022e4b2" translate="yes" xml:space="preserve">
          <source>Inserts</source>
          <target state="translated">Inserts</target>
        </trans-unit>
        <trans-unit id="2b48e8876ecb78ba7e1968f36e0fd6a0717b2571" translate="yes" xml:space="preserve">
          <source>Inserts a &quot;$&quot;.</source>
          <target state="translated">Inserta un &quot;$&quot;.</target>
        </trans-unit>
        <trans-unit id="40864899bf9e01467baa3d38448be2a7cdcbcb11" translate="yes" xml:space="preserve">
          <source>Inserts a &lt;code&gt;&quot;$&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce7b5d4c8da12992edd7415b06c863f63baa582" translate="yes" xml:space="preserve">
          <source>Inserts the matched substring.</source>
          <target state="translated">Inserta la subcadena coincidente.</target>
        </trans-unit>
        <trans-unit id="e58f47bb0ef2776a10dd15f573a06a8e5d0afde5" translate="yes" xml:space="preserve">
          <source>Inserts the portion of the string that follows the matched substring.</source>
          <target state="translated">Inserta la porción de la cuerda que sigue a la subcadena emparejada.</target>
        </trans-unit>
        <trans-unit id="4fed5693b7d1971ffd7cacdb16b81e94032e1511" translate="yes" xml:space="preserve">
          <source>Inserts the portion of the string that precedes the matched substring.</source>
          <target state="translated">Inserta la porción de la cuerda que precede a la subcadena emparejada.</target>
        </trans-unit>
        <trans-unit id="ca5c1c3094ae7abe52cdce1ab07a6ed84f2ed2aa" translate="yes" xml:space="preserve">
          <source>Inside a character set, the dot loses its special meaning and matches a literal dot.</source>
          <target state="translated">Dentro de un conjunto de personajes,el punto pierde su significado especial y coincide con un punto literal.</target>
        </trans-unit>
        <trans-unit id="362024d61ebb70536bd9394b65dd78d5aad24d05" translate="yes" xml:space="preserve">
          <source>Inside a function, the value of &lt;code&gt;this&lt;/code&gt; depends on how the function is called.</source>
          <target state="translated">Dentro de una funci&amp;oacute;n, el valor de &lt;code&gt;this&lt;/code&gt; depende de c&amp;oacute;mo se llame a la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d0721f17dea6dcfcdf19c0b198b3112c883bdb01" translate="yes" xml:space="preserve">
          <source>Inside array comprehensions, these two kinds of components are allowed:</source>
          <target state="translated">Dentro de las comprensiones de la matriz,estos dos tipos de componentes están permitidos:</target>
        </trans-unit>
        <trans-unit id="29e60640aa891200ac53331b0be76d088bf2cff8" translate="yes" xml:space="preserve">
          <source>Insignificant &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/whitespace&quot;&gt;whitespace&lt;/a&gt; may be present anywhere except within a &lt;code&gt;&lt;var&gt;JSONNumber&lt;/var&gt;&lt;/code&gt; (numbers must contain no whitespace) or &lt;code&gt;&lt;var&gt;JSONString&lt;/var&gt;&lt;/code&gt; (where it is interpreted as the corresponding character in the string, or would cause an error). The tab character (&lt;a href=&quot;http://unicode-table.com/en/0009/&quot;&gt;U+0009&lt;/a&gt;), carriage return (&lt;a href=&quot;http://unicode-table.com/en/000D/&quot;&gt;U+000D&lt;/a&gt;), line feed (&lt;a href=&quot;http://unicode-table.com/en/000A/&quot;&gt;U+000A&lt;/a&gt;), and space (&lt;a href=&quot;http://unicode-table.com/en/0020/&quot;&gt;U+0020&lt;/a&gt;) characters are the only valid whitespace characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3b9e6560de73eb8bc85eb42a04c1141865b37d" translate="yes" xml:space="preserve">
          <source>Insignificant whitespace may be present anywhere except within a &lt;code&gt;&lt;var&gt;JSONNumber&lt;/var&gt;&lt;/code&gt; (numbers must contain no whitespace) or &lt;code&gt;&lt;var&gt;JSONString&lt;/var&gt;&lt;/code&gt; (where it is interpreted as the corresponding character in the string, or would cause an error). The tab character (&lt;a href=&quot;http://unicode-table.com/en/0009/&quot;&gt;U+0009&lt;/a&gt;), carriage return (&lt;a href=&quot;http://unicode-table.com/en/000D/&quot;&gt;U+000D&lt;/a&gt;), line feed (&lt;a href=&quot;http://unicode-table.com/en/000A/&quot;&gt;U+000A&lt;/a&gt;), and space (&lt;a href=&quot;http://unicode-table.com/en/0020/&quot;&gt;U+0020&lt;/a&gt;) characters are the only valid whitespace characters.</source>
          <target state="translated">Puede haber espacios en blanco insignificantes en cualquier lugar excepto dentro de un &lt;code&gt;&lt;var&gt;JSONNumber&lt;/var&gt;&lt;/code&gt; (los n&amp;uacute;meros no deben contener espacios en blanco) o &lt;code&gt;&lt;var&gt;JSONString&lt;/var&gt;&lt;/code&gt; (donde se interpreta como el car&amp;aacute;cter correspondiente en la cadena, o causar&amp;iacute;a un error). Los caracteres de tabulaci&amp;oacute;n ( &lt;a href=&quot;http://unicode-table.com/en/0009/&quot;&gt;U + 0009&lt;/a&gt; ), retorno de carro ( &lt;a href=&quot;http://unicode-table.com/en/000D/&quot;&gt;U + 000D&lt;/a&gt; ), salto de l&amp;iacute;nea ( &lt;a href=&quot;http://unicode-table.com/en/000A/&quot;&gt;U + 000A&lt;/a&gt; ) y espacio ( &lt;a href=&quot;http://unicode-table.com/en/0020/&quot;&gt;U + 0020&lt;/a&gt; ) son los &amp;uacute;nicos caracteres de espacio en blanco v&amp;aacute;lidos.</target>
        </trans-unit>
        <trans-unit id="6ab7d1d49dd26afc2c53ee28fa81799fd390b0a3" translate="yes" xml:space="preserve">
          <source>Instance methods</source>
          <target state="translated">Métodos de instancia</target>
        </trans-unit>
        <trans-unit id="c1f424042c7e8bee2655a6672ddd3752109cc8d7" translate="yes" xml:space="preserve">
          <source>Instance properties</source>
          <target state="translated">Propiedades de la instancia</target>
        </trans-unit>
        <trans-unit id="755387148de4cd392d1630cb598a8c5176cd9afc" translate="yes" xml:space="preserve">
          <source>Instance properties must be defined inside of class methods:</source>
          <target state="translated">Las propiedades de las instancias deben ser definidas dentro de los métodos de clase:</target>
        </trans-unit>
        <trans-unit id="86d67413e7f102d37a19a41e92518fd07b196a5a" translate="yes" xml:space="preserve">
          <source>Instances</source>
          <target state="translated">Instances</target>
        </trans-unit>
        <trans-unit id="f3a70c71d702bb70b2b487042ba6e7c30d331112" translate="yes" xml:space="preserve">
          <source>Instantiating streaming</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581ba3673a3337b2762fb544acd4152c49002ae6" translate="yes" xml:space="preserve">
          <source>Instead of passing a literal string or integer value when creating the new objects, the above statements pass the objects &lt;code&gt;rand&lt;/code&gt; and &lt;code&gt;ken&lt;/code&gt; as the parameters for the owners. To find out the name of the owner of &lt;code&gt;car2&lt;/code&gt;, you can access the following property:</source>
          <target state="translated">En lugar de pasar una cadena literal o un valor entero al crear los nuevos objetos, las declaraciones anteriores pasan los objetos &lt;code&gt;rand&lt;/code&gt; y &lt;code&gt;ken&lt;/code&gt; como par&amp;aacute;metros para los propietarios. Para conocer el nombre del propietario de &lt;code&gt;car2&lt;/code&gt; , puede acceder a la siguiente propiedad:</target>
        </trans-unit>
        <trans-unit id="a75193ab1f417d6c56a3655429671908b8e061a5" translate="yes" xml:space="preserve">
          <source>Instead of using regular expressions for parsing URLs, it is usually better to use the browsers built-in URL parser by using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URL_API&quot;&gt;URL API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e05bde158595118d55e0ce91c002d27d730c1f" translate="yes" xml:space="preserve">
          <source>Instead write &quot;foo&quot;:</source>
          <target state="translated">En lugar de eso,escribe &quot;foo&quot;:</target>
        </trans-unit>
        <trans-unit id="c2466dca884b77085cade35f77be32e5976572af" translate="yes" xml:space="preserve">
          <source>Instead write just 1 without a zero and use at least one digit after a decimal point:</source>
          <target state="translated">En lugar de eso,escribe sólo 1 sin un cero y usa al menos un dígito después del punto decimal:</target>
        </trans-unit>
        <trans-unit id="5b2d66e7682b0dcb605d4bd8661e57ecd97726ab" translate="yes" xml:space="preserve">
          <source>Instead you have to use &lt;a href=&quot;../global_objects/object/keys&quot;&gt;&lt;code&gt;Object.keys&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/object/entries&quot;&gt;&lt;code&gt;Object.entries&lt;/code&gt;&lt;/a&gt;, to iterate over the properties or entries of an object.</source>
          <target state="translated">En su lugar, debe usar &lt;a href=&quot;../global_objects/object/keys&quot;&gt; &lt;code&gt;Object.keys&lt;/code&gt; &lt;/a&gt; u &lt;a href=&quot;../global_objects/object/entries&quot;&gt; &lt;code&gt;Object.entries&lt;/code&gt; &lt;/a&gt; , para iterar sobre las propiedades o entradas de un objeto.</target>
        </trans-unit>
        <trans-unit id="e0dc4bb2296425f8a0793107a400c064a277518e" translate="yes" xml:space="preserve">
          <source>Instead you need to use a correct &lt;a href=&quot;../operators/comparison_operators&quot;&gt;comparison operator&lt;/a&gt;. For example:</source>
          <target state="translated">En su lugar, debe utilizar un &lt;a href=&quot;../operators/comparison_operators&quot;&gt;operador de comparaci&amp;oacute;n&lt;/a&gt; correcto . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="7532357558d58b8bad52cc03601e93e8920a39f9" translate="yes" xml:space="preserve">
          <source>Instead you need to use a correct &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators&quot;&gt;comparison operator&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ecae46cb3e3f193194f48e69fb49562b84b075" translate="yes" xml:space="preserve">
          <source>Instead you need to use a plus sign for concatenation:</source>
          <target state="translated">En lugar de eso necesitas usar un signo más para la concatenación:</target>
        </trans-unit>
        <trans-unit id="76292350e40ad23d7d412256c27e38fdaf0dd3a1" translate="yes" xml:space="preserve">
          <source>Instead you will need to use &lt;a href=&quot;../global_objects/string/indexof&quot;&gt;&lt;code&gt;String.prototype.indexOf()&lt;/code&gt;&lt;/a&gt;, for example.</source>
          <target state="translated">En su lugar, necesitar&amp;aacute; utilizar &lt;a href=&quot;../global_objects/string/indexof&quot;&gt; &lt;code&gt;String.prototype.indexOf()&lt;/code&gt; &lt;/a&gt; , por ejemplo.</target>
        </trans-unit>
        <trans-unit id="e718841d850e49aba103de513cdaa93d90232f63" translate="yes" xml:space="preserve">
          <source>Instead, omit the &lt;code&gt;var&lt;/code&gt; keyword:</source>
          <target state="translated">En su lugar, omita la palabra clave &lt;code&gt;var&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1757078b656e7c52f58307e98a78b7315354f37c" translate="yes" xml:space="preserve">
          <source>Instead, use &lt;code&gt;function&lt;/code&gt; instead of &lt;code&gt;def&lt;/code&gt;:</source>
          <target state="translated">En su lugar, use &lt;code&gt;function&lt;/code&gt; en lugar de &lt;code&gt;def&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="599aca68c4dc962e7acfb73fd721311eb7302ad6" translate="yes" xml:space="preserve">
          <source>Instead, use the &lt;a href=&quot;../operators/arithmetic_operators#Addition&quot;&gt;+ operator&lt;/a&gt;, a backslash, or &lt;a href=&quot;../template_literals&quot;&gt;template literals&lt;/a&gt;. The &lt;code&gt;+&lt;/code&gt; operator variant looks like this:</source>
          <target state="translated">En su lugar, utilice el &lt;a href=&quot;../operators/arithmetic_operators#Addition&quot;&gt;operador +&lt;/a&gt; , una barra invertida o &lt;a href=&quot;../template_literals&quot;&gt;literales de plantilla&lt;/a&gt; . La variante del operador &lt;code&gt;+&lt;/code&gt; se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="4feb09025f8ee92644b05f5d28aa4adb7bc126b7" translate="yes" xml:space="preserve">
          <source>Instead, use the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators#Addition&quot;&gt;+ operator&lt;/a&gt;, a backslash, or &lt;a href=&quot;../template_literals&quot;&gt;template literals&lt;/a&gt;. The &lt;code&gt;+&lt;/code&gt; operator variant looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbc895f8d9aa2582102b700c1698001202a6907" translate="yes" xml:space="preserve">
          <source>Instead, use the&lt;a href=&quot;../global_objects/promise/resolve&quot;&gt; Promise.resolve()&lt;/a&gt; or &lt;a href=&quot;../global_objects/promise/reject&quot;&gt;Promise.reject()&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Method_(computer_programming)#Static_methods&quot;&gt;static methods&lt;/a&gt;:</source>
          <target state="translated">En su lugar, utilice los &lt;a href=&quot;https://en.wikipedia.org/wiki/Method_(computer_programming)#Static_methods&quot;&gt;m&amp;eacute;todos est&amp;aacute;ticos &lt;/a&gt;&lt;a href=&quot;../global_objects/promise/resolve&quot;&gt;Promise.resolve ()&lt;/a&gt; o &lt;a href=&quot;../global_objects/promise/reject&quot;&gt;Promise.reject ()&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="691e0102b6c4ff1f7d6b4b79971b501f00d71a45" translate="yes" xml:space="preserve">
          <source>Int16Array</source>
          <target state="translated">Int16Array</target>
        </trans-unit>
        <trans-unit id="0c9c8691e93fc3ce025dc71a355d7393d4850061" translate="yes" xml:space="preserve">
          <source>Int16Array.length</source>
          <target state="translated">Int16Array.length</target>
        </trans-unit>
        <trans-unit id="5c193dd46f10dac764d5258087bf039ad767fbce" translate="yes" xml:space="preserve">
          <source>Int32Array</source>
          <target state="translated">Int32Array</target>
        </trans-unit>
        <trans-unit id="f26c93914721585282e868e1c2ebee5732099508" translate="yes" xml:space="preserve">
          <source>Int32Array.length</source>
          <target state="translated">Int32Array.length</target>
        </trans-unit>
        <trans-unit id="e088a2144c05ba06fd761a7dbefbb84d2fc79069" translate="yes" xml:space="preserve">
          <source>Int8Array</source>
          <target state="translated">Int8Array</target>
        </trans-unit>
        <trans-unit id="10b20c86b339c682e7d8ffa6aba23f3f2f096672" translate="yes" xml:space="preserve">
          <source>Int8Array.length</source>
          <target state="translated">Int8Array.length</target>
        </trans-unit>
        <trans-unit id="1105090c6c0a2edf92fa65478c36a65f5ad15cbc" translate="yes" xml:space="preserve">
          <source>Integer range for &lt;code&gt;Number&lt;/code&gt;</source>
          <target state="translated">Intervalo de enteros para &lt;code&gt;Number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d12bfc6efb01cb013ad7062520bad116239a06a" translate="yes" xml:space="preserve">
          <source>Integer range for Number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73bb4b5b8345a476d2718ae49ba14176bceb702" translate="yes" xml:space="preserve">
          <source>Integer specifying a limit on the number of splits to be found. The &lt;code&gt;[@@split]()&lt;/code&gt; method still splits on every match of &lt;code&gt;this&lt;/code&gt; RegExp pattern (or, in the Syntax above, &lt;code&gt;&lt;var&gt;regexp&lt;/var&gt;&lt;/code&gt;), until the number of split items match the &lt;code&gt;&lt;var&gt;limit&lt;/var&gt;&lt;/code&gt; or the string falls short of &lt;code&gt;this&lt;/code&gt; pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c58c51c392fd6e958ce0e7867611f13bdeb40ff" translate="yes" xml:space="preserve">
          <source>Integer specifying a limit on the number of splits to be found. When this parameter is provided, the &lt;code&gt;split()&lt;/code&gt; method splits the string at each occurrence of the specified &lt;code&gt;separator&lt;/code&gt; but stops when &lt;code&gt;limit&lt;/code&gt; entries have been placed into the array. It may still contain fewer entries than &lt;code&gt;limit&lt;/code&gt; if the end of the string is reached before the specified limit is reached. The left-over text is not returned in the new array.</source>
          <target state="translated">N&amp;uacute;mero entero que especifica un l&amp;iacute;mite en el n&amp;uacute;mero de divisiones que se encontrar&amp;aacute;n. Cuando se proporciona este par&amp;aacute;metro, el m&amp;eacute;todo &lt;code&gt;split()&lt;/code&gt; divide la cadena en cada aparici&amp;oacute;n del &lt;code&gt;separator&lt;/code&gt; especificado, pero se detiene cuando se han colocado entradas de &lt;code&gt;limit&lt;/code&gt; en la matriz. A&amp;uacute;n puede contener menos entradas que el &lt;code&gt;limit&lt;/code&gt; si se alcanza el final de la cadena antes de que se alcance el l&amp;iacute;mite especificado. El texto sobrante no se devuelve en la nueva matriz.</target>
        </trans-unit>
        <trans-unit id="40f9b7d1768a1e02150ecacea6dc02e42357f890" translate="yes" xml:space="preserve">
          <source>Integer value representing the day of the month.</source>
          <target state="translated">Valor entero que representa el día del mes.</target>
        </trans-unit>
        <trans-unit id="9bcbe074de1314a8090bd96f91252df74c70b0e7" translate="yes" xml:space="preserve">
          <source>Integer value representing the hour of the day.</source>
          <target state="translated">Valor entero que representa la hora del día.</target>
        </trans-unit>
        <trans-unit id="34cf13846246cef5d1c62df7a0b15451169bda90" translate="yes" xml:space="preserve">
          <source>Integer value representing the millisecond segment of a time.</source>
          <target state="translated">Valor entero que representa el segmento de milisegundos de un tiempo.</target>
        </trans-unit>
        <trans-unit id="241a7a4eb2efe8cc61b6dd45dbfef2428df56460" translate="yes" xml:space="preserve">
          <source>Integer value representing the minute segment of a time.</source>
          <target state="translated">Valor entero que representa el segmento minúsculo de un tiempo.</target>
        </trans-unit>
        <trans-unit id="be02731127495b3b13396f2468f942ddd732796e" translate="yes" xml:space="preserve">
          <source>Integer value representing the month, beginning with 0 for January to 11 for December.</source>
          <target state="translated">Valor entero que representa el mes,comenzando con 0 para enero hasta 11 para diciembre.</target>
        </trans-unit>
        <trans-unit id="dbce99ca6771dbb1b8cb6588d10e62f7b1e9d10d" translate="yes" xml:space="preserve">
          <source>Integer value representing the number of milliseconds since January 1, 1970, 00:00:00 UTC, with leap seconds ignored (Unix Epoch; but consider that most Unix timestamp functions count in seconds).</source>
          <target state="translated">Valor entero que representa el número de milisegundos desde el 1 de enero de 1970,00:00:00 UTC,con los segundos de salto ignorados (Época Unix;pero considere que la mayoría de las funciones de marca de tiempo de Unix cuentan en segundos).</target>
        </trans-unit>
        <trans-unit id="83e39e42a0a037d33ecb1c8a3c5eea08f0b99cf3" translate="yes" xml:space="preserve">
          <source>Integer value representing the second segment of a time.</source>
          <target state="translated">Valor entero que representa el segundo segmento de un tiempo.</target>
        </trans-unit>
        <trans-unit id="5db4d14c7dc17afe340582090d55b7545c1b3eb0" translate="yes" xml:space="preserve">
          <source>Integer value representing the year. Values from 0 to 99 map to the years 1900 to 1999. See the &lt;a href=&quot;#Two_digit_years_map_to_1900_-_1999&quot;&gt;example below&lt;/a&gt;.</source>
          <target state="translated">Valor entero que representa el a&amp;ntilde;o. Los valores de 0 a 99 corresponden a los a&amp;ntilde;os 1900 a 1999. Vea el &lt;a href=&quot;#Two_digit_years_map_to_1900_-_1999&quot;&gt;ejemplo a continuaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f71c075259752a2939bdd6faa004b91f60e192a1" translate="yes" xml:space="preserve">
          <source>Integers with arbitrary precision: &lt;a href=&quot;bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04591ed8cd35a609e53970d909ddd65bdd9925c" translate="yes" xml:space="preserve">
          <source>Interceptions</source>
          <target state="translated">Interceptions</target>
        </trans-unit>
        <trans-unit id="d68324d2f9cb7da0deed981cf558925381f4aba7" translate="yes" xml:space="preserve">
          <source>InternalError: too much recursion</source>
          <target state="translated">Error interno:demasiada recursividad</target>
        </trans-unit>
        <trans-unit id="6e5a8eb19bb596773f3a9570412498f21d3b1c30" translate="yes" xml:space="preserve">
          <source>Internally calls &lt;code&gt;Promise.prototype.then&lt;/code&gt; on the object upon which is called, passing the parameters &lt;code&gt;undefined&lt;/code&gt; and the &lt;code&gt;onRejected&lt;/code&gt; handler received; then returns the value of that call (which is a &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Llama internamente a &lt;code&gt;Promise.prototype.then&lt;/code&gt; en el objeto sobre el que se llama, pasando los par&amp;aacute;metros &lt;code&gt;undefined&lt;/code&gt; y el controlador &lt;code&gt;onRejected&lt;/code&gt; recibido; luego devuelve el valor de esa llamada (que es una &lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a01e8a33df41e96537ebd6e4fa7dbce634312754" translate="yes" xml:space="preserve">
          <source>Internally calls &lt;code&gt;Promise.prototype.then&lt;/code&gt; on the object upon which it was called, passing the parameters &lt;code&gt;undefined&lt;/code&gt; and the received &lt;code&gt;&lt;var&gt;onRejected&lt;/var&gt;&lt;/code&gt; handler. Returns the value of that call, which is a &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b755f7b857b999860755840e5f0964f6b120c4d" translate="yes" xml:space="preserve">
          <source>Internationalization</source>
          <target state="translated">Internationalization</target>
        </trans-unit>
        <trans-unit id="76d5733b82b9b85e7c7c9538c8b1cbf395dc743e" translate="yes" xml:space="preserve">
          <source>Internet Explorer</source>
          <target state="translated">Internet Explorer</target>
        </trans-unit>
        <trans-unit id="28e5441a7bdfedada4425bf69cae741f24bb602b" translate="yes" xml:space="preserve">
          <source>Internet Explorer 8 implemented a &lt;code&gt;Object.defineProperty()&lt;/code&gt; method that could &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/dd229916%28VS.85%29.aspx&quot;&gt;only be used on DOM objects&lt;/a&gt;. A few things need to be noted:</source>
          <target state="translated">Internet Explorer 8 implement&amp;oacute; un m&amp;eacute;todo &lt;code&gt;Object.defineProperty()&lt;/code&gt; que &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/dd229916%28VS.85%29.aspx&quot;&gt;solo pod&amp;iacute;a usarse en objetos DOM&lt;/a&gt; . Es necesario tener en cuenta algunas cosas:</target>
        </trans-unit>
        <trans-unit id="5790aa85105b2f707aa89140c69ddea48c4d6e3e" translate="yes" xml:space="preserve">
          <source>Internet Explorer 8 specific notes</source>
          <target state="translated">Notas específicas de Internet Explorer 8</target>
        </trans-unit>
        <trans-unit id="4138084098c5ad0c43aa900db4e2093e03cbf674" translate="yes" xml:space="preserve">
          <source>Interrupt a function</source>
          <target state="translated">Interrumpir una función</target>
        </trans-unit>
        <trans-unit id="148008a6c97111d9a4baac98fac041378bd84ebd" translate="yes" xml:space="preserve">
          <source>Intl</source>
          <target state="translated">Intl</target>
        </trans-unit>
        <trans-unit id="9fec477cb4348073d98179a98fcd20fd16c1b51a" translate="yes" xml:space="preserve">
          <source>Intl Plural Rules Draft</source>
          <target state="translated">Proyecto de reglas internacionales</target>
        </trans-unit>
        <trans-unit id="691a439705b6454b10075bcadfd1eba82e0809bf" translate="yes" xml:space="preserve">
          <source>Intl.Collator</source>
          <target state="translated">Intl.Collator</target>
        </trans-unit>
        <trans-unit id="94effe562809ae6b476c47a05969b7d808a1b064" translate="yes" xml:space="preserve">
          <source>Intl.Collator.prototype</source>
          <target state="translated">Intl.Collator.prototype</target>
        </trans-unit>
        <trans-unit id="0b377b74eeb9851f1e25bb146f28a1f051d72446" translate="yes" xml:space="preserve">
          <source>Intl.Collator.supportedLocalesOf</source>
          <target state="translated">Intl.Collator.supportedLocalesOf</target>
        </trans-unit>
        <trans-unit id="91770c02e353a04997b7e8198eb99e13c00635b2" translate="yes" xml:space="preserve">
          <source>Intl.DateTimeFormat</source>
          <target state="translated">Intl.DateTimeFormat</target>
        </trans-unit>
        <trans-unit id="6f720195e10d50c2f6666c80ded510eb7e91ee56" translate="yes" xml:space="preserve">
          <source>Intl.DateTimeFormat.prototype</source>
          <target state="translated">Intl.DateTimeFormat.prototype</target>
        </trans-unit>
        <trans-unit id="8c35054313946594df544a441084c18f481dc900" translate="yes" xml:space="preserve">
          <source>Intl.DateTimeFormat.supportedLocalesOf</source>
          <target state="translated">Intl.DateTimeFormat.supportedLocalesOf</target>
        </trans-unit>
        <trans-unit id="7267adddab78d6c517f39c7fbcf74e8abc940038" translate="yes" xml:space="preserve">
          <source>Intl.NumberFormat</source>
          <target state="translated">Intl.NumberFormat</target>
        </trans-unit>
        <trans-unit id="3d26a08d98ebcd5d28de6ddf3c2bd9cb829194a0" translate="yes" xml:space="preserve">
          <source>Intl.NumberFormat.prototype</source>
          <target state="translated">Intl.NumberFormat.prototype</target>
        </trans-unit>
        <trans-unit id="607ba4bc780b223d3fd5127334576ba2f8e0667c" translate="yes" xml:space="preserve">
          <source>Intl.NumberFormat.supportedLocalesOf</source>
          <target state="translated">Intl.NumberFormat.supportedLocalesOf</target>
        </trans-unit>
        <trans-unit id="66c7f57d39868752ebca01af0acb783a59f9ca74" translate="yes" xml:space="preserve">
          <source>Intl.collator.compare</source>
          <target state="translated">Intl.collator.compare</target>
        </trans-unit>
        <trans-unit id="9236ad9d72ffabd8ab8b1fdd93b3ae2fe0889b2d" translate="yes" xml:space="preserve">
          <source>Intl.collator.resolvedOptions</source>
          <target state="translated">Intl.collator.resolvedOptions</target>
        </trans-unit>
        <trans-unit id="ac6e598b10bdd85f1d5e69697d5f02158893d3a3" translate="yes" xml:space="preserve">
          <source>Intl.dateTimeFormat.format</source>
          <target state="translated">Intl.dateTimeFormat.format</target>
        </trans-unit>
        <trans-unit id="79234597f72df02f1a94d543bde865a99bd7d684" translate="yes" xml:space="preserve">
          <source>Intl.dateTimeFormat.formatToParts</source>
          <target state="translated">Intl.dateTimeFormat.formatToParts</target>
        </trans-unit>
        <trans-unit id="904c6383f067aec078a7b1768309a99adb54dfca" translate="yes" xml:space="preserve">
          <source>Intl.dateTimeFormat.resolvedOptions</source>
          <target state="translated">Intl.dateTimeFormat.resolvedOptions</target>
        </trans-unit>
        <trans-unit id="091fff844313d48a74de1aab92c22d59e6263ad4" translate="yes" xml:space="preserve">
          <source>Intl.getCanonicalLocales</source>
          <target state="translated">Intl.getCanonicalLocales</target>
        </trans-unit>
        <trans-unit id="461a6cbec9e5f4d76bf0dcce35f41b5fae08133d" translate="yes" xml:space="preserve">
          <source>Intl.numberFormat.format</source>
          <target state="translated">Intl.numberFormat.format</target>
        </trans-unit>
        <trans-unit id="0244be6b0c3a6a82ba4428fb87fd56189351f3d2" translate="yes" xml:space="preserve">
          <source>Intl.numberFormat.formatToParts</source>
          <target state="translated">Intl.numberFormat.formatToParts</target>
        </trans-unit>
        <trans-unit id="e2d465b50d59450e9d5c5b8344aa05c1fd17b8ed" translate="yes" xml:space="preserve">
          <source>Intl.numberFormat.resolvedOptions</source>
          <target state="translated">Intl.numberFormat.resolvedOptions</target>
        </trans-unit>
        <trans-unit id="0f821397d0f52bfe785a3b5ae0994d5665808b0d" translate="yes" xml:space="preserve">
          <source>Introduced in Gecko 33 (Firefox 33 / Thunderbird 33 / SeaMonkey 2.30). Functions declared in the function body cannot be referred to inside the outer function]s default parameters. If attempted, a &lt;a href=&quot;../global_objects/referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; is thrown. Default parameters are always executed first, so function declarations inside the function body evaluate afterwards.</source>
          <target state="translated">Introducido en Gecko 33 (Firefox 33 / Thunderbird 33 / SeaMonkey 2.30). No se puede hacer referencia a las funciones declaradas en el cuerpo de la funci&amp;oacute;n dentro de los par&amp;aacute;metros predeterminados de la funci&amp;oacute;n externa. Si se intenta, se lanza un &lt;a href=&quot;../global_objects/referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt; . Los par&amp;aacute;metros predeterminados siempre se ejecutan primero, por lo que las declaraciones de funci&amp;oacute;n dentro del cuerpo de la funci&amp;oacute;n se eval&amp;uacute;an despu&amp;eacute;s.</target>
        </trans-unit>
        <trans-unit id="3c3fbd2398c4e535f509ed566c2214525cbf5078" translate="yes" xml:space="preserve">
          <source>Introduction to Object-Oriented JavaScript</source>
          <target state="translated">Introducción al JavaScript Orientado a Objetos</target>
        </trans-unit>
        <trans-unit id="8e006f5d6c51e5f500e63738a7a4e5ab708ef28b" translate="yes" xml:space="preserve">
          <source>Introduction to source maps &amp;ndash; HTML5 rocks</source>
          <target state="translated">Introducci&amp;oacute;n a los mapas fuente - HTML5 rocks</target>
        </trans-unit>
        <trans-unit id="685d8b8a451d5c25429cf00e02a70396ec23ea94" translate="yes" xml:space="preserve">
          <source>Introduction: &lt;a href=&quot;http://norbertlindenberg.com/2012/12/ecmascript-internationalization-api/index.html&quot;&gt;The ECMAScript Internationalization API&lt;/a&gt;</source>
          <target state="translated">Introducci&amp;oacute;n: &lt;a href=&quot;http://norbertlindenberg.com/2012/12/ecmascript-internationalization-api/index.html&quot;&gt;API de internacionalizaci&amp;oacute;n de ECMAScript&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="43c9754a8861b7fd0f8dd51ab243bdb722045151" translate="yes" xml:space="preserve">
          <source>Introduction: &lt;a href=&quot;https://norbertlindenberg.com/2012/12/ecmascript-internationalization-api/index.html&quot;&gt;The ECMAScript Internationalization API&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94a1b20a86da8d8ef52d86140d5faa7244a1b37" translate="yes" xml:space="preserve">
          <source>Invalid &lt;code&gt;for-of&lt;/code&gt; loop</source>
          <target state="translated">Bucle &lt;code&gt;for-of&lt;/code&gt; no v&amp;aacute;lido</target>
        </trans-unit>
        <trans-unit id="660272f83ac71948bccc6b24478abcb5e8309a01" translate="yes" xml:space="preserve">
          <source>Invalid JavaScript identifier as a property name</source>
          <target state="translated">Identificador JavaScript inválido como nombre de propiedad</target>
        </trans-unit>
        <trans-unit id="6cb64cdbd8ca48ac355e5ba934792e50b7b643a3" translate="yes" xml:space="preserve">
          <source>Invalid array length</source>
          <target state="translated">Longitud de la matriz inválida</target>
        </trans-unit>
        <trans-unit id="2bb5db0093030ed959d9e116d255a162895d06b8" translate="yes" xml:space="preserve">
          <source>Invalid assignment left-hand side</source>
          <target state="translated">Asignación inválida lado izquierdo</target>
        </trans-unit>
        <trans-unit id="b7aa12cebc342348149a588c562fbe64f3283163" translate="yes" xml:space="preserve">
          <source>Invalid cases</source>
          <target state="translated">Casos inválidos</target>
        </trans-unit>
        <trans-unit id="9e0f593040b832479d554e779693995956176e29" translate="yes" xml:space="preserve">
          <source>Invalid const assignment</source>
          <target state="translated">Asignación inválida de la Const</target>
        </trans-unit>
        <trans-unit id="3f45d8ccffe75e10e46696189989b5121bdc235b" translate="yes" xml:space="preserve">
          <source>Invalid date</source>
          <target state="translated">Fecha inválida</target>
        </trans-unit>
        <trans-unit id="1ee4d92944915ed61af938fd4b4fb38eb5ca730a" translate="yes" xml:space="preserve">
          <source>Invalid for-in initializer</source>
          <target state="translated">Inicializador for-in inválido</target>
        </trans-unit>
        <trans-unit id="a1afb0a15ce516af40f158e64da36cf6e02266c4" translate="yes" xml:space="preserve">
          <source>Invalid for-of initializer</source>
          <target state="translated">Inválido para-de inicialización</target>
        </trans-unit>
        <trans-unit id="a0a196b58c85a10ea9cf485d0b56fe28ac2f61a4" translate="yes" xml:space="preserve">
          <source>Invalid input:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4b82ac678593606aa369204a68abe42e54f0ff" translate="yes" xml:space="preserve">
          <source>Invalid octal numbers</source>
          <target state="translated">Números octales inválidos</target>
        </trans-unit>
        <trans-unit id="d6e64d0ec42180ad42843b3147e19fa8b02da721" translate="yes" xml:space="preserve">
          <source>Invalid redeclaration</source>
          <target state="translated">Redeclaración inválida</target>
        </trans-unit>
        <trans-unit id="3390616cafac7ff314d6aadaf20e48034cbb3314" translate="yes" xml:space="preserve">
          <source>Invariants</source>
          <target state="translated">Invariants</target>
        </trans-unit>
        <trans-unit id="4e1321c7e45e4c40761381b9b683387d488bf32f" translate="yes" xml:space="preserve">
          <source>Inverts the bits of its operand.</source>
          <target state="translated">Invierte los bits de su operando.</target>
        </trans-unit>
        <trans-unit id="5fd458722c8cfcbb53c39ea1f3c5645c09338076" translate="yes" xml:space="preserve">
          <source>Invoked through call or apply</source>
          <target state="translated">Invocado a través de la llamada o la solicitud</target>
        </trans-unit>
        <trans-unit id="32a22853078d6023f226d27e51d0b2a6e5b9ae81" translate="yes" xml:space="preserve">
          <source>Invokes any available debugging functionality. If no debugging functionality is available, this statement has no effect.</source>
          <target state="translated">Invoca cualquier funcionalidad de depuración disponible.Si no hay ninguna función de depuración disponible,esta declaración no tiene ningún efecto.</target>
        </trans-unit>
        <trans-unit id="546fbb50ff089e3855d79b13d86e4a369e5a842d" translate="yes" xml:space="preserve">
          <source>Invoking JavaScript &lt;code&gt;Date&lt;/code&gt; as a function (i.e., without the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator) will return a string representing the current date and time.</source>
          <target state="translated">Invocar JavaScript &lt;code&gt;Date&lt;/code&gt; como funci&amp;oacute;n (es decir, sin el operador &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; ) devolver&amp;aacute; una cadena que representa la fecha y hora actuales.</target>
        </trans-unit>
        <trans-unit id="7bc5e46ab780fcbc7794152fa6c4870b7d727aa2" translate="yes" xml:space="preserve">
          <source>Invoking strict mode</source>
          <target state="translated">Invocando el modo estricto</target>
        </trans-unit>
        <trans-unit id="208ae9750e5d18010716a63f7a64c8864b8720b3" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;code&gt;AsyncFunction&lt;/code&gt; constructor as a function (without using the &lt;code&gt;new&lt;/code&gt; operator) has the same effect as invoking it as a constructor.</source>
          <target state="translated">Invocar el constructor &lt;code&gt;AsyncFunction&lt;/code&gt; como una funci&amp;oacute;n (sin usar el operador &lt;code&gt;new&lt;/code&gt; ) tiene el mismo efecto que invocarlo como un constructor.</target>
        </trans-unit>
        <trans-unit id="1f49636aa3cddb53862e739e488ae9fb9c6c0139" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;code&gt;Function&lt;/code&gt; constructor as a function (without using the &lt;code&gt;new&lt;/code&gt; operator) has the same effect as invoking it as a constructor.</source>
          <target state="translated">Invocar el constructor &lt;code&gt;Function&lt;/code&gt; como funci&amp;oacute;n (sin usar el operador &lt;code&gt;new&lt;/code&gt; ) tiene el mismo efecto que invocarlo como constructor.</target>
        </trans-unit>
        <trans-unit id="a09fdf87d82db4d13b9fdd5d76e4b7e7f19d7fac" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;code&gt;GeneratorFunction&lt;/code&gt; constructor as a function (without using the &lt;code&gt;new&lt;/code&gt; operator) has the same effect as invoking it as a constructor.</source>
          <target state="translated">Invocar el constructor &lt;code&gt;GeneratorFunction&lt;/code&gt; como funci&amp;oacute;n (sin utilizar el operador &lt;code&gt;new&lt;/code&gt; ) tiene el mismo efecto que invocarlo como constructor.</target>
        </trans-unit>
        <trans-unit id="b4cd7f60b4d184101c2a6bf4b757b7b2b30bac77" translate="yes" xml:space="preserve">
          <source>Is a generator object an iterator or an iterable?</source>
          <target state="translated">¿Un objeto generador es un iterador o un iterable?</target>
        </trans-unit>
        <trans-unit id="0b0d56ef77469a2f756007c6a62fa7926b600b31" translate="yes" xml:space="preserve">
          <source>Is a stateful, executable instance of a &lt;a href=&quot;webassembly/module&quot;&gt;WebAssembly.Module&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690a13704ccda7c99a1f2a9585cf62a8ecc1ef9e" translate="yes" xml:space="preserve">
          <source>Is the same function as the &lt;code&gt;values()&lt;/code&gt; function and returns a new &lt;code&gt;Iterator&lt;/code&gt; object that contains the values for each element in the &lt;code&gt;Set&lt;/code&gt; object in insertion order.</source>
          <target state="translated">Es la misma funci&amp;oacute;n que la funci&amp;oacute;n &lt;code&gt;values()&lt;/code&gt; y devuelve un nuevo objeto &lt;code&gt;Iterator&lt;/code&gt; que contiene los valores de cada elemento del objeto &lt;code&gt;Set&lt;/code&gt; en el orden de inserci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="237c366b14d4ac2c7ac8dcc981e25cf07610f224" translate="yes" xml:space="preserve">
          <source>Issue with &lt;code&gt;JSON.stringify()&lt;/code&gt; when serializing circular references</source>
          <target state="translated">Problema con &lt;code&gt;JSON.stringify()&lt;/code&gt; al serializar referencias circulares</target>
        </trans-unit>
        <trans-unit id="0fe883a4a2cebd3337cac0b6f63f321bc9cfbcf4" translate="yes" xml:space="preserve">
          <source>Issue with JSON.stringify() when serializing circular references</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5600fcf5422fc9dfe3b3d78fa586442113fe282e" translate="yes" xml:space="preserve">
          <source>Issue with plain &lt;code&gt;JSON.stringify&lt;/code&gt; for use as JavaScript</source>
          <target state="translated">Problema con &lt;code&gt;JSON.stringify&lt;/code&gt; simple para usar como JavaScript</target>
        </trans-unit>
        <trans-unit id="cfecb0665bc38a3d23f86eec2febbf45d4496177" translate="yes" xml:space="preserve">
          <source>Issue with plain JSON.stringify for use as JavaScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f064f8234fa60048c058abe8b49b99a3a6d87a" translate="yes" xml:space="preserve">
          <source>It accepts three arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41203c0da0da22d05561ac067143a1455ee0fac2" translate="yes" xml:space="preserve">
          <source>It allows the code in the string passed to &lt;code&gt;runCodeWithDateFunction()&lt;/code&gt; to be minified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00081e6a2ee8da25b0c2fa487f2293a0e3a9300f" translate="yes" xml:space="preserve">
          <source>It also avoids a problem if the magnitude of your numbers is huge. The largest number you can represent in JS's double floats is &lt;code&gt;Number.MAX_VALUE =&amp;nbsp;1.797...e+308&lt;/code&gt; . If your numbers are larger than about 1e154, taking the square of them will result in Infinity, demolishing your results. For example, &lt;code&gt;Math.sqrt(1e200*1e200 + 1e200*1e200) =&amp;nbsp;Infinity&lt;/code&gt; . If you use &lt;code&gt;hypot()&lt;/code&gt; instead, you get a good answer &lt;code&gt;Math.hypot(1e200, 1e200) =&amp;nbsp;1.4142...e+200&lt;/code&gt; . This is also true with very small numbers. &lt;code&gt;Math.sqrt(1e-200*1e-200 + 1e-200*1e-200) =&amp;nbsp;0&lt;/code&gt;, but &lt;code&gt;Math.hypot(1e-200, 1e-200) =&lt;/code&gt;&lt;code&gt;1.4142...e-200&lt;/code&gt;, a good answer.</source>
          <target state="translated">Tambi&amp;eacute;n evita un problema si la magnitud de sus n&amp;uacute;meros es enorme. El n&amp;uacute;mero m&amp;aacute;s grande que puede representar en los flotantes dobles de JS es &lt;code&gt;Number.MAX_VALUE =&amp;nbsp;1.797...e+308&lt;/code&gt; . Si sus n&amp;uacute;meros son mayores que aproximadamente 1e154, tomar el cuadrado de ellos dar&amp;aacute; como resultado Infinity, demoliendo sus resultados. Por ejemplo, &lt;code&gt;Math.sqrt(1e200*1e200 + 1e200*1e200) =&amp;nbsp;Infinity&lt;/code&gt; . Si usa &lt;code&gt;hypot()&lt;/code&gt; lugar, obtendr&amp;aacute; una buena respuesta &lt;code&gt;Math.hypot(1e200, 1e200) =&amp;nbsp;1.4142...e+200&lt;/code&gt; . Esto tambi&amp;eacute;n es cierto con n&amp;uacute;meros muy peque&amp;ntilde;os. &lt;code&gt;Math.sqrt(1e-200*1e-200 + 1e-200*1e-200) =&amp;nbsp;0&lt;/code&gt; , pero &lt;code&gt;Math.hypot(1e-200, 1e-200) =&lt;/code&gt; &lt;code&gt;1.4142...e-200&lt;/code&gt; , una buena respuesta.</target>
        </trans-unit>
        <trans-unit id="e475453a8d4616b44db70ed2898a74507d1d08d9" translate="yes" xml:space="preserve">
          <source>It also means that variables declared inside the function body using &lt;code&gt;var&lt;/code&gt; will mask parameters of the same name, instead of the usual behavior of duplicate &lt;code&gt;var&lt;/code&gt; declarations having no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046a89c09b8e69d7519433ee5f4799dde2a0f2f5" translate="yes" xml:space="preserve">
          <source>It also works when you put &lt;code&gt;default&lt;/code&gt; before all other &lt;code&gt;case&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1ebb7ab8937cf2664e8c849a22e22823d62684" translate="yes" xml:space="preserve">
          <source>It also works when you put default before all other cases.</source>
          <target state="translated">También funciona cuando se antepone el incumplimiento a todos los demás casos.</target>
        </trans-unit>
        <trans-unit id="898d6cff7f0d4ac02e7c8c72fea0f382f5f1a39e" translate="yes" xml:space="preserve">
          <source>It attempted to call a value from a function, but the value is not actually a function. Some code expects you to provide a function, but that didn't happen.</source>
          <target state="translated">Intentó llamar un valor de una función,pero el valor no es realmente una función.Algún código espera que proporcione una función,pero eso no ocurrió.</target>
        </trans-unit>
        <trans-unit id="b2adb77288fe8601577f558b0c9e3989d99e0757" translate="yes" xml:space="preserve">
          <source>It can be a Function or other non-primitive value.</source>
          <target state="translated">Puede ser una función u otro valor no primitivo.</target>
        </trans-unit>
        <trans-unit id="c48068ce741966c4d12a0279fea298e01c807447" translate="yes" xml:space="preserve">
          <source>It can be more obscure when using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;Closures&lt;/a&gt;, or other constructs that use a lot of different parenthesis and curly brackets, for example.</source>
          <target state="translated">Puede ser m&amp;aacute;s oscuro cuando se usa &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE&lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;Closures&lt;/a&gt; u otras construcciones que usan muchos par&amp;eacute;ntesis y llaves diferentes, por ejemplo.</target>
        </trans-unit>
        <trans-unit id="aaf4352228b453b336e8eafbf659e9e48282c4b5" translate="yes" xml:space="preserve">
          <source>It can be more obscure when using &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE&lt;/a&gt;, &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;Closures&lt;/a&gt;, or other constructs that use a lot of different parenthesis and curly brackets, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637735e5f525f257cdcfa7d7c573a1134e3b31c0" translate="yes" xml:space="preserve">
          <source>It can have an identifier which is either a number or a string;</source>
          <target state="translated">Puede tener un identificador que es un número o una cadena;</target>
        </trans-unit>
        <trans-unit id="fee2b94ebdffc711d03534a6c9c32859543eb863" translate="yes" xml:space="preserve">
          <source>It doesn't work if the string contains grapheme clusters, even when using a unicode aware split (use for example &lt;a href=&quot;https://github.com/mathiasbynens/esrever&quot;&gt;esrever&lt;/a&gt; instead).</source>
          <target state="translated">No funciona si la cadena contiene grupos de grafemas, incluso cuando se usa una divisi&amp;oacute;n compatible con Unicode (use, por ejemplo, &lt;a href=&quot;https://github.com/mathiasbynens/esrever&quot;&gt;esrever&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f947e606472d4347ad32397429bfe2112731e5ac" translate="yes" xml:space="preserve">
          <source>It doesn't work if the string contains grapheme clusters, even when using a unicode-aware split. (Use, for example, &lt;a href=&quot;https://github.com/mathiasbynens/esrever&quot;&gt;esrever&lt;/a&gt; instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4fafc92e6281926700d4d162cec8f063e6ae134" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; called for missing elements of the array; that is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adef4106e76e6addc70a8d2ae997c1248d91d94f" translate="yes" xml:space="preserve">
          <source>It is a good idea to comment &lt;em&gt;intentional&lt;/em&gt; use of the empty statement, as it is not really obvious to distinguish from a normal semicolon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10eb0a5f9478db379a0c234799a056177e982243" translate="yes" xml:space="preserve">
          <source>It is advisable to not use simple assignments in a conditional expression (such as &lt;code&gt;&lt;a href=&quot;../statements/if...else&quot;&gt;if...else&lt;/a&gt;&lt;/code&gt;), because the assignment can be confused with equality when glancing over the code. For example, do not use the following code:</source>
          <target state="translated">Es aconsejable no utilizar asignaciones simples en una expresi&amp;oacute;n condicional (como &lt;code&gt;&lt;a href=&quot;../statements/if...else&quot;&gt;if...else&lt;/a&gt;&lt;/code&gt; ), porque la asignaci&amp;oacute;n puede confundirse con la igualdad cuando se mira el c&amp;oacute;digo. Por ejemplo, no utilice el siguiente c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="b1f5b1660aed98af62b5049d964d12af0b3a267c" translate="yes" xml:space="preserve">
          <source>It is advisable to not use simple assignments in a conditional expression, because the assignment can be confused with equality when glancing over the code. For example, do not use the following code:</source>
          <target state="translated">Es aconsejable no utilizar asignaciones simples en una expresión condicional,porque la asignación puede confundirse con la igualdad cuando se echa un vistazo al código.Por ejemplo,no utilice el siguiente código:</target>
        </trans-unit>
        <trans-unit id="24d3facbde01a9ba1b0055ecd1c1d62977eb59f1" translate="yes" xml:space="preserve">
          <source>It is almost always safer to provide an &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt;, because there can be up to &lt;em&gt;four&lt;/em&gt; possible output types without &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt;, as shown in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0b595c50396c3cdbc92c5f6b750e905ed42003" translate="yes" xml:space="preserve">
          <source>It is also possible to &quot;import/export&quot; from different modules in a parent module so that they are available to import from that module. In other words, one can create a single module concentrating various exports from various modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4cc67af098b1db09d7c4c8d6064bf4903ec064" translate="yes" xml:space="preserve">
          <source>It is also possible to provide a name inside the definition in order to create a &lt;strong&gt;named&lt;/strong&gt; function expression:</source>
          <target state="translated">Tambi&amp;eacute;n es posible proporcionar un nombre dentro de la definici&amp;oacute;n para crear una expresi&amp;oacute;n de funci&amp;oacute;n con &lt;strong&gt;nombre&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="d15511bc331dcf794b253aed11d5d6bc426cf771" translate="yes" xml:space="preserve">
          <source>It is also possible to use the default syntax with the ones seen above (namespace imports or named imports). In such cases, the default import will have to be declared first. For instance:</source>
          <target state="translated">También es posible utilizar la sintaxis por defecto con las que se han visto anteriormente (importaciones de espacios de nombres o importaciones de nombres).En tales casos,la importación por defecto tendrá que ser declarada primero.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="af4edb990c5fdf727cafe82fdb0540d797482226" translate="yes" xml:space="preserve">
          <source>It is an array of bytes, often referred to in other languages as a &quot;byte array&quot;.You cannot directly manipulate the contents of an &lt;code&gt;ArrayBuffer&lt;/code&gt;; instead, you create one of the &lt;a href=&quot;typedarray&quot;&gt;typed array objects&lt;/a&gt; or a &lt;a href=&quot;dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; object which represents the buffer in a specific format, and use that to read and write the contents of the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e582cadd5e2af8a250319887c5b15dd0b445e4ca" translate="yes" xml:space="preserve">
          <source>It is common to use &lt;a href=&quot;../global_objects/function/apply&quot;&gt;&lt;code&gt;Function.prototype.apply()&lt;/code&gt;&lt;/a&gt; in cases where you want to use the elements of an array as arguments to a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb9df029f10f1c4b5a120be3422d4cce76c0172" translate="yes" xml:space="preserve">
          <source>It is common to use &lt;a href=&quot;../global_objects/function/apply&quot;&gt;&lt;code&gt;Function.prototype.apply&lt;/code&gt;&lt;/a&gt; in cases where you want to use the elements of an array as arguments to a function.</source>
          <target state="translated">Es com&amp;uacute;n usar &lt;a href=&quot;../global_objects/function/apply&quot;&gt; &lt;code&gt;Function.prototype.apply&lt;/code&gt; &lt;/a&gt; en los casos en los que desea usar los elementos de una matriz como argumentos para una funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e47762cbcbb8539a041b86f5911c627bfe43782a" translate="yes" xml:space="preserve">
          <source>It is common to use the callback with one argument (the element being traversed). Certain functions are also commonly used with one argument, even though they take additional optional arguments. These habits may lead to confusing behaviors.</source>
          <target state="translated">Es común utilizar la devolución de llamada con un argumento (el elemento que se atraviesa).También se suelen utilizar ciertas funciones con un argumento,aunque toman argumentos opcionales adicionales.Estos hábitos pueden llevar a comportamientos confusos.</target>
        </trans-unit>
        <trans-unit id="85416cea4b3eddb14fb95e0c0cb8577b27c9847a" translate="yes" xml:space="preserve">
          <source>It is important to consider the way default values of attributes are applied. There is often a difference between simply using dot notation to assign a value and using &lt;code&gt;Object.defineProperty()&lt;/code&gt;, as shown in the example below.</source>
          <target state="translated">Es importante considerar la forma en que se aplican los valores predeterminados de los atributos. A menudo hay una diferencia entre usar simplemente la notaci&amp;oacute;n de puntos para asignar un valor y usar &lt;code&gt;Object.defineProperty()&lt;/code&gt; , como se muestra en el ejemplo siguiente.</target>
        </trans-unit>
        <trans-unit id="c1db1351f7a897a851f490253a603fa473ce35df" translate="yes" xml:space="preserve">
          <source>It is important to note the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8dda9f554abc422ea39aabc120a7ac0d13f88f6" translate="yes" xml:space="preserve">
          <source>It is not possible to know reflectively whether a particular object implements the iterator protocol, however it is easy to create an object that satisfies both the iterator and iterable protocols (as shown in the example below). Doing so allows an iterator to be consumed by the various syntaxes expecting iterables. Thus it is rarely desireable to implement the iterator protocol without also implementing iterable.</source>
          <target state="translated">No es posible saber de manera reflexiva si un objeto particular implementa el protocolo iterador,sin embargo es fácil crear un objeto que satisfaga tanto el protocolo iterador como el iterable (como se muestra en el ejemplo que figura a continuación).Hacerlo permite que un iterador sea consumido por las diversas sintaxis que esperan iterables.Así pues,rara vez es deseable aplicar el protocolo iterador sin aplicar también el iterable.</target>
        </trans-unit>
        <trans-unit id="bbba11b1cf2f60a0f1e56080fd83cc82be1fb642" translate="yes" xml:space="preserve">
          <source>It is not possible to simultaneously have a getter bound to a property and have that property actually hold a value, although it &lt;em&gt;is&lt;/em&gt; possible to use a getter and a setter in conjunction to create a type of pseudo-property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34110370fd48f5a59887b0bd5220e344fd6f9b8c" translate="yes" xml:space="preserve">
          <source>It is not recommended to use &lt;code&gt;Date.parse&lt;/code&gt; as until ES5, parsing of strings was entirely implementation dependent. There are still many differences in how different hosts parse date strings, therefore date strings should be manually parsed (a library can help if many different formats are to be accommodated).</source>
          <target state="translated">No se recomienda utilizar &lt;code&gt;Date.parse&lt;/code&gt; ya que hasta ES5, el an&amp;aacute;lisis de cadenas depend&amp;iacute;a por completo de la implementaci&amp;oacute;n. Todav&amp;iacute;a existen muchas diferencias en la forma en que los diferentes hosts analizan las cadenas de fecha, por lo tanto, las cadenas de fecha deben analizarse manualmente (una biblioteca puede ayudar si se van a acomodar muchos formatos diferentes).</target>
        </trans-unit>
        <trans-unit id="73dcdfa951545bec950ab075835e1130523dd188" translate="yes" xml:space="preserve">
          <source>It is possible to change this behaviour by handling possible rejections:</source>
          <target state="translated">Es posible cambiar este comportamiento manejando los posibles rechazos:</target>
        </trans-unit>
        <trans-unit id="1dc88e3e25b3ab537eecc21b53f748a8be78bdb7" translate="yes" xml:space="preserve">
          <source>It is possible to have a default &lt;a href=&quot;export&quot;&gt;&lt;code&gt;export&lt;/code&gt;&lt;/a&gt; (whether it is an object, a function, a class, etc.). The &lt;code&gt;import&lt;/code&gt; statement may then be used to import such defaults.</source>
          <target state="translated">Es posible tener una &lt;a href=&quot;export&quot;&gt; &lt;code&gt;export&lt;/code&gt; aci&amp;oacute;n&lt;/a&gt; predeterminada (ya sea un objeto, una funci&amp;oacute;n, una clase, etc.). La declaraci&amp;oacute;n de &lt;code&gt;import&lt;/code&gt; aci&amp;oacute;n se puede utilizar para importar dichos valores predeterminados.</target>
        </trans-unit>
        <trans-unit id="b5bd6a46ab029adb771c2868831032b213e42613" translate="yes" xml:space="preserve">
          <source>It is possible to redefine the &lt;a href=&quot;../array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property of arrays, subject to the usual redefinition restrictions. (The &lt;a href=&quot;../array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property is initially non-configurable, non-enumerable, and writable. Thus on an unaltered array, it's possible to change the &lt;a href=&quot;../array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property's value or to make it non-writable. It is not allowed to change its enumerability or configurability, or if it is non-writable to change its value or writability.) However, not all browsers permit this redefinition.</source>
          <target state="translated">Es posible redefinir la propiedad de &lt;a href=&quot;../array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; de las matrices, sujeto a las restricciones de redefinici&amp;oacute;n habituales. (La propiedad &lt;a href=&quot;../array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; es inicialmente no configurable, no enumerable y escribible. Por lo tanto, en una matriz inalterada, es posible cambiar el valor de la propiedad &lt;a href=&quot;../array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; o hacer que no se pueda escribir. No est&amp;aacute; permitido cambiar su enumerabilidad o configurabilidad, o si no se puede escribir para cambiar su valor o capacidad de escritura). Sin embargo, no todos los navegadores permiten esta redefinici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="aba7c66856ef3424f32c864a39cb61a9c7d5f9b7" translate="yes" xml:space="preserve">
          <source>It is rather rare to use &lt;code&gt;NaN&lt;/code&gt; in a program. It is the returned value when &lt;a href=&quot;math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt; functions fail (&lt;code&gt;Math.sqrt(-1)&lt;/code&gt;) or when a function trying to parse a number fails (&lt;code&gt;parseInt(&quot;blabla&quot;)&lt;/code&gt;).</source>
          <target state="translated">Es bastante raro usar &lt;code&gt;NaN&lt;/code&gt; en un programa. Es el valor devuelto cuando fallan las funciones &lt;a href=&quot;math&quot;&gt; &lt;code&gt;Math&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;Math.sqrt(-1)&lt;/code&gt; ) o cuando una funci&amp;oacute;n que intenta analizar un n&amp;uacute;mero falla ( &lt;code&gt;parseInt(&quot;blabla&quot;)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8d807a334bdce03af9753e48784800ecd42f96a6" translate="yes" xml:space="preserve">
          <source>It is sometime useful to have a stricter way to parse float values, regular expressions can help :</source>
          <target state="translated">A veces es útil tener una forma más estricta de analizar los valores de flotación,las expresiones regulares pueden ayudar:</target>
        </trans-unit>
        <trans-unit id="a9028e6cb1ea88953f0056159fb43c778bc96771" translate="yes" xml:space="preserve">
          <source>It is sometimes useful to have a stricter way to parse int values. Regular expressions can help:</source>
          <target state="translated">A veces es útil tener una forma más estricta de analizar los valores internos.Las expresiones regulares pueden ayudar:</target>
        </trans-unit>
        <trans-unit id="dbdea303761b144c9595974be207942a85ce77f9" translate="yes" xml:space="preserve">
          <source>It is sometimes useful to have a stricter way to parse integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788331654327003b9a3e20533f1dd22dd0adf40e" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that the &lt;a href=&quot;../../operators/assignment_operators&quot;&gt;assignment operators&lt;/a&gt; (&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;+=&lt;/code&gt;) are used instead of the &lt;code&gt;concat()&lt;/code&gt; method.</source>
          <target state="translated">Se recomienda encarecidamente que se utilicen los &lt;a href=&quot;../../operators/assignment_operators&quot;&gt;operadores de asignaci&amp;oacute;n&lt;/a&gt; ( &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;+=&lt;/code&gt; ) en lugar del m&amp;eacute;todo &lt;code&gt;concat()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8a1c18ba9110166bc671d87e12d9f825477f805" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators&quot;&gt;assignment operators&lt;/a&gt; (&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;+=&lt;/code&gt;) are used instead of the &lt;code&gt;concat()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64ce9678fde9b6ccb870d85fc1f1595c83b8450" translate="yes" xml:space="preserve">
          <source>It is usually safer to provide an initial value because there are three possible outputs without &lt;code&gt;initialValue&lt;/code&gt;, as shown in the following example.</source>
          <target state="translated">Por lo general, es m&amp;aacute;s seguro proporcionar un valor inicial porque hay tres salidas posibles sin &lt;code&gt;initialValue&lt;/code&gt; , como se muestra en el siguiente ejemplo.</target>
        </trans-unit>
        <trans-unit id="f39e377b324a5c9f08b33569e89ef7d1ecc19a5e" translate="yes" xml:space="preserve">
          <source>It may be most practically used for debugging purposes, being an easy way to check the properties of an object (by outputting to the console or otherwise). Although arrays are often more practical for storing data, in situations where a key-value pair is preferred for working with data (with properties acting as the &quot;key&quot;), there may be instances where you want to check if any of those keys hold a particular value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae584578a863d7bff34ff1b67e5fef9249f60d6" translate="yes" xml:space="preserve">
          <source>It may seem strange to have a special exception-related clause that executes &lt;strong&gt;regardless&lt;/strong&gt; of whether there is an exception, but this construct actually does serve a purpose. The important point is not that the &lt;code&gt;finally&lt;/code&gt;-clause always executes, but rather that ordinary code following a &lt;code&gt;try..catch&lt;/code&gt; does not.</source>
          <target state="translated">Puede parecer extra&amp;ntilde;o tener una cl&amp;aacute;usula especial relacionada con la excepci&amp;oacute;n que se ejecute &lt;strong&gt;independientemente&lt;/strong&gt; de si hay una excepci&amp;oacute;n, pero esta construcci&amp;oacute;n realmente tiene un prop&amp;oacute;sito. El punto importante no es que el &lt;code&gt;finally&lt;/code&gt; -clause siempre se ejecuta, sino m&amp;aacute;s bien que el c&amp;oacute;digo normal despu&amp;eacute;s de una &lt;code&gt;try..catch&lt;/code&gt; no lo hace.</target>
        </trans-unit>
        <trans-unit id="641a1f1bfb9cdea9572c9f6c64ca77cd267d097a" translate="yes" xml:space="preserve">
          <source>It might be tempting to use &lt;code&gt;Math.round()&lt;/code&gt; to accomplish that, but doing so would cause your random numbers to follow a non-uniform distribution, which may not be acceptable for your needs.</source>
          <target state="translated">Puede ser tentador usar &lt;code&gt;Math.round()&lt;/code&gt; para lograr eso, pero al hacerlo, sus n&amp;uacute;meros aleatorios seguir&amp;iacute;an una distribuci&amp;oacute;n no uniforme, lo que puede no ser aceptable para sus necesidades.</target>
        </trans-unit>
        <trans-unit id="e9d68bf98ccf8c0937c95ad24485ddb23a78f60f" translate="yes" xml:space="preserve">
          <source>It might just be an oversight, carefully check all you parenthesis in your code.</source>
          <target state="translated">Puede ser un descuido,revisa cuidadosamente todos los paréntesis de tu código.</target>
        </trans-unit>
        <trans-unit id="09d6a7960d6344daf110a07aa0f46e23fd7619dd" translate="yes" xml:space="preserve">
          <source>It must have exactly one parameter (see &lt;a href=&quot;http://whereswalden.com/2010/08/22/incompatible-es5-change-literal-getter-and-setter-functions-must-now-have-exactly-zero-or-one-arguments/&quot;&gt;Incompatible &lt;abbr&gt;ES5&lt;/abbr&gt; change: literal getter and setter functions must now have exactly zero or one arguments&lt;/a&gt; for more information);</source>
          <target state="translated">Debe tener exactamente un par&amp;aacute;metro (consulte &lt;a href=&quot;http://whereswalden.com/2010/08/22/incompatible-es5-change-literal-getter-and-setter-functions-must-now-have-exactly-zero-or-one-arguments/&quot;&gt;Cambio de &lt;/a&gt;&lt;abbr&gt;ES5&lt;/abbr&gt; incompatible : las funciones de captador y definidor literal ahora deben tener exactamente cero o un argumento&lt;abbr&gt;&lt;/abbr&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n);</target>
        </trans-unit>
        <trans-unit id="e0d34231d840869638e3aa9002ecd024ffbeb1d0" translate="yes" xml:space="preserve">
          <source>It must have exactly zero parameters (see &lt;a href=&quot;http://whereswalden.com/2010/08/22/incompatible-es5-change-literal-getter-and-setter-functions-must-now-have-exactly-zero-or-one-arguments/&quot;&gt;Incompatible &lt;abbr&gt;ES5&lt;/abbr&gt; change: literal getter and setter functions must now have exactly zero or one arguments&lt;/a&gt; for more information);</source>
          <target state="translated">Debe tener exactamente cero par&amp;aacute;metros (consulte &lt;a href=&quot;http://whereswalden.com/2010/08/22/incompatible-es5-change-literal-getter-and-setter-functions-must-now-have-exactly-zero-or-one-arguments/&quot;&gt;Cambio de &lt;/a&gt;&lt;abbr&gt;ES5&lt;/abbr&gt; incompatible : las funciones de captador y definidor literal ahora deben tener exactamente cero o un argumento&lt;abbr&gt;&lt;/abbr&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n);</target>
        </trans-unit>
        <trans-unit id="657ebce6cc38bce8085a97e3ff70384ec64422e5" translate="yes" xml:space="preserve">
          <source>It must not appear in an object literal with another &lt;code&gt;get&lt;/code&gt; or with a data entry for the same property (&lt;code&gt;{ get x() { }, get x() { } }&lt;/code&gt; and &lt;code&gt;{ x: ..., get x() { } }&lt;/code&gt; are forbidden).</source>
          <target state="translated">No debe aparecer en un objeto literal con otro &lt;code&gt;get&lt;/code&gt; o con una entrada de datos para la misma propiedad ( &lt;code&gt;{ get x() { }, get x() { } }&lt;/code&gt; y &lt;code&gt;{ x: ..., get x() { } }&lt;/code&gt; est&amp;aacute;n prohibidos).</target>
        </trans-unit>
        <trans-unit id="05463fbb4aaf21f08a3ab5f26554235003d67ae9" translate="yes" xml:space="preserve">
          <source>It must not appear in an object literal with another &lt;code&gt;set&lt;/code&gt; or with a data entry for the same property.</source>
          <target state="translated">No debe aparecer en un objeto literal con otro &lt;code&gt;set&lt;/code&gt; o con una entrada de datos para la misma propiedad.</target>
        </trans-unit>
        <trans-unit id="de37cc0fc3c6bed823b6d0ee0f3b91c3251ed188" translate="yes" xml:space="preserve">
          <source>It returns an object with a &lt;code&gt;url&lt;/code&gt; property indicating the base URL of the module. This will either be the URL from which the script was obtained, for external scripts, or the document base URL of the containing document, for inline scripts.</source>
          <target state="translated">Devuelve un objeto con una propiedad de &lt;code&gt;url&lt;/code&gt; indica la URL base del m&amp;oacute;dulo. Esta ser&amp;aacute; la URL de la que se obtuvo el script, para los scripts externos, o la URL base del documento del documento que lo contiene, para los scripts en l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="bb2fc09f8688c1fd395eb3e9195d969486229a89" translate="yes" xml:space="preserve">
          <source>It should be noted that &lt;a href=&quot;operator_precedence&quot;&gt;the precedence&lt;/a&gt; of the &lt;code&gt;void&lt;/code&gt; operator should be taken into account and that parentheses can help clarify the resolution of the expression following the &lt;code&gt;void&lt;/code&gt; operator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea4eb774c6833ffc646efd58e60903a08815e06" translate="yes" xml:space="preserve">
          <source>It should be noted that the maximum &lt;code&gt;Date&lt;/code&gt; is not of the same value as the maximum safe integer (&lt;code&gt;Number.MAX_SAFE_INTEGER&lt;/code&gt; is 9,007,199,254,740,991). Instead, it is defined in ECMA-262 that a maximum of &amp;plusmn;100,000,000 (one hundred million) days relative to January 1, 1970 UTC (that is, April 20, 271821 BCE ~ September 13, 275760 CE) can be represented by the standard &lt;code&gt;Date&lt;/code&gt; object (equivalent to &amp;plusmn;8,640,000,000,000,000 milliseconds).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954e387ac20208cc03c4f242e0c768abc0226976" translate="yes" xml:space="preserve">
          <source>It should be noted, however, that function expressions and function declarations nested within the function generated by parsing a &lt;code&gt;Function constructor&lt;/code&gt; 's string aren't parsed repeatedly. For example:</source>
          <target state="translated">Sin embargo, debe tenerse en cuenta que las expresiones de funci&amp;oacute;n y las declaraciones de funci&amp;oacute;n anidadas dentro de la funci&amp;oacute;n generada al analizar la cadena de un &lt;code&gt;Function constructor&lt;/code&gt; no se analizan repetidamente. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="5add076469b11cb8d7fb6364d8cdde585210a41c" translate="yes" xml:space="preserve">
          <source>It should return the value that should be added to the JSON string, as follows:</source>
          <target state="translated">Debería devolver el valor que debe ser añadido a la cadena JSON,de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="f8133026fa0d9fb510eaf9a781595de1b0f3fe04" translate="yes" xml:space="preserve">
          <source>It takes four arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1dcd4bfabeba9ef57034858eb07de6c007a236" translate="yes" xml:space="preserve">
          <source>It takes three arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a4eb485bbd793345a88879a66885954804a585" translate="yes" xml:space="preserve">
          <source>It was attempted to &lt;a href=&quot;../global_objects/array/length#Shortening_an_array&quot;&gt;shorten the length&lt;/a&gt; of an array, but one of the array's elements is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Properties&quot;&gt;non-configurable&lt;/a&gt;. When shortening an array, the elements beyond the new array length will be deleted, which failed in this situation.</source>
          <target state="translated">Se intent&amp;oacute; &lt;a href=&quot;../global_objects/array/length#Shortening_an_array&quot;&gt;acortar la longitud&lt;/a&gt; de una matriz, pero uno de los elementos de la matriz &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Properties&quot;&gt;no&lt;/a&gt; es configurable . Al acortar una matriz, los elementos m&amp;aacute;s all&amp;aacute; de la nueva longitud de la matriz se eliminar&amp;aacute;n, lo que fall&amp;oacute; en esta situaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="02e2c9120f5b81da0f3dc90fab1cb8d051a5e07e" translate="yes" xml:space="preserve">
          <source>It was attempted to &lt;a href=&quot;../global_objects/array/length#Shortening_an_array&quot;&gt;shorten the length&lt;/a&gt; of an array, but one of the array's elements is &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Properties&quot;&gt;non-configurable&lt;/a&gt;. When shortening an array, the elements beyond the new array length will be deleted, which failed in this situation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b01aa32def2c0fe928809ced8d9324a50887fe5" translate="yes" xml:space="preserve">
          <source>It was attempted to delete a property, but that property is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Properties&quot;&gt;non-configurable&lt;/a&gt;. The &lt;code&gt;configurable&lt;/code&gt; attribute controls whether the property can be deleted from the object and whether its attributes (other than &lt;code&gt;writable&lt;/code&gt;) can be changed.</source>
          <target state="translated">Se intent&amp;oacute; eliminar una propiedad, pero esa propiedad &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Properties&quot;&gt;no&lt;/a&gt; es configurable . El atributo &lt;code&gt;configurable&lt;/code&gt; controla si la propiedad se puede eliminar del objeto y si se pueden cambiar sus atributos (que no sean de &lt;code&gt;writable&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cef26e246ba549e7961e66ec8bd877f8126498a0" translate="yes" xml:space="preserve">
          <source>It was attempted to delete a property, but that property is &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Properties&quot;&gt;non-configurable&lt;/a&gt;. The &lt;code&gt;configurable&lt;/code&gt; attribute controls whether the property can be deleted from the object and whether its attributes (other than &lt;code&gt;writable&lt;/code&gt;) can be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccad8caf638b4903b95cc599d522675b3d9021ba" translate="yes" xml:space="preserve">
          <source>It was attempted to redefine a property, but that property is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Properties&quot;&gt;non-configurable&lt;/a&gt;. The &lt;code&gt;configurable&lt;/code&gt; attribute controls whether the property can be deleted from the object and whether its attributes (other than &lt;code&gt;writable&lt;/code&gt;) can be changed. Usually, properties in an object created by an &lt;a href=&quot;../operators/object_initializer&quot;&gt;object initializer&lt;/a&gt; are configurable. However, for example, when using &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;, the property isn't configurable by default.</source>
          <target state="translated">Se intent&amp;oacute; redefinir una propiedad, pero esa propiedad &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Properties&quot;&gt;no&lt;/a&gt; es configurable . El atributo &lt;code&gt;configurable&lt;/code&gt; controla si la propiedad se puede eliminar del objeto y si se pueden cambiar sus atributos (que no sean de &lt;code&gt;writable&lt;/code&gt; ). Normalmente, las propiedades de un objeto creado por un &lt;a href=&quot;../operators/object_initializer&quot;&gt;inicializador de objeto&lt;/a&gt; son configurables. Sin embargo, por ejemplo, cuando se usa &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; , la propiedad no se puede configurar de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="ec1f1b3574980048baf67633369823cce4b51a22" translate="yes" xml:space="preserve">
          <source>It was attempted to redefine a property, but that property is &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Properties&quot;&gt;non-configurable&lt;/a&gt;. The &lt;code&gt;configurable&lt;/code&gt; attribute controls whether the property can be deleted from the object and whether its attributes (other than &lt;code&gt;writable&lt;/code&gt;) can be changed. Usually, properties in an object created by an &lt;a href=&quot;../operators/object_initializer&quot;&gt;object initializer&lt;/a&gt; are configurable. However, for example, when using &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;, the property isn't configurable by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab397dbab28fef0eebb4b36ff8f4cad76612d87" translate="yes" xml:space="preserve">
          <source>It will create an infinite loop if there is a match, due to the &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; property being reset upon each iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d60210731c923bbd8d426ee1b331915626a35b0" translate="yes" xml:space="preserve">
          <source>It will return &lt;code&gt;0&lt;/code&gt; on non-shared &lt;code&gt;ArrayBuffer&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6ba868b0d358d7be2e94d5d913452de49af160" translate="yes" xml:space="preserve">
          <source>It's also possible to explicitly get the string representation of a function using the &lt;code&gt;+&lt;/code&gt; operator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ae4f0160efc5dbbcb8104a8d363de06b4efe61" translate="yes" xml:space="preserve">
          <source>It's always been possible to return an array from a function. Destructuring can make working with an array return value more concise.</source>
          <target state="translated">Siempre ha sido posible devolver una matriz de una función.La desestructuración puede hacer que el trabajo con un valor de retorno de un array sea más conciso.</target>
        </trans-unit>
        <trans-unit id="cab096b013facf5171fb20f7a5008433704a6c33" translate="yes" xml:space="preserve">
          <source>It's an error to reference private fields from outside of the class; they can only be read or written within the class body. By defining things which are not visible outside of the class, you ensure that your classes' users can't depend on internals, which may change version to version.</source>
          <target state="translated">Es un error referirse a los campos privados desde fuera de la clase;sólo pueden ser leídos o escritos dentro del cuerpo de la clase.Al definir las cosas que no son visibles fuera de la clase,se asegura que los usuarios de sus clases no puedan depender de los internos,que pueden cambiar de versión a versión.</target>
        </trans-unit>
        <trans-unit id="03716457a38dd613fb146f492439c6694b559017" translate="yes" xml:space="preserve">
          <source>It's been &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=789036&quot;&gt;reported&lt;/a&gt; that some websites using MooTools 1.2 broke on Firefox 17. This version of MooTools checks whether &lt;code&gt;String.prototype.contains()&lt;/code&gt; exists and, if it doesn't, MooTools adds its own function. With the introduction of this function in Firefox 17, the behavior of that check changed in a way that causes code based on MooTools' &lt;code&gt;String.prototype.contains()&lt;/code&gt; implementation to break. As a result, the implementation was &lt;a href=&quot;https://hg.mozilla.org/releases/mozilla-aurora/rev/086db97198a8&quot;&gt;disabled&lt;/a&gt; in Firefox 17 and &lt;code&gt;String.prototype.contains()&lt;/code&gt; was available one version later, in Firefox 18, when &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=789036#c32&quot;&gt;outreach to MooTools &lt;/a&gt;was leading to the &lt;a href=&quot;http://mootools.net/blog/2013/02/19/mootools-1-2-6-released&quot;&gt;release of MooTools version 1.2.6&lt;/a&gt;.</source>
          <target state="translated">Se ha &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=789036&quot;&gt;informado&lt;/a&gt; que algunos sitios web que utilizan MooTools 1.2 se rompieron en Firefox 17. Esta versi&amp;oacute;n de MooTools comprueba si existe &lt;code&gt;String.prototype.contains()&lt;/code&gt; y, si no existe, MooTools agrega su propia funci&amp;oacute;n. Con la introducci&amp;oacute;n de esta funci&amp;oacute;n en Firefox 17, el comportamiento de esa verificaci&amp;oacute;n cambi&amp;oacute; de una manera que hace que el c&amp;oacute;digo basado en la implementaci&amp;oacute;n &lt;code&gt;String.prototype.contains()&lt;/code&gt; MooTools se rompa. Como resultado, la implementaci&amp;oacute;n se &lt;a href=&quot;https://hg.mozilla.org/releases/mozilla-aurora/rev/086db97198a8&quot;&gt;deshabilit&amp;oacute;&lt;/a&gt; en Firefox 17 y &lt;code&gt;String.prototype.contains()&lt;/code&gt; estuvo disponible una versi&amp;oacute;n m&amp;aacute;s tarde, en Firefox 18, cuando el &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=789036#c32&quot;&gt;alcance de MooTools&lt;/a&gt; conduc&amp;iacute;a al &lt;a href=&quot;http://mootools.net/blog/2013/02/19/mootools-1-2-6-released&quot;&gt;lanzamiento de la versi&amp;oacute;n 1.2.6 de MooTools&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ad42705853bcc5b13365e9dd36fbcbb6ceb6b2bb" translate="yes" xml:space="preserve">
          <source>It's easy to forget a character here or there.</source>
          <target state="translated">Es fácil olvidar un personaje aquí o allá.</target>
        </trans-unit>
        <trans-unit id="aa341c3ae049b775c45f18a031d679d3313fdb7e" translate="yes" xml:space="preserve">
          <source>It's important to note the nature of block scoping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e9905f65f341e990222d4ff317bc808ce28e95" translate="yes" xml:space="preserve">
          <source>It's important to point out that the hoisting will affect the variable declaration, but not its value's initialization. The value will be indeed assigned when the assignment statement is reached:</source>
          <target state="translated">Es importante señalar que la elevación afectará a la declaración de la variable,pero no a la inicialización de su valor.El valor será efectivamente asignado cuando se alcance la declaración de asignación:</target>
        </trans-unit>
        <trans-unit id="4bec33562b92cfeb84dad9aaca2fd74a7fdf2830" translate="yes" xml:space="preserve">
          <source>It's possible to use &lt;code&gt;String&lt;/code&gt; as a more reliable &lt;a href=&quot;string/tostring&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; alternative, as it works when used on &lt;a href=&quot;null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, and on &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;symbols&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">Es posible usar &lt;code&gt;String&lt;/code&gt; como una alternativa m&amp;aacute;s confiable a &lt;a href=&quot;string/tostring&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; , ya que funciona cuando se usa en &lt;a href=&quot;null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; y en &lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;symbols&lt;/code&gt; &lt;/a&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="8b848ab2fb08e43e529543c6e2fab3e9726bc663" translate="yes" xml:space="preserve">
          <source>It's tough coming up with good variable names. We all have been there.</source>
          <target state="translated">Es difícil encontrar buenos nombres de variables.Todos hemos pasado por eso.</target>
        </trans-unit>
        <trans-unit id="9386f043281c3ea26d3f1bdde2724658066699bc" translate="yes" xml:space="preserve">
          <source>It's typical when speaking of an object's properties to make a distinction between properties and methods. However, the property/method distinction is little more than a convention. A method is simply a property that can be called (for example, if it has a reference to a &lt;a href=&quot;../global_objects/function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; instance as its value).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5feb4718af1649655101d14d39d1577ed4fe6db2" translate="yes" xml:space="preserve">
          <source>Items on the prototype chain are not listed:</source>
          <target state="translated">Los artículos de la cadena del prototipo no están en la lista:</target>
        </trans-unit>
        <trans-unit id="a3b526c83f0fbd860687a229f7de46226cbf3f2a" translate="yes" xml:space="preserve">
          <source>Iterable examples</source>
          <target state="translated">Ejemplos iterativos</target>
        </trans-unit>
        <trans-unit id="303add622a0aab032fae6819c4ebe6b995c08abd" translate="yes" xml:space="preserve">
          <source>Iterable in constructor</source>
          <target state="translated">Iterable en el constructor</target>
        </trans-unit>
        <trans-unit id="12279667aeedad166b3a644b34522ec0663e7e6b" translate="yes" xml:space="preserve">
          <source>Iterable is an Array or other iterable object whose elements are key-value pairs (2-element Arrays). Each key-value pair will be added to the new WeakMap. null is treated as undefined.</source>
          <target state="translated">Iterable es un Array u otro objeto iterable cuyos elementos son pares clave-valor (Array de 2 elementos).Cada par llave-valor se añadirá al nuevo WeakMap.El nulo se trata como indefinido.</target>
        </trans-unit>
        <trans-unit id="2b023afbe3bb8465459d650343ef64c1ac087ed9" translate="yes" xml:space="preserve">
          <source>Iterates a specified variable over all values of object's properties. For each distinct property, a specified statement is executed.</source>
          <target state="translated">Iterar una variable especificada sobre todos los valores de las propiedades del objeto.Para cada propiedad distinta,se ejecuta una declaración especificada.</target>
        </trans-unit>
        <trans-unit id="21fbe6e5ed65189e6f03abfbf39cf77716f2b19a" translate="yes" xml:space="preserve">
          <source>Iterates over async iterable objects, array-like objects, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Iterators_and_Generators&quot;&gt;iterators and generators&lt;/a&gt;, invoking a custom iteration hook with statements to be executed for the value of each distinct property.</source>
          <target state="translated">Itera sobre objetos iterables asincr&amp;oacute;nicos, objetos tipo matriz, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Iterators_and_Generators&quot;&gt;iteradores y generadores&lt;/a&gt; , invocando un gancho de iteraci&amp;oacute;n personalizado con declaraciones que se ejecutar&amp;aacute;n para el valor de cada propiedad distinta.</target>
        </trans-unit>
        <trans-unit id="7fee0e8392755185b42e899080e03939cef85638" translate="yes" xml:space="preserve">
          <source>Iterates over iterable objects (including &lt;a href=&quot;global_objects/array&quot;&gt;arrays&lt;/a&gt;, array-like objects, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Iterators_and_Generators&quot;&gt;iterators and generators&lt;/a&gt;), invoking a custom iteration hook with statements to be executed for the value of each distinct property.</source>
          <target state="translated">Itera sobre objetos iterables (incluidas &lt;a href=&quot;global_objects/array&quot;&gt;matrices&lt;/a&gt; , objetos similares a matrices , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Iterators_and_Generators&quot;&gt;iteradores y generadores&lt;/a&gt; ), invocando un gancho de iteraci&amp;oacute;n personalizado con declaraciones que se ejecutar&amp;aacute;n para el valor de cada propiedad distinta.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
