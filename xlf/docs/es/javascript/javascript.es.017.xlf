<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="javascript">
    <body>
      <group id="javascript">
        <trans-unit id="ce861b053d11ae717c849c1b5aeb5d963bef50ec" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;getUTCDate()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;getUTCDate()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="524d94a2241be43f466b1704d4629ecdba9a280e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;getUTCDay()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;getUTCDay()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31c5774ef5b7e5bb31e57cc1e7242a653019ba3e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;getUTCFullYear()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;getUTCFullYear()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="284b794cd10bb9cc0059daa48bc8a6ad0cc91ea5" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;getUTCHours()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;getUTCHours()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a66620472398f85cd23eec76346748593e6062f6" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;getUTCMilliseconds()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;getUTCMilliseconds()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41e37c29afff9e2bba7e5d15fd7f67d183a75bec" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;getUTCMinutes()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;getUTCMinutes()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96e9e3f635673ee1095fc3973244bbf3bb462298" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;getUTCMonth()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;getUTCMonth()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b7771c6105c7ebfa5e7c0e84ff104dd1fee0436" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;getUTCSeconds()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;getUTCSeconds()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5eb0ebc826ff5087b94da9913c4d13b979facd2c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;global&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;global&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a2bd1a5741af5944c1a0dada08b5c3f27f6ea93" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;global&lt;/code&gt; and &lt;code&gt;ignore&lt;/code&gt; with &lt;code&gt;replace()&lt;/code&gt;</source>
          <target state="translated">Usar &lt;code&gt;global&lt;/code&gt; e &lt;code&gt;ignore&lt;/code&gt; con &lt;code&gt;replace()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9335bb0c8c7a9fbd334563abd721c366dd39c864" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;hasOwnProperty&lt;/code&gt; as a property name</source>
          <target state="translated">Usando &lt;code&gt;hasOwnProperty&lt;/code&gt; como nombre de propiedad</target>
        </trans-unit>
        <trans-unit id="3eb66a176b56b916c633a6e1c14b6dfbe806f97d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;hasOwnProperty&lt;/code&gt; to test for a property's existence</source>
          <target state="translated">Usar &lt;code&gt;hasOwnProperty&lt;/code&gt; para probar la existencia de una propiedad</target>
        </trans-unit>
        <trans-unit id="cd86ab8db79574591b27b8e93f672c5ddc50dd49" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;if...else&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;if...else&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f916f19d2d01c2801df44690242aad17fd222236" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;ignoreCase&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;ignoreCase&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30df41115afaa4f9b2d06639f0f5256fa38a1cc6" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;in&lt;/code&gt; with deleted or undefined properties</source>
          <target state="translated">Utilizando &lt;code&gt;in&lt;/code&gt; con propiedades borrados o no definidos</target>
        </trans-unit>
        <trans-unit id="2f814dcbdca78274933b0fa26027a8ea2839f670" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;includes()&lt;/code&gt;</source>
          <target state="translated">El uso de &lt;code&gt;includes()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0796e7f2a1bd2be10a001c572495085ffc18f0a" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;indexOf()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;indexOf()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4008dac0f5b598086ada72479a5ebe874221e021" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;indexOf()&lt;/code&gt; and &lt;code&gt;lastIndexOf()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;indexOf()&lt;/code&gt; y &lt;code&gt;lastIndexOf()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c5127b7bf6660a26dbe5ed59b8a90ceece94d18" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;indexOf()&lt;/code&gt; to count occurrences of a letter in a string</source>
          <target state="translated">Usando &lt;code&gt;indexOf()&lt;/code&gt; para contar las apariciones de una letra en una cadena</target>
        </trans-unit>
        <trans-unit id="72fb91fb185fb0e7e6b31e86a649d824fea0957e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;italics()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;italics()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73ebea95bd3846e66e11fe85ea8b9598c0d1d7b8" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;keys()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;keys()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3198dc775efd62bba2c46bf22fea734b6155a4b1" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;lastIndex&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;lastIndex&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0392eaabb822ccaa8f0b75db7e385e217ecb68e5" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;lastIndexOf&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;lastIndexOf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13f4e3064e4d87f8de9fde36966b7ce2bc36c0d6" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;link()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;link()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1870f6606aec044f0504be169615045f636102fb" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;load&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6dd847f974de41890037f3c9b44e636b32b805" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;localeCompare()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;localeCompare()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09ca3d1fdddcf1c8c4609c1738a4110d282a086c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;locales&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;locales&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b8d19e69df2cfb34dc429253f37d7fddffff291" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt;</source>
          <target state="translated">Usar &lt;code&gt;locales&lt;/code&gt; y &lt;code&gt;options&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d3212cd6cd2ebbbe01153a383c4e17109009799" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;map&lt;/code&gt; generically</source>
          <target state="translated">Usar &lt;code&gt;map&lt;/code&gt; a de forma gen&amp;eacute;rica</target>
        </trans-unit>
        <trans-unit id="e7315d0d5b3e4a02f5e549cafabc8b170d32135f" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;map&lt;/code&gt; generically &lt;code&gt;querySelectorAll&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;map&lt;/code&gt; a gen&amp;eacute;ricamente &lt;code&gt;querySelectorAll&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec279cff19f48229b6eb7573d552d3b8dd458a09" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;match()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;match()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7550a15bf265ec90df2d3d7306c3f9efe7f0010" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;match()&lt;/code&gt; with no parameter</source>
          <target state="translated">Usando &lt;code&gt;match()&lt;/code&gt; sin par&amp;aacute;metro</target>
        </trans-unit>
        <trans-unit id="16d9db879a137c741405104a893fe97173f4d8a4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;matchAll&lt;/code&gt;, you can access capture groups easily:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5856f393538c67d40c79c2c5dfdd9ca70ae94e2f" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;multiline&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;multiline&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="246b016ef156f266458a958b00aac7aca228553b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;new&lt;/code&gt; operator</source>
          <target state="translated">Usando &lt;code&gt;new&lt;/code&gt; operador</target>
        </trans-unit>
        <trans-unit id="af80b903fc7b3bace484b851c9ef66c8664d46c3" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;next()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;next()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4381befd814214d0f21bad72f7a9dcc9f2e4d66e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;normalize()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;normalize()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f774280b40aa1a5ffd264b4e0fd384132a130c0a" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;notify&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a92fec447e7b6f840d9946c406278bb9a9f12b2" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;options&lt;/code&gt;</source>
          <target state="translated">Usar &lt;code&gt;options&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b3a131aae63f7c1f8510de17102d7e39bfeab51" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;propertiesObject&lt;/code&gt; argument with &lt;code&gt;Object.create()&lt;/code&gt;</source>
          <target state="translated">Usando el argumento &lt;code&gt;propertiesObject&lt;/code&gt; con &lt;code&gt;Object.create()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f858350a79c29457c7674871e8fd4b12922df79" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;return()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;return()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b660acdcb356f0a6813dcc9d5c93ef508fff1e1" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;search()&lt;/code&gt;</source>
          <target state="translated">Usando la &lt;code&gt;search()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6cb215be1ac6db7ea015e974a60ade5dd0443c51" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;select&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;select&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f8d41720bffacb21aef9fe16b150ead9c536389" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setDate()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;setDate()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d50e594f02888eef760dd72f66649b3a6e274994" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setFullYear()&lt;/code&gt;</source>
          <target state="translated">Utilizando &lt;code&gt;setFullYear()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71a1cf51abe893f702e25c73b9abe4801407d2b7" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setHours()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;setHours()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d1363cae1d81cda5f0adcc983359b97f54d31fd" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setMilliseconds()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;setMilliseconds()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19d3ca372144ddc83d3a42bebca924c8a4787f58" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setMinutes()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;setMinutes()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67488e7b58f2d2c3798fe0fc773bb711bfc0bfc2" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setMonth()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;setMonth()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d6df32b9d720dcfc1cf84e8c7c734be3c90164b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setSeconds()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;setSeconds()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3595097d2218c80be2e34adc66141afb6f7dbe9d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setTime()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;setTime()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93acca4e1c613c9a779bacf3db24cb8022d84eb8" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setUTCDate()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;setUTCDate()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d92f3007828aefd5a36a0aaf083e4f698842a3e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setUTCFullYear()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;setUTCFullYear()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f3599db912b4a0a35a599230df0f1e876366ee8" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setUTCHours()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;setUTCHours()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a1bec3abcb5b4d3723b4b4e15736389055fcac8" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setUTCMilliseconds()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;setUTCMilliseconds()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b6733e4d2b3ee9e13b5af5b402fb4792dd9d7c81" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setUTCMinutes()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;setUTCMinutes()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c446222eafac01b6b7cbacc716f330628bce1d4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setUTCMonth()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;setUTCMonth()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff8aad87d4c38c51abd09a19eeebe73e90a264fe" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setUTCSeconds()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;setUTCSeconds()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61d8de8a3eef028b5de75b9d013b2dacad63837c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;size&lt;/code&gt;</source>
          <target state="translated">Usando el &lt;code&gt;size&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c50e5877a94d2b339c616e8c1551c6117cd743a8" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;slice()&lt;/code&gt; to create a new string</source>
          <target state="translated">Usando &lt;code&gt;slice()&lt;/code&gt; para crear una nueva cadena</target>
        </trans-unit>
        <trans-unit id="8b4cffaf896f5f934d26f2c9816dbdcb00d87937" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;slice()&lt;/code&gt; with negative indexes</source>
          <target state="translated">Usando &lt;code&gt;slice()&lt;/code&gt; con &amp;iacute;ndices negativos</target>
        </trans-unit>
        <trans-unit id="0505da9ac6c39434adf9d76de6e8e12a87118194" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;slice&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;slice&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d724e1ea63edf61ad7264f76ee8d58ddbaf54988" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;small()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;small()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8983cb0f1b4c2cb71275fde6b685783122d04688" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;source&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;source&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40602c91c772af3efda56b3a24117a382d55d66e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;split()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;split()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ed15292fad5c7bd5ab09a2ec2fcac3ddaf14b74d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;startsWith()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;startsWith()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc77b4ff3e9316547f1d552c4c53a5f66270ff32" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;strike()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;strike()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="33b07f99faefbdfa4a2c55ffb6386d0868ded0a5" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;sub()&lt;/code&gt; and &lt;code&gt;sup()&lt;/code&gt; methods</source>
          <target state="translated">Usar m&amp;eacute;todos &lt;code&gt;sub()&lt;/code&gt; y &lt;code&gt;sup()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e318e7a917252a12a91c3e8a01bf9d2dabebeb9a" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;substr()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;substr()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3352f9595f5585b850e1d219c5e6b421406ad13" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;substring()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;substring()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30250ea7a7219ad073f33871266f5c05ae90cae1" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;substring()&lt;/code&gt; with &lt;code&gt;length&lt;/code&gt; property</source>
          <target state="translated">Usando &lt;code&gt;substring()&lt;/code&gt; con la propiedad &lt;code&gt;length&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbf904135b14968fcdf3f739756ac4f83ecc3dd4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;super.prop&lt;/code&gt; in object literals</source>
          <target state="translated">Usando &lt;code&gt;super.prop&lt;/code&gt; en objetos literales</target>
        </trans-unit>
        <trans-unit id="e88598c78be6509407efcc63a24e7abf6ba088eb" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;super&lt;/code&gt; in classes</source>
          <target state="translated">Usando &lt;code&gt;super&lt;/code&gt; en clases</target>
        </trans-unit>
        <trans-unit id="5dff570b29abe23b985888a40d346bf5cadf54f7" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;supportedLocalesOf&lt;/code&gt;</source>
          <target state="translated">Uso de &lt;code&gt;supportedLocalesOf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c7758706562fda630d6755aab1f3cc186415ea5" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;switch&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;switch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30d897f5beae69bf418b80d47a134edb97053ad4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;test()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;test()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4cab76dc4cea0bd3fca28dcefbafc0a60c2833fc" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;test()&lt;/code&gt; on a regex with the global flag</source>
          <target state="translated">Usando &lt;code&gt;test()&lt;/code&gt; en una expresi&amp;oacute;n regular con la bandera global</target>
        </trans-unit>
        <trans-unit id="db258c969443ad6b292b88ebd86e77e8081b9b5d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;thisArg&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;thisArg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ebb8b7b58bfd56e42821c52ad2a68ec5ccaa9527" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;throw()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;throw()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="937ab0b24d027824f33355c724ee231409ceb3a5" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toExponential&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;toExponential&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58a0aa431da017f91a1517bf6bd28431a76defc0" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toFixed&lt;/code&gt;</source>
          <target state="translated">Utilizando &lt;code&gt;toFixed&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="baefb7bf3c55ed75d807ac8e91e6536057863625" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toISOString()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;toISOString()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6a6f0f54d04169f5799cf7422f843564f583974" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toJSON()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;toJSON()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1df9fa01f03464d5cbea74246a85c7bd09b564d7" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toLocaleDateString()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;toLocaleDateString()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9fc00d6354172f4d3c310a9b634797c61caba608" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toLocaleLowerCase()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;toLocaleLowerCase()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd2e22962dfa1c56823584b08661204d65a70169" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toLocaleString()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;toLocaleString()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea9f07fe937cfa8aa249b90bba93bad41a54e737" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toLocaleString&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;toLocaleString&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9ff68cad4fb433cd8976d39a5edf16bddbb630d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toLocaleTimeString()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;toLocaleTimeString()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4935af0a22f1025fd3d249664e57a151694f8136" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toLocaleUpperCase()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;toLocaleUpperCase()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="756b245ec73f795eb77aae538f2045c283e286e4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toLowerCase()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;toLowerCase()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8986072a6c91150877a79606966ef1d3b97a84d7" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toPrecision&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;toPrecision&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eaef8ffe3f864b85a1d3c7961133f3d4f7356224" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toString()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;toString()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="575a479275302af0f2efd99295ddb1cec22ffdda" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toString()&lt;/code&gt; in this way is unreliable; objects can change the behavior of &lt;code&gt;Object.prototype.toString()&lt;/code&gt; by defining a &lt;a href=&quot;../symbol/tostringtag&quot;&gt;&lt;code&gt;Symbol.toStringTag&lt;/code&gt;&lt;/a&gt; property, leading to unexpected results. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aaa2b702905e9e5af22e175d89f79f94623ddfc" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toString()&lt;/code&gt; to detect object class</source>
          <target state="translated">Usando &lt;code&gt;toString()&lt;/code&gt; para detectar la clase de objeto</target>
        </trans-unit>
        <trans-unit id="149b6680423597fcfcec999b7db64ca42bb5cae8" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toString&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;toString&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30ac701da98c589119baf56516f9828f1bdc939d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;toUTCString()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;toUTCString()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ed7ec81510e900115c58cf955f906a03bc7aacf3" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;trim()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;trim()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3bde3bd197e7877ea32e2b7dcaa9a06de8dc920" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;trimEnd()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;trimEnd()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6857d244d58dc6389563e9905d1f9787c6cb1752" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;trimStart()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;trimStart()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="032651b45070405671afb48d9f7af9d2df8bf4e0" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;typeof&lt;/code&gt; with Arguments</source>
          <target state="translated">Usando &lt;code&gt;typeof&lt;/code&gt; con argumentos</target>
        </trans-unit>
        <trans-unit id="5a93be5e5a37537b8b5cacb3cd94852656694ba4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;valueOf()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;valueOf()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="222796ead6973d33b1caa999b658dd4e1d64d900" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;valueOf&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;valueOf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af146822dcb5f73cd83d6897c6cb5a23edcbf7cf" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;values()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;values()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3cd2a7d1cf9e9cfaa2ad1795fdd66e3d3842698" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;watch&lt;/code&gt; and &lt;code&gt;unwatch&lt;/code&gt;</source>
          <target state="translated">Usar &lt;code&gt;watch&lt;/code&gt; y &lt;code&gt;unwatch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2cbb0585497a87121bfdf2e89696e7e1f752bacc" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;watch&lt;/code&gt; to validate an object's properties</source>
          <target state="translated">Usar &lt;code&gt;watch&lt;/code&gt; para validar las propiedades de un objeto</target>
        </trans-unit>
        <trans-unit id="6fd9e42f040bbedf10970469ffb6d94c33817e26" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;with&lt;/code&gt;</source>
          <target state="translated">Utilizando &lt;code&gt;with&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f8f48c81ee74e79647332750e20d9654fe2f9ae" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;with&lt;/code&gt; is not recommended, and is forbidden in ECMAScript 5 &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;. The recommended alternative is to assign the object whose properties you want to access to a temporary variable.</source>
          <target state="translated">No se recomienda usar &lt;code&gt;with&lt;/code&gt; y est&amp;aacute; prohibido en el &lt;a href=&quot;../strict_mode&quot;&gt;modo estricto de&lt;/a&gt; ECMAScript 5 . La alternativa recomendada es asignar el objeto cuyas propiedades desea acceder a una variable temporal.</target>
        </trans-unit>
        <trans-unit id="e722261ae7358370f8e8364109159efbcf8b8591" translate="yes" xml:space="preserve">
          <source>Using @@matchAll in subclasses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72a9261c95373fca733ad408aec958075410f36" translate="yes" xml:space="preserve">
          <source>Using @@replace in subclasses</source>
          <target state="translated">Usando @@replace en subclases</target>
        </trans-unit>
        <trans-unit id="10a2b1c3d026a368088ef8067b12ae3091a8bba9" translate="yes" xml:space="preserve">
          <source>Using @@search in subclasses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3194a9e3540c5162f324f2f1ce747b59459ec262" translate="yes" xml:space="preserve">
          <source>Using @@split in subclasses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d3629462de18bcf70ed546ef740e99dd8f043c" translate="yes" xml:space="preserve">
          <source>Using @@toPrimitive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78ccad5d6f54717c7a28ad4613fa6b40f556a2f" translate="yes" xml:space="preserve">
          <source>Using AND</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5b16aff7cfe1c7471de2f8a73c803932fa9093" translate="yes" xml:space="preserve">
          <source>Using Array.isArray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befae23cfd2538f42c62e39144fc5c0dd4cffb67" translate="yes" xml:space="preserve">
          <source>Using Array.of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001cc0918f3af6645cb816420883ad4fbb7a93bc" translate="yes" xml:space="preserve">
          <source>Using Atomics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d75f0d74cc1b9c51e5ed55ce479a71ab2e6b0c9" translate="yes" xml:space="preserve">
          <source>Using BYTES_PER_ELEMENT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7007c1fb38b9246afe05ea8d6366cee03db692b" translate="yes" xml:space="preserve">
          <source>Using DataView</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca69aa4622234635c97a4248949af93bb6cfedb2" translate="yes" xml:space="preserve">
          <source>Using Date.UTC()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80ef4d001482c3b46e5431fb2537084717d498f" translate="yes" xml:space="preserve">
          <source>Using DateTimeFormat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8169038916d9eb3a78d51cbdcacce2f2ac7bd58c" translate="yes" xml:space="preserve">
          <source>Using ES2015 arrow function</source>
          <target state="translated">Usando la función de flecha ES2015</target>
        </trans-unit>
        <trans-unit id="59f64a2ee98bc6d317ceec577a394e6f7f790e6a" translate="yes" xml:space="preserve">
          <source>Using Infinity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9404b5f9859e7f887c4be9e3f6ee032b7b66abe1" translate="yes" xml:space="preserve">
          <source>Using JSON.parse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c0a1777a3e4d0c84b4b02dcdcccfc4e9b99a2c" translate="yes" xml:space="preserve">
          <source>Using JSON.stringify</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd068962a1ee49d75ea89253226e64c62f4bec6c" translate="yes" xml:space="preserve">
          <source>Using MAX_VALUE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdccc62e4f1cb94153e56d76a12e341f9763a080" translate="yes" xml:space="preserve">
          <source>Using MIN_SAFE_INTEGER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5783d518b246254874051913c25aea90b00be011" translate="yes" xml:space="preserve">
          <source>Using MIN_VALUE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719949b8d0b4be56b9db7bfe44057439ff738247" translate="yes" xml:space="preserve">
          <source>Using Math.E</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ba2baf8468133f1574fbc1a19345764393d0ed" translate="yes" xml:space="preserve">
          <source>Using Math.LN10</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba768fbbebb4486c1787c5302c2b3fd958a949d" translate="yes" xml:space="preserve">
          <source>Using Math.LN2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51d5f9ba3dd1f080da2aa476f16bdf014999d1f" translate="yes" xml:space="preserve">
          <source>Using Math.LOG10E</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a0edb4c7b0a228fe5e6a7d0ea36ffb4ebbdef5" translate="yes" xml:space="preserve">
          <source>Using Math.LOG2E</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39869e3881f35ea0c5167179d9d131b40208b46e" translate="yes" xml:space="preserve">
          <source>Using Math.PI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e11fdde5f4df9489ac2f18d389662bdc9a58a28" translate="yes" xml:space="preserve">
          <source>Using Math.SQRT1_2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2357861057178a79700cc65a9587cfefb531006b" translate="yes" xml:space="preserve">
          <source>Using Math.SQRT2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b415fd45494e9408a52bbc7d229f8d001a92321" translate="yes" xml:space="preserve">
          <source>Using Math.acos()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9db29960b3efc4a440a0f6eaaaf5abf2928ec2" translate="yes" xml:space="preserve">
          <source>Using Math.acosh()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d780889391127eabefb5d80f7217d41de506c584" translate="yes" xml:space="preserve">
          <source>Using Math.asin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89356178c41b1f8c98ec3f308f5531685e06aab" translate="yes" xml:space="preserve">
          <source>Using Math.asinh()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793a97229683038d94a50a094ac5eab1da2da827" translate="yes" xml:space="preserve">
          <source>Using Math.atan()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166cc7fe4c80e8b568b85de0a6c0d5d9010a4a9d" translate="yes" xml:space="preserve">
          <source>Using Math.atan2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cce9647f886b613fda2fa5159312c607c8078ed" translate="yes" xml:space="preserve">
          <source>Using Math.atanh()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c55b3811680382d07971d4943a4abd4bbbb2aa" translate="yes" xml:space="preserve">
          <source>Using Math.cbrt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcb301070da43f494526a06c1b89b54d08738f2" translate="yes" xml:space="preserve">
          <source>Using Math.ceil()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570adc3a26330810b2c7caaeff761568abd98b65" translate="yes" xml:space="preserve">
          <source>Using Math.clz32()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962cdfcace200fe800ad6c4aaddb6c85da3944bf" translate="yes" xml:space="preserve">
          <source>Using Math.cos()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a630dd5a2a3112c750260fa0eb51ab6f679a5530" translate="yes" xml:space="preserve">
          <source>Using Math.cosh()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a17fae4e0152e20a9bc36538b4f3779668f282" translate="yes" xml:space="preserve">
          <source>Using Math.exp()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1ac07417578e71d5197a1d6612efc602ec3d89" translate="yes" xml:space="preserve">
          <source>Using Math.expm1()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea02dcd90ea4af5d9febc626d053d208560f0fe3" translate="yes" xml:space="preserve">
          <source>Using Math.floor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a343865f8a7b39f01cc50131bc1573e0ed6296cb" translate="yes" xml:space="preserve">
          <source>Using Math.fround()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542a5069bf82d82d45325bbeb81adb0e789bcc08" translate="yes" xml:space="preserve">
          <source>Using Math.hypot()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04cb0a7e79a4de08b4e6e28280f48d8b9a2653b7" translate="yes" xml:space="preserve">
          <source>Using Math.imul()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a29dac1aada49fd01b0fa2abf1b1d1355144c6" translate="yes" xml:space="preserve">
          <source>Using Math.log()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1bdbd9c9b722157f1f1feaf2edeeda38cb6318" translate="yes" xml:space="preserve">
          <source>Using Math.log() with a different base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c63277e0f6ef4228ff53fa7dd72b4e5e5e9d3b6" translate="yes" xml:space="preserve">
          <source>Using Math.log10()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14104ad19292453f2cf38390d20d781bd1be18ef" translate="yes" xml:space="preserve">
          <source>Using Math.log2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745e60947ebcb9590b4381398e7d701d403027f6" translate="yes" xml:space="preserve">
          <source>Using Math.max()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9592a7a817ec739ee971375582eaddefe584eec" translate="yes" xml:space="preserve">
          <source>Using Math.min()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5494ea9ffd5357f13a59b2b32d33e16e46d68821" translate="yes" xml:space="preserve">
          <source>Using Math.pow()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74cfc82ee5004cbbab6558aef01db56da5a7d1e3" translate="yes" xml:space="preserve">
          <source>Using Math.sign()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85f033938afc1cfc257ea3331a4786502d9e18c" translate="yes" xml:space="preserve">
          <source>Using Math.sin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d80c5cbc8f111a2e61f3ec41d3e69a37e87994d" translate="yes" xml:space="preserve">
          <source>Using Math.sinh()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d86b933ca3c270099cebebc88be5c318a9da34e" translate="yes" xml:space="preserve">
          <source>Using Math.sqrt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9016f25376fd08bfb07fbf3c9a8664551048b73" translate="yes" xml:space="preserve">
          <source>Using Math.tan()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe89fa076c202b85b0f98d097b553babee5ecac" translate="yes" xml:space="preserve">
          <source>Using Math.tanh()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1357fc9b975a8fc3bf0077e2f3a290db2ba2b8ee" translate="yes" xml:space="preserve">
          <source>Using Math.trunc()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="defb34b425d3fcb0d27a0a736cdde19ff61aee04" translate="yes" xml:space="preserve">
          <source>Using NEGATIVE_INFINITY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927c7424ed08d5dd45bb844cc85d2f0aecc72ae7" translate="yes" xml:space="preserve">
          <source>Using NOT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd64c5ed88d243c2d4b01227e396eb72e624969" translate="yes" xml:space="preserve">
          <source>Using NaN as Map keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916d8ebb8432e45f7ec6c77b25ef0022c32ff15c" translate="yes" xml:space="preserve">
          <source>Using Number to convert a Date object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e33689a92952502800b382e10b0d9624b49233" translate="yes" xml:space="preserve">
          <source>Using OR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684875e35303442dcb1c08f065e3c543a6cea237" translate="yes" xml:space="preserve">
          <source>Using Object given undefined and null types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6755f1cb46d0e5c919a03c38f067c616bd293892" translate="yes" xml:space="preserve">
          <source>Using Object.defineProperties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504a7d1ffc1648c0d74e0a00001173d11270708f" translate="yes" xml:space="preserve">
          <source>Using Object.getOwnPropertyDescriptor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ace909076fca8bffb6e4b82c262fd9d2b6429c" translate="yes" xml:space="preserve">
          <source>Using Object.getOwnPropertyNames()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08316f00abc86583f3b98b007d9fbe9fc94ecc21" translate="yes" xml:space="preserve">
          <source>Using Object.is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d590b93c1345d408ef53b2e709690d48d9e9cf43" translate="yes" xml:space="preserve">
          <source>Using Object.isExtensible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8cb10b306c936041193600b12445bb11da11af" translate="yes" xml:space="preserve">
          <source>Using Object.isFrozen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc499e4bb885d36767677b80da9b0da74d91a19" translate="yes" xml:space="preserve">
          <source>Using Object.isSealed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c07426f185dea0efaf477ae037055818bc28ac4" translate="yes" xml:space="preserve">
          <source>Using Object.keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b2c5a17f4fb15655a57fcb6f0a31115c76b9fb" translate="yes" xml:space="preserve">
          <source>Using Object.preventExtensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd812b8c024eca09353bb269ab307aadb30fe8b3" translate="yes" xml:space="preserve">
          <source>Using Object.seal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6910a498779326f8f6877abe3a941a43075d17a6" translate="yes" xml:space="preserve">
          <source>Using Object.setPrototypeOf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86f74ca78c1d08fa90fba5488985ee1ab159e5e" translate="yes" xml:space="preserve">
          <source>Using Object.values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8bc8eb7a6ca0e72e42bc43423e21cabf29a7233" translate="yes" xml:space="preserve">
          <source>Using POSITIVE_INFINITY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c81967b1a36e5a32b9b2361f9f5c059b62991d" translate="yes" xml:space="preserve">
          <source>Using Promise.allSettled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8e6b30e4fc212e05d27197972cb90c90affc48" translate="yes" xml:space="preserve">
          <source>Using Promise.race &amp;ndash; examples with setTimeout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123848d4cf00fed1cc069a3030b176dcf643ffaf" translate="yes" xml:space="preserve">
          <source>Using Promises</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f84a48633ba74c7d0c1f0856054168a7a3401d" translate="yes" xml:space="preserve">
          <source>Using Proxy.revocable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387de82f2dc9994601081354c91bc4bef2997e2c" translate="yes" xml:space="preserve">
          <source>Using RangeError (for non-numeric values)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a354c74e3ce484d59b07a28d3c026e6116a0e1" translate="yes" xml:space="preserve">
          <source>Using RangeError (for numeric values)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a4238c2a1e3a78914a7157d529d182893a0cf8" translate="yes" xml:space="preserve">
          <source>Using Reflect.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063374179632852759bcda4103f92f941cd3a396" translate="yes" xml:space="preserve">
          <source>Using Reflect.defineProperty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116113de574ea3588fde4248ef229453b9b427f0" translate="yes" xml:space="preserve">
          <source>Using Reflect.getOwnPropertyDescriptor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d17fdf47000e6dad5b7b54f77e5289c21346077" translate="yes" xml:space="preserve">
          <source>Using Reflect.getPrototypeOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3b0d5f284902b52cfc8815d484fffc2ee104a1" translate="yes" xml:space="preserve">
          <source>Using Reflect.has()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070feee2e583395655a9ca0cc2cc3eb869ee78a9" translate="yes" xml:space="preserve">
          <source>Using Reflect.isExtensible()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d39df1f043cef8172e5c74545bf856e99a20b0" translate="yes" xml:space="preserve">
          <source>Using Reflect.ownKeys()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c751eba43380256f47a2bd7db9c37ccfc682352e" translate="yes" xml:space="preserve">
          <source>Using Reflect.preventExtensions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d179afad9401bebfb5240abbb47f8e9ccc05973f" translate="yes" xml:space="preserve">
          <source>Using Reflect.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c408a896ce117b138e6de233d336de96de0dc6" translate="yes" xml:space="preserve">
          <source>Using Reflect.setPrototypeOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcb151dcbc39b91cf423e71c01f1b70eeb37790" translate="yes" xml:space="preserve">
          <source>Using String.raw()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8b9d7a700ba32ccffd6f0414f55c8557ada700" translate="yes" xml:space="preserve">
          <source>Using Symbol.for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b325eaf3776d74438ce41d0fc4310580a4c2da" translate="yes" xml:space="preserve">
          <source>Using Symbol.matchAll</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa36ee2bd89fb08433d476d30b92d4025ef78ec" translate="yes" xml:space="preserve">
          <source>Using Symbol.replace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd43bd98fe9df46d952429cf18dedb1be4002362" translate="yes" xml:space="preserve">
          <source>Using Table.set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75fb59fcdcafa395840e14cc63581835c25d29d" translate="yes" xml:space="preserve">
          <source>Using WeakMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ed8cdf92e4bf2314a18329c243c97e0691c218" translate="yes" xml:space="preserve">
          <source>Using [@@iterator]()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e92ab6f86de1cab5f209c9ee1d6caeae72904ac" translate="yes" xml:space="preserve">
          <source>Using [@@iterator]() with for..of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b93fca596ef0492b3e4116b86141e40d3995a3" translate="yes" xml:space="preserve">
          <source>Using __proto__</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23169e87ea17cda98c3362ddd8595d6314945f27" translate="yes" xml:space="preserve">
          <source>Using a &lt;a href=&quot;../../statements/for...of&quot;&gt;for&amp;hellip;of&lt;/a&gt; loop</source>
          <target state="translated">Usando un bucle &lt;a href=&quot;../../statements/for...of&quot;&gt;for ... of&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a525b44c0b4aa4960b9058cd6478f8b34ea6b323" translate="yes" xml:space="preserve">
          <source>Using a &lt;a href=&quot;../function/bind&quot;&gt;&lt;code&gt;Function.prototype.bind()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Reflect.apply&lt;/code&gt; (&lt;a href=&quot;../reflect/apply&quot;&gt;&lt;code&gt;Reflect.apply()&lt;/code&gt;&lt;/a&gt;) method to create a (non-cancellable) &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Window/setImmediate&quot;&gt;&lt;code&gt;window.setImmediate&lt;/code&gt;&lt;/a&gt;-style function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36eafe27d99c81bd29f7f2b50a831d5d2e730b4" translate="yes" xml:space="preserve">
          <source>Using a &lt;a href=&quot;../function/bind&quot;&gt;&lt;code&gt;Function.prototype.bind()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Reflect.apply&lt;/code&gt; (&lt;a href=&quot;../reflect/apply&quot;&gt;&lt;code&gt;Reflect.apply()&lt;/code&gt;&lt;/a&gt;) method to create a (non-cancellable) setImmediate-style function.</source>
          <target state="translated">Usando un m&amp;eacute;todo &lt;a href=&quot;../function/bind&quot;&gt; &lt;code&gt;Function.prototype.bind()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Reflect.apply&lt;/code&gt; ( &lt;a href=&quot;../reflect/apply&quot;&gt; &lt;code&gt;Reflect.apply()&lt;/code&gt; &lt;/a&gt; ) para crear una funci&amp;oacute;n de estilo setImmediate (no cancelable).</target>
        </trans-unit>
        <trans-unit id="aa5565048e1c853c92fcf6232a55142c3c3c6d23" translate="yes" xml:space="preserve">
          <source>Using a &lt;a href=&quot;../proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; enables you do even deeper changes to how property assignments work.</source>
          <target state="translated">El uso de un &lt;a href=&quot;../proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; permite realizar cambios a&amp;uacute;n m&amp;aacute;s profundos en el funcionamiento de las asignaciones de propiedades.</target>
        </trans-unit>
        <trans-unit id="402e27a550e795049bbb47b299a2fc86f5ec4a9f" translate="yes" xml:space="preserve">
          <source>Using a WeakRef object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ae0f4ca13ce8aa4ef772f7e6d20f6037f7b062" translate="yes" xml:space="preserve">
          <source>Using a computed property name</source>
          <target state="translated">Usando un nombre de propiedad computarizada</target>
        </trans-unit>
        <trans-unit id="730c6133013cdedc5640a6ed149ebc3947ce7f3d" translate="yes" xml:space="preserve">
          <source>Using a function as a callback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e049cd2ca7aadfb96f977493edad5238d6c0c06" translate="yes" xml:space="preserve">
          <source>Using a labeled &lt;code&gt;break&lt;/code&gt; statement</source>
          <target state="translated">Usar una declaraci&amp;oacute;n de &lt;code&gt;break&lt;/code&gt; etiquetada</target>
        </trans-unit>
        <trans-unit id="4e9fba8cc776768eabe25b901630030635078d83" translate="yes" xml:space="preserve">
          <source>Using a labeled &lt;code&gt;break&lt;/code&gt; with &lt;code&gt;for&lt;/code&gt; loops</source>
          <target state="translated">Usando una &lt;code&gt;break&lt;/code&gt; etiquetada con bucles &lt;code&gt;for&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b9f2bd6736bab09327ec27ef35ff1f37761fa2c" translate="yes" xml:space="preserve">
          <source>Using a labeled &lt;code&gt;continue&lt;/code&gt; statement</source>
          <target state="translated">Usar una declaraci&amp;oacute;n de &lt;code&gt;continue&lt;/code&gt; etiquetada</target>
        </trans-unit>
        <trans-unit id="51aa6ccc3ca8126a9ecb477b0b8381239ec3e12c" translate="yes" xml:space="preserve">
          <source>Using a labeled &lt;code&gt;continue&lt;/code&gt; with &lt;code&gt;for&lt;/code&gt; loops</source>
          <target state="translated">Usando un &lt;code&gt;continue&lt;/code&gt; etiquetado con bucles &lt;code&gt;for&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e362889eafc12e1f642a4f766d95e1bf00fda2cc" translate="yes" xml:space="preserve">
          <source>Using a labeled block with &lt;code&gt;break&lt;/code&gt;</source>
          <target state="translated">Usando un bloque etiquetado con &lt;code&gt;break&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="905f71d90ff8219906a150babfe9064b2a24d67f" translate="yes" xml:space="preserve">
          <source>Using a labeled block with break</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844d9c3e5fef4da5247a1035f0cebc61ad46d4da" translate="yes" xml:space="preserve">
          <source>Using a labeled break statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3eb65ab8bb8127e5f449ca6b9d12dbd9b574de" translate="yes" xml:space="preserve">
          <source>Using a labeled break with for loops</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f957cfbe50b124eeffe273f2b3db957019e02b4c" translate="yes" xml:space="preserve">
          <source>Using a labeled continue statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813bb0e558d97c7de27f071f05539b96de14ce2b" translate="yes" xml:space="preserve">
          <source>Using a labeled continue with for loops</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe4452da29034ff1a180fa9833fa40e31fbdf0d" translate="yes" xml:space="preserve">
          <source>Using a regular expression to change data format</source>
          <target state="translated">Usar una expresión regular para cambiar el formato de los datos</target>
        </trans-unit>
        <trans-unit id="82f7b316afcba40bbf80d93a3ff43a4a24aeddbf" translate="yes" xml:space="preserve">
          <source>Using a regular expression with the sticky flag</source>
          <target state="translated">Usando una expresión regular con la bandera pegajosa</target>
        </trans-unit>
        <trans-unit id="53be444b5f30ded3e73f2bbd22be9ed448770df9" translate="yes" xml:space="preserve">
          <source>Using a tab character mimics standard pretty-print appearance:</source>
          <target state="translated">Usando un personaje de la ficha imita la apariencia estándar de la letra bonita:</target>
        </trans-unit>
        <trans-unit id="2490aa2ab8ffd77824ef0356064e1f9b755852c3" translate="yes" xml:space="preserve">
          <source>Using add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7860fa78a19cd7a15d20ad04fe858b2b013cc8" translate="yes" xml:space="preserve">
          <source>Using add()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6ae39f93b7087dc9f0a18f09e000b4d5257a4b" translate="yes" xml:space="preserve">
          <source>Using addition assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2f84e91d6965ed96a210bb5c657a3fa5cf45b7" translate="yes" xml:space="preserve">
          <source>Using an array to tabulate a set of values</source>
          <target state="translated">Usar una matriz para tabular un conjunto de valores</target>
        </trans-unit>
        <trans-unit id="43b4d7721df207f173194b64c30427bd98a83022" translate="yes" xml:space="preserve">
          <source>Using an arrow function as the map function to manipulate the elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4297183f352aad56274d7fc344ce74272ab6c969" translate="yes" xml:space="preserve">
          <source>Using an immediately executed function expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13948d827839045126caacaf1dbdab5237afa243" translate="yes" xml:space="preserve">
          <source>Using an inline function that modifies the matched characters</source>
          <target state="translated">Usando una función en línea que modifica los caracteres coincidentes</target>
        </trans-unit>
        <trans-unit id="323b02788b7e19b875667a61327e499aa409a6f2" translate="yes" xml:space="preserve">
          <source>Using an invalid index number returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea58ab4d26e8ac5872c3a1b28e4ce01a91bca10" translate="yes" xml:space="preserve">
          <source>Using an object in an array-like fashion</source>
          <target state="translated">Usar un objeto en forma de matriz</target>
        </trans-unit>
        <trans-unit id="725865c464870e2965f9729f532857f18bd350ac" translate="yes" xml:space="preserve">
          <source>Using and chaining the &lt;code&gt;catch&lt;/code&gt; method</source>
          <target state="translated">Usar y encadenar el m&amp;eacute;todo de &lt;code&gt;catch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fbb0075c8756208b18365446723434ccd809a82" translate="yes" xml:space="preserve">
          <source>Using and chaining the catch method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992be1042da44e613d079e03ab57f193219b3a37" translate="yes" xml:space="preserve">
          <source>Using and()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ddc146d6b975f5822c69d5a4d26104ba0ba1f3" translate="yes" xml:space="preserve">
          <source>Using apply and built-in functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6120873fb3f549fbdb45995b7eefb83a0c89120a" translate="yes" xml:space="preserve">
          <source>Using apply to append an array to another</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3541c55cb4c032272680d70434d5b1309467817b" translate="yes" xml:space="preserve">
          <source>Using apply to chain constructors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558c1c73a2f00f471c5e651a77452ddece22d760" translate="yes" xml:space="preserve">
          <source>Using apply( ) or call ( ) on array-like objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bf3807aece111e2b84df39a788650f93566a81" translate="yes" xml:space="preserve">
          <source>Using arrow function and destructuring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9516772c5fc3d3c19b6ad7a110e9584847f44613" translate="yes" xml:space="preserve">
          <source>Using arrow functions</source>
          <target state="translated">Usando las funciones de las flechas</target>
        </trans-unit>
        <trans-unit id="9f26905aa2872f13aeacba7881a971956ca683a5" translate="yes" xml:space="preserve">
          <source>Using arrow functions and &lt;code&gt;Array.from()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff930df6fbf35ab334f1cd7d9a93bacaea2ec96" translate="yes" xml:space="preserve">
          <source>Using arrow functions and &lt;code&gt;Array.from&lt;/code&gt;</source>
          <target state="translated">Usando funciones de flecha y &lt;code&gt;Array.from&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0df81085670ed91dd95fd508c62dcc57843c68bb" translate="yes" xml:space="preserve">
          <source>Using bitwise AND</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800a3d27463ec76d8a3e391543868aeb5a9ff019" translate="yes" xml:space="preserve">
          <source>Using bitwise AND assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb77affda8b7a87537ed5a7d1d85e97f077d7bb" translate="yes" xml:space="preserve">
          <source>Using bitwise NOT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55472d03890e3daad9c0785d25d2c4d4ef83927e" translate="yes" xml:space="preserve">
          <source>Using bitwise OR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca0d777afeebd6e2e951ec5e9fdd21b10b4876e" translate="yes" xml:space="preserve">
          <source>Using bitwise OR assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cedf7d7620bc9cb9a98e2521519ce143b58da41" translate="yes" xml:space="preserve">
          <source>Using bitwise XOR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d54c2040c041260adef37e5dc06d24b2f3085a" translate="yes" xml:space="preserve">
          <source>Using bitwise XOR assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2492791e1e24a5c825e473ad941dbf6a44f80cd7" translate="yes" xml:space="preserve">
          <source>Using brackets for multiplication</source>
          <target state="translated">Usando paréntesis para la multiplicación</target>
        </trans-unit>
        <trans-unit id="acf5cf1853cc1e1f52f313ae49b375dc4109f271" translate="yes" xml:space="preserve">
          <source>Using buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f771f6e8cd04d6392ec7b215d3d9028b74a95ee9" translate="yes" xml:space="preserve">
          <source>Using byteLength</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd3020e779ca42619462faf50bbbc40db72f141" translate="yes" xml:space="preserve">
          <source>Using clear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9452a00d4fa73c29a213c714cd21e398c433e422" translate="yes" xml:space="preserve">
          <source>Using compare for array search</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6d0fff53c25408480cde34f9cf143bac72f0a8" translate="yes" xml:space="preserve">
          <source>Using compare for array sort</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942ba26f6630c3e5ca4640e8166a96e73d8a70bb" translate="yes" xml:space="preserve">
          <source>Using compareExchange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d9d1f3ef463ceab4a8424902df4caf51de4fb5" translate="yes" xml:space="preserve">
          <source>Using compile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f25d258b2fdca6217044b9403e784d39ac8c29" translate="yes" xml:space="preserve">
          <source>Using concat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4266638185ad72cac0aac3a59e1f54ca2f6b98c0" translate="yes" xml:space="preserve">
          <source>Using continue with a label</source>
          <target state="translated">Usar continuar con una etiqueta</target>
        </trans-unit>
        <trans-unit id="c7fe042da8ffd8948375c018cd4922588724ee91" translate="yes" xml:space="preserve">
          <source>Using continue with while</source>
          <target state="translated">Usar continuar con mientras</target>
        </trans-unit>
        <trans-unit id="ba1160347cf7c2d505d1b2b36f9d927ce29e0252" translate="yes" xml:space="preserve">
          <source>Using copyWithin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8526d46fe38ae61bf3b632ec4d2e13edf9f80c20" translate="yes" xml:space="preserve">
          <source>Using customSections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b3511138c1bea33ea9c666756af0a95a7ca7c7" translate="yes" xml:space="preserve">
          <source>Using delete()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8da2628a77d81ba2431b939cb9e2ebe06234f0" translate="yes" xml:space="preserve">
          <source>Using deref</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb648e2584bc7e43af386b5a4ccaf45fc66e45b0" translate="yes" xml:space="preserve">
          <source>Using description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6f155c13a7a066eebec2165253fdda36781cf8" translate="yes" xml:space="preserve">
          <source>Using division assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637f40494652d4eb31c0069183b557e67abd5e21" translate="yes" xml:space="preserve">
          <source>Using else if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca53306e841880ebb04e39089be765977a82f8f7" translate="yes" xml:space="preserve">
          <source>Using entries()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8ef827947e4c6dd63289eb7c1e8b326376ad9f" translate="yes" xml:space="preserve">
          <source>Using exchange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca401b547a446c7268ad47d8637435dc38bc7b7" translate="yes" xml:space="preserve">
          <source>Using exec() with RegExp literals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf1e40fa024cfd30156e925881bb307c609192f" translate="yes" xml:space="preserve">
          <source>Using exponentiation assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d8ad9ce112631a7ca5f77fab8fe29388ed88cc" translate="yes" xml:space="preserve">
          <source>Using export from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd645c85457c632bbbfa7a1478a26148849392d2" translate="yes" xml:space="preserve">
          <source>Using exports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4848333ecaa3ee217c4e4f2837e797106515bccb" translate="yes" xml:space="preserve">
          <source>Using extends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83c732f1aaae1f0858e6a4aa1bc2a54839e842e" translate="yes" xml:space="preserve">
          <source>Using extends with built-in objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa62b3ca2a5b5f9a4560375ab8cf85495180dd9d" translate="yes" xml:space="preserve">
          <source>Using fill</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d968c8b47c5de48676e4b875cd04a48e683d6470" translate="yes" xml:space="preserve">
          <source>Using fill to create a matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d86eea6047d756e200dff4396be1793cffaa0e" translate="yes" xml:space="preserve">
          <source>Using finally</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ece706c2a0b48159c63e7930172531bf2218f4a" translate="yes" xml:space="preserve">
          <source>Using flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a90188098365dd83035d63701d280a3b3d2022" translate="yes" xml:space="preserve">
          <source>Using for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842d42d5c9c20d03d17b8429da1d334a4a1fb9fc" translate="yes" xml:space="preserve">
          <source>Using for without a statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa17668aa39e7162254ffdaeb2eed9ef7b9dc08" translate="yes" xml:space="preserve">
          <source>Using for...in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b022bbb08b7076b0640ab660eac9c16520678f" translate="yes" xml:space="preserve">
          <source>Using format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5000b76205cb4bf31693390c82b572e8c94a1437" translate="yes" xml:space="preserve">
          <source>Using format with map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b3b98038f782ea13c1c7e616d2fd0e5c24d944" translate="yes" xml:space="preserve">
          <source>Using formatToParts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358b734486da44fba6047faa9d4b783fb5e83a41" translate="yes" xml:space="preserve">
          <source>Using function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333c4ae2a04dec5dbc25f9c1a163318ef84472dd" translate="yes" xml:space="preserve">
          <source>Using function length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61cdbe18e333325cc72bcda2d2df125b3e30afe3" translate="yes" xml:space="preserve">
          <source>Using function*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57391e73b9893ec9c51882fe30237a6e857e9ec" translate="yes" xml:space="preserve">
          <source>Using get</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbffe53d92c108cb09fd3ef092c9e1e429012b0" translate="yes" xml:space="preserve">
          <source>Using get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21bd11eb06a20addfef5d4950e740ed89384e6e4" translate="yes" xml:space="preserve">
          <source>Using getCanonicalLocales</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d46d3e2970779c6d78bfba3a9ad9c843d5b7e4" translate="yes" xml:space="preserve">
          <source>Using getDate()</source>
          <target state="translated">Usando getDate()</target>
        </trans-unit>
        <trans-unit id="ad7c778ea6894a00060a0ce728779d0046614275" translate="yes" xml:space="preserve">
          <source>Using getDay()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f3dd9284385c5fcb52eb13e37a5c4d3676cc95" translate="yes" xml:space="preserve">
          <source>Using getFullYear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c1e907aba03b6eff9b742b95fe52c5f9f8175a2" translate="yes" xml:space="preserve">
          <source>Using getHours()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fecc14e3b02aa9d04037ae75756a01e4cdb6b98" translate="yes" xml:space="preserve">
          <source>Using getMilliseconds()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5c2eb8f1a5aa646d2b39bef4e79bd1d8c13c66" translate="yes" xml:space="preserve">
          <source>Using getMinutes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7aea2c806c55ba1fe057565987989f84e9dcb96" translate="yes" xml:space="preserve">
          <source>Using getMonth()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc3b0f04948c42bb3ce6f7e55222c9a95b3c63d" translate="yes" xml:space="preserve">
          <source>Using getOwnPropertySymbols</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff08bf6826823bdd08c6ee129e2beaadb12bcbf" translate="yes" xml:space="preserve">
          <source>Using getPrototypeOf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90f0b1a3b5be8425b9070ed492c55e63dba0596" translate="yes" xml:space="preserve">
          <source>Using getSeconds()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5628ed3e72f7218b9109ff43254d0caac081a6a" translate="yes" xml:space="preserve">
          <source>Using getTimezoneOffset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0aaf6086d3858d2b48d61ab95598c5d0702647" translate="yes" xml:space="preserve">
          <source>Using getUTCDate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e9dde16e5a7f16edf6da9a141803b364934340" translate="yes" xml:space="preserve">
          <source>Using getUTCDay()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de42b90505ef49be324c6d797e63eba84da5fed" translate="yes" xml:space="preserve">
          <source>Using getUTCFullYear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae7fcbee6f9e2b2518e9c4d13335e25b63fb655" translate="yes" xml:space="preserve">
          <source>Using getUTCHours()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8dd1e14f413a103e697d3e1e12074a174ce1001" translate="yes" xml:space="preserve">
          <source>Using getUTCMilliseconds()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d466c31805e922801f38b8ff81331dbf758f95aa" translate="yes" xml:space="preserve">
          <source>Using getUTCMinutes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d3c8ffee12a359aea748f7d3a72635c02dd43d" translate="yes" xml:space="preserve">
          <source>Using getUTCMonth()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f027bc76223b3c896c369bf3bb10532bb36ec7" translate="yes" xml:space="preserve">
          <source>Using getUTCSeconds()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f605470e76a287c771aaff676ec1d084475d9665" translate="yes" xml:space="preserve">
          <source>Using global</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d998290f1177c8d373af4066ae75ccd78ca5c1ba" translate="yes" xml:space="preserve">
          <source>Using global and ignore case flags with &lt;code&gt;match()&lt;/code&gt;</source>
          <target state="translated">Usar banderas globales e ignorar may&amp;uacute;sculas y min&amp;uacute;sculas con &lt;code&gt;match()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b03161f749764c05a49c281fc65ec497f2f71398" translate="yes" xml:space="preserve">
          <source>Using global and ignore case flags with match()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4528f41fc9d5f0217cb4f0473aa6add55fef82f" translate="yes" xml:space="preserve">
          <source>Using global and ignore with replace()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efac770b4fad9152b40b4f5576887298388e824e" translate="yes" xml:space="preserve">
          <source>Using grow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6835db7ec3e718fe0a7d6a187670e111e3b8a37d" translate="yes" xml:space="preserve">
          <source>Using has()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c89663e781ada47d56435f483449d90ab1837e" translate="yes" xml:space="preserve">
          <source>Using hasOwnProperty as a property name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dfa12d4323366a9ad6fa5af120421e8b6a1a7f7" translate="yes" xml:space="preserve">
          <source>Using hasOwnProperty to test for a property's existence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d624db0c3c6651b19ee0c7c6fe5344e1897bbb2" translate="yes" xml:space="preserve">
          <source>Using if...else</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9770c2cf1df89d76c3455d8ac5ac8ef47d5034f6" translate="yes" xml:space="preserve">
          <source>Using ignoreCase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fedec461f1801498f2b9daf57c78fc4366f32ce" translate="yes" xml:space="preserve">
          <source>Using import.meta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3edfb560dd575e984551b0dc451b621435bc10" translate="yes" xml:space="preserve">
          <source>Using imports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f4c8c19c35065c9e3257f25d8e7adccd099b03" translate="yes" xml:space="preserve">
          <source>Using includes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592372c414be5aea3e8cdcfb94c86c730b72b15c" translate="yes" xml:space="preserve">
          <source>Using indexOf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf62cbbd836d20d1dfcc3ed5000f38273fddcffa" translate="yes" xml:space="preserve">
          <source>Using isFinite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180f1e7bcc5289206f86ed7a39439f1f364d3116" translate="yes" xml:space="preserve">
          <source>Using isInteger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222c88ef14b94b06cd7fe40dd5432cf68b6dff1f" translate="yes" xml:space="preserve">
          <source>Using isLockFree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af3d070f0d8f56f9288db5f0d1b0f64c6dce862" translate="yes" xml:space="preserve">
          <source>Using isNaN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9410368fe9858bde671e7201d905dc7a3619e5" translate="yes" xml:space="preserve">
          <source>Using isPrototypeOf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f273b2f63e637f6a9d3e0071dc2c20a68fd5318" translate="yes" xml:space="preserve">
          <source>Using isSafeInteger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0f17579fa9ff470be768989357c1de64f3391e" translate="yes" xml:space="preserve">
          <source>Using isView</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcad23f54456ae5dcf21f3f870870a7e37894c8" translate="yes" xml:space="preserve">
          <source>Using it in a WebGL buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0412afcccf9f98f27a3ab0df49e6d7b51ac5bbd" translate="yes" xml:space="preserve">
          <source>Using join</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab3718cedc8c13889f6390cf7c2445e440c4ea9" translate="yes" xml:space="preserve">
          <source>Using keyFor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0800136b5f829e92a40ba8e8061004781b36de0" translate="yes" xml:space="preserve">
          <source>Using keys()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81b04f5201ab2d6c97055500ed8b4315f57f180" translate="yes" xml:space="preserve">
          <source>Using lastIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322e21711a1dddc1d17de3dbcf6f57b0bc877589" translate="yes" xml:space="preserve">
          <source>Using lastIndexOf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea466f228fac9cca1b0be7d61893f5fa40b0ea8d" translate="yes" xml:space="preserve">
          <source>Using left shift</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23931303c7e72fbdbc192cfbcc436fa8c1052e60" translate="yes" xml:space="preserve">
          <source>Using left shift assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd215e0e35f6b6db2352000549f6369c899478a2" translate="yes" xml:space="preserve">
          <source>Using length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae73a071350ea81e9a6a3084ce16153ee7f4941" translate="yes" xml:space="preserve">
          <source>Using locales</source>
          <target state="translated">Usando los locales</target>
        </trans-unit>
        <trans-unit id="39161556438a6127e13f2b5dbdb932d4374fb83d" translate="yes" xml:space="preserve">
          <source>Using locales and options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d5dd3eae5f03438cbb4c2feeb95f20584463bf" translate="yes" xml:space="preserve">
          <source>Using logical AND assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886a28a4a2eb672395a04544d9dbe0e7e9dd5032" translate="yes" xml:space="preserve">
          <source>Using logical nullish assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad8fb7222f17df432dd75e62ce7671e264b6ef4" translate="yes" xml:space="preserve">
          <source>Using map generically</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8477f958231e81e8b426c1429b28e3d6b91d6c8a" translate="yes" xml:space="preserve">
          <source>Using map generically querySelectorAll</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eaeeb9b1bdd633a7ee2be2491b50c4b2dd2f51c" translate="yes" xml:space="preserve">
          <source>Using map to reformat objects in an array</source>
          <target state="translated">Usar el mapa para reformatear los objetos de una matriz</target>
        </trans-unit>
        <trans-unit id="57fea5c1df70c1731b285c5bb8e84b0d0597d87a" translate="yes" xml:space="preserve">
          <source>Using match()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34decca95c31fb0f36647a074e567c96d4cd2b86" translate="yes" xml:space="preserve">
          <source>Using match() with no parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27df1248c1410bb0e19f4a1376ad4827efa37c5" translate="yes" xml:space="preserve">
          <source>Using maximize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14153962701e439b602458d530aa5a204ef2159a" translate="yes" xml:space="preserve">
          <source>Using minimize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9bc7a15e4413c2923839686949aa21ad4c75c1" translate="yes" xml:space="preserve">
          <source>Using multiline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e27181bcab675a9d16388360b59a9609aaa988f" translate="yes" xml:space="preserve">
          <source>Using multiplication assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908af489a71764b87dc11d9422dbfebe684c29d8" translate="yes" xml:space="preserve">
          <source>Using name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37cc7e80587c16880e38299586ee198421f6dadc" translate="yes" xml:space="preserve">
          <source>Using named capturing groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a702ddd86f4d7f4ffc64cfc9724d04aad87e8c" translate="yes" xml:space="preserve">
          <source>Using named exports</source>
          <target state="translated">Usando las exportaciones nombradas</target>
        </trans-unit>
        <trans-unit id="3ce8f6159e8a2c57b127fc9a28529f5d82937bef" translate="yes" xml:space="preserve">
          <source>Using next()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31956539c97795aeccf55de9e425b602d2a59da8" translate="yes" xml:space="preserve">
          <source>Using next() with a list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2eb3cd064b384251db35ecb8369daec88f56c11" translate="yes" xml:space="preserve">
          <source>Using normal strings, you would have to use the following syntax in order to get multi-line strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4570f0c53ffe44dd1aff9cab95bbae80e41a2e43" translate="yes" xml:space="preserve">
          <source>Using of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac157cbadd0fe570dd3066357d979c7731da95d" translate="yes" xml:space="preserve">
          <source>Using one is likely to result in runtime errors or buggy behavior:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c2bee0e97b3f946b5be950f89965426ed5c112" translate="yes" xml:space="preserve">
          <source>Using one of the newly &lt;a href=&quot;../lexical_grammar#Keywords&quot;&gt;reserved keywords&lt;/a&gt; (in prevision for ECMAScript 2015): &lt;code&gt;implements&lt;/code&gt;, &lt;code&gt;interface&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;package&lt;/code&gt;, &lt;code&gt;private&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;static&lt;/code&gt;, and &lt;code&gt;yield&lt;/code&gt;</source>
          <target state="translated">Usando una de las &lt;a href=&quot;../lexical_grammar#Keywords&quot;&gt;palabras clave&lt;/a&gt; recientemente reservadas (en previsi&amp;oacute;n para ECMAScript 2015): &lt;code&gt;implements&lt;/code&gt; , &lt;code&gt;interface&lt;/code&gt; , &lt;code&gt;let&lt;/code&gt; , &lt;code&gt;package&lt;/code&gt; , &lt;code&gt;private&lt;/code&gt; , &lt;code&gt;protected&lt;/code&gt; , &lt;code&gt;public&lt;/code&gt; , &lt;code&gt;static&lt;/code&gt; y &lt;code&gt;yield&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b49d9500e0c30c567daeada1bf4852abd03e8032" translate="yes" xml:space="preserve">
          <source>Using optional chaining with function calls causes the expression to automatically return &lt;code&gt;undefined&lt;/code&gt; instead of throwing an exception if the method isn't found:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7a876bdd113f4940d781859515dc8f3133d487" translate="yes" xml:space="preserve">
          <source>Using options</source>
          <target state="translated">Usando las opciones</target>
        </trans-unit>
        <trans-unit id="ff857323bcfdb45c1ad34e359d76f798bcdf782c" translate="yes" xml:space="preserve">
          <source>Using or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825f8b6b1c9ad158460a7202b903db2cc3e6785b" translate="yes" xml:space="preserve">
          <source>Using padEnd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7a57490393fd8594bc2ff1841908dfd1e9193f" translate="yes" xml:space="preserve">
          <source>Using parseInt</source>
          <target state="translated">Usando parseInt</target>
        </trans-unit>
        <trans-unit id="76725ad13661b304019ea358cfca45e614714de3" translate="yes" xml:space="preserve">
          <source>Using private fields, the definition can be refined as below.</source>
          <target state="translated">Utilizando los campos privados,la definición puede refinarse como se indica a continuación.</target>
        </trans-unit>
        <trans-unit id="9ccaa6ecec23ddf5a861e417d481a9f4cc9f1663" translate="yes" xml:space="preserve">
          <source>Using promises</source>
          <target state="translated">Usando promesas</target>
        </trans-unit>
        <trans-unit id="ae39009f8db560c822c57eaeef7e8d1936f7ba79" translate="yes" xml:space="preserve">
          <source>Using propertiesObject argument with Object.create()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc16c289ac22a0476e9ebb4bbd8cfdd609630165" translate="yes" xml:space="preserve">
          <source>Using register</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f4e9cfb7fcad90eab435e6419e019029f2cdd2" translate="yes" xml:space="preserve">
          <source>Using regular expression on multiple lines</source>
          <target state="translated">Usando la expresión regular en múltiples líneas</target>
        </trans-unit>
        <trans-unit id="d8fcaaffaf763755745b2c99c373b25626997b0f" translate="yes" xml:space="preserve">
          <source>Using regular expression to split lines with different &lt;strong&gt;line endings/ends of line/line breaks&lt;/strong&gt;</source>
          <target state="translated">Uso de expresiones regulares para dividir l&amp;iacute;neas con diferentes &lt;strong&gt;finales de l&amp;iacute;nea / finales de l&amp;iacute;nea / saltos de l&amp;iacute;nea&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6b8a8cb24eea621ada043cec09d6a2f2b1790561" translate="yes" xml:space="preserve">
          <source>Using regular expression to split lines with different line endings/ends of line/line breaks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a34a62a3bd3ec6e46d4ced224f5d83b37800a96" translate="yes" xml:space="preserve">
          <source>Using regular expressions in JavaScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab831df3a04f5fa86560a499bf622920d5c11834" translate="yes" xml:space="preserve">
          <source>Using remainder assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b5709d31c2e395573bc4e08697378a0f55b29a" translate="yes" xml:space="preserve">
          <source>Using repeat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fc9d291b015e95853375493c9beafbcb54b14a" translate="yes" xml:space="preserve">
          <source>Using replaceAll</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad81f57221d6a2a71aba20f2de1ff3f764eb2967" translate="yes" xml:space="preserve">
          <source>Using resolvedOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105638c9819318e073f077d4cc651c64c62251e5" translate="yes" xml:space="preserve">
          <source>Using rest parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809885cda989787526a155d7488c5e550aa23974" translate="yes" xml:space="preserve">
          <source>Using return()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f728f98b9940c455a597b6a81f61d01e21c06f2" translate="yes" xml:space="preserve">
          <source>Using reverse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d10e40ddce76f048a57022ab2fb57018644fbd7" translate="yes" xml:space="preserve">
          <source>Using right shift</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5447dbdb280de50c292c02f6a57f5f081357a777" translate="yes" xml:space="preserve">
          <source>Using right shift assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3be18040c2607a8950e26be71b2257f761f24d" translate="yes" xml:space="preserve">
          <source>Using round</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326626598481f80a68fb94ad8965e25115cc888a" translate="yes" xml:space="preserve">
          <source>Using search()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fc5de4ce08c0ff8dcbd333bcf35a52c8a843ec" translate="yes" xml:space="preserve">
          <source>Using select()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425db714893879366e129a61732c33b6a5faf5d7" translate="yes" xml:space="preserve">
          <source>Using set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed3e20c3e3060048be4af92f99eb1a2b1a683be" translate="yes" xml:space="preserve">
          <source>Using setDate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b84fb240ecd88a4768de064e8f78e407d4ba2e4" translate="yes" xml:space="preserve">
          <source>Using setFullYear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70ebf32a50db20fe33f119d785b53e538b48e59" translate="yes" xml:space="preserve">
          <source>Using setHours()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6bc4e383b870e15d75de20f7fddfd5668bb859d" translate="yes" xml:space="preserve">
          <source>Using setMilliseconds()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb248b7fb11268cb6f935169267cdafc7c332b0" translate="yes" xml:space="preserve">
          <source>Using setMinutes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0601f17325f809361ddcb0e3dc09e237df4834" translate="yes" xml:space="preserve">
          <source>Using setMonth()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcffb9fa41ffe79d8aed3b98dd17e0ba532c32c" translate="yes" xml:space="preserve">
          <source>Using setSeconds()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8f4d64c97e29a6d0912f5a5e442ea539bbe4a6" translate="yes" xml:space="preserve">
          <source>Using setTime()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41de0a7f7603139f51c33444efd146dc663d95f3" translate="yes" xml:space="preserve">
          <source>Using setUTCDate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bda14e2abfa4bfc03ab49015cd26cca884157d" translate="yes" xml:space="preserve">
          <source>Using setUTCFullYear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41eb81d66e283738c9e28012e75ad16cf253ee0" translate="yes" xml:space="preserve">
          <source>Using setUTCHours()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7c9b72f4e083f4357b856de48c6180cc296538" translate="yes" xml:space="preserve">
          <source>Using setUTCMilliseconds()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9049851a9f00c4e10b33a562a892de0a7ecdb0" translate="yes" xml:space="preserve">
          <source>Using setUTCMinutes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4c39777934f7fabe240c77edd5e667d86fc4c2" translate="yes" xml:space="preserve">
          <source>Using setUTCMonth()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4fcb0440ba6442aa7d0f8152f1a83e6b5e6fba" translate="yes" xml:space="preserve">
          <source>Using setUTCSeconds()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff2b71741e31637d7d1dde9e6e612dd3e0df0bc" translate="yes" xml:space="preserve">
          <source>Using setYear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e080040b10738c8afcd03deb0d85628ef3a5d3" translate="yes" xml:space="preserve">
          <source>Using shift() method in while loop</source>
          <target state="translated">Usando el método shift()en el bucle while</target>
        </trans-unit>
        <trans-unit id="7385fef46abee1736ac5b98f7d435fb14a94c7f1" translate="yes" xml:space="preserve">
          <source>Using size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6834e544f7f11105dbc879dc890775e448a1ca" translate="yes" xml:space="preserve">
          <source>Using slice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37eba0943db54828b213ac73f3e9ed0022f8f095" translate="yes" xml:space="preserve">
          <source>Using slice()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebdd55d36a0b32024b6daaac003f6008c5ef1ed" translate="yes" xml:space="preserve">
          <source>Using sort</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933ab7f3893cce76a3ae270cf5340291da0234ad" translate="yes" xml:space="preserve">
          <source>Using source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb69d0dac7b10532b7b2a94bd543c248a65f52a8" translate="yes" xml:space="preserve">
          <source>Using species</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9802eaa4ae417ab26b119d7cb6fb357b7e12c2cf" translate="yes" xml:space="preserve">
          <source>Using static members in classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1049c4075b9c13970d7cf1ff4fb5c547bae435" translate="yes" xml:space="preserve">
          <source>Using store()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13aa6ac26f0888378f22a5a4d62d613191fc4353" translate="yes" xml:space="preserve">
          <source>Using style and unit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c3352efb20b2399c4447240e20b63dabc43255" translate="yes" xml:space="preserve">
          <source>Using sub</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f7906b7c15d799ae957fb6c1a648bf884aa358" translate="yes" xml:space="preserve">
          <source>Using substr()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777bd673d5da70612c980ee77d8c0f476657aafd" translate="yes" xml:space="preserve">
          <source>Using subtraction assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6245295f3c3028d9eabde6ddaea3d25cce460a2e" translate="yes" xml:space="preserve">
          <source>Using supportedLocalesOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963a38522de9798acef85f12b2331561291850f3" translate="yes" xml:space="preserve">
          <source>Using template literals, you can do the same like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b549a6bbcc74457aead8bc6415f046127a6ab5f1" translate="yes" xml:space="preserve">
          <source>Using test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d084c77c0a305e8d75439239ee55025dd4b1d1" translate="yes" xml:space="preserve">
          <source>Using test() on a regex with the &quot;global&quot; flag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df517976ef66b07cb11ade3e93f636707d93e93" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; constructor:</source>
          <target state="translated">Usando el constructor de &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="7aa31d1e62b235e2c9af364c8a7ebac64b73ab4a" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Map&lt;/code&gt; object</source>
          <target state="translated">Usando el objeto &lt;code&gt;Map&lt;/code&gt; a</target>
        </trans-unit>
        <trans-unit id="2b7112639fe0724543dd4fe914f8024f1274df06" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Number&lt;/code&gt; object to assign values to numeric variables</source>
          <target state="translated">Usar el objeto &lt;code&gt;Number&lt;/code&gt; para asignar valores a variables num&amp;eacute;ricas</target>
        </trans-unit>
        <trans-unit id="2da180e96c0d44481802a959caffa06e89d3c55e" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Set&lt;/code&gt; object</source>
          <target state="translated">Usando el objeto &lt;code&gt;Set&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a705e1972fa32310b6d183debc8ff1e4b655b57" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;add&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;add&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3adbbbd0c736613161411e64659d24beb18747a8" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;auto&lt;/code&gt; option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060310649cd7bd07b0fb5ce33774407a6fcc987b" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;buffer&lt;/code&gt; property</source>
          <target state="translated">Usando la propiedad de &lt;code&gt;buffer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17636c8fe1421043e421a10ca3292967a563f944" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;byteLength&lt;/code&gt; property</source>
          <target state="translated">Usando la propiedad &lt;code&gt;byteLength&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d3cb85b5d2531bdca2df5cb3be77135d41d81d0" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;byteOffset&lt;/code&gt; property</source>
          <target state="translated">Usando la propiedad &lt;code&gt;byteOffset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3812b3bdd9d1183316efe5c656205634d6bc73d1" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;clear&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;clear&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d7fb8b01806c8f781e3aeaba0813539fcf1910b" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;constructor&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;constructor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="763d4745f82ee4dda7843b9b47b02f114bbec263" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;delete&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo de &lt;code&gt;delete&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd0cce4a7bb24463a85dbc5b2258d2a7190f67df" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;get&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;get&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5021d8aa08c91cfe3e8f624c6781092136ae5a66" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;getBigInt64&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04710320d45b21feaac0b927c5a33755f8dbdd3" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;getBigUint64&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8088e170dc1068ccacc9cfa0bbd882ef2747fc" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;getFloat32&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;getFloat32&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0d639b7fb6b88549de590bff81cca9ba70603e9" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;getFloat64&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;getFloat64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b2ac72df9ac30445f67dc68d79abeb97041b407" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;getInt16&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;getInt16&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7484baadf9cb95379e3f89ab6b61d7403157f747" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;getInt32&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;getInt32&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d167e11ae2b9f08de238cb2665ae39e7f7ddf09" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;getInt8&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;getInt8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d807de54c7de88cf35dd1d764ea1eed1088a40dd" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;getUint16&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;getUint16&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf46d850dca7ec2ecc349894a61fd86973ed38a0" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;getUint32&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;getUint32&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6aa38f1e5e0218896cc7fd912115b996916bcf5" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;getUint8&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;getUint8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ba6fb49f1699b5b23eb412e5863a030e46feb80" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;has&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;has&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23d439477c548975addf6c44f9eb57a0c7a3300d" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;length&lt;/code&gt; property</source>
          <target state="translated">Usando la propiedad &lt;code&gt;length&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb75a96e90281884fff42142ceded3aa0929a3b4" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;of&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721bfbe8f3d441ad6e98f957929d2516b5f52f9b" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;resolvedOptions&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;resolvedOptions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="11ad006b0fe08f07b94e25e20ac3810a53373c95" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;reviver&lt;/code&gt; parameter</source>
          <target state="translated">Usando el par&amp;aacute;metro &lt;code&gt;reviver&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44318d406fa57dc8fb9b183dc858c7a0c5c5e236" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;set&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;set&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20110daa0cfff630e933ef54899d2b905d479d38" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;set&lt;/code&gt; method with chaining</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;set&lt;/code&gt; con encadenamiento</target>
        </trans-unit>
        <trans-unit id="13e51ba58331ab1e88f04c98921eea412994bfc9" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;setBigInt64&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6616cb754d1389bd487546efef7947f757ed6abd" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;setBigUint64&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb27aa9c0701a5f16cb8372fb511c8755174037b" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;setFloat32&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;setFloat32&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b630e8cc96aa98420147912bab138957fdc4748" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;setFloat64&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;setFloat64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e97a3a5fe1936c3c1cdb527f5a182db1bbb93c77" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;setInt16&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;setInt16&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b25ce442471b34db1e8f771a1352031f37abb0a2" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;setInt32&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;setInt32&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9df040b351fac68c30f82dac9469d547a0bcc827" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;setInt8&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;setInt8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc5967a59f8ecff73ddd8166c7024c2d897688c0" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;setUint16&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;setUint16&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e090cfb39824335c51a2ca978dad64f4d6877e8" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;setUint32&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;setUint32&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93f41b970770c2780268dfba20edf118501b3bfa" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;setUint8&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;setUint8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b5ceb28e787cb4169fce2a298736badc5cb67de" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;subarray&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo de &lt;code&gt;subarray&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4818dbc56f63c5cd137ed2225a59b70710006fc1" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;then&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo &lt;code&gt;then&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="388d103635b65cc58cad5198640fdce20f85c24c" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;typeof&lt;/code&gt; operator with symbols</source>
          <target state="translated">Usando el operador &lt;code&gt;typeof&lt;/code&gt; con s&amp;iacute;mbolos</target>
        </trans-unit>
        <trans-unit id="a5543d3464e6260d0c86f11deb582c82d760cffc" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;unicode&lt;/code&gt; property</source>
          <target state="translated">Usando la propiedad &lt;code&gt;unicode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1393f6ecb25c40efe2b8f799f3ffe1fdc8636b96" translate="yes" xml:space="preserve">
          <source>Using the Locale constructor with an options object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ed51681d4132ac3476e93b13e299b104e7d0f7" translate="yes" xml:space="preserve">
          <source>Using the Map object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca2315a1b8363dec8ecba300477e1a06d5e2c94" translate="yes" xml:space="preserve">
          <source>Using the Number object to assign values to numeric variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367b5c5a65bcad281b3de35da17d4ef458f6777a" translate="yes" xml:space="preserve">
          <source>Using the Set object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd2aea6d5143be08cdcb069934b7cf5496a961d" translate="yes" xml:space="preserve">
          <source>Using the WeakSet object</source>
          <target state="translated">Usando el objeto WeakSet</target>
        </trans-unit>
        <trans-unit id="e0e7339c08ba4cc50e07ceb0c45aa0d878640344" translate="yes" xml:space="preserve">
          <source>Using the WebAssembly JavaScript API</source>
          <target state="translated">Usando el API de JavaScript de WebAssembly</target>
        </trans-unit>
        <trans-unit id="42abf8b2c7b3649fea15d990cd95614aa585db74" translate="yes" xml:space="preserve">
          <source>Using the add() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb6496ab64cb69a4d61c7ac040fb7221eb9d050" translate="yes" xml:space="preserve">
          <source>Using the arguments object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a08075fad2c8382d901f2bb5412728999e8914f" translate="yes" xml:space="preserve">
          <source>Using the buffer property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67edaca9d46a44a3d97e6170735663348d7e6358" translate="yes" xml:space="preserve">
          <source>Using the byteLength property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e445ecbdff6253430feed5efcad2687a8b6674f2" translate="yes" xml:space="preserve">
          <source>Using the byteOffset property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644987c7869ee58bbf9ba51ecdb4a56815ac0123" translate="yes" xml:space="preserve">
          <source>Using the clear() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9e239a94a07662c12fef0b44441fb3e1f98026" translate="yes" xml:space="preserve">
          <source>Using the debugger statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8435c2402c803d5b0c23a5ab8e6aa879dbefe401" translate="yes" xml:space="preserve">
          <source>Using the default export</source>
          <target state="translated">Usando la exportación por defecto</target>
        </trans-unit>
        <trans-unit id="a003bfda6a8417338f47f7cdb0c053eb7f114327" translate="yes" xml:space="preserve">
          <source>Using the delete() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666845613d801295c55214f07242e40cb0e36dbe" translate="yes" xml:space="preserve">
          <source>Using the equality operators</source>
          <target state="translated">Usando los operadores de igualdad</target>
        </trans-unit>
        <trans-unit id="0198236c598dc5c268a98c7a8c7cbda338cb715b" translate="yes" xml:space="preserve">
          <source>Using the get() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c047cbc8af6a2bff04026e2a720847fec8997c" translate="yes" xml:space="preserve">
          <source>Using the getFloat32 method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ace268dfe45207159528a9d100b1d590c74ade" translate="yes" xml:space="preserve">
          <source>Using the getFloat64 method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6915d8135f476f2f40ba2ff3bdea3cd24b1ef70d" translate="yes" xml:space="preserve">
          <source>Using the getInt16 method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ef5afbf3dbb1330f62dffa7e5779c8867ee1ed" translate="yes" xml:space="preserve">
          <source>Using the getInt32 method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be7a5432b010a5b102aa2a4371f7f45fd16d6eb" translate="yes" xml:space="preserve">
          <source>Using the getInt8 method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916fdb7fbf3f613a08a485ec9a7a6827052c5a97" translate="yes" xml:space="preserve">
          <source>Using the getUint16 method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6b80057ba5c4586dce2af5f22514f79097cab5" translate="yes" xml:space="preserve">
          <source>Using the getUint32 method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2042f636db37d74e954f4d7033c9e9dd1032c1d" translate="yes" xml:space="preserve">
          <source>Using the getUint8 method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a51c3929522a9a419e38258806ea7498c04203" translate="yes" xml:space="preserve">
          <source>Using the grouping operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ed274235fc3bcdaccf01ee08806f168c67f3b4" translate="yes" xml:space="preserve">
          <source>Using the has method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4beba1771f2b2569c56eff45af02f8573e1e1c3" translate="yes" xml:space="preserve">
          <source>Using the has() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2039211011d8fdd1d88ca562d3cf948b0de3f5e" translate="yes" xml:space="preserve">
          <source>Using the latter will throw an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1043de0bcb43435aa8745112789311bb5ec60b98" translate="yes" xml:space="preserve">
          <source>Using the nullish coalescing operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285fc329c1a77379f35f29c3c3c1088371fdd719" translate="yes" xml:space="preserve">
          <source>Using the older &lt;a href=&quot;proto&quot;&gt;&lt;code&gt;Object.prototype.__proto__&lt;/code&gt;&lt;/a&gt; property, we can easily define &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; if it isn't available already:</source>
          <target state="translated">Usando la &lt;a href=&quot;proto&quot;&gt; &lt;code&gt;Object.prototype.__proto__&lt;/code&gt; &lt;/a&gt; anterior Object.prototype .__ proto__ , podemos definir f&amp;aacute;cilmente &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; si a&amp;uacute;n no est&amp;aacute; disponible:</target>
        </trans-unit>
        <trans-unit id="1b6938b25029037ae9b640452b8432f7aaccf74b" translate="yes" xml:space="preserve">
          <source>Using the resolvedOptions method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb084c599b18647332d841114f01e839e8c6e4f" translate="yes" xml:space="preserve">
          <source>Using the reviver parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3358ab3f89ba0d2aaa93343e07caf893b316c7" translate="yes" xml:space="preserve">
          <source>Using the same mechanism the following example counts the total number of words in a string:</source>
          <target state="translated">Utilizando el mismo mecanismo,el siguiente ejemplo cuenta el número total de palabras de una cadena:</target>
        </trans-unit>
        <trans-unit id="0b7b8d72c9e25524f3680f3590ab14bc652e5a5d" translate="yes" xml:space="preserve">
          <source>Using the set() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3289c3faf70feadda4fbe2731bdf8ed274b1a661" translate="yes" xml:space="preserve">
          <source>Using the set() with chaining</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a4ba5827bdb293e565ca3cc16cc257a2ba5e2e" translate="yes" xml:space="preserve">
          <source>Using the setFloat32 method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e33eda84b87841422c25bec78aff090782a8c6" translate="yes" xml:space="preserve">
          <source>Using the setFloat64 method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66909e00b468e4c1a86a51b2023730aaca41abba" translate="yes" xml:space="preserve">
          <source>Using the setInt16 method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3913fbdf89695790517140c97ab59f62b757bd74" translate="yes" xml:space="preserve">
          <source>Using the setInt32 method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05b98324a789f388da0e9e691dd4ed31faf7157" translate="yes" xml:space="preserve">
          <source>Using the setInt8 method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3530b876c7600833ae7a9baa238baa29c7fdc13d" translate="yes" xml:space="preserve">
          <source>Using the setUint16 method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f70eebcbd996a2adef4c4638f5e016a32dcc95b" translate="yes" xml:space="preserve">
          <source>Using the setUint32 method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c35b571c0ef6398d67e9dc09fd17e737ab3f1e" translate="yes" xml:space="preserve">
          <source>Using the setUint8 method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16cdbf1e2fe53d21049b1aebbf57bc13b8622039" translate="yes" xml:space="preserve">
          <source>Using the static &lt;code&gt;Promise.resolve&lt;/code&gt; method</source>
          <target state="translated">Usando el m&amp;eacute;todo est&amp;aacute;tico &lt;code&gt;Promise.resolve&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d319f61fbdfca489440ae7b0fa3b12be1791af1" translate="yes" xml:space="preserve">
          <source>Using the static Promise.reject() method</source>
          <target state="translated">Usando el método estático Promise.reject()</target>
        </trans-unit>
        <trans-unit id="d0885381fc8e38963600ad318809baf874d28e0c" translate="yes" xml:space="preserve">
          <source>Using the static Promise.resolve method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ccebb68eb74f8a29fa74fc88066f23693f3fff" translate="yes" xml:space="preserve">
          <source>Using the typeof operator with symbols</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da12ab598d7d9e62006f6efee7986e5b76ecf1a" translate="yes" xml:space="preserve">
          <source>Using the unicode property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5858d68bbcf7b36cc58c06cf4446c0dd856b96a" translate="yes" xml:space="preserve">
          <source>Using this logic, a &lt;code&gt;clon&lt;/code&gt; function can be created as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a44827105154bcc96c269c11a8be8b2918b585" translate="yes" xml:space="preserve">
          <source>Using thisArg</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63597f3f37abf673561b304b0397c0f4e3bdf199" translate="yes" xml:space="preserve">
          <source>Using throw()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e353c6f51ae3d9bca498915dc5f4fc5a8fbe01bb" translate="yes" xml:space="preserve">
          <source>Using timeStyle and dateStyle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10547c51925c21d50b948bb0bfca1570dce2e896" translate="yes" xml:space="preserve">
          <source>Using toExponential</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9697996f429c5a1a33daadf283a77fad04c30aa7" translate="yes" xml:space="preserve">
          <source>Using toFixed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6628741b70ae28fa2cda4a4eef5f414ef87d6cc" translate="yes" xml:space="preserve">
          <source>Using toISOString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bbbf90ace8df689fdd341096e7530fa4eec649" translate="yes" xml:space="preserve">
          <source>Using toJSON()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b373d0edad6b3a29646c018f40f7aae8e60ebdc" translate="yes" xml:space="preserve">
          <source>Using toLocaleDateString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a480394b611d0787ab3d96907450d6a521084e7b" translate="yes" xml:space="preserve">
          <source>Using toLocaleString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc2af2f9c0ce773e57bd6c54aecb07f785d2cfb" translate="yes" xml:space="preserve">
          <source>Using toLocaleTimeString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea856694f75e4dbfc8a4fcdd0f465f5377b07fc8" translate="yes" xml:space="preserve">
          <source>Using toString</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28f3b3c72d2a90259fe30d0fbaa5dbc867239e4" translate="yes" xml:space="preserve">
          <source>Using toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c57ef5b24861ead1429d40e06111bffe3ed0a5e" translate="yes" xml:space="preserve">
          <source>Using toString() to detect object class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c6fdb2a410c22436566227f51ed2b53ea376377" translate="yes" xml:space="preserve">
          <source>Using toStringTag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b234ae8d9ad22c8be607f4434532d2c9b2a2f854" translate="yes" xml:space="preserve">
          <source>Using toUTCString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2298ee24c6b53ad8072e335688fa5c9054ce0e73" translate="yes" xml:space="preserve">
          <source>Using two for-of iterations to work with two arrays:</source>
          <target state="translated">Usando dos iteraciones para trabajar con dos matrices:</target>
        </trans-unit>
        <trans-unit id="984ba4663162c377444e8a99b985bdea6ca233f1" translate="yes" xml:space="preserve">
          <source>Using typeof with arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8a5c5c4afe179104e6ad315ac045d8b22a4ae2" translate="yes" xml:space="preserve">
          <source>Using unary plus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d89d7e322a6498bf35080bab12669e9f0c8e36e" translate="yes" xml:space="preserve">
          <source>Using unregister</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f0783cd9cb7ae11893e5bb8f40947946c17dbdc" translate="yes" xml:space="preserve">
          <source>Using unshift</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab79b35f3c048001ca4608b428b25cb73707313" translate="yes" xml:space="preserve">
          <source>Using unsigned right shift</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f5857bbd0988e597e6b4afcb616a8dbf737068" translate="yes" xml:space="preserve">
          <source>Using unsigned right shift assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3489ec4eeb5d18dea9fc7fe66c3fe5cdb0e1d5" translate="yes" xml:space="preserve">
          <source>Using validate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002c1e0c369cfbb7cb5c2adce8fa546ceeb48507" translate="yes" xml:space="preserve">
          <source>Using valueOf</source>
          <target state="translated">Usando el valor de</target>
        </trans-unit>
        <trans-unit id="db98f0d058f8b7d257c0c4fe18e0eb082124cea9" translate="yes" xml:space="preserve">
          <source>Using valueOf on custom types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07240915f520083975cd297557283b737d02755e" translate="yes" xml:space="preserve">
          <source>Using valueOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25221944efc091d3758b693595f541f09c2845e2" translate="yes" xml:space="preserve">
          <source>Using values()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f72686661e980daa544eba8605dc565b1670549" translate="yes" xml:space="preserve">
          <source>Using wait()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a710dacbcea66bf66eae8e33668e5dc3e0aa7d53" translate="yes" xml:space="preserve">
          <source>Using while</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56761ba46c8d24eed7d881e958cd4440cdafc97d" translate="yes" xml:space="preserve">
          <source>Using with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17625cfeee447b8ba44bd697cb677536029fcbb5" translate="yes" xml:space="preserve">
          <source>Using xor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f41777d2b0cc65a7f04311850a44fb4089cb08" translate="yes" xml:space="preserve">
          <source>Using yield</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1643b918b370de0df985bb907e1d1295cc5d395" translate="yes" xml:space="preserve">
          <source>Usually you create an &lt;code&gt;Error&lt;/code&gt; object with the intention of raising it using the &lt;a href=&quot;../statements/throw&quot;&gt;&lt;code&gt;throw&lt;/code&gt;&lt;/a&gt; keyword. You can handle the error using the &lt;a href=&quot;../statements/try...catch&quot;&gt;&lt;code&gt;try...catch&lt;/code&gt;&lt;/a&gt; construct:</source>
          <target state="translated">Por lo general, crea un objeto &lt;code&gt;Error&lt;/code&gt; con la intenci&amp;oacute;n de generarlo utilizando la palabra clave &lt;a href=&quot;../statements/throw&quot;&gt; &lt;code&gt;throw&lt;/code&gt; &lt;/a&gt; . Puede manejar el error usando la construcci&amp;oacute;n &lt;a href=&quot;../statements/try...catch&quot;&gt; &lt;code&gt;try...catch&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="028522823973a359accfd991e9a11f26538c1bec" translate="yes" xml:space="preserve">
          <source>Usually, an object is extensible and new properties can be added to it. However, in this case &lt;a href=&quot;../global_objects/object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt; marked an object as no longer extensible, so that it will never have properties beyond the ones it had at the time it was marked as non-extensible.</source>
          <target state="translated">Por lo general, un objeto es extensible y se le pueden agregar nuevas propiedades. Sin embargo, en este caso &lt;a href=&quot;../global_objects/object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt; marc&amp;oacute; un objeto como no extensible, por lo que nunca tendr&amp;aacute; propiedades m&amp;aacute;s all&amp;aacute; de las que ten&amp;iacute;a en el momento en que se marc&amp;oacute; como no extensible.</target>
        </trans-unit>
        <trans-unit id="729ec6faa377f15330c6ec4333d5a7cc1008e901" translate="yes" xml:space="preserve">
          <source>Usually, properties in an object created by an &lt;a href=&quot;../global_objects/array#Syntax&quot;&gt;array initializer&lt;/a&gt; are configurable. However, for example, when using &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;, the property isn't configurable by default.</source>
          <target state="translated">Normalmente, las propiedades de un objeto creado por un &lt;a href=&quot;../global_objects/array#Syntax&quot;&gt;inicializador de matriz&lt;/a&gt; son configurables. Sin embargo, por ejemplo, cuando se usa &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; , la propiedad no se puede configurar de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="15888d4410e0361143e09a8b6f68ab685762c5b2" translate="yes" xml:space="preserve">
          <source>Vai digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38c9f1a95614045050e2aa55540b6933caff329" translate="yes" xml:space="preserve">
          <source>Valid &lt;code&gt;for-of&lt;/code&gt; loop</source>
          <target state="translated">Bucle &lt;code&gt;for-of&lt;/code&gt; v&amp;aacute;lido</target>
        </trans-unit>
        <trans-unit id="ac8102c9cb2a0cddbd0b586bee673befe3b905b2" translate="yes" xml:space="preserve">
          <source>Valid cases</source>
          <target state="translated">Casos válidos</target>
        </trans-unit>
        <trans-unit id="1953c137743ee397647ebbc687b66740d3c8f0b2" translate="yes" xml:space="preserve">
          <source>Valid collation types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab413d429d0c4d151947326c53077a41ccae512" translate="yes" xml:space="preserve">
          <source>Valid for-in loop</source>
          <target state="translated">Válido para el bucle de entrada</target>
        </trans-unit>
        <trans-unit id="2b9aa691b720e3dd96c75c1cdec384b1133acbce" translate="yes" xml:space="preserve">
          <source>Valid hour cycle types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6843c40afb0afdfa8c868b99fba0ec16938ed173" translate="yes" xml:space="preserve">
          <source>Valid input:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ecb1f4a8ff8ccd062c99038efacdb3978a0c34b" translate="yes" xml:space="preserve">
          <source>Valid octal numbers</source>
          <target state="translated">Números octales válidos</target>
        </trans-unit>
        <trans-unit id="62427623ec1fd77b629b493130d6011d493b75ba" translate="yes" xml:space="preserve">
          <source>Valid regular expression flags</source>
          <target state="translated">Banderas de expresión regular válidas</target>
        </trans-unit>
        <trans-unit id="53034c8ca0e9ac160f2d5018ec7250699b0001c2" translate="yes" xml:space="preserve">
          <source>Validates a given typed array of WebAssembly binary code, returning whether the bytes are valid WebAssembly code (&lt;code&gt;true&lt;/code&gt;) or not (&lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">Valida una matriz determinada de c&amp;oacute;digo binario WebAssembly, devolviendo si los bytes son c&amp;oacute;digo WebAssembly v&amp;aacute;lido ( &lt;code&gt;true&lt;/code&gt; ) o no ( &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="dd74d182c641e4c78502d863b44d0aeff1575e54" translate="yes" xml:space="preserve">
          <source>Validation</source>
          <target state="translated">Validation</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="97eb3dad0caf7a0af0caef2ef21956a7465d9c32" translate="yes" xml:space="preserve">
          <source>Value Range</source>
          <target state="translated">Rango de valores</target>
        </trans-unit>
        <trans-unit id="b7d636c3a9434a850eee328130074f786436fb4a" translate="yes" xml:space="preserve">
          <source>Value correction and an extra property</source>
          <target state="translated">Corrección del valor y una propiedad extra</target>
        </trans-unit>
        <trans-unit id="ceab60964f2a8b8a0b414a18859f8da76c815209" translate="yes" xml:space="preserve">
          <source>Value equality</source>
          <target state="translated">Igualdad de valores</target>
        </trans-unit>
        <trans-unit id="88a356bf2b2612e85c09cc9204199d58052e5e19" translate="yes" xml:space="preserve">
          <source>Value of each iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb5559baa347c8fa63883cef40a651c5d96a454" translate="yes" xml:space="preserve">
          <source>Value properties</source>
          <target state="translated">Propiedades de valor</target>
        </trans-unit>
        <trans-unit id="7e95513c13db4d4ce57cf68d5e04fce2088d7774" translate="yes" xml:space="preserve">
          <source>Value to fill an array.</source>
          <target state="translated">Valor para llenar una matriz.</target>
        </trans-unit>
        <trans-unit id="62994b4b99ba540510a3c04835ff0348716963d6" translate="yes" xml:space="preserve">
          <source>Value to fill the array with. (Note all elements in the array will be this exact value.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03cf9449ccf155418b2f5482fb732e12234768e2" translate="yes" xml:space="preserve">
          <source>Value to fill the typed array with.</source>
          <target state="translated">Valor con el que llenar la matriz mecanografiada.</target>
        </trans-unit>
        <trans-unit id="6cd1bc01710ea3928dd42ebf711ff0dad289ebbc" translate="yes" xml:space="preserve">
          <source>Value to use as &lt;code&gt;&lt;strong&gt;this&lt;/strong&gt;&lt;/code&gt; (i.e the reference &lt;code&gt;Object&lt;/code&gt;) when executing &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">Valor para usar como &lt;code&gt;&lt;strong&gt;this&lt;/strong&gt;&lt;/code&gt; (es decir, el &lt;code&gt;Object&lt;/code&gt; referencia ) al ejecutar la &lt;code&gt;callback&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4037481746de373affa7e65395873ee78fd6f100" translate="yes" xml:space="preserve">
          <source>Value to use as &lt;code&gt;this&lt;/code&gt; when executing &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697f56f6d674d2dde41f5b1f9bf5e0a76b1f91f7" translate="yes" xml:space="preserve">
          <source>Value to use as &lt;code&gt;this&lt;/code&gt; when executing &lt;code&gt;&lt;var&gt;mapFn&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b237ad26015e6920af43cdcfb4766bd919a43a39" translate="yes" xml:space="preserve">
          <source>Value to use as &lt;code&gt;this&lt;/code&gt; when executing &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">Valor para usar como &lt;code&gt;this&lt;/code&gt; al ejecutar la &lt;code&gt;callback&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a38e26f0de1cc21706ce788cd076d91affd9edd" translate="yes" xml:space="preserve">
          <source>Value to use as &lt;code&gt;this&lt;/code&gt; when executing &lt;code&gt;mapFn&lt;/code&gt;.</source>
          <target state="translated">Valor para usar como &lt;code&gt;this&lt;/code&gt; al ejecutar &lt;code&gt;mapFn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2b71321d29494791f699d08194974c3877e5398" translate="yes" xml:space="preserve">
          <source>Value to use as accumulator to the first call of the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. If no initial value is supplied, the last element in the array will be used and skipped. Calling reduce or reduceRight on an empty array without an initial value creates a &lt;code&gt;TypeError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad47e65c53169bdf1516f9f32906fb63c15105f" translate="yes" xml:space="preserve">
          <source>Value to use as the first argument to the first call of the &lt;code&gt;callback&lt;/code&gt;. If no initial value is supplied, the first element in the array will be used. Calling &lt;code&gt;reduce()&lt;/code&gt; on an empty array without an initial value is an error.</source>
          <target state="translated">Valor que se utilizar&amp;aacute; como primer argumento de la primera llamada de la &lt;code&gt;callback&lt;/code&gt; de llamada . Si no se proporciona un valor inicial, se utilizar&amp;aacute; el primer elemento de la matriz. Llamar a &lt;code&gt;reduce()&lt;/code&gt; en una matriz vac&amp;iacute;a sin un valor inicial es un error.</target>
        </trans-unit>
        <trans-unit id="64d3fa327af6c00a158874b020b8662316e3fe94" translate="yes" xml:space="preserve">
          <source>Values from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;99&lt;/code&gt; map to the years &lt;code&gt;1900&lt;/code&gt; to &lt;code&gt;1999&lt;/code&gt;. All other values are the actual year. See the &lt;a href=&quot;#Two_digit_years_map_to_1900_-_1999&quot;&gt;example below&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffe9bc3428ff9f24d806e5a9eeaee7edc51dac9" translate="yes" xml:space="preserve">
          <source>Values of zero are all considered to be equal, regardless of sign. (That is, &lt;code&gt;-0&lt;/code&gt; is considered to be equal to both &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;+0&lt;/code&gt;), but &lt;code&gt;false&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; considered to be the same as &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859b0b5b86d8313084f51bc48daa7a36bd52b191" translate="yes" xml:space="preserve">
          <source>Var hides argument</source>
          <target state="translated">Var esconde el argumento</target>
        </trans-unit>
        <trans-unit id="f06faae45051c6d773a060f64aa4b7927970a707" translate="yes" xml:space="preserve">
          <source>Variable declarations in the JavaScript Guide</source>
          <target state="translated">Declaraciones variables en la Guía de JavaScript</target>
        </trans-unit>
        <trans-unit id="34721cbac05fd3459b9d40c8119157c44d7f9b76" translate="yes" xml:space="preserve">
          <source>Variable name. It can be any legal identifier.</source>
          <target state="translated">Nombre de la variable.Puede ser cualquier identificador legal.</target>
        </trans-unit>
        <trans-unit id="3b6526218abccd9aaf72feb65b361d2b51bbd22f" translate="yes" xml:space="preserve">
          <source>Variable names can't start with numbers in JavaScript. The following fails:</source>
          <target state="translated">Los nombres de las variables no pueden empezar con números en JavaScript.Lo siguiente falla:</target>
        </trans-unit>
        <trans-unit id="0e909d01b8601e5cf9fb51367dcb305a9c9701e8" translate="yes" xml:space="preserve">
          <source>Variable names starting with numeric literals</source>
          <target state="translated">Los nombres de las variables que comienzan con los literales numéricos</target>
        </trans-unit>
        <trans-unit id="4197c4595ca86583cbae2b9136ba641f9a6e49bf" translate="yes" xml:space="preserve">
          <source>Variable not declared</source>
          <target state="translated">Variable no declarada</target>
        </trans-unit>
        <trans-unit id="e093b0ba06f11745364d4d6cc453646e62d5c378" translate="yes" xml:space="preserve">
          <source>Variable to iterate over property values, optionally declared with the &lt;code&gt;var&lt;/code&gt; keyword. This variable is local to the function, not to the loop.</source>
          <target state="translated">Variable para iterar sobre los valores de propiedad, declarada opcionalmente con la palabra clave &lt;code&gt;var&lt;/code&gt; . Esta variable es local a la funci&amp;oacute;n, no al ciclo.</target>
        </trans-unit>
        <trans-unit id="93357e07fe591c0b80ecee4526694c55f27bf8c3" translate="yes" xml:space="preserve">
          <source>Variables and methods can infer the name of an anonymous function from its syntactic position (new in ECMAScript 2015).</source>
          <target state="translated">Las variables y los métodos pueden inferir el nombre de una función anónima a partir de su posición sintáctica (nuevo en ECMAScript 2015).</target>
        </trans-unit>
        <trans-unit id="0794b9421123e365af068527287b4441d5c0f189" translate="yes" xml:space="preserve">
          <source>Variables declared by &lt;code&gt;let&lt;/code&gt; have their scope in the block for which they are declared, as well as in any contained sub-blocks. In this way, &lt;code&gt;let&lt;/code&gt; works very much like &lt;code&gt;var&lt;/code&gt;. The main difference is that the scope of a &lt;code&gt;var&lt;/code&gt; variable is the entire enclosing function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54be569e281d5bfecc250892e33932f45a689c36" translate="yes" xml:space="preserve">
          <source>Variables declared by &lt;code&gt;let&lt;/code&gt; have their scope in the block for which they are defined, as well as in any contained sub-blocks. In this way, &lt;code&gt;let&lt;/code&gt; works very much like &lt;code&gt;var&lt;/code&gt;. The main difference is that the scope of a &lt;code&gt;var&lt;/code&gt; variable is the entire enclosing function:</source>
          <target state="translated">Las variables declaradas por &lt;code&gt;let&lt;/code&gt; tienen su alcance en el bloque para el que est&amp;aacute;n definidas, as&amp;iacute; como en cualquier subbloque contenido. De esta forma, &lt;code&gt;let&lt;/code&gt; funciona de forma muy parecida a &lt;code&gt;var&lt;/code&gt; . La principal diferencia es que el alcance de una variable &lt;code&gt;var&lt;/code&gt; es la funci&amp;oacute;n envolvente completa:</target>
        </trans-unit>
        <trans-unit id="38d88d01c247355ecb4262251a091502bf4892df" translate="yes" xml:space="preserve">
          <source>Variables declared using &lt;code&gt;var&lt;/code&gt; are created before any code is executed in a process known as hoisting. Their initial value is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23382333cfe64a086a98043155a0bd5371c460b2" translate="yes" xml:space="preserve">
          <source>Variables declared with &lt;code&gt;var&lt;/code&gt; or created by &lt;a href=&quot;function&quot;&gt;function declarations&lt;/a&gt; in non-strict mode &lt;strong&gt;do not&lt;/strong&gt; have block scope. Variables introduced within a block are scoped to the containing function or script, and the effects of setting them persist beyond the block itself. In other words, block statements do not introduce a scope. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f758127e9b82bba992a23b60e91cdde2094233" translate="yes" xml:space="preserve">
          <source>Variables declared with &lt;code&gt;var&lt;/code&gt;&lt;strong&gt;do not&lt;/strong&gt; have block scope. Variables introduced with a block are scoped to the containing function or script, and the effects of setting them persist beyond the block itself. In other words, block statements do not introduce a scope. Although &quot;standalone&quot; blocks are valid syntax, you do not want to use standalone blocks in JavaScript, because they don't do what you think they do, if you think they do anything like such blocks in C or Java. For example:</source>
          <target state="translated">Las variables declaradas con &lt;code&gt;var&lt;/code&gt; &lt;strong&gt;no&lt;/strong&gt; tienen alcance de bloque. Las variables introducidas con un bloque tienen como alcance la funci&amp;oacute;n o el script que las contienen, y los efectos de establecerlas persisten m&amp;aacute;s all&amp;aacute; del bloque en s&amp;iacute;. En otras palabras, las declaraciones de bloque no introducen un alcance. Aunque los bloques &quot;independientes&quot; son una sintaxis v&amp;aacute;lida, no querr&amp;aacute;s usar bloques independientes en JavaScript, porque no hacen lo que crees que hacen, si crees que hacen algo como esos bloques en C o Java. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="18fa0296710b520dc6023f1904d21b083fe180d8" translate="yes" xml:space="preserve">
          <source>Variables that appear to be implicit globals may be references to variables in an outer function scope:</source>
          <target state="translated">Las variables que parecen ser globos implícitos pueden ser referencias a variables en un ámbito de funciones externas:</target>
        </trans-unit>
        <trans-unit id="9c7312d6bb312853c19d38443e3377eca38079cc" translate="yes" xml:space="preserve">
          <source>Variant collations for certain locales. Possible values include: &lt;code&gt;&quot;big5han&quot;&lt;/code&gt;, &lt;code&gt;&quot;dict&quot;&lt;/code&gt;, &lt;code&gt;&quot;direct&quot;&lt;/code&gt;, &lt;code&gt;&quot;ducet&quot;&lt;/code&gt;, &lt;code&gt;&quot;gb2312&quot;&lt;/code&gt;, &lt;code&gt;&quot;phonebk&quot;&lt;/code&gt;, &lt;code&gt;&quot;phonetic&quot;&lt;/code&gt;, &lt;code&gt;&quot;pinyin&quot;&lt;/code&gt;, &lt;code&gt;&quot;reformed&quot;&lt;/code&gt;, &lt;code&gt;&quot;searchjl&quot;&lt;/code&gt;, &lt;code&gt;&quot;stroke&quot;&lt;/code&gt;, &lt;code&gt;&quot;trad&quot;&lt;/code&gt;, &lt;code&gt;&quot;unihan&quot;&lt;/code&gt;. The &lt;code&gt;&quot;standard&quot;&lt;/code&gt; and &lt;code&gt;&quot;search&quot;&lt;/code&gt; values are ignored; they are replaced by the &lt;code&gt;options&lt;/code&gt; property &lt;code&gt;usage&lt;/code&gt; (see below).</source>
          <target state="translated">Intercalaciones de variantes para determinadas configuraciones regionales. Los valores posibles incluyen: &lt;code&gt;&quot;big5han&quot;&lt;/code&gt; , &lt;code&gt;&quot;dict&quot;&lt;/code&gt; , &lt;code&gt;&quot;direct&quot;&lt;/code&gt; , &lt;code&gt;&quot;ducet&quot;&lt;/code&gt; , &lt;code&gt;&quot;gb2312&quot;&lt;/code&gt; , &lt;code&gt;&quot;phonebk&quot;&lt;/code&gt; , &lt;code&gt;&quot;phonetic&quot;&lt;/code&gt; , &lt;code&gt;&quot;pinyin&quot;&lt;/code&gt; , &lt;code&gt;&quot;reformed&quot;&lt;/code&gt; , &lt;code&gt;&quot;searchjl&quot;&lt;/code&gt; , &lt;code&gt;&quot;stroke&quot;&lt;/code&gt; , &lt;code&gt;&quot;trad&quot;&lt;/code&gt; , &lt;code&gt;&quot;unihan&quot;&lt;/code&gt; . Los valores &lt;code&gt;&quot;standard&quot;&lt;/code&gt; y &lt;code&gt;&quot;search&quot;&lt;/code&gt; se ignoran;se reemplazan por el &lt;code&gt;usage&lt;/code&gt; propiedad de &lt;code&gt;options&lt;/code&gt; (ver m&amp;aacute;s abajo).</target>
        </trans-unit>
        <trans-unit id="20e9c0cbb3d0a9c10b77e99cadf3ce872464faa3" translate="yes" xml:space="preserve">
          <source>Various runtime heuristics can be used to balance memory usage, responsiveness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf57b0c489a8725e49acdae0bd72d262edfe17b9" translate="yes" xml:space="preserve">
          <source>Vendor-specific extensions</source>
          <target state="translated">Extensiones específicas de los proveedores</target>
        </trans-unit>
        <trans-unit id="0ea3c77718c2c801946a36d69f35b87497b18336" translate="yes" xml:space="preserve">
          <source>Venkat.R - Various Syntax Error for const variables</source>
          <target state="translated">Venkat.R-Varios errores de sintaxis para las variables const</target>
        </trans-unit>
        <trans-unit id="f06cca3cedfe52389d86ad2bc0d3cb561f521c75" translate="yes" xml:space="preserve">
          <source>Venkat.R - Various Syntax Error for let variables</source>
          <target state="translated">Venkat.R-Various Syntax Error for let variables</target>
        </trans-unit>
        <trans-unit id="b7f06ad0a722ed487ff846d450043fedd3f6d0c1" translate="yes" xml:space="preserve">
          <source>Venkat.R - Various Syntax Error for var variables</source>
          <target state="translated">Venkat.R-Various Syntax Error for var variables</target>
        </trans-unit>
        <trans-unit id="b8a114e30b4ba12aeabad7d7bde58af00f7ffe47" translate="yes" xml:space="preserve">
          <source>Venkatraman.R - JS Promise (Part 1, Basics)</source>
          <target state="translated">Venkatraman.R-Promesa JS (Parte 1,Básicos)</target>
        </trans-unit>
        <trans-unit id="745aa0a5b0ea7dd1ef6b034b321c490d2e1e649e" translate="yes" xml:space="preserve">
          <source>Venkatraman.R - JS Promise (Part 2 - Using Q.js, When.js and RSVP.js)</source>
          <target state="translated">Venkatraman.R-Promesa JS (Parte 2-Usando Q.js,When.js y RSVP.js)</target>
        </trans-unit>
        <trans-unit id="67fec039179d5eaa41e92fed7cca3b18f2ebb69a" translate="yes" xml:space="preserve">
          <source>Venkatraman.R - Tools for Promises Unit Testing</source>
          <target state="translated">Venkatraman.R-Herramientas para la prueba de la unidad de promesas</target>
        </trans-unit>
        <trans-unit id="ba4c53462dc4545ef309c66d114de828f2d0299c" translate="yes" xml:space="preserve">
          <source>Verifies that the specified index of the array still contains a value and sleeps awaiting or times out. Returns either &quot;&lt;code&gt;ok&lt;/code&gt;&quot;, &quot;&lt;code&gt;not-equal&lt;/code&gt;&quot;, or &quot;&lt;code&gt;timed-out&lt;/code&gt;&quot;. If waiting is not allowed in the calling agent then it throws an &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; exception. (Most browsers will not allow &lt;code&gt;wait()&lt;/code&gt; on the browser's main thread.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9301fe225dd357c9fc1f3e7d0f52d86381b70c" translate="yes" xml:space="preserve">
          <source>Verifies that the specified index of the array still contains a value and sleeps awaiting or times out. Returns either &lt;code&gt;&quot;ok&quot;&lt;/code&gt;, &lt;code&gt;&quot;not-equal&quot;&lt;/code&gt;, or &lt;code&gt;&quot;timed-out&quot;&lt;/code&gt;. If waiting is not allowed in the calling agent then it throws an Error exception (most browsers will not allow &lt;code&gt;wait()&lt;/code&gt; on the browser's main thread).</source>
          <target state="translated">Verifica que el &amp;iacute;ndice especificado de la matriz a&amp;uacute;n contenga un valor y est&amp;eacute; inactivo en espera o se agote el tiempo de espera. Devuelve &lt;code&gt;&quot;ok&quot;&lt;/code&gt; , &lt;code&gt;&quot;not-equal&quot;&lt;/code&gt; o &lt;code&gt;&quot;timed-out&quot;&lt;/code&gt; . Si la espera no est&amp;aacute; permitida en el agente que realiza la llamada, se genera una excepci&amp;oacute;n de error (la mayor&amp;iacute;a de los navegadores no permiten &lt;code&gt;wait()&lt;/code&gt; en el hilo principal del navegador).</target>
        </trans-unit>
        <trans-unit id="5170d77c566dde5f835fece888c96564a77fe0b2" translate="yes" xml:space="preserve">
          <source>Versions of Babel prior to 7 can handle &lt;code&gt;CustomError&lt;/code&gt; class methods, but only when they are declared with &lt;a href=&quot;object/defineproperty&quot;&gt;Object.defineProperty()&lt;/a&gt;. Otherwise, old versions of Babel and other transpilers will not correctly handle the following code without &lt;a href=&quot;https://github.com/loganfsmyth/babel-plugin-transform-builtin-extend&quot;&gt;additional configuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0d4bdeb1c39c3531dedcf5fe570562282bdfeb" translate="yes" xml:space="preserve">
          <source>Versions of Chrome which implement &lt;code&gt;Object.defineProperty()&lt;/code&gt; in some circumstances ignore a length value different from the array's current &lt;a href=&quot;../array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property. In some circumstances changing writability seems to silently not work (and not throw an exception). Also, relatedly, some array-mutating methods like &lt;a href=&quot;../array/push&quot;&gt;&lt;code&gt;Array.prototype.push&lt;/code&gt;&lt;/a&gt; don't respect a non-writable length.</source>
          <target state="translated">Las versiones de Chrome que implementan &lt;code&gt;Object.defineProperty()&lt;/code&gt; en algunas circunstancias ignoran un valor de longitud diferente de la propiedad de &lt;a href=&quot;../array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; actual de la matriz . En algunas circunstancias, cambiar la capacidad de escritura parece no funcionar silenciosamente (y no generar una excepci&amp;oacute;n). Adem&amp;aacute;s, de manera relacionada, algunos m&amp;eacute;todos de mutaci&amp;oacute;n de matrices como &lt;a href=&quot;../array/push&quot;&gt; &lt;code&gt;Array.prototype.push&lt;/code&gt; &lt;/a&gt; no respetan una longitud no modificable.</target>
        </trans-unit>
        <trans-unit id="8009012bd2c4d9369856a9ce6eabe604f691a8f1" translate="yes" xml:space="preserve">
          <source>Versions of Safari which implement &lt;code&gt;Object.defineProperty()&lt;/code&gt; ignore a &lt;code&gt;length&lt;/code&gt; value different from the array's current &lt;a href=&quot;../array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property, and attempts to change writability execute without error but do not actually change the property's writability.</source>
          <target state="translated">Las versiones de Safari que implementan &lt;code&gt;Object.defineProperty()&lt;/code&gt; ignoran un valor de &lt;code&gt;length&lt;/code&gt; diferente de la propiedad de &lt;a href=&quot;../array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; actual de la matriz , y los intentos de cambiar la capacidad de escritura se ejecutan sin errores, pero en realidad no cambian la capacidad de escritura de la propiedad.</target>
        </trans-unit>
        <trans-unit id="104253f6a152860a20a03899f360ca69966f78b6" translate="yes" xml:space="preserve">
          <source>Versions prior to JavaScript 1.3</source>
          <target state="translated">Versiones anteriores a JavaScript 1.3</target>
        </trans-unit>
        <trans-unit id="46e754e54cee8d62f971832e184d68ff700f439a" translate="yes" xml:space="preserve">
          <source>Vertical tabulation</source>
          <target state="translated">Tabulación vertical</target>
        </trans-unit>
        <trans-unit id="a1051b28a73d089699acc9ef668770118a942691" translate="yes" xml:space="preserve">
          <source>Void.</source>
          <target state="translated">Void.</target>
        </trans-unit>
        <trans-unit id="814f40affaed044233fd8ca6e9ba6886f4099c25" translate="yes" xml:space="preserve">
          <source>Wait and notify</source>
          <target state="translated">Espere y notifique</target>
        </trans-unit>
        <trans-unit id="22a094e4eaefdac30d5bff15a36eef23a7272b32" translate="yes" xml:space="preserve">
          <source>Wait for all promises to be resolved, or for any to be rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecdb1368135fe5ef5f26a3f2c2300186cd2c5e00" translate="yes" xml:space="preserve">
          <source>Wait until all promises have settled (each may resolve or reject).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62d0aca99bffdb8877425c0ca5df5939f4ab016" translate="yes" xml:space="preserve">
          <source>Wait until any of the promises is resolved or rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ddc9e9f125b34ac48475d1d37f451838ac106f4" translate="yes" xml:space="preserve">
          <source>Waiting and notifiying</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96de1a6d06433a82622cd23a52e002c8a6ebbf7" translate="yes" xml:space="preserve">
          <source>Wancho digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b15ce9c64c36dab7a2822d5cc5b57cf31e48cda" translate="yes" xml:space="preserve">
          <source>Warang Citi digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="d0b8d87b5862684334cbb3837d487f1f309786bc" translate="yes" xml:space="preserve">
          <source>Warning for Deep Clone</source>
          <target state="translated">Advertencia para el clon profundo</target>
        </trans-unit>
        <trans-unit id="e9335003fee4eb3a41b0cc28198a374dbf8cdfc1" translate="yes" xml:space="preserve">
          <source>Warning. JavaScript execution won't be halted.</source>
          <target state="translated">Advertencia.La ejecución de JavaScript no se detendrá.</target>
        </trans-unit>
        <trans-unit id="6a16a8f63688fe43bd5559274036ba17ac905cfb" translate="yes" xml:space="preserve">
          <source>Warning: -file- is being assigned a //# sourceMappingURL, but already has one</source>
          <target state="translated">Advertencia:-fichero-se le asigna un //#sourceMappingURL,pero ya tiene uno</target>
        </trans-unit>
        <trans-unit id="33e99f0c5ab0d63c358a06e04f45316d2d30148f" translate="yes" xml:space="preserve">
          <source>Warning: 08/09 is not a legal ECMA-262 octal constant</source>
          <target state="translated">Advertencia:El 08/09 no es una constante octal legal del ECMA-262</target>
        </trans-unit>
        <trans-unit id="400d35cfbe0ff77de7ab338f1a24094cabaf2059" translate="yes" xml:space="preserve">
          <source>Warning: Although &lt;code&gt;String.prototype.substr(&amp;hellip;)&lt;/code&gt; is not strictly deprecated (as in &quot;removed from the Web standards&quot;), it is considered a &lt;strong&gt;legacy function&lt;/strong&gt; and should be avoided when possible. It is not part of the core JavaScript language and may be removed in the future. If at all possible, use the &lt;code&gt;&lt;a href=&quot;substring&quot;&gt;substring()&lt;/a&gt;&lt;/code&gt; method instead.</source>
          <target state="translated">Advertencia: aunque &lt;code&gt;String.prototype.substr(&amp;hellip;)&lt;/code&gt; no est&amp;aacute; estrictamente en desuso (como en &quot;eliminado de los est&amp;aacute;ndares web&quot;), se considera una &lt;strong&gt;funci&amp;oacute;n heredada&lt;/strong&gt; y debe evitarse cuando sea posible. No forma parte del lenguaje JavaScript principal y puede eliminarse en el futuro. Si es posible, utilice el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;substring&quot;&gt;substring()&lt;/a&gt;&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="4e6d31aabb57cbe8e5de5901eaa16756657491df" translate="yes" xml:space="preserve">
          <source>Warning: Date.prototype.toLocaleFormat is deprecated</source>
          <target state="translated">Advertencia:Fecha.del.prototipo.al.formato.local.es.obsoleto.</target>
        </trans-unit>
        <trans-unit id="8b822a7cf09228bed47d3756c97d5a00ff5de3b1" translate="yes" xml:space="preserve">
          <source>Warning: JavaScript 1.6's for-each-in loops are deprecated</source>
          <target state="translated">Advertencia:Los bucles de encaje de JavaScript 1.6 están obsoletos.</target>
        </trans-unit>
        <trans-unit id="ea5464c818a72742368a1f944fd657a0b679d5d3" translate="yes" xml:space="preserve">
          <source>Warning: String.x is deprecated; use String.prototype.x instead</source>
          <target state="translated">Advertencia:String.x está desactualizado;use String.prototipo.x en su lugar</target>
        </trans-unit>
        <trans-unit id="93fd62106ca698fae1d29ec25b71e40a05a6d95d" translate="yes" xml:space="preserve">
          <source>Warning: expression closures are deprecated</source>
          <target state="translated">Advertencia:los cierres de expresión están desaprobados</target>
        </trans-unit>
        <trans-unit id="b8c4fceee630e8f6db1289d72437e3a90b192936" translate="yes" xml:space="preserve">
          <source>Warning: unreachable code after return statement</source>
          <target state="translated">Advertencia:código inalcanzable después de la declaración de retorno</target>
        </trans-unit>
        <trans-unit id="e9639b31b9176e58b05e3357bccad306aa8c5ab2" translate="yes" xml:space="preserve">
          <source>Warnings will not be shown for semicolon-less returns if these statements follow it:</source>
          <target state="translated">No se mostrarán advertencias para las devoluciones sin punto y coma si estas afirmaciones lo siguen:</target>
        </trans-unit>
        <trans-unit id="c0fb637549d87c45d789bda4fa312666aafdca18" translate="yes" xml:space="preserve">
          <source>Was available in Aurora and Nightly channels only.</source>
          <target state="translated">Sólo estaba disponible en los canales Aurora y Nightly.</target>
        </trans-unit>
        <trans-unit id="4b1850f48782418ea24dfd05790b888afd609c2a" translate="yes" xml:space="preserve">
          <source>Was initially in the ECMAScript 2015 draft, but got removed in revision 27 (August 2014). Please see older revisions of ES2015 for specification semantics.</source>
          <target state="translated">Estaba inicialmente en el borrador de ECMAScript 2015,pero fue eliminado en la revisión 27 (agosto de 2014).Por favor,vea las revisiones más antiguas de ES2015 para la semántica de las especificaciones.</target>
        </trans-unit>
        <trans-unit id="088f664178b74d3557cbc57e9219ae2f969b1d18" translate="yes" xml:space="preserve">
          <source>Watches for assignment to a property named &lt;code&gt;prop&lt;/code&gt; in this object, calling &lt;code&gt;handler(prop, oldval, newval)&lt;/code&gt; whenever &lt;code&gt;prop&lt;/code&gt; is set and storing the return value in that property. A watchpoint can filter (or nullify) the value assignment, by returning a modified &lt;code&gt;newval&lt;/code&gt; (or by returning &lt;code&gt;oldval&lt;/code&gt;).</source>
          <target state="translated">Observa la asignaci&amp;oacute;n a una propiedad denominada &lt;code&gt;prop&lt;/code&gt; en este objeto, llamando al &lt;code&gt;handler(prop, oldval, newval)&lt;/code&gt; siempre que se establece &lt;code&gt;prop&lt;/code&gt; y almacenando el valor de retorno en esa propiedad. Un punto de observaci&amp;oacute;n puede filtrar (o anular) la asignaci&amp;oacute;n de valor, devolviendo una modificado &lt;code&gt;newval&lt;/code&gt; (o devolviendo &lt;code&gt;oldval&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e45693d2a930efc7abd21812253dee83435a024e" translate="yes" xml:space="preserve">
          <source>We can easily fix this by wrapping our &lt;code&gt;case&lt;/code&gt; clauses with brackets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b490c7beb982a8297cd854de2bc11d6727ef14" translate="yes" xml:space="preserve">
          <source>We can make our own iterables like this:</source>
          <target state="translated">Podemos hacer nuestros propios iterables así:</target>
        </trans-unit>
        <trans-unit id="b76208d2ba82e6a7a86052a3bcd0e0a71e67eab5" translate="yes" xml:space="preserve">
          <source>We can redefine the iteration behavior by supplying our own &lt;code&gt;@@iterator&lt;/code&gt;:</source>
          <target state="translated">Podemos redefinir el comportamiento de la iteraci&amp;oacute;n proporcionando nuestro propio &lt;code&gt;@@iterator&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="649d376a86e60a4c1a5f875edb3771ec5df66200" translate="yes" xml:space="preserve">
          <source>We can then grow the instance by one page like so:</source>
          <target state="translated">Podemos hacer crecer la instancia en una página como esta:</target>
        </trans-unit>
        <trans-unit id="ee6aa271621bd04ea4d1faf12428f9e6df7342f1" translate="yes" xml:space="preserve">
          <source>We can use &lt;code&gt;push&lt;/code&gt; to append an element to an array. And, because &lt;code&gt;push&lt;/code&gt; accepts a variable number of arguments, we can also push multiple elements at once. But, if we pass an array to &lt;code&gt;push&lt;/code&gt;, it will actually add that array as a single element, instead of adding the elements individually, so we end up with an array inside an array. What if that is not what we want? &lt;code&gt;concat&lt;/code&gt; does have the behaviour we want in this case, but it does not actually append to the existing array but creates and returns a new array. But we wanted to append to our existing array... So what now? Write a loop? Surely not?</source>
          <target state="translated">Podemos usar &lt;code&gt;push&lt;/code&gt; para agregar un elemento a una matriz. Y, como &lt;code&gt;push&lt;/code&gt; acepta un n&amp;uacute;mero variable de argumentos, tambi&amp;eacute;n podemos insertar varios elementos a la vez. Pero, si pasamos una matriz para &lt;code&gt;push&lt;/code&gt; , en realidad agregar&amp;aacute; esa matriz como un solo elemento, en lugar de agregar los elementos individualmente, por lo que terminamos con una matriz dentro de una matriz. &amp;iquest;Y si eso no es lo que queremos? &lt;code&gt;concat&lt;/code&gt; tiene el comportamiento que queremos en este caso, pero en realidad no se agrega a la matriz existente, sino que crea y devuelve una nueva matriz. Pero quer&amp;iacute;amos agregar a nuestra matriz existente ... &amp;iquest;Y ahora qu&amp;eacute;? &amp;iquest;Escribir un bucle? &amp;iquest;Seguramente no?</target>
        </trans-unit>
        <trans-unit id="8a3d256743ef04d19c7d610e3021d4c239b8c1b0" translate="yes" xml:space="preserve">
          <source>We have already learned how to notate properties using the initializer syntax. Oftentimes, there are variables in your code that you would like to put into an object. You will see code like this:</source>
          <target state="translated">Ya hemos aprendido a anotar propiedades usando la sintaxis del inicializador.A menudo,hay variables en tu código que te gustaría poner en un objeto.Verás un código como este:</target>
        </trans-unit>
        <trans-unit id="3db171eb4b32a7305e9ce25b4aac305dcd518a56" translate="yes" xml:space="preserve">
          <source>We then create an import object that contains a reference to the table:</source>
          <target state="translated">A continuación,creamos un objeto de importación que contiene una referencia a la tabla:</target>
        </trans-unit>
        <trans-unit id="328556a4a648ea7eb2cf113557e53d98c76b6ff1" translate="yes" xml:space="preserve">
          <source>We then create an import object that contains the table:</source>
          <target state="translated">Luego creamos un objeto de importación que contiene la tabla:</target>
        </trans-unit>
        <trans-unit id="ea5d5dae0af760aa2d944bfd09cfe9be0d652701" translate="yes" xml:space="preserve">
          <source>We then do a check using &lt;code&gt;WebAssembly.Module.customSections&lt;/code&gt;, looking to see whether the module instance contains a &quot;name&quot; custom section by checking that its &lt;code&gt;length&lt;/code&gt; is more than 0. Since there is a &quot;name&quot; section in the example, an &lt;code&gt;ArrayBuffer&lt;/code&gt; object is returned.</source>
          <target state="translated">Luego hacemos una verificaci&amp;oacute;n usando &lt;code&gt;WebAssembly.Module.customSections&lt;/code&gt; , buscando ver si la instancia del m&amp;oacute;dulo contiene una secci&amp;oacute;n personalizada de &quot;nombre&quot; al verificar que su &lt;code&gt;length&lt;/code&gt; sea ​​mayor que 0. Dado que hay una secci&amp;oacute;n de &quot;nombre&quot; en el ejemplo, un &lt;code&gt;ArrayBuffer&lt;/code&gt; se devuelve el objeto.</target>
        </trans-unit>
        <trans-unit id="cc0dfa6f97adab0681d030a2d676da1cc5366761" translate="yes" xml:space="preserve">
          <source>We use our &lt;code&gt;degToRad()&lt;/code&gt; function to convert 60 degrees to radians, as &lt;a href=&quot;math/tan&quot;&gt;&lt;code&gt;Math.tan()&lt;/code&gt;&lt;/a&gt; expects an input value in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6279a80821249cab2332a0d932a3e191da10ddc9" translate="yes" xml:space="preserve">
          <source>WeakMap</source>
          <target state="translated">WeakMap</target>
        </trans-unit>
        <trans-unit id="c7b4a83585902eed00ada9c94e8937e6c0a8dada" translate="yes" xml:space="preserve">
          <source>WeakMap.prototype</source>
          <target state="translated">WeakMap.prototype</target>
        </trans-unit>
        <trans-unit id="a3d62f556b27b6b7782bb290d982ba6d6f43458c" translate="yes" xml:space="preserve">
          <source>WeakMap.weakMap</source>
          <target state="translated">WeakMap.weakMap</target>
        </trans-unit>
        <trans-unit id="a1335ba4027315f62ada8c5f58c30da36f666133" translate="yes" xml:space="preserve">
          <source>WeakRef</source>
          <target state="translated">WeakRef</target>
        </trans-unit>
        <trans-unit id="4af9b27bf67143ae9f7e231e4c7d9ecec39a7666" translate="yes" xml:space="preserve">
          <source>WeakRef.weakRef</source>
          <target state="translated">WeakRef.weakRef</target>
        </trans-unit>
        <trans-unit id="c669d7b9c3c861f6443f236d2d7e934abd84dc72" translate="yes" xml:space="preserve">
          <source>WeakRefs&lt;br/&gt;&lt;small&gt;The definition of 'FinalizationRegistry constructor' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29366838d4b59b730937d5edf75b16f321d811dc" translate="yes" xml:space="preserve">
          <source>WeakRefs&lt;br/&gt;&lt;small&gt;The definition of 'FinalizationRegistry' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa70f429304788730a4c07139736af572483aee4" translate="yes" xml:space="preserve">
          <source>WeakRefs&lt;br/&gt;&lt;small&gt;The definition of 'FinalizationRegistry.prototype.register' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dccbdc86cc5de2779082dd116e26b7e847748fb" translate="yes" xml:space="preserve">
          <source>WeakRefs&lt;br/&gt;&lt;small&gt;The definition of 'FinalizationRegistry.prototype.unregister' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8d55c547f6fe003dc8c6f17658d048a1d21ce8" translate="yes" xml:space="preserve">
          <source>WeakRefs&lt;br/&gt;&lt;small&gt;The definition of 'WeakRef constructor' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285940825ef503f2df37e67a10e8d4aa63a89c2b" translate="yes" xml:space="preserve">
          <source>WeakRefs&lt;br/&gt;&lt;small&gt;The definition of 'WeakRef' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a607dd29bf99ffc3de1d813aea99aeeabcbc95bb" translate="yes" xml:space="preserve">
          <source>WeakRefs&lt;br/&gt;&lt;small&gt;The definition of 'WeakRef.prototype.deref()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f48b9d4c39134a88b6b1b3ddc4feab4fccf55c5" translate="yes" xml:space="preserve">
          <source>WeakSet</source>
          <target state="translated">WeakSet</target>
        </trans-unit>
        <trans-unit id="2a2796d332dfa789b552dadcffe726463b5ed5ca" translate="yes" xml:space="preserve">
          <source>WeakSet.prototype</source>
          <target state="translated">WeakSet.prototype</target>
        </trans-unit>
        <trans-unit id="20dbcaaab29a512859fbdcdb682c068d48d68bf9" translate="yes" xml:space="preserve">
          <source>WeakSet.weakSet</source>
          <target state="translated">WeakSet.weakSet</target>
        </trans-unit>
        <trans-unit id="f76ce82654fc9f33f528ad8761bea75f5a412677" translate="yes" xml:space="preserve">
          <source>Web IDL type</source>
          <target state="translated">Tipo de IDL de la Web</target>
        </trans-unit>
        <trans-unit id="e3fe058d1c44e5390193812c37403e5227e1a2c1" translate="yes" xml:space="preserve">
          <source>Web Workers</source>
          <target state="translated">Trabajadores de la web</target>
        </trans-unit>
        <trans-unit id="051061c35dede06e751f127657cfd8dabc9b47ce" translate="yes" xml:space="preserve">
          <source>WebAssembly</source>
          <target state="translated">WebAssembly</target>
        </trans-unit>
        <trans-unit id="371ae30303ef2ff39e3b7d64c9bc41b13d9a9601" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'Instance' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'Instancia' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a3a6667f30378a6164861acbff02320d86d471a4" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'LinkError' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228ba67f0f1102828b37015dec8376be8641e2eb" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'Memory' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de &quot;memoria&quot; en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a0f26628ac421a7f0516ad687f9b21e68b572ff7" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'Table' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'Tabla' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0b03490a90d0f7fdcbc58a0d42bcea3159bf9c33" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'WebAssembly constructors' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'constructores de WebAssembly' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="68eb7d9fb516a4d3d171361d847d0c6c95572981" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'WebAssembly' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'WebAssembly' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="13335b67ef74ec7222585200e1f79e42fcbe61d7" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'WebAssembly.Global() constructor' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4f0a0b3c4606f8aaca8421805ef7ab2614a993" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'WebAssembly.Global()' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'WebAssembly.Global ()' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="385ab099cc34cd12a9ac3b9e1b8eb15f94d05b1f" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'WebAssembly.Instance objects' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'objetos WebAssembly.Instance' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fd314909ee1550ec66d3b8e1e9f73dd74264d8ca" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'WebAssembly.Instance: exports' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad56cdca412c38ca9e25e8f246b8596ef675f86" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'WebAssembly.Module()' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'WebAssembly.Module ()' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b3cae2f1673052acd5a9149929c3e736bddb6370" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'WebAssembly.RunTimeError constructor' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4bad7a680d529abbcb4bca38ad5f4118b2f350" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'buffer' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de &quot;b&amp;uacute;fer&quot; en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f46dd79c7bcb2afec83608cf7770efb45bfcfcb4" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'compile()' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'compile ()' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5cbcf739bd2a29eacf396a2f60e2a2b05ec077c5" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'customSections()' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'customSections ()' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2c618f1306c968cc0c0828000dc568da6951d989" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'exports()' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'exportaciones ()' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5d041e6a816e8255b24bfc5b67e79f352d7f8855" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'get()' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'get ()' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9b3cbf605284784f89ab8a0eb477c44e76312377" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'grow()' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'grow ()' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="274e2222aaf9aca64cf3acf58fe9340f0e5245aa" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'imports()' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'importaciones ()' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7038f367c294a2fdeee9ecf355aaabba4d178dd2" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'instantiate()' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'instanciar ()' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9af302b37c3595fbb194fa33e84be1ff9fc70ae8" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'length' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'longitud' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="134d3d4dadf68e8805a4b9cd63e55a127450e708" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'set()' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'set ()' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9265d0947036796f414bd410a04aedb8c429c924" translate="yes" xml:space="preserve">
          <source>WebAssembly JavaScript Interface&lt;br/&gt;&lt;small&gt;The definition of 'validate()' in that specification.&lt;/small&gt;</source>
          <target state="translated">Interfaz JavaScript de WebAssembly &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'validate ()' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e2ee048d69c9fe6ad267e1b5422879b73ad36df7" translate="yes" xml:space="preserve">
          <source>WebAssembly Shared Memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e5176f47e4ba9928485c4a4d99fdbcf44dc89b" translate="yes" xml:space="preserve">
          <source>WebAssembly concepts</source>
          <target state="translated">Conceptos de WebAssembly</target>
        </trans-unit>
        <trans-unit id="c52b8dd953f8584136911242e6edb4c7aaf2df52" translate="yes" xml:space="preserve">
          <source>WebAssembly features for web embedding&lt;br/&gt;&lt;small&gt;The definition of 'compileStreaming()' in that specification.&lt;/small&gt;</source>
          <target state="translated">Funciones de WebAssembly para incrustaci&amp;oacute;n web &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'compileStreaming ()' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="05849054975ad3e3b6e60ba31439297d23c2bea3" translate="yes" xml:space="preserve">
          <source>WebAssembly features for web embedding&lt;br/&gt;&lt;small&gt;The definition of 'instantiateStreaming()' in that specification.&lt;/small&gt;</source>
          <target state="translated">Funciones de WebAssembly para incrustaciones web &lt;br/&gt;&lt;small&gt;La definici&amp;oacute;n de 'instantiateStreaming ()' en esa especificaci&amp;oacute;n.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ae824fe5f92b36ac7a19a9cd12a65420167dadbd" translate="yes" xml:space="preserve">
          <source>WebAssembly.compile</source>
          <target state="translated">WebAssembly.compile</target>
        </trans-unit>
        <trans-unit id="43fad88ad2126315bb57ca98d19d962bf3b492a9" translate="yes" xml:space="preserve">
          <source>WebAssembly.compileError</source>
          <target state="translated">WebAssembly.compileError</target>
        </trans-unit>
        <trans-unit id="c696d90bef6811851bd6a50357efb09c8e4e135d" translate="yes" xml:space="preserve">
          <source>WebAssembly.compileError.CompileError</source>
          <target state="translated">WebAssembly.compileError.CompileError</target>
        </trans-unit>
        <trans-unit id="34d8ec4b33d53fd459ca96f6cbbd13c30f229e6a" translate="yes" xml:space="preserve">
          <source>WebAssembly.compileStreaming</source>
          <target state="translated">WebAssembly.compileStreaming</target>
        </trans-unit>
        <trans-unit id="82e21134ce3681f9a90bdc1db0e5eb9f24d232cc" translate="yes" xml:space="preserve">
          <source>WebAssembly.global</source>
          <target state="translated">WebAssembly.global</target>
        </trans-unit>
        <trans-unit id="3b0afe091168e414c05e0d27b717d3b2101a350a" translate="yes" xml:space="preserve">
          <source>WebAssembly.global.Global</source>
          <target state="translated">WebAssembly.global.Global</target>
        </trans-unit>
        <trans-unit id="1edea0418ecbbeb6463e43a9ebaea47bc9ab85a4" translate="yes" xml:space="preserve">
          <source>WebAssembly.global.prototype</source>
          <target state="translated">WebAssembly.global.prototype</target>
        </trans-unit>
        <trans-unit id="45a83797f41229e8b93e4efe5084b717a49b83ab" translate="yes" xml:space="preserve">
          <source>WebAssembly.instance</source>
          <target state="translated">WebAssembly.instance</target>
        </trans-unit>
        <trans-unit id="20cb6ccb22cc13df61cc8dce6ca4a4bc7c4aa5d1" translate="yes" xml:space="preserve">
          <source>WebAssembly.instance.Instance</source>
          <target state="translated">WebAssembly.instance.Instance</target>
        </trans-unit>
        <trans-unit id="8d4f80b0cd6ef208be8c542bd4420b87d61ede60" translate="yes" xml:space="preserve">
          <source>WebAssembly.instance.exports</source>
          <target state="translated">WebAssembly.instance.exports</target>
        </trans-unit>
        <trans-unit id="5e9265aedab45b30c5294edc420c97cc3b84d442" translate="yes" xml:space="preserve">
          <source>WebAssembly.instance.prototype</source>
          <target state="translated">WebAssembly.instance.prototype</target>
        </trans-unit>
        <trans-unit id="8ce6b43e3d6d8e5b3d4aa4d85125f8a665f5668d" translate="yes" xml:space="preserve">
          <source>WebAssembly.instantiate</source>
          <target state="translated">WebAssembly.instantiate</target>
        </trans-unit>
        <trans-unit id="621ad7c574456ba2e53808c51f44aa7623868d15" translate="yes" xml:space="preserve">
          <source>WebAssembly.instantiateStreaming</source>
          <target state="translated">WebAssembly.instantiateStreaming</target>
        </trans-unit>
        <trans-unit id="add6756e22c709f1e3db76d9f1fb6a979a891d5c" translate="yes" xml:space="preserve">
          <source>WebAssembly.linkError</source>
          <target state="translated">WebAssembly.linkError</target>
        </trans-unit>
        <trans-unit id="1e6e8e0e05be0f8b0ea97175c2445fe796a21866" translate="yes" xml:space="preserve">
          <source>WebAssembly.linkError.LinkError</source>
          <target state="translated">WebAssembly.linkError.LinkError</target>
        </trans-unit>
        <trans-unit id="ccee7e6f8ce34316c17b387549a88212671c782c" translate="yes" xml:space="preserve">
          <source>WebAssembly.memory</source>
          <target state="translated">WebAssembly.memory</target>
        </trans-unit>
        <trans-unit id="13e605e0a83f5a5d33037285a5867eb6da076ba8" translate="yes" xml:space="preserve">
          <source>WebAssembly.memory.Memory</source>
          <target state="translated">WebAssembly.memory.Memory</target>
        </trans-unit>
        <trans-unit id="93c50f17da39cc76eb96f9043d7c9de3a781f068" translate="yes" xml:space="preserve">
          <source>WebAssembly.memory.buffer</source>
          <target state="translated">WebAssembly.memory.buffer</target>
        </trans-unit>
        <trans-unit id="83337e3b318ba9cfc671c9982b7b45da18ea1ada" translate="yes" xml:space="preserve">
          <source>WebAssembly.memory.grow</source>
          <target state="translated">WebAssembly.memory.grow</target>
        </trans-unit>
        <trans-unit id="77be6e46d6d3c97bf951a376f5375e390c10ba7e" translate="yes" xml:space="preserve">
          <source>WebAssembly.memory.prototype</source>
          <target state="translated">WebAssembly.memory.prototype</target>
        </trans-unit>
        <trans-unit id="c6463530cca74c798093482f9f0014b4469ce6b4" translate="yes" xml:space="preserve">
          <source>WebAssembly.module</source>
          <target state="translated">WebAssembly.module</target>
        </trans-unit>
        <trans-unit id="e90d47abd3c79cf8d6ae66a7e7108939ade59322" translate="yes" xml:space="preserve">
          <source>WebAssembly.module.Module</source>
          <target state="translated">WebAssembly.module.Module</target>
        </trans-unit>
        <trans-unit id="5531b0e53a6a2c45601f7cffb515277806290463" translate="yes" xml:space="preserve">
          <source>WebAssembly.module.customSections</source>
          <target state="translated">WebAssembly.module.customSections</target>
        </trans-unit>
        <trans-unit id="3a48fdf1101d99f3c362c3f0828b1b9200bfbbf0" translate="yes" xml:space="preserve">
          <source>WebAssembly.module.exports</source>
          <target state="translated">WebAssembly.module.exports</target>
        </trans-unit>
        <trans-unit id="898b1c94c9512fe1319541d4e3f270bb0ba29dae" translate="yes" xml:space="preserve">
          <source>WebAssembly.module.imports</source>
          <target state="translated">WebAssembly.module.imports</target>
        </trans-unit>
        <trans-unit id="a78c75b049b1efd19740f2ab050e21152de9ce6b" translate="yes" xml:space="preserve">
          <source>WebAssembly.module.prototype</source>
          <target state="translated">WebAssembly.module.prototype</target>
        </trans-unit>
        <trans-unit id="238a77457c16bb642b7e80de646e6a48d4e2a4fe" translate="yes" xml:space="preserve">
          <source>WebAssembly.runtimeError</source>
          <target state="translated">WebAssembly.runtimeError</target>
        </trans-unit>
        <trans-unit id="1ad2472a4528d201de6ef9f1ff301a7fb0cececd" translate="yes" xml:space="preserve">
          <source>WebAssembly.runtimeError.RunTimeError</source>
          <target state="translated">WebAssembly.runtimeError.RunTimeError</target>
        </trans-unit>
        <trans-unit id="d600d72e7bdd7ab6f365f4edafd14dcd993907ad" translate="yes" xml:space="preserve">
          <source>WebAssembly.table</source>
          <target state="translated">WebAssembly.table</target>
        </trans-unit>
        <trans-unit id="f36e81badb8eaee043a097b3b705b0b4726ab1b3" translate="yes" xml:space="preserve">
          <source>WebAssembly.table.Table</source>
          <target state="translated">WebAssembly.table.Table</target>
        </trans-unit>
        <trans-unit id="8659a5129e7c8cfd42870513844375cf100eacf4" translate="yes" xml:space="preserve">
          <source>WebAssembly.table.get</source>
          <target state="translated">WebAssembly.table.get</target>
        </trans-unit>
        <trans-unit id="eb378d9144f06a93bdfd37f940753ecfdeb738eb" translate="yes" xml:space="preserve">
          <source>WebAssembly.table.grow</source>
          <target state="translated">WebAssembly.table.grow</target>
        </trans-unit>
        <trans-unit id="164a07186592639798c447f1f35706131a14ea34" translate="yes" xml:space="preserve">
          <source>WebAssembly.table.length</source>
          <target state="translated">WebAssembly.table.length</target>
        </trans-unit>
        <trans-unit id="d81cf07625a35b752621d8d40e32e6f85f556eae" translate="yes" xml:space="preserve">
          <source>WebAssembly.table.prototype</source>
          <target state="translated">WebAssembly.table.prototype</target>
        </trans-unit>
        <trans-unit id="5af149065d203fa1662bf61f580c35a279adb04d" translate="yes" xml:space="preserve">
          <source>WebAssembly.table.set</source>
          <target state="translated">WebAssembly.table.set</target>
        </trans-unit>
        <trans-unit id="2416ed5e027b02f2b563bc37623ac598f96e60be" translate="yes" xml:space="preserve">
          <source>WebAssembly.validate</source>
          <target state="translated">WebAssembly.validate</target>
        </trans-unit>
        <trans-unit id="c67f639aa357c713f97a2d0d5ad253e1993230fe" translate="yes" xml:space="preserve">
          <source>WebExtensions: Using eval in content scripts</source>
          <target state="translated">WebExtensiones:Usar eval en los scripts de contenido</target>
        </trans-unit>
        <trans-unit id="5046ef0a39320e7c50078df7c455984c8436b2ab" translate="yes" xml:space="preserve">
          <source>Week day: 3 letter English week day name, e.g. &quot;Sat&quot;</source>
          <target state="translated">Día de la semana:3 letras del nombre del día de la semana en inglés,por ejemplo,&quot;Sat&quot;.</target>
        </trans-unit>
        <trans-unit id="c7d252fdefad522e350a7318b0cac908ffe23769" translate="yes" xml:space="preserve">
          <source>Well-formed &lt;code&gt;JSON.stringify()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;JSON.stringify()&lt;/code&gt; bien formado</target>
        </trans-unit>
        <trans-unit id="7de50ff92b1733150a149066ab8a41d69d95b534" translate="yes" xml:space="preserve">
          <source>Well-formed JSON.stringify</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a6bd2a3c9e454ea5200229ca3400cf7749804b" translate="yes" xml:space="preserve">
          <source>Well-formed JSON.stringify()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d32bb05c45281464c3faa91449c698df5bf1223" translate="yes" xml:space="preserve">
          <source>Well-formed template call site object, like &lt;code&gt;{ raw: ['foo', 'bar', 'baz'] }&lt;/code&gt;.</source>
          <target state="translated">Objeto de sitio de llamada de plantilla bien formado, como &lt;code&gt;{ raw: ['foo', 'bar', 'baz'] }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a408b4011c0c8a4e5376fd1dc963eea6863eba1b" translate="yes" xml:space="preserve">
          <source>Well-known symbols</source>
          <target state="translated">Símbolos bien conocidos</target>
        </trans-unit>
        <trans-unit id="78d26a80af4fe87cd860276048073b0b5ce45ee7" translate="yes" xml:space="preserve">
          <source>What does &amp;ldquo;can&amp;rsquo;t access dead object&amp;rdquo; mean?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa &quot;no se puede acceder a un objeto muerto&quot;?</target>
        </trans-unit>
        <trans-unit id="6581a74aa8cab6d56992818832038f4787e21997" translate="yes" xml:space="preserve">
          <source>What happens if I forgot a &lt;code&gt;break&lt;/code&gt;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba2b711f9288e512e60531638860df9cf5379ff" translate="yes" xml:space="preserve">
          <source>What happens if I forgot a break?</source>
          <target state="translated">¿Qué pasa si olvido un descanso?</target>
        </trans-unit>
        <trans-unit id="bc0c5693b63c09bd41ce1ec6d6b860ea66e1b59b" translate="yes" xml:space="preserve">
          <source>What if that is not what you want? &lt;code&gt;concat&lt;/code&gt; does have the desired behaviour in this case, but it does not append to the &lt;em&gt;existing&lt;/em&gt; array&amp;mdash;it instead creates and returns a new array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bedd362c633647895894e24745a972d9c906fcf6" translate="yes" xml:space="preserve">
          <source>What is &quot;shallow freeze&quot;?</source>
          <target state="translated">¿Qué es &quot;congelación superficial&quot;?</target>
        </trans-unit>
        <trans-unit id="71c8a4a23b0dea390d9c49b1b0992f6d919a9595" translate="yes" xml:space="preserve">
          <source>What went wrong?</source>
          <target state="translated">¿Qué salió mal?</target>
        </trans-unit>
        <trans-unit id="78325c9f4d3074c33d92b725132fbea45139cf0c" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; or nothing is returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7c117b1dafb052196e7600c0b1060433b7079e" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;Array.from()&lt;/code&gt; gets an array-like which isn't an iterator, it respects holes. &lt;code&gt;TypedArray.from()&lt;/code&gt; will ensure the result is dense.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c6e8ee5aa7c7adce0fdc952dedf8296a802518" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;Array.from&lt;/code&gt; gets an array-like which isn't an iterator, it respects holes, where &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from&lt;/code&gt; will ensure the result is dense.</source>
          <target state="translated">Cuando &lt;code&gt;Array.from&lt;/code&gt; obtiene una matriz similar a lo que no es un iterador, respeta agujeros, donde &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from&lt;/code&gt; aseguren el resultado es denso.</target>
        </trans-unit>
        <trans-unit id="804863103cf1290bad500eac727c6fd6c86e18b9" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;Error&lt;/code&gt; is used like a function -- without &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;, it will return an &lt;code&gt;Error&lt;/code&gt; object. Therefore, a mere call to &lt;code&gt;Error&lt;/code&gt; will produce the same output that constructing an &lt;code&gt;Error&lt;/code&gt; object via the &lt;code&gt;new&lt;/code&gt; keyword would.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8a5d8c724855c28fa7632d40a88c1d342cc931" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;Error&lt;/code&gt; is used like a function -- without &lt;code&gt;new&lt;/code&gt;, it will return an &lt;code&gt;Error&lt;/code&gt; object. Therefore, a mere call to &lt;code&gt;Error&lt;/code&gt; will produce the same output that constructing an &lt;code&gt;Error&lt;/code&gt; object via the &lt;code&gt;new&lt;/code&gt; keyword would.</source>
          <target state="translated">Cuando &lt;code&gt;Error&lt;/code&gt; se usa como una funci&amp;oacute;n, sin &lt;code&gt;new&lt;/code&gt; , devolver&amp;aacute; un objeto &lt;code&gt;Error&lt;/code&gt; . Por lo tanto, una mera llamada a &lt;code&gt;Error&lt;/code&gt; producir&amp;aacute; el mismo resultado que generar&amp;iacute;a la construcci&amp;oacute;n de un objeto &lt;code&gt;Error&lt;/code&gt; mediante la &lt;code&gt;new&lt;/code&gt; palabra clave.</target>
        </trans-unit>
        <trans-unit id="27acc0bd8a67c55fd07417ba3128135f63995090" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;fill&lt;/code&gt; gets passed an object, it will copy the reference and fill the array with references to that object.</source>
          <target state="translated">Cuando a &lt;code&gt;fill&lt;/code&gt; se le pasa un objeto, copiar&amp;aacute; la referencia y llenar&amp;aacute; la matriz con referencias a ese objeto.</target>
        </trans-unit>
        <trans-unit id="29972fd8e8a2506bbe3cac2f8d497bfbedee00f8" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;from&lt;/code&gt; gets an iterator, the &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;&lt;/code&gt; version first collects all the values from the iterator, then creates an instance of &lt;code&gt;|this|&lt;/code&gt; using the count, then sets the values on the instance. &lt;code&gt;Array.from&lt;/code&gt; sets each value as it gets them from the iterator then sets the length at the end.</source>
          <target state="translated">Cuando &lt;code&gt;from&lt;/code&gt; obtiene un iterador, la versi&amp;oacute;n &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;&lt;/code&gt; primero recopila todos los valores del iterador y luego crea una instancia de &lt;code&gt;|this|&lt;/code&gt; usando el recuento, luego establece los valores en la instancia. &lt;code&gt;Array.from&lt;/code&gt; establece cada valor a medida que los obtiene del iterador y luego establece la longitud al final.</target>
        </trans-unit>
        <trans-unit id="dfdf11eddce16fec07db5e941d3c8ecffd70a719" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;test()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, the calling regex's &lt;code&gt;lastIndex&lt;/code&gt; property will reset to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56761113d92c77391744167196281cdb2a79152e" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;.then()&lt;/code&gt; lacks the appropriate function that returns a Promise object, processing simply continues to the next link of the chain. Therefore, a chain can safely omit every &lt;code&gt;handleRejection&lt;/code&gt; until the final &lt;code&gt;.catch()&lt;/code&gt;. Similarly, &lt;code&gt;.catch()&lt;/code&gt; is really just a &lt;code&gt;.then()&lt;/code&gt; without a slot for &lt;code&gt;handleFulfilled&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a2b15b580fd1bf059e597d04c92c0aa4e53426" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;catch&lt;/code&gt;-block is used, the &lt;code&gt;catch&lt;/code&gt;-block is executed when any exception is thrown from within the &lt;code&gt;try&lt;/code&gt;-block. For example, when the exception occurs in the following code, control transfers to the &lt;code&gt;catch&lt;/code&gt;-block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1bc1a245ce2d073d8d15a7df2deeb94ffe2afd" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;nextValue&lt;/code&gt; is a promise, the effect is a dynamic replacement. The &lt;code&gt;return&lt;/code&gt; causes a promise to be popped, but the &lt;code&gt;nextValue&lt;/code&gt; promise is pushed into its place. For the nesting shown above, suppose the &lt;code&gt;.then()&lt;/code&gt; associated with &quot;promise B&quot; returns a &lt;code&gt;nextValue&lt;/code&gt; of &quot;promise X&quot;. The resulting nesting would look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff7988e78976fd1c2345be099410b3b34450896" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;return&lt;/code&gt; statement is used in a function body, the execution of the function is stopped. If specified, a given value is returned to the function caller. For example, the following function returns the square of its argument, &lt;code&gt;x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is a number.</source>
          <target state="translated">Cuando se utiliza una declaraci&amp;oacute;n de &lt;code&gt;return&lt;/code&gt; en el cuerpo de una funci&amp;oacute;n, se detiene la ejecuci&amp;oacute;n de la funci&amp;oacute;n. Si se especifica, se devuelve un valor dado al llamador de la funci&amp;oacute;n. Por ejemplo, la siguiente funci&amp;oacute;n devuelve el cuadrado de su argumento, &lt;code&gt;x&lt;/code&gt; , donde &lt;code&gt;x&lt;/code&gt; es un n&amp;uacute;mero.</target>
        </trans-unit>
        <trans-unit id="ff03fe79b461ccf577f710e872cbb9b96f8fddce" translate="yes" xml:space="preserve">
          <source>When a Symbol wrapper object is used as a property key, this object will be coerced to its wrapped symbol:</source>
          <target state="translated">Cuando un objeto de envoltura de símbolos es usado como una llave de propiedad,este objeto será coaccionado a su símbolo de envoltura:</target>
        </trans-unit>
        <trans-unit id="40d006638ff6702467c271d3645e4199dd3655c7" translate="yes" xml:space="preserve">
          <source>When a bound function is called, it calls internal method &lt;code&gt;[[Call]]&lt;/code&gt; on &lt;code&gt;[[BoundTargetFunction]]&lt;/code&gt;, with following arguments &lt;code&gt;Call(&lt;var&gt;boundThis&lt;/var&gt;, ...&lt;var&gt;args&lt;/var&gt;)&lt;/code&gt;. Where &lt;code&gt;&lt;var&gt;boundThis&lt;/var&gt;&lt;/code&gt; is &lt;code&gt;[[BoundThis]]&lt;/code&gt;, &lt;code&gt;&lt;var&gt;args&lt;/var&gt;&lt;/code&gt; is &lt;code&gt;[[BoundArguments]]&lt;/code&gt;, followed by the arguments passed by the function call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b0e4e2a594c56d1b6ff5183f4309702616eff2" translate="yes" xml:space="preserve">
          <source>When a browser follows a &lt;code&gt;javascript:&lt;/code&gt; URI, it evaluates the code in the URI and then replaces the contents of the page with the returned value, unless the returned value is &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;void&lt;/code&gt; operator can be used to return &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">Cuando un navegador sigue un &lt;code&gt;javascript:&lt;/code&gt; URI, eval&amp;uacute;a el c&amp;oacute;digo en el URI y luego reemplaza el contenido de la p&amp;aacute;gina con el valor devuelto, a menos que el valor devuelto &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; est&amp;eacute; definido . El operador &lt;code&gt;void&lt;/code&gt; se puede utilizar para devolver &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b9b88e39f544bde2f844f86b4040395a0a0de4e0" translate="yes" xml:space="preserve">
          <source>When a browser follows a &lt;code&gt;javascript:&lt;/code&gt; URI, it evaluates the code in the URI and then replaces the contents of the page with the returned value, unless the returned value is &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;void&lt;/code&gt; operator can be used to return &lt;code&gt;undefined&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23bff28126820c5460b495146645f5081234cbac" translate="yes" xml:space="preserve">
          <source>When a function is called as a method of an object, its &lt;code&gt;this&lt;/code&gt; is set to the object the method is called on.</source>
          <target state="translated">Cuando una funci&amp;oacute;n se llama como un m&amp;eacute;todo de un objeto, su &lt;code&gt;this&lt;/code&gt; se establece en el objeto se llama al m&amp;eacute;todo sobre.</target>
        </trans-unit>
        <trans-unit id="6a47b34c61e463080f2816760a918433e9257135" translate="yes" xml:space="preserve">
          <source>When a function is called, the arguments to the call are held in the array-like &quot;variable&quot; &lt;a href=&quot;../../functions/arguments&quot;&gt;arguments&lt;/a&gt;. For example, in the call &quot;myFn(a, b, c)&quot;, the arguments within myFn's body will contain 3 array-like elements corresponding to (a, b, c). When modifying prototypes with hooks, simply pass this &amp;amp; the arguments (the call state) to the current behavior by calling apply() on the function. This pattern can be used for any prototype, such as Node.prototype, Function.prototype, etc.</source>
          <target state="translated">Cuando se llama a una funci&amp;oacute;n, los argumentos de la llamada se mantienen en los &lt;a href=&quot;../../functions/arguments&quot;&gt;argumentos&lt;/a&gt; &quot;variables&quot; en forma de matriz . Por ejemplo, en la llamada &quot;myFn (a, b, c)&quot;, los argumentos dentro del cuerpo de myFn contendr&amp;aacute;n 3 elementos en forma de matriz correspondientes a (a, b, c). Al modificar prototipos con hooks, simplemente pase esto y los argumentos (el estado de la llamada) al comportamiento actual llamando a apply () en la funci&amp;oacute;n. Este patr&amp;oacute;n se puede utilizar para cualquier prototipo, como Node.prototype, Function.prototype, etc.</target>
        </trans-unit>
        <trans-unit id="6cd6a38f481f6ce6cb7f51dea1c51f7b68b7b143" translate="yes" xml:space="preserve">
          <source>When a function is called, the arguments to the call are held in the array-like &quot;variable&quot; &lt;a href=&quot;../functions/arguments&quot;&gt;arguments&lt;/a&gt;. For example, in the call &lt;code&gt;myFn(a, b, c)&lt;/code&gt;, the arguments within &lt;code&gt;myFn&lt;/code&gt;'s body will contain 3 array-like elements corresponding to &lt;code&gt;(a, b, c)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5c86afd59f1929f2470b136a17cb9ec01bf21f" translate="yes" xml:space="preserve">
          <source>When a function is used as a constructor (with the &lt;a href=&quot;new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; keyword), its &lt;code&gt;this&lt;/code&gt; is bound to the new object being constructed.</source>
          <target state="translated">Cuando una funci&amp;oacute;n se utiliza como un constructor (con la &lt;a href=&quot;new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; palabra clave), su &lt;code&gt;this&lt;/code&gt; est&amp;aacute; obligado a la nueva objeto que est&amp;aacute; siendo construido.</target>
        </trans-unit>
        <trans-unit id="8de0bad7dd92a233c21bcf01e6b748b81fa43bad" translate="yes" xml:space="preserve">
          <source>When a function is used as an event handler, its &lt;code&gt;this&lt;/code&gt; is set to the element on which the listener is placed (some browsers do not follow this convention for listeners added dynamically with methods other than &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener&quot;&gt;&lt;code&gt;addEventListener()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827db5617a07e1bc83cbbf68125bec5e816787c3" translate="yes" xml:space="preserve">
          <source>When a function is used as an event handler, its &lt;code&gt;this&lt;/code&gt; is set to the element the event fired from (some browsers do not follow this convention for listeners added dynamically with methods other than &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener&quot;&gt;&lt;code&gt;addEventListener()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Cuando una funci&amp;oacute;n se utiliza como un controlador de eventos, su &lt;code&gt;this&lt;/code&gt; se establece en el elemento del evento disparado desde (algunos navegadores no siguen esta convenci&amp;oacute;n para los oyentes a&amp;ntilde;adido din&amp;aacute;micamente con m&amp;eacute;todos distintos de &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener&quot;&gt; &lt;code&gt;addEventListener()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="fdf50a81297c2366a07db4501727452f4ccadd5a" translate="yes" xml:space="preserve">
          <source>When a generator is finished, subsequent &lt;code&gt;next()&lt;/code&gt; calls will not execute any of that generator's code, they will just return an object of this form: &lt;code&gt;{value: undefined, done: true}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af1531783783ee5d0832a4b4e64b4886b45cf81" translate="yes" xml:space="preserve">
          <source>When a generator is finished, subsequent &lt;code&gt;next&lt;/code&gt; calls will not execute any of that generator's code, they will just return an object of this form: &lt;code&gt;{value: undefined, done: true}&lt;/code&gt;.</source>
          <target state="translated">Cuando un generador est&amp;aacute; terminado, las &lt;code&gt;next&lt;/code&gt; llamadas posteriores no ejecutar&amp;aacute;n ninguno de los c&amp;oacute;digos de ese generador, solo devolver&amp;aacute;n un objeto de esta forma: &lt;code&gt;{value: undefined, done: true}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0bf258f3df79b96ae9c390090569c9b163176dca" translate="yes" xml:space="preserve">
          <source>When a non-strict function &lt;strong&gt;does&lt;/strong&gt; contain rest, default, or destructured parameters, then the values in the &lt;code&gt;arguments&lt;/code&gt; object &lt;strong&gt;do not&lt;/strong&gt; track the values of the arguments. Instead, they reflect the arguments provided when the function was called:</source>
          <target state="translated">Cuando una funci&amp;oacute;n &lt;strong&gt;no&lt;/strong&gt; estricta contiene par&amp;aacute;metros rest, predeterminados o desestructurados, los valores del objeto de &lt;code&gt;arguments&lt;/code&gt; &lt;strong&gt;no&lt;/strong&gt; siguen los valores de los argumentos. En cambio, reflejan los argumentos proporcionados cuando se llam&amp;oacute; a la funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="8dac29556cd94c74fd383d38d328c4d37042fc32" translate="yes" xml:space="preserve">
          <source>When a property is marked as non-configurable, &lt;code&gt;delete&lt;/code&gt; won't have any effect, and will return &lt;code&gt;false&lt;/code&gt;. In strict mode this will raise a &lt;code&gt;SyntaxError&lt;/code&gt;.</source>
          <target state="translated">Cuando una propiedad est&amp;aacute; marcada como no configurable, la &lt;code&gt;delete&lt;/code&gt; no tendr&amp;aacute; ning&amp;uacute;n efecto y devolver&amp;aacute; &lt;code&gt;false&lt;/code&gt; . En modo estricto, esto generar&amp;aacute; un &lt;code&gt;SyntaxError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6de26a10ac7887706ed2547e09d810036d94f142" translate="yes" xml:space="preserve">
          <source>When a property is marked as non-configurable, &lt;code&gt;delete&lt;/code&gt; won't have any effect, and will return &lt;code&gt;false&lt;/code&gt;. In strict mode this will raise a &lt;code&gt;TypeError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9001787bc78b5a739f6abcef298c63a813005132" translate="yes" xml:space="preserve">
          <source>When a regex has the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Advanced_searching_with_flags_2&quot;&gt;global flag&lt;/a&gt; set, &lt;code&gt;test()&lt;/code&gt; will advance the &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; of the regex. (&lt;a href=&quot;exec&quot;&gt;&lt;code&gt;RegExp.prototype.exec()&lt;/code&gt;&lt;/a&gt; also advances the &lt;code&gt;lastIndex&lt;/code&gt; property.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36615bffa2220f2be681e6f5d574bc4c7a1dc6b6" translate="yes" xml:space="preserve">
          <source>When a single, unconditional &lt;code&gt;catch&lt;/code&gt; clause is used, the &lt;code&gt;catch&lt;/code&gt; block is entered when any exception is thrown. For example, when the exception occurs in the following code, control transfers to the &lt;code&gt;catch&lt;/code&gt; clause.</source>
          <target state="translated">Cuando se usa una &amp;uacute;nica cl&amp;aacute;usula &lt;code&gt;catch&lt;/code&gt; incondicional , se ingresa al bloque &lt;code&gt;catch&lt;/code&gt; cuando se lanza cualquier excepci&amp;oacute;n. Por ejemplo, cuando se produce la excepci&amp;oacute;n en el siguiente c&amp;oacute;digo, el control se transfiere a la cl&amp;aacute;usula &lt;code&gt;catch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4c278dd38e2da16f2fc4ed295fa46fdb5f51e34" translate="yes" xml:space="preserve">
          <source>When a static or prototype method is called without a value for &lt;a href=&quot;operators/this&quot;&gt;&lt;code&gt;this&lt;/code&gt;&lt;/a&gt;, such as by assigning the method to a variable and then calling it, the &lt;code&gt;this&lt;/code&gt; value will be &lt;code&gt;undefined&lt;/code&gt; inside the method. This behavior will be the same even if the &lt;a href=&quot;strict_mode&quot;&gt;&lt;code&gt;&quot;use strict&quot;&lt;/code&gt;&lt;/a&gt; directive isn't present, because code within the &lt;code&gt;class&lt;/code&gt; body's syntactic boundary is always executed in strict mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754f04a903d205e8befb7e425f8e0abae32114de" translate="yes" xml:space="preserve">
          <source>When a static or prototype method is called without a value for &lt;em&gt;this&lt;/em&gt;, the &lt;em&gt;this&lt;/em&gt; value will be &lt;code&gt;undefined&lt;/code&gt; inside the method. This behavior will be the same even if the &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; directive isn't present, because code within the &lt;code&gt;class&lt;/code&gt; body's syntactic boundary is always executed in strict mode.</source>
          <target state="translated">Cuando se llama a un m&amp;eacute;todo est&amp;aacute;tico o prototipo sin un valor para &lt;em&gt;esto&lt;/em&gt; , &lt;em&gt;este&lt;/em&gt; valor no estar&amp;aacute; &lt;code&gt;undefined&lt;/code&gt; dentro del m&amp;eacute;todo. Este comportamiento ser&amp;aacute; el mismo incluso si la directiva &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; no est&amp;aacute; presente, porque el c&amp;oacute;digo dentro del l&amp;iacute;mite sint&amp;aacute;ctico del cuerpo de la &lt;code&gt;class&lt;/code&gt; siempre se ejecuta en modo estricto.</target>
        </trans-unit>
        <trans-unit id="f5b3d6b3c7b4846e071c23a9b9c9b211885932b6" translate="yes" xml:space="preserve">
          <source>When a target object has been reclaimed, it is no longer registered in the registry. There is no need to all &lt;code&gt;unregister&lt;/code&gt; in your cleanup callback. Only call &lt;code&gt;unregister&lt;/code&gt; if you haven't received a cleanup callback and no longer need to receive one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcb613d93697c0a1719836f81b6f96ffca6c11f" translate="yes" xml:space="preserve">
          <source>When a value is assigned to the property name (this.name = name;) JavaScript needs to set that property. When this happens, the setter function is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6fbf4c1276a4e0854143d9918e3137304eb0ee" translate="yes" xml:space="preserve">
          <source>When a value is simply returned from within a &lt;code&gt;then&lt;/code&gt; handler, it will effectively return &lt;code&gt;Promise.resolve(&amp;lt;value returned by whichever handler was called&amp;gt;)&lt;/code&gt;.</source>
          <target state="translated">Cuando un valor se devuelve desde el interior de una &lt;code&gt;then&lt;/code&gt; manipulador, se volver&amp;aacute; efectivamente &lt;code&gt;Promise.resolve(&amp;lt;value returned by whichever handler was called&amp;gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca4d9f32ca7e30739d42845bcfe6fe53dad17e49" translate="yes" xml:space="preserve">
          <source>When adding &lt;code&gt;'use strict';&lt;/code&gt;, the following cases will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; before the script is executing:</source>
          <target state="translated">Al agregar &lt;code&gt;'use strict';&lt;/code&gt; , los siguientes casos arrojar&amp;aacute;n un &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; antes de que se ejecute el script:</target>
        </trans-unit>
        <trans-unit id="2dd0f86b8f00cb026fff6920349bd1c5cbfcb1da" translate="yes" xml:space="preserve">
          <source>When altering the behavior of existing &lt;code&gt;Object.prototype&lt;/code&gt; methods, consider injecting code by wrapping your extension before or after the existing logic. For example, this (untested) code will pre-conditionally execute custom logic before the built-in logic or someone else's extension is executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24dea5e139e5d4c37dc76aae9b33a1b797414045" translate="yes" xml:space="preserve">
          <source>When altering the behavior of existing Object.prototype methods, consider injecting code by wrapping your extension before or after the existing logic. For example, this (untested) code will pre-conditionally execute custom logic before the built-in logic or someone else's extension is executed.</source>
          <target state="translated">Al alterar el comportamiento de los métodos existentes de Object.prototype,considere la posibilidad de inyectar código envolviendo su extensión antes o después de la lógica existente.Por ejemplo,este código (no probado)ejecutará de forma precondicional la lógica personalizada antes de que se ejecute la lógica incorporada o la extensión de otra persona.</target>
        </trans-unit>
        <trans-unit id="f8eb1f519c9dfc61d048d60e4ec167b43b593072" translate="yes" xml:space="preserve">
          <source>When an exception is thrown in the &lt;code&gt;try&lt;/code&gt; block, &lt;em&gt;&lt;code&gt;exception_var&lt;/code&gt;&lt;/em&gt; (e.g. the &lt;code&gt;e&lt;/code&gt; in &lt;code&gt;catch (e)&lt;/code&gt;) holds the value specified by the &lt;code&gt;throw&lt;/code&gt; statement. You can use this identifier to get information about the exception that was thrown. This identifier is local to the &lt;code&gt;catch&lt;/code&gt; clause. That is, it is created when the &lt;code&gt;catch&lt;/code&gt; clause is entered, and after the &lt;code&gt;catch&lt;/code&gt; clause finishes executing, the identifier is no longer available.</source>
          <target state="translated">Cuando se lanza una excepci&amp;oacute;n en el bloque &lt;code&gt;try&lt;/code&gt; , &lt;em&gt; &lt;code&gt;exception_var&lt;/code&gt; &lt;/em&gt; (por ejemplo, la &lt;code&gt;e&lt;/code&gt; en &lt;code&gt;catch (e)&lt;/code&gt; ) contiene el valor especificado por la instrucci&amp;oacute;n &lt;code&gt;throw&lt;/code&gt; . Puede utilizar este identificador para obtener informaci&amp;oacute;n sobre la excepci&amp;oacute;n que se lanz&amp;oacute;. Este identificador es local para la cl&amp;aacute;usula &lt;code&gt;catch&lt;/code&gt; . Es decir, que se crea cuando el &lt;code&gt;catch&lt;/code&gt; se introduce la cl&amp;aacute;usula, y despu&amp;eacute;s de la &lt;code&gt;catch&lt;/code&gt; cl&amp;aacute;usula termina de ejecutarse, el identificador ya no est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="b794d6a02c7641c4b0455b12d48123fbba55c55a" translate="yes" xml:space="preserve">
          <source>When an exception is thrown in the &lt;code&gt;try&lt;/code&gt;-block, &lt;em&gt;&lt;code&gt;exception_var&lt;/code&gt;&lt;/em&gt; (i.e., the &lt;code&gt;e&lt;/code&gt; in &lt;code&gt;catch (e)&lt;/code&gt;) holds the exception value. You can use this identifier to get information about the exception that was thrown. This identifier is only available in the &lt;code&gt;catch&lt;/code&gt;-block's &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Scope&quot;&gt;scope&lt;/a&gt;. If you don't need the exception value, it could be omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd2f6f2698e6164d709733fd82e7fd7e003a3eb" translate="yes" xml:space="preserve">
          <source>When an expression exists after a valid &lt;code&gt;return&lt;/code&gt; statement, a warning is given to indicate that the code after the &lt;code&gt;return&lt;/code&gt; statement is unreachable, meaning it can never be run.</source>
          <target state="translated">Cuando existe una expresi&amp;oacute;n despu&amp;eacute;s de una declaraci&amp;oacute;n de &lt;code&gt;return&lt;/code&gt; v&amp;aacute;lida , se da una advertencia para indicar que el c&amp;oacute;digo despu&amp;eacute;s de la declaraci&amp;oacute;n de &lt;code&gt;return&lt;/code&gt; es inalcanzable, lo que significa que nunca se puede ejecutar.</target>
        </trans-unit>
        <trans-unit id="bb0ff1002ee4c47b8a3480265f2da081f6bc262f" translate="yes" xml:space="preserve">
          <source>When applying compatibility normalization it's important to consider what you intend to do with the strings, since the normalized form may not be appropriate for all applications. In the example above the normalization is appropriate for search, because it enables a user to find the string by searching for &lt;code&gt;&quot;f&quot;&lt;/code&gt;. But it may not be appropriate for display, because the visual representation is different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a1f6e25dd4b3d3d70cae80df44a55c86d29543" translate="yes" xml:space="preserve">
          <source>When bound function is called, it calls internal method&lt;strong&gt; [[Call]]&lt;/strong&gt; on &lt;strong&gt;[[BoundTargetFunction]], &lt;/strong&gt;with following arguments &lt;strong&gt;Call(&lt;em&gt;boundThis&lt;/em&gt;, &lt;em&gt;args&lt;/em&gt;).&lt;/strong&gt; Where, &lt;strong&gt;&lt;em&gt;boundThis &lt;/em&gt;&lt;/strong&gt;is &lt;strong&gt;[[BoundThis]]&lt;/strong&gt;, &lt;em&gt;&lt;strong&gt;args &lt;/strong&gt;&lt;/em&gt;is &lt;strong&gt;[[BoundArguments]]&lt;/strong&gt; followed by the arguments passed by the function call.</source>
          <target state="translated">Cuando se llama a la funci&amp;oacute;n vinculada, llama al m&amp;eacute;todo interno &lt;strong&gt;[[Call]]&lt;/strong&gt; en &lt;strong&gt;[[BoundTargetFunction]],&lt;/strong&gt; con los siguientes argumentos &lt;strong&gt;Call ( &lt;em&gt;boundThis&lt;/em&gt; , &lt;em&gt;args&lt;/em&gt; ). &lt;/strong&gt;Donde, &lt;strong&gt;&lt;em&gt;boundThis&lt;/em&gt;&lt;/strong&gt; es &lt;strong&gt;[[BoundThis]]&lt;/strong&gt; , &lt;em&gt;&lt;strong&gt;args&lt;/strong&gt;&lt;/em&gt; es &lt;strong&gt;[[BoundArguments]]&lt;/strong&gt; seguido de los argumentos pasados ​​por la llamada a la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f2fa57d92f2b1d0c57672adb2010e986a6a11349" translate="yes" xml:space="preserve">
          <source>When called in a non-constructor context, &lt;code&gt;Object&lt;/code&gt; behaves identically to &lt;code&gt;new Object()&lt;/code&gt;.</source>
          <target state="translated">Cuando se llama en un contexto que no es de constructor, &lt;code&gt;Object&lt;/code&gt; se comporta de manera id&amp;eacute;ntica a &lt;code&gt;new Object()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c45cbc0f99c0a40dca0a1833e10d6052bf8be295" translate="yes" xml:space="preserve">
          <source>When called on &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, for example, &lt;code&gt;String.prototype.toUpperCase.call(undefined)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f37da33d78e3d0ad312a8b2ec1fd4558bc132e5b" translate="yes" xml:space="preserve">
          <source>When called via &lt;code&gt;new&lt;/code&gt;, the &lt;code&gt;Promise&lt;/code&gt; constructor returns a promise object. The promise object will become &quot;resolved&quot; when either of the functions &lt;code&gt;resolutionFunc&lt;/code&gt; or &lt;code&gt;rejectionFunc&lt;/code&gt; are invoked. Note that if you call &lt;code&gt;resolutionFunc&lt;/code&gt; or &lt;code&gt;rejectionFunc&lt;/code&gt; and pass another Promise object as an argument, you can say that it is &quot;resolved&quot;, but still cannot be said to be &quot;settled&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabfb2ceb2c0d3b7289e9a3c6ba8430b9b36a5b6" translate="yes" xml:space="preserve">
          <source>When called with a &lt;code&gt;&lt;var&gt;buffer&lt;/var&gt;&lt;/code&gt;, and optionally a &lt;code&gt;&lt;var&gt;byteOffset&lt;/var&gt;&lt;/code&gt; and a &lt;code&gt;&lt;var&gt;length&lt;/var&gt;&lt;/code&gt; argument, a new typed array view is created that views the specified &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;&lt;var&gt;byteOffset&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;length&lt;/var&gt;&lt;/code&gt; parameters specify the memory range that will be exposed by the typed array view. If both are omitted, all of &lt;code&gt;&lt;var&gt;buffer&lt;/var&gt;&lt;/code&gt; is viewed; if only &lt;code&gt;&lt;var&gt;length&lt;/var&gt;&lt;/code&gt; is omitted, the remainder of &lt;code&gt;&lt;var&gt;buffer&lt;/var&gt;&lt;/code&gt; is viewed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d42ecec93e09021c6d947265107f5e363571b3e" translate="yes" xml:space="preserve">
          <source>When called with a &lt;code&gt;&lt;var&gt;buffer&lt;/var&gt;&lt;/code&gt;, and optionally a &lt;code&gt;&lt;var&gt;byteOffset&lt;/var&gt;&lt;/code&gt; and a &lt;code&gt;&lt;var&gt;length&lt;/var&gt;&lt;/code&gt; argument, a new typed array view is created that views the specified &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;&lt;var&gt;byteOffset&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;length&lt;/var&gt;&lt;/code&gt; parameters specify the memory range that will be exposed by the typed array view. If both are omitted, all of &lt;code&gt;&lt;var&gt;buffer&lt;/var&gt;&lt;/code&gt; is viewed; if only &lt;code&gt;&lt;var&gt;length&lt;/var&gt;&lt;/code&gt; is omitted, the remainder of &lt;code&gt;&lt;var&gt;buffer&lt;/var&gt;&lt;/code&gt; is viewed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6778c7bfa449116dc6be2d6505848378361d502" translate="yes" xml:space="preserve">
          <source>When called with a &lt;code&gt;&lt;var&gt;length&lt;/var&gt;&lt;/code&gt; argument, an internal array buffer is created in memory, of size &lt;code&gt;&lt;var&gt;length&lt;/var&gt;&lt;/code&gt;&lt;em&gt; multiplied by &lt;code&gt;BYTES_PER_ELEMENT&lt;/code&gt;&lt;/em&gt; bytes, containing zeros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2dfab6068fa88fecc11b060fd275bcb960df58d" translate="yes" xml:space="preserve">
          <source>When called with a &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt; argument, which can be an object of any of the typed array types (such as &lt;code&gt;Int32Array&lt;/code&gt;), the &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt; gets copied into a new typed array. Each value in &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt; is converted to the corresponding type of the constructor before being copied into the new array. The length of the new typed array will be same as the length of the &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480f55670d2a3d9bcb889fa0cfe5b80525aa5464" translate="yes" xml:space="preserve">
          <source>When called with a &lt;code&gt;buffer&lt;/code&gt;, and optionally a &lt;code&gt;byteOffset&lt;/code&gt; and a &lt;code&gt;length&lt;/code&gt; argument, a new typed array view is created that views the specified &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;byteOffset&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; parameters specify the memory range that will be exposed by the typed array view. If both are omitted, all of &lt;code&gt;buffer&lt;/code&gt; is viewed; if only &lt;code&gt;length&lt;/code&gt; is omitted, the remainder of &lt;code&gt;buffer&lt;/code&gt; is viewed.</source>
          <target state="translated">Cuando se llama con un &lt;code&gt;buffer&lt;/code&gt; y, opcionalmente, un &lt;code&gt;byteOffset&lt;/code&gt; y un argumento de &lt;code&gt;length&lt;/code&gt; , se crea una nueva vista de matriz con tipo que ve el &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; especificado . Los par&amp;aacute;metros &lt;code&gt;byteOffset&lt;/code&gt; y &lt;code&gt;length&lt;/code&gt; especifican el rango de memoria que ser&amp;aacute; expuesto por la vista de matriz escrita. Si se omiten ambos, se visualiza todo el &lt;code&gt;buffer&lt;/code&gt; ; si solo se omite la &lt;code&gt;length&lt;/code&gt; , se visualiza el resto del &lt;code&gt;buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b66b1b26da86f54f2d85e2b1b7e352401ab639d" translate="yes" xml:space="preserve">
          <source>When called with a &lt;code&gt;length&lt;/code&gt; argument, an internal array buffer is created in memory, of size &lt;em&gt;length multiplied by BYTES_PER_ELEMENT&lt;/em&gt; bytes, containing zeros.</source>
          <target state="translated">Cuando se llama con un argumento de &lt;code&gt;length&lt;/code&gt; , se crea un b&amp;uacute;fer de matriz interno en la memoria, de tama&amp;ntilde;o de &lt;em&gt;longitud multiplicado por BYTES_PER_ELEMENT&lt;/em&gt; bytes, que contiene ceros.</target>
        </trans-unit>
        <trans-unit id="ad7abc1659621f65bd139111aa3b7fb73eecc89d" translate="yes" xml:space="preserve">
          <source>When called with a &lt;code&gt;typedArray&lt;/code&gt; argument, which can be an object of any of the typed array types (such as &lt;code&gt;Int32Array&lt;/code&gt;), the &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt; gets copied into a new typed array. Each value in &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt; is converted to the corresponding type of the constructor before being copied into the new array. The length of the new typed array will be same as the length of the &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a01aa6745ceb790a15b401ce2371215524e86a" translate="yes" xml:space="preserve">
          <source>When called with a &lt;code&gt;typedArray&lt;/code&gt; argument, which can be an object of any of the typed array types (such as &lt;code&gt;Int32Array&lt;/code&gt;), the &lt;code&gt;typedArray&lt;/code&gt; gets copied into a new typed array. Each value in &lt;code&gt;typedArray&lt;/code&gt; is converted to the corresponding type of the constructor before being copied into the new array. The length of the new typed array will be same as the length of the &lt;code&gt;typedArray&lt;/code&gt; argument.</source>
          <target state="translated">Cuando se llama con un argumento &lt;code&gt;typedArray&lt;/code&gt; , que puede ser un objeto de cualquiera de los tipos de matriz con tipo (como &lt;code&gt;Int32Array&lt;/code&gt; ), &lt;code&gt;typedArray&lt;/code&gt; se copia en una nueva matriz con tipo. Cada valor en &lt;code&gt;typedArray&lt;/code&gt; se convierte al tipo correspondiente del constructor antes de copiarse en la nueva matriz. La longitud de la nueva matriz con tipo ser&amp;aacute; la misma que la longitud del argumento &lt;code&gt;typedArray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4615504485ccbed026732920e1001228fad09f71" translate="yes" xml:space="preserve">
          <source>When called with an &lt;code&gt;&lt;var&gt;object&lt;/var&gt;&lt;/code&gt; argument, a new typed array is created as if by the &lt;code&gt;&lt;var&gt;TypedArray&lt;/var&gt;.from()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65612a3309ec2c1ea8f3fd5fa8380c5307a38064" translate="yes" xml:space="preserve">
          <source>When called with an &lt;code&gt;object&lt;/code&gt; argument, a new typed array is created as if by the &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from()&lt;/code&gt; method.</source>
          <target state="translated">Cuando se llama con un argumento de &lt;code&gt;object&lt;/code&gt; , se crea una nueva matriz con tipo como si fuera el &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0ca3d8e209bb22f7debe6d488edea2068e56aae" translate="yes" xml:space="preserve">
          <source>When calling &lt;a href=&quot;../../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../reflect/defineproperty&quot;&gt;&lt;code&gt;Reflect.defineProperty()&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;descriptor&lt;/code&gt; passed to &lt;code&gt;defineProperty()&lt;/code&gt; trap has one restriction&amp;mdash;only following properties are usable (non-standard properties will be ignored):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29dcd984b9a7fb1349ad4ddb19c41e43536ea5f" translate="yes" xml:space="preserve">
          <source>When calling &lt;a href=&quot;../../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../reflect/defineproperty&quot;&gt;&lt;code&gt;Reflect.defineProperty()&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;descriptor&lt;/code&gt; passed to &lt;code&gt;defineProperty&lt;/code&gt; trap has one restriction - only following properties are usable, nonstandard properties will be ignored:</source>
          <target state="translated">Al llamar a &lt;a href=&quot;../../object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;../../reflect/defineproperty&quot;&gt; &lt;code&gt;Reflect.defineProperty()&lt;/code&gt; &lt;/a&gt; , el &lt;code&gt;descriptor&lt;/code&gt; pasado a la trampa &lt;code&gt;defineProperty&lt;/code&gt; tiene una restricci&amp;oacute;n: solo se pueden usar las siguientes propiedades, las propiedades no est&amp;aacute;ndar se ignorar&amp;aacute;n:</target>
        </trans-unit>
        <trans-unit id="164ca91b3b90224d15b72b241ebe09d2d6dff26b" translate="yes" xml:space="preserve">
          <source>When calling a constructor with &lt;a href=&quot;new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; it's not possible to &lt;strong&gt;directly&lt;/strong&gt; use an array and &lt;code&gt;apply()&lt;/code&gt; (&lt;code&gt;apply()&lt;/code&gt; does a &lt;code&gt;[[Call]]&lt;/code&gt; and not a &lt;code&gt;[[Construct]]&lt;/code&gt;). However, an array can be easily used with &lt;code&gt;new&lt;/code&gt; thanks to spread syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1b55e9d5c398fb3c9268884017bf143b3953ab" translate="yes" xml:space="preserve">
          <source>When calling a constructor with &lt;code&gt;new&lt;/code&gt;, it's not possible to &lt;strong&gt;directly&lt;/strong&gt; use an array and &lt;code&gt;apply&lt;/code&gt; (&lt;code&gt;apply&lt;/code&gt; does a &lt;code&gt;[[Call]]&lt;/code&gt; and not a &lt;code&gt;[[Construct]]&lt;/code&gt;). However, an array can be easily used with &lt;code&gt;new&lt;/code&gt; thanks to spread syntax:</source>
          <target state="translated">Cuando se llama a un constructor con &lt;code&gt;new&lt;/code&gt; , no es posible usar &lt;strong&gt;directamente&lt;/strong&gt; una matriz y &lt;code&gt;apply&lt;/code&gt; ( &lt;code&gt;apply&lt;/code&gt; hace un &lt;code&gt;[[Call]]&lt;/code&gt; y no un &lt;code&gt;[[Construct]]&lt;/code&gt; ). Sin embargo, una matriz se puede usar f&amp;aacute;cilmente con &lt;code&gt;new&lt;/code&gt; gracias a la sintaxis de propagaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="829a732fe2ba31465b1866fd100163c023907142" translate="yes" xml:space="preserve">
          <source>When checking for &lt;code&gt;Array&lt;/code&gt; instance, &lt;code&gt;Array.isArray&lt;/code&gt; is preferred over &lt;code&gt;instanceof&lt;/code&gt; because it works through &lt;code&gt;iframes&lt;/code&gt;.</source>
          <target state="translated">Al buscar una instancia de &lt;code&gt;Array&lt;/code&gt; , se prefiere &lt;code&gt;Array.isArray&lt;/code&gt; sobre &lt;code&gt;instanceof&lt;/code&gt; porque funciona a trav&amp;eacute;s de &lt;code&gt;iframes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c810bbabef81f8c6d763de3d3ed3fd437b89c17b" translate="yes" xml:space="preserve">
          <source>When checking for &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, beware of the &lt;a href=&quot;../operators/comparison_operators&quot;&gt;differences between equality (==) and identity (===) operators&lt;/a&gt;, as the former performs type-conversion.</source>
          <target state="translated">Al verificar si hay &lt;code&gt;null&lt;/code&gt; o &lt;code&gt;undefined&lt;/code&gt; , tenga cuidado con las &lt;a href=&quot;../operators/comparison_operators&quot;&gt;diferencias entre los operadores de igualdad (==) e identidad (===)&lt;/a&gt; , ya que el primero realiza la conversi&amp;oacute;n de tipo.</target>
        </trans-unit>
        <trans-unit id="e19cdbf310bd55195065d928246b5d7abe10f633" translate="yes" xml:space="preserve">
          <source>When checking for &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, beware of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators&quot;&gt;differences between equality (==) and identity (===) operators&lt;/a&gt;, as the former performs type-conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb817b3ade0ac387d420c7fa20d43d45c1488402" translate="yes" xml:space="preserve">
          <source>When comparing a number and a string, the string is converted to a number value. JavaScript attempts to convert the string numeric literal to a &lt;code&gt;Number&lt;/code&gt; type value. First, a mathematical value is derived from the string numeric literal. Next, this value is rounded to nearest &lt;code&gt;Number&lt;/code&gt; type value.</source>
          <target state="translated">Al comparar un n&amp;uacute;mero y una cadena, la cadena se convierte en un valor num&amp;eacute;rico. JavaScript intenta convertir la cadena literal num&amp;eacute;rica a un valor de tipo &lt;code&gt;Number&lt;/code&gt; . Primero, un valor matem&amp;aacute;tico se deriva de la cadena literal num&amp;eacute;rica. A continuaci&amp;oacute;n, este valor se redondea al valor de tipo de &lt;code&gt;Number&lt;/code&gt; m&amp;aacute;s cercano .</target>
        </trans-unit>
        <trans-unit id="78f10c5f447abdf5467bbbcb74311e6a39dbcc67" translate="yes" xml:space="preserve">
          <source>When comparing a number to a string, try to convert the string to a numeric value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b998eb423464e5443bc464f2a4fa7bc4658bbe8" translate="yes" xml:space="preserve">
          <source>When comparing large numbers of strings, such as in sorting large arrays, it is better to create an &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Intl.Collator&lt;/code&gt;&lt;/a&gt; object and use the function provided by its &lt;a href=&quot;../collator/compare&quot;&gt;&lt;code&gt;compare&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">Al comparar un gran n&amp;uacute;mero de cadenas, como al ordenar matrices grandes, es mejor crear un objeto &lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Intl.Collator&lt;/code&gt; &lt;/a&gt; y utilizar la funci&amp;oacute;n proporcionada por su propiedad de &lt;a href=&quot;../collator/compare&quot;&gt; &lt;code&gt;compare&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1fba2f233481ae6db2d320bc02abd4df9a6a3944" translate="yes" xml:space="preserve">
          <source>When comparing large numbers of strings, such as in sorting large arrays, it is better to create an &lt;a href=&quot;../intl/collator&quot;&gt;&lt;code&gt;Intl.Collator&lt;/code&gt;&lt;/a&gt; object and use the function provided by its &lt;a href=&quot;../intl/collator/compare&quot;&gt;&lt;code&gt;compare&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ecefcafbf7143f87fe3ad4276f62e616d8be92" translate="yes" xml:space="preserve">
          <source>When copy pasting code from external sources, there might be invalid characters. Watch out!</source>
          <target state="translated">Al copiar el código de pegado de fuentes externas,puede haber caracteres no válidos.¡Cuidado!</target>
        </trans-unit>
        <trans-unit id="92aa3f970f388cdea751a9c03b575d4726043cbf" translate="yes" xml:space="preserve">
          <source>When creating a function inline, you can pass it once, instead of being forced to either declare it twice, or create a variable for it</source>
          <target state="translated">Cuando se crea una función en línea,se puede pasar una vez,en lugar de ser obligado a declararla dos veces,o crear una variable para ella</target>
        </trans-unit>
        <trans-unit id="fb29ed3782eb6e8c7b9a47c7152ab085c4ee55e4" translate="yes" xml:space="preserve">
          <source>When creating an &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../global_objects/arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; which has a length which is either negative or larger or equal to 2&lt;sup&gt;32&lt;/sup&gt;, or</source>
          <target state="translated">Al crear un &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; o un &lt;a href=&quot;../global_objects/arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; que tiene una longitud que es negativa o mayor o igual a 2 &lt;sup&gt;32&lt;/sup&gt; , o</target>
        </trans-unit>
        <trans-unit id="9ce85cff2ff06d554ee3fee1c19371971f075401" translate="yes" xml:space="preserve">
          <source>When creating an API, remember that async iterables are designed to represent something &lt;em&gt;iterable&lt;/em&gt; &amp;mdash; like a stream of data or a list &amp;mdash;, not to completely replace callbacks and events in most situations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3f084abba28b7f74872d722bda68eb9cc74887" translate="yes" xml:space="preserve">
          <source>When creating an instance of a &lt;code&gt;&lt;var&gt;TypedArray&lt;/var&gt;&lt;/code&gt; (e.g. &lt;code&gt;Int8Array&lt;/code&gt;), an array buffer is created internally in memory or, if an &lt;code&gt;ArrayBuffer&lt;/code&gt; object is given as constructor argument, then this is used instead. The buffer address is saved as an internal property of the instance and all the methods of &lt;code&gt;%&lt;var&gt;TypedArray&lt;/var&gt;%.prototype&lt;/code&gt;, i.e. set value and get value etc., operate on that array buffer address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69e8046aa7fccd7b5d969872d4384fc6a0c4007" translate="yes" xml:space="preserve">
          <source>When creating an instance of a &lt;em&gt;TypedArray&lt;/em&gt; (e.g. &lt;code&gt;Int8Array&lt;/code&gt;), an array buffer is created internally in memory or, if an &lt;code&gt;ArrayBuffer&lt;/code&gt; object is given as constructor argument, then this is used instead. The buffer address is saved as an internal property of the instance and all the methods of %&lt;code&gt;TypedArray&lt;/code&gt;%.&lt;code&gt;prototype&lt;/code&gt;, i.e. set value and get value etc., operate on that array buffer address.</source>
          <target state="translated">Cuando se crea una instancia de &lt;em&gt;TypedArray&lt;/em&gt; (por ejemplo, &lt;code&gt;Int8Array&lt;/code&gt; ), se crea un b&amp;uacute;fer de matriz internamente en la memoria o, si se proporciona un objeto &lt;code&gt;ArrayBuffer&lt;/code&gt; como argumento del constructor, se utiliza en su lugar. La direcci&amp;oacute;n del b&amp;uacute;fer se guarda como una propiedad interna de la instancia y todos los m&amp;eacute;todos de% &lt;code&gt;TypedArray&lt;/code&gt; %. &lt;code&gt;prototype&lt;/code&gt; , es decir, establecer valor y obtener valor, etc., operan en esa direcci&amp;oacute;n de b&amp;uacute;fer de matriz.</target>
        </trans-unit>
        <trans-unit id="848fe3152ea8cf2213725f8d8f0cb1c72c7aeff9" translate="yes" xml:space="preserve">
          <source>When creating objects with the &lt;a href=&quot;../operators/object_initializer&quot;&gt;object initializer&lt;/a&gt; syntax, a colon (&lt;code&gt;:&lt;/code&gt;) separates keys and values for the object's properties.</source>
          <target state="translated">Al crear objetos con el &lt;a href=&quot;../operators/object_initializer&quot;&gt;inicializador de objeto&lt;/a&gt; de sintaxis, dos puntos ( &lt;code&gt;:&lt;/code&gt; ) separa claves y valores para las propiedades del objeto.</target>
        </trans-unit>
        <trans-unit id="811ae55de8ff23ccbb206ac9028d18485810a132" translate="yes" xml:space="preserve">
          <source>When creating your own class, JavaScript defaults to the &quot;Object&quot; tag:</source>
          <target state="translated">Al crear su propia clase,JavaScript utiliza por defecto la etiqueta &quot;Objeto&quot;:</target>
        </trans-unit>
        <trans-unit id="115da9b5a1b5c0a8d85c307063ade15b5ea130a8" translate="yes" xml:space="preserve">
          <source>When deconstructing an object, if a property is not accessed in itself, it will continue to look up along the prototype chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a35fd88284260574b82c190c6810c0f4d57809" translate="yes" xml:space="preserve">
          <source>When defining non-writable properties with e.g. &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;super&lt;/code&gt; cannot overwrite the value of the property.</source>
          <target state="translated">Al definir propiedades que no se pueden escribir con, por ejemplo , &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;super&lt;/code&gt; no puede sobrescribir el valor de la propiedad.</target>
        </trans-unit>
        <trans-unit id="f8b662c2041edd35c3fb67e22f3c61773eddc7f6" translate="yes" xml:space="preserve">
          <source>When destructuring an array, you can unpack and assign the remaining part of it to a variable using the rest pattern:</source>
          <target state="translated">Cuando se desestructura una matriz,se puede desempacar y asignar la parte restante a una variable usando el patrón de reposo:</target>
        </trans-unit>
        <trans-unit id="b3a2e8f2f363d4f7226449fe6785f1e5855fbb9e" translate="yes" xml:space="preserve">
          <source>When doing so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d53519e191f9772c933557ce0989e9f259738b" translate="yes" xml:space="preserve">
          <source>When formatting large numbers of dates, it is better to create an &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt; object and use the function provided by its &lt;a href=&quot;../datetimeformat/format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">Al formatear un gran n&amp;uacute;mero de fechas, es mejor crear un objeto &lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt; y utilizar la funci&amp;oacute;n proporcionada por su propiedad de &lt;a href=&quot;../datetimeformat/format&quot;&gt; &lt;code&gt;format&lt;/code&gt; o&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f820910b8d9c3361890d13549d8d81063476127d" translate="yes" xml:space="preserve">
          <source>When formatting large numbers of dates, it is better to create an &lt;a href=&quot;../intl/datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt; object and use the function provided by its &lt;a href=&quot;../intl/datetimeformat/format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06d87d5802844fdfc76a3ec1fd278898196877b" translate="yes" xml:space="preserve">
          <source>When formatting large numbers of numbers, it is better to create a &lt;a href=&quot;../intl/numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; object and use the function provided by its &lt;a href=&quot;../intl/numberformat/format&quot;&gt;&lt;code&gt;NumberFormat.format&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492dc853c99f4ea76af1f43ad96a8633c1800ed2" translate="yes" xml:space="preserve">
          <source>When formatting large numbers of numbers, it is better to create a &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; object and use the function provided by its &lt;a href=&quot;../numberformat/format&quot;&gt;&lt;code&gt;NumberFormat.format&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">Al formatear una gran cantidad de n&amp;uacute;meros, es mejor crear un objeto &lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt; y utilizar la funci&amp;oacute;n proporcionada por su propiedad &lt;a href=&quot;../numberformat/format&quot;&gt; &lt;code&gt;NumberFormat.format&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c9117db41c166291fc133ec408f22aae4de730f" translate="yes" xml:space="preserve">
          <source>When found, &lt;code&gt;&lt;var&gt;separator&lt;/var&gt;&lt;/code&gt; is removed from the string, and the substrings are returned in an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebdec7da01db2f6028dbcfdb1e980aa1f6f6050" translate="yes" xml:space="preserve">
          <source>When found, &lt;code&gt;separator&lt;/code&gt; is removed from the string and the substrings are returned in an array. If &lt;code&gt;separator&lt;/code&gt; is not found or is omitted, the array contains one element consisting of the entire string. If &lt;code&gt;separator&lt;/code&gt; is an empty string, &lt;code&gt;str&lt;/code&gt; is converted to an array of characters. If &lt;code&gt;separator&lt;/code&gt; appears at the beginning or end of the string, or both, the array begins, ends, or both begins and ends, respectively, with an empty string. Thus, if the string consists solely of one instance of &lt;code&gt;separator&lt;/code&gt;, the array consists of two empty strings.</source>
          <target state="translated">Cuando se encuentra, el &lt;code&gt;separator&lt;/code&gt; se elimina de la cadena y las subcadenas se devuelven en una matriz. Si el &lt;code&gt;separator&lt;/code&gt; no se encuentra o se omite, la matriz contiene un elemento que consta de toda la cadena. Si el &lt;code&gt;separator&lt;/code&gt; es una cadena vac&amp;iacute;a, &lt;code&gt;str&lt;/code&gt; se convierte en una matriz de caracteres. Si el &lt;code&gt;separator&lt;/code&gt; aparece al principio o al final de la cadena, o ambos, la matriz comienza, termina o ambos comienzan y terminan, respectivamente, con una cadena vac&amp;iacute;a. Por lo tanto, si la cadena consta &amp;uacute;nicamente de una instancia de &lt;code&gt;separator&lt;/code&gt; , la matriz consta de dos cadenas vac&amp;iacute;as.</target>
        </trans-unit>
        <trans-unit id="7f7675777c0bfc04100fd6e62d73b4f740f908cb" translate="yes" xml:space="preserve">
          <source>When functions are used only once, a common pattern is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE (Immediately Invokable Function Expression)&lt;/a&gt;.</source>
          <target state="translated">Cuando las funciones se usan solo una vez, un patr&amp;oacute;n com&amp;uacute;n es un &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE (Expresi&amp;oacute;n de funci&amp;oacute;n inmediatamente invocable)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="058624d9a5bcc81b74f77895cc75ba1d531aadf5" translate="yes" xml:space="preserve">
          <source>When functions are used only once, a common pattern is an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE (Immediately Invoked Function Expression)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121d1592fbace9d681e06d1f59f98a3226bf0806" translate="yes" xml:space="preserve">
          <source>When importing a default export with &lt;a href=&quot;#Dynamic_Imports&quot;&gt;dynamic imports&lt;/a&gt;, it works a bit differently. You need to destructure and rename the &quot;default&quot; key from the returned object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d001cb7886b88343943eb9d2b0c82cd43ba9ad" translate="yes" xml:space="preserve">
          <source>When importing statically significantly increases your program's memory usage and there is a low likelihood that you will need the code you are importing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f8d82831be9a8bfc9fbdbfa9b0886d8ecc763c" translate="yes" xml:space="preserve">
          <source>When importing statically significantly slows the loading of your code and there is a low likelihood that you will need the code you are importing, or you will not need it until a later time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af3902dead9ede4d7947de4aff957c6e1c807f8" translate="yes" xml:space="preserve">
          <source>When in strict mode, if &lt;code&gt;delete&lt;/code&gt; is used on a direct reference to a variable, a function argument or a function name, it will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;. &lt;/strong&gt;Therefore, to avoid syntax errors in strict mode, you must use the &lt;code&gt;delete&lt;/code&gt; operator in the form of &lt;code&gt;delete object.property&lt;/code&gt; or &lt;code&gt;delete object['property']&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2581f5a3001b3639145bb5073ddf3f10eed2e6" translate="yes" xml:space="preserve">
          <source>When in strict mode, if &lt;code&gt;delete&lt;/code&gt; is used on a direct reference to a variable, a function argument or a function name, it will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;</source>
          <target state="translated">Cuando est&amp;aacute; en modo estricto, si se usa &lt;code&gt;delete&lt;/code&gt; en una referencia directa a una variable, un argumento de funci&amp;oacute;n o un nombre de funci&amp;oacute;n, arrojar&amp;aacute; un &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;&lt;strong&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c3b1128b1380ec15ec79d6124c7bdc6efc6bbedc" translate="yes" xml:space="preserve">
          <source>When initializing fields &lt;code&gt;this&lt;/code&gt; refers to the class instance under construction. Just as in public instance methods, if you're in a subclass you can access the superclass prototype using &lt;code&gt;super&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99203ea748c437e6457c0bd0e04f5110446341b" translate="yes" xml:space="preserve">
          <source>When initializing fields, &lt;code&gt;this&lt;/code&gt; refers to the class constructor. You can also reference it by name, and use &lt;code&gt;super&lt;/code&gt; to get the superclass constructor (if one exists).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b109f3f8cbdaee42f58d11a43dafe9001d0559" translate="yes" xml:space="preserve">
          <source>When inspecting this code in an editor like Vim, you can see that there is actually a &lt;a href=&quot;https://en.wikipedia.org/wiki/Zero-width_space&quot;&gt;zero-width space (ZWSP) (U+200B)&lt;/a&gt; character.</source>
          <target state="translated">Al inspeccionar este c&amp;oacute;digo en un editor como Vim, puede ver que en realidad hay un car&amp;aacute;cter &lt;a href=&quot;https://en.wikipedia.org/wiki/Zero-width_space&quot;&gt;de espacio de ancho cero (ZWSP) (U + 200B)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ba524fec3c3fda174575270d8418d4c6b421c3c1" translate="yes" xml:space="preserve">
          <source>When invoking &lt;code&gt;Reflect.construct()&lt;/code&gt;, on the other hand, the &lt;code&gt;new.target&lt;/code&gt; operator will point to the &lt;code&gt;&lt;var&gt;newTarget&lt;/var&gt;&lt;/code&gt; parameter if supplied, or &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b550357098926dbffddda8f68fe6d4139f423d" translate="yes" xml:space="preserve">
          <source>When invoking &lt;code&gt;Reflect.construct()&lt;/code&gt;, on the other hand, the &lt;code&gt;new.target&lt;/code&gt; operator will point to the &lt;code&gt;newTarget&lt;/code&gt; parameter if supplied, or &lt;code&gt;target&lt;/code&gt; if not.</source>
          <target state="translated">Al invocar &lt;code&gt;Reflect.construct()&lt;/code&gt; , por otro lado, el operador &lt;code&gt;new.target&lt;/code&gt; apuntar&amp;aacute; al par&amp;aacute;metro &lt;code&gt;newTarget&lt;/code&gt; si se proporciona, o &lt;code&gt;target&lt;/code&gt; si no.</target>
        </trans-unit>
        <trans-unit id="318d5052adfc72cec8acd2647d9cfc464410f7b1" translate="yes" xml:space="preserve">
          <source>When memory is shared, multiple threads can read and write the same data in memory. Atomic operations make sure that predictable values are written and read, that operations are finished before the next operation starts and that operations are not interrupted.</source>
          <target state="translated">Cuando se comparte la memoria,múltiples hilos pueden leer y escribir los mismos datos en la memoria.Las operaciones atómicas aseguran que los valores predecibles se escriben y se leen,que las operaciones se terminan antes de que comience la siguiente operación y que las operaciones no se interrumpen.</target>
        </trans-unit>
        <trans-unit id="fa309baaca700a3857e2ce7234ebbe442b4df0d5" translate="yes" xml:space="preserve">
          <source>When methods like &lt;a href=&quot;../global_objects/object/create&quot;&gt;&lt;code&gt;Object.create()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../global_objects/object/defineproperties&quot;&gt;&lt;code&gt;Object.defineProperties()&lt;/code&gt;&lt;/a&gt; are used, the optional descriptor parameter expects a property descriptor object. Providing no object (like just a number), will throw an error:</source>
          <target state="translated">Cuando se utilizan m&amp;eacute;todos como &lt;a href=&quot;../global_objects/object/create&quot;&gt; &lt;code&gt;Object.create()&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;../global_objects/object/defineproperties&quot;&gt; &lt;code&gt;Object.defineProperties()&lt;/code&gt; &lt;/a&gt; , el par&amp;aacute;metro descriptor opcional espera un objeto descriptor de propiedad. No proporcionar ning&amp;uacute;n objeto (como solo un n&amp;uacute;mero) arrojar&amp;aacute; un error:</target>
        </trans-unit>
        <trans-unit id="7b1745992bf34f1707d80435665b609a551b21fb" translate="yes" xml:space="preserve">
          <source>When modifying prototypes with hooks, pass &lt;code&gt;this&lt;/code&gt; and the arguments (the call state) to the current behavior by calling &lt;code&gt;apply()&lt;/code&gt; on the function. This pattern can be used for any prototype, such as &lt;code&gt;Node.prototype&lt;/code&gt;, &lt;code&gt;Function.prototype&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092fe3f7999802924fe996bfbcbc50005f7b58df" translate="yes" xml:space="preserve">
          <source>When no parameters are provided, the newly-created &lt;code&gt;Date&lt;/code&gt; object represents the current date and time as of the time of instantiation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23ca91c3814d509d44f3fedfd496d5dd1b3b414" translate="yes" xml:space="preserve">
          <source>When not to use map()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d364ac202798bb31f0c977819b5d92e8610d07cd" translate="yes" xml:space="preserve">
          <source>When parsing data that has been serialized to JSON, integer values falling out of this range can be expected to become corrupted when JSON parser coerces them to &lt;code&gt;Number&lt;/code&gt; type. Using &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; instead is a possible workaround.</source>
          <target state="translated">Al analizar datos que se han serializado en JSON, se puede esperar que los valores enteros que caen fuera de este rango se corrompan cuando el analizador JSON los coacciona al tipo &lt;code&gt;Number&lt;/code&gt; . Usar &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; en su&lt;/a&gt; lugar es una posible soluci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0196652a9dbe3694e3b2040cceb81eb0482109c7" translate="yes" xml:space="preserve">
          <source>When parsing data that has been serialized to JSON, integer values falling outside of this range can be expected to become corrupted when JSON parser coerces them to &lt;code&gt;Number&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be133c5a8222f9f7478d66e79ea95047175bf22" translate="yes" xml:space="preserve">
          <source>When providing less than two arguments to &lt;code&gt;Date.UTC()&lt;/code&gt;, ECMAScript 2017 requires that &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned. Engines that weren't supporting this behavior have been updated (see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1050755&quot;&gt;bug 1050755&lt;/a&gt;, &lt;a href=&quot;https://github.com/tc39/ecma262/pull/642&quot;&gt;ecma-262 #642&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17cf892247e81202f0bada93b8854310ab008b00" translate="yes" xml:space="preserve">
          <source>When providing less than two arguments to &lt;code&gt;Date.UTC&lt;/code&gt;, ECMAScript 2017 requires that &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned. Engines that weren't supporting this behavior have been updated (see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1050755&quot;&gt;bug 1050755&lt;/a&gt;, &lt;a href=&quot;https://github.com/tc39/ecma262/pull/642&quot;&gt;ecma-262 #642&lt;/a&gt;).</source>
          <target state="translated">Cuando se proporcionan menos de dos argumentos a &lt;code&gt;Date.UTC&lt;/code&gt; , ECMAScript 2017 requiere que se devuelva &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; . Se actualizaron los motores que no &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1050755&quot;&gt;admit&amp;iacute;an&lt;/a&gt; este comportamiento (consulte el error 1050755 , &lt;a href=&quot;https://github.com/tc39/ecma262/pull/642&quot;&gt;ecma-262 # 642&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="705157d0288f1c597f7b2054e4f41d4043893109" translate="yes" xml:space="preserve">
          <source>When returning an immediately-resolved or immediately-rejected Promise, you do not need to create a &lt;em&gt;new Promise(...)&lt;/em&gt; and act on it.</source>
          <target state="translated">Al devolver una Promesa inmediatamente resuelta o inmediatamente rechazada, no es necesario que cree una &lt;em&gt;nueva Promesa (...)&lt;/em&gt; y act&amp;uacute;e en consecuencia.</target>
        </trans-unit>
        <trans-unit id="4ad6daa2950e3a2df4edf2507884bf5edfcbf235" translate="yes" xml:space="preserve">
          <source>When running them, they will only be able to access their own local variables and global ones, not the ones from the scope in which the &lt;code&gt;AsyncFunction&lt;/code&gt; constructor was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750cc1d46fe895be8227f59ed6dae788ff4e8aff" translate="yes" xml:space="preserve">
          <source>When running them, they will only be able to access their own local variables and global ones, not the ones from the scope in which the &lt;code&gt;GeneratorFunction&lt;/code&gt; constructor was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e7f455bb8934a617622f9442ad853c45f36ed3" translate="yes" xml:space="preserve">
          <source>When setting &lt;code&gt;Symbol.isConcatSpreadable&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;, you can disable the default behavior:</source>
          <target state="translated">Al establecer &lt;code&gt;Symbol.isConcatSpreadable&lt;/code&gt; en &lt;code&gt;false&lt;/code&gt; , puede deshabilitar el comportamiento predeterminado:</target>
        </trans-unit>
        <trans-unit id="1887c5a817a63cdf0106ba8e6c59d88c978dcf67" translate="yes" xml:space="preserve">
          <source>When setting a property on a JavaScript array when the property is a valid array index and that index is outside the current bounds of the array, the engine will update the array's &lt;a href=&quot;array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property accordingly:</source>
          <target state="translated">Al establecer una propiedad en una matriz de JavaScript cuando la propiedad es un &amp;iacute;ndice de matriz v&amp;aacute;lido y ese &amp;iacute;ndice est&amp;aacute; fuera de los l&amp;iacute;mites actuales de la matriz, el motor actualizar&amp;aacute; la propiedad de &lt;a href=&quot;array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; la matriz en consecuencia:</target>
        </trans-unit>
        <trans-unit id="d289c07792e3d72823736c6e268f237e079784d9" translate="yes" xml:space="preserve">
          <source>When tested against &lt;code&gt;typeof&lt;/code&gt;, a &lt;code&gt;BigInt&lt;/code&gt; will give &quot;bigint&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269fc88685a233d205cbc7412c88f7d9bed48c7f" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;var&gt;regexp&lt;/var&gt;&lt;/code&gt; parameter is a string or a number, it is implicitly converted to a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; by using &lt;code&gt;new RegExp(&lt;var&gt;regexp&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ace8a1166bdbc61bedd7d6b0b4f6836900c6084" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;var&gt;source&lt;/var&gt;&lt;/code&gt; parameter is an iterator, the &lt;code&gt;TypedArray.from()&lt;/code&gt; first collects all the values from the iterator, then creates an instance of &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; using the count, then sets the values on the instance. &lt;code&gt;Array.from()&lt;/code&gt; sets each value as it receives them from the iterator, then sets its &lt;code&gt;length&lt;/code&gt; at the end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b359af99743f8c30e09e0e163b341387de32eed8" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;FinalizationRegistry&lt;/code&gt; instance itself is no longer reachable by JavaScript code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57535b5e85c2dbd89e64e6deb3f355e48f2a80a6" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;delete&lt;/code&gt; operator removes an array element, that element is no longer in the array. In the following example, &lt;code&gt;trees[3]&lt;/code&gt; is removed with &lt;code&gt;delete&lt;/code&gt;.</source>
          <target state="translated">Cuando el operador de &lt;code&gt;delete&lt;/code&gt; elimina un elemento de la matriz, ese elemento ya no est&amp;aacute; en la matriz. En el siguiente ejemplo, los &lt;code&gt;trees[3]&lt;/code&gt; se eliminan con &lt;code&gt;delete&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="387f53946c3f02fb3f763d5683ceceafff765bc0" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;writable&lt;/code&gt; property attribute is set to &lt;code&gt;false&lt;/code&gt;, the property is said to be &amp;ldquo;non-writable&amp;rdquo;. It cannot be reassigned.</source>
          <target state="translated">Cuando el atributo de propiedad de &lt;code&gt;writable&lt;/code&gt; se establece en &lt;code&gt;false&lt;/code&gt; , se dice que la propiedad es &quot;no modificable&quot;. No se puede reasignar.</target>
        </trans-unit>
        <trans-unit id="a559e150cbf22fde3fe6dab539455a42466f2955" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;y&lt;/code&gt; flag is used with a pattern, ^ always matches only at the beginning of the input, or (if &lt;code&gt;multiline&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;) at the beginning of a line.</source>
          <target state="translated">Cuando se usa la bandera &lt;code&gt;y&lt;/code&gt; con un patr&amp;oacute;n, ^ siempre coincide solo al comienzo de la entrada o (si &lt;code&gt;multiline&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; ) al comienzo de una l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="357aebf7e3ec411620f129758612cb45679b2735" translate="yes" xml:space="preserve">
          <source>When the JavaScript program shuts down entirely (for instance, closing a tab in a browser).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60bd3ccf8e7f021b88c16995b206f62e8367433" translate="yes" xml:space="preserve">
          <source>When the code &lt;code&gt;new &lt;em&gt;Foo&lt;/em&gt;(...)&lt;/code&gt; is executed, the following things happen:</source>
          <target state="translated">Cuando se ejecuta el c&amp;oacute;digo &lt;code&gt;new &lt;em&gt;Foo&lt;/em&gt;(...)&lt;/code&gt; , suceden las siguientes cosas:</target>
        </trans-unit>
        <trans-unit id="6cc1669e849a2afc2d80b8b86eae5b66f0b20463" translate="yes" xml:space="preserve">
          <source>When the code is called from an inline &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Event_handlers&quot;&gt;on-event handler&lt;/a&gt;, its &lt;code&gt;this&lt;/code&gt; is set to the DOM element on which the listener is placed:</source>
          <target state="translated">Cuando el c&amp;oacute;digo se llama desde una l&amp;iacute;nea &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Event_handlers&quot;&gt;manejador de eventos&lt;/a&gt; , su &lt;code&gt;this&lt;/code&gt; se establece en el elemento DOM en el que se coloca al oyente:</target>
        </trans-unit>
        <trans-unit id="c41de686ef3ba67861fe6b43868eb34ee178c1b3" translate="yes" xml:space="preserve">
          <source>When the debugger is invoked, execution is paused at the &lt;code&gt;debugger&lt;/code&gt; statement. It is like a breakpoint in the script source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2629463712db402b4d6319141b2f344e9ce0b9e3" translate="yes" xml:space="preserve">
          <source>When the debugger is invoked, execution is paused at the debugger statement. It is like a breakpoint in the script source.</source>
          <target state="translated">Cuando se invoca el depurador,la ejecución se detiene en la declaración del depurador.Es como un punto de interrupción en el origen del script.</target>
        </trans-unit>
        <trans-unit id="171c924668a1df422e47b2855fe12f9d05f8fc4a" translate="yes" xml:space="preserve">
          <source>When the entry containing the value &lt;code&gt;two&lt;/code&gt; is reached, the first entry of the whole array is shifted off&amp;mdash;resulting in all remaining entries moving up one position. Because element &lt;code&gt;four&lt;/code&gt; is now at an earlier position in the array, &lt;code&gt;three&lt;/code&gt; will be skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c048f103287937c081fb5017046dbdff614ad6" translate="yes" xml:space="preserve">
          <source>When the import specifier string needs to be constructed dynamically. (Static import only supports static specifiers.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51225cce78b2664d4cdddd698b6e2f4d74f9bcae" translate="yes" xml:space="preserve">
          <source>When the module being imported has side effects, and you do not want those side effects unless some condition is true. (It is recommended not to have any side effects in a module, but you sometimes cannot control this in your module dependencies.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3e0f76f1c8342bdfd11d3c62a49247bf01df2e" translate="yes" xml:space="preserve">
          <source>When the module you are importing does not exist at load time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcb4cb5648375ec9f7e3f3cc35cdcd149cd783e" translate="yes" xml:space="preserve">
          <source>When the parameter is a string or a number, it is implicitly converted to a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; by using new RegExp(obj). If it is a positive number with a positive sign,the RegExp() method will ignore the positive sign.</source>
          <target state="translated">Cuando el par&amp;aacute;metro es una cadena o un n&amp;uacute;mero, se convierte impl&amp;iacute;citamente en una &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; mediante la nueva RegExp (obj). Si es un n&amp;uacute;mero positivo con signo positivo, el m&amp;eacute;todo RegExp () ignorar&amp;aacute; el signo positivo.</target>
        </trans-unit>
        <trans-unit id="cfc04270465eaa2ab7cafac9054481d593a66d9f" translate="yes" xml:space="preserve">
          <source>When the property already exists, &lt;code&gt;Object.defineProperty()&lt;/code&gt; attempts to modify the property according to the values in the descriptor and the object's current configuration. If the old descriptor had its &lt;code&gt;configurable&lt;/code&gt; attribute set to &lt;code&gt;false&lt;/code&gt; the property is said to be &amp;ldquo;non-configurable&amp;rdquo;. It is not possible to change any attribute of a non-configurable accessor property. For data properties, it is possible to modify the value if the property is writable, and it is possible to change &lt;code&gt;writable&lt;/code&gt; attribute from &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. It is not possible to switch between data and accessor property types when the property is non-configurable.</source>
          <target state="translated">Cuando la propiedad ya existe, &lt;code&gt;Object.defineProperty()&lt;/code&gt; intenta modificar la propiedad de acuerdo con los valores del descriptor y la configuraci&amp;oacute;n actual del objeto. Si el descriptor antiguo ten&amp;iacute;a su atributo &lt;code&gt;configurable&lt;/code&gt; establecido en &lt;code&gt;false&lt;/code&gt; , se dice que la propiedad es &quot;no configurable&quot;. No es posible cambiar ning&amp;uacute;n atributo de una propiedad de acceso no configurable. Para las propiedades de datos, es posible modificar el valor de la propiedad si se puede escribir, y es posible cambiar &lt;code&gt;writable&lt;/code&gt; atributo de &lt;code&gt;true&lt;/code&gt; a &lt;code&gt;false&lt;/code&gt; . No es posible cambiar entre los tipos de propiedad de acceso y datos cuando la propiedad no es configurable.</target>
        </trans-unit>
        <trans-unit id="1a0af14f4dca672aa5d249b81bc48c6f25510017" translate="yes" xml:space="preserve">
          <source>When the property specified doesn't exist in the object, &lt;code&gt;Object.defineProperty()&lt;/code&gt; creates a new property as described. Fields may be omitted from the descriptor, and default values for those fields are inputted.</source>
          <target state="translated">Cuando la propiedad especificada no existe en el objeto, &lt;code&gt;Object.defineProperty()&lt;/code&gt; crea una nueva propiedad como se describe. Los campos se pueden omitir del descriptor y se ingresan los valores predeterminados para esos campos.</target>
        </trans-unit>
        <trans-unit id="087467fd12fae510a1ec18ea91d63885ac3afc9c" translate="yes" xml:space="preserve">
          <source>When the regular expression &lt;code&gt;&lt;a href=&quot;../global_objects/regexp/exec&quot;&gt; exec()&lt;/a&gt;&lt;/code&gt; method finds a match, it returns an array containing first the entire matched portion of the string and then the portions of the string that matched each parenthesized group in the regular expression. Destructuring assignment allows you to unpack the parts out of this array easily, ignoring the full match if it is not needed.</source>
          <target state="translated">Cuando el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;../global_objects/regexp/exec&quot;&gt; exec()&lt;/a&gt;&lt;/code&gt; expresi&amp;oacute;n regular encuentra una coincidencia, devuelve una matriz que contiene primero toda la parte coincidente de la cadena y luego las partes de la cadena que coinciden con cada grupo entre par&amp;eacute;ntesis en la expresi&amp;oacute;n regular. La asignaci&amp;oacute;n de desestructuraci&amp;oacute;n le permite desempacar las partes de esta matriz f&amp;aacute;cilmente, ignorando la coincidencia completa si no es necesaria.</target>
        </trans-unit>
        <trans-unit id="440b008ded7a5b74db1780e0eeb985d0276b1a5b" translate="yes" xml:space="preserve">
          <source>When the string is empty, &lt;code&gt;split()&lt;/code&gt; returns an array containing one empty string, rather than an empty array. If the string and separator are both empty strings, an empty array is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c3c66a9b8e5a4d0b74e86b8563917a7c08d6bf" translate="yes" xml:space="preserve">
          <source>When they are not called, the &lt;a href=&quot;../global_objects/function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; object corresponding to the generator is callable, but not iterable. Calling a generator produces an iterable object which will iterate over the values yielded during the execution of the generator.</source>
          <target state="translated">Cuando no se llaman, el objeto &lt;a href=&quot;../global_objects/function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt; correspondiente al generador es invocable, pero no iterable. Llamar a un generador produce un objeto iterable que iterar&amp;aacute; sobre los valores obtenidos durante la ejecuci&amp;oacute;n del generador.</target>
        </trans-unit>
        <trans-unit id="319e3720cc9a9f1d01ef704bf7acec851d5d0d30" translate="yes" xml:space="preserve">
          <source>When this error is thrown, a function (on a given object), is called with a &lt;code&gt;this&lt;/code&gt; not corresponding to the type expected by the function.</source>
          <target state="translated">Cuando se produce este error, se llama a una funci&amp;oacute;n (en un objeto dado) con un &lt;code&gt;this&lt;/code&gt; que no corresponde al tipo esperado por la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6a3fb0da6c85a6ef8000da5bbe9623f4ee6d384e" translate="yes" xml:space="preserve">
          <source>When to display the sign for the number; defaults to &quot;&lt;code&gt;auto&lt;/code&gt;&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5005009a62d6b2c8fb75f575f48e1f72feac063a" translate="yes" xml:space="preserve">
          <source>When trying to convert a symbol to a number, a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be thrown</source>
          <target state="translated">Al intentar convertir un s&amp;iacute;mbolo en un n&amp;uacute;mero, se lanzar&amp;aacute; un &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebab11c3b76ef7c9db582ecfd8e0f912e785d3fe" translate="yes" xml:space="preserve">
          <source>When type conversion is involved in the comparison (i.e., non&amp;ndash;strict comparison), JavaScript converts the types &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../global_objects/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; operands as follows:</source>
          <target state="translated">Cuando la conversi&amp;oacute;n de tipos est&amp;aacute; involucrada en la comparaci&amp;oacute;n (es decir, comparaci&amp;oacute;n no estricta), JavaScript convierte los tipos de operandos &lt;a href=&quot;../global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; u &lt;a href=&quot;../global_objects/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; de la&lt;/a&gt; siguiente manera:</target>
        </trans-unit>
        <trans-unit id="b280ce58e72b6ca4bd63796cb09af82be065fdcb" translate="yes" xml:space="preserve">
          <source>When used as a function, &lt;code&gt;Number(value)&lt;/code&gt; converts a string or other value to the Number type. If the value can't be converted, it returns &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd7d7347380f1fa643c12c7547aa4c5e79fa764" translate="yes" xml:space="preserve">
          <source>When used in a constructor, the &lt;code&gt;super&lt;/code&gt; keyword appears alone and must be used before the &lt;code&gt;this&lt;/code&gt; keyword is used. The &lt;code&gt;super&lt;/code&gt; keyword can also be used to call functions on a parent object.</source>
          <target state="translated">Cuando se usa en un constructor, la palabra clave &lt;code&gt;super&lt;/code&gt; aparece sola y debe usarse antes de usar &lt;code&gt;this&lt;/code&gt; palabra clave. La palabra clave &lt;code&gt;super&lt;/code&gt; tambi&amp;eacute;n se puede utilizar para llamar a funciones en un objeto principal.</target>
        </trans-unit>
        <trans-unit id="9af48c149599664bbbdeebef3ac3f5d8c07d3aa1" translate="yes" xml:space="preserve">
          <source>When used inside a block, &lt;code&gt;let&lt;/code&gt; limits the variable's scope to that block. Note the difference between &lt;code&gt;&lt;strong&gt;var&lt;/strong&gt;&lt;/code&gt;, whose scope is inside the function where it is declared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f712e951149a1c2d3999b5061947a25f6b868c61" translate="yes" xml:space="preserve">
          <source>When used inside a block, &lt;code&gt;let&lt;/code&gt; limits the variable's scope to that block. Note the difference between &lt;code&gt;&lt;strong&gt;var&lt;/strong&gt;&lt;/code&gt;whose scope is inside the function where it is declared.</source>
          <target state="translated">Cuando se usa dentro de un bloque, &lt;code&gt;let&lt;/code&gt; limita el alcance de la variable a ese bloque. Tenga en cuenta la diferencia entre &lt;code&gt;&lt;strong&gt;var&lt;/strong&gt;&lt;/code&gt; cuyo alcance est&amp;aacute; dentro de la funci&amp;oacute;n donde se declara.</target>
        </trans-unit>
        <trans-unit id="f9467ce136820a553a7aaec6bce40abdafb41f43" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;&lt;a href=&quot;../../functions/get&quot;&gt;get&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../../functions/set&quot;&gt;set&lt;/a&gt;&lt;/code&gt; accessor properties, &quot;get&quot; or &quot;set&quot; will appear in the function name.</source>
          <target state="translated">Cuando se utilizan las propiedades del &lt;code&gt;&lt;a href=&quot;../../functions/set&quot;&gt;set&lt;/a&gt;&lt;/code&gt; acceso &lt;code&gt;&lt;a href=&quot;../../functions/get&quot;&gt;get&lt;/a&gt;&lt;/code&gt; y set , &quot;get&quot; o &quot;set&quot; aparecer&amp;aacute; en el nombre de la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="14672185233762375b8acce5161985c2ee0557a4" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;get&lt;/code&gt; the property will be defined on the instance's prototype, while using &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; the property will be defined on the instance it is applied to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a753190ac6f69275fd35b3c2e97785d44a71a1" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;get&lt;/code&gt; the property will be defined on the prototype of the object while using &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; the property will be defined on the instance it is applied to.</source>
          <target state="translated">Cuando se usa &lt;code&gt;get&lt;/code&gt; , la propiedad se definir&amp;aacute; en el prototipo del objeto mientras que se usa &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; la propiedad se definir&amp;aacute; en la instancia a la que se aplica.</target>
        </trans-unit>
        <trans-unit id="c16e4fb27130e97a38d73ef09d3731d8d8a40fc6" translate="yes" xml:space="preserve">
          <source>When using a regular expression search value, it must be global. This won't work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f782e6d1b111d00aeddc1a8495db95fefe9ba9" translate="yes" xml:space="preserve">
          <source>When using an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;immediately-invoked function expression&lt;/a&gt;, &lt;code&gt;void&lt;/code&gt; can be used to force the &lt;code&gt;function&lt;/code&gt; keyword to be treated as an expression instead of a declaration.</source>
          <target state="translated">Cuando se usa una &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;expresi&amp;oacute;n de funci&amp;oacute;n invocada inmediatamente&lt;/a&gt; , se puede usar &lt;code&gt;void&lt;/code&gt; para forzar que la palabra clave de la &lt;code&gt;function&lt;/code&gt; sea ​​tratada como una expresi&amp;oacute;n en lugar de una declaraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3447b0df5a2bb4efa20d51082a662db9689e4857" translate="yes" xml:space="preserve">
          <source>When using an expression after a &lt;a href=&quot;../statements/return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt; statement, or</source>
          <target state="translated">Cuando se usa una expresi&amp;oacute;n despu&amp;eacute;s de una declaraci&amp;oacute;n de &lt;a href=&quot;../statements/return&quot;&gt; &lt;code&gt;return&lt;/code&gt; &lt;/a&gt; , o</target>
        </trans-unit>
        <trans-unit id="bc2ce4a7f4087cea860f46a9ff4a6eacf1a7b9cf" translate="yes" xml:space="preserve">
          <source>When using bracket notation for character access, attempting to delete or assign a value to these properties will not succeed. The properties involved are neither writable nor configurable. (See &lt;a href=&quot;object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; for more information.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c236ad67a5fa76d15d920dcadf97679a4561cc42" translate="yes" xml:space="preserve">
          <source>When using loose equality, &lt;code&gt;Object(&lt;var&gt;sym&lt;/var&gt;) == &lt;var&gt;sym&lt;/var&gt;&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffcaf630a6cae5f82984368d904e49fb3e9bb05" translate="yes" xml:space="preserve">
          <source>When using loose equality, &lt;code&gt;Object(sym) == sym&lt;/code&gt; returns &lt;code&gt;true.&lt;/code&gt;</source>
          <target state="translated">Cuando se usa igualdad flexible, &lt;code&gt;Object(sym) == sym&lt;/code&gt; devuelve &lt;code&gt;true.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8594108e6cae2532333b552b479364c2cc0afea7" translate="yes" xml:space="preserve">
          <source>When using optional chaining with expressions, if the left operand is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, the expression will not be evaluated. For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c84255cf6872fb9cc469addc43305bdcbef3ea" translate="yes" xml:space="preserve">
          <source>When using spread syntax for function calls, be aware of the possibility of exceeding the JavaScript engine's argument length limit. See &lt;a href=&quot;../global_objects/function/apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">Cuando utilice la sintaxis de propagaci&amp;oacute;n para llamadas a funciones, tenga en cuenta la posibilidad de exceder el l&amp;iacute;mite de longitud de los argumentos del motor JavaScript. Consulte &lt;a href=&quot;../global_objects/function/apply&quot;&gt; &lt;code&gt;apply()&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="4f240cb14ecf8dae34b87015f5ed5e0ae33bd988" translate="yes" xml:space="preserve">
          <source>When using the constructor function, the normal string escape rules (preceding special characters with &lt;code&gt;\&lt;/code&gt; when included in a string) are necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0da73808cc10bec7e47688c7615197b865309b" translate="yes" xml:space="preserve">
          <source>When using the constructor function, the normal string escape rules (preceding special characters with \ when included in a string) are necessary. For example, the following are equivalent:</source>
          <target state="translated">Cuando se utiliza la función de constructor,las reglas normales de escape de la cadena (precediendo a los caracteres especiales con \ cuando se incluyen en una cadena)son necesarias.Por ejemplo,las siguientes son equivalentes:</target>
        </trans-unit>
        <trans-unit id="3460e508ab4b64118656a7efb81a83603c0b6db5" translate="yes" xml:space="preserve">
          <source>When using the same name for your properties, the second property will overwrite the first.</source>
          <target state="translated">Al usar el mismo nombre para sus propiedades,la segunda propiedad sobreescribirá a la primera.</target>
        </trans-unit>
        <trans-unit id="33984de66b5bb20ffd47563386578d56f50f5436" translate="yes" xml:space="preserve">
          <source>When working with &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">Al trabajar con objetos &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;../global_objects/typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="19bdd0d88847615a8145c6cf9a1fa4adb01c44ac" translate="yes" xml:space="preserve">
          <source>When working with &lt;a href=&quot;../global_objects/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../global_objects/set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">Al trabajar con objetos &lt;a href=&quot;../global_objects/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;../global_objects/set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c191ecdb0607e19b938e83ee0888764db1ea8955" translate="yes" xml:space="preserve">
          <source>When wrapped in an &lt;code&gt;Object&lt;/code&gt;, a &lt;code&gt;BigInt&lt;/code&gt; will be considered as a normal &quot;object&quot; type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686da1c39803b563b2ef8e66425ba86021bf74b5" translate="yes" xml:space="preserve">
          <source>When you calculate log(1 + x), you should get an answer very close to x, if x is small (that's why these are called 'natural' logarithms). If you calculate Math.log(1 + 1.1111111111e-15) you should get an answer close to 1.1111111111e-15. Instead, you will end up taking the logarithm of 1.00000000000000111022 (the roundoff is in binary so sometimes it gets ugly), so you get the answer 1.11022...e-15, with only 3 correct digits. If, instead, you calculate Math.log1p(1.1111111111e-15) you will get a much more accurate answer 1.1111111110999995e-15 with 15 correct digits of precision (actually 16 in this case).</source>
          <target state="translated">Cuando calculas log(1+x),deberías obtener una respuesta muy cercana a x,si x es pequeña (por eso se llaman logaritmos &quot;naturales&quot;).Si calculas Math.log(1+1.1111111111e-15)deberías obtener una respuesta cercana a 1.1111111111e-15.En cambio,terminarás tomando el logaritmo de 1.00000000000000111022 (el redondeo está en binario,así que a veces se pone feo),así que obtienes la respuesta 1.11022...e-15,con sólo 3 dígitos correctos.Si,en cambio,calculas Math.log1p(1.1111111111e-15)obtendrás una respuesta mucho más precisa 1.1111111110999995e-15 con 15 dígitos correctos de precisión (en realidad 16 en este caso).</target>
        </trans-unit>
        <trans-unit id="83ea70fae0e47f2e6b35fdaaab8d8b5d1acc542b" translate="yes" xml:space="preserve">
          <source>When you delete an array element, the array &lt;code&gt;length&lt;/code&gt; is not affected. This holds even if you delete the last element of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d8655936d1748df51f6b239fa180d3464dc500" translate="yes" xml:space="preserve">
          <source>When you delete an array element, the array length is not affected. This holds even if you delete the last element of the array.</source>
          <target state="translated">Cuando eliminas un elemento de la matriz,la longitud de la matriz no se ve afectada.Esto se mantiene incluso si borras el último elemento de la matriz.</target>
        </trans-unit>
        <trans-unit id="c15351818da2666a4e29a64c0d9f7ec83a1866be" translate="yes" xml:space="preserve">
          <source>When you specify size as an integer, you set the font size of &lt;code&gt;str&lt;/code&gt; to one of the 7 defined sizes. When you specify &lt;code&gt;size&lt;/code&gt; as a string such as &quot;-2&quot;, you adjust the font size of &lt;code&gt;str&lt;/code&gt; relative to the size set in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/basefont&quot;&gt;&lt;code&gt;&amp;lt;basefont&amp;gt;&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="translated">Cuando especifica el tama&amp;ntilde;o como un n&amp;uacute;mero entero, establece el tama&amp;ntilde;o de fuente de &lt;code&gt;str&lt;/code&gt; en uno de los 7 tama&amp;ntilde;os definidos. Cuando especifica el &lt;code&gt;size&lt;/code&gt; como una cadena como &quot;-2&quot;, ajusta el tama&amp;ntilde;o de fuente de &lt;code&gt;str&lt;/code&gt; en relaci&amp;oacute;n con el tama&amp;ntilde;o establecido en la etiqueta &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/basefont&quot;&gt; &lt;code&gt;&amp;lt;basefont&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8ff1f55ad6de14143cb6e07ac66acd74e58e7680" translate="yes" xml:space="preserve">
          <source>When you specify size as an integer, you set the font size of &lt;code&gt;str&lt;/code&gt; to one of the 7 defined sizes. When you specify &lt;code&gt;size&lt;/code&gt; as a string such as &quot;-2&quot;, you adjust the font size of &lt;code&gt;str&lt;/code&gt; relative to the size set in the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/basefont&quot;&gt;&lt;code&gt;&amp;lt;basefont&amp;gt;&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18a6ca68a9288c20e06bf89d15dd637d138a023" translate="yes" xml:space="preserve">
          <source>When you want to know whether a pattern is found and also its index in a string use &lt;code&gt;search()&lt;/code&gt; (if you only want to know if it exists, use the similar &lt;a href=&quot;../regexp/test&quot;&gt;&lt;code&gt;test()&lt;/code&gt;&lt;/a&gt; method on the RegExp prototype, which returns a boolean); for more information (but slower execution) use &lt;a href=&quot;match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt; (similar to the regular expression &lt;a href=&quot;../regexp/exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="translated">Cuando desee saber si se encuentra un patr&amp;oacute;n y tambi&amp;eacute;n su &amp;iacute;ndice en una cadena, use &lt;code&gt;search()&lt;/code&gt; (si solo desea saber si existe, use el m&amp;eacute;todo &lt;a href=&quot;../regexp/test&quot;&gt; &lt;code&gt;test()&lt;/code&gt; &lt;/a&gt; similar en el prototipo RegExp, que devuelve un booleano); para obtener m&amp;aacute;s informaci&amp;oacute;n (pero una ejecuci&amp;oacute;n m&amp;aacute;s lenta) use &lt;a href=&quot;match&quot;&gt; &lt;code&gt;match()&lt;/code&gt; &lt;/a&gt; (similar al m&amp;eacute;todo &lt;a href=&quot;../regexp/exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt; expresi&amp;oacute;n regular ).</target>
        </trans-unit>
        <trans-unit id="a4ea57b53cf2a6a9adbae6e5134aff352df96f6a" translate="yes" xml:space="preserve">
          <source>When you want to know whether a pattern is found, and &lt;em&gt;also&lt;/em&gt; know its index within a string, use &lt;code&gt;search()&lt;/code&gt;. (If you only want to know if it exists, use the similar &lt;a href=&quot;../regexp/test&quot;&gt;&lt;code&gt;test()&lt;/code&gt;&lt;/a&gt; method on the &lt;code&gt;RegExp&lt;/code&gt; prototype, which returns a boolean.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9111ffc7ddcd02f72d5abc782dd4f1875561aa0d" translate="yes" xml:space="preserve">
          <source>Whenever an object needs to be iterated (such as at the beginning of a &lt;a href=&quot;statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt; loop), its &lt;code&gt;@@iterator&lt;/code&gt; method is called with no arguments, and the returned &lt;strong&gt;iterator&lt;/strong&gt; is used to obtain the values to be iterated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867516006e8c5943a9ddfc89e12e0cded7a1cf80" translate="yes" xml:space="preserve">
          <source>Whenever an object needs to be iterated (such as at the beginning of a &lt;code&gt;for..of&lt;/code&gt; loop), its &lt;code&gt;@@iterator&lt;/code&gt; method is called with no arguments, and the returned &lt;strong&gt;iterator&lt;/strong&gt; is used to obtain the values to be iterated.</source>
          <target state="translated">Siempre que un objeto necesita ser iterado (como al comienzo de un bucle &lt;code&gt;for..of&lt;/code&gt; ), se llama a su m&amp;eacute;todo &lt;code&gt;@@iterator&lt;/code&gt; iterator sin argumentos, y el &lt;strong&gt;iterador&lt;/strong&gt; devuelto se usa para obtener los valores que se van a iterar.</target>
        </trans-unit>
        <trans-unit id="71630400b044329dfae152c34f0268632c070991" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;X&lt;/em&gt;&lt;/code&gt; is a letter from A - Z. Matches a control character in a string.</source>
          <target state="translated">Donde &lt;code&gt;&lt;em&gt;X&lt;/em&gt;&lt;/code&gt; es una letra de la A a la Z. Coincide con un car&amp;aacute;cter de control en una cadena.</target>
        </trans-unit>
        <trans-unit id="3f255ecabd3bef11937b3f7fb0d9d2368dc050af" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; is 0 or a positive integer, &lt;code&gt;&lt;em&gt;m&lt;/em&gt;&lt;/code&gt; is a positive integer, and &lt;code&gt;&lt;em&gt;m&lt;/em&gt;&lt;/code&gt; &amp;gt; &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt;. Matches at least &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; and at most &lt;code&gt;&lt;em&gt;m&lt;/em&gt;&lt;/code&gt; occurrences of the preceding item &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">Donde &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; es 0 o un n&amp;uacute;mero entero positivo, &lt;code&gt;&lt;em&gt;m&lt;/em&gt;&lt;/code&gt; es un n&amp;uacute;mero entero positivo y &lt;code&gt;&lt;em&gt;m&lt;/em&gt;&lt;/code&gt; &amp;gt; &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; . Coincide con al menos &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; y como m&amp;aacute;ximo &lt;code&gt;&lt;em&gt;m&lt;/em&gt;&lt;/code&gt; ocurrencias del elemento anterior &lt;em&gt;x&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="2dd5455bef555b5b0b3e7efe6f4b5ae33fbac6a2" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; is a positive integer less than 100, inserts the &lt;em&gt;n&lt;/em&gt;th parenthesized submatch string, provided the first argument was a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object. Note that this is 1-indexed.</source>
          <target state="translated">Donde &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; es un n&amp;uacute;mero entero positivo de menos de 100, inserta el &lt;em&gt;n&lt;/em&gt; &amp;ordm; par&amp;eacute;ntesis subcoincidencia cadena, siempre que el primer argumento era un &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; objeto. Tenga en cuenta que esto est&amp;aacute; indexado a 1.</target>
        </trans-unit>
        <trans-unit id="1812b5f46dfcff7a44c9cfa097447796fd8e3cfc" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; is a positive integer. A back reference to the last substring matching the n parenthetical in the regular expression (counting left parentheses).</source>
          <target state="translated">Donde &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; es un n&amp;uacute;mero entero positivo. Una referencia posterior a la &amp;uacute;ltima subcadena que coincide con el par&amp;eacute;ntesis n en la expresi&amp;oacute;n regular (contando los par&amp;eacute;ntesis izquierdos).</target>
        </trans-unit>
        <trans-unit id="7bceea1e069869169d0efdb56f441d571c8ffe5e" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; is a positive integer. Matches at least &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; occurrences of the preceding item &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">Donde &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; es un n&amp;uacute;mero entero positivo. Coincide con al menos &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; apariciones del elemento &lt;em&gt;x&lt;/em&gt; anterior .</target>
        </trans-unit>
        <trans-unit id="4b3f8425b2a1b619ae26d6b4ae163bc65c3a21f4" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; is a positive integer. Matches exactly &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; occurrences of the preceding item &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">Donde &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; es un n&amp;uacute;mero entero positivo. Coincide exactamente con &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; apariciones del elemento anterior &lt;em&gt;x&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a65f22faf29428d5f1b97327325f30f9aa76f5e1" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;var&gt;TypedArray&lt;/var&gt;&lt;/code&gt; is one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3864e9ff0ac4748966cde136321fbe60d39bb854" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;var&gt;expression&lt;/var&gt;&lt;/code&gt; should evaluate to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/property/JavaScript&quot;&gt;property&lt;/a&gt; reference, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80430454b53e76852c5109a8ee8a24ad8cc5b391" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; is a positive integer less than 100, inserts the &lt;code&gt;&lt;var&gt;n&lt;/var&gt;&lt;/code&gt;th parenthesized submatch string, provided the first argument was a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object. Note that this is &lt;code&gt;1&lt;/code&gt;-indexed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7709f932e7f7c63ef0402802bfd1de76786c7f80" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; is a positive integer less than 100, inserts the &lt;code&gt;&lt;var&gt;n&lt;/var&gt;&lt;/code&gt;th parenthesized submatch string, provided the first argument was a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object. Note that this is &lt;code&gt;1&lt;/code&gt;-indexed. If a group &lt;code&gt;n&lt;/code&gt; is not present (e.g., if group is 3), it will be replaced as a literal (e.g., &lt;code&gt;$3&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7704a80ab3d55f1a1ea3c1294066d4f7a5a5e643" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;Name&lt;/code&gt; is a capturing group name. If the group is not in the regular expressions (or not in the match), this will resolve to the empty string. Only available in browser versions supporting named capturing groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd5b3adf5aa755cb272d94810f3be33ed674bf7" translate="yes" xml:space="preserve">
          <source>Where &lt;var&gt;TypedArray&lt;/var&gt; is a constructor for one of the concrete types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37effed155b4207aae9cc3a7d18b9a4dc29ae71d" translate="yes" xml:space="preserve">
          <source>Where a function uses the &lt;code&gt;this&lt;/code&gt; keyword in its body, its value can be bound to a particular object in the call using the &lt;code&gt;call()&lt;/code&gt; or apply() methods which all functions inherit from &lt;a href=&quot;../global_objects/function/prototype&quot;&gt;&lt;code&gt;Function.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cuando una funci&amp;oacute;n usa la palabra clave &lt;code&gt;this&lt;/code&gt; en su cuerpo, su valor se puede vincular a un objeto particular en la llamada usando los m&amp;eacute;todos &lt;code&gt;call()&lt;/code&gt; o apply () que todas las funciones heredan de &lt;a href=&quot;../global_objects/function/prototype&quot;&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f5e4dc4886ba24b6f81354e1d8f9bde7a940d54a" translate="yes" xml:space="preserve">
          <source>Where to find JavaScript information</source>
          <target state="translated">Dónde encontrar información de JavaScript</target>
        </trans-unit>
        <trans-unit id="d43e3c903d4f368fc30e7cdc0717701a33761e92" translate="yes" xml:space="preserve">
          <source>Where's Walden? &amp;raquo; New ES5 strict mode requirement: function statements not at top level of a program or function are prohibited</source>
          <target state="translated">&amp;iquest;D&amp;oacute;nde est&amp;aacute; Walden? &amp;raquo;Nuevo requisito de modo estricto de ES5: se proh&amp;iacute;ben las declaraciones de funci&amp;oacute;n que no est&amp;eacute;n en el nivel superior de un programa o funci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="60519118bfec546cfa6ce32bb8e7eb898a9cd2e6" translate="yes" xml:space="preserve">
          <source>Where's Walden? &amp;raquo; New ES5 strict mode support: new vars created by strict mode eval code are local to that code only</source>
          <target state="translated">&amp;iquest;D&amp;oacute;nde est&amp;aacute; Walden? &amp;raquo;Nuevo soporte de modo estricto de ES5: las nuevas variables creadas por el c&amp;oacute;digo de evaluaci&amp;oacute;n de modo estricto son locales solo para ese c&amp;oacute;digo</target>
        </trans-unit>
        <trans-unit id="7faeb6d51b138f8ac67520da55893e0368265736" translate="yes" xml:space="preserve">
          <source>Where's Walden? &amp;raquo; New ES5 strict mode support: now with poison pills!</source>
          <target state="translated">&amp;iquest;D&amp;oacute;nde est&amp;aacute; Walden? &amp;raquo;Nuevo soporte de modo estricto ES5: &amp;iexcl;ahora con p&amp;iacute;ldoras venenosas!</target>
        </trans-unit>
        <trans-unit id="046999c5ff972115e435e32fa159118d399fd22a" translate="yes" xml:space="preserve">
          <source>Whereas &lt;a href=&quot;format&quot;&gt;&lt;code&gt;Intl.ListFormat.prototype.format()&lt;/code&gt;&lt;/a&gt; returns a string being the formated version of the list (according to the given locale and style options), &lt;code&gt;formatToParts()&lt;/code&gt; returns an array of the different components of the formated string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6580cdd13ea0c2bad7b24f51862d62bfcba11361" translate="yes" xml:space="preserve">
          <source>Whereas the &lt;a href=&quot;assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt; method will only copy enumerable and own properties from a source object to a target object, you are able to use this method and &lt;a href=&quot;create&quot;&gt;&lt;code&gt;Object.create()&lt;/code&gt;&lt;/a&gt; for a shallow copy between two unknown objects:</source>
          <target state="translated">Mientras que el m&amp;eacute;todo &lt;a href=&quot;assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt; solo copiar&amp;aacute; propiedades enumerables y propias de un objeto de origen a un objeto de destino, puede usar este m&amp;eacute;todo y &lt;a href=&quot;create&quot;&gt; &lt;code&gt;Object.create()&lt;/code&gt; &lt;/a&gt; para una copia superficial entre dos objetos desconocidos:</target>
        </trans-unit>
        <trans-unit id="abe3f00003c1d5834f9a97d29c5494cb58776d48" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;.&lt;/code&gt; matches newlines or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c65bccc706b2a3bb203d701cb4fbc23b67560e" translate="yes" xml:space="preserve">
          <source>Whether numeric collation should be used, such that &quot;1&quot; &amp;lt; &quot;2&quot; &amp;lt; &quot;10&quot;. Possible values are &lt;code&gt;&quot;true&quot;&lt;/code&gt; and &lt;code&gt;&quot;false&quot;&lt;/code&gt;. This option can be set through an &lt;code&gt;options&lt;/code&gt; property or through a Unicode extension key; if both are provided, the &lt;code&gt;options&lt;/code&gt; property takes precedence.</source>
          <target state="translated">Si se debe utilizar la intercalaci&amp;oacute;n num&amp;eacute;rica, tal que &quot;1&quot; &amp;lt;&quot;2&quot; &amp;lt;&quot;10&quot;. Los valores posibles son &lt;code&gt;&quot;true&quot;&lt;/code&gt; y &lt;code&gt;&quot;false&quot;&lt;/code&gt; . Esta opci&amp;oacute;n se puede configurar mediante una propiedad de &lt;code&gt;options&lt;/code&gt; o mediante una clave de extensi&amp;oacute;n Unicode; si se proporcionan ambos, la propiedad &lt;code&gt;options&lt;/code&gt; tiene prioridad.</target>
        </trans-unit>
        <trans-unit id="235d116c6a8f3d814b3348ee5905e2bcafe2d8c9" translate="yes" xml:space="preserve">
          <source>Whether numeric collation should be used, such that &quot;1&quot; &amp;lt; &quot;2&quot; &amp;lt; &quot;10&quot;. Possible values are &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;; the default is &lt;code&gt;false&lt;/code&gt;. This option can be set through an &lt;code&gt;options&lt;/code&gt; property or through a Unicode extension key; if both are provided, the &lt;code&gt;options&lt;/code&gt; property takes precedence. Implementations are not required to support this property.</source>
          <target state="translated">Si se debe utilizar la intercalaci&amp;oacute;n num&amp;eacute;rica, tal que &quot;1&quot; &amp;lt;&quot;2&quot; &amp;lt;&quot;10&quot;. Los valores posibles son &lt;code&gt;true&lt;/code&gt; y &lt;code&gt;false&lt;/code&gt; ; el valor predeterminado es &lt;code&gt;false&lt;/code&gt; . Esta opci&amp;oacute;n se puede configurar mediante una propiedad de &lt;code&gt;options&lt;/code&gt; o mediante una clave de extensi&amp;oacute;n Unicode; si se proporcionan ambos, la propiedad &lt;code&gt;options&lt;/code&gt; tiene prioridad. No se requieren implementaciones para admitir esta propiedad.</target>
        </trans-unit>
        <trans-unit id="660bd9e4d4493b37ccdffed9173f33c28c1c106b" translate="yes" xml:space="preserve">
          <source>Whether or not Unicode features are enabled.</source>
          <target state="translated">Si las características de Unicode están habilitadas o no.</target>
        </trans-unit>
        <trans-unit id="72ad5a7075876b11b08cb498367a6aad5bd18c01" translate="yes" xml:space="preserve">
          <source>Whether or not the search is sticky.</source>
          <target state="translated">Si la búsqueda es pegajosa o no.</target>
        </trans-unit>
        <trans-unit id="931ceb864122164ff385b721b90260a9a840b4cb" translate="yes" xml:space="preserve">
          <source>Whether or not to search in strings across multiple lines.</source>
          <target state="translated">Si buscar o no en cuerdas a través de múltiples líneas.</target>
        </trans-unit>
        <trans-unit id="964d14771347b32e246fbd206275339b35683cb6" translate="yes" xml:space="preserve">
          <source>Whether punctuation should be ignored. Possible values are &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;; the default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Si se debe ignorar la puntuaci&amp;oacute;n. Los valores posibles son &lt;code&gt;true&lt;/code&gt; y &lt;code&gt;false&lt;/code&gt; ; el valor predeterminado es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9139411c8739f05505450f9a6ad72e7de4bedf0d" translate="yes" xml:space="preserve">
          <source>Whether the comparison is for sorting or for searching for matching strings. Possible values are &lt;code&gt;&quot;sort&quot;&lt;/code&gt; and &lt;code&gt;&quot;search&quot;&lt;/code&gt;; the default is &lt;code&gt;&quot;sort&quot;&lt;/code&gt;.</source>
          <target state="translated">Si la comparaci&amp;oacute;n es para ordenar o buscar cadenas coincidentes. Los valores posibles son &lt;code&gt;&quot;sort&quot;&lt;/code&gt; y &lt;code&gt;&quot;search&quot;&lt;/code&gt; ; el valor predeterminado es &lt;code&gt;&quot;sort&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c66bf9e881515eb7035e4aa0b35eed3d1a84d252" translate="yes" xml:space="preserve">
          <source>Whether to ignore case while attempting a match in a string.</source>
          <target state="translated">Si ignorar el caso mientras se intenta una coincidencia en una cadena.</target>
        </trans-unit>
        <trans-unit id="dfece108db48831096dc0ebbe5c37021bd7cc45c" translate="yes" xml:space="preserve">
          <source>Whether to test the regular expression against all possible matches in a string, or only against the first.</source>
          <target state="translated">Si probar la expresión regular contra todas las posibles coincidencias en una cadena,o sólo contra la primera.</target>
        </trans-unit>
        <trans-unit id="752e43d71ab4fdb1f51dbaaa38923e8345b2fde1" translate="yes" xml:space="preserve">
          <source>Whether to use 12-hour time (as opposed to 24-hour time). Possible values are &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;; the default is locale dependent. This option overrides the &lt;code&gt;hc&lt;/code&gt; language tag and/or the &lt;code&gt;hourCycle&lt;/code&gt; option in case both are present.</source>
          <target state="translated">Si se debe utilizar el tiempo de 12 horas (en contraposici&amp;oacute;n al tiempo de 24 horas). Los valores posibles son &lt;code&gt;true&lt;/code&gt; y &lt;code&gt;false&lt;/code&gt; ; el valor predeterminado depende de la configuraci&amp;oacute;n regional. Esta opci&amp;oacute;n anula la etiqueta de idioma &lt;code&gt;hc&lt;/code&gt; y / o la opci&amp;oacute;n &lt;code&gt;hourCycle&lt;/code&gt; en caso de que ambas est&amp;eacute;n presentes.</target>
        </trans-unit>
        <trans-unit id="bb79141d02074383f9048728b50376461bf59ae1" translate="yes" xml:space="preserve">
          <source>Whether to use grouping separators, such as thousands separators or thousand/lakh/crore separators. Possible values are &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;; the default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Ya sea para utilizar separadores de agrupaci&amp;oacute;n, como separadores de miles o separadores de miles / lakh / crore. Los valores posibles son &lt;code&gt;true&lt;/code&gt; y &lt;code&gt;false&lt;/code&gt; ; el valor predeterminado es &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e9b1d429a447aab3a53903c496c125455295aca" translate="yes" xml:space="preserve">
          <source>Whether to use grouping separators, such as thousands separators or thousand/lakh/crore separators. Possible values are true and false; the default is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0031877b8fc30b920e32f913bd2532ed51b905" translate="yes" xml:space="preserve">
          <source>Whether upper case or lower case should sort first. Possible values are &lt;code&gt;&quot;upper&quot;&lt;/code&gt;, &lt;code&gt;&quot;lower&quot;&lt;/code&gt;, or &lt;code&gt;&quot;false&quot;&lt;/code&gt; (use the locale's default). This option can be set through an &lt;code&gt;options&lt;/code&gt; property or through a Unicode extension key; if both are provided, the &lt;code&gt;options&lt;/code&gt; property takes precedence.</source>
          <target state="translated">Si las may&amp;uacute;sculas o min&amp;uacute;sculas se deben ordenar primero Los valores posibles son &lt;code&gt;&quot;upper&quot;&lt;/code&gt; , &lt;code&gt;&quot;lower&quot;&lt;/code&gt; o &lt;code&gt;&quot;false&quot;&lt;/code&gt; (utilice el valor predeterminado de la configuraci&amp;oacute;n regional). Esta opci&amp;oacute;n se puede configurar mediante una propiedad de &lt;code&gt;options&lt;/code&gt; o mediante una clave de extensi&amp;oacute;n Unicode; si se proporcionan ambos, la propiedad de &lt;code&gt;options&lt;/code&gt; tiene prioridad.</target>
        </trans-unit>
        <trans-unit id="f5366895b170ddfc2b3cbac3b9a4274b079808c7" translate="yes" xml:space="preserve">
          <source>Whether upper case or lower case should sort first. Possible values are &lt;code&gt;&quot;upper&quot;&lt;/code&gt;, &lt;code&gt;&quot;lower&quot;&lt;/code&gt;, or &lt;code&gt;&quot;false&quot;&lt;/code&gt; (use the locale's default); the default is &lt;code&gt;&quot;false&quot;&lt;/code&gt;. This option can be set through an &lt;code&gt;options&lt;/code&gt; property or through a Unicode extension key; if both are provided, the &lt;code&gt;options&lt;/code&gt; property takes precedence. Implementations are not required to support this property.</source>
          <target state="translated">Si las may&amp;uacute;sculas o min&amp;uacute;sculas se deben ordenar primero Los valores posibles son &lt;code&gt;&quot;upper&quot;&lt;/code&gt; , &lt;code&gt;&quot;lower&quot;&lt;/code&gt; o &lt;code&gt;&quot;false&quot;&lt;/code&gt; (utilice el valor predeterminado de la configuraci&amp;oacute;n regional); el valor predeterminado es &lt;code&gt;&quot;false&quot;&lt;/code&gt; . Esta opci&amp;oacute;n se puede configurar mediante una propiedad de &lt;code&gt;options&lt;/code&gt; o mediante una clave de extensi&amp;oacute;n Unicode; si se proporcionan ambos, la propiedad &lt;code&gt;options&lt;/code&gt; tiene prioridad. No se requieren implementaciones para admitir esta propiedad.</target>
        </trans-unit>
        <trans-unit id="409d3cb09e216ae9eebb19f69a247b9587c15e78" translate="yes" xml:space="preserve">
          <source>Which differences in the strings should lead to non-zero result values. Possible values are:</source>
          <target state="translated">Qué diferencias en las cuerdas deberían llevar a valores de resultados distintos de cero.Los posibles valores son:</target>
        </trans-unit>
        <trans-unit id="bcfad7654f8d1a6238d209dabf8575ba4fc8a8d5" translate="yes" xml:space="preserve">
          <source>Which is comparable to a combination of import and export:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e0b50fa501f3e075ed3caa4558f484a35b35ed" translate="yes" xml:space="preserve">
          <source>Which is equivalent to this ES5-like notation (but note that ECMAScript 5 has no generators):</source>
          <target state="translated">Lo que equivale a esta notación parecida a la de ES5 (pero tened en cuenta que ECMAScript 5 no tiene generadores):</target>
        </trans-unit>
        <trans-unit id="b4058d988b68a591791672c437b5138156c70fb0" translate="yes" xml:space="preserve">
          <source>While it is possible to use it as an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Identifier&quot;&gt;identifier&lt;/a&gt; (variable name) in any scope other than the global scope (because &lt;code&gt;undefined&lt;/code&gt; is not a &lt;a href=&quot;../lexical_grammar&quot;&gt;&lt;code&gt;reserved word&lt;/code&gt;&lt;/a&gt;), doing so is a very bad idea that will make your code difficult to maintain and debug.</source>
          <target state="translated">Si bien es posible usarlo como un &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Identifier&quot;&gt;identificador&lt;/a&gt; (nombre de variable) en cualquier &amp;aacute;mbito que no sea el &amp;aacute;mbito global (porque &lt;code&gt;undefined&lt;/code&gt; no es una &lt;a href=&quot;../lexical_grammar&quot;&gt; &lt;code&gt;reserved word&lt;/code&gt; &lt;/a&gt; ), hacerlo es una muy mala idea que har&amp;aacute; que su c&amp;oacute;digo sea dif&amp;iacute;cil de mantener y depurar.</target>
        </trans-unit>
        <trans-unit id="2da64180df31dcafd55027f1f995e2a9c4284141" translate="yes" xml:space="preserve">
          <source>While one might expect &lt;code&gt;[1, 2, 3]&lt;/code&gt;, the actual result is &lt;code&gt;[1, NaN, NaN]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4bcc3b592837d887f0cd400a8cd6f62f2e9524" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;getRandomInt()&lt;/code&gt; function above is inclusive at the minimum, it's exclusive at the maximum. What if you need the results to be inclusive at both the minimum and the maximum? The &lt;code&gt;getRandomIntInclusive()&lt;/code&gt; function below accomplishes that.</source>
          <target state="translated">Si bien la funci&amp;oacute;n &lt;code&gt;getRandomInt()&lt;/code&gt; anterior es inclusiva como m&amp;iacute;nimo, es exclusiva como m&amp;aacute;ximo. &amp;iquest;Qu&amp;eacute; sucede si necesita que los resultados sean inclusivos tanto en el m&amp;iacute;nimo como en el m&amp;aacute;ximo? La funci&amp;oacute;n &lt;code&gt;getRandomIntInclusive()&lt;/code&gt; continuaci&amp;oacute;n logra eso.</target>
        </trans-unit>
        <trans-unit id="422a50fcd932cf09461ff73dc9389d20a7f3d491" translate="yes" xml:space="preserve">
          <source>While the ECMAScript 2015 specification dictates that support for &lt;code&gt;__proto__&lt;/code&gt; is required &lt;em&gt;only&lt;/em&gt; for web browsers (although being normative), other environments may support it as well for legacy usage.</source>
          <target state="translated">Si bien la especificaci&amp;oacute;n ECMAScript 2015 dicta que la compatibilidad con &lt;code&gt;__proto__&lt;/code&gt; es necesaria &lt;em&gt;solo&lt;/em&gt; para navegadores web (aunque es normativa), otros entornos tambi&amp;eacute;n pueden admitirla para uso heredado.</target>
        </trans-unit>
        <trans-unit id="0acebce76dc2cd57f170d95edbe4d4984174a0e1" translate="yes" xml:space="preserve">
          <source>While the above could have been achieved by using map itself, here is an example showing usecase of &lt;code&gt;flatMap&lt;/code&gt; better.</source>
          <target state="translated">Si bien lo anterior podr&amp;iacute;a haberse logrado utilizando el mapa en s&amp;iacute;, aqu&amp;iacute; hay un ejemplo que muestra mejor el caso de &lt;code&gt;flatMap&lt;/code&gt; de flatMap .</target>
        </trans-unit>
        <trans-unit id="19ab216936a03f5a8a1e20065e35cef00438bf07" translate="yes" xml:space="preserve">
          <source>While the above could have been achieved by using map itself, here is an example that better showcases the use of &lt;code&gt;flatMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ba54aa47463298ab15b4926dab22deaea900ac" translate="yes" xml:space="preserve">
          <source>While the default for a constructor is to return the object referenced by &lt;code&gt;this&lt;/code&gt;, it can instead return some other object (if the return value isn't an object, then the &lt;code&gt;this&lt;/code&gt; object is returned).</source>
          <target state="translated">Si bien el valor predeterminado para un constructor es devolver el objeto al que hace referencia &lt;code&gt;this&lt;/code&gt; , en su lugar puede devolver alg&amp;uacute;n otro objeto (si el valor de retorno no es un objeto, entonces se devuelve &lt;code&gt;this&lt;/code&gt; objeto).</target>
        </trans-unit>
        <trans-unit id="5da980bb0e9f20c608cae3ff8a2bb3037a714271" translate="yes" xml:space="preserve">
          <source>While the example above may be more frequently useful for those wishing to support non-BMP characters (since it does not require the caller to know where any non-BMP character might appear), in the event that one &lt;em&gt;does&lt;/em&gt; wish, in choosing a character by index, to treat the surrogate pairs within a string as the single characters they represent, one can use the following:</source>
          <target state="translated">Si bien el ejemplo anterior puede ser m&amp;aacute;s &amp;uacute;til para aquellos que desean admitir caracteres que no son BMP (ya que no requiere que la persona que llama sepa d&amp;oacute;nde puede aparecer cualquier personaje que no sea BMP), en caso de que uno &lt;em&gt;lo&lt;/em&gt; desee, al elegir un personaje por &amp;iacute;ndice, para tratar los pares sustitutos dentro de una cadena como los caracteres individuales que representan, se puede usar lo siguiente:</target>
        </trans-unit>
        <trans-unit id="dc45a2dbfff0098f43fa78071c28b30146b93be3" translate="yes" xml:space="preserve">
          <source>While the global &lt;code&gt;Boolean&lt;/code&gt; object contains no methods of its own, it does inherit some methods through the prototype chain:</source>
          <target state="translated">Si bien el objeto &lt;code&gt;Boolean&lt;/code&gt; global no contiene m&amp;eacute;todos propios, hereda algunos m&amp;eacute;todos a trav&amp;eacute;s de la cadena de prototipos:</target>
        </trans-unit>
        <trans-unit id="2161593d5d8982921089f7cbb2a5911273e6036c" translate="yes" xml:space="preserve">
          <source>While the language subtag must be specified, the &lt;a href=&quot;../locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; constructor takes a configuration object, which can override the language subtag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd25deff42b47bc21007ff46f15b4793d07b657" translate="yes" xml:space="preserve">
          <source>While the presence of rest, default, or destructured parameters does not alter &lt;a href=&quot;../strict_mode#Making_eval_and_arguments_simpler&quot;&gt;the behavior of the &lt;code&gt;arguments&lt;/code&gt; object in strict mode code&lt;/a&gt;, there are subtle differences for non-strict code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754c2cfd74edd0a0f3da4cdc49e1567cb42f2d2f" translate="yes" xml:space="preserve">
          <source>While the presence of rest, default, or destructured parameters does not alter the &lt;a href=&quot;../strict_mode#Making_eval_and_arguments_simpler&quot;&gt;behavior of the &lt;code&gt;arguments&lt;/code&gt; object in strict mode code&lt;/a&gt;, there is a subtle difference for non-strict code.</source>
          <target state="translated">Si bien la presencia de par&amp;aacute;metros en reposo, predeterminados o desestructurados no altera el &lt;a href=&quot;../strict_mode#Making_eval_and_arguments_simpler&quot;&gt;comportamiento del objeto de &lt;code&gt;arguments&lt;/code&gt; en el c&amp;oacute;digo de modo estricto&lt;/a&gt; , existe una diferencia sutil para el c&amp;oacute;digo no estricto.</target>
        </trans-unit>
        <trans-unit id="86871c452d835c9bb0656ac4369ce15ae627e0cc" translate="yes" xml:space="preserve">
          <source>While the previous example may be more useful for programs that must support non-BMP characters (since it does not require the caller to know where any non-BMP character might appear), in the event that one &lt;em&gt;does&lt;/em&gt; wish, in choosing a character by index, to treat the surrogate pairs within a string as the single characters they represent, one can use the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1898a9a52f5f189d1cdad956c67255aabca17fcd" translate="yes" xml:space="preserve">
          <source>While there is a mathematical relationship between the supplementary code point value (e.g. &lt;code&gt;0x1F303&lt;/code&gt;) and both surrogate values that represent it (e.g., &lt;code&gt;0xD83C&lt;/code&gt; and &lt;code&gt;0xDF03&lt;/code&gt;), it does require an extra step to either calculate or look up the surrogate pair values every time a supplementary code point is to be used. For this reason, it's more convenient to use &lt;a href=&quot;fromcodepoint&quot;&gt;&lt;code&gt;String.fromCodePoint()&lt;/code&gt;&lt;/a&gt; (part of the ES2015 standard), which allows for returning supplementary characters based on their actual code point value. For example, &lt;code&gt;String.fromCodePoint(0x1F303)&lt;/code&gt; returns code point &lt;code&gt;U+1F303&lt;/code&gt; &quot;Night with Stars&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee74c5dc317ead4501bb172deb6ecbf325e410c" translate="yes" xml:space="preserve">
          <source>While this code works in web browsers, &lt;code&gt;f1()&lt;/code&gt; will produce a &lt;code&gt;ReferenceError&lt;/code&gt; in Node.js, as &lt;code&gt;x&lt;/code&gt; will not be found. This is because the top-level scope in Node is not the global scope, and &lt;code&gt;x&lt;/code&gt; will be local to the module.</source>
          <target state="translated">Si bien este c&amp;oacute;digo funciona en navegadores web, &lt;code&gt;f1()&lt;/code&gt; producir&amp;aacute; un &lt;code&gt;ReferenceError&lt;/code&gt; en Node.js, ya que no se encontrar&amp;aacute; &lt;code&gt;x&lt;/code&gt; . Esto se debe a que el alcance de nivel superior en Node no es el alcance global y &lt;code&gt;x&lt;/code&gt; ser&amp;aacute; local para el m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="8c1dd5773144bb844846a13a61100a6092a5d7fc" translate="yes" xml:space="preserve">
          <source>While time zone specifiers are used during date string parsing to interpret the argument, the value returned is always the number of milliseconds between January 1, 1970 00:00:00 UTC and the point in time represented by the argument or &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">Si bien los especificadores de zona horaria se utilizan durante el an&amp;aacute;lisis de la cadena de fecha para interpretar el argumento, el valor devuelto es siempre el n&amp;uacute;mero de milisegundos entre el 1 de enero de 1970 a las 00:00:00 UTC y el punto en el tiempo representado por el argumento o &lt;code&gt;NaN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="953c8803bee8e5987794f61df8cc754051cb6133" translate="yes" xml:space="preserve">
          <source>While using the &lt;code&gt;get&lt;/code&gt; keyword and &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; have similar results there is a subtle difference between the two when used on &lt;a href=&quot;../classes&quot;&gt;&lt;code&gt;classes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si bien el uso de la palabra clave &lt;code&gt;get&lt;/code&gt; y &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; tienen resultados similares, existe una sutil diferencia entre los dos cuando se usan en &lt;a href=&quot;../classes&quot;&gt; &lt;code&gt;classes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b14745b60cc7fb7606f0eeaa29d1a1a345a5b7e" translate="yes" xml:space="preserve">
          <source>While using the &lt;code&gt;get&lt;/code&gt; keyword and &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; have similar results, there is a subtle difference between the two when used on &lt;a href=&quot;../classes&quot;&gt;&lt;code&gt;classes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06deb9757844f6415e02e27e7b2285717965855" translate="yes" xml:space="preserve">
          <source>While you can call &lt;code&gt;toString()&lt;/code&gt; on Symbols, you can't use string concatenation with them:</source>
          <target state="translated">Si bien puede llamar a &lt;code&gt;toString()&lt;/code&gt; en los s&amp;iacute;mbolos, no puede usar la concatenaci&amp;oacute;n de cadenas con ellos:</target>
        </trans-unit>
        <trans-unit id="73c132c17880b636ca80bf0543c42e88767a2885" translate="yes" xml:space="preserve">
          <source>While you can call &lt;code&gt;toString()&lt;/code&gt; on Symbols, you cannot use string concatenation with them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4417940eddab0238942207d10f65cee1950b8fbf" translate="yes" xml:space="preserve">
          <source>White space</source>
          <target state="translated">Espacio en blanco</target>
        </trans-unit>
        <trans-unit id="6dd42890c4c75aff925417ab90dcd9e8dd85711a" translate="yes" xml:space="preserve">
          <source>White space characters</source>
          <target state="translated">Los personajes de los espacios en blanco</target>
        </trans-unit>
        <trans-unit id="58ece77676dc50a4261c8720d525e151d47580f6" translate="yes" xml:space="preserve">
          <source>White space characters improve the readability of source text and separate tokens from each other. These characters are usually unnecessary for the functionality of the code. &lt;a href=&quot;http://en.wikipedia.org/wiki/Minification_%28programming%29&quot;&gt;Minification tools&lt;/a&gt; are often used to remove whitespace in order to reduce the amount of data that needs to be transferred.</source>
          <target state="translated">Los caracteres de espacio en blanco mejoran la legibilidad del texto fuente y separan los tokens entre s&amp;iacute;. Estos caracteres suelen ser innecesarios para la funcionalidad del c&amp;oacute;digo. &lt;a href=&quot;http://en.wikipedia.org/wiki/Minification_%28programming%29&quot;&gt;Las herramientas de minificaci&amp;oacute;n&lt;/a&gt; se utilizan a menudo para eliminar espacios en blanco con el fin de reducir la cantidad de datos que deben transferirse.</target>
        </trans-unit>
        <trans-unit id="56135659307c63612395a3e2ea7095b53ecfdfb9" translate="yes" xml:space="preserve">
          <source>Why &lt;em&gt;Weak&lt;/em&gt;Map?</source>
          <target state="translated">&amp;iquest;Por qu&amp;eacute; &lt;em&gt;Weak&lt;/em&gt; Map?</target>
        </trans-unit>
        <trans-unit id="5a2140525e7413992c7cff959be09acc6c7bd9f8" translate="yes" xml:space="preserve">
          <source>Why Use for...in?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18ac4a80863bedc913f28086690a04a62dbcb4b" translate="yes" xml:space="preserve">
          <source>Why are &lt;code&gt;Array&lt;/code&gt; and &lt;code&gt;ArrayBuffer&lt;/code&gt; length limited? The &lt;code&gt;length&lt;/code&gt; property of an &lt;code&gt;Array&lt;/code&gt; or an &lt;code&gt;ArrayBuffer&lt;/code&gt; is represented with an unsigned 32-bit integer, that can only store values which are in the range from 0 to 2&lt;sup&gt;32&lt;/sup&gt;-1.</source>
          <target state="translated">&amp;iquest;Por qu&amp;eacute; la longitud de &lt;code&gt;Array&lt;/code&gt; y &lt;code&gt;ArrayBuffer&lt;/code&gt; es limitada? La propiedad de &lt;code&gt;length&lt;/code&gt; de un &lt;code&gt;Array&lt;/code&gt; o un &lt;code&gt;ArrayBuffer&lt;/code&gt; se representa con un entero de 32 bits sin signo, que solo puede almacenar valores que est&amp;aacute;n en el rango de 0 a 2 &lt;sup&gt;32&lt;/sup&gt; -1.</target>
        </trans-unit>
        <trans-unit id="10dc88c706996e78fc39528141fd896ad070d58e" translate="yes" xml:space="preserve">
          <source>Why is this parameter's value limited to 36? A radix that is larger than 10 uses alphabetical characters as digits; therefore, the radix can't be larger than 36, since the Latin alphabet (used by English and many other languages) only has 26 characters.</source>
          <target state="translated">¿Por qué el valor de este parámetro está limitado a 36? Un radix que es mayor que 10 utiliza caracteres alfabéticos como dígitos;por lo tanto,el radix no puede ser mayor que 36,ya que el alfabeto latino (utilizado por el inglés y muchos otros idiomas)sólo tiene 26 caracteres.</target>
        </trans-unit>
        <trans-unit id="618dcccfbbecf181b17b9b6f5832100e86ffc295" translate="yes" xml:space="preserve">
          <source>Why should I have semicolons after &lt;code&gt;return&lt;/code&gt; statements? In the case of semicolon-less &lt;code&gt;return&lt;/code&gt; statements, it can be unclear whether the developer intended to return the statement on the following line, or to stop execution and return. The warning indicates that there is ambiguity in the way the &lt;code&gt;return&lt;/code&gt; statement is written.</source>
          <target state="translated">&amp;iquest;Por qu&amp;eacute; deber&amp;iacute;a tener punto y coma despu&amp;eacute;s de las declaraciones de &lt;code&gt;return&lt;/code&gt; ? En el caso de declaraciones de &lt;code&gt;return&lt;/code&gt; punto y coma , puede no estar claro si el desarrollador ten&amp;iacute;a la intenci&amp;oacute;n de devolver la instrucci&amp;oacute;n en la siguiente l&amp;iacute;nea o detener la ejecuci&amp;oacute;n y regresar. La advertencia indica que hay ambig&amp;uuml;edad en la forma en que se escribe la declaraci&amp;oacute;n de &lt;code&gt;return&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d48965f0e46a04887ba1bfd8d7dc5dfb478aa487" translate="yes" xml:space="preserve">
          <source>Why typeof is no longer &quot;safe&quot;</source>
          <target state="translated">Por qué el tipo de letra ya no es &quot;seguro&quot;...</target>
        </trans-unit>
        <trans-unit id="8e0ddeda8abebbf09db45b8469651941e72c421f" translate="yes" xml:space="preserve">
          <source>Why was &lt;code&gt;arguments.callee&lt;/code&gt; removed from ES5 strict mode?</source>
          <target state="translated">&amp;iquest;Por qu&amp;eacute; se elimin&amp;oacute; &lt;code&gt;arguments.callee&lt;/code&gt; del modo estricto ES5?</target>
        </trans-unit>
        <trans-unit id="664add438097fbd4307f814de8e62a10f8905588" translate="yes" xml:space="preserve">
          <source>Wikipedia</source>
          <target state="translated">Wikipedia</target>
        </trans-unit>
        <trans-unit id="fc90e19e7c90bbe670541c0f5fedefeeffd5bc8c" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty&lt;/code&gt;&lt;/a&gt;, which returns an object if successful, or throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; otherwise, you would use a &lt;code&gt;&lt;a href=&quot;../../statements/try...catch&quot;&gt;try...catch&lt;/a&gt;&lt;/code&gt; block to catch any error that occurred while defining a property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774f369fa241eb34e1821b2f4786673a6ab9040d" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty&lt;/code&gt;&lt;/a&gt;, which returns an object if successful, or throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; otherwise, you would use a &lt;code&gt;&lt;a href=&quot;../../statements/try...catch&quot;&gt;try...catch&lt;/a&gt;&lt;/code&gt; block to catch any error that occurred while defining a property. Because &lt;code&gt;Reflect.defineProperty&lt;/code&gt; returns a Boolean success status, you can just use an &lt;code&gt;&lt;a href=&quot;../../statements/if...else&quot;&gt;if...else&lt;/a&gt;&lt;/code&gt; block here:</source>
          <target state="translated">Con &lt;a href=&quot;../object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; &lt;/a&gt; , que devuelve un objeto si tiene &amp;eacute;xito, o arroja un &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; de lo&lt;/a&gt; contrario, usar&amp;iacute;a un bloque &lt;code&gt;&lt;a href=&quot;../../statements/try...catch&quot;&gt;try...catch&lt;/a&gt;&lt;/code&gt; para detectar cualquier error que ocurra al definir una propiedad. Debido a que &lt;code&gt;Reflect.defineProperty&lt;/code&gt; devuelve un estado de &amp;eacute;xito booleano, puede usar un bloque &lt;code&gt;&lt;a href=&quot;../../statements/if...else&quot;&gt;if...else&lt;/a&gt;&lt;/code&gt; aqu&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="7d03bcc671d4e20111b39ac27e33af149b30d198" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;export&quot;&gt;&lt;code&gt;export&lt;/code&gt;&lt;/a&gt; statement:</source>
          <target state="translated">Con declaraci&amp;oacute;n de &lt;a href=&quot;export&quot;&gt; &lt;code&gt;export&lt;/code&gt; aci&amp;oacute;n&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="1728d78b2bc05b3a036ceae00791d7a9403f2335" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;Object.fromEntries&lt;/code&gt;, its reverse method &lt;a href=&quot;entries&quot;&gt;&lt;code&gt;Object.entries()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../array#Methods_2&quot;&gt;array manipulation methods&lt;/a&gt;, you are able to transform objects like this:</source>
          <target state="translated">Con &lt;code&gt;Object.fromEntries&lt;/code&gt; , su m&amp;eacute;todo inverso &lt;a href=&quot;entries&quot;&gt; &lt;code&gt;Object.entries()&lt;/code&gt; &lt;/a&gt; y los &lt;a href=&quot;../array#Methods_2&quot;&gt;m&amp;eacute;todos de manipulaci&amp;oacute;n de matrices&lt;/a&gt; , puede transformar objetos como este:</target>
        </trans-unit>
        <trans-unit id="9cfb0dfc4481c360945e0d4e79fddba30e8ce3be" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;Object.fromEntries&lt;/code&gt;, you can convert from &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Con &lt;code&gt;Object.fromEntries&lt;/code&gt; , puede convertir de &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; a &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a711b6f27d4cdbf058cfb7fa87e9f8deaf6527e7" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;Object.fromEntries&lt;/code&gt;, you can convert from &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Con &lt;code&gt;Object.fromEntries&lt;/code&gt; , puede convertir de &lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; a&lt;/a&gt; a &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c06832a2e4034905fb042c5bd8bf7dd7c6d21256" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;Reflect.apply()&lt;/code&gt; this becomes less verbose and easier to understand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208aadfdc7be641c2eadcd1f35dd2acb481bcf2e" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;Reflect.apply&lt;/code&gt; this becomes less verbose and easier to understand.</source>
          <target state="translated">Con &lt;code&gt;Reflect.apply&lt;/code&gt; , esto se vuelve menos detallado y m&amp;aacute;s f&amp;aacute;cil de entender.</target>
        </trans-unit>
        <trans-unit id="232514cc91297bad6899d3a4dc44cdbf417d61c1" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;bind()&lt;/code&gt;, this can be simplified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc40c0b83a5a1e0f7cd995695be0eddc88955c1d" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;bind()&lt;/code&gt;, this can be simplified. In the following piece of code, &lt;code&gt;slice&lt;/code&gt; is a bound function to the &lt;a href=&quot;apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt; function of &lt;a href=&quot;prototype&quot;&gt;&lt;code&gt;Function.prototype&lt;/code&gt;&lt;/a&gt;, with the &lt;code&gt;this&lt;/code&gt; value set to the &lt;a href=&quot;../array/slice&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt; function of &lt;a href=&quot;../array/prototype&quot;&gt;&lt;code&gt;Array.prototype&lt;/code&gt;&lt;/a&gt;. This means that additional &lt;code&gt;apply()&lt;/code&gt; calls can be eliminated:</source>
          <target state="translated">Con &lt;code&gt;bind()&lt;/code&gt; , esto se puede simplificar. En el siguiente fragmento de c&amp;oacute;digo, &lt;code&gt;slice&lt;/code&gt; es una funci&amp;oacute;n vinculada a la funci&amp;oacute;n &lt;a href=&quot;apply&quot;&gt; &lt;code&gt;apply()&lt;/code&gt; &lt;/a&gt; de &lt;a href=&quot;prototype&quot;&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;/a&gt; , con &lt;code&gt;this&lt;/code&gt; valor establecido en la funci&amp;oacute;n &lt;a href=&quot;../array/slice&quot;&gt; &lt;code&gt;slice()&lt;/code&gt; &lt;/a&gt; de &lt;a href=&quot;../array/prototype&quot;&gt; &lt;code&gt;Array.prototype&lt;/code&gt; &lt;/a&gt; . Esto significa que se pueden eliminar llamadas adicionales de &lt;code&gt;apply()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9f185f47d5a386fb308bb9a614fa476e8ad9c192" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;function&lt;/code&gt;</source>
          <target state="translated">Con &lt;code&gt;function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a41672e22e23478e02019019bf7651a052b68e4" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;globalThis&lt;/code&gt; available, the additional search for the global across environments is not necessary anymore:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0e2c98286936cffbc564e4c2ede2b3236a3779" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;let &lt;/code&gt;and &lt;code&gt;const&lt;/code&gt;</source>
          <target state="translated">Con &lt;code&gt;let &lt;/code&gt; y &lt;code&gt;const&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="038d4136a39308b9ef408c0f73c65c95014d785a" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;matchAll&lt;/code&gt; available, you can avoid the &lt;a href=&quot;../../statements/while&quot;&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt; loop and &lt;code&gt;exec&lt;/code&gt; with &lt;code&gt;g&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c185ec765370246c8e1fbde6bca18b8428c018b" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;setTimeout()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa74f615bce37e2117caa0762ba7ba608f81ac40" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;setTimeout&lt;/code&gt;</source>
          <target state="translated">Con &lt;code&gt;setTimeout&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21469fc9df0d04c5e3fafe084c282aa1f2e60292" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;var&lt;/code&gt;</source>
          <target state="translated">Con &lt;code&gt;var&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4221a43ca34aa965bce8383f31c441460c4fdd5f" translate="yes" xml:space="preserve">
          <source>With Arrow functions, since our &lt;code&gt;add&lt;/code&gt; function is essentially created on the &lt;code&gt;window&lt;/code&gt; (global) scope, it will assume &lt;code&gt;this&lt;/code&gt; is the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457bcd5a3882759faf970cecd9f82427f29102a8" translate="yes" xml:space="preserve">
          <source>With ECMAScript 2015 (ES6) support made available in most modern browsers, there will be cases where you would want to use &lt;a href=&quot;let&quot;&gt;&lt;code&gt;let&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;const&quot;&gt;&lt;code&gt;const&lt;/code&gt;&lt;/a&gt; statements to declare block-scoped variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc297f6bb9122db9a8f1cccfdd9c56fb22262e7" translate="yes" xml:space="preserve">
          <source>With ECMAScript 2015, there is a shorter notation available to achieve the same:</source>
          <target state="translated">Con ECMAScript 2015,hay una notación más corta disponible para lograr lo mismo:</target>
        </trans-unit>
        <trans-unit id="a6b414ce065ab8f5d06d37d991a2b6c5c4d3568d" translate="yes" xml:space="preserve">
          <source>With ES2015 &lt;a href=&quot;../functions/method_definitions&quot;&gt;method definitions&lt;/a&gt;, this can be converted to:</source>
          <target state="translated">Con las &lt;a href=&quot;../functions/method_definitions&quot;&gt;definiciones del m&amp;eacute;todo&lt;/a&gt; ES2015 , esto se puede convertir a:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
