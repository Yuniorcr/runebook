<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="fish">
    <body>
      <group id="fish">
        <trans-unit id="9c47b741a075c31ca3e2cd472a89d590bf7358b1" translate="yes" xml:space="preserve">
          <source>However using variables as indices for command substitution is currently not supported, so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ece1cae89b5ddaf2b419721f67d267e2d87fe0b" translate="yes" xml:space="preserve">
          <source>However, it is more common and efficient to use autoloading functions and universal variables.</source>
          <target state="translated">Sin embargo,es más común y eficiente utilizar funciones de autocarga y variables universales.</target>
        </trans-unit>
        <trans-unit id="ca73ab65568cd125c2d27a22bbd9e863c10b675d" translate="yes" xml:space="preserve">
          <source>I</source>
          <target state="translated">I</target>
        </trans-unit>
        <trans-unit id="332860b83cabf222387565b3cbb3a4ca2b6a60c7" translate="yes" xml:space="preserve">
          <source>I accidentally entered a directory path and fish changed directory. What happened?</source>
          <target state="translated">Entré accidentalmente en un directorio y Fish cambió de directorio.¿Qué ha pasado?</target>
        </trans-unit>
        <trans-unit id="3fa38a6c40854bfd0c5b8465a45e20805cb6f30b" translate="yes" xml:space="preserve">
          <source>I'm getting weird graphical glitches (a staircase effect, ghost characters,...)?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077b540fd621e89ad74c3aa41ae8c6bb0c4148b1" translate="yes" xml:space="preserve">
          <source>I'm seeing weird output before each prompt when using screen. What's wrong?</source>
          <target state="translated">Estoy viendo una salida extraña antes de cada indicación cuando uso la pantalla.¿Qué es lo que está mal?</target>
        </trans-unit>
        <trans-unit id="639bf0b0aff96876be47fb838f518342cc2e94f3" translate="yes" xml:space="preserve">
          <source>IO redirections like &amp;gt;/dev/null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf1b05d1769ec6457d76c24cbcd4eac62d22fbc" translate="yes" xml:space="preserve">
          <source>If $WORD here is undefined or an empty list, the &quot;s&quot; is not printed. However, it is printed if $WORD is the empty string (like after &lt;code&gt;set WORD &quot;&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7884771064847db56c0b28c42a19e5f67be016fb" translate="yes" xml:space="preserve">
          <source>If $animals is a list of animals, the following will test if it contains a cat:</source>
          <target state="translated">Si $animales es una lista de animales,lo siguiente probará si contiene un gato:</target>
        </trans-unit>
        <trans-unit id="6288311089317cecbe49c2b077270e72c24f0c74" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$animal&lt;/code&gt; was set to &quot;banana&quot;, it would print &quot;I have no idea what a banana is&quot;.</source>
          <target state="translated">Si &lt;code&gt;$animal&lt;/code&gt; estuviera configurado como &quot;banana&quot;, se imprimir&amp;iacute;a &quot;No tengo idea de lo que es una banana&quot;.</target>
        </trans-unit>
        <trans-unit id="6529dd48f4bbe7af35d8ee17e053a860dce8bc42" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$argv&lt;/code&gt; is empty then there is nothing to parse and &lt;code&gt;argparse&lt;/code&gt; returns zero to indicate success. If &lt;code&gt;$argv&lt;/code&gt; is not empty then it is checked for flags &lt;code&gt;-h&lt;/code&gt;, &lt;code&gt;--help&lt;/code&gt;, &lt;code&gt;-n&lt;/code&gt; and &lt;code&gt;--name&lt;/code&gt;. If they are found they are removed from the arguments and local variables (more on this &lt;a href=&quot;argparse-local-variables&quot;&gt;below&lt;/a&gt;) are set so the script can determine which options were seen. Assuming &lt;code&gt;$argv&lt;/code&gt; doesn't have any errors, such as a missing mandatory value for an option, then &lt;code&gt;argparse&lt;/code&gt; exits with status zero. Otherwise it writes appropriate error messages to stderr and exits with a status of one.</source>
          <target state="translated">Si &lt;code&gt;$argv&lt;/code&gt; est&amp;aacute; vac&amp;iacute;o, entonces no hay nada que analizar y &lt;code&gt;argparse&lt;/code&gt; devuelve cero para indicar &amp;eacute;xito. Si &lt;code&gt;$argv&lt;/code&gt; no est&amp;aacute; vac&amp;iacute;o, se verifican los indicadores &lt;code&gt;-h&lt;/code&gt; , &lt;code&gt;--help&lt;/code&gt; , &lt;code&gt;-n&lt;/code&gt; y &lt;code&gt;--name&lt;/code&gt; . Si se encuentran, se eliminan de los argumentos y se establecen las variables locales (m&amp;aacute;s sobre esto a &lt;a href=&quot;argparse-local-variables&quot;&gt;continuaci&amp;oacute;n&lt;/a&gt; ) para que el script pueda determinar qu&amp;eacute; opciones se vieron. Suponiendo que &lt;code&gt;$argv&lt;/code&gt; no tiene ning&amp;uacute;n error, como un valor obligatorio que falta para una opci&amp;oacute;n, &lt;code&gt;argparse&lt;/code&gt; sale con el estado cero. De lo contrario, escribe los mensajes de error apropiados en stderr y sale con un estado de uno.</target>
        </trans-unit>
        <trans-unit id="c0fbfd35fc6ed08657df1862ed0095c68b3987ae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$argv&lt;/code&gt; is empty then there is nothing to parse and &lt;code&gt;argparse&lt;/code&gt; returns zero to indicate success. If &lt;code&gt;$argv&lt;/code&gt; is not empty then it is checked for flags &lt;code&gt;-h&lt;/code&gt;, &lt;code&gt;--help&lt;/code&gt;, &lt;code&gt;-n&lt;/code&gt; and &lt;code&gt;--name&lt;/code&gt;. If they are found they are removed from the arguments and local variables are set so the script can determine which options were seen. Assuming &lt;code&gt;$argv&lt;/code&gt; doesn't have any errors, such as a missing mandatory value for an option, then &lt;code&gt;argparse&lt;/code&gt; exits with status zero. Otherwise it writes appropriate error messages to stderr and exits with a status of one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5aebf9be775c6394cdc60c0ad1ceaf1b0a07403" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$argv&lt;/code&gt; is empty then there is nothing to parse and &lt;code&gt;argparse&lt;/code&gt; returns zero to indicate success. If &lt;code&gt;$argv&lt;/code&gt; is not empty then it is checked for flags &lt;code&gt;-h&lt;/code&gt;, &lt;code&gt;--help&lt;/code&gt;, &lt;code&gt;-n&lt;/code&gt; and &lt;code&gt;--name&lt;/code&gt;. If they are found they are removed from the arguments and local variables called &lt;code&gt;_flag_OPTION&lt;/code&gt; are set so the script can determine which options were seen. If &lt;code&gt;$argv&lt;/code&gt; doesn't have any errors, like a missing mandatory value for an option, then &lt;code&gt;argparse&lt;/code&gt; exits with a status of zero. Otherwise it writes appropriate error messages to stderr and exits with a status of one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d872df0da7e81d8c1be2d6e71a47a3e72854f2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$fish_private_mode&lt;/code&gt; is set to a non-empty value, commands will not be written to the history file on disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c0231ee0546ad7aeb3f50a1a68cbc1c85d1797" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--index&lt;/code&gt; or &lt;code&gt;-n&lt;/code&gt; is given, each match is reported as a 1-based start position and a length. By default, PATTERN is interpreted as a glob pattern matched against each entire STRING argument. A glob pattern is only considered a valid match if it matches the entire STRING.</source>
          <target state="translated">Si se proporciona &lt;code&gt;--index&lt;/code&gt; o &lt;code&gt;-n&lt;/code&gt; , cada coincidencia se informa como una posici&amp;oacute;n de inicio basada en 1 y una duraci&amp;oacute;n. De forma predeterminada, PATTERN se interpreta como un patr&amp;oacute;n global que se compara con cada argumento STRING completo. Un patr&amp;oacute;n global solo se considera una coincidencia v&amp;aacute;lida si coincide con la STRING completa.</target>
        </trans-unit>
        <trans-unit id="dbf8f89e324b9e1f656b472c919d4c7a437efce4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--invert&lt;/code&gt; or &lt;code&gt;-v&lt;/code&gt; is used the selected lines will be only those which do not match the given glob pattern or regular expression.</source>
          <target state="translated">Si se &lt;code&gt;--invert&lt;/code&gt; o &lt;code&gt;-v&lt;/code&gt; , las l&amp;iacute;neas seleccionadas ser&amp;aacute;n solo aquellas que no coincidan con el patr&amp;oacute;n glob o expresi&amp;oacute;n regular dados.</target>
        </trans-unit>
        <trans-unit id="0477403438bc546d3f9ceccb9070392b46aee810" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--move&lt;/code&gt; is used, it may of course lead to the path swapping order, so you should be careful doing that in config.fish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca5e01e9673f9e6a815d4bc3b45775fa51fbbf4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--regex&lt;/code&gt; or &lt;code&gt;-r&lt;/code&gt; is given, PATTERN is interpreted as a Perl-compatible regular expression, which does not have to match the entire STRING. For a regular expression containing capturing groups, multiple items will be reported for each match, one for the entire match and one for each capturing group. With this, only the matching part of the STRING will be reported, unless &lt;code&gt;--entire&lt;/code&gt; is given.</source>
          <target state="translated">Si se proporciona &lt;code&gt;--regex&lt;/code&gt; o &lt;code&gt;-r&lt;/code&gt; , PATTERN se interpreta como una expresi&amp;oacute;n regular compatible con Perl, que no tiene por qu&amp;eacute; coincidir con la STRING completa. Para una expresi&amp;oacute;n regular que contiene grupos de captura, se informar&amp;aacute;n varios elementos para cada coincidencia, uno para toda la coincidencia y uno para cada grupo de captura. Con esto, solo se informar&amp;aacute; la parte coincidente de STRING, a menos que se proporcione &lt;code&gt;--entire&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fcb2b97b9b74110a92108364c83d3b0d2cdf428f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--array&lt;/code&gt; is provided, only one variable name is allowed and the tokens are stored as a list in this variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e269b8b85f5f48b405e1f529c5cc1623456789e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--array&lt;/code&gt; is provided, only one variable name is allowed and the tokens are stored as an array in this variable.</source>
          <target state="translated">Si se proporciona &lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;--array&lt;/code&gt; , solo se permite un nombre de variable y los tokens se almacenan como una matriz en esta variable.</target>
        </trans-unit>
        <trans-unit id="27479dcd11f9e1927be7c3559e78933c9baee94b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--char&lt;/code&gt; is given, pad with CHAR instead of whitespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6dcb1b88668c5c41c70fbdad2157ee6171f60f0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-e&lt;/code&gt; is used, the following sequences are recognized:</source>
          <target state="translated">Si se utiliza &lt;code&gt;-e&lt;/code&gt; , se reconocen las siguientes secuencias:</target>
        </trans-unit>
        <trans-unit id="e5d5482f59147347f76e114d12618ff3d78fea80" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--regex&lt;/code&gt; is given, PATTERN is interpreted as a Perl-compatible regular expression, and REPLACEMENT can contain C-style escape sequences like &lt;code&gt;\t&lt;/code&gt; as well as references to capturing groups by number or name as &lt;code&gt;$n&lt;/code&gt; or &lt;code&gt;${n}&lt;/code&gt;.</source>
          <target state="translated">Si &lt;code&gt;-r&lt;/code&gt; o &lt;code&gt;--regex&lt;/code&gt; se da, el patr&amp;oacute;n se interpreta como una expresi&amp;oacute;n regular compatible con Perl, y reemplazo puede contener secuencias de escape de estilo C como &lt;code&gt;\t&lt;/code&gt; , as&amp;iacute; como las referencias a grupos de captura en n&amp;uacute;mero o nombre como &lt;code&gt;$n&lt;/code&gt; o &lt;code&gt;${n}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0451d245611bea211070a667bbded49226ef6ea9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--right&lt;/code&gt; is given, add the padding after a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227584b023d6d2c7837f693e7e9b190c0c0b3bf5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ARG&lt;/code&gt; and &lt;code&gt;REASON&lt;/code&gt; are both specified, &lt;code&gt;ARG&lt;/code&gt; is the command to be executed when the event specified by &lt;code&gt;REASON&lt;/code&gt; occurs (e.g., the signal is delivered).</source>
          <target state="translated">Si se especifican &lt;code&gt;ARG&lt;/code&gt; y &lt;code&gt;REASON&lt;/code&gt; , &lt;code&gt;ARG&lt;/code&gt; es el comando que se ejecutar&amp;aacute; cuando se produzca el evento especificado por &lt;code&gt;REASON&lt;/code&gt; (por ejemplo, se env&amp;iacute;a la se&amp;ntilde;al).</target>
        </trans-unit>
        <trans-unit id="d6a059f39530ea46f03b1a88f280774a9e1b7e4c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ARG&lt;/code&gt; is absent (and there is a single REASON) or -, each specified signal is reset to its original disposition (the value it had upon entrance to the shell). If &lt;code&gt;ARG&lt;/code&gt; is the null string the signal specified by each &lt;code&gt;REASON&lt;/code&gt; is ignored by the shell and by the commands it invokes.</source>
          <target state="translated">Si &lt;code&gt;ARG&lt;/code&gt; est&amp;aacute; ausente (y hay una &amp;uacute;nica RAZ&amp;Oacute;N) o -, cada se&amp;ntilde;al especificada se restablece a su disposici&amp;oacute;n original (el valor que ten&amp;iacute;a al entrar en el caparaz&amp;oacute;n). Si &lt;code&gt;ARG&lt;/code&gt; es la cadena nula, la se&amp;ntilde;al especificada por cada &lt;code&gt;REASON&lt;/code&gt; es ignorada por el shell y por los comandos que invoca.</target>
        </trans-unit>
        <trans-unit id="0310897c6525d4c0a20301e5b59490367df8d786" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ARG&lt;/code&gt; is not present and &lt;code&gt;-p&lt;/code&gt; has been supplied, then the trap commands associated with each &lt;code&gt;REASON&lt;/code&gt; are displayed. If no arguments are supplied or if only &lt;code&gt;-p&lt;/code&gt; is given, &lt;code&gt;trap&lt;/code&gt; prints the list of commands associated with each signal.</source>
          <target state="translated">Si &lt;code&gt;ARG&lt;/code&gt; no est&amp;aacute; presente y se ha proporcionado &lt;code&gt;-p&lt;/code&gt; , se muestran los comandos trap asociados con cada &lt;code&gt;REASON&lt;/code&gt; . Si no se proporcionan argumentos o si solo se proporciona &lt;code&gt;-p&lt;/code&gt; , &lt;code&gt;trap&lt;/code&gt; imprime la lista de comandos asociados con cada se&amp;ntilde;al.</target>
        </trans-unit>
        <trans-unit id="46f4e7706aaa7715626c2065fdf439e268266771" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DIRECTORY&lt;/code&gt; is a relative path, the paths found in the &lt;code&gt;CDPATH&lt;/code&gt; environment variable array will be tried as prefixes for the specified path.</source>
          <target state="translated">Si &lt;code&gt;DIRECTORY&lt;/code&gt; es una ruta relativa, las rutas que se encuentran en la matriz de variables de entorno &lt;code&gt;CDPATH&lt;/code&gt; se probar&amp;aacute;n como prefijos para la ruta especificada.</target>
        </trans-unit>
        <trans-unit id="d8fdf9c081d12374165457176e730cf87d210ca2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DIRECTORY&lt;/code&gt; is a relative path, the paths found in the &lt;code&gt;CDPATH&lt;/code&gt; list will be tried as prefixes for the specified path, in addition to $PWD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d211b5295328f27c5f4dda2c5b64e33b2d339ae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DIRECTORY&lt;/code&gt; is supplied, it will become the new directory. If no parameter is given, the contents of the &lt;code&gt;HOME&lt;/code&gt; environment variable will be used.</source>
          <target state="translated">Si se proporciona &lt;code&gt;DIRECTORY&lt;/code&gt; , se convertir&amp;aacute; en el nuevo directorio. Si no se proporciona ning&amp;uacute;n par&amp;aacute;metro, se utilizar&amp;aacute; el contenido de la variable de entorno &lt;code&gt;HOME&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee49ba74d2c75163466a92ec95757c32496b3231" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;commandline&lt;/code&gt; is called during a call to complete a given string using &lt;code&gt;complete -C STRING&lt;/code&gt;, &lt;code&gt;commandline&lt;/code&gt; will consider the specified string to be the current contents of the command line.</source>
          <target state="translated">Si se llama a la &lt;code&gt;commandline&lt;/code&gt; durante una llamada para completar una cadena dada usando &lt;code&gt;complete -C STRING&lt;/code&gt; , la &lt;code&gt;commandline&lt;/code&gt; considerar&amp;aacute; que la cadena especificada es el contenido actual de la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="1145ddb3bdeee96521a717d934a15cc64d95077c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fish&lt;/code&gt; encounters a problem while executing a command, the status variable may also be set to a specific value:</source>
          <target state="translated">Si &lt;code&gt;fish&lt;/code&gt; encuentra un problema al ejecutar un comando, la variable de estado tambi&amp;eacute;n puede establecerse en un valor espec&amp;iacute;fico:</target>
        </trans-unit>
        <trans-unit id="f09fbf7f2a9a04bff01d5330effffef51795cab0" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;SECTION&lt;/code&gt; is specified, the help for that command is shown.</source>
          <target state="translated">Si se especifica una &lt;code&gt;SECTION&lt;/code&gt; , se muestra la ayuda para ese comando.</target>
        </trans-unit>
        <trans-unit id="11bdc7a6b00b9fcae9c145670ea2e6640ce69306" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;realpath&lt;/code&gt; command exists, it will be preferred, so if you want to use the builtin you should use &lt;code&gt;builtin realpath&lt;/code&gt; explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d59528d17aca71e945c01c4f608cc07968fec9a" translate="yes" xml:space="preserve">
          <source>If a VCS isn't installed, the respective function does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49d6b1b0943371d699bdcd914d1ffd8f148b167" translate="yes" xml:space="preserve">
          <source>If a component is not an existing directory, &lt;code&gt;fish_add_path&lt;/code&gt; ignores it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965812140edc45643abb7baee6c2564a00e17217" translate="yes" xml:space="preserve">
          <source>If a flag is not seen when parsing the arguments then the corresponding _flag_X var(s) will not be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a983c7d227d19d1c1e4484bef89499880499b5b" translate="yes" xml:space="preserve">
          <source>If a function named &lt;a href=&quot;cmds/fish_greeting#cmd-fish-greeting&quot;&gt;fish_greeting&lt;/a&gt; exists, it will be run when entering interactive mode. Otherwise, if an environment variable named &lt;a href=&quot;cmds/fish_greeting#cmd-fish-greeting&quot;&gt;fish_greeting&lt;/a&gt; exists, it will be printed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebee8483e83b06811ff3ba9ccc429433dce33cd" translate="yes" xml:space="preserve">
          <source>If a function named &lt;code&gt;fish_greeting&lt;/code&gt; exists, it will be run when entering interactive mode. Otherwise, if an environment variable named &lt;code&gt;fish_greeting&lt;/code&gt; exists, it will be printed.</source>
          <target state="translated">Si existe una funci&amp;oacute;n llamada &lt;code&gt;fish_greeting&lt;/code&gt; , se ejecutar&amp;aacute; al ingresar al modo interactivo. De lo contrario, si existe una variable de entorno denominada &lt;code&gt;fish_greeting&lt;/code&gt; , se imprimir&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="97b797a58e10af21dd1b7d448818b7c4a5c38502" translate="yes" xml:space="preserve">
          <source>If a job is stopped, it is sent a signal to continue running, and a warning is printed. It is not possible to use the &lt;a href=&quot;bg#cmd-bg&quot;&gt;bg&lt;/a&gt; builtin to continue a job once it has been disowned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236d9b2bfa9ffd703bff82e438702935d8f276d3" translate="yes" xml:space="preserve">
          <source>If a job is stopped, it is sent a signal to continue running, and a warning is printed. It is not possible to use the &lt;code&gt;bg&lt;/code&gt; builtin to continue a job once it has been disowned.</source>
          <target state="translated">Si se detiene un trabajo, se env&amp;iacute;a una se&amp;ntilde;al para que contin&amp;uacute;e ejecut&amp;aacute;ndose y se imprime una advertencia. No es posible utilizar el &lt;code&gt;bg&lt;/code&gt; incorporado para continuar con un trabajo una vez que ha sido rechazado.</target>
        </trans-unit>
        <trans-unit id="6866740fedf191e9a889c0dfe968149210933d55" translate="yes" xml:space="preserve">
          <source>If a list has 5 elements the indices go from 1 to 5, so a range of &lt;code&gt;2..16&lt;/code&gt; will only go from element 2 to element 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e2a752180a8997dd97af87732b5ed3a03f8d8f" translate="yes" xml:space="preserve">
          <source>If a numeric mask is specified as a parameter, the current shell's umask will be set to that value, and the rights specified by that mask will be removed from new files and directories by default.</source>
          <target state="translated">Si se especifica una máscara numérica como parámetro,la umask de la shell actual se ajustará a ese valor,y los derechos especificados por esa máscara se eliminarán de los nuevos archivos y directorios por defecto.</target>
        </trans-unit>
        <trans-unit id="2dde9e658888f495cea69c0ad8b260a62416e91a" translate="yes" xml:space="preserve">
          <source>If a pid is specified, the command waits for the job that the process with the pid belongs to.</source>
          <target state="translated">Si se especifica un pid,el comando espera el trabajo al que pertenece el proceso con el pid.</target>
        </trans-unit>
        <trans-unit id="f851c83c3c3953c372c81382f02613c546f275f0" translate="yes" xml:space="preserve">
          <source>If a process exits through a signal, the exit status will be 128 plus the number of the signal.</source>
          <target state="translated">Si un proceso sale a través de una señal,el estado de salida será 128 más el número de la señal.</target>
        </trans-unit>
        <trans-unit id="47cb47829c9383def1fb8361853c4c7dd09368a8" translate="yes" xml:space="preserve">
          <source>If a process name is specified, the command waits for the jobs that the matched processes belong to.</source>
          <target state="translated">Si se especifica un nombre de proceso,el comando espera los trabajos a los que pertenecen los procesos coincidentes.</target>
        </trans-unit>
        <trans-unit id="302f9ccffa6bb045e0895a185f5c9e50859c884f" translate="yes" xml:space="preserve">
          <source>If a script produces output, it should finish by calling &lt;code&gt;commandline -f repaint&lt;/code&gt; to tell fish that a repaint is in order.</source>
          <target state="translated">Si una secuencia de comandos produce una salida, deber&amp;iacute;a terminar llamando a la &lt;code&gt;commandline -f repaint&lt;/code&gt; para decirle a Fish que un repintado est&amp;aacute; en orden.</target>
        </trans-unit>
        <trans-unit id="67026ba945428dc31827715c1565311d33b5af8d" translate="yes" xml:space="preserve">
          <source>If a star (&lt;code&gt;*&lt;/code&gt;) or a question mark (&lt;code&gt;?&lt;/code&gt;) is present in the parameter, &lt;code&gt;fish&lt;/code&gt; attempts to match the given parameter to any files in such a way that:</source>
          <target state="translated">Si hay una estrella ( &lt;code&gt;*&lt;/code&gt; ) o un signo de interrogaci&amp;oacute;n ( &lt;code&gt;?&lt;/code&gt; ) En el par&amp;aacute;metro, &lt;code&gt;fish&lt;/code&gt; intenta hacer coincidir el par&amp;aacute;metro dado con cualquier archivo de tal manera que:</target>
        </trans-unit>
        <trans-unit id="18a6fd00e4b1ddec496d39ba9f288b25c849a5d6" translate="yes" xml:space="preserve">
          <source>If a symbolic mask is specified, the desired permission bits, and not the inverse, should be specified. A symbolic mask is a comma separated list of rights. Each right consists of three parts:</source>
          <target state="translated">Si se especifica una máscara simbólica,deben especificarse los bits de permiso deseados,y no lo contrario.Una máscara simbólica es una lista de derechos separada por comas.Cada derecho consta de tres partes:</target>
        </trans-unit>
        <trans-unit id="9ffd05091b2bc11f75c6658a3328814a16ee9e1f" translate="yes" xml:space="preserve">
          <source>If a variable expands to nothing, it will cancel out any other strings attached to it. See the &lt;a href=&quot;#cartesian-product&quot;&gt;cartesian product&lt;/a&gt; section for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3bd46787a5c6b92e6f20cfe4fbc883c75045f2a" translate="yes" xml:space="preserve">
          <source>If a variable has global scope, it is accessible read-write to functions whether it is exported or not.</source>
          <target state="translated">Si una variable tiene un alcance global,es accesible a las funciones de lectura-escritura tanto si se exporta como si no.</target>
        </trans-unit>
        <trans-unit id="741d44bccaaf674b1d069d14a1bdb399e238d593" translate="yes" xml:space="preserve">
          <source>If a variable has local scope and is exported, any function called receives a &lt;em&gt;copy&lt;/em&gt; of it, so any changes it makes to the variable disappear once the function returns.</source>
          <target state="translated">Si una variable tiene alcance local y se exporta, cualquier funci&amp;oacute;n llamada recibe una &lt;em&gt;copia&lt;/em&gt; de ella, por lo que cualquier cambio que realice en la variable desaparece una vez que la funci&amp;oacute;n regresa.</target>
        </trans-unit>
        <trans-unit id="b71ed16ea5a59eda60ec534a14bf2d103ba20ae9" translate="yes" xml:space="preserve">
          <source>If a variable has local scope and is exported, any function called receives a _copy_ of it, so any changes it makes to the variable disappear once the function returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f0994fdaca0f9b1c269335d2df0f4e271c169d" translate="yes" xml:space="preserve">
          <source>If a variable is explicitly set to a scope (universal, global or local), that setting will be honored. If a variable of the same name exists in a different scope, that variable will not be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cbdc88f5e9bb2f3b40009d0379b55ab2352ae84" translate="yes" xml:space="preserve">
          <source>If a variable is explicitly set to either be exported or not exported, that setting will be honored.</source>
          <target state="translated">Si una variable se establece explícitamente para ser exportada o no exportada,ese ajuste será respetado.</target>
        </trans-unit>
        <trans-unit id="ce6484065868b4e9c43f6db14f55a84fe136a4bf" translate="yes" xml:space="preserve">
          <source>If a variable is explicitly set to either universal, global or local, that setting will be honored. If a variable of the same name exists in a different scope, that variable will not be changed.</source>
          <target state="translated">Si una variable se establece explícitamente como universal,global o local,se honrará ese ajuste.Si una variable del mismo nombre existe en un ámbito diferente,esa variable no se cambiará.</target>
        </trans-unit>
        <trans-unit id="7fd2961197b45dfc25c896ad23c85e1abfcf8519" translate="yes" xml:space="preserve">
          <source>If a variable is not explicitly set to a scope and has not been defined, the variable will be local to the currently executing function. Note that this is different from using the &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--local&lt;/code&gt; flag. If one of those flags is used, the variable will be local to the most inner currently executing block, while without these the variable will be local to the function. If no function is executing, the variable will be global.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e687f439d700aaa30c67d0c1c2079a9950e1712" translate="yes" xml:space="preserve">
          <source>If a variable is not explicitly set to a scope, but has been previously defined, the variable scope is not changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326eb232490e8df93b49fd2c3a89fde63906ed77" translate="yes" xml:space="preserve">
          <source>If a variable is not explicitly set to be either exported or not exported and has never before been defined, the variable will not be exported.</source>
          <target state="translated">Si una variable no está explícitamente fijada para ser exportada o no exportada y nunca antes ha sido definida,la variable no será exportada.</target>
        </trans-unit>
        <trans-unit id="ef107fe0701094bebbf7a6322c1155614a1be3ba" translate="yes" xml:space="preserve">
          <source>If a variable is not explicitly set to be either exported or unexported and has never before been defined, the variable will not be exported.</source>
          <target state="translated">Si una variable no está explícitamente establecida para ser exportada o no exportada y nunca antes ha sido definida,la variable no será exportada.</target>
        </trans-unit>
        <trans-unit id="bd6c17ea05cd6c81f352d96759e2622e4a16e84b" translate="yes" xml:space="preserve">
          <source>If a variable is not explicitly set to be either universal, global or local and has never before been defined, the variable will be local to the currently executing function. Note that this is different from using the &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--local&lt;/code&gt; flag. If one of those flags is used, the variable will be local to the most inner currently executing block, while without these the variable will be local to the function. If no function is executing, the variable will be global.</source>
          <target state="translated">Si una variable no se establece expl&amp;iacute;citamente para que sea universal, global o local y nunca antes se ha definido, la variable ser&amp;aacute; local para la funci&amp;oacute;n que se est&amp;aacute; ejecutando actualmente. Tenga en cuenta que esto es diferente de usar la &lt;code&gt;--local&lt;/code&gt; &lt;code&gt;-l&lt;/code&gt; o --local . Si se usa uno de esos indicadores, la variable ser&amp;aacute; local al bloque m&amp;aacute;s interno que se est&amp;aacute; ejecutando actualmente, mientras que sin estos la variable ser&amp;aacute; local a la funci&amp;oacute;n. Si no se est&amp;aacute; ejecutando ninguna funci&amp;oacute;n, la variable ser&amp;aacute; global.</target>
        </trans-unit>
        <trans-unit id="8b2d1734ef9bdd7bd6d21bc623798a68378e6c8b" translate="yes" xml:space="preserve">
          <source>If a variable is not explicitly set to be either universal, global or local, but has been previously defined, the previous variable scope is used.</source>
          <target state="translated">Si una variable no se establece explícitamente como universal,global o local,pero se ha definido previamente,se utiliza el alcance de la variable anterior.</target>
        </trans-unit>
        <trans-unit id="ae5e31cb3d02690bd43a99dc6a823c8568d4b6e8" translate="yes" xml:space="preserve">
          <source>If a variable is not explicitly set to be either universal, global or local, but has been previously defined, the variable scope is not changed.</source>
          <target state="translated">Si una variable no se establece explícitamente como universal,global o local,pero se ha definido previamente,el alcance de la variable no se modifica.</target>
        </trans-unit>
        <trans-unit id="6ccd9990afce6a9aaaa05eb9827a340fd925feb1" translate="yes" xml:space="preserve">
          <source>If a variable is not explicitly set to be exported or not exported, but has been previously defined, the previous exporting rule for the variable is kept.</source>
          <target state="translated">Si una variable no está explícitamente fijada para ser exportada o no exportada,pero ha sido definida previamente,se mantiene la regla de exportación anterior para la variable.</target>
        </trans-unit>
        <trans-unit id="ae603cd6be44b99d51c1566501087ce7b225183b" translate="yes" xml:space="preserve">
          <source>If a variable is set to more than one value, the variable will be a list with the specified elements. If a variable is set to zero elements, it will become a list with zero elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e2106717a7a37128914da8765dc2c6c6697b14" translate="yes" xml:space="preserve">
          <source>If a variable is set to more than one value, the variable will be an array with the specified elements. If a variable is set to zero elements, it will become an array with zero elements.</source>
          <target state="translated">Si una variable se establece en más de un valor,la variable será un arreglo con los elementos especificados.Si una variable se establece en cero elementos,se convertirá en un arreglo con cero elementos.</target>
        </trans-unit>
        <trans-unit id="a723f0fea3c45c67807883ef6059438866b12547" translate="yes" xml:space="preserve">
          <source>If after expansion there is nothing between the braces, the argument will be removed (see &lt;a href=&quot;#cartesian-product&quot;&gt;the cartesian product section&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f805483966bd1b92bb16fa0e48ac91c14f18567" translate="yes" xml:space="preserve">
          <source>If an error occurs during argparse processing it will exit with a non-zero status and print error messages to stderr.</source>
          <target state="translated">Si se produce un error durante el procesamiento de argparse saldrá con un estado distinto de cero e imprimirá mensajes de error para stderr.</target>
        </trans-unit>
        <trans-unit id="f3bb201c1119b5848ebfda84c47d1e1698174af5" translate="yes" xml:space="preserve">
          <source>If any non-option parameters are given, the definition of the specified functions are printed.</source>
          <target state="translated">Si se da algún parámetro no opcional,se imprime la definición de las funciones especificadas.</target>
        </trans-unit>
        <trans-unit id="dcc764ad71040642c2ae2b7ce376987c8f357ee1" translate="yes" xml:space="preserve">
          <source>If exit is called while sourcing a file (using the &lt;a href=&quot;#source&quot;&gt;source&lt;/a&gt; builtin) the rest of the file will be skipped, but the shell itself will not exit.</source>
          <target state="translated">Si se llama a exit mientras se obtiene un archivo (utilizando el &lt;a href=&quot;#source&quot;&gt;c&amp;oacute;digo fuente&lt;/a&gt; incorporado), se omitir&amp;aacute; el resto del archivo, pero el shell en s&amp;iacute; no se cerrar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="2ad30bb6821fad0de41f3c375fba71f6a9c37c25" translate="yes" xml:space="preserve">
          <source>If exit is called while sourcing a file (using the &lt;a href=&quot;source#cmd-source&quot;&gt;source&lt;/a&gt; builtin) the rest of the file will be skipped, but the shell itself will not exit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821287731530c6efa130c60447058d08f9892ad3" translate="yes" xml:space="preserve">
          <source>If fish encounters a problem while executing a command, the status variable may also be set to a specific value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3068ba7bd98e36689eab0ca26911e82ce1011087" translate="yes" xml:space="preserve">
          <source>If fish is unable to locate a command with a given name, and it starts with '&lt;code&gt;.&lt;/code&gt;', '&lt;code&gt;/&lt;/code&gt;' or '&lt;code&gt;~&lt;/code&gt;', fish will test if a directory of that name exists. If it does, it is implicitly assumed that you want to change working directory. For example, the fastest way to switch to your home directory is to simply press &lt;code&gt;~&lt;/code&gt; and enter.</source>
          <target state="translated">Si fish no puede localizar un comando con un nombre dado, y comienza con ' &lt;code&gt;.&lt;/code&gt; ',' &lt;code&gt;/&lt;/code&gt; 'o' &lt;code&gt;~&lt;/code&gt; ', fish probar&amp;aacute; si existe un directorio con ese nombre. Si es as&amp;iacute;, se supone impl&amp;iacute;citamente que desea cambiar el directorio de trabajo. Por ejemplo, la forma m&amp;aacute;s r&amp;aacute;pida de cambiar a su directorio de inicio es simplemente presionar &lt;code&gt;~&lt;/code&gt; e ingresar.</target>
        </trans-unit>
        <trans-unit id="db62838a3a80ccd2f019a10d8292bd8ef109bbbc" translate="yes" xml:space="preserve">
          <source>If fish is unable to locate a command with a given name, and it starts with &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;~&lt;/code&gt;, fish will test if a directory of that name exists. If it does, it is implicitly assumed that you want to change working directory. For example, the fastest way to switch to your home directory is to simply press &lt;code&gt;~&lt;/code&gt; and enter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08db4ab1c440a3e304e3453045348ee442c8b3f8" translate="yes" xml:space="preserve">
          <source>If fish is your default shell and you want to copy commands from the internet that are written in a different shell language, bash for example, you can proceed in the following way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47028e01b9fbf55fb3801396985dce61b199f8e5" translate="yes" xml:space="preserve">
          <source>If fish is your default shell and you want to copy commands from the internet that are written in bash (the default shell on most systems), you can proceed in one of the following two ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779713b50e0b6db32e410c35dd906b7eab469c0a" translate="yes" xml:space="preserve">
          <source>If invoked with multiple arguments instead of input, &lt;code&gt;string collect&lt;/code&gt; preserves each argument separately, where the number of output arguments is equal to the number of arguments given to &lt;code&gt;string collect&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1e21aed552d458b2c10cb3ad02fe6a085212c8" translate="yes" xml:space="preserve">
          <source>If limit is given, it is the new value of the specified resource. If no option is given, then &lt;code&gt;-f&lt;/code&gt; is assumed. Values are in kilobytes, except for &lt;code&gt;-t&lt;/code&gt;, which is in seconds and &lt;code&gt;-n&lt;/code&gt; and &lt;code&gt;-u&lt;/code&gt;, which are unscaled values. The exit status is 0 unless an invalid option or argument is supplied, or an error occurs while setting a new limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9365afaebdcba814bae204eaa9cb6846f923618b" translate="yes" xml:space="preserve">
          <source>If limit is given, it is the new value of the specified resource. If no option is given, then &lt;code&gt;-f&lt;/code&gt; is assumed. Values are in kilobytes, except for &lt;code&gt;-t&lt;/code&gt;, which is in seconds and &lt;code&gt;-n&lt;/code&gt; and &lt;code&gt;-u&lt;/code&gt;, which are unscaled values. The return status is 0 unless an invalid option or argument is supplied, or an error occurs while setting a new limit.</source>
          <target state="translated">Si se da un l&amp;iacute;mite, es el nuevo valor del recurso especificado. Si no se da ninguna opci&amp;oacute;n, se asume &lt;code&gt;-f&lt;/code&gt; . Los valores est&amp;aacute;n en kilobytes, a excepci&amp;oacute;n de &lt;code&gt;-t&lt;/code&gt; , que est&amp;aacute; en segundo y &lt;code&gt;-n&lt;/code&gt; y &lt;code&gt;-u&lt;/code&gt; , que son valores sin escala. El estado de retorno es 0 a menos que se proporcione una opci&amp;oacute;n o argumento no v&amp;aacute;lido, o se produzca un error al establecer un nuevo l&amp;iacute;mite.</target>
        </trans-unit>
        <trans-unit id="ca3ffe9826b96a93254e7258c40cd2d913b9941e" translate="yes" xml:space="preserve">
          <source>If neither a pid nor a process name is specified, the command waits for all background jobs.</source>
          <target state="translated">Si no se especifica ni un pid ni un nombre de proceso,el comando espera todos los trabajos de fondo.</target>
        </trans-unit>
        <trans-unit id="40f766e228eab41d3736559f22189015b4f35da8" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;SEQUENCE&lt;/code&gt; is provided, all bindings (or just the bindings in the given &lt;code&gt;MODE&lt;/code&gt;) are printed. If &lt;code&gt;SEQUENCE&lt;/code&gt; is provided but no &lt;code&gt;COMMAND&lt;/code&gt;, just the binding matching that sequence is printed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6620b792aa7c50700f6a7c83a134de00e5936216" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;SEQUENCE&lt;/code&gt; is provided, all bindings (or just the bindings in the specified &lt;code&gt;MODE&lt;/code&gt;) are printed. If &lt;code&gt;SEQUENCE&lt;/code&gt; is provided without &lt;code&gt;COMMAND&lt;/code&gt;, just the binding matching that sequence is printed.</source>
          <target state="translated">Si no se proporciona una &lt;code&gt;SEQUENCE&lt;/code&gt; , se imprimen todos los enlaces (o solo los enlaces en el &lt;code&gt;MODE&lt;/code&gt; especificado ). Si &lt;code&gt;SEQUENCE&lt;/code&gt; se proporciona sin &lt;code&gt;COMMAND&lt;/code&gt; , solo se imprime el enlace que coincide con esa secuencia.</target>
        </trans-unit>
        <trans-unit id="7a85e1fe01cc44642ce9e8c5d9992c08bd26d23e" translate="yes" xml:space="preserve">
          <source>If no component is new, the variable ($fish_user_paths or $PATH) is not set again or otherwise modified, so variable handlers are not triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319b10cf51c7aaf0a0ad28a0d4b4f6c772504c25" translate="yes" xml:space="preserve">
          <source>If no file is specified and stdin is not the terminal, or if the file name '&lt;code&gt;-&lt;/code&gt;' is used, stdin will be read.</source>
          <target state="translated">Si no se especifica ning&amp;uacute;n archivo y stdin no es el terminal, o si se usa el nombre de archivo ' &lt;code&gt;-&lt;/code&gt; ', se leer&amp;aacute; stdin.</target>
        </trans-unit>
        <trans-unit id="7bf33c78938c4ed9c99f65ad25f906359596c488" translate="yes" xml:space="preserve">
          <source>If no file is specified and stdin is not the terminal, or if the file name &lt;code&gt;-&lt;/code&gt; is used, stdin will be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193caf7005f5652feb5a621fdb872e8d40cb588f" translate="yes" xml:space="preserve">
          <source>If no option to determine how to split like &lt;code&gt;--delimiter&lt;/code&gt;, &lt;code&gt;--line&lt;/code&gt; or &lt;code&gt;--tokenize&lt;/code&gt; is given, the variable &lt;code&gt;IFS&lt;/code&gt; is used as a list of characters to split on. Relying on the use of &lt;code&gt;IFS&lt;/code&gt; is deprecated and this behaviour will be removed in future versions. The default value of &lt;code&gt;IFS&lt;/code&gt; contains space, tab and newline characters. As a special case, if &lt;code&gt;IFS&lt;/code&gt; is set to the empty string, each character of the input is considered a separate token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05e6aafbb793ade9f477fd1403ff37aea85d34f" translate="yes" xml:space="preserve">
          <source>If no piping or other compound shell constructs are required, variable-expansion-as-command, as in &lt;code&gt;set cmd ls -la; $cmd&lt;/code&gt;, is also an option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfe8801c42ff77994dd55c54562f05ad1157dea" translate="yes" xml:space="preserve">
          <source>If no process is specified, the most recently-used job is removed (like &lt;a href=&quot;bg#cmd-bg&quot;&gt;bg&lt;/a&gt; and &lt;a href=&quot;fg#cmd-fg&quot;&gt;fg&lt;/a&gt;). If one or more PIDs are specified, jobs with the specified process IDs are removed from the job list. Invalid jobs are ignored and a warning is printed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536986c9ac77b0a65c848619315ad13a2f046d5c" translate="yes" xml:space="preserve">
          <source>If no process is specified, the most recently-used job is removed (like &lt;code&gt;bg&lt;/code&gt; and &lt;code&gt;fg&lt;/code&gt;). If one or more &lt;code&gt;PID&lt;/code&gt;s are specified, jobs with the specified process IDs are removed from the job list. Invalid jobs are ignored and a warning is printed.</source>
          <target state="translated">Si no se especifica ning&amp;uacute;n proceso, se elimina el trabajo utilizado m&amp;aacute;s recientemente (como &lt;code&gt;bg&lt;/code&gt; y &lt;code&gt;fg&lt;/code&gt; ). Si se especifican uno o m&amp;aacute;s &lt;code&gt;PID&lt;/code&gt; , los trabajos con los ID de proceso especificados se eliminan de la lista de trabajos. Los trabajos no v&amp;aacute;lidos se ignoran y se imprime una advertencia.</target>
        </trans-unit>
        <trans-unit id="713bf8682430a51e2b7af1a6d836f8e75fd1bdaa" translate="yes" xml:space="preserve">
          <source>If no variable names are provided, &lt;code&gt;read&lt;/code&gt; enters a special case that simply provides redirection from standard input to standard output, useful for command substitution. For instance, the fish shell command below can be used to read data that should be provided via a command line argument from the console instead of hardcoding it in the command itself, allowing the command to both be reused as-is in various contexts with different input values and preventing possibly sensitive text from being included in the shell history:</source>
          <target state="translated">Si no se proporcionan nombres de variables, &lt;code&gt;read&lt;/code&gt; ingresa un caso especial que simplemente proporciona redirecci&amp;oacute;n de la entrada est&amp;aacute;ndar a la salida est&amp;aacute;ndar, &amp;uacute;til para la sustituci&amp;oacute;n de comandos. Por ejemplo, el comando de concha de pescado a continuaci&amp;oacute;n se puede usar para leer datos que se deben proporcionar a trav&amp;eacute;s de un argumento de l&amp;iacute;nea de comando desde la consola en lugar de codificarlo en el comando en s&amp;iacute;, lo que permite que el comando se reutilice tal cual en varios contextos con diferentes valores de entrada y evitar que se incluya texto posiblemente sensible en el historial de shell:</target>
        </trans-unit>
        <trans-unit id="5d57c5310bf24631a02f8ac52009cfffd06f806b" translate="yes" xml:space="preserve">
          <source>If none of these apply, the commit SHA shortened to 8 characters is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10333c9963acc5318f6aa7e98a933a59ba99c98b" translate="yes" xml:space="preserve">
          <source>If one argument is specified, the internal engine will be seeded with the argument for future invocations of &lt;code&gt;random&lt;/code&gt; and no output will be produced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b617c0f8612fdf2ea16aba5ec62984acf5c44a" translate="yes" xml:space="preserve">
          <source>If only 123 and 789 exist, it will still background them and print an error about 456.</source>
          <target state="translated">Si sólo existen 123 y 789,aún así los pondrá en segundo plano e imprimirá un error sobre 456.</target>
        </trans-unit>
        <trans-unit id="e5b23704e06de8e7cf41b466203c3d1a05734047" translate="yes" xml:space="preserve">
          <source>If set is called with no arguments, the names and values of all shell variables are printed in sorted order. If some of the scope or export flags have been given, only the variables matching the specified scope are printed.</source>
          <target state="translated">Si se llama a set sin argumentos,los nombres y valores de todas las variables de shell se imprimen en orden.Si se han dado algunos de los indicadores de alcance o exportación,sólo se imprimen las variables que coinciden con el alcance especificado.</target>
        </trans-unit>
        <trans-unit id="c9d5f4fcbf5a20e0012582eafdf56b977cf064da" translate="yes" xml:space="preserve">
          <source>If terminfo reports 256 color support for a terminal, 256 color support will always be enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302a7adb7b2bb424535b98eb0c4ef6539ea7cb20" translate="yes" xml:space="preserve">
          <source>If terminfo reports 256 color support for a terminal, support will always be enabled. To debug color palette problems, &lt;code&gt;tput colors&lt;/code&gt; may be useful to see the number of colors in terminfo for a terminal. Fish launched as &lt;code&gt;fish -d2&lt;/code&gt; will include diagnostic messages that indicate the color support mode in use.</source>
          <target state="translated">Si terminfo informa compatibilidad con 256 colores para un terminal, la compatibilidad siempre estar&amp;aacute; habilitada. Para depurar problemas de paleta de colores, &lt;code&gt;tput colors&lt;/code&gt; puede ser &amp;uacute;til para ver el n&amp;uacute;mero de colores en terminfo para un terminal. Fish lanzado como &lt;code&gt;fish -d2&lt;/code&gt; incluir&amp;aacute; mensajes de diagn&amp;oacute;stico que indican el modo de soporte de color en uso.</target>
        </trans-unit>
        <trans-unit id="4d30c96739992df19433df0a6e1c59dfb95af762" translate="yes" xml:space="preserve">
          <source>If that directory traversal is taking a long time, you can</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34986c35bab0e2df661c76619902534fb332f46c" translate="yes" xml:space="preserve">
          <source>If that directory traversal is taking a long time, you can &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;C&lt;/b&gt; out of it.</source>
          <target state="translated">Si ese recorrido de directorio est&amp;aacute; tardando mucho tiempo, puede &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;C&lt;/b&gt; salir de &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="ffef75da37c5f07daa061c4afec5f2616551ca39" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$VISUAL&lt;/code&gt; environment variable is set, it will be used as the program to edit the function. If &lt;code&gt;$VISUAL&lt;/code&gt; is unset but &lt;code&gt;$EDITOR&lt;/code&gt; is set, that will be used. Otherwise, a built-in editor will be used. Note that to enter a literal newline using the built-in editor you should press</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d023db5ee6df47941a2ca566209f059001722c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$VISUAL&lt;/code&gt; environment variable is set, it will be used as the program to edit the function. If &lt;code&gt;$VISUAL&lt;/code&gt; is unset but &lt;code&gt;$EDITOR&lt;/code&gt; is set, that will be used. Otherwise, a built-in editor will be used. Note that to enter a literal newline using the built-in editor you should press &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;Enter&lt;/b&gt;. Pressing &lt;b&gt;Enter&lt;/b&gt; signals that you are done editing the function. This does not apply to an external editor like emacs or vim.</source>
          <target state="translated">Si se establece la variable de entorno &lt;code&gt;$VISUAL&lt;/code&gt; , se utilizar&amp;aacute; como programa para editar la funci&amp;oacute;n. Si &lt;code&gt;$VISUAL&lt;/code&gt; est&amp;aacute; configurado pero &lt;code&gt;$EDITOR&lt;/code&gt; est&amp;aacute; configurado, se utilizar&amp;aacute;. De lo contrario, se utilizar&amp;aacute; un editor integrado. Tenga en cuenta que para ingresar una nueva l&amp;iacute;nea literal usando el editor incorporado, debe presionar &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;Enter&lt;/b&gt; . Presionar &lt;b&gt;Enter&lt;/b&gt; indica que ha terminado de editar la funci&amp;oacute;n. Esto no se aplica a un editor externo como emacs o vim.</target>
        </trans-unit>
        <trans-unit id="e8fb943c750f92e3917384bc05f81b775bd8db88" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--delimiter&lt;/code&gt; argument is not given, the variable &lt;code&gt;IFS&lt;/code&gt; is used as a list of characters to split on. Relying on the use of &lt;code&gt;IFS&lt;/code&gt; is deprecated and this behaviour will be removed in future versions. The default value of &lt;code&gt;IFS&lt;/code&gt; contains space, tab and newline characters. As a special case, if &lt;code&gt;IFS&lt;/code&gt; is set to the empty string, each character of the input is considered a separate token.</source>
          <target state="translated">Si no se proporciona el argumento &lt;code&gt;--delimiter&lt;/code&gt; , la variable &lt;code&gt;IFS&lt;/code&gt; se usa como una lista de caracteres para dividir. Depender del uso de &lt;code&gt;IFS&lt;/code&gt; est&amp;aacute; obsoleto y este comportamiento se eliminar&amp;aacute; en versiones futuras. El valor predeterminado de &lt;code&gt;IFS&lt;/code&gt; contiene espacios, tabulaciones y caracteres de nueva l&amp;iacute;nea. Como caso especial, si &lt;code&gt;IFS&lt;/code&gt; se establece en la cadena vac&amp;iacute;a, cada car&amp;aacute;cter de la entrada se considera un token independiente.</target>
        </trans-unit>
        <trans-unit id="42f805a3ed49f9b5bb3e1d744a17decb53fbbd80" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;-k&lt;/code&gt; switch is used, the name of a key (such as 'down', 'up' or 'backspace') is used instead of a sequence. The names used are the same as the corresponding curses variables, but without the 'key_' prefix. (See &lt;code&gt;terminfo(5)&lt;/code&gt; for more information, or use &lt;code&gt;bind --key-names&lt;/code&gt; for a list of all available named keys). Normally this will print an error if the current &lt;code&gt;$TERM&lt;/code&gt; entry doesn't have a given key, unless the &lt;code&gt;-s&lt;/code&gt; switch is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a1bc2ff2f56d3990f495529faa7ba44ead0455" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;-k&lt;/code&gt; switch is used, the name of the key (such as 'down', 'up' or 'backspace') is used instead of a sequence. The names used are the same as the corresponding curses variables, but without the 'key_' prefix. (See &lt;code&gt;terminfo(5)&lt;/code&gt; for more information, or use &lt;code&gt;bind --key-names&lt;/code&gt; for a list of all available named keys.) If used in conjunction with the &lt;code&gt;-s&lt;/code&gt; switch, &lt;code&gt;bind&lt;/code&gt; will silently ignore bindings to named keys that are not found in termcap for the current &lt;code&gt;$TERMINAL&lt;/code&gt;, otherwise a warning is emitted.</source>
          <target state="translated">Si se usa el &lt;code&gt;-k&lt;/code&gt; se usa el nombre de la tecla (como 'abajo', 'arriba' o 'retroceso') en lugar de una secuencia. Los nombres utilizados son los mismos que las variables de curses correspondientes, pero sin el prefijo 'key_'. (Consulte &lt;code&gt;terminfo(5)&lt;/code&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n, o use &lt;code&gt;bind --key-names&lt;/code&gt; para obtener una lista de todas las claves con nombre disponibles). Si se usa junto con el &lt;code&gt;-s&lt;/code&gt; , &lt;code&gt;bind&lt;/code&gt; ignorar&amp;aacute; silenciosamente los enlaces a claves con nombre que no se encuentren en termcap para el &lt;code&gt;$TERMINAL&lt;/code&gt; actual , de lo contrario se emite una advertencia.</target>
        </trans-unit>
        <trans-unit id="1d7b9b3be6cec368c8849bf11af8487da853a633" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--list&lt;/code&gt; flag is specified, the current directory history is also displayed.</source>
          <target state="translated">Si se especifica el indicador &lt;code&gt;-l&lt;/code&gt; o &lt;code&gt;--list&lt;/code&gt; , tambi&amp;eacute;n se muestra el historial del directorio actual.</target>
        </trans-unit>
        <trans-unit id="4cfc35a3a98ed01dd389efdde71deb0bf3c6669a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--list&lt;/code&gt; flag is specified, the current history is also displayed.</source>
          <target state="translated">Si se especifica el indicador &lt;code&gt;-l&lt;/code&gt; o &lt;code&gt;--list&lt;/code&gt; , tambi&amp;eacute;n se muestra el historial actual.</target>
        </trans-unit>
        <trans-unit id="492a67bd7712dda8e66c7c5fc44c0836f4b18f3a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;-n&lt;/code&gt; / &lt;code&gt;--any&lt;/code&gt; flag is provided, the command returns as soon as the first job completes. If it is not provided, it returns after all jobs complete.</source>
          <target state="translated">Si se proporciona el indicador &lt;code&gt;-n&lt;/code&gt; / &lt;code&gt;--any&lt;/code&gt; , el comando regresa tan pronto como se completa el primer trabajo. Si no se proporciona, vuelve una vez finalizados todos los trabajos.</target>
        </trans-unit>
        <trans-unit id="63b9207ee5d979afeb85211115a3c6ffa7012a71" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;/tmp&lt;/code&gt; directory exists, copy the &lt;code&gt;/etc/motd&lt;/code&gt; file to it:</source>
          <target state="translated">Si existe el directorio &lt;code&gt;/tmp&lt;/code&gt; , copie el &lt;code&gt;/etc/motd&lt;/code&gt; en &amp;eacute;l:</target>
        </trans-unit>
        <trans-unit id="c3b856c7f49407f5bd18390ec22c0a975e0942a6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;BROWSER&lt;/code&gt; environment variable is set, it will be used as the name of the web browser to open instead of the system default.</source>
          <target state="translated">Si se establece la variable de entorno &lt;code&gt;BROWSER&lt;/code&gt; , se utilizar&amp;aacute; como el nombre del navegador web para abrir en lugar del predeterminado del sistema.</target>
        </trans-unit>
        <trans-unit id="3debf54dad8f4dc6d939e041eacf2dbfc04ad3d0" translate="yes" xml:space="preserve">
          <source>If the BROWSER environment variable is set, it will be used to display the documentation. Otherwise, fish will search for a suitable browser.</source>
          <target state="translated">Si se establece la variable de entorno BROWSER,se utilizará para mostrar la documentación.De lo contrario,los peces buscarán un navegador adecuado.</target>
        </trans-unit>
        <trans-unit id="aa6fc1ea4246a9f77c10ddff36e9849dd9022bcd" translate="yes" xml:space="preserve">
          <source>If the above code was run with &lt;code&gt;$animal&lt;/code&gt; set to &lt;code&gt;whale&lt;/code&gt;, the output would be &lt;code&gt;mammal&lt;/code&gt;.</source>
          <target state="translated">Si el c&amp;oacute;digo anterior se ejecut&amp;oacute; con &lt;code&gt;$animal&lt;/code&gt; establecido en &lt;code&gt;whale&lt;/code&gt; , la salida ser&amp;iacute;a &lt;code&gt;mammal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d75d0af6becad51e324987bba4dbf96c51e8300a" translate="yes" xml:space="preserve">
          <source>If the alias has the same name as the aliased command, it is necessary to prefix the call to the program with &lt;code&gt;command&lt;/code&gt; in order to tell fish that the function should not call itself, but rather a command with the same name. Failing to do so will cause infinite recursion bugs.</source>
          <target state="translated">Si el alias tiene el mismo nombre que el comando con alias, es necesario prefijar la llamada al programa con &lt;code&gt;command&lt;/code&gt; para decirle a Fish que la funci&amp;oacute;n no debe llamarse a s&amp;iacute; misma, sino a un comando con el mismo nombre. Si no lo hace, se producir&amp;aacute;n errores de recursi&amp;oacute;n infinitos.</target>
        </trans-unit>
        <trans-unit id="49ebc34132e7660866a77bb4bd002951a641b8a0" translate="yes" xml:space="preserve">
          <source>If the alias has the same name as the aliased command, you need to prefix the call to the program with &lt;code&gt;command&lt;/code&gt; to tell fish that the function should not call itself, but rather a command with the same name. If you forget to do so, the function would call itself until the end of time. Usually fish is smart enough to figure this out and will refrain from doing so (which is hopefully in your interest).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5185e556f9b263d1410cf1a894fc4a29463388d" translate="yes" xml:space="preserve">
          <source>If the argument you want is far back in history (e.g. 2 lines back - that's a lot of words!), type any part of it and then press</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3ed0aa46a2e24462a85265faa22a817cd5bf4f" translate="yes" xml:space="preserve">
          <source>If the argument you want is far back in history (e.g. 2 lines back - that's a lot of words!), type any part of it and then press &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;&amp;uarr;&lt;/b&gt;. This will show only arguments containing that part and you will get what you want much faster. Try it out, this is very convenient!</source>
          <target state="translated">Si el argumento que desea est&amp;aacute; muy atr&amp;aacute;s en la historia (por ejemplo, 2 l&amp;iacute;neas atr&amp;aacute;s, &amp;iexcl;son muchas palabras!), Escriba cualquier parte y luego presione &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;&amp;uarr;&lt;/b&gt; . Esto mostrar&amp;aacute; solo los argumentos que contienen esa parte y obtendr&amp;aacute; lo que desea mucho m&amp;aacute;s r&amp;aacute;pido. Pru&amp;eacute;belo, &amp;iexcl;esto es muy conveniente!</target>
        </trans-unit>
        <trans-unit id="8b1303483eab8a0aafe5607e65c79febb8c3aca1" translate="yes" xml:space="preserve">
          <source>If the commandline contains</source>
          <target state="translated">Si la línea de mando contiene</target>
        </trans-unit>
        <trans-unit id="e3f1eb54148bd5719468d4632589d32c09c11b49" translate="yes" xml:space="preserve">
          <source>If the commandline reads &lt;code&gt;cd m&lt;/code&gt;, place the cursor over the &lt;code&gt;m&lt;/code&gt; character and press</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1c190c6ad0436a0fd3fb383f1281a2e816bf89" translate="yes" xml:space="preserve">
          <source>If the commandline reads &lt;code&gt;cd m&lt;/code&gt;, place the cursor over the &lt;code&gt;m&lt;/code&gt; character and press &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;&amp;uarr;&lt;/b&gt; to search for previously typed words containing 'm'.</source>
          <target state="translated">Si la l&amp;iacute;nea de comando dice &lt;code&gt;cd m&lt;/code&gt; , coloque el cursor sobre el car&amp;aacute;cter &lt;code&gt;m&lt;/code&gt; y presione &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;&amp;uarr;&lt;/b&gt; para buscar palabras previamente escritas que contengan 'm'.</target>
        </trans-unit>
        <trans-unit id="aec97b1cdbedc052d45f0ca8a3886ba07331192c" translate="yes" xml:space="preserve">
          <source>If the current directory contains the files 'foo' and 'bar', the command &lt;code&gt;echo a(ls){1,2,3}&lt;/code&gt; will output 'abar1 abar2 abar3 afoo1 afoo2 afoo3'.</source>
          <target state="translated">Si el directorio actual contiene los archivos 'foo' y 'bar', el comando &lt;code&gt;echo a(ls){1,2,3}&lt;/code&gt; generar&amp;aacute; 'abar1 abar2 abar3 afoo1 afoo2 afoo3'.</target>
        </trans-unit>
        <trans-unit id="3b9446dcdf384793d9dbf8ed3d708bf58cbc9557" translate="yes" xml:space="preserve">
          <source>If the current directory contains the files 'foo' and 'bar', the command &lt;code&gt;echo a(ls){1,2,3}&lt;/code&gt; will output &lt;code&gt;abar1 abar2 abar3 afoo1 afoo2 afoo3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce9ab732e8430cafcdfc25d7e2465b58abf7288" translate="yes" xml:space="preserve">
          <source>If the cursor shape does not appear to be changing after setting the above variables, it's likely your terminal emulator does not support the capabilities necessary to do this. It may also be the case, however, that &lt;code&gt;fish_vi_cursor&lt;/code&gt; has not detected your terminal's features correctly (for example, if you are using &lt;code&gt;tmux&lt;/code&gt;). If this is the case, you can force &lt;code&gt;fish_vi_cursor&lt;/code&gt; to set the cursor shape by setting &lt;code&gt;$fish_vi_force_cursor&lt;/code&gt; in &lt;code&gt;config.fish&lt;/code&gt;. You'll have to restart fish for any changes to take effect. If cursor shape setting remains broken after this, it's almost certainly an issue with your terminal emulator, and not fish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0808aebe4a3101606343cf63b29ba38dae1d40f" translate="yes" xml:space="preserve">
          <source>If the end is negative the range always goes up, so &lt;code&gt;2..-2&lt;/code&gt; will go from element 2 to 4, and &lt;code&gt;2..-16&lt;/code&gt; won't go anywhere because there is no way to go from the second element to one that doesn't exist, while going up. If the start is negative the range always goes down, so &lt;code&gt;-2..1&lt;/code&gt; will go from element 4 to 1, and &lt;code&gt;-16..2&lt;/code&gt; won't go anywhere because there is no way to go from the second element to one that doesn't exist, while going down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea966f7daecf90f40c09560ec0ace32a38679be8" translate="yes" xml:space="preserve">
          <source>If the end is smaller than the start, or the start is larger than the end, range expansion will go in reverse. This is unless exactly one of the given indices is negative, so the direction doesn't change if the list has fewer elements than expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac01aa8bdf61c4705d1b573ca6b14e107487f86" translate="yes" xml:space="preserve">
          <source>If the expression is successfully evaluated and doesn't over/underflow or return NaN the return &lt;code&gt;status&lt;/code&gt; is zero (success) else one.</source>
          <target state="translated">Si la expresi&amp;oacute;n se eval&amp;uacute;a con &amp;eacute;xito y no se desborda / desborda ni devuelve NaN, el &lt;code&gt;status&lt;/code&gt; retorno es cero (&amp;eacute;xito) si no uno.</target>
        </trans-unit>
        <trans-unit id="5cfff00b5bb7a05a9b5b06be91a9cc46be32a1f7" translate="yes" xml:space="preserve">
          <source>If the first and second parts are skipped, they are assumed to be &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;=&lt;/code&gt;, respectively. As an example, &lt;code&gt;r,u+w&lt;/code&gt; means all users should have read access and the file owner should also have write access.</source>
          <target state="translated">Si las partes primera y segunda se omiten, que se supone que son &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;=&lt;/code&gt; , respectivamente. Como ejemplo, &lt;code&gt;r,u+w&lt;/code&gt; significa que todos los usuarios deben tener acceso de lectura y el propietario del archivo tambi&amp;eacute;n debe tener acceso de escritura.</target>
        </trans-unit>
        <trans-unit id="b4698317f8ba03650612df6e27206dff978e2d3a" translate="yes" xml:space="preserve">
          <source>If the function definition is changed, all running shells will automatically reload the altered version, after a while.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51826fa22bf5b5c7586ce652a67a6e4318f4ac64" translate="yes" xml:space="preserve">
          <source>If the function definition is changed, all running shells will automatically reload the altered version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3fcf12ac09fc3d89e8bddfebabb9762099029f" translate="yes" xml:space="preserve">
          <source>If the given argument doesn't work for the given format (like when you try to convert a number like 3.141592 to an integer), printf prints an error, to stderr. printf will then also return non-zero, but will still try to print as much as it can.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154cdf4f784ed79e1fcb74335c0c901b6cf4ac90" translate="yes" xml:space="preserve">
          <source>If the line you want is far back in the history, type any part of the line and then press Up one or more times. This will constrain the recall to lines that include this text, and you will get to the line you want much faster. This replaces &quot;!vi&quot;, &quot;!?bar.c&quot; and the like.</source>
          <target state="translated">Si la línea que quieres está muy atrás en la historia,escribe cualquier parte de la línea y luego presiona Arriba una o más veces.Esto limitará la recuperación a las líneas que incluyen este texto,y llegarás a la línea que quieres mucho más rápido.Esto reemplaza a &quot;!vi&quot;,&quot;!?bar.c&quot; y similares.</target>
        </trans-unit>
        <trans-unit id="3b7bdf7353455fbb73bf0134588c41d8ca71de37" translate="yes" xml:space="preserve">
          <source>If the line you want is far back in the history, type any part of the line and then press Up one or more times. This will filter the recalled lines to ones that include this text, and you will get to the line you want much faster. This replaces &quot;!vi&quot;, &quot;!?bar.c&quot; and the like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70006a59c6935a4438f9d0040be162c8ee9ec5a8" translate="yes" xml:space="preserve">
          <source>If the list is visible, pressing control-S (or the &lt;code&gt;pager-toggle-search&lt;/code&gt; binding) will allow filtering the list. Shift-tab (or the &lt;code&gt;complete-and-search&lt;/code&gt; binding) will trigger completion with the search field immediately visible.</source>
          <target state="translated">Si la lista est&amp;aacute; visible, presionar control-S (o el enlace de &lt;code&gt;pager-toggle-search&lt;/code&gt; ) permitir&amp;aacute; filtrar la lista. Shift-tab (o el enlace de &lt;code&gt;complete-and-search&lt;/code&gt; ) activar&amp;aacute; la finalizaci&amp;oacute;n con el campo de b&amp;uacute;squeda inmediatamente visible.</target>
        </trans-unit>
        <trans-unit id="d76a8116548a88ed416d142b0ea322f0ccb59543" translate="yes" xml:space="preserve">
          <source>If the list is visible, pressing control-S (or the &lt;code&gt;pager-toggle-search&lt;/code&gt; binding) will allow filtering the list. Shift-tab (or the &lt;code&gt;complete-and-search&lt;/code&gt; binding) will trigger completion with the search field immediately visible. These are the general purpose tab completions that &lt;code&gt;fish&lt;/code&gt; provides:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275b4b014bd30e8806c2588d2da955cb7daf020a" translate="yes" xml:space="preserve">
          <source>If the operation fails, an error will be reported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29df263ac386a0b20ba5f9a3e6fe000d33b8c6f2" translate="yes" xml:space="preserve">
          <source>If the output is piped to &lt;a href=&quot;cmds/string#cmd-string-split&quot;&gt;string split or string split0&lt;/a&gt; as the last step, those splits are used as they appear and no additional splitting on newlines takes place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8520adcbbdaffc01186486c06aba4bb1a9f6f80" translate="yes" xml:space="preserve">
          <source>If the output is piped to &lt;a href=&quot;cmds/string#cmd-string-split&quot;&gt;string split or string split0&lt;/a&gt; as the last step, those splits are used as they appear instead of splitting lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48cbf00537e46f313957ac2ba3ba9168d8838d5a" translate="yes" xml:space="preserve">
          <source>If the output of &lt;code&gt;jobs&lt;/code&gt; is redirected or if it is part of a command substitution, the column header that is usually printed is omitted, making it easier to parse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c01f00f1709a1d845be8af766e2896516906fa" translate="yes" xml:space="preserve">
          <source>If the path is invalid no translated path will be written to stdout and an error will be reported.</source>
          <target state="translated">Si el camino es inválido,no se escribirá ningún camino traducido en stdout y se informará de un error.</target>
        </trans-unit>
        <trans-unit id="e1e2f0cd5d9c3189924438eab165e537469221dd" translate="yes" xml:space="preserve">
          <source>If the specified file descriptor is a terminal device, the exit status of the command is zero. Otherwise, the exit status is non-zero. No messages are printed to standard error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e907fd3510899683ab1ac3f96d2aac1979d9258b" translate="yes" xml:space="preserve">
          <source>If the specified file descriptor is a tty, the exit status of the command is zero. Otherwise, the exit status is non-zero. No messages are printed to standard error.</source>
          <target state="translated">Si el descriptor de archivo especificado es una tty,el estado de salida del comando es cero.En caso contrario,el estado de salida es distinto de cero.No se imprime ningún mensaje de error estándar.</target>
        </trans-unit>
        <trans-unit id="fe06c7e257d873be32fd7989f5055c27083aeab6" translate="yes" xml:space="preserve">
          <source>If the user enters any additional arguments after the function, they are inserted into the environment &lt;a href=&quot;../index#variables-lists&quot;&gt;variable list&lt;/a&gt;&lt;code&gt;$argv&lt;/code&gt;. If the &lt;code&gt;--argument-names&lt;/code&gt; option is provided, the arguments are also assigned to names specified in that option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0e2ed527cbeaac8bf34e5481dc729ba00211c1" translate="yes" xml:space="preserve">
          <source>If the user enters any additional arguments after the function, they are inserted into the environment &lt;a href=&quot;index#variables-arrays&quot;&gt;variable array&lt;/a&gt;&lt;code&gt;$argv&lt;/code&gt;. If the &lt;code&gt;--argument-names&lt;/code&gt; option is provided, the arguments are also assigned to names specified in that option.</source>
          <target state="translated">Si el usuario ingresa argumentos adicionales despu&amp;eacute;s de la funci&amp;oacute;n, se insertan en la &lt;a href=&quot;index#variables-arrays&quot;&gt;matriz de variables de&lt;/a&gt; entorno &lt;code&gt;$argv&lt;/code&gt; . Si se proporciona la opci&amp;oacute;n &lt;code&gt;--argument-names&lt;/code&gt; , los argumentos tambi&amp;eacute;n se asignan a los nombres especificados en esa opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="89093e95575f5c91e69c231cc514a5f888c355b9" translate="yes" xml:space="preserve">
          <source>If the variable $animal contains the name of an animal, the following code would attempt to classify it:</source>
          <target state="translated">Si la variable $animal contiene el nombre de un animal,el siguiente código intentaría clasificarlo:</target>
        </trans-unit>
        <trans-unit id="081ef0f3bbeaf93e50b97aca197ba4dab7103ab9" translate="yes" xml:space="preserve">
          <source>If the variable &lt;code&gt;MANPATH&lt;/code&gt; is defined and not empty, print the contents. (If &lt;code&gt;MANPATH&lt;/code&gt; is not defined, then it will expand to zero arguments, unless quoted.)</source>
          <target state="translated">Si la variable &lt;code&gt;MANPATH&lt;/code&gt; est&amp;aacute; definida y no est&amp;aacute; vac&amp;iacute;a, imprima el contenido. (Si &lt;code&gt;MANPATH&lt;/code&gt; no est&amp;aacute; definido, se expandir&amp;aacute; a cero argumentos, a menos que se indique entre comillas).</target>
        </trans-unit>
        <trans-unit id="b85b340b71b7dd9ea477da93a9f45e28372572db" translate="yes" xml:space="preserve">
          <source>If the variable name is one or more array elements, such as &lt;code&gt;PATH[1 3 7]&lt;/code&gt;, only those array elements specified will be changed. If you specify a negative index when expanding or assigning to an array variable, the index will be calculated from the end of the array. For example, the index -1 means the last index of an array.</source>
          <target state="translated">Si el nombre de la variable es uno o m&amp;aacute;s elementos de la matriz, como &lt;code&gt;PATH[1 3 7]&lt;/code&gt; , solo se cambiar&amp;aacute;n los elementos de la matriz especificados. Si especifica un &amp;iacute;ndice negativo al expandir o asignar a una variable de matriz, el &amp;iacute;ndice se calcular&amp;aacute; desde el final de la matriz. Por ejemplo, el &amp;iacute;ndice -1 significa el &amp;uacute;ltimo &amp;iacute;ndice de una matriz.</target>
        </trans-unit>
        <trans-unit id="2711332599fb67538cfe4343e904027c558ff897" translate="yes" xml:space="preserve">
          <source>If the variable name is one or more list elements, such as &lt;code&gt;PATH[1 3 7]&lt;/code&gt;, only those list elements specified will be changed. If you specify a negative index when expanding or assigning to a list variable, the index will be calculated from the end of the list. For example, the index -1 means the last index of a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6814ef5142616c01b6f2d05d43a0d85447be5e1" translate="yes" xml:space="preserve">
          <source>If the wildcard doesn't match any files, fish prints an error instead of running the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788fcc2dc7b9ec9c743aa985b73d706a1c941ace" translate="yes" xml:space="preserve">
          <source>If there are multiple files with the same name in these directories, only the first will be executed. They are executed in order of their filename, sorted (like globs) in a natural order (i.e. &quot;01&quot; sorts before &quot;2&quot;).</source>
          <target state="translated">Si hay varios archivos con el mismo nombre en estos directorios,sólo se ejecutará el primero.Se ejecutan en orden de su nombre de archivo,ordenados (como los globs)en un orden natural (es decir,&quot;01&quot; ordena antes de &quot;2&quot;).</target>
        </trans-unit>
        <trans-unit id="eac425bf6207cbab94ad0592640cd63376fdd157" translate="yes" xml:space="preserve">
          <source>If there is no &quot;,&quot; or variable expansion between the curly braces, they will not be expanded:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b3f6c1d9e2443aab8662a7a439797d66881a18" translate="yes" xml:space="preserve">
          <source>If there is no function called &lt;code&gt;NAME&lt;/code&gt; a new function will be created with the specified name</source>
          <target state="translated">Si no hay una funci&amp;oacute;n llamada &lt;code&gt;NAME&lt;/code&gt; , se crear&amp;aacute; una nueva funci&amp;oacute;n con el nombre especificado</target>
        </trans-unit>
        <trans-unit id="6d5cfe09681412194f4ba98b5cd9ee3fb9a19be4" translate="yes" xml:space="preserve">
          <source>If there is nothing between a brace and a comma or two commas, it's interpreted as an empty element.</source>
          <target state="translated">Si no hay nada entre un corchete y una o dos comas,se interpreta como un elemento vacío.</target>
        </trans-unit>
        <trans-unit id="bda5467f9834c7878e79dd21cd4d2f3d7dd7c4a6" translate="yes" xml:space="preserve">
          <source>If there is nothing between a brace and a comma or two commas, it's interpreted as an empty element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24adce4068128d584888031a1553f03853a858ae" translate="yes" xml:space="preserve">
          <source>If there's more than one possibility, it will list them</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe6214497e3e493ce7fed66861473c8f9d5c2d3" translate="yes" xml:space="preserve">
          <source>If there's more than one possibility, it will list them:</source>
          <target state="translated">Si hay más de una posibilidad,las enumerará:</target>
        </trans-unit>
        <trans-unit id="de923b57f81ea36d26260a4b367e2212c4d985f9" translate="yes" xml:space="preserve">
          <source>If this weren't the case, using an option without an optional argument would be difficult if you also wanted to use positional arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463c7b41266bb02e7be790b635471da72331d8c9" translate="yes" xml:space="preserve">
          <source>If two braces do not contain a &quot;,&quot; or a variable expansion, they will not be expanded in this manner:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7169ee1687897eb641502cd41ad2371d924e959" translate="yes" xml:space="preserve">
          <source>If you are already familiar with other shells like bash and want to see the scripting differences, see &lt;a href=&quot;fish_for_bash_users#fish-for-bash-users&quot;&gt;Fish For Bash Users&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50cb82d2e700bf8a36c75cef6564324d53172bf4" translate="yes" xml:space="preserve">
          <source>If you are developing another program and want to install fish functions for it, install them to the &quot;vendor&quot; functions directory. As this path varies from system to system, you can use &lt;code&gt;pkgconfig&lt;/code&gt; to discover it with the output of &lt;code&gt;pkg-config --variable functionsdir fish&lt;/code&gt;. Your installation system should support a custom path to override the pkgconfig path, as other distributors may need to alter it easily.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4ecf432926bdf9219384030390dce4a62ae339" translate="yes" xml:space="preserve">
          <source>If you are developing another program and would like to ship completions with your program, install them to the &quot;vendor&quot; completions directory. As this path may vary from system to system, the &lt;code&gt;pkgconfig&lt;/code&gt; framework should be used to discover this path with the output of &lt;code&gt;pkg-config --variable completionsdir fish&lt;/code&gt;.</source>
          <target state="translated">Si est&amp;aacute; desarrollando otro programa y le gustar&amp;iacute;a enviar compleciones con su programa, inst&amp;aacute;lelas en el directorio de compleciones del &quot;proveedor&quot;. Como esta ruta puede variar de un sistema a otro, el marco &lt;code&gt;pkgconfig&lt;/code&gt; debe usarse para descubrir esta ruta con la salida de &lt;code&gt;pkg-config --variable completionsdir fish&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3b96ff834aa659d4dcfe109c2f08409908bba2c" translate="yes" xml:space="preserve">
          <source>If you are developing another program and would like to ship completions with your program, install them to the &quot;vendor&quot; completions directory. As this path may vary from system to system, the pkgconfig framework should be used to discover this path with the output of &lt;code&gt;pkg-config --variable completionsdir fish&lt;/code&gt;. Your installation system should support a custom path to override the pkgconfig path, as other distributors may need to alter it easily.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e3bcc2c86a34d726c99da6041e118aebc6aab5" translate="yes" xml:space="preserve">
          <source>If you are developing another program, you may wish to install configuration which is run for all users of the fish shell on a system. This is discouraged; if not carefully written, they may have side-effects or slow the startup of the shell. Additionally, users of other shells will not benefit from the Fish-specific configuration. However, if they are absolutely required, you may install them to the &quot;vendor&quot; configuration directory. As this path may vary from system to system, the &lt;code&gt;pkgconfig&lt;/code&gt; framework should be used to discover this path with the output of &lt;code&gt;pkg-config --variable confdir fish&lt;/code&gt;.</source>
          <target state="translated">Si est&amp;aacute; desarrollando otro programa, es posible que desee instalar la configuraci&amp;oacute;n que se ejecuta para todos los usuarios de la concha de pescado en un sistema. Esto se desalienta; si no se escriben con cuidado, pueden tener efectos secundarios o ralentizar el inicio del shell. Adem&amp;aacute;s, los usuarios de otros proyectiles no se beneficiar&amp;aacute;n de la configuraci&amp;oacute;n espec&amp;iacute;fica de Fish. Sin embargo, si son absolutamente necesarios, puede instalarlos en el directorio de configuraci&amp;oacute;n del &quot;proveedor&quot;. Como esta ruta puede variar de un sistema a otro, el marco &lt;code&gt;pkgconfig&lt;/code&gt; debe usarse para descubrir esta ruta con la salida de &lt;code&gt;pkg-config --variable confdir fish&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4916db32b6aa8cbf9c1ffbb01d73d5df4a8870cc" translate="yes" xml:space="preserve">
          <source>If you are developing another program, you may wish to install functions which are available for all users of the fish shell on a system. They can be installed to the &quot;vendor&quot; functions directory. As this path may vary from system to system, the &lt;code&gt;pkgconfig&lt;/code&gt; framework should be used to discover this path with the output of &lt;code&gt;pkg-config --variable functionsdir fish&lt;/code&gt;.</source>
          <target state="translated">Si est&amp;aacute; desarrollando otro programa, es posible que desee instalar funciones que est&amp;aacute;n disponibles para todos los usuarios de la concha de pescado en un sistema. Se pueden instalar en el directorio de funciones del &quot;proveedor&quot;. Como esta ruta puede variar de un sistema a otro, el marco &lt;code&gt;pkgconfig&lt;/code&gt; debe usarse para descubrir esta ruta con la salida de &lt;code&gt;pkg-config --variable functionsdir fish&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24d577aff02c57ccc535834fabc2b9ff18d8c605" translate="yes" xml:space="preserve">
          <source>If you are developing another program, you may wish to install functions which are available for all users of the fish shell on a system. They can be installed to the &quot;vendor&quot; functions directory. As this path may vary from system to system, the &lt;code&gt;pkgconfig&lt;/code&gt; framework should be used to discover this path with the output of &lt;code&gt;pkg-config --variable functionsdir fish&lt;/code&gt;. Your installation system should support a custom path to override the pkgconfig path, as other distributors may need to alter it easily.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423e276545b7dd53d72e587423056db3d40ae703" translate="yes" xml:space="preserve">
          <source>If you are familiar with these, it is useful to know how &lt;code&gt;string&lt;/code&gt; differs from them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8709afb8c37b08fcb75856aca6d9778e8772cd" translate="yes" xml:space="preserve">
          <source>If you are just interested in success or failure, you can run the command directly as the if-condition:</source>
          <target state="translated">Si sólo te interesa el éxito o el fracaso,puedes ejecutar el comando directamente como la condición &quot;if&quot;:</target>
        </trans-unit>
        <trans-unit id="369024ad3ad574b3856fe6057599495dfc817fd9" translate="yes" xml:space="preserve">
          <source>If you are unsure, your functions probably belong in &lt;code&gt;~/.config/fish/functions&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4679db7ed1ee15be09b7a815eb852cdada744e" translate="yes" xml:space="preserve">
          <source>If you do not use any brackets, all the elements of the array will be written as separate items. This means you can easily iterate over an array using this syntax:</source>
          <target state="translated">Si no utiliza ningún paréntesis,todos los elementos de la matriz se escribirán como elementos separados.Esto significa que puedes iterar fácilmente sobre un array usando esta sintaxis:</target>
        </trans-unit>
        <trans-unit id="80a3062c14429e2bf432a524df5b36623d385389" translate="yes" xml:space="preserve">
          <source>If you do not use any brackets, all the elements of the list will be written as separate items. This means you can easily iterate over a list using this syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21121c72874a1f506d3167db9734fb72635e8aba" translate="yes" xml:space="preserve">
          <source>If you do this via a function it should be defined with the &lt;code&gt;--no-scope-shadowing&lt;/code&gt; flag. Otherwise it won't have access to those variables.</source>
          <target state="translated">Si hace esto a trav&amp;eacute;s de una funci&amp;oacute;n, debe definirse con el indicador &lt;code&gt;--no-scope-shadowing&lt;/code&gt; . De lo contrario, no tendr&amp;aacute; acceso a esas variables.</target>
        </trans-unit>
        <trans-unit id="057466e7c75d89a70efb57d8608b762b10a981b3" translate="yes" xml:space="preserve">
          <source>If you don't use any brackets, all the elements of the list will be passed to the command as separate items. This means you can iterate over a list with &lt;code&gt;for&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf34bb52e96a3b222773c87c97bf5316f69250b8" translate="yes" xml:space="preserve">
          <source>If you enabled the informative status, there are numerous customization options, which can be controlled with fish variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fc284188c8102e752b1bddb9f0226a85c1fbff" translate="yes" xml:space="preserve">
          <source>If you have a question not answered by this documentation, there are several avenues for help:</source>
          <target state="translated">Si tiene una pregunta que no está contestada por esta documentación,hay varias vías de ayuda:</target>
        </trans-unit>
        <trans-unit id="d5d69fd8cf3faf8da11aa1c87838469a40522c72" translate="yes" xml:space="preserve">
          <source>If you have a strong understanding of other shells, and want to know what &lt;code&gt;fish&lt;/code&gt; does differently, search for the magic phrase &lt;em&gt;unlike other shells&lt;/em&gt;, which is used to call out important differences.</source>
          <target state="translated">Si tiene un gran conocimiento de otras conchas y desea saber qu&amp;eacute; hacen los &lt;code&gt;fish&lt;/code&gt; manera diferente, busque la frase m&amp;aacute;gica a &lt;em&gt;diferencia de otras conchas&lt;/em&gt; , que se utiliza para se&amp;ntilde;alar diferencias importantes.</target>
        </trans-unit>
        <trans-unit id="ba67516086f4606dc5d63145b43021f56c59577b" translate="yes" xml:space="preserve">
          <source>If you have a strong understanding of other shells, and want to know what fish does differently, search for the magic phrase &lt;em&gt;unlike other shells&lt;/em&gt;, which is used to call out important differences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc09dcecb8ef64b63482fb69c9b8ca0c41f4a9d" translate="yes" xml:space="preserve">
          <source>If you have an improvement for fish, you can submit it via the GitHub page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94e356f3d06bfc0847471bd8ac63c7fdd35e968" translate="yes" xml:space="preserve">
          <source>If you have an improvement for fish, you can submit it via the mailing list or the GitHub page.</source>
          <target state="translated">Si tienes una mejora para los peces,puedes enviarla a través de la lista de correo o la página de GitHub.</target>
        </trans-unit>
        <trans-unit id="3c91aaa3641347d6b92a729c32a7d96c010b6da2" translate="yes" xml:space="preserve">
          <source>If you have written new completions for a common Unix command, please consider sharing your work by submitting it via the instructions in &lt;a href=&quot;#more-help&quot;&gt;Further help and development&lt;/a&gt;.</source>
          <target state="translated">Si ha escrito nuevas terminaciones para un comando com&amp;uacute;n de Unix, considere compartir su trabajo envi&amp;aacute;ndolo a trav&amp;eacute;s de las instrucciones en &lt;a href=&quot;#more-help&quot;&gt;Ayuda adicional y desarrollo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="59be97f1d3e357895205704e9a083053c416f3f4" translate="yes" xml:space="preserve">
          <source>If you haven't activated vi mode on purpose, you might have installed a third-party theme that does it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801a4bfeff44c78289adc6da559907889b10b7ff" translate="yes" xml:space="preserve">
          <source>If you installed a prepackaged version of fish, the package manager should have already done this for you.</source>
          <target state="translated">Si instaló una versión preempaquetada de pescado,el administrador de paquetes ya debería haber hecho esto por usted.</target>
        </trans-unit>
        <trans-unit id="bacc9cf3f5b8aece5e2cb795329bd9e98f414229" translate="yes" xml:space="preserve">
          <source>If you installed fish manually (e.g. by compiling it, not by using a package manager), you first need to add fish to the list of shells by executing the following command (assuming you installed fish in /usr/local):</source>
          <target state="translated">Si instaló fish manualmente (por ejemplo,compilándolo,no usando un gestor de paquetes),primero necesita añadir fish a la lista de conchas ejecutando el siguiente comando (asumiendo que instaló fish en /usr/local):</target>
        </trans-unit>
        <trans-unit id="af40cb842637feef7ad4047a0e620a3e2d404f64" translate="yes" xml:space="preserve">
          <source>If you installed it with a package manager, just use that package manager's uninstall function. If you built fish yourself, assuming you installed it to /usr/local, do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec1a3f92a8c27f32a8f6e6cb86da5cd7afb4270" translate="yes" xml:space="preserve">
          <source>If you instead want to put a suspended job into the background, use the &lt;a href=&quot;cmds/bg#cmd-bg&quot;&gt;bg&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24dbcaa65ea45136e4556660a86f87890a258184" translate="yes" xml:space="preserve">
          <source>If you instead want to put a suspended job into the background, use the &lt;a href=&quot;commands#bg&quot;&gt;&lt;code&gt;bg&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">Si, en cambio, desea poner un trabajo suspendido en segundo plano, use el comando &lt;a href=&quot;commands#bg&quot;&gt; &lt;code&gt;bg&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="542197cd998c2de66183ced7aed677f0d6eff906" translate="yes" xml:space="preserve">
          <source>If you need a list of numbers, you can use the &lt;code&gt;seq&lt;/code&gt; command to create one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d15c732f3a561ab865f45eb2b69dbf51b681f71" translate="yes" xml:space="preserve">
          <source>If you prefer to use a different browser (other than as described above) for fish help, you can set the fish_help_browser variable. This variable may be set as a list, where the first element is the browser command and the rest are browser options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76575622923fc6960275a0372650f7e641f7d23c" translate="yes" xml:space="preserve">
          <source>If you prefer to use a different browser (other than as described above) for fish help, you can set the fish_help_browser variable. This variable may be set as an array, where the first element is the browser command and the rest are browser options.</source>
          <target state="translated">Si prefieres usar un navegador diferente (que no sea el descrito anteriormente)para la ayuda de los peces,puedes establecer la variable fish_help_browser.Esta variable puede ser establecida como una matriz,donde el primer elemento es el comando del navegador y el resto son opciones del navegador.</target>
        </trans-unit>
        <trans-unit id="e98db4a9618c4e99c4cfeeb47be4e315b3159f68" translate="yes" xml:space="preserve">
          <source>If you specify a negative index when expanding or assigning to a list variable, the index will be calculated from the end of the list. For example, the index -1 means the last index of a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe063a17016dbfe1f5327724e22af9c696e2b9d" translate="yes" xml:space="preserve">
          <source>If you specify a negative index when expanding or assigning to a list variable, the index will be taken from the &lt;em&gt;end&lt;/em&gt; of the list. For example, the index -1 is the last element of the list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b10dc2d52b83a3f3bcbb9eafde410131a7638e1" translate="yes" xml:space="preserve">
          <source>If you specify a negative index when expanding or assigning to an array variable, the index will be calculated from the end of the array. For example, the index -1 means the last index of an array.</source>
          <target state="translated">Si se especifica un índice negativo al expandir o asignar a una variable de la matriz,el índice se calculará a partir del final de la matriz.Por ejemplo,el índice -1 significa el último índice de una matriz.</target>
        </trans-unit>
        <trans-unit id="bef2a5da408bc0ccc604bb6e7c2ada1e1e368d28" translate="yes" xml:space="preserve">
          <source>If you specify both &lt;code&gt;--prefix&lt;/code&gt; and &lt;code&gt;--contains&lt;/code&gt; the last flag seen is used.</source>
          <target state="translated">Si especificas tanto &lt;code&gt;--prefix&lt;/code&gt; como &lt;code&gt;--contains&lt;/code&gt; , se usa la &amp;uacute;ltima bandera vista.</target>
        </trans-unit>
        <trans-unit id="cfeb5cfbb4d7330298cd9ae2e7db448aa2300961" translate="yes" xml:space="preserve">
          <source>If you specify the &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--entire&lt;/code&gt; then each matching string is printed including any prefix or suffix not matched by the pattern (equivalent to &lt;code&gt;grep&lt;/code&gt; without the &lt;code&gt;-o&lt;/code&gt; flag). You can, obviously, achieve the same result by prepending and appending &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;.*&lt;/code&gt; depending on whether or not you have specified the &lt;code&gt;--regex&lt;/code&gt; flag. The &lt;code&gt;--entire&lt;/code&gt; flag is simply a way to avoid having to complicate the pattern in that fashion and make the intent of the &lt;code&gt;string match&lt;/code&gt; clearer. Without &lt;code&gt;--entire&lt;/code&gt; and &lt;code&gt;--regex&lt;/code&gt;, a PATTERN will need to match the entire STRING before it will be reported.</source>
          <target state="translated">Si especifica &lt;code&gt;-e&lt;/code&gt; o &lt;code&gt;--entire&lt;/code&gt; , cada cadena coincidente se imprime incluyendo cualquier prefijo o sufijo que no coincida con el patr&amp;oacute;n (equivalente a &lt;code&gt;grep&lt;/code&gt; sin la &lt;code&gt;-o&lt;/code&gt; ). Obviamente, puede lograr el mismo resultado anteponiendo y a&amp;ntilde;adiendo &lt;code&gt;*&lt;/code&gt; o &lt;code&gt;.*&lt;/code&gt; Dependiendo de si ha especificado o no el indicador &lt;code&gt;--regex&lt;/code&gt; . La bandera &lt;code&gt;--entire&lt;/code&gt; es simplemente una forma de evitar tener que complicar el patr&amp;oacute;n de esa manera y aclarar la intenci&amp;oacute;n de la &lt;code&gt;string match&lt;/code&gt; . Sin &lt;code&gt;--entire&lt;/code&gt; y &lt;code&gt;--regex&lt;/code&gt; , un PATR&amp;Oacute;N deber&amp;aacute; coincidir con la STRING completa antes de que se informe.</target>
        </trans-unit>
        <trans-unit id="22a9feadf64d822a318f10f2b4793d1a2316c159" translate="yes" xml:space="preserve">
          <source>If you specify the &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--filter&lt;/code&gt; flag then each input string is printed only if a replacement was done. This is useful where you would otherwise use this idiom: &lt;code&gt;a_cmd | string match pattern | string replace pattern new_pattern&lt;/code&gt;. You can instead just write &lt;code&gt;a_cmd | string replace --filter pattern new_pattern&lt;/code&gt;.</source>
          <target state="translated">Si especifica el indicador &lt;code&gt;-f&lt;/code&gt; o &lt;code&gt;--filter&lt;/code&gt; , cada cadena de entrada se imprime solo si se realiz&amp;oacute; un reemplazo. Esto es &amp;uacute;til donde de otra manera usar&amp;iacute;a este modismo: &lt;code&gt;a_cmd | string match pattern | string replace pattern new_pattern&lt;/code&gt; . En su lugar, puede escribir &lt;code&gt;a_cmd | string replace --filter pattern new_pattern&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8e54ae0a24762829d8f55a86df97428a46a48f0" translate="yes" xml:space="preserve">
          <source>If you want to add the directory &lt;code&gt;~/linux/bin&lt;/code&gt; to your PATH variable when using a login shell, add the following to your &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; file:</source>
          <target state="translated">Si desea agregar el directorio &lt;code&gt;~/linux/bin&lt;/code&gt; a su variable PATH cuando usa un shell de inicio de sesi&amp;oacute;n, agregue lo siguiente a su &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9279139c6582126d71499a2ce758884961e720f6" translate="yes" xml:space="preserve">
          <source>If you want to be able to press</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b1e2234b3ea5f7781540b4747240f8e476c656" translate="yes" xml:space="preserve">
          <source>If you want to change or disable this display, modify the &lt;code&gt;fish_mode_prompt&lt;/code&gt; function, for instance via &lt;a href=&quot;cmds/funced#cmd-funced&quot;&gt;funced&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3226bbbfea92d52214a04066c17b75561d8b1dfd" translate="yes" xml:space="preserve">
          <source>If you want to find out more about the echo command used above, read the manual page for the echo command by writing: &lt;code&gt;man echo&lt;/code&gt;</source>
          <target state="translated">Si desea obtener m&amp;aacute;s informaci&amp;oacute;n sobre el comando echo utilizado anteriormente, lea la p&amp;aacute;gina del manual del comando echo escribiendo: &lt;code&gt;man echo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf2181e509bdee84b390ead8fe1261883f65f450" translate="yes" xml:space="preserve">
          <source>If you want to know if a variable has &lt;em&gt;no elements&lt;/em&gt;, use &lt;code&gt;set -q var[1]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b8934a463057ab4cbebc293cbcc2bde13fda93" translate="yes" xml:space="preserve">
          <source>If you want to learn more about fish, there is &lt;a href=&quot;index&quot;&gt;lots of detailed documentation&lt;/a&gt;, an &lt;a href=&quot;https://lists.sourceforge.net/lists/listinfo/fish-users&quot;&gt;official mailing list&lt;/a&gt;, the IRC channel #fish on &lt;code&gt;irc.oftc.net&lt;/code&gt;, and the &lt;a href=&quot;https://github.com/fish-shell/fish-shell/&quot;&gt;github page&lt;/a&gt;.</source>
          <target state="translated">Si desea obtener m&amp;aacute;s informaci&amp;oacute;n sobre peces, hay &lt;a href=&quot;index&quot;&gt;mucha documentaci&amp;oacute;n detallada&lt;/a&gt; , una &lt;a href=&quot;https://lists.sourceforge.net/lists/listinfo/fish-users&quot;&gt;lista de correo oficial&lt;/a&gt; , el canal de IRC #fish en &lt;code&gt;irc.oftc.net&lt;/code&gt; y la &lt;a href=&quot;https://github.com/fish-shell/fish-shell/&quot;&gt;p&amp;aacute;gina de github&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aa7777db3b385617c9905b1bb85dce8643e34e91" translate="yes" xml:space="preserve">
          <source>If you want to learn more about fish, there is &lt;a href=&quot;index#intro&quot;&gt;lots of detailed documentation&lt;/a&gt;, the &lt;a href=&quot;https://gitter.im/fish-shell/fish-shell&quot;&gt;official gitter channel&lt;/a&gt;, an &lt;a href=&quot;https://lists.sourceforge.net/lists/listinfo/fish-users&quot;&gt;official mailing list&lt;/a&gt;, and the &lt;a href=&quot;https://github.com/fish-shell/fish-shell/&quot;&gt;github page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d1a8c24236cf7d05190b1115ef30aaad303cfb" translate="yes" xml:space="preserve">
          <source>If you want to make your command line more productive, more useful, and more fun, without learning a bunch of arcane syntax and configuration options, then &lt;code&gt;fish&lt;/code&gt; might be just what you're looking for!</source>
          <target state="translated">Si desea que su l&amp;iacute;nea de comandos sea m&amp;aacute;s productiva, m&amp;aacute;s &amp;uacute;til y m&amp;aacute;s divertida, sin tener que aprender un mont&amp;oacute;n de opciones de configuraci&amp;oacute;n y sintaxis arcanas, &amp;iexcl; &lt;code&gt;fish&lt;/code&gt; podr&amp;iacute;a ser justo lo que est&amp;aacute; buscando!</target>
        </trans-unit>
        <trans-unit id="5b7d23bdb9d59e0e649f1e88d3662e4b2b0bdeb7" translate="yes" xml:space="preserve">
          <source>If you want to make your command line more productive, more useful, and more fun, without learning a bunch of arcane syntax and configuration options, then fish might be just what you're looking for!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8639c78ec7d928802ef97a990dee029d2225ce5d" translate="yes" xml:space="preserve">
          <source>If you want to modify your existing prompt, you can use &lt;a href=&quot;cmds/funced#cmd-funced&quot;&gt;funced&lt;/a&gt; and &lt;a href=&quot;cmds/funcsave#cmd-funcsave&quot;&gt;funcsave&lt;/a&gt; like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240e39aa619c5f139c2593362dec95cdca1dfa27" translate="yes" xml:space="preserve">
          <source>If you want to organize your configuration, fish also reads commands in .fish files in &lt;code&gt;~/.config/fish/conf.d/&lt;/code&gt;. See &lt;a href=&quot;index#initialization&quot;&gt;initialization&lt;/a&gt; for the details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57bb991addeaec34e0d2e4ff1072fa3e66d59b28" translate="yes" xml:space="preserve">
          <source>If you want to override a variable for a single command, you can use &quot;var=val&quot; statements before the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b010bfc3d915896fa771aef1b796169616d992f5" translate="yes" xml:space="preserve">
          <source>If you want to reuse several arguments from the same line (&quot;!!:3*&quot; and the like), consider recalling the whole line and removing what you don't need (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817bbc583c325d82f70d5e4e389c9fb588a7021e" translate="yes" xml:space="preserve">
          <source>If you want to reuse several arguments from the same line (&quot;!!:3*&quot; and the like), consider recalling the whole line and removing what you don't need (&lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;D&lt;/b&gt; and &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;Backspace&lt;/b&gt; are your friends).</source>
          <target state="translated">Si desea reutilizar varios argumentos de la misma l&amp;iacute;nea (&quot;!!: 3 *&quot; y similares), considere recuperar toda la l&amp;iacute;nea y eliminar lo que no necesita ( &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;D&lt;/b&gt; y &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;Retroceso&lt;/b&gt; son sus amigos).</target>
        </trans-unit>
        <trans-unit id="17b2c50714eca6eb3a1c4f418309af6c45fec63f" translate="yes" xml:space="preserve">
          <source>If you want to run a set of commands when &lt;code&gt;fish&lt;/code&gt; exits, use an &lt;a href=&quot;#event&quot;&gt;event handler&lt;/a&gt; that is triggered by the exit of the shell:</source>
          <target state="translated">Si desea ejecutar un conjunto de comandos cuando &lt;code&gt;fish&lt;/code&gt; sale, use un &lt;a href=&quot;#event&quot;&gt;controlador de eventos&lt;/a&gt; que se activa al salir del shell:</target>
        </trans-unit>
        <trans-unit id="a64e2d8d56c620a2a93cec9e87f8b2ade6021773" translate="yes" xml:space="preserve">
          <source>If you want to run a set of commands when fish exits, use an &lt;a href=&quot;#event&quot;&gt;event handler&lt;/a&gt; that is triggered by the exit of the shell:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef00e85cfc00298b4501ca427b39a1d3165499a" translate="yes" xml:space="preserve">
          <source>If you want to set some personal customization, universal variables are nice:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46bd99bf1b62b6b2fbac8244f0ed2e2fc11de65b" translate="yes" xml:space="preserve">
          <source>If you want to set something in config.fish, or set something in a function and have it available for the rest of the session, global scope is a good choice:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a9b4644cb739f83f6382b12a8a184f1a74b482" translate="yes" xml:space="preserve">
          <source>If you want to uninstall fish, first make sure fish is not set as your shell. Run &lt;code&gt;chsh -s /bin/bash&lt;/code&gt; if you are not sure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840dcfc4db83e11261bb160a1f0912d853943c4b" translate="yes" xml:space="preserve">
          <source>If you wish to use fish (or any other shell) as your default shell, you need to enter your new shell's executable &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; in two places:</source>
          <target state="translated">Si desea usar fish (o cualquier otro caparaz&amp;oacute;n) como caparaz&amp;oacute;n predeterminado, debe ingresar el ejecutable &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; de su nuevo caparaz&amp;oacute;n en dos lugares:</target>
        </trans-unit>
        <trans-unit id="115e2c44e689956437e718e0ec0032e55b5f7fed" translate="yes" xml:space="preserve">
          <source>If you wish to use fish (or any other shell) as your default shell, you need to enter your new shell's executable &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; in two places: - add &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; to &lt;code&gt;/etc/shells&lt;/code&gt; - change your default shell with &lt;code&gt;chsh -s /usr/local/bin/fish&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3366416e47329d39ef388391235aec49254de478" translate="yes" xml:space="preserve">
          <source>If you wish to use fish (or any other shell) as your default shell, you need to enter your new shell's executable in two places.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5f2b7c10dba916512ad297d63b951291ca4677" translate="yes" xml:space="preserve">
          <source>If your command does not need access to stdin, consider using &lt;a href=&quot;source#cmd-source&quot;&gt;source&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a88aaa448eb4ccc5d7c16b222b1aaafa2e3553e" translate="yes" xml:space="preserve">
          <source>If your command does not need access to stdin, consider using &lt;code&gt;source&lt;/code&gt; instead.</source>
          <target state="translated">Si su comando no necesita acceso a stdin, considere usar &lt;code&gt;source&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="a0edd7289f911011f3a35d834f1f941473e2b0a8" translate="yes" xml:space="preserve">
          <source>If, in the example above, $WORD is undefined or an empty list, the &quot;s&quot; is not printed. However, it is printed if $WORD is the empty string (like after &lt;code&gt;set WORD &quot;&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b7e02e5dced2f235b74397e5dd8fd6678ecaa1" translate="yes" xml:space="preserve">
          <source>If, in the example above, $WORD is undefined or an empty list, the &quot;s&quot; is not printed. However, it is printed, if $WORD is the empty string.</source>
          <target state="translated">Si en el ejemplo anterior,$WORD no está definido o es una lista vacía,la &quot;s&quot; no se imprime.Sin embargo,se imprime,si $WORD es la cadena vacía.</target>
        </trans-unit>
        <trans-unit id="cd4f982a2dfbfb7a494a0fcc11edc18044fd3ee7" translate="yes" xml:space="preserve">
          <source>Import the abbreviations defined on another_host over SSH.</source>
          <target state="translated">Importar las abreviaturas definidas en otro_host sobre SSH.</target>
        </trans-unit>
        <trans-unit id="07b875aa08020a5fdd644ae88f4843b8a79307a9" translate="yes" xml:space="preserve">
          <source>In a terminal, the application running inside it and the terminal itself need to agree on the width of characters in order to handle cursor movement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439670388f9df6081d069daa092806041f2fd81f" translate="yes" xml:space="preserve">
          <source>In addition there's a &lt;a href=&quot;cmds/begin#cmd-begin&quot;&gt;begin&lt;/a&gt; block that just groups commands together so you can redirect to a block or use a new &lt;a href=&quot;#variables-scope&quot;&gt;variable scope&lt;/a&gt; without any repetition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fee095141e15902cb9b8f496f993f1d5d3fa057" translate="yes" xml:space="preserve">
          <source>In addition to the standard bindings listed here, you can also define your own with &lt;a href=&quot;cmds/bind#cmd-bind&quot;&gt;bind&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50371ba790382257744186339f089813674f7e0" translate="yes" xml:space="preserve">
          <source>In addition, it only splits them on newlines instead of $IFS. If you want to split on something else, use &lt;a href=&quot;cmds/string#cmd-string-split&quot;&gt;string split&lt;/a&gt;, &lt;a href=&quot;cmds/string#cmd-string-split&quot;&gt;string split0&lt;/a&gt; or &lt;a href=&quot;cmds/string#cmd-string-collect&quot;&gt;string collect&lt;/a&gt;. If those are used as the last command in a command substitution the splits they create are carried over. So:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b7d1b47f67f33906cafe0ea45bb9a7ae9de792" translate="yes" xml:space="preserve">
          <source>In addition, when adding abbreviations:</source>
          <target state="translated">Además,cuando se añaden abreviaturas:</target>
        </trans-unit>
        <trans-unit id="8214b19376f922281d94350c39e691ba4c55ab07" translate="yes" xml:space="preserve">
          <source>In addition, when adding or renaming abbreviations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b280783a543346f92416ec886c17e3557233fc" translate="yes" xml:space="preserve">
          <source>In assignment mode, &lt;code&gt;set&lt;/code&gt; does not modify the exit status, but passes along whatever $status was set, including by command substitutions. This allows capturing the output and exit status of a subcommand, like in &lt;code&gt;if set output (command)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11dd25d3b50e779c52a3bed6755a9de86e7cc31" translate="yes" xml:space="preserve">
          <source>In assignment mode, &lt;code&gt;set&lt;/code&gt; does not modify the exit status. This allows simultaneous capture of the output and exit status of a subcommand, e.g. &lt;code&gt;if set output (command)&lt;/code&gt;. In query mode, the exit status is the number of variables that were not found. In erase mode, &lt;code&gt;set&lt;/code&gt; exits with a zero exit status in case of success, with a non-zero exit status if the commandline was invalid, if the variable was write-protected or if the variable did not exist.</source>
          <target state="translated">En el modo de asignaci&amp;oacute;n, &lt;code&gt;set&lt;/code&gt; no modifica el estado de salida. Esto permite la captura simult&amp;aacute;nea del estado de salida y salida de un subcomando, por ejemplo, &lt;code&gt;if set output (command)&lt;/code&gt; . En el modo de consulta, el estado de salida es el n&amp;uacute;mero de variables que no se encontraron. En el modo de borrado, &lt;code&gt;set&lt;/code&gt; salidas con un estado de salida cero en caso de &amp;eacute;xito, con un estado de salida distinto de cero si la l&amp;iacute;nea de comando no era v&amp;aacute;lida, si la variable estaba protegida contra escritura o si la variable no exist&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="997bbb76e726398decafa893aef44209d89a5923" translate="yes" xml:space="preserve">
          <source>In bash, this would have created two directories &quot;Mister&quot; and &quot;Noodle&quot;. In &lt;code&gt;fish&lt;/code&gt;, it created only one: the variable had the value &quot;Mister Noodle&quot;, so that is the argument that was passed to &lt;code&gt;mkdir&lt;/code&gt;, spaces and all. Other shells use the term &quot;arrays&quot;, rather than lists.</source>
          <target state="translated">En bash, esto habr&amp;iacute;a creado dos directorios &quot;Mister&quot; y &quot;Noodle&quot;. En &lt;code&gt;fish&lt;/code&gt; , cre&amp;oacute; solo uno: la variable ten&amp;iacute;a el valor &quot;Mister Noodle&quot;, por lo que ese es el argumento que se pas&amp;oacute; a &lt;code&gt;mkdir&lt;/code&gt; , espacios y todo. Otros shells utilizan el t&amp;eacute;rmino &quot;matrices&quot;, en lugar de listas.</target>
        </trans-unit>
        <trans-unit id="e4489109b985bf2bfd34ae1b60049239f2bd9ed4" translate="yes" xml:space="preserve">
          <source>In bash, this would have created two directories &quot;Mister&quot; and &quot;Noodle&quot;. In fish, it created only one: the variable had the value &quot;Mister Noodle&quot;, so that is the argument that was passed to &lt;code&gt;mkdir&lt;/code&gt;, spaces and all. Other shells use the term &quot;arrays&quot;, rather than lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="febdce18a02406c3f663a8114d7d2b52f9d2f956" translate="yes" xml:space="preserve">
          <source>In cases such as this, one can use &lt;code&gt;command&lt;/code&gt;&lt;code&gt;test&lt;/code&gt; to explicitly use the system's standalone &lt;code&gt;test&lt;/code&gt; rather than this &lt;code&gt;builtin&lt;/code&gt;&lt;code&gt;test&lt;/code&gt;.</source>
          <target state="translated">En casos como este, se puede usar la &lt;code&gt;test&lt;/code&gt; &lt;code&gt;command&lt;/code&gt; para usar expl&amp;iacute;citamente la &lt;code&gt;test&lt;/code&gt; independiente del sistema en lugar de esta &lt;code&gt;test&lt;/code&gt; &lt;code&gt;builtin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1ce47c387bac9b4cac7573029867c2d32e1cdf6" translate="yes" xml:space="preserve">
          <source>In contrast to &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;'s &lt;code&gt;match&lt;/code&gt; defaults to glob-mode, while &lt;code&gt;replace&lt;/code&gt; defaults to literal matching. If set to regex-mode, they use PCRE regular expressions, which is comparable to &lt;code&gt;grep&lt;/code&gt;'s &lt;code&gt;-P&lt;/code&gt; option. &lt;code&gt;match&lt;/code&gt; defaults to printing just the match, which is like &lt;code&gt;grep&lt;/code&gt; with &lt;code&gt;-o&lt;/code&gt; (use &lt;code&gt;--entire&lt;/code&gt; to enable grep-like behavior).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f2d284a1e65e7867199a2469dd5dff1c9b6cd8" translate="yes" xml:space="preserve">
          <source>In contrast to &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;s &lt;code&gt;match&lt;/code&gt; defaults to glob-mode, while &lt;code&gt;replace&lt;/code&gt; defaults to literal matching. If set to regex-mode, they use PCRE regular expressions, which is comparable to &lt;code&gt;grep&lt;/code&gt;s &lt;code&gt;-P&lt;/code&gt; option. &lt;code&gt;match&lt;/code&gt; defaults to printing just the match, which is like &lt;code&gt;grep&lt;/code&gt; with &lt;code&gt;-o&lt;/code&gt; (use &lt;code&gt;--entire&lt;/code&gt; to enable grep-like behavior).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50308010771463782c1b1049f298eeb910eb8cb2" translate="yes" xml:space="preserve">
          <source>In contrast to these classics, &lt;code&gt;string&lt;/code&gt; reads input either from stdin or as arguments. &lt;code&gt;string&lt;/code&gt; also does not deal with files, so it requires redirections to be used with them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ded371170cef1c5c72e22d233a501a909e3ec3b" translate="yes" xml:space="preserve">
          <source>In erase mode, &lt;code&gt;set&lt;/code&gt; exits with a zero exit status in case of success, with a non-zero exit status if the commandline was invalid, if any of the variables did not exist or was a &lt;a href=&quot;../index#variables-special&quot;&gt;special read-only variable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8150d5ade4961a7346cfe9d6f7af40451a0e9eba" translate="yes" xml:space="preserve">
          <source>In erase mode, if variable indices are specified, only the specified slices of the array variable will be erased.</source>
          <target state="translated">En el modo de borrado,si se especifican índices variables,sólo se borrarán los trozos especificados de la variable de la matriz.</target>
        </trans-unit>
        <trans-unit id="ea9ced13df63c29343d5b0a4c89e208d759dd99a" translate="yes" xml:space="preserve">
          <source>In erase mode, if variable indices are specified, only the specified slices of the list variable will be erased.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d285383bee7174093582f84311886d8e77b2597e" translate="yes" xml:space="preserve">
          <source>In fish versions prior to 2.3.0 the &lt;code&gt;$argv&lt;/code&gt; variable would have a single element (the name of the sourced file) if no arguments are present. Otherwise it would contain arguments without the name of the sourced file. That behavior was very confusing and unlike other shells such as bash and zsh.</source>
          <target state="translated">En las versiones Fish anteriores a 2.3.0, la variable &lt;code&gt;$argv&lt;/code&gt; tendr&amp;iacute;a un solo elemento (el nombre del archivo de origen) si no hay argumentos presentes. De lo contrario, contendr&amp;iacute;a argumentos sin el nombre del archivo de origen. Ese comportamiento fue muy confuso y diferente a otros shells como bash y zsh.</target>
        </trans-unit>
        <trans-unit id="9b6a0ae9d083c309f889a5d39f65825be86a357a" translate="yes" xml:space="preserve">
          <source>In fish versions prior to 2.3.0, the &lt;code&gt;$argv&lt;/code&gt; variable would have a single element (the name of the sourced file) if no arguments are present. Otherwise, it would contain arguments without the name of the sourced file. That behavior was very confusing and unlike other shells such as bash and zsh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6167c9c2e21f8c5d664cda565772acda6aa5a44" translate="yes" xml:space="preserve">
          <source>In fish versions prior to 2.5.0 it was possible to create a function named &lt;code&gt;-&lt;/code&gt; that would do &lt;code&gt;cd -&lt;/code&gt;. Changes in the 2.5.0 release included several bug fixes that enforce the rule that a bare hyphen is not a valid function (or variable) name. However, you can achieve the same effect via an abbreviation:</source>
          <target state="translated">En las versiones Fish anteriores a la 2.5.0 era posible crear una funci&amp;oacute;n llamada &lt;code&gt;-&lt;/code&gt; que har&amp;iacute;a &lt;code&gt;cd -&lt;/code&gt; . Los cambios en la versi&amp;oacute;n 2.5.0 incluyeron varias correcciones de errores que imponen la regla de que un gui&amp;oacute;n simple no es un nombre de funci&amp;oacute;n (o variable) v&amp;aacute;lido. Sin embargo, puede lograr el mismo efecto mediante una abreviatura:</target>
        </trans-unit>
        <trans-unit id="c82580c4fc0344cd7e4b4c3bbc7ac9db12a80d91" translate="yes" xml:space="preserve">
          <source>In functions, &lt;code&gt;block&lt;/code&gt; can be useful while performing work that should not be interrupted by the shell.</source>
          <target state="translated">En funciones, el &lt;code&gt;block&lt;/code&gt; puede ser &amp;uacute;til al realizar un trabajo que no deber&amp;iacute;a ser interrumpido por el shell.</target>
        </trans-unit>
        <trans-unit id="38b2f2e802b2d8e2671843b97b7871d835bce820" translate="yes" xml:space="preserve">
          <source>In general, fish's history recall works like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ff03b555073b2736f671e958968657fb6eb4ed" translate="yes" xml:space="preserve">
          <source>In general, special characters are special by default, so &lt;code&gt;a+&lt;/code&gt; matches one or more &quot;a&quot;s, while &lt;code&gt;a\+&lt;/code&gt; matches an &quot;a&quot; and then a &quot;+&quot;. &lt;code&gt;(a+)&lt;/code&gt; matches one or more &quot;a&quot;s in a capturing group (&lt;code&gt;(?:XXXX)&lt;/code&gt; denotes a non-capturing group). For the replacement parameter of &lt;code&gt;replace&lt;/code&gt;, &lt;code&gt;$n&lt;/code&gt; refers to the n-th group of the match. In the match parameter, &lt;code&gt;\n&lt;/code&gt; (e.g. &lt;code&gt;\1&lt;/code&gt;) refers back to groups.</source>
          <target state="translated">En general, los caracteres especiales son especiales por defecto, por lo que &lt;code&gt;a+&lt;/code&gt; coincide con una o m&amp;aacute;s &quot;a&quot;, mientras que &lt;code&gt;a\+&lt;/code&gt; coincide con una &quot;a&quot; y luego un &quot;+&quot;. &lt;code&gt;(a+)&lt;/code&gt; coincide con una o m&amp;aacute;s &quot;a&quot; en un grupo de captura ( &lt;code&gt;(?:XXXX)&lt;/code&gt; indica un grupo que no captura). Para el par&amp;aacute;metro de &lt;code&gt;replace&lt;/code&gt; de replace , &lt;code&gt;$n&lt;/code&gt; refiere al n-&amp;eacute;simo grupo de la coincidencia. En el par&amp;aacute;metro de coincidencia, &lt;code&gt;\n&lt;/code&gt; (por ejemplo, &lt;code&gt;\1&lt;/code&gt; ) se refiere a grupos.</target>
        </trans-unit>
        <trans-unit id="b51eb76c3309ce93bf5e04af0029f4517c90bda0" translate="yes" xml:space="preserve">
          <source>In index brackets, fish understands ranges written like &lt;code&gt;a..b&lt;/code&gt; ('a' and 'b' being indices). They are expanded into a sequence of indices from a to b (so &lt;code&gt;a a+1 a+2 ... b&lt;/code&gt;), going up if b is larger and going down if a is larger. Negative indices can also be used - they are taken from the end of the list, so &lt;code&gt;-1&lt;/code&gt; is the last element, and &lt;code&gt;-2&lt;/code&gt; the one before it. If an index doesn't exist the range is clamped to the next possible index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f151afd8c58f05083781d29e38adf8acc285ad" translate="yes" xml:space="preserve">
          <source>In order to change your default shell, type:</source>
          <target state="translated">Para cambiar su shell por defecto,escriba:</target>
        </trans-unit>
        <trans-unit id="7744f887d10f15ca76ae2472bb145fdd5fdbdb57" translate="yes" xml:space="preserve">
          <source>In order to protect the shell from consuming too many system resources, &lt;code&gt;read&lt;/code&gt; will only consume a maximum of 10 MiB (1048576 bytes); if the terminator is not reached before this limit then VARIABLE is set to empty and the exit status is set to 122. This limit can be altered with the &lt;code&gt;fish_read_limit&lt;/code&gt; variable. If set to 0 (zero), the limit is removed.</source>
          <target state="translated">Para evitar que el shell consuma demasiados recursos del sistema, la &lt;code&gt;read&lt;/code&gt; solo consumir&amp;aacute; un m&amp;aacute;ximo de 10 MiB (1048576 bytes); si no se alcanza el terminador antes de este l&amp;iacute;mite, VARIABLE se establece en vac&amp;iacute;o y el estado de salida se establece en 122. Este l&amp;iacute;mite se puede modificar con la variable &lt;code&gt;fish_read_limit&lt;/code&gt; . Si se establece en 0 (cero), se elimina el l&amp;iacute;mite.</target>
        </trans-unit>
        <trans-unit id="10c1bbb71199c4bba1fc0fbd3600f1a2a6187c25" translate="yes" xml:space="preserve">
          <source>In order to protect the shell from consuming too many system resources, &lt;code&gt;read&lt;/code&gt; will only consume a maximum of 100 MiB (104857600 bytes); if the terminator is not reached before this limit then VARIABLE is set to empty and the exit status is set to 122. This limit can be altered with the &lt;code&gt;fish_read_limit&lt;/code&gt; variable. If set to 0 (zero), the limit is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb466b6200e27a0e4799833112a3b42e6de23b3" translate="yes" xml:space="preserve">
          <source>In particular it will:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1deffb90bad78ed3a67d8bbda9ff35ba53cfc814" translate="yes" xml:space="preserve">
          <source>In query mode, the exit status is the number of variables that were not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb4b17946050d9f509c4bdb763f770ebb06687a" translate="yes" xml:space="preserve">
          <source>In query mode, the scope to be examined can be specified.</source>
          <target state="translated">En el modo de consulta,se puede especificar el alcance a examinar.</target>
        </trans-unit>
        <trans-unit id="aab78a9420c39e765e3c7ab37bc447943546b397" translate="yes" xml:space="preserve">
          <source>In short: &lt;a href=&quot;index#quotes&quot;&gt;quote&lt;/a&gt; or &lt;a href=&quot;index#escapes&quot;&gt;escape&lt;/a&gt; the wildcard:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d4f28841a1759ddcc1b8894ac4045a23593691" translate="yes" xml:space="preserve">
          <source>In the following code, all output is redirected to the file out.html.</source>
          <target state="translated">En el siguiente código,toda la salida es redirigida al archivo out.html.</target>
        </trans-unit>
        <trans-unit id="67bf59485bd852b33bf0045b83854687c5fd2923" translate="yes" xml:space="preserve">
          <source>In the following examples if a flag is not seen when parsing the arguments then the corresponding _flag_X var(s) will not be set.</source>
          <target state="translated">En los siguientes ejemplos,si no se ve una bandera al analizar los argumentos,no se fijará la correspondiente varilla o varillas _flag_X.</target>
        </trans-unit>
        <trans-unit id="b18679bb485a969aa3729a892fbc342e477da1e5" translate="yes" xml:space="preserve">
          <source>In the overwhelming majority of cases, splitting on spaces is unwanted, so this is an improvement.</source>
          <target state="translated">En la inmensa mayoría de los casos,la división en espacios no es deseada,así que esto es una mejora.</target>
        </trans-unit>
        <trans-unit id="55c66e2c1e0fda8174837bafe85eb3fcb419d043" translate="yes" xml:space="preserve">
          <source>In the simplest case, this is just something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d4bef31048f07adb0a3c1f574c30c70992f0e5" translate="yes" xml:space="preserve">
          <source>In these cases use &lt;code&gt;string split &quot; &quot;&lt;/code&gt; like:</source>
          <target state="translated">En estos casos, use &lt;code&gt;string split &quot; &quot;&lt;/code&gt; como:</target>
        </trans-unit>
        <trans-unit id="18fa635f435c584cd7b90aa2e82333c61c95545a" translate="yes" xml:space="preserve">
          <source>In these cases use &lt;code&gt;string split -n &quot; &quot;&lt;/code&gt; like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86e38a4028df2e1d281758cf65343b3a55357c4" translate="yes" xml:space="preserve">
          <source>In these cases, the expansion eliminates the string, as a result of the implicit &lt;a href=&quot;#cartesian-product&quot;&gt;cartesian product&lt;/a&gt;.</source>
          <target state="translated">En estos casos, la expansi&amp;oacute;n elimina la cadena, como resultado del &lt;a href=&quot;#cartesian-product&quot;&gt;producto cartesiano&lt;/a&gt; impl&amp;iacute;cito .</target>
        </trans-unit>
        <trans-unit id="a96781a5a37dbe8375812a63f70f63e6201fe8ae" translate="yes" xml:space="preserve">
          <source>Incorrect use of output redirects</source>
          <target state="translated">El uso incorrecto de las redirecciones de salida</target>
        </trans-unit>
        <trans-unit id="00039aeb76d249d44e4bf3ba01d88ffc368e8bd4" translate="yes" xml:space="preserve">
          <source>Index range expansion</source>
          <target state="translated">Expansión del rango del índice</target>
        </trans-unit>
        <trans-unit id="6fb7f6ce1f52c7d40f5bab615e431e3f8551d458" translate="yes" xml:space="preserve">
          <source>Initialization files</source>
          <target state="translated">Archivos de inicialización</target>
        </trans-unit>
        <trans-unit id="5b8bc6fd5a49916cbd83500565c87c69583337ad" translate="yes" xml:space="preserve">
          <source>Inline variable assignments need to follow the &lt;code&gt;time&lt;/code&gt; keyword:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a06266a915eac92808f8af015840d61f777058b" translate="yes" xml:space="preserve">
          <source>Input/Output (IO) redirection</source>
          <target state="translated">Redireccionamiento de entrada/salida (IO)</target>
        </trans-unit>
        <trans-unit id="d06fb6a26a0cdbfbe971938c779ba1d8847a636e" translate="yes" xml:space="preserve">
          <source>Input/Output Redirection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc03501ba8e2728a6aa8f006cb5c7941d732153b" translate="yes" xml:space="preserve">
          <source>Insert mode</source>
          <target state="translated">Modo de inserción</target>
        </trans-unit>
        <trans-unit id="f37697c91d983059a7f049680216d12bd20b587e" translate="yes" xml:space="preserve">
          <source>Inserts a space without expanding an &lt;a href=&quot;#abbreviations&quot;&gt;abbreviation&lt;/a&gt;. For vi-mode this only applies to insert-mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="56c7ddbfeb574a673d5b721d96a9d20284b9212a" translate="yes" xml:space="preserve">
          <source>Installation and Start</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb573a25e7d086275bc5c6e4ace954c5c0646937" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;&amp;lt;(command)&lt;/code&gt; fish uses &lt;code&gt;(command | psub)&lt;/code&gt;. There is no equivalent to &lt;code&gt;&amp;gt;(command)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae42c8f55618254e86eb5072d662a945a623a1b7" translate="yes" xml:space="preserve">
          <source>Instead of introducing specific escapes like &lt;code&gt;\h&lt;/code&gt; for the hostname, the prompt is simply a function, so you can use variables like &lt;code&gt;$hostname&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccd152ce4747f5dc9ca0704a6680d2b21035b46" translate="yes" xml:space="preserve">
          <source>Integer flag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0ea93fbb85b738df0bd31fcf1bc9eb5468d22b" translate="yes" xml:space="preserve">
          <source>Interactive use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653edb0bfdb6bd20dfe7affb5776bc7d271237c7" translate="yes" xml:space="preserve">
          <source>Internals</source>
          <target state="translated">Internals</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="c62c2864f20a2be4aa0393bfb86357685145de0e" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;complete&lt;/code&gt; multiple times for the same command adds the new definitions on top of any existing completions defined for the command.</source>
          <target state="translated">La invocaci&amp;oacute;n &lt;code&gt;complete&lt;/code&gt; varias veces para el mismo comando agrega las nuevas definiciones adem&amp;aacute;s de cualquier finalizaci&amp;oacute;n existente definida para el comando.</target>
        </trans-unit>
        <trans-unit id="b79b686609fac01050f615aa2d90cce8c104548e" translate="yes" xml:space="preserve">
          <source>It also provides a large number of program specific scripted completions. Most of these completions are simple options like the &lt;code&gt;-l&lt;/code&gt; option for &lt;code&gt;ls&lt;/code&gt;, but some are more advanced. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60085e96c04073bb488214d0f08662dbfb4f6528" translate="yes" xml:space="preserve">
          <source>It calls out to VCS-specific functions. The currently supported systems are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203759edaf1b0804074e8480cb71a78345306aec" translate="yes" xml:space="preserve">
          <source>It can add bindings if given a SEQUENCE of characters to bind to. These should be written as &lt;a href=&quot;../index#escapes&quot;&gt;fish escape sequences&lt;/a&gt;. The most important of these are &lt;code&gt;\c&lt;/code&gt; for the control key, and &lt;code&gt;\e&lt;/code&gt; for escape, and because of historical reasons also the Alt key (sometimes also called &quot;Meta&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd08cedcb39096700407dcb2ed27cc0a4d9655b5" translate="yes" xml:space="preserve">
          <source>It can also be unexported with &lt;code&gt;--unexport&lt;/code&gt; or &lt;code&gt;-u&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72de81959962a9a672242451c7ee1c544e10edd3" translate="yes" xml:space="preserve">
          <source>It can handle floating point numbers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbcc8a329c69e0ee07a4d0ad690183b6b281c37" translate="yes" xml:space="preserve">
          <source>It can print a message to tell you about it, and it often also checks for a missing package that would include the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55070aaf0fa7daad220e9d1da32a51d9a5c70260" translate="yes" xml:space="preserve">
          <source>It doesn't support any options, so there is no need for a &lt;code&gt;--&lt;/code&gt; separator, which makes it easier to use for arbitrary input than &lt;code&gt;echo&lt;/code&gt;. &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907fa9ff594fcd3a11d91328fd423e6cb93e804d" translate="yes" xml:space="preserve">
          <source>It is (by default) safe to use &lt;code&gt;fish_add_path&lt;/code&gt; in config.fish, or it can be used once, interactively, and the paths will stay in future because of &lt;a href=&quot;../index#variables-universal&quot;&gt;universal variables&lt;/a&gt;. This is a &quot;do what I mean&quot; style command, if you need more control, consider modifying the variable yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c3b240dba13d15ae7f53c1a501f0c631e4c4fe" translate="yes" xml:space="preserve">
          <source>It is also possible to add all emacs-mode bindings to vi-mode by using something like</source>
          <target state="translated">También es posible añadir todos los enlaces del modo emacs al modo vi,usando algo como</target>
        </trans-unit>
        <trans-unit id="ec8325ed194e0bd115e6eac2314eb9c5b93bc6c7" translate="yes" xml:space="preserve">
          <source>It is also possible to add all emacs-mode bindings to vi-mode by using something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b3a0222511e2204a83e1bd65b24a52023e46f7" translate="yes" xml:space="preserve">
          <source>It is also possible to set or erase individual elements of a list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab84d80263900ba9d5b235b1f2ea80519e28b73" translate="yes" xml:space="preserve">
          <source>It is also possible to set or erase individual elements of an array:</source>
          <target state="translated">También es posible establecer o borrar elementos individuales de un conjunto:</target>
        </trans-unit>
        <trans-unit id="b76c3dec3cad4d06a40836a74a8d9d7e685bfe94" translate="yes" xml:space="preserve">
          <source>It is an error to redirect a builtin, function, or block to a file descriptor above 2. However this is supported for external commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d526954a8bce879648c1f8388f9dcd5c2cf78df" translate="yes" xml:space="preserve">
          <source>It is common to want to validate the the value provided for an option satisfies some criteria. For example, that it is a valid integer within a specific range. You can always do this after &lt;code&gt;argparse&lt;/code&gt; returns but you can also request that &lt;code&gt;argparse&lt;/code&gt; perform the validation by executing arbitrary fish script. To do so simply append an &lt;code&gt;!&lt;/code&gt; (exclamation-mark) then the fish script to be run. When that code is executed three vars will be defined:</source>
          <target state="translated">Es com&amp;uacute;n querer validar el valor proporcionado para que una opci&amp;oacute;n satisfaga algunos criterios. Por ejemplo, que es un n&amp;uacute;mero entero v&amp;aacute;lido dentro de un rango espec&amp;iacute;fico. Siempre puede hacer esto despu&amp;eacute;s de que &lt;code&gt;argparse&lt;/code&gt; regrese, pero tambi&amp;eacute;n puede solicitar que &lt;code&gt;argparse&lt;/code&gt; realice la validaci&amp;oacute;n ejecutando un script fish arbitrario. Para hacerlo, simplemente agregue un &lt;code&gt;!&lt;/code&gt; (signo de exclamaci&amp;oacute;n) y luego el script de pescado que se ejecutar&amp;aacute;. Cuando se ejecute ese c&amp;oacute;digo, se definir&amp;aacute;n tres vars:</target>
        </trans-unit>
        <trans-unit id="0d6750d924d7d23c326002d74cd58ced0561fd77" translate="yes" xml:space="preserve">
          <source>It is equivalent to &lt;code&gt;gettext fish STRING&lt;/code&gt;, meaning it can only be used to look up fish's own translations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc00ed6c087a163188d567eb4446d3e5458a9c89" translate="yes" xml:space="preserve">
          <source>It is possible the character is simply too new for your system to know - in this case you need to refrain from using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71bcd2264c669eb00c671521098fb03d224a747" translate="yes" xml:space="preserve">
          <source>It is possible to directly create functions and variables in &lt;code&gt;config.fish&lt;/code&gt; file, using the commands shown above. For example:</source>
          <target state="translated">Es posible crear directamente funciones y variables en el archivo &lt;code&gt;config.fish&lt;/code&gt; , usando los comandos que se muestran arriba. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c54df5298d2680170d64430ca4a68d0d26623f84" translate="yes" xml:space="preserve">
          <source>It is possible to pipe a different output file descriptor by prepending its FD number and the output redirect symbol to the pipe. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c56d7ebd2ae7a42fad58d3fe21565a95290624" translate="yes" xml:space="preserve">
          <source>It is usually added inside of a conditional block such as an &lt;a href=&quot;#if&quot;&gt;if&lt;/a&gt; statement or a &lt;a href=&quot;#switch&quot;&gt;switch&lt;/a&gt; statement to conditionally stop the executing function and return to the caller, but it can also be used to specify the exit status of a function.</source>
          <target state="translated">Por lo general, se agrega dentro de un bloque condicional, como una instrucci&amp;oacute;n &lt;a href=&quot;#if&quot;&gt;if&lt;/a&gt; o una instrucci&amp;oacute;n &lt;a href=&quot;#switch&quot;&gt;switch&lt;/a&gt; para detener condicionalmente la funci&amp;oacute;n en ejecuci&amp;oacute;n y regresar a la persona que llama, pero tambi&amp;eacute;n se puede usar para especificar el estado de salida de una funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2f4a9521ff238cfd8c93799d8d5f98df72dc4a0c" translate="yes" xml:space="preserve">
          <source>It is usually added inside of a conditional block such as an &lt;a href=&quot;if#cmd-if&quot;&gt;if&lt;/a&gt; statement or a &lt;a href=&quot;switch#cmd-switch&quot;&gt;switch&lt;/a&gt; statement to conditionally stop the executing function and return to the caller, but it can also be used to specify the exit status of a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cefa92c853442bbe4dd3a6ef0bacadea8c59bfbd" translate="yes" xml:space="preserve">
          <source>It is very important that function definition files only contain the definition for the specified function and nothing else. Otherwise, it is possible that autoloading a function files requires that the function already be loaded, which creates a circular dependency.</source>
          <target state="translated">Es muy importante que los archivos de definición de funciones sólo contengan la definición de la función especificada y nada más.De lo contrario,es posible que la autocarga de los archivos de función requiera que la función ya esté cargada,lo que crea una dependencia circular.</target>
        </trans-unit>
        <trans-unit id="ee7deea0a6c7d1bf1f12282d8e4f2d33d9fa574c" translate="yes" xml:space="preserve">
          <source>It knows about paths and options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13749347248c90340a66276ab0e48e071806f943" translate="yes" xml:space="preserve">
          <source>It knows about paths and options:</source>
          <target state="translated">Sabe de caminos y opciones:</target>
        </trans-unit>
        <trans-unit id="73489c53a191e7b18096896c25d0bf7ce0247f3c" translate="yes" xml:space="preserve">
          <source>It receives the full commandline as one argument per token, so $argv[1] contains the missing command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b075e830d4afccde933ee553ba07abf9675ce6" translate="yes" xml:space="preserve">
          <source>It requires fish to be built with gettext support. If that support is disabled, or there is no translation it will simply echo the argument back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78e633fc7cdcd0634a499148a621014d2eb87ba" translate="yes" xml:space="preserve">
          <source>It will also return non-zero if no argument at all was given, in which case it will print nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09881db18dec90e0ba8f4c151dbc729afee1f020" translate="yes" xml:space="preserve">
          <source>It will print &lt;code&gt;xa b c x&lt;/code&gt;, because the &quot;a b c &quot; is used in one piece. But if you do</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51b747a62fc1665fa16726f0cc05a908bd9ced6" translate="yes" xml:space="preserve">
          <source>It will print &lt;code&gt;xa b c x&lt;/code&gt;. But if you do</source>
          <target state="translated">Imprimir&amp;aacute; &lt;code&gt;xa b c x&lt;/code&gt; . Pero si lo haces</target>
        </trans-unit>
        <trans-unit id="784cf5b2d3ebe2dbad48daf3fd3356b85327650b" translate="yes" xml:space="preserve">
          <source>Iterating over a list of numbers can be done with &lt;code&gt;seq&lt;/code&gt;:</source>
          <target state="translated">Se puede iterar sobre una lista de n&amp;uacute;meros con &lt;code&gt;seq&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="58668e7669fd564d99db5d581fcdb6a5618440b5" translate="yes" xml:space="preserve">
          <source>J</source>
          <target state="translated">J</target>
        </trans-unit>
        <trans-unit id="1c2654e77c8a1d66520f0e811b49f2ee16ec66ef" translate="yes" xml:space="preserve">
          <source>Job control</source>
          <target state="translated">Control del trabajo</target>
        </trans-unit>
        <trans-unit id="090e4272d6cb5283367e3c64d3f84a1ce2fa8aee" translate="yes" xml:space="preserve">
          <source>Jobs in the list of jobs are sent a hang-up signal when fish terminates, which usually causes the job to terminate; &lt;code&gt;disown&lt;/code&gt; allows these processes to continue regardless.</source>
          <target state="translated">Los trabajos de la lista de trabajos reciben una se&amp;ntilde;al de colgar cuando finaliza la pesca, lo que normalmente hace que el trabajo finalice; &lt;code&gt;disown&lt;/code&gt; permite que estos procesos contin&amp;uacute;en independientemente.</target>
        </trans-unit>
        <trans-unit id="a7ee38bb7be4fc44198cb2685d9601dcf2b9f569" translate="yes" xml:space="preserve">
          <source>K</source>
          <target state="translated">K</target>
        </trans-unit>
        <trans-unit id="544b65b506a2ffb69625eb6e4d7541dde083f7c6" translate="yes" xml:space="preserve">
          <source>Keep in mind that a defined variabled could also be empty, either by having no elements (if set like &lt;code&gt;set var&lt;/code&gt;) or only empty elements (if set like &lt;code&gt;set var &quot;&quot;&lt;/code&gt;). Read on for how to deal with those.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c2ddd8aa7fac8b85b7d1410e5632ad6336f06c" translate="yes" xml:space="preserve">
          <source>Keep in mind that parameter expansion happens before expressions are evaluated. This can be very useful in order to perform calculations involving shell variables or the output of command substitutions, but it also means that parenthesis (&lt;code&gt;()&lt;/code&gt;) and the asterisk (&lt;code&gt;*&lt;/code&gt;) glob character have to be escaped or quoted. &lt;code&gt;x&lt;/code&gt; can also be used to denote multiplication, but it needs to be followed by whitespace to distinguish it from hexadecimal numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32881a56b33d045dddcff4e97bad3c9a0cec51b4" translate="yes" xml:space="preserve">
          <source>Keep in mind that parameter expansion takes before expressions are evaluated. This can be very useful in order to perform calculations involving shell variables or the output of command substitutions, but it also means that parenthesis (&lt;code&gt;()&lt;/code&gt;) and the asterisk (&lt;code&gt;*&lt;/code&gt;) glob character have to be escaped or quoted. &lt;code&gt;x&lt;/code&gt; can also be used to denote multiplication, but it needs to be followed by whitespace to distinguish it from hexadecimal numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946c99cee0972cba5b6dec7f34cb20b94d3a2715" translate="yes" xml:space="preserve">
          <source>Keep in mind that parameter expansion takes before expressions are evaluated. This can be very useful in order to perform calculations involving shell variables or the output of command substitutions, but it also means that parenthesis and the asterisk glob character have to be escaped or quoted.</source>
          <target state="translated">Tengan en cuenta que la expansión de los parámetros toma antes de que las expresiones sean evaluadas.Esto puede ser muy útil para realizar cálculos que impliquen variables de shell o la salida de sustituciones de comandos,pero también significa que los paréntesis y el carácter de asterisco global tienen que ser escapados o citados.</target>
        </trans-unit>
        <trans-unit id="573891be377321acc4815f0519173b9b072d48fa" translate="yes" xml:space="preserve">
          <source>Key bindings may use &quot;modes&quot;, which mimics Vi's modal input behavior. The default mode is &quot;default&quot;, and every bind applies to a single mode. The mode can be viewed/changed with the &lt;code&gt;$fish_bind_mode&lt;/code&gt; variable.</source>
          <target state="translated">Las combinaciones de teclas pueden usar &quot;modos&quot;, que imitan el comportamiento de entrada modal de Vi. El modo predeterminado es &quot;predeterminado&quot; y cada enlace se aplica a un solo modo. El modo se puede ver / cambiar con la variable &lt;code&gt;$fish_bind_mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d160e0986aca4714714a16f29ec605af90be704d" translate="yes" xml:space="preserve">
          <source>L</source>
          <target state="translated">L</target>
        </trans-unit>
        <trans-unit id="07749d64f555cfedf3e2d5d1184ead2daee433fc" translate="yes" xml:space="preserve">
          <source>Launch &lt;code&gt;git diff&lt;/code&gt; and repaint the commandline afterwards when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b562f1a6d0c5684ca96b09426bc1669506a7f803" translate="yes" xml:space="preserve">
          <source>Learning fish</source>
          <target state="translated">Peces de aprendizaje</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">License</target>
        </trans-unit>
        <trans-unit id="b5cf98d60edf53bb04a75b49fe8d89b334867632" translate="yes" xml:space="preserve">
          <source>Licensed under the GNU General Public License, version 2.</source>
          <target state="translated">Licenciado bajo la Licencia Pública General de GNU,versión 2.</target>
        </trans-unit>
        <trans-unit id="0c817d22761932bbede7666d8ef3e49c8a0db6e6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sed&lt;/code&gt;'s &lt;code&gt;s/old/new/&lt;/code&gt; command, &lt;code&gt;string replace&lt;/code&gt; still prints strings that don't match. &lt;code&gt;sed&lt;/code&gt;'s &lt;code&gt;-n&lt;/code&gt; in combination with a &lt;code&gt;/p&lt;/code&gt; modifier or command is like &lt;code&gt;string replace -f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93725e0a0f010017ca3b484abe1192273219e4e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sed&lt;/code&gt;s &lt;code&gt;s/&lt;/code&gt; command, &lt;code&gt;string replace&lt;/code&gt; still prints strings that don't match. &lt;code&gt;sed&lt;/code&gt;s &lt;code&gt;-n&lt;/code&gt; in combination with a &lt;code&gt;/p&lt;/code&gt; modifier or command is like &lt;code&gt;string replace -f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d7dce52159e33fc313d29a4609b6f0ca14c0f7" translate="yes" xml:space="preserve">
          <source>Like most programming language, fish also has the familiar &lt;a href=&quot;cmds/while#cmd-while&quot;&gt;while&lt;/a&gt; and &lt;a href=&quot;cmds/for#cmd-for&quot;&gt;for&lt;/a&gt; loops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f063dbdbbc3586964fed3651ab53c12631bbacd5" translate="yes" xml:space="preserve">
          <source>Like other shells, a dollar sign performs variable substitution:</source>
          <target state="translated">Al igual que otras conchas,el signo de dólar realiza una sustitución variable:</target>
        </trans-unit>
        <trans-unit id="1c10e83fba90f8ed8fbb793d35b29d018d6a8897" translate="yes" xml:space="preserve">
          <source>Like other shells, fish allows multiple commands either on separate lines or the same line.</source>
          <target state="translated">Al igual que otras conchas,el pescado permite múltiples comandos ya sea en líneas separadas o en la misma línea.</target>
        </trans-unit>
        <trans-unit id="c894b65fadc7501ee13e70fa65a7de836d05e57a" translate="yes" xml:space="preserve">
          <source>Like other shells, the Up arrow,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="a51da1d245e2b299170419f02a7283c1cf86ec93" translate="yes" xml:space="preserve">
          <source>Lists adjacent to other lists or strings are expanded as &lt;a href=&quot;index#cartesian-product&quot;&gt;cartesian products&lt;/a&gt; unless quoted (see &lt;a href=&quot;index#expand-variable&quot;&gt;Variable expansion&lt;/a&gt;):</source>
          <target state="translated">Las listas adyacentes a otras listas o cadenas se expanden como &lt;a href=&quot;index#cartesian-product&quot;&gt;productos cartesianos a&lt;/a&gt; menos que se citen (consulte &lt;a href=&quot;index#expand-variable&quot;&gt;Expansi&amp;oacute;n de variables&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="e550372c446deb80cb7097a6530c7895ce489c98" translate="yes" xml:space="preserve">
          <source>Lists adjacent to other lists or strings are expanded as cartesian products:</source>
          <target state="translated">Las listas adyacentes a otras listas o cadenas se amplían como productos cartesianos:</target>
        </trans-unit>
        <trans-unit id="4d148bf1eeeabc2918d896ed4801527981164657" translate="yes" xml:space="preserve">
          <source>Lists can be inspected with the &lt;a href=&quot;cmds/count#cmd-count&quot;&gt;count&lt;/a&gt; or the &lt;a href=&quot;cmds/contains#cmd-contains&quot;&gt;contains&lt;/a&gt; commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d036c0ec2ab378b452b8d2cead3a3ffcc191575a" translate="yes" xml:space="preserve">
          <source>Lists cannot contain other lists: there is no recursion. A variable is a list of strings, full stop.</source>
          <target state="translated">Las listas no pueden contener otras listas:no hay recursividad.Una variable es una lista de cuerdas,punto.</target>
        </trans-unit>
        <trans-unit id="1a9f2a13711da14fca66fcdde04b63c088d5386d" translate="yes" xml:space="preserve">
          <source>Local variables are specific to the current fish session, and associated with a specific block of commands, and automatically erased when a specific block goes out of scope. A block of commands is a series of commands that begins with one of the commands &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; , &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;switch&lt;/code&gt;, and ends with the command &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5bfe87f1fde5105869e708324f805855fff5fa" translate="yes" xml:space="preserve">
          <source>Local variables are specific to the current fish session, and associated with a specific block of commands, and is automatically erased when a specific block goes out of scope. A block of commands is a series of commands that begins with one of the commands &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; , &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;switch&lt;/code&gt;, and ends with the command &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8172703ebdf7bfc5b44da606bf9f833637212ffc" translate="yes" xml:space="preserve">
          <source>Locale variables</source>
          <target state="translated">Las variables locales</target>
        </trans-unit>
        <trans-unit id="02720f9d38bf4f35e84ed5228689898bee176418" translate="yes" xml:space="preserve">
          <source>Loops</source>
          <target state="translated">Loops</target>
        </trans-unit>
        <trans-unit id="4f6fd280f95526cf9605e281ba55d1b9e4e755e0" translate="yes" xml:space="preserve">
          <source>Loops and blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e836fdc2572ab23d5dc8c36bd613ac6b0f82d63" translate="yes" xml:space="preserve">
          <source>Manual</source>
          <target state="translated">Manual</target>
        </trans-unit>
        <trans-unit id="daa46eacc82eda91d82b231750f9ce0c28ce8e77" translate="yes" xml:space="preserve">
          <source>Many characters + control are indistinguishable from other keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f695dcfd95e469044fda4ad8dda41439800142" translate="yes" xml:space="preserve">
          <source>Many other shells have a large library of builtin commands. Most of these commands are also available as standalone commands, but have been implemented in the shell anyway. To avoid code duplication, and to avoid the confusion of subtly differing versions of the same command, &lt;code&gt;fish&lt;/code&gt; generally only implements builtins for actions which cannot be performed by a regular command.</source>
          <target state="translated">Muchos otros shells tienen una gran biblioteca de comandos integrados. La mayor&amp;iacute;a de estos comandos tambi&amp;eacute;n est&amp;aacute;n disponibles como comandos independientes, pero se han implementado en el shell de todos modos. Para evitar la duplicaci&amp;oacute;n de c&amp;oacute;digo y para evitar la confusi&amp;oacute;n de versiones sutilmente diferentes del mismo comando, &lt;code&gt;fish&lt;/code&gt; generalmente solo implementa incorporados para acciones que no pueden ser realizadas por un comando regular.</target>
        </trans-unit>
        <trans-unit id="508666f7961e41b7a23a46d49b1c68da21e0ab6e" translate="yes" xml:space="preserve">
          <source>Many terminals support 24-bit (i.e., true-color) color escape sequences. This includes modern xterm, Gnome Terminal, Konsole, and iTerm2. Fish attempts to detect such terminals through various means in &lt;code&gt;config.fish&lt;/code&gt; You can explicitly force that support via &lt;code&gt;set fish_term24bit 1&lt;/code&gt;.</source>
          <target state="translated">Muchos terminales admiten secuencias de escape de color de 24 bits (es decir, color verdadero). Esto incluye xterm moderno, Gnome Terminal, Konsole e iTerm2. Fish intenta detectar dichos terminales a trav&amp;eacute;s de varios medios en &lt;code&gt;config.fish&lt;/code&gt; . Puede forzar expl&amp;iacute;citamente ese soporte a trav&amp;eacute;s de &lt;code&gt;set fish_term24bit 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e069a87ea72df19d398bb86736ac50bde7ce37cb" translate="yes" xml:space="preserve">
          <source>Many things are similar - they both fundamentally expand commandlines to execute commands, have pipes, redirections, variables, globs, use command output in various ways. This document is there to quickly show you the differences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9b4890d50f0c6b762d298b81c92845215e8616" translate="yes" xml:space="preserve">
          <source>Match Glob Examples</source>
          <target state="translated">Ejemplos de Match Glob</target>
        </trans-unit>
        <trans-unit id="5d635a6434318430e0640768784677cf44ef96c2" translate="yes" xml:space="preserve">
          <source>Match Regex Examples</source>
          <target state="translated">Ejemplos de Match Regex</target>
        </trans-unit>
        <trans-unit id="282c4c424c8c8f802f09ed9069046a66c3e0e2df" translate="yes" xml:space="preserve">
          <source>Matching can be made case-insensitive with &lt;code&gt;--ignore-case&lt;/code&gt; or &lt;code&gt;-i&lt;/code&gt;.</source>
          <target state="translated">La coincidencia se puede hacer que no distinga entre may&amp;uacute;sculas y min&amp;uacute;sculas con &lt;code&gt;--ignore-case&lt;/code&gt; o &lt;code&gt;-i&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="dfe39636b572a032956990221bea7522894ca013" translate="yes" xml:space="preserve">
          <source>Mismatched parenthesis</source>
          <target state="translated">Paréntesis no coincidentes</target>
        </trans-unit>
        <trans-unit id="08965269be31a1f77226663d4b16152886fa2985" translate="yes" xml:space="preserve">
          <source>More examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d99cf687fc07cadeb9c71efe74a35ddac5120de" translate="yes" xml:space="preserve">
          <source>More on universal variables</source>
          <target state="translated">Más sobre las variables universales</target>
        </trans-unit>
        <trans-unit id="021eea9c0dd8f610dc9e4cc089ecb63b53b1ea84" translate="yes" xml:space="preserve">
          <source>Most operations &lt;code&gt;string&lt;/code&gt; supports can also be done by external tools. Some of these include &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;sed&lt;/code&gt; and &lt;code&gt;cut&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58541b1a51075d09123179aa5f9cebf36d81b9ff" translate="yes" xml:space="preserve">
          <source>Most programs allow you to suspend the program's execution and return control to &lt;code&gt;fish&lt;/code&gt; by pressing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6722727e636d961891415cd8a8813e266709c00" translate="yes" xml:space="preserve">
          <source>Most programs allow you to suspend the program's execution and return control to &lt;code&gt;fish&lt;/code&gt; by pressing &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;Z&lt;/b&gt; (also referred to as &lt;code&gt;^Z&lt;/code&gt;). Once back at the &lt;code&gt;fish&lt;/code&gt; commandline, you can start other programs and do anything you want. If you then want you can go back to the suspended command by using the &lt;a href=&quot;commands#fg&quot;&gt;&lt;code&gt;fg&lt;/code&gt;&lt;/a&gt; (foreground) command.</source>
          <target state="translated">La mayor&amp;iacute;a de los programas le permiten suspender la ejecuci&amp;oacute;n del programa y devolver el control a &lt;code&gt;fish&lt;/code&gt; presionando &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;Z&lt;/b&gt; (tambi&amp;eacute;n conocido como &lt;code&gt;^Z&lt;/code&gt; ). Una vez de vuelta en la l&amp;iacute;nea de comandos de &lt;code&gt;fish&lt;/code&gt; , puede iniciar otros programas y hacer lo que quiera. Si lo desea, puede volver al comando suspendido utilizando el comando &lt;a href=&quot;commands#fg&quot;&gt; &lt;code&gt;fg&lt;/code&gt; &lt;/a&gt; (primer plano).</target>
        </trans-unit>
        <trans-unit id="42e39dcb42dd9f2c013945b7875260844de45299" translate="yes" xml:space="preserve">
          <source>Most programs allow you to suspend the program's execution and return control to fish by pressing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20a7603daf5506e0104fd220a18c38ad250d45c" translate="yes" xml:space="preserve">
          <source>Most programs use three input/output (I/O) streams:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36a3163fcb5b2ce91e7e62b6620c694486a5106" translate="yes" xml:space="preserve">
          <source>Most programs use three input/output (IO) streams, each represented by a number called a file descriptor (FD). These are:</source>
          <target state="translated">La mayoría de los programas utilizan tres flujos de entrada/salida (IO),cada uno representado por un número llamado descriptor de archivo (FD).Estos son:</target>
        </trans-unit>
        <trans-unit id="c20818da60d954d40a5d602d6db10493b1f04e88" translate="yes" xml:space="preserve">
          <source>Most programs use three input/output &lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; streams, each represented by a number called a file descriptor (FD). These are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbfe945f56b2d1285935393b0ba01a8e6e9fb533" translate="yes" xml:space="preserve">
          <source>Most subcommands accept a &lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--quiet&lt;/code&gt; switch, which suppresses the usual output but exits with the documented status.</source>
          <target state="translated">La mayor&amp;iacute;a de los subcomandos aceptan un &lt;code&gt;--quiet&lt;/code&gt; &lt;code&gt;-q&lt;/code&gt; o --quiet , que suprime la salida habitual pero sale con el estado documentado.</target>
        </trans-unit>
        <trans-unit id="03976ab7d33a85c8fc9480afc29d1387785551a9" translate="yes" xml:space="preserve">
          <source>Most subcommands accept a &lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--quiet&lt;/code&gt; switch, which suppresses the usual output but exits with the documented status. In this case these commands will quit early, without reading all of the available input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4b95e5fe05cdb2e32c0be4dc38dcb8444a090a" translate="yes" xml:space="preserve">
          <source>Multiline editing</source>
          <target state="translated">Edición multilínea</target>
        </trans-unit>
        <trans-unit id="63062e2bb329a1db1e4dac2e1dda44f0bf889fa3" translate="yes" xml:space="preserve">
          <source>Multiple command switches and wrapped commands can also be given to define multiple completions in one call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da78228f66f1d5dda641de8fdf0ef902754c494" translate="yes" xml:space="preserve">
          <source>Multiple commands and paths can be given in one call to define the same completions for multiple commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afac76fbf7acd07151be5bf2f1d66efbab839d8c" translate="yes" xml:space="preserve">
          <source>Multiple elements can be given in a &lt;a href=&quot;#expand-brace&quot;&gt;brace expansion&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e562a20b062b14bf4f914e63d6a366748810ee2" translate="yes" xml:space="preserve">
          <source>Multiple lines are OK. Colors can be set via &lt;a href=&quot;cmds/set_color#cmd-set-color&quot;&gt;set_color&lt;/a&gt;, passing it named ANSI colors, or hex RGB values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284d6c5f151a78ee571b877c91d2822cf913407f" translate="yes" xml:space="preserve">
          <source>Multiple lines are OK. Colors can be set via &lt;code&gt;set_color&lt;/code&gt;, passing it named ANSI colors, or hex RGB values:</source>
          <target state="translated">Varias l&amp;iacute;neas est&amp;aacute;n bien. Los colores se pueden configurar a trav&amp;eacute;s de &lt;code&gt;set_color&lt;/code&gt; , pas&amp;aacute;ndolo con el nombre colores ANSI o valores RGB hexadecimales:</target>
        </trans-unit>
        <trans-unit id="b9313e4afc7e7087f2691f5390743aa11cb2045a" translate="yes" xml:space="preserve">
          <source>Multiple lines are not supported in &lt;code&gt;fish_right_prompt&lt;/code&gt;.</source>
          <target state="translated">No se admiten varias l&amp;iacute;neas en &lt;code&gt;fish_right_prompt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="533228885e107d3eaa86bae132326686a81acd20" translate="yes" xml:space="preserve">
          <source>Multiple ranges are also possible, separated with a space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ddaeb8bc8e45a0d0bc521306478830db49c61a1" translate="yes" xml:space="preserve">
          <source>My command (pkg-config) gives its output as a single long string?</source>
          <target state="translated">¿Mi comando (pkg-config)da su salida como una sola cuerda larga?</target>
        </trans-unit>
        <trans-unit id="ea4625148060290559b503a843a926f0635335a1" translate="yes" xml:space="preserve">
          <source>My command prints &quot;No matches for wildcard&quot; but works in bash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="f9c6fa94b0cdb85c962b8db6aabb5f0166f8183a" translate="yes" xml:space="preserve">
          <source>NUL Delimited Examples</source>
          <target state="translated">Ejemplos de NUL Delimitado</target>
        </trans-unit>
        <trans-unit id="462063d7fb620e3775d8d6aee72a22d131be5da2" translate="yes" xml:space="preserve">
          <source>Navigate directories using the &lt;a href=&quot;../index#directory-history&quot;&gt;directory history&lt;/a&gt; or the &lt;a href=&quot;../index#directory-stack&quot;&gt;directory stack&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877b0ac88e7cbb97cba9ff5c5c5c305c451eb822" translate="yes" xml:space="preserve">
          <source>Navigating directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bcd7736113c6b4efdb7226bbeffaacd2a34dab2" translate="yes" xml:space="preserve">
          <source>Next, do the following (assuming fish was installed to /usr/local):</source>
          <target state="translated">A continuación,haga lo siguiente (suponiendo que el pez se instaló en /usr/local):</target>
        </trans-unit>
        <trans-unit id="e1c89d68ecad2be53a8cf7ccdf90c12f59e35a10" translate="yes" xml:space="preserve">
          <source>Non existing commands.</source>
          <target state="translated">Comandos no existentes.</target>
        </trans-unit>
        <trans-unit id="ef71956d237455d6edd36051eb69b5df7d7daaf5" translate="yes" xml:space="preserve">
          <source>Non-monospace fonts - there is &lt;em&gt;no way&lt;/em&gt; for fish to figure out what width a specific character has as it has no influence on the terminal's font rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f3e65e8538fb0ceb8d456aa90c5d4ef9931a07" translate="yes" xml:space="preserve">
          <source>Normally when &lt;code&gt;fish&lt;/code&gt; starts a program, this program will be put in the foreground, meaning it will take control of the terminal and &lt;code&gt;fish&lt;/code&gt; will be stopped until the program finishes. Sometimes this is not desirable. For example, you may wish to start an application with a graphical user interface from the terminal, and then be able to continue using the shell. In such cases, there are several ways in which the user can change fish's behavior.</source>
          <target state="translated">Normalmente, cuando &lt;code&gt;fish&lt;/code&gt; inicia un programa, este programa se pondr&amp;aacute; en primer plano, lo que significa que tomar&amp;aacute; el control de la terminal y &lt;code&gt;fish&lt;/code&gt; se detendr&amp;aacute; hasta que finalice el programa. A veces esto no es deseable. Por ejemplo, es posible que desee iniciar una aplicaci&amp;oacute;n con una interfaz gr&amp;aacute;fica de usuario desde el terminal y luego poder continuar usando el shell. En tales casos, hay varias formas en las que el usuario puede cambiar el comportamiento de los peces.</target>
        </trans-unit>
        <trans-unit id="725343c5d9934b2dc59d44a6bd5ed0c4b217734a" translate="yes" xml:space="preserve">
          <source>Note that &quot;exported&quot; is not a &lt;a href=&quot;index#variables-scope&quot;&gt;scope&lt;/a&gt;, but an additional bit of state. A variable can be global and exported or local and exported or even universal and exported. Typically it makes sense to make an exported variable global.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c863f5345c5efef0b87a4ab35f2576e2a2fce7" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;cmds/case#cmd-case&quot;&gt;case&lt;/a&gt; does not fall through, and can accept multiple arguments or (quoted) wildcards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c5c1ef76ceaf50dd2d8b6a05425f76eaec2b83" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;case&lt;/code&gt; does not fall through, and can accept multiple arguments or (quoted) wildcards.</source>
          <target state="translated">Tenga en cuenta que el &lt;code&gt;case&lt;/code&gt; no falla y puede aceptar varios argumentos o comodines (entre comillas).</target>
        </trans-unit>
        <trans-unit id="94e6c8486c051199cf983de0b2724a88564f11b3" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; is sourced &lt;code&gt;after&lt;/code&gt; the snippets. This is so users can copy snippets and override some of their behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade5bb175b9c01fc56dcd04dfd8820b5d87cfdc6" translate="yes" xml:space="preserve">
          <source>Note that all colors can also have a corresponding &lt;code&gt;_done&lt;/code&gt; color. For example, the contents of &lt;code&gt;$__fish_git_prompt_color_upstream_done&lt;/code&gt; is printed right _after_ the upstream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daafcf66550c6e75c5e67349c16e61c50e7a4d2f" translate="yes" xml:space="preserve">
          <source>Note that array indices start at 1 in &lt;code&gt;fish&lt;/code&gt;, not 0, as is more common in other languages. This is because many common Unix tools like &lt;code&gt;seq&lt;/code&gt; are more suited to such use. An invalid index is silently ignored resulting in no value being substituted (not an empty string).</source>
          <target state="translated">Tenga en cuenta que los &amp;iacute;ndices de matriz comienzan en 1 en &lt;code&gt;fish&lt;/code&gt; , no en 0, como es m&amp;aacute;s com&amp;uacute;n en otros idiomas. Esto se debe a que muchas herramientas comunes de Unix como &lt;code&gt;seq&lt;/code&gt; son m&amp;aacute;s adecuadas para tal uso. Un &amp;iacute;ndice no v&amp;aacute;lido se ignora silenciosamente, lo que da como resultado que no se sustituya ning&amp;uacute;n valor (ni una cadena vac&amp;iacute;a).</target>
        </trans-unit>
        <trans-unit id="75e8dbe710958336c22801c9b7351ebb45c4f694" translate="yes" xml:space="preserve">
          <source>Note that because fish loads functions on-demand, saved functions will not function as &lt;a href=&quot;../index#event&quot;&gt;event handlers&lt;/a&gt; until they are run or sourced otherwise. To activate an event handler for every new shell, add the function to your &lt;a href=&quot;../index#initialization&quot;&gt;shell initialization file&lt;/a&gt; instead of using &lt;code&gt;funcsave&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0707e5e6cd48555094dd0ce06f95a929ab9ee48" translate="yes" xml:space="preserve">
          <source>Note that because fish loads functions on-demand, saved functions will not function as &lt;a href=&quot;index#event&quot;&gt;event handlers&lt;/a&gt; until they are run or sourced otherwise. To activate an event handler for every new shell, add the function to your &lt;a href=&quot;index#initialization&quot;&gt;shell initialization file&lt;/a&gt; instead of using &lt;code&gt;funcsave&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que debido a que las funciones de carga de peces a pedido, las funciones guardadas no funcionar&amp;aacute;n como &lt;a href=&quot;index#event&quot;&gt;controladores de eventos&lt;/a&gt; hasta que se ejecuten o se obtengan de otra manera. Para activar un controlador de eventos para cada nuevo shell, agregue la funci&amp;oacute;n a su &lt;a href=&quot;index#initialization&quot;&gt;archivo de inicializaci&amp;oacute;n del shell en&lt;/a&gt; lugar de usar &lt;code&gt;funcsave&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="589ecfcb67f532f7a8f91c889d769fa9b8dc1363" translate="yes" xml:space="preserve">
          <source>Note that both of these are bashisms, and most things can easily be expressed without. E.g. instead of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05600b5a2c4216ed0373e93b0ae5b8dde601d3a" translate="yes" xml:space="preserve">
          <source>Note that command substitutions in a case statement will be evaluated even if its body is not taken. All substitutions, including command substitutions, must be performed before the value can be compared against the parameter.</source>
          <target state="translated">Tenga en cuenta que las sustituciones de comandos en una declaración de caso se evaluarán incluso si no se toma su cuerpo.Todas las sustituciones,incluidas las sustituciones de comandos,deben realizarse antes de que el valor pueda ser comparado con el parámetro.</target>
        </trans-unit>
        <trans-unit id="27acedfb629019bcb72c1aaa58829703ce6d6432" translate="yes" xml:space="preserve">
          <source>Note that conversion may fail, e.g. &quot;102.234&quot; will not losslessly convert to an integer, causing printf to print an error.</source>
          <target state="translated">Tenga en cuenta que la conversión puede fallar,por ejemplo,&quot;102.234&quot; no se convertirá sin pérdidas en un número entero,lo que causará un error de impresión.</target>
        </trans-unit>
        <trans-unit id="8107914840367cc99db95db5e903f636fb93ac38" translate="yes" xml:space="preserve">
          <source>Note that events are only received from the current fish process as there is no way to send events from one fish process to another.</source>
          <target state="translated">Obsérvese que los eventos sólo se reciben del proceso de pescado actual,ya que no hay forma de enviar los eventos de un proceso de pescado a otro.</target>
        </trans-unit>
        <trans-unit id="b604d17300bf8871e1df935d8ccab61e77f2c2e6" translate="yes" xml:space="preserve">
          <source>Note that events are only sent to the current fish process as there is no way to send events from one fish process to another.</source>
          <target state="translated">Tenga en cuenta que los eventos sólo se envían al proceso de pescado actual,ya que no hay forma de enviar los eventos de un proceso de pescado a otro.</target>
        </trans-unit>
        <trans-unit id="12b209e520b1b3c2d9d6735095ba293070697631" translate="yes" xml:space="preserve">
          <source>Note that exported variables can be local or global or universal - &quot;exported&quot; is not a &lt;a href=&quot;index#variables-scope&quot;&gt;scope&lt;/a&gt;. Usually you'd make them global via &lt;code&gt;set -gx MyVariable SomeValue&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1816c418ab7796b893d641bb9d4e996647340b50" translate="yes" xml:space="preserve">
          <source>Note that fish does not fall through on case statements. Only the first matching case is executed.</source>
          <target state="translated">Obsérvese que el pescado no se ve afectado por las declaraciones de los casos.Sólo se ejecuta el primer caso coincidente.</target>
        </trans-unit>
        <trans-unit id="dea20fe7204b37a954eb8c5b71576a69b5e9c5a0" translate="yes" xml:space="preserve">
          <source>Note that fish has a default titlebar message, which will be used if the fish_title function is undefined. So simply unsetting the fish_title function will not work.</source>
          <target state="translated">Observe que el pez tiene un mensaje de barra de título por defecto,que se utilizará si la función fish_title no está definida.Por lo tanto,simplemente desestabilizar la función fish_title no funcionará.</target>
        </trans-unit>
        <trans-unit id="216dd486d99355c7f2e848a5066c6390232ae830" translate="yes" xml:space="preserve">
          <source>Note that for backwards compatibility each subcommand can also be specified as a long option. For example, rather than &lt;code&gt;history search&lt;/code&gt; you can type &lt;code&gt;history --search&lt;/code&gt;. Those long options are deprecated and will be removed in a future release.</source>
          <target state="translated">Tenga en cuenta que para compatibilidad con versiones anteriores, cada subcomando tambi&amp;eacute;n se puede especificar como una opci&amp;oacute;n larga. Por ejemplo, en lugar de &lt;code&gt;history search&lt;/code&gt; , puede escribir &lt;code&gt;history --search&lt;/code&gt; . Esas opciones largas est&amp;aacute;n obsoletas y se eliminar&amp;aacute;n en una versi&amp;oacute;n futura.</target>
        </trans-unit>
        <trans-unit id="3b22090df2d664d4741cb8fa8f02ce46c5b511d7" translate="yes" xml:space="preserve">
          <source>Note that for most commands, if any wildcard fails to expand, the command is not executed, &lt;a href=&quot;#variables-status&quot;&gt;$status&lt;/a&gt; is set to nonzero, and a warning is printed. This behavior is consistent with setting &lt;code&gt;shopt -s failglob&lt;/code&gt; in bash. There are exactly 4 exceptions, namely &lt;a href=&quot;cmds/set#cmd-set&quot;&gt;set&lt;/a&gt;, overriding variables in &lt;a href=&quot;#variables-override&quot;&gt;overrides&lt;/a&gt;, &lt;a href=&quot;cmds/count#cmd-count&quot;&gt;count&lt;/a&gt; and &lt;a href=&quot;cmds/for#cmd-for&quot;&gt;for&lt;/a&gt;. Their globs are permitted to expand to zero arguments, as with &lt;code&gt;shopt -s nullglob&lt;/code&gt; in bash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97f265eeb04a552b0a053d1fe6fd39164111e41" translate="yes" xml:space="preserve">
          <source>Note that for most commands, if any wildcard fails to expand, the command is not executed, &lt;a href=&quot;#variables-status&quot;&gt;&lt;code&gt;$status&lt;/code&gt;&lt;/a&gt; is set to nonzero, and a warning is printed. This behavior is consistent with setting &lt;code&gt;shopt -s failglob&lt;/code&gt; in bash. There are exactly 3 exceptions, namely &lt;a href=&quot;commands#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;commands#count&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;commands#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt;. Their globs are permitted to expand to zero arguments, as with &lt;code&gt;shopt -s nullglob&lt;/code&gt; in bash.</source>
          <target state="translated">Tenga en cuenta que para la mayor&amp;iacute;a de los comandos, si alg&amp;uacute;n comod&amp;iacute;n no se expande, el comando no se ejecuta, &lt;a href=&quot;#variables-status&quot;&gt; &lt;code&gt;$status&lt;/code&gt; &lt;/a&gt; se establece en un valor distinto de cero y se imprime una advertencia. Este comportamiento es consistente con la configuraci&amp;oacute;n de &lt;code&gt;shopt -s failglob&lt;/code&gt; en bash. Hay exactamente 3 excepciones, a saber , &lt;a href=&quot;commands#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;commands#count&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;commands#for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt; . Sus globos pueden expandirse a cero argumentos, como con &lt;code&gt;shopt -s nullglob&lt;/code&gt; en bash.</target>
        </trans-unit>
        <trans-unit id="85d04e8ba3b775ebb67002c660a72287b64eba9e" translate="yes" xml:space="preserve">
          <source>Note that functions cannot be started in the background. Functions that are stopped and then restarted in the background using the &lt;a href=&quot;cmds/bg#cmd-bg&quot;&gt;bg&lt;/a&gt; command will not execute correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179b535385e9bcd6de7a6f886e309b106b43e8dd" translate="yes" xml:space="preserve">
          <source>Note that functions cannot be started in the background. Functions that are stopped and then restarted in the background using the &lt;code&gt;bg&lt;/code&gt; command will not execute correctly.</source>
          <target state="translated">Tenga en cuenta que las funciones no se pueden iniciar en segundo plano. Las funciones que se detienen y luego se reinician en segundo plano con el comando &lt;code&gt;bg&lt;/code&gt; no se ejecutar&amp;aacute;n correctamente.</target>
        </trans-unit>
        <trans-unit id="d0299abe7df714002513b6c5ca5f854adee2c02d" translate="yes" xml:space="preserve">
          <source>Note that list indices start at 1 in &lt;code&gt;fish&lt;/code&gt;, not 0, as is more common in other languages. This is because many common Unix tools like &lt;code&gt;seq&lt;/code&gt; are more suited to such use. An invalid index is silently ignored resulting in no value being substituted (not an empty string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e1ba9da269293437fe6233c6fcc925fb1049b3" translate="yes" xml:space="preserve">
          <source>Note that list indices start at 1 in fish, not 0 like in other languages. This is because it requires less subtracting of 1 and many common Unix tools like &lt;code&gt;seq&lt;/code&gt; work better with it (&lt;code&gt;seq 5&lt;/code&gt; prints 1 to 5, not 0 to 5). An invalid index is silently ignored resulting in no value (not even an empty string, just no argument at all).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56578f519a03e2785432ffc83f432b088789cd11" translate="yes" xml:space="preserve">
          <source>Note that most builtin commands display their help in the terminal when given the &lt;code&gt;--help&lt;/code&gt; option.</source>
          <target state="translated">Tenga en cuenta que la mayor&amp;iacute;a de los comandos integrados muestran su ayuda en la terminal cuando se les da la opci&amp;oacute;n &lt;code&gt;--help&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="052c493b4f8ae8b6935593bcf58c5ec984ab99f3" translate="yes" xml:space="preserve">
          <source>Note that not all these limits are available in all operating systems.</source>
          <target state="translated">Obsérvese que no todos estos límites están disponibles en todos los sistemas operativos.</target>
        </trans-unit>
        <trans-unit id="fd0759c196f448d14f3c2205ba14675a88db1daf" translate="yes" xml:space="preserve">
          <source>Note that parentheses will usually require escaping with &lt;code&gt;\(&lt;/code&gt; to avoid being interpreted as a command substitution.</source>
          <target state="translated">Tenga en cuenta que los par&amp;eacute;ntesis generalmente requerir&amp;aacute;n escapar con &lt;code&gt;\(&lt;/code&gt; para evitar que se interpreten como una sustituci&amp;oacute;n de comandos.</target>
        </trans-unit>
        <trans-unit id="188395866987d29873c39e6fea9524d72368f195" translate="yes" xml:space="preserve">
          <source>Note that seeding the engine will NOT give the same result across different systems.</source>
          <target state="translated">Tenga en cuenta que la siembra del motor NO dará el mismo resultado en diferentes sistemas.</target>
        </trans-unit>
        <trans-unit id="8cff03b2fdbde6fa37f1f5e156f040ecab266358" translate="yes" xml:space="preserve">
          <source>Note that some key combinations are indistinguishable or unbindable. For instance control-i &lt;em&gt;is the same&lt;/em&gt; as the tab key. This is a terminal limitation that fish can't do anything about.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6845ef4744da1872b3bb15bf0a1af7f22c61de6" translate="yes" xml:space="preserve">
          <source>Note that special input functions cannot be combined with ordinary shell script commands. The commands must be entirely a sequence of special input functions (from &lt;code&gt;bind -f&lt;/code&gt;) or all shell script commands (i.e., valid fish script).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65cb077ea76993a41de3fb713b42e0fed91a42b" translate="yes" xml:space="preserve">
          <source>Note that symbolic masks currently do not work as intended.</source>
          <target state="translated">Tenga en cuenta que las máscaras simbólicas actualmente no funcionan como se pretende.</target>
        </trans-unit>
        <trans-unit id="c3e85ac16b77a7d86f7c2f0977d9686c607affe4" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;cd#cmd-cd&quot;&gt;cd&lt;/a&gt; command limits directory history to the 25 most recently visited directories. The history is stored in the &lt;code&gt;$dirprev&lt;/code&gt; and &lt;code&gt;$dirnext&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef2f79c5ca0fefc2538b283ecde5e201f174c69" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;cd&lt;/code&gt; command limits directory history to the 25 most recently visited directories. The history is stored in the &lt;code&gt;$dirprev&lt;/code&gt; and &lt;code&gt;$dirnext&lt;/code&gt; variables which this command manipulates.</source>
          <target state="translated">Tenga en cuenta que el comando &lt;code&gt;cd&lt;/code&gt; limita el historial de directorios a los 25 directorios visitados m&amp;aacute;s recientemente. El historial se almacena en las &lt;code&gt;$dirprev&lt;/code&gt; y &lt;code&gt;$dirnext&lt;/code&gt; que este comando manipula.</target>
        </trans-unit>
        <trans-unit id="10a8eb5ef4bfcbb0fbb38b2c1dbc89e74a6c7106" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;cd&lt;/code&gt; command limits directory history to the 25 most recently visited directories. The history is stored in the &lt;code&gt;$dirprev&lt;/code&gt; and &lt;code&gt;$dirnext&lt;/code&gt; variables which this command manipulates. If you make those universal variables your &lt;code&gt;cd&lt;/code&gt; history is shared among all fish instances.</source>
          <target state="translated">Tenga en cuenta que el comando &lt;code&gt;cd&lt;/code&gt; limita el historial de directorios a los 25 directorios visitados m&amp;aacute;s recientemente. El historial se almacena en las &lt;code&gt;$dirprev&lt;/code&gt; y &lt;code&gt;$dirnext&lt;/code&gt; que este comando manipula. Si crea esas variables universales, su historial de &lt;code&gt;cd&lt;/code&gt; se comparte entre todas las instancias de peces.</target>
        </trans-unit>
        <trans-unit id="9b4bda95d407194baa99d73ed10ab09fd4118640" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;cd&lt;/code&gt; command limits directory history to the 25 most recently visited directories. The history is stored in the &lt;code&gt;$dirprev&lt;/code&gt; and &lt;code&gt;$dirnext&lt;/code&gt; variables.</source>
          <target state="translated">Tenga en cuenta que el comando &lt;code&gt;cd&lt;/code&gt; limita el historial de directorios a los 25 directorios visitados m&amp;aacute;s recientemente. El historial se almacena en las &lt;code&gt;$dirprev&lt;/code&gt; y &lt;code&gt;$dirnext&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="468f475ce4540aa6d4ffc053e8efd0e42aba5839" translate="yes" xml:space="preserve">
          <source>Note that the shell will attempt to change directory without requiring &lt;code&gt;cd&lt;/code&gt; if the name of a directory is provided (starting with &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;~&lt;/code&gt;, or ending with &lt;code&gt;/&lt;/code&gt;).</source>
          <target state="translated">Tenga en cuenta que el shell intentar&amp;aacute; cambiar de directorio sin requerir &lt;code&gt;cd&lt;/code&gt; si se proporciona el nombre de un directorio (comenzando con &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;/&lt;/code&gt; O &lt;code&gt;~&lt;/code&gt; , o terminando con &lt;code&gt;/&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4a1ad39e7a025d924c676894892c33d43f516843" translate="yes" xml:space="preserve">
          <source>Note that there are three environment variables that are automatically split on colons to become lists when fish starts running: &lt;code&gt;PATH&lt;/code&gt;, &lt;code&gt;CDPATH&lt;/code&gt;, &lt;code&gt;MANPATH&lt;/code&gt;. Conversely, they are joined on colons when exported to subcommands. All other environment variables (e.g., &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;) which have similar semantics are treated as simple strings.</source>
          <target state="translated">Tenga en cuenta que hay tres variables de entorno que se dividen autom&amp;aacute;ticamente en dos puntos para convertirse en listas cuando &lt;code&gt;CDPATH&lt;/code&gt; comienza a ejecutarse: &lt;code&gt;PATH&lt;/code&gt; , CDPATH , &lt;code&gt;MANPATH&lt;/code&gt; . Por el contrario, se unen por dos puntos cuando se exportan a subcomandos. Todas las dem&amp;aacute;s variables de entorno (por ejemplo, &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; ) que tienen una sem&amp;aacute;ntica similar se tratan como cadenas simples.</target>
        </trans-unit>
        <trans-unit id="bf45589c3e3c3f4d264bc9f93c56158f4afde11c" translate="yes" xml:space="preserve">
          <source>Note that this function will not be used if a command by this name exists (which is the case on macOS or Haiku).</source>
          <target state="translated">Tenga en cuenta que esta función no se utilizará si existe un comando con este nombre (que es el caso en macOS o Haiku).</target>
        </trans-unit>
        <trans-unit id="5bf381b343429f3c3b6b07cc6b6f0a80c7987163" translate="yes" xml:space="preserve">
          <source>Note that without the quotes or braces, fish will try to expand a variable called &lt;code&gt;$WORDs&lt;/code&gt;, which may not exist.</source>
          <target state="translated">Tenga en cuenta que sin las comillas o llaves, fish intentar&amp;aacute; expandir una variable llamada &lt;code&gt;$WORDs&lt;/code&gt; , que puede no existir.</target>
        </trans-unit>
        <trans-unit id="655206648d0dc7faa21d15bc23b20c851a2e5079" translate="yes" xml:space="preserve">
          <source>Note that ~/.config/fish/config.fish is sourced &lt;em&gt;after&lt;/em&gt; the snippets. This is so users can copy snippets and override some of their behavior.</source>
          <target state="translated">Tenga en cuenta que ~ / .config / fish / config.fish se obtiene &lt;em&gt;despu&amp;eacute;s de&lt;/em&gt; los fragmentos. Esto es para que los usuarios puedan copiar fragmentos y anular algunos de sus comportamientos.</target>
        </trans-unit>
        <trans-unit id="ce33996fd64092e1167cf6f8d31deb6827e1e03e" translate="yes" xml:space="preserve">
          <source>Note that ~/.config/fish/config.fish is sourced _after_ the snippets. This is so users can copy snippets and override some of their behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d54cdd421c0c07715137d8eb13776063e53178" translate="yes" xml:space="preserve">
          <source>Note that, like &lt;code&gt;wc -l&lt;/code&gt;, reading from stdin counts newlines, so &lt;code&gt;echo -n foo | count&lt;/code&gt; will print 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ce3cf51c29175bd1e3054b41cb66e679925023" translate="yes" xml:space="preserve">
          <source>Note that, like GNU tools and most of fish's builtins, &lt;code&gt;contains&lt;/code&gt; interprets all arguments starting with a &lt;code&gt;-&lt;/code&gt; as options to contains, until it reaches an argument that is &lt;code&gt;--&lt;/code&gt; (two dashes). See the examples below.</source>
          <target state="translated">Tenga en cuenta que, al igual que las herramientas GNU y la mayor&amp;iacute;a de las incorporaciones de fish, &lt;code&gt;contains&lt;/code&gt; interpreta todos los argumentos que comienzan con &lt;code&gt;-&lt;/code&gt; como opciones para contiene, hasta que llega a un argumento que es &lt;code&gt;--&lt;/code&gt; (dos guiones). Vea los ejemplos a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6acc4ccc246684cfa1057fb20ffd8a8f35f63d65" translate="yes" xml:space="preserve">
          <source>Note that, unlike other shells, fish will first set the variable and then perform other expansions on the line, so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd1c04aa664d29ef9d4114fed80a20478f9f7c6" translate="yes" xml:space="preserve">
          <source>Note: At the moment the debug prompt is identical to your normal fish prompt. This can make it hard to recognize that you've entered a debug session. Issue 1310 is open to improve this.</source>
          <target state="translated">Nota:Por el momento,el aviso de depuración es idéntico al aviso normal de peces.Esto puede hacer difícil reconocer que has entrado en una sesión de depuración.El número 1310 está abierto para mejorar esto.</target>
        </trans-unit>
        <trans-unit id="7341a7c6e815f3797445d76ed55a3c56872a0b2b" translate="yes" xml:space="preserve">
          <source>Note: Exporting is not a &lt;a href=&quot;#variables-scope&quot;&gt;scope&lt;/a&gt;, but an additional state. It typically makes sense to make exported variables global as well, but local-exported variables can be useful if you need something more specific than &lt;a href=&quot;#variables-override&quot;&gt;Overrides&lt;/a&gt;. They are &lt;em&gt;copied&lt;/em&gt; to functions so the function can't alter them outside, and still available to commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8200dd2c18320e71ce4b78ddf09a868f7796fa5a" translate="yes" xml:space="preserve">
          <source>Note: Optional arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acd9175970aa8fc3b9936ce32e6e5f5129257b5" translate="yes" xml:space="preserve">
          <source>Note: This event will be emitted even if the command is invalid. The commandline parameter includes the entire commandline verbatim, and may potentially include newlines.</source>
          <target state="translated">Nota:Este evento se emitirá incluso si el comando es inválido.El parámetro de la línea de comandos incluye toda la línea de comandos al pie de la letra,y potencialmente puede incluir nuevas líneas.</target>
        </trans-unit>
        <trans-unit id="4a71ed28fa070fd5d0f2ba5d9d8b94e51646208b" translate="yes" xml:space="preserve">
          <source>Note: fish 2.2.0 and earlier used a default of 10 milliseconds, and provided no way to configure it. That effectively made it impossible to use escape as a meta key.</source>
          <target state="translated">Nota:Fish 2.2.0 y anteriores usaban un valor por defecto de 10 milisegundos,y no proporcionaban ninguna forma de configurarlo.Eso efectivamente hizo imposible usar el escape como una meta-llave.</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="03c757f6b7891744a49627d17ec9ed791ed69d26" translate="yes" xml:space="preserve">
          <source>Nothing if the flag is a boolean that takes no argument or is an implicit int flag, else</source>
          <target state="translated">Nada si la bandera es una booleana que no tiene argumento o es una bandera implícita de int,sino</target>
        </trans-unit>
        <trans-unit id="3a6065f76d3b020b6ad540bdea70b2f7e755a94a" translate="yes" xml:space="preserve">
          <source>Nothing if the flag is a boolean that takes no argument or is an integer flag, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47908ae8dc7d29c7e8ca1f8808d3df2ae36cf39" translate="yes" xml:space="preserve">
          <source>Now hub inherits all of the completions from git. Note this can also be specified in a function declaration (&lt;code&gt;function thing -w otherthing&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9e91cddb4e1bbe3d96c5cfb7bcf12796b0c7e0" translate="yes" xml:space="preserve">
          <source>Now hub inherits all of the completions from git. Note this can also be specified in a function declaration.</source>
          <target state="translated">Ahora Hub hereda todas las terminaciones de Git.Ten en cuenta que esto también puede ser especificado en una declaración de función.</target>
        </trans-unit>
        <trans-unit id="377c6369b04b17877206baabd99b8340d2c1712d" translate="yes" xml:space="preserve">
          <source>Now in another shell:</source>
          <target state="translated">Ahora en otra concha:</target>
        </trans-unit>
        <trans-unit id="9241604f804422daccce563b9e8acb2fb7b8f7c8" translate="yes" xml:space="preserve">
          <source>Now, bash also tries to match files in this case, but when it doesn't find a match, it passes along the literal wildcard string instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5aead3c087eb1218d9c5de157a34a40ad6e6161" translate="yes" xml:space="preserve">
          <source>Numerical comparisons will simply fail if one of the operands is not a number:</source>
          <target state="translated">Las comparaciones numéricas simplemente fallarán si uno de los operandos no es un número:</target>
        </trans-unit>
        <trans-unit id="08a914cde05039694ef0194d9ee79ff9a79dde33" translate="yes" xml:space="preserve">
          <source>O</source>
          <target state="translated">O</target>
        </trans-unit>
        <trans-unit id="aeeb9e7d5766fc544e9c4260b0a26961443229c2" translate="yes" xml:space="preserve">
          <source>Oh My Fish</source>
          <target state="translated">Oh,mi pez.</target>
        </trans-unit>
        <trans-unit id="c168b84a253f1a9380f35914e43b4459d37046ec" translate="yes" xml:space="preserve">
          <source>Old style long options, like '&lt;code&gt;-Wall&lt;/code&gt;'. Old style long options can be more than one character long, are preceded by a single hyphen and may not be grouped together. Option arguments are specified in the following parameter ('&lt;code&gt;-ao null&lt;/code&gt;').</source>
          <target state="translated">Opciones largas de estilo antiguo, como ' &lt;code&gt;-Wall&lt;/code&gt; '. Las opciones largas de estilo antiguo pueden tener m&amp;aacute;s de un car&amp;aacute;cter, est&amp;aacute;n precedidas por un solo gui&amp;oacute;n y no pueden agruparse. Los argumentos de las opciones se especifican en el siguiente par&amp;aacute;metro (' &lt;code&gt;-ao null&lt;/code&gt; ').</target>
        </trans-unit>
        <trans-unit id="702d8b387b41361a3850f5f8a5ccb56e871723f8" translate="yes" xml:space="preserve">
          <source>Old style long options, like &lt;code&gt;-Wall&lt;/code&gt; or &lt;code&gt;-name&lt;/code&gt;. Old style long options can be more than one character long, are preceded by a single hyphen and may not be grouped together. Option arguments are specified in the following parameter (&lt;code&gt;-ao null&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e42bb3078b6143675803071b50a1f886f1fddf" translate="yes" xml:space="preserve">
          <source>On startup, Fish evaluates a number of configuration files, which can be used to control the behavior of the shell. The location of these configuration variables is controlled by a number of environment variables, and their default or usual location is given below.</source>
          <target state="translated">Al inicio,Fish evalúa una serie de archivos de configuración,que pueden ser usados para controlar el comportamiento del shell.La ubicación de estas variables de configuración se controla mediante una serie de variables de entorno,y su ubicación predeterminada o habitual se indica a continuación.</target>
        </trans-unit>
        <trans-unit id="24b148830736c9caeaaf006e4d059c7b395c5a53" translate="yes" xml:space="preserve">
          <source>On startup, Fish evaluates a number of configuration files, which can be used to control the behavior of the shell. The location of these is controlled by a number of environment variables, and their default or usual location is given below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53732b6ec19e859a0b3473ce5240c51bbdc7db63" translate="yes" xml:space="preserve">
          <source>On systems that supports this feature, jobs will print the CPU usage of each job since the last command was executed. The CPU usage is expressed as a percentage of full CPU activity. Note that on multiprocessor systems, the total activity may be more than 100%.</source>
          <target state="translated">En los sistemas que soportan esta característica,los trabajos imprimirán el uso de la CPU de cada trabajo desde que se ejecutó el último comando.El uso de la CPU se expresa como un porcentaje de la actividad total de la CPU.Tenga en cuenta que en los sistemas multiprocesador,la actividad total puede ser superior al 100%.</target>
        </trans-unit>
        <trans-unit id="4b94b1b00f4f9d7408bbdbe697afeca3ea6a2231" translate="yes" xml:space="preserve">
          <source>Once fish has been installed, open a terminal. If fish is not the default shell:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18125968ef24a12c2f2c9db564d4fb936f8a352f" translate="yes" xml:space="preserve">
          <source>Once installed, just type in &lt;code&gt;fish&lt;/code&gt; into your current shell to try it out!</source>
          <target state="translated">Una vez instalado, simplemente escriba &lt;code&gt;fish&lt;/code&gt; en su caparaz&amp;oacute;n actual para probarlo.</target>
        </trans-unit>
        <trans-unit id="f9801d214429ef9429f41d9ccbf53d1f50cc2cf7" translate="yes" xml:space="preserve">
          <source>One of the most common uses for functions is to slightly alter the behavior of an already existing command. For example, one might want to redefine the &lt;code&gt;ls&lt;/code&gt; command to display colors. The switch for turning on colors on GNU systems is '&lt;code&gt;--color=auto&lt;/code&gt;'. An alias, or wrapper, around &lt;code&gt;ls&lt;/code&gt; might look like this:</source>
          <target state="translated">Uno de los usos m&amp;aacute;s comunes de las funciones es alterar ligeramente el comportamiento de un comando ya existente. Por ejemplo, uno podr&amp;iacute;a querer redefinir el comando &lt;code&gt;ls&lt;/code&gt; para mostrar colores. El interruptor para activar colores en sistemas GNU es ' &lt;code&gt;--color=auto&lt;/code&gt; '. Un alias, o envoltorio, alrededor de &lt;code&gt;ls&lt;/code&gt; podr&amp;iacute;a verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="18a097b3775c30d06cc2f17460da80ed3f17620c" translate="yes" xml:space="preserve">
          <source>One of the most common uses for functions is to slightly alter the behavior of an already existing command. For example, one might want to redefine the &lt;code&gt;ls&lt;/code&gt; command to display colors. The switch for turning on colors on GNU systems is &lt;code&gt;--color=auto&lt;/code&gt;. An alias, or wrapper, around &lt;code&gt;ls&lt;/code&gt; might look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b470ff64825bad720814107ffdfa7bc5213df21" translate="yes" xml:space="preserve">
          <source>One of the most important expansions in fish is the &quot;variable expansion&quot;. This is the replacing of a dollar sign (&lt;code&gt;$&lt;/code&gt;) followed by a variable name with the _value_ of that variable. For more on shell variables, read the &lt;a href=&quot;#variables&quot;&gt;Shell variables&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ed72e8734163b3555d72a22a65213a63ac427a" translate="yes" xml:space="preserve">
          <source>Only one function's description can be changed in a single invocation of &lt;code&gt;functions -d&lt;/code&gt;.</source>
          <target state="translated">Solo se puede cambiar la descripci&amp;oacute;n de una funci&amp;oacute;n en una sola invocaci&amp;oacute;n de &lt;code&gt;functions -d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="744f6b1ea6029a4d03e486aa51d71e6cdfe3a24a" translate="yes" xml:space="preserve">
          <source>Only part of the output can be used, see &lt;a href=&quot;#expand-index-range&quot;&gt;index range expansion&lt;/a&gt; for details.</source>
          <target state="translated">Solo se puede usar una parte de la salida; consulte la &lt;a href=&quot;#expand-index-range&quot;&gt;expansi&amp;oacute;n del rango del &amp;iacute;ndice&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="e52f4d4c344dadad003e702bffb9e5e28cdc4a21" translate="yes" xml:space="preserve">
          <source>Operators for files and directories</source>
          <target state="translated">Operadores de archivos y directorios</target>
        </trans-unit>
        <trans-unit id="f27bb0ff136bb8c7c7f1daaac32275d53bfd219d" translate="yes" xml:space="preserve">
          <source>Operators for text strings</source>
          <target state="translated">Operadores de cadenas de texto</target>
        </trans-unit>
        <trans-unit id="a47a505eb7af733ce0bd8e9777ac0dd7490e55d7" translate="yes" xml:space="preserve">
          <source>Operators to combine expressions</source>
          <target state="translated">Operadores para combinar expresiones</target>
        </trans-unit>
        <trans-unit id="7fa47fe3927b334a484c669114b525abc6a94112" translate="yes" xml:space="preserve">
          <source>Operators to compare and examine numbers</source>
          <target state="translated">Operadores para comparar y examinar los números</target>
        </trans-unit>
        <trans-unit id="d4829f651a76eb5aa9c3d27e3534a7c418cd1fc9" translate="yes" xml:space="preserve">
          <source>Option Specifications</source>
          <target state="translated">Especificaciones de las opciones</target>
        </trans-unit>
        <trans-unit id="7a482cf8fb70076ae04055b4c030c65bed8421d9" translate="yes" xml:space="preserve">
          <source>Optionally a &lt;code&gt;!&lt;/code&gt; followed by fish script to validate the value. Typically this will be a function to run. If the exit status is zero the value for the flag is valid. If non-zero the value is invalid. Any error messages should be written to stdout (not stderr). See the section on &lt;a href=&quot;#flag-value-validation&quot;&gt;Flag Value Validation&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f38993c6d0d5cf791252a01f84f61ce28090cdc" translate="yes" xml:space="preserve">
          <source>Optionally a &lt;code&gt;!&lt;/code&gt; followed by fish script to validate the value. Typically this will be a function to run. If the return status is zero the value for the flag is valid. If non-zero the value is invalid. Any error messages should be written to stdout (not stderr). See the section on &lt;a href=&quot;#arparse-validation&quot;&gt;Flag Value Validation&lt;/a&gt; for more information.</source>
          <target state="translated">Opcionalmente a &lt;code&gt;!&lt;/code&gt; seguido de un script de pescado para validar el valor. Normalmente, esta ser&amp;aacute; una funci&amp;oacute;n para ejecutar. Si el estado de devoluci&amp;oacute;n es cero, el valor de la bandera es v&amp;aacute;lido. Si no es cero, el valor no es v&amp;aacute;lido. Cualquier mensaje de error debe escribirse en stdout (no stderr). Consulte la secci&amp;oacute;n sobre &lt;a href=&quot;#arparse-validation&quot;&gt;Validaci&amp;oacute;n del valor de la bandera&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="3b7277ba5f0f20e70f1f91d410bbc35500c732a7" translate="yes" xml:space="preserve">
          <source>Or if you just want to do one command in case the first succeeded or failed, use &lt;code&gt;and&lt;/code&gt; or &lt;code&gt;or&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713a94b9bc2fb6c6ad642cfcecc352a0220c8694" translate="yes" xml:space="preserve">
          <source>Or if you prefer not to use a universal variable, use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9abc7dccb472746b2948ac650340ce146780c6" translate="yes" xml:space="preserve">
          <source>Or odd numbers from 1 to 3:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c337c713192bc94b6ec5b1b84f6028cb1ca99ebf" translate="yes" xml:space="preserve">
          <source>Or the handler for OpenSUSE's command-not-found:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23708273232d69f28e02edee8358b668eb03e266" translate="yes" xml:space="preserve">
          <source>Or the simple default handler:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de71742464e8e90ccc846c603c38a7e6c76aecb" translate="yes" xml:space="preserve">
          <source>Or with a &lt;a href=&quot;#expand-wildcard&quot;&gt;glob&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bf0c03fb4bccb95c35b8c3ab1ac72a8321cb91" translate="yes" xml:space="preserve">
          <source>Or you can modify $fish_user_paths yourself, but you should be careful &lt;em&gt;not&lt;/em&gt; to append to it unconditionally in config.fish, or it will grow longer and longer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b86ec4ef5585a86b2d2d95ef6ccb97a2b91faa" translate="yes" xml:space="preserve">
          <source>Or, to only get even numbers from 2 to 20:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14be7a9cc678ff8d2acac3f8d22e39b9c8a4df32" translate="yes" xml:space="preserve">
          <source>Other features</source>
          <target state="translated">Otras características</target>
        </trans-unit>
        <trans-unit id="853554e3756e54eab25e2cb9c5b84f13d2534ef7" translate="yes" xml:space="preserve">
          <source>Other help pages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77469ecfa59d843fae303a2fd75c68c6d8c80b23" translate="yes" xml:space="preserve">
          <source>Other keys don't have a direct encoding, and are sent as escape sequences. For example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8064e7b7ad17f0248f35efb48f0f1d68ee39d15e" translate="yes" xml:space="preserve">
          <source>Other shells such as bash and zsh use a variable named &lt;code&gt;HISTFILE&lt;/code&gt; for a similar purpose. Fish uses a different name to avoid conflicts and signal that the behavior is different (session name instead of a file path). Also, if you set the var to anything other than &lt;code&gt;fish&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt; it will inhibit importing the bash history. That's because the most common use case for this feature is to avoid leaking private or sensitive history when giving a presentation.</source>
          <target state="translated">Otros shells como bash y zsh usan una variable llamada &lt;code&gt;HISTFILE&lt;/code&gt; para un prop&amp;oacute;sito similar. Fish usa un nombre diferente para evitar conflictos y se&amp;ntilde;alar que el comportamiento es diferente (nombre de sesi&amp;oacute;n en lugar de una ruta de archivo). Adem&amp;aacute;s, si configura la var en cualquier otro valor que no sea &lt;code&gt;fish&lt;/code&gt; o por &lt;code&gt;default&lt;/code&gt; , inhibir&amp;aacute; la importaci&amp;oacute;n del historial de bash. Esto se debe a que el caso de uso m&amp;aacute;s com&amp;uacute;n de esta funci&amp;oacute;n es evitar la filtraci&amp;oacute;n de un historial privado o confidencial al realizar una presentaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="994d2884abd0455d7cd071bce999e810a742d0a0" translate="yes" xml:space="preserve">
          <source>Other shells, such as zsh, have a much richer glob syntax, like &lt;code&gt;**(.)&lt;/code&gt; to only match regular files. Fish does not. Instead of reinventing the whell, use programs like &lt;code&gt;find&lt;/code&gt; to look for files. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca76df4fa26ca40f2ebdbbcc9b7ac947b4b17597" translate="yes" xml:space="preserve">
          <source>Other shells, such as zsh, provide a rich glob syntax for restricting the files matched by globs. For example, &lt;code&gt;**(.)&lt;/code&gt;, to only match regular files. Fish prefers to defer such features to programs, such as &lt;code&gt;find&lt;/code&gt;, rather than reinventing the wheel. Thus, if you want to limit the wildcard expansion to just regular files the fish approach is to define and use a function. For example,</source>
          <target state="translated">Otros shells, como zsh, proporcionan una rica sintaxis glob para restringir los archivos que coinciden con globs. Por ejemplo, &lt;code&gt;**(.)&lt;/code&gt; , Para hacer coincidir solo archivos normales. Fish prefiere ceder esas funciones a los programas, como &lt;code&gt;find&lt;/code&gt; , en lugar de reinventar la rueda. Por lo tanto, si desea limitar la expansi&amp;oacute;n de comodines a archivos normales, el enfoque de fish es definir y usar una funci&amp;oacute;n. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="c782bae247172d8d54b6355e71e72f640fe2e686" translate="yes" xml:space="preserve">
          <source>Other things have other restrictions. For instance what is allowed for file names depends on your system, but at the very least they cannot contain a &quot;/&quot; (because that is the path separator) or NULL byte (because that is how UNIX ends strings).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a838bcf64937317892425e5ab22ef3642359f4" translate="yes" xml:space="preserve">
          <source>Other variables, like &lt;code&gt;$PATH&lt;/code&gt;, really do have multiple values. During variable expansion, the variable expands to become multiple arguments:</source>
          <target state="translated">Otras variables, como &lt;code&gt;$PATH&lt;/code&gt; , realmente tienen m&amp;uacute;ltiples valores. Durante la expansi&amp;oacute;n de la variable, la variable se expande para convertirse en m&amp;uacute;ltiples argumentos:</target>
        </trans-unit>
        <trans-unit id="b5d3d0ee6275d093a0cfd5679e24b1abd3556dc6" translate="yes" xml:space="preserve">
          <source>Otherwise, by default, the variable will not be exported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcbabbfd6290e1df478b0d2b37c0beb20ff4767" translate="yes" xml:space="preserve">
          <source>Outputting multiple lines is not supported in &lt;code&gt;fish_mode_prompt&lt;/code&gt;.</source>
          <target state="translated">La salida de varias l&amp;iacute;neas no se admite en &lt;code&gt;fish_mode_prompt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b8012177cdea50be6a01e8c45312b388ccc9c7a" translate="yes" xml:space="preserve">
          <source>Outside of double quotes, variables will expand to as many arguments as they have elements. That means an empty list will expand to nothing, a variable with one element will expand to that element, and a variable with multiple elements will expand to each of those elements separately.</source>
          <target state="translated">Fuera de las comillas dobles,las variables se expandirán a tantos argumentos como elementos tengan.Esto significa que una lista vacía se expandirá a nada,una variable con un elemento se expandirá a ese elemento,y una variable con múltiples elementos se expandirá a cada uno de esos elementos por separado.</target>
        </trans-unit>
        <trans-unit id="701d31f2af951617e24913040bb289cccf377776" translate="yes" xml:space="preserve">
          <source>Overriding variables for a single command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511993d3c99719e38a6779073019dacd7178ddb9" translate="yes" xml:space="preserve">
          <source>P</source>
          <target state="translated">P</target>
        </trans-unit>
        <trans-unit id="b7cda6a843d651b6992452486c962d590a3cb164" translate="yes" xml:space="preserve">
          <source>PATH variables</source>
          <target state="translated">Variables del PATH</target>
        </trans-unit>
        <trans-unit id="404b5a722c514f9f99c58c8b9832dbdc15c84e14" translate="yes" xml:space="preserve">
          <source>PATH variables act as normal arrays, except they are are implicitly joined and split on colons.</source>
          <target state="translated">Las variables PATH actúan como arreglos normales,excepto que están implícitamente unidas y divididas en dos puntos.</target>
        </trans-unit>
        <trans-unit id="b66696987075bafb7f873ca41d609e5877999e68" translate="yes" xml:space="preserve">
          <source>PATH variables act as normal lists, except they are are implicitly joined and split on colons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0aae95ec2c89c6e7884d8a51c6718b40028b727" translate="yes" xml:space="preserve">
          <source>PATH variables act as normal lists, except they are implicitly joined and split on colons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebe8b4d277848e1ec370986e82d2178731c6293" translate="yes" xml:space="preserve">
          <source>Page Down</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c77b5722c41b6f199f92efb5977aba4430b61c9" translate="yes" xml:space="preserve">
          <source>Page Up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7524411cf6310c7a2701b4eaf14a129c0d2513" translate="yes" xml:space="preserve">
          <source>Pager color variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f46839db81e25cd2e4301ef04e9902136c3028" translate="yes" xml:space="preserve">
          <source>Parameter expansion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b76530ae6668a37f97a682d440c45d138de6409" translate="yes" xml:space="preserve">
          <source>Parameter expansion (Globbing)</source>
          <target state="translated">Expansión de parámetros (Globbing)</target>
        </trans-unit>
        <trans-unit id="d1978ad07fd49427cbbdee50809caf0b5f1afd7e" translate="yes" xml:space="preserve">
          <source>Parameter expansion is limited to 524288 items. There is a limit to how many arguments the operating system allows for any command, and 524288 is far above it. This is a measure to stop the shell from hanging doing useless computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fdb3f75d27167ce5697671dbec55e14ed3744ea" translate="yes" xml:space="preserve">
          <source>Parentheses and the &lt;code&gt;-o&lt;/code&gt; and &lt;code&gt;-a&lt;/code&gt; operators can be combined to produce more complicated expressions. In this example, success is printed if there is a &lt;code&gt;/foo&lt;/code&gt; or &lt;code&gt;/bar&lt;/code&gt; file as well as a &lt;code&gt;/baz&lt;/code&gt; or &lt;code&gt;/bat&lt;/code&gt; file.</source>
          <target state="translated">Los par&amp;eacute;ntesis y los operadores &lt;code&gt;-o&lt;/code&gt; y &lt;code&gt;-a&lt;/code&gt; se pueden combinar para producir expresiones m&amp;aacute;s complicadas. En este ejemplo, el &amp;eacute;xito se imprime si hay un archivo &lt;code&gt;/foo&lt;/code&gt; o &lt;code&gt;/bar&lt;/code&gt; adem&amp;aacute;s de un archivo &lt;code&gt;/baz&lt;/code&gt; o &lt;code&gt;/bat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3a505e6684eca4bb15ce321fd252137c0869b89" translate="yes" xml:space="preserve">
          <source>Path variables are a special kind of variable used to support colon-delimited path lists including PATH, CDPATH, MANPATH, PYTHONPATH, etc. All variables that end in &quot;PATH&quot; (case-sensitive) become PATH variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0efa09d094aec052590bdd703ecb253fb17eb1e" translate="yes" xml:space="preserve">
          <source>Path variables are a special kind of variable used to support colon-delimited path lists including PATH, CDPATH, MANPATH, PYTHONPATH, etc. All variables that end in &lt;code&gt;PATH&lt;/code&gt; (case-sensitive) become PATH variables.</source>
          <target state="translated">Las variables de ruta son un tipo especial de variable que se utiliza para admitir listas de rutas delimitadas por dos puntos, incluidas PATH, CDPATH, MANPATH, PYTHONPATH, etc. Todas las variables que terminan en &lt;code&gt;PATH&lt;/code&gt; ( distinguen entre may&amp;uacute;sculas y min&amp;uacute;sculas) se convierten en variables PATH.</target>
        </trans-unit>
        <trans-unit id="2d153a802a389d1d077cca2e46097df8c50f33d8" translate="yes" xml:space="preserve">
          <source>Perform a history search when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db92c54d01dcbf9ce9147cf302fcbe0e8290138e" translate="yes" xml:space="preserve">
          <source>Performs a history search when the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acdeb27738adfec3e214f14b0bc5ac319dee18bf" translate="yes" xml:space="preserve">
          <source>Performs a history search when the &lt;b&gt;Page Up&lt;/b&gt; key is pressed.</source>
          <target state="translated">Realiza una b&amp;uacute;squeda en el historial cuando se presiona la tecla &lt;b&gt;Page Up&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="b07e355a3677aa688ad89bddfe79ee5b312d7645" translate="yes" xml:space="preserve">
          <source>Pipes and Redirections</source>
          <target state="translated">Tuberías y redireccionamientos</target>
        </trans-unit>
        <trans-unit id="109d28af6c9d51926601f8d9e60546da74487021" translate="yes" xml:space="preserve">
          <source>Pipes usually connect file descriptor 1 (standard output) of the first process to file descriptor 0 (standard input) of the second process. It is possible to use a different output file descriptor by prepending the desired FD number and then output redirect symbol to the pipe. For example:</source>
          <target state="translated">Las tuberías suelen conectar el descriptor de archivo 1 (salida estándar)del primer proceso con el descriptor de archivo 0 (entrada estándar)del segundo proceso.Es posible utilizar un descriptor de archivo de salida diferente si se prepara el número FD deseado y luego el símbolo de redireccionamiento de salida a la tubería.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="3247b493bc40b8745523a27d8c525cd0dc056fd5" translate="yes" xml:space="preserve">
          <source>Piping</source>
          <target state="translated">Piping</target>
        </trans-unit>
        <trans-unit id="36298b88737bbda60ad0697ed9af7787bf89ea37" translate="yes" xml:space="preserve">
          <source>Please note that event handlers only become active when a function is loaded, which means you might need to otherwise &lt;a href=&quot;cmds/source#cmd-source&quot;&gt;source&lt;/a&gt; or execute a function instead of relying on &lt;a href=&quot;#syntax-function-autoloading&quot;&gt;autoloading&lt;/a&gt;. One approach is to put it into your &lt;a href=&quot;#initialization&quot;&gt;initialization file&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484a02744408ea850ed69df5530d98aa375e29f4" translate="yes" xml:space="preserve">
          <source>Please note that event handlers only become active when a function is loaded, which means you might need to otherwise &lt;a href=&quot;commands#source&quot;&gt;source&lt;/a&gt; or execute a function instead of relying on &lt;a href=&quot;#syntax-function-autoloading&quot;&gt;autoloading&lt;/a&gt;. One approach is to put it into your &lt;a href=&quot;index#initialization&quot;&gt;initialization file&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que los controladores de eventos solo se activan cuando se carga una funci&amp;oacute;n, lo que significa que es posible que deba &lt;a href=&quot;commands#source&quot;&gt;obtener&lt;/a&gt; o ejecutar una funci&amp;oacute;n en lugar de depender de la &lt;a href=&quot;#syntax-function-autoloading&quot;&gt;carga autom&amp;aacute;tica&lt;/a&gt; . Un enfoque es ponerlo en su &lt;a href=&quot;index#initialization&quot;&gt;archivo de inicializaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a11138604a9e12fab2be4d88197eda43c40a71dc" translate="yes" xml:space="preserve">
          <source>Prefixing a feature with &lt;code&gt;no-&lt;/code&gt; turns it off instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1a82c707f23d09169b7a07b352752535b796b2" translate="yes" xml:space="preserve">
          <source>Prefixing a feature with &lt;code&gt;no-&lt;/code&gt; turns it off instead. .. _other:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9da79a093b23650535a151c09a73e3fee5ee4ae" translate="yes" xml:space="preserve">
          <source>Prefixing the commandline with a space will prevent the entire line from being stored in the history.</source>
          <target state="translated">Prefijar la línea de mando con un espacio evitará que toda la línea se almacene en el historial.</target>
        </trans-unit>
        <trans-unit id="ae87eccf04345730f74111e3854e8d88c3f15602" translate="yes" xml:space="preserve">
          <source>Prepends &lt;code&gt;sudo&lt;/code&gt; to the current commandline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9839bfb9437debae035747212d941ee55c05aeb5" translate="yes" xml:space="preserve">
          <source>Prepends &lt;code&gt;sudo&lt;/code&gt; to the current commandline. If the commandline is empty, prepend &lt;code&gt;sudo&lt;/code&gt; to the last commandline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea683ad616063b7347bdddeee7203a82e1a3805b" translate="yes" xml:space="preserve">
          <source>Press</source>
          <target state="translated">Press</target>
        </trans-unit>
        <trans-unit id="fe2ed6ea3216d06709445e2c3ce6b00041d037ed" translate="yes" xml:space="preserve">
          <source>Press &lt;b&gt;Tab&lt;/b&gt;, and &lt;code&gt;fish&lt;/code&gt; will attempt to complete the command, argument, or path:</source>
          <target state="translated">Presione &lt;b&gt;Tab&lt;/b&gt; y &lt;code&gt;fish&lt;/code&gt; intentar&amp;aacute; completar el comando, argumento o ruta:</target>
        </trans-unit>
        <trans-unit id="7ec470886283f4bfbbc71ce123f5602a60ae342e" translate="yes" xml:space="preserve">
          <source>Pressing</source>
          <target state="translated">Pressing</target>
        </trans-unit>
        <trans-unit id="09c712c74db06b262e6e04d6f0d9c7fa02c47733" translate="yes" xml:space="preserve">
          <source>Pressing &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;Enter&lt;/b&gt; instead of pressing the &lt;b&gt;Enter&lt;/b&gt; key.</source>
          <target state="translated">Presionando &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;Enter en&lt;/b&gt; lugar de presionar la tecla &lt;b&gt;Enter&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="18a079610776709bdf0e5127ade329eadec0eaa4" translate="yes" xml:space="preserve">
          <source>Pressing the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bf58510d3b20325eed84381a6d30434da9e2ca" translate="yes" xml:space="preserve">
          <source>Pressing the &lt;b&gt;Enter&lt;/b&gt; key while a block of commands is unclosed, such as when one or more block commands such as &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;if&lt;/code&gt; do not have a corresponding &lt;code&gt;end&lt;/code&gt; command.</source>
          <target state="translated">Presionar la tecla &lt;b&gt;Enter&lt;/b&gt; mientras un bloque de comandos no est&amp;aacute; cerrado, como cuando uno o m&amp;aacute;s comandos de bloque como &lt;code&gt;for&lt;/code&gt; , &lt;code&gt;begin&lt;/code&gt; o &lt;code&gt;if&lt;/code&gt; no tienen un comando &lt;code&gt;end&lt;/code&gt; correspondiente .</target>
        </trans-unit>
        <trans-unit id="51c1ca9c0f68b042eddbc3f8c65475d34963915f" translate="yes" xml:space="preserve">
          <source>Previous versions of fish also allowed specifying this as &lt;code&gt;^DESTINATION&lt;/code&gt;, but that made another character special so it was deprecated and will be removed in the future. See &lt;a href=&quot;#featureflags&quot;&gt;feature flags&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f9e196a99ef7c54610b77d7819c1536c7dc380" translate="yes" xml:space="preserve">
          <source>Previous versions of fish also allowed spelling this as &lt;code&gt;^DESTINATION&lt;/code&gt;, but that made another character special so it was deprecated and will be removed in future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27493f631ba000f95a572539cafcbb594a951944" translate="yes" xml:space="preserve">
          <source>Print Top and Bottom on separate lines, using an escape sequence</source>
          <target state="translated">Imprimir arriba y abajo en líneas separadas,usando una secuencia de escape</target>
        </trans-unit>
        <trans-unit id="84c34db7a924b44d0ab81ef51631e488d755a55a" translate="yes" xml:space="preserve">
          <source>Print hello world to stdout</source>
          <target state="translated">Imprimir hola mundo a stdout</target>
        </trans-unit>
        <trans-unit id="ad29dcc16fea024e7e41818ab9d4740b264b782b" translate="yes" xml:space="preserve">
          <source>Prior to the addition of this builtin command in the 2.7.0 release there were two main ways to parse the arguments passed to a fish script or function. One way was to use the OS provided &lt;code&gt;getopt&lt;/code&gt; command. The problem with that is that the GNU and BSD implementations are not compatible. Which makes using that external command difficult other than in trivial situations. The other way is to iterate over &lt;code&gt;$argv&lt;/code&gt; and use the fish &lt;code&gt;switch&lt;/code&gt; statement to decide how to handle the argument. That, however, involves a huge amount of boilerplate code. It is also borderline impossible to implement the same behavior as builtin commands.</source>
          <target state="translated">Antes de la adici&amp;oacute;n de este comando incorporado en la versi&amp;oacute;n 2.7.0, hab&amp;iacute;a dos formas principales de analizar los argumentos pasados ​​a un script o funci&amp;oacute;n fish. Una forma era utilizar el comando &lt;code&gt;getopt&lt;/code&gt; proporcionado por el sistema operativo . El problema con eso es que las implementaciones de GNU y BSD no son compatibles. Lo que hace que el uso de ese comando externo sea dif&amp;iacute;cil m&amp;aacute;s que en situaciones triviales. La otra forma es iterar sobre &lt;code&gt;$argv&lt;/code&gt; y usar la instrucci&amp;oacute;n fish &lt;code&gt;switch&lt;/code&gt; para decidir c&amp;oacute;mo manejar el argumento. Eso, sin embargo, implica una gran cantidad de c&amp;oacute;digo repetitivo. Tambi&amp;eacute;n es casi imposible implementar el mismo comportamiento que los comandos integrados.</target>
        </trans-unit>
        <trans-unit id="e14c52a6b5ed7f130784534e792abd7951342686" translate="yes" xml:space="preserve">
          <source>Private mode</source>
          <target state="translated">Modo privado</target>
        </trans-unit>
        <trans-unit id="7d03d42c737cd08e3c616e333f7637225318bb7d" translate="yes" xml:space="preserve">
          <source>Problem solved!</source>
          <target state="translated">¡Problema resuelto!</target>
        </trans-unit>
        <trans-unit id="ee9fca50a497a5601e04bc03c01cb7e46d034712" translate="yes" xml:space="preserve">
          <source>Process substitution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27fee3438e0d28b1f5e56d2013e82bcf5b441945" translate="yes" xml:space="preserve">
          <source>Programmable prompt</source>
          <target state="translated">El aviso programable...</target>
        </trans-unit>
        <trans-unit id="4eae5ed9e86eb92ca41dd75ef52fb9a0a53af761" translate="yes" xml:space="preserve">
          <source>Programmable title</source>
          <target state="translated">Título programable</target>
        </trans-unit>
        <trans-unit id="a817d7eb8e0f1dab755ab5203a082e5c3c094fce" translate="yes" xml:space="preserve">
          <source>Prompt</source>
          <target state="translated">Prompt</target>
        </trans-unit>
        <trans-unit id="eea5311d723f2493a5c1450ad76e4f364fdaf4f0" translate="yes" xml:space="preserve">
          <source>Prompts</source>
          <target state="translated">Prompts</target>
        </trans-unit>
        <trans-unit id="891af452e40b1f57d6207ad00ca8f173d9425b11" translate="yes" xml:space="preserve">
          <source>Put &lt;code&gt;bind&lt;/code&gt; statements into &lt;a href=&quot;#initialization&quot;&gt;config.fish&lt;/a&gt; or a function called &lt;code&gt;fish_user_key_bindings&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0495187c978ea883d19171649639e1c756060adb" translate="yes" xml:space="preserve">
          <source>Quick answer:</source>
          <target state="translated">Respuesta rápida:</target>
        </trans-unit>
        <trans-unit id="7b0257ce75add65485cb879a8ababbebc2270b68" translate="yes" xml:space="preserve">
          <source>Quotes</source>
          <target state="translated">Quotes</target>
        </trans-unit>
        <trans-unit id="19e3869f24dda01e67d9a925748b4ce101c6820b" translate="yes" xml:space="preserve">
          <source>Quotes are followed across newlines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60fefb29eda0237f92306cb85899330ca8b230ee" translate="yes" xml:space="preserve">
          <source>Quoting</source>
          <target state="translated">Quoting</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="a5ab0c393626e6b25924176a035ebd63722dc7ec" translate="yes" xml:space="preserve">
          <source>Range expansion will go in reverse if the end element is earlier in the list than the start and forward if the end is later than the start, unless exactly one of the given indices is negative. This is to enable clamping without changing direction if the list has fewer elements than expected.</source>
          <target state="translated">La expansión de la gama irá en sentido inverso si el elemento final es anterior en la lista que el inicio y hacia adelante si el final es posterior al inicio,a menos que exactamente uno de los índices dados sea negativo.Esto es para permitir la sujeción sin cambiar de dirección si la lista tiene menos elementos de los esperados.</target>
        </trans-unit>
        <trans-unit id="b16d80967d06f9706108437bd28e6a8d5175e9a0" translate="yes" xml:space="preserve">
          <source>Reading from or appending to a non existing file.</source>
          <target state="translated">Leyendo de un archivo no existente o añadiéndolo a él.</target>
        </trans-unit>
        <trans-unit id="3e22373b8f4786a11fc3f5247c24bd1cd140127f" translate="yes" xml:space="preserve">
          <source>Ready for more?</source>
          <target state="translated">¿Listo para más?</target>
        </trans-unit>
        <trans-unit id="ab140354a34bd045ff52d42f722acc1c4ffada22" translate="yes" xml:space="preserve">
          <source>Regular Expressions</source>
          <target state="translated">Expressions régulières</target>
        </trans-unit>
        <trans-unit id="cd5af7344f50420161f8f096f94794e6fe1580c6" translate="yes" xml:space="preserve">
          <source>Release notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8c7c6ececfc7a4858b06b4968629df633fe974" translate="yes" xml:space="preserve">
          <source>Renames an existing abbreviation from &lt;code&gt;gco&lt;/code&gt; to &lt;code&gt;gch&lt;/code&gt;.</source>
          <target state="translated">Cambia el nombre de una abreviatura existente de &lt;code&gt;gco&lt;/code&gt; a &lt;code&gt;gch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dc79b3cd9563c59f1fd2d978861f14b1270090f" translate="yes" xml:space="preserve">
          <source>Repeat Examples</source>
          <target state="translated">Ejemplos de repetición</target>
        </trans-unit>
        <trans-unit id="a879640933d6c8936ca4cc6a02a55f8cc4408041" translate="yes" xml:space="preserve">
          <source>Replace Literal Examples</source>
          <target state="translated">Reemplazar los ejemplos literales</target>
        </trans-unit>
        <trans-unit id="13b05ad41dc01c7c29077cca05d8339a7a6429b9" translate="yes" xml:space="preserve">
          <source>Replace Regex Examples</source>
          <target state="translated">Reemplazar ejemplos de Regex</target>
        </trans-unit>
        <trans-unit id="4c85d59c181a8bdfec393789d72d1942cf54846f" translate="yes" xml:space="preserve">
          <source>Return Values</source>
          <target state="translated">Valores de retorno</target>
        </trans-unit>
        <trans-unit id="27ca7249b11e61ac7f3b63efe842130af63f97b8" translate="yes" xml:space="preserve">
          <source>Run the following command in fish:</source>
          <target state="translated">Ejecute el siguiente comando en el pescado:</target>
        </trans-unit>
        <trans-unit id="247f6e4943c76c92b5c6c8d51b7623da37673dc0" translate="yes" xml:space="preserve">
          <source>Run:</source>
          <target state="translated">Run:</target>
        </trans-unit>
        <trans-unit id="ddd9c246e03e2789458ae8bb429c9d694195cb17" translate="yes" xml:space="preserve">
          <source>Running Commands</source>
          <target state="translated">Comandos de ejecución</target>
        </trans-unit>
        <trans-unit id="5c5cc33a225b06807a45544c8793a5276a15976d" translate="yes" xml:space="preserve">
          <source>Running multiple programs</source>
          <target state="translated">Ejecutando múltiples programas</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="b6ee539e25ba9fe37112f3eead73eaed680c02a5" translate="yes" xml:space="preserve">
          <source>SEQUENCE is the character sequence to bind to. These should be written as &lt;a href=&quot;../index#escapes&quot;&gt;fish escape sequences&lt;/a&gt;. For example, because pressing the Alt key and another character sends that character prefixed with an escape character, Alt-based key bindings can be written using the &lt;code&gt;\e&lt;/code&gt; escape. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fe37f1b337c360725965146e94ffa93a9708da" translate="yes" xml:space="preserve">
          <source>SEQUENCE is the character sequence to bind to. These should be written as &lt;a href=&quot;index#escapes&quot;&gt;fish escape sequences&lt;/a&gt;. For example, because pressing the Alt key and another character sends that character prefixed with an escape character, Alt-based key bindings can be written using the &lt;code&gt;\e&lt;/code&gt; escape. For example, &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;w&lt;/b&gt; can be written as &lt;code&gt;\ew&lt;/code&gt;. The control character can be written in much the same way using the &lt;code&gt;\c&lt;/code&gt; escape, for example &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;X&lt;/b&gt; (^X) can be written as &lt;code&gt;\cx&lt;/code&gt;. Note that Alt-based key bindings are case sensitive and Control-based key bindings are not. This is a constraint of text-based terminals, not &lt;code&gt;fish&lt;/code&gt;.</source>
          <target state="translated">SECUENCIA es la secuencia de caracteres a la que enlazar. Deben escribirse como &lt;a href=&quot;index#escapes&quot;&gt;secuencias de escape de peces&lt;/a&gt; . Por ejemplo, debido a que al presionar la tecla Alt y otro car&amp;aacute;cter env&amp;iacute;a ese car&amp;aacute;cter con el prefijo de un car&amp;aacute;cter de escape, las combinaciones de teclas basadas en Alt se pueden escribir usando el escape &lt;code&gt;\e&lt;/code&gt; . Por ejemplo, &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;w&lt;/b&gt; se puede escribir como &lt;code&gt;\ew&lt;/code&gt; . El car&amp;aacute;cter de control se puede escribir de la misma manera usando el escape &lt;code&gt;\c&lt;/code&gt; , por ejemplo &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;X&lt;/b&gt; (^ X) se puede escribir como &lt;code&gt;\cx&lt;/code&gt; . Tenga en cuenta que las combinaciones de teclas basadas en Alt distinguen entre may&amp;uacute;sculas y min&amp;uacute;sculas y las combinaciones de teclas basadas en Control no. Esta es una restricci&amp;oacute;n de los terminales basados ​​en texto, no de &lt;code&gt;fish&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="769ee8ba6c10d0fc5cc5d5931ff5950b069f7631" translate="yes" xml:space="preserve">
          <source>STRING arguments are taken from the command line unless standard input is connected to a pipe or a file, in which case they are read from standard input, one STRING per line. It is an error to supply STRING arguments on the command line and on standard input.</source>
          <target state="translated">Los argumentos de STRING se toman de la línea de comandos a menos que la entrada estándar esté conectada a una tubería o a un archivo,en cuyo caso se leen de la entrada estándar,una STRING por línea.Es un error suministrar argumentos STRING en la línea de comandos y en la entrada estándar.</target>
        </trans-unit>
        <trans-unit id="4e1a6674d38590faffffeb4695d9d452b5339baa" translate="yes" xml:space="preserve">
          <source>Same as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9759d5f8593842e337c74b9202035585d520b2" translate="yes" xml:space="preserve">
          <source>Same as above but with a second flag that requires a value:</source>
          <target state="translated">Lo mismo que arriba pero con una segunda bandera que requiere un valor:</target>
        </trans-unit>
        <trans-unit id="d562a361adfcc4bd04396673622d38c2c23c4a3b" translate="yes" xml:space="preserve">
          <source>Same as above but with a third flag that can be given multiple times saving the value of each instance seen and only the long flag name (&lt;code&gt;--token&lt;/code&gt;) can be used:</source>
          <target state="translated">Igual que el anterior pero con una tercera bandera que se puede dar varias veces guardando el valor de cada instancia vista y solo se puede usar el nombre largo de la bandera ( &lt;code&gt;--token&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="c902e77d44ee1a72851bdd66a8039b7289e5469e" translate="yes" xml:space="preserve">
          <source>Say $animal contains the name of an animal. Then this code would classify it:</source>
          <target state="translated">Digamos que $animal contiene el nombre de un animal.Entonces este código lo clasificaría:</target>
        </trans-unit>
        <trans-unit id="bb8db2460eda9933a6f87adda85e236a41134192" translate="yes" xml:space="preserve">
          <source>Say you want to modify your prompt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d54c1089bcba444eef6cef409cdf1c2eb4307c" translate="yes" xml:space="preserve">
          <source>Searchable command history</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e406da000ac4099abeb149121071ece020d3907" translate="yes" xml:space="preserve">
          <source>Searchable history</source>
          <target state="translated">Historial de búsqueda</target>
        </trans-unit>
        <trans-unit id="2b36d3f6cf281f2c73783b0cc5596b490e2def69" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;fish_for_bash_users#fish-for-bash-users&quot;&gt;Fish for bash users&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b445d35ecc1c55f9e1ceba18d794fb79d964e899" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;index#editor&quot;&gt;documentation&lt;/a&gt; for more details about line editing in fish.</source>
          <target state="translated">Consulte la &lt;a href=&quot;index#editor&quot;&gt;documentaci&amp;oacute;n&lt;/a&gt; para obtener m&amp;aacute;s detalles sobre la edici&amp;oacute;n de l&amp;iacute;neas en peces.</target>
        </trans-unit>
        <trans-unit id="67373bb92cd7ecbf243edb9d60ad6f00f86a6052" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Ver también</target>
        </trans-unit>
        <trans-unit id="49221a7350c523a8e1009128e69d530a8c75a22a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;dirs#cmd-dirs&quot;&gt;dirs&lt;/a&gt; to print the stack and &lt;code&gt;dirs -c&lt;/code&gt; to clear it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77543101f6f627a4f89275ca4aa34557b8a135ef" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;fish_vcs_prompt#cmd-fish-vcs-prompt&quot;&gt;fish_vcs_prompt&lt;/a&gt;, which will call all supported version control prompt functions, including git, Mercurial and Subversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67035298680ddb09dd248da78e915fd9c9627f01" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;dirs&lt;/code&gt; and &lt;code&gt;dirs -c&lt;/code&gt;.</source>
          <target state="translated">Consulte tambi&amp;eacute;n &lt;code&gt;dirs&lt;/code&gt; y &lt;code&gt;dirs -c&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a3b31765df862a7d9c4531c872152ad402c53f3" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;read --delimiter&lt;/code&gt;.</source>
          <target state="translated">Consulte tambi&amp;eacute;n &lt;code&gt;read --delimiter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5324b1f4d638d16895e396283d6222620e56d716" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;cdh#cmd-cdh&quot;&gt;cdh&lt;/a&gt; command for changing to a recently visited directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7238893c67063d93ae05263dd71a5ccfc50d90c7" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;commands#cdh&quot;&gt;&lt;code&gt;cdh&lt;/code&gt;&lt;/a&gt; command for changing to a recently visited directory.</source>
          <target state="translated">Consulte tambi&amp;eacute;n el comando &lt;a href=&quot;commands#cdh&quot;&gt; &lt;code&gt;cdh&lt;/code&gt; &lt;/a&gt; para cambiar a un directorio visitado recientemente.</target>
        </trans-unit>
        <trans-unit id="01cfa9314baef15cf1a7d7383228c6d181370cb2" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;commands#prevd&quot;&gt;&lt;code&gt;prevd&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;commands#pushd&quot;&gt;&lt;code&gt;pushd&lt;/code&gt;&lt;/a&gt; commands which also work with the recent &lt;code&gt;cd&lt;/code&gt; history and are provided for compatibility with other shells.</source>
          <target state="translated">Vea tambi&amp;eacute;n los comandos &lt;a href=&quot;commands#prevd&quot;&gt; &lt;code&gt;prevd&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;commands#pushd&quot;&gt; &lt;code&gt;pushd&lt;/code&gt; &lt;/a&gt; que tambi&amp;eacute;n funcionan con el historial de &lt;code&gt;cd&lt;/code&gt; reciente y se proporcionan para compatibilidad con otros shells.</target>
        </trans-unit>
        <trans-unit id="a276f1ec5f60e2df52ed4c479379eca5a14e0acb" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;prevd#cmd-prevd&quot;&gt;prevd&lt;/a&gt; and &lt;a href=&quot;pushd#cmd-pushd&quot;&gt;pushd&lt;/a&gt; commands which also work with the recent &lt;code&gt;cd&lt;/code&gt; history and are provided for compatibility with other shells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54c40ece878eeac53f5bdaa4674e3e9022a5158" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;--delimiter&lt;/code&gt; option of the &lt;a href=&quot;read#cmd-read&quot;&gt;read&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59959e6168e702c87aad6497074fc87974da46d" translate="yes" xml:space="preserve">
          <source>See the &quot;Internals&quot; section for more on them.</source>
          <target state="translated">Vea la sección &quot;Internos&quot; para más información sobre ellos.</target>
        </trans-unit>
        <trans-unit id="c6e5f5869c0d557646211d7b722a3358667dc217" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#fish-opt&quot;&gt;&lt;code&gt;fish_opt&lt;/code&gt;&lt;/a&gt; command for a friendlier but more verbose way to create option specifications.</source>
          <target state="translated">Consulte el comando &lt;a href=&quot;#fish-opt&quot;&gt; &lt;code&gt;fish_opt&lt;/code&gt; &lt;/a&gt; para obtener una forma m&amp;aacute;s amigable pero m&amp;aacute;s detallada de crear especificaciones de opciones.</target>
        </trans-unit>
        <trans-unit id="762e36367184253ec997bd0b9511dad76a9722aa" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;cmds/history#cmd-history&quot;&gt;history&lt;/a&gt; command for other manipulations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c014ad7ef4dcc4632ad4cb9226ca38ced50624d9" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;fish_opt#cmd-fish-opt&quot;&gt;fish_opt&lt;/a&gt; command for a friendlier but more verbose way to create option specifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f689ba7f1bf5e057a3d971021477d48085ed9ad9" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;cmds/funced#cmd-funced&quot;&gt;funced&lt;/a&gt; and &lt;a href=&quot;cmds/funcsave#cmd-funcsave&quot;&gt;funcsave&lt;/a&gt; for ways to create these files automatically, and &lt;a href=&quot;index#syntax-function-autoloading&quot;&gt;$fish_function_path&lt;/a&gt; to control their location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d34ee1f18350527bff51e963b54e3ce46a24e48" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;cmds/test#cmd-test&quot;&gt;test&lt;/a&gt; and &lt;a href=&quot;cmds/if#cmd-if&quot;&gt;if&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac7646fb3e869bb56303fbe3fca839b0d38f1d8" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;commands#funced&quot;&gt;funced&lt;/a&gt; and &lt;a href=&quot;commands#funcsave&quot;&gt;funcsave&lt;/a&gt; for ways to create these files automatically.</source>
          <target state="translated">Consulte la documentaci&amp;oacute;n de &lt;a href=&quot;commands#funced&quot;&gt;funced&lt;/a&gt; y &lt;a href=&quot;commands#funcsave&quot;&gt;funcsave&lt;/a&gt; para conocer las formas de crear estos archivos autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="bb216107606bc95b848f93fc29c67e8fe68c93ea" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;commands#test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;commands#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Consulte la documentaci&amp;oacute;n para la &lt;a href=&quot;commands#test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;commands#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9299a43e63898a7efcae7a83cc40f247242085fc" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;code&gt;set&lt;/code&gt; for more details on the scoping rules for variables.</source>
          <target state="translated">Consulte la documentaci&amp;oacute;n del &lt;code&gt;set&lt;/code&gt; para obtener m&amp;aacute;s detalles sobre las reglas de alcance para las variables.</target>
        </trans-unit>
        <trans-unit id="f325a391b2afa8d45fd9b05b9b133df7d497fc47" translate="yes" xml:space="preserve">
          <source>Separating Commands (Semicolon)</source>
          <target state="translated">Comandos de separación (punto y coma)</target>
        </trans-unit>
        <trans-unit id="0ffd1469dee865172080d29fd56f5825f24fc441" translate="yes" xml:space="preserve">
          <source>Sequences of elements can be written with the range operator '&lt;code&gt;..&lt;/code&gt;'. A range '&lt;code&gt;a..b&lt;/code&gt;' ('a' and 'b' being integers) is expanded into a sequence of indices '&lt;code&gt;a a+1 a+2 ... b&lt;/code&gt;' or '&lt;code&gt;a a-1 a-2 ... b&lt;/code&gt;' depending on which of 'a' or 'b' is higher. Negative range limits are calculated from the end of the list. If an index is too large or small it's silently clamped to one or the size of the list as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024cdc89776fc67afc34af4659ea1d4b7b50ced1" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;$IFS&lt;/code&gt; to empty will disable line splitting. This is deprecated, use &lt;a href=&quot;cmds/string#cmd-string-split&quot;&gt;string split&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cafea76301da663d6e72c8dd0182bf1a08fe0c7b" translate="yes" xml:space="preserve">
          <source>Setting the background color only affects subsequently written characters. Fish provides no way to set the background color for the entire terminal window. Configuring the window background color (and other attributes such as its opacity) has to be done using whatever mechanisms the terminal provides.</source>
          <target state="translated">La configuración del color de fondo sólo afecta a los caracteres escritos posteriormente.Fish no ofrece ninguna manera de establecer el color de fondo para toda la ventana de la terminal.La configuración del color de fondo de la ventana (y otros atributos como su opacidad)tiene que hacerse usando cualquier mecanismo que el terminal proporcione.</target>
        </trans-unit>
        <trans-unit id="b7ac25be64a83552cee11d2c2c101281899b7d94" translate="yes" xml:space="preserve">
          <source>Setting the background color only affects subsequently written characters. Fish provides no way to set the background color for the entire terminal window. Configuring the window background color (and other attributes such as its opacity) has to be done using whatever mechanisms the terminal provides. Look for a config option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c7b58dd2bcf51fca3690de5c68c9e1a134f91d" translate="yes" xml:space="preserve">
          <source>Several commands are provided to interact with this directory history:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0750f1643a764b440d30cec12896d4e2f3c4f4" translate="yes" xml:space="preserve">
          <source>Shared bindings</source>
          <target state="translated">Las ataduras compartidas</target>
        </trans-unit>
        <trans-unit id="02a6cc27a3e125fbed4ff93ba00ddc32ff248036" translate="yes" xml:space="preserve">
          <source>Shebang Line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e5ec8aae4e834701135d3867ab63125d131c5e" translate="yes" xml:space="preserve">
          <source>Shell variable and function names</source>
          <target state="translated">Nombres de variables y funciones del Shell</target>
        </trans-unit>
        <trans-unit id="d32397da27c98186753b21a057b7b69d1b40c8e1" translate="yes" xml:space="preserve">
          <source>Shell variable names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91aede6defa8d430f67e550004d49863d3e2e5b" translate="yes" xml:space="preserve">
          <source>Shell variables</source>
          <target state="translated">Las variables del casco</target>
        </trans-unit>
        <trans-unit id="0f86f7ae2195716edf4d3ac75b6ae230d7060ba1" translate="yes" xml:space="preserve">
          <source>Shell variables are named pieces of data, which can be created, deleted and their values changed and used by the user. Variables may optionally be &quot;exported&quot;, so that a copy of the variable is available to any subprocesses the shell creates. An exported variable is referred to as an &quot;environment variable&quot;.</source>
          <target state="translated">Las variables de la concha se denominan piezas de datos,que pueden ser creadas,eliminadas y sus valores cambiados y utilizados por el usuario.Las variables pueden &quot;exportarse&quot; opcionalmente,de modo que una copia de la variable esté disponible para cualquier subproceso que el shell cree.Una variable exportada se denomina &quot;variable de entorno&quot;.</target>
        </trans-unit>
        <trans-unit id="9ba5016166d5ba5cee4a99a1b1e6e1f5fe3f8efe" translate="yes" xml:space="preserve">
          <source>Shells like fish are used by giving them commands. Every &lt;code&gt;fish&lt;/code&gt; command follows the same basic syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e122d1fcfbe4d2952329855d2c90efb389777230" translate="yes" xml:space="preserve">
          <source>Shells like fish are used by giving them commands. Every &lt;code&gt;fish&lt;/code&gt; command follows the same simple syntax.</source>
          <target state="translated">Las conchas como los peces se usan d&amp;aacute;ndoles &amp;oacute;rdenes. Cada comando de &lt;code&gt;fish&lt;/code&gt; sigue la misma sintaxis simple.</target>
        </trans-unit>
        <trans-unit id="c7dc92c664fcb0cec1505db87af17f46c261058f" translate="yes" xml:space="preserve">
          <source>Shells like fish are used by giving them commands. Every fish command follows the same basic syntax. A command is executed by writing the name of the command followed by any arguments. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469d5b183fdc0d59e41a51e61529cdd95274ba7c" translate="yes" xml:space="preserve">
          <source>Shift</source>
          <target state="translated">Shift</target>
        </trans-unit>
        <trans-unit id="c89673d426f813c79fba3be3ad53403494aea9ae" translate="yes" xml:space="preserve">
          <source>Shift, Tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44347ef7035824e74312bda85a5c1f33acab5d3" translate="yes" xml:space="preserve">
          <source>Shift,&amp;larr;,Left</source>
          <target state="translated">Shift,&amp;larr;,Left</target>
        </trans-unit>
        <trans-unit id="389f8e25d83e1e1c83d311028f205dfb3a8af791" translate="yes" xml:space="preserve">
          <source>Shift,&amp;rarr;,Right</source>
          <target state="translated">Shift,&amp;rarr;,Right</target>
        </trans-unit>
        <trans-unit id="794fe0e411bbf424857358cfb3699f0985ef9bee" translate="yes" xml:space="preserve">
          <source>Shift,A</source>
          <target state="translated">Shift,A</target>
        </trans-unit>
        <trans-unit id="a4f7b08e9c36efe6a08eae925c49ef2f720086e4" translate="yes" xml:space="preserve">
          <source>Shift,D</source>
          <target state="translated">Shift,D</target>
        </trans-unit>
        <trans-unit id="42414c807cd9c1ab64d204f7113345e9c5f0a85a" translate="yes" xml:space="preserve">
          <source>Short options, like '&lt;code&gt;-a&lt;/code&gt;'. Short options are a single character long, are preceded by a single hyphen and may be grouped together (like '&lt;code&gt;-la&lt;/code&gt;', which is equivalent to '&lt;code&gt;-l -a&lt;/code&gt;'). Option arguments may be specified in the following parameter ('&lt;code&gt;-w 32&lt;/code&gt;') or by appending the option with the value ('&lt;code&gt;-w32&lt;/code&gt;').</source>
          <target state="translated">Opciones cortas, como ' &lt;code&gt;-a&lt;/code&gt; '. Las opciones cortas tienen un solo car&amp;aacute;cter de longitud, est&amp;aacute;n precedidas por un solo gui&amp;oacute;n y pueden agruparse (como ' &lt;code&gt;-la&lt;/code&gt; ', que es equivalente a ' &lt;code&gt;-l -a&lt;/code&gt; '). Los argumentos de las opciones se pueden especificar en el siguiente par&amp;aacute;metro (' &lt;code&gt;-w 32&lt;/code&gt; ') o agregando la opci&amp;oacute;n con el valor (' &lt;code&gt;-w32&lt;/code&gt; ').</target>
        </trans-unit>
        <trans-unit id="b826892dea52d149aa790eeb614ebf8c6f5012a3" translate="yes" xml:space="preserve">
          <source>Short options, like &lt;code&gt;-a&lt;/code&gt;. Short options are a single character long, are preceded by a single hyphen and can be grouped together (like &lt;code&gt;-la&lt;/code&gt;, which is equivalent to &lt;code&gt;-l -a&lt;/code&gt;). Option arguments may be specified in the following parameter (&lt;code&gt;-w 32&lt;/code&gt;) or by appending the option with the value (&lt;code&gt;-w32&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214c488d368da8c81796e48eb7f6963ef7a93bff" translate="yes" xml:space="preserve">
          <source>Should you wish to uninstall fish, first ensure fish is not set as your shell. Run &lt;code&gt;chsh -s /bin/bash&lt;/code&gt; if you are not sure.</source>
          <target state="translated">Si desea desinstalar pescado, primero aseg&amp;uacute;rese de que el pescado no est&amp;eacute; configurado como su caparaz&amp;oacute;n. Ejecute &lt;code&gt;chsh -s /bin/bash&lt;/code&gt; si no est&amp;aacute; seguro.</target>
        </trans-unit>
        <trans-unit id="aa028fe987fcdcfafee00c72a67c8ab786ef2286" translate="yes" xml:space="preserve">
          <source>Show all completions for &lt;code&gt;git&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a22b01fc547f4aefabc8c7a496313159dfc74d" translate="yes" xml:space="preserve">
          <source>Signal names are case insensitive and the &lt;code&gt;SIG&lt;/code&gt; prefix is optional.</source>
          <target state="translated">Los nombres de se&amp;ntilde;ales no distinguen entre may&amp;uacute;sculas y min&amp;uacute;sculas y el prefijo &lt;code&gt;SIG&lt;/code&gt; es opcional.</target>
        </trans-unit>
        <trans-unit id="2339b49e18e4fa7fa63c25097d1c3cb05b3abf7a" translate="yes" xml:space="preserve">
          <source>Similar to bash, fish has Emacs and Vi editing modes. The default editing mode is Emacs. You can switch to Vi mode with &lt;code&gt;fish_vi_key_bindings&lt;/code&gt; and switch back with &lt;code&gt;fish_default_key_bindings&lt;/code&gt;. You can also make your own key bindings by creating a function and setting $fish_key_bindings to its name. For example:</source>
          <target state="translated">Similar a bash, fish tiene modos de edici&amp;oacute;n Emacs y Vi. El modo de edici&amp;oacute;n predeterminado es Emacs. Puede cambiar al modo Vi con &lt;code&gt;fish_vi_key_bindings&lt;/code&gt; y volver con &lt;code&gt;fish_default_key_bindings&lt;/code&gt; . Tambi&amp;eacute;n puede crear sus propias combinaciones de teclas creando una funci&amp;oacute;n y estableciendo $ fish_key_bindings en su nombre. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="841cba81f949103d830192d933a434ce626dfca6" translate="yes" xml:space="preserve">
          <source>Since fish 3.1 you can set an environment variable for just one command using the &lt;code&gt;key=value some command&lt;/code&gt; syntax, like in other shells. The two lines below behave identically - unlike other shells, fish will output &lt;code&gt;value&lt;/code&gt; both times:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae81f7020b13f6dbc6ef9ce845da695c08f53b8" translate="yes" xml:space="preserve">
          <source>Since scripts for shell commands can be written in many different languages, they need to carry information about what interpreter is needed to execute them: For this they are expected to have a first line, the shebang line, which names an executable for this purpose:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6591aa81ebfefa7f2a81cf6a8ddd00202ee95252" translate="yes" xml:space="preserve">
          <source>Single quotes have no special meaning within double quotes and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e5d1ac7ee2c4dbadd618ffa494ac83d1493abc" translate="yes" xml:space="preserve">
          <source>So you set a variable with &lt;code&gt;set&lt;/code&gt;, and use it with a &lt;code&gt;$&lt;/code&gt; and the name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b8aecd3aaaa33e35d9724dfec4e61ddcb14189" translate="yes" xml:space="preserve">
          <source>So:</source>
          <target state="translated">So:</target>
        </trans-unit>
        <trans-unit id="530fce1c2ad1ce0277a5df96933c6fbf422dc856" translate="yes" xml:space="preserve">
          <source>Some OPTION_SPEC examples:</source>
          <target state="translated">Algunos ejemplos de OPTION_SPEC:</target>
        </trans-unit>
        <trans-unit id="30df5e6aa8dc13e79598637f63555c5942642d5c" translate="yes" xml:space="preserve">
          <source>Some bash variables and their closest fish equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6baccd4c71912ba57043465594b0cf17749be7" translate="yes" xml:space="preserve">
          <source>Some bindings are shared between emacs- and vi-mode because they aren't text editing bindings or because what Vi/Vim does for a particular key doesn't make sense for a shell.</source>
          <target state="translated">Algunos bindings son compartidos entre los modos emacs y vi-mode porque no son bindings de edición de texto o porque lo que Vi/Vim hace para una clave en particular no tiene sentido para un shell.</target>
        </trans-unit>
        <trans-unit id="425593164f34a70e7fd63371baa3a373bc2ecb38" translate="yes" xml:space="preserve">
          <source>Some characters can not be written directly on the command line. For these characters, so called escape sequences are provided. These are:</source>
          <target state="translated">Algunos caracteres no pueden ser escritos directamente en la línea de comando.Para estos caracteres,se proporcionan las llamadas secuencias de escape.Estas son:</target>
        </trans-unit>
        <trans-unit id="6e896b61b585149013fb98cf0696e1c05f9594f2" translate="yes" xml:space="preserve">
          <source>Some characters cannot be written directly on the command line. For these characters, so-called escape sequences are provided. These are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32cca7a190f9346b166b71a80738e3921998ba9" translate="yes" xml:space="preserve">
          <source>Some characters have special meaning to the shell. For example, an apostrophe &lt;code&gt;'&lt;/code&gt; disables expansion (see &lt;a href=&quot;#quotes&quot;&gt;Quotes&lt;/a&gt;). To tell the shell to treat these characters literally, escape them with a backslash. For example, the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a528e343afc3809db9c1142fa89d7ee4b8aa846e" translate="yes" xml:space="preserve">
          <source>Some colors for status symbols:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd3509b210643ba6eefaffcdf24924a6a2790a7" translate="yes" xml:space="preserve">
          <source>Some common words</source>
          <target state="translated">Algunas palabras comunes</target>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">Algunos ejemplos:</target>
        </trans-unit>
        <trans-unit id="9a67d5493118a559656027def8dc4fcd0cc3974f" translate="yes" xml:space="preserve">
          <source>Some features include repetitions:</source>
          <target state="translated">Algunas características incluyen las repeticiones:</target>
        </trans-unit>
        <trans-unit id="4ded8c2bc928f23aa366efb17837e70948b9a888" translate="yes" xml:space="preserve">
          <source>Some of the special features of fish are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39624c87b3e78e02ed8dde71f696712e0710389" translate="yes" xml:space="preserve">
          <source>Some shells (e.g., ksh, bash) feature a syntax that is a mix between command substitution and piping, called process substitution. It is used to send the output of a command into the calling command, much like command substitution, but with the difference that the output is not sent through commandline arguments but through a named pipe, with the filename of the named pipe sent as an argument to the calling program. &lt;code&gt;psub&lt;/code&gt; combined with a regular command substitution provides the same functionality.</source>
          <target state="translated">Algunas shells (por ejemplo, ksh, bash) presentan una sintaxis que es una mezcla entre la sustituci&amp;oacute;n de comandos y la canalizaci&amp;oacute;n, llamada sustituci&amp;oacute;n de procesos. Se utiliza para enviar la salida de un comando al comando que llama, de manera muy similar a la sustituci&amp;oacute;n de comandos, pero con la diferencia de que la salida no se env&amp;iacute;a a trav&amp;eacute;s de argumentos de l&amp;iacute;nea de comando sino a trav&amp;eacute;s de una tuber&amp;iacute;a con nombre, con el nombre de archivo de la tuber&amp;iacute;a con nombre enviado como argumento. al programa de llamada. &lt;code&gt;psub&lt;/code&gt; combinado con una sustituci&amp;oacute;n de comando regular proporciona la misma funcionalidad.</target>
        </trans-unit>
        <trans-unit id="28861f1ca2bfa4eb42bfb98ba18be09e02df8f97" translate="yes" xml:space="preserve">
          <source>Some terminals use the &lt;code&gt;--bold&lt;/code&gt; escape sequence to switch to a brighter color set rather than increasing the weight of text.</source>
          <target state="translated">Algunas terminales usan la secuencia de escape &lt;code&gt;--bold&lt;/code&gt; para cambiar a un conjunto de colores m&amp;aacute;s brillantes en lugar de aumentar el peso del texto.</target>
        </trans-unit>
        <trans-unit id="81e4919181b85ff99cd6f65bd27d07c5ffe80e11" translate="yes" xml:space="preserve">
          <source>Some variables are only used in some modes, like when informative status is enabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4dd50f777b9a845d16edeb5ac29fc4998e7e176" translate="yes" xml:space="preserve">
          <source>Some variables, like &lt;code&gt;$PWD&lt;/code&gt;, only have one value. By convention, we talk about that variable's value, but we really mean its first (and only) value.</source>
          <target state="translated">Algunas variables, como &lt;code&gt;$PWD&lt;/code&gt; , solo tienen un valor. Por convenci&amp;oacute;n, hablamos del valor de esa variable, pero realmente nos referimos a su primer (y &amp;uacute;nico) valor.</target>
        </trans-unit>
        <trans-unit id="07ce7b74abb2c830c303e793b3a670b92a1ed421" translate="yes" xml:space="preserve">
          <source>Sometimes a variable has no value because it is undefined or empty, and it expands to nothing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75df37faa6697f888a3b911f52d0f98c1e11ff65" translate="yes" xml:space="preserve">
          <source>Sometimes commands take numbers directly as options, like &lt;code&gt;foo -55&lt;/code&gt;. To allow this one option spec can have the &lt;code&gt;#&lt;/code&gt; modifier so that any integer will be understood as this flag, and the last number will be given as its value (as if &lt;code&gt;=&lt;/code&gt; was used).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5495d80577d573036b499fb0c7884929ac34e4e" translate="yes" xml:space="preserve">
          <source>Sometimes features like &lt;a href=&quot;#expand&quot;&gt;parameter expansion&lt;/a&gt; and &lt;a href=&quot;#escapes&quot;&gt;character escapes&lt;/a&gt; get in the way. When that happens, you can use quotes, either single (&lt;code&gt;'&lt;/code&gt;) or double (&lt;code&gt;&quot;&lt;/code&gt;). Between single quotes, fish performs no expansions. Between double quotes, fish only performs &lt;a href=&quot;#expand-variable&quot;&gt;variable expansion&lt;/a&gt;. No other kind of expansion (including &lt;a href=&quot;#expand-brace&quot;&gt;brace expansion&lt;/a&gt; or parameter expansion) is performed, and escape sequences (for example, &lt;code&gt;\n&lt;/code&gt;) are ignored. Within quotes, whitespace is not used to separate arguments, allowing quoted arguments to contain spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8709ff84c2c20f30aea0078b8e4ce461f5bca70c" translate="yes" xml:space="preserve">
          <source>Sometimes features such as &lt;a href=&quot;#expand&quot;&gt;parameter expansion&lt;/a&gt; and &lt;a href=&quot;#escapes&quot;&gt;character escapes&lt;/a&gt; get in the way. When that happens, the user can write a parameter within quotes, either &amp;lsquo;&amp;rsquo;&lt;code&gt;(single quote) or&lt;/code&gt;&quot;&lt;code&gt;(double quote). There is one important difference between single quoted and double quoted strings: When using double quoted string, &amp;lt;a href=&quot;#expand-variable&quot;&amp;gt;variable expansion&amp;lt;/a&amp;gt; still takes place. Other than that, no other kind of expansion (including &amp;lt;a href=&quot;#expand-brace&quot;&amp;gt;brace expansion&amp;lt;/a&amp;gt; and parameter expansion) will take place, the parameter may contain spaces, and escape sequences are ignored. The only backslash escape accepted within single quotes is&lt;/code&gt;\'&lt;code&gt;, which escapes a single quote and&lt;/code&gt;\`, which escapes the backslash symbol. The only backslash escapes accepted within double quotes are &lt;code&gt;\&quot;&lt;/code&gt;, which escapes a double quote, &lt;code&gt;\$&lt;/code&gt;, which escapes a dollar character, &lt;code&gt;\&lt;/code&gt; followed by a newline, which deletes the backslash and the newline, and lastly &lt;code&gt;\\&lt;/code&gt;, which escapes the backslash symbol. Single quotes have no special meaning within double quotes and vice versa.</source>
          <target state="translated">A veces, funciones como la &lt;a href=&quot;#expand&quot;&gt;expansi&amp;oacute;n de par&amp;aacute;metros&lt;/a&gt; y las &lt;a href=&quot;#escapes&quot;&gt;fugas de caracteres se&lt;/a&gt; interponen. Cuando eso sucede, el usuario puede escribir un par&amp;aacute;metro entre comillas, ya sea &quot; &lt;code&gt;(single quote) or&lt;/code&gt; &quot; &lt;code&gt;(double quote). There is one important difference between single quoted and double quoted strings: When using double quoted string, &amp;lt;a href=&quot;#expand-variable&quot;&amp;gt;variable expansion&amp;lt;/a&amp;gt; still takes place. Other than that, no other kind of expansion (including &amp;lt;a href=&quot;#expand-brace&quot;&amp;gt;brace expansion&amp;lt;/a&amp;gt; and parameter expansion) will take place, the parameter may contain spaces, and escape sequences are ignored. The only backslash escape accepted within single quotes is&lt;/code&gt; \ ' &lt;code&gt;, which escapes a single quote and&lt;/code&gt; \ `, que escapa al s&amp;iacute;mbolo de barra invertida. Los &amp;uacute;nicos escapes de barra invertida aceptados entre comillas dobles son &lt;code&gt;\&quot;&lt;/code&gt; , que escapa a una comilla doble, &lt;code&gt;\$&lt;/code&gt; , que escapa a un car&amp;aacute;cter de d&amp;oacute;lar, &lt;code&gt;\&lt;/code&gt; seguido de una nueva l&amp;iacute;nea, que elimina la barra invertida y la nueva l&amp;iacute;nea, y por &amp;uacute;ltimo &lt;code&gt;\\&lt;/code&gt; , que escapa de la barra invertida s&amp;iacute;mbolo. Las comillas simples no tienen un significado especial dentro de las comillas dobles y viceversa.</target>
        </trans-unit>
        <trans-unit id="1c2aa93843ddd26ec4e00cb7588c5d09f093b293" translate="yes" xml:space="preserve">
          <source>Sometimes features such as &lt;a href=&quot;#expand&quot;&gt;parameter expansion&lt;/a&gt; and &lt;a href=&quot;#escapes&quot;&gt;character escapes&lt;/a&gt; get in the way. When that happens, the user can write a parameter within quotes, either &lt;code&gt;'&lt;/code&gt; (single quote) or &lt;code&gt;&quot;&lt;/code&gt; (double quote). There is one important difference between single quoted and double quoted strings: When using double quoted string, &lt;a href=&quot;#expand-variable&quot;&gt;variable expansion&lt;/a&gt; still takes place. Other than that, no other kind of expansion (including &lt;a href=&quot;#expand-brace&quot;&gt;brace expansion&lt;/a&gt; and parameter expansion) will take place, the parameter may contain spaces, and escape sequences are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbef0a968c656b4a5b1d7f9e05d2b88ddbbced0c" translate="yes" xml:space="preserve">
          <source>Sometimes it's necessary to access only some of the elements of a list, or some of the lines a command substitution outputs. Both allow this by providing a set of indices in square brackets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381611052ef691d56b1efd4f092108acac608354" translate="yes" xml:space="preserve">
          <source>Sometimes it's necessary to access only some of the elements of a list, or some of the lines a command substitution outputs. Both are possible in fish by writing a set of indices in brackets, like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be615fbc68f9e7bd311c7f45b00fbeddf065488" translate="yes" xml:space="preserve">
          <source>Sometimes this may be unwanted, especially that tokens can disappear after expansion. In those cases, you should double-quote variables - &lt;code&gt;echo &quot;$c&quot;word&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757ebf561cb13f732876f1ea411a1e9e3f80de54" translate="yes" xml:space="preserve">
          <source>Sometimes you need to have a variable available to an external command, often as a setting. For example many programs like &lt;code&gt;git&lt;/code&gt; or &lt;code&gt;man&lt;/code&gt; read the &lt;code&gt;$PAGER&lt;/code&gt; variable to figure out your preferred pager (the program that lets you scroll text). Other variables used like this include &lt;code&gt;$BROWSER&lt;/code&gt;, &lt;code&gt;$LANG&lt;/code&gt; (to configure your language) and &lt;code&gt;$PATH&lt;/code&gt;. You'll note these are written in ALLCAPS, but that's just a convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebf6318c30de678887503010959c6f407c73301" translate="yes" xml:space="preserve">
          <source>Sometimes you need to validate the option values. For example, that it is a valid integer within a specific range, or an ip address, or something entirely different. You can always do this after &lt;code&gt;argparse&lt;/code&gt; returns but you can also request that &lt;code&gt;argparse&lt;/code&gt; perform the validation by executing arbitrary fish script. To do so simply append an &lt;code&gt;!&lt;/code&gt; (exclamation-mark) then the fish script to be run. When that code is executed three vars will be defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a5f493ab8c9264182d38baab070e353e607061" translate="yes" xml:space="preserve">
          <source>Sometimes you want to pass the output of a command to another command that only accepts files. If it's just one file, you can usually just pass it via a pipe, like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9277421700b70459398cb0c365d578b50058cd1a" translate="yes" xml:space="preserve">
          <source>Sometimes, there is disagreement on the width. There are numerous causes and fixes for this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8c9b124d521027647b4f270cb2872798f9264e" translate="yes" xml:space="preserve">
          <source>Space</source>
          <target state="translated">Space</target>
        </trans-unit>
        <trans-unit id="95e14bad66e5b43a6bb7d92e4d00d181d18e3f47" translate="yes" xml:space="preserve">
          <source>Special Case: The Escape Character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5773d504847f59d4f28606344c751b42fcadfb09" translate="yes" xml:space="preserve">
          <source>Special Case: The escape Character</source>
          <target state="translated">Caso especial:El personaje de la fuga</target>
        </trans-unit>
        <trans-unit id="28dc52fcfc9145786fed85cff73226269b82a2c9" translate="yes" xml:space="preserve">
          <source>Special input functions</source>
          <target state="translated">Funciones especiales de entrada</target>
        </trans-unit>
        <trans-unit id="a6c32b7763c1deccd93080cf33efdb324072a965" translate="yes" xml:space="preserve">
          <source>Special variables</source>
          <target state="translated">Variables especiales</target>
        </trans-unit>
        <trans-unit id="8f06d35453aa3a9039c7bd098b2dc7f5924d81cb" translate="yes" xml:space="preserve">
          <source>Specific elements of a list can be selected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a234701d3553b3ee0fce9d93e7f64fadef5cac" translate="yes" xml:space="preserve">
          <source>Specifying your own completions is not difficult. To specify a completion, use the &lt;code&gt;complete&lt;/code&gt; command. &lt;code&gt;complete&lt;/code&gt; takes as a parameter the name of the command to specify a completion for. For example, to add a completion for the program &lt;code&gt;myprog&lt;/code&gt;, one would start the completion command with &lt;code&gt;complete -c myprog ...&lt;/code&gt;</source>
          <target state="translated">Especificar sus propias terminaciones no es dif&amp;iacute;cil. Para especificar una finalizaci&amp;oacute;n, use el comando &lt;code&gt;complete&lt;/code&gt; . &lt;code&gt;complete&lt;/code&gt; toma como par&amp;aacute;metro el nombre del comando para el que se especificar&amp;aacute; una finalizaci&amp;oacute;n. Por ejemplo, para agregar una finalizaci&amp;oacute;n para el programa &lt;code&gt;myprog&lt;/code&gt; , se iniciar&amp;iacute;a el comando de finalizaci&amp;oacute;n con &lt;code&gt;complete -c myprog ...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="097a1b990191aac51f47b5d492033829ffa1b1cb" translate="yes" xml:space="preserve">
          <source>Standard error (stderr) for writing errors and warnings. Defaults to writing to the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac6973627e50b5b3feef24cc873cca39ec65518" translate="yes" xml:space="preserve">
          <source>Standard error, FD 2, for writing errors and warnings, defaults to writing to the screen.</source>
          <target state="translated">Error estándar,FD 2,para errores de escritura y advertencias,por defecto se escribe en la pantalla.</target>
        </trans-unit>
        <trans-unit id="f0b1702763dda2703f7004c06fb0ee81c1751e99" translate="yes" xml:space="preserve">
          <source>Standard input (stdin) for reading. Defaults to reading from the keyboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8116e8803b0b4ccfe612ba1239d0a4c13eb0c484" translate="yes" xml:space="preserve">
          <source>Standard input, FD 0, for reading, defaults to reading from the keyboard.</source>
          <target state="translated">La entrada estándar,FD 0,para la lectura,por defecto es la lectura del teclado.</target>
        </trans-unit>
        <trans-unit id="c6f2c8146d25a95772c182950e401c6e7649f489" translate="yes" xml:space="preserve">
          <source>Standard output (stdout) for writing output. Defaults to writing to the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd08166eefe7793a02e0886b87576b866f11ba8d" translate="yes" xml:space="preserve">
          <source>Standard output, FD 1, for writing, defaults to writing to the screen.</source>
          <target state="translated">La salida estándar,FD 1,para la escritura,es por defecto la escritura en la pantalla.</target>
        </trans-unit>
        <trans-unit id="b3883f88eaf74aa505b11f01894c4909220af6a1" translate="yes" xml:space="preserve">
          <source>Standards</source>
          <target state="translated">Standards</target>
        </trans-unit>
        <trans-unit id="8f0c324bc7ae0630cb203b31d62e67e8a3bc6740" translate="yes" xml:space="preserve">
          <source>Starting and Exiting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806c8aeb75c45b416dcfcd215f384af2b2abda22" translate="yes" xml:space="preserve">
          <source>Startup (Where's .bashrc?)</source>
          <target state="translated">Inicio (¿Dónde está .bashrc?)</target>
        </trans-unit>
        <trans-unit id="d9d8d313fdc1a560ea8caf500b990c2077839155" translate="yes" xml:space="preserve">
          <source>Startup time and memory usage is improved, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411f94c6ca34e4478bca225615707da562686a1d" translate="yes" xml:space="preserve">
          <source>String manipulation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3cfed68ddc06bae90fd47f85fdeed65b5766e4e" translate="yes" xml:space="preserve">
          <source>Support for italics, dim, reverse, and other modes is not guaranteed in all terminal emulators. Fish attempts to determine if the terminal supports these modes even if the terminfo database may not be up-to-date.</source>
          <target state="translated">El soporte para cursiva,atenuación,inversión y otros modos no está garantizado en todos los emuladores de terminales.Fish intenta determinar si la terminal admite estos modos aunque la base de datos del terminfo no esté actualizada.</target>
        </trans-unit>
        <trans-unit id="d269dff6a5e6def876fa34f03bd1eb013ca33acd" translate="yes" xml:space="preserve">
          <source>Switches differ between commands and are documented in the manual page for each command. Some switches are common to most command though, for example '&lt;code&gt;--help&lt;/code&gt;' will usually display a help text, '&lt;code&gt;-i&lt;/code&gt;' will often turn on interactive prompting before taking action, while '&lt;code&gt;-f&lt;/code&gt;' will turn it off.</source>
          <target state="translated">Los conmutadores difieren entre los comandos y est&amp;aacute;n documentados en la p&amp;aacute;gina del manual de cada comando. Sin embargo, algunos conmutadores son comunes a la mayor&amp;iacute;a de los comandos, por ejemplo, ' &lt;code&gt;--help&lt;/code&gt; ' generalmente mostrar&amp;aacute; un texto de ayuda, ' &lt;code&gt;-i&lt;/code&gt; ' a menudo activar&amp;aacute; los mensajes interactivos antes de tomar acci&amp;oacute;n, mientras que ' &lt;code&gt;-f&lt;/code&gt; ' lo desactivar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="51354aa978a2468b119f16e69269a00d4d13fefd" translate="yes" xml:space="preserve">
          <source>Switches differ between commands and are usually documented on a command's manual page. There are some switches, however, that are common to most commands. For example, &lt;code&gt;--help&lt;/code&gt; will usually display a help text, &lt;code&gt;--version&lt;/code&gt; will usually display the command version, and &lt;code&gt;-i&lt;/code&gt; will often turn on interactive prompting before taking action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5eb6066faf764d428231e3c214c4d783bbf5bcc" translate="yes" xml:space="preserve">
          <source>Switching to fish?</source>
          <target state="translated">¿Cambiar a los peces?</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="d27b4fd727666f53e797902bf47550ba0a21184a" translate="yes" xml:space="preserve">
          <source>Syntax Highlighting</source>
          <target state="translated">Resaltando la sintaxis</target>
        </trans-unit>
        <trans-unit id="aaeb56c070a1b1a7f285d0c48b5a3e8940ab79cb" translate="yes" xml:space="preserve">
          <source>Syntax Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037fceb004812e2c76fd4ee125e5787960e7ee91" translate="yes" xml:space="preserve">
          <source>Syntax highlighting</source>
          <target state="translated">Resaltado de sintaxis</target>
        </trans-unit>
        <trans-unit id="a991dd19e2e4193f19d18e3b5e051fc3eb5c463d" translate="yes" xml:space="preserve">
          <source>Syntax highlighting variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418e9ee62ad6b7ba7264fdf5d0ee995e2e351045" translate="yes" xml:space="preserve">
          <source>Syntax overview</source>
          <target state="translated">Resumen de la sintaxis</target>
        </trans-unit>
        <trans-unit id="648056b93fe4233586db207ccd2bb7c37a24ed26" translate="yes" xml:space="preserve">
          <source>System-wide configuration files, where administrators can include initialization that should be run for all users on the system - similar to &lt;code&gt;/etc/profile&lt;/code&gt; for POSIX-style shells - in &lt;code&gt;$__fish_sysconf_dir&lt;/code&gt; (usually &lt;code&gt;/etc/fish/config.fish&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afcc6a38c449b540b7b14d03d1b1f6092ebcf158" translate="yes" xml:space="preserve">
          <source>System-wide configuration files, where administrators can include initialization that should be run for all users on the system - similar to &lt;code&gt;/etc/profile&lt;/code&gt; for POSIX-style shells - in &lt;code&gt;$__fish_sysconf_dir&lt;/code&gt; (usually &lt;code&gt;/etc/fish/config.fish&lt;/code&gt;);</source>
          <target state="translated">Archivos de configuraci&amp;oacute;n de todo el sistema, donde los administradores pueden incluir la inicializaci&amp;oacute;n que debe ejecutarse para todos los usuarios del sistema, similar a &lt;code&gt;/etc/profile&lt;/code&gt; para shells de estilo POSIX, en &lt;code&gt;$__fish_sysconf_dir&lt;/code&gt; (generalmente &lt;code&gt;/etc/fish/config.fish&lt;/code&gt; );</target>
        </trans-unit>
        <trans-unit id="c2c53d66948214258a26ca9ca845d7ac0c17f8e7" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="translated">T</target>
        </trans-unit>
        <trans-unit id="fe06eb6459c87f0e497ce1805f076f104bfecf78" translate="yes" xml:space="preserve">
          <source>Tab</source>
          <target state="translated">Tab</target>
        </trans-unit>
        <trans-unit id="1870d395ae4bdd7644d2246d47b66d22f565347b" translate="yes" xml:space="preserve">
          <source>Tab Completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87564ea1bf094f88395489e37aab98a53d8a3438" translate="yes" xml:space="preserve">
          <source>Tab Completions</source>
          <target state="translated">Completamiento de las pestañas</target>
        </trans-unit>
        <trans-unit id="eb8b89e8c468a2f2b0bf3f62ac7419a0270f3b4b" translate="yes" xml:space="preserve">
          <source>Tab completion</source>
          <target state="translated">Completar la pestaña</target>
        </trans-unit>
        <trans-unit id="2c4aae4ff3b4716ef2c5982376317648c9a9138a" translate="yes" xml:space="preserve">
          <source>Tab completion is a time saving feature of any modern shell. When you type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea2b2cc91429ba0736ea7b5a4dc7f2208abf174" translate="yes" xml:space="preserve">
          <source>Tab completion is one of the most time saving features of any modern shell. By tapping the tab key, the user asks &lt;code&gt;fish&lt;/code&gt; to guess the rest of the command or parameter that the user is currently typing. If &lt;code&gt;fish&lt;/code&gt; can only find one possible completion, &lt;code&gt;fish&lt;/code&gt; will write it out. If there is more than one completion, &lt;code&gt;fish&lt;/code&gt; will write out the longest prefix that all completions have in common. If the completions differ on the first character, a list of all possible completions is printed. The list features descriptions of the completions and if the list doesn't fit the screen, it is scrollable by using the arrow keys, the page up/page down keys, the tab key or the space bar.</source>
          <target state="translated">La finalizaci&amp;oacute;n de tabulaci&amp;oacute;n es una de las funciones que m&amp;aacute;s tiempo ahorra de cualquier shell moderno. Al hacer uso de la tecla de tabulaci&amp;oacute;n, el usuario pide &lt;code&gt;fish&lt;/code&gt; de adivinar el resto del comando o par&amp;aacute;metro que el usuario se encuentra actualmente escribiendo. Si los &lt;code&gt;fish&lt;/code&gt; solo pueden encontrar una posible terminaci&amp;oacute;n, los &lt;code&gt;fish&lt;/code&gt; lo escribir&amp;aacute;n. Si hay m&amp;aacute;s de una terminaci&amp;oacute;n, &lt;code&gt;fish&lt;/code&gt; escribir&amp;aacute; el prefijo m&amp;aacute;s largo que todas las terminaciones tienen en com&amp;uacute;n. Si las terminaciones difieren en el primer car&amp;aacute;cter, se imprime una lista de todas las terminaciones posibles. La lista presenta descripciones de las finalizaciones y, si la lista no se ajusta a la pantalla, se puede desplazar mediante las teclas de flecha, las teclas de avance / retroceso de p&amp;aacute;gina, la tecla de tabulaci&amp;oacute;n o la barra espaciadora.</target>
        </trans-unit>
        <trans-unit id="44e924f5f1b607dd0e4feccbc1d4d898f052a887" translate="yes" xml:space="preserve">
          <source>Tacklebox</source>
          <target state="translated">Tacklebox</target>
        </trans-unit>
        <trans-unit id="d1f6becf050c6a3d481d711b08a3cf1e80f4a45f" translate="yes" xml:space="preserve">
          <source>Technically, unix allows filenames with newlines, and this splits the &lt;code&gt;find&lt;/code&gt; output on newlines. If you want to avoid that, use find's &lt;code&gt;-print0&lt;/code&gt; option and &lt;a href=&quot;cmds/string#cmd-string-split0&quot;&gt;string split0&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c7839574383a9eaa3d82c610c455446f6121c0" translate="yes" xml:space="preserve">
          <source>Terminal Capability Detection</source>
          <target state="translated">Detección de la capacidad de la terminal</target>
        </trans-unit>
        <trans-unit id="066a694f7543574dbbd89c308f8361b862e2f6dc" translate="yes" xml:space="preserve">
          <source>Terminal Limitations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="f4db73f91ff31a9cc26abcce871824e94dd4c380" translate="yes" xml:space="preserve">
          <source>Test (&lt;code&gt;test&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;[[&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54b1fa82b8ecdc3fb07f7f9d29066e5997831e6" translate="yes" xml:space="preserve">
          <source>Tests the expression given and sets the exit status to 0 if true, and 1 if false. An expression is made up of one or more operators and their arguments.</source>
          <target state="translated">Prueba la expresión dada y establece el estado de salida en 0 si es verdadera,y 1 si es falsa.Una expresión se compone de uno o más operadores y sus argumentos.</target>
        </trans-unit>
        <trans-unit id="6b1fc2e3b816bc95de3d9b1753ab9aa1375ff7b8" translate="yes" xml:space="preserve">
          <source>That means if you run</source>
          <target state="translated">Eso significa que si corres</target>
        </trans-unit>
        <trans-unit id="1524134a04c0ceb49ab53ac5b3cc51239e9fa5c2" translate="yes" xml:space="preserve">
          <source>That means that commands like the above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0037e5dc6a5265afc3461906162967fa82bca2b" translate="yes" xml:space="preserve">
          <source>That means the argument will only be used for the option if you use it like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf65aaba6f80f192071085d55edadb89cb69226" translate="yes" xml:space="preserve">
          <source>That's the &lt;a href=&quot;cmds/fish_mode_prompt#cmd-fish-mode-prompt&quot;&gt;fish_mode_prompt&lt;/a&gt;. It is displayed by default when you've activated vi mode using &lt;code&gt;fish_vi_key_bindings&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff31576d4415b08aa68ec0f43f4c2956d9b998f4" translate="yes" xml:space="preserve">
          <source>The &quot;locale&quot; of a program is its set of language and regional settings. In UNIX, there are a few separate variables to control separate things - &lt;code&gt;LC_CTYPE&lt;/code&gt; defines the text encoding while &lt;code&gt;LC_TIME&lt;/code&gt; defines the time format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0484d8ce9d411754518c1cad07f4ac9deac98c" translate="yes" xml:space="preserve">
          <source>The &quot;~/.config&quot; part of this can be set via $XDG_CONFIG_HOME, that's just the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba0cf9aceb2fa7adface85cb83d889d4900b6d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmds/functions#cmd-functions&quot;&gt;functions&lt;/a&gt; builtin can show a function's current definition (and &lt;a href=&quot;cmds/type#cmd-type&quot;&gt;type&lt;/a&gt; will also do if given a function).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c95ce6c80c581cf82b67c951e68df6b74a32a98" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmds/switch#cmd-switch&quot;&gt;switch&lt;/a&gt; command is used to execute one of possibly many blocks of commands depending on the value of a string. See the documentation for &lt;a href=&quot;cmds/switch#cmd-switch&quot;&gt;switch&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb80306f9b817b1c0fb037539e70c68832e042f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/fish-shell/fish-shell/&quot;&gt;GitHub page&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92160f08bddffe06e4520887bdd5645514caf0af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/fish-shell/fish-shell/&quot;&gt;project GitHub page&lt;/a&gt;</source>
          <target state="translated">La &lt;a href=&quot;https://github.com/fish-shell/fish-shell/&quot;&gt;p&amp;aacute;gina del proyecto GitHub&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da142e6cb5a45841f62249b274bcc36ba693563d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;printf#cmd-printf&quot;&gt;printf&lt;/a&gt; command can do simple padding, for example &lt;code&gt;printf %10s\n&lt;/code&gt; works like &lt;code&gt;string pad -w10&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b65dd2b4e53dcf4e58c496b2ca6829ad905125" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;#&lt;/code&gt; must follow the short flag letter (if any), and other modifiers like &lt;code&gt;=&lt;/code&gt; are not allowed, except for &lt;code&gt;-&lt;/code&gt; (for backwards compatibility):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc348ddd7ad603b4b7e3a6d1134042f24b0ee0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$&lt;/code&gt; symbol can also be used multiple times, as a kind of &quot;dereference&quot; operator (the &lt;code&gt;*&lt;/code&gt; in C or C++), like in the following code:</source>
          <target state="translated">El s&amp;iacute;mbolo &lt;code&gt;$&lt;/code&gt; tambi&amp;eacute;n se puede usar varias veces, como una especie de operador de &quot;desreferencia&quot; (el &lt;code&gt;*&lt;/code&gt; en C o C ++), como en el siguiente c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="7e4fc8fc89e59cd9ece4a187b16054d89db8031c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt; operators for comparing strings are not implemented.</source>
          <target state="translated">Los operadores &lt;code&gt;&amp;lt;&lt;/code&gt; y &lt;code&gt;&amp;gt;&lt;/code&gt; para comparar cadenas no est&amp;aacute;n implementados.</target>
        </trans-unit>
        <trans-unit id="65fe6102162982a331ea3f92362fbdf8528333d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--&lt;/code&gt; argument is required. You do not have to include any arguments after the &lt;code&gt;--&lt;/code&gt; but you must include the &lt;code&gt;--&lt;/code&gt;. For example, this is acceptable:</source>
          <target state="translated">Se requiere el argumento &lt;code&gt;--&lt;/code&gt; . No tiene que incluir ning&amp;uacute;n argumento despu&amp;eacute;s del &lt;code&gt;--&lt;/code&gt; pero debe incluir el &lt;code&gt;--&lt;/code&gt; . Por ejemplo, esto es aceptable:</target>
        </trans-unit>
        <trans-unit id="0c906c7f83627c97b083a6eb5c63248805d8c516" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--&lt;/code&gt; here stops &lt;code&gt;contains&lt;/code&gt; from treating &lt;code&gt;-q&lt;/code&gt; to an option to itself. Instead it treats it as a normal string to check.</source>
          <target state="translated">El &lt;code&gt;--&lt;/code&gt; aqu&amp;iacute; se detiene &lt;code&gt;contains&lt;/code&gt; de tratar &lt;code&gt;-q&lt;/code&gt; a una opci&amp;oacute;n para s&amp;iacute; mismo. En su lugar, lo trata como una cadena normal para verificar.</target>
        </trans-unit>
        <trans-unit id="759c9b9de6e7b693bbc543cee2edb183ec65e7a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-n&lt;/code&gt; is so empty elements are removed like POSIX shells would do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88d441c07c1b7086b4b120f0e1995c32e1789db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-q&lt;/code&gt;, &lt;code&gt;-p&lt;/code&gt;, &lt;code&gt;-t&lt;/code&gt; and &lt;code&gt;-P&lt;/code&gt; flags (and their long flag aliases) are mutually exclusive. Only one can be specified at a time.</source>
          <target state="translated">Los indicadores &lt;code&gt;-q&lt;/code&gt; , &lt;code&gt;-p&lt;/code&gt; , &lt;code&gt;-t&lt;/code&gt; y &lt;code&gt;-P&lt;/code&gt; (y sus alias de indicadores largos) son mutuamente excluyentes. Solo se puede especificar uno a la vez.</target>
        </trans-unit>
        <trans-unit id="59f023c5b3800bfdb8a65685dca44b899595aa05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-w&lt;/code&gt; or &lt;code&gt;--wraps&lt;/code&gt; options causes the specified command to inherit completions from another command, &quot;wrapping&quot; the other command. The wrapping command can also have additional completions. A command can wrap multiple commands, and wrapping is transitive: if A wraps B, and B wraps C, then A automatically inherits all of C's completions. Wrapping can be removed using the &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; options. Wrapping only works for completions specified with &lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--command&lt;/code&gt; and are ignored when specifying completions with &lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c58a8949ca637e3657d904f90d0683f9b8a4548" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-w&lt;/code&gt; or &lt;code&gt;--wraps&lt;/code&gt; options causes the specified command to inherit completions from another command. The inheriting command is said to &quot;wrap&quot; the inherited command. The wrapping command may have its own completions in addition to inherited ones. A command may wrap multiple commands, and wrapping is transitive: if A wraps B, and B wraps C, then A automatically inherits all of C's completions. Wrapping can be removed using the &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; options. Note that wrapping only works for completions specified with &lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--command&lt;/code&gt; and are ignored when specifying completions with &lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--path&lt;/code&gt;.</source>
          <target state="translated">Las opciones &lt;code&gt;-w&lt;/code&gt; o &lt;code&gt;--wraps&lt;/code&gt; hacen que el comando especificado herede las finalizaciones de otro comando. Se dice que el comando heredado &quot;envuelve&quot; el comando heredado. El comando de envoltura puede tener sus propias terminaciones adem&amp;aacute;s de las heredadas. Un comando puede envolver varios comandos, y el ajuste es transitivo: si A envuelve a B y B envuelve a C, entonces A hereda autom&amp;aacute;ticamente todas las terminaciones de C. La envoltura se puede eliminar usando las opciones &lt;code&gt;-e&lt;/code&gt; o &lt;code&gt;--erase&lt;/code&gt; . Tenga en cuenta que el ajuste solo funciona para las terminaciones especificadas con &lt;code&gt;-c&lt;/code&gt; o &lt;code&gt;--command&lt;/code&gt; y se ignoran al especificar las terminaciones con &lt;code&gt;-p&lt;/code&gt; o &lt;code&gt;--path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3779bf48914bcae0cdcc953ecc413edee9ed2fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VARNAME&lt;/code&gt; was local to the for block in releases prior to 3.0.0. This means that if you did something like this:</source>
          <target state="translated">El &lt;code&gt;VARNAME&lt;/code&gt; era local a la de bloque en versiones anteriores a 3.0.0. Esto significa que si hiciste algo como esto:</target>
        </trans-unit>
        <trans-unit id="a5fbe884c0818c473736504e3a3f15c774e6b13f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;apt-get&lt;/code&gt;, &lt;code&gt;rpm&lt;/code&gt; and &lt;code&gt;yum&lt;/code&gt; commands show installed or installable packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3409d273e3db5ef8ddc4ea273fbbb872d656c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;apt-get&lt;/code&gt;, &lt;code&gt;rpm&lt;/code&gt; and &lt;code&gt;yum&lt;/code&gt; commands use all installed packages as completions.</source>
          <target state="translated">Los comandos &lt;code&gt;apt-get&lt;/code&gt; , &lt;code&gt;rpm&lt;/code&gt; y &lt;code&gt;yum&lt;/code&gt; usan todos los paquetes instalados como finalizaciones.</target>
        </trans-unit>
        <trans-unit id="a176ce24ca6419e62567415a12b97aacd6da428c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;echo $flounder &amp;gt;&amp;amp;&lt;/code&gt; is the first process, &lt;code&gt;less&lt;/code&gt; the second and &lt;code&gt;and echo $catfish&lt;/code&gt; the third.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c885ad47f98ee1d2fa7d61aaf2be5914055c4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;end&lt;/code&gt; command does not change the current exit status. Instead, the status after it will be the status returned by the most recent command.</source>
          <target state="translated">El comando de &lt;code&gt;end&lt;/code&gt; no cambia el estado de salida actual. En cambio, el estado posterior ser&amp;aacute; el estado devuelto por el comando m&amp;aacute;s reciente.</target>
        </trans-unit>
        <trans-unit id="cd7f0141ffadda545e17fb22c15ec53f8466fcc1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fish&lt;/code&gt; editor features copy and paste, a &lt;a href=&quot;#history-search&quot;&gt;searchable history&lt;/a&gt; and many editor functions that can be bound to special keyboard shortcuts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb7ec726c85b79feb29910ee5250baa8513a66f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fish&lt;/code&gt; editor features copy and paste, a searchable history and many editor functions that can be bound to special keyboard shortcuts.</source>
          <target state="translated">El editor de &lt;code&gt;fish&lt;/code&gt; presenta copiar y pegar, un historial de b&amp;uacute;squeda y muchas funciones del editor que pueden vincularse a atajos de teclado especiales.</target>
        </trans-unit>
        <trans-unit id="c64f6cc8af3f868e2009e8fec92b3aa89f2848f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fish&lt;/code&gt; implementation of &lt;code&gt;ulimit&lt;/code&gt; should behave identically to the implementation in bash, except for these differences:</source>
          <target state="translated">La implementaci&amp;oacute;n de &lt;code&gt;fish&lt;/code&gt; de &lt;code&gt;ulimit&lt;/code&gt; debe comportarse de manera id&amp;eacute;ntica a la implementaci&amp;oacute;n en bash, excepto por estas diferencias:</target>
        </trans-unit>
        <trans-unit id="07e5eef3af7a89848f46c551cd20fd456ad73c6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fish_git_prompt&lt;/code&gt; function displays information about the current git repository, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129eb955355c8f7758d77f2cac61f370f6205e59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fish_mode_prompt&lt;/code&gt; function outputs the mode indicator for use in vi-mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e49a3e07554395afbb4e275a3cd442c1c677ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fish_prompt&lt;/code&gt; function is executed when the prompt is to be shown, and the output is used as a prompt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca964de959867d14ed3a9f8b9974f6eaea7d9c59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fish_title&lt;/code&gt; function is executed before and after a new command is executed or put into the foreground and the output is used as a titlebar message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b7c153dde9c57207852c321a7476ca5435e545" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fish_vcs_prompt&lt;/code&gt; function displays information about the current version control system (VCS) repository, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca816a872a077d36b73d0af3eade298496b9cd5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fish_vi_cursor&lt;/code&gt; function will be used to change the cursor's shape depending on the mode in supported terminals. The following snippet can be used to manually configure cursors after enabling vi-mode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67113321177587b92e33339a6cdbfbb714ba38b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format&lt;/code&gt; argument is re-used as many times as necessary to convert all of the given arguments. If a format specifier is not appropriate for the given argument, an error is printed. For example, &amp;lsquo;printf &amp;rsquo;d' &quot;102.234&quot;` produces an error, as &quot;102.234&quot; cannot be formatted as an integer.</source>
          <target state="translated">El argumento de &lt;code&gt;format&lt;/code&gt; o se reutiliza tantas veces como sea necesario para convertir todos los argumentos dados. Si un especificador de formato no es apropiado para el argumento dado, se imprime un error. Por ejemplo, 'printf' d '&quot;102.234&quot; `produce un error, ya que&quot; 102.234 &quot;no se puede formatear como un n&amp;uacute;mero entero.</target>
        </trans-unit>
        <trans-unit id="fa359d649d24e5335af9a0db3ad3244dff9a6be4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format&lt;/code&gt; argument is re-used as many times as necessary to convert all of the given arguments. If a format specifier is not appropriate for the given argument, an error is printed. For example, &lt;code&gt;printf '%d' &quot;102.234&quot;&lt;/code&gt; produces an error, as &quot;102.234&quot; cannot be formatted as an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fe28da968ad020cc831ee02008bdf7ad25078a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format&lt;/code&gt; argument is re-used as many times as necessary to convert all of the given arguments. So &lt;code&gt;printf %s\n flounder catfish clownfish shark&lt;/code&gt; will print four lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f23a465dd8d76eebf980544d18d2de2601f2be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;make&lt;/code&gt; program uses all targets in the Makefile in the current directory as completions.</source>
          <target state="translated">El programa &lt;code&gt;make&lt;/code&gt; utiliza todos los destinos del Makefile del directorio actual como finalizaciones.</target>
        </trans-unit>
        <trans-unit id="08ddda0f4e3d5dbda6ef1fb82291b1b27f800ddd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mount&lt;/code&gt; command uses all mount points specified in fstab as completions.</source>
          <target state="translated">El comando &lt;code&gt;mount&lt;/code&gt; usa todos los puntos de montaje especificados en fstab como terminaciones.</target>
        </trans-unit>
        <trans-unit id="bac670339d33af9a7bab7a0aa6c9bff4de41f823" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;open&lt;/code&gt; command uses the MIME type database and the &lt;code&gt;.desktop&lt;/code&gt; files used by Gnome and KDE to identify filetypes and default actions. If at least one of these environments is installed, but the open command is not working, this probably means that the relevant files are installed in a non-standard location. Consider &lt;a href=&quot;index#more-help&quot;&gt;asking for more help&lt;/a&gt;.</source>
          <target state="translated">El comando &lt;code&gt;open&lt;/code&gt; usa la base de datos de tipo MIME y &lt;code&gt;.desktop&lt;/code&gt; archivos .desktop usados ​​por Gnome y KDE para identificar tipos de archivos y acciones predeterminadas. Si al menos uno de estos entornos est&amp;aacute; instalado, pero el comando de apertura no funciona, esto probablemente significa que los archivos relevantes est&amp;aacute;n instalados en una ubicaci&amp;oacute;n no est&amp;aacute;ndar. Considere &lt;a href=&quot;index#more-help&quot;&gt;pedir m&amp;aacute;s ayuda&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="671a2f0e6604938b59263b838275bea0e131dc63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;open&lt;/code&gt; command uses the MIME type database and the &lt;code&gt;.desktop&lt;/code&gt; files used by Gnome and KDE to identify filetypes and default actions. If at least one of these environments is installed, but the open command is not working, this probably means that the relevant files are installed in a non-standard location. Consider &lt;a href=&quot;index#more-help&quot;&gt;asking for more help&lt;/a&gt;. .. _faq-ssh-interactive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee971b433f3902a987e68857661a14613f57897" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;or return&lt;/code&gt; means that the function returns &lt;code&gt;argparse&lt;/code&gt;'s status if it failed, so if it goes on &lt;code&gt;argparse&lt;/code&gt; succeeded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041e0c82c73f6cce25f8c5fa37958883f066722d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pushd&lt;/code&gt; function adds &lt;code&gt;DIRECTORY&lt;/code&gt; to the top of the &lt;a href=&quot;../index#directory-stack&quot;&gt;directory stack&lt;/a&gt; and makes it the current working directory. &lt;a href=&quot;popd#cmd-popd&quot;&gt;popd&lt;/a&gt; will pop it off and return to the original directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12db9bbc519582e7296e06534b51717da7e239b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pushd&lt;/code&gt; function adds &lt;code&gt;DIRECTORY&lt;/code&gt; to the top of the directory stack and makes it the current working directory. &lt;a href=&quot;#popd&quot;&gt;&lt;code&gt;popd&lt;/code&gt;&lt;/a&gt; will pop it off and return to the original directory.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;pushd&lt;/code&gt; agrega &lt;code&gt;DIRECTORY&lt;/code&gt; a la parte superior de la pila de directorios y lo convierte en el directorio de trabajo actual. &lt;a href=&quot;#popd&quot;&gt; &lt;code&gt;popd&lt;/code&gt; lo&lt;/a&gt; sacar&amp;aacute; y volver&amp;aacute; al directorio original.</target>
        </trans-unit>
        <trans-unit id="232591d70cc81d9e2252f02a7f0ab108b8f2be53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pushd&lt;/code&gt; function adds &lt;code&gt;DIRECTORY&lt;/code&gt; to the top of the directory stack and makes it the current working directory. &lt;a href=&quot;popd#cmd-popd&quot;&gt;popd&lt;/a&gt; will pop it off and return to the original directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a826eafcc5f8080c789ef8d78318660a9727e115" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; command supported the &lt;code&gt;-m&lt;/code&gt; and &lt;code&gt;--mode-name&lt;/code&gt; flags in fish versions prior to 2.7.0 to specify an alternative read history file. Those flags are now deprecated and ignored. Instead, set the &lt;code&gt;fish_history&lt;/code&gt; variable to specify a history session ID. That will affect both the &lt;code&gt;read&lt;/code&gt; history file and the fish command history file. You can set it to an empty string to specify that no history should be read or written. This is useful for presentations where you do not want possibly private or sensitive history to be exposed to the audience but do want history relevant to the presentation to be available.</source>
          <target state="translated">El comando de &lt;code&gt;read&lt;/code&gt; admit&amp;iacute;a los &lt;code&gt;--mode-name&lt;/code&gt; &lt;code&gt;-m&lt;/code&gt; y --mode-name en las versiones Fish anteriores a la 2.7.0 para especificar un archivo de historial de lectura alternativo. Esas banderas ahora est&amp;aacute;n en desuso y se ignoran. En su lugar, configure la variable &lt;code&gt;fish_history&lt;/code&gt; para especificar un ID de sesi&amp;oacute;n de historial. Eso afectar&amp;aacute; tanto al archivo de historial de &lt;code&gt;read&lt;/code&gt; como al archivo de historial de comandos de pesca. Puede establecerlo en una cadena vac&amp;iacute;a para especificar que no se debe leer ni escribir ning&amp;uacute;n historial. Esto es &amp;uacute;til para presentaciones en las que no desea que se exponga a la audiencia un historial posiblemente privado o sensible, pero desea que est&amp;eacute; disponible el historial relevante para la presentaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7fcdb96d7e5417d911e99a0401becd905a30865f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rpm&lt;/code&gt; command has several different modes. If the &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; flag has been specified, &lt;code&gt;rpm&lt;/code&gt; should delete one or more packages, in which case several switches related to deleting packages are valid, like the &lt;code&gt;nodeps&lt;/code&gt; switch.</source>
          <target state="translated">El comando &lt;code&gt;rpm&lt;/code&gt; tiene varios modos diferentes. Si se ha especificado el indicador &lt;code&gt;-e&lt;/code&gt; o &lt;code&gt;--erase&lt;/code&gt; , &lt;code&gt;rpm&lt;/code&gt; debe eliminar uno o m&amp;aacute;s paquetes, en cuyo caso son v&amp;aacute;lidos varios modificadores relacionados con la eliminaci&amp;oacute;n de paquetes, como el &lt;code&gt;nodeps&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a790e8c78ea9f158b99ff23d36fc572c40897097" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set&lt;/code&gt; command above used quotes to ensure that &lt;code&gt;Mister Noodle&lt;/code&gt; was one argument. If it had been two arguments, then &lt;code&gt;name&lt;/code&gt; would have been a list of length 2. In fact, all variables in &lt;code&gt;fish&lt;/code&gt; are really lists, that can contain any number of values, or none at all.</source>
          <target state="translated">El comando &lt;code&gt;set&lt;/code&gt; anterior us&amp;oacute; comillas para asegurar que &lt;code&gt;Mister Noodle&lt;/code&gt; fuera un argumento. Si hubiera sido dos argumentos, entonces el &lt;code&gt;name&lt;/code&gt; habr&amp;iacute;a sido una lista de longitud 2. De hecho, todas las variables en &lt;code&gt;fish&lt;/code&gt; son realmente listas, que pueden contener cualquier n&amp;uacute;mero de valores, o ninguno en absoluto.</target>
        </trans-unit>
        <trans-unit id="4fca0ef2366ca80fbd9b2829024455a0201bdf5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set&lt;/code&gt; command above used quotes to ensure that &lt;code&gt;Mister Noodle&lt;/code&gt; was one argument. If it had been two arguments, then &lt;code&gt;name&lt;/code&gt; would have been a list of length 2. In fact, all variables in fish are really lists, that can contain any number of values, or none at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4c01874451687405926cb86a3846c32a777675" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set_color&lt;/code&gt; command uses the terminfo database to look up how to change terminal colors on whatever terminal is in use. Some systems have old and incomplete terminfo databases, and lack color information for terminals that support it. Fish assumes that all terminals can use the [ANSI X3.64](&lt;a href=&quot;https://en.wikipedia.org/wiki/ANSI_escape_code&quot;&gt;https://en.wikipedia.org/wiki/ANSI_escape_code&lt;/a&gt;) escape sequences if the terminfo definition indicates a color below 16 is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a21bdde776c698d3de37f05072833e8526edd9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set_color&lt;/code&gt; command uses the terminfo database to look up how to change terminal colors on whatever terminal is in use. Some systems have old and incomplete terminfo databases, and may lack color information for terminals that support it. Fish will assume that all terminals can use the &lt;a href=&quot;https://en.wikipedia.org/wiki/ANSI_escape_code&quot;&gt;ANSI X3.64&lt;/a&gt; escape sequences if the terminfo definition indicates a color below 16 is not supported.</source>
          <target state="translated">El comando &lt;code&gt;set_color&lt;/code&gt; usa la base de datos terminfo para buscar c&amp;oacute;mo cambiar los colores de la terminal en cualquier terminal que est&amp;eacute; en uso. Algunos sistemas tienen bases de datos terminfo antiguas e incompletas, y pueden carecer de informaci&amp;oacute;n de color para los terminales que lo admitan. Fish asumir&amp;aacute; que todos los terminales pueden utilizar las secuencias de escape &lt;a href=&quot;https://en.wikipedia.org/wiki/ANSI_escape_code&quot;&gt;ANSI X3.64&lt;/a&gt; si la definici&amp;oacute;n de terminfo indica que no se admite un color inferior a 16.</target>
        </trans-unit>
        <trans-unit id="570ae270bf32027068dbc7611cc21eacc745b07d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ssh&lt;/code&gt; command uses all hosts that are stored in the known_hosts file as completions. (See the ssh documentation for more information)</source>
          <target state="translated">El comando &lt;code&gt;ssh&lt;/code&gt; utiliza todos los hosts almacenados en el archivo known_hosts como finalizaciones. (Consulte la documentaci&amp;oacute;n de ssh para obtener m&amp;aacute;s informaci&amp;oacute;n)</target>
        </trans-unit>
        <trans-unit id="8edee39da4cf69aebe1d3841fdc9bb385090a9e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;su&lt;/code&gt; command shows the users on the system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c28ed2787aacc681a7fe21c43d77f6911bb6d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;su&lt;/code&gt; command takes any username as an argument. Usernames are given as the first colon-separated field in the file /etc/passwd. This can be specified as:</source>
          <target state="translated">El comando &lt;code&gt;su&lt;/code&gt; toma cualquier nombre de usuario como argumento. Los nombres de usuario se dan como el primer campo separado por dos puntos en el archivo / etc / passwd. Esto se puede especificar como:</target>
        </trans-unit>
        <trans-unit id="d0c2e5dc87ea547203543a3113293b01834dc317" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;su&lt;/code&gt; command uses all users on the system as completions.</source>
          <target state="translated">El comando &lt;code&gt;su&lt;/code&gt; utiliza a todos los usuarios del sistema como finalizaciones.</target>
        </trans-unit>
        <trans-unit id="1694f288fba89e086b666fb0fa0aa6f5ed0e92d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;switch&lt;/code&gt; command is used to execute one of possibly many blocks of commands depending on the value of a string. See the documentation for &lt;a href=&quot;cmds/switch#cmd-switch&quot;&gt;switch&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2d93e5ce9c99380286aea119eb1c4d811d5e80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;switch&lt;/code&gt; command is used to execute one of possibly many blocks of commands depending on the value of a string. See the documentation for &lt;a href=&quot;commands#switch&quot;&gt;switch&lt;/a&gt; for more information.</source>
          <target state="translated">El comando de &lt;code&gt;switch&lt;/code&gt; se utiliza para ejecutar uno de posiblemente muchos bloques de comandos, dependiendo del valor de una cadena. Consulte la documentaci&amp;oacute;n del &lt;a href=&quot;commands#switch&quot;&gt;conmutador&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="47ad27700014770c354049370500a3fdcb1e0c70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;~&lt;/code&gt; (tilde) character at the beginning of a parameter, followed by a username, is expanded into the home directory of the specified user. A lone &lt;code&gt;~&lt;/code&gt;, or a &lt;code&gt;~&lt;/code&gt; followed by a slash, is expanded into the home directory of the process owner.</source>
          <target state="translated">El car&amp;aacute;cter &lt;code&gt;~&lt;/code&gt; (tilde) al principio de un par&amp;aacute;metro, seguido de un nombre de usuario, se expande en el directorio de inicio del usuario especificado. Un &lt;code&gt;~&lt;/code&gt; solitario , o un &lt;code&gt;~&lt;/code&gt; seguido de una barra, se expande en el directorio de inicio del propietario del proceso.</target>
        </trans-unit>
        <trans-unit id="08bf891aa7a0590874350d3510cb5b3148d6f765" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;~&lt;/code&gt; (tilde) character at the beginning of a parameter, followed by a username, is expanded into the home directory of the specified user. A lone &lt;code&gt;~&lt;/code&gt;, or a &lt;code&gt;~&lt;/code&gt; followed by a slash, is expanded into the home directory of the process owner:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265a9c81a69231c01219582e938c14d98984c415" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;br&lt;/em&gt;- (as in 'bright') forms are full-brightness variants of the 8 standard-brightness colors on many terminals. &lt;em&gt;brblack&lt;/em&gt; has higher brightness than &lt;em&gt;black&lt;/em&gt; - towards gray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7f7b1a4ad16744a0f606de485b9dcac150e6e6" translate="yes" xml:space="preserve">
          <source>The IRC channel, #fish on &lt;code&gt;irc.oftc.net&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bc67c4cc6d1500fe78dbf824dcd5a05daabcef" translate="yes" xml:space="preserve">
          <source>The Internet Relay Chat channel, #fish on &lt;code&gt;irc.oftc.net&lt;/code&gt;</source>
          <target state="translated">El canal de Internet Relay Chat, #fish en &lt;code&gt;irc.oftc.net&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38912f78e93626e5fa47b637ba81937a676623d5" translate="yes" xml:space="preserve">
          <source>The advantage is that you don't have to go mucking around in files: just run this once at the command line, and it will affect the current session and all future instances too. (Note: you should NOT add this line to &lt;code&gt;config.fish&lt;/code&gt;. If you do, the variable will get longer each time you run fish!)</source>
          <target state="translated">La ventaja es que no tiene que perder el tiempo en archivos: simplemente ejecute esto una vez en la l&amp;iacute;nea de comando y afectar&amp;aacute; la sesi&amp;oacute;n actual y todas las instancias futuras tambi&amp;eacute;n. (Nota: NO debe agregar esta l&amp;iacute;nea a &lt;code&gt;config.fish&lt;/code&gt; . Si lo hace, la variable se alargar&amp;aacute; cada vez que ejecute fish!)</target>
        </trans-unit>
        <trans-unit id="92a877b936875a7b135f437c779582ab970c90cc" translate="yes" xml:space="preserve">
          <source>The advantage is that you don't have to go mucking around in files: just run this once at the command line, and it will affect the current session and all future instances too. You can also add this line to &lt;a href=&quot;#tut-config&quot;&gt;config.fish&lt;/a&gt;, as it only adds the component if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5b6fa2b60fb7b30f834fa877a85006d71c86dd" translate="yes" xml:space="preserve">
          <source>The block can be removed. Any events which triggered while the block was in place will then be delivered.</source>
          <target state="translated">El bloqueo puede ser removido.Cualquier evento que se haya disparado mientras el bloque estaba en su lugar será entregado.</target>
        </trans-unit>
        <trans-unit id="bb7debcb6ad4bd52a3602c3c576ba4ce44391ac4" translate="yes" xml:space="preserve">
          <source>The block is unconditionally executed. &lt;code&gt;begin; ...; end&lt;/code&gt; is equivalent to &lt;code&gt;if true; ...; end&lt;/code&gt;.</source>
          <target state="translated">El bloque se ejecuta incondicionalmente. &lt;code&gt;begin; ...; end&lt;/code&gt; es equivalente a &lt;code&gt;if true; ...; end&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b145eb51c1a7060a787ad20b1384352c3498a3fe" translate="yes" xml:space="preserve">
          <source>The character has an &quot;ambiguous&quot; width and fish thinks that means a width of X while your terminal thinks it's Y. In this case you either need to change your terminal's configuration or set $fish_ambiguous_width to the correct value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11122cc3bb4128a26d73e8038e6c49944b1ac492" translate="yes" xml:space="preserve">
          <source>The character is an emoji and the host system only supports Unicode 8, while you are running the terminal on a system that uses Unicode &amp;gt;= 9. In this case set $fish_emoji_width to 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d8e6504c0343fb9e99dc0c0584d6abb0401ef4" translate="yes" xml:space="preserve">
          <source>The colors used by fish for syntax highlighting can be configured by changing the values of a various variables. The value of these variables can be one of the colors accepted by the &lt;a href=&quot;cmds/set_color#cmd-set-color&quot;&gt;set_color&lt;/a&gt; command. The &lt;code&gt;--bold&lt;/code&gt; or &lt;code&gt;-b&lt;/code&gt; switches accepted by &lt;code&gt;set_color&lt;/code&gt; are also accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cb93e79eb59eed4f3c4bd5e54faad96127309f" translate="yes" xml:space="preserve">
          <source>The colors used by fish for syntax highlighting can be configured by changing the values of a various variables. The value of these variables can be one of the colors accepted by the &lt;a href=&quot;commands#set_color&quot;&gt;set_color&lt;/a&gt; command. The &lt;code&gt;--bold&lt;/code&gt; or &lt;code&gt;-b&lt;/code&gt; switches accepted by &lt;code&gt;set_color&lt;/code&gt; are also accepted.</source>
          <target state="translated">Los colores utilizados por Fish para resaltar la sintaxis se pueden configurar cambiando los valores de varias variables. El valor de estas variables puede ser uno de los colores aceptados por el comando &lt;a href=&quot;commands#set_color&quot;&gt;set_color&lt;/a&gt; . Tambi&amp;eacute;n se aceptan los modificadores &lt;code&gt;--bold&lt;/code&gt; o &lt;code&gt;-b&lt;/code&gt; aceptados por &lt;code&gt;set_color&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eebbaa522fd61caa5f13112c46410239f8902654" translate="yes" xml:space="preserve">
          <source>The command &lt;code&gt;cat foo.txt&lt;/code&gt; sends the contents of &lt;code&gt;foo.txt&lt;/code&gt; to stdout. This output is provided as input for the &lt;code&gt;head&lt;/code&gt; program, which prints the first 10 lines of its input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d325ad2d19b4840c597f9597e729e6423f6e0a" translate="yes" xml:space="preserve">
          <source>The command history is stored in the file &lt;code&gt;~/.local/share/fish/fish_history&lt;/code&gt; (or &lt;code&gt;$XDG_DATA_HOME/fish/fish_history&lt;/code&gt; if that variable is set) by default. However, you can set the &lt;code&gt;fish_history&lt;/code&gt; environment variable to change the name of the history session (resulting in a &lt;code&gt;&amp;lt;session&amp;gt;_history&lt;/code&gt; file); both before starting the shell and while the shell is running.</source>
          <target state="translated">El historial de comandos se almacena en el archivo &lt;code&gt;~/.local/share/fish/fish_history&lt;/code&gt; (o &lt;code&gt;$XDG_DATA_HOME/fish/fish_history&lt;/code&gt; si esa variable est&amp;aacute; configurada) de forma predeterminada. Sin embargo, puede configurar la variable de entorno &lt;code&gt;fish_history&lt;/code&gt; para cambiar el nombre de la sesi&amp;oacute;n del historial (lo que da como resultado un archivo &lt;code&gt;&amp;lt;session&amp;gt;_history&lt;/code&gt; ); tanto antes de iniciar el shell como mientras se ejecuta el shell.</target>
        </trans-unit>
        <trans-unit id="ad9471aeb00cd7dbf667ba8000bfffbdd6168599" translate="yes" xml:space="preserve">
          <source>The completions shipped with fish, usually installed in &lt;code&gt;/usr/share/fish/completions&lt;/code&gt;; and</source>
          <target state="translated">Las terminaciones enviadas con pescado, generalmente instaladas en &lt;code&gt;/usr/share/fish/completions&lt;/code&gt; ; y</target>
        </trans-unit>
        <trans-unit id="a5bac7b22b091ed7d9ec59183c217ba0ddc57510" translate="yes" xml:space="preserve">
          <source>The current working directory can be displayed with the &lt;a href=&quot;cmds/pwd#cmd-pwd&quot;&gt;pwd&lt;/a&gt; command, or the &lt;code&gt;$PWD&lt;/code&gt;&lt;a href=&quot;#variables-special&quot;&gt;special variable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3296dffab7060413e9666f968221326b4a22e5" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;fish_mode_prompt&lt;/code&gt; function will output indicators about the current Vi editor mode displayed to the left of the regular prompt. Define your own function to customize the appearance of the mode indicator. The &lt;code&gt;$fish_bind_mode variable&lt;/code&gt; can be used to determine the current mode. It will be one of &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;replace_one&lt;/code&gt;, or &lt;code&gt;visual&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526642f1e62598bbea0ecea2aededa98b233083a" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;fish_mode_prompt&lt;/code&gt; function will output indicators about the current Vi editor mode displayed to the left of the regular prompt. Define your own function to customize the appearance of the mode indicator. You can also define an empty &lt;code&gt;fish_mode_prompt&lt;/code&gt; function to remove the Vi mode indicators. The &lt;code&gt;$fish_bind_mode variable&lt;/code&gt; can be used to determine the current mode. It will be one of &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;replace_one&lt;/code&gt;, or &lt;code&gt;visual&lt;/code&gt;.</source>
          <target state="translated">La funci&amp;oacute;n predeterminada &lt;code&gt;fish_mode_prompt&lt;/code&gt; generar&amp;aacute; indicadores sobre el modo de editor Vi actual que se muestra a la izquierda del indicador regular. Defina su propia funci&amp;oacute;n para personalizar la apariencia del indicador de modo. Tambi&amp;eacute;n puede definir una funci&amp;oacute;n &lt;code&gt;fish_mode_prompt&lt;/code&gt; vac&amp;iacute;a para eliminar los indicadores del modo Vi. La &lt;code&gt;$fish_bind_mode variable&lt;/code&gt; se puede utilizar para determinar el modo actual. Ser&amp;aacute; uno de &lt;code&gt;default&lt;/code&gt; &lt;code&gt;replace_one&lt;/code&gt; predeterminados , &lt;code&gt;insert&lt;/code&gt; , replace_one o &lt;code&gt;visual&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cecf773b45b71f464d270740746e4c81be97a5f" translate="yes" xml:space="preserve">
          <source>The default behavior of &lt;code&gt;functions&lt;/code&gt;, when called with no arguments, is to print the names of all defined functions. Unless the &lt;code&gt;-a&lt;/code&gt; option is given, no functions starting with underscores are included in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b701404c307944b4f207202092290f154a8ceb6b" translate="yes" xml:space="preserve">
          <source>The default behavior of &lt;code&gt;functions&lt;/code&gt;, when called with no arguments, is to print the names of all defined functions. Unless the &lt;code&gt;-a&lt;/code&gt; option is given, no functions starting with underscores are not included in the output.</source>
          <target state="translated">El comportamiento predeterminado de las &lt;code&gt;functions&lt;/code&gt; , cuando se llaman sin argumentos, es imprimir los nombres de todas las funciones definidas. A menos que se proporcione la opci&amp;oacute;n &lt;code&gt;-a&lt;/code&gt; , no se incluyen en la salida funciones que comiencen con guiones bajos.</target>
        </trans-unit>
        <trans-unit id="d4c91c27fab2727c86c4962ed510a017a29b2b1e" translate="yes" xml:space="preserve">
          <source>The default fish_greeting is a function that prints a variable of the same name (&lt;code&gt;$fish_greeting&lt;/code&gt;), so you can also just change that if you just want to change the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3238e1ed93b89a49bf4c1e65f05bfcad2dc2ccfc" translate="yes" xml:space="preserve">
          <source>The default key binding can be set by specifying a &lt;code&gt;SEQUENCE&lt;/code&gt; of the empty string (that is, &lt;code&gt;''&lt;/code&gt; ). It will be used whenever no other binding matches. For most key bindings, it makes sense to use the &lt;code&gt;self-insert&lt;/code&gt; function (i.e. &lt;code&gt;bind '' self-insert&lt;/code&gt;) as the default keybinding. This will insert any keystrokes not specifically bound to into the editor. Non- printable characters are ignored by the editor, so this will not result in control sequences being printable.</source>
          <target state="translated">El enlace de clave predeterminado se puede establecer especificando una &lt;code&gt;SEQUENCE&lt;/code&gt; de la cadena vac&amp;iacute;a (es decir, &lt;code&gt;''&lt;/code&gt; ). Se utilizar&amp;aacute; siempre que no coincida ning&amp;uacute;n otro enlace. Para la mayor&amp;iacute;a de las asociaciones de teclas, tiene sentido utilizar la &lt;code&gt;self-insert&lt;/code&gt; funci&amp;oacute;n (es decir, &lt;code&gt;bind '' self-insert&lt;/code&gt; ) como la combinaci&amp;oacute;n de teclas predeterminada. Esto insertar&amp;aacute; cualquier pulsaci&amp;oacute;n de tecla que no est&amp;eacute; vinculada espec&amp;iacute;ficamente al editor. Los caracteres no imprimibles son ignorados por el editor, por lo que esto no dar&amp;aacute; como resultado que las secuencias de control sean imprimibles.</target>
        </trans-unit>
        <trans-unit id="80908167c1fd52bd3b1ff34d8e60c0c19ce6ff92" translate="yes" xml:space="preserve">
          <source>The default prompt is reasonably full-featured and its code can be read via &lt;code&gt;type fish_prompt&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761122ce7c1e00f6a72f6459922524107cc8cd64" translate="yes" xml:space="preserve">
          <source>The delay in milliseconds since the previous character was received is included in the diagnostic information written to stderr. This information may be useful to determine the optimal &lt;code&gt;fish_escape_delay_ms&lt;/code&gt; setting or learn the amount of lag introduced by tools like &lt;code&gt;ssh&lt;/code&gt;, &lt;code&gt;mosh&lt;/code&gt; or &lt;code&gt;tmux&lt;/code&gt;.</source>
          <target state="translated">La demora en milisegundos desde que se recibi&amp;oacute; el car&amp;aacute;cter anterior se incluye en la informaci&amp;oacute;n de diagn&amp;oacute;stico escrita en stderr. Esta informaci&amp;oacute;n puede ser &amp;uacute;til para determinar la configuraci&amp;oacute;n &amp;oacute;ptima de &lt;code&gt;fish_escape_delay_ms&lt;/code&gt; o conocer la cantidad de retraso introducido por herramientas como &lt;code&gt;ssh&lt;/code&gt; , &lt;code&gt;mosh&lt;/code&gt; o &lt;code&gt;tmux&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="858922f559826f295d941e88749f79239abe12a3" translate="yes" xml:space="preserve">
          <source>The destination of a stream can be changed using something called &lt;em&gt;redirection&lt;/em&gt;. For example, &lt;code&gt;echo hello &amp;gt; output.txt&lt;/code&gt;, redirects the standard output of the &lt;code&gt;echo&lt;/code&gt; command to a text file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec578501f85f58e1b6e5dcfc273e5557d618a78" translate="yes" xml:space="preserve">
          <source>The escape key can be used standalone, for example, to switch from insertion mode to normal mode when using Vi keybindings. Escape can also be used as a &quot;meta&quot; key, to indicate the start of an escape sequence, like for function or arrow keys. Custom bindings can also be defined that begin with an escape character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ae9cb276e98e46e4c54626cf3a5b994505cd52" translate="yes" xml:space="preserve">
          <source>The escape key can be used standalone, for example, to switch from insertion mode to normal mode when using Vi keybindings. Escape may also be used as a &quot;meta&quot; key, to indicate the start of an escape sequence, such as function or arrow keys. Custom bindings can also be defined that begin with an escape character.</source>
          <target state="translated">La tecla de escape puede utilizarse de forma autónoma,por ejemplo,para pasar del modo de inserción al modo normal cuando se utilizan las fijaciones de teclas de Vi.La tecla de escape también puede utilizarse como una tecla &quot;meta&quot;,para indicar el inicio de una secuencia de escape,como las teclas de función o de flecha.También pueden definirse fijaciones personalizadas que empiecen con un carácter de escape.</target>
        </trans-unit>
        <trans-unit id="f2b67ae0b734fe8c7eb4002ecf7174bec7a097d2" translate="yes" xml:space="preserve">
          <source>The exit code of the &lt;code&gt;jobs&lt;/code&gt; builtin is &lt;code&gt;0&lt;/code&gt; if there are running background jobs and &lt;code&gt;1&lt;/code&gt; otherwise.</source>
          <target state="translated">El c&amp;oacute;digo de salida de los &lt;code&gt;jobs&lt;/code&gt; integrados es &lt;code&gt;0&lt;/code&gt; si hay trabajos en ejecuci&amp;oacute;n en segundo plano y &lt;code&gt;1&lt;/code&gt; en caso contrario.</target>
        </trans-unit>
        <trans-unit id="bdab6b4388bdecbfaaade04b54ac542c4110731a" translate="yes" xml:space="preserve">
          <source>The exit status is 1 if any &lt;code&gt;REASON&lt;/code&gt; is invalid; otherwise trap returns 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a98ee3485df09b2caf60e2fe8f1f43529de92d" translate="yes" xml:space="preserve">
          <source>The exit status of &lt;code&gt;functions&lt;/code&gt; is the number of functions specified in the argument list that do not exist, which can be used in concert with the &lt;code&gt;-q&lt;/code&gt; option.</source>
          <target state="translated">El estado de salida de las &lt;code&gt;functions&lt;/code&gt; es el n&amp;uacute;mero de funciones especificadas en la lista de argumentos que no existen, que se pueden utilizar junto con la opci&amp;oacute;n &lt;code&gt;-q&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea71aa43d0423248b5e6d17342f55b2785678003" translate="yes" xml:space="preserve">
          <source>The exit status of &lt;code&gt;jobs&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt; if there are running background jobs and &lt;code&gt;1&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3cb59016fb249c3eee79ed924509a2fbc0c01f" translate="yes" xml:space="preserve">
          <source>The exit status of &lt;code&gt;source&lt;/code&gt; is the exit status of the last job to execute. If something goes wrong while opening or reading the file, &lt;code&gt;source&lt;/code&gt; exits with a non-zero status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e8fe9012c8960260a66a84283038f62899649e" translate="yes" xml:space="preserve">
          <source>The exit status of commands within &lt;code&gt;fish_breakpoint_prompt&lt;/code&gt; will not modify the value of &lt;a href=&quot;../index#variables-status&quot;&gt;$status&lt;/a&gt; outside of the &lt;code&gt;fish_breakpoint_prompt&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f212eae622b07227263f98bfdb5b6ec216b4de4" translate="yes" xml:space="preserve">
          <source>The exit status of commands within &lt;code&gt;fish_breakpoint_prompt&lt;/code&gt; will not modify the value of &lt;a href=&quot;index#variables-status&quot;&gt;$status&lt;/a&gt; outside of the &lt;code&gt;fish_breakpoint_prompt&lt;/code&gt; function.</source>
          <target state="translated">El estado de salida de los comandos dentro de &lt;code&gt;fish_breakpoint_prompt&lt;/code&gt; no modificar&amp;aacute; el valor de &lt;a href=&quot;index#variables-status&quot;&gt;$ status&lt;/a&gt; fuera de la funci&amp;oacute;n &lt;code&gt;fish_breakpoint_prompt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59c65315bdacf0d0e4111fbb51abfbd8b92270ba" translate="yes" xml:space="preserve">
          <source>The exit status of commands within &lt;code&gt;fish_prompt&lt;/code&gt; will not modify the value of &lt;a href=&quot;../index#variables-status&quot;&gt;$status&lt;/a&gt; outside of the &lt;code&gt;fish_prompt&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5657481f999e23c3116d622970acdbbcff597a42" translate="yes" xml:space="preserve">
          <source>The exit status of commands within &lt;code&gt;fish_prompt&lt;/code&gt; will not modify the value of &lt;a href=&quot;index#variables-status&quot;&gt;$status&lt;/a&gt; outside of the &lt;code&gt;fish_prompt&lt;/code&gt; function.</source>
          <target state="translated">El estado de salida de los comandos dentro de &lt;code&gt;fish_prompt&lt;/code&gt; no modificar&amp;aacute; el valor de &lt;a href=&quot;index#variables-status&quot;&gt;$ status&lt;/a&gt; fuera de la funci&amp;oacute;n &lt;code&gt;fish_prompt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee4b36588801ba4a5846d1e6ab3ec967f5f37ee0" translate="yes" xml:space="preserve">
          <source>The exit status of the &lt;code&gt;jobs&lt;/code&gt; builtin is &lt;code&gt;0&lt;/code&gt; if there are running background jobs and &lt;code&gt;1&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde297103a5b92cbf6063c24bb9aa65b611780da" translate="yes" xml:space="preserve">
          <source>The exit status of the last foreground command to exit can always be accessed using the &lt;a href=&quot;../index#variables-status&quot;&gt;$status&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff645c10072dc44f93fe8a0bc1b09a1e128e9d19" translate="yes" xml:space="preserve">
          <source>The exit status of the last foreground command to exit can always be accessed using the &lt;a href=&quot;index#variables-status&quot;&gt;$status&lt;/a&gt; variable.</source>
          <target state="translated">Siempre se puede acceder al estado de salida del &amp;uacute;ltimo comando en primer plano para salir utilizando la variable &lt;a href=&quot;index#variables-status&quot;&gt;$ status&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2bb050210ccd5d99a0518f801eba8a539afbe988" translate="yes" xml:space="preserve">
          <source>The exit status of the last run command substitution is available in the &lt;a href=&quot;#variables-status&quot;&gt;status&lt;/a&gt; variable if the substitution happens in the context of a &lt;a href=&quot;cmds/set#cmd-set&quot;&gt;set&lt;/a&gt; command (so &lt;code&gt;if set -l (something)&lt;/code&gt; checks if &lt;code&gt;something&lt;/code&gt; returned true).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4652deeba9fb7344bebbe6060971799e99a44a6b" translate="yes" xml:space="preserve">
          <source>The exit status of the last run command substitution is available in the &lt;a href=&quot;#variables-status&quot;&gt;status&lt;/a&gt; variable if the substitution occurs in the context of a &lt;code&gt;set&lt;/code&gt; command.</source>
          <target state="translated">El estado de salida de la &amp;uacute;ltima sustituci&amp;oacute;n del comando de ejecuci&amp;oacute;n est&amp;aacute; disponible en la variable de &lt;a href=&quot;#variables-status&quot;&gt;estado&lt;/a&gt; si la sustituci&amp;oacute;n se produce en el contexto de un comando &lt;code&gt;set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="110fb03150bee422319feb18aa0d332d91a7cdc7" translate="yes" xml:space="preserve">
          <source>The exit status of the while loop is the exit status of the last iteration of the &lt;code&gt;COMMANDS&lt;/code&gt; executed, or 0 if none were executed. (This matches other shells and is POSIX-compatible.)</source>
          <target state="translated">El estado de salida del ciclo while es el estado de salida de la &amp;uacute;ltima iteraci&amp;oacute;n de los &lt;code&gt;COMMANDS&lt;/code&gt; ejecutados, o 0 si no se ejecut&amp;oacute; ninguno. (Esto coincide con otros shells y es compatible con POSIX).</target>
        </trans-unit>
        <trans-unit id="0e8e9a53dcf07764aa42aaf44d6d7a9d7ab8311a" translate="yes" xml:space="preserve">
          <source>The exporting rules when creating or updating a variable are identical to the scoping rules for variables:</source>
          <target state="translated">Las reglas de exportación al crear o actualizar una variable son idénticas a las reglas de alcance de las variables:</target>
        </trans-unit>
        <trans-unit id="f3b2b8baa995e92464f5e5d45c31f3a60ec2cb9d" translate="yes" xml:space="preserve">
          <source>The file given in &lt;code&gt;--debug-output&lt;/code&gt; takes precedence over the file in $FISH_DEBUG_OUTPUT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09376457a3a1c5f117afa52bbec921cf1ee6399b" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;--&lt;/code&gt; seen is what allows the &lt;code&gt;argparse&lt;/code&gt; command to reliably separate the option specifications and options to &lt;code&gt;argparse&lt;/code&gt; itself (like &lt;code&gt;--ignore-unknown&lt;/code&gt;) from the command arguments, so it is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd7da4c54986027f5d438b2f8ee07a3d4f4e74d" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;--&lt;/code&gt; seen is what allows the &lt;code&gt;argparse&lt;/code&gt; command to reliably separate the option specifications from the command arguments.</source>
          <target state="translated">La primera &lt;code&gt;--&lt;/code&gt; visto es lo que permite que el &lt;code&gt;argparse&lt;/code&gt; comando para separar de forma fiable las especificaciones de opci&amp;oacute;n de los argumentos de comandos.</target>
        </trans-unit>
        <trans-unit id="94b3d0ab298a19d908eda08c397cba03b7e163b0" translate="yes" xml:space="preserve">
          <source>The first argument to fish_title contains the most recently executed foreground command as a string, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00c945cebc76b9e34b8670689ec76047f703bed" translate="yes" xml:space="preserve">
          <source>The first form (&lt;code&gt;test&lt;/code&gt;) is preferred. For compatibility with other shells, the second form is available: a matching pair of square brackets (&lt;code&gt;[ [EXPRESSION ] ]&lt;/code&gt;).</source>
          <target state="translated">Se prefiere la primera forma ( &lt;code&gt;test&lt;/code&gt; ). Para compatibilidad con otros shells, la segunda forma est&amp;aacute; disponible: un par de corchetes coincidentes ( &lt;code&gt;[ [EXPRESSION ] ]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="43f4d110308413cf0bb5f3a0257b712c35d80d02" translate="yes" xml:space="preserve">
          <source>The first line tells fish that a function by the name of &lt;code&gt;ll&lt;/code&gt; is to be defined. To use it, simply write &lt;code&gt;ll&lt;/code&gt; on the commandline. The second line tells fish that the command &lt;code&gt;ls -l $argv&lt;/code&gt; should be called when &lt;code&gt;ll&lt;/code&gt; is invoked. '&lt;code&gt;$argv&lt;/code&gt;' is a list variable, which always contains all arguments sent to the function. In the example above, these are simply passed on to the &lt;code&gt;ls&lt;/code&gt; command. For more information on functions, see the documentation for the &lt;a href=&quot;cmds/function#cmd-function&quot;&gt;function&lt;/a&gt; builtin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1feeb6c582e1b13feec652671af704d8c4bca81d" translate="yes" xml:space="preserve">
          <source>The first line tells fish that a function by the name of &lt;code&gt;ll&lt;/code&gt; is to be defined. To use it, simply write &lt;code&gt;ll&lt;/code&gt; on the commandline. The second line tells fish that the command &lt;code&gt;ls -l $argv&lt;/code&gt; should be called when &lt;code&gt;ll&lt;/code&gt; is invoked. '&lt;code&gt;$argv&lt;/code&gt;' is an array variable, which always contains all arguments sent to the function. In the example above, these are simply passed on to the &lt;code&gt;ls&lt;/code&gt; command. For more information on functions, see the documentation for the &lt;a href=&quot;commands#function&quot;&gt;function&lt;/a&gt; builtin.</source>
          <target state="translated">La primera l&amp;iacute;nea le dice a Fish que se va a definir una funci&amp;oacute;n con el nombre de &lt;code&gt;ll&lt;/code&gt; . Para usarlo, simplemente escriba &lt;code&gt;ll&lt;/code&gt; en la l&amp;iacute;nea de comandos. La segunda l&amp;iacute;nea le dice a &lt;code&gt;ls -l $argv&lt;/code&gt; que se debe llamar al comando ls -l $ argv cuando se invoca &lt;code&gt;ll&lt;/code&gt; . ' &lt;code&gt;$argv&lt;/code&gt; ' es una variable de matriz, que siempre contiene todos los argumentos enviados a la funci&amp;oacute;n. En el ejemplo anterior, estos simplemente se pasan al comando &lt;code&gt;ls&lt;/code&gt; . Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre las funciones, consulte la documentaci&amp;oacute;n de la &lt;a href=&quot;commands#function&quot;&gt;funci&amp;oacute;n&lt;/a&gt; incorporada.</target>
        </trans-unit>
        <trans-unit id="074dd03c76d5b47505aa8770948856719e412113" translate="yes" xml:space="preserve">
          <source>The first line tells fish to define a function by the name of &lt;code&gt;ll&lt;/code&gt;, so it can be used by simply writing &lt;code&gt;ll&lt;/code&gt; on the commandline. The second line tells fish that the command &lt;code&gt;ls -l $argv&lt;/code&gt; should be called when &lt;code&gt;ll&lt;/code&gt; is invoked. &lt;a href=&quot;#variables-argv&quot;&gt;$argv&lt;/a&gt; is a &lt;a href=&quot;#variables-lists&quot;&gt;list variable&lt;/a&gt;, which always contains all arguments sent to the function. In the example above, these are simply passed on to the &lt;code&gt;ls&lt;/code&gt; command. The &lt;code&gt;end&lt;/code&gt; on the third line ends the definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa91cd04a31d486d202e2b1e77d870e577f521a" translate="yes" xml:space="preserve">
          <source>The first part specifies to whom this set of right applies, and can be one of &lt;code&gt;u&lt;/code&gt;, &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;o&lt;/code&gt; or &lt;code&gt;a&lt;/code&gt;, where &lt;code&gt;u&lt;/code&gt; specifies the user who owns the file, &lt;code&gt;g&lt;/code&gt; specifies the group owner of the file, &lt;code&gt;o&lt;/code&gt; specific other users rights and &lt;code&gt;a&lt;/code&gt; specifies all three should be changed.</source>
          <target state="translated">La primera parte especifica a qui&amp;eacute;n se aplica este conjunto de derechos, y puede ser &lt;code&gt;u&lt;/code&gt; , &lt;code&gt;g&lt;/code&gt; , &lt;code&gt;o&lt;/code&gt; o &lt;code&gt;a&lt;/code&gt; , donde &lt;code&gt;u&lt;/code&gt; especifica el usuario que posee el archivo, &lt;code&gt;g&lt;/code&gt; especifica el propietario del grupo del archivo, &lt;code&gt;o&lt;/code&gt; derechos espec&amp;iacute;ficos de otros usuarios y &lt;code&gt;a&lt;/code&gt; especifica que los tres deben cambiarse.</target>
        </trans-unit>
        <trans-unit id="8197431f9332af76bce775e1de1257355f1cd95c" translate="yes" xml:space="preserve">
          <source>The fish commandline editor can be used to work on commands that are several lines long. There are three ways to make a command span more than a single line:</source>
          <target state="translated">El editor de la línea de comandos del pez puede ser usado para trabajar en comandos de varias líneas de largo.Hay tres maneras de hacer que un comando abarque más de una línea:</target>
        </trans-unit>
        <trans-unit id="8f8186d4ab0a2d348fed572d2dce9da78099265a" translate="yes" xml:space="preserve">
          <source>The fish commandline editor works exactly the same in single line mode and in multiline mode. To move between lines use the left and right arrow keys and other such keyboard shortcuts.</source>
          <target state="translated">El editor de la línea de comandos de los peces funciona exactamente igual en modo de línea simple y en modo de línea múltiple.Para moverse entre las líneas,use las teclas de flecha izquierda y derecha y otros atajos de teclado similares.</target>
        </trans-unit>
        <trans-unit id="c10195114b2c2ba4a31738c3505e1c57b1525797" translate="yes" xml:space="preserve">
          <source>The fish editor features copy and paste, a &lt;a href=&quot;#history-search&quot;&gt;searchable history&lt;/a&gt; and many editor functions that can be bound to special keyboard shortcuts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26a6a29915d54b8a282c8e0ab812a4f1acfe95a" translate="yes" xml:space="preserve">
          <source>The fish exit status is generally the &lt;a href=&quot;../index#variables-status&quot;&gt;exit status of the last foreground command&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b5304e27f02f59d7a10f53fd4009e199ac5306" translate="yes" xml:space="preserve">
          <source>The fish exit status is generally the exit status of the last foreground command. If fish is exiting because of a parse error, the exit status is 127.</source>
          <target state="translated">El estado de salida de los peces es generalmente el estado de salida del último comando en primer plano.Si los peces salen debido a un error de análisis,el estado de salida es 127.</target>
        </trans-unit>
        <trans-unit id="81b0737757c6447d0c7efe9ceff078d063aa48ef" translate="yes" xml:space="preserve">
          <source>The fish user community extends fish in unique and useful ways via scripts that aren't always appropriate for bundling with the fish package. Typically because they solve a niche problem unlikely to appeal to a broad audience. You can find those extensions, including prompts, themes and useful functions, in various third-party repositories. These include:</source>
          <target state="translated">La comunidad de usuarios de peces extiende los peces de maneras únicas y útiles a través de scripts que no siempre son apropiados para ser incluidos en el paquete de los peces.Típicamente porque resuelven un problema de nicho que no es probable que atraiga a una amplia audiencia.Puedes encontrar esas extensiones,incluyendo prompts,temas y funciones útiles,en varios repositorios de terceros.Entre ellos se encuentran:</target>
        </trans-unit>
        <trans-unit id="1dc678d68b9717e5200d2d3ebd01cf72bd98b0c8" translate="yes" xml:space="preserve">
          <source>The fish_hg_prompt function displays information about the current Mercurial repository, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06891f80053c3220358df28d431b54da754d75c" translate="yes" xml:space="preserve">
          <source>The fish_mode_prompt function will output the mode indicator for use in vi-mode.</source>
          <target state="translated">La función fish_mode_prompt emitirá el indicador de modo para su uso en modo vi.</target>
        </trans-unit>
        <trans-unit id="2cd3e1be81f908b3d67ab09f753310049f406ade" translate="yes" xml:space="preserve">
          <source>The fish_svn_prompt function displays information about the current Subversion repository, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d3be5da20cd5974bed5d4cec48f0faf57383bf" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;argparse&lt;/code&gt; options are available. They must appear before all OPTION_SPECs:</source>
          <target state="translated">Las siguientes opciones de &lt;code&gt;argparse&lt;/code&gt; est&amp;aacute;n disponibles. Deben aparecer antes de todas las OPTION_SPEC:</target>
        </trans-unit>
        <trans-unit id="23d5e5164bbb45ea1a895b015bf1d3acf0cdeae1" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;argparse&lt;/code&gt; options are available:</source>
          <target state="translated">Las siguientes opciones de &lt;code&gt;argparse&lt;/code&gt; est&amp;aacute;n disponibles:</target>
        </trans-unit>
        <trans-unit id="224bb1116b7af6da373f3bd98c7370044c04d51d" translate="yes" xml:space="preserve">
          <source>The following additional options are also understood by &lt;code&gt;ulimit&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ulimit&lt;/code&gt; tambi&amp;eacute;n entiende las siguientes opciones adicionales :</target>
        </trans-unit>
        <trans-unit id="72e92d902d19c4f9a787cc785c9f6f673c804c7c" translate="yes" xml:space="preserve">
          <source>The following code first defines an event handler for the generic event named 'test_event', and then emits an event of that type.</source>
          <target state="translated">El siguiente código primero define un manejador de eventos para el evento genérico llamado 'test_event',y luego emite un evento de ese tipo.</target>
        </trans-unit>
        <trans-unit id="4dfce41da5b846516accbd2a1b32a0ea88076d5d" translate="yes" xml:space="preserve">
          <source>The following code is an implementation of the false command as a fish function</source>
          <target state="translated">El siguiente código es una implementación del comando falso como una función de los peces</target>
        </trans-unit>
        <trans-unit id="73f428206d6cc247fb0a938bd495734a3eb822ae" translate="yes" xml:space="preserve">
          <source>The following code removes all tmp files that do not contain the word smurf.</source>
          <target state="translated">El siguiente código elimina todos los archivos tmp que no contengan la palabra pitufo.</target>
        </trans-unit>
        <trans-unit id="479b6746587510b08a8b09d6baf9432244f03bce" translate="yes" xml:space="preserve">
          <source>The following code reports an error and exits if no file named spoon can be found.</source>
          <target state="translated">El siguiente código informa de un error y sale si no se encuentra ningún archivo llamado spoon.</target>
        </trans-unit>
        <trans-unit id="c4c2a9bc321af801fbf29261dd0e7d5af4245506" translate="yes" xml:space="preserve">
          <source>The following code runs the &lt;code&gt;make&lt;/code&gt; command to build a program. If the build succeeds, &lt;code&gt;make&lt;/code&gt;'s exit status is 0, and the program is installed. If either step fails, the exit status is 1, and &lt;code&gt;make clean&lt;/code&gt; is run, which removes the files created by the build process.</source>
          <target state="translated">El siguiente c&amp;oacute;digo ejecuta el comando &lt;code&gt;make&lt;/code&gt; para construir un programa. Si la compilaci&amp;oacute;n tiene &amp;eacute;xito, el estado de salida de &lt;code&gt;make&lt;/code&gt; es 0 y el programa est&amp;aacute; instalado. Si alguno de los pasos falla, el estado de salida es 1 y se ejecuta &lt;code&gt;make clean&lt;/code&gt; , lo que elimina los archivos creados por el proceso de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="546e6c9b6b78b14a90cdffaa174cd31d19fddac9" translate="yes" xml:space="preserve">
          <source>The following code runs the &lt;code&gt;make&lt;/code&gt; command to build a program. If the build succeeds, the program is installed. If either step fails, &lt;code&gt;make clean&lt;/code&gt; is run, which removes the files created by the build process.</source>
          <target state="translated">El siguiente c&amp;oacute;digo ejecuta el comando &lt;code&gt;make&lt;/code&gt; para construir un programa. Si la compilaci&amp;oacute;n tiene &amp;eacute;xito, se instala el programa. Si alguno de los pasos falla, se ejecuta &lt;code&gt;make clean&lt;/code&gt; , que elimina los archivos creados por el proceso de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="22ceb5db939abfc8429d0cfac70346e285c29f90" translate="yes" xml:space="preserve">
          <source>The following code searches all .c files for &quot;smurf&quot;, and halts at the first occurrence.</source>
          <target state="translated">El siguiente código busca &quot;pitufo&quot; en todos los archivos .c,y se detiene a la primera ocurrencia.</target>
        </trans-unit>
        <trans-unit id="4275d8a3b1aa0d62413745bb834485269f681525" translate="yes" xml:space="preserve">
          <source>The following code sets a number of variables inside of a block scope. Since the variables are set inside the block and have local scope, they will be automatically deleted when the block ends.</source>
          <target state="translated">El siguiente código establece un número de variables dentro de un ámbito de bloque.Dado que las variables se establecen dentro del bloque y tienen alcance local,se borrarán automáticamente cuando el bloque termine.</target>
        </trans-unit>
        <trans-unit id="9c3e3b53e3555daf8b545c545da16a2dcb0110a7" translate="yes" xml:space="preserve">
          <source>The following code stores the value 'hello' in the shell variable &lt;code&gt;$foo&lt;/code&gt;.</source>
          <target state="translated">El siguiente c&amp;oacute;digo almacena el valor 'hola' en la variable de shell &lt;code&gt;$foo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="381bfb0bdea553cc88676dcf9cb0ff3a9ee0da17" translate="yes" xml:space="preserve">
          <source>The following code tests whether a file &lt;code&gt;foo.txt&lt;/code&gt; exists as a regular file.</source>
          <target state="translated">El siguiente c&amp;oacute;digo prueba si un archivo &lt;code&gt;foo.txt&lt;/code&gt; existe como un archivo normal.</target>
        </trans-unit>
        <trans-unit id="858bb8cd938dce0407b131e7aecbe8f7f0e34166" translate="yes" xml:space="preserve">
          <source>The following code will call the ls command and truncate each filename to the first 12 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c71a4810d00e2a53ad0417748ddcd2d89501b6" translate="yes" xml:space="preserve">
          <source>The following code will call the ls command. Note that &lt;code&gt;fish&lt;/code&gt; does not support the use of shell variables as direct commands; &lt;code&gt;eval&lt;/code&gt; can be used to work around this.</source>
          <target state="translated">El siguiente c&amp;oacute;digo llamar&amp;aacute; al comando ls. Tenga en cuenta que &lt;code&gt;fish&lt;/code&gt; no admite el uso de variables de shell como comandos directos; &lt;code&gt;eval&lt;/code&gt; se puede utilizar para solucionar este problema.</target>
        </trans-unit>
        <trans-unit id="ca62666931da18a9248d4ac0f516c18c3953407d" translate="yes" xml:space="preserve">
          <source>The following code will count down from a random even number between 10 and 20 to 1:</source>
          <target state="translated">El siguiente código contará hacia atrás desde un número par aleatorio entre 10 y 20 a 1:</target>
        </trans-unit>
        <trans-unit id="b827c00166140f0325b113f6c5ec11ead3608d8d" translate="yes" xml:space="preserve">
          <source>The following code will create &lt;code&gt;rmi&lt;/code&gt;, which runs &lt;code&gt;rm&lt;/code&gt; with additional arguments on every invocation.</source>
          <target state="translated">El siguiente c&amp;oacute;digo crear&amp;aacute; &lt;code&gt;rmi&lt;/code&gt; , que ejecuta &lt;code&gt;rm&lt;/code&gt; con argumentos adicionales en cada invocaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2bda4fa27dff7ecce2f691a9e2a6631fca487d27" translate="yes" xml:space="preserve">
          <source>The following code will not output anything:</source>
          <target state="translated">El siguiente código no emitirá nada:</target>
        </trans-unit>
        <trans-unit id="ef1c53d0ac92fed4883e8ae1b1d7d027d13ad785" translate="yes" xml:space="preserve">
          <source>The following code will print &quot;foo.txt exists and is readable&quot; if foo.txt is a regular file and readable</source>
          <target state="translated">El siguiente código imprimirá &quot;foo.txt existe y es legible&quot; si foo.txt es un archivo normal y legible</target>
        </trans-unit>
        <trans-unit id="1b900844821e8f04f7dd1574d0cf172ece4e3553" translate="yes" xml:space="preserve">
          <source>The following code will print &lt;code&gt;foo.txt exists&lt;/code&gt; if the file foo.txt exists and is a regular file, otherwise it will print &lt;code&gt;bar.txt exists&lt;/code&gt; if the file bar.txt exists and is a regular file, otherwise it will print &lt;code&gt;foo.txt and bar.txt do not exist&lt;/code&gt;.</source>
          <target state="translated">El siguiente c&amp;oacute;digo imprimir&amp;aacute; &lt;code&gt;foo.txt exists&lt;/code&gt; si el archivo foo.txt existe y es un archivo normal; de lo contrario, imprimir&amp;aacute; &lt;code&gt;bar.txt exists&lt;/code&gt; si el archivo bar.txt existe y es un archivo normal; de lo contrario, imprimir&amp;aacute; &lt;code&gt;foo.txt and bar.txt do not exist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de3876978d90a169388326ae4fae09574262829b" translate="yes" xml:space="preserve">
          <source>The following operations (sub-commands) are available:</source>
          <target state="translated">Se dispone de las siguientes operaciones (subcomandos):</target>
        </trans-unit>
        <trans-unit id="87ad7915cdbf5aabf9ec8f4e6f650717a3e51ad5" translate="yes" xml:space="preserve">
          <source>The following options are available:</source>
          <target state="translated">Se dispone de las siguientes opciones:</target>
        </trans-unit>
        <trans-unit id="d66ddc0c6de8a95bb5854453416293c96da8d8a9" translate="yes" xml:space="preserve">
          <source>The following options change the way &lt;code&gt;commandline&lt;/code&gt; prints the current commandline buffer:</source>
          <target state="translated">Las siguientes opciones cambian la forma en que la &lt;code&gt;commandline&lt;/code&gt; imprime el b&amp;uacute;fer de la l&amp;iacute;nea de comandos actual:</target>
        </trans-unit>
        <trans-unit id="63df7f64ccf12b96665f8dde259ffe470d38015a" translate="yes" xml:space="preserve">
          <source>The following options change the way &lt;code&gt;commandline&lt;/code&gt; updates the command line buffer:</source>
          <target state="translated">Las siguientes opciones cambian la forma en que la &lt;code&gt;commandline&lt;/code&gt; actualiza el b&amp;uacute;fer de la l&amp;iacute;nea de comandos:</target>
        </trans-unit>
        <trans-unit id="74214e3ec02696aeea391992facc065916f44218" translate="yes" xml:space="preserve">
          <source>The following options change what part of the commandline is printed or updated:</source>
          <target state="translated">Las siguientes opciones cambian qué parte de la línea de comandos se imprime o actualiza:</target>
        </trans-unit>
        <trans-unit id="4caebaf69abe1f045ca9b70c7d77c6343b9dba77" translate="yes" xml:space="preserve">
          <source>The following options control variable scope:</source>
          <target state="translated">Las siguientes opciones controlan el alcance de las variables:</target>
        </trans-unit>
        <trans-unit id="de38d59c5de4e05441ae91dc9bbb795a1e1439a4" translate="yes" xml:space="preserve">
          <source>The following options output metadata about the commandline state:</source>
          <target state="translated">Las siguientes opciones producen metadatos sobre el estado de la línea de mando:</target>
        </trans-unit>
        <trans-unit id="2cc91c14fc643ec75cd8e42977ab3bf342c34ee4" translate="yes" xml:space="preserve">
          <source>The following parameters are available:</source>
          <target state="translated">Se dispone de los siguientes parámetros:</target>
        </trans-unit>
        <trans-unit id="328c4823c00af02675ec490144bb09f24d6106dd" translate="yes" xml:space="preserve">
          <source>The following special input functions are available:</source>
          <target state="translated">Se dispone de las siguientes funciones especiales de entrada:</target>
        </trans-unit>
        <trans-unit id="f152dd9767da97d86c0b7bee6016016e58054d4e" translate="yes" xml:space="preserve">
          <source>The following subcommands are available.</source>
          <target state="translated">Los siguientes subcomandos están disponibles.</target>
        </trans-unit>
        <trans-unit id="58f88b1896d25d9e560265aa1ea2d352215c9687" translate="yes" xml:space="preserve">
          <source>The following variables are available to change the highlighting colors in fish:</source>
          <target state="translated">Las siguientes variables están disponibles para cambiar los colores de resalte en los peces:</target>
        </trans-unit>
        <trans-unit id="b5c283f87142fff645059f0c26d945ecfa72619d" translate="yes" xml:space="preserve">
          <source>The functions shipped with fish, usually installed in &lt;code&gt;/usr/share/fish/functions&lt;/code&gt; (really &lt;code&gt;$__fish_data_dir/functions&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c602bb0a290012cbead72e55c75dd6308e892909" translate="yes" xml:space="preserve">
          <source>The functions shipped with fish, usually installed in &lt;code&gt;/usr/share/fish/functions&lt;/code&gt;.</source>
          <target state="translated">Las funciones enviadas con fish, generalmente instaladas en &lt;code&gt;/usr/share/fish/functions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60305ba8888539448dea4b7d945ecc4313728a85" translate="yes" xml:space="preserve">
          <source>The generic key binding that matches if no other binding does can be set by specifying a &lt;code&gt;SEQUENCE&lt;/code&gt; of the empty string (that is, &lt;code&gt;''&lt;/code&gt; ). For most key bindings, it makes sense to bind this to the &lt;code&gt;self-insert&lt;/code&gt; function (i.e. &lt;code&gt;bind '' self-insert&lt;/code&gt;). This will insert any keystrokes not specifically bound to into the editor. Non-printable characters are ignored by the editor, so this will not result in control sequences being inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5d264af15f8432fec7957ce6625de24ad79a9e" translate="yes" xml:space="preserve">
          <source>The key sequence (the &lt;code&gt;\cc&lt;/code&gt;) here depends on your setup, in particular the terminal. To find out what the terminal sends use &lt;a href=&quot;cmds/fish_key_reader#cmd-fish-key-reader&quot;&gt;fish_key_reader&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09152effa3ffc16b24d3fc6b4a6980e177c4d889" translate="yes" xml:space="preserve">
          <source>The language depends on the current locale, set with &lt;code&gt;$LANG&lt;/code&gt; and &lt;code&gt;$LC_MESSAGES&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d1d74253673e0e00e4ab6d298c6cfbfbe641c4" translate="yes" xml:space="preserve">
          <source>The last value assigned to &lt;code&gt;var&lt;/code&gt; when the loop terminated would not be available outside the loop. What &lt;code&gt;echo $var&lt;/code&gt; would write depended on what it was set to before the loop was run. Likely nothing.</source>
          <target state="translated">El &amp;uacute;ltimo valor asignado a &lt;code&gt;var&lt;/code&gt; cuando el bucle termina no estar&amp;iacute;a disponible fuera del bucle. Lo que &lt;code&gt;echo $var&lt;/code&gt; escribir&amp;iacute;a depend&amp;iacute;a de lo que estaba configurado antes de que se ejecutara el bucle. Probablemente nada.</target>
        </trans-unit>
        <trans-unit id="a484c97c564e9f2294dccdee0326b8d8bb53aff4" translate="yes" xml:space="preserve">
          <source>The latter syntax &lt;code&gt;{$WORD}&lt;/code&gt; is a special case of &lt;a href=&quot;#expand-brace&quot;&gt;brace expansion&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5d758036d63a8bf5273befa9ba2de30bb1d084" translate="yes" xml:space="preserve">
          <source>The latter syntax &lt;code&gt;{$WORD}&lt;/code&gt; works by exploiting &lt;a href=&quot;#expand-brace&quot;&gt;brace expansion&lt;/a&gt;.</source>
          <target state="translated">La &amp;uacute;ltima sintaxis &lt;code&gt;{$WORD}&lt;/code&gt; funciona explotando la &lt;a href=&quot;#expand-brace&quot;&gt;expansi&amp;oacute;n de llaves&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="003f5cfaee3e7c8f053961483130a113e4a771af" translate="yes" xml:space="preserve">
          <source>The locale variables &lt;code&gt;LANG&lt;/code&gt;, &lt;code&gt;LC_ALL&lt;/code&gt;, &lt;code&gt;LC_COLLATE&lt;/code&gt;, &lt;code&gt;LC_CTYPE&lt;/code&gt;, &lt;code&gt;LC_MESSAGES&lt;/code&gt;, &lt;code&gt;LC_MONETARY&lt;/code&gt;, &lt;code&gt;LC_NUMERIC&lt;/code&gt; and &lt;code&gt;LC_TIME&lt;/code&gt; set the language option for the shell and subprograms. See the section &lt;a href=&quot;#variables-locale&quot;&gt;Locale variables&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2d87c31efe5a5242aff1d1ac9d16a3f6f17fb6" translate="yes" xml:space="preserve">
          <source>The locale variables are: &lt;code&gt;LANG&lt;/code&gt;, &lt;code&gt;LC_ALL&lt;/code&gt;, &lt;code&gt;LC_COLLATE&lt;/code&gt;, &lt;code&gt;LC_CTYPE&lt;/code&gt;, &lt;code&gt;LC_MESSAGES&lt;/code&gt;, &lt;code&gt;LC_MONETARY&lt;/code&gt;, &lt;code&gt;LC_NUMERIC&lt;/code&gt; and &lt;code&gt;LC_TIME&lt;/code&gt;. These variables work as follows: &lt;code&gt;LC_ALL&lt;/code&gt; forces all the aspects of the locale to the specified value. If &lt;code&gt;LC_ALL&lt;/code&gt; is set, all other locale variables will be ignored (this is typically not recommended!). The other &lt;code&gt;LC_&lt;/code&gt; variables set the specified aspect of the locale information. &lt;code&gt;LANG&lt;/code&gt; is a fallback value, it will be used if none of the &lt;code&gt;LC_&lt;/code&gt; variables are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af91f79f8373488bcf43ad9d85211f47c5490d9e" translate="yes" xml:space="preserve">
          <source>The long answer:</source>
          <target state="translated">La respuesta larga:</target>
        </trans-unit>
        <trans-unit id="3bc04ce8ee0aaf5de96a68984a57d83e6ba0f996" translate="yes" xml:space="preserve">
          <source>The most common way to set the locale to use a command like 'set -x LANG en_GB.utf8', which sets the current locale to be the English language, as used in Great Britain, using the UTF-8 character set. For a list of available locales, use 'locale -a'.</source>
          <target state="translated">La forma más común de configurar la localización para usar un comando como 'set -x LANG en_GB.utf8',que establece que la localización actual es el idioma inglés,como se usa en Gran Bretaña,usando el conjunto de caracteres UTF-8.Para una lista de locales disponibles,usa 'locale -a'.</target>
        </trans-unit>
        <trans-unit id="09535cffbe3c2afe43b7f4429fbeb021277bbe52" translate="yes" xml:space="preserve">
          <source>The most common way to set the locale to use a command like &lt;code&gt;set -gx LANG en_GB.utf8&lt;/code&gt;, which sets the current locale to be the English language, as used in Great Britain, using the UTF-8 character set. That way any program that requires one setting differently can easily override just that and doesn't have to resort to LC_ALL. For a list of available locales on your system, try &lt;code&gt;locale -a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f8a0f7d2af2ecdf29f96a294a1554c9c3b5a41" translate="yes" xml:space="preserve">
          <source>The names given to shell objects like variables and function names are known as &quot;identifiers&quot;. Each type of identifier has rules that define what sequences of characters are valid to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65aa63047471b9a76e26dd8f43f5899f1292feb3" translate="yes" xml:space="preserve">
          <source>The names given to shell objects such as variables and function names are known as &quot;identifiers&quot;. Each type of identifier has rules that define the valid sequence of characters which compose the identifier.</source>
          <target state="translated">Los nombres que se dan a los objetos de la cáscara,como las variables y los nombres de las funciones,se conocen como &quot;identificadores&quot;.Cada tipo de identificador tiene reglas que definen la secuencia válida de caracteres que componen el identificador.</target>
        </trans-unit>
        <trans-unit id="c3e07e91f8f96b0293f87a0e2d848d2b640fb2eb" translate="yes" xml:space="preserve">
          <source>The names given to variables and functions (so called &quot;identifiers&quot;) have to follow certain rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe3f46a59e146e352f1c4758de7a57641a2c629" translate="yes" xml:space="preserve">
          <source>The names of these variables are mostly derived from the csh family of shells and differ from the ones used by Bourne style shells such as bash.</source>
          <target state="translated">Los nombres de estas variables se derivan en su mayoría de la familia de conchas csh y difieren de los utilizados por las conchas de estilo Bourne como el bash.</target>
        </trans-unit>
        <trans-unit id="d0bbdfdf4f6bd58e59535b30b244a24f5c9c7616" translate="yes" xml:space="preserve">
          <source>The official &lt;a href=&quot;https://gitter.im/fish-shell/fish-shell&quot;&gt;Gitter channel&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cdd8d204de3244af011ba40dd2e1e03a80c3965" translate="yes" xml:space="preserve">
          <source>The official mailing list at &lt;a href=&quot;https://lists.sourceforge.net/lists/listinfo/fish-users&quot;&gt;fish-users@lists.sourceforge.net&lt;/a&gt;</source>
          <target state="translated">La lista de correo oficial en &lt;a href=&quot;https://lists.sourceforge.net/lists/listinfo/fish-users&quot;&gt;fish-users@lists.sourceforge.net&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4e7f0cf7342207349af3cfc04732168d9c47e27" translate="yes" xml:space="preserve">
          <source>The only backslash escape accepted within single quotes is &lt;code&gt;\'&lt;/code&gt;, which escapes a single quote and &lt;code&gt;\\&lt;/code&gt;, which escapes the backslash symbol. The only backslash escapes accepted within double quotes are &lt;code&gt;\&quot;&lt;/code&gt;, which escapes a double quote, &lt;code&gt;\$&lt;/code&gt;, which escapes a dollar character, &lt;code&gt;\&lt;/code&gt; followed by a newline, which deletes the backslash and the newline, and lastly &lt;code&gt;\\&lt;/code&gt;, which escapes the backslash symbol. Single quotes have no special meaning within double quotes and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9442b55259d81b4b21486be4ca1ced11f021b67" translate="yes" xml:space="preserve">
          <source>The only meaningful escape sequences in single quotes are &lt;code&gt;\'&lt;/code&gt;, which escapes a single quote and &lt;code&gt;\\&lt;/code&gt;, which escapes the backslash symbol. The only meaningful escapes in double quotes are &lt;code&gt;\&quot;&lt;/code&gt;, which escapes a double quote, &lt;code&gt;\$&lt;/code&gt;, which escapes a dollar character, &lt;code&gt;\&lt;/code&gt; followed by a newline, which deletes the backslash and the newline, and &lt;code&gt;\\&lt;/code&gt;, which escapes the backslash symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341137762021767c1bcfe1d4e89d1efb6ab672f6" translate="yes" xml:space="preserve">
          <source>The open command doesn't work.</source>
          <target state="translated">El comando abierto no funciona.</target>
        </trans-unit>
        <trans-unit id="1270e20d3a3df8e1f5346556fc472ccabc75c9c8" translate="yes" xml:space="preserve">
          <source>The options for specifying command name and command path may be used multiple times to define the same completions for multiple commands.</source>
          <target state="translated">Las opciones para especificar el nombre y la ruta del comando pueden utilizarse varias veces para definir las mismas terminaciones para varios comandos.</target>
        </trans-unit>
        <trans-unit id="ff3a156169840aa3d5e264e866d9a002dac09c1f" translate="yes" xml:space="preserve">
          <source>The options for specifying command switches and wrapped commands may be used multiple times to define multiple completions for the command(s) in a single call.</source>
          <target state="translated">Las opciones para especificar los interruptores de comando y los comandos envueltos pueden ser utilizados varias veces para definir múltiples terminaciones para el/los comando(s)en una sola llamada.</target>
        </trans-unit>
        <trans-unit id="167492ae418de8b794d088cd0b8696f7eb1da125" translate="yes" xml:space="preserve">
          <source>The options will be &lt;em&gt;removed&lt;/em&gt; from $argv, so $argv[2] is the second &lt;em&gt;positional&lt;/em&gt; argument now:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad33245af3be3da37e9c1809228a2452469da24" translate="yes" xml:space="preserve">
          <source>The other conditionals use the &lt;a href=&quot;#variables-status&quot;&gt;exit status&lt;/a&gt; of a command to decide if a command or a block of commands should be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514a8bdf395655769cdf0c1f52c06c11623edf78" translate="yes" xml:space="preserve">
          <source>The other conditionals use the &lt;a href=&quot;#variables-status&quot;&gt;exit status&lt;/a&gt; of a command to decide if a command or a block of commands should be executed. See the documentation for &lt;a href=&quot;commands#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;commands#and&quot;&gt;&lt;code&gt;and&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;commands#or&quot;&gt;&lt;code&gt;or&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Los otros condicionales utilizan el &lt;a href=&quot;#variables-status&quot;&gt;estado&lt;/a&gt; de salida de un comando para decidir si se debe ejecutar un comando o un bloque de comandos. Consulte la documentaci&amp;oacute;n del &lt;a href=&quot;commands#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;commands#and&quot;&gt; &lt;code&gt;and&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;commands#or&quot;&gt; &lt;code&gt;or&lt;/code&gt; &lt;/a&gt; para m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="dfcf59b6a13b148c10967aa98c28930a4e9e12a5" translate="yes" xml:space="preserve">
          <source>The other conditionals use the &lt;a href=&quot;#variables-status&quot;&gt;exit status&lt;/a&gt; of a command to decide if a command or a block of commands should be executed. See their documentation for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1764743bcfc6b735a5f4be8e624a42400f8a284e" translate="yes" xml:space="preserve">
          <source>The output is padded to the maximum width of all input strings. If &lt;code&gt;-w&lt;/code&gt; or &lt;code&gt;--width&lt;/code&gt; is given, use at least that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c811383629f8638c43b331b8903700d8404bb5" translate="yes" xml:space="preserve">
          <source>The output of a command (or an entire &lt;a href=&quot;#pipes&quot;&gt;pipeline&lt;/a&gt;) can be used as the arguments to another command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2490e597900e8176c6a2c4a4584d5571260ded3" translate="yes" xml:space="preserve">
          <source>The output of a series of commands can be used as the parameters to another command. If a parameter contains a set of parenthesis, the text enclosed by the parenthesis will be interpreted as a list of commands. On expansion, this list is executed, and substituted by the output. If the output is more than one line long, each line will be expanded to a new parameter. Setting &lt;code&gt;IFS&lt;/code&gt; to the empty string will disable line splitting.</source>
          <target state="translated">La salida de una serie de comandos se puede utilizar como par&amp;aacute;metros de otro comando. Si un par&amp;aacute;metro contiene un conjunto de par&amp;eacute;ntesis, el texto entre par&amp;eacute;ntesis se interpretar&amp;aacute; como una lista de comandos. En la expansi&amp;oacute;n, esta lista se ejecuta y se sustituye por la salida. Si la salida tiene m&amp;aacute;s de una l&amp;iacute;nea de longitud, cada l&amp;iacute;nea se expandir&amp;aacute; a un nuevo par&amp;aacute;metro. Establecer &lt;code&gt;IFS&lt;/code&gt; en la cadena vac&amp;iacute;a deshabilitar&amp;aacute; la divisi&amp;oacute;n de l&amp;iacute;neas.</target>
        </trans-unit>
        <trans-unit id="31f457d4448ccae4818e31a09dc55489e017a791" translate="yes" xml:space="preserve">
          <source>The pager can be navigated with the arrow keys,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c076b2b362e357c8c787010692c3897b0cde8acf" translate="yes" xml:space="preserve">
          <source>The previous test can likewise be inverted:</source>
          <target state="translated">La prueba anterior también puede ser invertida:</target>
        </trans-unit>
        <trans-unit id="ddedd2674467015f6a5beb34ee2fbb835520f26b" translate="yes" xml:space="preserve">
          <source>The programs &lt;code&gt;man&lt;/code&gt; and &lt;code&gt;whatis&lt;/code&gt; show all installed manual pages as completions.</source>
          <target state="translated">Los programas &lt;code&gt;man&lt;/code&gt; y &lt;code&gt;whatis&lt;/code&gt; muestran todas las p&amp;aacute;ginas del manual instaladas como finalizaciones.</target>
        </trans-unit>
        <trans-unit id="923e6b118fb538f4ca8e8f67ca4698c422b3b072" translate="yes" xml:space="preserve">
          <source>The prompt is the output of the &lt;code&gt;fish_prompt&lt;/code&gt; function. Put it in &lt;code&gt;~/.config/fish/functions/fish_prompt.fish&lt;/code&gt;. For example, a simple prompt is:</source>
          <target state="translated">El indicador es la salida de la funci&amp;oacute;n &lt;code&gt;fish_prompt&lt;/code&gt; . Ponlo en &lt;code&gt;~/.config/fish/functions/fish_prompt.fish&lt;/code&gt; . Por ejemplo, un mensaje simple es:</target>
        </trans-unit>
        <trans-unit id="f6c98e8413fa41203c749875900025da16302aca" translate="yes" xml:space="preserve">
          <source>The reason for providing for two output file descriptors is to allow separation of errors and warnings from regular program output.</source>
          <target state="translated">La razón de prever dos descriptores de archivos de salida es permitir la separación de los errores y advertencias de la salida regular del programa.</target>
        </trans-unit>
        <trans-unit id="1c641b43a1ed9a01749c093f3a5864403b12f91c" translate="yes" xml:space="preserve">
          <source>The return status is 1 if any &lt;code&gt;REASON&lt;/code&gt; is invalid; otherwise trap returns 0.</source>
          <target state="translated">El estado de devoluci&amp;oacute;n es 1 si alguna &lt;code&gt;REASON&lt;/code&gt; no es v&amp;aacute;lida; de lo contrario, trap devuelve 0.</target>
        </trans-unit>
        <trans-unit id="eec28e525883ec2bf359aa9ac84f19012ae7983d" translate="yes" xml:space="preserve">
          <source>The return status of &lt;code&gt;source&lt;/code&gt; is the return status of the last job to execute. If something goes wrong while opening or reading the file, &lt;code&gt;source&lt;/code&gt; exits with a non-zero status.</source>
          <target state="translated">El estado de devoluci&amp;oacute;n de la &lt;code&gt;source&lt;/code&gt; es el estado de devoluci&amp;oacute;n del &amp;uacute;ltimo trabajo a ejecutar. Si algo sale mal al abrir o leer el archivo, la &lt;code&gt;source&lt;/code&gt; sale con un estado distinto de cero.</target>
        </trans-unit>
        <trans-unit id="1c30a73e8a51035e518bdfeccb5ae03bbba2a49e" translate="yes" xml:space="preserve">
          <source>The same works when setting or expanding variables:</source>
          <target state="translated">Lo mismo funciona cuando se establecen o amplían las variables:</target>
        </trans-unit>
        <trans-unit id="0df43a9567e35d287e4e0a64578b1540c9c5524d" translate="yes" xml:space="preserve">
          <source>The scoping rules when creating or updating a variable are:</source>
          <target state="translated">Las reglas de alcance al crear o actualizar una variable son:</target>
        </trans-unit>
        <trans-unit id="af1ca2dded8974103c58a768e1e91d3d877d12bd" translate="yes" xml:space="preserve">
          <source>The script should write any error messages to stdout, not stderr. It should return a status of zero if the flag value is valid otherwise a non-zero status to indicate it is invalid.</source>
          <target state="translated">El guión debe escribir cualquier mensaje de error en stdout,no stderr.Debe devolver un estado de cero si el valor del indicador es válido,de lo contrario,un estado distinto de cero para indicar que es inválido.</target>
        </trans-unit>
        <trans-unit id="ea5694e15d95ca5a5e96c990e236cff7fa4686dd" translate="yes" xml:space="preserve">
          <source>The second part of a right specifies the mode, and can be one of &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt;, where &lt;code&gt;=&lt;/code&gt; specifies that the rights should be set to the new value, &lt;code&gt;+&lt;/code&gt; specifies that the specified right should be added to those previously specified and &lt;code&gt;-&lt;/code&gt; specifies that the specified rights should be removed from those previously specified.</source>
          <target state="translated">La segunda parte de un derecho especifica el modo, y puede ser uno de &lt;code&gt;=&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; o &lt;code&gt;-&lt;/code&gt; , donde &lt;code&gt;=&lt;/code&gt; especifica que los derechos deben establecerse en el nuevo valor, &lt;code&gt;+&lt;/code&gt; especifica que el derecho especificado debe agregarse a los especificados previamente y &lt;code&gt;-&lt;/code&gt; especifica que los derechos especificados deben eliminarse de los especificados anteriormente.</target>
        </trans-unit>
        <trans-unit id="38928de4a99cf4b1b80ad161ac8d51a39f94774f" translate="yes" xml:space="preserve">
          <source>The short style option &lt;code&gt;-d&lt;/code&gt; for the &lt;code&gt;grep&lt;/code&gt; command requires one of &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;skip&lt;/code&gt; or &lt;code&gt;recurse&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7823c527da5d40f4505f5d7ca9cee1dbf65bd935" translate="yes" xml:space="preserve">
          <source>The short style option &lt;code&gt;-d&lt;/code&gt; for the &lt;code&gt;grep&lt;/code&gt; command requires that one of the strings '&lt;code&gt;read&lt;/code&gt;', '&lt;code&gt;skip&lt;/code&gt;' or '&lt;code&gt;recurse&lt;/code&gt;' is used. This can be specified writing:</source>
          <target state="translated">La opci&amp;oacute;n de estilo corto &lt;code&gt;-d&lt;/code&gt; para el comando &lt;code&gt;grep&lt;/code&gt; requiere que se use una de las cadenas ' &lt;code&gt;read&lt;/code&gt; ', ' &lt;code&gt;skip&lt;/code&gt; ' o ' &lt;code&gt;recurse&lt;/code&gt; '. Esto se puede especificar escribiendo:</target>
        </trans-unit>
        <trans-unit id="47faeb09fe72243db57c3e0978defbb0c093d69c" translate="yes" xml:space="preserve">
          <source>The short style option &lt;code&gt;-o&lt;/code&gt; for the &lt;code&gt;gcc&lt;/code&gt; command needs a file argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21aef96d543138db0f5113aa8c694e877221993a" translate="yes" xml:space="preserve">
          <source>The short style option &lt;code&gt;-o&lt;/code&gt; for the &lt;code&gt;gcc&lt;/code&gt; command requires that a file follows it. This can be done using writing:</source>
          <target state="translated">La opci&amp;oacute;n de estilo corto &lt;code&gt;-o&lt;/code&gt; para el comando &lt;code&gt;gcc&lt;/code&gt; requiere que le siga un archivo. Esto se puede hacer mediante la escritura:</target>
        </trans-unit>
        <trans-unit id="d1b22e71e7a777d09a79f935b2d1b50d368962c0" translate="yes" xml:space="preserve">
          <source>The special characters and their escape sequences are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b2e415c1ad09956265d420e5d30ef098fe39f3" translate="yes" xml:space="preserve">
          <source>The status symbols themselves:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c9c314ad94ef58d396d8ee54dfb17c9688e5cf" translate="yes" xml:space="preserve">
          <source>The status variable</source>
          <target state="translated">La variable de estado</target>
        </trans-unit>
        <trans-unit id="3d79b5f2fb8b7ff9607cb6173124ce2876018175" translate="yes" xml:space="preserve">
          <source>The string FORMAT should contain format specifiers, each of which are replaced with successive arguments according to the specifier. Specifiers are detailed below, and are taken from the C library function &lt;code&gt;printf(3)&lt;/code&gt;.</source>
          <target state="translated">La cadena FORMAT debe contener especificadores de formato, cada uno de los cuales se reemplaza con argumentos sucesivos seg&amp;uacute;n el especificador. Los especificadores se detallan a continuaci&amp;oacute;n y se toman de la funci&amp;oacute;n de biblioteca C &lt;code&gt;printf(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3834fb20eb3adec382d678c86de21e4a50afed73" translate="yes" xml:space="preserve">
          <source>The svn prompt is disabled by default because it's slow on large svn repositories. To enable it, modify fish_vcs_prompt to uncomment it. See &lt;a href=&quot;funced#cmd-funced&quot;&gt;funced&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78761829292527d745af43c24666b70964c2aa8e" translate="yes" xml:space="preserve">
          <source>The third part of a right specifies what rights should be changed and can be any combination of &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;w&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt;, representing read, write and execute rights.</source>
          <target state="translated">La tercera parte de un derecho especifica qu&amp;eacute; derechos deben cambiarse y puede ser cualquier combinaci&amp;oacute;n de &lt;code&gt;r&lt;/code&gt; , &lt;code&gt;w&lt;/code&gt; y &lt;code&gt;x&lt;/code&gt; , que representan derechos de lectura, escritura y ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d877ece01d39e8e40eb99d98ee821a1189d44e6e" translate="yes" xml:space="preserve">
          <source>The tool will write an example &lt;a href=&quot;bind#cmd-bind&quot;&gt;bind&lt;/a&gt; command matching the character sequence captured to stdout. If the character sequence matches a special key name (see &lt;code&gt;bind --key-names&lt;/code&gt;), both &lt;code&gt;bind CHARS ...&lt;/code&gt; and &lt;code&gt;bind -k KEYNAME ...&lt;/code&gt; usage will be shown. Additional details about the characters received, such as the delay between chars, are written to stderr.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6aea30b4125640db0c941f62792d8db2583d13d" translate="yes" xml:space="preserve">
          <source>The tool will write an example &lt;code&gt;bind&lt;/code&gt; command matching the character sequence captured to stdout. If the character sequence matches a special key name (see &lt;code&gt;bind --key-names&lt;/code&gt;), both &lt;code&gt;bind CHARS ...&lt;/code&gt; and &lt;code&gt;bind -k KEYNAME ...&lt;/code&gt; usage will be shown. Additional details about the characters received, such as the delay between chars, are written to stderr.</source>
          <target state="translated">La herramienta escribir&amp;aacute; un comando de &lt;code&gt;bind&lt;/code&gt; ejemplo que coincida con la secuencia de caracteres capturada para stdout. Si la secuencia de caracteres coincide con un nombre de clave especial (ver &lt;code&gt;bind --key-names&lt;/code&gt; ), se &lt;code&gt;bind -k KEYNAME ...&lt;/code&gt; uso de &lt;code&gt;bind CHARS ...&lt;/code&gt; y bind -k KEYNAME ... Los detalles adicionales sobre los caracteres recibidos, como el retraso entre caracteres, se escriben en stderr.</target>
        </trans-unit>
        <trans-unit id="33a16e681c6b2de523ee079730543d5aaaa072a3" translate="yes" xml:space="preserve">
          <source>The umask may be expressed either as an octal number, which represents the rights that will be removed by default, or symbolically, which represents the only rights that will be granted by default.</source>
          <target state="translated">La umask puede expresarse como un número octal,que representa los derechos que se suprimirán por defecto,o simbólicamente,que representa los únicos derechos que se concederán por defecto.</target>
        </trans-unit>
        <trans-unit id="ff67961119e87010a71ffb5f982a7874fbd862b2" translate="yes" xml:space="preserve">
          <source>The user can change the settings of &lt;code&gt;fish&lt;/code&gt; by changing the values of certain variables.</source>
          <target state="translated">El usuario puede cambiar la configuraci&amp;oacute;n de los &lt;code&gt;fish&lt;/code&gt; cambiando los valores de ciertas variables.</target>
        </trans-unit>
        <trans-unit id="750b14e6fcc9f04250c8bd648ed58f679784632d" translate="yes" xml:space="preserve">
          <source>The user can string together multiple commands into a &lt;em&gt;pipeline&lt;/em&gt;. This means that the standard output of one command will be read in as standard input into the next command. This is done by separating the commands by the pipe character '&lt;code&gt;|&lt;/code&gt;'. For example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92734526becf97d0102e67503ae3f5ec70437f52" translate="yes" xml:space="preserve">
          <source>The user can string together multiple commands into a so called pipeline. This means that the standard output of one command will be read in as standard input into the next command. This is done by separating the commands by the pipe character '&lt;code&gt;|&lt;/code&gt;'. For example</source>
          <target state="translated">El usuario puede encadenar varios comandos en una denominada canalizaci&amp;oacute;n. Esto significa que la salida est&amp;aacute;ndar de un comando se leer&amp;aacute; como entrada est&amp;aacute;ndar en el siguiente comando. Esto se hace separando los comandos por el car&amp;aacute;cter de barra vertical ' &lt;code&gt;|&lt;/code&gt; '. Por ejemplo</target>
        </trans-unit>
        <trans-unit id="7b8b4db39167ca73155b4a80905652bbe883d472" translate="yes" xml:space="preserve">
          <source>The value of limit can be a number in the unit specified for the resource or one of the special values &lt;code&gt;hard&lt;/code&gt;, &lt;code&gt;soft&lt;/code&gt;, or &lt;code&gt;unlimited&lt;/code&gt;, which stand for the current hard limit, the current soft limit, and no limit, respectively.</source>
          <target state="translated">El valor del l&amp;iacute;mite puede ser un n&amp;uacute;mero en la unidad especificada para el recurso o uno de los valores especiales &lt;code&gt;hard&lt;/code&gt; , &lt;code&gt;soft&lt;/code&gt; o &lt;code&gt;unlimited&lt;/code&gt; , que representan el l&amp;iacute;mite duro actual, el l&amp;iacute;mite blando actual y sin l&amp;iacute;mite, respectivamente.</target>
        </trans-unit>
        <trans-unit id="9ca665e6a6512b8a0c95bbf980b6d1f431c9c003" translate="yes" xml:space="preserve">
          <source>The variables will be set with local scope (i.e., as if the script had done &lt;code&gt;set -l _flag_X&lt;/code&gt;). If the flag is a boolean (that is, it just is passed or not, it doesn't have a value) the values are the short and long flags seen. If the option is not a boolean the values will be zero or more values corresponding to the values collected when the ARG list is processed. If the flag was not seen the flag variable will not be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2f6068a9dad88efc3494909770d142904666d0" translate="yes" xml:space="preserve">
          <source>The web interface allows you to view your functions, variables and history, and to make changes to your prompt and color configuration.</source>
          <target state="translated">La interfaz web le permite ver sus funciones,variables e historial,y hacer cambios en la configuración de avisos y colores.</target>
        </trans-unit>
        <trans-unit id="27cd5ebce2dff7c39841e898f946a341a35b41e4" translate="yes" xml:space="preserve">
          <source>Then the following invocations behave like this:</source>
          <target state="translated">Entonces las siguientes invocaciones se comportan así:</target>
        </trans-unit>
        <trans-unit id="20c1373ed37a3dee3a825fe7d548ac46a6928bf3" translate="yes" xml:space="preserve">
          <source>Then, if you are happy with it, you can save it to disk by typing &lt;code&gt;funcsave fish_prompt&lt;/code&gt;. This saves the prompt in &lt;code&gt;~/.config/fish/functions/fish_prompt.fish&lt;/code&gt;. (Or, if you want, you can create that file manually from the start.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa54c06d5fdedec560ab96fcbf9871934330e6d3" translate="yes" xml:space="preserve">
          <source>There are a few important things that need to be noted about aliases:</source>
          <target state="translated">Hay algunas cosas importantes que deben ser anotadas sobre los alias:</target>
        </trans-unit>
        <trans-unit id="a92222b51e2c8f981924f999522d99c277c7fff5" translate="yes" xml:space="preserve">
          <source>There are a few possible uses for different scopes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bead6244a797e147f47c59aa8f116fc1866372d" translate="yes" xml:space="preserve">
          <source>There are also special switches for specifying that a switch requires an argument, to disable filename completion, to create completions that are only available in some combinations, etc.. For a complete description of the various switches accepted by the &lt;code&gt;complete&lt;/code&gt; command, see the documentation for the &lt;a href=&quot;cmds/complete#cmd-complete&quot;&gt;complete&lt;/a&gt; builtin, or write &lt;code&gt;complete --help&lt;/code&gt; inside the &lt;code&gt;fish&lt;/code&gt; shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba25ca105726fc0d596821887908ff16a459bda" translate="yes" xml:space="preserve">
          <source>There are also special switches for specifying that a switch requires an argument, to disable filename completion, to create completions that are only available in some combinations, etc.. For a complete description of the various switches accepted by the &lt;code&gt;complete&lt;/code&gt; command, see the documentation for the &lt;a href=&quot;commands#complete&quot;&gt;complete&lt;/a&gt; builtin, or write &lt;code&gt;complete --help&lt;/code&gt; inside the &lt;code&gt;fish&lt;/code&gt; shell.</source>
          <target state="translated">Tambi&amp;eacute;n hay conmutadores especiales para especificar que un conmutador requiere un argumento, para deshabilitar la finalizaci&amp;oacute;n del nombre de archivo, para crear finalizaciones que solo est&amp;aacute;n disponibles en algunas combinaciones, etc. Para obtener una descripci&amp;oacute;n completa de los diversos conmutadores aceptados por el comando &lt;code&gt;complete&lt;/code&gt; , consulte la documentaci&amp;oacute;n para el builtin &lt;a href=&quot;commands#complete&quot;&gt;completo&lt;/a&gt; , o escriba &lt;code&gt;complete --help&lt;/code&gt; inside the &lt;code&gt;fish&lt;/code&gt; shell.</target>
        </trans-unit>
        <trans-unit id="8f62b81b574864e97ff42dca00b7081081edae35" translate="yes" xml:space="preserve">
          <source>There are four fish builtins that let you execute commands only if a specific criterion is met. These builtins are &lt;a href=&quot;cmds/if#cmd-if&quot;&gt;if&lt;/a&gt;, &lt;a href=&quot;cmds/switch#cmd-switch&quot;&gt;switch&lt;/a&gt;, &lt;a href=&quot;cmds/and#cmd-and&quot;&gt;and&lt;/a&gt; and &lt;a href=&quot;cmds/or#cmd-or&quot;&gt;or&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9df96be8b6a2362ccd2ca558b23ccf8d96cd57" translate="yes" xml:space="preserve">
          <source>There are four fish builtins that let you execute commands only if a specific criterion is met. These builtins are &lt;a href=&quot;commands#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;commands#switch&quot;&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;commands#and&quot;&gt;&lt;code&gt;and&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;commands#or&quot;&gt;&lt;code&gt;or&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Hay cuatro funciones de pez que le permiten ejecutar comandos solo si se cumple un criterio espec&amp;iacute;fico. Estas &amp;oacute;rdenes internas son &lt;a href=&quot;commands#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;commands#switch&quot;&gt; &lt;code&gt;switch&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;commands#and&quot;&gt; &lt;code&gt;and&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;commands#or&quot;&gt; &lt;code&gt;or&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b2d351b6ae375a8f6e30f9a4f15f06461eb44b4" translate="yes" xml:space="preserve">
          <source>There are no multiline comments. If you want to make a comment span multiple lines, simply start each line with a &lt;code&gt;#&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41675f9cf420970709f08c4fa09e126c6834d476" translate="yes" xml:space="preserve">
          <source>There are no options to control globbing so it always behaves like that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255b5925229ebf64b3dccbaf56f554bfda33418a" translate="yes" xml:space="preserve">
          <source>There are no parameters for &lt;code&gt;break&lt;/code&gt;.</source>
          <target state="translated">No hay par&amp;aacute;metros para &lt;code&gt;break&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a56ebf43ed98e5db43b2052e83aa4d07a4140747" translate="yes" xml:space="preserve">
          <source>There are no parameters for &lt;code&gt;breakpoint&lt;/code&gt;.</source>
          <target state="translated">No hay par&amp;aacute;metros para el &lt;code&gt;breakpoint&lt;/code&gt; de interrupci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="c25f17ac972a261d801c33ab7a6b142dc2017014" translate="yes" xml:space="preserve">
          <source>There are no parameters for &lt;code&gt;fish_update_completions&lt;/code&gt;.</source>
          <target state="translated">No hay par&amp;aacute;metros para &lt;code&gt;fish_update_completions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b64e5bca9c9d038dcdaec525201a6e983cd4c039" translate="yes" xml:space="preserve">
          <source>There are numerous customization options, which can be controlled with fish variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416f9bfa834c4b421dc3928904fcdb14dcbe03e2" translate="yes" xml:space="preserve">
          <source>There are numerous customization options, which can be controlled with git options or fish variables. git options, where available, take precedence over the fish variable with the same function. git options can be set on a per-repository or global basis. git options can be set with the &lt;code&gt;git config&lt;/code&gt; command, while fish variables can be set as usual with the &lt;a href=&quot;set#cmd-set&quot;&gt;set&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd120b1aba4ded7c561e9d4f21f84619af0191cb" translate="yes" xml:space="preserve">
          <source>There are three kinds of variables in fish: universal, global and local variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031b665a362fca99dc2232105e16d4be76ec8e13" translate="yes" xml:space="preserve">
          <source>There are three kinds of variables in fish: universal, global and local variables. Universal variables are shared between all fish sessions a user is running on one computer. Global variables are specific to the current fish session, but are not associated with any specific block scope, and will never be erased unless the user explicitly requests it using &lt;code&gt;set -e&lt;/code&gt;. Local variables are specific to the current fish session, and associated with a specific block of commands, and is automatically erased when a specific block goes out of scope. A block of commands is a series of commands that begins with one of the commands &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; , &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;switch&lt;/code&gt;, and ends with the command &lt;code&gt;end&lt;/code&gt;. The user can specify that a variable should have either global or local scope using the &lt;code&gt;-g/--global&lt;/code&gt; or &lt;code&gt;-l/--local&lt;/code&gt; switches.</source>
          <target state="translated">Hay tres tipos de variables en el pescado: variables universales, globales y locales. Las variables universales se comparten entre todas las sesiones de pesca que un usuario ejecuta en una computadora. Las variables globales son espec&amp;iacute;ficas de la sesi&amp;oacute;n de pesca actual, pero no est&amp;aacute;n asociadas con ning&amp;uacute;n alcance de bloque espec&amp;iacute;fico y nunca se borrar&amp;aacute;n a menos que el usuario lo solicite expl&amp;iacute;citamente usando &lt;code&gt;set -e&lt;/code&gt; . Las variables locales son espec&amp;iacute;ficas de la sesi&amp;oacute;n de pesca actual y est&amp;aacute;n asociadas con un bloque espec&amp;iacute;fico de comandos, y se borran autom&amp;aacute;ticamente cuando un bloque espec&amp;iacute;fico sale del alcance. Un bloque de comandos es una serie de comandos que comienza con uno de los comandos &lt;code&gt;for&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; , &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;function&lt;/code&gt; , &lt;code&gt;begin&lt;/code&gt; o &lt;code&gt;switch&lt;/code&gt; y termina con el comando &lt;code&gt;end&lt;/code&gt; . El usuario puede especificar que una variable debe tener un alcance global o local utilizando los modificadores &lt;code&gt;-g/--global&lt;/code&gt; o &lt;code&gt;-l/--local&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e53b3e187fabe1e40c14b723e24b9fbf71412fee" translate="yes" xml:space="preserve">
          <source>There are two breaking changes in fish 3.0: caret &lt;code&gt;^&lt;/code&gt; no longer redirects stderr, and question mark &lt;code&gt;?&lt;/code&gt; is no longer a glob.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8bb46a6b8bc305c23a119159486bd2d5c470ee5" translate="yes" xml:space="preserve">
          <source>There are two breaking changes in fish 3.0: caret &lt;code&gt;^&lt;/code&gt; no longer redirects stderr, and question mark &lt;code&gt;?&lt;/code&gt; is no longer a glob. These changes are off by default. They can be enabled on a per session basis:</source>
          <target state="translated">Hay dos cambios importantes en Fish 3.0: caret &lt;code&gt;^&lt;/code&gt; ya no redirige stderr y question mark &lt;code&gt;?&lt;/code&gt; ya no es un glob. Estos cambios est&amp;aacute;n desactivados de forma predeterminada. Se pueden habilitar por sesi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="6e66bd08a5ba89d0954ad9909f64383e4a87bdf0" translate="yes" xml:space="preserve">
          <source>There can be many variables with the same name, but different scopes. When you &lt;a href=&quot;#expand-variable&quot;&gt;use a variable&lt;/a&gt;, the smallest scoped variable of that name will be used. If a local variable exists, it will be used instead of the global or universal variable of the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcc1aa82fa8e3e84e1746b6a27a38d0c390796a" translate="yes" xml:space="preserve">
          <source>There is a function called &lt;a href=&quot;cmds/alias#cmd-alias&quot;&gt;alias&lt;/a&gt;, but it's just a shortcut to make functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e415ead715f11f67297da7b425bcc5e4aa40b89" translate="yes" xml:space="preserve">
          <source>There is also a &lt;a href=&quot;cmds/switch#cmd-switch&quot;&gt;switch&lt;/a&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b4e1d35ca4c236214ba374558333566d7c39ce" translate="yes" xml:space="preserve">
          <source>There is also a &lt;code&gt;$pipestatus&lt;/code&gt; list variable for the exit statuses &lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt; of processes in a pipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ceb2460c137862f053425df367d426c42e4313" translate="yes" xml:space="preserve">
          <source>There is also a &lt;code&gt;switch&lt;/code&gt; command:</source>
          <target state="translated">Tambi&amp;eacute;n hay un comando de &lt;code&gt;switch&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="57875a262d2c2eb3777d4d6118abc803d714194f" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;$''&lt;/code&gt;, instead the sequences that would transform are transformed &lt;em&gt;when unquoted&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9457a5982580c619b1f010b4a7510be7a176dfe" translate="yes" xml:space="preserve">
          <source>There is one breaking change in fish 3.1: &lt;code&gt;string replace -r&lt;/code&gt; does a superfluous round of escaping for the replacement, so escaping backslashes would look like &lt;code&gt;string replace -ra '([ab])' '\\\\\\\$1' a&lt;/code&gt;. This flag removes that if turned on, so &lt;code&gt;'\\\\$1'&lt;/code&gt; is enough.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0866a618c196f1ac7d2ced3309d7b238c006085" translate="yes" xml:space="preserve">
          <source>There may be many variables with the same name, but different scopes. When using a variable, the variable scope will be searched from the inside out, i.e. a local variable will be used rather than a global variable with the same name, a global variable will be used rather than a universal variable with the same name.</source>
          <target state="translated">Puede haber muchas variables con el mismo nombre,pero diferentes alcances.Cuando se utiliza una variable,el ámbito de la variable se buscará de adentro hacia afuera,es decir,se utilizará una variable local en lugar de una variable global con el mismo nombre,se utilizará una variable global en lugar de una variable universal con el mismo nombre.</target>
        </trans-unit>
        <trans-unit id="d7f028aa2b19c153baae8d83c317ae110446208a" translate="yes" xml:space="preserve">
          <source>These are the general purpose tab completions that &lt;code&gt;fish&lt;/code&gt; provides:</source>
          <target state="translated">Estas son las terminaciones de la ficha de prop&amp;oacute;sito general que &lt;code&gt;fish&lt;/code&gt; proporciona:</target>
        </trans-unit>
        <trans-unit id="a541ca19e60c8c36165c2c4faab471af97abf450" translate="yes" xml:space="preserve">
          <source>These changes are off by default. They can be enabled on a per session basis:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f240a03ecd9ebdbd8bb2b071dbc72c7fb11026f" translate="yes" xml:space="preserve">
          <source>These colors, and many more, can be changed by running &lt;code&gt;fish_config&lt;/code&gt;, or by modifying &lt;a href=&quot;index#variables-color&quot;&gt;color variables&lt;/a&gt; directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7972582e9c4968e777fc42db67d9b318fa79e46" translate="yes" xml:space="preserve">
          <source>These colors, and many more, can be changed by running &lt;code&gt;fish_config&lt;/code&gt;, or by modifying variables directly.</source>
          <target state="translated">Estos colores, y muchos m&amp;aacute;s, se pueden cambiar ejecutando &lt;code&gt;fish_config&lt;/code&gt; o modificando las variables directamente.</target>
        </trans-unit>
        <trans-unit id="91e1e5aba0c598515d08d40af2f8d04dd57004f4" translate="yes" xml:space="preserve">
          <source>These files are all executed on the startup of every shell. If you want to run a command only on starting an interactive shell, use the exit status of the command &lt;code&gt;status --is-interactive&lt;/code&gt; to determine if the shell is interactive. If you want to run a command only when using a login shell, use &lt;code&gt;status --is-login&lt;/code&gt; instead. This will speed up the starting of non-interactive or non-login shells.</source>
          <target state="translated">Todos estos archivos se ejecutan al inicio de cada shell. Si desea ejecutar un comando solo al iniciar un shell interactivo, use el estado de salida del comando &lt;code&gt;status --is-interactive&lt;/code&gt; para determinar si el shell es interactivo. Si desea ejecutar un comando solo cuando usa un shell de inicio de sesi&amp;oacute;n, use &lt;code&gt;status --is-login&lt;/code&gt; en su lugar. Esto acelerar&amp;aacute; el inicio de shells no interactivos o sin inicio de sesi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="80b96b3d74710e83d20ff5ac21723a42f2f052d6" translate="yes" xml:space="preserve">
          <source>These flags can appear before or immediately after one of the sub-commands listed above.</source>
          <target state="translated">Estas banderas pueden aparecer antes o inmediatamente después de uno de los subcomandos mencionados.</target>
        </trans-unit>
        <trans-unit id="0a1a70df80594e6385f1bb77aed0566514490dd4" translate="yes" xml:space="preserve">
          <source>These options can also be changed via the $FISH_DEBUG and $FISH_DEBUG_OUTPUT variables. The categories enabled via &lt;code&gt;--debug&lt;/code&gt; are &lt;em&gt;added&lt;/em&gt; to the ones enabled by $FISH_DEBUG, so they can be disabled by prefixing them with &lt;code&gt;-&lt;/code&gt; (&lt;code&gt;reader-*,-ast*&lt;/code&gt; enables reader debugging and disables ast debugging).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="018467e6400b14718548d65eb59c273e2720ed52" translate="yes" xml:space="preserve">
          <source>These paths are controlled by parameters set at build, install, or run time, and may vary from the defaults listed above.</source>
          <target state="translated">Estas rutas están controladas por parámetros establecidos en el momento de la construcción,instalación o ejecución,y pueden variar de los valores predeterminados mencionados anteriormente.</target>
        </trans-unit>
        <trans-unit id="e0f227d731eb85d679b8689a23b63dd21f1e30dc" translate="yes" xml:space="preserve">
          <source>These problems are generally caused by the &lt;a href=&quot;index#initialization&quot;&gt;user initialization file&lt;/a&gt; (usually &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt;) producing output when started in non-interactive mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59764234fbda3a5ae9dc6fc3ff0782f754b46b8c" translate="yes" xml:space="preserve">
          <source>These rely on external tools. Currently xsel, xclip, wl-copy/wl-paste and pbcopy/pbpaste are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff2e8e4beb1e0db4118c370fb4cace2f8ea572e" translate="yes" xml:space="preserve">
          <source>These variables are passed to the function as local exported variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24f98a189aa3819db3885dc20417a7ef5fd2074" translate="yes" xml:space="preserve">
          <source>They are all used in an infix manner - &lt;code&gt;5 + 2&lt;/code&gt;, not &lt;code&gt;+ 5 2&lt;/code&gt;.</source>
          <target state="translated">Todos se usan de manera infija: &lt;code&gt;5 + 2&lt;/code&gt; , no &lt;code&gt;+ 5 2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c0f73538164b821e962b37c1ab4243fee6900c4" translate="yes" xml:space="preserve">
          <source>This also applies to &lt;a href=&quot;cmds/fish_right_prompt#cmd-fish-right-prompt&quot;&gt;fish_right_prompt&lt;/a&gt; and &lt;a href=&quot;cmds/fish_mode_prompt#cmd-fish-mode-prompt&quot;&gt;fish_mode_prompt&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e037c16e89673bc6c789c7a56fb11f5ef6afe572" translate="yes" xml:space="preserve">
          <source>This also applies to fish - when it starts up, it receives environment variables from its parent (usually the terminal). These typically include system configuration like &lt;a href=&quot;#path&quot;&gt;$PATH&lt;/a&gt; and &lt;a href=&quot;#variables-locale&quot;&gt;locale variables&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af768071c5b224ad5b92ddb2ba1221dcbc0d859d" translate="yes" xml:space="preserve">
          <source>This also happens after &lt;a href=&quot;#expand-command-substitution&quot;&gt;command substitution&lt;/a&gt;. Therefore strings might be eliminated. This can be avoided by making the inner command return a trailing newline.</source>
          <target state="translated">Esto tambi&amp;eacute;n sucede despu&amp;eacute;s de la &lt;a href=&quot;#expand-command-substitution&quot;&gt;sustituci&amp;oacute;n del comando&lt;/a&gt; . Por lo tanto, se podr&amp;iacute;an eliminar las cadenas. Esto se puede evitar haciendo que el comando interno devuelva una nueva l&amp;iacute;nea al final.</target>
        </trans-unit>
        <trans-unit id="5862d4da112945498ea94b6d7f269d1e61fc0beb" translate="yes" xml:space="preserve">
          <source>This also happens after &lt;a href=&quot;#expand-command-substitution&quot;&gt;command substitution&lt;/a&gt;. To avoid tokens disappearing there, make the inner command return a trailing newline, or store the output in a variable and double-quote it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee81161214cb28f5e40645cd788da1b748a880bf" translate="yes" xml:space="preserve">
          <source>This also means that a few things are unsupportable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c81de6d4b84d88e0bc761153be31bad7326fa6" translate="yes" xml:space="preserve">
          <source>This assumes you installed fish to /usr/local/bin, which is the default location when you've compiled it yourself. If you installed it with a package manager, the usual location is /usr/bin/fish, but package managers typically already add it to /etc/shells. Just substitute the correct location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2c383ecda8a4c5bf0708b66a394d7bf089bafc" translate="yes" xml:space="preserve">
          <source>This bit of the documentation is a quick guide on how to get going. If you are new to this, see the &lt;a href=&quot;tutorial#tutorial&quot;&gt;tutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242bcbd19612b56a15e5401c1d4c647240f20532" translate="yes" xml:space="preserve">
          <source>This calls the &lt;a href=&quot;cmds/echo#cmd-echo&quot;&gt;echo&lt;/a&gt; command. &lt;code&gt;echo&lt;/code&gt; writes its arguments to the screen. In the example above, the output is &lt;code&gt;hello world&lt;/code&gt;. Everything in fish is done with commands. There are commands for repeating other commands, commands for assigning variables, commands for treating a group of commands as a single command, etc. All of these commands follow the same basic syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a28f4bed992d7cf613847d7498fafe31511aea" translate="yes" xml:space="preserve">
          <source>This calls the &lt;code&gt;echo&lt;/code&gt; command. &lt;code&gt;echo&lt;/code&gt; is a command which will write its arguments to the screen. In the example above, the output will be 'hello world'. Everything in fish is done with commands. There are commands for performing a set of commands multiple times, commands for assigning variables, commands for treating a group of commands as a single command, etc.. And every single command follows the same basic syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50932aeaca87e43aadc296b2abd6503a42d3550" translate="yes" xml:space="preserve">
          <source>This calls the &lt;code&gt;echo&lt;/code&gt; command. &lt;code&gt;echo&lt;/code&gt; is a command which will write its arguments to the screen. In the example above, the output will be 'hello world'. Everything in fish is done with commands. There are commands for performing a set of commands multiple times, commands for assigning variables, commands for treating a group of commands as a single command, etc.. And every single command follows the same simple syntax.</source>
          <target state="translated">Esto llama al comando &lt;code&gt;echo&lt;/code&gt; . &lt;code&gt;echo&lt;/code&gt; es un comando que escribir&amp;aacute; sus argumentos en la pantalla. En el ejemplo anterior, la salida ser&amp;aacute; 'hola mundo'. Todo en pescado se hace con comandos. Hay comandos para ejecutar un conjunto de comandos varias veces, comandos para asignar variables, comandos para tratar un grupo de comandos como un solo comando, etc. Y cada comando sigue la misma sintaxis simple.</target>
        </trans-unit>
        <trans-unit id="d7f43076657a40a0a56470982d549a61a4508f48" translate="yes" xml:space="preserve">
          <source>This can be quite useful. For example, if you want to go through all the files in all the directories in $PATH, use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366a5d79af152ebea92d5f861ed8a475043b7941" translate="yes" xml:space="preserve">
          <source>This can be written as:</source>
          <target state="translated">Esto se puede escribir como:</target>
        </trans-unit>
        <trans-unit id="2c3fa67d634b278ec1a7802bf809ac5774656af1" translate="yes" xml:space="preserve">
          <source>This code will add some directories to $PATH if they aren't yet included:</source>
          <target state="translated">Este código añadirá algunos directorios a $PATH si aún no están incluidos:</target>
        </trans-unit>
        <trans-unit id="46b694f24aed40624e847ae57ae10b126b23d033" translate="yes" xml:space="preserve">
          <source>This command makes it easy for fish scripts and functions to handle arguments in a manner 100% identical to how fish builtin commands handle their arguments. You pass a sequence of arguments that define the options recognized, followed by a literal &lt;code&gt;--&lt;/code&gt;, then the arguments to be parsed (which might also include a literal &lt;code&gt;--&lt;/code&gt;). More on this in the &lt;a href=&quot;#argparse-usage&quot;&gt;usage&lt;/a&gt; section below.</source>
          <target state="translated">Este comando facilita que los scripts y funciones de fish manejen argumentos de una manera 100% id&amp;eacute;ntica a c&amp;oacute;mo los comandos integrados de fish manejan sus argumentos. Pasas una secuencia de argumentos que definen las opciones reconocidas, seguidas de un literal &lt;code&gt;--&lt;/code&gt; , luego los argumentos a analizar (que tambi&amp;eacute;n pueden incluir un literal &lt;code&gt;--&lt;/code&gt; ). M&amp;aacute;s sobre esto en la secci&amp;oacute;n de &lt;a href=&quot;#argparse-usage&quot;&gt;uso a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="51ecea6002832d6f166772d002d2b9826d4db24b" translate="yes" xml:space="preserve">
          <source>This command makes it easy for fish scripts and functions to handle arguments like how fish builtin commands handle their arguments. You pass arguments that define the known options, followed by a literal &lt;code&gt;--&lt;/code&gt;, then the arguments to be parsed (which might also include a literal &lt;code&gt;--&lt;/code&gt;). &lt;code&gt;argparse&lt;/code&gt; then sets variables to indicate the passed options with their values, and sets $argv (and always $argv) to the remaining arguments. More on this in the &lt;a href=&quot;#usage&quot;&gt;usage&lt;/a&gt; section below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20cd8d04285455a5eeee7e58dc05b32ca7729358" translate="yes" xml:space="preserve">
          <source>This command provides a way to produce option specifications suitable for use with the &lt;a href=&quot;#argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; command. You can, of course, write the option specs by hand without using this command. But you might prefer to use this for the clarity it provides.</source>
          <target state="translated">Este comando proporciona una forma de producir especificaciones de opciones adecuadas para usar con el comando &lt;a href=&quot;#argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt; . Por supuesto, puede escribir las especificaciones de las opciones a mano sin usar este comando. Pero es posible que prefiera usar esto por la claridad que proporciona.</target>
        </trans-unit>
        <trans-unit id="a74b8d6f46def2454cb1a7815efcf306bc15eb2a" translate="yes" xml:space="preserve">
          <source>This command provides a way to produce option specifications suitable for use with the &lt;a href=&quot;argparse#cmd-argparse&quot;&gt;argparse&lt;/a&gt; command. You can, of course, write the option specs by hand without using this command. But you might prefer to use this for the clarity it provides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59ff744d5f96fc84e3687f1f094a0f6cc1182bc" translate="yes" xml:space="preserve">
          <source>This command was introduced in fish 3.2.0. Previous versions of fish used the &quot;fish_command_not_found&quot; &lt;a href=&quot;../index#event&quot;&gt;event&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7278174eb8df4d8cf8cf4810097720c8a46b647" translate="yes" xml:space="preserve">
          <source>This creates a temporary file, stores the output of the command in that file and prints the filename, so it is given to the outer command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07448165c0f812cb8478f38c84a94b14d2215ae2" translate="yes" xml:space="preserve">
          <source>This does not overwrite custom completions.</source>
          <target state="translated">Esto no sobrescribe las terminaciones personalizadas.</target>
        </trans-unit>
        <trans-unit id="8d876af295a974aa3fa22db08bb217710ab623ce" translate="yes" xml:space="preserve">
          <source>This does not read numbers given as &lt;code&gt;+NNN&lt;/code&gt;, only those that look like flags - &lt;code&gt;-NNN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6147eda0417a76ae63d83548f1bb6d3684130031" translate="yes" xml:space="preserve">
          <source>This file has been imported from the printf in GNU Coreutils version 6.9. If you would like to use a newer version of printf, for example the one shipped with your OS, try &lt;code&gt;command printf&lt;/code&gt;.</source>
          <target state="translated">Este archivo ha sido importado de printf en GNU Coreutils versi&amp;oacute;n 6.9. Si desea utilizar una versi&amp;oacute;n m&amp;aacute;s reciente de printf, por ejemplo, la que se env&amp;iacute;a con su sistema operativo, pruebe el &lt;code&gt;command printf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36a27e8809bc8ecec60cf5b8b496d2f657edff50" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Please call &lt;code&gt;fish_vi_key_bindings directly&lt;/code&gt;</source>
          <target state="translated">Esta funci&amp;oacute;n est&amp;aacute; obsoleta. Llame a &lt;code&gt;fish_vi_key_bindings directly&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6bb30a141584bbcfda9f7bb389eaff8fab492867" translate="yes" xml:space="preserve">
          <source>This function takes whatever arguments it gets and prints the first and third:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ffa9c43b28edd0a7fd5ea7d8c790c69c51b478" translate="yes" xml:space="preserve">
          <source>This goes over every directory in $PATH separately and prints a line saying it is in the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbee0ce24ddb2a7779ce4b45c3fe6d00ac4de3f" translate="yes" xml:space="preserve">
          <source>This indicates how the command fared - 0 usually means success, while the others signify kinds of failure. For instance fish's &lt;code&gt;set --query&lt;/code&gt; returns the number of variables it queried that weren't set - &lt;code&gt;set --query PATH&lt;/code&gt; usually returns 0, &lt;code&gt;set --query arglbargl boogagoogoo&lt;/code&gt; usually returns 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42846739d24ee758a7b3a2194b5979dbb4c14902" translate="yes" xml:space="preserve">
          <source>This is a kind of function known as a &lt;a href=&quot;#syntax-function-wrappers&quot;&gt;wrapper&lt;/a&gt; or &quot;alias&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbbea16193e927515d0dc3be9146ab095157af42" translate="yes" xml:space="preserve">
          <source>This is a short explanation of some of the commonly used words in fish.</source>
          <target state="translated">Esta es una breve explicación de algunas de las palabras comúnmente usadas en los peces.</target>
        </trans-unit>
        <trans-unit id="c08782246abd769f65e5240248630e4c4eb762a8" translate="yes" xml:space="preserve">
          <source>This is an alternative to aliases, and has the advantage that you see the actual command before using it, and the actual command will be stored in history.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d244f1f10393a3fd4f3ebf581d37f923228ef19" translate="yes" xml:space="preserve">
          <source>This is implemented as a function and a builtin. The function will attempt to use an external realpath command if one can be found. Otherwise it falls back to the builtin. The builtin does not support any options. It's meant to be used only by scripts which need to be portable. The builtin implementation behaves like GNU realpath when invoked without any options (which is the most common use case). In general scripts should not invoke the builtin directly. They should just use &lt;code&gt;realpath&lt;/code&gt;.</source>
          <target state="translated">Esto se implementa como una funci&amp;oacute;n y una funci&amp;oacute;n incorporada. La funci&amp;oacute;n intentar&amp;aacute; utilizar un comando realpath externo si se puede encontrar uno. De lo contrario, vuelve a la configuraci&amp;oacute;n incorporada. El incorporado no admite ninguna opci&amp;oacute;n. Est&amp;aacute; destinado a ser utilizado solo por scripts que deben ser port&amp;aacute;tiles. La implementaci&amp;oacute;n incorporada se comporta como GNU realpath cuando se invoca sin ninguna opci&amp;oacute;n (que es el caso de uso m&amp;aacute;s com&amp;uacute;n). En general, los scripts no deben invocar directamente el archivo incorporado. Solo deber&amp;iacute;an usar &lt;code&gt;realpath&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02eb29102e35b60198abd6b2a437d296ee6b593d" translate="yes" xml:space="preserve">
          <source>This is more important to fish than other shells because features like syntax highlighting and autosuggestions are implemented by moving the cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1d4171e513cf57adfa5dbd82bf66ed41edba27" translate="yes" xml:space="preserve">
          <source>This is not an exhaustive list and the fish project has no opinion regarding the merits of the repositories listed above or the scripts found therein.</source>
          <target state="translated">No se trata de una lista exhaustiva y el Proyecto Pez no tiene ninguna opinión sobre los méritos de los depósitos enumerados anteriormente o los guiones que se encuentran en ellos.</target>
        </trans-unit>
        <trans-unit id="096d775aa834b5a98fc75f9c9df8cd5ad1df3f6c" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;index#expand-brace&quot;&gt;Brace expansion&lt;/a&gt;.</source>
          <target state="translated">Esto es similar a la &lt;a href=&quot;index#expand-brace&quot;&gt;expansi&amp;oacute;n de Brace&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="29a7e62ae3df780620ab5b6db68453aaf61e47e8" translate="yes" xml:space="preserve">
          <source>This is similar to bash's &quot;failglob&quot; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b5c6aa51fef3c82ea1bd8fddb7c95bed61e89d" translate="yes" xml:space="preserve">
          <source>This is the documentation for &lt;code&gt;fish&lt;/code&gt;, the friendly interactive shell. &lt;code&gt;fish&lt;/code&gt; is a user friendly commandline shell intended mostly for interactive use. A shell is a program used to execute other programs. For the latest information on &lt;code&gt;fish&lt;/code&gt;, please visit the &lt;a href=&quot;https://fishshell.com/&quot;&gt;&lt;code&gt;fish&lt;/code&gt; homepage&lt;/a&gt;.</source>
          <target state="translated">Esta es la documentaci&amp;oacute;n de &lt;code&gt;fish&lt;/code&gt; , el simp&amp;aacute;tico caparaz&amp;oacute;n interactivo. &lt;code&gt;fish&lt;/code&gt; es un shell de l&amp;iacute;nea de comandos f&amp;aacute;cil de usar dise&amp;ntilde;ado principalmente para uso interactivo. Un shell es un programa que se utiliza para ejecutar otros programas. Para obtener la informaci&amp;oacute;n m&amp;aacute;s reciente sobre &lt;code&gt;fish&lt;/code&gt; , visite la &lt;a href=&quot;https://fishshell.com/&quot;&gt;p&amp;aacute;gina de inicio de &lt;/a&gt; &lt;code&gt;fish&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dbd4206fa5ed554553ccafdb81158a2765cb589" translate="yes" xml:space="preserve">
          <source>This is the documentation for &lt;em&gt;fish&lt;/em&gt;, the &lt;strong&gt;f&lt;/strong&gt;riendly &lt;strong&gt;i&lt;/strong&gt;nteractive &lt;strong&gt;sh&lt;/strong&gt;ell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92aefc1a52c71a85a78cc971b6c1d5c9539281b3" translate="yes" xml:space="preserve">
          <source>This is the documentation for &lt;strong&gt;fish&lt;/strong&gt;, the &lt;strong&gt;f&lt;/strong&gt;riendly &lt;strong&gt;i&lt;/strong&gt;nteractive &lt;strong&gt;sh&lt;/strong&gt;ell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577bd6355fb298c4b6b2d6488f451eaa11f5dbb8" translate="yes" xml:space="preserve">
          <source>This is the preferred way to define your prompt as well:</source>
          <target state="translated">Esta es la forma preferida para definir su aviso también:</target>
        </trans-unit>
        <trans-unit id="d682fbb50ebb7a2307c888a8c708e837d0f174a7" translate="yes" xml:space="preserve">
          <source>This is to give you a quick overview if you come from bash (or to a lesser extent other shells like zsh or ksh) and want to know how fish differs. Fish is intentionally not POSIX-compatible and as such some of the things you are used to work differently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36aa325151397e7468490d9f008691d69c01ff3b" translate="yes" xml:space="preserve">
          <source>This is typically used together with &lt;a href=&quot;funced#cmd-funced&quot;&gt;funced&lt;/a&gt;, which will open the function in your editor and load it in the current seession afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d9754ec8407965c3cbfc3b364ea4b70ea05378" translate="yes" xml:space="preserve">
          <source>This is useful to explain what and why you are doing something:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e20bc0bbf6f3a094416aeb9967f247c41c79abd" translate="yes" xml:space="preserve">
          <source>This isn't specific to argparse but common to all things using &lt;code&gt;getopt(3)&lt;/code&gt; (if they have optional arguments at all). That &lt;code&gt;grep&lt;/code&gt; example is how GNU grep actually behaves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae35cced4effb763cdd5c51f3c938b7ee1f84dcc" translate="yes" xml:space="preserve">
          <source>This line is only needed when scripts are executed without specifying the interpreter. For functions inside fish or when executing a script with &lt;code&gt;`fish /path/to/script&lt;/code&gt; they aren't required (but don't hurt either!).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb1e8c793d879fcc7211d62126c449110f747e8" translate="yes" xml:space="preserve">
          <source>This line is only needed when scripts are executed without specifying the interpreter. For functions inside fish or when executing a script with &lt;code&gt;fish /path/to/script&lt;/code&gt;, a shebang is not required (but it doesn't hurt!).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44756654753bba67ac9fe0b2cb5461aed36daaa0" translate="yes" xml:space="preserve">
          <source>This line tells the shell to execute the file with the bash interpreter, that is located at the path &lt;code&gt;/bin/bash&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc576b35450257aadce9343fd3afaecbb82068c" translate="yes" xml:space="preserve">
          <source>This means that the global value takes precedence over the universal value.</source>
          <target state="translated">Esto significa que el valor global tiene prioridad sobre el valor universal.</target>
        </trans-unit>
        <trans-unit id="47d6e70d0d49cd275f91f52dd4bedfd9891bd255" translate="yes" xml:space="preserve">
          <source>This page can be viewed via &lt;code&gt;help index&lt;/code&gt; (or just &lt;code&gt;help&lt;/code&gt;) or &lt;code&gt;man fish-doc&lt;/code&gt;. The tutorial can be viewed with &lt;code&gt;help tutorial&lt;/code&gt; or &lt;code&gt;man fish-tutorial&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d8f78e08b40db86d5c72927eaed6ea7f694252" translate="yes" xml:space="preserve">
          <source>This page gives an overview of fish's features, syntax, and interface. If this is your first time using fish, see the &lt;a href=&quot;tutorial#tutorial&quot;&gt;tutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ce226a719bb61f2e28f1a537f01bad1bd3083a" translate="yes" xml:space="preserve">
          <source>This printf has been imported from the printf in GNU Coreutils version 6.9. If you would like to use a newer version of printf, for example the one shipped with your OS, try &lt;code&gt;command printf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9cf3fb5792de48928eff8cebc96f16a1c55ae3" translate="yes" xml:space="preserve">
          <source>This problem may manifest as messages such as &quot;&lt;code&gt;Received message too long&lt;/code&gt;&quot;, &quot;&lt;code&gt;open terminal
failed: not a terminal&lt;/code&gt;&quot;, &quot;&lt;code&gt;Bad packet length&lt;/code&gt;&quot;, or &quot;&lt;code&gt;Connection refused&lt;/code&gt;&quot; with strange output in &lt;code&gt;ssh_exchange_identification&lt;/code&gt; messages in the debug log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d7db524de6aeb12230612416aa7c659663fe8a" translate="yes" xml:space="preserve">
          <source>This prompt that you see above is the &lt;code&gt;fish&lt;/code&gt; default prompt: it shows your username, hostname, and working directory.</source>
          <target state="translated">Este indicador que se ve arriba es el &lt;code&gt;fish&lt;/code&gt; por defecto r&amp;aacute;pida: muestra el nombre de usuario, nombre de host y el directorio de trabajo.</target>
        </trans-unit>
        <trans-unit id="c7a03d7fff57e6a14cd855d9e527df2a9ce2b8e1" translate="yes" xml:space="preserve">
          <source>This prompt that you see above is the &lt;code&gt;fish&lt;/code&gt; default prompt: it shows your username, hostname, and working directory. - to change this prompt see &lt;a href=&quot;#prompt&quot;&gt;how to change your prompt&lt;/a&gt; - to switch to fish permanently see &lt;a href=&quot;#switching-to-fish&quot;&gt;switch your default shell to fish&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b0aa0ea070dfc024abe95e676b3f5a9f72a6d28" translate="yes" xml:space="preserve">
          <source>This prompt that you see above is the fish default prompt: it shows your username, hostname, and working directory. - to change this prompt see &lt;a href=&quot;#prompt&quot;&gt;how to change your prompt&lt;/a&gt; - to switch to fish permanently see &lt;a href=&quot;#switching-to-fish&quot;&gt;switch your default shell to fish&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4bee240833f3605c3cce7670c50d418746b9a0" translate="yes" xml:space="preserve">
          <source>This prompt would look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773977870866a71aecd2e7e7f8a3ac68810d217e" translate="yes" xml:space="preserve">
          <source>This requires that your terminal supports programmable titles and the feature is turned on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09aac7de9ce9cd61579136cf9dcf630266cb3674" translate="yes" xml:space="preserve">
          <source>This runs the command &lt;code&gt;echo&lt;/code&gt; with the arguments &lt;code&gt;hello&lt;/code&gt; and &lt;code&gt;world&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef39c78e496aafe0f43eff2fcf48ff7024883cf" translate="yes" xml:space="preserve">
          <source>This section describes how to install, uninstall, start, and exit the fish shell. It also explains how to make fish the default shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9eeea9640faa8417502c909ed567d93f8c26ac1" translate="yes" xml:space="preserve">
          <source>This section is on how to install, uninstall, start and exit a fish shell and on how to make fish the default shell:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25342c42f4612fb5670f158c84589f2f2bbbea7d" translate="yes" xml:space="preserve">
          <source>This shows a few differences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8365c7b8dad5a5bec81e8a157c63659de9f8f9c9" translate="yes" xml:space="preserve">
          <source>This syntax is supported since fish 3.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c731bb20159682c25c6b4c24ba8357e2f689c68f" translate="yes" xml:space="preserve">
          <source>This tells you that there exists a file that starts with '&lt;code&gt;somefi&lt;/code&gt;', which is useful feedback as you type.</source>
          <target state="translated">Esto le indica que existe un archivo que comienza con ' &lt;code&gt;somefi&lt;/code&gt; ', lo que es &amp;uacute;til como retroalimentaci&amp;oacute;n a medida que escribe.</target>
        </trans-unit>
        <trans-unit id="4b7a09d6b5d8f49fa5d96567ba9ae8e8dc675a1a" translate="yes" xml:space="preserve">
          <source>This tells you that there exists a file that starts with &lt;code&gt;somefi&lt;/code&gt;, which is useful feedback as you type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ffb61bd1cd5715a466531b7a657f71109690e35" translate="yes" xml:space="preserve">
          <source>This test is mostly POSIX-compatible.</source>
          <target state="translated">Esta prueba es en su mayoría compatible con el POSIX.</target>
        </trans-unit>
        <trans-unit id="44595c0d7ccfd8b4e39fcc6fb1c75e80391912f7" translate="yes" xml:space="preserve">
          <source>This tutorial assumes a basic understanding of command line shells and Unix commands, and that you have a working copy of &lt;code&gt;fish&lt;/code&gt;.</source>
          <target state="translated">Este tutorial asume un conocimiento b&amp;aacute;sico de los shells de l&amp;iacute;nea de comandos y los comandos Unix, y que tiene una copia funcional de &lt;code&gt;fish&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9de5aabc7c0b11e4da0fd1f2d758a3b173718c1" translate="yes" xml:space="preserve">
          <source>This tutorial assumes a basic understanding of command line shells and Unix commands, and that you have a working copy of fish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48d5a2439da006a37325d3b33d3046473c20c81" translate="yes" xml:space="preserve">
          <source>This wide search may be confusing. If you are unsure where to put your own customisations, use &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt;.</source>
          <target state="translated">Esta amplia b&amp;uacute;squeda puede resultar confusa. Si no est&amp;aacute; seguro de d&amp;oacute;nde poner sus propias personalizaciones, use &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f358815973e2ad20875ee5c37318a06668178037" translate="yes" xml:space="preserve">
          <source>This wide search may be confusing. If you are unsure, your completions probably belong in &lt;code&gt;~/.config/fish/completions&lt;/code&gt;.</source>
          <target state="translated">Esta amplia b&amp;uacute;squeda puede resultar confusa. Si no est&amp;aacute; seguro, sus terminaciones probablemente pertenezcan a &lt;code&gt;~/.config/fish/completions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc8f74e5e402cdc09fe9163449bdf559dd908a47" translate="yes" xml:space="preserve">
          <source>This wide search may be confusing. If you are unsure, your functions probably belong in &lt;code&gt;~/.config/fish/functions&lt;/code&gt;.</source>
          <target state="translated">Esta amplia b&amp;uacute;squeda puede resultar confusa. Si no est&amp;aacute; seguro, sus funciones probablemente pertenezcan a &lt;code&gt;~/.config/fish/functions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a9195514b37c65c22f746374d557ac1c811b3ed" translate="yes" xml:space="preserve">
          <source>This will beep when the most recent job completes.</source>
          <target state="translated">Esto sonará cuando el trabajo más reciente se complete.</target>
        </trans-unit>
        <trans-unit id="2695319d77a04db7d59336c7fd04aa2a313c7f47" translate="yes" xml:space="preserve">
          <source>This will open up your editor, allowing you to modify the function. When you're done, save and quit. Fish will reload the function, so you should see the changes right away.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d275d705f3563e034e584f7f1416ca37d5829386" translate="yes" xml:space="preserve">
          <source>This will run the &lt;code&gt;mkdir&lt;/code&gt; command, and if it is successful, change the current working directory to the one just created.</source>
          <target state="translated">Esto ejecutar&amp;aacute; el comando &lt;code&gt;mkdir&lt;/code&gt; y, si tiene &amp;eacute;xito, cambiar&amp;aacute; el directorio de trabajo actual por el que acaba de crear.</target>
        </trans-unit>
        <trans-unit id="9aaacc060f4b5ae831a842fd2305208286294877" translate="yes" xml:space="preserve">
          <source>This works the other way around as well! If fish is started by something else, it inherits that parents exported variables. So if your terminal emulator starts fish, and it exports &lt;code&gt;$LANG&lt;/code&gt; set to &lt;code&gt;en_US.UTF-8&lt;/code&gt;, fish will receive that setting. And whatever started your terminal emulator also gave &lt;em&gt;it&lt;/em&gt; some variables that it will then pass on unless it specifically decides not to. This is how fish usually receives the values for things like &lt;code&gt;$LANG&lt;/code&gt;, &lt;code&gt;$PATH&lt;/code&gt; and &lt;code&gt;$TERM&lt;/code&gt;, without you having to specify them again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af34e672544a6ca1366a112af55970d3795853d6" translate="yes" xml:space="preserve">
          <source>Three arguments indicate a range from START to END with a spacing of STEP between possible outputs. &lt;code&gt;random choice&lt;/code&gt; will select one random item from the succeeding arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db7b1d5a15270db41f2cc8f791f0d914b51536a" translate="yes" xml:space="preserve">
          <source>To accept the autosuggestion (replacing the command line contents), press</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee864a54df8fc82a493855e23af51940c281088e" translate="yes" xml:space="preserve">
          <source>To accept the autosuggestion (replacing the command line contents), press right arrow or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f891073aa4578597be2a0dcd4d98d094f936e0cd" translate="yes" xml:space="preserve">
          <source>To accept the autosuggestion (replacing the command line contents), press right arrow or &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;F&lt;/b&gt;. To accept the first suggested word, press &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;&amp;rarr;&lt;/b&gt; or &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;F&lt;/b&gt;. If the autosuggestion is not what you want, just ignore it: it won't execute unless you accept it.</source>
          <target state="translated">Para aceptar la autosugesti&amp;oacute;n (en sustituci&amp;oacute;n de los contenidos de l&amp;iacute;nea de comandos), presione flecha derecha o &lt;em&gt;de Control&lt;/em&gt; - &lt;b&gt;F&lt;/b&gt; . Para aceptar la palabra primera propuesta, pulse &lt;em&gt;la tecla Alt&lt;/em&gt; - &lt;b&gt;&amp;rarr;&lt;/b&gt; o &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;F&lt;/b&gt; . Si la autosugesti&amp;oacute;n no es lo que desea, simplemente ign&amp;oacute;rela: no se ejecutar&amp;aacute; a menos que la acepte.</target>
        </trans-unit>
        <trans-unit id="b8736772d7b0120e4918f841f4d7512238ae0d0f" translate="yes" xml:space="preserve">
          <source>To accept the autosuggestion, hit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18bff7130ea79ac3d65a254db2e29fd6582707f0" translate="yes" xml:space="preserve">
          <source>To accept the autosuggestion, hit &lt;b&gt;&amp;rarr;&lt;/b&gt; or &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;F&lt;/b&gt;. To accept a single word of the autosuggestion, &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;&amp;rarr;&lt;/b&gt; (right arrow). If the autosuggestion is not what you want, just ignore it.</source>
          <target state="translated">Para aceptar la autosugesti&amp;oacute;n, golpe&amp;oacute; &lt;b&gt;&amp;rarr;&lt;/b&gt; o &lt;em&gt;control&lt;/em&gt; - &lt;b&gt;F&lt;/b&gt; . Para aceptar una sola palabra de la autosugesti&amp;oacute;n, &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;&amp;rarr;&lt;/b&gt; (flecha derecha). Si la autosugesti&amp;oacute;n no es lo que desea, simplemente ign&amp;oacute;rela.</target>
        </trans-unit>
        <trans-unit id="bf3b8743951a6f601c9691879cf6b325619cbbc5" translate="yes" xml:space="preserve">
          <source>To access one element of a list, use the index of the element inside of square brackets, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490972bea5b74c2308bba9f42c4d177bcaabea44" translate="yes" xml:space="preserve">
          <source>To append standard error to a file, use &lt;code&gt;2&amp;gt;&amp;gt;DESTINATION_FILE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
