<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="fish">
    <body>
      <group id="fish">
        <trans-unit id="86ed4eed1bd2f85a64878629bbe9943b2ee6fe67" translate="yes" xml:space="preserve">
          <source>&quot;collect&quot; subcommand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5454f4865135a6adfd2b4ab08cadbe280695c7a9" translate="yes" xml:space="preserve">
          <source>&quot;escape&quot; and &quot;unescape&quot; subcommands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e94829bc8add7b15869b5cc924c0f429eaf284" translate="yes" xml:space="preserve">
          <source>&quot;escape&quot; subcommand</source>
          <target state="translated">subcomando &quot;escape&quot;</target>
        </trans-unit>
        <trans-unit id="76d842df441b1a40a8d9cbdaa1d81aeeca8b4372" translate="yes" xml:space="preserve">
          <source>&quot;join&quot; and &quot;join0&quot; subcommands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2d00860255e2dbd4f89d158012097bde90f8a2" translate="yes" xml:space="preserve">
          <source>&quot;join&quot; subcommand</source>
          <target state="translated">subcomando &quot;unirse&quot;</target>
        </trans-unit>
        <trans-unit id="e21d61357a6ad583e922f6673300991dc11d014f" translate="yes" xml:space="preserve">
          <source>&quot;join0&quot; subcommand</source>
          <target state="translated">subcomando &quot;join0&quot;</target>
        </trans-unit>
        <trans-unit id="8efa442a887f3f14c8496d18cb8b8a740013df6f" translate="yes" xml:space="preserve">
          <source>&quot;length&quot; subcommand</source>
          <target state="translated">subcomando &quot;longitud&quot;</target>
        </trans-unit>
        <trans-unit id="ab1d1b746c457012252ac321a73d38ab2ebe5613" translate="yes" xml:space="preserve">
          <source>&quot;lower&quot; subcommand</source>
          <target state="translated">subcomando &quot;inferior&quot;</target>
        </trans-unit>
        <trans-unit id="b19372e35db548e60a80a149d78ccdec982168a9" translate="yes" xml:space="preserve">
          <source>&quot;match&quot; subcommand</source>
          <target state="translated">subcomando &quot;match&quot;</target>
        </trans-unit>
        <trans-unit id="c65279f44e2891a7fe2a4eb897b7b70e2d7251c4" translate="yes" xml:space="preserve">
          <source>&quot;pad&quot; subcommand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b1ce5c118d52a46c7f1f07f038c7f05c42b1d2" translate="yes" xml:space="preserve">
          <source>&quot;repeat&quot; subcommand</source>
          <target state="translated">subcomando &quot;repetir&quot;</target>
        </trans-unit>
        <trans-unit id="0e8296f5cf95f7225a62111b0e287cf6764990c5" translate="yes" xml:space="preserve">
          <source>&quot;replace&quot; subcommand</source>
          <target state="translated">subcomando &quot;reemplazar&quot;</target>
        </trans-unit>
        <trans-unit id="764286c360db86ea219b3aa1598fd3187b9cd552" translate="yes" xml:space="preserve">
          <source>&quot;split&quot; and &quot;split0&quot; subcommands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f577a51a0308660f967ba74376e366982bd5206a" translate="yes" xml:space="preserve">
          <source>&quot;split&quot; subcommand</source>
          <target state="translated">subcomando &quot;split&quot;</target>
        </trans-unit>
        <trans-unit id="b2e3b8ce8d0c3036a9bf7840222ce98fb6d811cf" translate="yes" xml:space="preserve">
          <source>&quot;split0&quot; subcommand</source>
          <target state="translated">subcomando &quot;split0&quot;</target>
        </trans-unit>
        <trans-unit id="024a25297fddbd9dedad0851b1472db86dcc1dd8" translate="yes" xml:space="preserve">
          <source>&quot;sub&quot; subcommand</source>
          <target state="translated">subcomando &quot;sub&quot;</target>
        </trans-unit>
        <trans-unit id="28948906c8b23197570e0b5c46cb76df167e0f66" translate="yes" xml:space="preserve">
          <source>&quot;trim&quot; subcommand</source>
          <target state="translated">subcomando &quot;recortar&quot;</target>
        </trans-unit>
        <trans-unit id="40b8829d1faee8ade2f07b43e4f235ff888d301f" translate="yes" xml:space="preserve">
          <source>&quot;upper&quot; subcommand</source>
          <target state="translated">subcomando &quot;superior&quot;</target>
        </trans-unit>
        <trans-unit id="e74df81673b1955ec5bd878d5a31e75dbad8d930" translate="yes" xml:space="preserve">
          <source>$PATH</source>
          <target state="translated">$PATH</target>
        </trans-unit>
        <trans-unit id="e7c37081f789a86d349860f9514c4a22ed6c8be0" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2005&amp;ndash;2009 Axel Liljencrantz</source>
          <target state="translated">&amp;copy; 2005&amp;ndash;2009 Axel Liljencrantz</target>
        </trans-unit>
        <trans-unit id="fbfc730317d302830a5229c6c7f4bcbb74faf323" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2019 fish-shell developers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06aaf78d5fc4e98a6351fa8e7ba3440419b6ed5c" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2020 fish-shell developers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d83e069dedd71fdecfa4fdbff3e7d05d4379f90" translate="yes" xml:space="preserve">
          <source>&amp;darr;</source>
          <target state="translated">&amp;darr;</target>
        </trans-unit>
        <trans-unit id="c32b574d920c9f6275686bb5179173def4140b9e" translate="yes" xml:space="preserve">
          <source>&amp;gt; /bin/hostname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6493d90792f803eb79564eedf0cf76a66d4e22b" translate="yes" xml:space="preserve">
          <source>&amp;gt; /bin/mkd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753f7b478d10b374bd123454b2178d1bc6866009" translate="yes" xml:space="preserve">
          <source>&amp;gt; /pri</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20cd7aa1048163a599e8fd983524b31f20a8fe5" translate="yes" xml:space="preserve">
          <source>&amp;gt; cat ~/somefi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9afa8688ed9cb8857eaf203d769df939fc229e" translate="yes" xml:space="preserve">
          <source>&amp;gt; echo &quot;$PATH&quot; /usr/local/sbin:/usr/local/bin:/usr/bin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512758238af91528cab14c3e23ede92169e028f4" translate="yes" xml:space="preserve">
          <source>&amp;gt; rsync -avze ssh . myname@somelonghost.com:/some/long/path/doo/dee/doo/dee/doo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1547615ababe37a253b8aa72decd91c9ac2c2e4f" translate="yes" xml:space="preserve">
          <source>&amp;gt; ~/stuff/s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354c6cc208269f5a5fe067f22626f0bf4c409c79" translate="yes" xml:space="preserve">
          <source>&amp;larr;</source>
          <target state="translated">&amp;larr;</target>
        </trans-unit>
        <trans-unit id="4466f5ea01bad40a521f3168b5b7a9dbde092776" translate="yes" xml:space="preserve">
          <source>&amp;rarr;</source>
          <target state="translated">&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b91878827a2aeacb8a8be36c9f47b30ac9d58817" translate="yes" xml:space="preserve">
          <source>&amp;uarr;</source>
          <target state="translated">&amp;uarr;</target>
        </trans-unit>
        <trans-unit id="6e733f0448b74b200711498fb8f9724e548effef" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\ &lt;/code&gt;' escapes the space character</source>
          <target state="translated">' &lt;code&gt;\ &lt;/code&gt; ' escapa del car&amp;aacute;cter de espacio</target>
        </trans-unit>
        <trans-unit id="3766fe8fd51914d2f0501ba3230d87e85f797d72" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\&quot;&lt;/code&gt;' escapes the quote character</source>
          <target state="translated">' &lt;code&gt;\&quot;&lt;/code&gt; ' escapa del car&amp;aacute;cter de comillas</target>
        </trans-unit>
        <trans-unit id="d581326b575bb44f2f74c9bcfa7ac107ffb161b6" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\#&lt;/code&gt;' escapes the hash character</source>
          <target state="translated">' &lt;code&gt;\#&lt;/code&gt; ' escapa del car&amp;aacute;cter hash</target>
        </trans-unit>
        <trans-unit id="908c4a656e232a0ed243dbdbf871954382da6771" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\$&lt;/code&gt;' escapes the dollar character</source>
          <target state="translated">' &lt;code&gt;\$&lt;/code&gt; ' escapa del car&amp;aacute;cter de d&amp;oacute;lar</target>
        </trans-unit>
        <trans-unit id="74cfbb0c40dd10059a8a310e833ed5ecd9f06a68" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\&amp;amp;&lt;/code&gt;' escapes the ampersand character</source>
          <target state="translated">' &lt;code&gt;\&amp;amp;&lt;/code&gt; ' escapa del car&amp;aacute;cter ampersand</target>
        </trans-unit>
        <trans-unit id="0fd67766a6a7c6b8a983ef28f2fb7ab48dca0bdd" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\&amp;gt;&lt;/code&gt;' escapes the more than character</source>
          <target state="translated">' &lt;code&gt;\&amp;gt;&lt;/code&gt; ' escapa del car&amp;aacute;cter m&amp;aacute;s que</target>
        </trans-unit>
        <trans-unit id="39323fc030aa46aff5b439c421f4b3e39c05b8c7" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\&amp;lt;&lt;/code&gt;' escapes the less than character</source>
          <target state="translated">' &lt;code&gt;\&amp;lt;&lt;/code&gt; ' escapa del car&amp;aacute;cter menor que</target>
        </trans-unit>
        <trans-unit id="76924e88fd54ecad7def85f7f342985b1ca3498c" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\'&lt;/code&gt;' escapes the apostrophe character</source>
          <target state="translated">' &lt;code&gt;\'&lt;/code&gt; 'escapa del car&amp;aacute;cter de ap&amp;oacute;strofe</target>
        </trans-unit>
        <trans-unit id="b095f868121c0c77a585d3717f0d5539a09b4b2b" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\(&lt;/code&gt;' escapes the left parenthesis character</source>
          <target state="translated">' &lt;code&gt;\(&lt;/code&gt; ' escapa del car&amp;aacute;cter de par&amp;eacute;ntesis izquierdo</target>
        </trans-unit>
        <trans-unit id="9b112a30e504e3c46037c242e293ff3f4f8b9c2f" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\)&lt;/code&gt;' escapes the right parenthesis character</source>
          <target state="translated">' &lt;code&gt;\)&lt;/code&gt; ' escapa del car&amp;aacute;cter de par&amp;eacute;ntesis derecho</target>
        </trans-unit>
        <trans-unit id="fc31528d9df1545ef53e07d9d22803cbe3d529e5" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\*&lt;/code&gt;' escapes the star character</source>
          <target state="translated">' &lt;code&gt;\*&lt;/code&gt; ' escapa del personaje estrella</target>
        </trans-unit>
        <trans-unit id="a89d1ebf911639d54265a91ff4d9a3d0df8f4735" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\;&lt;/code&gt;' escapes the semicolon character</source>
          <target state="translated">' &lt;code&gt;\;&lt;/code&gt; 'escapa del car&amp;aacute;cter de punto y coma</target>
        </trans-unit>
        <trans-unit id="9f59f8478c336a4822088ef663794cea667d0f21" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\&lt;em&gt;ooo&lt;/em&gt;&lt;/code&gt;', where &lt;code&gt;&lt;em&gt;ooo&lt;/em&gt;&lt;/code&gt; is an octal number, represents the ascii character with the specified value. For example, &lt;code&gt;\011&lt;/code&gt; is the tab character.</source>
          <target state="translated">' &lt;code&gt;\&lt;em&gt;ooo&lt;/em&gt;&lt;/code&gt; ', donde &lt;code&gt;&lt;em&gt;ooo&lt;/em&gt;&lt;/code&gt; es un n&amp;uacute;mero octal, representa el car&amp;aacute;cter ascii con el valor especificado. Por ejemplo, &lt;code&gt;\011&lt;/code&gt; es el car&amp;aacute;cter de tabulaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ea43bb2434566162741ba367041d88700753bfad" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\?&lt;/code&gt;' escapes the question mark character</source>
          <target state="translated">' &lt;code&gt;\?&lt;/code&gt; 'escapa del car&amp;aacute;cter de signo de interrogaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="bf846fe82706846ac44b82971d9d88dec5ade509" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\U&lt;em&gt;xxxxxxxx&lt;/em&gt;&lt;/code&gt;', where &lt;code&gt;&lt;em&gt;xxxxxxxx&lt;/em&gt;&lt;/code&gt; is a hexadecimal number, represents the 32-bit Unicode character with the specified value. For example, &lt;code&gt;\U9&lt;/code&gt; is the tab character.</source>
          <target state="translated">' &lt;code&gt;\U&lt;em&gt;xxxxxxxx&lt;/em&gt;&lt;/code&gt; ', donde &lt;code&gt;&lt;em&gt;xxxxxxxx&lt;/em&gt;&lt;/code&gt; es un n&amp;uacute;mero hexadecimal, representa el car&amp;aacute;cter Unicode de 32 bits con el valor especificado. Por ejemplo, &lt;code&gt;\U9&lt;/code&gt; es el car&amp;aacute;cter de tabulaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d9c1fcb035316cb93883343b149870608aafe9c1" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\X&lt;em&gt;xx&lt;/em&gt;&lt;/code&gt;', where &lt;code&gt;&lt;em&gt;xx&lt;/em&gt;&lt;/code&gt; is a hexadecimal number, represents a byte of data with the specified value. If you are using a multibyte encoding, this can be used to enter invalid strings. Only use this if you know what you are doing.</source>
          <target state="translated">' &lt;code&gt;\X&lt;em&gt;xx&lt;/em&gt;&lt;/code&gt; ', donde &lt;code&gt;&lt;em&gt;xx&lt;/em&gt;&lt;/code&gt; es un n&amp;uacute;mero hexadecimal, representa un byte de datos con el valor especificado. Si est&amp;aacute; utilizando una codificaci&amp;oacute;n multibyte, puede utilizarla para introducir cadenas no v&amp;aacute;lidas. Solo use esto si sabe lo que est&amp;aacute; haciendo.</target>
        </trans-unit>
        <trans-unit id="62c0adf2ee6f56d3c6ed7bdc464ae968899ae7a8" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\[&lt;/code&gt;' escapes the left bracket character</source>
          <target state="translated">' &lt;code&gt;\[&lt;/code&gt; ' escapa del car&amp;aacute;cter de corchete izquierdo</target>
        </trans-unit>
        <trans-unit id="50945e1a472b9afc1df6863963378f8d49f78fa2" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\\&lt;/code&gt;' escapes the backslash character</source>
          <target state="translated">' &lt;code&gt;\\&lt;/code&gt; ' escapa del car&amp;aacute;cter de barra invertida</target>
        </trans-unit>
        <trans-unit id="9685423c4a5a38dd0fcef08ef3d4e450369b39bd" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\]&lt;/code&gt;' escapes the right bracket character</source>
          <target state="translated">' &lt;code&gt;\]&lt;/code&gt; ' escapa del car&amp;aacute;cter de corchete derecho</target>
        </trans-unit>
        <trans-unit id="8c7f7da1e32a59c5c45af7806c54f9f0dadd3d87" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\^&lt;/code&gt;' escapes the circumflex character</source>
          <target state="translated">' &lt;code&gt;\^&lt;/code&gt; ' escapa del car&amp;aacute;cter circunflejo</target>
        </trans-unit>
        <trans-unit id="7d5465bb6c5c6397db6a6a8d8e835aee2421cf33" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\a&lt;/code&gt;' represents the alert character</source>
          <target state="translated">' &lt;code&gt;\a&lt;/code&gt; ' representa el car&amp;aacute;cter de alerta</target>
        </trans-unit>
        <trans-unit id="e2dca00e008764b48ee13cfd5508b3dcc5d0ba46" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\b&lt;/code&gt;' represents the backspace character</source>
          <target state="translated">' &lt;code&gt;\b&lt;/code&gt; ' representa el car&amp;aacute;cter de retroceso</target>
        </trans-unit>
        <trans-unit id="d3586ff70608070874807d5a06afa71fd2e80dc1" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\c&lt;em&gt;x&lt;/em&gt;&lt;/code&gt;', where &lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; is a letter of the alphabet, represents the control sequence generated by pressing the control key and the specified letter. For example, &lt;code&gt;\ci&lt;/code&gt; is the tab character</source>
          <target state="translated">' &lt;code&gt;\c&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; ', donde &lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; es una letra del alfabeto, representa la secuencia de control generada al presionar la tecla de control y la letra especificada. Por ejemplo, &lt;code&gt;\ci&lt;/code&gt; es el car&amp;aacute;cter de tabulaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="6e28dc20f701d9f4e74f01cdc46f1f132ec5b963" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\e&lt;/code&gt;' represents the escape character</source>
          <target state="translated">' &lt;code&gt;\e&lt;/code&gt; ' representa el car&amp;aacute;cter de escape</target>
        </trans-unit>
        <trans-unit id="7f0a21ac4d425415779a6c4bbb53488d9b54ae1a" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\f&lt;/code&gt;' represents the form feed character</source>
          <target state="translated">' &lt;code&gt;\f&lt;/code&gt; ' representa el car&amp;aacute;cter de avance de formulario</target>
        </trans-unit>
        <trans-unit id="f91c8219493052c97e2aed9919f95aebc5c62fec" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\n&lt;/code&gt;' represents a newline character</source>
          <target state="translated">' &lt;code&gt;\n&lt;/code&gt; ' representa un car&amp;aacute;cter de nueva l&amp;iacute;nea</target>
        </trans-unit>
        <trans-unit id="35679010855c22fc43e3377eecfcd251179fb223" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\r&lt;/code&gt;' represents the carriage return character</source>
          <target state="translated">' &lt;code&gt;\r&lt;/code&gt; ' representa el car&amp;aacute;cter de retorno de carro</target>
        </trans-unit>
        <trans-unit id="511986cf27cf7026f013ff5faf45d98d72bd0e78" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\t&lt;/code&gt;' represents the tab character</source>
          <target state="translated">' &lt;code&gt;\t&lt;/code&gt; ' representa el car&amp;aacute;cter de tabulaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="78ef5bd6c7394f12eb41a5e2b59cb25ce0d8493d" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\u&lt;em&gt;xxxx&lt;/em&gt;&lt;/code&gt;', where &lt;code&gt;&lt;em&gt;xxxx&lt;/em&gt;&lt;/code&gt; is a hexadecimal number, represents the 16-bit Unicode character with the specified value. For example, &lt;code&gt;\u9&lt;/code&gt; is the tab character.</source>
          <target state="translated">' &lt;code&gt;\u&lt;em&gt;xxxx&lt;/em&gt;&lt;/code&gt; ', donde &lt;code&gt;&lt;em&gt;xxxx&lt;/em&gt;&lt;/code&gt; es un n&amp;uacute;mero hexadecimal, representa el car&amp;aacute;cter Unicode de 16 bits con el valor especificado. Por ejemplo, &lt;code&gt;\u9&lt;/code&gt; es el car&amp;aacute;cter de tabulaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3430111bfbd952f9ac43505656e447139b1b0e1b" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\v&lt;/code&gt;' represents the vertical tab character</source>
          <target state="translated">' &lt;code&gt;\v&lt;/code&gt; ' representa el car&amp;aacute;cter de tabulaci&amp;oacute;n vertical</target>
        </trans-unit>
        <trans-unit id="48769ecea19cf70e5a9a7f77fefed5a5214e9c16" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\x&lt;em&gt;xx&lt;/em&gt;&lt;/code&gt;', where &lt;code&gt;&lt;em&gt;xx&lt;/em&gt;&lt;/code&gt; is a hexadecimal number, represents the ascii character with the specified value. For example, &lt;code&gt;\x9&lt;/code&gt; is the tab character.</source>
          <target state="translated">' &lt;code&gt;\x&lt;em&gt;xx&lt;/em&gt;&lt;/code&gt; ', donde &lt;code&gt;&lt;em&gt;xx&lt;/em&gt;&lt;/code&gt; es un n&amp;uacute;mero hexadecimal, representa el car&amp;aacute;cter ascii con el valor especificado. Por ejemplo, &lt;code&gt;\x9&lt;/code&gt; es el car&amp;aacute;cter de tabulaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e26067fc9cd97370cf591ccaad0fb3e55cf7a989" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\{&lt;/code&gt;' escapes the left curly bracket character</source>
          <target state="translated">' &lt;code&gt;\{&lt;/code&gt; ' escapa del car&amp;aacute;cter de corchete izquierdo</target>
        </trans-unit>
        <trans-unit id="54b84fdc1e79da38d8b47d6c57faa890f0148f02" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\|&lt;/code&gt;' escapes the vertical bar character</source>
          <target state="translated">' &lt;code&gt;\|&lt;/code&gt; 'escapa del car&amp;aacute;cter de barra vertical</target>
        </trans-unit>
        <trans-unit id="4e8239f5e6a392207c141c016aae19280af2b611" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\}&lt;/code&gt;' escapes the right curly bracket character</source>
          <target state="translated">' &lt;code&gt;\}&lt;/code&gt; ' escapa del car&amp;aacute;cter de corchete derecho</target>
        </trans-unit>
        <trans-unit id="6f51095eb1df3263df93f39d9d7f7d80b9bc8f48" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\~&lt;/code&gt;' escapes the tilde character</source>
          <target state="translated">' &lt;code&gt;\~&lt;/code&gt; ' escapa del car&amp;aacute;cter tilde</target>
        </trans-unit>
        <trans-unit id="28ed3a797da3c48c309a4ef792147f3c56cfec40" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>
        </trans-unit>
        <trans-unit id="be1f13c86279a2bd985549925e7acdcb601eb199" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;kill-line&lt;/code&gt;) to cut from the current cursor position to the end of the line. The string that is cut (a.k.a. killed in emacs-ese) is inserted into a list of kills, called the kill ring. To paste the latest value from the kill ring (emacs calls this &quot;yanking&quot;) use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5aba9b73e45b31a6e36f55ea117883ffc0e7abf" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;yank-pop&lt;/code&gt;) to rotate to the previous kill.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9c75fa31c7f12b400b84290088b67a00a33e27" translate="yes" xml:space="preserve">
          <source>(Down) (or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0528f477628d81e95e629bf161601532526a7ac" translate="yes" xml:space="preserve">
          <source>(Left) (or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0ca715a85a84ea3c6b2469946b80c0da3763ab" translate="yes" xml:space="preserve">
          <source>(Left) and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2acf5f595596abfaaf2e1c846b580d18eb1ea84" translate="yes" xml:space="preserve">
          <source>(Notice the quotes: without them, &lt;code&gt;Mister&lt;/code&gt; and &lt;code&gt;Noodle&lt;/code&gt; would have been separate arguments, and &lt;code&gt;$name&lt;/code&gt; would have been made into a list of two elements.)</source>
          <target state="translated">(Observe las comillas: sin ellas, &lt;code&gt;Mister&lt;/code&gt; y &lt;code&gt;Noodle&lt;/code&gt; habr&amp;iacute;an sido argumentos separados, y &lt;code&gt;$name&lt;/code&gt; se habr&amp;iacute;a convertido en una lista de dos elementos).</target>
        </trans-unit>
        <trans-unit id="3a363023a49ac2fb745104f4180323f1be0f082a" translate="yes" xml:space="preserve">
          <source>(Right) (or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a5a88ce5d692ade40fdcdc135c67e0791eb890" translate="yes" xml:space="preserve">
          <source>(Right) extend the selection backward/forward by one character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b779bd2b6ad3328eb7db6f111e790d072205a8f8" translate="yes" xml:space="preserve">
          <source>(Right) key and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51003965399090374c96c5eee3ea9a1db150e49" translate="yes" xml:space="preserve">
          <source>(Right) move the cursor left or right by one character. If the cursor is already at the end of the line, and an autosuggestion is available,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670c7748a0033a6717734a4c6863b2c886ef5153" translate="yes" xml:space="preserve">
          <source>(Right) often sends &lt;code&gt;\e\[C&lt;/code&gt;. These can differ from terminal to terminal, and the mapping is typically available in &lt;code&gt;terminfo(5)&lt;/code&gt;. Sometimes however a terminal identifies as e.g. &lt;code&gt;xterm-256color&lt;/code&gt; for compatibility, but then implements xterm's sequences incorrectly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de2a4f524da84b78a874ca1857c3b5f168ca07a" translate="yes" xml:space="preserve">
          <source>(Right) shared bindings (which are available as well).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2c45b3c9fee2f956df0a99d9cdc979e3482ac9" translate="yes" xml:space="preserve">
          <source>(To change it back to another shell, just substitute &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; with &lt;code&gt;/bin/bash&lt;/code&gt;, &lt;code&gt;/bin/tcsh&lt;/code&gt; or &lt;code&gt;/bin/zsh&lt;/code&gt; as appropriate in the steps above.)</source>
          <target state="translated">(Para volver a cambiarlo a otro shell, simplemente sustituya &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; con &lt;code&gt;/bin/bash&lt;/code&gt; , &lt;code&gt;/bin/tcsh&lt;/code&gt; o &lt;code&gt;/bin/zsh&lt;/code&gt; seg&amp;uacute;n corresponda en los pasos anteriores).</target>
        </trans-unit>
        <trans-unit id="bee5581a7d051a9de595b33de1a180ad5c74dcd7" translate="yes" xml:space="preserve">
          <source>(Up) and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3ed25ae62c5ccd56a6d52dc4bd4ac58f3fa5e0" translate="yes" xml:space="preserve">
          <source>(^X) can be written as &lt;code&gt;\cx&lt;/code&gt;. Note that Alt-based key bindings are case sensitive and Control-based key bindings are not. This is a constraint of text-based terminals, not &lt;code&gt;fish&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3427578d123179e8a2caf49a849c86a1c9bdfec" translate="yes" xml:space="preserve">
          <source>(also referred to as &lt;code&gt;^Z&lt;/code&gt;). Once back at the &lt;code&gt;fish&lt;/code&gt; commandline, you can start other programs and do anything you want. If you then want you can go back to the suspended command by using the &lt;a href=&quot;cmds/fg#cmd-fg&quot;&gt;fg&lt;/a&gt; (foreground) command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c610509128e16b3f4ea8270fdf83c7da40ef85" translate="yes" xml:space="preserve">
          <source>(also referred to as &lt;code&gt;^Z&lt;/code&gt;). Once back at the fish commandline, you can start other programs and do anything you want. If you then want you can go back to the suspended command by using the &lt;a href=&quot;cmds/fg#cmd-fg&quot;&gt;fg&lt;/a&gt; (foreground) command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c5350c68226a09e1e703031a6ef2ec287e444e" translate="yes" xml:space="preserve">
          <source>(down) arrow keys to navigate through history matches. Additional default key bindings include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fc0486bfe37b23103006345fe6c49e863733b4" translate="yes" xml:space="preserve">
          <source>(down).</source>
          <target state="translated">(down).</target>
        </trans-unit>
        <trans-unit id="dc145707fd191ab0dc5fa8ce1a210eab20e909f6" translate="yes" xml:space="preserve">
          <source>(for obvious reasons exact results will vary on your system)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1ea7349ba4579303d00412f75d45df0337d09c" translate="yes" xml:space="preserve">
          <source>(from &lt;a href=&quot;http://mywiki.wooledge.org/BashFAQ/004&quot;&gt;http://mywiki.wooledge.org/BashFAQ/004&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4416cc4aa2b0ce174aa3073960262f2ef014972e" translate="yes" xml:space="preserve">
          <source>(in fact while fish's &lt;code&gt;echo&lt;/code&gt; supports &lt;code&gt;--&lt;/code&gt;, POSIX forbids it, so other implementations can't be used if the input contains anything starting with &lt;code&gt;-&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7739136dc697141cd8d76585cab6736b910f012b" translate="yes" xml:space="preserve">
          <source>(or</source>
          <target state="translated">(or</target>
        </trans-unit>
        <trans-unit id="cdae8335783f9a7982de16a1b6c67b76172776c3" translate="yes" xml:space="preserve">
          <source>(right arrow) or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e825f56e23b45ebad8dc9fa1d45bfb451bd787" translate="yes" xml:space="preserve">
          <source>(right arrow). If the autosuggestion is not what you want, just ignore it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b987142e6e1ba80176cd31978e561fd4595e84" translate="yes" xml:space="preserve">
          <source>(the &lt;code&gt;pager-toggle-search&lt;/code&gt; binding -</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7528a25191699ade681ee9cb05beb1e29780375" translate="yes" xml:space="preserve">
          <source>(the &lt;code&gt;yank&lt;/code&gt; input function). After pasting, use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1d08007ec328a3fc1b28851ef0354671dd2fd7" translate="yes" xml:space="preserve">
          <source>(up) and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9870353991e98af0f67a062af59fba7bf65687a3" translate="yes" xml:space="preserve">
          <source>(up) or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f3e37977f18ebf94190762fe9b74e49ce52c7f" translate="yes" xml:space="preserve">
          <source>(with the cursor on the &quot;o&quot; of &quot;flounder&quot;)</source>
          <target state="translated">(con el cursor en la &quot;o&quot; de &quot;platija&quot;)</target>
        </trans-unit>
        <trans-unit id="b780b337e43648d6c0227b32a1a938a5c60cad10" translate="yes" xml:space="preserve">
          <source>(zero) moves the cursor to beginning of line (remaining in command mode).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35241b56da60fd773b28fc13eaf9fafe799765b0" translate="yes" xml:space="preserve">
          <source>) accepts the first word in the suggestion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073d0308b8b9be18296d367b35ec54590b48f865" translate="yes" xml:space="preserve">
          <source>) and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe5e1a6e4be2e693be32ff90d592fe10b713b44" translate="yes" xml:space="preserve">
          <source>) move the cursor left or right by one character. If the cursor is already at the end of the line, and an autosuggestion is available, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411b1f57636e779348ef3ec84b98d7b9162eac66" translate="yes" xml:space="preserve">
          <source>) shows the manual page for the current command, if one exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf193ee4a7a94b8a2d0fc0e386007ef9fac5a7f" translate="yes" xml:space="preserve">
          <source>+that character, set it to a higher value, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="027ae88d033a81fd34449ebef25359b473d0b4c3" translate="yes" xml:space="preserve">
          <source>, a history search is also performed, but instead of searching for a complete commandline, each commandline is broken into separate elements just like it would be before execution, and the history is searched for an element matching that under the cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14739708483a0aaf5efb9a73296f708b9ebe04a" translate="yes" xml:space="preserve">
          <source>, and &lt;code&gt;fish&lt;/code&gt; will attempt to complete the command, argument, or path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0253a72f0a55388c31f30a6dfb7ba229b7085794" translate="yes" xml:space="preserve">
          <source>, and it will recall your last commandline with &lt;code&gt;sudo&lt;/code&gt; prefixed (or toggle a &lt;code&gt;sudo&lt;/code&gt; prefix on the current commandline if there is anything).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c09b422c3cef90a819ab331635d783288a4deac" translate="yes" xml:space="preserve">
          <source>, fish tries to guess the rest of the word under the cursor. If it finds just one possibility, it inserts it. If it finds more, it inserts the longest unambiguous part and then opens a menu (the &quot;pager&quot;) that you can navigate to find what you're looking for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a875c0a436485d9a49f09f3c28f53490ca8bcea7" translate="yes" xml:space="preserve">
          <source>, the full text &lt;code&gt;git checkout&lt;/code&gt; will appear in the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c37b5db31ddb118ea3d26c0e084698bacca3b35" translate="yes" xml:space="preserve">
          <source>, the user stops a currently running foreground program and returns control to &lt;code&gt;fish&lt;/code&gt;. Some programs do not support this feature, or remap it to another key. GNU Emacs uses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="135788b3e001618c5c69b018b5981bbb81589e23" translate="yes" xml:space="preserve">
          <source>. If the autosuggestion is not what you want, just ignore it: it won't execute unless you accept it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9110a9abc26defeccd2d87a252bd36ed4db14807" translate="yes" xml:space="preserve">
          <source>. Pressing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2401e91138f10c4ec117d1d36af2c00e275400" translate="yes" xml:space="preserve">
          <source>. This will show only arguments containing that part and you will get what you want much faster. Try it out, this is very convenient!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eee939e500310efb25dfad2a9418b008f41a1da" translate="yes" xml:space="preserve">
          <source>. To accept a single word of the autosuggestion,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e4598c69930547a7b957abdbb21aa70dcf24b4" translate="yes" xml:space="preserve">
          <source>. To accept the first suggested word, press</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42099b4af021e53fd8fd4e056c2568d7c2e3ffa8" translate="yes" xml:space="preserve">
          <source>/</source>
          <target state="translated">/</target>
        </trans-unit>
        <trans-unit id="9ea86d42ab79135fe2363ddb06bc732515155e41" translate="yes" xml:space="preserve">
          <source>0 is generally the exit status of fish commands if they successfully performed the requested operation.</source>
          <target state="translated">0 es generalmente el estado de salida de los comandos de los peces si han realizado con éxito la operación solicitada.</target>
        </trans-unit>
        <trans-unit id="d4aa12f4487bb60906e88f2171d4e42804448067" translate="yes" xml:space="preserve">
          <source>1 is generally the exit status of fish commands if they failed to perform the requested operation.</source>
          <target state="translated">1 es generalmente el estado de salida de los comandos de los peces si no han realizado la operación solicitada.</target>
        </trans-unit>
        <trans-unit id="3dbca386b3bf4c0c03ea3c64d065f726c26a64b7" translate="yes" xml:space="preserve">
          <source>1. Installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f189b8dbc452ee2bcbb7cf6ade70c1f019a52882" translate="yes" xml:space="preserve">
          <source>1. Introduction</source>
          <target state="translated">1.Introducción</target>
        </trans-unit>
        <trans-unit id="926896a2a12a6b506b2f8392df8c284a8f1ac6bd" translate="yes" xml:space="preserve">
          <source>1. Why fish?</source>
          <target state="translated">1.¿Por qué el pescado?</target>
        </trans-unit>
        <trans-unit id="a46eef5477967beb8023385daf2fa827aa1eb6d4" translate="yes" xml:space="preserve">
          <source>10. Command line editor</source>
          <target state="translated">10.Editor de línea de comando</target>
        </trans-unit>
        <trans-unit id="79f190f24fdcc9880a783385ed2549b8c946192c" translate="yes" xml:space="preserve">
          <source>10. Input/Output Redirection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7681a4690fb4606cc32a42f6b46c43ef315b2b15" translate="yes" xml:space="preserve">
          <source>10. Tab Completions</source>
          <target state="translated">10.Pestaña Terminaciones</target>
        </trans-unit>
        <trans-unit id="9c3363f57e0ec7caf30417bea2c35fe760093864" translate="yes" xml:space="preserve">
          <source>11. Piping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d74431c225abf39d48d973b8340e743cea77ec" translate="yes" xml:space="preserve">
          <source>11. Running multiple programs</source>
          <target state="translated">11.Ejecutando múltiples programas</target>
        </trans-unit>
        <trans-unit id="18fb7ed35067a1c1fb3c5bc693f1e4851ee5bf4d" translate="yes" xml:space="preserve">
          <source>11. Variables</source>
          <target state="translated">11.Variables</target>
        </trans-unit>
        <trans-unit id="20a398c94523f32b530aa8d414fac97c31040e51" translate="yes" xml:space="preserve">
          <source>12. Background jobs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4d8852e6243e2e42fa5542adbd8099f347d6bb" translate="yes" xml:space="preserve">
          <source>12. Exit Status</source>
          <target state="translated">12.estado de salida</target>
        </trans-unit>
        <trans-unit id="1dc5a2b71d9ebef1dee065c21efcd3e04589115c" translate="yes" xml:space="preserve">
          <source>12. Exports (Shell Variables)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed417bbb2957ff69e737973fce9515ba2cd1095" translate="yes" xml:space="preserve">
          <source>12. Initialization files</source>
          <target state="translated">12.Archivos de inicialización</target>
        </trans-unit>
        <trans-unit id="3bbe727e9c5348d4f3cd4edb9e9008efb057ad7d" translate="yes" xml:space="preserve">
          <source>121 is generally the exit status of fish commands if they were supplied with invalid arguments.</source>
          <target state="translated">121 es generalmente el estado de salida de los comandos de los peces si se les suministraron argumentos inválidos.</target>
        </trans-unit>
        <trans-unit id="2a0c147d7d88bf976d940ec34b60f1a924c98b0d" translate="yes" xml:space="preserve">
          <source>123 means that the command was not executed because the command name contained invalid characters.</source>
          <target state="translated">123 significa que el comando no se ejecutó porque el nombre del comando contenía caracteres no válidos.</target>
        </trans-unit>
        <trans-unit id="fae0fa2dfd772339a29a9e0387a44d8cb45f3483" translate="yes" xml:space="preserve">
          <source>124 means that the command was not executed because none of the wildcards in the command produced any matches.</source>
          <target state="translated">124 significa que el comando no se ejecutó porque ninguno de los comodines del comando produjo ninguna coincidencia.</target>
        </trans-unit>
        <trans-unit id="fff17c994fe538d6ace5ddde5ab3d15a0d6495fe" translate="yes" xml:space="preserve">
          <source>125 means that while an executable with the specified name was located, the operating system could not actually execute the command.</source>
          <target state="translated">125 significa que mientras se encontraba un ejecutable con el nombre especificado,el sistema operativo no podía realmente ejecutar el comando.</target>
        </trans-unit>
        <trans-unit id="0561f1dc764014e4c5998c07ac1c9141c8899e06" translate="yes" xml:space="preserve">
          <source>126 means that while a file with the specified name was located, it was not executable.</source>
          <target state="translated">126 significa que,si bien se localizó un archivo con el nombre especificado,no era ejecutable.</target>
        </trans-unit>
        <trans-unit id="dbf3a27c54d322cd40838943093884466769b3cb" translate="yes" xml:space="preserve">
          <source>127 means that no function, builtin or command with the given name could be located.</source>
          <target state="translated">127 significa que no se ha podido localizar ninguna función,incorporado o comando con el nombre dado.</target>
        </trans-unit>
        <trans-unit id="5069d17fcc2a1dc73b38e51df2e6c80fe34e464a" translate="yes" xml:space="preserve">
          <source>13. Exports (Shell Variables)</source>
          <target state="translated">13.Exportaciones (Variables de Shell)</target>
        </trans-unit>
        <trans-unit id="04c0115b1f4ddd17e82b801c3f67eafac9951c4b" translate="yes" xml:space="preserve">
          <source>13. Future feature flags</source>
          <target state="translated">13.13.Banderas de los futuros reportajes</target>
        </trans-unit>
        <trans-unit id="203496b22b9509d54f2981ddfed5cb8627322a21" translate="yes" xml:space="preserve">
          <source>13. Job control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdba08738be59350dcc752cad5871a0ad74fc09" translate="yes" xml:space="preserve">
          <source>13. Lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd6d4843eb887723c4b67c9f59ad72c66bb42da" translate="yes" xml:space="preserve">
          <source>14. Command Substitutions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5785208c5f93a26a6dbe0e1962c056a165906b9" translate="yes" xml:space="preserve">
          <source>14. Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106ecb41f2834a2a29557681d6f32d9842a06e05" translate="yes" xml:space="preserve">
          <source>14. Lists</source>
          <target state="translated">14.Listas</target>
        </trans-unit>
        <trans-unit id="5c6d09e29ff9389f51446885f7b8f3852a18e5fa" translate="yes" xml:space="preserve">
          <source>14. Other features</source>
          <target state="translated">14.Otras características</target>
        </trans-unit>
        <trans-unit id="78822933a4d6726bf3bd7e9f2ba4cb2622702715" translate="yes" xml:space="preserve">
          <source>15. Command Substitutions</source>
          <target state="translated">15.Sustituciones de mando</target>
        </trans-unit>
        <trans-unit id="a0dd920a475bbed9c8d260cb09d43ba917c74b37" translate="yes" xml:space="preserve">
          <source>15. Defining aliases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329c3cf8e33f350098935aed72cfb6391a642d0d" translate="yes" xml:space="preserve">
          <source>15. Further help and development</source>
          <target state="translated">15.15.Ayuda y desarrollo ulteriores</target>
        </trans-unit>
        <trans-unit id="dd14b172141cd2ee4258b6edb3112dcdba82d11c" translate="yes" xml:space="preserve">
          <source>15. Separating Commands (Semicolon)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075eb086b345d7edefa2743b8a356e1d50b416ef" translate="yes" xml:space="preserve">
          <source>16. Autoloading functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae8e914cec08469ecba3766e36c2c4ee0ca17c7" translate="yes" xml:space="preserve">
          <source>16. Exit Status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8a70ff70ea78c6f30f8c8fb1147de3dc4acd28" translate="yes" xml:space="preserve">
          <source>16. Separating Commands (Semicolon)</source>
          <target state="translated">16.Comandos de separación (punto y coma)</target>
        </trans-unit>
        <trans-unit id="6dd51944c9228f899fcb1841517d00049a3055a7" translate="yes" xml:space="preserve">
          <source>17. Combiners (And, Or, Not)</source>
          <target state="translated">17.Combinadores (y,o,no)</target>
        </trans-unit>
        <trans-unit id="e7753808a9db7061f1469b89049dd85e15ddc287" translate="yes" xml:space="preserve">
          <source>17. Conditional execution of code and flow control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06207b8710ca9ad0efafdae660d1987713f6e0d" translate="yes" xml:space="preserve">
          <source>18. Conditionals (If, Else, Switch)</source>
          <target state="translated">18.Condicionales (Si,Si,Si,Cambiar)</target>
        </trans-unit>
        <trans-unit id="b90bcdedde05f5a37f69cc36e4758f0c5b8f3624" translate="yes" xml:space="preserve">
          <source>18. Parameter expansion (Globbing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6daa5d2c934c3554152d3456a48c8e13a7d9245a" translate="yes" xml:space="preserve">
          <source>19. Functions</source>
          <target state="translated">19.Funciones</target>
        </trans-unit>
        <trans-unit id="725042e7ba84d9a7333dc444e7689a388d39abac" translate="yes" xml:space="preserve">
          <source>19. Wildcards</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c193b6976f5521b772fe1ad29d0691b555cfbb" translate="yes" xml:space="preserve">
          <source>2. Getting started</source>
          <target state="translated">2.Empezando</target>
        </trans-unit>
        <trans-unit id="6a23966d6a7c63e4085210fb646e035018840b8f" translate="yes" xml:space="preserve">
          <source>2. Starting and Exiting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d25251743163a480371987356ec2f29a08dab1" translate="yes" xml:space="preserve">
          <source>2. Syntax overview</source>
          <target state="translated">2.Resumen de la sintaxis</target>
        </trans-unit>
        <trans-unit id="28e113fd8b6d9d7b9b909dd8060916013e185b56" translate="yes" xml:space="preserve">
          <source>20. Command substitution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee041c30821084568dbfc50bb090432b66268687" translate="yes" xml:space="preserve">
          <source>20. Loops</source>
          <target state="translated">20.Loops</target>
        </trans-unit>
        <trans-unit id="7004b2124f56683724e61d32e87d4f22d00406a6" translate="yes" xml:space="preserve">
          <source>21. Brace expansion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86411eb3cae7abc8930169220a29c3db3c9c802b" translate="yes" xml:space="preserve">
          <source>21. Prompt</source>
          <target state="translated">21.aviso</target>
        </trans-unit>
        <trans-unit id="be89488a0c8e3692191d4408004330a79262461a" translate="yes" xml:space="preserve">
          <source>22. $PATH</source>
          <target state="translated">22.CAMINO</target>
        </trans-unit>
        <trans-unit id="dec8a197ae64c0f3c7ec10f09ba83ad78c50a3da" translate="yes" xml:space="preserve">
          <source>22. Variable expansion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c599b3ae8d97b0f61b31fff98f3a8875789a80ab" translate="yes" xml:space="preserve">
          <source>23. Cartesian Products</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8e3a55c6bcbf66a86159bb612fa396d637db3c" translate="yes" xml:space="preserve">
          <source>23. Startup (Where&amp;#x27;s .bashrc?)</source>
          <target state="translated">23. Inicio (&amp;iquest;D&amp;oacute;nde est&amp;aacute; .bashrc?)</target>
        </trans-unit>
        <trans-unit id="50c3ce1a46da2af866dc1ef9e736109035d68369" translate="yes" xml:space="preserve">
          <source>24. Autoloading Functions</source>
          <target state="translated">24.Funciones de carga automática</target>
        </trans-unit>
        <trans-unit id="21782e98ce7a06d01cbddc73acf628417c85d23a" translate="yes" xml:space="preserve">
          <source>24. Index range expansion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3d93a8d1e39c6a439c06cdc14fc715c04d0f6e" translate="yes" xml:space="preserve">
          <source>25. Home directory expansion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51c3a82db4ede291cc3acd14197878182050d98" translate="yes" xml:space="preserve">
          <source>25. Universal Variables</source>
          <target state="translated">25.Universal Variables</target>
        </trans-unit>
        <trans-unit id="e8de832864854ddfb1311ecfd50064b810e7309b" translate="yes" xml:space="preserve">
          <source>26. Combining different expansions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dffbe19ca650fa6117985032cdbb0b88bc79c0a" translate="yes" xml:space="preserve">
          <source>26. Switching to fish?</source>
          <target state="translated">26.¿Cambiando a pescado?</target>
        </trans-unit>
        <trans-unit id="43f07506bd203a0f33c3bc1094f3127fcd1a55d9" translate="yes" xml:space="preserve">
          <source>27. Ready for more?</source>
          <target state="translated">27.¿Listo para más?</target>
        </trans-unit>
        <trans-unit id="b6545de8fd08f207976ad4d8dbee01ef57cd0b21" translate="yes" xml:space="preserve">
          <source>27. Shell variable and function names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2d7572116930ca8cf2ad92834fcfa42c0b812c" translate="yes" xml:space="preserve">
          <source>28. Shell variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08cbdf602b3128f270eeaa71d699cbbb196fac7" translate="yes" xml:space="preserve">
          <source>29. Variable scope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9717582d6224f0bb6e79d62d43111c178be8443" translate="yes" xml:space="preserve">
          <source>3. Executing Bash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab1667863ec0fbd298860a797c7a0369def3080" translate="yes" xml:space="preserve">
          <source>3. Help</source>
          <target state="translated">3.Ayuda</target>
        </trans-unit>
        <trans-unit id="c90a67af71155c62687a3cd53fc8539c17d6ae32" translate="yes" xml:space="preserve">
          <source>3. Learning fish</source>
          <target state="translated">3.Aprender a pescar</target>
        </trans-unit>
        <trans-unit id="db0202156b6206862a2e9c47f9cb38af6da7e9d1" translate="yes" xml:space="preserve">
          <source>30. Overriding variables for a single command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa6d0e3ad45507e5da6686fb90b02e9e4e2fb75" translate="yes" xml:space="preserve">
          <source>31. More on universal variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1e1dbbbfdb3e0bc9175ca58fcb9debbe265c6a" translate="yes" xml:space="preserve">
          <source>32. Variable scope for functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764dc75e887fefe9ab75fa2dc5258c6c9d0b68b3" translate="yes" xml:space="preserve">
          <source>33. Exporting variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23522b27f004b385683d29bf9af2b7dd8b6f493d" translate="yes" xml:space="preserve">
          <source>34. Lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308a9336490f704848868d69d35764e1b4aace4c" translate="yes" xml:space="preserve">
          <source>35. PATH variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092dbf3dc100c5a981bb7e6e99104ddf9af3a239" translate="yes" xml:space="preserve">
          <source>36. Special variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d641d149354918c941d10a14440110c2220a70d8" translate="yes" xml:space="preserve">
          <source>37. The status variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629069bdaba94265b99c9618fcc7400de347789a" translate="yes" xml:space="preserve">
          <source>38. Variables for changing highlighting colors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebb6924d2fdfa8a92f0866fd5e723781e710342" translate="yes" xml:space="preserve">
          <source>39. Locale variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8d4116400873d5e85436fc6dd954374e494de1" translate="yes" xml:space="preserve">
          <source>4. Autosuggestions</source>
          <target state="translated">4.Autosugestiones</target>
        </trans-unit>
        <trans-unit id="de5d41391952646d4f05f60c757233426a2cdf66" translate="yes" xml:space="preserve">
          <source>4. Default Shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd175fe63395e66837f9f3f159539c0c42bd91c7" translate="yes" xml:space="preserve">
          <source>4. Running Commands</source>
          <target state="translated">4.Comandos de ejecución</target>
        </trans-unit>
        <trans-unit id="7d7fcdb9e10e20bb7890cac1bc56900cd3f2a092" translate="yes" xml:space="preserve">
          <source>40. Builtin commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f012b271feecd27bde395b56a1fabe7ab06244" translate="yes" xml:space="preserve">
          <source>41. Help</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bad7bc4df1175724b0f08b427c7c27f1d777ade" translate="yes" xml:space="preserve">
          <source>42. Autosuggestions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5af891b41ea8f5f35026d6540ec73b7f959623" translate="yes" xml:space="preserve">
          <source>43. Tab Completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a6f6ba56f0d703e56144f6e53b15a95ed18321" translate="yes" xml:space="preserve">
          <source>44. Writing your own completions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049110b7d0f5866afbf3f5479ec230d813fd4922" translate="yes" xml:space="preserve">
          <source>45. Useful functions for writing completions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af67f3a36a3a166a05854a375e16eb08ca02bb1e" translate="yes" xml:space="preserve">
          <source>46. Where to put completions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ece1af93399265cdfe61cb36e098e9061be765" translate="yes" xml:space="preserve">
          <source>47. Shared bindings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c223a5a8acb02a675c76fe5d3501ac6fbd665f21" translate="yes" xml:space="preserve">
          <source>48. Emacs mode commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255ecd5f3a2bcda2d97bfbcb5ffbd4a9bf470e91" translate="yes" xml:space="preserve">
          <source>49. Vi mode commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15566dc92d12b8d79432a656393c9a90ea9d5a07" translate="yes" xml:space="preserve">
          <source>5. Getting Help</source>
          <target state="translated">5.5.Obtención de ayuda</target>
        </trans-unit>
        <trans-unit id="fdbfd89ff22ae995764c2bb7580457cada52d1ab" translate="yes" xml:space="preserve">
          <source>5. Tab completion</source>
          <target state="translated">5.Completar la pestaña</target>
        </trans-unit>
        <trans-unit id="870f28a2faa102595ef5d8a22bcfa520f5f25056" translate="yes" xml:space="preserve">
          <source>5. Uninstalling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000133eac777354122e63b2bb25f84ddcfe7b8ac" translate="yes" xml:space="preserve">
          <source>50. Command mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cf1bcd1f44369c42cb99cdad41611e181d60cf" translate="yes" xml:space="preserve">
          <source>51. Insert mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8b3436a490b3e712eca21a46b5ca4d2d729347" translate="yes" xml:space="preserve">
          <source>52. Visual mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a90b78f1c025b693acbec6e2f92de1f3b2df31" translate="yes" xml:space="preserve">
          <source>53. Copy and paste (Kill Ring)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0678f88ee6619c38e29b421b21b5b888612fa84f" translate="yes" xml:space="preserve">
          <source>54. Searchable history</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752ca33d12520bd2df64df3bb2d0b4d7c9f3849e" translate="yes" xml:space="preserve">
          <source>55. Multiline editing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5582d3796df912d6a2a5c6e02640a746573aa854" translate="yes" xml:space="preserve">
          <source>56. Syntax highlighting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e62c8845fed020c4336dc4b4d4d9e769d62b248" translate="yes" xml:space="preserve">
          <source>57. Programmable title</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ccb24a39eb6c7b2676dd39c8fdc5d3a645f469" translate="yes" xml:space="preserve">
          <source>58. Programmable prompt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be24bbc75a0cec2b21377bb1d09bd8d2d8fad8d" translate="yes" xml:space="preserve">
          <source>59. Configurable greeting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e49673962b177e7bdd03522f2e9082a0432e609" translate="yes" xml:space="preserve">
          <source>6. Parameter expansion (Globbing)</source>
          <target state="translated">6.Expansión de parámetros (Globbing)</target>
        </trans-unit>
        <trans-unit id="dc9c0a8873e69cf19c8f7d3d3a0a75bd2657ccc6" translate="yes" xml:space="preserve">
          <source>6. Shebang Line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5444a605bbd827344a4f1d85e1da6c810bc02893" translate="yes" xml:space="preserve">
          <source>6. Syntax Highlighting</source>
          <target state="translated">6.Resaltar la sintaxis</target>
        </trans-unit>
        <trans-unit id="9841723cf13e91e440702d93aa8d148b19b914d4" translate="yes" xml:space="preserve">
          <source>60. Private mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0feb2aa13c02103a2e691021439b532958fc60a2" translate="yes" xml:space="preserve">
          <source>61. Event handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a11d75371901733675676a1103643ee93ceb39" translate="yes" xml:space="preserve">
          <source>62. Debugging fish scripts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6c93bc8ffa5e0b6bb660f83ed9c35e9141821f" translate="yes" xml:space="preserve">
          <source>7. Shell variable and function names</source>
          <target state="translated">7.Nombres de las variables y funciones de la cubierta</target>
        </trans-unit>
        <trans-unit id="c6208b9b0af8a92890da5c48676fede4a2260cf6" translate="yes" xml:space="preserve">
          <source>7. Some common words</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142efe57d206a245fbd2577ea3832ab67e73ad9e" translate="yes" xml:space="preserve">
          <source>7. Wildcards</source>
          <target state="translated">7.Wildcards</target>
        </trans-unit>
        <trans-unit id="4e5ee173e552fc8627065d510be03a54889fdfd5" translate="yes" xml:space="preserve">
          <source>8. Pipes and Redirections</source>
          <target state="translated">8.Tuberías y redireccionamientos</target>
        </trans-unit>
        <trans-unit id="3478c11fa4713a72b8eff845ea2da40ffc78ba71" translate="yes" xml:space="preserve">
          <source>8. Quotes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff15ce7b005a277a3f0460cb6fdb8a4198e4de0" translate="yes" xml:space="preserve">
          <source>8. Shell variables</source>
          <target state="translated">8.Variables de la cubierta</target>
        </trans-unit>
        <trans-unit id="ffc6dabb88bb72cc10fbb3c3a4eb9acc8d0d5224" translate="yes" xml:space="preserve">
          <source>9. Autosuggestions</source>
          <target state="translated">9.Autosugestiones</target>
        </trans-unit>
        <trans-unit id="98d18c141a69d81b7eda98b6f9b2450e3181fbc2" translate="yes" xml:space="preserve">
          <source>9. Builtin commands</source>
          <target state="translated">9.Comandos incorporados</target>
        </trans-unit>
        <trans-unit id="50191be6b2b3bde6e302db85cc06c61359179bcf" translate="yes" xml:space="preserve">
          <source>9. Escaping characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f44804a8882c16b1a8f23a35014913a83df0c80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#default-shell&quot;&gt;Default Shell&lt;/a&gt;: How to switch to fish as the default shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70bfb9eb910a56cd3a42bf14880e27fbbdb4559" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#executing-bash&quot;&gt;Executing Bash&lt;/a&gt;: How to execute bash commands in fish</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d9858119c57f91fe036872894d36cdb9dc6aa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#expand-brace&quot;&gt;Brace expansion&lt;/a&gt;, to write lists with common pre- or suffixes in a shorter way</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d7e7d734985e43a579e198857413a0b6fa50d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#expand-command-substitution&quot;&gt;Command substitution&lt;/a&gt;, to use the output of another command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3890c237f5787256a6cee7c29936997b71528bc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#expand-home&quot;&gt;Tilde expansion&lt;/a&gt;, to turn the &lt;code&gt;~&lt;/code&gt; at the beginning of paths into the path to the home directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67f83cf32bcc92d1c39bbb28302ab075e80ac8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#expand-variable&quot;&gt;Variable expansion&lt;/a&gt;, to use the value of a variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efae4cd0a0e2ca52519ad4328cf45c6b9e1de31c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#expand-wildcard&quot;&gt;Wildcards&lt;/a&gt;, to create filenames from patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd46e8e838055c0dc5dad16855da275f81570b63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt;: How to install fish</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="badb0408952f772e32c3ff8cadd4b06307f2fde0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#redirects&quot;&gt;Input and output redirections&lt;/a&gt; (including &lt;a href=&quot;#pipes&quot;&gt;pipes&lt;/a&gt;) can also be applied to loops:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb75b8c37121629be755f459ac215ecf18648383" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#starting-and-exiting&quot;&gt;Starting and Exiting&lt;/a&gt; How to start and exit a fish shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5effd2dd155656152b2b306e8d30107e1dd721" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tab-completion&quot;&gt;completes&lt;/a&gt; the current token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253fbe2e7f9e45da9e37bca4e6e3dc092fddb8ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tut-combiners&quot;&gt;Combiners&lt;/a&gt; can also be used to make more complex conditions, like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8beeda3546f3b6009e6452b7772f53401604bc45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tut_combiners&quot;&gt;Combiners&lt;/a&gt; can also be used to make more complex conditions, like</source>
          <target state="translated">&lt;a href=&quot;#tut_combiners&quot;&gt;Los combinadores&lt;/a&gt; tambi&amp;eacute;n se pueden usar para hacer condiciones m&amp;aacute;s complejas, como</target>
        </trans-unit>
        <trans-unit id="82f6e1d677408d951d73b1cc62d0fd8d88e8eaa3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#uninstalling&quot;&gt;Uninstalling&lt;/a&gt;: How to uninstall fish</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a0d555299fe37e7c04e67f72c28d7d459a9b36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#variables-universal&quot;&gt;Universal variables&lt;/a&gt; are stored in the file &lt;code&gt;.config/fish/fish_variables&lt;/code&gt;. Do not edit this file directly, as your edits may be overwritten. Edit the variables through fish scripts or by using fish interactively instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806acfd75575a66c4ca8d5f477286c5b3bf5e1fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#variables-universal&quot;&gt;Universal variables&lt;/a&gt; are stored in the file &lt;code&gt;.config/fish/fishd.MACHINE_ID&lt;/code&gt;, where MACHINE_ID is typically your MAC address. Do not edit this file directly, as your edits may be overwritten. Edit them through fish scripts or by using fish interactively instead.</source>
          <target state="translated">&lt;a href=&quot;#variables-universal&quot;&gt;Las variables universales&lt;/a&gt; se almacenan en el archivo &lt;code&gt;.config/fish/fishd.MACHINE_ID&lt;/code&gt; , donde MACHINE_ID suele ser su direcci&amp;oacute;n MAC. No edite este archivo directamente, ya que sus ediciones pueden sobrescribirse. Ed&amp;iacute;telos a trav&amp;eacute;s de scripts de peces o utilizando peces de forma interactiva.</target>
        </trans-unit>
        <trans-unit id="20cda0fada1d67f182d0256063ea734c2d804de8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../index#variables-status&quot;&gt;$status&lt;/a&gt; variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef6e604f36df4734ed35ae15cbf8611d3d0b70c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;and#cmd-and&quot;&gt;and&lt;/a&gt; command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e52eec7dad8a25b15a4a3d6af90dd2175968d02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;begin#cmd-begin&quot;&gt;begin&lt;/a&gt; to start a block of commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3601304fa90b96d6f2dfd3e0a7915ec0e95fa10f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/argparse#cmd-argparse&quot;&gt;argparse&lt;/a&gt; - this can handle a script's option parsing, for which bash would probably use &lt;code&gt;getopt&lt;/code&gt; (zsh provides &lt;code&gt;zparseopts&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b75378cd975c697c11691a9aa909b6e872702bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/argparse#cmd-argparse&quot;&gt;argparse&lt;/a&gt; for parsing function arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a0bd7dd2c42107077d6210550531db1c17dd10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/break#cmd-break&quot;&gt;break&lt;/a&gt; is available to break out of a loop, and &lt;a href=&quot;cmds/continue#cmd-continue&quot;&gt;continue&lt;/a&gt; to jump to the next iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfb116a4c5dfd61b0ae82ba806c188e08fcd70e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/cd#cmd-cd&quot;&gt;cd&lt;/a&gt;: Change the current directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6634dca404bb90a2bcd7704adcdfddd79fecf7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/cdh#cmd-cdh&quot;&gt;cdh&lt;/a&gt; displays a prompt to quickly navigate the history</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624e4b4661e7c16f54d99fc7e88317e601cf7521" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/count#cmd-count&quot;&gt;count&lt;/a&gt; can be used to count things and therefore replaces &lt;code&gt;$#&lt;/code&gt; and can be used instead of &lt;code&gt;wc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf84853b7996ad908b84c533baf7bd693738671" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/dirh#cmd-dirh&quot;&gt;dirh&lt;/a&gt; prints the history</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ef7c1c8c70cd83a28b0e94f576bba463df4db0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/dirs#cmd-dirs&quot;&gt;dirs&lt;/a&gt; prints the stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6451406aedfb95881f2fc29a9fec0515e42516a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/math#cmd-math&quot;&gt;math&lt;/a&gt; - this replaces &lt;code&gt;$((i + 1))&lt;/code&gt; arithmetic and can also do floats and some simple functions (sine and friends).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95200ee29f1d5b582dc21abc701a46e3e02ace91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/nextd#cmd-nextd&quot;&gt;nextd&lt;/a&gt; moves forward through the history. It is bound to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1cadcb428160a92ac8b811ad4521d9f8bb41a8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/open#cmd-open&quot;&gt;open&lt;/a&gt;: Open files with the default application associated with each filetype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b568fcaab1798d0d0d6852ade5f3e3bc2ac032" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/popd#cmd-popd&quot;&gt;popd&lt;/a&gt; removes the directory on top of the stack and changes the current working directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d2e8eb6e1a08b6700569a1c289853f9cb962c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/prevd#cmd-prevd&quot;&gt;prevd&lt;/a&gt; moves backward through the history. It is bound to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e65874dafb1f64067c588db4bd8b57921ae8f39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/printf#cmd-printf&quot;&gt;printf&lt;/a&gt; and &lt;a href=&quot;cmds/echo#cmd-echo&quot;&gt;echo&lt;/a&gt; for creating output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd52e17e40c936766cc1990440119b60aea03e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/pushd#cmd-pushd&quot;&gt;pushd&lt;/a&gt; adds a directory on top of the stack and makes it the current working directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a032f9d0c59786317ce60b14897d0619c849e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/random#cmd-random&quot;&gt;random&lt;/a&gt; to get random numbers or pick a random element from a list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2b77c3c4c8a077df72f6d3a21796a9150ecc42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/source#cmd-source&quot;&gt;source&lt;/a&gt; to read a script in the current shell (so changes to variables stay) and &lt;a href=&quot;cmds/eval#cmd-eval&quot;&gt;eval&lt;/a&gt; to execute a string as script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f89a280829863e1e63286b42c667460d6d7728d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/status#cmd-status&quot;&gt;status&lt;/a&gt; for asking about the shell's status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8463343aee6eb3e6879bd1fef8febe1c94d2c7fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/status#cmd-status&quot;&gt;status&lt;/a&gt; provides information about the shell status, e.g. if it's interactive or what the current linenumber is. This replaces &lt;code&gt;$-&lt;/code&gt; and &lt;code&gt;$BASH_LINENO&lt;/code&gt; and other variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bff33fdbd04ca917986b97f0fdc75152d9a1a6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/string#cmd-string&quot;&gt;string&lt;/a&gt; - this replaces most of the string transformation (&lt;code&gt;${i%foo}&lt;/code&gt; et al) and can also be used instead of &lt;code&gt;grep&lt;/code&gt; and &lt;code&gt;sed&lt;/code&gt; and such.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615391ebcacc540652476dda71b93663043642b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmds/test#cmd-test&quot;&gt;test&lt;/a&gt; for checking conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae04997401394a50a8e3736d8b77f6c8f4c99c24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;false#cmd-false&quot;&gt;false&lt;/a&gt; command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38007fe379038b0eb5b5827d7257400d5ba837bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function#cmd-function&quot;&gt;function&lt;/a&gt; to define a function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d30e55f281497d1bcc6a9362704c1839600fa5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://git-scm.com&quot;&gt;Git&lt;/a&gt; must be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85191799940d84d8a879c315ecb8a114ef9334ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://subversion.apache.org/&quot;&gt;Subversion&lt;/a&gt; (&lt;code&gt;svn&lt;/code&gt;) must be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e3d838011621aae7c4e6040d5c3f3e9fb473b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.mercurial-scm.org/&quot;&gt;Mercurial&lt;/a&gt; (&lt;code&gt;hg&lt;/code&gt;) must be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64149dd825fc7cf4f8d6aa9bfe42e7a37d323d7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;if#cmd-if&quot;&gt;if&lt;/a&gt; will execute the command &lt;code&gt;CONDITION&lt;/code&gt;. If the condition's exit status is 0, the commands &lt;code&gt;COMMANDS_TRUE&lt;/code&gt; will execute. If it is not 0 and &lt;code&gt;else&lt;/code&gt; is given, &lt;code&gt;COMMANDS_FALSE&lt;/code&gt; will be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50fb1318e1f9e0f9b532e6a5c9af477720e55be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;if#cmd-if&quot;&gt;if&lt;/a&gt;, &lt;a href=&quot;switch#cmd-switch&quot;&gt;switch&lt;/a&gt; to conditionally execute commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3925f0c03755a5fa6ce28f86ce20bf929b1ee1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;or#cmd-or&quot;&gt;or&lt;/a&gt; command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3339e18c1148e6030af9aa8939af3db0949c40db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;true#cmd-true&quot;&gt;true&lt;/a&gt; command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e31629fa38ca9d0f3711e636676f7b3f1f73a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;while#cmd-while&quot;&gt;while&lt;/a&gt;, &lt;a href=&quot;for#cmd-for&quot;&gt;for&lt;/a&gt; to perform commands multiple times</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac2b7dcd58a012b2820693b1315516d5b45a8e9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&amp;larr;&lt;/b&gt; (or &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;B&lt;/b&gt;) and &lt;b&gt;&amp;rarr;&lt;/b&gt; (or &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;F&lt;/b&gt;) move the cursor left or right by one character. If the cursor is already at the end of the line, and an autosuggestion is available, the &lt;b&gt;&amp;rarr;&lt;/b&gt; key and the &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;F&lt;/b&gt; combination accept the suggestion.</source>
          <target state="translated">&lt;b&gt;&amp;larr;&lt;/b&gt; (o &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;B&lt;/b&gt; ) y &lt;b&gt;&amp;rarr;&lt;/b&gt; (o &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;F&lt;/b&gt; ) mueven el cursor un car&amp;aacute;cter hacia la izquierda o hacia la derecha. Si el cursor ya est&amp;aacute; al final de la l&amp;iacute;nea y hay una autosugesti&amp;oacute;n disponible, la tecla &lt;b&gt;&amp;rarr;&lt;/b&gt; y la combinaci&amp;oacute;n &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;F&lt;/b&gt; aceptan la sugerencia.</target>
        </trans-unit>
        <trans-unit id="eec4adc855d844da8c4d5e4a1f8ad5a4cb1d7bc4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&amp;larr;&lt;/b&gt; and &lt;b&gt;&amp;rarr;&lt;/b&gt; extend the selection backward/forward by one character.</source>
          <target state="translated">&lt;b&gt;&amp;larr;&lt;/b&gt; y &lt;b&gt;&amp;rarr;&lt;/b&gt; ampl&amp;iacute;an la selecci&amp;oacute;n hacia atr&amp;aacute;s / adelante en un car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="ab36d9fad74917cb021e127b3357a04cdddf5aee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&amp;uarr;&lt;/b&gt; and &lt;b&gt;&amp;darr;&lt;/b&gt; (or &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;P&lt;/b&gt; and &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;N&lt;/b&gt; for emacs aficionados) search the command history for the previous/next command containing the string that was specified on the commandline before the search was started. If the commandline was empty when the search started, all commands match. See the &lt;a href=&quot;#history&quot;&gt;history&lt;/a&gt; section for more information on history searching.</source>
          <target state="translated">&lt;b&gt;&amp;uarr;&lt;/b&gt; y &lt;b&gt;&amp;darr;&lt;/b&gt; (o &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;P&lt;/b&gt; y &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;N&lt;/b&gt; para aficionados a emacs) buscan en el historial de comandos el comando anterior / siguiente que contiene la cadena que se especific&amp;oacute; en la l&amp;iacute;nea de comandos antes de que se iniciara la b&amp;uacute;squeda. Si la l&amp;iacute;nea de comandos estaba vac&amp;iacute;a cuando comenz&amp;oacute; la b&amp;uacute;squeda, todos los comandos coinciden. Consulte la secci&amp;oacute;n de &lt;a href=&quot;#history&quot;&gt;historial&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre la b&amp;uacute;squeda de historial.</target>
        </trans-unit>
        <trans-unit id="006210777d36c4e66b226397f87f98f871001fd3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;0&lt;/b&gt; (zero) moves the cursor to beginning of line (remaining in command mode).</source>
          <target state="translated">&lt;b&gt;0&lt;/b&gt; (cero) mueve el cursor al principio de la l&amp;iacute;nea (quedando en el modo de comando).</target>
        </trans-unit>
        <trans-unit id="70c3e2e079bfde4a8b70698300c496a18114461a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Backspace&lt;/b&gt; moves the cursor left.</source>
          <target state="translated">&lt;b&gt;Retroceso&lt;/b&gt; mueve el cursor hacia la izquierda.</target>
        </trans-unit>
        <trans-unit id="40fd3307ef1178120c8ecaca309c95f35877eddd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Backspace&lt;/b&gt; removes one character to the left.</source>
          <target state="translated">&lt;b&gt;Retroceso&lt;/b&gt; elimina un car&amp;aacute;cter a la izquierda.</target>
        </trans-unit>
        <trans-unit id="605fd3500156dad2133a13a6a01fd70ad484358f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Delete&lt;/b&gt; and &lt;b&gt;Backspace&lt;/b&gt; removes one character forwards or backwards respectively.</source>
          <target state="translated">&lt;b&gt;Delete&lt;/b&gt; y &lt;b&gt;Backspace&lt;/b&gt; eliminan un car&amp;aacute;cter hacia adelante o hacia atr&amp;aacute;s respectivamente.</target>
        </trans-unit>
        <trans-unit id="9a70af14fdf910efc533761e48baff8fcc60831a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;End&lt;/b&gt; or &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;E&lt;/b&gt; moves to the end of line. If the cursor is already at the end of the line, and an autosuggestion is available, &lt;b&gt;End&lt;/b&gt; or &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;E&lt;/b&gt; accepts the autosuggestion.</source>
          <target state="translated">&lt;b&gt;Fin&lt;/b&gt; o &lt;em&gt;Control&lt;/em&gt; : &lt;b&gt;E se&lt;/b&gt; mueve al final de la l&amp;iacute;nea. Si el cursor ya est&amp;aacute; al final de la l&amp;iacute;nea y hay una autosugesti&amp;oacute;n disponible, &lt;b&gt;End&lt;/b&gt; o &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;E&lt;/b&gt; acepta la autosugesti&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="77c336004eabb259e7091f1fe5a682cf66f54142" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Escape&lt;/b&gt; and &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;C&lt;/b&gt; enter &lt;a href=&quot;#vi-mode-command&quot;&gt;command mode&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt;Escape&lt;/b&gt; y &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;C&lt;/b&gt; ingrese al &lt;a href=&quot;#vi-mode-command&quot;&gt;modo de comando&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="46be837ceaced62457025886071ff6a567f114de" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Escape&lt;/b&gt; enters &lt;a href=&quot;#vi-mode-command&quot;&gt;command mode&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt;Escape&lt;/b&gt; ingresa al &lt;a href=&quot;#vi-mode-command&quot;&gt;modo de comando&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="984586e704e53240ea81090ad618e36359b7e19f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Home&lt;/b&gt; or &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;A&lt;/b&gt; moves the cursor to the beginning of the line.</source>
          <target state="translated">&lt;b&gt;Inicio&lt;/b&gt; o &lt;em&gt;Control&lt;/em&gt; : &lt;b&gt;A&lt;/b&gt; mueve el cursor al principio de la l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="9c66dd8bc88cc38649572548fa083058e8e63f51" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Tab&lt;/b&gt;&lt;a href=&quot;#completion&quot;&gt;completes&lt;/a&gt; the current token. &lt;em&gt;Shift&lt;/em&gt;-&lt;b&gt; Tab&lt;/b&gt; completes the current token and starts the pager's search mode.</source>
          <target state="translated">&lt;b&gt;Tab &lt;/b&gt;&lt;a href=&quot;#completion&quot;&gt;completa&lt;/a&gt; el token actual. &lt;em&gt;Shift&lt;/em&gt; - &lt;b&gt;Tab&lt;/b&gt; completa el token actual e inicia el modo de b&amp;uacute;squeda del localizador.</target>
        </trans-unit>
        <trans-unit id="5e1d24a4666c037b5c8646789a1bed11e0a9ff52" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[&lt;/b&gt; and &lt;b&gt;]&lt;/b&gt; search the command history for the previous/next token containing the token under the cursor before the search was started. See the &lt;a href=&quot;#history&quot;&gt;history&lt;/a&gt; section for more information on history searching.</source>
          <target state="translated">&lt;b&gt;[&lt;/b&gt; y &lt;b&gt;]&lt;/b&gt; busque en el historial de comandos el token anterior / siguiente que contiene el token debajo del cursor antes de que se iniciara la b&amp;uacute;squeda. Consulte la secci&amp;oacute;n de &lt;a href=&quot;#history&quot;&gt;historial&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre la b&amp;uacute;squeda de historial.</target>
        </trans-unit>
        <trans-unit id="f8720d73a57333adcbd6603ebb709a7e8cdccb90" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;a&lt;/b&gt; enters &lt;a href=&quot;#vi-mode-insert&quot;&gt;insert mode&lt;/a&gt; after the current cursor position.</source>
          <target state="translated">&lt;b&gt;a&lt;/b&gt; entra en el &lt;a href=&quot;#vi-mode-insert&quot;&gt;modo de inserci&amp;oacute;n&lt;/a&gt; despu&amp;eacute;s de la posici&amp;oacute;n actual del cursor.</target>
        </trans-unit>
        <trans-unit id="a370cea3411c21f6dd8701c9a41f89febf580700" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;argument&lt;/b&gt; a parameter given to a command</source>
          <target state="translated">&lt;b&gt;argumento&lt;/b&gt; un par&amp;aacute;metro dado a un comando</target>
        </trans-unit>
        <trans-unit id="67a045f7269bcd0ec45296ef8943037baa32d906" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;b&lt;/b&gt; and &lt;b&gt;w&lt;/b&gt; extend the selection backward/forward by one word.</source>
          <target state="translated">&lt;b&gt;b&lt;/b&gt; y &lt;b&gt;w&lt;/b&gt; extender la selecci&amp;oacute;n hacia atr&amp;aacute;s / hacia adelante por una palabra.</target>
        </trans-unit>
        <trans-unit id="5a00c14325a9371634a71116c381d05f38047b79" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;builtin&lt;/b&gt; a command that is implemented in the shell. Builtins are commands that are so closely tied to the shell that it is impossible to implement them as external commands.</source>
          <target state="translated">&lt;b&gt;incorporado&lt;/b&gt; un comando que se implementa en el shell. Los incorporados son comandos que est&amp;aacute;n tan estrechamente vinculados al shell que es imposible implementarlos como comandos externos.</target>
        </trans-unit>
        <trans-unit id="5b2bba0daf9f3f5b3db3ad3b60ca6ba8a68d3286" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;command&lt;/b&gt; a program that the shell can run.</source>
          <target state="translated">&lt;b&gt;comandar&lt;/b&gt; un programa que pueda ejecutar el shell.</target>
        </trans-unit>
        <trans-unit id="422523c6a60bcb5d18a66490109161153e55762d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;d&lt;/b&gt; and &lt;b&gt;x&lt;/b&gt; move the selection to the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt; and enter &lt;a href=&quot;#vi-mode-command&quot;&gt;command mode&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt;d&lt;/b&gt; y &lt;b&gt;x&lt;/b&gt; mover la selecci&amp;oacute;n a la &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt; y entrar en &lt;a href=&quot;#vi-mode-command&quot;&gt;modo de comando&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fc6a391dddd78663d18e52f19b77cb0603487b00" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;d&lt;/b&gt;&lt;b&gt;d&lt;/b&gt; deletes the current line and moves it to the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt;d &lt;/b&gt;&lt;b&gt;d&lt;/b&gt; borra la l&amp;iacute;nea actual y la mueve al &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c3c75079a462b7af206a2c31cc779ced40e22e8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;function&lt;/b&gt; a block of commands that can be called as if they were a single command. By using functions, it is possible to string together multiple smaller commands into one more advanced command.</source>
          <target state="translated">&lt;b&gt;funci&amp;oacute;n&lt;/b&gt; un bloque de comandos que se pueden llamar como si fueran un solo comando. Mediante el uso de funciones, es posible encadenar varios comandos m&amp;aacute;s peque&amp;ntilde;os en un comando m&amp;aacute;s avanzado.</target>
        </trans-unit>
        <trans-unit id="d401f7e62daa4fd7d0e5b1588d252092e8e26983" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;h&lt;/b&gt; moves the cursor left.</source>
          <target state="translated">&lt;b&gt;h&lt;/b&gt; mueve el cursor a la izquierda.</target>
        </trans-unit>
        <trans-unit id="231ea65cb4c90d8b3ea88fe4ada526b1fcccb631" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;i&lt;/b&gt; enters &lt;a href=&quot;#vi-mode-insert&quot;&gt;insert mode&lt;/a&gt; at the current cursor position.</source>
          <target state="translated">&lt;b&gt;i&lt;/b&gt; entra en &lt;a href=&quot;#vi-mode-insert&quot;&gt;el modo de inserci&amp;oacute;n&lt;/a&gt; en la posici&amp;oacute;n actual del cursor.</target>
        </trans-unit>
        <trans-unit id="da2fcea1bd8392d9b49916bb727201427fd412c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;job&lt;/b&gt; a running pipeline or command</source>
          <target state="translated">&lt;b&gt;trabajar&lt;/b&gt; una tuber&amp;iacute;a o comando en ejecuci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="6144e825c10011793a742a7841a5d8a873792605" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;l&lt;/b&gt; moves the cursor right.</source>
          <target state="translated">&lt;b&gt;l&lt;/b&gt; mueve el cursor derecho.</target>
        </trans-unit>
        <trans-unit id="a6ebb69e41c42369cb8fb5ef6c84fcd45b608b69" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;p&lt;/b&gt; pastes text from the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt;p&lt;/b&gt; pega el texto del &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef6843daab3893df594cc19bf74f627f595e905e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;pipeline&lt;/b&gt; a set of commands stringed together so that the output of one command is the input of the next command</source>
          <target state="translated">&lt;b&gt;canalizar&lt;/b&gt; un conjunto de comandos encadenados juntos para que la salida de un comando sea la entrada del siguiente comando</target>
        </trans-unit>
        <trans-unit id="9361323d44f35996b7cf911994082c3575f55649" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;redirection&lt;/b&gt; an operation that changes one of the input/output streams associated with a job</source>
          <target state="translated">&lt;b&gt;Redirigir&lt;/b&gt; una operaci&amp;oacute;n que cambia uno de los flujos de entrada / salida asociados con un trabajo.</target>
        </trans-unit>
        <trans-unit id="fc8c5cd774cd95d52cae0e99b7dc449a30256233" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;switch&lt;/b&gt; a special flag sent as an argument to a command that will alter the behavior of the command. A switch almost always begins with one or two hyphens.</source>
          <target state="translated">&lt;b&gt;cambiar&lt;/b&gt; una bandera especial enviada como argumento a un comando que alterar&amp;aacute; el comportamiento del comando. Un cambio casi siempre comienza con uno o dos guiones.</target>
        </trans-unit>
        <trans-unit id="ce0a396b1268aa8592cfbf7ad40768b4a2cf96ee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;u&lt;/b&gt; search history backwards.</source>
          <target state="translated">&lt;b&gt;u&lt;/b&gt; historial de b&amp;uacute;squeda al rev&amp;eacute;s.</target>
        </trans-unit>
        <trans-unit id="62b140a31b4dd842f587a339c973fb84cb89b9ee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;v&lt;/b&gt; enters &lt;a href=&quot;#vi-mode-visual&quot;&gt;visual mode&lt;/a&gt; at the current cursor position.</source>
          <target state="translated">&lt;b&gt;v&lt;/b&gt; entra en &lt;a href=&quot;#vi-mode-visual&quot;&gt;modo visual&lt;/a&gt; en la posici&amp;oacute;n actual del cursor.</target>
        </trans-unit>
        <trans-unit id="46db239874b5d3423a2cb772c587c90739433a27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;! EXPRESSION&lt;/code&gt; returns true if &lt;code&gt;EXPRESSION&lt;/code&gt; is false, and false if &lt;code&gt;EXPRESSION&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;! EXPRESSION&lt;/code&gt; devuelve verdadero si &lt;code&gt;EXPRESSION&lt;/code&gt; es falso y falso si &lt;code&gt;EXPRESSION&lt;/code&gt; es verdadero.</target>
        </trans-unit>
        <trans-unit id="fbbf1691c14aa157618e775b202f5ac70dcff316" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#-max&lt;/code&gt; means that flags matching the regex &quot;^--?\d+$&quot; are valid. When seen they are assigned to the variable &lt;code&gt;_flag_max&lt;/code&gt;. This allows any valid positive or negative integer to be specified by prefixing it with a single &quot;-&quot;. Many commands support this idiom. For example &lt;code&gt;head -3 /a/file&lt;/code&gt; to emit only the first three lines of /a/file.</source>
          <target state="translated">&lt;code&gt;#-max&lt;/code&gt; significa que los indicadores que coinciden con la expresi&amp;oacute;n regular &quot;^ -? \ d + $&quot; son v&amp;aacute;lidos. Cuando se ven, se asignan a la variable &lt;code&gt;_flag_max&lt;/code&gt; . Esto permite especificar cualquier entero positivo o negativo v&amp;aacute;lido prefij&amp;aacute;ndolo con un solo &quot;-&quot;. Muchos comandos apoyan este idioma. Por ejemplo, &lt;code&gt;head -3 /a/file&lt;/code&gt; para emitir solo las primeras tres l&amp;iacute;neas de / a / file.</target>
        </trans-unit>
        <trans-unit id="630de2c25df22d10465dd42e5dafb69497b49a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#-max&lt;/code&gt; means that flags matching the regex &quot;^--?d+$&quot; are valid. When seen they are assigned to the variable &lt;code&gt;_flag_max&lt;/code&gt;. This allows any valid positive or negative integer to be specified by prefixing it with a single &quot;-&quot;. Many commands support this idiom. For example &lt;code&gt;head -3 /a/file&lt;/code&gt; to emit only the first three lines of /a/file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65727ddc5daf4148cdff574012f60c965a382200" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#longonly&lt;/code&gt; causes the last integer option to be stored in &lt;code&gt;_flag_longonly&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79afc472df5358d5a9422b0bf60c7a7dccaa813d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#max&lt;/code&gt; (or &lt;code&gt;#-max&lt;/code&gt;) means that flags matching the regex &quot;^--?\d+$&quot; are valid. When seen they are assigned to the variable &lt;code&gt;_flag_max&lt;/code&gt;. This allows any valid positive or negative integer to be specified by prefixing it with a single &quot;-&quot;. Many commands support this idiom. For example &lt;code&gt;head -3 /a/file&lt;/code&gt; to emit only the first three lines of /a/file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f651a5b27ff5fec4acfe95742657c83e01ce238" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$!&lt;/code&gt;: &lt;code&gt;$last_pid&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ee03d28d2f17f673b4f801bff05bc8e660e8e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$#&lt;/code&gt;: No variable, instead use &lt;code&gt;count $argv&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c474c101e55b420e7a6c4828e087c50c33e2dbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$$&lt;/code&gt;: &lt;code&gt;$fish_pid&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997a4a95ff8377111a43774548e7284a1b7b4286" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$$foo[$i]&lt;/code&gt; is &quot;the value of the variable named by &lt;code&gt;$foo[$i]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777f089ce1c0bab1224e6a7764a9871695766369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$*&lt;/code&gt;, &lt;code&gt;$@&lt;/code&gt;, &lt;code&gt;$1&lt;/code&gt; and so on: &lt;code&gt;$argv&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557cc1a0537bb3944086d8498eb01ea5f19ace57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$-&lt;/code&gt;: Mostly &lt;code&gt;status is-interactive&lt;/code&gt; and &lt;code&gt;status is-login&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529b4fe439a285db69fbf8d6e34370f290a307d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$0&lt;/code&gt;: &lt;code&gt;status filename&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2c8e333f60437bb48c82b0bb49fe171d1d7a55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$?&lt;/code&gt;: &lt;code&gt;$status&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b85a7cc93d6e084f05ce49cb793f167aff8ad7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$PATH&lt;/code&gt; is an environment variable containing the directories in which &lt;code&gt;fish&lt;/code&gt; searches for commands. Unlike other shells, $PATH is a &lt;a href=&quot;#tut_lists&quot;&gt;list&lt;/a&gt;, not a colon-delimited string.</source>
          <target state="translated">&lt;code&gt;$PATH&lt;/code&gt; es una variable de entorno que contiene los directorios en los que &lt;code&gt;fish&lt;/code&gt; busca comandos. A diferencia de otros shells, $ PATH es una &lt;a href=&quot;#tut_lists&quot;&gt;lista&lt;/a&gt; , no una cadena delimitada por dos puntos.</target>
        </trans-unit>
        <trans-unit id="3fcfef5fee20a768ae8db6cd4a58e5a28272f6c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$PATH&lt;/code&gt; is an environment variable containing the directories that &lt;code&gt;fish&lt;/code&gt; searches for commands. Unlike other shells, $PATH is a &lt;a href=&quot;#tut-lists&quot;&gt;list&lt;/a&gt;, not a colon-delimited string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc61190fd24aef5264661411a5a92ae9567901d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$PATH&lt;/code&gt; is an environment variable containing the directories that fish searches for commands. Unlike other shells, $PATH is a &lt;a href=&quot;#tut-lists&quot;&gt;list&lt;/a&gt;, not a colon-delimited string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3658540efb2c1be8fa547b1e32c76c511cd354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_config_dir/conf.d&lt;/code&gt; (by default, &lt;code&gt;~/.config/fish/conf.d/&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;$__fish_config_dir/conf.d&lt;/code&gt; (por defecto, &lt;code&gt;~/.config/fish/conf.d/&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="30f387b90ef1d5299f9c402df2a8b34b5a13e123" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_cleanstate&lt;/code&gt; (✔)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a6a56f63f56e9d9ede6e545f28cd9f21036a28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_cleanstate&lt;/code&gt; (✔) - the character to be used when nothing else applies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd5e362ff0f5c8bc3385935a46df046220251b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_dirtystate&lt;/code&gt; (&lt;code&gt;*&lt;/code&gt;, ✚)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2df171e170a75223d9405c67ede9a651a7aa54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_dirtystate&lt;/code&gt; (&lt;code&gt;*&lt;/code&gt;, ✚) - the number of &quot;dirty&quot; changes, i.e. unstaged files with changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f047cc33da17a1af16d936074ee1b0c0e2a6ba6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_invalidstate&lt;/code&gt; (#, ✖)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd852e50f88979000d4a96c62b9932c0e61bfbeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_invalidstate&lt;/code&gt; (#, ✖) - the number of &quot;unmerged&quot; changes, e.g. additional changes to already added files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899794bf3ff07952661bf26aa2d7ac64caf441f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_stagedstate&lt;/code&gt; (+, ●)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1d85dc69d0cf3ec09a94b8b5112017027c268c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_stagedstate&lt;/code&gt; (+, ●) - the number of staged files without additional changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa20d16c0bd365522cb3d839e01092164163cf6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_stashstate&lt;/code&gt; (&lt;code&gt;$&lt;/code&gt;, ⚑)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2050abc1a36d3965404a00ae72f9e54edd049ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_stateseparator&lt;/code&gt; (' ', &lt;code&gt;|&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13d433738745a2a67739c37ba96cfdd9e2d6fb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_stateseparator&lt;/code&gt; (' ', &lt;code&gt;|&lt;/code&gt;) - the character to be used between the state characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f517c6a39dec19fddc6e731ed16be346998a3a8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_untrackedfiles&lt;/code&gt; (%, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f2f51283b51c0c466a9bc9585319e735497132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_untrackedfiles&lt;/code&gt; (%, &amp;hellip;) - the symbol for untracked files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae541ad86924b81ec8acebc162b0937a415c969f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_upstream_ahead&lt;/code&gt; (&amp;gt;, &amp;uarr;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bafe667ff8e3f511e158dc3696c2c2d336284106" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_upstream_ahead&lt;/code&gt; (&amp;gt;, &amp;uarr;) - the character for the commits this repository is ahead of upstream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2037b4e152026e158935f9b448b6f12414db3d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_upstream_behind&lt;/code&gt; (&amp;lt;, &amp;darr;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2580688a822d1293834820d2cad75a8413b52ae8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_upstream_behind&lt;/code&gt; (&amp;lt;, &amp;darr;) - the character for the commits this repository is behind upstream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390f55f0f71dcc5a5b7ef46a56cc46cc4e0f1bbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_upstream_diverged&lt;/code&gt; (&amp;lt;&amp;gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c67af84f52b13c6b309214793f83b5e383fc1f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_upstream_diverged&lt;/code&gt; (&amp;lt;&amp;gt;) - the symbol if this repository is both ahead and behind upstream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211cc1784b2303054c438a513dab76d3bd3f8f40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_upstream_equal&lt;/code&gt; (=)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001ed25db2ae1e24e506206df13d8c27f24cc7c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_upstream_equal&lt;/code&gt; (=) - the symbol if this repo is equal to upstream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5717f38a444076f55fe072027a7fdd434d543e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_char_upstream_prefix&lt;/code&gt; ('')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9af5bd7c42c3b4413fbf4fbf91bd2586e24bc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_color&lt;/code&gt; ('')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afb61455dbf826f64970ce6594494af2d4660f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_color&lt;/code&gt; (no default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df79ccb7e8a23031ce5f582225cc3349fccc1fa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_color_bare&lt;/code&gt; - the color to use for a bare repository - one without a working tree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4495b9d63889f67011d40e1f4e5fec7e50a1ad8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_color_branch&lt;/code&gt; (green)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e3c3101b691e39985020bd59dec462930799fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_color_branch&lt;/code&gt; (green) - the color of the branch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b0fade05c53fda0d8e5dd41ca65daed7b20ac1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_color_branch_detached&lt;/code&gt; (red)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7f23d45464a7cbc78ca281cc0ca350875134ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_color_branch_detached&lt;/code&gt; (red) the color of the branch if it's detached (e.g. a commit is checked out)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9ea3d323faed6938579c91a98a7cebb7086408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_color_dirtystate&lt;/code&gt; (red with showcolorhints, same as color_flags otherwise)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6457ea55f4165629ff5c4677f843f2906e2bf02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_color_flags&lt;/code&gt; (--bold blue)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde621e36d336fb0e64453f0aed88ac469da4c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_color_flags&lt;/code&gt; (--bold blue) - the default color for dirty/staged/stashed/untracked state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af12e844563ea2beacc8dfdb601ade6d28ec1359" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_color_merging&lt;/code&gt; - the color when a merge/rebase/revert/bisect or cherry-pick is in progress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0bc7e36eeeb2fd38f902eaf4eda3aa1990883f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_color_prefix&lt;/code&gt; - the color of the &lt;code&gt;(&lt;/code&gt; prefix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ea47dfdd36c9977a913beff662c7c4c8a6227a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_color_stagedstate&lt;/code&gt; (green with showcolorhints, color_flags otherwise)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db729645f73586406e3f8d4afbc5be1bc35cf5ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_color_stashstate&lt;/code&gt; (same as color_flags)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c663b1a77b02b6f234878ba364c4d8c50d0152e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_color_suffix&lt;/code&gt; - the color of the &lt;code&gt;)&lt;/code&gt; suffix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d6802ff141b576e11a369870d96c0135ad2cab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_color_untrackedfiles&lt;/code&gt; (same as color_flags)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac0900e04726721bf9273b0f9ed4627bff9c997" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_describe_style&lt;/code&gt; can be set to one of the following styles to describe the current HEAD:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5228f79ea6b847cad1ee66eb55e2216fa76cec29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_shorten_branch_len&lt;/code&gt; can be set to the number of characters that the branch name will be shortened to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cead0266ec0df8830c0ebdb6651cb4f153414a4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_show_informative_status&lt;/code&gt; or the git option &lt;code&gt;bash.showInformativeStatus&lt;/code&gt; can be set to enable the &quot;informative&quot; display, which will show a large amount of information - the number of untracked files, dirty files, unpushed/unpulled commits, and more. In large repositories, this can take a lot of time, so it you may wish to disable it in these repositories with &lt;code&gt;git config --local bash.showInformativeStatus false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d0dd2bf85335d6a2ed452424a86b8110990521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_show_informative_status&lt;/code&gt; or the git option &lt;code&gt;bash.showInformativeStatus&lt;/code&gt; can be set to enable the &quot;informative&quot; display, which will show a large amount of information - the number of untracked files, dirty files, unpushed/unpulled commits, and more. In large repositories, this can take a lot of time, so it you may wish to disable it in these repositories with &lt;code&gt;git config --local bash.showInformativeStatus false&lt;/code&gt;. It also changes the characters the prompt uses to less plain ones (&lt;code&gt;✚&lt;/code&gt; instead of &lt;code&gt;*&lt;/code&gt; for the dirty state for example) , and if you are only interested in that, set &lt;code&gt;$__fish_git_prompt_use_informative_chars&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5107a3fb12b8ce3250b65f417009661f5791b26b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_showcolorhints&lt;/code&gt; can be set to enable coloring for the branch name and status symbols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b474ce2b75478f722a32fc19f6c21b2b24d5d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_showdirtystate&lt;/code&gt; or the git option &lt;code&gt;bash.showDirtyState&lt;/code&gt; can be set to show if the repository is &quot;dirty&quot;, i.e. has uncommitted changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c5d8f7a8a9bd883730e3b314524610aae36c49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_showstashstate&lt;/code&gt; can be set to display the state of the stash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8773c13be2c0b87c5e9cb0e68c7af03eee61eb13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_showuntrackedfiles&lt;/code&gt; or the git option &lt;code&gt;bash.showUntrackedFiles&lt;/code&gt; can be set to show if the repository has untracked files (that aren't ignored).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760234b653ed92ee53cefcb6673f1e0bea9b113e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_git_prompt_showupstream&lt;/code&gt; can be set to a list of values to determine how changes between HEAD and upstream are shown:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641269c928d9df49d7eff0fa57e98d9d847f415c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_sysconf_dir/conf.d&lt;/code&gt; (by default, &lt;code&gt;/etc/fish/conf.d/&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62707b7c2c535405aadf898f636f5e27bc1699f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_sysconf_dir/conf.d&lt;/code&gt; (by default, &lt;code&gt;/etc/fish/conf.d&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;$__fish_sysconf_dir/conf.d&lt;/code&gt; (por defecto, &lt;code&gt;/etc/fish/conf.d&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="380304473b9f67d880fde3b7e5f30f66131cfebf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$fish_color_hg_clean&lt;/code&gt;, &lt;code&gt;$fish_color_hg_modified&lt;/code&gt; and &lt;code&gt;$fish_color_hg_dirty&lt;/code&gt; are colors used when the repository has the respective status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1570c05f5e07142278027db3bf3c3970e14419" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$fish_prompt_hg_status_added&lt;/code&gt;, default '✚'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a762778efb74ef647a6f291671a1a877469d5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$fish_prompt_hg_status_copied&lt;/code&gt;, default '&amp;rArr;'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3f6eff41b991536e40984053f502f4ddb0d9bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$fish_prompt_hg_status_deleted&lt;/code&gt;, default '✖'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55ff61f053284a3b188b9e33dd2e5082e6760c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$fish_prompt_hg_status_modified&lt;/code&gt;, default '*'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ade319ea01474826ca8fe77b66f9b28baae222" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$fish_prompt_hg_status_unmerged&lt;/code&gt;, default '!'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c15502f0c3e041a13b4c1495e0b57129ae0a91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$fish_prompt_hg_status_untracked&lt;/code&gt;, default '?'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0408a8b06543c60a80f613b7f4544d9129c595" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$flounder&lt;/code&gt; is the current token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5fc64164a639f303c697307b68832a05b78354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$n&lt;/code&gt; is a reference from the replacement expression to a group in the match expression.</source>
          <target state="translated">&lt;code&gt;$n&lt;/code&gt; es una referencia de la expresi&amp;oacute;n de reemplazo a un grupo en la expresi&amp;oacute;n de coincidencia.</target>
        </trans-unit>
        <trans-unit id="0b94095f7d2bcd4271aba839be28faccba894a86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%%&lt;/code&gt; signifies a literal &quot;%&quot;.</source>
          <target state="translated">&lt;code&gt;%%&lt;/code&gt; significa un &quot;%&quot; literal.</target>
        </trans-unit>
        <trans-unit id="23d11882c5e4c3a189432b8f1ff0a090b3459ac9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%&lt;/code&gt; for modulo.</source>
          <target state="translated">&lt;code&gt;%&lt;/code&gt; para m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="bfc27794c54a0849e8a0fe60d7767c6d3e8fc098" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%b&lt;/code&gt;: As a string, interpreting backslash escapes, except that octal escapes are of the form 0 or 0ooo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b531b94db8a1881f8d8258fb143c663bcef5c942" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%b&lt;/code&gt;: As a string, interpreting backslash escapes, except that octal escapes are of the form \0 or \0ooo.</source>
          <target state="translated">&lt;code&gt;%b&lt;/code&gt; : como una cadena, interpretar los escapes de barra invertida, excepto que los escapes octales tienen la forma \ 0 o \ 0ooo.</target>
        </trans-unit>
        <trans-unit id="3661e5f7331d26f7597a310b54c072c43e00c8dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%d&lt;/code&gt; or &lt;code&gt;%i&lt;/code&gt;: Argument will be used as decimal integer (signed or unsigned)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40db559addb2ba1478cff576f906449a7f7f850" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%d&lt;/code&gt;: Argument will be used as decimal integer (signed or unsigned)</source>
          <target state="translated">&lt;code&gt;%d&lt;/code&gt; : el argumento se utilizar&amp;aacute; como entero decimal (con o sin signo)</target>
        </trans-unit>
        <trans-unit id="2daacbfd54374f2e4dcb8cddd45378fa4f3afe2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%e&lt;/code&gt; or &lt;code&gt;%E&lt;/code&gt;: A floating-point number in scientific (XXXeYY) notation</source>
          <target state="translated">&lt;code&gt;%e&lt;/code&gt; o &lt;code&gt;%E&lt;/code&gt; : un n&amp;uacute;mero de punto flotante en notaci&amp;oacute;n cient&amp;iacute;fica (XXXeYY)</target>
        </trans-unit>
        <trans-unit id="1b4f7064a3656ce858a71cb74f5fa46889be08f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%f&lt;/code&gt;, &lt;code&gt;%g&lt;/code&gt; or &lt;code&gt;%G&lt;/code&gt;: A floating-point number</source>
          <target state="translated">&lt;code&gt;%f&lt;/code&gt; , &lt;code&gt;%g&lt;/code&gt; o &lt;code&gt;%G&lt;/code&gt; : n&amp;uacute;mero de coma flotante A</target>
        </trans-unit>
        <trans-unit id="5046f09f63ce93a196b7ee46ee8e0c233b224dd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%f&lt;/code&gt;, &lt;code&gt;%g&lt;/code&gt; or &lt;code&gt;%G&lt;/code&gt;: A floating-point number. &lt;code&gt;%f&lt;/code&gt; defaults to 6 places after the decimal point (which is locale-dependent - e.g. in de_DE it will be a &lt;code&gt;,&lt;/code&gt;). &lt;code&gt;%g&lt;/code&gt; and &lt;code&gt;%G&lt;/code&gt; will trim trailing zeroes and switch to scientific notation (like &lt;code&gt;%e&lt;/code&gt;) if the numbers get small or large enough.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e7402e8326a173814d30481505cfed92d50943" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%i&lt;/code&gt;: Argument will be used as a signed integer</source>
          <target state="translated">&lt;code&gt;%i&lt;/code&gt; : el argumento se utilizar&amp;aacute; como un entero con signo</target>
        </trans-unit>
        <trans-unit id="09e436d31575a14aba97f6e3421179780d36f990" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%o&lt;/code&gt;: An octal unsigned integer</source>
          <target state="translated">&lt;code&gt;%o&lt;/code&gt; : un entero octal sin signo</target>
        </trans-unit>
        <trans-unit id="39f0b49371337597e3d850d5224e4556e4b0aeaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%s&lt;/code&gt;: A string</source>
          <target state="translated">&lt;code&gt;%s&lt;/code&gt; : una cadena</target>
        </trans-unit>
        <trans-unit id="26d8892aeeda64089baa67f9a24e11be6621d973" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%u&lt;/code&gt;: An unsigned decimal integer</source>
          <target state="translated">&lt;code&gt;%u&lt;/code&gt; : un entero decimal sin signo</target>
        </trans-unit>
        <trans-unit id="dfeeed84f451ca949c144f90ab6727ff372d3fe2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%u&lt;/code&gt;: An unsigned decimal integer - this means negative numbers will wrap around</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365ba2c17f6e4cbbba7946664bd4d911c538c22a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%x&lt;/code&gt; or &lt;code&gt;%X&lt;/code&gt;: An unsigned hexadecimal integer</source>
          <target state="translated">&lt;code&gt;%x&lt;/code&gt; o &lt;code&gt;%X&lt;/code&gt; : un entero hexadecimal sin signo</target>
        </trans-unit>
        <trans-unit id="a090616b10f3bc6e2181777f5cd8121fdb866389" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt; grep --i&lt;/code&gt;gnore-case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee023234843cc6d0c14810f9797e91933e71a46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;( EXPRESSION )&lt;/code&gt; returns the value of &lt;code&gt;EXPRESSION&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;( EXPRESSION )&lt;/code&gt; devuelve el valor de &lt;code&gt;EXPRESSION&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f727cd1560afa11414f2a5a6164ae4676009db96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(...)&lt;/code&gt; is a capturing group</source>
          <target state="translated">&lt;code&gt;(...)&lt;/code&gt; es un grupo captador</target>
        </trans-unit>
        <trans-unit id="223792c605b71f3b13397604d45060f76789c2ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; for grouping.</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; y &lt;code&gt;)&lt;/code&gt; para agrupar.</target>
        </trans-unit>
        <trans-unit id="3388308416fdeddb9ce472fda5814343ee94bfa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; for grouping. (These need to be quoted or escaped because &lt;code&gt;()&lt;/code&gt; denotes a command substitution.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e70ae3d58194b627fe1a1e8e2ca9a0792daf7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?:...)&lt;/code&gt; is a non-capturing group</source>
          <target state="translated">&lt;code&gt;(?:...)&lt;/code&gt; es un grupo que no captura</target>
        </trans-unit>
        <trans-unit id="27cc7f7e4b8d53fd132e362fe337554e71640189" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt; matches any files and directories in the current directory and all of its subdirectories.</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; coincide con los archivos y directorios del directorio actual y todos sus subdirectorios.</target>
        </trans-unit>
        <trans-unit id="1a8f4d59035261cb2964356ee001d0324a81b31b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt; matches any number of characters (including zero), and also descends into subdirectories. If &lt;code&gt;**&lt;/code&gt; is a segment by itself, that segment may match zero times, for compatibility with other shells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1699f23e7af9e9207c7f4162362689d7a8ff2525" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt; matches any string of characters. This includes matching an empty string. The matched string may include the &lt;code&gt;/&lt;/code&gt; character; that is, it recurses into subdirectories. Note that augmenting this wildcard with other strings will not match files in the current working directory (&lt;code&gt;$PWD&lt;/code&gt;) if you separate the strings with a slash (&quot;/&quot;). This is unlike other shells such as zsh. For example, &lt;code&gt;**\/*.fish&lt;/code&gt; in zsh will match &lt;code&gt;.fish&lt;/code&gt; files in the PWD but in fish will only match such files in a subdirectory. In fish you should type &lt;code&gt;**.fish&lt;/code&gt; to match files in the PWD as well as subdirectories.</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; coincide con cualquier cadena de caracteres. Esto incluye hacer coincidir una cadena vac&amp;iacute;a. La cadena coincidente puede incluir el car&amp;aacute;cter &lt;code&gt;/&lt;/code&gt; ; es decir, recurre a subdirectorios. Tenga en cuenta que el aumento de este comod&amp;iacute;n con otras cadenas no coincidir&amp;aacute; con los archivos del directorio de trabajo actual ( &lt;code&gt;$PWD&lt;/code&gt; ) si separa las cadenas con una barra (&quot;/&quot;). Esto es diferente a otros shells como zsh. Por ejemplo, &lt;code&gt;**\/*.fish&lt;/code&gt; &lt;code&gt;.fish&lt;/code&gt; en zsh coincidir&amp;aacute; con los archivos .fish en el PWD, pero en fish solo coincidir&amp;aacute; con dichos archivos en un subdirectorio. En fish, debe escribir &lt;code&gt;**.fish&lt;/code&gt; para que coincida con los archivos del PWD y los subdirectorios.</target>
        </trans-unit>
        <trans-unit id="0906ba373108194515b71314d7314b0e1c0dbda4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; can match any string of characters not containing '/'. This includes matching an empty string.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; puede coincidir con cualquier cadena de caracteres que no contenga '/'. Esto incluye hacer coincidir una cadena vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="37c023d25e670b10a687c0f04d189f7dc1b04e52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; for multiplication, &lt;code&gt;/&lt;/code&gt; for division.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; para multiplicar, &lt;code&gt;/&lt;/code&gt; para dividir.</target>
        </trans-unit>
        <trans-unit id="57703b01f83b4da8bcac65530f8a8bdb8c1b8764" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; matches any number of characters (including zero) in a file name, not including &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d075c380ca41d37682204a294e6030dcce60b2a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; or &lt;code&gt;x&lt;/code&gt; for multiplication, &lt;code&gt;/&lt;/code&gt; for division. (Note that &lt;code&gt;*&lt;/code&gt; is the glob character and needs to be quoted or escaped, &lt;code&gt;x&lt;/code&gt; needs to be followed by whitespace or it looks like &lt;code&gt;0x&lt;/code&gt; hexadecimal notation.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fba7eefa3e36b3cbffeab875069115bc702387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; refers to 0 or more repetitions of the previous expression</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; se refiere a 0 o m&amp;aacute;s repeticiones de la expresi&amp;oacute;n anterior</target>
        </trans-unit>
        <trans-unit id="f385e65b9176aa8a6ca6cd9d5b2f1bdd9f27fe65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt; 1 or more</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; 1 o m&amp;aacute;s</target>
        </trans-unit>
        <trans-unit id="3fe13a37eae52bd7649108d0145b7e339ee6a6e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt; for addition and &lt;code&gt;-&lt;/code&gt; for subtraction.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; para sumar y &lt;code&gt;-&lt;/code&gt; para restar.</target>
        </trans-unit>
        <trans-unit id="22a8af9ea25122ce490cd879c7e6a0485f64e8b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&amp;lt;number&amp;gt;&lt;/code&gt;&lt;code&gt;-n &amp;lt;number&amp;gt;&lt;/code&gt; or &lt;code&gt;--max=&amp;lt;number&amp;gt;&lt;/code&gt; limits the matched history items to the first &quot;n&quot; matching entries. This is only valid for &lt;code&gt;history search&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-&amp;lt;number&amp;gt;&lt;/code&gt; &lt;code&gt;-n &amp;lt;number&amp;gt;&lt;/code&gt; o &lt;code&gt;--max=&amp;lt;number&amp;gt;&lt;/code&gt; limita los elementos del historial coincidentes a las primeras &quot;n&quot; entradas coincidentes. Esto solo es v&amp;aacute;lido para la &lt;code&gt;history search&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5f49f59433696832e49367b7ce69fae3480a8f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--ansi&lt;/code&gt; colorizes the output using ANSI escape sequences, appropriate for the current $TERM, using the colors defined in the environment (such as &lt;code&gt;$fish_color_command&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;--ansi&lt;/code&gt; colorea la salida usando secuencias de escape ANSI, apropiadas para el $ TERM actual, usando los colores definidos en el entorno (como &lt;code&gt;$fish_color_command&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3aa6b25c41452e29553bd2be8424a15696112b2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--dump-parse-tree&lt;/code&gt; dumps information about the parsed statements to stderr. This is likely to be of interest only to people working on the fish source code.</source>
          <target state="translated">&lt;code&gt;--dump-parse-tree&lt;/code&gt; vuelca informaci&amp;oacute;n sobre las declaraciones analizadas en stderr. Es probable que esto solo sea de inter&amp;eacute;s para las personas que trabajan en el c&amp;oacute;digo fuente del pescado.</target>
        </trans-unit>
        <trans-unit id="5fa51f89fbcce9db82ce244faef116eeea00adf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--html&lt;/code&gt; outputs HTML, which supports syntax highlighting if the appropriate CSS is defined. The CSS class names are the same as the variable names, such as &lt;code&gt;fish_color_command&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--html&lt;/code&gt; genera HTML, que admite el resaltado de sintaxis si se define el CSS adecuado. Los nombres de las clases CSS son los mismos que los nombres de las variables, como &lt;code&gt;fish_color_command&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47006ae21b129811c700a48a8dd1a7bfe52ba37e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--long-only&lt;/code&gt; means the option spec being defined will only allow the long flag name to be used. The short flag name must still be defined (i.e., &lt;code&gt;--short&lt;/code&gt; must be specified) but it cannot be used when parsing args using this option spec.</source>
          <target state="translated">&lt;code&gt;--long-only&lt;/code&gt; significa que la especificaci&amp;oacute;n de la opci&amp;oacute;n que se est&amp;aacute; definiendo solo permitir&amp;aacute; que se use el nombre de la bandera larga. El nombre corto de la bandera a&amp;uacute;n debe estar definido (es decir, se debe especificar &lt;code&gt;--short&lt;/code&gt; ) pero no se puede usar al analizar args usando esta especificaci&amp;oacute;n de opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8705328b4d90680bbe72237e569f10b4e4db8bbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--multiple-vals&lt;/code&gt; means the option being defined requires a value each time it is seen. Each instance is stored. This means the resulting flag variable created by &lt;code&gt;argparse&lt;/code&gt; will have one element for each instance of this option in the args.</source>
          <target state="translated">&lt;code&gt;--multiple-vals&lt;/code&gt; significa que la opci&amp;oacute;n que se est&amp;aacute; definiendo requiere un valor cada vez que se ve. Cada instancia se almacena. Esto significa que la variable de bandera resultante creada por &lt;code&gt;argparse&lt;/code&gt; tendr&amp;aacute; un elemento para cada instancia de esta opci&amp;oacute;n en los argumentos.</target>
        </trans-unit>
        <trans-unit id="d154d4cf4b5def8c60e969f3305ce170165f7c0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--path&lt;/code&gt; causes the specified variable to be treated as a path variable, meaning it will automatically be split on colons, and joined using colons when quoted (&lt;code&gt;echo &quot;$PATH&quot;&lt;/code&gt;) or exported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1405ed3539ade2f49f226625f02116c626d17f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--preset&lt;/code&gt; and &lt;code&gt;--user&lt;/code&gt; specify if bind should operate on user or preset bindings. User bindings take precedence over preset bindings when fish looks up mappings. By default, all &lt;code&gt;bind&lt;/code&gt; invocations work on the &quot;user&quot; level except for listing, which will show both levels. All invocations except for inserting new bindings can operate on both levels at the same time (if both &lt;code&gt;--preset&lt;/code&gt; and &lt;code&gt;--user&lt;/code&gt; are given). &lt;code&gt;--preset&lt;/code&gt; should only be used in full binding sets (like when working on &lt;code&gt;fish_vi_key_bindings&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7d2c2f45f8450597f301169bbd25ef23b8c87e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--preset&lt;/code&gt; and &lt;code&gt;--user&lt;/code&gt; specify if bind should operate on user or preset bindings. User bindings take precedence over preset bindings when fish looks up mappings. By default, all &lt;code&gt;bind&lt;/code&gt; invocations work on the &quot;user&quot; level except for listing, which will show both levels. All invocations except for inserting new bindings can operate on both levels at the same time. &lt;code&gt;--preset&lt;/code&gt; should only be used in full binding sets (like when working on &lt;code&gt;fish_vi_key_bindings&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;--preset&lt;/code&gt; y &lt;code&gt;--user&lt;/code&gt; especifican si el enlace debe operar en enlaces predeterminados o de usuario. Los enlaces de usuario tienen prioridad sobre los enlaces preestablecidos cuando Fish busca asignaciones. De forma predeterminada, todas las invocaciones de &lt;code&gt;bind&lt;/code&gt; funcionan en el nivel de &quot;usuario&quot; excepto en el listado, que mostrar&amp;aacute; ambos niveles. Todas las invocaciones, excepto la inserci&amp;oacute;n de nuevas vinculaciones, pueden operar en ambos niveles al mismo tiempo. &lt;code&gt;--preset&lt;/code&gt; solo debe usarse en conjuntos de enlaces completos (como cuando se trabaja en &lt;code&gt;fish_vi_key_bindings&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8563991f72990f8c19dcfa2a6ff8b18dc13e7eb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--print-debug-categories&lt;/code&gt; outputs the list of debug categories, and then exits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f650e1019d18061aeeeddb74559bc8c4494e98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--print-rusage-self&lt;/code&gt; when fish exits, output stats from getrusage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84de0f0193e2746ac539d434c9287bd7cebee4cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--profile-startup=PROFILE_FILE&lt;/code&gt; will write timing information for fish's startup to the specified file. This is useful to profile your configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ae0e78acf17f930184225a25b75dbcb6f4b9af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--style=regex&lt;/code&gt; escapes an input string for literal matching within a regex expression. The string is first converted to UTF-8 before being encoded.</source>
          <target state="translated">&lt;code&gt;--style=regex&lt;/code&gt; escapa de una cadena de entrada para la coincidencia literal dentro de una expresi&amp;oacute;n regex. La cadena se convierte primero a UTF-8 antes de codificarse.</target>
        </trans-unit>
        <trans-unit id="e65bb404cbd1624028b9f8ee5fbd0ec8cb5bfe09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--style=url&lt;/code&gt; ensures the string can be used as a URL by hex encoding any character which is not legal in a URL. The string is first converted to UTF-8 before being encoded.</source>
          <target state="translated">&lt;code&gt;--style=url&lt;/code&gt; garantiza que la cadena se pueda utilizar como URL mediante la codificaci&amp;oacute;n hexadecimal de cualquier car&amp;aacute;cter que no sea legal en una URL. La cadena se convierte primero a UTF-8 antes de codificarse.</target>
        </trans-unit>
        <trans-unit id="eb9da1d5ecc6d798eba6fc06df72ff51e5e165fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--style=var&lt;/code&gt; ensures the string can be used as a variable name by hex encoding any non-alphanumeric characters. The string is first converted to UTF-8 before being encoded.</source>
          <target state="translated">&lt;code&gt;--style=var&lt;/code&gt; garantiza que la cadena se pueda utilizar como nombre de variable mediante la codificaci&amp;oacute;n hexadecimal de cualquier car&amp;aacute;cter no alfanum&amp;eacute;rico. La cadena se convierte primero a UTF-8 antes de codificarse.</target>
        </trans-unit>
        <trans-unit id="7639fcee1d4ca2016589a4951e1704ba83de4a4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--unpath&lt;/code&gt; causes the specified variable to not be treated as a path variable. Variables with a name ending in &quot;PATH&quot; are automatically path variables, so this can be used to treat such a variable normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4731e2e7ec3185a32125e79c8ade417f865e1462" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-A&lt;/code&gt; and &lt;code&gt;--authoritative&lt;/code&gt; no longer do anything and are silently ignored.</source>
          <target state="translated">&lt;code&gt;-A&lt;/code&gt; y &lt;code&gt;--authoritative&lt;/code&gt; ya no hacen nada y se ignoran en silencio.</target>
        </trans-unit>
        <trans-unit id="3b10fb497c9d7c205f154e7f595d31208792f92f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-C STRING&lt;/code&gt; or &lt;code&gt;--do-complete=STRING&lt;/code&gt; makes complete try to find all possible completions for the specified string. If there is no STRING, the current commandline is used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787dc304805566c01a47bc50fdd52e787a6ee34d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-C&lt;/code&gt; or &lt;code&gt;--case-sensitive&lt;/code&gt; does a case-sensitive search. The default is case-insensitive. Note that prior to fish 2.4.0 the default was case-sensitive.</source>
          <target state="translated">&lt;code&gt;-C&lt;/code&gt; o &lt;code&gt;--case-sensitive&lt;/code&gt; hace una b&amp;uacute;squeda sensible a may&amp;uacute;sculas y min&amp;uacute;sculas. El valor predeterminado no distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas. Tenga en cuenta que antes de Fish 2.4.0, el valor predeterminado era sensible a may&amp;uacute;sculas y min&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="270762071d0d0cd9667e2814ce9516f907323783" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-C&lt;/code&gt; or &lt;code&gt;--cursor&lt;/code&gt; set or get the current cursor position, not the contents of the buffer. If no argument is given, the current cursor position is printed, otherwise the argument is interpreted as the new cursor position.</source>
          <target state="translated">&lt;code&gt;-C&lt;/code&gt; o &lt;code&gt;--cursor&lt;/code&gt; establece u obtiene la posici&amp;oacute;n actual del cursor, no el contenido del b&amp;uacute;fer. Si no se proporciona ning&amp;uacute;n argumento, se imprime la posici&amp;oacute;n actual del cursor; de lo contrario, el argumento se interpreta como la nueva posici&amp;oacute;n del cursor.</target>
        </trans-unit>
        <trans-unit id="f86c2dd851bdadf49731503f62a001a48c820f6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-C&lt;/code&gt; or &lt;code&gt;--do-complete&lt;/code&gt; with no argument makes complete try to find all possible completions for the current command line buffer. If the shell is not in interactive mode, an error is returned.</source>
          <target state="translated">&lt;code&gt;-C&lt;/code&gt; o &lt;code&gt;--do-complete&lt;/code&gt; sin argumento hace que complete el intento de encontrar todas las finalizaciones posibles para el b&amp;uacute;fer de l&amp;iacute;nea de comandos actual. Si el shell no est&amp;aacute; en modo interactivo, se devuelve un error.</target>
        </trans-unit>
        <trans-unit id="d1257a90ccc8826d044797e11ad1027b7c489a49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-C&lt;/code&gt; or &lt;code&gt;--init-command=COMMANDS&lt;/code&gt; evaluate the specified commands after reading the configuration, before running the command specified by &lt;code&gt;-c&lt;/code&gt; or reading interactive input</source>
          <target state="translated">&lt;code&gt;-C&lt;/code&gt; o &lt;code&gt;--init-command=COMMANDS&lt;/code&gt; eval&amp;uacute;an los comandos especificados despu&amp;eacute;s de leer la configuraci&amp;oacute;n, antes de ejecutar el comando especificado por &lt;code&gt;-c&lt;/code&gt; o leer la entrada interactiva</target>
        </trans-unit>
        <trans-unit id="cde005567258cf32e945f94b81b14a4110474a47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-CSTRING&lt;/code&gt; or &lt;code&gt;--do-complete=STRING&lt;/code&gt; makes complete try to find all possible completions for the specified string.</source>
          <target state="translated">&lt;code&gt;-CSTRING&lt;/code&gt; o &lt;code&gt;--do-complete=STRING&lt;/code&gt; hace que el intento completo de encontrar todas las finalizaciones posibles para la cadena especificada.</target>
        </trans-unit>
        <trans-unit id="61cffcf4ebe0947db0772ea1d7819eb74b2a633a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-D&lt;/code&gt; or &lt;code&gt;--debug-stack-frames=DEBUG_LEVEL&lt;/code&gt; specify how many stack frames to display when debug messages are written. The default is zero. A value of 3 or 4 is usually sufficient to gain insight into how a given debug call was reached but you can specify a value up to 128.</source>
          <target state="translated">&lt;code&gt;-D&lt;/code&gt; o &lt;code&gt;--debug-stack-frames=DEBUG_LEVEL&lt;/code&gt; especifica cu&amp;aacute;ntos marcos de pila mostrar cuando se escriben mensajes de depuraci&amp;oacute;n. El valor predeterminado es cero. Un valor de 3 o 4 suele ser suficiente para obtener informaci&amp;oacute;n sobre c&amp;oacute;mo se alcanz&amp;oacute; una determinada llamada de depuraci&amp;oacute;n, pero puede especificar un valor de hasta 128.</target>
        </trans-unit>
        <trans-unit id="9389ed37232452dbfda171f9a1224533354da4ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-D&lt;/code&gt; or &lt;code&gt;--details&lt;/code&gt; reports the path name where each function is defined or could be autoloaded, &lt;code&gt;stdin&lt;/code&gt; if the function was defined interactively or on the command line or by reading stdin, &lt;code&gt;-&lt;/code&gt; if the function was created via &lt;code&gt;source&lt;/code&gt;, and &lt;code&gt;n/a&lt;/code&gt; if the function isn't available. (Functions created via &lt;code&gt;alias&lt;/code&gt; will return &lt;code&gt;-&lt;/code&gt;, because &lt;code&gt;alias&lt;/code&gt; uses &lt;code&gt;source&lt;/code&gt; internally.) If the &lt;code&gt;--verbose&lt;/code&gt; option is also specified then five lines are written:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee62d7b734c381573db2bedd60d5ed9e9631c90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-D&lt;/code&gt; or &lt;code&gt;--details&lt;/code&gt; reports the path name where each function is defined or could be autoloaded, &lt;code&gt;stdin&lt;/code&gt; if the function was defined interactively or on the command line or by reading stdin, and &lt;code&gt;n/a&lt;/code&gt; if the function isn't available. If the &lt;code&gt;--verbose&lt;/code&gt; option is also specified then five lines are written:</source>
          <target state="translated">&lt;code&gt;-D&lt;/code&gt; o &lt;code&gt;--details&lt;/code&gt; informa el nombre de la ruta donde se define cada funci&amp;oacute;n o podr&amp;iacute;a cargarse autom&amp;aacute;ticamente, &lt;code&gt;stdin&lt;/code&gt; si la funci&amp;oacute;n se defini&amp;oacute; de forma interactiva o en la l&amp;iacute;nea de comando o leyendo stdin, y &lt;code&gt;n/a&lt;/code&gt; si la funci&amp;oacute;n no est&amp;aacute; disponible. Si tambi&amp;eacute;n se especifica la opci&amp;oacute;n &lt;code&gt;--verbose&lt;/code&gt; , se escriben cinco l&amp;iacute;neas:</target>
        </trans-unit>
        <trans-unit id="f56b2b82b3868df81ab2ebd27dc173995af06a0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-D&lt;/code&gt; or &lt;code&gt;--details&lt;/code&gt; reports the path name where the specified function is defined or could be autoloaded, &lt;code&gt;stdin&lt;/code&gt; if the function was defined interactively or on the command line or by reading stdin, &lt;code&gt;-&lt;/code&gt; if the function was created via &lt;a href=&quot;source#cmd-source&quot;&gt;source&lt;/a&gt;, and &lt;code&gt;n/a&lt;/code&gt; if the function isn't available. (Functions created via &lt;a href=&quot;alias#cmd-alias&quot;&gt;alias&lt;/a&gt; will return &lt;code&gt;-&lt;/code&gt;, because &lt;code&gt;alias&lt;/code&gt; uses &lt;code&gt;source&lt;/code&gt; internally.) If the &lt;code&gt;--verbose&lt;/code&gt; option is also specified then five lines are written:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a18e126cfc5900c415cf3e601fd41b0abb06edc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-E&lt;/code&gt;, Disable interpretation of backslash escapes (default)</source>
          <target state="translated">&lt;code&gt;-E&lt;/code&gt; , deshabilitar la interpretaci&amp;oacute;n de los escapes de barra invertida (predeterminado)</target>
        </trans-unit>
        <trans-unit id="0049b7945091e04bb1ed8217b2bea406ee7b56e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-F&lt;/code&gt; or &lt;code&gt;--fifo&lt;/code&gt; will cause psub to use a named pipe rather than a file. You should only use this if the command produces no more than 8 KiB of output. The limit on the amount of data a FIFO can buffer varies with the OS but is typically 8 KiB, 16 KiB or 64 KiB. If you use this option and the command on the left of the psub pipeline produces more output a deadlock is likely to occur.</source>
          <target state="translated">&lt;code&gt;-F&lt;/code&gt; o &lt;code&gt;--fifo&lt;/code&gt; har&amp;aacute; que psub use una tuber&amp;iacute;a con nombre en lugar de un archivo. Solo debe usar esto si el comando no produce m&amp;aacute;s de 8 KiB de salida. El l&amp;iacute;mite de la cantidad de datos que un FIFO puede almacenar en b&amp;uacute;fer var&amp;iacute;a seg&amp;uacute;n el sistema operativo, pero normalmente es de 8 KiB, 16 KiB o 64 KiB. Si usa esta opci&amp;oacute;n y el comando a la izquierda de la tuber&amp;iacute;a de psub produce m&amp;aacute;s resultados, es probable que se produzca un interbloqueo.</target>
        </trans-unit>
        <trans-unit id="2a31a770d4d6cc9045b95eca07aa15a33cc7099f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-F&lt;/code&gt; or &lt;code&gt;--force-files&lt;/code&gt; says that the options specified by this completion may be followed by a filename, even if another applicable &lt;code&gt;complete&lt;/code&gt; specified &lt;code&gt;--no-files&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1079ddb24a53d9033acb1573ec5c10d1b9a4e54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-F&lt;/code&gt; or &lt;code&gt;--force-files&lt;/code&gt; says that this completion may be followed by a filename, even if another applicable &lt;code&gt;complete&lt;/code&gt; specified &lt;code&gt;--no-files&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22e459d124b9dccab2e8b6cc17d059433cd1f60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-G FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; exists and has the same group ID as the current user.</source>
          <target state="translated">&lt;code&gt;-G FILE&lt;/code&gt; devuelve verdadero si &lt;code&gt;FILE&lt;/code&gt; existe y tiene el mismo ID de grupo que el usuario actual.</target>
        </trans-unit>
        <trans-unit id="f10d2bc52e978a82259de5c09bbcd8efce21aa60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-H&lt;/code&gt; or &lt;code&gt;--handlers&lt;/code&gt; will show all event handlers.</source>
          <target state="translated">&lt;code&gt;-H&lt;/code&gt; o &lt;code&gt;--handlers&lt;/code&gt; mostrar&amp;aacute;n todos los controladores de eventos.</target>
        </trans-unit>
        <trans-unit id="b34d9446b84b91e558ca658b2b00c2f2ec994692" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-H&lt;/code&gt; or &lt;code&gt;--hard&lt;/code&gt; sets hard resource limit</source>
          <target state="translated">&lt;code&gt;-H&lt;/code&gt; o &lt;code&gt;--hard&lt;/code&gt; establece el l&amp;iacute;mite de recursos duro</target>
        </trans-unit>
        <trans-unit id="bd83cc9da6bfba520bce5594349b46ce9f31b63c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-K&lt;/code&gt; or &lt;code&gt;--key-names&lt;/code&gt; Display a list of available key names. Specifying &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; includes keys that don't have a known mapping</source>
          <target state="translated">&lt;code&gt;-K&lt;/code&gt; o &lt;code&gt;--key-names&lt;/code&gt; Muestra una lista de nombres de teclas disponibles. Especificar &lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;--all&lt;/code&gt; incluye claves que no tienen una asignaci&amp;oacute;n conocida</target>
        </trans-unit>
        <trans-unit id="098d148471a1c1769d247e12fa439212046c965e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-L FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is a symbolic link.</source>
          <target state="translated">&lt;code&gt;-L FILE&lt;/code&gt; devuelve verdadero si &lt;code&gt;FILE&lt;/code&gt; es un enlace simb&amp;oacute;lico.</target>
        </trans-unit>
        <trans-unit id="bd306f8c2abbc594fb7b8bdccf47e9f880ee9842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-L&lt;/code&gt; or &lt;code&gt;--line&lt;/code&gt; print the line that the cursor is on, with the topmost line starting at 1</source>
          <target state="translated">&lt;code&gt;-L&lt;/code&gt; o &lt;code&gt;--line&lt;/code&gt; imprime la l&amp;iacute;nea en la que se encuentra el cursor, con la l&amp;iacute;nea superior comenzando en 1</target>
        </trans-unit>
        <trans-unit id="3c39668997ca2fa27178ce32e43413683994246b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-L&lt;/code&gt; or &lt;code&gt;--line&lt;/code&gt; reads each line into successive variables, and stops after each variable has been filled. This cannot be combined with the &lt;code&gt;--delimiter&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;-L&lt;/code&gt; o &lt;code&gt;--line&lt;/code&gt; lee cada l&amp;iacute;nea en variables sucesivas y se detiene despu&amp;eacute;s de completar cada variable. Esto no se puede combinar con la opci&amp;oacute;n &lt;code&gt;--delimiter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96f87b2f1c7e39d3a955d0bef202a39f610467fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-L&lt;/code&gt; or &lt;code&gt;--list-modes&lt;/code&gt; Display a list of defined bind modes</source>
          <target state="translated">&lt;code&gt;-L&lt;/code&gt; o &lt;code&gt;--list-modes&lt;/code&gt; Muestra una lista de modos de vinculaci&amp;oacute;n definidos</target>
        </trans-unit>
        <trans-unit id="7427b1e0a7486fa0dba97476cf5db77e138a22d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-L&lt;/code&gt; or &lt;code&gt;--logical&lt;/code&gt; Output the logical working directory, without resolving symlinks (default behavior).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d698f2b3f170b127c3d5577ab3768e6600aa3cb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-L&lt;/code&gt; or &lt;code&gt;--long&lt;/code&gt; do not abbreviate long values when printing set variables</source>
          <target state="translated">&lt;code&gt;-L&lt;/code&gt; o &lt;code&gt;--long&lt;/code&gt; no abrevian valores largos al imprimir variables de conjuntos</target>
        </trans-unit>
        <trans-unit id="d75de78498ae2e99ed01c42f9bb91a9f11bf5c00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-L&lt;/code&gt;, Output the logical working directory, without resolving symlinks (default behavior).</source>
          <target state="translated">&lt;code&gt;-L&lt;/code&gt; , Muestra el directorio de trabajo l&amp;oacute;gico, sin resolver enlaces simb&amp;oacute;licos (comportamiento predeterminado).</target>
        </trans-unit>
        <trans-unit id="efc7d62b516c706165d3a242dc49d2796023d167" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-M MODE&lt;/code&gt; or &lt;code&gt;--mode MODE&lt;/code&gt; Specify a bind mode that the bind is used in. Defaults to &quot;default&quot;</source>
          <target state="translated">&lt;code&gt;-M MODE&lt;/code&gt; o &lt;code&gt;--mode MODE&lt;/code&gt; Especifica un modo de vinculaci&amp;oacute;n en el que se utiliza la vinculaci&amp;oacute;n . Por defecto es &quot;predeterminado&quot;</target>
        </trans-unit>
        <trans-unit id="cd7e8e65c08a5c89bb70c1f2087723cf6afc2103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-N&lt;/code&gt; or &lt;code&gt;--min-args&lt;/code&gt; is followed by an integer that defines the minimum number of acceptable non-option arguments. The default is zero.</source>
          <target state="translated">&lt;code&gt;-N&lt;/code&gt; o &lt;code&gt;--min-args&lt;/code&gt; va seguido de un n&amp;uacute;mero entero que define el n&amp;uacute;mero m&amp;iacute;nimo de argumentos aceptables que no son opciones. El valor predeterminado es cero.</target>
        </trans-unit>
        <trans-unit id="6d3027729e7e5c176a4601fa0c113ba16b416311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-O FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; exists and is owned by the current user.</source>
          <target state="translated">&lt;code&gt;-O FILE&lt;/code&gt; devuelve verdadero si &lt;code&gt;FILE&lt;/code&gt; existe y es propiedad del usuario actual.</target>
        </trans-unit>
        <trans-unit id="e6c131c4adff0a9a048097e50f4a8177fbc64560" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-P PROMPT_STR&lt;/code&gt; or &lt;code&gt;--prompt-str=PROMPT_STR&lt;/code&gt; uses the string as the prompt for the interactive mode. It is equivalent to &lt;code&gt;echo PROMPT_STR&lt;/code&gt; and is provided solely to avoid the need to frame the prompt as a command. All special characters in the string are automatically escaped before being passed to the &lt;a href=&quot;echo#cmd-echo&quot;&gt;echo&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1729ae3f327e38755ba368d309aac815e0472c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-P PROMPT_STR&lt;/code&gt; or &lt;code&gt;--prompt-str=PROMPT_STR&lt;/code&gt; uses the string as the prompt for the interactive mode. It is equivalent to &lt;code&gt;echo PROMPT_STR&lt;/code&gt; and is provided solely to avoid the need to frame the prompt as a command. All special characters in the string are automatically escaped before being passed to the &lt;code&gt;echo&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;-P PROMPT_STR&lt;/code&gt; o &lt;code&gt;--prompt-str=PROMPT_STR&lt;/code&gt; usa la cadena como indicador para el modo interactivo. Es equivalente a &lt;code&gt;echo PROMPT_STR&lt;/code&gt; y se proporciona &amp;uacute;nicamente para evitar la necesidad de enmarcar el indicador como un comando. Todos los caracteres especiales de la cadena se escapan autom&amp;aacute;ticamente antes de pasar al comando &lt;code&gt;echo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="738e0a7af782a36f13cb6455d94528f8977f5a83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-P&lt;/code&gt; or &lt;code&gt;--force-path&lt;/code&gt; returns the name of the disk file that would be executed, or nothing if no file with the specified name could be found in the &lt;code&gt;$PATH&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-P&lt;/code&gt; o &lt;code&gt;--force-path&lt;/code&gt; devuelve el nombre del archivo de disco que se ejecutar&amp;aacute;, o nada si no se puede encontrar ning&amp;uacute;n archivo con el nombre especificado en &lt;code&gt;$PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d25a5b09b708cffecdadaadb7b7245f78493ccf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-P&lt;/code&gt; or &lt;code&gt;--force-path&lt;/code&gt; returns the path to the executable file &lt;code&gt;NAME&lt;/code&gt;, presuming &lt;code&gt;NAME&lt;/code&gt; is found in &lt;code&gt;$PATH&lt;/code&gt;, or nothing otherwise. &lt;code&gt;--force-path&lt;/code&gt; explicitly resolves only the path to executable files in &lt;code&gt;$PATH&lt;/code&gt;, regardless of whether &lt;code&gt;$NAME&lt;/code&gt; is shadowed by a function or builtin with the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046068a1ba0b36dd8be9539aaf081b105463917a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-P&lt;/code&gt; or &lt;code&gt;--paging-mode&lt;/code&gt; evaluates to true if the commandline is showing pager contents, such as tab completions</source>
          <target state="translated">&lt;code&gt;-P&lt;/code&gt; o &lt;code&gt;--paging-mode&lt;/code&gt; se eval&amp;uacute;a como verdadero si la l&amp;iacute;nea de comandos muestra el contenido del buscapersonas, como las terminaciones de pesta&amp;ntilde;as</target>
        </trans-unit>
        <trans-unit id="4120f789e2007f63312e9ab319f86bc6367b111e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-P&lt;/code&gt; or &lt;code&gt;--path&lt;/code&gt; means to use $PATH directly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f09e9f19061de9e88391fd15ccc838da5e4996" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-P&lt;/code&gt; or &lt;code&gt;--physical&lt;/code&gt; Output the physical working directory, with symlinks resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe9cc6725e9f946bd24e0b9644c8d272a137f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-P&lt;/code&gt; or &lt;code&gt;--private&lt;/code&gt; enables &lt;a href=&quot;../index#private-mode&quot;&gt;private mode&lt;/a&gt;, so fish will not access old or store new history.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621575d2a3ca8b4de3d57c00532b285d7bd15675" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-P&lt;/code&gt;, Output the physical working directory, with symlinks resolved.</source>
          <target state="translated">&lt;code&gt;-P&lt;/code&gt; , Salida del directorio de trabajo f&amp;iacute;sico, con enlaces simb&amp;oacute;licos resueltos.</target>
        </trans-unit>
        <trans-unit id="62972fed299b526bcf7d2e92299051a4b0235b25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-R RIGHT_PROMPT_CMD&lt;/code&gt; or &lt;code&gt;--right-prompt=RIGHT_PROMPT_CMD&lt;/code&gt; uses the output of the shell command &lt;code&gt;RIGHT_PROMPT_CMD&lt;/code&gt; as the right prompt for the interactive mode. There is no default right prompt command.</source>
          <target state="translated">&lt;code&gt;-R RIGHT_PROMPT_CMD&lt;/code&gt; o &lt;code&gt;--right-prompt=RIGHT_PROMPT_CMD&lt;/code&gt; usa la salida del comando de shell &lt;code&gt;RIGHT_PROMPT_CMD&lt;/code&gt; como el indicador correcto para el modo interactivo. No hay un comando de l&amp;iacute;nea derecho predeterminado.</target>
        </trans-unit>
        <trans-unit id="40c35b6f687023b042196e56e7608e5272ec7505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-R&lt;/code&gt; or &lt;code&gt;--reverse&lt;/code&gt; causes the history search results to be ordered oldest to newest. Which is the order used by most shells. The default is newest to oldest.</source>
          <target state="translated">&lt;code&gt;-R&lt;/code&gt; o &lt;code&gt;--reverse&lt;/code&gt; hace que los resultados de b&amp;uacute;squeda del historial se ordenen del m&amp;aacute;s antiguo al m&amp;aacute;s reciente. Cu&amp;aacute;l es el orden utilizado por la mayor&amp;iacute;a de los proyectiles. El valor predeterminado es de m&amp;aacute;s reciente a m&amp;aacute;s antiguo.</target>
        </trans-unit>
        <trans-unit id="d37514c4c067496d40dd57cdff93d3451d5e760f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is a socket.</source>
          <target state="translated">&lt;code&gt;-S FILE&lt;/code&gt; devuelve verdadero si &lt;code&gt;FILE&lt;/code&gt; es un socket.</target>
        </trans-unit>
        <trans-unit id="8f200830c06b1c75dbb1add71d47771eed328bd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;--no-scope-shadowing&lt;/code&gt; allows the function to access the variables of calling functions. Normally, any variables inside the function that have the same name as variables from the calling function are &quot;shadowed&quot;, and their contents are independent of the calling function. It's important to note that this does not capture referenced variables or the scope at the time of function declaration! At this time, fish does not have any concept of closures, and variable lifetimes are never extended. In other words, by using &lt;code&gt;--no-scope-shadowing&lt;/code&gt; the scope of the function each time it is run is shared with the scope it was &lt;em&gt;called&lt;/em&gt; from rather than the scope it was &lt;em&gt;defined&lt;/em&gt; in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c13b44b4c3641162682bb157594e21c8f10a97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;--no-scope-shadowing&lt;/code&gt; allows the function to access the variables of calling functions. Normally, any variables inside the function that have the same name as variables from the calling function are &quot;shadowed&quot;, and their contents is independent of the calling function.</source>
          <target state="translated">&lt;code&gt;-S&lt;/code&gt; o &lt;code&gt;--no-scope-shadowing&lt;/code&gt; permite que la funci&amp;oacute;n acceda a las variables de funciones de llamada. Normalmente, cualquier variable dentro de la funci&amp;oacute;n que tenga el mismo nombre que las variables de la funci&amp;oacute;n que llama se &quot;sombrea&quot; y su contenido es independiente de la funci&amp;oacute;n que llama.</target>
        </trans-unit>
        <trans-unit id="6eb1458115f9e041d34b6812a17d6be2af8209d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;--no-scope-shadowing&lt;/code&gt; allows the function to access the variables of calling functions. Normally, any variables inside the function that have the same name as variables from the calling function are &quot;shadowed&quot;, and their contents is independent of the calling function. It's important to note that this does not capture referenced variables or the scope at the time of function declaration! At this time, fish does not have any concept of closures, and variable lifetimes are never extended. In other words, by using &lt;code&gt;--no-scope-shadowing&lt;/code&gt; the scope of the function each time it is run is shared with the scope it was &lt;em&gt;called&lt;/em&gt; from rather than the scope it was &lt;em&gt;defined&lt;/em&gt; in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d994c777c7d80667025ff7fe476123a1d054f269" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;--search-mode&lt;/code&gt; evaluates to true if the commandline is performing a history search</source>
          <target state="translated">&lt;code&gt;-S&lt;/code&gt; o &lt;code&gt;--search-mode&lt;/code&gt; se eval&amp;uacute;a como verdadero si la l&amp;iacute;nea de comandos est&amp;aacute; realizando una b&amp;uacute;squeda de historial</target>
        </trans-unit>
        <trans-unit id="cbc77c574d2245f96d697f6c34134b051e6df9ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;--shell&lt;/code&gt; enables syntax highlighting, tab completions and command termination suitable for entering shellscript code in the interactive mode. NOTE: Prior to fish 3.0, the short opt for &lt;code&gt;--shell&lt;/code&gt; was &lt;code&gt;-s&lt;/code&gt;, but it has been changed for compatibility with bash's &lt;code&gt;-s&lt;/code&gt; short opt for &lt;code&gt;--silent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-S&lt;/code&gt; o &lt;code&gt;--shell&lt;/code&gt; habilita el resaltado de sintaxis, la terminaci&amp;oacute;n de pesta&amp;ntilde;as y la terminaci&amp;oacute;n de comandos adecuados para ingresar c&amp;oacute;digo shellscript en el modo interactivo. NOTA: Antes de &lt;code&gt;--shell&lt;/code&gt; 3.0, la opci&amp;oacute;n corta para --shell era &lt;code&gt;-s&lt;/code&gt; , pero se ha cambiado para que sea compatible con la opci&amp;oacute;n corta &lt;code&gt;-s&lt;/code&gt; de bash para &lt;code&gt;--silent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ce32289cc1524d32359ecc8b301bc884bdf46ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;--show&lt;/code&gt; Shows information about the given variables. If no variable names are given then all variables are shown in sorted order. It shows the scopes the given variables are set in, along with the values in each and whether or not it is exported. No other flags can be used with this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ecaa0333d6743501b87586a86646a79f56d492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;--show&lt;/code&gt; Shows information about the given variables. If no variable names are given then all variables are shown in sorted order. No other flags can be used with this option. The information shown includes whether or not it is set in each of the local, global, and universal scopes. If it is set in one of those scopes whether or not it is exported is reported. The individual elements are also shown along with the length of each element.</source>
          <target state="translated">&lt;code&gt;-S&lt;/code&gt; o &lt;code&gt;--show&lt;/code&gt; Muestra informaci&amp;oacute;n sobre las variables dadas. Si no se dan nombres de variables, todas las variables se muestran en orden. No se pueden usar otras banderas con esta opci&amp;oacute;n. La informaci&amp;oacute;n que se muestra incluye si est&amp;aacute; configurada o no en cada uno de los &amp;aacute;mbitos local, global y universal. Si se establece en uno de esos &amp;aacute;mbitos, se informa si se exporta o no. Los elementos individuales tambi&amp;eacute;n se muestran junto con la longitud de cada elemento.</target>
        </trans-unit>
        <trans-unit id="43e04dd28b20a475e06fa5f5aa1a6cfa9756a1d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;--soft&lt;/code&gt; sets soft resource limit</source>
          <target state="translated">&lt;code&gt;-S&lt;/code&gt; o &lt;code&gt;--soft&lt;/code&gt; establece el l&amp;iacute;mite de recursos blandos</target>
        </trans-unit>
        <trans-unit id="152b8404acd15f99fb1ab15bf6d2d12ce31f27ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;--symbolic&lt;/code&gt; prints the umask in symbolic form instead of octal form.</source>
          <target state="translated">&lt;code&gt;-S&lt;/code&gt; o &lt;code&gt;--symbolic&lt;/code&gt; imprime la umask en forma simb&amp;oacute;lica en lugar de en forma octal.</target>
        </trans-unit>
        <trans-unit id="6645c775d6b67dfc1183ee3b6634f8bc6959ac3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-U&lt;/code&gt; or &lt;code&gt;--universal&lt;/code&gt; causes the specified shell variable to be given a universal scope. If this option is supplied, the variable will be shared between all the current user's fish instances on the current computer, and will be preserved across restarts of the shell.</source>
          <target state="translated">&lt;code&gt;-U&lt;/code&gt; o &lt;code&gt;--universal&lt;/code&gt; hace que la variable de shell especificada tenga un alcance universal. Si se proporciona esta opci&amp;oacute;n, la variable se compartir&amp;aacute; entre todas las instancias de peces del usuario actual en la computadora actual y se conservar&amp;aacute; al reiniciar el shell.</target>
        </trans-unit>
        <trans-unit id="a12d53a9b4f7e368c1ba1ba89aa4f450790a59ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-U&lt;/code&gt; or &lt;code&gt;--universal&lt;/code&gt; causes the specified shell variable to be made universal.</source>
          <target state="translated">&lt;code&gt;-U&lt;/code&gt; o &lt;code&gt;--universal&lt;/code&gt; hace que la variable de shell especificada sea universal.</target>
        </trans-unit>
        <trans-unit id="66da8375ef08daaa894607bf05dc9c123409b211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-U&lt;/code&gt; or &lt;code&gt;--universal&lt;/code&gt; means to use a universal $fish_user_paths - this is the default if it doesn't already exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84454aad05cd42aa19159161b2d6f7c6a3f2b64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-U&lt;/code&gt; or &lt;code&gt;--universal&lt;/code&gt; to use a universal variable (default).</source>
          <target state="translated">&lt;code&gt;-U&lt;/code&gt; o &lt;code&gt;--universal&lt;/code&gt; para usar una variable universal (predeterminado).</target>
        </trans-unit>
        <trans-unit id="c312a6a782030e8af6e0a9b528907ed64feb993d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-V&lt;/code&gt; or &lt;code&gt;--inherit-variable NAME&lt;/code&gt; snapshots the value of the variable &lt;code&gt;NAME&lt;/code&gt; and defines a local variable with that same name and value when the function is defined. This is similar to a closure in other languages like Python but a bit different. Note the word &quot;snapshot&quot; in the first sentence. If you change the value of the variable after defining the function, even if you do so in the same scope (typically another function) the new value will not be used by the function you just created using this option. See the &lt;code&gt;function notify&lt;/code&gt; example below for how this might be used.</source>
          <target state="translated">&lt;code&gt;-V&lt;/code&gt; o &lt;code&gt;--inherit-variable NAME&lt;/code&gt; captura el valor de la variable &lt;code&gt;NAME&lt;/code&gt; y define una variable local con el mismo nombre y valor cuando se define la funci&amp;oacute;n. Esto es similar a un cierre en otros lenguajes como Python, pero un poco diferente. Tenga en cuenta la palabra &quot;instant&amp;aacute;nea&quot; en la primera oraci&amp;oacute;n. Si cambia el valor de la variable despu&amp;eacute;s de definir la funci&amp;oacute;n, incluso si lo hace en el mismo &amp;aacute;mbito (normalmente otra funci&amp;oacute;n), el nuevo valor no ser&amp;aacute; utilizado por la funci&amp;oacute;n que acaba de crear con esta opci&amp;oacute;n. Vea el ejemplo de &lt;code&gt;function notify&lt;/code&gt; continuaci&amp;oacute;n para saber c&amp;oacute;mo se puede usar.</target>
        </trans-unit>
        <trans-unit id="7f35a558e494de2f50976ce95a9b9e0d6cc6f975" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-X&lt;/code&gt; or &lt;code&gt;--max-args&lt;/code&gt; is followed by an integer that defines the maximum number of acceptable non-option arguments. The default is infinity.</source>
          <target state="translated">&lt;code&gt;-X&lt;/code&gt; o &lt;code&gt;--max-args&lt;/code&gt; va seguido de un n&amp;uacute;mero entero que define el n&amp;uacute;mero m&amp;aacute;ximo de argumentos aceptables que no son opciones. El valor predeterminado es infinito.</target>
        </trans-unit>
        <trans-unit id="0897689b3cd7e489b8a585ee0cb9e0f0171e9553" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a NAMES&lt;/code&gt; or &lt;code&gt;--argument-names NAMES&lt;/code&gt; assigns the value of successive command-line arguments to the names given in NAMES.</source>
          <target state="translated">&lt;code&gt;-a NAMES&lt;/code&gt; o &lt;code&gt;--argument-names NAMES&lt;/code&gt; asigna el valor de los argumentos sucesivos de la l&amp;iacute;nea de comandos a los nombres dados en NAMES.</target>
        </trans-unit>
        <trans-unit id="0f91ad3c2052a9626ad22c1e8c7da7db5ccc1810" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a OPTION_ARGUMENTS&lt;/code&gt; or &lt;code&gt;--arguments=OPTION_ARGUMENTS&lt;/code&gt; adds the specified option arguments to the completions list.</source>
          <target state="translated">&lt;code&gt;-a OPTION_ARGUMENTS&lt;/code&gt; o &lt;code&gt;--arguments=OPTION_ARGUMENTS&lt;/code&gt; agrega los argumentos de la opci&amp;oacute;n especificada a la lista de finalizaciones.</target>
        </trans-unit>
        <trans-unit id="7c454ea22ad445a37f8babd5a500b91bc82a8e71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a WORD EXPANSION&lt;/code&gt; or &lt;code&gt;--add WORD EXPANSION&lt;/code&gt; Adds a new abbreviation, causing WORD to be expanded to EXPANSION.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7026f6ee075b08aeaaf42719823d4538ee44fab8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a WORD EXPANSION&lt;/code&gt; or &lt;code&gt;--add WORD EXPANSION&lt;/code&gt; Adds a new abbreviation, causing WORD to be expanded to PHRASE.</source>
          <target state="translated">&lt;code&gt;-a WORD EXPANSION&lt;/code&gt; o &lt;code&gt;--add WORD EXPANSION&lt;/code&gt; Agrega una nueva abreviatura, lo que hace que WORD se expanda a PHRASE.</target>
        </trans-unit>
        <trans-unit id="d661d104bf269b01aed2781eaf0ba96a47dc7a1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; See &lt;code&gt;--erase&lt;/code&gt; and &lt;code&gt;--key-names&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;--all&lt;/code&gt; Ver &lt;code&gt;--erase&lt;/code&gt; y &lt;code&gt;--key-names&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d37fa26c85d777da0a493e7f79027c7f88b1def" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; lists all functions, even those whose name starts with an underscore.</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;--all&lt;/code&gt; enumera todas las funciones, incluso aquellas cuyo nombre comienza con un gui&amp;oacute;n bajo.</target>
        </trans-unit>
        <trans-unit id="7582e23eb01db9a2fa73e9616c035b58a5d8b4cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; prints all current limits</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;--all&lt;/code&gt; imprime todos los l&amp;iacute;mites actuales</target>
        </trans-unit>
        <trans-unit id="19d761d026270167f8554ba561b27685573aee1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; prints all of possible definitions of the specified names.</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;--all&lt;/code&gt; imprime todas las posibles definiciones de los nombres especificados.</target>
        </trans-unit>
        <trans-unit id="ed6ef27bc5b4af790ca2cf85941acbbd5ae8e322" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; returns all the external COMMANDNAMEs that are found in &lt;code&gt;$PATH&lt;/code&gt; in the order they are found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba5998e7c55e2158c8f4014bf1489b5561ce7b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; returns all the external commands that are found in &lt;code&gt;$PATH&lt;/code&gt; in the order they are found.</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;--all&lt;/code&gt; devuelve todos los comandos externos que se encuentran en &lt;code&gt;$PATH&lt;/code&gt; en el orden en que se encuentran.</target>
        </trans-unit>
        <trans-unit id="de4feb030d7215d30ee7ba688fc9f382a9da5f91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--append&lt;/code&gt; causes the components to be added to the &lt;em&gt;end&lt;/em&gt; of the variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b8cb483b6883e7025429aeaa423779bf4dd55b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--append&lt;/code&gt; causes the values to be appended to the current set of values for the variable. This can be used with &lt;code&gt;--prepend&lt;/code&gt; to both append and prepend at the same time. This cannot be used when assigning to a variable slice.</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;--append&lt;/code&gt; hace que los valores se agreguen al conjunto actual de valores de la variable. Esto se puede usar con &lt;code&gt;--prepend&lt;/code&gt; para agregar y anteponer al mismo tiempo. No se puede utilizar cuando se asigna a un sector variable.</target>
        </trans-unit>
        <trans-unit id="572f3cbd49012afc866aec9caaa367d7654603a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--append&lt;/code&gt; do not remove the current commandline, append the specified string at the end of it</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;--append&lt;/code&gt; no eliminan la l&amp;iacute;nea de comando actual, agrega la cadena especificada al final de la misma</target>
        </trans-unit>
        <trans-unit id="b1e58544403f7edb99ba3cee7af02ca8ea560fba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--array&lt;/code&gt; stores the result as an array in a single variable.</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;--array&lt;/code&gt; almacena el resultado como una matriz en una sola variable.</target>
        </trans-unit>
        <trans-unit id="26edf119aa876f8bc8ee09088fa99a5aadb025a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--list&lt;/code&gt; stores the result as a list in a single variable. This option is also available as &lt;code&gt;--array&lt;/code&gt; for backwards compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd39f4a7c6bb6363b0a8fa9da39dd341168ee24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-b BASE&lt;/code&gt; or &lt;code&gt;--base BASE&lt;/code&gt; sets the numeric base used for output (&lt;code&gt;math&lt;/code&gt; always understands hexadecimal numbers as input). It currently understands &quot;hex&quot; or &quot;16&quot; for hexadecimal and &quot;octal&quot; or &quot;8&quot; for octal and implies a scale of 0 (other scales cause an error), so it will truncate the result down to an integer. This might change in the future. Hex numbers will be printed with a &lt;code&gt;0x&lt;/code&gt; prefix. Octal numbers will have a prefix of &lt;code&gt;0&lt;/code&gt; and aren't understood by &lt;code&gt;math&lt;/code&gt; as input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a836ca83930090e0c202803c5eecfd476f6984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-b FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is a block device.</source>
          <target state="translated">&lt;code&gt;-b FILE&lt;/code&gt; devuelve verdadero si &lt;code&gt;FILE&lt;/code&gt; es un dispositivo de bloque.</target>
        </trans-unit>
        <trans-unit id="e74ab590ee2552f3c5e3c68fb4bb7d97c7354410" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-b&lt;/code&gt; or &lt;code&gt;--current-buffer&lt;/code&gt; select the entire buffer, including any displayed autosuggestion (default)</source>
          <target state="translated">&lt;code&gt;-b&lt;/code&gt; o &lt;code&gt;--current-buffer&lt;/code&gt; selecciona todo el b&amp;uacute;fer, incluida cualquier autosugesti&amp;oacute;n mostrada (predeterminado)</target>
        </trans-unit>
        <trans-unit id="bb1f1fc59c64ad30c65ef663dd202769f8fbb9f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-b&lt;/code&gt;, &lt;code&gt;--background&lt;/code&gt;&lt;em&gt;COLOR&lt;/em&gt; sets the background color.</source>
          <target state="translated">&lt;code&gt;-b&lt;/code&gt; , &lt;code&gt;--background&lt;/code&gt; &lt;em&gt;COLOR&lt;/em&gt; establece el color de fondo.</target>
        </trans-unit>
        <trans-unit id="064f89156e05a5660e3a58034122b22aefcc0cd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c CMD&lt;/code&gt; or &lt;code&gt;--command=CMD&lt;/code&gt; sets the initial string in the interactive mode command buffer to &lt;code&gt;CMD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-c CMD&lt;/code&gt; o &lt;code&gt;--command=CMD&lt;/code&gt; establece la cadena inicial en el b&amp;uacute;fer de comando del modo interactivo en &lt;code&gt;CMD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fc0989fd6adb9b8a12abddd0a0ddbbb66ae7262" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c COMMAND&lt;/code&gt; or &lt;code&gt;--command COMMAND&lt;/code&gt; specifies that &lt;code&gt;COMMAND&lt;/code&gt; is the name of the command.</source>
          <target state="translated">&lt;code&gt;-c COMMAND&lt;/code&gt; o &lt;code&gt;--command COMMAND&lt;/code&gt; especifica que &lt;code&gt;COMMAND&lt;/code&gt; es el nombre del comando.</target>
        </trans-unit>
        <trans-unit id="827453c13edcacd9cdecc26c7a27378d47ea3f73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c COMMAND&lt;/code&gt; or &lt;code&gt;--command COMMAND&lt;/code&gt; specifies that &lt;code&gt;COMMAND&lt;/code&gt; is the name of the command. If there is no &lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;-p&lt;/code&gt;, one non-option argument will be used as the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1374d47cfbb1a22005c235d3852cf88b62aac253" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is a character device.</source>
          <target state="translated">&lt;code&gt;-c FILE&lt;/code&gt; devuelve verdadero si &lt;code&gt;FILE&lt;/code&gt; es un dispositivo de caracteres.</target>
        </trans-unit>
        <trans-unit id="8d862e6419e49b1af4b5efc41365bcc2829f3c1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c OLDNAME NEWNAME&lt;/code&gt; or &lt;code&gt;--copy OLDNAME NEWNAME&lt;/code&gt; creates a new function named NEWNAME, using the definition of the OLDNAME function.</source>
          <target state="translated">&lt;code&gt;-c OLDNAME NEWNAME&lt;/code&gt; o &lt;code&gt;--copy OLDNAME NEWNAME&lt;/code&gt; crea una nueva funci&amp;oacute;n llamada NEWNAME, usando la definici&amp;oacute;n de la funci&amp;oacute;n OLDNAME.</target>
        </trans-unit>
        <trans-unit id="eeb664aa645784463e22d3a8d448142941c2856c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--check&lt;/code&gt; do not indent, only return 0 if the code is already indented as fish_indent would, the number of failed files otherwise. Also print the failed filenames if not reading from stdin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855cb9a8ba097960171107e9ee996eb0413b1233" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--command&lt;/code&gt; prints the command name for each process in jobs.</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; o &lt;code&gt;--command&lt;/code&gt; imprime el nombre del comando para cada proceso en trabajos.</target>
        </trans-unit>
        <trans-unit id="7a730dfa25d5a8cfb51b0535abcaaae8e3060581" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--command=COMMANDS&lt;/code&gt; evaluate the specified commands instead of reading from the commandline</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; o &lt;code&gt;--command=COMMANDS&lt;/code&gt; eval&amp;uacute;an los comandos especificados en lugar de leerlos desde la l&amp;iacute;nea de comandos</target>
        </trans-unit>
        <trans-unit id="1ed3264c3d79309f01d32da7e170ae0e0f4e43ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--command=COMMANDS&lt;/code&gt; evaluate the specified commands instead of reading from the commandline, passing any additional positional arguments via &lt;a href=&quot;../index#variables-argv&quot;&gt;$argv&lt;/a&gt;. Note that, unlike other shells, the first argument is &lt;em&gt;not&lt;/em&gt; the name of the program (&lt;code&gt;$0&lt;/code&gt;), but simply the first normal argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4124c3a466eb8b5cf7192ef1a4a1bc5ec77554" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--contains&lt;/code&gt; searches or deletes items in the history that contain the specified text string. This is the default for the &lt;code&gt;--search&lt;/code&gt; flag. This is not currently supported by the &lt;code&gt;delete&lt;/code&gt; subcommand.</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; o &lt;code&gt;--contains&lt;/code&gt; b&amp;uacute;squedas o elimina elementos del historial que contienen la cadena de texto especificada. Este es el valor predeterminado para el indicador &lt;code&gt;--search&lt;/code&gt; . Actualmente, el subcomando &lt;code&gt;delete&lt;/code&gt; no lo admite .</target>
        </trans-unit>
        <trans-unit id="d2a1c5b0e4adc3b35bf54fa3480ff8090cfdf273" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--continuous&lt;/code&gt; begins a session where multiple key sequences can be inspected. By default the program exits after capturing a single key sequence.</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; o &lt;code&gt;--continuous&lt;/code&gt; inicia una sesi&amp;oacute;n en la que m&amp;uacute;ltiples secuencias de teclas pueden ser inspeccionados. De forma predeterminada, el programa sale despu&amp;eacute;s de capturar una sola secuencia de teclas.</target>
        </trans-unit>
        <trans-unit id="c85b31c180e247ea738833158ef9cdbb7e47818d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--core-size&lt;/code&gt;: the maximum size of core files created. By setting this limit to zero, core dumps can be disabled.</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; o &lt;code&gt;--core-size&lt;/code&gt; : el tama&amp;ntilde;o m&amp;aacute;ximo de los archivos principales creados. Al establecer este l&amp;iacute;mite en cero, los volcados de n&amp;uacute;cleo se pueden desactivar.</target>
        </trans-unit>
        <trans-unit id="1f444a07e7bb5615847301bf7f4484e1daf7b58c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--cut-at-cursor&lt;/code&gt; only print selection up until the current cursor position</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; o &lt;code&gt;--cut-at-cursor&lt;/code&gt; solo imprime la selecci&amp;oacute;n hasta la posici&amp;oacute;n actual del cursor</target>
        </trans-unit>
        <trans-unit id="e9666a191308166e866cfbe3e2025f34f4fe6b06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt;, &lt;code&gt;--print-colors&lt;/code&gt; prints a list of the 16 named colors.</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; , &lt;code&gt;--print-colors&lt;/code&gt; imprime una lista de los 16 colores nombrados.</target>
        </trans-unit>
        <trans-unit id="ac2258617801e0444f02d4290cb32cd303852a30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d DELIMITER&lt;/code&gt; or &lt;code&gt;--delimiter=DELIMITER&lt;/code&gt; splits on DELIMITER. DELIMITER will be used as an entire string to split on, not a set of characters.</source>
          <target state="translated">&lt;code&gt;-d DELIMITER&lt;/code&gt; o &lt;code&gt;--delimiter=DELIMITER&lt;/code&gt; divide en DELIMITER. DELIMITER se utilizar&amp;aacute; como una cadena completa para dividir, no como un conjunto de caracteres.</target>
        </trans-unit>
        <trans-unit id="972c06734b8f11bf3011cff078df52e3f408d584" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d DESCRIPTION&lt;/code&gt; or &lt;code&gt;--description=DESCRIPTION&lt;/code&gt; changes the description of this function.</source>
          <target state="translated">&lt;code&gt;-d DESCRIPTION&lt;/code&gt; o &lt;code&gt;--description=DESCRIPTION&lt;/code&gt; cambia la descripci&amp;oacute;n de esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fc5299d96e201eac11427bdd63d8866f5a344d2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d DESCRIPTION&lt;/code&gt; or &lt;code&gt;--description=DESCRIPTION&lt;/code&gt; is a description of what the function does, suitable as a completion description.</source>
          <target state="translated">&lt;code&gt;-d DESCRIPTION&lt;/code&gt; o &lt;code&gt;--description=DESCRIPTION&lt;/code&gt; es una descripci&amp;oacute;n de lo que hace la funci&amp;oacute;n, adecuada como descripci&amp;oacute;n completa.</target>
        </trans-unit>
        <trans-unit id="bfc7992cc13e17bd78dc8f6fffca46d803689ce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is a directory.</source>
          <target state="translated">&lt;code&gt;-d FILE&lt;/code&gt; devuelve verdadero si &lt;code&gt;FILE&lt;/code&gt; es un directorio.</target>
        </trans-unit>
        <trans-unit id="f3f0315586c1ab49177c1757be17ec23468ccbed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;--data-size&lt;/code&gt;: the maximum size of a process' data segment.</source>
          <target state="translated">&lt;code&gt;-d&lt;/code&gt; o &lt;code&gt;--data-size&lt;/code&gt; : el tama&amp;ntilde;o m&amp;aacute;ximo del segmento de datos de un proceso.</target>
        </trans-unit>
        <trans-unit id="3020d1f157c77b3b056119c5869f2ea15e2724f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;--debug-level=DEBUG_LEVEL&lt;/code&gt; enables debug output and specifies a verbosity level (like &lt;code&gt;fish -d&lt;/code&gt;). Defaults to 0.</source>
          <target state="translated">&lt;code&gt;-d&lt;/code&gt; o &lt;code&gt;--debug-level=DEBUG_LEVEL&lt;/code&gt; permite la salida de depuraci&amp;oacute;n y especifica un nivel de verbosidad (como &lt;code&gt;fish -d&lt;/code&gt; ). El valor predeterminado es 0.</target>
        </trans-unit>
        <trans-unit id="26507b35bf0a141f312b85b4b17fdce00980d9af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;--debug-level=DEBUG_LEVEL&lt;/code&gt; specify the verbosity level of fish. A higher number means higher verbosity. The default level is 1.</source>
          <target state="translated">&lt;code&gt;-d&lt;/code&gt; o &lt;code&gt;--debug-level=DEBUG_LEVEL&lt;/code&gt; especificar el nivel de detalle de los peces. Un n&amp;uacute;mero m&amp;aacute;s alto significa mayor verbosidad. El nivel predeterminado es 1.</target>
        </trans-unit>
        <trans-unit id="241f793a36a90748ca9329ab00d61c7d33938ff6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;--debug=CATEGORY_GLOB&lt;/code&gt; enables debug output and specifies a glob for matching debug categories (like &lt;code&gt;fish -d&lt;/code&gt;). Defaults to empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e6ddb0bbe3ceaf579d1d1f023d3ba8a456ee78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;--debug=DEBUG_CATEGORIES&lt;/code&gt; enable debug output and specify a pattern for matching debug categories. See &lt;a href=&quot;#debugging-fish&quot;&gt;Debugging&lt;/a&gt; below for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1211b509c05448860dd3b29f2356f8c883271811" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;--debug=DEBUG_CATEGORIES&lt;/code&gt; enable debug output and specify a pattern for matching debug categories. See &lt;a href=&quot;fish#debugging-fish&quot;&gt;Debugging&lt;/a&gt; in &lt;a href=&quot;fish#cmd-fish&quot;&gt;fish(1)&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f4336b85ac4a55b7590b530ecf6090d91ebe0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d&lt;/code&gt;, &lt;code&gt;--dim&lt;/code&gt; sets dim mode.</source>
          <target state="translated">&lt;code&gt;-d&lt;/code&gt; , &lt;code&gt;--dim&lt;/code&gt; establece el modo de atenuaci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="2b4614619f43afa89757868171ee69e5db741b34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; exists.</source>
          <target state="translated">&lt;code&gt;-e FILE&lt;/code&gt; devuelve verdadero si &lt;code&gt;FILE&lt;/code&gt; existe.</target>
        </trans-unit>
        <trans-unit id="73bbb82414767dc9cb400320901efb43008fcc4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e WORD&lt;/code&gt; or &lt;code&gt;--erase WORD...&lt;/code&gt; Erase the given abbreviations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c819cb61a1e6b7ee76d369af4910b2fe4c2c2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e WORD&lt;/code&gt; or &lt;code&gt;--erase WORD&lt;/code&gt; Erase the abbreviation WORD.</source>
          <target state="translated">&lt;code&gt;-e WORD&lt;/code&gt; o &lt;code&gt;--erase WORD&lt;/code&gt; Borra la abreviatura WORD.</target>
        </trans-unit>
        <trans-unit id="eba5e54068a7dbb422a3953b443a4c86a74f2927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e command&lt;/code&gt; or &lt;code&gt;--editor command&lt;/code&gt; Open the function body inside the text editor given by the command (for example, &lt;code&gt;-e vi&lt;/code&gt;). The special command &lt;code&gt;fish&lt;/code&gt; will use the built-in editor (same as specifying &lt;code&gt;-i&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;-e command&lt;/code&gt; o comando &lt;code&gt;--editor command&lt;/code&gt; Abre el cuerpo de la funci&amp;oacute;n dentro del editor de texto dado por el comando (por ejemplo, &lt;code&gt;-e vi&lt;/code&gt; ). El comando especial &lt;code&gt;fish&lt;/code&gt; usar&amp;aacute; el editor incorporado (lo mismo que especificar &lt;code&gt;-i&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b9fa2b375c094cd352933de3da989312ac4789e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; Erase the binding with the given sequence and mode instead of defining a new one. Multiple sequences can be specified with this flag. Specifying &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; with &lt;code&gt;-M&lt;/code&gt; or &lt;code&gt;--mode&lt;/code&gt; erases all binds in the given mode regardless of sequence. Specifying &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; without &lt;code&gt;-M&lt;/code&gt; or &lt;code&gt;--mode&lt;/code&gt; erases all binds in all modes regardless of sequence.</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; o &lt;code&gt;--erase&lt;/code&gt; Borra el enlace con la secuencia y el modo dados en lugar de definir uno nuevo. Se pueden especificar varias secuencias con esta bandera. Especificar &lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;--all&lt;/code&gt; con &lt;code&gt;-M&lt;/code&gt; o &lt;code&gt;--mode&lt;/code&gt; borra todos los enlaces en el modo dado independientemente de la secuencia. Especificar &lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;--all&lt;/code&gt; sin &lt;code&gt;-M&lt;/code&gt; o &lt;code&gt;--mode&lt;/code&gt; borra todos los enlaces en todos los modos independientemente de la secuencia.</target>
        </trans-unit>
        <trans-unit id="e9ecb92bdaa4ce7de61b3137a99e17fb9083461a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; Release global block</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; o &lt;code&gt;--erase&lt;/code&gt; Liberar bloque global</target>
        </trans-unit>
        <trans-unit id="27a04e1dc6eb699ed5e10803c54ad322c6268eaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; causes the specified functions to be erased.</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; o &lt;code&gt;--erase&lt;/code&gt; hace que se borren las funciones especificadas.</target>
        </trans-unit>
        <trans-unit id="5f023b0076897f807d406fabcd57ff20f92840ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; causes the specified functions to be erased. This also means that it is prevented from autoloading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573b00e01645229a613c9239a83273b5570e990a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; causes the specified shell variable to be erased</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; o &lt;code&gt;--erase&lt;/code&gt; hace que se borre la variable de shell especificada</target>
        </trans-unit>
        <trans-unit id="2c9eec08ce8ea4b3d4066ad6ad7757ac8ddb4357" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; causes the specified shell variables to be erased</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dca6a4c2b15693b6ac6061e5caca527165f7c23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; deletes the specified completion.</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; o &lt;code&gt;--erase&lt;/code&gt; elimina la finalizaci&amp;oacute;n especificada.</target>
        </trans-unit>
        <trans-unit id="6489642520ff27cdb23a71c0177a2808d20a8297" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--exact&lt;/code&gt; searches or deletes items in the history that exactly match the specified text string. This is the default for the &lt;code&gt;delete&lt;/code&gt; subcommand. Note that the match is case-insensitive by default. If you really want an exact match, including letter case, you must use the &lt;code&gt;-C&lt;/code&gt; or &lt;code&gt;--case-sensitive&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; o &lt;code&gt;--exact&lt;/code&gt; busca o elimina elementos del historial que coinciden exactamente con la cadena de texto especificada. Este es el valor predeterminado para el subcomando &lt;code&gt;delete&lt;/code&gt; . Tenga en cuenta que la coincidencia no distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas de forma predeterminada. Si realmente desea una coincidencia exacta, incluidas las may&amp;uacute;sculas y min&amp;uacute;sculas, debe usar la &lt;code&gt;--case-sensitive&lt;/code&gt; &lt;code&gt;-C&lt;/code&gt; o --case-sensible .</target>
        </trans-unit>
        <trans-unit id="5aab2bfef66af17ab67310c68ad3e40ca3bb9075" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--on-event EVENT_NAME&lt;/code&gt; tells fish to run this function when the specified named event is emitted. Fish internally generates named events e.g. when showing the prompt.</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; o &lt;code&gt;--on-event EVENT_NAME&lt;/code&gt; le dice a Fish que ejecute esta funci&amp;oacute;n cuando se emite el evento con nombre especificado. Fish genera internamente eventos con nombre, por ejemplo, cuando muestra el mensaje.</target>
        </trans-unit>
        <trans-unit id="833301d35066acbe6983033522f26cd4a786ebaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt;, Enable interpretation of backslash escapes</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; , habilitar la interpretaci&amp;oacute;n de los escapes de barra invertida</target>
        </trans-unit>
        <trans-unit id="c157bf596bde51ca00546421fd8bff33fda0be1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is a regular file.</source>
          <target state="translated">&lt;code&gt;-f FILE&lt;/code&gt; devuelve verdadero si &lt;code&gt;FILE&lt;/code&gt; es un archivo normal.</target>
        </trans-unit>
        <trans-unit id="792814cdd6997460c78a2a3b9bee174905651e9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--features=FEATURES&lt;/code&gt; enables one or more &lt;a href=&quot;../index#featureflags&quot;&gt;feature flags&lt;/a&gt; (separated by a comma). These are how fish stages changes that might break scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a203dcb4901c7273acc8d26f9497e76209f8e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--features=FEATURES&lt;/code&gt; enables one or more feature flags (separated by a comma). These are how fish stages changes that might break scripts.</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; o &lt;code&gt;--features=FEATURES&lt;/code&gt; permite una o m&amp;aacute;s banderas de caracter&amp;iacute;sticas (separados por una coma). As&amp;iacute; es como los peces cambian las etapas que podr&amp;iacute;an romper los guiones.</target>
        </trans-unit>
        <trans-unit id="7839db86643d49c3802d115090c16caa4e981a2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--file-size&lt;/code&gt;: the maximum size of files created by the shell.</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; o &lt;code&gt;--file-size&lt;/code&gt; : el tama&amp;ntilde;o m&amp;aacute;ximo de los archivos creados por la c&amp;aacute;scara.</target>
        </trans-unit>
        <trans-unit id="f54fb7222582e9eddc96e7f09f4774ebb3bc75bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--file&lt;/code&gt; will cause psub to use a regular file instead of a named pipe to communicate with the calling process. This will cause &lt;code&gt;psub&lt;/code&gt; to be significantly slower when large amounts of data are involved, but has the advantage that the reading process can seek in the stream. This is the default.</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; o &lt;code&gt;--file&lt;/code&gt; har&amp;aacute; que psub use un archivo normal en lugar de una tuber&amp;iacute;a con nombre para comunicarse con el proceso de llamada. Esto har&amp;aacute; que &lt;code&gt;psub&lt;/code&gt; sea ​​significativamente m&amp;aacute;s lento cuando est&amp;eacute;n involucradas grandes cantidades de datos, pero tiene la ventaja de que el proceso de lectura puede buscar en el flujo. Este es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="367b1b980d53af672199b4836b7cac60b166fb30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--function-names&lt;/code&gt; Display a list of available input functions</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; o &lt;code&gt;--function-names&lt;/code&gt; Muestra una lista de funciones de entrada disponibles</target>
        </trans-unit>
        <trans-unit id="b76b205b5ce1cc434413b0cc1325aa8efbb5ff6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--function&lt;/code&gt; causes any additional arguments to be interpreted as input functions, and puts them into the queue, so that they will be read before any additional actual key presses are. This option cannot be combined with any other option. See &lt;a href=&quot;bind#cmd-bind&quot;&gt;bind&lt;/a&gt; for a list of input functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3824139298a5843b0ae039e5de965f163e195909" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--function&lt;/code&gt; inject readline functions into the reader. This option cannot be combined with any other option. It will cause any additional arguments to be interpreted as readline functions, and these functions will be injected into the reader, so that they will be returned to the reader before any additional actual key presses are read.</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; o &lt;code&gt;--function&lt;/code&gt; inyectan funciones readline en el lector. Esta opci&amp;oacute;n no se puede combinar con ninguna otra opci&amp;oacute;n. Har&amp;aacute; que cualquier argumento adicional se interprete como funciones de readline, y estas funciones se inyectar&amp;aacute;n en el lector, de modo que se devolver&amp;aacute;n al lector antes de que se lean las pulsaciones de teclas adicionales.</target>
        </trans-unit>
        <trans-unit id="429b1f169bdc81067fcd614edd40e80ccf366f12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--no-files&lt;/code&gt; says that the options specified by this completion may not be followed by a filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e20a227f2fdbbfd82041d648fb31898bf85664f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--no-files&lt;/code&gt; says that this completion may not be followed by a filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c25d8422096b8dd5990544165bc7d86722f41d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--no-files&lt;/code&gt; specifies that the options specified by this completion may not be followed by a filename.</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; o &lt;code&gt;--no-files&lt;/code&gt; especifica que las opciones especificadas por esta conclusi&amp;oacute;n no pueden ser seguidos por un nombre de archivo.</target>
        </trans-unit>
        <trans-unit id="2821c1f18b37e502938dfddc66023f1d7df616d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--no-functions&lt;/code&gt; suppresses function and builtin lookup.</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; o &lt;code&gt;--no-functions&lt;/code&gt; suprime la funci&amp;oacute;n y operaciones de b&amp;uacute;squeda integrado.</target>
        </trans-unit>
        <trans-unit id="62638d54fadc3da6a2c5ef098597ad39ba88c2de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; has the set-group-ID bit set.</source>
          <target state="translated">&lt;code&gt;-g FILE&lt;/code&gt; devuelve verdadero si &lt;code&gt;FILE&lt;/code&gt; tiene establecido el bit set-group-ID.</target>
        </trans-unit>
        <trans-unit id="aa32c159ddc6d13fe9825b9aad46998e6878767a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; Never automatically release the lock</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; o &lt;code&gt;--global&lt;/code&gt; Nunca suelte autom&amp;aacute;ticamente el bloqueo</target>
        </trans-unit>
        <trans-unit id="c8862d61ca2ab2921292276ce5571c7110c67a08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; causes the specified shell variable to be given a global scope. Non-global variables disappear when the block they belong to ends</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; o &lt;code&gt;--global&lt;/code&gt; hace que la variable de shell especificada reciba un alcance global. Las variables no globales desaparecen cuando finaliza el bloque al que pertenecen</target>
        </trans-unit>
        <trans-unit id="42b9fff6a53dafa7d6ff5234d6e7e414e793cd66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; makes the variables global.</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; o &lt;code&gt;--global&lt;/code&gt; hace que las variables sean globales.</target>
        </trans-unit>
        <trans-unit id="a05195f8eb21f42890e9fc97bb8b99976d375f48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; means to use a global $fish_user_paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2521c42d50af2728233b9238068cb6f26a8677a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; to use a global variable.</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; o &lt;code&gt;--global&lt;/code&gt; para usar una variable global.</target>
        </trans-unit>
        <trans-unit id="7fb68bb57eac9cd6c857ebe9a06a4b927d814748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--group&lt;/code&gt; only prints the group ID of each job.</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; o &lt;code&gt;--group&lt;/code&gt; solo imprime el ID de grupo de cada trabajo.</target>
        </trans-unit>
        <trans-unit id="20e98bb361b67679f78d574b46cdcfcf936202a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; display help for this command.</source>
          <target state="translated">&lt;code&gt;-h&lt;/code&gt; o &lt;code&gt;--help&lt;/code&gt; muestra ayuda para este comando.</target>
        </trans-unit>
        <trans-unit id="fa62117127b0729fe98580835d320d16100bf561" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; displays help about using this command.</source>
          <target state="translated">&lt;code&gt;-h&lt;/code&gt; o &lt;code&gt;--help&lt;/code&gt; Muestra ayuda sobre el uso de este comando.</target>
        </trans-unit>
        <trans-unit id="361f91af80d0f6ddacdffab758ca5ef187506751" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; prints this message.</source>
          <target state="translated">&lt;code&gt;-h&lt;/code&gt; o &lt;code&gt;--help&lt;/code&gt; impresiones de este mensaje.</target>
        </trans-unit>
        <trans-unit id="a93a61846e7442e3b461eff0ee724d929367424f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; prints usage information.</source>
          <target state="translated">&lt;code&gt;-h&lt;/code&gt; o &lt;code&gt;--help&lt;/code&gt; imprime informaci&amp;oacute;n de uso.</target>
        </trans-unit>
        <trans-unit id="0901c9fe43c23d9b16bb9bae04f0fe63a46696c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; or &lt;code&gt;--ignore-unknown&lt;/code&gt; ignores unknown options, keeping them and their arguments in $argv instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b845a0833a08541f363d56024c78c95b1183620a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; or &lt;code&gt;--index&lt;/code&gt; print the word index</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; o &lt;code&gt;--index&lt;/code&gt; imprime el &amp;iacute;ndice de palabras</target>
        </trans-unit>
        <trans-unit id="11a7e7fcc208641aef0c1e3a7aa6941055c2684b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; or &lt;code&gt;--insert&lt;/code&gt; do not remove the current commandline, insert the specified string at the current cursor position</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; o &lt;code&gt;--insert&lt;/code&gt; no eliminan la l&amp;iacute;nea de comando actual, inserta la cadena especificada en la posici&amp;oacute;n actual del cursor</target>
        </trans-unit>
        <trans-unit id="74f713d945e6b04b9c35f3982b4286157db1e5bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; or &lt;code&gt;--interactive&lt;/code&gt; Force opening the function body in the built-in editor even if &lt;code&gt;$VISUAL&lt;/code&gt; or &lt;code&gt;$EDITOR&lt;/code&gt; is defined.</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; o &lt;code&gt;--interactive&lt;/code&gt; Fuerza que abre el cuerpo de la funci&amp;oacute;n en el editor incorporado incluso si se define &lt;code&gt;$VISUAL&lt;/code&gt; o &lt;code&gt;$EDITOR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cfbd6746407e4463c5ddd8cfce718c1576e7073" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; or &lt;code&gt;--interactive&lt;/code&gt; specify that fish is to run in interactive mode</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; o &lt;code&gt;--interactive&lt;/code&gt; especifican que fish se ejecutar&amp;aacute; en modo interactivo</target>
        </trans-unit>
        <trans-unit id="8617e068c22f296bcd6cf43f711b810d1fa66503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; or &lt;code&gt;--no-indent&lt;/code&gt; do not indent commands; only reformat to one job per line.</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; o &lt;code&gt;--no-indent&lt;/code&gt; hacen comandos no sangr&amp;iacute;a; s&amp;oacute;lo vuelva a formatear a un trabajo por l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="e2d1d04ab4b2016decc63e2e5303fbf409e3500f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt;, &lt;code&gt;--italics&lt;/code&gt; sets italics mode.</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; , &lt;code&gt;--italics&lt;/code&gt; establece el modo de cursiva.</target>
        </trans-unit>
        <trans-unit id="ba7e635219584e39a4410b3e90d74e2e7e2078f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-j PGID&lt;/code&gt; or &lt;code&gt;--on-job-exit PGID&lt;/code&gt; tells fish to run this function when the job with group ID PGID exits. Instead of PGID, the string 'caller' can be specified. This is only legal when in a command substitution, and will result in the handler being triggered by the exit of the job which created this command substitution.</source>
          <target state="translated">&lt;code&gt;-j PGID&lt;/code&gt; o &lt;code&gt;--on-job-exit PGID&lt;/code&gt; le dice a Fish que ejecute esta funci&amp;oacute;n cuando el trabajo con el ID de grupo PGID sale. En lugar de PGID, se puede especificar la cadena 'llamador'. Esto solo es legal cuando se est&amp;aacute; en una sustituci&amp;oacute;n de comando, y resultar&amp;aacute; en que el manejador se active al salir del trabajo que cre&amp;oacute; esta sustituci&amp;oacute;n de comando.</target>
        </trans-unit>
        <trans-unit id="709342cfce9431c723f6de71eb01b029ca7ad1c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-j&lt;/code&gt; or &lt;code&gt;--current-job&lt;/code&gt; select the current job</source>
          <target state="translated">&lt;code&gt;-j&lt;/code&gt; o &lt;code&gt;--current-job&lt;/code&gt; selecciona el trabajo actual</target>
        </trans-unit>
        <trans-unit id="a57863183b36c182ae7356b97147ce9803436a64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-j&lt;/code&gt; or &lt;code&gt;--current-job&lt;/code&gt; select the current job - a &lt;code&gt;job&lt;/code&gt; here is one pipeline. It stops at logical operators or terminators (&lt;code&gt;;&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt; or newlines).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7034d26c617fcf34b9bbdef6be7a76ffdb47443e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-k FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; has the sticky bit set. If the OS does not support the concept it returns false. See &lt;a href=&quot;https://en.wikipedia.org/wiki/Sticky_bit&quot;&gt;https://en.wikipedia.org/wiki/Sticky_bit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;-k FILE&lt;/code&gt; devuelve verdadero si &lt;code&gt;FILE&lt;/code&gt; tiene el bit adhesivo establecido. Si el sistema operativo no es compatible con el concepto, devuelve falso. Consulte &lt;a href=&quot;https://en.wikipedia.org/wiki/Sticky_bit&quot;&gt;https://en.wikipedia.org/wiki/Sticky_bit&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8c988dd5a3bb1a98879168a8eca1b578ff9c1134" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-k&lt;/code&gt; or &lt;code&gt;--keep-order&lt;/code&gt; keeps the order of the &lt;code&gt;OPTION_ARGUMENTS&lt;/code&gt; instead of sorting alphabetically. Multiple &lt;code&gt;complete&lt;/code&gt; calls with &lt;code&gt;-k&lt;/code&gt; result in arguments of the later ones displayed first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051156d49bd39493fbdfdabd9b98bf7edbfda903" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-k&lt;/code&gt; or &lt;code&gt;--keep-order&lt;/code&gt; preserves the order of the &lt;code&gt;OPTION_ARGUMENTS&lt;/code&gt; specified via &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--arguments&lt;/code&gt; instead of sorting alphabetically.</source>
          <target state="translated">&lt;code&gt;-k&lt;/code&gt; o &lt;code&gt;--keep-order&lt;/code&gt; conserva el orden de los &lt;code&gt;OPTION_ARGUMENTS&lt;/code&gt; especificado a trav&amp;eacute;s &lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;--arguments&lt;/code&gt; en lugar de la clasificaci&amp;oacute;n por orden alfab&amp;eacute;tico.</target>
        </trans-unit>
        <trans-unit id="47731bf2b9fb92597a4e5a772d39e66507266eee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-k&lt;/code&gt; or &lt;code&gt;--keep-order&lt;/code&gt; preserves the order of the &lt;code&gt;OPTION_ARGUMENTS&lt;/code&gt; specified via &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--arguments&lt;/code&gt; instead of sorting alphabetically. Multiple &lt;code&gt;complete&lt;/code&gt; calls with &lt;code&gt;-k&lt;/code&gt; result in arguments of the later ones displayed first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0922d9ecc7a5382ba1c3f7a2f6b435ab60374b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-k&lt;/code&gt; or &lt;code&gt;--key&lt;/code&gt; Specify a key name, such as 'left' or 'backspace' instead of a character sequence</source>
          <target state="translated">&lt;code&gt;-k&lt;/code&gt; o &lt;code&gt;--key&lt;/code&gt; Especifica un nombre de tecla, como 'izquierda' o 'retroceso' en lugar de una secuencia de caracteres</target>
        </trans-unit>
        <trans-unit id="3748ccfb229666681aec6ee61ddca009c79a011b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l LONG_OPTION&lt;/code&gt; or &lt;code&gt;--long-option=LONG_OPTION&lt;/code&gt; adds a GNU style long option to the completions list.</source>
          <target state="translated">&lt;code&gt;-l LONG_OPTION&lt;/code&gt; o &lt;code&gt;--long-option=LONG_OPTION&lt;/code&gt; agrega una opci&amp;oacute;n larga de estilo GNU a la lista de finalizaciones.</target>
        </trans-unit>
        <trans-unit id="0c968115864736e820bfa8b0ce66b2eae9c91424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--last&lt;/code&gt; prints only the last job to be started.</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; o &lt;code&gt;--last&lt;/code&gt; imprime solo el &amp;uacute;ltimo trabajo que se ha iniciado.</target>
        </trans-unit>
        <trans-unit id="4164e3a6290299e98618681a4d498ee96a9a9519" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--list-signals&lt;/code&gt; prints a list of signal names.</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; o &lt;code&gt;--list-signals&lt;/code&gt; imprime una lista de nombres de se&amp;ntilde;ales.</target>
        </trans-unit>
        <trans-unit id="7c297a1bcd1e3ec04a461ecbd485f54f31aa1826" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--list&lt;/code&gt; Lists all abbreviated words.</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; o &lt;code&gt;--list&lt;/code&gt; Muestra todas las palabras abreviadas.</target>
        </trans-unit>
        <trans-unit id="1c65d1a53603e17bf56d4000d9bde21d44ef2d31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--local&lt;/code&gt; Release the block automatically at the end of the current innermost code block scope</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; o &lt;code&gt;--local&lt;/code&gt; Soltar el bloque autom&amp;aacute;ticamente al final del alcance bloque de c&amp;oacute;digo m&amp;aacute;s interna actual</target>
        </trans-unit>
        <trans-unit id="945e4dcf4dc82d3672ad52ce728b5be496a38304" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--local&lt;/code&gt; forces the specified shell variable to be given a scope that is local to the current block, even if a variable with the given name exists and is non-local</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; o &lt;code&gt;--local&lt;/code&gt; fuerzas la variable de shell especificado para ser dado un alcance que es local para el bloque actual, incluso si una variable con el nombre dado existe y es no local</target>
        </trans-unit>
        <trans-unit id="5bfc9a0f63c1733c700284fc467bd983754842c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--local&lt;/code&gt; makes the variables local.</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; o &lt;code&gt;--local&lt;/code&gt; hace que las variables locales.</target>
        </trans-unit>
        <trans-unit id="334495b8dfc108c8117a2034b4f36e7545df43b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--lock-size&lt;/code&gt;: the maximum size that may be locked into memory.</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; o &lt;code&gt;--lock-size&lt;/code&gt; : el tama&amp;ntilde;o m&amp;aacute;ximo que puede ser bloqueado en la memoria.</target>
        </trans-unit>
        <trans-unit id="816b502458ad94052c7edb2e6bb6189162802314" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--login&lt;/code&gt; specify that fish is to run as a login shell</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; o &lt;code&gt;--login&lt;/code&gt; especifican que fish se ejecutar&amp;aacute; como un shell de inicio de sesi&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="82db7181c806c9ed89a1ed2f7b1c9a0d986794a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--long&lt;/code&gt; takes a string that is used as the long flag in the option being defined. This option is optional and has no default. If no long flag is defined then only the short flag will be allowed when parsing arguments using the option spec.</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; o &lt;code&gt;--long&lt;/code&gt; toma una cadena que se utiliza como bandera larga en la opci&amp;oacute;n que se define. Esta opci&amp;oacute;n es opcional y no tiene ning&amp;uacute;n valor predeterminado. Si no se define una bandera larga, solo se permitir&amp;aacute; la bandera corta al analizar argumentos utilizando la opci&amp;oacute;n spec.</target>
        </trans-unit>
        <trans-unit id="d81671ef56e4c9fe71bb02f6a33c00022bb2ae22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-m NEW_MODE&lt;/code&gt; or &lt;code&gt;--sets-mode NEW_MODE&lt;/code&gt; Change the current mode to &lt;code&gt;NEW_MODE&lt;/code&gt; after this binding is executed</source>
          <target state="translated">&lt;code&gt;-m NEW_MODE&lt;/code&gt; o --sets &lt;code&gt;--sets-mode NEW_MODE&lt;/code&gt; Cambia el modo actual a &lt;code&gt;NEW_MODE&lt;/code&gt; despu&amp;eacute;s de ejecutar este enlace</target>
        </trans-unit>
        <trans-unit id="8bd245878d994d831df1c927ae7d15e428bdf8e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;--move&lt;/code&gt; means to move already existing components to the place they would be added - by default they would be left in place and not added again</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fda883bdd3ef12205898fb3b7908c24297e8cea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;--resident-set-size&lt;/code&gt;: the maximum resident set size.</source>
          <target state="translated">&lt;code&gt;-m&lt;/code&gt; o &lt;code&gt;--resident-set-size&lt;/code&gt; : el tama&amp;ntilde;o m&amp;aacute;ximo del conjunto de residentes.</target>
        </trans-unit>
        <trans-unit id="e15c86fc30b95a520bb8fe7dad712db1fb424414" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n CONDITION&lt;/code&gt; or &lt;code&gt;--condition CONDITION&lt;/code&gt; specifies that this completion should only be used if the CONDITION (a shell command) returns 0. This makes it possible to specify completions that should only be used in some cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8fd516846ee8b21cb67b009747566aac32a28e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n NCHARS&lt;/code&gt; or &lt;code&gt;--nchars=NCHARS&lt;/code&gt; makes &lt;code&gt;read&lt;/code&gt; return after reading NCHARS characters or the end of the line, whichever comes first.</source>
          <target state="translated">&lt;code&gt;-n NCHARS&lt;/code&gt; o &lt;code&gt;--nchars=NCHARS&lt;/code&gt; hace que la &lt;code&gt;read&lt;/code&gt; regrese despu&amp;eacute;s de leer los caracteres NCHARS o al final de la l&amp;iacute;nea, lo que ocurra primero.</target>
        </trans-unit>
        <trans-unit id="42d06c8b6f9ce9da1f98730916a28fb7d97567d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n STRING&lt;/code&gt; returns true if the length of &lt;code&gt;STRING&lt;/code&gt; is non-zero.</source>
          <target state="translated">&lt;code&gt;-n STRING&lt;/code&gt; devuelve verdadero si la longitud de &lt;code&gt;STRING&lt;/code&gt; no es cero.</target>
        </trans-unit>
        <trans-unit id="b121398ced700e0e7ffc6178509480268661dc23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--condition&lt;/code&gt; specifies a shell command that must return 0 if the completion is to be used. This makes it possible to specify completions that should only be used in some cases.</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; o &lt;code&gt;--condition&lt;/code&gt; especifica un comando shell que debe devolver 0 si la terminaci&amp;oacute;n se va a utilizar. Esto hace posible especificar terminaciones que solo deber&amp;iacute;an usarse en algunos casos.</target>
        </trans-unit>
        <trans-unit id="79404be941c3b4df188aff14c850e357b8147c68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--dry-run&lt;/code&gt; means to print the &lt;code&gt;set&lt;/code&gt; command that would be used without executing it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb0a954f3cee9ffc7b02714da619e72fc2ff985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--file-descriptor-count&lt;/code&gt;: the maximum number of open file descriptors (most systems do not allow this value to be set).</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; o &lt;code&gt;--file-descriptor-count&lt;/code&gt; : el n&amp;uacute;mero m&amp;aacute;ximo de descriptores de archivos abiertos (la mayor&amp;iacute;a de los sistemas no permiten este valor a configurar).</target>
        </trans-unit>
        <trans-unit id="c2b85cbd0d79040706223872b1d6aedcb11386ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--name&lt;/code&gt; is the command name for use in error messages. By default the current function name will be used, or &lt;code&gt;argparse&lt;/code&gt; if run outside of a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b03a1ee4a6f0d46f09b6169d1fa9c2c61c3b9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--name&lt;/code&gt; is the command name to insert into any error messages. If you don't provide this value &lt;code&gt;argparse&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; o &lt;code&gt;--name&lt;/code&gt; es el nombre del comando para insertar en los mensajes de error. Si no proporciona este valor , se utilizar&amp;aacute; &lt;code&gt;argparse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fca2dbc519278a972d5cae10b8aa9342a7fdfb05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--names&lt;/code&gt; List only the names of all defined variables, not their value. The names are guaranteed to be sorted.</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; o &lt;code&gt;--names&lt;/code&gt; Lista s&amp;oacute;lo los nombres de todas las variables definidas, no su valor. Se garantiza que los nombres estar&amp;aacute;n ordenados.</target>
        </trans-unit>
        <trans-unit id="23fd79e3f88f8cf880d9473d5fcf14aca6160c52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--names&lt;/code&gt; List the names of all defined builtins</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; o &lt;code&gt;--names&lt;/code&gt; lista los nombres de todas las &amp;oacute;rdenes internas definidas</target>
        </trans-unit>
        <trans-unit id="729efce2e6efa162cc3d7d605d7dd06c8976251b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--names&lt;/code&gt; lists the names of all defined functions.</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; o &lt;code&gt;--names&lt;/code&gt; listas de los nombres de todas las funciones definidas.</target>
        </trans-unit>
        <trans-unit id="514fe35df7b3a21ba2bb479b2a728ed8cbdc6d9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--no-execute&lt;/code&gt; do not execute any commands, only perform syntax checking</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; o &lt;code&gt;--no-execute&lt;/code&gt; no ejecute ning&amp;uacute;n comando, solamente realizar la comprobaci&amp;oacute;n de sintaxis</target>
        </trans-unit>
        <trans-unit id="c42f435ef2af2881e6cccf39e21c784be7bc15ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt;, Do not output a newline</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; , no genera una nueva l&amp;iacute;nea</target>
        </trans-unit>
        <trans-unit id="61d8520a9cca524397e5cb6e004f9b92f1a77926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o LONG_OPTION&lt;/code&gt; or &lt;code&gt;--old-option=LONG_OPTION&lt;/code&gt; adds an old style long option to the completions list (See below for details).</source>
          <target state="translated">&lt;code&gt;-o LONG_OPTION&lt;/code&gt; o &lt;code&gt;--old-option=LONG_OPTION&lt;/code&gt; agrega una opci&amp;oacute;n larga de estilo antiguo a la lista de finalizaciones (consulte los detalles a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="0527c19efc2f2ced91308be093fdedd70950a90a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o&lt;/code&gt; or &lt;code&gt;--debug-output=DEBUG_FILE&lt;/code&gt; specify a file path to receive the debug output, including categories and &lt;code&gt;fish_trace&lt;/code&gt;. The default is stderr.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2863e5890a49af04c35cfd803b911d63a498f7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o&lt;/code&gt; or &lt;code&gt;--debug-output=path&lt;/code&gt; Specify a file path to receive the debug output, including categories and &lt;code&gt;fish_trace&lt;/code&gt;. The default is stderr.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1b0bff42dbc886d484cc9ac246226887a83594" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o&lt;/code&gt; or &lt;code&gt;--optional-val&lt;/code&gt; means the option being defined can take a value but it is optional rather than required. If the option is seen more than once when parsing arguments only the last value seen is saved. This means the resulting flag variable created by &lt;code&gt;argparse&lt;/code&gt; will zero elements if no value was given with the option else it will have exactly one element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98223db51ab070feeed508f88e529aec442f880e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o&lt;/code&gt; or &lt;code&gt;--optional&lt;/code&gt; means the option being defined can take a value but it is optional rather than required. If the option is seen more than once when parsing arguments only the last value seen is saved. This means the resulting flag variable created by &lt;code&gt;argparse&lt;/code&gt; will zero elements if no value was given with the option else it will have exactly one element.</source>
          <target state="translated">&lt;code&gt;-o&lt;/code&gt; o &lt;code&gt;--optional&lt;/code&gt; significa que la opci&amp;oacute;n que se est&amp;aacute; definiendo puede tomar un valor, pero es opcional en lugar de obligatoria. Si la opci&amp;oacute;n se ve m&amp;aacute;s de una vez al analizar argumentos, solo se guarda el &amp;uacute;ltimo valor visto. Esto significa que la variable de bandera resultante creada por &lt;code&gt;argparse&lt;/code&gt; tendr&amp;aacute; cero elementos si no se le dio ning&amp;uacute;n valor con la opci&amp;oacute;n, de lo contrario, tendr&amp;aacute; exactamente un elemento.</target>
        </trans-unit>
        <trans-unit id="25654b63562054b9b5beec989ee33499a1bc2273" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o&lt;/code&gt; or &lt;code&gt;--tokenize&lt;/code&gt; tokenize the selection and print one string-type token per line</source>
          <target state="translated">&lt;code&gt;-o&lt;/code&gt; o &lt;code&gt;--tokenize&lt;/code&gt; tokeniza la selecci&amp;oacute;n e imprime un token de tipo cadena por l&amp;iacute;nea</target>
        </trans-unit>
        <trans-unit id="ea9f09eb8f39f5666a127e1737e8d72b83e79405" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o&lt;/code&gt;, &lt;code&gt;--bold&lt;/code&gt; sets bold mode.</source>
          <target state="translated">&lt;code&gt;-o&lt;/code&gt; , &lt;code&gt;--bold&lt;/code&gt; establece el modo negrita.</target>
        </trans-unit>
        <trans-unit id="b759c8fcc32310b5cb493a65b90f0858176e8306" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p COMMAND&lt;/code&gt; or &lt;code&gt;--path COMMAND&lt;/code&gt; specifies that &lt;code&gt;COMMAND&lt;/code&gt; is the absolute path of the command (optionally containing wildcards).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a180101e521c5801a77444d908ab8143cbd533" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p COMMAND&lt;/code&gt; or &lt;code&gt;--path COMMAND&lt;/code&gt; specifies that &lt;code&gt;COMMAND&lt;/code&gt; is the absolute path of the program (optionally containing wildcards).</source>
          <target state="translated">&lt;code&gt;-p COMMAND&lt;/code&gt; o &lt;code&gt;--path COMMAND&lt;/code&gt; especifica que &lt;code&gt;COMMAND&lt;/code&gt; es la ruta absoluta del programa (opcionalmente contiene comodines).</target>
        </trans-unit>
        <trans-unit id="6620a055ad7181ac75a7845258925f44d24e61b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is a named pipe.</source>
          <target state="translated">&lt;code&gt;-p FILE&lt;/code&gt; devuelve verdadero si &lt;code&gt;FILE&lt;/code&gt; es una tuber&amp;iacute;a con nombre.</target>
        </trans-unit>
        <trans-unit id="dc329867f613a9def8babb8a5294a747f53d11a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p PID&lt;/code&gt; or &lt;code&gt;--on-process-exit PID&lt;/code&gt; tells fish to run this function when the fish child process with process ID PID exits. Instead of a PID, for backward compatibility, &quot;&lt;code&gt;%self&lt;/code&gt;&quot; can be specified as an alias for &lt;code&gt;$fish_pid&lt;/code&gt;, and the function will be run when the current fish instance exits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec30c3e683f05d6158efa3f71b07ecccfc2daf3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p PID&lt;/code&gt; or &lt;code&gt;--on-process-exit PID&lt;/code&gt; tells fish to run this function when the fish child process with process ID PID exits. Instead of a PID, for backward compatibility, &quot;`%self`&quot; can be specified as an alias for &lt;code&gt;$fish_pid&lt;/code&gt;, and the function will be run when the current fish instance exits.</source>
          <target state="translated">&lt;code&gt;-p PID&lt;/code&gt; o &lt;code&gt;--on-process-exit PID&lt;/code&gt; le dice a Fish que ejecute esta funci&amp;oacute;n cuando el proceso secundario Fish con el ID de proceso PID sale. En lugar de un PID, para compatibilidad con versiones anteriores, &quot;`% self` &quot;se puede especificar como un alias para &lt;code&gt;$fish_pid&lt;/code&gt; , y la funci&amp;oacute;n se ejecutar&amp;aacute; cuando salga la instancia de fish actual.</target>
        </trans-unit>
        <trans-unit id="eadac11d24b153ded374a8ed8039a56fe7809f95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p PROMPT_CMD&lt;/code&gt; or &lt;code&gt;--prompt=PROMPT_CMD&lt;/code&gt; uses the output of the shell command &lt;code&gt;PROMPT_CMD&lt;/code&gt; as the prompt for the interactive mode. The default prompt command is &lt;code&gt;set_color green; echo read; set_color normal; echo &quot;&amp;gt; &quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9966574989555db3783a9d5257f3c3688a8e5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p PROMPT_CMD&lt;/code&gt; or &lt;code&gt;--prompt=PROMPT_CMD&lt;/code&gt; uses the output of the shell command &lt;code&gt;PROMPT_CMD&lt;/code&gt; as the prompt for the interactive mode. The default prompt command is &lt;code&gt;set_color green; echo read; set_color normal; echo &quot;&amp;gt; &quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-p PROMPT_CMD&lt;/code&gt; o &lt;code&gt;--prompt=PROMPT_CMD&lt;/code&gt; utiliza la salida del comando de shell &lt;code&gt;PROMPT_CMD&lt;/code&gt; como indicador del modo interactivo. El comando de solicitud predeterminado es &lt;code&gt;set_color green; echo read; set_color normal; echo &quot;&amp;gt; &quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b39afed9ae3d18a0a5d4ab2b51c9285c3afefc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--as-command&lt;/code&gt; outputs the umask in a form that may be reused as input</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; o &lt;code&gt;--as-command&lt;/code&gt; genera la umask en una forma que se puede reutilizar como entrada</target>
        </trans-unit>
        <trans-unit id="95b9ca0a0592cb56cbba102f8c7a3cc1981ee5e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--current-process&lt;/code&gt; select the current process</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; o &lt;code&gt;--current-process&lt;/code&gt; selecciona el proceso actual</target>
        </trans-unit>
        <trans-unit id="ece5ac8f7cc8b8ac84014f805890dee413b84253" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--current-process&lt;/code&gt; select the current process - a &lt;code&gt;process&lt;/code&gt; here is one simple command. It stops at logical operators, terminators or pipes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129c006e3e831307d9a248fff2989dc772dbc892" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--path&lt;/code&gt; prints the path to &lt;code&gt;NAME&lt;/code&gt; if &lt;code&gt;NAME&lt;/code&gt; resolves to an executable file in &lt;a href=&quot;../index#path&quot;&gt;$PATH&lt;/a&gt;, the path to the script containing the definition of the function &lt;code&gt;NAME&lt;/code&gt; if &lt;code&gt;NAME&lt;/code&gt; resolves to a function loaded from a file on disk (i.e. not interactively defined at the prompt), or nothing otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774ba50368b7d8d39eb11485bfdfda76d8bf944c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--path&lt;/code&gt; returns the name of the disk file that would be executed, or nothing if &lt;code&gt;type -t name&lt;/code&gt; would not return &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; o &lt;code&gt;--path&lt;/code&gt; devuelve el nombre del archivo de disco que se ejecutar&amp;aacute;, o nada si el &lt;code&gt;type -t name&lt;/code&gt; no devolver&amp;iacute;a el &lt;code&gt;file&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99f54997cf90f1bc4aa9126d82a33a302b568824" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--pid&lt;/code&gt; prints the process ID for each process in all jobs.</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; o &lt;code&gt;--pid&lt;/code&gt; imprime el ID de proceso para cada proceso en todos los trabajos.</target>
        </trans-unit>
        <trans-unit id="a53544b83b7cab15224f0a7dcc9b651b34ff925f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--prefix&lt;/code&gt; searches or deletes items in the history that begin with the specified text string. This is not currently supported by the &lt;code&gt;--delete&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; o &lt;code&gt;--prefix&lt;/code&gt; busca o elimina elementos del historial que comienzan con la cadena de texto especificada. Actualmente, esto no es compatible con la &lt;code&gt;--delete&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0ded2065e6882931e802e584fd04573eb805731" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--prepend&lt;/code&gt; causes the components to be added to the &lt;em&gt;front&lt;/em&gt; of the variable (this is the default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babfdfb430d1aa4b61fe75b5bc88a8726272b2a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--prepend&lt;/code&gt; causes the values to be prepended to the current set of values for the variable. This can be used with &lt;code&gt;--append&lt;/code&gt; to both append and prepend at the same time. This cannot be used when assigning to a variable slice.</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; o &lt;code&gt;--prepend&lt;/code&gt; hace que los valores se antepongan al conjunto actual de valores de la variable. Esto se puede usar con &lt;code&gt;--append&lt;/code&gt; para agregar y anteponer al mismo tiempo. No se puede utilizar cuando se asigna a un sector variable.</target>
        </trans-unit>
        <trans-unit id="f01889746a1bb81a7c5b108fd4b45d4e7030fd87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--print&lt;/code&gt; prints all defined signal handlers.</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; o &lt;code&gt;--print&lt;/code&gt; imprime todos los manejadores de se&amp;ntilde;ales definidos.</target>
        </trans-unit>
        <trans-unit id="e068cb26868cd1f61a2a6747f95e3dc1850cbae6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--profile=PROFILE_FILE&lt;/code&gt; when fish exits, output timing information on all executed commands to the specified file</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; o &lt;code&gt;--profile=PROFILE_FILE&lt;/code&gt; cuando Fish sale, env&amp;iacute;a informaci&amp;oacute;n de tiempo de todos los comandos ejecutados al archivo especificado</target>
        </trans-unit>
        <trans-unit id="7027eecbaeda5de496531d6e1186434b84a3f2d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--profile=PROFILE_FILE&lt;/code&gt; when fish exits, output timing information on all executed commands to the specified file. This excludes time spent starting up and reading the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9edca866c463ea0ae1c76d3b62381c732b0b0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--query&lt;/code&gt; Return 0 (true) if one of the WORDs is an abbreviation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b08fb579cabc04e9161c0a5631d161edc4bcb9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--query&lt;/code&gt; prints no output for evaluation of jobs by exit status only. For compatibility with old fish versions this is also &lt;code&gt;--quiet&lt;/code&gt; (but this is deprecated).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee09785e55ad8f5c933ac0db8e789096873ac962" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--query&lt;/code&gt; suppresses all output; this is useful when testing the exit status. For compatibility with old fish versions this is also &lt;code&gt;--quiet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56dc1c422c42b2a4c890ee45759e193561b0723" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--query&lt;/code&gt; test if the specified variable names are defined. Does not output anything, but the builtins exit status is the number of variables specified that were not defined, or 255 if more than 255 variables are not defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e5830ead3ac5a621da6558ed9d44670a9f886e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--query&lt;/code&gt; test if the specified variable names are defined. Does not output anything, but the builtins exit status is the number of variables specified that were not defined.</source>
          <target state="translated">&lt;code&gt;-q&lt;/code&gt; o &lt;code&gt;--query&lt;/code&gt; prueba si los nombres de variable especificados est&amp;aacute;n definidos. No genera nada, pero el estado de salida incorporado es el n&amp;uacute;mero de variables especificadas que no se definieron.</target>
        </trans-unit>
        <trans-unit id="3f73395d9587facdb116ac3816913cb2250b7c0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--query&lt;/code&gt; tests if any of the specified builtins exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735530980eb1302c060d0e742b425fb4326e9537" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--query&lt;/code&gt; tests if the specified functions exist.</source>
          <target state="translated">&lt;code&gt;-q&lt;/code&gt; o &lt;code&gt;--query&lt;/code&gt; comprueba si existen las funciones especificadas.</target>
        </trans-unit>
        <trans-unit id="117cc7aa89d45c55ac7aa3493d4b5e5b0b2e98eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--query&lt;/code&gt;, silences the output and prints nothing, setting only the exit status. Implies &lt;code&gt;--search&lt;/code&gt;. For compatibility with old fish versions this is also &lt;code&gt;--quiet&lt;/code&gt; (but this is deprecated).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e97dda561c6501abf8a2477d7e93312571fb7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--quiet&lt;/code&gt; prints no output for evaluation of jobs by exit code only.</source>
          <target state="translated">&lt;code&gt;-q&lt;/code&gt; o &lt;code&gt;--quiet&lt;/code&gt; no imprime ninguna salida para la evaluaci&amp;oacute;n de trabajos solo mediante c&amp;oacute;digo de salida.</target>
        </trans-unit>
        <trans-unit id="f918376c236245b2b32c7116e676b60d2abe4b24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--quiet&lt;/code&gt; prints no output for evaluation of jobs by exit status only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce643b4ab44dfecd805ff8ce5a254f8321d122b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--quiet&lt;/code&gt; suppresses all output; this is useful when testing the exit status.</source>
          <target state="translated">&lt;code&gt;-q&lt;/code&gt; o &lt;code&gt;--quiet&lt;/code&gt; suprime toda la salida; esto es &amp;uacute;til cuando se prueba el estado de salida.</target>
        </trans-unit>
        <trans-unit id="5e7e55d20a35de3a8e342c4ea4204e6a3db7a124" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--quiet&lt;/code&gt;, in conjunction with &lt;code&gt;-s&lt;/code&gt;, silences the output and prints nothing, setting only the exit code.</source>
          <target state="translated">&lt;code&gt;-q&lt;/code&gt; o &lt;code&gt;--quiet&lt;/code&gt; , junto con &lt;code&gt;-s&lt;/code&gt; , silencia la salida y no imprime nada, estableciendo solo el c&amp;oacute;digo de salida.</target>
        </trans-unit>
        <trans-unit id="763db4d57618ab86fbc5b5649e73ef9395aeba8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--quiet&lt;/code&gt;, silences the output and prints nothing, setting only the exit status. Implies &lt;code&gt;--search&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ecd71e78c4ca953744527fe9c3babca754ec70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is marked as readable.</source>
          <target state="translated">&lt;code&gt;-r FILE&lt;/code&gt; devuelve verdadero si &lt;code&gt;FILE&lt;/code&gt; est&amp;aacute; marcado como legible.</target>
        </trans-unit>
        <trans-unit id="7c60ccac4e4109c73df2059ba1aea2b0933d7e47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r OLD_WORD NEW_WORD&lt;/code&gt; or &lt;code&gt;--rename OLD_WORD NEW_WORD&lt;/code&gt; Renames an abbreviation, from OLD_WORD to NEW_WORD.</source>
          <target state="translated">&lt;code&gt;-r OLD_WORD NEW_WORD&lt;/code&gt; o &lt;code&gt;--rename OLD_WORD NEW_WORD&lt;/code&gt; Cambia el nombre de una abreviatura, de OLD_WORD a NEW_WORD.</target>
        </trans-unit>
        <trans-unit id="bf3dc1ad193a8d90528856070355e4caebc07900" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--replace&lt;/code&gt; remove the current commandline and replace it with the specified string (default)</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; o &lt;code&gt;--replace&lt;/code&gt; eliminar la l&amp;iacute;nea de comandos actual y sustituirla por la cadena especificada (por defecto)</target>
        </trans-unit>
        <trans-unit id="7c8f4fb5c799a7ec345626fac69204ec4c9c293d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--require-parameter&lt;/code&gt; says that the options specified by this completion must have an option argument, i.e. may not be followed by another option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81842db0dafba32433d118d4b2241cd5569e3c06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--require-parameter&lt;/code&gt; says that this completion must have an option argument, i.e. may not be followed by another option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f95ae7147f6912429c85c01ead4a80a1e6c1c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--require-parameter&lt;/code&gt; specifies that the options specified by this completion always must have an option argument, i.e. may not be followed by another option.</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; o &lt;code&gt;--require-parameter&lt;/code&gt; especifica que las opciones especificadas por esta terminaci&amp;oacute;n deben tener siempre un argumento opci&amp;oacute;n, es decir, puede no ser seguida por otra opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7b321b0dfad67599c5134163bf1ae216773472fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--required-val&lt;/code&gt; means the option being defined requires a value. If the option is seen more than once when parsing arguments only the last value seen is saved. This means the resulting flag variable created by &lt;code&gt;argparse&lt;/code&gt; will have exactly one element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f76f6d28ff78a9ef738a079d524c1009da2fe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--required&lt;/code&gt; means the option being defined requires a value. If the option is seen more than once when parsing arguments only the last value seen is saved. This means the resulting flag variable created by &lt;code&gt;argparse&lt;/code&gt; will have exactly one element.</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; o &lt;code&gt;--required&lt;/code&gt; medios la opci&amp;oacute;n que se define requiere un valor. Si la opci&amp;oacute;n se ve m&amp;aacute;s de una vez al analizar argumentos, solo se guarda el &amp;uacute;ltimo valor visto. Esto significa que la variable de bandera resultante creada por &lt;code&gt;argparse&lt;/code&gt; tendr&amp;aacute; exactamente un elemento.</target>
        </trans-unit>
        <trans-unit id="0b182b5cb0c2eec417d9122bac97697f781a0dc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt;, &lt;code&gt;--reverse&lt;/code&gt; sets reverse mode.</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;--reverse&lt;/code&gt; establece el modo inverso.</target>
        </trans-unit>
        <trans-unit id="a8b020088431f2697bf9d981931860bd40f8f9b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s FILE&lt;/code&gt; returns true if the size of &lt;code&gt;FILE&lt;/code&gt; is greater than zero.</source>
          <target state="translated">&lt;code&gt;-s FILE&lt;/code&gt; devuelve verdadero si el tama&amp;ntilde;o de &lt;code&gt;FILE&lt;/code&gt; es mayor que cero.</target>
        </trans-unit>
        <trans-unit id="4760f581e30841a75368b8414c415a1e63aa89d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s SHORT_OPTION&lt;/code&gt; or &lt;code&gt;--short-option=SHORT_OPTION&lt;/code&gt; adds a short option to the completions list.</source>
          <target state="translated">&lt;code&gt;-s SHORT_OPTION&lt;/code&gt; o &lt;code&gt;--short-option=SHORT_OPTION&lt;/code&gt; agrega una opci&amp;oacute;n corta a la lista de finalizaciones.</target>
        </trans-unit>
        <trans-unit id="26217bbbf2ac6f7359a6d4cd6ff9f88b5850fa42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--current-selection&lt;/code&gt; selects the current selection</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; o &lt;code&gt;--current-selection&lt;/code&gt; selecciona la selecci&amp;oacute;n actual</target>
        </trans-unit>
        <trans-unit id="aa89718f5f88481e28a56bc2aead0b89d8b25da2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--no-symlinks&lt;/code&gt;: Don't resolve symlinks, only make paths absolute, squash multiple slashes and remove trailing slashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5184b9a7029c501feb328f026e6186dd75f1aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--on-signal SIGSPEC&lt;/code&gt; tells fish to run this function when the signal SIGSPEC is delivered. SIGSPEC can be a signal number, or the signal name, such as SIGHUP (or just HUP).</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; o &lt;code&gt;--on-signal SIGSPEC&lt;/code&gt; le dice a Fish que ejecute esta funci&amp;oacute;n cuando se env&amp;iacute;a la se&amp;ntilde;al SIGSPEC. SIGSPEC puede ser un n&amp;uacute;mero de se&amp;ntilde;al o el nombre de la se&amp;ntilde;al, como SIGHUP (o simplemente HUP).</target>
        </trans-unit>
        <trans-unit id="d320e2cb2e0370571660b98b14e550d187976532" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--save&lt;/code&gt; Automatically save the function after successfully editing it.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; o &lt;code&gt;--save&lt;/code&gt; Guarda autom&amp;aacute;ticamente la funci&amp;oacute;n despu&amp;eacute;s de editarla correctamente.</target>
        </trans-unit>
        <trans-unit id="8ebe9ed54b1aaf6766a7b9f91f37c0933b63858a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--save&lt;/code&gt; Automatically save the function created by the alias into your fish configuration directory using &lt;a href=&quot;#funcsave&quot;&gt;funcsave&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; o &lt;code&gt;--save&lt;/code&gt; Guarda autom&amp;aacute;ticamente la funci&amp;oacute;n creada por el alias en su directorio de configuraci&amp;oacute;n de peces usando &lt;a href=&quot;#funcsave&quot;&gt;funcsave&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="561068a7ca09fa0a1df513046b335de251718bb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--save&lt;/code&gt; Automatically save the function created by the alias into your fish configuration directory using &lt;a href=&quot;funcsave#cmd-funcsave&quot;&gt;funcsave&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f6831898a232925539b5651976c7ffd3af270e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--search&lt;/code&gt; returns the name of the external command that would be executed, or nothing if no file with the specified name could be found in the &lt;code&gt;$PATH&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; o &lt;code&gt;--search&lt;/code&gt; devuelve el nombre del comando externo que se ejecutar&amp;iacute;a, o nada si no se pudiera encontrar ning&amp;uacute;n archivo con el nombre especificado en &lt;code&gt;$PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="afa77404cd23192bad1a78de752f72d61beea307" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--short&lt;/code&gt; suppresses function expansion when used with no options or with &lt;code&gt;-a&lt;/code&gt;/&lt;code&gt;--all&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b077c611c5151a2c34a0ba41ec775beef37511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--short&lt;/code&gt; takes a single letter that is used as the short flag in the option being defined. This option is mandatory.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; o &lt;code&gt;--short&lt;/code&gt; toma una sola letra que se usa como bandera corta en la opci&amp;oacute;n que se define. Esta opci&amp;oacute;n es obligatoria.</target>
        </trans-unit>
        <trans-unit id="d58f7373f7a8171fbd3f3a46aa910610bef62834" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--show&lt;/code&gt; Show all abbreviations in a manner suitable for export and import.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; o &lt;code&gt;--show&lt;/code&gt; Muestra todas las abreviaturas de una manera adecuada para exportar e importar.</target>
        </trans-unit>
        <trans-unit id="da723e7463f58abbb58d5d72a42bea99efea7a2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--silent&lt;/code&gt; masks characters written to the terminal, replacing them with asterisks. This is useful for reading things like passwords or other sensitive information.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; o &lt;code&gt;--silent&lt;/code&gt; enmascara los caracteres escritos en la terminal, reemplaz&amp;aacute;ndolos con asteriscos. Esto es &amp;uacute;til para leer cosas como contrase&amp;ntilde;as u otra informaci&amp;oacute;n confidencial.</target>
        </trans-unit>
        <trans-unit id="bc8f2201bb25d6534d7b0bddef06fe6c1859a1f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--stack-size&lt;/code&gt;: the maximum stack size.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; o &lt;code&gt;--stack-size&lt;/code&gt; : el tama&amp;ntilde;o m&amp;aacute;ximo de pila.</target>
        </trans-unit>
        <trans-unit id="19f06c1d81536412275d8d748ff5295374f39426" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--stop-nonopt&lt;/code&gt; causes scanning the arguments to stop as soon as the first non-option argument is seen. Among other things, this is useful to implement subcommands that have their own options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93afc3b795c95b365d4cc29290ee39e49b296180" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--stop-nonopt&lt;/code&gt; causes scanning the arguments to stop as soon as the first non-option argument is seen. Using this arg is equivalent to calling the C function &lt;code&gt;getopt_long()&lt;/code&gt; with the short options starting with a &lt;code&gt;+&lt;/code&gt; symbol. This is sometimes known as &quot;POSIXLY CORRECT&quot;. If this flag is not used then arguments are reordered (i.e., permuted) so that all non-option arguments are moved after option arguments. This mode has several uses but the main one is to implement a command that has subcommands.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; o &lt;code&gt;--stop-nonopt&lt;/code&gt; hace que el an&amp;aacute;lisis de los argumentos se detenga tan pronto como se vea el primer argumento sin opci&amp;oacute;n. Usar este argumento es equivalente a llamar a la funci&amp;oacute;n C &lt;code&gt;getopt_long()&lt;/code&gt; con las opciones cortas que comienzan con un s&amp;iacute;mbolo &lt;code&gt;+&lt;/code&gt; . Esto a veces se conoce como &quot;POSIXLY CORRECT&quot;. Si no se utiliza esta bandera, los argumentos se reordenan (es decir, se permutan) de modo que todos los argumentos que no son de opci&amp;oacute;n se mueven despu&amp;eacute;s de los argumentos de opci&amp;oacute;n. Este modo tiene varios usos, pero el principal es implementar un comando que tiene subcomandos.</target>
        </trans-unit>
        <trans-unit id="9a1e8012d324d1b57b5c8ab0e70cf005ec8caa29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--suffix&lt;/code&gt; will append SUFFIX to the filename.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; o &lt;code&gt;--suffix&lt;/code&gt; agregar&amp;aacute;n SUFIJO al nombre del archivo.</target>
        </trans-unit>
        <trans-unit id="e581bd7700932f6b2e60f5aef3d1b090204498ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt;, Do not separate arguments with spaces</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; , no separa argumentos con espacios</target>
        </trans-unit>
        <trans-unit id="c31c24abab9191e7795b4292c86e91fb89835a52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-sN&lt;/code&gt; or &lt;code&gt;--scale=N&lt;/code&gt; sets the scale of the result. &lt;code&gt;N&lt;/code&gt; must be an integer or the word &quot;max&quot; for the maximum scale. A scale of zero causes results to be rounded down to the nearest integer. So &lt;code&gt;3/2&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt; rather than &lt;code&gt;2&lt;/code&gt; which &lt;code&gt;1.5&lt;/code&gt; would normally round to. This is for compatibility with &lt;code&gt;bc&lt;/code&gt; which was the basis for this command prior to fish 3.0.0. Scale values greater than zero causes the result to be rounded using the usual rules to the specified number of decimal places.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1fa3b961cc8ca2f67d014afbdc58fdb09ce7cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-sN&lt;/code&gt; or &lt;code&gt;--scale=N&lt;/code&gt; sets the scale of the result. &lt;code&gt;N&lt;/code&gt; must be an integer. A scale of zero causes results to be rounded down to the nearest integer. So &lt;code&gt;3/2&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt; rather than &lt;code&gt;2&lt;/code&gt; which &lt;code&gt;1.5&lt;/code&gt; would normally round to. This is for compatibility with &lt;code&gt;bc&lt;/code&gt; which was the basis for this command prior to fish 3.0.0. Scale values greater than zero causes the result to be rounded using the usual rules to the specified number of decimal places.</source>
          <target state="translated">&lt;code&gt;-sN&lt;/code&gt; o &lt;code&gt;--scale=N&lt;/code&gt; establece la escala del resultado. &lt;code&gt;N&lt;/code&gt; debe ser un n&amp;uacute;mero entero. Una escala de cero hace que los resultados se redondeen al n&amp;uacute;mero entero m&amp;aacute;s cercano. Entonces &lt;code&gt;3/2&lt;/code&gt; devuelve &lt;code&gt;1&lt;/code&gt; en lugar de &lt;code&gt;2&lt;/code&gt; ,al que normalmente se redondear&amp;iacute;a &lt;code&gt;1.5&lt;/code&gt; . Esto es por compatibilidad con &lt;code&gt;bc&lt;/code&gt; , que era la base de este comando antes de Fish 3.0.0. Los valores de escala mayores que cero hacen que el resultado se redondee utilizando las reglas habituales al n&amp;uacute;mero especificado de posiciones decimales.</target>
        </trans-unit>
        <trans-unit id="6bb6514e884c0df6e9a2c91c0612c928a5a02af1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t FD&lt;/code&gt; returns true if the file descriptor &lt;code&gt;FD&lt;/code&gt; is a terminal (TTY).</source>
          <target state="translated">&lt;code&gt;-t FD&lt;/code&gt; devuelve verdadero si el descriptor de archivo &lt;code&gt;FD&lt;/code&gt; es un terminal (TTY).</target>
        </trans-unit>
        <trans-unit id="aafddf7ea8a4ea3e0dedf9da879a890d53893210" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t&lt;/code&gt; -or &lt;code&gt;--tokenize&lt;/code&gt; causes read to split the input into variables by the shell's tokenization rules. This means it will honor quotes and escaping. This option is of course incompatible with other options to control splitting like &lt;code&gt;--delimiter&lt;/code&gt; and does not honor $IFS (like fish's tokenizer). It saves the tokens in the manner they'd be passed to commands on the commandline, so e.g. &lt;code&gt;a\ b&lt;/code&gt; is stored as &lt;code&gt;a b&lt;/code&gt;. Note that currently it leaves command substitutions intact along with the parentheses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424b82ab03b58f16e4e40dd40db8aa79bd8bc68f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--cpu-time&lt;/code&gt;: the maximum amount of CPU time in seconds.</source>
          <target state="translated">&lt;code&gt;-t&lt;/code&gt; o &lt;code&gt;--cpu-time&lt;/code&gt; : la cantidad m&amp;aacute;xima de tiempo de CPU en segundos.</target>
        </trans-unit>
        <trans-unit id="d8c678dbf84ee2fe2eca910c33a123f68bb9e122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--current-token&lt;/code&gt; select the current token</source>
          <target state="translated">&lt;code&gt;-t&lt;/code&gt; o &lt;code&gt;--current-token&lt;/code&gt; seleccionar el s&amp;iacute;mbolo actual</target>
        </trans-unit>
        <trans-unit id="6850094885cf7102d51f8fb0c5a746e2be63915a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--handlers-type TYPE&lt;/code&gt; will show all event handlers matching the given type</source>
          <target state="translated">&lt;code&gt;-t&lt;/code&gt; o &lt;code&gt;--handlers-type TYPE&lt;/code&gt; mostrar&amp;aacute; todos los controladores de eventos que coincidan con el tipo dado</target>
        </trans-unit>
        <trans-unit id="8f4c0d1821274b9a641d49c9216f1cd24e2958d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--show-time&lt;/code&gt; prepends each history entry with the date and time the entry was recorded. By default it uses the strftime format &lt;code&gt;# %c%n&lt;/code&gt;. You can specify another format; e.g., &lt;code&gt;--show-time=&quot;%Y-%m-%d %H:%M:%S &quot;&lt;/code&gt; or &lt;code&gt;--show-time=&quot;%a%I%p&quot;&lt;/code&gt;. The short option, &lt;code&gt;-t&lt;/code&gt;, doesn't accept a strftime format string; it only uses the default format. Any strftime format is allowed, including &lt;code&gt;%s&lt;/code&gt; to get the raw UNIX seconds since the epoch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af40344ed96067ce6f9db61754fe50563bc7ab04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--show-time&lt;/code&gt; prepends each history entry with the date and time the entry was recorded. By default it uses the strftime format &lt;code&gt;# cn&lt;/code&gt;. You can specify another format; e.g., &lt;code&gt;--show-time=&quot;%Y-%m-%d %H:%M:%S &quot;&lt;/code&gt; or &lt;code&gt;--show-time=&quot;%a%I%p&quot;&lt;/code&gt;. The short option, &lt;code&gt;-t&lt;/code&gt;, doesn't accept a strftime format string; it only uses the default format. Any strftime format is allowed, including &lt;code&gt;s&lt;/code&gt; to get the raw UNIX seconds since the epoch.</source>
          <target state="translated">&lt;code&gt;-t&lt;/code&gt; o &lt;code&gt;--show-time&lt;/code&gt; antepone cada entrada de la historia con la fecha y hora de la entrada se registr&amp;oacute;. Por defecto usa el formato strftime &lt;code&gt;# cn&lt;/code&gt; . Puede especificar otro formato; por ejemplo, &lt;code&gt;--show-time=&quot;%Y-%m-%d %H:%M:%S &quot;&lt;/code&gt; o &lt;code&gt;--show-time=&quot;%a%I%p&quot;&lt;/code&gt; . La opci&amp;oacute;n corta, &lt;code&gt;-t&lt;/code&gt; , no acepta una cadena de formato strftime; solo usa el formato predeterminado. Se permite cualquier formato de strftime, incluidos &lt;code&gt;s&lt;/code&gt; para obtener los segundos UNIX sin procesar desde la &amp;eacute;poca.</target>
        </trans-unit>
        <trans-unit id="467e785a2b44ff8878eb831a86e1f83069816283" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--type&lt;/code&gt; prints &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;builtin&lt;/code&gt;, or &lt;code&gt;file&lt;/code&gt; if &lt;code&gt;NAME&lt;/code&gt; is a shell function, builtin, or disk file, respectively.</source>
          <target state="translated">&lt;code&gt;-t&lt;/code&gt; o &lt;code&gt;--type&lt;/code&gt; imprime la &lt;code&gt;function&lt;/code&gt; , &lt;code&gt;builtin&lt;/code&gt; o &lt;code&gt;file&lt;/code&gt; si &lt;code&gt;NAME&lt;/code&gt; es una funci&amp;oacute;n de shell, incorporado o archivo de disco, respectivamente.</target>
        </trans-unit>
        <trans-unit id="bba79fd23349f2a2912ea0a00a75a56576680a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-u FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; has the set-user-ID bit set.</source>
          <target state="translated">&lt;code&gt;-u FILE&lt;/code&gt; devuelve verdadero si &lt;code&gt;FILE&lt;/code&gt; tiene el bit set-user-ID establecido.</target>
        </trans-unit>
        <trans-unit id="4497b496eb3e26cc3d08c52411bb6a5ba1f971f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-u&lt;/code&gt; and &lt;code&gt;--unauthoritative&lt;/code&gt; no longer do anything and are silently ignored.</source>
          <target state="translated">&lt;code&gt;-u&lt;/code&gt; y &lt;code&gt;--unauthoritative&lt;/code&gt; ya no hacen nada y se ignoran en silencio.</target>
        </trans-unit>
        <trans-unit id="14cbe5ede9e92f605c21f8ee30eef81d1e4cc3e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-u&lt;/code&gt; or &lt;code&gt;--process-count&lt;/code&gt;: the maximum number of processes available to a single user.</source>
          <target state="translated">&lt;code&gt;-u&lt;/code&gt; o &lt;code&gt;--process-count&lt;/code&gt; : el n&amp;uacute;mero m&amp;aacute;ximo de procesos disponibles para un solo usuario.</target>
        </trans-unit>
        <trans-unit id="1c831e4bcbef6d56c989987a5670ee66456e7aa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-u&lt;/code&gt; or &lt;code&gt;--unexport&lt;/code&gt; causes the specified shell variable to NOT be exported to child processes</source>
          <target state="translated">&lt;code&gt;-u&lt;/code&gt; o &lt;code&gt;--unexport&lt;/code&gt; hace que la variable de shell especificada NO se exporte a procesos secundarios</target>
        </trans-unit>
        <trans-unit id="6a35ecff0bb2a63c41a979b1262c37e9b56c7319" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-u&lt;/code&gt; or &lt;code&gt;--unexport&lt;/code&gt; prevents the variables from being exported to child processes (default behaviour).</source>
          <target state="translated">&lt;code&gt;-u&lt;/code&gt; o &lt;code&gt;--unexport&lt;/code&gt; evita que las variables se exporten a procesos secundarios (comportamiento predeterminado).</target>
        </trans-unit>
        <trans-unit id="edb99d533bb54e8250ac45157fb864288fa88680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-u&lt;/code&gt;, &lt;code&gt;--underline&lt;/code&gt; sets underlined mode.</source>
          <target state="translated">&lt;code&gt;-u&lt;/code&gt; , &lt;code&gt;--underline&lt;/code&gt; establece el modo subrayado.</target>
        </trans-unit>
        <trans-unit id="cd8120b86495d1ca430c3eda5baf4118db1e5caf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--on-variable VARIABLE_NAME&lt;/code&gt; tells fish to run this function when the variable VARIABLE_NAME changes value.</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; o &lt;code&gt;--on-variable VARIABLE_NAME&lt;/code&gt; le dice a Fish que ejecute esta funci&amp;oacute;n cuando la variable VARIABLE_NAME cambia de valor.</target>
        </trans-unit>
        <trans-unit id="5c1d5befb6eca3b5ed88c16fd43542444e252146" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--on-variable VARIABLE_NAME&lt;/code&gt; tells fish to run this function when the variable VARIABLE_NAME changes value. Note that the function will not necessarily be run for each change; rather, it will be run when the variable has changed at least once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72064030f015b00f7286643b09eb4284d3179e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--verbose&lt;/code&gt; means to print the &lt;a href=&quot;set#cmd-set&quot;&gt;set&lt;/a&gt; command used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e39111a020c06e6d5b7063c6cef8461b2801bd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--verbose&lt;/code&gt; will make some output more verbose.</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; o &lt;code&gt;--verbose&lt;/code&gt; har&amp;aacute; que la salida sea m&amp;aacute;s detallada.</target>
        </trans-unit>
        <trans-unit id="2467d88143d7f2e51821170f0f5adb1d2b897b91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--version&lt;/code&gt; display version and exit</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; o &lt;code&gt;--version&lt;/code&gt; muestra la versi&amp;oacute;n y sale</target>
        </trans-unit>
        <trans-unit id="ce21cd78ddd71cb1d2a2bb7da53ca548ac307ff4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--version&lt;/code&gt; displays the current fish version and then exits.</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; o &lt;code&gt;--version&lt;/code&gt; muestra la versi&amp;oacute;n actual de Fish y luego sale.</target>
        </trans-unit>
        <trans-unit id="3fdfffd50051506bc9ada9b496552dab7a38ac04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--version&lt;/code&gt; prints fish_key_reader's version and exits.</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; o &lt;code&gt;--version&lt;/code&gt; imprime la versi&amp;oacute;n de fish_key_reader y sale.</target>
        </trans-unit>
        <trans-unit id="eb16969b8b4aa593d4bbb08bef62152b4d6a6b4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--virtual-memory-size&lt;/code&gt; The maximum amount of virtual memory available to the shell.</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; o &lt;code&gt;--virtual-memory-size&lt;/code&gt; La cantidad m&amp;aacute;xima de memoria virtual disponible para el shell.</target>
        </trans-unit>
        <trans-unit id="7d51f6c083dc58ffa832e02844e9f045854ff278" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is marked as writable; note that this does not check if the filesystem is read-only.</source>
          <target state="translated">&lt;code&gt;-w FILE&lt;/code&gt; devuelve verdadero si &lt;code&gt;FILE&lt;/code&gt; est&amp;aacute; marcado como grabable; tenga en cuenta que esto no comprueba si el sistema de archivos es de solo lectura.</target>
        </trans-unit>
        <trans-unit id="a1ca8a6e40a28a6d549d958558d70461fb9f00bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w WRAPPED_COMMAND&lt;/code&gt; or &lt;code&gt;--wraps=WRAPPED_COMMAND&lt;/code&gt; causes the function to inherit completions from the given wrapped command. See the documentation for &lt;a href=&quot;#complete&quot;&gt;&lt;code&gt;complete&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;-w WRAPPED_COMMAND&lt;/code&gt; o &lt;code&gt;--wraps=WRAPPED_COMMAND&lt;/code&gt; hace que la funci&amp;oacute;n herede las finalizaciones del comando envuelto dado. Consulte la documentaci&amp;oacute;n &lt;a href=&quot;#complete&quot;&gt; &lt;code&gt;complete&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="037182c27c3c61d902c08d4df48d2e7c777457f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w WRAPPED_COMMAND&lt;/code&gt; or &lt;code&gt;--wraps=WRAPPED_COMMAND&lt;/code&gt; causes the function to inherit completions from the given wrapped command. See the documentation for &lt;a href=&quot;complete#cmd-complete&quot;&gt;complete&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb87f12cc34b53e2a50b347498983487008d53a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w WRAPPED_COMMAND&lt;/code&gt; or &lt;code&gt;--wraps=WRAPPED_COMMAND&lt;/code&gt; causes the specified command to inherit completions from the wrapped command (See below for details).</source>
          <target state="translated">&lt;code&gt;-w WRAPPED_COMMAND&lt;/code&gt; o &lt;code&gt;--wraps=WRAPPED_COMMAND&lt;/code&gt; hace que el comando especificado herede las finalizaciones del comando envuelto (consulte los detalles a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="a6a6a36af05a5b383ba2f8eec0ada74daac228cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w&lt;/code&gt; or &lt;code&gt;--write&lt;/code&gt; indents a specified file and immediately writes to that file.</source>
          <target state="translated">&lt;code&gt;-w&lt;/code&gt; o &lt;code&gt;--write&lt;/code&gt; sangra un archivo especificado e inmediatamente escribe en ese archivo.</target>
        </trans-unit>
        <trans-unit id="a0b89cfd5caf604ea310a3d346b6727ab3005f59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-x FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is marked as executable.</source>
          <target state="translated">&lt;code&gt;-x FILE&lt;/code&gt; devuelve verdadero si &lt;code&gt;FILE&lt;/code&gt; est&amp;aacute; marcado como ejecutable.</target>
        </trans-unit>
        <trans-unit id="9ad67bc354f0805b5127ce53a7304edb40898e02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-x&lt;/code&gt; or &lt;code&gt;--exclusive&lt;/code&gt; implies both &lt;code&gt;-r&lt;/code&gt; and &lt;code&gt;-f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-x&lt;/code&gt; o &lt;code&gt;--exclusive&lt;/code&gt; implica tanto &lt;code&gt;-r&lt;/code&gt; como &lt;code&gt;-f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1493ffeee797927dd8c9e0bd13baf8bf411d8154" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-x&lt;/code&gt; or &lt;code&gt;--exclusive&lt;/code&gt; is short for &lt;code&gt;-r&lt;/code&gt; and &lt;code&gt;-f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb899108bc682200097254064632437d4b231396" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-x&lt;/code&gt; or &lt;code&gt;--exclusive&lt;/code&gt; should be followed by a comma separated list of short of long options that are mutually exclusive. You can use this option more than once to define multiple sets of mutually exclusive options.</source>
          <target state="translated">&lt;code&gt;-x&lt;/code&gt; o &lt;code&gt;--exclusive&lt;/code&gt; debe ser seguido por una coma lista de corta de las opciones largas que se excluyen mutuamente separados. Puede utilizar esta opci&amp;oacute;n m&amp;aacute;s de una vez para definir varios conjuntos de opciones mutuamente excluyentes.</target>
        </trans-unit>
        <trans-unit id="497132bd207c96915d60e284504968378231d236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-x&lt;/code&gt; or &lt;code&gt;--exclusive&lt;/code&gt; should be followed by a comma separated list of short or long options that are mutually exclusive. You can use this more than once to define multiple sets of mutually exclusive options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13538c702a33ba0ecd18345c2d280a684c3af80a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-x&lt;/code&gt; or &lt;code&gt;--export&lt;/code&gt; causes the specified shell variable to be exported to child processes (making it an &quot;environment variable&quot;)</source>
          <target state="translated">&lt;code&gt;-x&lt;/code&gt; o &lt;code&gt;--export&lt;/code&gt; hace que la variable de shell especificado para ser exportado a procesos secundarios (lo que es una &quot;variable de entorno&quot;)</target>
        </trans-unit>
        <trans-unit id="53be835e40905bc5185c4a21ccc84594f0beabfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-x&lt;/code&gt; or &lt;code&gt;--export&lt;/code&gt; exports the variables to child processes.</source>
          <target state="translated">&lt;code&gt;-x&lt;/code&gt; o &lt;code&gt;--export&lt;/code&gt; exportaciones las variables a procesos secundarios.</target>
        </trans-unit>
        <trans-unit id="e1b67217bfe1b8405d8115e575e6426ba466fd97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-z STRING&lt;/code&gt; returns true if the length of &lt;code&gt;STRING&lt;/code&gt; is zero.</source>
          <target state="translated">&lt;code&gt;-z STRING&lt;/code&gt; devuelve verdadero si la longitud de &lt;code&gt;STRING&lt;/code&gt; es cero.</target>
        </trans-unit>
        <trans-unit id="e8d9f13c4a778004ae15d3b908e9364ea5e503e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-z&lt;/code&gt; or &lt;code&gt;--null&lt;/code&gt; causes history entries written by the search operations to be terminated by a NUL character rather than a newline. This allows the output to be processed by &lt;code&gt;read -z&lt;/code&gt; to correctly handle multiline history entries.</source>
          <target state="translated">&lt;code&gt;-z&lt;/code&gt; o &lt;code&gt;--null&lt;/code&gt; hace que las entradas del historial escritas por las operaciones de b&amp;uacute;squeda terminen con un car&amp;aacute;cter NUL en lugar de una nueva l&amp;iacute;nea. Esto permite que la salida sea procesada por &lt;code&gt;read -z&lt;/code&gt; para manejar correctamente las entradas del historial de varias l&amp;iacute;neas.</target>
        </trans-unit>
        <trans-unit id="cc10f07bcacc5b98d913c85ba62a3348ec075b9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-z&lt;/code&gt; or &lt;code&gt;--null&lt;/code&gt; marks the end of the line with the NUL character, instead of newline. This also disables interactive mode.</source>
          <target state="translated">&lt;code&gt;-z&lt;/code&gt; o &lt;code&gt;--null&lt;/code&gt; marca el final de la l&amp;iacute;nea con el car&amp;aacute;cter NUL, en lugar de nueva l&amp;iacute;nea. Esto tambi&amp;eacute;n desactiva el modo interactivo.</target>
        </trans-unit>
        <trans-unit id="dd2638140e8e4dda50ed4e35bb66502b67eda35b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.&lt;/code&gt; (a single period) is an alias for the &lt;code&gt;source&lt;/code&gt; command. The use of &lt;code&gt;.&lt;/code&gt; is deprecated in favour of &lt;code&gt;source&lt;/code&gt;, and &lt;code&gt;.&lt;/code&gt; will be removed in a future version of fish.</source>
          <target state="translated">&lt;code&gt;.&lt;/code&gt; (un solo punto) es un alias para el comando de &lt;code&gt;source&lt;/code&gt; . El uso de &lt;code&gt;.&lt;/code&gt; est&amp;aacute; en desuso en favor de la &lt;code&gt;source&lt;/code&gt; , y &lt;code&gt;.&lt;/code&gt; se eliminar&amp;aacute; en una versi&amp;oacute;n futura de fish.</target>
        </trans-unit>
        <trans-unit id="0533ba782906e2b830078d3b507ee91998db9488" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.&lt;/code&gt; any character except newline</source>
          <target state="translated">&lt;code&gt;.&lt;/code&gt; cualquier car&amp;aacute;cter excepto nueva l&amp;iacute;nea</target>
        </trans-unit>
        <trans-unit id="51164dd7a5009a2a2bc932fc73d662671a1824d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/usr/share/fish/vendor_conf.d&lt;/code&gt; (set at compile time; by default, &lt;code&gt;$__fish_data_dir/conf.d&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;/usr/share/fish/vendor_conf.d&lt;/code&gt; (establecido en el momento de la compilaci&amp;oacute;n; de forma predeterminada, &lt;code&gt;$__fish_data_dir/conf.d&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="af97be267f4949a7fd1dad79c939743032d1f763" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=+&lt;/code&gt; if it requires a value and each instance of the flag is saved.</source>
          <target state="translated">&lt;code&gt;=+&lt;/code&gt; si requiere un valor y se guarda cada instancia de la bandera.</target>
        </trans-unit>
        <trans-unit id="4f7f188d592f9c35c114210e44e1862472649d09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt; if it requires a value and only the last instance of the flag is saved, else</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; si requiere un valor y solo se guarda la &amp;uacute;ltima instancia de la bandera, de lo contrario</target>
        </trans-unit>
        <trans-unit id="89ac93325944b97021882e965a2ac1d0ae9ca7a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt; if it requires a value and only the last instance of the flag is saved, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d3382ec2f6c929d6d510d1dc13ebe3e237dba8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=?&lt;/code&gt; it takes an optional value and only the last instance of the flag is saved, else</source>
          <target state="translated">&lt;code&gt;=?&lt;/code&gt; toma un valor opcional y solo se guarda la &amp;uacute;ltima instancia de la bandera, de lo contrario</target>
        </trans-unit>
        <trans-unit id="446643cb322c834a8d89c715d1babcdecd761264" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=?&lt;/code&gt; it takes an optional value and only the last instance of the flag is saved, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40a6355c491e1966b3f7fdf8a2bb557d74a5897" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; 0 or 1.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; 0 o 1.</target>
        </trans-unit>
        <trans-unit id="465577a87d8a708e8820ba32b51f849f4ae462a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; can match any single character except '/'.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; puede coincidir con cualquier car&amp;aacute;cter excepto '/'.</target>
        </trans-unit>
        <trans-unit id="ea6ba535df2e5fd6dbcb17c1351c8d559b3f31e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; can match any single character except '/'. This is deprecated and can be disabled via the &lt;code&gt;qmark-noglob&lt;/code&gt;&lt;a href=&quot;#featureflags&quot;&gt;feature flag&lt;/a&gt;, so &lt;code&gt;?&lt;/code&gt; will just be an ordinary character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f03304a42e15e7d98a0bd4cc1020a09c694f13d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; can match any single character except &lt;code&gt;/&lt;/code&gt;. This is deprecated and can be disabled via the &lt;code&gt;qmark-noglob&lt;/code&gt;&lt;a href=&quot;#featureflags&quot;&gt;feature flag&lt;/a&gt;, so &lt;code&gt;?&lt;/code&gt; will just be an ordinary character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c55fe66d17c22da05662e21f3958a65c5dc1e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;???&lt;/code&gt; matches any file in the current directory whose name is exactly three characters long.</source>
          <target state="translated">&lt;code&gt;???&lt;/code&gt; coincide con cualquier archivo del directorio actual cuyo nombre tenga exactamente tres caracteres.</target>
        </trans-unit>
        <trans-unit id="dc959c1e30d0776e44fe75c3006269b55ec6df84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ARG&lt;/code&gt; is the command to be executed on signal delivery.</source>
          <target state="translated">&lt;code&gt;ARG&lt;/code&gt; es el comando que se ejecutar&amp;aacute; al recibir la se&amp;ntilde;al.</target>
        </trans-unit>
        <trans-unit id="40a614b7d9b6f8fb731b69ae5ac30538eb37e807" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BROWSER&lt;/code&gt;, the user's preferred web browser. If this variable is set, fish will use the specified browser instead of the system default browser to display the fish documentation.</source>
          <target state="translated">&lt;code&gt;BROWSER&lt;/code&gt; , el navegador web preferido del usuario. Si se establece esta variable, Fish utilizar&amp;aacute; el navegador especificado en lugar del navegador predeterminado del sistema para mostrar la documentaci&amp;oacute;n de Fish.</target>
        </trans-unit>
        <trans-unit id="fd97349d0928d3249852fe260a4661197f49f949" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BROWSER&lt;/code&gt;, your preferred web browser. If this variable is set, fish will use the specified browser instead of the system default browser to display the fish documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d5f8590044c9650637ec3f3159012ea38b96c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CDPATH&lt;/code&gt;, a list of directories in which the &lt;a href=&quot;cmds/cd#cmd-cd&quot;&gt;cd&lt;/a&gt; builtin looks for a new directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f6128649d2e370a3083b25cf2dcb857377ff37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CDPATH&lt;/code&gt;, a list of directories in which to search for the new directory for the &lt;code&gt;cd&lt;/code&gt; builtin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e17c61f89ab2ecd3a5f7ef82311ac9816c44a43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CDPATH&lt;/code&gt;, an array of directories in which to search for the new directory for the &lt;code&gt;cd&lt;/code&gt; builtin.</source>
          <target state="translated">&lt;code&gt;CDPATH&lt;/code&gt; , una matriz de directorios en los que buscar el nuevo directorio para el &lt;code&gt;cd&lt;/code&gt; incorporado.</target>
        </trans-unit>
        <trans-unit id="2fad4d28cf53acc55c1fa68d6174fb994fcb6a00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMD_DURATION&lt;/code&gt;, the runtime of the last command in milliseconds.</source>
          <target state="translated">&lt;code&gt;CMD_DURATION&lt;/code&gt; , el tiempo de ejecuci&amp;oacute;n del &amp;uacute;ltimo comando en milisegundos.</target>
        </trans-unit>
        <trans-unit id="feddeddfc653ec360674759eebf3d08eb24c2757" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COLUMNS&lt;/code&gt; and &lt;code&gt;LINES&lt;/code&gt;, the current size of the terminal in height and width. These values are only used by fish if the operating system does not report the size of the terminal. Both variables must be set in that case otherwise a default of 80x24 will be used. They are updated when the window size changes.</source>
          <target state="translated">&lt;code&gt;COLUMNS&lt;/code&gt; y &lt;code&gt;LINES&lt;/code&gt; , el tama&amp;ntilde;o actual de la terminal en altura y ancho. Estos valores solo los usa Fish si el sistema operativo no informa el tama&amp;ntilde;o del terminal. En ese caso, se deben configurar ambas variables, de lo contrario se utilizar&amp;aacute; un valor predeterminado de 80x24. Se actualizan cuando cambia el tama&amp;ntilde;o de la ventana.</target>
        </trans-unit>
        <trans-unit id="5845ca23e1bd3c7828b27c889ffc5514e79f64d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMMAND&lt;/code&gt; can be any fish command, but it can also be one of a set of special input functions. These include functions for moving the cursor, operating on the kill-ring, performing tab completion, etc. Use &lt;code&gt;bind --function-names&lt;/code&gt; for a complete list of these input functions.</source>
          <target state="translated">&lt;code&gt;COMMAND&lt;/code&gt; puede ser cualquier comando de pesca, pero tambi&amp;eacute;n puede ser una de un conjunto de funciones de entrada especiales. &amp;Eacute;stas incluyen funciones para mover el cursor, operar en el kill-ring, completar la tabulaci&amp;oacute;n, etc. Use &lt;code&gt;bind --function-names&lt;/code&gt; para obtener una lista completa de estas funciones de entrada.</target>
        </trans-unit>
        <trans-unit id="e9e9a0e7c091703e51bc02455e71859385803120" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMMAND&lt;/code&gt; is the name of the command for which to add a completion.</source>
          <target state="translated">&lt;code&gt;COMMAND&lt;/code&gt; es el nombre del comando para el que agregar una finalizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="70bca14180f1f5f71e14d272bc1ddc0edb71a05a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COND1 -a COND2&lt;/code&gt; returns true if both &lt;code&gt;COND1&lt;/code&gt; and &lt;code&gt;COND2&lt;/code&gt; are true.</source>
          <target state="translated">&lt;code&gt;COND1 -a COND2&lt;/code&gt; devuelve verdadero si &lt;code&gt;COND1&lt;/code&gt; y &lt;code&gt;COND2&lt;/code&gt; son verdaderos.</target>
        </trans-unit>
        <trans-unit id="bbc30bb3ee02b58268da22000810b57306e18e6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COND1 -o COND2&lt;/code&gt; returns true if either &lt;code&gt;COND1&lt;/code&gt; or &lt;code&gt;COND2&lt;/code&gt; are true.</source>
          <target state="translated">&lt;code&gt;COND1 -o COND2&lt;/code&gt; devuelve verdadero si &lt;code&gt;COND1&lt;/code&gt; o &lt;code&gt;COND2&lt;/code&gt; son verdaderos.</target>
        </trans-unit>
        <trans-unit id="05b3e85dba7eb14bbf6cbd6a6bedd931278e42d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEFINITION&lt;/code&gt; is the actual command to execute. The string &lt;code&gt;$argv&lt;/code&gt; will be appended.</source>
          <target state="translated">&lt;code&gt;DEFINITION&lt;/code&gt; es el comando real a ejecutar. Se agregar&amp;aacute; la cadena &lt;code&gt;$argv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33da87e68be43b3db73e8cda0d3d54a670c92295" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DESCRIPTION&lt;/code&gt; is a description of what the option and/or option arguments do.</source>
          <target state="translated">&lt;code&gt;DESCRIPTION&lt;/code&gt; es una descripci&amp;oacute;n de lo que hacen la opci&amp;oacute;n y / o los argumentos de opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="11dd45455a7d64e5a3fcb7c868fdc05ddeab446d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DESTINATION&lt;/code&gt; can be one of the following:</source>
          <target state="translated">&lt;code&gt;DESTINATION&lt;/code&gt; puede ser uno de los siguientes:</target>
        </trans-unit>
        <trans-unit id="946a1015ede4136b02ba039f30d0c0430fba4c82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILE DESCRIPTOR&lt;/code&gt; may be either the number of a file descriptor, or one of the strings &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, or &lt;code&gt;stderr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FILE DESCRIPTOR&lt;/code&gt; puede ser el n&amp;uacute;mero de un descriptor de archivo o una de las cadenas &lt;code&gt;stdin&lt;/code&gt; , &lt;code&gt;stdout&lt;/code&gt; o &lt;code&gt;stderr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ef693026e42ac21067b92389ff51b543de9c129" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILE DESCRIPTOR&lt;/code&gt; may be either the number of a file descriptor, or one of the strings &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, or &lt;code&gt;stderr&lt;/code&gt;. If not specified, zero is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218b40895617460df01fe9b2800495dbdece4ab2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FISH_DEBUG&lt;/code&gt; and &lt;code&gt;FISH_DEBUG_OUTPUT&lt;/code&gt; control what debug output fish generates and where it puts it, analogous to the &lt;code&gt;--debug&lt;/code&gt; and &lt;code&gt;--debug-output&lt;/code&gt; options. These have to be set on startup, via e.g. &lt;code&gt;FISH_DEBUG='reader*' FISH_DEBUG_OUTPUT=/tmp/fishlog fish&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbb62820312a7b40cb17f9cc778a6f3f1b1f8fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOME&lt;/code&gt;, the user's home directory. This variable can be changed by the user.</source>
          <target state="translated">&lt;code&gt;HOME&lt;/code&gt; , el directorio de inicio del usuario. El usuario puede modificar esta variable.</target>
        </trans-unit>
        <trans-unit id="ef564a66cc62b7ec55e55a34ee0d762eff834665" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOME&lt;/code&gt;, the user's home directory. This variable can be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33222dd30f4698d0917e0e3cbfe5b5e91075da9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IFS&lt;/code&gt;, the internal field separator that is used for word splitting with the &lt;a href=&quot;cmds/read#cmd-read&quot;&gt;read&lt;/a&gt; builtin. Setting this to the empty string will also disable line splitting in &lt;a href=&quot;#expand-command-substitution&quot;&gt;command substitution&lt;/a&gt;. This variable can be changed by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c362355b597113c13c22cc213e57281f196d4f9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IFS&lt;/code&gt;, the internal field separator that is used for word splitting with the &lt;a href=&quot;cmds/read#cmd-read&quot;&gt;read&lt;/a&gt; builtin. Setting this to the empty string will also disable line splitting in &lt;a href=&quot;#expand-command-substitution&quot;&gt;command substitution&lt;/a&gt;. This variable can be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdec9da5293d1b36da4b7a9ecd9ae4767249a638" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IFS&lt;/code&gt;, the internal field separator that is used for word splitting with the &lt;a href=&quot;commands#read&quot;&gt;read builtin&lt;/a&gt;. Setting this to the empty string will also disable line splitting in &lt;a href=&quot;#expand-command-substitution&quot;&gt;command substitution&lt;/a&gt;. This variable can be changed by the user.</source>
          <target state="translated">&lt;code&gt;IFS&lt;/code&gt; , el separador de campo interno que se usa para dividir palabras con la &lt;a href=&quot;commands#read&quot;&gt;lectura incorporada&lt;/a&gt; . Establecer esto en la cadena vac&amp;iacute;a tambi&amp;eacute;n deshabilitar&amp;aacute; la divisi&amp;oacute;n de l&amp;iacute;neas en la &lt;a href=&quot;#expand-command-substitution&quot;&gt;sustituci&amp;oacute;n de comandos&lt;/a&gt; . El usuario puede modificar esta variable.</target>
        </trans-unit>
        <trans-unit id="69c233f47f34e613a50386eca6e6da8ee5340e40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LANG&lt;/code&gt;, &lt;code&gt;LC_ALL&lt;/code&gt;, &lt;code&gt;LC_COLLATE&lt;/code&gt;, &lt;code&gt;LC_CTYPE&lt;/code&gt;, &lt;code&gt;LC_MESSAGES&lt;/code&gt;, &lt;code&gt;LC_MONETARY&lt;/code&gt;, &lt;code&gt;LC_NUMERIC&lt;/code&gt; and &lt;code&gt;LC_TIME&lt;/code&gt; set the language option for the shell and subprograms. See the section &lt;a href=&quot;#variables-locale&quot;&gt;Locale variables&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;LANG&lt;/code&gt; , &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_COLLATE&lt;/code&gt; , &lt;code&gt;LC_CTYPE&lt;/code&gt; , &lt;code&gt;LC_MESSAGES&lt;/code&gt; , &lt;code&gt;LC_MONETARY&lt;/code&gt; , &lt;code&gt;LC_NUMERIC&lt;/code&gt; y &lt;code&gt;LC_TIME&lt;/code&gt; establecen la opci&amp;oacute;n de idioma para el shell y los subprogramas. Consulte la secci&amp;oacute;n &lt;a href=&quot;#variables-locale&quot;&gt;Variables de configuraci&amp;oacute;n regional&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="13c5e6de3138e4bd46c6420b38783e3eb8a45d66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LANG&lt;/code&gt;, &lt;code&gt;LC_ALL&lt;/code&gt;, &lt;code&gt;LC_COLLATE&lt;/code&gt;, &lt;code&gt;LC_CTYPE&lt;/code&gt;, &lt;code&gt;LC_MESSAGES&lt;/code&gt;, &lt;code&gt;LC_MONETARY&lt;/code&gt;, &lt;code&gt;LC_NUMERIC&lt;/code&gt; and &lt;code&gt;LC_TIME&lt;/code&gt; set the language option for the shell and subprograms. These variables work as follows: &lt;code&gt;LC_ALL&lt;/code&gt; forces all the aspects of the locale to the specified value. If &lt;code&gt;LC_ALL&lt;/code&gt; is set, all other locale variables will be ignored. The other &lt;code&gt;LC_&lt;/code&gt; variables set the specified aspect of the locale information. &lt;code&gt;LANG&lt;/code&gt; is a fallback value, it will be used if none of the &lt;code&gt;LC_&lt;/code&gt; variables are specified.</source>
          <target state="translated">&lt;code&gt;LANG&lt;/code&gt; , &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_COLLATE&lt;/code&gt; , &lt;code&gt;LC_CTYPE&lt;/code&gt; , &lt;code&gt;LC_MESSAGES&lt;/code&gt; , &lt;code&gt;LC_MONETARY&lt;/code&gt; , &lt;code&gt;LC_NUMERIC&lt;/code&gt; y &lt;code&gt;LC_TIME&lt;/code&gt; establecen la opci&amp;oacute;n de idioma para el shell y los subprogramas. Estas variables funcionan de la siguiente manera: &lt;code&gt;LC_ALL&lt;/code&gt; fuerza todos los aspectos de la configuraci&amp;oacute;n regional al valor especificado. Si se establece &lt;code&gt;LC_ALL&lt;/code&gt; , se ignorar&amp;aacute;n todas las dem&amp;aacute;s variables de configuraci&amp;oacute;n regional. Las otras variables &lt;code&gt;LC_&lt;/code&gt; establecen el aspecto especificado de la informaci&amp;oacute;n de la configuraci&amp;oacute;n regional. &lt;code&gt;LANG&lt;/code&gt; es un valor de reserva, se utilizar&amp;aacute; si no se especifica ninguna de las variables &lt;code&gt;LC_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b97e4977c3f20c542629ae502a6674eca13b3fe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LONG_OPTION&lt;/code&gt; is a multi character option for the command.</source>
          <target state="translated">&lt;code&gt;LONG_OPTION&lt;/code&gt; es una opci&amp;oacute;n de varios caracteres para el comando.</target>
        </trans-unit>
        <trans-unit id="6c0689e83b930d3970d50624130816074dada21e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NAME&lt;/code&gt; is the name of the alias</source>
          <target state="translated">&lt;code&gt;NAME&lt;/code&gt; es el nombre del alias</target>
        </trans-unit>
        <trans-unit id="659dc6cd6dd2afe1ff1173484ae1e0d19f983851" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUM1 -eq NUM2&lt;/code&gt; returns true if &lt;code&gt;NUM1&lt;/code&gt; and &lt;code&gt;NUM2&lt;/code&gt; are numerically equal.</source>
          <target state="translated">&lt;code&gt;NUM1 -eq NUM2&lt;/code&gt; devuelve verdadero si &lt;code&gt;NUM1&lt;/code&gt; y &lt;code&gt;NUM2&lt;/code&gt; son num&amp;eacute;ricamente iguales.</target>
        </trans-unit>
        <trans-unit id="d71e82ba253791bb33eedaf385b23f6417b13124" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUM1 -ge NUM2&lt;/code&gt; returns true if &lt;code&gt;NUM1&lt;/code&gt; is greater than or equal to &lt;code&gt;NUM2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NUM1 -ge NUM2&lt;/code&gt; devuelve verdadero si &lt;code&gt;NUM1&lt;/code&gt; es mayor o igual que &lt;code&gt;NUM2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d9df582d13afb974fbaa29a6848bb816cfaaf5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUM1 -gt NUM2&lt;/code&gt; returns true if &lt;code&gt;NUM1&lt;/code&gt; is greater than &lt;code&gt;NUM2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NUM1 -gt NUM2&lt;/code&gt; devuelve verdadero si &lt;code&gt;NUM1&lt;/code&gt; es mayor que &lt;code&gt;NUM2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a45488a03d4be86a00de61c321e987922dcbc232" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUM1 -le NUM2&lt;/code&gt; returns true if &lt;code&gt;NUM1&lt;/code&gt; is less than or equal to &lt;code&gt;NUM2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NUM1 -le NUM2&lt;/code&gt; devuelve verdadero si &lt;code&gt;NUM1&lt;/code&gt; es menor o igual que &lt;code&gt;NUM2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="883efe5984f83eb0b9eceed4a4aa02562d1fce4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUM1 -lt NUM2&lt;/code&gt; returns true if &lt;code&gt;NUM1&lt;/code&gt; is less than &lt;code&gt;NUM2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NUM1 -lt NUM2&lt;/code&gt; devuelve verdadero si &lt;code&gt;NUM1&lt;/code&gt; es menor que &lt;code&gt;NUM2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d898dea450de1f16ecce0c6618b1a7e0446d0395" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUM1 -ne NUM2&lt;/code&gt; returns true if &lt;code&gt;NUM1&lt;/code&gt; and &lt;code&gt;NUM2&lt;/code&gt; are not numerically equal.</source>
          <target state="translated">&lt;code&gt;NUM1 -ne NUM2&lt;/code&gt; devuelve verdadero si &lt;code&gt;NUM1&lt;/code&gt; y &lt;code&gt;NUM2&lt;/code&gt; no son num&amp;eacute;ricamente iguales.</target>
        </trans-unit>
        <trans-unit id="4a253ae8446d1a268f3a1341108f2b08d2c63f9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPTION_ARGUMENTS&lt;/code&gt; is parameter containing a space-separated list of possible option-arguments, which may contain command substitutions.</source>
          <target state="translated">&lt;code&gt;OPTION_ARGUMENTS&lt;/code&gt; es un par&amp;aacute;metro que contiene una lista separada por espacios de posibles argumentos de opci&amp;oacute;n, que pueden contener sustituciones de comandos.</target>
        </trans-unit>
        <trans-unit id="ddb398b180a70ccb5da1c5636ac2c26f15cf3f8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PATH&lt;/code&gt;, a list of directories in which to search for commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87dfb2e8277680934b9a6f86f250320b8168eef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PATH&lt;/code&gt;, an array of directories in which to search for commands</source>
          <target state="translated">&lt;code&gt;PATH&lt;/code&gt; , una matriz de directorios en los que buscar comandos</target>
        </trans-unit>
        <trans-unit id="c49c841209648cd65be707e3bf951935b3b1c05f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PWD&lt;/code&gt;, the current working directory.</source>
          <target state="translated">&lt;code&gt;PWD&lt;/code&gt; , el directorio de trabajo actual.</target>
        </trans-unit>
        <trans-unit id="0a24602681bd3795f2deb5d011de6b47697c940f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RANDOM&lt;/code&gt; generates a pseudo-random integer from a uniform distribution. The range (inclusive) is dependent on the arguments passed. No arguments indicate a range of [0; 32767]. If one argument is specified, the internal engine will be seeded with the argument for future invocations of &lt;code&gt;RANDOM&lt;/code&gt; and no output will be produced. Two arguments indicate a range of [START; END]. Three arguments indicate a range of [START; END] with a spacing of STEP between possible outputs. &lt;code&gt;RANDOM choice&lt;/code&gt; will select one random item from the succeeding arguments.</source>
          <target state="translated">&lt;code&gt;RANDOM&lt;/code&gt; genera un entero pseudoaleatorio a partir de una distribuci&amp;oacute;n uniforme. El rango (inclusive) depende de los argumentos pasados. Ning&amp;uacute;n argumento indica un rango de [0; 32767]. Si se especifica un argumento, el motor interno se sembrar&amp;aacute; con el argumento para futuras invocaciones de &lt;code&gt;RANDOM&lt;/code&gt; y no se producir&amp;aacute; ninguna salida. Dos argumentos indican un rango de [INICIO; FINAL]. Tres argumentos indican un rango de [INICIO; END] con un espaciado de STEP entre las posibles salidas. &lt;code&gt;RANDOM choice&lt;/code&gt; seleccionar&amp;aacute; un elemento aleatorio de los argumentos siguientes.</target>
        </trans-unit>
        <trans-unit id="850076e736d6b633bb7908034b6ed53ae14a9450" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REASON&lt;/code&gt; is the name of the event to trap. For example, a signal like &lt;code&gt;INT&lt;/code&gt; or &lt;code&gt;SIGINT&lt;/code&gt;, or the special symbol &lt;code&gt;EXIT&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;REASON&lt;/code&gt; es el nombre del evento a atrapar. Por ejemplo, una se&amp;ntilde;al como &lt;code&gt;INT&lt;/code&gt; o &lt;code&gt;SIGINT&lt;/code&gt; , o el s&amp;iacute;mbolo especial &lt;code&gt;EXIT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7eff24684fb34bbcfda3c5886cf362420c8b6183" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHLVL&lt;/code&gt;, the level of nesting of shells</source>
          <target state="translated">&lt;code&gt;SHLVL&lt;/code&gt; , el nivel de anidamiento de conchas</target>
        </trans-unit>
        <trans-unit id="f3349964200be4a474909250a8e8a31c22fc7ead" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHLVL&lt;/code&gt;, the level of nesting of shells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6dda26458a7e786e0fdc20b95c70c42986fb16f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHORT_OPTION&lt;/code&gt; is a one character option for the command.</source>
          <target state="translated">&lt;code&gt;SHORT_OPTION&lt;/code&gt; es una opci&amp;oacute;n de un car&amp;aacute;cter para el comando.</target>
        </trans-unit>
        <trans-unit id="55ab4f2d006264b2269600a905a7bafcd927a1ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STRING1 != STRING2&lt;/code&gt; returns true if the strings &lt;code&gt;STRING1&lt;/code&gt; and &lt;code&gt;STRING2&lt;/code&gt; are not identical.</source>
          <target state="translated">&lt;code&gt;STRING1 != STRING2&lt;/code&gt; devuelve verdadero si las cadenas &lt;code&gt;STRING1&lt;/code&gt; y &lt;code&gt;STRING2&lt;/code&gt; no son id&amp;eacute;nticas.</target>
        </trans-unit>
        <trans-unit id="325310b7bf1a4f1ee82d91ae0d56e98c0381b312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STRING1 = STRING2&lt;/code&gt; returns true if the strings &lt;code&gt;STRING1&lt;/code&gt; and &lt;code&gt;STRING2&lt;/code&gt; are identical.</source>
          <target state="translated">&lt;code&gt;STRING1 = STRING2&lt;/code&gt; devuelve verdadero si las cadenas &lt;code&gt;STRING1&lt;/code&gt; y &lt;code&gt;STRING2&lt;/code&gt; son id&amp;eacute;nticas.</target>
        </trans-unit>
        <trans-unit id="17d48b23b08b6733a4dad496c49bd725fb614158" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;USER&lt;/code&gt;, the current username. This variable can be changed by the user.</source>
          <target state="translated">&lt;code&gt;USER&lt;/code&gt; , el nombre de usuario actual. El usuario puede modificar esta variable.</target>
        </trans-unit>
        <trans-unit id="8c8d3f613679c36c220a29b2a252ec2e7994ddae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;USER&lt;/code&gt;, the current username. This variable can be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855fa1d0829f0f9bfd888ec1644828a43f1e654e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VAR=VAL&lt;/code&gt; statements are available as environment overrides:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7e9efbe25d8fc40d3f07640c4d689284d46a62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[...]&lt;/code&gt; (where &quot;...&quot; is some characters) is a character set</source>
          <target state="translated">&lt;code&gt;[...]&lt;/code&gt; (donde &quot;...&quot; son algunos caracteres) es un conjunto de caracteres</target>
        </trans-unit>
        <trans-unit id="55a7aa43cb8d89475a319f8a8834b9e63d4fb19d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:^xxx:]]&lt;/code&gt; is the inverse of a named character set</source>
          <target state="translated">&lt;code&gt;[[:^xxx:]]&lt;/code&gt; es el inverso de un conjunto de caracteres con nombre</target>
        </trans-unit>
        <trans-unit id="8f91610325c933cb2abe51a458c1fbba811fbb75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:alnum:]]&lt;/code&gt; : &quot;alphanumeric&quot;</source>
          <target state="translated">&lt;code&gt;[[:alnum:]]&lt;/code&gt; : &quot;alfanum&amp;eacute;rico&quot;</target>
        </trans-unit>
        <trans-unit id="afbae55965e6043ec9b3603ab355555b7db9fa16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:alpha:]]&lt;/code&gt; : &quot;alphabetic&quot;</source>
          <target state="translated">&lt;code&gt;[[:alpha:]]&lt;/code&gt; : &quot;alfab&amp;eacute;tico&quot;</target>
        </trans-unit>
        <trans-unit id="044b4f22a574ddbf01472710731688e81546a80b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:ascii:]]&lt;/code&gt; : &quot;0-127&quot;</source>
          <target state="translated">&lt;code&gt;[[:ascii:]]&lt;/code&gt; : &quot;0-127&quot;</target>
        </trans-unit>
        <trans-unit id="859eafc4772001190cac4b4b30822d8882ea96fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:blank:]]&lt;/code&gt; : &quot;space or tab&quot;</source>
          <target state="translated">&lt;code&gt;[[:blank:]]&lt;/code&gt; : &quot;espacio o tabulaci&amp;oacute;n&quot;</target>
        </trans-unit>
        <trans-unit id="5ef04cd03f8e9a90f372dd3606f7c46a12cd3a43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:cntrl:]]&lt;/code&gt; : &quot;control character&quot;</source>
          <target state="translated">&lt;code&gt;[[:cntrl:]]&lt;/code&gt; : &quot;car&amp;aacute;cter de control&quot;</target>
        </trans-unit>
        <trans-unit id="ee673f324efef627744a72bf29e57d06f115f2ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:digit:]]&lt;/code&gt; : &quot;decimal digit&quot;</source>
          <target state="translated">&lt;code&gt;[[:digit:]]&lt;/code&gt; : &quot;d&amp;iacute;gito decimal&quot;</target>
        </trans-unit>
        <trans-unit id="66770bba74bed4d3224e2f2b1057af634e30977f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:graph:]]&lt;/code&gt; : &quot;printing, excluding space&quot;</source>
          <target state="translated">&lt;code&gt;[[:graph:]]&lt;/code&gt; : &quot;imprimiendo, excluyendo el espacio&quot;</target>
        </trans-unit>
        <trans-unit id="3b148b2a70bd27eded4cd5c989aad27aa81e14d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:lower:]]&lt;/code&gt; : &quot;lower case letter&quot;</source>
          <target state="translated">&lt;code&gt;[[:lower:]]&lt;/code&gt; : &quot;letra min&amp;uacute;scula&quot;</target>
        </trans-unit>
        <trans-unit id="349f0acff9295529f7acb100e96da6429cbaff7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:print:]]&lt;/code&gt; : &quot;printing, including space&quot;</source>
          <target state="translated">&lt;code&gt;[[:print:]]&lt;/code&gt; : &quot;imprimiendo, incluido el espacio&quot;</target>
        </trans-unit>
        <trans-unit id="cd5bbd56022145d3ebcfbabe78636b61907fa5af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:punct:]]&lt;/code&gt; : &quot;printing, excluding alphanumeric&quot;</source>
          <target state="translated">&lt;code&gt;[[:punct:]]&lt;/code&gt; : &quot;imprimiendo, excluyendo alfanum&amp;eacute;rico&quot;</target>
        </trans-unit>
        <trans-unit id="0efbdda587a4c9df2ad184567c8fe55f1226c73f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:space:]]&lt;/code&gt; : &quot;white space&quot;</source>
          <target state="translated">&lt;code&gt;[[:space:]]&lt;/code&gt; : &quot;espacio en blanco&quot;</target>
        </trans-unit>
        <trans-unit id="6ecfdf9b3844aedf101b517f9d189e50d3cb1e1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:upper:]]&lt;/code&gt; : &quot;upper case letter&quot;</source>
          <target state="translated">&lt;code&gt;[[:upper:]]&lt;/code&gt; : &quot;letra may&amp;uacute;scula&quot;</target>
        </trans-unit>
        <trans-unit id="20970bfd8ffac2ff46875e04f16f239edeaaad59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:word:]]&lt;/code&gt; : &quot;same as \w&quot;</source>
          <target state="translated">&lt;code&gt;[[:word:]]&lt;/code&gt; : &quot;igual que \ w&quot;</target>
        </trans-unit>
        <trans-unit id="bdaaece490774949e00f6df06f039dcf4efa882b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:word:]]&lt;/code&gt; : &quot;same as w&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510a2b141258c9f5193f882abd7fc2877bbe76d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:xdigit:]]&lt;/code&gt; : &quot;hexadecimal digit&quot;</source>
          <target state="translated">&lt;code&gt;[[:xdigit:]]&lt;/code&gt; : &quot;d&amp;iacute;gito hexadecimal&quot;</target>
        </trans-unit>
        <trans-unit id="0df56150127230ef698d826ba31fa487c31817fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:xxx:]]&lt;/code&gt; is a named character set</source>
          <target state="translated">&lt;code&gt;[[:xxx:]]&lt;/code&gt; es un conjunto de caracteres con nombre</target>
        </trans-unit>
        <trans-unit id="4142b0bec552fe5af8824c2000b80cc3b58ef5ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[^...]&lt;/code&gt; is the inverse of the given character set</source>
          <target state="translated">&lt;code&gt;[^...]&lt;/code&gt; es la inversa del conjunto de caracteres dado</target>
        </trans-unit>
        <trans-unit id="b8885be866728cb4c86020891a22bf3594d7cd79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[x-y]&lt;/code&gt; is the range of characters from x-y</source>
          <target state="translated">&lt;code&gt;[x-y]&lt;/code&gt; es el rango de caracteres de xy</target>
        </trans-unit>
        <trans-unit id="8b310572a32433d06f304dd311ce0fff2789f2a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\ &lt;/code&gt; (backslash space) escapes the space character. This keeps the shell from splitting arguments on the escaped space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9074ef3717b58827c5df253057c764f1af9c04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\ &lt;/code&gt; escapes the space character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674a67a80e13873d3d1f1e17408ecd6856ad7780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&quot;&lt;/code&gt; double quote</source>
          <target state="translated">&lt;code&gt;\&quot;&lt;/code&gt; comillas dobles</target>
        </trans-unit>
        <trans-unit id="078f3939b97766fcf433f8d82b4ee8723c034006" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&quot;&lt;/code&gt; escapes the quote character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc36f24f593ec626482e0457bc256071c7a88511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&quot;&lt;/code&gt; escapes the quote character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f74c1126e089b4d88e246bd9b7aa0e8c32d67a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\#&lt;/code&gt; escapes the hash character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3143b5a5cf3f892847aa34b222bf4ce009e3f701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\#&lt;/code&gt; escapes the hash character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219658e211cfd92642e290f36974c2fb9362b7e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\$&lt;/code&gt; escapes the dollar character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ad845dd6745136e664292803a4ef50dafb0fe6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\$&lt;/code&gt; escapes the dollar character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7896bee46534df62d670d93e44ba719e437b026" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&amp;amp;&lt;/code&gt; escapes the ampersand character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b046e7125ec6ba1b89cc824cfeba82b8ed3461d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&amp;amp;&lt;/code&gt; escapes the ampersand character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e52572f4d66c68c98e55315e9c7bbecc420774" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&amp;gt;&lt;/code&gt; escapes the more than character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7378f4f0707e41bf8066271c98069df94bb8120" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&amp;lt;&lt;/code&gt; escapes the less than character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5d4420d1f70a0bda22f577b80276e999d8e9f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\'&lt;/code&gt; escapes the apostrophe character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d017f5df44c419e646fea68e5acc954b120136f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\'&lt;/code&gt; escapes the apostrophe character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9208df4132b58a6af0674093558c05d1e4a2bf61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\(&lt;/code&gt; escapes the left parenthesis character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10d5aad53b035e6ac79bcb3b45b515785b94bae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\(&lt;/code&gt; escapes the left parenthesis character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5233b11cf97f9443e0a2571a5ce2de7759062bd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\)&lt;/code&gt; escapes the right parenthesis character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9538ee0fe077aca9a424f376383047669e8751e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\)&lt;/code&gt; escapes the right parenthesis character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d584f5f21f2ce80c77ca5786f0ef4e93ac7a46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\*&lt;/code&gt; escapes the star character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51f0df8f3288782e1a2d07e74e658c4bb19a33f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\*&lt;/code&gt; escapes the star character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09984fc2bba56634c00dc0de4e1023b1299bff7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\0NNN&lt;/code&gt; byte with octal value NNN (1 to 3 digits)</source>
          <target state="translated">&lt;code&gt;\0NNN&lt;/code&gt; byte con valor octal NNN (1 a 3 d&amp;iacute;gitos)</target>
        </trans-unit>
        <trans-unit id="1f2c899b7afc4aa3812883bf20f99fd748d9a27e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\;&lt;/code&gt; escapes the semicolon character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016c8608ec3f0ebce85326f352fbc2b93f2851a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\;&lt;/code&gt; escapes the semicolon character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffccef178b7b6d07f6c65e20b8e3e3f81839cab4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt; backslash</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt; barra invertida</target>
        </trans-unit>
        <trans-unit id="0919b2fbf0729f278677f6cd63ccc0d1d737df66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\?&lt;/code&gt; escapes the question mark character (this is not necessary if the &lt;code&gt;qmark-noglob&lt;/code&gt;&lt;a href=&quot;#featureflags&quot;&gt;feature flag&lt;/a&gt; is enabled)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8af3267e47a7b112a60fc7b0e7fff4267b84f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\?&lt;/code&gt; escapes the question mark character (this is not necessary if the &lt;code&gt;qmark-noglob&lt;/code&gt;&lt;a href=&quot;#featureflags&quot;&gt;feature flag&lt;/a&gt; is enabled).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b544a1399616da25f4063d6d17695dbdbb152b83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\UXXXXXXXX&lt;/code&gt;, where &lt;code&gt;XXXXXXXX&lt;/code&gt; is a hexadecimal number, represents the 32-bit Unicode character with the specified value. For example, &lt;code&gt;\U9&lt;/code&gt; is the tab character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11821ccea073e254328ea0696a15f1bf502ddad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\UXXXXXXXX&lt;/code&gt;, where &lt;em&gt;XXXXXXXX&lt;/em&gt; is a hexadecimal number, represents the 32-bit Unicode character with the specified value. For example, &lt;code&gt;\U9&lt;/code&gt; is the tab character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde0f656c0d40fb4fd988472106703b2f7aa1f81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Uhhhhhhhh&lt;/code&gt; 32-bit Unicode character (hhhhhhhh is 8 digits)</source>
          <target state="translated">&lt;code&gt;\Uhhhhhhhh&lt;/code&gt; car&amp;aacute;cter Unicode de 32 bits (hhhhhhhh tiene 8 d&amp;iacute;gitos)</target>
        </trans-unit>
        <trans-unit id="ab7db4bd5dea98247c968a8cf484ad6bde08380a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\XHH&lt;/code&gt;, where &lt;code&gt;HH&lt;/code&gt; is a hexadecimal number, represents a byte of data with the specified value. If you are using a multibyte encoding, this can be used to enter invalid strings. Only use this if you know what you are doing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c267e2e3ed3e4fcbf954cb46b7575781ffc6c3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\XHH&lt;/code&gt;, where &lt;em&gt;HH&lt;/em&gt; is a hexadecimal number, represents a byte of data with the specified value. If you are using a multibyte encoding, this can be used to enter invalid strings. Only use this if you know what you are doing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb8ec76aee74fdeb62289c22aca032b7f4a0792" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\[&lt;/code&gt; escapes the left bracket character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe7bfed93af1e808af722c9447cdf175418d3f00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\[&lt;/code&gt; escapes the left bracket character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adecc3d3464e70df86311fdffc3957adf09e6492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\\&amp;gt;&lt;/code&gt; escapes the more than character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6262b31e798f0b05f57624ea8f27ceda80fd8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\\&amp;lt;&lt;/code&gt; escapes the less than character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563796014a56e4ac5c5f77f062881af141e59497" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\\&lt;/code&gt; backslash</source>
          <target state="translated">&lt;code&gt;\\&lt;/code&gt; barra invertida</target>
        </trans-unit>
        <trans-unit id="246d369d301a348b9d136f47b86e00fb804c38a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\\&lt;/code&gt; escapes the backslash character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de19c78030122edef04a91d6588c46f2a1e9ceed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\\&lt;/code&gt; escapes the backslash character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="709b1fa1b9df3a5b92d5a421bf8f63074ac2225a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\]&lt;/code&gt; escapes the right bracket character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf055846dce101e27eef37eb8b556fccd34361f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\]&lt;/code&gt; escapes the right bracket character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a830f3c9a72e6d5d57e0ae5e828afb422aedaa8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\^&lt;/code&gt; escapes the circumflex character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515c3ed108e319ecd0b0d691845bdd873d606b29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\^&lt;/code&gt; escapes the circumflex character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85487df761f0119a0ab8b71e82defa28272a27e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\a&lt;/code&gt; alert (BEL)</source>
          <target state="translated">&lt;code&gt;\a&lt;/code&gt; alerta (BEL)</target>
        </trans-unit>
        <trans-unit id="6ecf11e3a758027d3320219c864ad15d2e511575" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\a&lt;/code&gt; alert (bell)</source>
          <target state="translated">&lt;code&gt;\a&lt;/code&gt; alerta (campana)</target>
        </trans-unit>
        <trans-unit id="3adb16b1c529f19fbf920726a899b7d78c0a1f0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\a&lt;/code&gt; represents the alert character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2676f2b352c14de9bb2fb05124ba6c7b823fabce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\a&lt;/code&gt; represents the alert character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11a806163d10c29b408e05f133a5429af9182a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\b&lt;/code&gt; backspace</source>
          <target state="translated">&lt;code&gt;\b&lt;/code&gt; retroceso</target>
        </trans-unit>
        <trans-unit id="214294aed08406a291a7bb0c104564bec714ea65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\b&lt;/code&gt; denotes a word boundary, &lt;code&gt;\B&lt;/code&gt; is not a word boundary.</source>
          <target state="translated">&lt;code&gt;\b&lt;/code&gt; denota un l&amp;iacute;mite de palabra, &lt;code&gt;\B&lt;/code&gt; no es un l&amp;iacute;mite de palabra.</target>
        </trans-unit>
        <trans-unit id="396887cd81d43ac76427053ea242b6ce56ed04c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\b&lt;/code&gt; represents the backspace character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5c33d70ce6109dcf1693632684d2c1297d79d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\c&lt;/code&gt; produce no further output</source>
          <target state="translated">&lt;code&gt;\c&lt;/code&gt; no produce m&amp;aacute;s salida</target>
        </trans-unit>
        <trans-unit id="6821414a318443f2a20b7d2b02c60760b02cff64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\cX&lt;/code&gt;, where &lt;code&gt;X&lt;/code&gt; is a letter of the alphabet, represents the control sequence generated by pressing the control key and the specified letter. For example, &lt;code&gt;\ci&lt;/code&gt; is the tab character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e9308d24e731c9e7bbcb7402bbde67d9beb381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\cX&lt;/code&gt;, where &lt;em&gt;X&lt;/em&gt; is a letter of the alphabet, represents the control sequence generated by pressing the control key and the specified letter. For example, &lt;code&gt;\ci&lt;/code&gt; is the tab character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431366d2d7ed426ee90c6dea9bcf6439af798a42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\d&lt;/code&gt; a decimal digit and &lt;code&gt;\D&lt;/code&gt;, not a decimal digit</source>
          <target state="translated">&lt;code&gt;\d&lt;/code&gt; un d&amp;iacute;gito decimal y &lt;code&gt;\D&lt;/code&gt; , no un d&amp;iacute;gito decimal</target>
        </trans-unit>
        <trans-unit id="427e709a9a1e1cf56f02b49e3fb33694fff88fc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\e&lt;/code&gt; escape</source>
          <target state="translated">&lt;code&gt;\e&lt;/code&gt; escapar</target>
        </trans-unit>
        <trans-unit id="0411dc562ac3119b9900bca79d073ac1d355ced5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\e&lt;/code&gt; represents the escape character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b86fbbe70bf2f8e5515d10c93dd0dff4f0299e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\e&lt;/code&gt; represents the escape character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dec9886dc5bc26d91961e017093c51aeb623f2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\f&lt;/code&gt; form feed</source>
          <target state="translated">&lt;code&gt;\f&lt;/code&gt; formulario de alimentaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="18013f395f0d55b7a7d8c24706b7d58230873e45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\f&lt;/code&gt; represents the form feed character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6e23ea5f6d11ce3101d8ae7f1bf811cf005896" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\f&lt;/code&gt; represents the form feed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62431de71ccd77e698e0c0b38c15f7e509e3e04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\n&lt;/code&gt; is a backreference (where n is the number of the group, starting with 1)</source>
          <target state="translated">&lt;code&gt;\n&lt;/code&gt; es una referencia inversa (donde n es el n&amp;uacute;mero del grupo, comenzando con 1)</target>
        </trans-unit>
        <trans-unit id="f7118a7690dfcfb797e2cde1ea26ab3518ed7414" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\n&lt;/code&gt; new line</source>
          <target state="translated">&lt;code&gt;\n&lt;/code&gt; nueva l&amp;iacute;nea</target>
        </trans-unit>
        <trans-unit id="d1a6371000975b011c7497cc4ff1f7026452ba4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\n&lt;/code&gt; represents a newline character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a39be65be14d621972486e5c44378c8ab62b3a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\n&lt;/code&gt; represents a newline character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd22671b65ccb3abb97723f89695a4933e21b59b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\ooo&lt;/code&gt; octal number (ooo is 1 to 3 digits)</source>
          <target state="translated">&lt;code&gt;\ooo&lt;/code&gt; n&amp;uacute;mero octal (ooo es de 1 a 3 d&amp;iacute;gitos)</target>
        </trans-unit>
        <trans-unit id="91fea09e1466d032331f8f0d19126156e31b72ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\ooo&lt;/code&gt;, where &lt;code&gt;ooo&lt;/code&gt; is an octal number, represents the ASCII character with the specified value. For example, &lt;code&gt;\011&lt;/code&gt; is the tab character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaea0a774dc7a522938c962c00b034ee777ed144" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\ooo&lt;/code&gt;, where &lt;em&gt;ooo&lt;/em&gt; is an octal number, represents the ascii character with the specified value. For example, &lt;code&gt;\011&lt;/code&gt; is the tab character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d52da29bbc046190185fc575b5d8936ecbc7ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\r&lt;/code&gt; carriage return</source>
          <target state="translated">&lt;code&gt;\r&lt;/code&gt; retorno de carro</target>
        </trans-unit>
        <trans-unit id="1ef154761b9e438af37a7563128ed84de43b70fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\r&lt;/code&gt; represents the carriage return character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af42ccdbe65ef267132b842500eecf4e9a7d625" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\r&lt;/code&gt; represents the carriage return character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903f0614f89c4e8f4498db7d705c8c2df34864b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\s&lt;/code&gt; whitespace and &lt;code&gt;\S&lt;/code&gt;, not whitespace</source>
          <target state="translated">&lt;code&gt;\s&lt;/code&gt; espacio en blanco y &lt;code&gt;\S&lt;/code&gt; , no espacio en blanco</target>
        </trans-unit>
        <trans-unit id="afb4d0548760e9123909ab09f1fa49fd8324f99b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\t&lt;/code&gt; horizontal tab</source>
          <target state="translated">&lt;code&gt;\t&lt;/code&gt; pesta&amp;ntilde;a horizontal</target>
        </trans-unit>
        <trans-unit id="1080a8ada83cdb7fafb8b63e16e573eac4a41176" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\t&lt;/code&gt; represents the tab character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52be248824c50cdba8dc5329703f0fc069175d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\t&lt;/code&gt; represents the tab character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734d29435c8d6302dde4fa4fdb6df73ef9bb26be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\uXXXX&lt;/code&gt;, where &lt;code&gt;XXXX&lt;/code&gt; is a hexadecimal number, represents the 16-bit Unicode character with the specified value. For example, &lt;code&gt;\u9&lt;/code&gt; is the tab character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e8a2ecb10fb3fe355b8254949ed3567fbc056d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\uXXXX&lt;/code&gt;, where &lt;em&gt;XXXX&lt;/em&gt; is a hexadecimal number, represents the 16-bit Unicode character with the specified value. For example, &lt;code&gt;\u9&lt;/code&gt; is the tab character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f452f9e21d5b611c87f16a6bbfda9d5fdb3f5ed2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\uhhhh&lt;/code&gt; 16-bit Unicode character (hhhh is 4 digits)</source>
          <target state="translated">&lt;code&gt;\uhhhh&lt;/code&gt; Car&amp;aacute;cter Unicode de 16 bits (hhhh tiene 4 d&amp;iacute;gitos)</target>
        </trans-unit>
        <trans-unit id="d8f83d9b4cce50d34b38992f01cf80a952492814" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\v&lt;/code&gt; represents the vertical tab character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8833b36e14a0f4e6fddbbf563f382eadd3cf0c20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\v&lt;/code&gt; represents the vertical tab character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc301207bc8cac4ab3b39ff2ca33e98e74ef6cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\v&lt;/code&gt; vertical tab</source>
          <target state="translated">&lt;code&gt;\v&lt;/code&gt; pesta&amp;ntilde;a vertical</target>
        </trans-unit>
        <trans-unit id="f2da1ad0fe9453f3837768ac7bf9ebfb69d1c09b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\w&lt;/code&gt; a &quot;word&quot; character and &lt;code&gt;\W&lt;/code&gt;, a &quot;non-word&quot; character</source>
          <target state="translated">&lt;code&gt;\w&lt;/code&gt; un car&amp;aacute;cter de &quot;palabra&quot; y &lt;code&gt;\W&lt;/code&gt; , un car&amp;aacute;cter de &quot;no palabra&quot;</target>
        </trans-unit>
        <trans-unit id="d31eb1affb2d4908f9fc20413e02e1d32aabb9fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\xHH&lt;/code&gt; byte with hexadecimal value HH (1 to 2 digits)</source>
          <target state="translated">&lt;code&gt;\xHH&lt;/code&gt; byte con valor hexadecimal HH (1 a 2 d&amp;iacute;gitos)</target>
        </trans-unit>
        <trans-unit id="3a939048280e6e6a941fbf41972d5319e730b208" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\xHH&lt;/code&gt;, where &lt;code&gt;HH&lt;/code&gt; is a hexadecimal number, represents the ASCII character with the specified value. For example, &lt;code&gt;\x9&lt;/code&gt; is the tab character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df675f03ed2ceebc59cd8476271456ba87c9373a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\xHH&lt;/code&gt;, where &lt;em&gt;HH&lt;/em&gt; is a hexadecimal number, represents the ascii character with the specified value. For example, &lt;code&gt;\x9&lt;/code&gt; is the tab character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8286c1acd0918a9dc3193991cae71417bb0d86c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\xhh&lt;/code&gt; hexadecimal number (hhh is 1 to 2 digits)</source>
          <target state="translated">&lt;code&gt;\xhh&lt;/code&gt; n&amp;uacute;mero hexadecimal (hhh es de 1 a 2 d&amp;iacute;gitos)</target>
        </trans-unit>
        <trans-unit id="9f4975837bdda321abf5d023c60f72a2d898a972" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\{&lt;/code&gt; escapes the left curly bracket character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d59f7085ff4e972a71b67331b0345c764624add" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\{&lt;/code&gt; escapes the left curly bracket character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c49b8dbed914a2ab69a65af61285b5c3ac5bca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\|&lt;/code&gt; escapes the vertical bar character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb20d9a0c9631ecdf37aa3045e49c4a3cfa3a57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\|&lt;/code&gt; escapes the vertical bar character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e27791e82a9b5ddfd005f712388b8e56af5bcc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\}&lt;/code&gt; escapes the right curly bracket character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81999c3dbee3ec2d88c6f7eba417cb573ea9cba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\}&lt;/code&gt; escapes the right curly bracket character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f174171730cbee64c297d60d1812689498f0acfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\~&lt;/code&gt; escapes the tilde character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b20579395beb28756f71a4a3f5acf179e103b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\~&lt;/code&gt; escapes the tilde character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f759a1d2212f295e7f2abf2b1fcd24bc2bda5b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; for exponentiation.</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; para exponenciaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="eaba869a7ddbc101338fdfa17c049cd339ef0d47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; is the start of the string or line, &lt;code&gt;$&lt;/code&gt; the end.</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; es el comienzo de la cadena o l&amp;iacute;nea, &lt;code&gt;$&lt;/code&gt; el final.</target>
        </trans-unit>
        <trans-unit id="df97c65decac4803c83314222092da88ca7ce28b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_&lt;/code&gt; has no options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="addff170ad1d0e5cb4d8f0b08c9e2ef096cf1c15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_&lt;/code&gt; translates its arguments into the current language, if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a601d4100f201c816b042e7fab30ff45d63a5399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_&lt;/code&gt;, the name of the currently running command (though this is deprecated, and the use of &lt;code&gt;status current-command&lt;/code&gt; is preferred).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c317dce6e11f4d87929b0b16556a227ee1a12bf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_&lt;/code&gt;, the name of the currently running command.</source>
          <target state="translated">&lt;code&gt;_&lt;/code&gt; , el nombre del comando que se est&amp;aacute; ejecutando actualmente.</target>
        </trans-unit>
        <trans-unit id="d546b2d801cabd40b8a344056c5bf9a1790c4649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_complete_directories STRING DESCRIPTION&lt;/code&gt; performs path completion on STRING, allowing only directories, and giving them the description DESCRIPTION.</source>
          <target state="translated">&lt;code&gt;__fish_complete_directories STRING DESCRIPTION&lt;/code&gt; realiza la finalizaci&amp;oacute;n de la ruta en STRING, permitiendo solo directorios y d&amp;aacute;ndoles la descripci&amp;oacute;n DESCRIPTION.</target>
        </trans-unit>
        <trans-unit id="151168653813a4190860fb807a539feb72a85ffe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_complete_groups&lt;/code&gt; prints a list of all user groups with the groups members as description.</source>
          <target state="translated">&lt;code&gt;__fish_complete_groups&lt;/code&gt; imprime una lista de todos los grupos de usuarios con los miembros del grupo como descripci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c21cd8eb3669994b46b2fd10fee35f8074fe1231" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_complete_path STRING DESCRIPTION&lt;/code&gt; performs path completion on STRING, giving them the description DESCRIPTION.</source>
          <target state="translated">&lt;code&gt;__fish_complete_path STRING DESCRIPTION&lt;/code&gt; realiza la finalizaci&amp;oacute;n de la ruta en STRING, d&amp;aacute;ndoles la descripci&amp;oacute;n DESCRIPTION.</target>
        </trans-unit>
        <trans-unit id="fe6c99c4d87e577e3f0077e096d1f10e7ed15f4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_complete_pids&lt;/code&gt; prints a list of all processes IDs with the command name as description.</source>
          <target state="translated">&lt;code&gt;__fish_complete_pids&lt;/code&gt; imprime una lista de todos los ID de procesos con el nombre del comando como descripci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="19c8f9e63fbfcbae2a8bcafd31804050cb9c42c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_complete_suffix SUFFIX&lt;/code&gt; performs file completion allowing only files ending in SUFFIX, with an optional description.</source>
          <target state="translated">&lt;code&gt;__fish_complete_suffix SUFFIX&lt;/code&gt; realiza la finalizaci&amp;oacute;n de archivos permitiendo solo los archivos que terminan en SUFFIX, con una descripci&amp;oacute;n opcional.</target>
        </trans-unit>
        <trans-unit id="5c72149a64a0618b6353979ba23c090018cc1127" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_complete_suffix SUFFIX&lt;/code&gt; performs file completion but sorts files ending in SUFFIX first. This is useful in conjunction with &lt;code&gt;complete --keep-order&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f2442829e7fb5cc6246df6b60a835acb901eea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_complete_users&lt;/code&gt; prints a list of all users with their full name as description.</source>
          <target state="translated">&lt;code&gt;__fish_complete_users&lt;/code&gt; imprime una lista de todos los usuarios con su nombre completo como descripci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="79d16e25bc08777fbb67f0ca301f242c0bf839c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_print_filesystems&lt;/code&gt; prints a list of all known file systems. Currently, this is a static list, and not dependent on what file systems the host operating system actually understands.</source>
          <target state="translated">&lt;code&gt;__fish_print_filesystems&lt;/code&gt; imprime una lista de todos los sistemas de archivos conocidos. Actualmente, esta es una lista est&amp;aacute;tica y no depende de los sistemas de archivos que el sistema operativo host realmente comprenda.</target>
        </trans-unit>
        <trans-unit id="be7f901040650f64e3531bd5a2911a4293ff41f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_print_hostnames&lt;/code&gt; prints a list of all known hostnames. This functions searches the fstab for nfs servers, ssh for known hosts and checks the &lt;code&gt;/etc/hosts&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;__fish_print_hostnames&lt;/code&gt; imprime una lista de todos los nombres de host conocidos. Esta funci&amp;oacute;n busca servidores nfs en fstab, hosts conocidos en ssh y verifica el &lt;code&gt;/etc/hosts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f080f3d4432908c35ec033e993829c0748f45e8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_print_interfaces&lt;/code&gt; prints a list of all known network interfaces.</source>
          <target state="translated">&lt;code&gt;__fish_print_interfaces&lt;/code&gt; imprime una lista de todas las interfaces de red conocidas.</target>
        </trans-unit>
        <trans-unit id="dab063293bb0ff41158bdf2d084b5f2e6c42f955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_print_packages&lt;/code&gt; prints a list of all installed packages. This function currently handles Debian, rpm and Gentoo packages.</source>
          <target state="translated">&lt;code&gt;__fish_print_packages&lt;/code&gt; imprime una lista de todos los paquetes instalados. Esta funci&amp;oacute;n actualmente maneja paquetes Debian, rpm y Gentoo.</target>
        </trans-unit>
        <trans-unit id="f5ced193721f60fcae988eef292b06b71cbdac01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_argparse_cmd&lt;/code&gt; will be set to the value of the value of the &lt;code&gt;argparse --name&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;_argparse_cmd&lt;/code&gt; se establecer&amp;aacute; en el valor del valor del valor de &lt;code&gt;argparse --name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9989dd44d06686b87c74501e974a49bbae007a90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_flag_name&lt;/code&gt; will be set to the short or long flag that being processed.</source>
          <target state="translated">&lt;code&gt;_flag_name&lt;/code&gt; se establecer&amp;aacute; en la bandera corta o larga que se est&amp;aacute; procesando.</target>
        </trans-unit>
        <trans-unit id="3e3d051d60a8575f58642534f59f8184e98213f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_flag_value&lt;/code&gt; will be set to the value associated with the flag being processed.</source>
          <target state="translated">&lt;code&gt;_flag_value&lt;/code&gt; se establecer&amp;aacute; en el valor asociado con la bandera que se est&amp;aacute; procesando.</target>
        </trans-unit>
        <trans-unit id="f098091422b8a3149db27131091d105a2234f4c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a*&lt;/code&gt; matches any files beginning with an 'a' in the current directory.</source>
          <target state="translated">&lt;code&gt;a*&lt;/code&gt; coincide con cualquier archivo que comience con una 'a' en el directorio actual.</target>
        </trans-unit>
        <trans-unit id="da740efe12ef7e9f1e719a1618e3db67d0488541" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abbr&lt;/code&gt; manages abbreviations - user-defined words that are replaced with longer phrases after they are entered.</source>
          <target state="translated">&lt;code&gt;abbr&lt;/code&gt; gestiona las abreviaturas: palabras definidas por el usuario que se reemplazan por frases m&amp;aacute;s largas despu&amp;eacute;s de ingresarlas.</target>
        </trans-unit>
        <trans-unit id="c19acef9767dddae8094fb69c0b451f728946437" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;accept-autosuggestion&lt;/code&gt;, accept the current autosuggestion completely</source>
          <target state="translated">&lt;code&gt;accept-autosuggestion&lt;/code&gt; , acepta la autosugesti&amp;oacute;n actual por completo</target>
        </trans-unit>
        <trans-unit id="a62dcb13d21b1db60d3092cacb2230a47b2db3ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alias&lt;/code&gt; is a simple wrapper for the &lt;code&gt;function&lt;/code&gt; builtin, which creates a function wrapping a command. It has similar syntax to POSIX shell &lt;code&gt;alias&lt;/code&gt;. For other uses, it is recommended to define a &lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;alias&lt;/code&gt; es un contenedor simple para la &lt;code&gt;function&lt;/code&gt; incorporada, que crea una funci&amp;oacute;n que envuelve un comando. Tiene una sintaxis similar al &lt;code&gt;alias&lt;/code&gt; de shell POSIX . Para otros usos, se recomienda definir una &lt;a href=&quot;#function&quot;&gt;funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a2cda2fda960c06994c71ebf8b28687c24160eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alias&lt;/code&gt; is a simple wrapper for the &lt;code&gt;function&lt;/code&gt; builtin, which creates a function wrapping a command. It has similar syntax to POSIX shell &lt;code&gt;alias&lt;/code&gt;. For other uses, it is recommended to define a &lt;a href=&quot;function#cmd-function&quot;&gt;function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1838caba61903509e6bbb91a0e63e8970002381e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt; does not change the current exit status itself, but the command it runs most likely will. The exit status of the last foreground command to exit can always be accessed using the &lt;a href=&quot;../index#variables-status&quot;&gt;$status&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0eea9a0e6ab02f1d549e58e1a161c9edf38e8a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt; does not change the current exit status itself, but the command it runs most likely will. The exit status of the last foreground command to exit can always be accessed using the &lt;a href=&quot;index#variables-status&quot;&gt;$status&lt;/a&gt; variable.</source>
          <target state="translated">&lt;code&gt;and&lt;/code&gt; no cambia el estado de salida actual en s&amp;iacute;, pero el comando que ejecuta probablemente lo har&amp;aacute;. Siempre se puede acceder al estado de salida del &amp;uacute;ltimo comando en primer plano para salir utilizando la variable &lt;a href=&quot;index#variables-status&quot;&gt;$ status&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4b14fc56ef07146413c5146c919fef41d254d71b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt; is used to execute a command if the previous command was successful (returned a status of 0).</source>
          <target state="translated">&lt;code&gt;and&lt;/code&gt; se usa para ejecutar un comando si el comando anterior fue exitoso (devolvi&amp;oacute; un estado de 0).</target>
        </trans-unit>
        <trans-unit id="4d32fad3c25efddc66647b204ec4483b76c85d32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt; statements may be used as part of the condition in an &lt;a href=&quot;#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#while&quot;&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt; block. See the documentation for &lt;a href=&quot;#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#while&quot;&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt; for examples.</source>
          <target state="translated">&lt;code&gt;and&lt;/code&gt; declaraciones pueden usarse como parte de la condici&amp;oacute;n en un bloque &lt;a href=&quot;#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;#while&quot;&gt; &lt;code&gt;while&lt;/code&gt; &lt;/a&gt; . Consulte la documentaci&amp;oacute;n para ver &lt;a href=&quot;#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#while&quot;&gt; &lt;code&gt;while&lt;/code&gt; &lt;/a&gt; para obtener ejemplos.</target>
        </trans-unit>
        <trans-unit id="e08b45065af284d2a703b24fd138ecff315e1883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt; statements may be used as part of the condition in an &lt;a href=&quot;while#cmd-while&quot;&gt;while&lt;/a&gt; or &lt;a href=&quot;if#cmd-if&quot;&gt;if&lt;/a&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a55d5141e4dc0013726219775a380aefbf5a77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt;, only execute the next function if the previous succeeded (note: only some functions report success)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eaba948f0bcd56ef9f9c585278ae3d3d4599cab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argv&lt;/code&gt;, a list of arguments to the shell or function. &lt;code&gt;argv&lt;/code&gt; is only defined when inside a function call, or if fish was invoked with a list of arguments, like &lt;code&gt;fish myscript.fish foo bar&lt;/code&gt;. This variable can be changed by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c34bf20e44e1550dfa1207a91d8ee3fbb33857b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argv&lt;/code&gt;, a list of arguments to the shell or function. &lt;code&gt;argv&lt;/code&gt; is only defined when inside a function call, or if fish was invoked with a list of arguments, like &lt;code&gt;fish myscript.fish foo bar&lt;/code&gt;. This variable can be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7e179fd92f8f42e533a58d810881d480a1d6c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argv&lt;/code&gt;, an array of arguments to the shell or function. &lt;code&gt;argv&lt;/code&gt; is only defined when inside a function call, or if fish was invoked with a list of arguments, like &lt;code&gt;fish myscript.fish foo bar&lt;/code&gt;. This variable can be changed by the user.</source>
          <target state="translated">&lt;code&gt;argv&lt;/code&gt; , una matriz de argumentos para el shell o la funci&amp;oacute;n. &lt;code&gt;argv&lt;/code&gt; solo se define cuando est&amp;aacute; dentro de una llamada de funci&amp;oacute;n, o si fish se invoc&amp;oacute; con una lista de argumentos, como &lt;code&gt;fish myscript.fish foo bar&lt;/code&gt; . El usuario puede modificar esta variable.</target>
        </trans-unit>
        <trans-unit id="b2fea29a00b07f8738493fb54a790cdb48f75ae2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autoloaded&lt;/code&gt;, &lt;code&gt;not-autoloaded&lt;/code&gt; or &lt;code&gt;n/a&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;autoloaded&lt;/code&gt; , &lt;code&gt;not-autoloaded&lt;/code&gt; o &lt;code&gt;n/a&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="5d000be24614421652f373817cf78d2643e714a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-bigword&lt;/code&gt;, move one whitespace-delimited word to the left</source>
          <target state="translated">&lt;code&gt;backward-bigword&lt;/code&gt; , mueve una palabra delimitada por espacios en blanco hacia la izquierda</target>
        </trans-unit>
        <trans-unit id="b9c330f6fe66af41777620b2cd2bcd092e6cf6b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-char&lt;/code&gt;, moves one character to the left</source>
          <target state="translated">&lt;code&gt;backward-char&lt;/code&gt; , mueve un car&amp;aacute;cter a la izquierda</target>
        </trans-unit>
        <trans-unit id="da2335b11f9e11649f9220589012e6a456adefb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-delete-char&lt;/code&gt;, deletes one character of input to the left of the cursor</source>
          <target state="translated">&lt;code&gt;backward-delete-char&lt;/code&gt; , elimina un car&amp;aacute;cter de entrada a la izquierda del cursor</target>
        </trans-unit>
        <trans-unit id="2a6d51c18208675f0c900a84d11e180bb9e962bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-kill-bigword&lt;/code&gt;, move the whitespace-delimited word to the left of the cursor to the killring</source>
          <target state="translated">&lt;code&gt;backward-kill-bigword&lt;/code&gt; , mueve la palabra delimitada por espacios en blanco a la izquierda del cursor al killring</target>
        </trans-unit>
        <trans-unit id="62460137fe11bff51d78b929accaa08e73094570" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-kill-line&lt;/code&gt;, move everything from the beginning of the line to the cursor to the killring</source>
          <target state="translated">&lt;code&gt;backward-kill-line&lt;/code&gt; , mueve todo desde el principio de la l&amp;iacute;nea hasta el cursor y el killring</target>
        </trans-unit>
        <trans-unit id="f55ce793945f8c62d486556577ca1c690f46c3c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-kill-path-component&lt;/code&gt;, move one path component to the left of the cursor (everything from the last &quot;/&quot; or whitespace exclusive) to the killring</source>
          <target state="translated">&lt;code&gt;backward-kill-path-component&lt;/code&gt; , mueve un componente de ruta a la izquierda del cursor (todo desde el &amp;uacute;ltimo &quot;/&quot; o espacio en blanco exclusivo) hasta el killring</target>
        </trans-unit>
        <trans-unit id="cd6c18a3aa3f87e3006700f724bccd2346293196" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-kill-path-component&lt;/code&gt;, move one path component to the left of the cursor to the killring. A path component is everything likely to belong to a path component, i.e. not any of the following: &lt;code&gt;/={,}'&quot;:@ |;&amp;lt;&amp;gt;&amp;amp;&lt;/code&gt;, plus newlines and tabs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1090ff7b2170dc30812b841e72b981156f48baa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-kill-word&lt;/code&gt;, move the word to the left of the cursor to the killring</source>
          <target state="translated">&lt;code&gt;backward-kill-word&lt;/code&gt; , mueve la palabra a la izquierda del cursor al killring</target>
        </trans-unit>
        <trans-unit id="9acb4b6db0d53b0fc9b51c2141f090ab08a83f33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-kill-word&lt;/code&gt;, move the word to the left of the cursor to the killring. The &quot;word&quot; here is everything up to punctuation or whitespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaff15f2e52a4e435dc51f066d2c92044260b5a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-word&lt;/code&gt;, move one word to the left</source>
          <target state="translated">&lt;code&gt;backward-word&lt;/code&gt; , mover una palabra a la izquierda</target>
        </trans-unit>
        <trans-unit id="418d603e9fdff31f8732b69c8946ef3434152267" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;basename&lt;/code&gt; prints just the filename of the running script, without any path-components before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736fcf353e7fa4af9960e981cc72a21978c76cfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bash&lt;/code&gt; has a switch &lt;code&gt;-c&lt;/code&gt; to read from a string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8ef1c6b6eca273534fa796a1c6591112199712" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin-selection&lt;/code&gt;, start selecting text</source>
          <target state="translated">&lt;code&gt;begin-selection&lt;/code&gt; , comenzar a seleccionar texto</target>
        </trans-unit>
        <trans-unit id="0120467949b680095aa0fc369ab744c455ddc2af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; does not change the current exit status itself. After the block has completed, &lt;code&gt;$status&lt;/code&gt; will be set to the status returned by the most recent command.</source>
          <target state="translated">&lt;code&gt;begin&lt;/code&gt; no cambia el estado de salida actual en s&amp;iacute;. Una vez que se haya completado el bloqueo, &lt;code&gt;$status&lt;/code&gt; se establecer&amp;aacute; en el estado devuelto por el comando m&amp;aacute;s reciente.</target>
        </trans-unit>
        <trans-unit id="5e5b90f0591cbf722fd55d6caed6b3327fe08a8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; is used to create a new block of code.</source>
          <target state="translated">&lt;code&gt;begin&lt;/code&gt; se usa para crear un nuevo bloque de c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="a77f2c79a8668eac7e52e2afe37ed088dfc2cafa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beginning-of-buffer&lt;/code&gt;, moves to the beginning of the buffer, i.e. the start of the first line</source>
          <target state="translated">&lt;code&gt;beginning-of-buffer&lt;/code&gt; , se mueve al principio del b&amp;uacute;fer, es decir, al inicio de la primera l&amp;iacute;nea</target>
        </trans-unit>
        <trans-unit id="3c0250082ea4964e009fce923a007dd188ae76f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beginning-of-history&lt;/code&gt;, move to the beginning of the history</source>
          <target state="translated">&lt;code&gt;beginning-of-history&lt;/code&gt; , ir al principio de la historia</target>
        </trans-unit>
        <trans-unit id="6af2ea8ba5d15ff52fc6384e3f88db68525bfce1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beginning-of-line&lt;/code&gt;, move to the beginning of the line</source>
          <target state="translated">&lt;code&gt;beginning-of-line&lt;/code&gt; , moverse al principio de la l&amp;iacute;nea</target>
        </trans-unit>
        <trans-unit id="2b8208df4d1b3eb8a72c8f4c83f8b59e68acaae9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bg %1&lt;/code&gt; will background job 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7c02a24e6d8c5e722c5deebe07d65b83994404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bg 123 456 789&lt;/code&gt; will background 123, 456 and 789.</source>
          <target state="translated">&lt;code&gt;bg 123 456 789&lt;/code&gt; tendr&amp;aacute; como fondo 123, 456 y 789.</target>
        </trans-unit>
        <trans-unit id="9f358ecf849b576c00c5a2cc810010bd6facf58e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bg 123 456 789&lt;/code&gt; will background the jobs that contain processes 123, 456 and 789.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f293b945f0caeb8c9d99e2cb25f696f95455f393" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bg 123 banana&lt;/code&gt; or &lt;code&gt;bg banana 123&lt;/code&gt; will complain that &quot;banana&quot; is not a valid job specifier.</source>
          <target state="translated">&lt;code&gt;bg 123 banana&lt;/code&gt; o &lt;code&gt;bg banana 123&lt;/code&gt; se quejar&amp;aacute;n de que &quot;banana&quot; no es un especificador de trabajo v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="040e0982753befe8a52a1d481e9d0149f1393ac2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bg&lt;/code&gt; sends &lt;a href=&quot;../index#syntax-job-control&quot;&gt;jobs&lt;/a&gt; to the background, resuming them if they are stopped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c539500b5512e6cee0343bc2e9f056e044c29a94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bg&lt;/code&gt; sends &lt;a href=&quot;index#syntax-job-control&quot;&gt;jobs&lt;/a&gt; to the background, resuming them if they are stopped.</source>
          <target state="translated">&lt;code&gt;bg&lt;/code&gt; env&amp;iacute;a &lt;a href=&quot;index#syntax-job-control&quot;&gt;trabajos&lt;/a&gt; a un segundo plano y los reanuda si se detienen.</target>
        </trans-unit>
        <trans-unit id="e056b40eaf99ba81ea6f15243e3e3c5260bb9b60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bind&lt;/code&gt; adds a binding for the specified key sequence to the specified command.</source>
          <target state="translated">&lt;code&gt;bind&lt;/code&gt; agrega un enlace para la secuencia de teclas especificada al comando especificado.</target>
        </trans-unit>
        <trans-unit id="c4a8fba9593c7dab3c106ec070fcbdb586f437dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bind&lt;/code&gt; manages bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b3012bbd4ab6e551f09b2b71477e3bb758e132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bitand&lt;/code&gt;, &lt;code&gt;bitor&lt;/code&gt; and &lt;code&gt;bitxor&lt;/code&gt; to perform bitwise operations. These will throw away any non-integer parts and interpret the rest as an int.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6fc99b1e67b649803426c769ee8900eef1ef37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; prevents events triggered by &lt;code&gt;fish&lt;/code&gt; or the &lt;a href=&quot;commands#emit&quot;&gt;&lt;code&gt;emit&lt;/code&gt;&lt;/a&gt; command from being delivered and acted upon while the block is in place.</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; evita que los eventos activados por &lt;code&gt;fish&lt;/code&gt; o el comando de &lt;a href=&quot;commands#emit&quot;&gt; &lt;code&gt;emit&lt;/code&gt; &lt;/a&gt; se entreguen y se act&amp;uacute;e sobre ellos mientras el bloqueo est&amp;aacute; en su lugar.</target>
        </trans-unit>
        <trans-unit id="05a9040e73f620e39fbdb8b37b14696c94d8ccd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; prevents events triggered by &lt;code&gt;fish&lt;/code&gt; or the &lt;a href=&quot;emit#cmd-emit&quot;&gt;emit&lt;/a&gt; command from being delivered and acted upon while the block is in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109ab83c61e6f478a432c9453f9f17600e2093aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; halts a currently running loop, such as a &lt;a href=&quot;#for&quot;&gt;for&lt;/a&gt; loop or a &lt;a href=&quot;#while&quot;&gt;while&lt;/a&gt; loop. It is usually added inside of a conditional block such as an &lt;a href=&quot;#if&quot;&gt;if&lt;/a&gt; statement or a &lt;a href=&quot;#switch&quot;&gt;switch&lt;/a&gt; statement.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; detiene un bucle se ejecuta actualmente, tales como una &lt;a href=&quot;#for&quot;&gt;para&lt;/a&gt; bucle o un &lt;a href=&quot;#while&quot;&gt;mientras&lt;/a&gt; bucle. Por lo general, se agrega dentro de un bloque condicional, como una instrucci&amp;oacute;n &lt;a href=&quot;#if&quot;&gt;if&lt;/a&gt; o una instrucci&amp;oacute;n &lt;a href=&quot;#switch&quot;&gt;switch&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="29ade9327bce62eef81dcfc5a4d5c53d8428390a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; halts a currently running loop, such as a &lt;a href=&quot;switch#cmd-switch&quot;&gt;switch&lt;/a&gt;, &lt;a href=&quot;for#cmd-for&quot;&gt;for&lt;/a&gt; or &lt;a href=&quot;while#cmd-while&quot;&gt;while&lt;/a&gt; loop. It is usually added inside of a conditional block such as an &lt;a href=&quot;if#cmd-if&quot;&gt;if&lt;/a&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0589a3e7659aa381b45140cc091b4d09b126ffbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;breakpoint&lt;/code&gt; is used to halt a running script and launch an interactive debugging prompt.</source>
          <target state="translated">&lt;code&gt;breakpoint&lt;/code&gt; se utiliza para detener un script en ejecuci&amp;oacute;n y lanzar un mensaje de depuraci&amp;oacute;n interactivo.</target>
        </trans-unit>
        <trans-unit id="fafa721ae5a68c27c8a663706424f7b1c6a18e96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;builtin&lt;/code&gt; forces the shell to use a builtin command, rather than a function or program.</source>
          <target state="translated">&lt;code&gt;builtin&lt;/code&gt; fuerza al shell a usar un comando interno, en lugar de una funci&amp;oacute;n o programa.</target>
        </trans-unit>
        <trans-unit id="24c2b92e68d076fd94be20b94cebb0dd85a0aed4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cancel-commandline&lt;/code&gt;, cancel the current commandline and replace it with a new empty one, leaving the old one in place with a marker to show that it was cancelled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913113f4acfb31c257895ade35fb99564d62365b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cancel&lt;/code&gt;, cancel the current commandline and replace it with a new empty one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87a6fd326225bdc2ab173301eb10ecadacb604c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;capitalize-word&lt;/code&gt;, make the current word begin with a capital letter</source>
          <target state="translated">&lt;code&gt;capitalize-word&lt;/code&gt; , hacer que la palabra actual comience con una letra may&amp;uacute;scula</target>
        </trans-unit>
        <trans-unit id="bc6959bad84649fbe2865a7c0dd5c9b6b335d6b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cd&lt;/code&gt; changes the current working directory.</source>
          <target state="translated">&lt;code&gt;cd&lt;/code&gt; cambia el directorio de trabajo actual.</target>
        </trans-unit>
        <trans-unit id="dfbab8334144a651ba29e3af05dea047614762d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cd&lt;/code&gt;, change the current directory</source>
          <target state="translated">&lt;code&gt;cd&lt;/code&gt; , cambia el directorio actual</target>
        </trans-unit>
        <trans-unit id="7841f43f447f9e7dc5b5627011c305eab5810ee4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cdh&lt;/code&gt; with no arguments presents a list of &lt;a href=&quot;../index#directory-history&quot;&gt;recently visited directories&lt;/a&gt;. You can then select one of the entries by letter or number. You can also press</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351f9ce4371955ab7ac09d46370a383fea07f51f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cdh&lt;/code&gt; with no arguments presents a list of recently visited directories. You can then select one of the entries by letter or number. You can also press</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f5e0406bd47b1eaae4d0ad9774730e2e0fa33f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cdh&lt;/code&gt; with no arguments presents a list of recently visited directories. You can then select one of the entries by letter or number. You can also press &lt;b&gt;tab&lt;/b&gt; to use the completion pager to select an item from the list. If you give it a single argument it is equivalent to &lt;code&gt;cd directory&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cdh&lt;/code&gt; sin argumentos presenta una lista de directorios visitados recientemente. A continuaci&amp;oacute;n, puede seleccionar una de las entradas por letra o n&amp;uacute;mero. Tambi&amp;eacute;n puede presionar el &lt;b&gt;tabulador&lt;/b&gt; para usar el localizador de finalizaci&amp;oacute;n para seleccionar un elemento de la lista. Si le da un solo argumento, es equivalente al &lt;code&gt;cd directory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cda0b4f211e8f08f3bf58155743e1f95b0b82e86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clear&lt;/code&gt; clears the history file. A prompt is displayed before the history is erased asking you to confirm you really want to clear all history unless &lt;code&gt;builtin history&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;clear&lt;/code&gt; borra el archivo hist&amp;oacute;rico. Se muestra un mensaje antes de que se borre el historial pidi&amp;eacute;ndole que confirme que realmente desea borrar todo el historial a menos que se utilice el &lt;code&gt;builtin history&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b126941164422bc251f79e2c80becd6f5c178211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command -q git; and command git log&lt;/code&gt; runs &lt;code&gt;git log&lt;/code&gt; only if &lt;code&gt;git&lt;/code&gt; exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb0f5e272e28ae7c91fd8b023b0a19e7a459058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command -s ls&lt;/code&gt; returns the path to the &lt;code&gt;ls&lt;/code&gt; program.</source>
          <target state="translated">&lt;code&gt;command -s ls&lt;/code&gt; devuelve la ruta al programa &lt;code&gt;ls&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97c259a9d28f9f6b619125e53d36b8df5ba20de8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command -sq git; and command git log&lt;/code&gt; runs &lt;code&gt;git log&lt;/code&gt; only if &lt;code&gt;git&lt;/code&gt; exists.</source>
          <target state="translated">&lt;code&gt;command -sq git; and command git log&lt;/code&gt; ejecuta &lt;code&gt;git log&lt;/code&gt; solo si &lt;code&gt;git&lt;/code&gt; existe.</target>
        </trans-unit>
        <trans-unit id="a21b95c84bf5868716ad9ac99d71535372dabf6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command ls&lt;/code&gt; causes fish to execute the &lt;code&gt;ls&lt;/code&gt; program, even if an &lt;code&gt;ls&lt;/code&gt; function exists.</source>
          <target state="translated">&lt;code&gt;command ls&lt;/code&gt; hace que Fish ejecute el programa &lt;code&gt;ls&lt;/code&gt; , incluso si existe una funci&amp;oacute;n &lt;code&gt;ls&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a71b195f57af0b58405241fa516c189f211c3b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command&lt;/code&gt; forces the shell to execute the program &lt;code&gt;COMMANDNAME&lt;/code&gt; and ignore any functions or builtins with the same name.</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt; obliga al shell a ejecutar el programa &lt;code&gt;COMMANDNAME&lt;/code&gt; e ignorar cualquier funci&amp;oacute;n o incorporado con el mismo nombre.</target>
        </trans-unit>
        <trans-unit id="af221efa155137f5c61d4f5aceb1cf7c62f260f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;commandline -j $history[3]&lt;/code&gt; replaces the job under the cursor with the third item from the command line history.</source>
          <target state="translated">&lt;code&gt;commandline -j $history[3]&lt;/code&gt; reemplaza el trabajo debajo del cursor con el tercer elemento del historial de la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="309984e4dd2d8af4b4584b4c3083b4f0d1406f3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;commandline&lt;/code&gt; can be used to set or get the current contents of the command line buffer.</source>
          <target state="translated">&lt;code&gt;commandline&lt;/code&gt; se puede utilizar para establecer u obtener el contenido actual del b&amp;uacute;fer de la l&amp;iacute;nea de comandos.</target>
        </trans-unit>
        <trans-unit id="f15156642070a0cb6e71c6db8ebcc85452bc0c42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;complete-and-search&lt;/code&gt;, invoke the searchable pager on completion options (for convenience, this also moves backwards in the completion pager)</source>
          <target state="translated">&lt;code&gt;complete-and-search&lt;/code&gt; , invoque el buscapersonas con capacidad de b&amp;uacute;squeda en las opciones de finalizaci&amp;oacute;n (para mayor comodidad, esto tambi&amp;eacute;n retrocede en el localizador de finalizaci&amp;oacute;n)</target>
        </trans-unit>
        <trans-unit id="e5304d9a71d089c78f12b72b19459d5363598ef9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;complete&lt;/code&gt; defines, removes or lists completions for a command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089be67cff1a03e93a32f020b671eb8b1f56f883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;complete&lt;/code&gt;, guess the remainder of the current token</source>
          <target state="translated">&lt;code&gt;complete&lt;/code&gt; , adivina el resto del token actual</target>
        </trans-unit>
        <trans-unit id="d29943b58a6614527b303a36cdd18002ba211e22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;contains&lt;/code&gt; tests whether the set &lt;code&gt;VALUES&lt;/code&gt; contains the string &lt;code&gt;KEY&lt;/code&gt;. If so, &lt;code&gt;contains&lt;/code&gt; exits with status 0; if not, it exits with status 1.</source>
          <target state="translated">&lt;code&gt;contains&lt;/code&gt; pruebas si el conjunto &lt;code&gt;VALUES&lt;/code&gt; contiene la cadena &lt;code&gt;KEY&lt;/code&gt; . Si es as&amp;iacute;, &lt;code&gt;contains&lt;/code&gt; salidas con estado 0; si no, sale con el estado 1.</target>
        </trans-unit>
        <trans-unit id="9eb5230ded7b496a77e086af29b8cd85ff72378f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt; skips the remainder of the current iteration of the current inner loop, such as a &lt;a href=&quot;#for&quot;&gt;for&lt;/a&gt; loop or a &lt;a href=&quot;#while&quot;&gt;while&lt;/a&gt; loop. It is usually added inside of a conditional block such as an &lt;a href=&quot;#if&quot;&gt;if&lt;/a&gt; statement or a &lt;a href=&quot;#switch&quot;&gt;switch&lt;/a&gt; statement.</source>
          <target state="translated">&lt;code&gt;continue&lt;/code&gt; salta el resto de la iteraci&amp;oacute;n actual del bucle interno de corriente, tal como una &lt;a href=&quot;#for&quot;&gt;de&lt;/a&gt; bucle o un &lt;a href=&quot;#while&quot;&gt;mientras&lt;/a&gt; bucle. Por lo general, se agrega dentro de un bloque condicional, como una instrucci&amp;oacute;n &lt;a href=&quot;#if&quot;&gt;if&lt;/a&gt; o una instrucci&amp;oacute;n &lt;a href=&quot;#switch&quot;&gt;switch&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea429029af0d9cf0e400795ef659db0273b9e9ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt; skips the remainder of the current iteration of the current inner loop, such as a &lt;a href=&quot;for#cmd-for&quot;&gt;for&lt;/a&gt; loop or a &lt;a href=&quot;while#cmd-while&quot;&gt;while&lt;/a&gt; loop. It is usually added inside of a conditional block such as an &lt;a href=&quot;if#cmd-if&quot;&gt;if&lt;/a&gt; statement or a &lt;a href=&quot;switch#cmd-switch&quot;&gt;switch&lt;/a&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889049214149e0bdc403edd0d28167926cc29679" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt; does not accept any options, not even &lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; no acepta ninguna opci&amp;oacute;n, ni siquiera &lt;code&gt;-h&lt;/code&gt; o &lt;code&gt;--help&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a73ba46d4a83aa8636b8621b29b9a3175d9f43ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt; exits with a non-zero exit status if no arguments were passed to it, and with zero if at least one argument was passed.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; salidas con un estado de salida distinto de cero si no se le pasaron argumentos, y con cero si se pas&amp;oacute; al menos un argumento.</target>
        </trans-unit>
        <trans-unit id="c0f175ec05bda65eed56346e18ff1ca328041176" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt; prints the number of arguments that were passed to it, plus the number of newlines passed to it via stdin. This is usually used to find out how many elements an environment variable list contains, or how many lines there are in a text file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd4f1b7998e711ede282f331ba98b40351f8b37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt; prints the number of arguments that were passed to it. This is usually used to find out how many elements an environment variable array contains.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; imprime el n&amp;uacute;mero de argumentos que se le pasaron. Esto se usa generalmente para averiguar cu&amp;aacute;ntos elementos contiene una matriz de variables de entorno.</target>
        </trans-unit>
        <trans-unit id="664f9b331ae4b98fc7b3aa5e33894b2c305e537a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cp&lt;/code&gt;, copy files</source>
          <target state="translated">&lt;code&gt;cp&lt;/code&gt; , copiar archivos</target>
        </trans-unit>
        <trans-unit id="c1bccbc2ad70737a48e5852f872a2e24eedeb1e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cp&lt;/code&gt;: Copy files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a596e7d12d33c3d22375b8bc513344833bc79ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current-command&lt;/code&gt; prints the name of the currently-running function or command, like the deprecated &lt;code&gt;_&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db428b5648e98023e27b1992a285d5e91a0abb98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delete-char&lt;/code&gt;, delete one character to the right of the cursor</source>
          <target state="translated">&lt;code&gt;delete-char&lt;/code&gt; , borra un car&amp;aacute;cter a la derecha del cursor</target>
        </trans-unit>
        <trans-unit id="2b979b39d80674e2c5a74f23ada6effcb24ce50f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delete-or-exit&lt;/code&gt;, deletes one character to the right of the cursor or exits the shell if the commandline is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ac08b7c7e82241404acbaf1bbf590afed8c83a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delete&lt;/code&gt; deletes history items. The &lt;code&gt;--contains&lt;/code&gt; search option will be used if you don't specify a different search option. If you don't specify &lt;code&gt;--exact&lt;/code&gt; a prompt will be displayed before any items are deleted asking you which entries are to be deleted. You can enter the word &quot;all&quot; to delete all matching entries. You can enter a single ID (the number in square brackets) to delete just that single entry. You can enter more than one ID separated by a space to delete multiple entries. Just press [enter] to not delete anything. Note that the interactive delete behavior is a feature of the history function. The history builtin only supports &lt;code&gt;--exact --case-sensitive&lt;/code&gt; deletion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae7a82ff377a36f428165b33436467957d8c7d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delete&lt;/code&gt; deletes history items. Without the &lt;code&gt;--prefix&lt;/code&gt; or &lt;code&gt;--contains&lt;/code&gt; options, the exact match of the specified text will be deleted. If you don't specify &lt;code&gt;--exact&lt;/code&gt; a prompt will be displayed before any items are deleted asking you which entries are to be deleted. You can enter the word &quot;all&quot; to delete all matching entries. You can enter a single ID (the number in square brackets) to delete just that single entry. You can enter more than one ID separated by a space to delete multiple entries. Just press [enter] to not delete anything. Note that the interactive delete behavior is a feature of the history function. The history builtin only supports &lt;code&gt;--exact --case-sensitive&lt;/code&gt; deletion.</source>
          <target state="translated">&lt;code&gt;delete&lt;/code&gt; elimina elementos del historial. Sin las opciones &lt;code&gt;--prefix&lt;/code&gt; o &lt;code&gt;--contains&lt;/code&gt; , se eliminar&amp;aacute; la coincidencia exacta del texto especificado. Si no especifica &lt;code&gt;--exact&lt;/code&gt; , se mostrar&amp;aacute; un mensaje antes de eliminar cualquier elemento que le preguntar&amp;aacute; qu&amp;eacute; entradas se deben eliminar. Puede ingresar la palabra &quot;todos&quot; para eliminar todas las entradas coincidentes. Puede ingresar una &amp;uacute;nica identificaci&amp;oacute;n (el n&amp;uacute;mero entre corchetes) para eliminar solo esa entrada. Puede ingresar m&amp;aacute;s de una identificaci&amp;oacute;n separada por un espacio para eliminar m&amp;uacute;ltiples entradas. Simplemente presione [enter] para no borrar nada. Tenga en cuenta que el comportamiento de eliminaci&amp;oacute;n interactivo es una caracter&amp;iacute;stica de la funci&amp;oacute;n de historial. El historial incorporado solo admite &lt;code&gt;--exact --case-sensitive&lt;/code&gt; eliminaci&amp;oacute;n sensible a may&amp;uacute;sculas y min&amp;uacute;sculas .</target>
        </trans-unit>
        <trans-unit id="eeddc56657f7e157dc8354c870c20f5ecb4d8ad3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dirh&lt;/code&gt; does not accept any parameters.</source>
          <target state="translated">&lt;code&gt;dirh&lt;/code&gt; no acepta ning&amp;uacute;n par&amp;aacute;metro.</target>
        </trans-unit>
        <trans-unit id="1f02a15edef1ca7faae47ffec08cb146ed00e8f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dirh&lt;/code&gt; prints the current &lt;a href=&quot;../index#directory-history&quot;&gt;directory history&lt;/a&gt;. The current position in the history is highlighted using the color defined in the &lt;code&gt;fish_color_history_current&lt;/code&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e7b82e83d7b0b50774a2eb148a198ce41a39ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dirh&lt;/code&gt; prints the current directory history. The current position in the history is highlighted using the color defined in the &lt;code&gt;fish_color_history_current&lt;/code&gt; environment variable.</source>
          <target state="translated">&lt;code&gt;dirh&lt;/code&gt; imprime el historial del directorio actual. La posici&amp;oacute;n actual en el historial se resalta usando el color definido en la variable de entorno &lt;code&gt;fish_color_history_current&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d54c88c15f61a2f78a8e6551c1c0e47f94f0cff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dirname&lt;/code&gt; prints just the path to the running script, without the actual filename itself. This can be relative to $PWD (including just &quot;.&quot;), depending on how the script was called. This is the same as passing the &lt;code&gt;filename&lt;/code&gt; to &lt;code&gt;dirname(3)&lt;/code&gt;. It's useful if you want to use other files in the current script's directory or similar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e40ea360274eda68b869324ac2b93c116e075e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dirs&lt;/code&gt; does not accept any parameters.</source>
          <target state="translated">&lt;code&gt;dirs&lt;/code&gt; no acepta ning&amp;uacute;n par&amp;aacute;metro.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
