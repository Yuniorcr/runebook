<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="fish">
    <body>
      <group id="fish">
        <trans-unit id="dd013ce2337c6820983e0fd191e213738ceadda7" translate="yes" xml:space="preserve">
          <source>To append standard error to a file, write &lt;code&gt;2&amp;gt;&amp;gt;DESTINATION_FILE&lt;/code&gt;</source>
          <target state="translated">Para agregar un error est&amp;aacute;ndar a un archivo, escriba &lt;code&gt;2&amp;gt;&amp;gt;DESTINATION_FILE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bfd8287ec081b8df5a9a52e9b01c83f255664e49" translate="yes" xml:space="preserve">
          <source>To append standard output to a file, use &lt;code&gt;&amp;gt;&amp;gt;DESTINATION_FILE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0108b6b821f16c26049be48e0e57d43670272afc" translate="yes" xml:space="preserve">
          <source>To append standard output to a file, write &lt;code&gt;&amp;gt;&amp;gt;DESTINATION_FILE&lt;/code&gt;</source>
          <target state="translated">Para agregar salida est&amp;aacute;ndar a un archivo, escriba &lt;code&gt;&amp;gt;&amp;gt;DESTINATION_FILE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9943d195413e31ff48e223d431261ac3888d43ba" translate="yes" xml:space="preserve">
          <source>To append the output of FD N to a file, write &lt;code&gt;N&amp;gt;&amp;gt;DESTINATION_FILE&lt;/code&gt;</source>
          <target state="translated">Para agregar la salida de FD N a un archivo, escriba &lt;code&gt;N&amp;gt;&amp;gt;DESTINATION_FILE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c964fa72812920ad21816b3c2f344f4362d4abd1" translate="yes" xml:space="preserve">
          <source>To append the output of descriptor N to a file, use &lt;code&gt;N&amp;gt;&amp;gt;DESTINATION_FILE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f5fb3a451aea3a448df0a4fc685c2ff93042b5" translate="yes" xml:space="preserve">
          <source>To avoid needless typing, a frequently-run command like &lt;code&gt;git checkout&lt;/code&gt; can be abbreviated to &lt;code&gt;gco&lt;/code&gt; using the &lt;a href=&quot;cmds/abbr#cmd-abbr&quot;&gt;abbr&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193736dda0ff3338bfe47b251780f85b63fdea40" translate="yes" xml:space="preserve">
          <source>To avoid this problem, consider changing the setting which fish inherits. If this is not possible, add a statement to your &lt;a href=&quot;index#&quot;&gt;user initialization file&lt;/a&gt; (usually &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt;):</source>
          <target state="translated">Para evitar este problema, considere cambiar la configuraci&amp;oacute;n que hereda el pez. Si esto no es posible, agregue una declaraci&amp;oacute;n a su &lt;a href=&quot;index#&quot;&gt;archivo de inicializaci&amp;oacute;n de usuario&lt;/a&gt; (generalmente &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="63eb575adf26f78b782518f6a17e924957f90214" translate="yes" xml:space="preserve">
          <source>To avoid this problem, consider changing the setting which fish inherits. If this is not possible, add a statement to your &lt;a href=&quot;index#initialization&quot;&gt;user initialization file&lt;/a&gt; (usually &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e4d836110da227491a5f8bda022aa8c6061ef3" translate="yes" xml:space="preserve">
          <source>To change the number of characters per path component, set $fish_prompt_pwd_dir_length to the number of characters. Setting it to 0 or an invalid value will disable shortening entirely.</source>
          <target state="translated">Para cambiar el número de caracteres por componente de la ruta,establezca $fish_prompt_pwd_dir_length al número de caracteres.Ponerlo a 0 o un valor inválido deshabilitará el acortamiento por completo.</target>
        </trans-unit>
        <trans-unit id="21b68d71ccfba8e68579a0f529af4418fdee11ee" translate="yes" xml:space="preserve">
          <source>To change the number of characters per path component, set &lt;code&gt;$fish_prompt_pwd_dir_length&lt;/code&gt; to the number of characters. Setting it to 0 or an invalid value will disable shortening entirely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9f95b7010d6c33d5feeb22c934ddd25044836e" translate="yes" xml:space="preserve">
          <source>To compare strings or numbers or check file properties (whether a file exists or is writeable and such), use &lt;a href=&quot;cmds/test#cmd-test&quot;&gt;test&lt;/a&gt;, like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3563dd46a7946806ee797b7c244ebcbcfd652c" translate="yes" xml:space="preserve">
          <source>To compare strings or numbers or check file properties (whether a file exists or is writeable and such), use &lt;a href=&quot;commands#test&quot;&gt;test&lt;/a&gt;, like</source>
          <target state="translated">Para comparar cadenas o n&amp;uacute;meros o verificar las propiedades del archivo (si un archivo existe o se puede escribir , etc. ), use &lt;a href=&quot;commands#test&quot;&gt;test&lt;/a&gt; , como</target>
        </trans-unit>
        <trans-unit id="6a7f4987047f57b402d8e5f6d3639b704d77e210" translate="yes" xml:space="preserve">
          <source>To create a variable &lt;code&gt;smurf&lt;/code&gt;, containing the items &lt;code&gt;blue&lt;/code&gt; and &lt;code&gt;small&lt;/code&gt;, simply write:</source>
          <target state="translated">Para crear un &lt;code&gt;smurf&lt;/code&gt; variable , que contenga los elementos &lt;code&gt;blue&lt;/code&gt; y &lt;code&gt;small&lt;/code&gt; , simplemente escriba:</target>
        </trans-unit>
        <trans-unit id="eb511fd856e12e54362713b367b14d821ca7b8b6" translate="yes" xml:space="preserve">
          <source>To customize the syntax highlighting, you can set the environment variables listed in the &lt;a href=&quot;#variables-color&quot;&gt;Variables for changing highlighting colors&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a0be80bb6315e5a311feb69467eb89c6ebbff0" translate="yes" xml:space="preserve">
          <source>To customize the syntax highlighting, you can set the environment variables listed in the &lt;a href=&quot;index#variables-color&quot;&gt;Variables for changing highlighting colors&lt;/a&gt; section.</source>
          <target state="translated">Para personalizar el resaltado de sintaxis, puede configurar las variables de entorno enumeradas en la secci&amp;oacute;n &lt;a href=&quot;index#variables-color&quot;&gt;Variables para cambiar los colores de resaltado&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9fc093eff5ae033f2c40b9198d007e24ef0b72a0" translate="yes" xml:space="preserve">
          <source>To debug color palette problems, &lt;code&gt;tput colors&lt;/code&gt; may be useful to see the number of colors in terminfo for a terminal. Fish launched as &lt;code&gt;fish -d2&lt;/code&gt; will include diagnostic messages that indicate the color support mode in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5316a05ae33af5432fffe9b3aaf95e1dec1fb22" translate="yes" xml:space="preserve">
          <source>To define a handler that works in older versions of fish as well, define it the old way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac21aa705a0725f893e869e7bdb461f9339c261d" translate="yes" xml:space="preserve">
          <source>To easily create a function of this form, you can use the &lt;a href=&quot;cmds/alias#cmd-alias&quot;&gt;alias&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb35be6b055e427e54c8c22090be58ec54650f0" translate="yes" xml:space="preserve">
          <source>To easily create a function of this form, you can use the &lt;a href=&quot;cmds/alias#cmd-alias&quot;&gt;alias&lt;/a&gt; command. Unlike other shells, this just makes functions - fish has no separate concept of an &quot;alias&quot;, we just use the word for a function wrapper like this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cc6de064f425d626ab9949da6c184849b875b2" translate="yes" xml:space="preserve">
          <source>To easily create a function of this form, you can use the &lt;a href=&quot;commands#alias&quot;&gt;alias&lt;/a&gt; command.</source>
          <target state="translated">Para crear f&amp;aacute;cilmente una funci&amp;oacute;n de este formulario, puede utilizar el comando &lt;a href=&quot;commands#alias&quot;&gt;alias&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f0f85abb2c3677b211634a0d11ce95060b198665" translate="yes" xml:space="preserve">
          <source>To edit a function, you can use &lt;a href=&quot;cmds/funced#cmd-funced&quot;&gt;funced&lt;/a&gt;, and to save a function &lt;a href=&quot;cmds/funcsave#cmd-funcsave&quot;&gt;funcsave&lt;/a&gt;. This will store it in a function file that fish will &lt;a href=&quot;#syntax-function-autoloading&quot;&gt;autoload&lt;/a&gt; when needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110fa20e668a2455c19787d584e2b1fd12dc6b95" translate="yes" xml:space="preserve">
          <source>To find out what sequence a key combination sends, you can use &lt;a href=&quot;fish_key_reader#cmd-fish-key-reader&quot;&gt;fish_key_reader&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f64b85ef3f001562e7c47d755547c924af5eb9a" translate="yes" xml:space="preserve">
          <source>To force true-color support on or off, set $fish_term24bit to &quot;1&quot; for on and 0 for off - &lt;code&gt;set -g fish_term24bit 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91455f2060dfc72dce00653bdc5f73f5d7afdf7" translate="yes" xml:space="preserve">
          <source>To get a listing of all currently started jobs, use the &lt;a href=&quot;cmds/jobs#cmd-jobs&quot;&gt;jobs&lt;/a&gt; command. These listed jobs can be removed with the &lt;a href=&quot;cmds/disown#cmd-disown&quot;&gt;disown&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c65bf9fb8994e55d7d62a0a0233657bfd07c71" translate="yes" xml:space="preserve">
          <source>To get a listing of all currently started jobs, use the &lt;a href=&quot;commands#jobs&quot;&gt;&lt;code&gt;jobs&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">Para obtener una lista de todos los trabajos iniciados actualmente, utilice el comando &lt;a href=&quot;commands#jobs&quot;&gt; &lt;code&gt;jobs&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="efb945613c9e2b54a3ed413b1ce572f55f0f25b2" translate="yes" xml:space="preserve">
          <source>To give a variable to an external command, it needs to be &quot;exported&quot;. Unlike other shells, &lt;code&gt;fish&lt;/code&gt; does not have an export command. Instead, a variable is exported via an option to &lt;code&gt;set&lt;/code&gt;, either &lt;code&gt;--export&lt;/code&gt; or just &lt;code&gt;-x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e559cbea8b8b77c0fadd10f546204c85412f7f4" translate="yes" xml:space="preserve">
          <source>To give a variable to an external command, it needs to be &quot;exported&quot;. Unlike other shells, fish does not have an export command. Instead, a variable is exported via an option to &lt;code&gt;set&lt;/code&gt;, either &lt;code&gt;--export&lt;/code&gt; or just &lt;code&gt;-x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cc690be81cd9324afd63f06a6d3dacc446c42e" translate="yes" xml:space="preserve">
          <source>To have black text on alternating white and gray backgrounds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb97c4eee9e02bf1114c1290403e1dda007a114" translate="yes" xml:space="preserve">
          <source>To implement an alias, use the &lt;code&gt;-w&lt;/code&gt; or &lt;code&gt;--wraps&lt;/code&gt; option:</source>
          <target state="translated">Para implementar un alias, use la opci&amp;oacute;n &lt;code&gt;-w&lt;/code&gt; o &lt;code&gt;--wraps&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d52456194e9d9376ea756d87898a4b5a9b324eb6" translate="yes" xml:space="preserve">
          <source>To install the development version of fish see the instructions at the &lt;a href=&quot;https://github.com/fish-shell/fish-shell&quot;&gt;project's GitHub page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0eda507fd689cd03b8cb690568035f244b29bbb" translate="yes" xml:space="preserve">
          <source>To install the development version of fish, see the instructions on the &lt;a href=&quot;https://github.com/fish-shell/fish-shell&quot;&gt;project's GitHub page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b840a474ceb913cb6bb6472c643a7f3bbb2b1e70" translate="yes" xml:space="preserve">
          <source>To learn more about the &lt;code&gt;echo&lt;/code&gt; command, read its manual page by typing &lt;code&gt;man echo&lt;/code&gt;. &lt;code&gt;man&lt;/code&gt; is a command for displaying a manual page on a given topic. It takes the name of the manual page to display as an argument. There are manual pages for almost every command. There are also manual pages for many other things, such as system libraries and important files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2897daf35873ca16d00ef5a1dac5a630b8c3c2e1" translate="yes" xml:space="preserve">
          <source>To make errors highlighted and red, use:</source>
          <target state="translated">Para hacer que los errores se resalten y se pongan en rojo,utilice:</target>
        </trans-unit>
        <trans-unit id="f1ccf5c0e4be9b8d4c3ab23b8df125fad6849641" translate="yes" xml:space="preserve">
          <source>To make fish your default shell:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023b9f3aacfbee565af7cc9aef546e4c39fbdd3f" translate="yes" xml:space="preserve">
          <source>To not overwrite (&quot;clobber&quot;) an existing file, use &lt;code&gt;&amp;gt;?DESTINATION&lt;/code&gt; or &lt;code&gt;2&amp;gt;?DESTINATION&lt;/code&gt;. This is known as the &quot;noclobber&quot; redirection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fa292c2ab02a989c54851cc682dc196a6ed257" translate="yes" xml:space="preserve">
          <source>To not overwrite (&quot;clobber&quot;) an existing file, write '&amp;gt;?DESTINATION' or '2&amp;gt;?DESTINATION'</source>
          <target state="translated">Para no sobrescribir (&quot;clobber&quot;) un archivo existente, escriba '&amp;gt;? DESTINO' o '2&amp;gt;? DESTINO'</target>
        </trans-unit>
        <trans-unit id="c32475444757498cf8759ddf9075fa1f9322a1a8" translate="yes" xml:space="preserve">
          <source>To not overwrite (&quot;clobber&quot;) an existing file, write &lt;code&gt;&amp;gt;?DESTINATION&lt;/code&gt; or &lt;code&gt;2&amp;gt;?DESTINATION&lt;/code&gt; (this is also known as the &quot;noclobber&quot; redirection)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec5501ff931d8cf824481581d142283552d1be7" translate="yes" xml:space="preserve">
          <source>To prepend /usr/local/bin and /usr/sbin to &lt;code&gt;$PATH&lt;/code&gt;, you can write:</source>
          <target state="translated">Para anteponer / usr / local / bin y / usr / sbin a &lt;code&gt;$PATH&lt;/code&gt; , puede escribir:</target>
        </trans-unit>
        <trans-unit id="e4beb8ce6e29ccb991aceef2a82e88203ebcf1e6" translate="yes" xml:space="preserve">
          <source>To provide a list of possible completions for myprog, use the &lt;code&gt;-a&lt;/code&gt; switch. If &lt;code&gt;myprog&lt;/code&gt; accepts the arguments start and stop, this can be specified as &amp;lsquo;complete -c myprog -a 'start stop&amp;rsquo;&lt;code&gt;. The argument to the&lt;/code&gt;-a` switch is always a single string. At completion time, it will be tokenized on spaces and tabs, and variable expansion, command substitution and other forms of parameter expansion will take place.</source>
          <target state="translated">Para proporcionar una lista de posibles finalizaciones para myprog, use la opci&amp;oacute;n &lt;code&gt;-a&lt;/code&gt; . Si &lt;code&gt;myprog&lt;/code&gt; acepta los argumentos start y stop, esto se puede especificar como 'complete -c myprog -a' start stop ' &lt;code&gt;. The argument to the&lt;/code&gt; modificador -a` es siempre una sola cadena. En el momento de finalizaci&amp;oacute;n, se tokenizar&amp;aacute; en espacios y pesta&amp;ntilde;as, y se llevar&amp;aacute; a cabo la expansi&amp;oacute;n de variables, la sustituci&amp;oacute;n de comandos y otras formas de expansi&amp;oacute;n de par&amp;aacute;metros.</target>
        </trans-unit>
        <trans-unit id="9ba5c8cf0aa771ef03a27f5b13b93fb552811059" translate="yes" xml:space="preserve">
          <source>To provide a list of possible completions for myprog, use the &lt;code&gt;-a&lt;/code&gt; switch. If &lt;code&gt;myprog&lt;/code&gt; accepts the arguments start and stop, this can be specified as &lt;code&gt;complete -c myprog -a 'start stop'&lt;/code&gt;. The argument to the &lt;code&gt;-a&lt;/code&gt; switch is always a single string. At completion time, it will be tokenized on spaces and tabs, and variable expansion, command substitution and other forms of parameter expansion will take place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8ed905f0906d373301988cc50c52c17c5e55fd" translate="yes" xml:space="preserve">
          <source>To read standard input from a file, use &lt;code&gt;&amp;lt;SOURCE_FILE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25d06bf926dcd36845db13c547e9060f688cf44" translate="yes" xml:space="preserve">
          <source>To read standard input from a file, write &lt;code&gt;&amp;lt;SOURCE_FILE&lt;/code&gt;</source>
          <target state="translated">Para leer la entrada est&amp;aacute;ndar de un archivo, escriba &lt;code&gt;&amp;lt;SOURCE_FILE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="566482427df8f2419f7d694e4a36a521345245bc" translate="yes" xml:space="preserve">
          <source>To redirect both standard output and standard error to the file 'all_output.txt', you can write &lt;code&gt;echo Hello &amp;amp;&amp;gt; all_output.txt&lt;/code&gt;, which is a convenience for &lt;code&gt;echo Hello &amp;gt; all_output.txt 2&amp;gt;&amp;amp;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd4ccfede11d358f3540d606a3599db34a9bcee" translate="yes" xml:space="preserve">
          <source>To redirect both standard output and standard error to the file 'all_output.txt', you can write &lt;code&gt;echo Hello &amp;gt; all_output.txt 2&amp;gt;&amp;amp;1&lt;/code&gt;.</source>
          <target state="translated">Para redirigir tanto la salida est&amp;aacute;ndar como el error est&amp;aacute;ndar al archivo 'all_output.txt', puede escribir &lt;code&gt;echo Hello &amp;gt; all_output.txt 2&amp;gt;&amp;amp;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f9c19f996d0330cf3e69a9443cdf693a9354414" translate="yes" xml:space="preserve">
          <source>To redirect input of FD N, write &lt;code&gt;N&amp;lt;DESTINATION&lt;/code&gt;</source>
          <target state="translated">Para redirigir la entrada de FD N, escriba &lt;code&gt;N&amp;lt;DESTINATION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1bceaef825c7c9262bebcb64ef18bc758682a29d" translate="yes" xml:space="preserve">
          <source>To redirect output of FD N, write &lt;code&gt;N&amp;gt;DESTINATION&lt;/code&gt;</source>
          <target state="translated">Para redirigir la salida de FD N, escriba &lt;code&gt;N&amp;gt;DESTINATION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c95f3118a2473e23823116b30dffd5cc8f94fec" translate="yes" xml:space="preserve">
          <source>To redirect stdout and stderr into one file, you need to first redirect stdout, and then stderr into stdout:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd5353993d24d3d04f1dc39f9b1dd0aad9db068" translate="yes" xml:space="preserve">
          <source>To redirect the input of descriptor N, use &lt;code&gt;N&amp;lt;DESTINATION&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25aa73e598e223c0f22764d82021558a4b067e6" translate="yes" xml:space="preserve">
          <source>To redirect the output of descriptor N, use &lt;code&gt;N&amp;gt;DESTINATION&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752b3b48d45276169440be6784b7f3a0d12fbd09" translate="yes" xml:space="preserve">
          <source>To remove /usr/local/bin from &lt;code&gt;$PATH&lt;/code&gt;, you can write:</source>
          <target state="translated">Para eliminar / usr / local / bin de &lt;code&gt;$PATH&lt;/code&gt; , puede escribir:</target>
        </trans-unit>
        <trans-unit id="bfee3c8015977afa9c3de4b32b2c9383aee5df05" translate="yes" xml:space="preserve">
          <source>To save custom keybindings, put the &lt;code&gt;bind&lt;/code&gt; statements into &lt;a href=&quot;../index#initialization&quot;&gt;config.fish&lt;/a&gt;. Alternatively, fish also automatically executes a function called &lt;code&gt;fish_user_key_bindings&lt;/code&gt; if it exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2510f1ad4da5cd52177add85db1eee2d566d8fe" translate="yes" xml:space="preserve">
          <source>To save custom keybindings, put the &lt;code&gt;bind&lt;/code&gt; statements into &lt;a href=&quot;index#initialization&quot;&gt;config.fish&lt;/a&gt;. Alternatively, fish also automatically executes a function called &lt;code&gt;fish_user_key_bindings&lt;/code&gt; if it exists.</source>
          <target state="translated">Para guardar combinaciones de teclas personalizadas, poner los &lt;code&gt;bind&lt;/code&gt; declaraciones en &lt;a href=&quot;index#initialization&quot;&gt;config.fish&lt;/a&gt; . Alternativamente, fish tambi&amp;eacute;n ejecuta autom&amp;aacute;ticamente una funci&amp;oacute;n llamada &lt;code&gt;fish_user_key_bindings&lt;/code&gt; si existe.</target>
        </trans-unit>
        <trans-unit id="61901ecaf8e208e6ef9d0647eaddf669c1ca4bd8" translate="yes" xml:space="preserve">
          <source>To search for previous entries containing the word 'make', type &lt;code&gt;make&lt;/code&gt; in the console and press the up key.</source>
          <target state="translated">Para buscar entradas anteriores que contengan la palabra 'make', escriba &lt;code&gt;make&lt;/code&gt; en la consola y presione la tecla arriba.</target>
        </trans-unit>
        <trans-unit id="4b5da07cf8e10869da36d0830cda73f0b82b9df0" translate="yes" xml:space="preserve">
          <source>To see universal variables in action, start two fish sessions side by side, and issue the following command in one of them &lt;code&gt;set fish_color_cwd blue&lt;/code&gt;. Since &lt;code&gt;fish_color_cwd&lt;/code&gt; is a universal variable, the color of the current working directory listing in the prompt will instantly change to blue on both terminals.</source>
          <target state="translated">Para ver las variables universales en acci&amp;oacute;n, inicie dos sesiones de pesca una al lado de la otra y emita el siguiente comando en una de ellas, &lt;code&gt;set fish_color_cwd blue&lt;/code&gt; . Dado que &lt;code&gt;fish_color_cwd&lt;/code&gt; es una variable universal, el color de la lista del directorio de trabajo actual en el indicador cambiar&amp;aacute; instant&amp;aacute;neamente a azul en ambos terminales.</target>
        </trans-unit>
        <trans-unit id="b44733fd0f7a6b3cff6f09a867502f4ea60ec37a" translate="yes" xml:space="preserve">
          <source>To separate a variable name from text encase the variable within double-quotes or braces.</source>
          <target state="translated">Para separar el nombre de una variable del texto,encierre la variable entre comillas o corchetes.</target>
        </trans-unit>
        <trans-unit id="27f9d440d7aee2f279a56362c4acb567b9cf727d" translate="yes" xml:space="preserve">
          <source>To separate a variable name from text encase the variable within double-quotes or braces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e43356526ae1b80c0012341e8a73f37f04976b" translate="yes" xml:space="preserve">
          <source>To separate a variable name from text you can encase the variable within double-quotes or braces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4c8bffe9739fce5469a9db2a9dd6941b6021d0" translate="yes" xml:space="preserve">
          <source>To set a variable value, use the &lt;a href=&quot;cmds/set#cmd-set&quot;&gt;set&lt;/a&gt; command. A variable name can not be empty and can contain only letters, digits, and underscores. It may begin and end with any of those characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8052447e58d55b5e4f105d0ffa9d20ca69cabc" translate="yes" xml:space="preserve">
          <source>To set a variable value, use the &lt;a href=&quot;commands#set&quot;&gt;&lt;code&gt;set&lt;/code&gt; command&lt;/a&gt;. A variable name can not be empty and can contain only letters, digits, and underscores. It may begin and end with any of those characters.</source>
          <target state="translated">Para establecer un valor de variable, use el &lt;a href=&quot;commands#set&quot;&gt;comando &lt;/a&gt; &lt;code&gt;set&lt;/code&gt; . Un nombre de variable no puede estar vac&amp;iacute;o y solo puede contener letras, d&amp;iacute;gitos y guiones bajos. Puede comenzar y terminar con cualquiera de esos personajes.</target>
        </trans-unit>
        <trans-unit id="698d5831491bbb9701f405a1762b10b1e4e34b8d" translate="yes" xml:space="preserve">
          <source>To set the variable &lt;code&gt;smurf_color&lt;/code&gt; to the value &lt;code&gt;blue&lt;/code&gt;, use the command &lt;code&gt;set smurf_color blue&lt;/code&gt;.</source>
          <target state="translated">Para establecer la variable &lt;code&gt;smurf_color&lt;/code&gt; en el valor &lt;code&gt;blue&lt;/code&gt; , use el comando &lt;code&gt;set smurf_color blue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bed9902ef9dec5f2285d68ae61ceccf41fb50e0a" translate="yes" xml:space="preserve">
          <source>To show the last command in the title:</source>
          <target state="translated">Para mostrar el último comando del título:</target>
        </trans-unit>
        <trans-unit id="2dfd3462301075bbcb353fa08e104b09a88deef0" translate="yes" xml:space="preserve">
          <source>To specify a completion, use the &lt;code&gt;complete&lt;/code&gt; command. &lt;code&gt;complete&lt;/code&gt; takes as a parameter the name of the command to specify a completion for. For example, to add a completion for the program &lt;code&gt;myprog&lt;/code&gt;, one would start the completion command with &lt;code&gt;complete -c myprog ...&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b0cfc6463833f72da638ff9b75529f78df15de" translate="yes" xml:space="preserve">
          <source>To specify a signal handler for the WINCH signal, write:</source>
          <target state="translated">Para especificar un manejador de señal para la señal WINCH,escribe:</target>
        </trans-unit>
        <trans-unit id="bf76948676cc86f015c40501b64c28f16144eac2" translate="yes" xml:space="preserve">
          <source>To start a debug session simply run the builtin command &lt;a href=&quot;cmds/breakpoint#cmd-breakpoint&quot;&gt;breakpoint&lt;/a&gt; at the point in a function or script where you wish to gain control. Also, the default action of the TRAP signal is to call this builtin. So a running script can be debugged by sending it the TRAP signal with the &lt;code&gt;kill&lt;/code&gt; command. Once in the debugger, it is easy to insert new breakpoints by using the funced function to edit the definition of a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5271e92937f5c39aabd3c25c1ed834a98af6473a" translate="yes" xml:space="preserve">
          <source>To start a debug session simply run the builtin command &lt;code&gt;breakpoint&lt;/code&gt; at the point in a function or script where you wish to gain control. Also, the default action of the TRAP signal is to call this builtin. So a running script can be debugged by sending it the TRAP signal with the &lt;code&gt;kill&lt;/code&gt; command. Once in the debugger, it is easy to insert new breakpoints by using the funced function to edit the definition of a function.</source>
          <target state="translated">Para iniciar una sesi&amp;oacute;n de depuraci&amp;oacute;n, simplemente ejecute el &lt;code&gt;breakpoint&lt;/code&gt; de interrupci&amp;oacute;n del comando incorporado en el punto de una funci&amp;oacute;n o script donde desea obtener el control. Adem&amp;aacute;s, la acci&amp;oacute;n predeterminada de la se&amp;ntilde;al TRAP es llamar a esto incorporado. Por lo tanto, un script en ejecuci&amp;oacute;n puede depurarse envi&amp;aacute;ndole la se&amp;ntilde;al TRAP con el comando &lt;code&gt;kill&lt;/code&gt; . Una vez en el depurador, es f&amp;aacute;cil insertar nuevos puntos de interrupci&amp;oacute;n utilizando la funci&amp;oacute;n funced para editar la definici&amp;oacute;n de una funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1ca038b49940b6708e8ae180bb586be833d5a8f7" translate="yes" xml:space="preserve">
          <source>To use a &quot;,&quot; as an element, &lt;a href=&quot;#quotes&quot;&gt;quote&lt;/a&gt; or &lt;a href=&quot;#escapes&quot;&gt;escape&lt;/a&gt; it.</source>
          <target state="translated">Para usar un &quot;,&quot; como elemento, &lt;a href=&quot;#quotes&quot;&gt;c&amp;iacute;telo&lt;/a&gt; o &lt;a href=&quot;#escapes&quot;&gt;ev&amp;iacute;telo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4d1e2f58f1d1e885a6a557bd9d4d5d08b6944f6a" translate="yes" xml:space="preserve">
          <source>To use the value of the variable &lt;code&gt;smurf_color&lt;/code&gt;, write &lt;code&gt;$&lt;/code&gt; (dollar symbol) followed by the name of the variable, like &lt;code&gt;echo Smurfs are usually $smurf_color&lt;/code&gt;, which would print the result 'Smurfs are usually blue'.</source>
          <target state="translated">Para usar el valor de la variable &lt;code&gt;smurf_color&lt;/code&gt; , escriba &lt;code&gt;$&lt;/code&gt; (s&amp;iacute;mbolo de d&amp;oacute;lar) seguido del nombre de la variable, como &lt;code&gt;echo Smurfs are usually $smurf_color&lt;/code&gt; , que imprimir&amp;iacute;a el resultado 'Los pitufos suelen ser azules'.</target>
        </trans-unit>
        <trans-unit id="b7fdd1a277349141715df3ca37a707642b6fd9e7" translate="yes" xml:space="preserve">
          <source>To use this command, pass the option specifications (&lt;code&gt;OPTION_SPEC&lt;/code&gt;), then a mandatory &lt;code&gt;--&lt;/code&gt;, and then the arguments you want to have parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0420d95534bd2d7a38653c38d0ac8ed9626c93d1" translate="yes" xml:space="preserve">
          <source>To write standard error to a file, use &lt;code&gt;2&amp;gt;DESTINATION&lt;/code&gt;. &lt;a href=&quot;#id4&quot; id=&quot;id3&quot;&gt;[1]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68bccd38cdde729f08d1dabeb1a907eb895c4a23" translate="yes" xml:space="preserve">
          <source>To write standard error to a file, write &lt;code&gt;2&amp;gt;DESTINATION&lt;/code&gt;</source>
          <target state="translated">Para escribir un error est&amp;aacute;ndar en un archivo, escriba &lt;code&gt;2&amp;gt;DESTINATION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="940e7eb5db628c3cea52e63456a2070ec3f08b28" translate="yes" xml:space="preserve">
          <source>To write standard error to a file, write &lt;code&gt;2&amp;gt;DESTINATION&lt;/code&gt;&lt;a href=&quot;#id4&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce34c83de6694d21d26710672c3c294c880c628" translate="yes" xml:space="preserve">
          <source>To write standard output to a file, use &lt;code&gt;&amp;gt;DESTINATION&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659acd568f9529fe70705f8989914717371b557a" translate="yes" xml:space="preserve">
          <source>To write standard output to a file, write &lt;code&gt;&amp;gt;DESTINATION&lt;/code&gt;</source>
          <target state="translated">Para escribir una salida est&amp;aacute;ndar en un archivo, escriba &lt;code&gt;&amp;gt;DESTINATION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73b0536304b40903244a528081e1fdc688374119" translate="yes" xml:space="preserve">
          <source>To write them on the same line, use the semicolon (&quot;;&quot;). That means the following two examples are equivalent:</source>
          <target state="translated">Para escribirlas en la misma línea,use el punto y coma (&quot;;&quot;).Eso significa que los dos ejemplos siguientes son equivalentes:</target>
        </trans-unit>
        <trans-unit id="8a17b293eb79b591812fbe348e1ab2d33402a845" translate="yes" xml:space="preserve">
          <source>Try hitting tab and see what &lt;code&gt;fish&lt;/code&gt; can do!</source>
          <target state="translated">&amp;iexcl;Intente presionar la pesta&amp;ntilde;a y vea lo que pueden hacer los &lt;code&gt;fish&lt;/code&gt; !</target>
        </trans-unit>
        <trans-unit id="357d0b6f824ae282b06c0a7495f71caa86a4d813" translate="yes" xml:space="preserve">
          <source>Try hitting tab and see what fish can do!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ae24cf5711e1db7dcd74536d4434b26acd24f7" translate="yes" xml:space="preserve">
          <source>Turn on Vi key bindings and rebind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d92f132378d16ce633195f1d7dbdeb505f95344" translate="yes" xml:space="preserve">
          <source>Turns on Vi key bindings and rebinds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb05e0051333734c4ad4030d178c0e59ac5682e1" translate="yes" xml:space="preserve">
          <source>Turns on Vi key bindings and rebinds &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;C&lt;/b&gt; to clear the input line.</source>
          <target state="translated">Activa las combinaciones de teclas Vi y vuelve a enlazar &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;C&lt;/b&gt; para borrar la l&amp;iacute;nea de entrada.</target>
        </trans-unit>
        <trans-unit id="2701a94c0eb55cbd958a87dff3e959673ff1bf53" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
          <target state="translated">Tutorial</target>
        </trans-unit>
        <trans-unit id="4ae31f3f9da097dfe555b5c2990b13ab5a4f5e4a" translate="yes" xml:space="preserve">
          <source>Two arguments indicate a range from START to END (both START and END included).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afeb56eacafb6f9fd9411384ec8ed7baeb42be8e" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;exit&lt;/code&gt; to exit a fish shell:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eeed57cfed2ef820c15bef3ddf2f3599f7f2395" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;fish&lt;/code&gt; to start a fish shell:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3070b110774237d9cb98c68a71f5c06d6047bf50" translate="yes" xml:space="preserve">
          <source>Type some part of the command, and then hit the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cddfd60fdd3770f95874832546e909dcebf4b486" translate="yes" xml:space="preserve">
          <source>Type some part of the command, and then hit the &lt;b&gt;&amp;uarr;&lt;/b&gt; or &lt;b&gt;&amp;darr;&lt;/b&gt; arrow keys to navigate through history matches.</source>
          <target state="translated">Escriba alguna parte del comando y luego &lt;b&gt;presione&lt;/b&gt; las teclas de flecha &lt;b&gt;&amp;uarr;&lt;/b&gt; o &lt;b&gt;&amp;darr;&lt;/b&gt; para navegar por las coincidencias del historial.</target>
        </trans-unit>
        <trans-unit id="9a6347d6b50b7862a3a43ab71c21e524cf09faa6" translate="yes" xml:space="preserve">
          <source>Typically inside funcions you should use local scope:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="d5c2f3a388810326308a4cf0f9d12d94e467f941" translate="yes" xml:space="preserve">
          <source>Undefined and empty variables expand to nothing.</source>
          <target state="translated">Las variables indefinidas y vacías se expanden a la nada.</target>
        </trans-unit>
        <trans-unit id="88ffdf933809d29430e60deaf78422a0ecdd4f5f" translate="yes" xml:space="preserve">
          <source>Undefined and empty variables expand to nothing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f54feaec318be95b0574260bf420fada9f4de3f" translate="yes" xml:space="preserve">
          <source>Unfortunately, there is no way to make the changes take effect at once. You will need to log out and back in again.</source>
          <target state="translated">Desafortunadamente,no hay forma de hacer que los cambios surtan efecto de inmediato.Tendrá que cerrar sesión y volver a entrar.</target>
        </trans-unit>
        <trans-unit id="145a9952034e76af8265b97c5e75a18c616e70d3" translate="yes" xml:space="preserve">
          <source>Unicode private-use characters reserved by fish</source>
          <target state="translated">Los caracteres de uso privado de Unicode reservados por Fish</target>
        </trans-unit>
        <trans-unit id="064f008652b975090f53700094b3a47123206506" translate="yes" xml:space="preserve">
          <source>Uninstalling</source>
          <target state="translated">Uninstalling</target>
        </trans-unit>
        <trans-unit id="e1607dfd6b696cdd21b339099c2b8ec1f42324b3" translate="yes" xml:space="preserve">
          <source>Uninstalling fish</source>
          <target state="translated">Desinstalación de los peces</target>
        </trans-unit>
        <trans-unit id="b034e228b90d3e971c38c185d9c173b9fad3cb92" translate="yes" xml:space="preserve">
          <source>Universal Variables</source>
          <target state="translated">Universal Variables</target>
        </trans-unit>
        <trans-unit id="2190840d21939e4ef16a5e224733f3d6b3a734aa" translate="yes" xml:space="preserve">
          <source>Universal variables are shared between all fish sessions a user is running on one computer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ebc2dc8e157e5de876e47314a5c1c63ef2684e" translate="yes" xml:space="preserve">
          <source>Universal variables are variables that are shared between all the user's fish sessions on the computer. Fish stores many of its configuration options as universal variables. This means that in order to change fish settings, all you have to do is change the variable value once, and it will be automatically updated for all sessions, and preserved across computer reboots and login/logout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad651b3b2a50ae7d1ebd0a6ea4647b1fc3c39a6" translate="yes" xml:space="preserve">
          <source>Universal variables are variables that are shared between all the users' fish sessions on the computer. Fish stores many of its configuration options as universal variables. This means that in order to change fish settings, all you have to do is change the variable value once, and it will be automatically updated for all sessions, and preserved across computer reboots and login/logout.</source>
          <target state="translated">Las variables universales son variables que se comparten entre todas las sesiones de peces de los usuarios en la computadora.Los peces almacenan muchas de sus opciones de configuración como variables universales.Esto significa que para cambiar la configuración de los peces,todo lo que hay que hacer es cambiar el valor de la variable una vez,y se actualizará automáticamente para todas las sesiones,y se conservará a través de los reinicios de la computadora y el inicio y cierre de sesión.</target>
        </trans-unit>
        <trans-unit id="679726e9ee8d94239cf9cd31ea3a1cda233014df" translate="yes" xml:space="preserve">
          <source>Unix terminals, like the ones fish operates in, are at heart 70s technology. They have some limitations that applications running inside them can't workaround.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39401ea1c4ee5623e27e3d411fbd0048753b64f9" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;echo#cmd-echo&quot;&gt;echo&lt;/a&gt;, &lt;code&gt;printf&lt;/code&gt; does not append a new line unless it is specified as part of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44adc92f43c50d7e6bc38161bddc8ab76986e3b8" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;echo&lt;/code&gt;, &lt;code&gt;printf&lt;/code&gt; does not append a new line unless it is specified as part of the string.</source>
          <target state="translated">A diferencia de &lt;code&gt;echo&lt;/code&gt; , &lt;code&gt;printf&lt;/code&gt; no agrega una nueva l&amp;iacute;nea a menos que se especifique como parte de la cadena.</target>
        </trans-unit>
        <trans-unit id="80688e6bfe64112d0b40126d6899beb59a720d8b" translate="yes" xml:space="preserve">
          <source>Unlike all other expanions, variable expansion also happens in double quoted strings. Inside double quotes (&lt;code&gt;&quot;these&quot;&lt;/code&gt;), variables will always expand to exactly one argument. If they are empty or undefined, it will result in an empty string. If they have one element, they'll expand to that element. If they have more than that, the elements will be joined with spaces.</source>
          <target state="translated">A diferencia de todas las dem&amp;aacute;s expansiones, la expansi&amp;oacute;n variable tambi&amp;eacute;n ocurre en cadenas entre comillas dobles. Dentro de las comillas dobles ( &lt;code&gt;&quot;these&quot;&lt;/code&gt; ), las variables siempre se expandir&amp;aacute;n a exactamente un argumento. Si est&amp;aacute;n vac&amp;iacute;os o sin definir, resultar&amp;aacute; en una cadena vac&amp;iacute;a. Si tienen un elemento, se expandir&amp;aacute;n a ese elemento. Si tienen m&amp;aacute;s que eso, los elementos se unir&amp;aacute;n con espacios.</target>
        </trans-unit>
        <trans-unit id="0e3bff34be4971e66cb5a9ca189eb8aa7a2d3165" translate="yes" xml:space="preserve">
          <source>Unlike all the other expansions, variable expansion also happens in double quoted strings. Inside double quotes (&lt;code&gt;&quot;these&quot;&lt;/code&gt;), variables will always expand to exactly one argument. If they are empty or undefined, it will result in an empty string. If they have one element, they'll expand to that element. If they have more than that, the elements will be joined with spaces &lt;a href=&quot;#id10&quot; id=&quot;id9&quot;&gt;[3]&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ac3526581a7322cfc03c9c7a0d60ab428f6170" translate="yes" xml:space="preserve">
          <source>Unlike all the other expansions, variable expansion also happens in double quoted strings. Inside double quotes (&lt;code&gt;&quot;these&quot;&lt;/code&gt;), variables will always expand to exactly one argument. If they are empty or undefined, it will result in an empty string. If they have one element, they'll expand to that element. If they have more than that, the elements will be joined with spaces, unless the variable is a &lt;a href=&quot;#variables-path&quot;&gt;path variable&lt;/a&gt; - in that case it will use a colon (&lt;code&gt;:&lt;/code&gt;) instead &lt;a href=&quot;#id12&quot; id=&quot;id11&quot;&gt;[4]&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f52904d211feb97742834ac23247af488c11ce4" translate="yes" xml:space="preserve">
          <source>Unlike bash or zsh, which will join with the first character of $IFS (which usually is space).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2292eead056d06d02e28adb305ab1fa7a4ec35" translate="yes" xml:space="preserve">
          <source>Unlike other shells, &lt;code&gt;fish&lt;/code&gt; does not have aliases or special prompt syntax. Functions take their place.</source>
          <target state="translated">A diferencia de otras conchas, &lt;code&gt;fish&lt;/code&gt; no tiene alias ni sintaxis de solicitud especial. Las funciones toman su lugar.</target>
        </trans-unit>
        <trans-unit id="081f5baca42ff8efaa02caf11115f980ca88911b" translate="yes" xml:space="preserve">
          <source>Unlike other shells, &lt;code&gt;fish&lt;/code&gt; does not have an export command. Instead, a variable is exported via an option to &lt;code&gt;set&lt;/code&gt;, either &lt;code&gt;--export&lt;/code&gt; or just &lt;code&gt;-x&lt;/code&gt;.</source>
          <target state="translated">A diferencia de otras conchas, el &lt;code&gt;fish&lt;/code&gt; no tiene un comando de exportaci&amp;oacute;n. En su lugar, una variable se exporta a trav&amp;eacute;s de una opci&amp;oacute;n para &lt;code&gt;set&lt;/code&gt; , ya sea &lt;code&gt;--export&lt;/code&gt; ar o simplemente &lt;code&gt;-x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c93cd2fd98d2e05971730d3d1461c79fed9ff34c" translate="yes" xml:space="preserve">
          <source>Unlike other shells, &lt;code&gt;fish&lt;/code&gt; has no dedicated &lt;code&gt;VARIABLE=VALUE&lt;/code&gt; syntax for setting variables. Instead it has an ordinary command: &lt;code&gt;set&lt;/code&gt;, which takes a variable name, and then its value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee0d0201f0eeaf8c0900eea9c927bb9f91321d9" translate="yes" xml:space="preserve">
          <source>Unlike other shells, &lt;code&gt;fish&lt;/code&gt; has no dedicated syntax for setting variables. Instead it has an ordinary command: &lt;code&gt;set&lt;/code&gt;, which takes a variable name, and then its value.</source>
          <target state="translated">A diferencia de otras conchas, &lt;code&gt;fish&lt;/code&gt; no tiene una sintaxis dedicada para establecer variables. En su lugar, tiene un comando ordinario: &lt;code&gt;set&lt;/code&gt; , que toma un nombre de variable y luego su valor.</target>
        </trans-unit>
        <trans-unit id="a37e511dd2f26fdeffb3863f66e1a1c929cfac6a" translate="yes" xml:space="preserve">
          <source>Unlike other shells, &lt;code&gt;fish&lt;/code&gt; stores the exit status of the last command in &lt;code&gt;$status&lt;/code&gt; instead of &lt;code&gt;$?&lt;/code&gt;.</source>
          <target state="translated">A diferencia de otras conchas, &lt;code&gt;fish&lt;/code&gt; almacena el estado de salida del &amp;uacute;ltimo comando en &lt;code&gt;$status&lt;/code&gt; lugar de &lt;code&gt;$?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d7029d5d844286c3b01d63dfa7adfc1cf494946" translate="yes" xml:space="preserve">
          <source>Unlike other shells, fish does not do &quot;word splitting&quot; - elements in a list stay as they are, even if they contain spaces or tabs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b32ed8b459e8fdb8746d6d876427a9d1b6ee4f5" translate="yes" xml:space="preserve">
          <source>Unlike other shells, fish does not follow the POSIX standard, but still roughly belongs to the same family.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4440be9e9071a8b66a009a1ae38d41ca3b5cbe3f" translate="yes" xml:space="preserve">
          <source>Unlike other shells, fish does not follow the POSIX standard, but still uses roughly the same model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de08859395858b3d1f43b3698375640bb2fd848" translate="yes" xml:space="preserve">
          <source>Unlike other shells, fish does not have aliases or special prompt syntax. Functions take their place. &lt;a href=&quot;#id5&quot; id=&quot;id4&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af21d9e6a82afb93e7644e0365cdc2669f846f5" translate="yes" xml:space="preserve">
          <source>Unlike other shells, fish does not split command substitutions on any whitespace (like spaces or tabs), only newlines. This can be an issue with commands like &lt;code&gt;pkg-config&lt;/code&gt; that print what is meant to be multiple arguments on a single line. To split it on spaces too, use &lt;code&gt;string split&lt;/code&gt;.</source>
          <target state="translated">A diferencia de otras conchas, fish no divide las sustituciones de comandos en ning&amp;uacute;n espacio en blanco (como espacios o tabulaciones), solo nuevas l&amp;iacute;neas. Esto puede ser un problema con comandos como &lt;code&gt;pkg-config&lt;/code&gt; que imprimen lo que deben ser varios argumentos en una sola l&amp;iacute;nea. Para dividirlo en espacios tambi&amp;eacute;n, use &lt;code&gt;string split&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f6cc546d11af63d2d654ab3a2915a4b24dfa440" translate="yes" xml:space="preserve">
          <source>Unlike other shells, fish has no dedicated &lt;code&gt;VARIABLE=VALUE&lt;/code&gt; syntax for setting variables. Instead it has an ordinary command: &lt;code&gt;set&lt;/code&gt;, which takes a variable name, and then its value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51633ed047475ca6ce896f07a0b3e652915476f4" translate="yes" xml:space="preserve">
          <source>Unlike other shells, fish splits command substitutions only on newlines, not spaces or tabs or the characters in $IFS.</source>
          <target state="translated">A diferencia de otras conchas,el pez divide las sustituciones de comandos sólo en las nuevas líneas,no los espacios o pestañas o los caracteres en $IFS.</target>
        </trans-unit>
        <trans-unit id="54ee6e36e36eab999ef449ed26e469156fbba88e" translate="yes" xml:space="preserve">
          <source>Unlike other shells, fish stores the exit status of the last command in &lt;code&gt;$status&lt;/code&gt; instead of &lt;code&gt;$?&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470f9a53118aa49c238cbd208d5c8735144a8c58" translate="yes" xml:space="preserve">
          <source>Unlike other shells, there is no prompt variable like &lt;code&gt;PS1&lt;/code&gt;. To display your prompt, fish executes the &lt;a href=&quot;cmds/fish_prompt#cmd-fish-prompt&quot;&gt;fish_prompt&lt;/a&gt; function and uses its output as the prompt. And if it exists, fish also executes the &lt;a href=&quot;cmds/fish_right_prompt#cmd-fish-right-prompt&quot;&gt;fish_right_prompt&lt;/a&gt; function and uses its output as the right prompt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e36f8ffbac36ebebd737db0d45fea3f73bea9ee" translate="yes" xml:space="preserve">
          <source>Unlike other shells, there is no prompt variable like PS1. To display your prompt, &lt;code&gt;fish&lt;/code&gt; executes a function with the name &lt;code&gt;fish_prompt&lt;/code&gt;, and its output is used as the prompt.</source>
          <target state="translated">A diferencia de otros shells, no existe una variable de solicitud como PS1. Para mostrar su mensaje, &lt;code&gt;fish&lt;/code&gt; ejecuta una funci&amp;oacute;n con el nombre &lt;code&gt;fish_prompt&lt;/code&gt; , y su salida se utiliza como mensaje.</target>
        </trans-unit>
        <trans-unit id="ab05fef23918def6c683c03b77f7baa711fa3307" translate="yes" xml:space="preserve">
          <source>Unlike other shells, this does &lt;em&gt;not&lt;/em&gt; inhibit any lookup (aliases or similar). Calling a command after setting a variable override will result in the exact same command being run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce749c56fdf9031b6a95716e01d8de61c5add6ff" translate="yes" xml:space="preserve">
          <source>Unlike other shells, this echo accepts &lt;code&gt;--&lt;/code&gt; to signal the end of the options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1f16e81556a309c131d3f6b2ba87b84eb31d62" translate="yes" xml:space="preserve">
          <source>Unlike other shells, variables are not further split after substitution:</source>
          <target state="translated">A diferencia de otros caparazones,las variables no se dividen más después de la sustitución:</target>
        </trans-unit>
        <trans-unit id="c2ca114e2a6eb42953034634ce55973e91626b3d" translate="yes" xml:space="preserve">
          <source>Unlike programming languages you might know, &lt;a href=&quot;cmds/if#cmd-if&quot;&gt;if&lt;/a&gt; doesn't take a &lt;em&gt;condition&lt;/em&gt;, it takes a &lt;em&gt;command&lt;/em&gt;. If that command returned a successful &lt;a href=&quot;#variables-status&quot;&gt;exit status&lt;/a&gt; (that's 0), the &lt;code&gt;if&lt;/code&gt; branch is taken, otherwise the &lt;a href=&quot;cmds/else#cmd-else&quot;&gt;else&lt;/a&gt; branch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a7218e7200aa5a5b2c21c7cbda05b64fb08261" translate="yes" xml:space="preserve">
          <source>Up-to-date instructions for installing the latest version of fish are on the &lt;a href=&quot;https://fishshell.com/&quot;&gt;fish homepage&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="4df13ec4234f96a6f1f82fccdde77669b4c4b95c" translate="yes" xml:space="preserve">
          <source>Usage Notes</source>
          <target state="translated">Notas de uso</target>
        </trans-unit>
        <trans-unit id="12d989807e47d1b75620181d56212858424e3252" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;cmds/if#cmd-if&quot;&gt;if&lt;/a&gt; and &lt;a href=&quot;cmds/else#cmd-else&quot;&gt;else&lt;/a&gt; to conditionally execute code, based on the exit status of a command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a35f5cedda24e7d375774997863d098333b7bd" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--fields&lt;/code&gt; to print out specific fields. Unless &lt;code&gt;--allow-empty&lt;/code&gt; is used, if a given field does not exist, then the command exits with status 1 and does not print anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="820e1059a048db902f46a0c9d9fe1777441907ba" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;bash&lt;/code&gt; without a switch to open a bash shell you can use and &lt;code&gt;exit&lt;/code&gt; afterward:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74b204180b301da11db45838e08032a0d957c03" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else if&lt;/code&gt;, and &lt;code&gt;else&lt;/code&gt; to conditionally execute code, based on the exit status of a command.</source>
          <target state="translated">Use &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;else if&lt;/code&gt; y &lt;code&gt;else&lt;/code&gt; para ejecutar c&amp;oacute;digo condicionalmente, seg&amp;uacute;n el estado de salida de un comando.</target>
        </trans-unit>
        <trans-unit id="108a282c00d77f98c72d6adf4d5999958ce383fa" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;set -q var&lt;/code&gt;. For example, &lt;code&gt;if set -q var; echo variable defined; end&lt;/code&gt;. To check multiple variables you can combine with &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt; like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc9bc84b4664e85759bf6a7633886e92ee18b38" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;string length -q -- $var&lt;/code&gt;. For example, &lt;code&gt;if string length -q -- $var; echo not empty; end&lt;/code&gt;. Note that &lt;code&gt;string length&lt;/code&gt; will interpret a list of multiple variables as a disjunction (meaning any/or):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb181080b44029a3622b4ef5a70c42d2deefdef1" translate="yes" xml:space="preserve">
          <source>Use one of the following switches to specify which resource limit to set or report:</source>
          <target state="translated">Utilice uno de los siguientes conmutadores para especificar el límite de recursos a establecer o informar:</target>
        </trans-unit>
        <trans-unit id="45aae1640bb0c8033b0670dc7821136944d847a9" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;cmds/fish_update_completions#cmd-fish-update-completions&quot;&gt;fish_update_completions&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e2435dd203f22f6f5597c3e5d8b337148d2b6b" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;cmds/set#cmd-set&quot;&gt;set&lt;/a&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454bd477b983f01843d0ef8db935e66528a0a530" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;commands#fish_update_completions&quot;&gt;&lt;code&gt;fish_update_completions&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">Utilice el comando &lt;a href=&quot;commands#fish_update_completions&quot;&gt; &lt;code&gt;fish_update_completions&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="173607f929222a6b2423c5f7cb2482dcefe3fd4d" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;commands#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="translated">Utilice el comando &lt;a href=&quot;commands#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a070d11e8f9357b2f82f012cf1cbf197f82d8186" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;$status&lt;/code&gt; variable. This replaces the &lt;code&gt;$?&lt;/code&gt; variable used in some other shells.</source>
          <target state="translated">Utilice la variable &lt;code&gt;$status&lt;/code&gt; . Esto reemplaza el &lt;code&gt;$?&lt;/code&gt; variable utilizada en algunos otros shells.</target>
        </trans-unit>
        <trans-unit id="ee9291ed60727c3171e8c7a5f030e64c13cab98f" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;bash&lt;/code&gt; command with the &lt;code&gt;-c&lt;/code&gt; switch to read from a string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c238ddde1e3a389d384b0e3b72354aef7e4403" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;env&lt;/code&gt; command.</source>
          <target state="translated">Utilice el comando &lt;code&gt;env&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19216cc5cccec81a7c79d4e99fdb1faede39febc" translate="yes" xml:space="preserve">
          <source>Use the web configuration tool, &lt;a href=&quot;cmds/fish_config#cmd-fish-config&quot;&gt;fish_config&lt;/a&gt;, or alter the &lt;a href=&quot;index#variables-color&quot;&gt;fish_color family of environment variables&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0411e393ae78c9f8172fc0b2dbacdfcc91e4286c" translate="yes" xml:space="preserve">
          <source>Use the web configuration tool, &lt;a href=&quot;commands#fish_config&quot;&gt;&lt;code&gt;fish_config&lt;/code&gt;&lt;/a&gt;, or alter the &lt;a href=&quot;index#variables-color&quot;&gt;&lt;code&gt;fish_color&lt;/code&gt; family of environment variables&lt;/a&gt;.</source>
          <target state="translated">Utilice la herramienta de configuraci&amp;oacute;n web, &lt;a href=&quot;commands#fish_config&quot;&gt; &lt;code&gt;fish_config&lt;/code&gt; &lt;/a&gt; , o modifique la &lt;a href=&quot;index#variables-color&quot;&gt;familia de variables de entorno &lt;/a&gt; &lt;code&gt;fish_color&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60f35ccc6241ede38ff1ff41aa11e4d625890b21" translate="yes" xml:space="preserve">
          <source>Use them without a leading &lt;code&gt;$&lt;/code&gt; - &lt;code&gt;pi - 3&lt;/code&gt; should be about 0.</source>
          <target state="translated">&amp;Uacute;selos sin un &lt;code&gt;$&lt;/code&gt; - &lt;code&gt;pi - 3&lt;/code&gt; debe ser aproximadamente 0.</target>
        </trans-unit>
        <trans-unit id="0cae9ed3f91cf8ab384b29a4865d0861615ac352" translate="yes" xml:space="preserve">
          <source>Useful functions for writing completions</source>
          <target state="translated">Funciones útiles para la redacción de los escritos</target>
        </trans-unit>
        <trans-unit id="da533743f0159eea920a315a90c8751cf23609aa" translate="yes" xml:space="preserve">
          <source>User initialization, usually in &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; (controlled by the &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; environment variable, and accessible as &lt;code&gt;$__fish_config_dir&lt;/code&gt;).</source>
          <target state="translated">Inicializaci&amp;oacute;n del usuario, normalmente en &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; (controlado por la variable de entorno &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; y accesible como &lt;code&gt;$__fish_config_dir&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a797851a12cfc94ffc4046ad8c0056035b73b1e6" translate="yes" xml:space="preserve">
          <source>Usernames for tilde expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab03bad0e4c29694da24c66d0dfd6218d876cd9" translate="yes" xml:space="preserve">
          <source>Using another read history file</source>
          <target state="translated">Usando otro archivo de historial de lectura</target>
        </trans-unit>
        <trans-unit id="b73b7dbea87b71c6a8e64d7b592b0efded7f191c" translate="yes" xml:space="preserve">
          <source>Using the &lt;em&gt;normal&lt;/em&gt; keyword will reset both background and foreground colors to whatever is the default for the terminal.</source>
          <target state="translated">El uso de la palabra clave &lt;em&gt;normal&lt;/em&gt; restablecer&amp;aacute; los colores de fondo y primer plano a lo que sea el predeterminado para el terminal.</target>
        </trans-unit>
        <trans-unit id="01391f93ace379e5306ef34014cfa60be33aafe9" translate="yes" xml:space="preserve">
          <source>Using the &lt;em&gt;normal&lt;/em&gt; keyword will reset foreground, background, and all formatting back to default.</source>
          <target state="translated">El uso de la palabra clave &lt;em&gt;normal&lt;/em&gt; restablecer&amp;aacute; el primer plano, el fondo y todo el formato a los valores predeterminados.</target>
        </trans-unit>
        <trans-unit id="f3b2ac121de4ce08e07778437bf30ed6cd6b55da" translate="yes" xml:space="preserve">
          <source>Using this command involves passing two sets of arguments separated by &lt;code&gt;--&lt;/code&gt;. The first set consists of one or more option specifications (&lt;code&gt;OPTION_SPEC&lt;/code&gt; above) and options that modify the behavior of &lt;code&gt;argparse&lt;/code&gt;. These must be listed before the &lt;code&gt;--&lt;/code&gt; argument. The second set are the arguments to be parsed in accordance with the option specifications. They occur after the &lt;code&gt;--&lt;/code&gt; argument and can be empty. More about this below but here is a simple example that might be used in a function named &lt;code&gt;my_function&lt;/code&gt;:</source>
          <target state="translated">El uso de este comando implica pasar dos conjuntos de argumentos separados por &lt;code&gt;--&lt;/code&gt; . El primer conjunto consta de una o m&amp;aacute;s especificaciones de opciones ( &lt;code&gt;OPTION_SPEC&lt;/code&gt; arriba) y opciones que modifican el comportamiento de &lt;code&gt;argparse&lt;/code&gt; . Estos deben enumerarse antes del argumento &lt;code&gt;--&lt;/code&gt; . El segundo conjunto son los argumentos que se analizar&amp;aacute;n de acuerdo con las especificaciones de la opci&amp;oacute;n. Ocurren despu&amp;eacute;s del argumento &lt;code&gt;--&lt;/code&gt; y pueden estar vac&amp;iacute;os. M&amp;aacute;s sobre esto a continuaci&amp;oacute;n, pero aqu&amp;iacute; hay un ejemplo simple que podr&amp;iacute;a usarse en una funci&amp;oacute;n llamada &lt;code&gt;my_function&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="51b1cbfccd14dad0695dab4a0b955e7d4e87a713" translate="yes" xml:space="preserve">
          <source>Using this command requires first passing option specifications (&lt;code&gt;OPTION_SPEC&lt;/code&gt; below), then a mandatory &lt;code&gt;--&lt;/code&gt;, and then the arguments you want to have parsed. More about this below but here is a simple example that might be used in a function named &lt;code&gt;my_function&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ee5681d3c59f7541c27a38b67edf46259e187b" translate="yes" xml:space="preserve">
          <source>V</source>
          <target state="translated">V</target>
        </trans-unit>
        <trans-unit id="f09d5d78e534ac9eee0414d7d7a0fb24af84d370" translate="yes" xml:space="preserve">
          <source>Valid colors include:</source>
          <target state="translated">Los colores válidos incluyen:</target>
        </trans-unit>
        <trans-unit id="546f6c9b37f6454b09d1f96fbccc4cf9af88768a" translate="yes" xml:space="preserve">
          <source>Valid file paths are underlined as you type them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399b0aa31964bdb2de0a16bc45e8681ebe84f1bf" translate="yes" xml:space="preserve">
          <source>Valid format specifiers are taken from the C library function &lt;code&gt;printf(3)&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b8e49e0a4f7e7d23df31b6c1eedc2a79d60c67" translate="yes" xml:space="preserve">
          <source>Valid format specifiers are:</source>
          <target state="translated">Los especificadores de formato válidos son:</target>
        </trans-unit>
        <trans-unit id="19de69cb601f53a4ea7af22a65c71ae63251365c" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">Variable</target>
        </trans-unit>
        <trans-unit id="047ea2f72ce834a5cd86fc46331f14acbb3f9954" translate="yes" xml:space="preserve">
          <source>Variable expansion</source>
          <target state="translated">Expansión variable</target>
        </trans-unit>
        <trans-unit id="e2eb91d2e9dd9d2efdc78a2c535e066657ae307e" translate="yes" xml:space="preserve">
          <source>Variable expansions</source>
          <target state="translated">Expansiones variables</target>
        </trans-unit>
        <trans-unit id="69cd2e4d36065246c043d32da81f65b5ec76feab" translate="yes" xml:space="preserve">
          <source>Variable scope</source>
          <target state="translated">Alcance variable</target>
        </trans-unit>
        <trans-unit id="f2ffbf1cf26a2aeca0a92264405ee06ceed33e13" translate="yes" xml:space="preserve">
          <source>Variable scope for functions</source>
          <target state="translated">Alcance variable de las funciones</target>
        </trans-unit>
        <trans-unit id="1c4d8bc4b1983936a6ea4c98c958dd234c9b54b7" translate="yes" xml:space="preserve">
          <source>Variable substitution also happens in double quotes, but not single quotes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3800988cc67ea9f9ae70495ad31314d7a633d64" translate="yes" xml:space="preserve">
          <source>Variable substitution also occurs in double quotes, but not single quotes:</source>
          <target state="translated">La sustitución de variables también se produce entre comillas dobles,pero no entre comillas simples:</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="6273218e80c5d254698409279b721e34aefad7f9" translate="yes" xml:space="preserve">
          <source>Variables affecting the pager colors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b48db3eb10151c075f6e761da47e3468146d05" translate="yes" xml:space="preserve">
          <source>Variables are a way to save data and pass it around. They can be used just by the shell, or they can be &quot;&lt;a href=&quot;#variables-export&quot;&gt;exported&lt;/a&gt;&quot;, so that a copy of the variable is available to any external command the shell starts. An exported variable is referred to as an &quot;environment variable&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc55a791f0556b1e2c98faf060801c75b48b8e87" translate="yes" xml:space="preserve">
          <source>Variables can be explicitly set to be exported with the &lt;code&gt;-x&lt;/code&gt; or &lt;code&gt;--export&lt;/code&gt; switch, or not exported with the &lt;code&gt;-u&lt;/code&gt; or &lt;code&gt;--unexport&lt;/code&gt; switch. The exporting rules when creating or updating a variable are identical to the scoping rules for variables:</source>
          <target state="translated">Las variables se pueden configurar expl&amp;iacute;citamente para exportarlas con la &lt;code&gt;--export&lt;/code&gt; &lt;code&gt;-x&lt;/code&gt; o --export , o no exportarlas con la &lt;code&gt;--unexport&lt;/code&gt; &lt;code&gt;-u&lt;/code&gt; o --unexport . Las reglas de exportaci&amp;oacute;n al crear o actualizar una variable son id&amp;eacute;nticas a las reglas de alcance para las variables:</target>
        </trans-unit>
        <trans-unit id="8ac80efa95f2325126bc3cfe367407edf15a59e1" translate="yes" xml:space="preserve">
          <source>Variables can be explicitly set to be exported with the &lt;code&gt;-x&lt;/code&gt; or &lt;code&gt;--export&lt;/code&gt; switch, or not exported with the &lt;code&gt;-u&lt;/code&gt; or &lt;code&gt;--unexport&lt;/code&gt; switch. The exporting rules when setting a variable are identical to the scoping rules for variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8caf7a3931edf651d5c0eb5b032760d30623081d" translate="yes" xml:space="preserve">
          <source>Variables can be explicitly set to be universal with the &lt;code&gt;-U&lt;/code&gt; or &lt;code&gt;--universal&lt;/code&gt; switch, global with the &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; switch, or local with the &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--local&lt;/code&gt; switch. The scoping rules when creating or updating a variable are:</source>
          <target state="translated">Las variables se pueden establecer expl&amp;iacute;citamente para que sean universales con el conmutador &lt;code&gt;-U&lt;/code&gt; o &lt;code&gt;--universal&lt;/code&gt; , globales con el conmutador &lt;code&gt;-g&lt;/code&gt; o &lt;code&gt;--global&lt;/code&gt; , o locales con el conmutador &lt;code&gt;-l&lt;/code&gt; o &lt;code&gt;--local&lt;/code&gt; . Las reglas de alcance al crear o actualizar una variable son:</target>
        </trans-unit>
        <trans-unit id="866a24aa0e9eb8db8b30498e951c623e32e65a14" translate="yes" xml:space="preserve">
          <source>Variables can be marked or unmarked as PATH variables via the &lt;code&gt;--path&lt;/code&gt; and &lt;code&gt;--unpath&lt;/code&gt; options to &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">Las variables se pueden marcar o desmarcar como variables PATH mediante las opciones &lt;code&gt;--path&lt;/code&gt; y &lt;code&gt;--unpath&lt;/code&gt; para &lt;code&gt;set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81a1e4b50937d575e7941efe7d24b3e8887251ba" translate="yes" xml:space="preserve">
          <source>Variables can be used as indices for expansion of variables, like so:</source>
          <target state="translated">Las variables pueden ser usadas como índices para la expansión de las variables,así:</target>
        </trans-unit>
        <trans-unit id="d13d8872f2b85622ec05b4faa321ef701163466e" translate="yes" xml:space="preserve">
          <source>Variables for changing highlighting colors</source>
          <target state="translated">Variables para cambiar los colores de resalte</target>
        </trans-unit>
        <trans-unit id="cf5cb5ba71a4fd59ff58e3f49fbe8b665f5f8f17" translate="yes" xml:space="preserve">
          <source>Variables in fish can be &quot;exported&quot;, so they will be inherited by any commands started by fish. In particular, this is necessary for variables used to configure external commands like $LESS or $GOPATH, but also for variables that contain general system settings like $PATH or $LANGUAGE. If an external command needs to know a variable, it needs to be exported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021a38b749711c430ab7b97416e1e7f42bc63ab2" translate="yes" xml:space="preserve">
          <source>Variables in fish can be exported. This means the variable will be inherited by any commands started by fish. It is convention that exported variables are in uppercase and unexported variables are in lowercase.</source>
          <target state="translated">Las variables de los peces pueden ser exportadas.Esto significa que la variable será heredada por cualquier comando iniciado por los peces.Es convención que las variables exportadas estén en mayúsculas y las no exportadas en minúsculas.</target>
        </trans-unit>
        <trans-unit id="8b7277f6927f4830af2060ea99b89d5f43313327" translate="yes" xml:space="preserve">
          <source>Variables may be explicitly set to either exported or not exported. When an exported variable goes out of scope, it is unexported.</source>
          <target state="translated">Las variables pueden establecerse explícitamente como exportadas o no exportadas.Cuando una variable exportada se sale de su ámbito de aplicación,no se exporta.</target>
        </trans-unit>
        <trans-unit id="5daf675f51e0dc0a7ce5d91db9146d3208ab170c" translate="yes" xml:space="preserve">
          <source>Variables may be explicitly set to universal, global or local. Variables with the same name in different scopes will not be changed.</source>
          <target state="translated">Las variables pueden establecerse explícitamente como universales,globales o locales.Las variables con el mismo nombre en diferentes ámbitos no se cambiarán.</target>
        </trans-unit>
        <trans-unit id="6157bb7cb8dc60c929867f3959fa45a42b0b66e6" translate="yes" xml:space="preserve">
          <source>Variables used with &lt;code&gt;showdirtystate&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4776413d8eceb0904e12541e0663214353773d" translate="yes" xml:space="preserve">
          <source>Variables used with &lt;code&gt;showstashstate&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cfcdb16da7b699c8fff0c64400681e88e4e3605" translate="yes" xml:space="preserve">
          <source>Variables used with &lt;code&gt;showuntrackedfiles&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de092ce093e173164195e54b6efb764d4954705" translate="yes" xml:space="preserve">
          <source>Variables used with &lt;code&gt;showupstream&lt;/code&gt; (also implied by informative status):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a88384607868c891caaae0411d761359e4f6ef5" translate="yes" xml:space="preserve">
          <source>Variables whose name are in uppercase are generally exported to the commands started by fish, while those in lowercase are not exported (&lt;code&gt;CMD_DURATION&lt;/code&gt; is an exception, for historical reasons). This rule is not enforced by fish, but it is good coding practice to use casing to distinguish between exported and unexported variables. &lt;code&gt;fish&lt;/code&gt; also uses several variables internally. Such variables are prefixed with the string &lt;code&gt;__FISH&lt;/code&gt; or &lt;code&gt;__fish.&lt;/code&gt; These should never be used by the user. Changing their value may break fish.</source>
          <target state="translated">Las variables cuyos nombres est&amp;aacute;n en may&amp;uacute;sculas generalmente se exportan a los comandos iniciados por fish, mientras que las que est&amp;aacute;n en min&amp;uacute;sculas no se exportan ( &lt;code&gt;CMD_DURATION&lt;/code&gt; es una excepci&amp;oacute;n, por razones hist&amp;oacute;ricas). El pescado no hace cumplir esta regla, pero es una buena pr&amp;aacute;ctica de codificaci&amp;oacute;n utilizar envoltura para distinguir entre variables exportadas y no exportadas. &lt;code&gt;fish&lt;/code&gt; tambi&amp;eacute;n usa varias variables internamente. Estas variables tienen el prefijo &lt;code&gt;__FISH&lt;/code&gt; o &lt;code&gt;__fish.&lt;/code&gt; Estos nunca deben ser utilizados por el usuario. Cambiar su valor puede romper el pescado.</target>
        </trans-unit>
        <trans-unit id="853f836630af91eac92770e4898f6104b87fc93e" translate="yes" xml:space="preserve">
          <source>Variables whose name ends in &quot;PATH&quot; are automatically split on colons to become lists. They are joined using colons when exported to subcommands. This is for compatibility with other tools, which expect $PATH to use colons. You can also explicitly add this quirk to a variable with &lt;code&gt;set --path&lt;/code&gt;, or remove it with &lt;code&gt;set --unpath&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b225df5832ecdff22ce23cfde4211441ed77c95" translate="yes" xml:space="preserve">
          <source>Vi mode allows for the use of Vi-like commands at the prompt. Initially, &lt;a href=&quot;#vi-mode-insert&quot;&gt;insert mode&lt;/a&gt; is active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de6cda0a76daf29c82a8e5cb8b2ed185cd03414" translate="yes" xml:space="preserve">
          <source>Vi mode allows for the use of Vi-like commands at the prompt. Initially, &lt;a href=&quot;#vi-mode-insert&quot;&gt;insert mode&lt;/a&gt; is active. &lt;b&gt;Escape&lt;/b&gt; enters &lt;a href=&quot;#vi-mode-command&quot;&gt;command mode&lt;/a&gt;. The commands available in command, insert and visual mode are described below. Vi mode shares &lt;a href=&quot;#shared-binds&quot;&gt;some bindings&lt;/a&gt; with &lt;a href=&quot;#emacs-mode&quot;&gt;Emacs mode&lt;/a&gt;.</source>
          <target state="translated">El modo Vi permite el uso de comandos similares a Vi en el indicador. Inicialmente, el &lt;a href=&quot;#vi-mode-insert&quot;&gt;modo de inserci&amp;oacute;n&lt;/a&gt; est&amp;aacute; activo. &lt;b&gt;Escape&lt;/b&gt; ingresa al &lt;a href=&quot;#vi-mode-command&quot;&gt;modo de comando&lt;/a&gt; . Los comandos disponibles en el modo comando, insertar y visual se describen a continuaci&amp;oacute;n. El modo Vi comparte &lt;a href=&quot;#shared-binds&quot;&gt;algunos enlaces&lt;/a&gt; con el &lt;a href=&quot;#emacs-mode&quot;&gt;modo Emacs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fc7edfc16e4d70682dbbf7a6226979a31fd0ad3e" translate="yes" xml:space="preserve">
          <source>Vi mode commands</source>
          <target state="translated">Modo de comando Vi</target>
        </trans-unit>
        <trans-unit id="5fb895569dd30157f331b4727bbce633510ff8ba" translate="yes" xml:space="preserve">
          <source>Visual mode</source>
          <target state="translated">Modo visual</target>
        </trans-unit>
        <trans-unit id="e2415cb7f63df0c9de23362326ad3c37a9adfc96" translate="yes" xml:space="preserve">
          <source>W</source>
          <target state="translated">W</target>
        </trans-unit>
        <trans-unit id="ee9a5b585fb2c9fb8980a86a7163d79d5954f9a3" translate="yes" xml:space="preserve">
          <source>What is the equivalent to this thing from bash (or other shells)?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6507ee89dfc0dd673a89000538a4c774b9e9ab37" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--arguments&lt;/code&gt; is specified in conjunction with long, short, or old style options, the specified arguments are only completed as arguments for any of the specified options. If &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--arguments&lt;/code&gt; is specified without any long, short, or old style options, the specified arguments are used when completing any argument to the command (except when completing an option argument that was specified with &lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--require-parameter&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e1f6a5be94b9a7630dae992d9a626fc08b6ea1" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--arguments&lt;/code&gt; is specified in conjunction with long, short, or old style options, the specified arguments are only used as completions when attempting to complete an argument for any of the specified options. If &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--arguments&lt;/code&gt; is specified without any long, short, or old style options, the specified arguments are used when completing any argument to the command (except when completing an option argument that was specified with &lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--require-parameter&lt;/code&gt;).</source>
          <target state="translated">Cuando se especifican &lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;--arguments&lt;/code&gt; junto con opciones de estilo largo, corto o antiguo, los argumentos especificados solo se utilizan como finalizaciones cuando se intenta completar un argumento para cualquiera de las opciones especificadas. Si &lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;--arguments&lt;/code&gt; se especifica sin ning&amp;uacute;n tipo largo, corto, o las opciones de estilo antiguo, los argumentos especificados se utilizan al completar cualquier argumento de la orden (excepto cuando completar un argumento de opci&amp;oacute;n que se especific&amp;oacute; con &lt;code&gt;-r&lt;/code&gt; o &lt;code&gt;--require-parameter&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2505ca259992c20f2e115bd87371ef8405dc9f79" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;COMMAND&lt;/code&gt; is a shellscript command, it is a good practice to put the actual code into a &lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt; and simply bind to the function name. This way it becomes significantly easier to test the function while editing, and the result is usually more readable as well.</source>
          <target state="translated">Cuando &lt;code&gt;COMMAND&lt;/code&gt; es un comando de shellscript, es una buena pr&amp;aacute;ctica poner el c&amp;oacute;digo real en una &lt;a href=&quot;#function&quot;&gt;funci&amp;oacute;n&lt;/a&gt; y simplemente enlazar con el nombre de la funci&amp;oacute;n. De esta forma, resulta mucho m&amp;aacute;s f&amp;aacute;cil probar la funci&amp;oacute;n durante la edici&amp;oacute;n y, por lo general, el resultado tambi&amp;eacute;n es m&amp;aacute;s legible.</target>
        </trans-unit>
        <trans-unit id="1bbeb4b4dc5f8529f852458af60096180caa4407" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;COMMAND&lt;/code&gt; is a shellscript command, it is a good practice to put the actual code into a &lt;a href=&quot;../index#syntax-function&quot;&gt;function&lt;/a&gt; and simply bind to the function name. This way it becomes significantly easier to test the function while editing, and the result is usually more readable as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05b38541d8fa0436227d0f1db7354fdec595b72" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;complete&lt;/code&gt; is called without anything that would define or erase completions (options, arguments, wrapping, ...), it shows matching completions instead. So &lt;code&gt;complete&lt;/code&gt; without any arguments shows all loaded completions, &lt;code&gt;complete -c foo&lt;/code&gt; shows all loaded completions for &lt;code&gt;foo&lt;/code&gt;. Since completions are &lt;a href=&quot;../index#syntax-function-autoloading&quot;&gt;autoloaded&lt;/a&gt;, you will have to trigger them first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b61f14b6442d9d89b8d8fa699d95bbd93af2c25" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;fish&lt;/code&gt; encounters a command, it attempts to autoload a function for that command, by looking for a file with the name of that command in &lt;code&gt;~/.config/fish/functions/&lt;/code&gt;.</source>
          <target state="translated">Cuando &lt;code&gt;fish&lt;/code&gt; encuentra un comando, intenta cargar autom&amp;aacute;ticamente una funci&amp;oacute;n para ese comando, buscando un archivo con el nombre de ese comando en &lt;code&gt;~/.config/fish/functions/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80ac01474d96293d4e91964bb2b3037356d135af" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;read&lt;/code&gt; reaches the end-of-file (EOF) instead of the terminator, the exit status is set to 1. Otherwise, it is set to 0.</source>
          <target state="translated">Cuando la &lt;code&gt;read&lt;/code&gt; llega al final del archivo (EOF) en lugar del terminador, el estado de salida se establece en 1. De lo contrario, se establece en 0.</target>
        </trans-unit>
        <trans-unit id="ebaf9d7ac09afd535047a8b280fbd90932197978" translate="yes" xml:space="preserve">
          <source>When a binding switches the mode, it will repaint the mode-prompt if it exists, and the rest of the prompt only if it doesn't. So if you want a mode-indicator in your &lt;code&gt;fish_prompt&lt;/code&gt;, you need to erase &lt;code&gt;fish_mode_prompt&lt;/code&gt; e.g. by adding an empty file at &lt;code&gt;~/.config/fish/functions/fish_mode_prompt.fish&lt;/code&gt;. (Bindings that change the mode are supposed to call the &lt;code&gt;repaint-mode&lt;/code&gt; bind function, see &lt;a href=&quot;cmds/bind#cmd-bind&quot;&gt;bind&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5deab83f1aa4307699eab19cce4565571b41d48" translate="yes" xml:space="preserve">
          <source>When a command exits, it returns a status code as a natural number. This indicates how the command fared - 0 usually means success, while the others signify kinds of failure. For instance fish's &lt;code&gt;set --query&lt;/code&gt; returns the number of variables it queried that weren't set - &lt;code&gt;set --query PATH&lt;/code&gt; usually returns 0, &lt;code&gt;set --query arglbargl boogagoogoo&lt;/code&gt; usually returns 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b246834903e3416db14d27a612afe761c1c466" translate="yes" xml:space="preserve">
          <source>When a command exits, it returns a status code as a non-negative integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91db4fb609ae3c10e05da51ef90890379f33f5d" translate="yes" xml:space="preserve">
          <source>When a command lookup fails</source>
          <target state="translated">Cuando un comando de búsqueda falla</target>
        </trans-unit>
        <trans-unit id="682d54183c660edac5e19dbb621c185f3a403e20" translate="yes" xml:space="preserve">
          <source>When a job exits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a0fdbbf983fc0ae24c8fc6ba99a4ceaa38ae63" translate="yes" xml:space="preserve">
          <source>When a list is exported as an environment variable, it is either space or colon delimited, depending on whether it is a &lt;a href=&quot;#variables-path&quot;&gt;path variable&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9a5ca6f11575f0e22287a0ddafbd99b32a0053" translate="yes" xml:space="preserve">
          <source>When a list is exported as an environment variable, it is either space or colon delimited, depending on whether it is a path variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97081ce94818be9b3600a78c370d83c10b3483c2" translate="yes" xml:space="preserve">
          <source>When a parameter includes an &lt;a href=&quot;#quotes&quot;&gt;unquoted&lt;/a&gt;&lt;code&gt;*&lt;/code&gt; star (or &quot;asterisk&quot;) or a &lt;code&gt;?&lt;/code&gt; question mark, fish uses it as a wildcard to match files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64df52b82b6680cee5d07a9157923c1c477f30d" translate="yes" xml:space="preserve">
          <source>When a process or job exits</source>
          <target state="translated">Cuando un proceso o un trabajo sale</target>
        </trans-unit>
        <trans-unit id="9e886d360322b007795196090babf1425086c752" translate="yes" xml:space="preserve">
          <source>When a scope is explicitly given, it will be used. If a variable of the same name exists in a different scope, that variable will not be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b00bfa449d40b6151effb4cc0facd22af7b0736" translate="yes" xml:space="preserve">
          <source>When a signal is delivered</source>
          <target state="translated">Cuando se entrega una señal</target>
        </trans-unit>
        <trans-unit id="04e838ba0226dd504ea75a79e5fb9a5b442d6aad" translate="yes" xml:space="preserve">
          <source>When all arguments are valid job specifiers, &lt;code&gt;bg&lt;/code&gt; will background all matching jobs that exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f06f0c49199bffd6092463385d2eaaf34e91888" translate="yes" xml:space="preserve">
          <source>When all arguments are valid job specifiers, bg will background all matching jobs that exist.</source>
          <target state="translated">Cuando todos los argumentos sean válidos para especificar el trabajo,bg hará un fondo de todos los trabajos que existan.</target>
        </trans-unit>
        <trans-unit id="24bda0993bf1f284e0377d7559e36d7befb31f8a" translate="yes" xml:space="preserve">
          <source>When an argument for a program is given on the commandline, it undergoes the process of parameter expansion before it is sent on to the command. Parameter expansion is a powerful mechanism that allows you to expand the parameter in various ways, including performing wildcard matching on files, inserting the value of a shell variable into the parameter or even using the output of another command as a parameter list.</source>
          <target state="translated">Cuando se da un argumento para un programa en la línea de comandos,se somete al proceso de expansión de parámetros antes de ser enviado al comando.La expansión de parámetros es un poderoso mecanismo que permite expandir el parámetro de varias maneras,incluyendo la realización de coincidencias de comodines en los archivos,la inserción del valor de una variable de shell en el parámetro o incluso el uso de la salida de otro comando como una lista de parámetros.</target>
        </trans-unit>
        <trans-unit id="51d4ef16c4e522527f31c576578d19308f006fec" translate="yes" xml:space="preserve">
          <source>When an array is exported as an environment variable, it is either space or colon delimited, depending on whether it is a path variable:</source>
          <target state="translated">Cuando un conjunto se exporta como una variable de entorno,está delimitado por el espacio o por los dos puntos,dependiendo de si es una variable de trayectoria:</target>
        </trans-unit>
        <trans-unit id="226e081de257115368af0da7f8de8543cb320d2b" translate="yes" xml:space="preserve">
          <source>When an interactive fish starts, it executes fish_greeting and displays its output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083625467bc7bf4cd25dc54b2e5d0f68812dc076" translate="yes" xml:space="preserve">
          <source>When at least one of the arguments isn't a valid job specifier (i.e. PID), &lt;code&gt;bg&lt;/code&gt; will print an error without backgrounding anything.</source>
          <target state="translated">Cuando al menos uno de los argumentos no es un especificador de trabajo v&amp;aacute;lido (es decir, PID), &lt;code&gt;bg&lt;/code&gt; imprimir&amp;aacute; un error sin fondo.</target>
        </trans-unit>
        <trans-unit id="5ba972b7b572c1b60e60b661edb1ec10533975b3" translate="yes" xml:space="preserve">
          <source>When at least one of the arguments isn't a valid job specifier, &lt;code&gt;bg&lt;/code&gt; will print an error without backgrounding anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a37e1f3259f6cdbb079115ac56119f8c19560a48" translate="yes" xml:space="preserve">
          <source>When calling a function, all current local variables temporarily disappear. This shadowing of the local scope is needed since the variable namespace would become cluttered, making it very easy to accidentally overwrite variables from another function.</source>
          <target state="translated">Cuando se llama a una función,todas las variables locales actuales desaparecen temporalmente.Esta sombra del ámbito local es necesaria ya que el espacio de nombres de las variables se desordenaría,lo que haría muy fácil sobrescribir accidentalmente las variables de otra función.</target>
        </trans-unit>
        <trans-unit id="15eb860b17777aaad36a975023e7f241c10c68cb" translate="yes" xml:space="preserve">
          <source>When combining multiple parameter expansions, expansions are performed in the following order:</source>
          <target state="translated">Al combinar múltiples expansiones de parámetros,las expansiones se realizan en el siguiente orden:</target>
        </trans-unit>
        <trans-unit id="8f30248e782192746e24f20cbd06bf81e9f75b5d" translate="yes" xml:space="preserve">
          <source>When defining a new function in fish, it is possible to make it into an event handler, i.e. a function that is automatically run when a specific event takes place. Events that can trigger a handler currently are:</source>
          <target state="translated">Cuando se define una nueva función en los peces,es posible convertirla en un manejador de eventos,es decir,una función que se ejecuta automáticamente cuando tiene lugar un evento específico.Los eventos que pueden desencadenar un manipulador actualmente lo son:</target>
        </trans-unit>
        <trans-unit id="c06a76c81fd354d96a91e2098cf33daa64c9b259" translate="yes" xml:space="preserve">
          <source>When erasing completions, it is possible to either erase all completions for a specific command by specifying &lt;code&gt;complete -c COMMAND -e&lt;/code&gt;, or by specifying a specific completion option to delete by specifying either a long, short or old style option.</source>
          <target state="translated">Al borrar las terminaciones, es posible borrar todas las terminaciones para un comando espec&amp;iacute;fico especificando &lt;code&gt;complete -c COMMAND -e&lt;/code&gt; , o especificando una opci&amp;oacute;n de finalizaci&amp;oacute;n espec&amp;iacute;fica para eliminar especificando una opci&amp;oacute;n de estilo largo, corto o antiguo.</target>
        </trans-unit>
        <trans-unit id="abe3c0826756ddd94fc6f7043e431f245f33485e" translate="yes" xml:space="preserve">
          <source>When erasing completions, it is possible to either erase all completions for a specific command by specifying &lt;code&gt;complete -c COMMAND -e&lt;/code&gt;, or by specifying a specific completion option to delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f74f00e3564775c5d2c3beefaf13fc2297b697" translate="yes" xml:space="preserve">
          <source>When fish encounters a command, it attempts to autoload a function for that command, by looking for a file with the name of that command in &lt;code&gt;~/.config/fish/functions/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe8efa2474f562befcfcf03cc1305d1cd17f6ae" translate="yes" xml:space="preserve">
          <source>When fish is given a commandline, it expands the parameters before sending them to the command. There are multiple different kinds of expansions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43f1cc3cffa6f7df6a752f14fdd0d20ef0c43a1" translate="yes" xml:space="preserve">
          <source>When fish needs to load a function, it searches through any directories in the &lt;a href=&quot;#variables-lists&quot;&gt;list variable&lt;/a&gt;&lt;code&gt;$fish_function_path&lt;/code&gt; for a file with a name consisting of the name of the function plus the suffix &lt;code&gt;.fish&lt;/code&gt; and loads the first it finds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dad5f646fc001ede17833fac982c33a1376fdb6" translate="yes" xml:space="preserve">
          <source>When fish needs to load a function, it searches through any directories in the list variable &lt;code&gt;$fish_function_path&lt;/code&gt; for a file with a name consisting of the name of the function plus the suffix '&lt;code&gt;.fish&lt;/code&gt;' and loads the first it finds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f45a26c9381e830d0b786b8360e3003fa8444d5" translate="yes" xml:space="preserve">
          <source>When fish sees an unquoted &lt;code&gt;*&lt;/code&gt;, it performs &lt;a href=&quot;index#expand-wildcard&quot;&gt;wildcard expansion&lt;/a&gt;. That means it tries to match filenames to the given string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44a3edb25112e82e44ad8d49ee8a1bf566a28de" translate="yes" xml:space="preserve">
          <source>When fish tries to execute a command and can't find it, it invokes this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8021574ea7ad5b6b61ba432ea2086393104de8d9" translate="yes" xml:space="preserve">
          <source>When fish waits for input, it will display a prompt by evaluating the &lt;a href=&quot;cmds/fish_prompt#cmd-fish-prompt&quot;&gt;fish_prompt&lt;/a&gt; and &lt;a href=&quot;cmds/fish_right_prompt#cmd-fish-right-prompt&quot;&gt;fish_right_prompt&lt;/a&gt; functions. The output of the former is displayed on the left and the latter's output on the right side of the terminal. The output of &lt;a href=&quot;cmds/fish_mode_prompt#cmd-fish-mode-prompt&quot;&gt;fish_mode_prompt&lt;/a&gt; will be prepended on the left, though the default function only does this when in &lt;a href=&quot;#vi-mode&quot;&gt;vi-mode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cfa7c432a41b5485592c13762493a4673cef3a6" translate="yes" xml:space="preserve">
          <source>When fish waits for input, it will display a prompt by evaluating the &lt;code&gt;fish_prompt&lt;/code&gt; and &lt;code&gt;fish_right_prompt&lt;/code&gt; functions. The output of the former is displayed on the left and the latter's output on the right side of the terminal. The output of &lt;code&gt;fish_mode_prompt&lt;/code&gt; will be prepended on the left, though the default function only does this when in &lt;a href=&quot;#vi-mode&quot;&gt;vi-mode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71562657ada1f73f1b73dd5722b7668b06f50100" translate="yes" xml:space="preserve">
          <source>When fish waits for input, it will display a prompt by evaluating the &lt;code&gt;fish_prompt&lt;/code&gt; and &lt;code&gt;fish_right_prompt&lt;/code&gt; functions. The output of the former is displayed on the left and the latter's output on the right side of the terminal. The output of &lt;code&gt;fish_mode_prompt&lt;/code&gt; will be prepended on the left, though the default function only does this when in &lt;a href=&quot;index#vi-mode&quot;&gt;vi-mode&lt;/a&gt;.</source>
          <target state="translated">Cuando fish espera una entrada, mostrar&amp;aacute; un mensaje evaluando las funciones &lt;code&gt;fish_prompt&lt;/code&gt; y &lt;code&gt;fish_right_prompt&lt;/code&gt; . La salida del primero se muestra a la izquierda y la salida del &amp;uacute;ltimo en el lado derecho del terminal. La salida de &lt;code&gt;fish_mode_prompt&lt;/code&gt; se antepondr&amp;aacute; a la izquierda, aunque la funci&amp;oacute;n predeterminada solo hace esto cuando est&amp;aacute; en &lt;a href=&quot;index#vi-mode&quot;&gt;modo vi&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="725f43146f11db5b86f8606c09448389fd1f4eed" translate="yes" xml:space="preserve">
          <source>When in vi-mode, the &lt;a href=&quot;cmds/fish_mode_prompt#cmd-fish-mode-prompt&quot;&gt;fish_mode_prompt&lt;/a&gt; function will display a mode indicator to the left of the prompt. To disable this feature, override it with an empty function. To display the mode elsewhere (like in your right prompt), use the output of the &lt;code&gt;fish_default_mode_prompt&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607879a486f64cd0da9cb1a6673f02fc3b5d2fec" translate="yes" xml:space="preserve">
          <source>When in vi-mode, the &lt;a href=&quot;fish_mode_prompt&quot;&gt;&lt;code&gt;fish_mode_prompt&lt;/code&gt;&lt;/a&gt; function will display a mode indicator to the left of the prompt. The &lt;code&gt;fish_vi_cursor&lt;/code&gt; function will be used to change the cursor's shape depending on the mode in supported terminals. To disable this feature, override it with an empty function. To display the mode elsewhere (like in your right prompt), use the output of the &lt;code&gt;fish_default_mode_prompt&lt;/code&gt; function.</source>
          <target state="translated">Cuando est&amp;aacute; en modo vi, la funci&amp;oacute;n &lt;a href=&quot;fish_mode_prompt&quot;&gt; &lt;code&gt;fish_mode_prompt&lt;/code&gt; &lt;/a&gt; mostrar&amp;aacute; un indicador de modo a la izquierda del indicador. La funci&amp;oacute;n &lt;code&gt;fish_vi_cursor&lt;/code&gt; se utilizar&amp;aacute; para cambiar la forma del cursor seg&amp;uacute;n el modo en los terminales compatibles. Para deshabilitar esta funci&amp;oacute;n, an&amp;oacute;tela con una funci&amp;oacute;n vac&amp;iacute;a. Para mostrar el modo en otro lugar (como en el indicador de la derecha), use la salida de la funci&amp;oacute;n &lt;code&gt;fish_default_mode_prompt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7207ec54bb98951ebcfc33b730cd4623b1e4ffda" translate="yes" xml:space="preserve">
          <source>When lists are expanded with other parts attached, they are expanded with these parts still attached. Even if two lists are attached to each other, they are expanded in all combinations. This is referred to as the &lt;code&gt;cartesian product&lt;/code&gt; (like in mathematics), and works basically like &lt;a href=&quot;#expand-brace&quot;&gt;brace expansion&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa1950dd577d43402c44360e871ee88e2e7d899" translate="yes" xml:space="preserve">
          <source>When matching via regular expressions, &lt;code&gt;string match&lt;/code&gt; automatically sets variables for all named capturing groups (&lt;code&gt;(?&amp;lt;name&amp;gt;expression)&lt;/code&gt;). It will create a variable with the name of the group, in the default scope, for each named capturing group, and set it to the value of the capturing group in the first matched argument. If a named capture group matched an empty string, the variable will be set to the empty string (like &lt;code&gt;set var &quot;&quot;&lt;/code&gt;). If it did not match, the variable will be set to nothing (like &lt;code&gt;set var&lt;/code&gt;). When &lt;code&gt;--regex&lt;/code&gt; is used with &lt;code&gt;--all&lt;/code&gt;, this behavior changes. Each named variable will contain a list of matches, with the first match contained in the first element, the second match in the second, and so on. If the group was empty or did not match, the corresponding element will be an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b46dcb16afbaec6d4436b9d1a5f44e784219a0" translate="yes" xml:space="preserve">
          <source>When multiple &lt;code&gt;COMMAND&lt;/code&gt;s are provided, they are all run in the specified order when the key is pressed. Note that special input functions cannot be combined with ordinary shell script commands. The commands must be entirely a sequence of special input functions (from &lt;code&gt;bind -f&lt;/code&gt;) or all shell script commands (i.e., valid fish script).</source>
          <target state="translated">Cuando se proporcionan varios &lt;code&gt;COMMAND&lt;/code&gt; , todos se ejecutan en el orden especificado cuando se presiona la tecla. Tenga en cuenta que las funciones de entrada especiales no se pueden combinar con comandos de script de shell ordinarios. Los comandos deben ser completamente una secuencia de funciones de entrada especiales (de &lt;code&gt;bind -f&lt;/code&gt; ) o todos los comandos del script de shell (es decir, un script fish v&amp;aacute;lido).</target>
        </trans-unit>
        <trans-unit id="bacd79f4da565398d4890d58983f39376b862999" translate="yes" xml:space="preserve">
          <source>When no scope is given, but a variable of that name exists, the variable of the smallest scope will be modified. The scope will not be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60402cb8f58632c68a26ced09b11fbf6589f7279" translate="yes" xml:space="preserve">
          <source>When running in this mode, &lt;code&gt;read&lt;/code&gt; does not split the input in any way and text is redirected to standard output without any further processing or manipulation.</source>
          <target state="translated">Cuando se ejecuta en este modo, la &lt;code&gt;read&lt;/code&gt; no divide la entrada de ninguna manera y el texto se redirige a la salida est&amp;aacute;ndar sin ning&amp;uacute;n procesamiento o manipulaci&amp;oacute;n adicional.</target>
        </trans-unit>
        <trans-unit id="efd94d1e11c389f3a2b8042a383ed84dc4be3715" translate="yes" xml:space="preserve">
          <source>When the cursor is over a parenthesis or a quote, &lt;code&gt;fish&lt;/code&gt; also highlights its matching quote or parenthesis.</source>
          <target state="translated">Cuando el cursor est&amp;aacute; sobre un par&amp;eacute;ntesis o una cita, &lt;code&gt;fish&lt;/code&gt; tambi&amp;eacute;n resalta su cita o par&amp;eacute;ntesis coincidente.</target>
        </trans-unit>
        <trans-unit id="f29fa3d53b7aee3933cab252e9b1fd437594daf9" translate="yes" xml:space="preserve">
          <source>When the cursor is over a parenthesis or a quote, fish also highlights its matching quote or parenthesis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a87969e30ad0e39174183d05f883882efbc023" translate="yes" xml:space="preserve">
          <source>When the prompt is about to be shown</source>
          <target state="translated">Cuando el aviso está a punto de ser mostrado</target>
        </trans-unit>
        <trans-unit id="1c6e1e0508c37c3bf367060736e14482a8121010" translate="yes" xml:space="preserve">
          <source>When the shell tells the kernel to execute the file, it will use the interpreter &lt;code&gt;/bin/bash&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fb666d00ac44965366d223053ffc07523cfa5c" translate="yes" xml:space="preserve">
          <source>When the value of a variable is updated</source>
          <target state="translated">Cuando el valor de una variable se actualiza</target>
        </trans-unit>
        <trans-unit id="5149e58fb1af17e2b78bfc79105f3521233c2ff0" translate="yes" xml:space="preserve">
          <source>When two unquoted expansions directly follow each other, you need to watch out for expansions that expand to nothing. This includes undefined variables and empty lists, but also command substitutions with no output. See the &lt;a href=&quot;#cartesian-product&quot;&gt;cartesian product&lt;/a&gt; section for more information.</source>
          <target state="translated">Cuando dos expansiones no cotizadas se suceden directamente, debe tener cuidado con las expansiones que se expanden a la nada. Esto incluye variables no definidas y listas vac&amp;iacute;as, pero tambi&amp;eacute;n sustituciones de comandos sin salida. Consulte la secci&amp;oacute;n de &lt;a href=&quot;#cartesian-product&quot;&gt;productos cartesianos&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="611390b4e7bff2a4f48823eeb19ea95b7d5c6f8e" translate="yes" xml:space="preserve">
          <source>When using a variable as an argument for a test operator you should almost always enclose it in double-quotes. There are only two situations it is safe to omit the quote marks. The first is when the argument is a literal string with no whitespace or other characters special to the shell (e.g., semicolon). For example, &lt;code&gt;test -b /my/file&lt;/code&gt;. The second is using a variable that expands to exactly one element including if that element is the empty string (e.g., &amp;lsquo;set x &amp;rsquo;'&lt;code&gt;). If the variable is not set, set but with no value, or set to more than one value you must enclose it in double-quotes. For example,&lt;/code&gt;test &quot;$x&quot; = &quot;$y&quot;&lt;code&gt;. Since it is always safe to enclose variables in double-quotes when used as&lt;/code&gt;test` arguments that is the recommended practice.</source>
          <target state="translated">Cuando utilice una variable como argumento para un operador de prueba, casi siempre debe encerrarla entre comillas dobles. Solo hay dos situaciones en las que es seguro omitir las comillas. La primera es cuando el argumento es una cadena literal sin espacios en blanco u otros caracteres especiales para el shell (por ejemplo, punto y coma). Por ejemplo, &lt;code&gt;test -b /my/file&lt;/code&gt; . La segunda es usar una variable que se expanda a exactamente un elemento, incluso si ese elemento es la cadena vac&amp;iacute;a (por ejemplo, 'set x' ' &lt;code&gt;). If the variable is not set, set but with no value, or set to more than one value you must enclose it in double-quotes. For example,&lt;/code&gt; prueba &quot;$ x&quot; = &quot;$ y&quot; &lt;code&gt;. Since it is always safe to enclose variables in double-quotes when used as&lt;/code&gt; argumentos de prueba, esa es la pr&amp;aacute;ctica recomendada.</target>
        </trans-unit>
        <trans-unit id="22d3206588f4ce114f604b93c664c1eccb1e21e6" translate="yes" xml:space="preserve">
          <source>When using a variable as an argument for a test operator you should almost always enclose it in double-quotes. There are only two situations it is safe to omit the quote marks. The first is when the argument is a literal string with no whitespace or other characters special to the shell (e.g., semicolon). For example, &lt;code&gt;test -b /my/file&lt;/code&gt;. The second is using a variable that expands to exactly one element including if that element is the empty string (e.g., &lt;code&gt;set x ''&lt;/code&gt;). If the variable is not set, set but with no value, or set to more than one value you must enclose it in double-quotes. For example, &lt;code&gt;test &quot;$x&quot; = &quot;$y&quot;&lt;/code&gt;. Since it is always safe to enclose variables in double-quotes when used as &lt;code&gt;test&lt;/code&gt; arguments that is the recommended practice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9062d3c72370d3c1535058f3067893ad9fc5a147" translate="yes" xml:space="preserve">
          <source>When using indirect variable expansion with multiple &lt;code&gt;$&lt;/code&gt; (&lt;code&gt;$$name&lt;/code&gt;), you have to give all indices up to the variable you want to slice:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f789369b1ad9410874a3f56ca6fac6e2feeef56f" translate="yes" xml:space="preserve">
          <source>When using most virtual terminals, it is possible to set the message displayed in the titlebar of the terminal window. This can be done automatically in fish by defining the &lt;a href=&quot;cmds/fish_title#cmd-fish-title&quot;&gt;fish_title&lt;/a&gt; function. The &lt;a href=&quot;cmds/fish_title#cmd-fish-title&quot;&gt;fish_title&lt;/a&gt; function is executed before and after a new command is executed or put into the foreground and the output is used as a titlebar message. The &lt;a href=&quot;cmds/status#cmd-status&quot;&gt;status current-command&lt;/a&gt; builtin will always return the name of the job to be put into the foreground (or &lt;code&gt;fish&lt;/code&gt; if control is returning to the shell) when the &lt;code&gt;fish_prompt &amp;lt;cmd-fish_prompt&amp;gt;&lt;/code&gt; function is called. The first argument to fish_title will contain the most recently executed foreground command as a string, starting with fish 2.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423a828b908fd75e9cc37f539daeca01ccaa2ca1" translate="yes" xml:space="preserve">
          <source>When using most virtual terminals, it is possible to set the message displayed in the titlebar of the terminal window. This can be done automatically in fish by defining the &lt;code&gt;fish_title&lt;/code&gt; function. The &lt;code&gt;fish_title&lt;/code&gt; function is executed before and after a new command is executed or put into the foreground and the output is used as a titlebar message. The &lt;code&gt;status current-command&lt;/code&gt; builtin will always return the name of the job to be put into the foreground (or 'fish' if control is returning to the shell) when the &lt;code&gt;fish_prompt&lt;/code&gt; function is called. The first argument to fish_title will contain the most recently executed foreground command as a string, starting with fish 2.2.</source>
          <target state="translated">Cuando se utiliza la mayor&amp;iacute;a de los terminales virtuales, es posible configurar el mensaje que se muestra en la barra de t&amp;iacute;tulo de la ventana del terminal. Esto se puede hacer autom&amp;aacute;ticamente en fish definiendo la funci&amp;oacute;n &lt;code&gt;fish_title&lt;/code&gt; . La funci&amp;oacute;n &lt;code&gt;fish_title&lt;/code&gt; se ejecuta antes y despu&amp;eacute;s de que se ejecute un nuevo comando o se ponga en primer plano y la salida se utilice como un mensaje de barra de t&amp;iacute;tulo. El &lt;code&gt;status current-command&lt;/code&gt; interno de estado actual siempre devolver&amp;aacute; el nombre del trabajo que se pondr&amp;aacute; en primer plano (o 'pez' si el control est&amp;aacute; regresando al caparaz&amp;oacute;n) cuando se &lt;code&gt;fish_prompt&lt;/code&gt; funci&amp;oacute;n fish_prompt . El primer argumento de fish_title contendr&amp;aacute; el comando de primer plano ejecutado m&amp;aacute;s recientemente como una cadena, comenzando con fish 2.2.</target>
        </trans-unit>
        <trans-unit id="8174e8c2267c766e6e1589bb88a15f5f751e9e9e" translate="yes" xml:space="preserve">
          <source>When using this feature together with array brackets, the brackets will always match the innermost &lt;code&gt;$&lt;/code&gt; dereference. Thus, &lt;code&gt;$$foo[5]&lt;/code&gt; will always mean the fifth element of the &lt;code&gt;foo&lt;/code&gt; variable should be dereferenced, not the fifth element of the doubly dereferenced variable &lt;code&gt;foo&lt;/code&gt;. The latter can instead be expressed as &lt;code&gt;$$foo[1][5]&lt;/code&gt;.</source>
          <target state="translated">Cuando se usa esta funci&amp;oacute;n junto con los corchetes de matriz, los corchetes siempre coincidir&amp;aacute;n con la &lt;code&gt;$&lt;/code&gt; desreferenciaci&amp;oacute;n m&amp;aacute;s interna . Por lo tanto, &lt;code&gt;$$foo[5]&lt;/code&gt; siempre significar&amp;aacute; que el quinto elemento de la variable &lt;code&gt;foo&lt;/code&gt; debe desreferenciarse, no el quinto elemento de la variable doblemente desreferenciada &lt;code&gt;foo&lt;/code&gt; . En cambio, este &amp;uacute;ltimo puede expresarse como &lt;code&gt;$$foo[1][5]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ecb11771a6962065e356ec68183ca84e1c8a6484" translate="yes" xml:space="preserve">
          <source>When using this feature together with list brackets, the brackets will always match the innermost &lt;code&gt;$&lt;/code&gt; dereference. Thus, &lt;code&gt;$$foo[5]&lt;/code&gt; will always mean the fifth element of the &lt;code&gt;foo&lt;/code&gt; variable should be dereferenced, not the fifth element of the doubly dereferenced variable &lt;code&gt;foo&lt;/code&gt;. The latter can instead be expressed as &lt;code&gt;$$foo[1][5]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95492d68e7295c0c8c65cbd60486729c4cf7cad3" translate="yes" xml:space="preserve">
          <source>When using this feature together with list brackets, the brackets will be used from the inside out. &lt;code&gt;$$foo[5]&lt;/code&gt; will use the fifth element of &lt;code&gt;$foo&lt;/code&gt; as a variable name, instead of giving the fifth element of all the variables $foo refers to. That would instead be expressed as &lt;code&gt;$$foo[1][5]&lt;/code&gt; (take the first element of &lt;code&gt;$foo&lt;/code&gt;, use it as a variable name, then give the fifth element of that).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8203357d749026bfd4c58d1c6b75fece892ee8c" translate="yes" xml:space="preserve">
          <source>When you leave &lt;code&gt;fish_command_not_found&lt;/code&gt; undefined (e.g. by adding an empty function file) or explicitly call &lt;code&gt;__fish_default_command_not_found_handler&lt;/code&gt;, fish will just print a simple error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc413625f2d8700615beffe00723d3e066b2931" translate="yes" xml:space="preserve">
          <source>When you start a job in &lt;code&gt;fish&lt;/code&gt;, &lt;code&gt;fish&lt;/code&gt; itself will pause, and give control of the terminal to the program just started. Sometimes, you want to continue using the commandline, and have the job run in the background. To create a background job, append an &amp;amp; (ampersand) to your command. This will tell fish to run the job in the background. Background jobs are very useful when running programs that have a graphical user interface.</source>
          <target state="translated">Cuando se inicia un trabajo en &lt;code&gt;fish&lt;/code&gt; , &lt;code&gt;fish&lt;/code&gt; en s&amp;iacute; har&amp;aacute; una pausa, y darle el control de la terminal para el programa acaba de comenzar. A veces, desea continuar usando la l&amp;iacute;nea de comandos y hacer que el trabajo se ejecute en segundo plano. Para crear un trabajo en segundo plano, agregue un &amp;amp; (ampersand) a su comando. Esto le indicar&amp;aacute; a Fish que ejecute el trabajo en segundo plano. Los trabajos en segundo plano son muy &amp;uacute;tiles cuando se ejecutan programas que tienen una interfaz gr&amp;aacute;fica de usuario.</target>
        </trans-unit>
        <trans-unit id="a505edb7996844d6c0e429f9cc380ed2293b390d" translate="yes" xml:space="preserve">
          <source>When you start a job in fish, fish itself will pause, and give control of the terminal to the program just started. Sometimes, you want to continue using the commandline, and have the job run in the background. To create a background job, append an &amp;amp; (ampersand) to your command. This will tell fish to run the job in the background. Background jobs are very useful when running programs that have a graphical user interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2911a3c34c95ec06b7ff2ca9502879faf1a2d383" translate="yes" xml:space="preserve">
          <source>When you write a command in parenthesis like &lt;code&gt;outercommand (innercommand)&lt;/code&gt;, the &lt;code&gt;innercommand&lt;/code&gt; will be executed first. Its output will be taken and each line given as a separate argument to &lt;code&gt;outercommand&lt;/code&gt;, which will then be executed. &lt;a href=&quot;#id15&quot; id=&quot;id13&quot;&gt;[5]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcffbbe6c8cfb3a38a65bc21fb9a8bd9b729783e" translate="yes" xml:space="preserve">
          <source>When you're done, use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15c25511fa0415df6ab124fbf33636f92131f5e" translate="yes" xml:space="preserve">
          <source>Whenever a process exits, an exit status is returned to the program that started it (usually the shell). This exit status is an integer number, which tells the calling application how the execution of the command went. In general, a zero exit status means that the command executed without problem, but a non-zero exit status means there was some form of problem.</source>
          <target state="translated">Cada vez que un proceso sale,se devuelve un estado de salida al programa que lo inició (normalmente el shell).Este estado de salida es un número entero,que indica a la aplicación que llama cómo fue la ejecución del comando.En general,un estado de salida cero significa que el comando se ejecutó sin problemas,pero un estado de salida distinto de cero significa que hubo algún tipo de problema.</target>
        </trans-unit>
        <trans-unit id="37e6818d213a036baa5f294f8cb49db4fd377178" translate="yes" xml:space="preserve">
          <source>Where can I find extra tools for fish?</source>
          <target state="translated">¿Dónde puedo encontrar herramientas adicionales para los peces?</target>
        </trans-unit>
        <trans-unit id="079e201e9c4dd5d183821d76711a9a3942fe2c10" translate="yes" xml:space="preserve">
          <source>Where to put completions</source>
          <target state="translated">Dónde poner las terminaciones</target>
        </trans-unit>
        <trans-unit id="bb630fa737b8a46648c44a02c27fb5d5d43b5362" translate="yes" xml:space="preserve">
          <source>While fish provides extensive support for &lt;a href=&quot;../index#debugging&quot;&gt;debugging fish scripts&lt;/a&gt;, it is also possible to debug and instrument its internals. Debugging can be enabled by passing the &lt;code&gt;--debug&lt;/code&gt; option. For example, the following command turns on debugging for background IO thread events, in addition to the default categories, i.e. &lt;em&gt;debug&lt;/em&gt;, &lt;em&gt;error&lt;/em&gt;, &lt;em&gt;warning&lt;/em&gt;, and &lt;em&gt;warning-path&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218d0fd933c5736f11bfc14c23fd644e6997fe12" translate="yes" xml:space="preserve">
          <source>While loops:</source>
          <target state="translated">Mientras que los bucles:</target>
        </trans-unit>
        <trans-unit id="c3d957621152f2cbd082b0e140ac7a547272ab27" translate="yes" xml:space="preserve">
          <source>While this will check if &lt;code&gt;hasargs&lt;/code&gt; was run with the &lt;code&gt;-q&lt;/code&gt; option:</source>
          <target state="translated">Si bien esto verificar&amp;aacute; si &lt;code&gt;hasargs&lt;/code&gt; se ejecut&amp;oacute; con la opci&amp;oacute;n &lt;code&gt;-q&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b270ef871a7710bb29e25b6f211646e3d52ec564" translate="yes" xml:space="preserve">
          <source>While you could also just put &lt;code&gt;echo&lt;/code&gt; calls into config.fish, fish_greeting takes care of only being used in interactive shells, so it won't be used e.g. with &lt;code&gt;scp&lt;/code&gt; (which executes a shell), which prevents some errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ce4de279923d46bbaf542b6b17839dfe291737" translate="yes" xml:space="preserve">
          <source>Why does my prompt show a &lt;code&gt;[I]&lt;/code&gt;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e24c24ef4021d57bef0a8fce5934342b1e3540f" translate="yes" xml:space="preserve">
          <source>Why doesn't &lt;code&gt;set -Ux&lt;/code&gt; (exported universal variables) seem to work?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da2ee8c41b2531ccfd9706e7ed4059f9b39b539" translate="yes" xml:space="preserve">
          <source>Why doesn't `set -Ux` (exported universal variables) seem to work?</source>
          <target state="translated">¿Por qué no parece que &quot;set -Ux&quot; (variables universales exportadas)funcione?</target>
        </trans-unit>
        <trans-unit id="1e505f696e4f6b7e0b5ed829f453debff8a4a2e5" translate="yes" xml:space="preserve">
          <source>Why doesn't history substitution (&quot;!$&quot; etc.) work?</source>
          <target state="translated">¿Por qué no funciona la sustitución de la historia (&quot;!$&quot; etc.)?</target>
        </trans-unit>
        <trans-unit id="567d5b34994eb0320286730214d3dd777982c9ad" translate="yes" xml:space="preserve">
          <source>Why fish?</source>
          <target state="translated">¿Por qué el pescado?</target>
        </trans-unit>
        <trans-unit id="b5bc272f928916c329c37678fc169daa0be6520c" translate="yes" xml:space="preserve">
          <source>Why won't SSH/SCP/rsync connect properly when fish is my login shell?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59af40d4a351e635fdbe369d7b681d20a590a23a" translate="yes" xml:space="preserve">
          <source>Wildcard expansion</source>
          <target state="translated">La expansión de los comodines</target>
        </trans-unit>
        <trans-unit id="59047ee36a3c7c05f567f4b4586b76d8d7e3171d" translate="yes" xml:space="preserve">
          <source>Wildcard matches are sorted case insensitively. When sorting matches containing numbers, consecutive digits are considered to be one element, so that the strings '1' '5' and '12' would be sorted in the order given.</source>
          <target state="translated">Las coincidencias con los comodines se clasifican de forma insensible.Cuando se clasifican las coincidencias que contienen números,los dígitos consecutivos se consideran un elemento,de modo que las cadenas &quot;1&quot; &quot;5&quot; y &quot;12&quot; se clasifican en el orden dado.</target>
        </trans-unit>
        <trans-unit id="7b5ee2d722a1af9ce91d6db66a45c128504595b1" translate="yes" xml:space="preserve">
          <source>Wildcard matches are sorted case insensitively. When sorting matches containing numbers, they are naturally sorted, so that the strings '1' '5' and '12' would be sorted like 1, 5, 12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4138f22664d37f96c263052adeb723fdfd7248c" translate="yes" xml:space="preserve">
          <source>Wildcards</source>
          <target state="translated">Wildcards</target>
        </trans-unit>
        <trans-unit id="f61580f3d1c06f2ad506e587da208ee73d4f77c5" translate="yes" xml:space="preserve">
          <source>Wildcards (&quot;Globbing&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8922b48b2cfb4c2a4772d92a23f2601fea41701" translate="yes" xml:space="preserve">
          <source>Wildcards (globs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba6036f935276de5e3e3f27ae1af5acbaca7c3a" translate="yes" xml:space="preserve">
          <source>Will print &quot;Number of bananas in my pocket: 42&quot;, &lt;code&gt;without&lt;/code&gt; a newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278d17b7409d744f59bd2b428221655321a32bee" translate="yes" xml:space="preserve">
          <source>Will print &quot;Number of bananas in my pocket: 42&quot;, &lt;em&gt;without&lt;/em&gt; a newline.</source>
          <target state="translated">Imprimir&amp;eacute; &quot;N&amp;uacute;mero de pl&amp;aacute;tanos en mi bolsillo: 42&quot;, &lt;em&gt;sin&lt;/em&gt; una nueva l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="4f7159b217d7c49f62890340f93714482c2741cd" translate="yes" xml:space="preserve">
          <source>Will print &quot;Number of bananas in my pocket: 42&quot;, _without_ a newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d27bda981ba079ffce589e22866c0442facccba" translate="yes" xml:space="preserve">
          <source>Will print &quot;flounder fish&quot; (separated with a tab character), followed by a newline character. This is useful for writing completions, as fish expects completion scripts to output the option followed by the description, separated with a tab character.</source>
          <target state="translated">Imprimirá &quot;pez platija&quot; (separado con un carácter de tabulación),seguido de un carácter de nueva línea.Esto es útil para escribir las terminaciones,ya que el pez espera que los guiones de terminación den como resultado la opción seguida de la descripción,separada con un tabulador.</target>
        </trans-unit>
        <trans-unit id="d95f3955e4775af2ffe313a32a1e156b2312cd4e" translate="yes" xml:space="preserve">
          <source>Will remove the file 'cumbersome filename.txt', while</source>
          <target state="translated">Eliminará el archivo 'engorroso nombre de archivo.txt',mientras que</target>
        </trans-unit>
        <trans-unit id="4044b3d5cb068502c25839df6244b97ef13bfd98" translate="yes" xml:space="preserve">
          <source>With &quot;-c&quot;, it clears the directory stack instead.</source>
          <target state="translated">Con &quot;-c&quot;,borra la pila de directorios en su lugar.</target>
        </trans-unit>
        <trans-unit id="b3f596135ed991ca7f5a3bdc45b29b16283c1e4c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;CMD&lt;/code&gt; specified, the command line buffer is erased and replaced with the contents of &lt;code&gt;CMD&lt;/code&gt;.</source>
          <target state="translated">Con &lt;code&gt;CMD&lt;/code&gt; especificado, el b&amp;uacute;fer de la l&amp;iacute;nea de comandos se borra y se reemplaza con el contenido de &lt;code&gt;CMD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3a11523e7c7f53a50eb3f5c7145415a6eeb3a11" translate="yes" xml:space="preserve">
          <source>With both variable names and values provided, &lt;code&gt;set&lt;/code&gt; assigns the variable &lt;code&gt;VARIABLE_NAME&lt;/code&gt; the values &lt;code&gt;VALUES...&lt;/code&gt;.</source>
          <target state="translated">Con ambos nombres y valores de las variables siempre, &lt;code&gt;set&lt;/code&gt; asigna la variable &lt;code&gt;VARIABLE_NAME&lt;/code&gt; los valores &lt;code&gt;VALUES...&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3a3bdf1969b9c7b04d35c628b64777d5949f26c" translate="yes" xml:space="preserve">
          <source>With no arguments, &lt;code&gt;status&lt;/code&gt; displays a summary of the current login and job control status of the shell.</source>
          <target state="translated">Sin argumentos, el &lt;code&gt;status&lt;/code&gt; muestra un resumen del inicio de sesi&amp;oacute;n actual y el estado de control del trabajo del shell.</target>
        </trans-unit>
        <trans-unit id="ff0f6870a82d5cfaf6592bfe8160d96a5dcb7c33" translate="yes" xml:space="preserve">
          <source>With no options, &lt;code&gt;type&lt;/code&gt; indicates how each &lt;code&gt;NAME&lt;/code&gt; would be interpreted if used as a command name.</source>
          <target state="translated">Sin opciones, el &lt;code&gt;type&lt;/code&gt; indica c&amp;oacute;mo se interpretar&amp;iacute;a cada &lt;code&gt;NAME&lt;/code&gt; si se usara como un nombre de comando.</target>
        </trans-unit>
        <trans-unit id="324faf3e252b5aa14d470f7a0e509c22b0211914" translate="yes" xml:space="preserve">
          <source>With no parameters, &lt;code&gt;commandline&lt;/code&gt; returns the current value of the command line.</source>
          <target state="translated">Sin par&amp;aacute;metros, la &lt;code&gt;commandline&lt;/code&gt; devuelve el valor actual de la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="32e508ff64591c08b5059eaf16992b090526d942" translate="yes" xml:space="preserve">
          <source>With no parameters, the current file creation mode mask is printed as an octal number.</source>
          <target state="translated">Sin parámetros,la máscara del modo de creación de archivos actual se imprime como un número octal.</target>
        </trans-unit>
        <trans-unit id="550c07a797cef93c6dca0c250695a3ee3bc836c8" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;--line&lt;/code&gt; option, &lt;code&gt;read&lt;/code&gt; reads a line of input from standard input into each provided variable, stopping when each variable has been filled. The line is not tokenized.</source>
          <target state="translated">Con la opci&amp;oacute;n &lt;code&gt;--line&lt;/code&gt; , &lt;code&gt;read&lt;/code&gt; lee una l&amp;iacute;nea de entrada de la entrada est&amp;aacute;ndar en cada variable proporcionada, deteni&amp;eacute;ndose cuando se ha llenado cada variable. La l&amp;iacute;nea no est&amp;aacute; tokenizada.</target>
        </trans-unit>
        <trans-unit id="7eb04c1870bbf00dde53d943ea601f02f6aade6f" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;-s&lt;/code&gt; option, &lt;code&gt;command&lt;/code&gt; treats every argument as a separate command to look up and sets the exit status to 0 if any of the specified commands were found, or 1 if no commands could be found. Additionally passing a &lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--quiet&lt;/code&gt; option prevents any paths from being printed, like &lt;code&gt;type -q&lt;/code&gt;, for testing only the exit status.</source>
          <target state="translated">Con la opci&amp;oacute;n &lt;code&gt;-s&lt;/code&gt; , el &lt;code&gt;command&lt;/code&gt; trata cada argumento como un comando separado para buscar y establece el estado de salida en 0 si se encontr&amp;oacute; alguno de los comandos especificados, o 1 si no se pudo encontrar ning&amp;uacute;n comando. Adem&amp;aacute;s, pasar una opci&amp;oacute;n &lt;code&gt;-q&lt;/code&gt; o &lt;code&gt;--quiet&lt;/code&gt; evita que se impriman rutas, como el &lt;code&gt;type -q&lt;/code&gt; , para probar solo el estado de salida.</target>
        </trans-unit>
        <trans-unit id="bc8e1321c10d803c389c5b4efea6741544b19b13" translate="yes" xml:space="preserve">
          <source>Without arguments, it exchanges the top two directories in the stack.</source>
          <target state="translated">Sin argumentos,intercambia los dos primeros directorios de la pila.</target>
        </trans-unit>
        <trans-unit id="1afcecbf9280e75078efa249fd70e1ac68834d9a" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;--line&lt;/code&gt; option, &lt;code&gt;read&lt;/code&gt; reads a single line of input from standard input, breaks it into tokens, and then assigns one token to each variable specified in &lt;code&gt;VARIABLES&lt;/code&gt;. If there are more tokens than variables, the complete remainder is assigned to the last variable.</source>
          <target state="translated">Sin la opci&amp;oacute;n &lt;code&gt;--line&lt;/code&gt; , &lt;code&gt;read&lt;/code&gt; lee una sola l&amp;iacute;nea de entrada de la entrada est&amp;aacute;ndar, la divide en tokens y luego asigna un token a cada variable especificada en &lt;code&gt;VARIABLES&lt;/code&gt; . Si hay m&amp;aacute;s tokens que variables, el resto completo se asigna a la &amp;uacute;ltima variable.</target>
        </trans-unit>
        <trans-unit id="81356a4d6a0a4a4ef7b6e1d572238cf1fdea2fd0" translate="yes" xml:space="preserve">
          <source>Writing your own completions</source>
          <target state="translated">Escribir sus propias conclusiones</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="23eb4d3f4155395a74e9d534f97ff4c1908f5aac" translate="yes" xml:space="preserve">
          <source>Y</source>
          <target state="translated">Y</target>
        </trans-unit>
        <trans-unit id="7683cbf9a7b5e61b6d059df3889d47cb3365f802" translate="yes" xml:space="preserve">
          <source>You can access individual elements with square brackets. Indexing starts at 1 from the beginning, and -1 from the end:</source>
          <target state="translated">Puedes acceder a los elementos individuales con corchetes.La indexación comienza en 1 desde el principio,y -1 desde el final:</target>
        </trans-unit>
        <trans-unit id="40e6b52cb290a3ce548872139a9d9e65b572ed76" translate="yes" xml:space="preserve">
          <source>You can also access ranges of elements, known as &quot;slices&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22411b5ee78ea15c18bd052b59931e2ba02abfc9" translate="yes" xml:space="preserve">
          <source>You can also access ranges of elements, known as &quot;slices:&quot;</source>
          <target state="translated">También se puede acceder a rangos de elementos,conocidos como &quot;rebanadas&quot;.</target>
        </trans-unit>
        <trans-unit id="183a967967d542440e171619570f33c53983ac70" translate="yes" xml:space="preserve">
          <source>You can also declare a local variable in a block:</source>
          <target state="translated">También puedes declarar una variable local en un bloque:</target>
        </trans-unit>
        <trans-unit id="8e3c01837741c46701b3d65f5115bae2c31a3640" translate="yes" xml:space="preserve">
          <source>You can also define an empty &lt;code&gt;fish_mode_prompt&lt;/code&gt; function to remove the Vi mode indicators:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd4b4ae658ebe3b3f8b9300da6a0e29fb9beed0" translate="yes" xml:space="preserve">
          <source>You can also launch with &lt;code&gt;fish --private&lt;/code&gt; (or &lt;code&gt;fish -P&lt;/code&gt; for short). This both hides old history and prevents writing history to disk. This is useful to avoid leaking personal information (e.g. for screencasts) or when dealing with sensitive information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb40a1f7381aef9ba5318c2e40466b4d37abc89" translate="yes" xml:space="preserve">
          <source>You can also use the Web configuration tool, &lt;a href=&quot;cmds/fish_config#cmd-fish-config&quot;&gt;fish_config&lt;/a&gt;, to preview and choose from a gallery of sample prompts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6736676dcee399ddf959a5129dcc47bfa72a06e" translate="yes" xml:space="preserve">
          <source>You can also use the Web configuration tool, &lt;a href=&quot;commands#fish_config&quot;&gt;&lt;code&gt;fish_config&lt;/code&gt;&lt;/a&gt;, to preview and choose from a gallery of sample prompts.</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar la herramienta de configuraci&amp;oacute;n web, &lt;a href=&quot;commands#fish_config&quot;&gt; &lt;code&gt;fish_config&lt;/code&gt; &lt;/a&gt; , para obtener una vista previa y elegir entre una galer&amp;iacute;a de mensajes de muestra.</target>
        </trans-unit>
        <trans-unit id="cfe746d43b05cc389c18341f5eec0d3e6d66c8e1" translate="yes" xml:space="preserve">
          <source>You can also use the version as a group, so &lt;code&gt;3.0&lt;/code&gt; is equivalent to &quot;stderr-nocaret&quot; and &quot;qmark-noglob&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890e64958803f18a6588060b71b403f136846cd4" translate="yes" xml:space="preserve">
          <source>You can also write your own completions or install some you got from someone else. For that, see &lt;a href=&quot;completions#completion-own&quot;&gt;Writing your own completions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd92db017317ccc2cf69c4b1d28391056cb80e8" translate="yes" xml:space="preserve">
          <source>You can append (or prepend) to a list by setting the list to itself, with some additional arguments. Here we append /usr/local/bin to $PATH:</source>
          <target state="translated">Se puede añadir (o añadir previamente)a una lista estableciendo la lista en sí misma,con algunos argumentos adicionales.Aquí añadimos /usr/local/bin a $PATH:</target>
        </trans-unit>
        <trans-unit id="1bb567fe25bb6a2caba3279e69807e978438ad28" translate="yes" xml:space="preserve">
          <source>You can change &lt;code&gt;fish_history&lt;/code&gt; at any time (by using &lt;code&gt;set -x fish_history &quot;session_name&quot;&lt;/code&gt;) and it will take effect right away. If you set it to &lt;code&gt;&quot;default&quot;&lt;/code&gt;, it will use the default session name (which is &lt;code&gt;&quot;fish&quot;&lt;/code&gt;).</source>
          <target state="translated">Puede cambiar &lt;code&gt;fish_history&lt;/code&gt; en cualquier momento (usando &lt;code&gt;set -x fish_history &quot;session_name&quot;&lt;/code&gt; ) y se har&amp;aacute; efectivo de inmediato. Si lo configura como &lt;code&gt;&quot;default&quot;&lt;/code&gt; , utilizar&amp;aacute; el nombre de sesi&amp;oacute;n predeterminado (que es &lt;code&gt;&quot;fish&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4ac549fb143ef197757b3d3672ad145e781b5096" translate="yes" xml:space="preserve">
          <source>You can change the settings of fish by changing the values of certain variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2a3f197fcb5a9ae9892ffe37231c5dd52cdbb1" translate="yes" xml:space="preserve">
          <source>You can change these key bindings using the &lt;a href=&quot;cmds/bind#cmd-bind&quot;&gt;bind&lt;/a&gt; builtin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="271d995eee26c277a042d3d479fbc5c44abb9d62" translate="yes" xml:space="preserve">
          <source>You can change these key bindings using the &lt;a href=&quot;commands#bind&quot;&gt;bind&lt;/a&gt; builtin command.</source>
          <target state="translated">Puede cambiar estas combinaciones de teclas mediante el comando incorporado &lt;a href=&quot;commands#bind&quot;&gt;bind&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b3246f995c54d5c3580e295b6e00e5f1052a162d" translate="yes" xml:space="preserve">
          <source>You can choose among some sample prompts by running &lt;code&gt;fish_config prompt&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbf59159cacd6194c5d1afee388fe6f9b2deba5" translate="yes" xml:space="preserve">
          <source>You can choose among some sample prompts by running &lt;code&gt;fish_config prompt&lt;/code&gt;. &lt;code&gt;fish&lt;/code&gt; also supports RPROMPT through &lt;code&gt;fish_right_prompt&lt;/code&gt;.</source>
          <target state="translated">Puede elegir entre algunos mensajes de ejemplo ejecutando el &lt;code&gt;fish_config prompt&lt;/code&gt; . &lt;code&gt;fish&lt;/code&gt; tambi&amp;eacute;n admite RPROMPT a trav&amp;eacute;s de &lt;code&gt;fish_right_prompt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29e07248f927a66e3445195c42cee5dad321cbe4" translate="yes" xml:space="preserve">
          <source>You can create abbreviations interactively and they will be visible to other fish sessions if you use the &lt;code&gt;-U&lt;/code&gt; or &lt;code&gt;--universal&lt;/code&gt; flag or don't explicitly specify the scope and the abbreviation isn't already defined with global scope. If you want it to be visible only to the current shell use the &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; flag.</source>
          <target state="translated">Puede crear abreviaturas de forma interactiva y ser&amp;aacute;n visibles para otras sesiones de pesca si usa la bandera &lt;code&gt;-U&lt;/code&gt; o &lt;code&gt;--universal&lt;/code&gt; o no especifica expl&amp;iacute;citamente el alcance y la abreviatura a&amp;uacute;n no est&amp;aacute; definida con alcance global. Si desea que sea visible solo para el shell actual, use el indicador &lt;code&gt;-g&lt;/code&gt; o &lt;code&gt;--global&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18160991581b451c031c7c5ed6da7efea63435aa" translate="yes" xml:space="preserve">
          <source>You can define your own prompt from the command line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e4c148ce6b5b609986d145a9a7da7ea9b88d15" translate="yes" xml:space="preserve">
          <source>You can define your own prompt:</source>
          <target state="translated">Puedes definir tu propio aviso:</target>
        </trans-unit>
        <trans-unit id="771f132ac7436b22e8318fb498769e889b17fc02" translate="yes" xml:space="preserve">
          <source>You can do so directly in &lt;code&gt;config.fish&lt;/code&gt;, like you might do in other shells with &lt;code&gt;.profile&lt;/code&gt;. See &lt;a href=&quot;#path-example&quot;&gt;this example&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61c13e82446efa061ca7d17091f411ee83d8761" translate="yes" xml:space="preserve">
          <source>You can do so directly in &lt;code&gt;config.fish&lt;/code&gt;, like you might do in other shells with &lt;code&gt;.profile&lt;/code&gt;. See &lt;a href=&quot;#path_example&quot;&gt;this example&lt;/a&gt;.</source>
          <target state="translated">Puede hacerlo directamente en &lt;code&gt;config.fish&lt;/code&gt; , como lo har&amp;iacute;a en otros shells con &lt;code&gt;.profile&lt;/code&gt; . Vea &lt;a href=&quot;#path_example&quot;&gt;este ejemplo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab42dfe8c6286c5f52729c399c8213d8b499abc0" translate="yes" xml:space="preserve">
          <source>You can erase (or &quot;delete&quot;) a variable with &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c6c6dd6e2cc9d671b6c22ccdb9354bc3fcc555" translate="yes" xml:space="preserve">
          <source>You can erase a variable with &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt;</source>
          <target state="translated">Puede borrar una variable con &lt;code&gt;-e&lt;/code&gt; o &lt;code&gt;--erase&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bad3c32a8d2a38fb8952af3582045099d1f7782" translate="yes" xml:space="preserve">
          <source>You can include a literal space in an argument with a backslash, or by using single or double quotes:</source>
          <target state="translated">Puedes incluir un espacio literal en un argumento con una barra invertida,o usando comillas simples o dobles:</target>
        </trans-unit>
        <trans-unit id="cf2d7abc4fc8709fbd1e843b233396517d8ddaca" translate="yes" xml:space="preserve">
          <source>You can include multiple wildcards:</source>
          <target state="translated">Puede incluir varios comodines:</target>
        </trans-unit>
        <trans-unit id="f83e4dd668d0923f31b885de0832e79602a1616d" translate="yes" xml:space="preserve">
          <source>You can iterate over a list (or a slice) with a for loop:</source>
          <target state="translated">Puedes iterar sobre una lista (o un trozo)con un bucle de for:</target>
        </trans-unit>
        <trans-unit id="7098ee5c350e3a89c5d1f92843efe2402ea93ada" translate="yes" xml:space="preserve">
          <source>You can list the names of all functions with the &lt;a href=&quot;cmds/functions#cmd-functions&quot;&gt;functions&lt;/a&gt; builtin (note the plural!). fish starts out with a number of functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582ba3e59d153a759cfa8931cfe3daa07df07cb8" translate="yes" xml:space="preserve">
          <source>You can list the names of all functions with the &lt;code&gt;functions&lt;/code&gt; keyword (note the plural!). &lt;code&gt;fish&lt;/code&gt; starts out with a number of functions:</source>
          <target state="translated">Puede enumerar los nombres de todas las funciones con la palabra clave &lt;code&gt;functions&lt;/code&gt; (&amp;iexcl;tenga en cuenta el plural!). &lt;code&gt;fish&lt;/code&gt; comienza con una serie de funciones:</target>
        </trans-unit>
        <trans-unit id="8ab1be7c512e88224ed05c20f2e9c4813a606702" translate="yes" xml:space="preserve">
          <source>You can make fish your default shell by adding fish's executable in two places: - add &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; to &lt;code&gt;/etc/shells&lt;/code&gt; - change your default shell with &lt;code&gt;chsh -s&lt;/code&gt; to &lt;code&gt;/usr/local/bin/fish&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbfa536e96ce4c5031503e10bf462df7b697afe" translate="yes" xml:space="preserve">
          <source>You can only specify one subcommand per invocation even if you use the flag form of the subcommand.</source>
          <target state="translated">Sólo puedes especificar un subcomando por invocación aunque uses la forma de bandera del subcomando.</target>
        </trans-unit>
        <trans-unit id="32cbb15c775d0a5c4bd4e986a03e5ca4d359b068" translate="yes" xml:space="preserve">
          <source>You can pipe between commands with the usual vertical bar:</source>
          <target state="translated">Puedes pasar de un comando a otro con la barra vertical habitual:</target>
        </trans-unit>
        <trans-unit id="741249757cfbe06bf07651d5e43763c8e35fa27d" translate="yes" xml:space="preserve">
          <source>You can query the variable &lt;code&gt;fish_private_mode&lt;/code&gt; (&lt;code&gt;if set -q fish_private_mode ...&lt;/code&gt;) if you would like to respect the user's wish for privacy and alter the behavior of your own fish scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d42fab7275c3711f78f4cc0e17430682558b418" translate="yes" xml:space="preserve">
          <source>You can see the current list of features via &lt;code&gt;status features&lt;/code&gt;:</source>
          <target state="translated">Puede ver la lista actual de funciones a trav&amp;eacute;s de funciones de &lt;code&gt;status features&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d372da7b7b5d10683d41167afee54d800f912536" translate="yes" xml:space="preserve">
          <source>You can see the source for any function by passing its name to &lt;code&gt;functions&lt;/code&gt;:</source>
          <target state="translated">Puede ver la fuente de cualquier funci&amp;oacute;n pasando su nombre a las &lt;code&gt;functions&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="119c7a997d5bdc2b60e626a0ba66e37ce06fb4d1" translate="yes" xml:space="preserve">
          <source>You can set the &lt;code&gt;fish_history&lt;/code&gt; variable to another name for the current shell session. The default value (when the variable is unset) is &lt;code&gt;fish&lt;/code&gt; which corresponds to &lt;code&gt;$XDG_DATA_HOME/fish/fish_history&lt;/code&gt;. If you set it to e.g. &lt;code&gt;fun&lt;/code&gt;, the history would be written to &lt;code&gt;$XDG_DATA_HOME/fish/fun_history&lt;/code&gt;. An empty string means history will not be stored at all. This is similar to the private session features in web browsers.</source>
          <target state="translated">Puede establecer la variable &lt;code&gt;fish_history&lt;/code&gt; con otro nombre para la sesi&amp;oacute;n de shell actual. El valor predeterminado (cuando la variable no est&amp;aacute; definida) es &lt;code&gt;fish&lt;/code&gt; , que corresponde a &lt;code&gt;$XDG_DATA_HOME/fish/fish_history&lt;/code&gt; . Si lo configura como, por ejemplo , &lt;code&gt;fun&lt;/code&gt; , el historial se escribir&amp;iacute;a en &lt;code&gt;$XDG_DATA_HOME/fish/fun_history&lt;/code&gt; . Una cadena vac&amp;iacute;a significa que el historial no se almacenar&amp;aacute; en absoluto. Esto es similar a las funciones de sesi&amp;oacute;n privada en los navegadores web.</target>
        </trans-unit>
        <trans-unit id="805a6b59b4757ac95f6f000c9c60c72ef172664e" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#and&quot;&gt;&lt;code&gt;and&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#or&quot;&gt;&lt;code&gt;or&lt;/code&gt;&lt;/a&gt; for complex conditions. Even more complex control can be achieved with &lt;code&gt;while true&lt;/code&gt; containing a &lt;a href=&quot;#break&quot;&gt;break&lt;/a&gt;.</source>
          <target state="translated">Puede utilizar &lt;a href=&quot;#and&quot;&gt; &lt;code&gt;and&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;#or&quot;&gt; &lt;code&gt;or&lt;/code&gt; &lt;/a&gt; para condiciones complejas. Se puede lograr un control a&amp;uacute;n m&amp;aacute;s complejo con una &lt;a href=&quot;#break&quot;&gt;interrupci&amp;oacute;n &lt;/a&gt; &lt;code&gt;while true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36becbc0de8c6768b79b53bcf652c0ec7f0d05ab" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#and&quot;&gt;&lt;code&gt;and&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#or&quot;&gt;&lt;code&gt;or&lt;/code&gt;&lt;/a&gt; in the condition. See the second example below.</source>
          <target state="translated">Puede utilizar &lt;a href=&quot;#and&quot;&gt; &lt;code&gt;and&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;#or&quot;&gt; &lt;code&gt;or&lt;/code&gt; &lt;/a&gt; en la condici&amp;oacute;n. Vea el segundo ejemplo a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0577d2c177d19d22acf68b05e37a2979b667cf8b" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;and#cmd-and&quot;&gt;and&lt;/a&gt; or &lt;a href=&quot;or#cmd-or&quot;&gt;or&lt;/a&gt; for complex conditions. Even more complex control can be achieved with &lt;code&gt;while true&lt;/code&gt; containing a &lt;a href=&quot;break#cmd-break&quot;&gt;break&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad59b8029d0bba074a2a04d55b072bf78f9fdbf" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;and#cmd-and&quot;&gt;and&lt;/a&gt; or &lt;a href=&quot;or#cmd-or&quot;&gt;or&lt;/a&gt; in the condition. See the second example below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29442c2c0cd9017469875929db91ad4d3e135db" translate="yes" xml:space="preserve">
          <source>You can use the following commands for this:</source>
          <target state="translated">Puedes usar los siguientes comandos para esto:</target>
        </trans-unit>
        <trans-unit id="ae2c831ec8a49110729d78b946cea71b43a00858" translate="yes" xml:space="preserve">
          <source>You cannot create an alias to a function with the same name. Note that spaces need to be escaped in the call to &lt;code&gt;alias&lt;/code&gt; just like at the command line, &lt;em&gt;even inside quoted parts&lt;/em&gt;.</source>
          <target state="translated">No puede crear un alias para una funci&amp;oacute;n con el mismo nombre. Tenga en cuenta que los espacios deben escaparse en la llamada al &lt;code&gt;alias&lt;/code&gt; al igual que en la l&amp;iacute;nea de comando, &lt;em&gt;incluso dentro de las partes entre comillas&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ccdace8ac9f08512755f925735f08580088b949a" translate="yes" xml:space="preserve">
          <source>You don't need to use &lt;code&gt;--&lt;/code&gt; before the expression even if it begins with a minus sign which might otherwise be interpreted as an invalid option. If you do insert &lt;code&gt;--&lt;/code&gt; before the expression it will cause option scanning to stop just like for every other command and it won't be part of the expression.</source>
          <target state="translated">No necesita usar &lt;code&gt;--&lt;/code&gt; antes de la expresi&amp;oacute;n, incluso si comienza con un signo menos, que de otro modo podr&amp;iacute;a interpretarse como una opci&amp;oacute;n no v&amp;aacute;lida. Si inserta &lt;code&gt;--&lt;/code&gt; antes de la expresi&amp;oacute;n, har&amp;aacute; que el escaneo de opciones se detenga al igual que para cualquier otro comando y no ser&amp;aacute; parte de la expresi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b3b1863ed26770dc16e4b63ec81e02be42d7d7c1" translate="yes" xml:space="preserve">
          <source>You don't need to use &lt;code&gt;--&lt;/code&gt; before the expression, even if it begins with a minus sign which might otherwise be interpreted as an invalid option. If you do insert &lt;code&gt;--&lt;/code&gt; before the expression, it will cause option scanning to stop just like for every other command and it won't be part of the expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8be7a2a612b4083a5ecd22ae42ec8f3a954a585" translate="yes" xml:space="preserve">
          <source>You may be interested in the &lt;a href=&quot;cdh#cmd-cdh&quot;&gt;cdh&lt;/a&gt; command which provides a more intuitive way to navigate to recently visited directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff1182c8c84fa78c31ad7304aa236d391621f4d" translate="yes" xml:space="preserve">
          <source>You may be interested in the &lt;a href=&quot;commands#cdh&quot;&gt;&lt;code&gt;cdh&lt;/code&gt;&lt;/a&gt; command which provides a more intuitive way to navigate to recently visited directories.</source>
          <target state="translated">Puede que le interese el comando &lt;a href=&quot;commands#cdh&quot;&gt; &lt;code&gt;cdh&lt;/code&gt; ,&lt;/a&gt; que proporciona una forma m&amp;aacute;s intuitiva de navegar a los directorios visitados recientemente.</target>
        </trans-unit>
        <trans-unit id="f19456ce739912cdbaadf68c5288fc6b883036c4" translate="yes" xml:space="preserve">
          <source>You may need to adjust the above path to e.g. &lt;code&gt;/usr/bin/fish&lt;/code&gt;. Use the command &lt;code&gt;which fish&lt;/code&gt; if you are unsure of where fish is installed.</source>
          <target state="translated">Es posible que deba ajustar la ruta anterior a, por ejemplo, &lt;code&gt;/usr/bin/fish&lt;/code&gt; . Utilice el comando &lt;code&gt;which fish&lt;/code&gt; si no est&amp;aacute; seguro de d&amp;oacute;nde est&amp;aacute; instalado Fish.</target>
        </trans-unit>
        <trans-unit id="f60f3dbd8379e7020fda94ce83302c2e10232183" translate="yes" xml:space="preserve">
          <source>You should not assume that only five lines will be written since we may add additional information to the output in the future.</source>
          <target state="translated">No hay que suponer que sólo se escribirán cinco líneas,ya que es posible que en el futuro añadamos información adicional a la salida.</target>
        </trans-unit>
        <trans-unit id="d00cc0aeee9d747695090dc15483badfdd7bb562" translate="yes" xml:space="preserve">
          <source>You should not consider &lt;code&gt;RANDOM&lt;/code&gt; cryptographically secure, or even statistically accurate.</source>
          <target state="translated">No debe considerar &lt;code&gt;RANDOM&lt;/code&gt; criptogr&amp;aacute;ficamente seguro, ni siquiera estad&amp;iacute;sticamente exacto.</target>
        </trans-unit>
        <trans-unit id="5af3405d8d424345d6ab402e94eb08a0de6dc8ad" translate="yes" xml:space="preserve">
          <source>You should not consider &lt;code&gt;random&lt;/code&gt; cryptographically secure, or even statistically accurate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099d04689a14254d5c264e92a8949102945a2d8c" translate="yes" xml:space="preserve">
          <source>You will be greeted by the standard fish prompt, which means you are all set up and can start using fish:</source>
          <target state="translated">Se le dará la bienvenida con el aviso estándar de peces,lo que significa que está todo listo y puede empezar a usar los peces:</target>
        </trans-unit>
        <trans-unit id="daf44230d29581bbad655cd6db1bfaf7030ab520" translate="yes" xml:space="preserve">
          <source>You would then use it in place of &lt;code&gt;**&lt;/code&gt; like this, &lt;code&gt;my_prog (ff)&lt;/code&gt;, to pass only regular files in or below $PWD to &lt;code&gt;my_prog&lt;/code&gt;.</source>
          <target state="translated">Luego, lo usar&amp;iacute;a en lugar de &lt;code&gt;**&lt;/code&gt; como este, &lt;code&gt;my_prog (ff)&lt;/code&gt; , para pasar solo archivos normales en o por debajo de $ PWD a &lt;code&gt;my_prog&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d9f0d2296a27630c33b4691c5bfdf8f6732bf2f" translate="yes" xml:space="preserve">
          <source>You would then use it in place of &lt;code&gt;**&lt;/code&gt; like this, &lt;code&gt;my_prog (ff)&lt;/code&gt;, to pass only regular files in or below $PWD to &lt;code&gt;my_prog&lt;/code&gt;. &lt;a href=&quot;#id10&quot; id=&quot;id9&quot;&gt;[3]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9695117f9f938316caa9d46578b983f363d13cac" translate="yes" xml:space="preserve">
          <source>You'll quickly notice that &lt;code&gt;fish&lt;/code&gt; performs syntax highlighting as you type. Invalid commands are colored red by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c67de04c7033796c6c74cd4dd03c739078b5757" translate="yes" xml:space="preserve">
          <source>You'll quickly notice that &lt;code&gt;fish&lt;/code&gt; performs syntax highlighting as you type. Invalid commands are colored red by default:</source>
          <target state="translated">Notar&amp;aacute; r&amp;aacute;pidamente que &lt;code&gt;fish&lt;/code&gt; realiza el resaltado de sintaxis a medida que escribe. Los comandos no v&amp;aacute;lidos aparecen en rojo de forma predeterminada:</target>
        </trans-unit>
        <trans-unit id="f5cc0cb600943a3e8264dca40619cd74fe5965db" translate="yes" xml:space="preserve">
          <source>You'll quickly notice that fish performs syntax highlighting as you type. Invalid commands are colored red by default:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771340c0a20dacf22c7aabcadc3b061c842574e7" translate="yes" xml:space="preserve">
          <source>Your system most likely also has a &lt;code&gt;time&lt;/code&gt; command. To use that use something like &lt;code&gt;command time&lt;/code&gt;, as in &lt;code&gt;command time sleep 10&lt;/code&gt;. Because it's not inside fish, it won't have access to fish functions and won't be able to time blocks and such.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909f99a779adb66a76fc53ab56c7dd1caf35d0fd" translate="yes" xml:space="preserve">
          <source>Z</source>
          <target state="translated">Z</target>
        </trans-unit>
        <trans-unit id="0f1904a8c07ac4a095aa5e3b5df39a737f0d2b78" translate="yes" xml:space="preserve">
          <source>Zero is considered success, and non-zero is failure.</source>
          <target state="translated">Cero se considera éxito,y no cero es fracaso.</target>
        </trans-unit>
        <trans-unit id="b32dd771f05a685724ea570ac6ad4f09b1be0569" translate="yes" xml:space="preserve">
          <source>_ - call fish's translations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="b9bce8bc7cbd4cfc74af295dc63b50f294e0fb27" translate="yes" xml:space="preserve">
          <source>abbr</source>
          <target state="translated">abbr</target>
        </trans-unit>
        <trans-unit id="10c64ce9ed7a8c30b0b458cd0cea2f41104ed020" translate="yes" xml:space="preserve">
          <source>abbr - manage fish abbreviations</source>
          <target state="translated">abbr-gestionar las abreviaturas de los peces</target>
        </trans-unit>
        <trans-unit id="ba2578bd52c07fb5e5c292586e1b1e6596336a14" translate="yes" xml:space="preserve">
          <source>accepts the autosuggestion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682cee3cbd526832d0e8acb7535f6a975ddc96ee" translate="yes" xml:space="preserve">
          <source>add &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; to &lt;code&gt;/etc/shells&lt;/code&gt;</source>
          <target state="translated">agregar &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; a &lt;code&gt;/etc/shells&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38a403a06bba439a1e4516159d91b0c0c53c9d35" translate="yes" xml:space="preserve">
          <source>adds the string '&lt;code&gt;| less;&lt;/code&gt;' to the end of the job under the cursor. The result is that the output of the command will be paged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25172dad2ac005d13d1979e3d37a8cab9855fce" translate="yes" xml:space="preserve">
          <source>adds the string &lt;code&gt;&amp;amp;| less;&lt;/code&gt; to the end of the job under the cursor. The result is that the output of the command will be paged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb6fdbe91faa53a7c573c80b7c18108c73c0480" translate="yes" xml:space="preserve">
          <source>alias</source>
          <target state="translated">alias</target>
        </trans-unit>
        <trans-unit id="42a06677b30252b0d37eaddcaf33c622b85d08b4" translate="yes" xml:space="preserve">
          <source>alias - create a function</source>
          <target state="translated">alias-crear una función</target>
        </trans-unit>
        <trans-unit id="612835d7218b4a546185a302d8c1d25dfed94fcc" translate="yes" xml:space="preserve">
          <source>always compare HEAD to @{upstream}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3a96bd0a7102c4f7c12ea0f42c885111a86759" translate="yes" xml:space="preserve">
          <source>always compare HEAD to your SVN upstream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea74807e417b853934de979457fe469df5b826f5" translate="yes" xml:space="preserve">
          <source>an exactly matching tag (&lt;code&gt;(develop)&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="4ed9a78158a5eed2a098e3c46a71c9215bfe4153" translate="yes" xml:space="preserve">
          <source>and - conditionally execute a command</source>
          <target state="translated">y-ejecutar condicionalmente un comando</target>
        </trans-unit>
        <trans-unit id="78ff43c9458aa497eb5020535c75f209197ab276" translate="yes" xml:space="preserve">
          <source>and a rough fish equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225e9cdcb4814e69204eedd6bb2fb16e4c2ddd5f" translate="yes" xml:space="preserve">
          <source>and fish will attempt to complete the command, argument, or path:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cffa3b49e6165095c9831bef88328db13e4664c" translate="yes" xml:space="preserve">
          <source>and it will be exported like that, and when fish starts it splits the $PATH it receives into a list on colon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1b360e80b891cdeabce3b3fc5314583ef4cdf2" translate="yes" xml:space="preserve">
          <source>and that key (or an escape sequence the key sends), fish waits for a certain time after seeing an escape character. This is configurable via the &lt;code&gt;fish_escape_delay_ms&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf77fa1badd5b14eee5bc9fc0d1e8797bac0d55" translate="yes" xml:space="preserve">
          <source>and then a character and have it count as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad6de0141307a21c3b97dbd1209ce4d125388c7" translate="yes" xml:space="preserve">
          <source>and then another key, and pressing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46969d3a89123d16fa3bcd8c897417feefb4b17f" translate="yes" xml:space="preserve">
          <source>appear to work, because most of the time the string doesn't match and so it passes along the &lt;code&gt;string-*&lt;/code&gt;, which is then interpreted by the receiving program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f3e6229f6547b669de6b30043f59330d22e9f2" translate="yes" xml:space="preserve">
          <source>are your friends).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e750ee7c231477c66be61075d1aafe532a03970f" translate="yes" xml:space="preserve">
          <source>argparse</source>
          <target state="translated">argparse</target>
        </trans-unit>
        <trans-unit id="b3ef1b3ad484c3f1815d35a2d7273ba16d3fc004" translate="yes" xml:space="preserve">
          <source>argparse - parse options passed to a fish script or function</source>
          <target state="translated">argparse-opciones de análisis pasadas a un guión o función de peces</target>
        </trans-unit>
        <trans-unit id="8c972124ea45f02600b0c760427c105611f91c50" translate="yes" xml:space="preserve">
          <source>as fish's &lt;a href=&quot;cmds/source#cmd-source&quot;&gt;source&lt;/a&gt; can read from stdin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b89f7498b6857f3b063ebf4cbe39c67742c051" translate="yes" xml:space="preserve">
          <source>autosuggestions (the proposed rest of a command)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d71f5ee7c92d6dc9e92ffdad17b8bd49418f98" translate="yes" xml:space="preserve">
          <source>b</source>
          <target state="translated">b</target>
        </trans-unit>
        <trans-unit id="b424048ef9680379368c0f6890d3822b0efe3507" translate="yes" xml:space="preserve">
          <source>background of every second unselected completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956ea23e2aed5ef58bb447457a75535073bf68bf" translate="yes" xml:space="preserve">
          <source>background of the selected completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbd0a74c6efdb39943b290bb82c9d6b2a6ee5a6" translate="yes" xml:space="preserve">
          <source>begin</source>
          <target state="translated">begin</target>
        </trans-unit>
        <trans-unit id="d849f3a2774d5c3d8a5b753d01c1b98a89678580" translate="yes" xml:space="preserve">
          <source>begin - start a new block of code</source>
          <target state="translated">empezar-empezar un nuevo bloque de código</target>
        </trans-unit>
        <trans-unit id="80f87c8847da6c872ce2fc9fec0a98a73ebc578d" translate="yes" xml:space="preserve">
          <source>bg</source>
          <target state="translated">bg</target>
        </trans-unit>
        <trans-unit id="eae83d584c6eeb26f5e657e85aaec8ab661a533a" translate="yes" xml:space="preserve">
          <source>bg - send jobs to background</source>
          <target state="translated">bg-enviar trabajos a fondo</target>
        </trans-unit>
        <trans-unit id="6bdd4db977b0f96aaf3bff2e4300153c648ca382" translate="yes" xml:space="preserve">
          <source>bind</source>
          <target state="translated">bind</target>
        </trans-unit>
        <trans-unit id="4d74207ae06bd7de23e2fc590a893d97bc45179b" translate="yes" xml:space="preserve">
          <source>bind - handle fish key bindings</source>
          <target state="translated">atar-manejar las fijaciones de las llaves de los peces</target>
        </trans-unit>
        <trans-unit id="14da9b8760fa463ac2e1d9332226d08a22859f7a" translate="yes" xml:space="preserve">
          <source>bindings (the &lt;code&gt;fish_clipboard_copy&lt;/code&gt; and &lt;code&gt;fish_clipboard_paste&lt;/code&gt; functions &lt;a href=&quot;#id32&quot; id=&quot;id31&quot;&gt;[4]&lt;/a&gt;) and via the terminal's paste function, for which fish enables &quot;Bracketed Paste Mode&quot;, so it can tell a paste from manually entered text. In addition, when pasting inside single quotes, pasted single quotes and backslashes are automatically escaped so that the result can be used as a single token simply by closing the quote after.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6eea8b7db0198ac50b97c18529736af6ee2a6a6" translate="yes" xml:space="preserve">
          <source>bindings (the &lt;code&gt;fish_clipboard_copy&lt;/code&gt; and &lt;code&gt;fish_clipboard_paste&lt;/code&gt; functions &lt;a href=&quot;#id33&quot; id=&quot;id32&quot;&gt;[7]&lt;/a&gt;) and via the terminal's paste function, for which fish enables &quot;Bracketed Paste Mode&quot;, so it can tell a paste from manually entered text. In addition, when pasting inside single quotes, pasted single quotes and backslashes are automatically escaped so that the result can be used as a single token simply by closing the quote after.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0214b4b355d11ca8f2ce45a968c264651bdfbf83" translate="yes" xml:space="preserve">
          <source>block</source>
          <target state="translated">block</target>
        </trans-unit>
        <trans-unit id="eaad10d066a35f607308cf97548f180f4b9b872e" translate="yes" xml:space="preserve">
          <source>block - temporarily block delivery of events</source>
          <target state="translated">bloquear-bloquear temporalmente la entrega de eventos</target>
        </trans-unit>
        <trans-unit id="4f9cac8dbc4c67a388b8379dcc126c90c7c5e72a" translate="yes" xml:space="preserve">
          <source>break</source>
          <target state="translated">break</target>
        </trans-unit>
        <trans-unit id="175a258d07e2daaf5e3b38a9da4f646e868f7dd3" translate="yes" xml:space="preserve">
          <source>break - stop the current inner loop</source>
          <target state="translated">romper-detener el bucle interior de la corriente</target>
        </trans-unit>
        <trans-unit id="5c0a31c48cda57c40dc61b785110d76593834ffd" translate="yes" xml:space="preserve">
          <source>breakpoint</source>
          <target state="translated">breakpoint</target>
        </trans-unit>
        <trans-unit id="2922ddae1fa1032ce7131127668d51bf87c71f7e" translate="yes" xml:space="preserve">
          <source>breakpoint - Launch debug mode</source>
          <target state="translated">Punto de interrupción-Lanzar el modo de depuración</target>
        </trans-unit>
        <trans-unit id="626a8571e67ef7b3ad52de73ad98c74a3181a3f7" translate="yes" xml:space="preserve">
          <source>breakpoint - launch debug mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748a336cc88c03ccb07ed5f5073d18624731b8b5" translate="yes" xml:space="preserve">
          <source>builtin</source>
          <target state="translated">builtin</target>
        </trans-unit>
        <trans-unit id="fa7c75bcd8e77b2860336c73b4baf210585bbf7f" translate="yes" xml:space="preserve">
          <source>builtin - run a builtin command</source>
          <target state="translated">incorporado-ejecutar un comando incorporado</target>
        </trans-unit>
        <trans-unit id="7c03ce7ac374bc51cc53ee2cbf68c6dcc77fe090" translate="yes" xml:space="preserve">
          <source>but if you need multiple or the command doesn't read from standard input, &quot;process substitution&quot; is useful. Other shells &lt;a href=&quot;#id16&quot; id=&quot;id14&quot;&gt;[6]&lt;/a&gt; allow this via &lt;code&gt;foo &amp;lt;(bar) &amp;lt;(baz)&lt;/code&gt;, and fish uses the &lt;a href=&quot;cmds/psub#cmd-psub&quot;&gt;psub&lt;/a&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2ca0f0e8a4af14f9c2c6640b66d1abf067c315" translate="yes" xml:space="preserve">
          <source>but not if used like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b720c83eb17bc4e760fb64e0f74c234436ca3768" translate="yes" xml:space="preserve">
          <source>can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c17402278366a1944472c137a1e6a044865d6c" translate="yes" xml:space="preserve">
          <source>can be written as &lt;code&gt;\ew&lt;/code&gt;, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a6db36466decdfdc7321d75b1055b59b7887a79" translate="yes" xml:space="preserve">
          <source>can be written as &lt;code&gt;\ew&lt;/code&gt;. The control character can be written in much the same way using the &lt;code&gt;\c&lt;/code&gt; escape, for example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61700228f13f640635c7e724bcee8413ef8ec396" translate="yes" xml:space="preserve">
          <source>cancels the entire line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c626de7bb4a2ca33fb1d03596fdcab571a15cd30" translate="yes" xml:space="preserve">
          <source>capitalizes the current word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6406510c31e0c9925733c7f21414bf6428333ed2" translate="yes" xml:space="preserve">
          <source>case</source>
          <target state="translated">case</target>
        </trans-unit>
        <trans-unit id="ecbc5351327db65d354a1a7d358353471d69609a" translate="yes" xml:space="preserve">
          <source>case - conditionally execute a block of commands</source>
          <target state="translated">caso-ejecutar condicionalmente un bloque de comandos</target>
        </trans-unit>
        <trans-unit id="034778198a045c1ed80be271cdd029b76874f6fc" translate="yes" xml:space="preserve">
          <source>cd</source>
          <target state="translated">cd</target>
        </trans-unit>
        <trans-unit id="fb525966ad485c5f8afa455838828ee40af068d5" translate="yes" xml:space="preserve">
          <source>cd - change directory</source>
          <target state="translated">cd-cambiar de directorio</target>
        </trans-unit>
        <trans-unit id="2aba119bde64723a0961a18ff7adcf76a9d24d8e" translate="yes" xml:space="preserve">
          <source>cdh</source>
          <target state="translated">cdh</target>
        </trans-unit>
        <trans-unit id="1be63f271a472b0d15f170811e4caf9972df88bb" translate="yes" xml:space="preserve">
          <source>cdh - change to a recently visited directory</source>
          <target state="translated">cdh-cambio a un directorio recientemente visitado</target>
        </trans-unit>
        <trans-unit id="0f8e267ee0d75f9ceaa9ed7d8f182c646d73ba65" translate="yes" xml:space="preserve">
          <source>change your default shell with &lt;code&gt;chsh -s&lt;/code&gt; to &lt;code&gt;/usr/local/bin/fish&lt;/code&gt;</source>
          <target state="translated">cambie su shell predeterminado con &lt;code&gt;chsh -s&lt;/code&gt; a &lt;code&gt;/usr/local/bin/fish&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6c2aeb58b1a10c6958db0c889c561bab5ce4932" translate="yes" xml:space="preserve">
          <source>character escapes like 'n' and 'x70'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e34f23f38ab45826a2bdcf27d4377c9ac5d76cf" translate="yes" xml:space="preserve">
          <source>clears and repaints the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f6019ad1d4a3bfe84e04d66db81025c01b2d52" translate="yes" xml:space="preserve">
          <source>combination accept the suggestion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1925f793093581c47a5c6b2e414506b1cbae280d" translate="yes" xml:space="preserve">
          <source>command</source>
          <target state="translated">command</target>
        </trans-unit>
        <trans-unit id="919a6f5c6816036eaffc9cdb1996a015acf915b7" translate="yes" xml:space="preserve">
          <source>command - run a program</source>
          <target state="translated">comando-ejecutar un programa</target>
        </trans-unit>
        <trans-unit id="92df95e63882bc424c741ba3025a247583b8fe73" translate="yes" xml:space="preserve">
          <source>commandline</source>
          <target state="translated">commandline</target>
        </trans-unit>
        <trans-unit id="bcf389e72583580fd4176da0b6e9a5409c5718c2" translate="yes" xml:space="preserve">
          <source>commandline - set or get the current command line buffer</source>
          <target state="translated">línea de comandos-establecer u obtener el buffer actual de la línea de comandos</target>
        </trans-unit>
        <trans-unit id="d1a85e41ce016d57df4729bac68b2a2a6298f706" translate="yes" xml:space="preserve">
          <source>commands like echo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974367b0f7a5b10e32d10f9d4f5e0d3d805d5a4d" translate="yes" xml:space="preserve">
          <source>comments like '# important'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0737c22d3bfae812339732d14d8c7dbd6dc4e09c" translate="yes" xml:space="preserve">
          <source>complete</source>
          <target state="translated">complete</target>
        </trans-unit>
        <trans-unit id="b1b90f2b3d099b292abc0be14142c4ee0c55e03b" translate="yes" xml:space="preserve">
          <source>complete - edit command specific tab-completions</source>
          <target state="translated">completo-editar el comando específico de la pestaña-completar</target>
        </trans-unit>
        <trans-unit id="2ff8f23788bde12a2d012f6275074c6cc58ff72b" translate="yes" xml:space="preserve">
          <source>completes the current token and starts the pager's search mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caeb909ae4ff4ee25a0ff0d476946ed256f2aee1" translate="yes" xml:space="preserve">
          <source>contains</source>
          <target state="translated">contains</target>
        </trans-unit>
        <trans-unit id="904d39bd3ceac4decbc721c45054ed1c4b2c7fdb" translate="yes" xml:space="preserve">
          <source>contains - test if a word is present in a list</source>
          <target state="translated">contiene-prueba si una palabra está presente en una lista</target>
        </trans-unit>
        <trans-unit id="eee0bbba4ff92adbeb038a77df0466d660f15716" translate="yes" xml:space="preserve">
          <source>continue</source>
          <target state="translated">continue</target>
        </trans-unit>
        <trans-unit id="3dcfedcccb8d23e7c6644e8aaa4e93528f238e86" translate="yes" xml:space="preserve">
          <source>continue - skip the remainder of the current iteration of the current inner loop</source>
          <target state="translated">Continuar-saltar el resto de la iteración actual del bucle interno actual</target>
        </trans-unit>
        <trans-unit id="e34084787bcc0b0e04c74d4a84f033412ea14695" translate="yes" xml:space="preserve">
          <source>copies the current buffer to the system's clipboard,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9f38e186ba06f57b7b74d7e626b94e13ce2556" translate="yes" xml:space="preserve">
          <source>count</source>
          <target state="translated">count</target>
        </trans-unit>
        <trans-unit id="59de67cb7425f65282c5b5947590b3071f8a17f9" translate="yes" xml:space="preserve">
          <source>count - count the number of elements of a list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9695c7d17d44b126e144bc1e4fd9b6da6439c0b" translate="yes" xml:space="preserve">
          <source>count - count the number of elements of an array</source>
          <target state="translated">contar-contar el número de elementos de un conjunto</target>
        </trans-unit>
        <trans-unit id="3c363836cf4e16666669a25da280a1865c2d2874" translate="yes" xml:space="preserve">
          <source>d</source>
          <target state="translated">d</target>
        </trans-unit>
        <trans-unit id="3168f4254c137e88955439b84bd84dd9307b0c57" translate="yes" xml:space="preserve">
          <source>default color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5849af203212dcf36a9f6a46b9d9862ea9a26a6" translate="yes" xml:space="preserve">
          <source>delete one character to the right of the cursor. If the command line is empty,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cffd36f6ec1001c783eefdf056b75d55122bd7c" translate="yes" xml:space="preserve">
          <source>deletes text after the current cursor position and moves it to the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87dee869fed16490a9210cc0a9b9d345dd2e50aa" translate="yes" xml:space="preserve">
          <source>deletes the current line and moves it to the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b6821042cd8a92a106ebd0ced57b68367ae2f4" translate="yes" xml:space="preserve">
          <source>description of every second unselected completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68952bd9bfa3ffa78051909dcc225b977647fa73" translate="yes" xml:space="preserve">
          <source>description of the selected completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e96454870cb43583623cd6fd2ede60817e93fe7" translate="yes" xml:space="preserve">
          <source>dirh</source>
          <target state="translated">dirh</target>
        </trans-unit>
        <trans-unit id="0c8c1d4815753a4a62148f6267504e711947a5a6" translate="yes" xml:space="preserve">
          <source>dirh - print directory history</source>
          <target state="translated">dirh-imprimir historia del directorio</target>
        </trans-unit>
        <trans-unit id="4d47d2db541c41663c8c0bc2b1795aa88c209d4d" translate="yes" xml:space="preserve">
          <source>dirs</source>
          <target state="translated">dirs</target>
        </trans-unit>
        <trans-unit id="d78b6ac49770a83c7c282f2a24eb1a12e41b5ef0" translate="yes" xml:space="preserve">
          <source>dirs - print directory stack</source>
          <target state="translated">dirs-imprimir pila de directorios</target>
        </trans-unit>
        <trans-unit id="77fb8c7001cf43bb0d35233857e7d8456613a043" translate="yes" xml:space="preserve">
          <source>disables (useful with informative status)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b66695fe2c105488ed57178ad21457b4a8f4d6d" translate="yes" xml:space="preserve">
          <source>disown</source>
          <target state="translated">disown</target>
        </trans-unit>
        <trans-unit id="58603ac8c3e3cdf452a31e52281bae95d4d75e55" translate="yes" xml:space="preserve">
          <source>disown - remove a process from the list of jobs</source>
          <target state="translated">desautorizar-eliminar un proceso de la lista de trabajos</target>
        </trans-unit>
        <trans-unit id="b2d21e771d9f86865c5eff193663574dd1796c8f" translate="yes" xml:space="preserve">
          <source>echo</source>
          <target state="translated">echo</target>
        </trans-unit>
        <trans-unit id="3da22d7a242ac6222e2c07ce546b9e4c6dd38dd1" translate="yes" xml:space="preserve">
          <source>echo - display a line of text</source>
          <target state="translated">echo-mostrar una línea de texto</target>
        </trans-unit>
        <trans-unit id="8a35cae02bb880056f0ac5a1e04b7f10ce77e531" translate="yes" xml:space="preserve">
          <source>edit the current command line in an external editor. The editor is chosen from the first available of the &lt;code&gt;$VISUAL&lt;/code&gt; or &lt;code&gt;$EDITOR&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae050f5b7fb8d383d62139276081853b47e7a03e" translate="yes" xml:space="preserve">
          <source>else</source>
          <target state="translated">else</target>
        </trans-unit>
        <trans-unit id="b25854c62e2574da9e59aea193dfc09880feb717" translate="yes" xml:space="preserve">
          <source>else - execute command if a condition is not met</source>
          <target state="translated">si no-ejecutar el comando si no se cumple una condición</target>
        </trans-unit>
        <trans-unit id="2e96e89125f4c1aef797410a4bfdb32c0632ef0c" translate="yes" xml:space="preserve">
          <source>emit</source>
          <target state="translated">emit</target>
        </trans-unit>
        <trans-unit id="bf4da1905dbefff0b501f9e43f751404b18c712b" translate="yes" xml:space="preserve">
          <source>emit - Emit a generic event</source>
          <target state="translated">emitir-Emitir un evento genérico</target>
        </trans-unit>
        <trans-unit id="1645f1443f98fd68a6ddfbdff2c6a9efd337e7ed" translate="yes" xml:space="preserve">
          <source>emit - emit a generic event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a92f3d26362d6557d5701de77a63a01df61e57f" translate="yes" xml:space="preserve">
          <source>end</source>
          <target state="translated">end</target>
        </trans-unit>
        <trans-unit id="7402a542d92540ca40f09e310ccd6b9d80642018" translate="yes" xml:space="preserve">
          <source>end - end a block of commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786c7d3478f2ca103089368c16db1f80f0f9c7cb" translate="yes" xml:space="preserve">
          <source>end - end a block of commands.</source>
          <target state="translated">terminar...terminar un bloque de comandos.</target>
        </trans-unit>
        <trans-unit id="78c853c4f43b7d62ab249976f55605258348a45a" translate="yes" xml:space="preserve">
          <source>enter &lt;a href=&quot;#vi-mode-command&quot;&gt;command mode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1611c989a5745a16fb4913e4f85f9a32bd1bd215" translate="yes" xml:space="preserve">
          <source>enters &lt;a href=&quot;#vi-mode-command&quot;&gt;command mode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613ee0a8e2ba9e0299e5f63dc7a2f96ca08b5852" translate="yes" xml:space="preserve">
          <source>enters &lt;a href=&quot;#vi-mode-command&quot;&gt;command mode&lt;/a&gt;. The commands available in command, insert and visual mode are described below. Vi mode shares &lt;a href=&quot;#shared-binds&quot;&gt;some bindings&lt;/a&gt; with &lt;a href=&quot;#emacs-mode&quot;&gt;Emacs mode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31876e7d3376511a3d680ed627dcf35af506928b" translate="yes" xml:space="preserve">
          <source>enters &lt;a href=&quot;#vi-mode-insert&quot;&gt;insert mode&lt;/a&gt; after the current cursor position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf8fd21cdf0d4b2e0e785d3085af77bbf417e7c" translate="yes" xml:space="preserve">
          <source>enters &lt;a href=&quot;#vi-mode-insert&quot;&gt;insert mode&lt;/a&gt; at the current cursor position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cde80ce3aa7dfff663cee2a9a61ba4a6187d106" translate="yes" xml:space="preserve">
          <source>enters &lt;a href=&quot;#vi-mode-insert&quot;&gt;insert mode&lt;/a&gt; at the end of the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fed240d0be37008e91b2bf75e37519e03a9e689" translate="yes" xml:space="preserve">
          <source>enters &lt;a href=&quot;#vi-mode-visual&quot;&gt;visual mode&lt;/a&gt; at the current cursor position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822bc13e2d55b402eb4233cb23c9d414a7a03bc1" translate="yes" xml:space="preserve">
          <source>eval</source>
          <target state="translated">eval</target>
        </trans-unit>
        <trans-unit id="20a23908f3b688d4985f1907e61de8afef1f3a09" translate="yes" xml:space="preserve">
          <source>eval - evaluate the specified commands</source>
          <target state="translated">evalúa-evalúa los comandos especificados</target>
        </trans-unit>
        <trans-unit id="d6b67c64ab0245670d93d1c04ab259906145f6c8" translate="yes" xml:space="preserve">
          <source>exactly matching tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be62562725d30894d1641b11d5106adde66f0d79" translate="yes" xml:space="preserve">
          <source>exec</source>
          <target state="translated">exec</target>
        </trans-unit>
        <trans-unit id="766cd545cfc1fa64a7d4796ba64c27dc06bebbfc" translate="yes" xml:space="preserve">
          <source>exec - execute command in current process</source>
          <target state="translated">exec-ejecutar el comando en el proceso actual</target>
        </trans-unit>
        <trans-unit id="de3ac21778e51de199438300e1a9f816c618d33a" translate="yes" xml:space="preserve">
          <source>exit</source>
          <target state="translated">exit</target>
        </trans-unit>
        <trans-unit id="471719c1d7f23f2fb831651b4dd0b2d996e8d915" translate="yes" xml:space="preserve">
          <source>exit - exit the shell</source>
          <target state="translated">salir-salir del cascarón</target>
        </trans-unit>
        <trans-unit id="1f1d34dad3631e0d5c7485c8836f5d8c39c4d91d" translate="yes" xml:space="preserve">
          <source>extend the selection backward/forward by one word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="translated">false</target>
        </trans-unit>
        <trans-unit id="6f9d12a083b81d8fbe0b94c63c69b42fb349ddbb" translate="yes" xml:space="preserve">
          <source>false - return an unsuccessful result</source>
          <target state="translated">falso-devolver un resultado fallido</target>
        </trans-unit>
        <trans-unit id="72f77e84ba0149b2af1051f1318128dccf60ab60" translate="yes" xml:space="preserve">
          <source>fg</source>
          <target state="translated">fg</target>
        </trans-unit>
        <trans-unit id="d57e75549526546c15d5c9fb8e07df72a8c58c81" translate="yes" xml:space="preserve">
          <source>fg - bring job to foreground</source>
          <target state="translated">fg-traer el trabajo al primer plano</target>
        </trans-unit>
        <trans-unit id="64875fcccaac069fcb3e0e201e7d5b9166641608" translate="yes" xml:space="preserve">
          <source>fish</source>
          <target state="translated">fish</target>
        </trans-unit>
        <trans-unit id="72e0e125205009a2096ed8c57d1f27ec4b75c74b" translate="yes" xml:space="preserve">
          <source>fish - the friendly interactive shell</source>
          <target state="translated">el pez-la amistosa concha interactiva</target>
        </trans-unit>
        <trans-unit id="1e561569de209772eea1a2cc5efb91d03f115a92" translate="yes" xml:space="preserve">
          <source>fish also supports &lt;a href=&quot;cmds/and#cmd-and&quot;&gt;and&lt;/a&gt;, &lt;a href=&quot;cmds/or#cmd-or&quot;&gt;or&lt;/a&gt;, and &lt;a href=&quot;cmds/not#cmd-not&quot;&gt;not&lt;/a&gt;. The first two are job modifiers and have lower precedence. Example usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55daf0fb67b0105e5fee42d2b43a9981fcc9b191" translate="yes" xml:space="preserve">
          <source>fish also supports &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, and &lt;code&gt;not&lt;/code&gt;. The first two are job modifiers and have lower precedence. Example usage:</source>
          <target state="translated">el pez tambi&amp;eacute;n apoya &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; y &lt;code&gt;not&lt;/code&gt; . Los dos primeros son modificadores de trabajo y tienen menor precedencia. Uso de ejemplo:</target>
        </trans-unit>
        <trans-unit id="3db4fef03c86d51d99ead2cea8e2daefa4359b10" translate="yes" xml:space="preserve">
          <source>fish can also complete many commands, like git branches:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd04b65f6eb8108ab69bc90a9fa6acd5d3c8931" translate="yes" xml:space="preserve">
          <source>fish is a command-line shell written mainly with interactive use in mind. This page briefly describes the options for invoking fish. The &lt;a href=&quot;../index#intro&quot;&gt;full manual&lt;/a&gt; is available in HTML by using the &lt;a href=&quot;help#cmd-help&quot;&gt;help&lt;/a&gt; command from inside fish, and in the &lt;code&gt;fish-doc(1)&lt;/code&gt; man page. The &lt;a href=&quot;../tutorial#tutorial&quot;&gt;tutorial&lt;/a&gt; is available as HTML via &lt;code&gt;help tutorial&lt;/code&gt; or in &lt;code&gt;fish-tutorial(1)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981802afc5a272578451bc3ded928b36bdef2c58" translate="yes" xml:space="preserve">
          <source>fish provides a &lt;code&gt;realpath&lt;/code&gt; builtin as a fallback for systems where there is no &lt;code&gt;realpath&lt;/code&gt; command, your OS might provide a version with more features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222984700a96071cdc545cf72927a51314eafb1d" translate="yes" xml:space="preserve">
          <source>fish provides a &lt;code&gt;realpath&lt;/code&gt; builtin as a fallback for systems where there is no &lt;code&gt;realpath&lt;/code&gt; command. fish's implementation always resolves its first argument, and does not support any options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd08000b8334b07987eead7f3c70c9b341124907" translate="yes" xml:space="preserve">
          <source>fish ships with the following commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748b7372efd9b1dd56d5823eabafaed87c1eaa69" translate="yes" xml:space="preserve">
          <source>fish suggests commands as you type, based on &lt;a href=&quot;#history-search&quot;&gt;command history&lt;/a&gt;, completions, and valid file paths. As you type commands, you will see a suggestion offered after the cursor, in a muted gray color (which can be changed with the &lt;code&gt;fish_color_autosuggestion&lt;/code&gt; variable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b6a9d36699331ac1f0bb6a1d6c28f0fee1e9d4" translate="yes" xml:space="preserve">
          <source>fish suggests commands as you type, based on command history, completions, and valid file paths. As you type commands, you will see a suggestion offered after the cursor, in a muted gray color (which can be changed with the &lt;code&gt;fish_color_autosuggestion&lt;/code&gt; variable).</source>
          <target state="translated">fish sugiere comandos a medida que escribe, seg&amp;uacute;n el historial de comandos, finalizaciones y rutas de archivo v&amp;aacute;lidas. A medida que escribe comandos, ver&amp;aacute; una sugerencia que se ofrece despu&amp;eacute;s del cursor, en un color gris apagado (que se puede cambiar con la variable &lt;code&gt;fish_color_autosuggestion&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="68f36d0bf0f877357b61f16b465f75cb1a85b6d8" translate="yes" xml:space="preserve">
          <source>fish supports launching in private mode via &lt;code&gt;fish --private&lt;/code&gt; (or &lt;code&gt;fish -P&lt;/code&gt; for short). In private mode, old history is not available and any interactive commands you execute will not be appended to the global history file, making it useful both for avoiding inadvertently leaking personal information (e.g. for screencasts) and when dealing with sensitive information to prevent it being persisted to disk. You can query the global variable &lt;code&gt;fish_private_mode&lt;/code&gt; (&lt;code&gt;if set -q fish_private_mode ...&lt;/code&gt;) if you would like to respect the user's wish for privacy and alter the behavior of your own fish scripts.</source>
          <target state="translated">fish admite el lanzamiento en modo privado a trav&amp;eacute;s de &lt;code&gt;fish --private&lt;/code&gt; (o &lt;code&gt;fish -P&lt;/code&gt; para abreviar). En el modo privado, el historial antiguo no est&amp;aacute; disponible y los comandos interactivos que ejecute no se agregar&amp;aacute;n al archivo de historial global, lo que lo hace &amp;uacute;til tanto para evitar la filtraci&amp;oacute;n inadvertida de informaci&amp;oacute;n personal (por ejemplo, para screencasts) como cuando se trata de informaci&amp;oacute;n confidencial para evitar que se persisti&amp;oacute; en el disco. Puede consultar la variable global &lt;code&gt;fish_private_mode&lt;/code&gt; ( &lt;code&gt;if set -q fish_private_mode ...&lt;/code&gt; ) si desea respetar el deseo de privacidad del usuario y alterar el comportamiento de sus propios scripts de peces.</target>
        </trans-unit>
        <trans-unit id="fc5fb57f283dee1048e3856d260160c79127450e" translate="yes" xml:space="preserve">
          <source>fish supports launching in private mode via &lt;code&gt;fish --private&lt;/code&gt; (or &lt;code&gt;fish -P&lt;/code&gt; for short). In private mode, old history is not available and any interactive commands you execute will not be appended to the global history file, making it useful both for avoiding inadvertently leaking personal information (e.g. for screencasts) and when dealing with sensitive information to prevent it being persisted to disk. You can query the global variable &lt;code&gt;fish_private_mode`&lt;/code&gt; (&lt;code&gt;if set -q fish_private_mode ...&lt;/code&gt;) if you would like to respect the user's wish for privacy and alter the behavior of your own fish scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4f6d7aed742643b6fbdc12202fe3db52010252" translate="yes" xml:space="preserve">
          <source>fish supports the familiar &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; to combine commands, and &lt;code&gt;!&lt;/code&gt; to negate them:</source>
          <target state="translated">fish apoya lo familiar &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; y &lt;code&gt;||&lt;/code&gt; para combinar comandos y &lt;code&gt;!&lt;/code&gt; para negarlos:</target>
        </trans-unit>
        <trans-unit id="18585084ed30bb889b3339262219e49ab2ae44bd" translate="yes" xml:space="preserve">
          <source>fish tutorial</source>
          <target state="translated">tutorial de peces</target>
        </trans-unit>
        <trans-unit id="e38ee0bf5543635cc29b0705bc553f53fdbdff93" translate="yes" xml:space="preserve">
          <source>fish waits for a period after receiving the escape character, to determine whether it is standalone or part of an escape sequence. While waiting, additional key presses make the escape key behave as a meta key. If no other key presses come in, it is handled as a standalone escape. The waiting period is set to 30 milliseconds (0.03 seconds). It can be configured by setting the &lt;code&gt;fish_escape_delay_ms&lt;/code&gt; variable to a value between 10 and 5000 ms. This can be a universal variable that you set once from an interactive session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55dedfb95373873760b0ed9625c82cb35531172a" translate="yes" xml:space="preserve">
          <source>fish waits for a period after receiving the escape character, to determine whether it is standalone or part of an escape sequence. While waiting, additional key presses make the escape key behave as a meta key. If no other key presses come in, it is handled as a standalone escape. The waiting period is set to 300 milliseconds (0.3 seconds) in the default key bindings and 10 milliseconds in the vi key bindings. It can be configured by setting the &lt;code&gt;fish_escape_delay_ms&lt;/code&gt; variable to a value between 10 and 5000 ms. It is recommended that this be a universal variable that you set once from an interactive session.</source>
          <target state="translated">fish espera un per&amp;iacute;odo despu&amp;eacute;s de recibir el car&amp;aacute;cter de escape para determinar si es independiente o parte de una secuencia de escape. Mientras espera, las pulsaciones de teclas adicionales hacen que la tecla de escape se comporte como una tecla meta. Si no se pulsan otras teclas, se gestiona como un escape independiente. El per&amp;iacute;odo de espera se establece en 300 milisegundos (0,3 segundos) en las combinaciones de teclas predeterminadas y 10 milisegundos en las combinaciones de teclas vi. Se puede configurar estableciendo la variable &lt;code&gt;fish_escape_delay_ms&lt;/code&gt; en un valor entre 10 y 5000 ms. Se recomienda que sea una variable universal que establezca una vez desde una sesi&amp;oacute;n interactiva.</target>
        </trans-unit>
        <trans-unit id="abf9c62eef69a54eb44651e33eda2a44d1dca445" translate="yes" xml:space="preserve">
          <source>fish will search the working directory to resolve relative paths but will not search &lt;code&gt;$PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84ee6337fefaaf06b6f6b66a75af6ec11ec1158" translate="yes" xml:space="preserve">
          <source>fish will sometimes present a list of choices in a table, called the pager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5161ad00942201843d78cb1281e98e2f1b611370" translate="yes" xml:space="preserve">
          <source>fish_add_path - add to the path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baba6f248a72657be16047fe4da7199bc44ea8e3" translate="yes" xml:space="preserve">
          <source>fish_breakpoint_prompt</source>
          <target state="translated">fish_breakpoint_prompt</target>
        </trans-unit>
        <trans-unit id="d7bd245d8c242e03fae1578420c74d8093b0ee04" translate="yes" xml:space="preserve">
          <source>fish_breakpoint_prompt - define the appearance of the command line prompt when in the context of a `breakpoint` command</source>
          <target state="translated">fish_breakpoint_prompt-define la apariencia de la línea de comandos cuando en el contexto de un comando de ``breakpoint``.</target>
        </trans-unit>
        <trans-unit id="d49c2ef4b57b598087337113d1824db33c3dabe8" translate="yes" xml:space="preserve">
          <source>fish_breakpoint_prompt - define the prompt when stopped at a breakpoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7fc34cb756f0d4b8fa92671fdfc93c462e1913b" translate="yes" xml:space="preserve">
          <source>fish_command_not_found - what to do when a command wasn't found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3fc1d157b0191f6866ceecc3630a982089cde4" translate="yes" xml:space="preserve">
          <source>fish_config</source>
          <target state="translated">fish_config</target>
        </trans-unit>
        <trans-unit id="183a6fdb6a00d86295de833100112576b1cb4834" translate="yes" xml:space="preserve">
          <source>fish_config - start the web-based configuration interface</source>
          <target state="translated">fish_config-inicia la interfaz de configuración basada en la web</target>
        </trans-unit>
        <trans-unit id="80c37ba015f83d7a3e2f71fbb9b9eb9dd84b5cde" translate="yes" xml:space="preserve">
          <source>fish_git_prompt</source>
          <target state="translated">fish_git_prompt</target>
        </trans-unit>
        <trans-unit id="988a403d0cc4b10857d6674a0da005fecc996685" translate="yes" xml:space="preserve">
          <source>fish_git_prompt - output git information for use in a prompt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d7f87cb91d38c380ec49e377e600e156fef4db" translate="yes" xml:space="preserve">
          <source>fish_greeting - display a welcome message in interactive shells</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5837785a59c5b2d1a9b0cd038c2ec8f11e814cd9" translate="yes" xml:space="preserve">
          <source>fish_hg_prompt</source>
          <target state="translated">fish_hg_prompt</target>
        </trans-unit>
        <trans-unit id="1f98446d2550b0b4be8deef250f3469d31906217" translate="yes" xml:space="preserve">
          <source>fish_hg_prompt - output Mercurial information for use in a prompt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2397e0dc3855f2a5c3c894e107875e26a08a4480" translate="yes" xml:space="preserve">
          <source>fish_indent</source>
          <target state="translated">fish_indent</target>
        </trans-unit>
        <trans-unit id="c6e19f4ee30f4e23e4160409b9be9c8d16942cd4" translate="yes" xml:space="preserve">
          <source>fish_indent - indenter and prettifier</source>
          <target state="translated">fish_indent-indentador y pretendiente</target>
        </trans-unit>
        <trans-unit id="6c089b0e678f569f6b29710c7b639f0aa6b7d152" translate="yes" xml:space="preserve">
          <source>fish_is_root_user - check if the current user is root</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127fb90e55ea67e053d705088a841052da6eef7c" translate="yes" xml:space="preserve">
          <source>fish_key_reader</source>
          <target state="translated">fish_key_reader</target>
        </trans-unit>
        <trans-unit id="69a0ebb11cb1a759ede45515c0024c4ec8c9ee18" translate="yes" xml:space="preserve">
          <source>fish_key_reader - explore what characters keyboard keys send</source>
          <target state="translated">fish_key_reader-explora qué caracteres envían las teclas del teclado</target>
        </trans-unit>
        <trans-unit id="b07df081e3eda23a685e0d24569437ba4ab4a6ff" translate="yes" xml:space="preserve">
          <source>fish_mode_prompt</source>
          <target state="translated">fish_mode_prompt</target>
        </trans-unit>
        <trans-unit id="753b48a0cc344eee0593915eb34429a7626e167e" translate="yes" xml:space="preserve">
          <source>fish_mode_prompt - define the appearance of the mode indicator</source>
          <target state="translated">fish_mode_prompt-definir la apariencia del indicador de modo</target>
        </trans-unit>
        <trans-unit id="d8a60c1368f75899d925231c0c91e8006af306b3" translate="yes" xml:space="preserve">
          <source>fish_mode_prompt will be executed when the vi mode changes. If it produces any output, it is displayed and used. If it does not, the other prompt functions (&lt;a href=&quot;fish_prompt#cmd-fish-prompt&quot;&gt;fish_prompt&lt;/a&gt; and &lt;a href=&quot;fish_right_prompt#cmd-fish-right-prompt&quot;&gt;fish_right_prompt&lt;/a&gt;) will be executed as well in case they contain a mode display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9b15ad3294d2aa5aa52ac9e2632d2eae53e420" translate="yes" xml:space="preserve">
          <source>fish_opt</source>
          <target state="translated">fish_opt</target>
        </trans-unit>
        <trans-unit id="543365accaae619eee02dcae6dea132a363085b7" translate="yes" xml:space="preserve">
          <source>fish_opt - create an option spec for the argparse command</source>
          <target state="translated">fish_opt-crea una especificación de opción para el comando argparse</target>
        </trans-unit>
        <trans-unit id="6501c27fb0858cd3f54b84ab4f9f296d0dda8c9c" translate="yes" xml:space="preserve">
          <source>fish_prompt</source>
          <target state="translated">fish_prompt</target>
        </trans-unit>
        <trans-unit id="cd788e8b2b186c68bc7b4e563896df245043a589" translate="yes" xml:space="preserve">
          <source>fish_prompt - define the appearance of the command line prompt</source>
          <target state="translated">fish_prompt-define la apariencia de la línea de comandos</target>
        </trans-unit>
        <trans-unit id="f78d4c9641a64c769e933588d8994ca394327414" translate="yes" xml:space="preserve">
          <source>fish_right_prompt</source>
          <target state="translated">fish_right_prompt</target>
        </trans-unit>
        <trans-unit id="4f1afbb85b31538c97624a72a30d55414589b49a" translate="yes" xml:space="preserve">
          <source>fish_right_prompt - define the appearance of the right-side command line prompt</source>
          <target state="translated">fish_right_prompt-define la apariencia de la línea de comandos del lado derecho</target>
        </trans-unit>
        <trans-unit id="c3a463941e42cad193dabd5e5d2711d65655749c" translate="yes" xml:space="preserve">
          <source>fish_status_to_signal - Convert exit codes to human-friendly signals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a35a9a45f6389e1ded3d249e4ecc9ea5cdd7faf" translate="yes" xml:space="preserve">
          <source>fish_svn_prompt</source>
          <target state="translated">fish_svn_prompt</target>
        </trans-unit>
        <trans-unit id="35f6db35d8227e14ee8aeddb0824a4bdf714d209" translate="yes" xml:space="preserve">
          <source>fish_svn_prompt - output Subversion information for use in a prompt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e01cb137a358aad60a72fd582f8b0a3a65fa1a" translate="yes" xml:space="preserve">
          <source>fish_title - define the terminal's title</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b339b0c658d3c4228467574152fa75f2375b32e" translate="yes" xml:space="preserve">
          <source>fish_update_completions</source>
          <target state="translated">fish_update_completions</target>
        </trans-unit>
        <trans-unit id="90c9f004ea4a216adfd9c72340b8112edb288283" translate="yes" xml:space="preserve">
          <source>fish_update_completions - Update completions using manual pages</source>
          <target state="translated">fish_update_completions-Actualizar las terminaciones usando las páginas del manual</target>
        </trans-unit>
        <trans-unit id="9da87b93c41a1c34169564b26dcbc90612b91ba7" translate="yes" xml:space="preserve">
          <source>fish_update_completions - update completions using manual pages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd50df98060da2cf54adb7f59a9a4dd79db279e1" translate="yes" xml:space="preserve">
          <source>fish_vcs_prompt</source>
          <target state="translated">fish_vcs_prompt</target>
        </trans-unit>
        <trans-unit id="7597a13b7b2c6c4640c66c7da344c387704d0b58" translate="yes" xml:space="preserve">
          <source>fish_vcs_prompt - output version control system information for use in a prompt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76de474163a63c296945fcd9d696f36636c8aef" translate="yes" xml:space="preserve">
          <source>fish_vi_mode</source>
          <target state="translated">fish_vi_mode</target>
        </trans-unit>
        <trans-unit id="410186a970357c931e2a7dec30a37b5a1e74ebea" translate="yes" xml:space="preserve">
          <source>fish_vi_mode - Enable vi mode</source>
          <target state="translated">fish_vi_mode-Activar el modo vi</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="412a3dea80208bd5c1e209cb5c4180a2aff0a6d6" translate="yes" xml:space="preserve">
          <source>for - perform a set of commands multiple times</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa32fad737b7aa5ceaccf76038f5bbfb35631a8" translate="yes" xml:space="preserve">
          <source>for - perform a set of commands multiple times.</source>
          <target state="translated">para-realizar un conjunto de comandos varias veces.</target>
        </trans-unit>
        <trans-unit id="dad671313b8de2fbdfd2199c6273613037ba0a43" translate="yes" xml:space="preserve">
          <source>for emacs aficionados) search the command history for the previous/next command containing the string that was specified on the commandline before the search was started. If the commandline was empty when the search started, all commands match. See the &lt;a href=&quot;#history-search&quot;&gt;history&lt;/a&gt; section for more information on history searching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c039c214c3b0d96340e4ef72f733eedd0388e42d" translate="yes" xml:space="preserve">
          <source>funced</source>
          <target state="translated">funced</target>
        </trans-unit>
        <trans-unit id="0816bc375ac09bd74efea8d7a85a93023e8ffa5a" translate="yes" xml:space="preserve">
          <source>funced - edit a function interactively</source>
          <target state="translated">funced-editar una función interactivamente</target>
        </trans-unit>
        <trans-unit id="3bc1aee64f9e2c4c5efada178ad6165cab6377cc" translate="yes" xml:space="preserve">
          <source>funcsave</source>
          <target state="translated">funcsave</target>
        </trans-unit>
        <trans-unit id="2f69307df7e91d4902cb35c04dd61609789e8b05" translate="yes" xml:space="preserve">
          <source>funcsave - save the definition of a function to the user's autoload directory</source>
          <target state="translated">funcsave-guarda la definición de una función en el directorio de autocarga del usuario</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="bf41a97c9825ae2e3550fdddcd8aaf42e45d7245" translate="yes" xml:space="preserve">
          <source>function - create a function</source>
          <target state="translated">función-crear una función</target>
        </trans-unit>
        <trans-unit id="2f887def33825e52ffbcca83446cfd6a6f676ff7" translate="yes" xml:space="preserve">
          <source>functions</source>
          <target state="translated">functions</target>
        </trans-unit>
        <trans-unit id="a2dd0c9d390ee256fa9d3c2d2857526a5930b073" translate="yes" xml:space="preserve">
          <source>functions - print or erase functions</source>
          <target state="translated">funciones-funciones de impresión o borrado</target>
        </trans-unit>
        <trans-unit id="27d5482eebd075de44389774fce28c69f45c8a75" translate="yes" xml:space="preserve">
          <source>h</source>
          <target state="translated">h</target>
        </trans-unit>
        <trans-unit id="92005ecf3788faea8346a7919fba0232188561ab" translate="yes" xml:space="preserve">
          <source>help</source>
          <target state="translated">help</target>
        </trans-unit>
        <trans-unit id="90df5c81817176fc99bd4d5ed355b097e8ac84fe" translate="yes" xml:space="preserve">
          <source>help - display fish documentation</source>
          <target state="translated">ayuda-mostrar la documentación de los peces</target>
        </trans-unit>
        <trans-unit id="66f79d8a6327c82c9033e6d65ff03322a3766c87" translate="yes" xml:space="preserve">
          <source>history</source>
          <target state="translated">history</target>
        </trans-unit>
        <trans-unit id="9c54bcb9992fb9affc2aedd28a291f6b1a369e0b" translate="yes" xml:space="preserve">
          <source>history - Show and manipulate command history</source>
          <target state="translated">historia-Mostrar y manipular la historia del comando</target>
        </trans-unit>
        <trans-unit id="29726f74a6be1f4745e744cfc7732285b75b7fc0" translate="yes" xml:space="preserve">
          <source>history - show and manipulate command history</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b784e073aec3749db57c1c47e6a4a299c37f4a2e" translate="yes" xml:space="preserve">
          <source>history search matches and selected pager items (background only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042dc4512fa3d391c5170cf3aa61e6a638f84342" translate="yes" xml:space="preserve">
          <source>i</source>
          <target state="translated">i</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="f95ea4c87a089d830126713a97723833a9fd76fc" translate="yes" xml:space="preserve">
          <source>if - conditionally execute a command</source>
          <target state="translated">si-ejecutar condicionalmente un comando</target>
        </trans-unit>
        <trans-unit id="e7efe9f9f5daf4facdb7f8849108466d375fcd80" translate="yes" xml:space="preserve">
          <source>if verbose, then also show the upstream abbrev name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab638aed4bf3b4426c3a74c1a05e21d350e6291f" translate="yes" xml:space="preserve">
          <source>in a terminal. To distinguish between pressing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8c8167750fafc3e2f9d86666e1dcecec176d0b" translate="yes" xml:space="preserve">
          <source>in config.fish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f6eaca5a78df7f07aefc3142f0365ef6ebc052" translate="yes" xml:space="preserve">
          <source>in vi-mode) opens up a search menu that you can use to filter the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64316d2561385b5e53365ea150762c965d1cd1c1" translate="yes" xml:space="preserve">
          <source>in which case fish will define a &lt;code&gt;fish_command_not_found&lt;/code&gt; that calls it, or define a wrapper:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f5037badc2e2c2c7bc7fd66352a068872f4aad" translate="yes" xml:space="preserve">
          <source>inserts the clipboard contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8a058b75e59ed14dfbe75551d2e994ddeca8ef" translate="yes" xml:space="preserve">
          <source>instead of pressing the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6943267c3cc92fed9546683aff6196a5d7827d1b" translate="yes" xml:space="preserve">
          <source>is pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778e4ab557fca9af7d09d3734523ad48b6323d8d" translate="yes" xml:space="preserve">
          <source>is pressed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0e4bfea7dd1b65db7f123da2d60b3276d29519" translate="yes" xml:space="preserve">
          <source>is the same thing as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24def2dc36d8c488f6dd73f146437207b25f618c" translate="yes" xml:space="preserve">
          <source>isatty</source>
          <target state="translated">isatty</target>
        </trans-unit>
        <trans-unit id="495c444539904f50ab2eb055497a10578ed98cb2" translate="yes" xml:space="preserve">
          <source>isatty - test if a file descriptor is a terminal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfe607d872677db1789d97ef106886f84f5899b" translate="yes" xml:space="preserve">
          <source>isatty - test if a file descriptor is a tty.</source>
          <target state="translated">isatty-prueba si un descriptor de archivo es una tty.</target>
        </trans-unit>
        <trans-unit id="638dbc85cd3410c50689528013eccaae778361f3" translate="yes" xml:space="preserve">
          <source>it will print &lt;code&gt;xax xbx xcx&lt;/code&gt;.</source>
          <target state="translated">imprimir&amp;aacute; &lt;code&gt;xax xbx xcx&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6966922100bf006356af2b9098e6ba3b1c190226" translate="yes" xml:space="preserve">
          <source>jobs</source>
          <target state="translated">jobs</target>
        </trans-unit>
        <trans-unit id="2c0538a731bda1d0b48cf0b71c7f1eea39760d56" translate="yes" xml:space="preserve">
          <source>jobs - print currently running jobs</source>
          <target state="translated">trabajos-imprimir trabajos en curso</target>
        </trans-unit>
        <trans-unit id="eab8b533a9af65bf25991bce5aab55764e3ca4e8" translate="yes" xml:space="preserve">
          <source>jobs accepts the following switches:</source>
          <target state="translated">jobs acepta los siguientes cambios:</target>
        </trans-unit>
        <trans-unit id="d23fa38d218db5917750ec28d4a9b507f721024e" translate="yes" xml:space="preserve">
          <source>just use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f738c76e2319d73e5c816f0ce16cec21cdd89e1" translate="yes" xml:space="preserve">
          <source>key is pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00cc77f7a477b81edd8706ee13b2a1c0832b4fb" translate="yes" xml:space="preserve">
          <source>key while a block of commands is unclosed, such as when one or more block commands such as &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;if&lt;/code&gt; do not have a corresponding &lt;a href=&quot;cmds/end#cmd-end&quot;&gt;end&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951060f3cd7650cf1693827a21a8db25f4c59767" translate="yes" xml:space="preserve">
          <source>key while a block of commands is unclosed, such as when one or more block commands such as &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;if&lt;/code&gt; do not have a corresponding &lt;code&gt;end&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee92ef620e004d80c407877f1cef6a8e2e5af2b6" translate="yes" xml:space="preserve">
          <source>key, escaping the newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f26320c343038d01b070c46deea8aa52d09d1d0" translate="yes" xml:space="preserve">
          <source>key.</source>
          <target state="translated">key.</target>
        </trans-unit>
        <trans-unit id="02260c070ad1aec73a5f1e4012d0227ee74716ef" translate="yes" xml:space="preserve">
          <source>keywords like if - this falls back on command color if unset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c342be6e560e7f43842e2e21b774e61d85f047" translate="yes" xml:space="preserve">
          <source>l</source>
          <target state="translated">l</target>
        </trans-unit>
        <trans-unit id="b4f9e3666848201bd458ca9de89f99d8ad3f53ea" translate="yes" xml:space="preserve">
          <source>lists the contents of the current directory, unless the cursor is over a directory argument, in which case the contents of that directory will be listed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3460d728d4d1a042039978e3562967d7338489" translate="yes" xml:space="preserve">
          <source>makes the current word uppercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a488390a939c4795cc1a801e51751d5f25d800d" translate="yes" xml:space="preserve">
          <source>math</source>
          <target state="translated">math</target>
        </trans-unit>
        <trans-unit id="ac55c69e1a4e4deadae82d7d2501bb6e8354689f" translate="yes" xml:space="preserve">
          <source>math - Perform mathematics calculations</source>
          <target state="translated">matemáticas-Realizar cálculos matemáticos</target>
        </trans-unit>
        <trans-unit id="371518d04a3c47a10a19f4d15865e014e2b3a0bf" translate="yes" xml:space="preserve">
          <source>math - perform mathematics calculations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6584ae5a8e404d7f8c5b5e994e9f0996b47cf4" translate="yes" xml:space="preserve">
          <source>move the cursor one character left or right or accept the autosuggestion just like the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754f3f5609418a8d6f9251e573d0ce5ec533d469" translate="yes" xml:space="preserve">
          <source>move the cursor one word left or right (to the next space or punctuation mark), or moves forward/backward in the directory history if the command line is empty. If the cursor is already at the end of the line, and an autosuggestion is available,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e545b80456041b20ce96ff25fd4d08554304659" translate="yes" xml:space="preserve">
          <source>move the cursor one word left or right, without stopping on punctuation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc46fecdb4577780c89ce3a993f4171fa57bef13" translate="yes" xml:space="preserve">
          <source>move the cursor one word left or right, without stopping on punctuation. These accept one big word of the autosuggestion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d173b4d01ba14429e6716a34f7441fcef1fc560" translate="yes" xml:space="preserve">
          <source>move the cursor one word left or right. These accept one word of the autosuggestion - the part they'd move over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d562ad4b4c7b06eb4fb0aaaa1520c85e02534b" translate="yes" xml:space="preserve">
          <source>move the cursor up/down or through history, like the up and down arrow shared bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb72c8ff53f50d135721e679ae4504f39dbf388" translate="yes" xml:space="preserve">
          <source>move the selection to the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt; and enter &lt;a href=&quot;#vi-mode-command&quot;&gt;command mode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93742f4ce442879e2e535bc9c3eae0e6ee834055" translate="yes" xml:space="preserve">
          <source>moves contents from the beginning of line to the cursor to the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b422cbd0efeacc58bf660f726cbd2a32bec5fc" translate="yes" xml:space="preserve">
          <source>moves contents from the cursor to the end of line to the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9344e913d6041c6ad76f66104b12d72b5a6be0a0" translate="yes" xml:space="preserve">
          <source>moves the cursor left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5acf2f4e25970fba5b4ce153cee65b1e585ec59" translate="yes" xml:space="preserve">
          <source>moves the cursor right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf26ba211fea631f0217fa67f90ba6aff875be0" translate="yes" xml:space="preserve">
          <source>moves the cursor to the beginning of the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e511d654bfb9f1d9319fb06c8477f9679c5ccc74" translate="yes" xml:space="preserve">
          <source>moves the next word to the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78eb09de4b920df8428c09dcad18d0ec32eb5b11" translate="yes" xml:space="preserve">
          <source>moves the previous path component (everything up to the previous &quot;/&quot;, &quot;:&quot; or &quot;@&quot;) to the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f14ff5cffde4dccfc08c6f54686ad249b8a50d3" translate="yes" xml:space="preserve">
          <source>moves to the end of line. If the cursor is already at the end of the line, and an autosuggestion is available,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5788f5d9921db1d9d54ea779e091c82300b105e9" translate="yes" xml:space="preserve">
          <source>nextd</source>
          <target state="translated">nextd</target>
        </trans-unit>
        <trans-unit id="5962cd086d9c9b34c1fe8730983fbd9559aed0f5" translate="yes" xml:space="preserve">
          <source>nextd - move forward through directory history</source>
          <target state="translated">nextd-avanzar a través de la historia del directorio</target>
        </trans-unit>
        <trans-unit id="d058f2cdd7781f829008a74cc23a43186eacb161" translate="yes" xml:space="preserve">
          <source>no output.</source>
          <target state="translated">no hay salida.</target>
        </trans-unit>
        <trans-unit id="557f255516719ea16f8f4a0aae1166054e2c9b43" translate="yes" xml:space="preserve">
          <source>not</source>
          <target state="translated">not</target>
        </trans-unit>
        <trans-unit id="4575a330b9abc396835c8ef87416bed7db17b511" translate="yes" xml:space="preserve">
          <source>not - negate the exit status of a job</source>
          <target state="translated">no-negar el estatus de salida de un trabajo</target>
        </trans-unit>
        <trans-unit id="0bb4e3cdf25c712dfea9f11088fae883fec81dbb" translate="yes" xml:space="preserve">
          <source>on some terminals) undo the most recent edit of the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc7e38bffe00ca46add89145464a2eaf759d5c2" translate="yes" xml:space="preserve">
          <source>open</source>
          <target state="translated">open</target>
        </trans-unit>
        <trans-unit id="199b395ad03deff5d4ae7fbee3ed860eb83c6145" translate="yes" xml:space="preserve">
          <source>open - open file in its default application</source>
          <target state="translated">open-archivo abierto en su aplicación por defecto</target>
        </trans-unit>
        <trans-unit id="cba9fb0931e0ee6f4dca2d8aa4cfd6bb87a17d97" translate="yes" xml:space="preserve">
          <source>opens the file at the cursor in a pager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="5ac69dda73e3d892b4ac8d6d08382b12628a8748" translate="yes" xml:space="preserve">
          <source>or &quot;stati&quot; if you prefer, or &quot;statūs&quot; if you've time-travelled from ancient Rome or work as a latin teacher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711125b2ab4f03f077b0f47796a68a231b18fde3" translate="yes" xml:space="preserve">
          <source>or - conditionally execute a command</source>
          <target state="translated">o-ejecutar condicionalmente un comando</target>
        </trans-unit>
        <trans-unit id="7b3b5463f2c38ca37d8d99520374f9cc91401b55" translate="yes" xml:space="preserve">
          <source>or &lt;code&gt;bash&lt;/code&gt; without a switch, opens a bash shell that you can use and &lt;code&gt;exit&lt;/code&gt; afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4fca309e453918d1fa9832f4ef19832f32f1de" translate="yes" xml:space="preserve">
          <source>or opted into globally for a user:</source>
          <target state="translated">u optó por la globalidad para un usuario:</target>
        </trans-unit>
        <trans-unit id="a4f528e01e5e50f8f95fbeedc06dc0ac681b0db0" translate="yes" xml:space="preserve">
          <source>or to erase variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9ad0addee82809659247e9008e6f9e82aa9000" translate="yes" xml:space="preserve">
          <source>or:</source>
          <target state="translated">or:</target>
        </trans-unit>
        <trans-unit id="025952a13438b8edab55aa5ab204427ab53d803a" translate="yes" xml:space="preserve">
          <source>ordinary command parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6eb2fc24e8a6f1c3bb2b61e9934a910f68d626" translate="yes" xml:space="preserve">
          <source>out of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca307b286ed5a585f722e4c84c26b50446af2cdd" translate="yes" xml:space="preserve">
          <source>outputs &lt;code&gt;'hello world'&lt;/code&gt; (including the apostrophes), while the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c527f68d822f5591e859a81ed034b958a0ee63" translate="yes" xml:space="preserve">
          <source>outputs &lt;code&gt;hello world&lt;/code&gt; (without the apostrophes). In the former case the shell treats the apostrophes as literal &lt;code&gt;'&lt;/code&gt; characters, while in the latter case it treats them as special expansion modifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516b9783fca517eecbd1d064da2d165310b19759" translate="yes" xml:space="preserve">
          <source>p</source>
          <target state="translated">p</target>
        </trans-unit>
        <trans-unit id="c6059e9cf73e3aab8c577d969a5256c277849224" translate="yes" xml:space="preserve">
          <source>parameter expansion operators like '*' and '~'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0738b66f0409f9396bdcdb486376cd82937b89c" translate="yes" xml:space="preserve">
          <source>pastes text from the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd053f79a6a0b97eca270388d4266f6cdc2e5d1f" translate="yes" xml:space="preserve">
          <source>popd</source>
          <target state="translated">popd</target>
        </trans-unit>
        <trans-unit id="c0ad7ae5d6dea353b86b7975b175fb7ec7a5b0d8" translate="yes" xml:space="preserve">
          <source>popd - move through directory stack</source>
          <target state="translated">popd-moverse a través de la pila de directorios</target>
        </trans-unit>
        <trans-unit id="d5e5e036e691dc89db0498766216c7286cac52b0" translate="yes" xml:space="preserve">
          <source>prefix of every second unselected completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfcbd3752db64940ee5a788d10da6cb6c52cf7f5" translate="yes" xml:space="preserve">
          <source>prefix of the selected completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd09e18a9bd74edaca7d487211db598da4416565" translate="yes" xml:space="preserve">
          <source>press</source>
          <target state="translated">press</target>
        </trans-unit>
        <trans-unit id="501bed2ce7870bcc5b0594fe851ae7aafaa0d983" translate="yes" xml:space="preserve">
          <source>press &lt;code&gt;Ctrl-C&lt;/code&gt; twice, or</source>
          <target state="translated">presione &lt;code&gt;Ctrl-C&lt;/code&gt; dos veces, o</target>
        </trans-unit>
        <trans-unit id="7dc7f09beed59586cbda067c6eeb7b7166812ad2" translate="yes" xml:space="preserve">
          <source>press &lt;code&gt;Ctrl-D&lt;/code&gt; twice, or</source>
          <target state="translated">presione &lt;code&gt;Ctrl-D&lt;/code&gt; dos veces, o</target>
        </trans-unit>
        <trans-unit id="e291f27c814229dc2eb10fa92c9b8c4185958322" translate="yes" xml:space="preserve">
          <source>prevd</source>
          <target state="translated">prevd</target>
        </trans-unit>
        <trans-unit id="f7c05f49b7608d19659229d1610a7b144fd04131" translate="yes" xml:space="preserve">
          <source>prevd - move backward through directory history</source>
          <target state="translated">prevd-retroceder a través de la historia del directorio</target>
        </trans-unit>
        <trans-unit id="df39b4caf493869772ff3a0f95cca6a9ae7934dc" translate="yes" xml:space="preserve">
          <source>printf</source>
          <target state="translated">printf</target>
        </trans-unit>
        <trans-unit id="3c6a47d2ffca0ad0d4a07143fcfbfd3c2bf900e7" translate="yes" xml:space="preserve">
          <source>printf - display text according to a format string</source>
          <target state="translated">printf-mostrar el texto de acuerdo con una cadena de formato</target>
        </trans-unit>
        <trans-unit id="21999975d6629ee4bcf6c7777ee78ef2dde68352" translate="yes" xml:space="preserve">
          <source>printf also knows a number of backslash escapes:</source>
          <target state="translated">Printf también conoce un número de escapes de la barra invertida:</target>
        </trans-unit>
        <trans-unit id="16fbc9373952d2ce0913f0e1dfb31bf25f20364a" translate="yes" xml:space="preserve">
          <source>printf also knows a number of backslash escapes: - &lt;code&gt;\&quot;&lt;/code&gt; double quote - &lt;code&gt;\\&lt;/code&gt; backslash - &lt;code&gt;\a&lt;/code&gt; alert (bell) - &lt;code&gt;\b&lt;/code&gt; backspace - &lt;code&gt;\c&lt;/code&gt; produce no further output - &lt;code&gt;\e&lt;/code&gt; escape - &lt;code&gt;\f&lt;/code&gt; form feed - &lt;code&gt;\n&lt;/code&gt; new line - &lt;code&gt;\r&lt;/code&gt; carriage return - &lt;code&gt;\t&lt;/code&gt; horizontal tab - &lt;code&gt;\v&lt;/code&gt; vertical tab - &lt;code&gt;\ooo&lt;/code&gt; octal number (ooo is 1 to 3 digits) - &lt;code&gt;\xhh&lt;/code&gt; hexadecimal number (hhh is 1 to 2 digits) - &lt;code&gt;\uhhhh&lt;/code&gt; 16-bit Unicode character (hhhh is 4 digits) - &lt;code&gt;\Uhhhhhhhh&lt;/code&gt; 32-bit Unicode character (hhhhhhhh is 8 digits)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e9a119bdd370e572983792f8da0fd600bbb244" translate="yes" xml:space="preserve">
          <source>printf formats the string FORMAT with ARGUMENT, and displays the result.</source>
          <target state="translated">printf formatea la cadena FORMATO con ARGUMENTO,y muestra el resultado.</target>
        </trans-unit>
        <trans-unit id="a68f499718c80f23d567443a6a18245d956445b9" translate="yes" xml:space="preserve">
          <source>printf uses the format string FORMAT to print the ARGUMENT arguments. This means that it takes format specifiers in the format string and replaces each with an argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d637fde9383253c68b846d7e82ee779a509564" translate="yes" xml:space="preserve">
          <source>prints a short description of the command under the cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a0138129d58979e44cb0a0b8a24a39f21b9f0f" translate="yes" xml:space="preserve">
          <source>process separators like ';' and '&amp;amp;'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b62a0fc91ac76f534c8506377fd0cd7094b326" translate="yes" xml:space="preserve">
          <source>prompt_pwd</source>
          <target state="translated">prompt_pwd</target>
        </trans-unit>
        <trans-unit id="379685f1a28ec5f5585e4ea14e8526590620679f" translate="yes" xml:space="preserve">
          <source>prompt_pwd - Print pwd suitable for prompt</source>
          <target state="translated">prompt_pwd-Imprimir pwd adecuado para el prompt</target>
        </trans-unit>
        <trans-unit id="92f8a5145f60de3b68431dfeb2053ef05d5ad63b" translate="yes" xml:space="preserve">
          <source>prompt_pwd - print pwd suitable for prompt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a140601076b214970f21dd77e03c7939cd93ecdc" translate="yes" xml:space="preserve">
          <source>prompt_pwd is a function to print the current working directory in a way suitable for prompts. It will replace the home directory with &quot;~&quot; and shorten every path component but the last to a default of one character.</source>
          <target state="translated">prompt_pwd es una función para imprimir el directorio de trabajo actual de una manera adecuada para los prompts.Reemplazará el directorio principal por &quot;~&quot; y acortará cada componente de la ruta pero el último a un carácter por defecto.</target>
        </trans-unit>
        <trans-unit id="9afd2538d3d4ffb696f4dcdd4ab6baadf04ff522" translate="yes" xml:space="preserve">
          <source>psub</source>
          <target state="translated">psub</target>
        </trans-unit>
        <trans-unit id="63fbf23d9d9b481ea407c815c90933057897af4b" translate="yes" xml:space="preserve">
          <source>psub - perform process substitution</source>
          <target state="translated">psub-realizar la sustitución del proceso</target>
        </trans-unit>
        <trans-unit id="ca99455ec63652d0ac9ec250727ee0c6c910786e" translate="yes" xml:space="preserve">
          <source>pushd</source>
          <target state="translated">pushd</target>
        </trans-unit>
        <trans-unit id="9160b1d55f9fa10d249ec7b308dccac953b32fc0" translate="yes" xml:space="preserve">
          <source>pushd - push directory to directory stack</source>
          <target state="translated">pushd-empuja el directorio a la pila de directorios</target>
        </trans-unit>
        <trans-unit id="37fa265330ad83eaa879efb1e2db6380896cf639" translate="yes" xml:space="preserve">
          <source>pwd</source>
          <target state="translated">pwd</target>
        </trans-unit>
        <trans-unit id="3f4e967878bd5e1bb4a87ca851b714379daca044" translate="yes" xml:space="preserve">
          <source>pwd - output the current working directory</source>
          <target state="translated">pwd-da salida al directorio de trabajo actual</target>
        </trans-unit>
        <trans-unit id="d012ea322a198dd3f7364658b27e11c631388e55" translate="yes" xml:space="preserve">
          <source>quoted text like &quot;abc&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a415ab5cc17c8c093c015ccdb7e552aee7911aa4" translate="yes" xml:space="preserve">
          <source>random</source>
          <target state="translated">random</target>
        </trans-unit>
        <trans-unit id="a2268607239de0e6afadb64003588824de27a1ad" translate="yes" xml:space="preserve">
          <source>random - generate random number</source>
          <target state="translated">aleatorio-generar un número aleatorio</target>
        </trans-unit>
        <trans-unit id="a7afddb68260a60f86c02a021efba7f216c2e7cf" translate="yes" xml:space="preserve">
          <source>read</source>
          <target state="translated">read</target>
        </trans-unit>
        <trans-unit id="02d0fa56be4fca5d7cc0c6db5a7aa370743eb4ff" translate="yes" xml:space="preserve">
          <source>read - read line of input into variables</source>
          <target state="translated">leer-leer la línea de entrada en las variables</target>
        </trans-unit>
        <trans-unit id="ff2b5744be5fceda4fc467fda551bcbf199f8fa0" translate="yes" xml:space="preserve">
          <source>realpath</source>
          <target state="translated">realpath</target>
        </trans-unit>
        <trans-unit id="2caa95ad63632ed3825a317f46514c851816d5ab" translate="yes" xml:space="preserve">
          <source>realpath - Convert a path to an absolute path without symlinks</source>
          <target state="translated">realpath-Convierte un camino en un camino absoluto sin enlaces simbólicos</target>
        </trans-unit>
        <trans-unit id="7805cc604cfb3eaf348bd9e675f7975bf58c28e3" translate="yes" xml:space="preserve">
          <source>realpath - convert a path to an absolute path without symlinks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4369fab8e2703caa65adc9d6734a79694941c2" translate="yes" xml:space="preserve">
          <source>recalls individual arguments, starting from the last argument in the last executed line. A single press replaces &quot;!$&quot;, later presses replace &quot;!!:4&quot; and such. As an alternate key binding,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc0316013a18a081b776d8584c2cd831e8ee38a" translate="yes" xml:space="preserve">
          <source>recalls individual arguments, starting from the last argument in the last line executed. A single press replaces &quot;!$&quot;, later presses replace &quot;!!:4&quot; and the like. An alternate key binding is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f981467f23971a6bcd2a7dcc9882a4dd6f69df4" translate="yes" xml:space="preserve">
          <source>recalls whole lines, starting from the last executed line. A single press replaces &quot;!!&quot;, later presses replace &quot;!-3&quot; and the like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbf6e0c65bd333009dbbdbc6eb3ab24ffa32c26" translate="yes" xml:space="preserve">
          <source>recalls whole lines, starting from the last line executed. A single press replaces &quot;!!&quot;, later presses replace &quot;!-3&quot; and the like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3efd1739c24a74dcbab6d24e477f596336f1282" translate="yes" xml:space="preserve">
          <source>relative to newer annotated tag, such as &lt;code&gt;(v1.6.3.2~35)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a11b7dad259e2e4c1bf4e1803276e3aa98db5fd" translate="yes" xml:space="preserve">
          <source>relative to newer tag or branch, such as &lt;code&gt;(master~4)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de255ff1a0f0729a009a4f2d410a14f293efbd85" translate="yes" xml:space="preserve">
          <source>relative to older annotated tag, such as &lt;code&gt;(v1.6.3.1-13-gdd42c2f)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d1ab8a0a2acd399a37d57fea1fd853d8a21405" translate="yes" xml:space="preserve">
          <source>removes one character forwards or backwards respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718d3cf29853291163f18cffb0c67d09f8bc51f6" translate="yes" xml:space="preserve">
          <source>removes one character to the left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2103a505c56d5bf5824e2166f7421ce140b73383" translate="yes" xml:space="preserve">
          <source>removes the file &lt;code&gt;cumbersome filename.txt&lt;/code&gt;, while</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f01571543746ed280917eeb8b6c31505faad634" translate="yes" xml:space="preserve">
          <source>removes two files, &lt;code&gt;cumbersome&lt;/code&gt; and &lt;code&gt;filename.txt&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63143b6f8007b98c53ca2149822777b3566f9241" translate="yes" xml:space="preserve">
          <source>return</source>
          <target state="translated">return</target>
        </trans-unit>
        <trans-unit id="288b5d6d1a89a6e706dfc7486e06e4a8d8078410" translate="yes" xml:space="preserve">
          <source>return - stop the current inner function</source>
          <target state="translated">retorno-detener la función interna actual</target>
        </trans-unit>
        <trans-unit id="21b14ff9a47e42c5055ed3b8e5a0c9f2c16c823d" translate="yes" xml:space="preserve">
          <source>reverts the most recent undo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a8bc35e1603d1f3b14469cbd262d1034d78a5d" translate="yes" xml:space="preserve">
          <source>search history backwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405bd873c4bd1cade52a2bb9fe727b840228e4d4" translate="yes" xml:space="preserve">
          <source>search the command history for the previous/next token containing the token under the cursor before the search was started. If the commandline was not on a token when the search started, all tokens match. See the &lt;a href=&quot;#history-search&quot;&gt;history&lt;/a&gt; section for more information on history searching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d75a2825f12f7b29389663fdd83ca02e1dcd86" translate="yes" xml:space="preserve">
          <source>search the command history for the previous/next token containing the token under the cursor before the search was started. See the &lt;a href=&quot;#history-search&quot;&gt;history&lt;/a&gt; section for more information on history searching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a0d265e743ad1b094de29d406e63f24bef8091" translate="yes" xml:space="preserve">
          <source>searches for lines ending in &lt;code&gt;enabled)&lt;/code&gt; in &lt;code&gt;foo.txt&lt;/code&gt; (the &lt;code&gt;$&lt;/code&gt; is special to &lt;code&gt;grep&lt;/code&gt;: it matches the end of the line).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b76302531466be189d4d6cc221f8f036bda17fe" translate="yes" xml:space="preserve">
          <source>searches the history if there is something in the commandline. This is mainly to ease the transition from other shells, where ctrl+r initiates the history search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8b2495241ff50cf0a9cf63f8e600f4553d86a7" translate="yes" xml:space="preserve">
          <source>selected text in vi visual mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c10dc3549fe07424148a8a4790a3341ecbc253" translate="yes" xml:space="preserve">
          <source>set</source>
          <target state="translated">set</target>
        </trans-unit>
        <trans-unit id="4903d5a664412c419cc2487f4f6dd591441ecc79" translate="yes" xml:space="preserve">
          <source>set - display and change shell variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063c17e14f7627ded7c57ede98e0f6ca9045fc66" translate="yes" xml:space="preserve">
          <source>set - display and change shell variables.</source>
          <target state="translated">establecer-mostrar y cambiar las variables de la cáscara.</target>
        </trans-unit>
        <trans-unit id="20f7c32664f5d1e0b9c515a18fcf90cdb3c57984" translate="yes" xml:space="preserve">
          <source>set_color</source>
          <target state="translated">set_color</target>
        </trans-unit>
        <trans-unit id="cff11275c6338d2e5dde20951c1557cf0de59d43" translate="yes" xml:space="preserve">
          <source>set_color - set the terminal color</source>
          <target state="translated">set_color-establecer el color de la terminal</target>
        </trans-unit>
        <trans-unit id="7083b8991c7758c96835bb9fe287b9ce13b5e1e6" translate="yes" xml:space="preserve">
          <source>show number of commits ahead/behind (+/-) upstream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1661dcf8c23157ef75c607d0affe743f1b577c07" translate="yes" xml:space="preserve">
          <source>signals that you are done editing the function. This does not apply to an external editor like emacs or vim.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184673434618bba69909970811545c87621d1f63" translate="yes" xml:space="preserve">
          <source>similar to verbose, but shows nothing when equal - this is the default if informative status is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828d338a9b04221c9cbe286f50cd389f68de4ecf" translate="yes" xml:space="preserve">
          <source>source</source>
          <target state="translated">source</target>
        </trans-unit>
        <trans-unit id="42a7db133f049e4327f457f47265ae4497a298a4" translate="yes" xml:space="preserve">
          <source>source - evaluate contents of file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7991a9100c9583f2155802c7350aa74443ed20" translate="yes" xml:space="preserve">
          <source>source - evaluate contents of file.</source>
          <target state="translated">fuente-evaluar el contenido del archivo.</target>
        </trans-unit>
        <trans-unit id="506a7e1ca8d34664e2b86653d70401c523f26553" translate="yes" xml:space="preserve">
          <source>spawns &lt;code&gt;sleep&lt;/code&gt; in the background, and then waits until it finishes.</source>
          <target state="translated">genera el &lt;code&gt;sleep&lt;/code&gt; en segundo plano y luego espera hasta que finaliza.</target>
        </trans-unit>
        <trans-unit id="0600ee136238de631e08746a8bd524b702580c61" translate="yes" xml:space="preserve">
          <source>spawns five jobs and &lt;code&gt;hoge&lt;/code&gt; in the background, and then waits until all &lt;code&gt;sleep&lt;/code&gt;s finish, and doesn't wait for &lt;code&gt;hoge&lt;/code&gt; finishing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78dbe5e491bc63d2e79ab65c266d6d41e91f56ff" translate="yes" xml:space="preserve">
          <source>spawns five jobs and &lt;code&gt;hoge&lt;/code&gt; in the background, and then waits until all &lt;code&gt;sleep&lt;/code&gt;s finishes, and doesn't wait for &lt;code&gt;hoge&lt;/code&gt; finishing.</source>
          <target state="translated">genera cinco trabajos y &lt;code&gt;hoge&lt;/code&gt; en segundo plano, y luego espera hasta que finalizan todos los &lt;code&gt;sleep&lt;/code&gt; s, y no espera a que &lt;code&gt;hoge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6e22225897433914493a887f4a4f462d9a13ced" translate="yes" xml:space="preserve">
          <source>spawns five jobs in the background, and then waits until all of them finishes.</source>
          <target state="translated">engendra cinco trabajos en el fondo,y luego espera hasta que todos ellos terminen.</target>
        </trans-unit>
        <trans-unit id="48a3661d846478fa991a825ebd10b78671444b5b" translate="yes" xml:space="preserve">
          <source>status</source>
          <target state="translated">status</target>
        </trans-unit>
        <trans-unit id="420a0e9d08406c887fa9f473fb502e30acd9a336" translate="yes" xml:space="preserve">
          <source>status - query fish runtime information</source>
          <target state="translated">estado-consulta de información sobre el tiempo de ejecución de los peces</target>
        </trans-unit>
        <trans-unit id="33a9e6923b5cff6e1c9fb560ddb572a069a669c0" translate="yes" xml:space="preserve">
          <source>stdin and stdout can be redirected via the familiar &amp;lt; and &amp;gt;. stderr is redirected with a &amp;gt;2.</source>
          <target state="translated">stdin y stdout se pueden redirigir a trav&amp;eacute;s de los conocidos &amp;lt;y&amp;gt;. stderr se redirige con un&amp;gt; 2.</target>
        </trans-unit>
        <trans-unit id="0d1fa9c38f2950c30150a114fabca23982d85d69" translate="yes" xml:space="preserve">
          <source>stdin and stdout can be redirected via the familiar &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;. stderr is redirected with a &lt;code&gt;2&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb252044b5ea0f679ee78ec1a12904739e2904d" translate="yes" xml:space="preserve">
          <source>string</source>
          <target state="translated">string</target>
        </trans-unit>
        <trans-unit id="5eb279c348daa58c49a3c45c42799e5a0b7195c1" translate="yes" xml:space="preserve">
          <source>string - manipulate strings</source>
          <target state="translated">cuerda-manipular las cuerdas</target>
        </trans-unit>
        <trans-unit id="2d4cce05141601eb200e21f5034e12ea0b4e9035" translate="yes" xml:space="preserve">
          <source>string-collect</source>
          <target state="translated">string-collect</target>
        </trans-unit>
        <trans-unit id="05c051811aed7ba706a8a51bc24d4690e4db4f66" translate="yes" xml:space="preserve">
          <source>string-collect - join strings into one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83edcee3403d6522a118ecb6b41235ce1fb84377" translate="yes" xml:space="preserve">
          <source>string-escape</source>
          <target state="translated">string-escape</target>
        </trans-unit>
        <trans-unit id="110688818d599a025da2209a38f42c2a69a1e2a2" translate="yes" xml:space="preserve">
          <source>string-escape - escape special characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713077bad01083d9df6f04ad09441e593a6e613b" translate="yes" xml:space="preserve">
          <source>string-join</source>
          <target state="translated">string-join</target>
        </trans-unit>
        <trans-unit id="cf9ad0b86266a3ba97fdc91895f63fefc74b39d0" translate="yes" xml:space="preserve">
          <source>string-join - join strings with delimiter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a051838bd267aa0023c29debb9097f2c6de40ed" translate="yes" xml:space="preserve">
          <source>string-join0</source>
          <target state="translated">string-join0</target>
        </trans-unit>
        <trans-unit id="fed444794abfb966b29451a2d6ca632ef221d77c" translate="yes" xml:space="preserve">
          <source>string-join0 - join strings with zero bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9566bb2c4b665f33165b8aa55dd9033842ef89" translate="yes" xml:space="preserve">
          <source>string-length</source>
          <target state="translated">string-length</target>
        </trans-unit>
        <trans-unit id="38311e74d3e72fe52620dde5a99750c88f927738" translate="yes" xml:space="preserve">
          <source>string-length - print string lengths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d302b3bf0b9da16cbc562134ae0b1dee1dde352" translate="yes" xml:space="preserve">
          <source>string-lower</source>
          <target state="translated">string-lower</target>
        </trans-unit>
        <trans-unit id="4ab0ef6f4d3705599186de375c863310ee6ab9b1" translate="yes" xml:space="preserve">
          <source>string-lower - convert strings to lowercase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052e2fa177173549fa0ea1d7810743bcb1e38f6e" translate="yes" xml:space="preserve">
          <source>string-match</source>
          <target state="translated">string-match</target>
        </trans-unit>
        <trans-unit id="7ade39ce3db0090a4c068a2ad4802a46f60a8b70" translate="yes" xml:space="preserve">
          <source>string-match - match substrings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5353ef739226e5839bea3155f728104b25b3374f" translate="yes" xml:space="preserve">
          <source>string-pad - pad strings to a fixed width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c70d8bc37876d32264a52deee1a92a6f35d9a01" translate="yes" xml:space="preserve">
          <source>string-repeat</source>
          <target state="translated">string-repeat</target>
        </trans-unit>
        <trans-unit id="bc090fddf7233f955becb2f8b9985e6a22a03ee7" translate="yes" xml:space="preserve">
          <source>string-repeat - multiply a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a84769da4f89a5eced1e565937dc2f3d9c56c7" translate="yes" xml:space="preserve">
          <source>string-replace</source>
          <target state="translated">string-replace</target>
        </trans-unit>
        <trans-unit id="83f22fd52eec3a625f928d8a9e5e6368f29dd8eb" translate="yes" xml:space="preserve">
          <source>string-replace - replace substrings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada8273c81ce42295f34b55ecbb52aefcedd6426" translate="yes" xml:space="preserve">
          <source>string-split</source>
          <target state="translated">string-split</target>
        </trans-unit>
        <trans-unit id="352e6465b628a9da06dab7bdf2d76ff1acbcc772" translate="yes" xml:space="preserve">
          <source>string-split - split strings by delimiter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952575f917bca4ba200799a7d8fc6a5f812e0518" translate="yes" xml:space="preserve">
          <source>string-split0</source>
          <target state="translated">string-split0</target>
        </trans-unit>
        <trans-unit id="a32ecce2541f45805dc389cea2647d86c439b917" translate="yes" xml:space="preserve">
          <source>string-split0 - split on zero bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a30e6a6791bac85aeb6b7d8e200158852eafcd3" translate="yes" xml:space="preserve">
          <source>string-sub</source>
          <target state="translated">string-sub</target>
        </trans-unit>
        <trans-unit id="4c9f46c1de15ff0a30a11651f6c46ea8593e3085" translate="yes" xml:space="preserve">
          <source>string-sub - extract substrings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca9d8a2cc1cb3d85cf6292e8fd944cbe9a87da59" translate="yes" xml:space="preserve">
          <source>string-trim</source>
          <target state="translated">string-trim</target>
        </trans-unit>
        <trans-unit id="927df2df7f2d9c6b79e97923720ee0bbb52bb21f" translate="yes" xml:space="preserve">
          <source>string-trim - remove trailing whitespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b626fddedcfc8a654538b0a89877ed55e6a18b70" translate="yes" xml:space="preserve">
          <source>string-unescape</source>
          <target state="translated">string-unescape</target>
        </trans-unit>
        <trans-unit id="ba0f5972cd5be1212d369e5ff924213c53dd0f6b" translate="yes" xml:space="preserve">
          <source>string-unescape - expand escape sequences</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4d63b16c09d9648a13b24f088256bb2230949c" translate="yes" xml:space="preserve">
          <source>string-upper</source>
          <target state="translated">string-upper</target>
        </trans-unit>
        <trans-unit id="2a5ba289e3420cd99f4544124ebae06ee0c851fb" translate="yes" xml:space="preserve">
          <source>string-upper - convert strings to uppercase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a1e9c7030520b9d985f2dff5d8ea5ba6c039fa" translate="yes" xml:space="preserve">
          <source>suffix of every second unselected completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60dc79ceef2dd7be9b355771d40fcd52f1b13e08" translate="yes" xml:space="preserve">
          <source>suffix of the selected completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20969eb1095a9740a5ff3ddac8831aac958032d4" translate="yes" xml:space="preserve">
          <source>summarize the difference between HEAD and its upstream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f0c43f69fad2bd2df597f8c1f9289bf8ebf0a2" translate="yes" xml:space="preserve">
          <source>suspend</source>
          <target state="translated">suspend</target>
        </trans-unit>
        <trans-unit id="0a906b8b4efdea69b1aa7921bd59ea5a07a19f19" translate="yes" xml:space="preserve">
          <source>suspend - suspend the current shell</source>
          <target state="translated">suspender-suspender el caparazón actual</target>
        </trans-unit>
        <trans-unit id="01ba7992f85de477e8e630428eb5ed14769f9155" translate="yes" xml:space="preserve">
          <source>switch</source>
          <target state="translated">switch</target>
        </trans-unit>
        <trans-unit id="b6b1294b1f61dc5bf9ee190db20eac07851abf99" translate="yes" xml:space="preserve">
          <source>switch - conditionally execute a block of commands</source>
          <target state="translated">interruptor-ejecutar condicionalmente un bloque de comandos</target>
        </trans-unit>
        <trans-unit id="9bf5f64b938bb8535b4b8eae80cd83810be38fc8" translate="yes" xml:space="preserve">
          <source>syntax errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e974602114f14fbf55401c109937e173b1b23220" translate="yes" xml:space="preserve">
          <source>tab</source>
          <target state="translated">tab</target>
        </trans-unit>
        <trans-unit id="a94a8fe5ccb19ba61c4c0873d391e987982fbbd3" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="translated">test</target>
        </trans-unit>
        <trans-unit id="4f3107d98473bb39c5345a7b62319a827c9d8057" translate="yes" xml:space="preserve">
          <source>test - perform tests on files and text</source>
          <target state="translated">test-realizar pruebas en los archivos y en el texto</target>
        </trans-unit>
        <trans-unit id="2aa29bbd60467d5c0025967af01e90ee747e79e5" translate="yes" xml:space="preserve">
          <source>the '^C' indicator on a canceled command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a841b3535f2db21583c8d29062bb120e4ba8ba" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;break#cmd-break&quot;&gt;break&lt;/a&gt; command, to stop the current inner loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a32047de782a876937178808eb96655eeaa997" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;cdh#cmd-cdh&quot;&gt;cdh&lt;/a&gt; command to display a prompt to quickly navigate the history</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184e3c0392af5ee23b3d2ee1843cb344776a51b7" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;cdh#cmd-cdh&quot;&gt;cdh&lt;/a&gt; command which provides a more intuitive way to navigate to recently visited directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5b92fb4b73859d45eb2213cf037ae839a1a059" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;continue#cmd-continue&quot;&gt;continue&lt;/a&gt; command, to skip the remainder of the current iteration of the current inner loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358940030f6c5aeb852406537969eb45c9487b6b" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;dirh#cmd-dirh&quot;&gt;dirh&lt;/a&gt; command to print the directory history</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c1c57f049baa8f4d72250ec603c50f9bb912be" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;dirs#cmd-dirs&quot;&gt;dirs&lt;/a&gt; command to print the directory stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c20531a16b53b223496226ade6891e4a913a73e" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;echo#cmd-echo&quot;&gt;echo&lt;/a&gt; command, for simpler output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806edb1c40ee880d6cb47fac336b70b1018de451" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;nextd#cmd-nextd&quot;&gt;nextd&lt;/a&gt; command to move forward</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1fb59dfac0e93d130c41ab4bb928b7b4ab137c" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;prevd#cmd-prevd&quot;&gt;prevd&lt;/a&gt; command to move backward</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2477f8ab31ea45416ba85d367eca0663e6bdcd9" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;printf#cmd-printf&quot;&gt;printf&lt;/a&gt; command, for more control over output formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc061cc666012d454ce77e0305d7fb2fe6fde2c" translate="yes" xml:space="preserve">
          <source>the background color of a line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee16563c7821ca448a82436f8607676e99bb1d4c" translate="yes" xml:space="preserve">
          <source>the colour of the revision number to display in the prompt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d305f0444d6d26a938e66b6491c9469cb954b5b4" translate="yes" xml:space="preserve">
          <source>the completion description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d34853d5db16b8bf770d58eb10e09b1059a0d4" translate="yes" xml:space="preserve">
          <source>the completion itself, i.e. the proposed rest of the string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b16d212ff6293d9cef4bbc68471e44a4e07e63" translate="yes" xml:space="preserve">
          <source>the current working directory in the default prompt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87a7f7b83a3a58c6087ce1eb24509a6f210bbe6" translate="yes" xml:space="preserve">
          <source>the function description minimally escaped so it is a single line or &lt;code&gt;n/a&lt;/code&gt; if the function isn't defined.</source>
          <target state="translated">la descripci&amp;oacute;n de la funci&amp;oacute;n escap&amp;oacute; m&amp;iacute;nimamente, por lo que es una sola l&amp;iacute;nea o &lt;code&gt;n/a&lt;/code&gt; si la funci&amp;oacute;n no est&amp;aacute; definida.</target>
        </trans-unit>
        <trans-unit id="2de50669895b1d6e0e31091d6774d42d8e27ef06" translate="yes" xml:space="preserve">
          <source>the hostname in the default prompt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5659f6e486dc18c2a2e957de49742b8d5167e18" translate="yes" xml:space="preserve">
          <source>the hostname in the default prompt for remote sessions (like ssh)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02aa698783c53dd6998a194b4ec93ca8e6192a89" translate="yes" xml:space="preserve">
          <source>the line number within the file or zero if not applicable,</source>
          <target state="translated">el número de línea dentro del archivo o cero si no es aplicable,</target>
        </trans-unit>
        <trans-unit id="d326199cf56e0ae280f8a9fda92ba199137f5b06" translate="yes" xml:space="preserve">
          <source>the pathname as already described,</source>
          <target state="translated">el nombre de la ruta como ya se ha descrito,</target>
        </trans-unit>
        <trans-unit id="83de8e547be464e3f43e046b502607df8659d31b" translate="yes" xml:space="preserve">
          <source>the prefix string, i.e. the string that is to be completed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fc79c8114e6af8e2a77ba51022ca54b8938759" translate="yes" xml:space="preserve">
          <source>the progress bar at the bottom left corner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd469d54e7e502df00efab39d3fd85c1398ad3d7" translate="yes" xml:space="preserve">
          <source>the separator between status characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c076f46dcc811616053b808a3321fe3e6fd0b064" translate="yes" xml:space="preserve">
          <source>the username in the default prompt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714eea0f4c980736bde0065fe73f573487f08e3a" translate="yes" xml:space="preserve">
          <source>time</source>
          <target state="translated">time</target>
        </trans-unit>
        <trans-unit id="3b28a892f761c663cd9741ef140960b0d99554ac" translate="yes" xml:space="preserve">
          <source>time - measure how long a command or block takes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93fde051556cb8919a6c75036bae40f55a1a1718" translate="yes" xml:space="preserve">
          <source>to change this prompt see &lt;a href=&quot;#tut_prompt&quot;&gt;how to change your prompt&lt;/a&gt;</source>
          <target state="translated">para cambiar este mensaje, vea &lt;a href=&quot;#tut_prompt&quot;&gt;c&amp;oacute;mo cambiar su mensaje&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a55b288e3395f3288c6efaf27cefbdaa30cdde1d" translate="yes" xml:space="preserve">
          <source>to clear the input line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c6dbce123f42b97d57a50940387e37bb870c57" translate="yes" xml:space="preserve">
          <source>to clear the input line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57a5e997943a230b27fb45ae6eacd4cf86ed3b1" translate="yes" xml:space="preserve">
          <source>to search for previously typed words containing 'm'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553d304d2b01f045f0aeddffc6c5778914ff0941" translate="yes" xml:space="preserve">
          <source>to stop running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60b004f5d8183032d2f3fcf34a581edbdea5c61" translate="yes" xml:space="preserve">
          <source>to switch to fish permanently see &lt;a href=&quot;#tut_switching_to_fish&quot;&gt;switch your default shell to fish&lt;/a&gt;</source>
          <target state="translated">para cambiar a pescado de forma permanente, vea &lt;a href=&quot;#tut_switching_to_fish&quot;&gt;cambiar su caparaz&amp;oacute;n predeterminado a pescado&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6447d2684b9c76aeb3e69f79758f92c6a93b6e6b" translate="yes" xml:space="preserve">
          <source>to use the completion pager to select an item from the list. If you give it a single argument it is equivalent to &lt;code&gt;cd directory&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab01181208a08630e1a2469b24539b322963d46" translate="yes" xml:space="preserve">
          <source>transposes the last two characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcc32f0be0ec86580a60be7cacd7dd18ca4d206" translate="yes" xml:space="preserve">
          <source>transposes the last two characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a476501fd6acf2b00d1ac76e47294a7c2471adf3" translate="yes" xml:space="preserve">
          <source>transposes the last two words</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3924d1fb64cc371f8cb32d28384ca62e6567724" translate="yes" xml:space="preserve">
          <source>transposes the last two words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d307367af5382983ed0d6888c8e3e045355281" translate="yes" xml:space="preserve">
          <source>trap</source>
          <target state="translated">trap</target>
        </trans-unit>
        <trans-unit id="3abaf5ffe5c75ece5fd52f452cf4a7f90fed7421" translate="yes" xml:space="preserve">
          <source>trap - perform an action when the shell receives a signal</source>
          <target state="translated">trampa-realizar una acción cuando el proyectil recibe una señal</target>
        </trans-unit>
        <trans-unit id="5ffe533b830f08a0326348a9160afafc8ada44db" translate="yes" xml:space="preserve">
          <source>true</source>
          <target state="translated">true</target>
        </trans-unit>
        <trans-unit id="10b80755987d5e861fcb4c74925a714ba8dce054" translate="yes" xml:space="preserve">
          <source>true - return a successful result</source>
          <target state="translated">true-devolver un resultado exitoso</target>
        </trans-unit>
        <trans-unit id="4bd2cd91ca754b397b49f225bcadc9e854767c88" translate="yes" xml:space="preserve">
          <source>twice, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a3e7f81a9885e99049d1cae0336d269d5e47a9" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="translated">type</target>
        </trans-unit>
        <trans-unit id="fa189f6932e07966b2945f9c641067e1250a2bb7" translate="yes" xml:space="preserve">
          <source>type - indicate how a command would be interpreted</source>
          <target state="translated">escribir-indicar cómo se interpretaría un comando</target>
        </trans-unit>
        <trans-unit id="6747212f18c8e5d826c489535a7ede3cf68eb31d" translate="yes" xml:space="preserve">
          <source>type &lt;code&gt;exit&lt;/code&gt;, or</source>
          <target state="translated">escriba &lt;code&gt;exit&lt;/code&gt; , o</target>
        </trans-unit>
        <trans-unit id="8f17cfc3a44394fc7a0575f4eb71f3dbd5d29eb7" translate="yes" xml:space="preserve">
          <source>type &lt;code&gt;quit&lt;/code&gt;</source>
          <target state="translated">escriba &lt;code&gt;quit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51e69892ab49df85c6230ccc57f8e1d1606caccc" translate="yes" xml:space="preserve">
          <source>u</source>
          <target state="translated">u</target>
        </trans-unit>
        <trans-unit id="6e5e5b45aaa91b76b5567fa66b0d05fe7289fd30" translate="yes" xml:space="preserve">
          <source>ulimit</source>
          <target state="translated">ulimit</target>
        </trans-unit>
        <trans-unit id="6f97e285ade4768f7a97feb604606ad49d5d73d5" translate="yes" xml:space="preserve">
          <source>ulimit - set or get resource usage limits</source>
          <target state="translated">ulimit-establecer u obtener límites de uso de recursos</target>
        </trans-unit>
        <trans-unit id="4b824f445e8d64ec6f262547c18a3ab02a6fd22c" translate="yes" xml:space="preserve">
          <source>umask</source>
          <target state="translated">umask</target>
        </trans-unit>
        <trans-unit id="40ce63190ce7b180322f127f1880704153f8b29a" translate="yes" xml:space="preserve">
          <source>umask - set or get the file creation mode mask</source>
          <target state="translated">umask-establecer u obtener la máscara del modo de creación de archivos</target>
        </trans-unit>
        <trans-unit id="0d57c3cb335cbcd6be4a00d2b3759c640eb0d722" translate="yes" xml:space="preserve">
          <source>use:</source>
          <target state="translated">use:</target>
        </trans-unit>
        <trans-unit id="7a38d8cbd20d9932ba948efaa364bb62651d5ad4" translate="yes" xml:space="preserve">
          <source>v</source>
          <target state="translated">v</target>
        </trans-unit>
        <trans-unit id="ed6354b5f4780263c94651c766c76e339fe47f1e" translate="yes" xml:space="preserve">
          <source>vared</source>
          <target state="translated">vared</target>
        </trans-unit>
        <trans-unit id="095ed909fb13c4817a8aeb74a62b6468a254ca8d" translate="yes" xml:space="preserve">
          <source>vared - interactively edit the value of an environment variable</source>
          <target state="translated">vared-editar interactivamente el valor de una variable de entorno</target>
        </trans-unit>
        <trans-unit id="aff024fe4ab0fece4091de044c58c9ae4233383a" translate="yes" xml:space="preserve">
          <source>w</source>
          <target state="translated">w</target>
        </trans-unit>
        <trans-unit id="daaad336276d15594d0e765f96c17cd746bf4971" translate="yes" xml:space="preserve">
          <source>wait</source>
          <target state="translated">wait</target>
        </trans-unit>
        <trans-unit id="5dc68f4d1dfb375d9f030f65dae3398df707ba38" translate="yes" xml:space="preserve">
          <source>wait - wait for jobs to complete</source>
          <target state="translated">espera...espera a que los trabajos se completen</target>
        </trans-unit>
        <trans-unit id="daca2c7abafe19aed94611021e5a4bbeb2584565" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;__fish_contains_opt&lt;/code&gt; is a function that checks the command line buffer for the presence of a specified set of options.</source>
          <target state="translated">donde &lt;code&gt;__fish_contains_opt&lt;/code&gt; es una funci&amp;oacute;n que comprueba el b&amp;uacute;fer de la l&amp;iacute;nea de comandos para detectar la presencia de un conjunto espec&amp;iacute;fico de opciones.</target>
        </trans-unit>
        <trans-unit id="489a6e620233cc9d22541565dff2f3ac8a1d932a" translate="yes" xml:space="preserve">
          <source>which is logically equivalent to the following:</source>
          <target state="translated">que es lógicamente equivalente a lo siguiente:</target>
        </trans-unit>
        <trans-unit id="e4ec9462a2d8e172d25ff75ec2959c26ca05d502" translate="yes" xml:space="preserve">
          <source>which will replace &lt;code&gt;$HOME&lt;/code&gt; with the home directory of the current user, and pass it to &lt;a href=&quot;cmds/echo#cmd-echo&quot;&gt;echo&lt;/a&gt;, which will then print it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6517f89c46c3f0d6db9cb009b8c7d1f98c371fa0" translate="yes" xml:space="preserve">
          <source>while</source>
          <target state="translated">while</target>
        </trans-unit>
        <trans-unit id="1ff56800352145ff9f9300f91d5ae15e85c17b92" translate="yes" xml:space="preserve">
          <source>while - perform a command multiple times</source>
          <target state="translated">mientras que-realizar un comando varias veces</target>
        </trans-unit>
        <trans-unit id="25b1988adfe7e0d7444629d88b12c26851d9878a" translate="yes" xml:space="preserve">
          <source>will attempt to build &lt;code&gt;fish&lt;/code&gt;, and any errors will be shown using the &lt;code&gt;less&lt;/code&gt; pager. &lt;a href=&quot;#id6&quot; id=&quot;id5&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a605898fdfaef482c78ebc3e9e8274f6d32b1cba" translate="yes" xml:space="preserve">
          <source>will attempt to build the fish program, and any errors will be shown using the less pager.</source>
          <target state="translated">intentará construir el programa de peces,y cualquier error será mostrado usando el buscador menos.</target>
        </trans-unit>
        <trans-unit id="e99b731e0ff1040d87b00c1c061573852dcca4b4" translate="yes" xml:space="preserve">
          <source>will call the &lt;code&gt;cat&lt;/code&gt; program with the parameter 'foo.txt', which will print the contents of the file 'foo.txt'. The contents of foo.txt will then be filtered through the program 'head', which will pass on the first ten lines of the file to the screen. For more information on how to combine commands through pipes, read the manual pages of the commands you want to use using the &lt;code&gt;man&lt;/code&gt; command. If you want to find out more about the &lt;code&gt;cat&lt;/code&gt; program, type &lt;code&gt;man cat&lt;/code&gt;.</source>
          <target state="translated">llamar&amp;aacute; al programa &lt;code&gt;cat&lt;/code&gt; con el par&amp;aacute;metro 'foo.txt', que imprimir&amp;aacute; el contenido del archivo 'foo.txt'. El contenido de foo.txt luego se filtrar&amp;aacute; a trav&amp;eacute;s del programa 'head', que pasar&amp;aacute; las primeras diez l&amp;iacute;neas del archivo a la pantalla. Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre c&amp;oacute;mo combinar comandos a trav&amp;eacute;s de tuber&amp;iacute;as, lea las p&amp;aacute;ginas del manual de los comandos que desea utilizar con el comando &lt;code&gt;man&lt;/code&gt; . Si desea obtener m&amp;aacute;s informaci&amp;oacute;n sobre el programa &lt;code&gt;cat&lt;/code&gt; , escriba &lt;code&gt;man cat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="141c890a6202644da5691b7c5b0e35e1c3a28150" translate="yes" xml:space="preserve">
          <source>will correctly handle all possible filenames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f90dd9d23be8337725ae656ed3cfa89ed7879d" translate="yes" xml:space="preserve">
          <source>will exit fish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630c6277ef5b71afbf2a06648d71798f94288011" translate="yes" xml:space="preserve">
          <source>will look like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966685e1c9f4293af93dfe21ca824e0e6b6f8439" translate="yes" xml:space="preserve">
          <source>will not match any files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb32ee2cc8506bd3923278765899d312c8e070d1" translate="yes" xml:space="preserve">
          <source>will print &quot;Still running&quot; once a second. You can abort it with ctrl-c.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7785e3cc26539256a26ff2186c9bacd6d2acba0" translate="yes" xml:space="preserve">
          <source>will print each file in the current directory. The part after the &lt;code&gt;in&lt;/code&gt; is just a list of arguments, so you can use any &lt;a href=&quot;#expand&quot;&gt;expansions&lt;/a&gt; there:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5f8dfda25d3d985781b69dcb1b285ae55e913d" translate="yes" xml:space="preserve">
          <source>will run the &lt;code&gt;ls&lt;/code&gt; command, using the &lt;code&gt;-l&lt;/code&gt; option, while passing on any additional files and switches to &lt;code&gt;ls&lt;/code&gt;.</source>
          <target state="translated">ejecutar&amp;aacute; el comando &lt;code&gt;ls&lt;/code&gt; , usando la opci&amp;oacute;n &lt;code&gt;-l&lt;/code&gt; , mientras pasa cualquier archivo adicional y cambia a &lt;code&gt;ls&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a80dacfdcbb824e4242afb200ba1d4cc653f254c" translate="yes" xml:space="preserve">
          <source>will start the emacs text editor in the background.</source>
          <target state="translated">iniciará el editor de texto del Emacs en el fondo.</target>
        </trans-unit>
        <trans-unit id="d1d75cd7cc4281f76ff078047e3be6d7cedaf790" translate="yes" xml:space="preserve">
          <source>will start the emacs text editor in the background. &lt;a href=&quot;cmds/fg#cmd-fg&quot;&gt;fg&lt;/a&gt; can be used to bring it into the foreground again when needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875af98e94b5a2e2425bd92b03433e7c0f34dfa0" translate="yes" xml:space="preserve">
          <source>would remove the two files 'cumbersome' and 'filename.txt'.</source>
          <target state="translated">eliminaría los dos archivos &quot;incómodo&quot; y &quot;nombre de archivo.txt&quot;.</target>
        </trans-unit>
        <trans-unit id="11f6ad8ec52a2984abaafd7c3b516503785c2072" translate="yes" xml:space="preserve">
          <source>x</source>
          <target state="translated">x</target>
        </trans-unit>
        <trans-unit id="395df8f7c51f007019cb30201c49e884b46b92fa" translate="yes" xml:space="preserve">
          <source>z</source>
          <target state="translated">z</target>
        </trans-unit>
        <trans-unit id="a3a2eec2845ee2f80c71dfef84d6490233a37da5" translate="yes" xml:space="preserve">
          <source>zsh also does not perform word splitting by default (the SH_WORD_SPLIT option controls this)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a0af54dc40375f31315ce113198bf3d8cca387" translate="yes" xml:space="preserve">
          <source>~/stuff/script.sh (Executable, 4.8kB) ~/stuff/sources/ (Directory)</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
