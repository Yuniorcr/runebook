<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="kotlin">
    <body>
      <group id="kotlin">
        <trans-unit id="abb8332dea269450ae077d0adbca55842af73acc" translate="yes" xml:space="preserve">
          <source>Enabling new language constructs or relaxing limitations for existing ones.</source>
          <target state="translated">新しい言語構成を有効にしたり、既存の言語構成の制限を緩和したりすることができます。</target>
        </trans-unit>
        <trans-unit id="4c2ffe42c69d5ce80645de8283c5fe8b7275fcc3" translate="yes" xml:space="preserve">
          <source>Enabling the progressive mode can require you to rewrite some of your code, but it shouldn't be too much &amp;mdash; all the fixes which are enabled under progressive are carefully handpicked, reviewed, and provided with tooling migration assistance. We expect that the progressive mode will be a nice choice for any actively maintained codebases which are updated to the latest language versions quickly.</source>
          <target state="translated">プログレッシブモードを有効にすると、コードの一部を書き直す必要がある場合がありますが、多すぎないはずです。プログレッシブで有効になっているすべての修正は、慎重に厳選され、レビューされ、ツールの移行支援が提供されます。プログレッシブモードは、最新の言語バージョンに迅速に更新されるアクティブに維持されているコードベースに最適です。</target>
        </trans-unit>
        <trans-unit id="2410e31d2a877c1bca39654727da50311a1d23ee" translate="yes" xml:space="preserve">
          <source>Encodes the contents of this string using the specified character set and returns the resulting byte array.</source>
          <target state="translated">指定した文字セットを使用してこの文字列の内容をエンコードし、結果のバイト配列を返します。</target>
        </trans-unit>
        <trans-unit id="3f94b91ab41430c97f9da4fe715cc87bf63669d1" translate="yes" xml:space="preserve">
          <source>Encodes this string or its substring to an array of bytes in UTF-8 encoding.</source>
          <target state="translated">この文字列またはその部分文字列を UTF-8 エンコーディングでバイトの配列にエンコードします。</target>
        </trans-unit>
        <trans-unit id="88952b65da85f578e3d056e4d7d39e21191d2a4d" translate="yes" xml:space="preserve">
          <source>Encodes this string to an array of bytes in UTF-8 encoding.</source>
          <target state="translated">この文字列を UTF-8 エンコーディングでバイトの配列にエンコードします。</target>
        </trans-unit>
        <trans-unit id="752bbbb87dd3115da1a40245829529cffbed52a4" translate="yes" xml:space="preserve">
          <source>EndOfStreamError</source>
          <target state="translated">EndOfStreamError</target>
        </trans-unit>
        <trans-unit id="bb8b40e15e7a0d132d4cadb4f68ce8979db564cf" translate="yes" xml:space="preserve">
          <source>Ensures that the capacity of this string builder is at least equal to the specified &lt;a href=&quot;ensure-capacity#kotlin.text.StringBuilder%24ensureCapacity(kotlin.Int)/minimumCapacity&quot;&gt;minimumCapacity&lt;/a&gt;.</source>
          <target state="translated">この文字列ビルダーの容量が、指定された&lt;a href=&quot;ensure-capacity#kotlin.text.StringBuilder%24ensureCapacity(kotlin.Int)/minimumCapacity&quot;&gt;minimumCapacity&lt;/a&gt;と少なくとも等しいことを確認します。</target>
        </trans-unit>
        <trans-unit id="656cfef3d626370283d844f1c61d9217f8d3fc5b" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="c592b5bc49281936513ba6081997d620718c7dcd" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Double%2C+kotlin.Double%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Double%2C+kotlin.Double%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="c4d569d86f5e35ed053e3095ef0285e60445aa23" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Float%2C+kotlin.Float%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Float%2C+kotlin.Float%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="01135ec86d1739e9090b30f685121d042b98c431" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Int%2C+kotlin.Int%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Int%2C+kotlin.Int%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="782dedb2a5052cdfca76c5418b3162085b7deb93" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Long%2C+kotlin.Long%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Long%2C+kotlin.Long%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="28d8a80170f1b7416ef2bbfda2c35a7b80bbd456" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Short%2C+kotlin.Short%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Short%2C+kotlin.Short%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="96f261db16afa8da791496781fa8009ef354ed31" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UByte%2C+kotlin.UByte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UByte%2C+kotlin.UByte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="1b4b1359b18c494e43aef182294b0330cf92da20" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="6fe4f25db6853a8b3399272a411c26fa0c6f64e4" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ULong%2C+kotlin.ULong%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ULong%2C+kotlin.ULong%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="d019645cd6ba1dd386fdea2df4fad88850b31329" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UShort%2C+kotlin.UShort%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UShort%2C+kotlin.UShort%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="9529283362371ceb35f0c46be993c6b3d319d9a2" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ranges.coerceAtMost.T%2C+kotlin.ranges.coerceAtMost.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ranges.coerceAtMost.T%2C+kotlin.ranges.coerceAtMost.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="6997d8f7dbfe1fa20db2937c073c4724dd2997be" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.Byte,%20kotlin.Byte)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.Byte,%20kotlin.Byte)/maximumValue&quot;&gt;maximumValueを&lt;/a&gt;超えないようにします。</target>
        </trans-unit>
        <trans-unit id="86e8fc81637d8ace88c581395e63586def27c344" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.Double,%20kotlin.Double)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.Double,%20kotlin.Double)/maximumValue&quot;&gt;maximumValueを&lt;/a&gt;超えないようにします。</target>
        </trans-unit>
        <trans-unit id="0389a8845eb122fa610999e09aced5d48ac0c1f2" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.Float,%20kotlin.Float)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.Float,%20kotlin.Float)/maximumValue&quot;&gt;maximumValueを&lt;/a&gt;超えないようにします。</target>
        </trans-unit>
        <trans-unit id="597722d2339a16bc524d6fb0150bd5b54ebfd067" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.Int,%20kotlin.Int)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.Int,%20kotlin.Int)/maximumValue&quot;&gt;maximumValueを&lt;/a&gt;超えないようにします。</target>
        </trans-unit>
        <trans-unit id="4d7aaf681f2ed485db43ae1dbe491eddf82a6a46" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.Long,%20kotlin.Long)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.Long,%20kotlin.Long)/maximumValue&quot;&gt;maximumValueを&lt;/a&gt;超えないようにします。</target>
        </trans-unit>
        <trans-unit id="48888b3c04d1a4b29567c99f2468dcee557a5d73" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.Short,%20kotlin.Short)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.Short,%20kotlin.Short)/maximumValue&quot;&gt;maximumValueを&lt;/a&gt;超えないようにします。</target>
        </trans-unit>
        <trans-unit id="8a41beb01fa0d22c4af7ecef7e67217beda034f4" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.UByte,%20kotlin.UByte)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.UByte,%20kotlin.UByte)/maximumValue&quot;&gt;maximumValueを&lt;/a&gt;超えないようにします。</target>
        </trans-unit>
        <trans-unit id="96fe0a737f038a98d8835809a73de94fc9411015" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.UInt,%20kotlin.UInt)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.UInt,%20kotlin.UInt)/maximumValue&quot;&gt;maximumValueを&lt;/a&gt;超えないようにします。</target>
        </trans-unit>
        <trans-unit id="a383d483a6a5f6a5893d37cfa14ca4f423eec804" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.ULong,%20kotlin.ULong)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.ULong,%20kotlin.ULong)/maximumValue&quot;&gt;maximumValueを&lt;/a&gt;超えないようにします。</target>
        </trans-unit>
        <trans-unit id="b0633f6333d4f7da0f77e6dcfd64dd331d10add8" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.UShort,%20kotlin.UShort)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.UShort,%20kotlin.UShort)/maximumValue&quot;&gt;maximumValueを&lt;/a&gt;超えないようにします。</target>
        </trans-unit>
        <trans-unit id="2672a16b3323892160b1f1dac2d41f493ce3cd97" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.ranges.coerceAtMost.T,%20kotlin.ranges.coerceAtMost.T)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.ranges.coerceAtMost.T,%20kotlin.ranges.coerceAtMost.T)/maximumValue&quot;&gt;maximumValueを&lt;/a&gt;超えないようにします。</target>
        </trans-unit>
        <trans-unit id="50723df44a240655f71b8614db9893e98a21ef6f" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="e42a63eec0e0ac707883c94b742178f1e9594b87" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="aa0fb34e21f56f306e812998113d1de03910c92a" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ranges.coerceAtMost.T%2C+kotlin.ranges.coerceAtMost.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ranges.coerceAtMost.T%2C+kotlin.ranges.coerceAtMost.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="b9c975c0f6e92eb43c4aa7422ed77946dd8a3173" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.Byte,%20kotlin.Byte)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.Byte,%20kotlin.Byte)/maximumValue&quot;&gt;maximumValueを&lt;/a&gt;超えないようにします。</target>
        </trans-unit>
        <trans-unit id="be5afa93243a74d378807bda1c24cc675fcec9a0" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.UInt,%20kotlin.UInt)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.UInt,%20kotlin.UInt)/maximumValue&quot;&gt;maximumValueを&lt;/a&gt;超えないようにします。</target>
        </trans-unit>
        <trans-unit id="dc03b6d8f750e5763b0ba5d288afcc3911a2b402" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.ranges.coerceAtMost.T,%20kotlin.ranges.coerceAtMost.T)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.ranges.coerceAtMost.T,%20kotlin.ranges.coerceAtMost.T)/maximumValue&quot;&gt;maximumValueを&lt;/a&gt;超えないようにします。</target>
        </trans-unit>
        <trans-unit id="19c375d42f4d2bc2a22343af879580c5ad4d21e5" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="aff5083914cd02a8367bf02d8c6d9d277735c245" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Double%2C+kotlin.Double%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Double%2C+kotlin.Double%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="82118e74fa89839e0f5b1d0ee51a20e37feaba18" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Float%2C+kotlin.Float%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Float%2C+kotlin.Float%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="c891a2e60fb263e67ec6c092a1f35152b238f973" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Int%2C+kotlin.Int%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Int%2C+kotlin.Int%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="2caff89d57f8b0a254e5b0252fb4719adf5c08ba" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Long%2C+kotlin.Long%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Long%2C+kotlin.Long%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="3cc25334decfc6b70d3b837359a34a88e8fea2df" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Short%2C+kotlin.Short%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Short%2C+kotlin.Short%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="33b031b5d7c801d8dd6bba00666e31583d30223a" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UByte%2C+kotlin.UByte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UByte%2C+kotlin.UByte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="9305f3aba1f8bd516f1dc6e27469835bae1cee08" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="4e48692d263dcb64f5bf02b631a83489f39138a6" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ULong%2C+kotlin.ULong%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ULong%2C+kotlin.ULong%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="36316603eaa66a130c3357bf0b5a7a8dc86a00fb" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UShort%2C+kotlin.UShort%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UShort%2C+kotlin.UShort%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="075ba07f9a038dea1cec1b9bffd75ea3fb54ff88" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ranges.coerceAtLeast.T%2C+kotlin.ranges.coerceAtLeast.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ranges.coerceAtLeast.T%2C+kotlin.ranges.coerceAtLeast.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="6343bbb8b8c72f8a08bec689c3bba82c81f0ac1c" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.Byte,%20kotlin.Byte)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.Byte,%20kotlin.Byte)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="558b5b7db0d655d9bf9e7c635b6438700cacaaab" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.Double,%20kotlin.Double)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.Double,%20kotlin.Double)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="c3e61e053fc07d01c9d1945b3eeab266aa3b9670" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.Float,%20kotlin.Float)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.Float,%20kotlin.Float)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="8e6b3934c7a4e7d05747d8128334676c8e98040d" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.Int,%20kotlin.Int)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.Int,%20kotlin.Int)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="d76ecb67ee3dfff8c8ca194e4ca59a88af9d7112" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.Long,%20kotlin.Long)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.Long,%20kotlin.Long)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="8cb986c72fab67456a31efa39796de52f2845bfd" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.Short,%20kotlin.Short)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.Short,%20kotlin.Short)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="3ffcb95b5b945d9c2407d39be53e02c1fa2c9698" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.UByte,%20kotlin.UByte)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.UByte,%20kotlin.UByte)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="2b684d6ff1e5b4bfbf253d56cf37d2e10e6cbfc7" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.UInt,%20kotlin.UInt)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.UInt,%20kotlin.UInt)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="ca7b1a1d408a1e92505d73f03be41ed0ac385d10" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.ULong,%20kotlin.ULong)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.ULong,%20kotlin.ULong)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="873c2f7ad066c80e13904e101288005db9ebd2e1" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.UShort,%20kotlin.UShort)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.UShort,%20kotlin.UShort)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="2d15caad7640955027870890cf325c442f4ac87d" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.ranges.coerceAtLeast.T,%20kotlin.ranges.coerceAtLeast.T)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.ranges.coerceAtLeast.T,%20kotlin.ranges.coerceAtLeast.T)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="507af5e9b2513f430e4f9a1ce31c9fab7aa336e5" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="f36efb1bf449faf0a08f50fc913f46918231b6e0" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="01d73e24f39678d08d61c73426cb56114a85dee2" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ranges.coerceAtLeast.T%2C+kotlin.ranges.coerceAtLeast.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ranges.coerceAtLeast.T%2C+kotlin.ranges.coerceAtLeast.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="00e6c3aa3d738086b51ee38bd0cd87f44a99d8cc" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.Byte,%20kotlin.Byte)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.Byte,%20kotlin.Byte)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="53b7135b19a8e4fbfd2a23e6d377f0f9dac533cf" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.UInt,%20kotlin.UInt)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.UInt,%20kotlin.UInt)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="07659b2edab01cc7f3abedf0aa1673e8d3b0d445" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.ranges.coerceAtLeast.T,%20kotlin.ranges.coerceAtLeast.T)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.ranges.coerceAtLeast.T,%20kotlin.ranges.coerceAtLeast.T)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="c09bcc2e5be36bde6659db36215448f4a28b89c9" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="fe8b6e2cc457ae7ed1428d7ffc40e2d0fcf710aa" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.ranges.ClosedRange%28%28kotlin.Long%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.ranges.ClosedRange%28%28kotlin.Long%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="4058a8ea9636c95dbf0246f44c55ceb228dcc108" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.ranges.ClosedRange%28%28kotlin.UInt%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.ranges.ClosedRange%28%28kotlin.UInt%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="7b12ca79e902892991011200a265a52c0a30e043" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ranges.ClosedRange%28%28kotlin.ULong%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ranges.ClosedRange%28%28kotlin.ULong%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="4733bf89476d88bfd608e49b1d8787c7f370e14b" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedFloatingPointRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedFloatingPointRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="79da85e43fc751706696892d54a41a4603fba549" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Int,%20kotlin.ranges.ClosedRange((kotlin.Int)))/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Int,%20kotlin.ranges.ClosedRange((kotlin.Int)))/range&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9c9b746f8cc1a8b436a95c90d0d31218191bb23f" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Long,%20kotlin.ranges.ClosedRange((kotlin.Long)))/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Long,%20kotlin.ranges.ClosedRange((kotlin.Long)))/range&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="dfa938b19c9e5679b85a0534569a441932f683f0" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.ranges.ClosedRange((kotlin.UInt)))/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.ranges.ClosedRange((kotlin.UInt)))/range&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="f5f0ad3d37c12e746c11ca22c44098eeb982eff1" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.ULong,%20kotlin.ranges.ClosedRange((kotlin.ULong)))/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.ULong,%20kotlin.ranges.ClosedRange((kotlin.ULong)))/range&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="a7bfc7ae897fdb0521344dad9a3e880db46eda96" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.ClosedFloatingPointRange((kotlin.ranges.coerceIn.T)))/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.ClosedFloatingPointRange((kotlin.ranges.coerceIn.T)))/range&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="d7504ca10ca1603940a6aac69287285ab9e9410d" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="1b6b1f3c22173369d98500b0fcf1e4da111d1d5b" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.ranges.ClosedRange%28%28kotlin.UInt%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.ranges.ClosedRange%28%28kotlin.UInt%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="7da6f1a8637907fa58f172b3f304c7305656ec41" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedFloatingPointRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedFloatingPointRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="b559c8d692bf7a9afeee0c6bc77448ca1697db5c" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="dab29725331fc3b03030d6b476d3591f1d62b125" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.Int,%20kotlin.ranges.ClosedRange((kotlin.Int)))/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.Int,%20kotlin.ranges.ClosedRange((kotlin.Int)))/range&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="148ebc9b396d8b9a0c12970d5bf86c929a154162" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.ranges.ClosedRange((kotlin.UInt)))/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.ranges.ClosedRange((kotlin.UInt)))/range&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ac794459f199a4d50f4af37571e0ddefcdf51163" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.ClosedFloatingPointRange((kotlin.ranges.coerceIn.T)))/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.ClosedFloatingPointRange((kotlin.ranges.coerceIn.T)))/range&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="a634204749750b92e41160004c0eecbcd27c4c00" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.ClosedRange((kotlin.ranges.coerceIn.T)))/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.ClosedRange((kotlin.ranges.coerceIn.T)))/range&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="7527e719a86974cfa8d1b5adcb94da5cb48f02bf" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="fd5d8f67cc692522c7da3307ea58b5f1af94f560" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Double%2C+kotlin.Double%2C+kotlin.Double%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Double%2C+kotlin.Double%2C+kotlin.Double%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Double%2C+kotlin.Double%2C+kotlin.Double%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Double%2C+kotlin.Double%2C+kotlin.Double%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="42af36c8e18fb9e0145c29d5e1bd9f331959c3b9" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Float%2C+kotlin.Float%2C+kotlin.Float%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Float%2C+kotlin.Float%2C+kotlin.Float%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Float%2C+kotlin.Float%2C+kotlin.Float%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Float%2C+kotlin.Float%2C+kotlin.Float%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9720b4a5e28124e07b76cf2a6fef000470ddbda9" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c20bb0db8819bb5e0f0f4f90f90370a8a1c56930" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.Long%2C+kotlin.Long%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.Long%2C+kotlin.Long%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.Long%2C+kotlin.Long%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.Long%2C+kotlin.Long%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="8d9bdc8f202c573d3d12671fb4b5620791854ff3" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Short%2C+kotlin.Short%2C+kotlin.Short%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Short%2C+kotlin.Short%2C+kotlin.Short%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Short%2C+kotlin.Short%2C+kotlin.Short%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Short%2C+kotlin.Short%2C+kotlin.Short%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="70289eb83c7b23e71ab88b1c7e6e50ab140ba4e5" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UByte%2C+kotlin.UByte%2C+kotlin.UByte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UByte%2C+kotlin.UByte%2C+kotlin.UByte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UByte%2C+kotlin.UByte%2C+kotlin.UByte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UByte%2C+kotlin.UByte%2C+kotlin.UByte%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="d48bc4d50d5dd56a76012fda43c787d319920175" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="3ae8d9596f0becbc9456de88903607686b84ce77" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ULong%2C+kotlin.ULong%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ULong%2C+kotlin.ULong%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ULong%2C+kotlin.ULong%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ULong%2C+kotlin.ULong%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="0fa19a167412bd0da54b14b00304794203a40431" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UShort%2C+kotlin.UShort%2C+kotlin.UShort%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UShort%2C+kotlin.UShort%2C+kotlin.UShort%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UShort%2C+kotlin.UShort%2C+kotlin.UShort%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UShort%2C+kotlin.UShort%2C+kotlin.UShort%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ce38f4a83c7fbcdfa026b1f70a70063b1633ac68" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="b9e0e16f352115d1b09ea903d65edb74e0771f36" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Byte,%20kotlin.Byte,%20kotlin.Byte)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Byte,%20kotlin.Byte,%20kotlin.Byte)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">確実に指定された範囲内でこの値の嘘&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Byte,%20kotlin.Byte,%20kotlin.Byte)/minimumValue&quot;&gt;最小値&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Byte,%20kotlin.Byte,%20kotlin.Byte)/maximumValue&quot;&gt;最大値&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed015be1e875dda2e6ea8bfe4d65d924019e358a" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Double,%20kotlin.Double,%20kotlin.Double)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Double,%20kotlin.Double,%20kotlin.Double)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">確実に指定された範囲内でこの値の嘘&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Double,%20kotlin.Double,%20kotlin.Double)/minimumValue&quot;&gt;最小値&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Double,%20kotlin.Double,%20kotlin.Double)/maximumValue&quot;&gt;最大値&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="951691c553133e198e8da9edcc1bda732938f087" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Float,%20kotlin.Float,%20kotlin.Float)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Float,%20kotlin.Float,%20kotlin.Float)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">確実に指定された範囲内でこの値の嘘&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Float,%20kotlin.Float,%20kotlin.Float)/minimumValue&quot;&gt;最小値&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Float,%20kotlin.Float,%20kotlin.Float)/maximumValue&quot;&gt;最大値&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a8026ff3e503312229befef9c57a52c7e21916e" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Int,%20kotlin.Int,%20kotlin.Int)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Int,%20kotlin.Int,%20kotlin.Int)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">確実に指定された範囲内でこの値の嘘&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Int,%20kotlin.Int,%20kotlin.Int)/minimumValue&quot;&gt;最小値&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Int,%20kotlin.Int,%20kotlin.Int)/maximumValue&quot;&gt;最大値&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b662fcd160f66c01b8c4491ad6ecd7841dcc8aa4" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Long,%20kotlin.Long,%20kotlin.Long)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Long,%20kotlin.Long,%20kotlin.Long)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">確実に指定された範囲内でこの値の嘘&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Long,%20kotlin.Long,%20kotlin.Long)/minimumValue&quot;&gt;最小値&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Long,%20kotlin.Long,%20kotlin.Long)/maximumValue&quot;&gt;最大値&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad60ad3181fc07f7af56834e9c85e9b64e756403" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Short,%20kotlin.Short,%20kotlin.Short)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Short,%20kotlin.Short,%20kotlin.Short)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">確実に指定された範囲内でこの値の嘘&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Short,%20kotlin.Short,%20kotlin.Short)/minimumValue&quot;&gt;最小値&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.Short,%20kotlin.Short,%20kotlin.Short)/maximumValue&quot;&gt;最大値&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6afcfa583bd9fc1bcea318ade11d2ebbe935bb97" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.UByte,%20kotlin.UByte,%20kotlin.UByte)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.UByte,%20kotlin.UByte,%20kotlin.UByte)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">確実に指定された範囲内でこの値の嘘&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.UByte,%20kotlin.UByte,%20kotlin.UByte)/minimumValue&quot;&gt;最小値&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.UByte,%20kotlin.UByte,%20kotlin.UByte)/maximumValue&quot;&gt;最大値&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1cd634c32c0de1bb00d24572a25b28941bc669f2" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.UInt,%20kotlin.UInt)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.UInt,%20kotlin.UInt)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">確実に指定された範囲内でこの値の嘘&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.UInt,%20kotlin.UInt)/minimumValue&quot;&gt;最小値&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.UInt,%20kotlin.UInt)/maximumValue&quot;&gt;最大値&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="77c780574f6d87c4b7d4ed1fbe72c54591eaaa06" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.ULong,%20kotlin.ULong,%20kotlin.ULong)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.ULong,%20kotlin.ULong,%20kotlin.ULong)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">確実に指定された範囲内でこの値の嘘&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.ULong,%20kotlin.ULong,%20kotlin.ULong)/minimumValue&quot;&gt;最小値&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.ULong,%20kotlin.ULong,%20kotlin.ULong)/maximumValue&quot;&gt;最大値&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="daa114f39899f225ba32162474bb6cde7f86bdbb" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.UShort,%20kotlin.UShort,%20kotlin.UShort)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.UShort,%20kotlin.UShort,%20kotlin.UShort)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">確実に指定された範囲内でこの値の嘘&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.UShort,%20kotlin.UShort,%20kotlin.UShort)/minimumValue&quot;&gt;最小値&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.UShort,%20kotlin.UShort,%20kotlin.UShort)/maximumValue&quot;&gt;最大値&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="678fb2812f873ca2e38530fa0911bcaf20707027" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.coerceIn.T?,%20kotlin.ranges.coerceIn.T?)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.coerceIn.T?,%20kotlin.ranges.coerceIn.T?)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">確実に指定された範囲内でこの値の嘘&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.coerceIn.T?,%20kotlin.ranges.coerceIn.T?)/minimumValue&quot;&gt;最小値&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.coerceIn.T?,%20kotlin.ranges.coerceIn.T?)/maximumValue&quot;&gt;最大値&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="647c656799e54b0803ef954fc0e566593ebeec57" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="085b13d77397d17582ba9674bfe9a3b3ef4bc0d0" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="23b80d6e104e5ec2c30cca729487bf7441f1cff3" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="b16b49408c5e79e62d1a8f7df7abe854b237f06e" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.Byte,%20kotlin.Byte,%20kotlin.Byte)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.Byte,%20kotlin.Byte,%20kotlin.Byte)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">確実に指定された範囲内でこの値の嘘&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.Byte,%20kotlin.Byte,%20kotlin.Byte)/minimumValue&quot;&gt;最小値&lt;/a&gt;..&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.Byte,%20kotlin.Byte,%20kotlin.Byte)/maximumValue&quot;&gt;最大値&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="645ae76a2bb0444b463cab9a64fccf07eeafc42c" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.UInt,%20kotlin.UInt)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.UInt,%20kotlin.UInt)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">確実に指定された範囲内でこの値の嘘&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.UInt,%20kotlin.UInt)/minimumValue&quot;&gt;最小値&lt;/a&gt;..&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.UInt,%20kotlin.UInt)/maximumValue&quot;&gt;最大値&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="459ee2ea7b637424c4c236494eb4e4d888d0c111" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.coerceIn.T?,%20kotlin.ranges.coerceIn.T?)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.coerceIn.T?,%20kotlin.ranges.coerceIn.T?)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">確実に指定された範囲内でこの値の嘘&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.coerceIn.T?,%20kotlin.ranges.coerceIn.T?)/minimumValue&quot;&gt;最小値&lt;/a&gt;..&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.coerceIn.T?,%20kotlin.ranges.coerceIn.T?)/maximumValue&quot;&gt;最大値&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c7194e06a3b4d1c91d8aea774c5500019b5129fd" translate="yes" xml:space="preserve">
          <source>Entries of the map are iterated in the order they were specified.</source>
          <target state="translated">マップのエントリは、指定された順に繰り返し実行されます。</target>
        </trans-unit>
        <trans-unit id="19172e9e47fee4109f3d1d86c3076acdc36822f2" translate="yes" xml:space="preserve">
          <source>Entry</source>
          <target state="translated">Entry</target>
        </trans-unit>
        <trans-unit id="20588ae8e5c269292d35f9dfffa8f2eb3fd3c259" translate="yes" xml:space="preserve">
          <source>Enum</source>
          <target state="translated">Enum</target>
        </trans-unit>
        <trans-unit id="35748b339b75707aa86eccdc826e9c484f210273" translate="yes" xml:space="preserve">
          <source>Enum Classes</source>
          <target state="translated">列挙クラス</target>
        </trans-unit>
        <trans-unit id="b2e5e902b1971489c8bd86ea7e44ac1bef195074" translate="yes" xml:space="preserve">
          <source>Enum Values</source>
          <target state="translated">列挙値</target>
        </trans-unit>
        <trans-unit id="385eabe2319af7be5d69418344d6f590f2823047" translate="yes" xml:space="preserve">
          <source>Enum classes</source>
          <target state="translated">列挙クラス</target>
        </trans-unit>
        <trans-unit id="f3d06ea2edda3ee94dd99161b7e1c5b82799818d" translate="yes" xml:space="preserve">
          <source>Enum classes in Kotlin have synthetic methods allowing to list the defined enum constants and to get an enum constant by its name. The signatures of these methods are as follows (assuming the name of the enum class is &lt;code&gt;EnumClass&lt;/code&gt;):</source>
          <target state="translated">Kotlinの列挙型クラスには、定義された列挙型定数を一覧表示し、その名前で列挙型定数を取得できる合成メソッドがあります。これらのメソッドのシグネチャは次のとおりです（列挙型クラスの名前が &lt;code&gt;EnumClass&lt;/code&gt; であると想定）。</target>
        </trans-unit>
        <trans-unit id="2d35f0c004447693d4d6dac78263e9427076fd30" translate="yes" xml:space="preserve">
          <source>Enum constants can also declare their own anonymous classes with their corresponding methods, as well as overriding base methods.</source>
          <target state="translated">列挙定数は、基本メソッドをオーバーライドするだけでなく、対応するメソッドを持つ独自の匿名クラスを宣言することもできます。</target>
        </trans-unit>
        <trans-unit id="937325799c883439aa3b4e58a52c889a2d66fae0" translate="yes" xml:space="preserve">
          <source>Enum constants can also declare their own anonymous classes:</source>
          <target state="translated">列挙定数は、独自の匿名クラスを宣言することもできます。</target>
        </trans-unit>
        <trans-unit id="a0bb971b8a00934d25b661b15120131432511336" translate="yes" xml:space="preserve">
          <source>Enum entries cannot contain nested types other than inner classes (deprecated in Kotlin 1.2).</source>
          <target state="translated">列挙型のエントリには、内部クラス以外の入れ子になった型を含めることはできません (Kotlin 1.2では非推奨)。</target>
        </trans-unit>
        <trans-unit id="f4b6073e28f6c79e9fe65d95b5913ed2917af776" translate="yes" xml:space="preserve">
          <source>Enum that can be used to specify behaviour of the &lt;code&gt;copyRecursively()&lt;/code&gt; function in exceptional conditions.</source>
          <target state="translated">例外的な状況での &lt;code&gt;copyRecursively()&lt;/code&gt; 関数の動作を指定するために使用できる列挙型。</target>
        </trans-unit>
        <trans-unit id="413e9110db4f37157b581483ed8d7133f5021d89" translate="yes" xml:space="preserve">
          <source>Enumerations</source>
          <target state="translated">Enumerations</target>
        </trans-unit>
        <trans-unit id="0b7ef4706b4e2944c06aaa4c03af39bc96de6a9b" translate="yes" xml:space="preserve">
          <source>Enums can be mapped to either Kotlin enum or integral values, depending on heuristics and the &lt;a href=&quot;#definition-file-hints&quot;&gt;definition file hints&lt;/a&gt;.</source>
          <target state="translated">列挙型は、ヒューリスティックと&lt;a href=&quot;#definition-file-hints&quot;&gt;定義ファイルのヒントに&lt;/a&gt;応じて、Kotlin列挙型または整数値のいずれかにマップできます。</target>
        </trans-unit>
        <trans-unit id="7a9900d84e1403f9c455cfd34c5bb3f62971e633" translate="yes" xml:space="preserve">
          <source>Equality</source>
          <target state="translated">Equality</target>
        </trans-unit>
        <trans-unit id="6b22c83cbad3afd7779a656e495c44a1b27cd751" translate="yes" xml:space="preserve">
          <source>Equality and inequality operators</source>
          <target state="translated">等価演算子と不等式演算子</target>
        </trans-unit>
        <trans-unit id="748ebc730a71bae7868135d1accc56922b028b39" translate="yes" xml:space="preserve">
          <source>Equality checks: &lt;code&gt;a == b&lt;/code&gt; and &lt;code&gt;a != b&lt;/code&gt;</source>
          <target state="translated">等価チェック： &lt;code&gt;a == b&lt;/code&gt; および &lt;code&gt;a != b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="039a53d57231960ec224d61b8349bfe18518e3b0" translate="yes" xml:space="preserve">
          <source>Error handling can be complicated. The propagation and chaining of errors aren't always straightforward.</source>
          <target state="translated">エラー処理は複雑です。エラーの伝搬や連鎖は必ずしも簡単なものではありません。</target>
        </trans-unit>
        <trans-unit id="c52aa93f970c79972bc37d5c3c59e2a8620d085a" translate="yes" xml:space="preserve">
          <source>Error handling is complicated. The nesting model makes error handling and propagation of these somewhat more complicated.</source>
          <target state="translated">エラー処理は複雑です。ネスティングモデルは、これらのエラー処理と伝搬をやや複雑にします。</target>
        </trans-unit>
        <trans-unit id="78f2140dbbcc9fd8d65b0ee8b553a347bb18737b" translate="yes" xml:space="preserve">
          <source>ErrorEventInit</source>
          <target state="translated">ErrorEventInit</target>
        </trans-unit>
        <trans-unit id="358338848dd4deed29a7bd14128aad9bacc42494" translate="yes" xml:space="preserve">
          <source>Errors and exceptions</source>
          <target state="translated">エラーと例外</target>
        </trans-unit>
        <trans-unit id="b0063eeadf598a7f91e76579d25f31225af1d74a" translate="yes" xml:space="preserve">
          <source>Escaping for Java identifiers that are keywords in Kotlin</source>
          <target state="translated">Kotlin のキーワードである Java 識別子をエスケープする</target>
        </trans-unit>
        <trans-unit id="1d25fd0a9340484bebe5803f5ab67a703d5f008c" translate="yes" xml:space="preserve">
          <source>Escaping is done in the conventional way, with a backslash. See &lt;a href=&quot;#characters&quot;&gt;Characters&lt;/a&gt; above for the list of supported escape sequences.</source>
          <target state="translated">エスケープは、バックスラッシュを使用して従来の方法で行われます。サポートされているエスケープシーケンスのリストについては、上記の&lt;a href=&quot;#characters&quot;&gt;文字を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="464bcf67e05f1cbf0906991536252d129ac717da" translate="yes" xml:space="preserve">
          <source>Essentially, coroutines are light-weight threads. They are launched with &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html&quot;&gt;launch&lt;/a&gt;&lt;em&gt;coroutine builder&lt;/em&gt; in a context of some &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScope&lt;/a&gt;. Here we are launching a new coroutine in the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt;, meaning that the lifetime of the new coroutine is limited only by the lifetime of the whole application.</source>
          <target state="translated">基本的に、コルーチンは軽量のスレッドです。これらは、いくつかの&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScopeの&lt;/a&gt;コンテキストで&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html&quot;&gt;起動&lt;/a&gt;&lt;em&gt;コルーチンビルダーを使用&lt;/em&gt;して起動されます。ここでは、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt;で新しいコルーチンを起動します。つまり、新しいコルーチンの有効期間は、アプリケーション全体の有効期間によってのみ制限されます。</target>
        </trans-unit>
        <trans-unit id="c10f3e33eb7fdf58c0e3673d8f5975481200d9d0" translate="yes" xml:space="preserve">
          <source>Essentially, coroutines are light-weight threads. They are launched with &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html&quot;&gt;launch&lt;/a&gt;&lt;em&gt;coroutine builder&lt;/em&gt; in a context of some &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;CoroutineScope&lt;/a&gt;. Here we are launching a new coroutine in the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt;, meaning that the lifetime of the new coroutine is limited only by the lifetime of the whole application.</source>
          <target state="translated">基本的に、コルーチンは軽量スレッドです。これらは、一部の&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;CoroutineScopeの&lt;/a&gt;コンテキストで、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html&quot;&gt;起動&lt;/a&gt;&lt;em&gt;コルーチンビルダーを使用&lt;/em&gt;して起動されます。ここでは、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt;で新しいコルーチンを起動しています。つまり、新しいコルーチンの存続期間は、アプリケーション全体の存続期間によってのみ制限されます。</target>
        </trans-unit>
        <trans-unit id="59a9b2e5945e0cbc814d0dde5b0e8a0a95ba5259" translate="yes" xml:space="preserve">
          <source>Evaluation order of constructor arguments regarding &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt; call</source>
          <target state="translated">&lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt; 呼び出しに関するコンストラクター引数の評価順序</target>
        </trans-unit>
        <trans-unit id="2d12eda121ccf292f1e6f3b8e534f5576492a3f2" translate="yes" xml:space="preserve">
          <source>Even if you don't know Python, this document should hopefully be a useful introduction to Kotlin, in particular if you are used to other dynamically typed languages. However, if you're coming from a Java background, you're probably better off diving directly into the excellent &lt;a href=&quot;../../reference/index&quot;&gt;official docs&lt;/a&gt; (from which this doc has drawn a lot of inspiration). To some extent, you can try to write Java code and look stuff up whenever what you're trying to do doesn't work - and some IDEs can even automatically convert Java code to Kotlin.</source>
          <target state="translated">Pythonを知らなくても、特に他の動的型付け言語に慣れている場合は、このドキュメントがKotlinの有用な入門書になるはずです。ただし、Javaのバックグラウンドを使用している場合は、優れた&lt;a href=&quot;../../reference/index&quot;&gt;公式ドキュメントに&lt;/a&gt;直接飛び込む方がよいでしょう（このドキュメントから多くのインスピレーションを得ています）。ある程度までは、Javaコードを記述して、実行しようとしていることがうまくいかないときはいつでも調べてみてください。一部のIDEは、Javaコードを自動的にKotlinに変換することもできます。</target>
        </trans-unit>
        <trans-unit id="e9ecf8ca9a3f1b27484055f2b1906e1ef4a4efef" translate="yes" xml:space="preserve">
          <source>Even if your type is not supported directly, you can write a &lt;code&gt;Parceler&lt;/code&gt; mapping object for it.</source>
          <target state="translated">タイプが直接サポートされていない場合でも、 &lt;code&gt;Parceler&lt;/code&gt; マッピングオブジェクトを作成できます。</target>
        </trans-unit>
        <trans-unit id="aea29208b1c90e49c372500ccead9244a9c7a1fb" translate="yes" xml:space="preserve">
          <source>Even more examples are on &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples&quot;&gt;GitHub&lt;/a&gt;</source>
          <target state="translated">さらに多くの例が&lt;a href=&quot;https://github.com/JetBrains/kotlin-examples&quot;&gt;GitHubにあります&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d8c30df9df1ce8e280dcdfa32923dbef67a465a" translate="yes" xml:space="preserve">
          <source>Even more examples are on &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples&quot;&gt;GitHub&lt;/a&gt;.</source>
          <target state="translated">さらに多くの例が&lt;a href=&quot;https://github.com/JetBrains/kotlin-examples&quot;&gt;GitHubにあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d24661b45a9b7dc04b6be2ca608d41b28761de8a" translate="yes" xml:space="preserve">
          <source>Even more specifically, if you declare a &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;companion object&lt;/a&gt; inside your class, you can access its members using only the class name as a qualifier.</source>
          <target state="translated">さらに具体的には、クラス内で&lt;a href=&quot;object-declarations#companion-objects&quot;&gt;コンパニオンオブジェクト&lt;/a&gt;を宣言すると、修飾子としてクラス名のみを使用してそのメンバーにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="a1385120f004f9f61f7aeb2f15c759f3b41d4f34" translate="yes" xml:space="preserve">
          <source>Even more specifically, if you declare a &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;companion object&lt;/a&gt; inside your class, you'll be able to call its members with the same syntax as calling static methods in Java/C#, using only the class name as a qualifier.</source>
          <target state="translated">さらに具体的には、クラス内で&lt;a href=&quot;object-declarations#companion-objects&quot;&gt;コンパニオンオブジェクト&lt;/a&gt;を宣言すると、クラス名のみを修飾子として使用して、Java / C＃で静的メソッドを呼び出すのと同じ構文でそのメンバーを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="3897d9606879be1a26c2336653ed95ac6602ce46" translate="yes" xml:space="preserve">
          <source>Even so, sometimes we have high-level program logic that implies type safety instead. For example:</source>
          <target state="translated">それでも、代わりに型の安全性を暗示するような高レベルのプログラムロジックがあることもあります。例えば、以下のようなものです。</target>
        </trans-unit>
        <trans-unit id="dbd96bf60af2cd93858a146fdca307b624b21c7a" translate="yes" xml:space="preserve">
          <source>Even though it is the most preferred way to provide OSGi support, unfortunately it couldn't be done for now due to so called &lt;a href=&quot;http://wiki.osgi.org/wiki/Split_Packages&quot;&gt;&quot;package split&quot; issue&lt;/a&gt; that couldn't be easily eliminated and such a big change is not planned for now. There is &lt;code&gt;Require-Bundle&lt;/code&gt; feature but it is not the best option too and not recommended to use. So it was decided to make a separate artifact for OSGi.</source>
          <target state="translated">これはOSGiサポートを提供するための最も好ましい方法ですが、残念ながら、現時点では実行できませんでした。これは、いわゆる&lt;a href=&quot;http://wiki.osgi.org/wiki/Split_Packages&quot;&gt;「パッケージ分割」の問題&lt;/a&gt;により簡単に解消できず、そのような大きな変更は現時点では予定されていません。ある &lt;code&gt;Require-Bundle&lt;/code&gt; 機能が、それはあまりにもしていない使用することをお勧め最高のオプションではありません。そのため、OSGi用に別のアーティファクトを作成することが決定されました。</target>
        </trans-unit>
        <trans-unit id="dcd39b20440b49172a45b9ff20743790f496a088" translate="yes" xml:space="preserve">
          <source>Even when we navigate with an index, it does not introduce any overhead:</source>
          <target state="translated">インデックスでナビゲートする場合でも、オーバーヘッドは発生しません。</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="564c33e26b4fec29a028538c0231da4cb00a4e5b" translate="yes" xml:space="preserve">
          <source>EventInit</source>
          <target state="translated">EventInit</target>
        </trans-unit>
        <trans-unit id="0df10d5eb9f31c564291131f6209eb2538b12219" translate="yes" xml:space="preserve">
          <source>EventListener</source>
          <target state="translated">EventListener</target>
        </trans-unit>
        <trans-unit id="ac26147cb05290648f581f7f492a1f694d0c3ae7" translate="yes" xml:space="preserve">
          <source>EventListenerOptions</source>
          <target state="translated">EventListenerOptions</target>
        </trans-unit>
        <trans-unit id="f03fb9318f09e45d9f3193bb10d8e5967dae15e7" translate="yes" xml:space="preserve">
          <source>EventModifierInit</source>
          <target state="translated">EventModifierInit</target>
        </trans-unit>
        <trans-unit id="7618aa295e59ea02d44ad33999a0594b78372453" translate="yes" xml:space="preserve">
          <source>EventSourceInit</source>
          <target state="translated">EventSourceInit</target>
        </trans-unit>
        <trans-unit id="06d2da8cd620cdca5a8c4a25bc54d444bda9ad32" translate="yes" xml:space="preserve">
          <source>EventTarget</source>
          <target state="translated">EventTarget</target>
        </trans-unit>
        <trans-unit id="073c07d94b8dd1ed6194a2e9a28519adc1dcd7c9" translate="yes" xml:space="preserve">
          <source>Ever since version 1.0, Kotlin supported expressions with complex control flow, such as try-catch expressions and inline function calls. Such code is valid according to the Java Virtual Machine specification. Unfortunately, some bytecode processing tools do not handle such code quite well when such expressions are present in the arguments of constructor calls.</source>
          <target state="translated">Kotlinはバージョン1.0以降、トライキャッチ式やインライン関数呼び出しなどの複雑な制御フローを持つ式をサポートしています。このようなコードは Java Virtual Machine の仕様に従って有効です。残念ながら、バイトコード処理ツールの中には、コンストラクタ呼び出しの引数にこのような式が含まれている場合には、そのようなコードをうまく処理できないものもあります。</target>
        </trans-unit>
        <trans-unit id="8e9af70e11b1ca73e5219a9e463119c7c9692b0b" translate="yes" xml:space="preserve">
          <source>Every Android developer knows well the &lt;code&gt;findViewById()&lt;/code&gt; function. It is, without a doubt, a source of potential bugs and nasty code which is hard to read and support. While there are several libraries available that provide solutions to this problem, those libraries require annotating fields for each exposed &lt;code&gt;View&lt;/code&gt;.</source>
          <target state="translated">すべてのAndroid開発者は、 &lt;code&gt;findViewById()&lt;/code&gt; 関数をよく知っています。それは間違いなく、潜在的なバグと厄介なコードのソースであり、読み取りとサポートが困難です。この問題の解決策を提供するライブラリがいくつかありますが、それらのライブラリには、公開された各 &lt;code&gt;View&lt;/code&gt; に注釈フィールドが必要です。</target>
        </trans-unit>
        <trans-unit id="d44024cf002cece75b7307b0c5a4734b9f467460" translate="yes" xml:space="preserve">
          <source>Every C macro that expands to a constant is represented as a Kotlin property. Other macros are not supported. However, they can be exposed manually by wrapping them with supported declarations. E.g. function-like macro &lt;code&gt;FOO&lt;/code&gt; can be exposed as function &lt;code&gt;foo&lt;/code&gt; by &lt;a href=&quot;#adding-custom-declarations&quot;&gt;adding the custom declaration&lt;/a&gt; to the library:</source>
          <target state="translated">定数に展開されるすべてのCマクロは、Kotlinプロパティとして表されます。他のマクロはサポートされていません。ただし、サポートされている宣言でラップすることにより、手動で公開できます。たとえば、関数のようなマクロ &lt;code&gt;FOO&lt;/code&gt; は&lt;a href=&quot;#adding-custom-declarations&quot;&gt;、カスタム宣言&lt;/a&gt;をライブラリに追加することにより、関数 &lt;code&gt;foo&lt;/code&gt; として公開できます。</target>
        </trans-unit>
        <trans-unit id="e28c8f8f3e50c8bace74c95cde8a3b93f881cbbf" translate="yes" xml:space="preserve">
          <source>Every Kotlin course created with EduTools is structured as a list of lessons. Each lesson contains tasks. A task has the following components: a description, a &lt;code&gt;Task.kt&lt;/code&gt; file with exercise code, a &lt;code&gt;Tests.kt&lt;/code&gt; file with the task check, and any other files needed for the learner to complete the task.</source>
          <target state="translated">EduToolsで作成されたすべてのKotlinコースは、レッスンのリストとして構成されています。各レッスンにはタスクが含まれています。説明：タスクは、以下のコンポーネントがあり &lt;code&gt;Task.kt&lt;/code&gt; の行使コードでファイル &lt;code&gt;Tests.kt&lt;/code&gt; のタスクのチェックとファイル、およびタスクを完了するために、学習者のために必要な任意の他のファイルを。</target>
        </trans-unit>
        <trans-unit id="712f339f3b7f6b2c24d611d29b336e0fa8a399cb" translate="yes" xml:space="preserve">
          <source>Every Kotlin file should belong to a &lt;em&gt;package&lt;/em&gt;. This is somewhat similar to modules in Python, but files need to explicitly declare which package they belong to, and a package implicitly comes into existence whenever any file declares itself to belong to that package (as opposed to explicitly defining a module with &lt;code&gt;__init__.py&lt;/code&gt; and having all the files in that directory implicitly belong to the module). The package declaration must go on the top of the file:</source>
          <target state="translated">すべてのKotlinファイルは&lt;em&gt;パッケージに&lt;/em&gt;属している必要があり&lt;em&gt;ます&lt;/em&gt;。これはPythonのモジュールにいくぶん似ていますが、ファイルはそれらが属するパッケージを明示的に宣言する必要があり、ファイルがそのパッケージに属することを宣言すると、パッケージは暗黙的に存在します（ &lt;code&gt;__init__.py&lt;/code&gt; でモジュールを明示的に定義するのではなく）そして、そのディレクトリ内のすべてのファイルがモジュールに暗黙的に属している）。パッケージ宣言はファイルの先頭に置く必要があります：</target>
        </trans-unit>
        <trans-unit id="957184e810ecd33124979aa181b56fb181e3cf91" translate="yes" xml:space="preserve">
          <source>Every block tag begins on a new line and starts with the &lt;code&gt;@&lt;/code&gt; character.</source>
          <target state="translated">すべてのブロックタグは新しい行で始まり、 &lt;code&gt;@&lt;/code&gt; 文字で始まります。</target>
        </trans-unit>
        <trans-unit id="ef355dc6d7b5ce7246012bd3c8a9e56856406957" translate="yes" xml:space="preserve">
          <source>Every class that doesn't explicitly declare a parent class inherits from &lt;code&gt;Any&lt;/code&gt;, which is the root of the class hierarchy (similar to &lt;code&gt;object&lt;/code&gt; in Python) - more on &lt;a href=&quot;inheritance&quot;&gt;inheritance&lt;/a&gt; later. Via &lt;code&gt;Any&lt;/code&gt;, every class automatically has the following functions:</source>
          <target state="translated">親クラスを明示的に宣言していないすべてのクラスは、クラス階層のルートである &lt;code&gt;Any&lt;/code&gt; から継承します（Pythonの &lt;code&gt;object&lt;/code&gt; と同様）- &lt;a href=&quot;inheritance&quot;&gt;継承については&lt;/a&gt;後で詳しく説明します。 &lt;code&gt;Any&lt;/code&gt; を介して、すべてのクラスに自動的に次の機能があります。</target>
        </trans-unit>
        <trans-unit id="b953ba083693f71dab9d629490a3304ec341e941" translate="yes" xml:space="preserve">
          <source>Every enum constant has properties to obtain its name and position in the enum class declaration:</source>
          <target state="translated">すべての列挙定数は、その名前と列挙クラス宣言の位置を取得するためのプロパティを持っています。</target>
        </trans-unit>
        <trans-unit id="bcac05684e2dee81d1bf6970400ecaf8f8b3e967" translate="yes" xml:space="preserve">
          <source>Every file implicitly imports its own package and a number of built-in Kotlin and Java packages.</source>
          <target state="translated">すべてのファイルは暗黙のうちに独自のパッケージと、多くの組み込みの Kotlin と Java パッケージをインポートしています。</target>
        </trans-unit>
        <trans-unit id="fa667469f4a415e1b99572742732f58821dc8630" translate="yes" xml:space="preserve">
          <source>Every number type has a class method to create a new instance from the related simple type. Also, there is an instance method to extract a simple value back. Schematically, declarations look like that:</source>
          <target state="translated">すべての数値型には、関連する単純型から新しいインスタンスを生成するクラスメソッドがあります。また、単純な値を取り出すためのインスタンスメソッドもあります。宣言は図式的にはこのようになります。</target>
        </trans-unit>
        <trans-unit id="a3a0dbd972838d1fbe40227514fc9c6be8e290db" translate="yes" xml:space="preserve">
          <source>Every number type supports the following conversions:</source>
          <target state="translated">すべての数値型は以下の変換をサポートしています。</target>
        </trans-unit>
        <trans-unit id="ef6da45848820d599c1a8937a78be5d39dd0ed0f" translate="yes" xml:space="preserve">
          <source>Every release ships with a standalone version of the compiler. We can download it from &lt;a href=&quot;https://github.com/JetBrains/kotlin/releases/tag/v1.3.41&quot;&gt;GitHub Releases&lt;/a&gt;. The latest release is 1.3.41.</source>
          <target state="translated">すべてのリリースには、スタンドアロンバージョンのコンパイラが付属しています。&lt;a href=&quot;https://github.com/JetBrains/kotlin/releases/tag/v1.3.41&quot;&gt;GitHub Releases&lt;/a&gt;からダウンロードできます。最新のリリースは1.3.41です。</target>
        </trans-unit>
        <trans-unit id="662f537480c6b66493e97a953e1eee9f577ccc4e" translate="yes" xml:space="preserve">
          <source>Every release ships with a standalone version of the compiler. We can download the latest version (&lt;code&gt;kotlin-compiler-1.4.10.zip&lt;/code&gt;) from &lt;a href=&quot;https://github.com/JetBrains/kotlin/releases/tag/v1.4.10&quot;&gt;GitHub Releases&lt;/a&gt;.</source>
          <target state="translated">すべてのリリースには、スタンドアロンバージョンのコンパイラが付属しています。最新バージョン（ &lt;code&gt;kotlin-compiler-1.4.10.zip&lt;/code&gt; ）は&lt;a href=&quot;https://github.com/JetBrains/kotlin/releases/tag/v1.4.10&quot;&gt;GitHubリリース&lt;/a&gt;からダウンロードできます。</target>
        </trans-unit>
        <trans-unit id="b5994533aa728b6d163f7ab516212133e02265cf" translate="yes" xml:space="preserve">
          <source>Every task has a description that you can read in the &lt;strong&gt;Task Description&lt;/strong&gt; panel (&lt;strong&gt;View -&amp;gt; Tool Windows -&amp;gt; Task Description&lt;/strong&gt;) and exercise code in the &lt;code&gt;Task.kt&lt;/code&gt; file:</source>
          <target state="translated">すべてのタスクには、&lt;strong&gt;[タスクの説明&lt;/strong&gt; ]パネル（&lt;strong&gt;[表示]-&amp;gt; [ツールウィンドウ]-&amp;gt; [ &lt;/strong&gt;&lt;strong&gt;タスクの説明&lt;/strong&gt; ]）で読み取ることができる&lt;strong&gt;説明&lt;/strong&gt;と、 &lt;code&gt;Task.kt&lt;/code&gt; ファイルのコードを実行します。</target>
        </trans-unit>
        <trans-unit id="f71a789415d6265a0917595a076f9b20d52fb16d" translate="yes" xml:space="preserve">
          <source>Every variable must be &lt;em&gt;declared&lt;/em&gt;. Any attempt to use a variable that hasn't been declared yet is a syntax error; thus, you are protected from accidentally assigning to a misspelled variable. The declaration also decides what kind of data you are allowed to store in the variable.</source>
          <target state="translated">すべての変数を&lt;em&gt;宣言&lt;/em&gt;する必要があります。まだ宣言されていない変数を使用しようとすると、構文エラーになります。したがって、スペルミスのある変数に誤って割り当ててしまうことから保護されます。宣言は、変数に格納できるデータの種類も決定します。</target>
        </trans-unit>
        <trans-unit id="0a05c1370418c2c91be6a0f9821dc8a88ccc505e" translate="yes" xml:space="preserve">
          <source>Evolving the binary format</source>
          <target state="translated">バイナリ形式を進化させる</target>
        </trans-unit>
        <trans-unit id="6f5937facdbbf8929ff49ee312426d57efa74c7e" translate="yes" xml:space="preserve">
          <source>Examination of small programs leads to the conclusion that requiring exception specifications could both enhance developer productivity and enhance code quality, but experience with large software projects suggests a different result &amp;ndash; decreased productivity and little or no increase in code quality.</source>
          <target state="translated">小規模なプログラムを調査すると、例外仕様を必要とすることで開発者の生産性とコード品質が向上するという結論につながりますが、大規模なソフトウェアプロジェクトでの経験から、生産性の低下とコード品質の向上はほとんどまたはまったくないという異なる結果が示唆されます。</target>
        </trans-unit>
        <trans-unit id="eb9c01b9dbc6f514c62cdb6301f33220ca486e01" translate="yes" xml:space="preserve">
          <source>Examine generated C headers</source>
          <target state="translated">生成された C ヘッダの検査</target>
        </trans-unit>
        <trans-unit id="d9d56a471acee54c2001672aeebac5f1e0d96e35" translate="yes" xml:space="preserve">
          <source>Examining the compilation output</source>
          <target state="translated">コンパイル出力を調べる</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="206722f0c6e1e021a292d1476c4112863bbd4e5b" translate="yes" xml:space="preserve">
          <source>Example: Destructuring Declarations and Maps</source>
          <target state="translated">例。宣言とマップの構造化</target>
        </trans-unit>
        <trans-unit id="7d45f296f4ddd9ed3cee1886a7d1ff14b49f0db4" translate="yes" xml:space="preserve">
          <source>Example: Function Composition</source>
          <target state="translated">例.関数の構成</target>
        </trans-unit>
        <trans-unit id="1c713110ecc4fd6c64069db38531c3b22e08794a" translate="yes" xml:space="preserve">
          <source>Example: Returning Two Values from a Function</source>
          <target state="translated">例。関数から2つの値を返す</target>
        </trans-unit>
        <trans-unit id="db1b7c3863af1327089d036557c26128001c25eb" translate="yes" xml:space="preserve">
          <source>Example: function composition</source>
          <target state="translated">例:関数の構成</target>
        </trans-unit>
        <trans-unit id="73c4272f37511fc890854594e8d12c23cd698331" translate="yes" xml:space="preserve">
          <source>Example: we declare</source>
          <target state="translated">例:次のように宣言します。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="20049bc069b0a04404c23d571b5e0b56f0660c02" translate="yes" xml:space="preserve">
          <source>Exception</source>
          <target state="translated">Exception</target>
        </trans-unit>
        <trans-unit id="86f1f3751a3e3d2c3f35d7e1533ba929fc329127" translate="yes" xml:space="preserve">
          <source>Exception Classes</source>
          <target state="translated">例外クラス</target>
        </trans-unit>
        <trans-unit id="20788aa11834509830be30396b88f6404f087e8c" translate="yes" xml:space="preserve">
          <source>Exception Handling</source>
          <target state="translated">例外処理</target>
        </trans-unit>
        <trans-unit id="7c00c0647bc744a696fb3ff17597403c2eca61a4" translate="yes" xml:space="preserve">
          <source>Exception Handling and Supervision</source>
          <target state="translated">例外処理と監督</target>
        </trans-unit>
        <trans-unit id="b4b0dfe7027c1d349ba13a7e79558e44ec341bd8" translate="yes" xml:space="preserve">
          <source>Exception handling</source>
          <target state="translated">例外処理</target>
        </trans-unit>
        <trans-unit id="d52b1546eba125cf4b7e9f2f57a0230bf95d128b" translate="yes" xml:space="preserve">
          <source>Exception handling and supervision</source>
          <target state="translated">例外処理と監督</target>
        </trans-unit>
        <trans-unit id="300a6d9d09e23a4f70d97fbd823c96cef62aaa3c" translate="yes" xml:space="preserve">
          <source>Exception propagation</source>
          <target state="translated">例外の伝播</target>
        </trans-unit>
        <trans-unit id="c8af2ec677c43cacf18cf6f5b90ea5a3d11acf50" translate="yes" xml:space="preserve">
          <source>Exception thrown when top level variable is accessed from incorrect execution context.</source>
          <target state="translated">トップレベル変数が不正な実行コンテキストからアクセスされた場合にスローされる例外。</target>
        </trans-unit>
        <trans-unit id="3cb1749c83c04a86b034d9fd59faf83d742f3547" translate="yes" xml:space="preserve">
          <source>Exception thrown whenever freezing is not possible.</source>
          <target state="translated">フリーズができない場合に例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="ff5162e9f6b4f048737649b87ce2adb1e4ad5cdf" translate="yes" xml:space="preserve">
          <source>Exception thrown whenever we attempt to mutate frozen objects.</source>
          <target state="translated">凍結したオブジェクトを突然変異させようとすると、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="14d6638036c4a894c61c42134f1e3c3f5c9b0a24" translate="yes" xml:space="preserve">
          <source>Exception: factory functions used to create instances of classes can have the same name as the abstract return type:</source>
          <target state="translated">例外:クラスのインスタンスを作成するために使用されるファクトリ関数は、抽象的な戻り値の型と同じ名前を持つことができます。</target>
        </trans-unit>
        <trans-unit id="ce1f90f3a94299d612d1161a67a6e4ea9633a574" translate="yes" xml:space="preserve">
          <source>Exception: factory functions used to create instances of classes can have the same name as the class being created:</source>
          <target state="translated">例外:クラスのインスタンスを作成するために使用されるファクトリ関数は、作成されるクラスと同じ名前を持つことができます。</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="d10e8b2bdd0f1d5efdff34cd7ab9bdecd596bcec" translate="yes" xml:space="preserve">
          <source>Exceptions aggregation</source>
          <target state="translated">例外の集計</target>
        </trans-unit>
        <trans-unit id="4b745a5fdde0d75970ed0ed55a2060a9894aef88" translate="yes" xml:space="preserve">
          <source>Exceptions in supervised coroutines</source>
          <target state="translated">教師付きコルーチンの例外</target>
        </trans-unit>
        <trans-unit id="e553b09c329e1f113754f2dbaac3b3aaf0533a57" translate="yes" xml:space="preserve">
          <source>Exceptions pretty much work like they do in Python. You &lt;em&gt;throw&lt;/em&gt; (raise) one with &lt;code&gt;throw&lt;/code&gt;:</source>
          <target state="translated">例外は、Pythonの場合とほとんど同じように機能します。あなたは&lt;em&gt;throwで&lt;/em&gt; 1つを &lt;code&gt;throw&lt;/code&gt; ます（上げます）：</target>
        </trans-unit>
        <trans-unit id="d438cc2c39f9e526b7cf5e3357c8b6419b9dcc06" translate="yes" xml:space="preserve">
          <source>Exceptions that can be passed to the &lt;code&gt;onError&lt;/code&gt; function:</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; 関数に渡すことができる例外：</target>
        </trans-unit>
        <trans-unit id="f726a3681e0553bff6da8faa113a1eabe65c5771" translate="yes" xml:space="preserve">
          <source>Excludes the element from the generated documentation. Can be used for elements which are not part of the official API of a module but still have to be visible externally.</source>
          <target state="translated">生成されたドキュメントから要素を除外します。モジュールの公式APIの一部ではないが、外部から見えるようにしなければならない要素に使うことができます。</target>
        </trans-unit>
        <trans-unit id="190906067307a7710098b547e3ba87dd3a7d3d05" translate="yes" xml:space="preserve">
          <source>Excluding declarations from DCE</source>
          <target state="translated">DCEからの宣言を除く</target>
        </trans-unit>
        <trans-unit id="4078b4cde7d9aaf6040def926ac6643dd634780c" translate="yes" xml:space="preserve">
          <source>Execute &lt;code&gt;./gradlew check&lt;/code&gt; and you will see that the tests are run three times, on JVM, on JS, and on Native!</source>
          <target state="translated">&lt;code&gt;./gradlew check&lt;/code&gt; を実行すると、テストがJVM、JS、ネイティブで3回実行されていることがわかります。</target>
        </trans-unit>
        <trans-unit id="117e5acbf802d6c99917aa10544e8a741a3c69ad" translate="yes" xml:space="preserve">
          <source>Execute if not null</source>
          <target state="translated">nullでない場合は実行</target>
        </trans-unit>
        <trans-unit id="360e533dd0473af2b54be25312ebb86f8618cc18" translate="yes" xml:space="preserve">
          <source>Executes &lt;a href=&quot;with-worker#kotlin.native.concurrent%24withWorker(kotlin.String?,%20kotlin.Boolean,%20kotlin.Function1((kotlin.native.concurrent.Worker,%20kotlin.native.concurrent.withWorker.R)))/block&quot;&gt;block&lt;/a&gt; with new &lt;a href=&quot;-worker/index&quot;&gt;Worker&lt;/a&gt; as resource, by starting the new worker, calling provided &lt;a href=&quot;with-worker#kotlin.native.concurrent%24withWorker(kotlin.String?,%20kotlin.Boolean,%20kotlin.Function1((kotlin.native.concurrent.Worker,%20kotlin.native.concurrent.withWorker.R)))/block&quot;&gt;block&lt;/a&gt; (in current context) with newly started worker as this and terminating worker after the block completes. Note that this operation is pretty heavyweight, use preconfigured worker or worker pool if need to execute it frequently.</source>
          <target state="translated">新しい&lt;a href=&quot;-worker/index&quot;&gt;ワーカー&lt;/a&gt;をリソースとして使用して&lt;a href=&quot;with-worker#kotlin.native.concurrent%24withWorker(kotlin.String?,%20kotlin.Boolean,%20kotlin.Function1((kotlin.native.concurrent.Worker,%20kotlin.native.concurrent.withWorker.R)))/block&quot;&gt;ブロック&lt;/a&gt;を実行します。新しいワーカーを開始し、（現在のコンテキストで）提供された&lt;a href=&quot;with-worker#kotlin.native.concurrent%24withWorker(kotlin.String?,%20kotlin.Boolean,%20kotlin.Function1((kotlin.native.concurrent.Worker,%20kotlin.native.concurrent.withWorker.R)))/block&quot;&gt;ブロックを&lt;/a&gt;（現在のコンテキストで）このように新しく開始したワーカーで呼び出し、ブロックの完了後にワーカーを終了します。この操作はかなり重いことに注意してください。頻繁に実行する必要がある場合は、事前構成されたワーカーまたはワーカープールを使用してください。</target>
        </trans-unit>
        <trans-unit id="0e0ab7b9797ada82aa57a130049c898a5290b92b" translate="yes" xml:space="preserve">
          <source>Executes provided block under lock with raw pointer to the data stored in the buffer. Block is executed under the spinlock, and must be short.</source>
          <target state="translated">バッファに格納されたデータへの生ポインタを持つロック下で、提供されたブロックを実行します。ブロックはスピンロック下で実行され、短くなければなりません。</target>
        </trans-unit>
        <trans-unit id="488594846cc639e778f89f8eaac0b080be7fbb88" translate="yes" xml:space="preserve">
          <source>Executes provided block under lock with the raw data buffer. Block is executed under the spinlock, and must be short.</source>
          <target state="translated">提供されたブロックを生データバッファとのロック下で実行します。ブロックはスピンロック下で実行され、短くなければなりません。</target>
        </trans-unit>
        <trans-unit id="614d4cb3f8799274e5d1a02ed4102a8b920ee64f" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;measure-nano-time#kotlin.system%24measureNanoTime%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; and returns elapsed time in nanoseconds.</source>
          <target state="translated">指定された&lt;a href=&quot;measure-nano-time#kotlin.system%24measureNanoTime%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;ブロック&lt;/a&gt;を実行し、経過時間をナノ秒で返します。</target>
        </trans-unit>
        <trans-unit id="e11b57e6822dacf070ac87b9c526acf4bf7ece8f" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;measure-nano-time#kotlin.system%24measureNanoTime(kotlin.Function0((kotlin.Unit)))/block&quot;&gt;block&lt;/a&gt; and returns elapsed time in nanoseconds.</source>
          <target state="translated">指定された&lt;a href=&quot;measure-nano-time#kotlin.system%24measureNanoTime(kotlin.Function0((kotlin.Unit)))/block&quot;&gt;ブロック&lt;/a&gt;を実行し、経過時間をナノ秒単位で返します。</target>
        </trans-unit>
        <trans-unit id="4ebd143fb53cb41967744a45798d8a8e88db909b" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;measure-time-micros#kotlin.system%24measureTimeMicros%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; and returns elapsed time in microseconds (Kotlin/Native only).</source>
          <target state="translated">指定された&lt;a href=&quot;measure-time-micros#kotlin.system%24measureTimeMicros%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;ブロック&lt;/a&gt;を実行し、マイクロ秒単位の経過時間を返します（Kotlin /ネイティブのみ）。</target>
        </trans-unit>
        <trans-unit id="fd6ed624db3f69806e3230d251add861f2bccb20" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;measure-time-micros#kotlin.system%24measureTimeMicros(kotlin.Function0((kotlin.Unit)))/block&quot;&gt;block&lt;/a&gt; and returns elapsed time in microseconds (Kotlin/Native only).</source>
          <target state="translated">指定された&lt;a href=&quot;measure-time-micros#kotlin.system%24measureTimeMicros(kotlin.Function0((kotlin.Unit)))/block&quot;&gt;ブロック&lt;/a&gt;を実行し、経過時間をマイクロ秒単位で返します（Kotlin / Nativeのみ）。</target>
        </trans-unit>
        <trans-unit id="282e807ef96dd3abe00f20fdafa99797e00b480d" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;measure-time-millis#kotlin.system%24measureTimeMillis%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; and returns elapsed time in milliseconds.</source>
          <target state="translated">指定された&lt;a href=&quot;measure-time-millis#kotlin.system%24measureTimeMillis%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;ブロック&lt;/a&gt;を実行し、経過時間をミリ秒単位で返します。</target>
        </trans-unit>
        <trans-unit id="2f35db8b5f4e9b1bf553d6dfd3a810467de70cd6" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;measure-time-millis#kotlin.system%24measureTimeMillis(kotlin.Function0((kotlin.Unit)))/block&quot;&gt;block&lt;/a&gt; and returns elapsed time in milliseconds.</source>
          <target state="translated">指定された&lt;a href=&quot;measure-time-millis#kotlin.system%24measureTimeMillis(kotlin.Function0((kotlin.Unit)))/block&quot;&gt;ブロック&lt;/a&gt;を実行し、経過時間をミリ秒単位で返します。</target>
        </trans-unit>
        <trans-unit id="d24b7f053f3eea01fc7419110ea4ca2bce2ddaeb" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;read#kotlin.concurrent%24read%28java.util.concurrent.locks.ReentrantReadWriteLock%2C+kotlin.Function0%28%28kotlin.concurrent.read.T%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; under the read lock of this lock.</source>
          <target state="translated">このロックの読み取りロックの下で、指定された&lt;a href=&quot;read#kotlin.concurrent%24read%28java.util.concurrent.locks.ReentrantReadWriteLock%2C+kotlin.Function0%28%28kotlin.concurrent.read.T%29%29%29%2Faction&quot;&gt;アクションを&lt;/a&gt;実行します。</target>
        </trans-unit>
        <trans-unit id="5c84df87d734b1c67e0a47da5a58cd9521cb3548" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;read#kotlin.concurrent%24read(java.util.concurrent.locks.ReentrantReadWriteLock,%20kotlin.Function0((kotlin.concurrent.read.T)))/action&quot;&gt;action&lt;/a&gt; under the read lock of this lock.</source>
          <target state="translated">このロックの読み取りロックの下で、指定された&lt;a href=&quot;read#kotlin.concurrent%24read(java.util.concurrent.locks.ReentrantReadWriteLock,%20kotlin.Function0((kotlin.concurrent.read.T)))/action&quot;&gt;アクションを&lt;/a&gt;実行します。</target>
        </trans-unit>
        <trans-unit id="a0d41a196bd1c586aa870febe53b2e0a6dac0ff8" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;use#kotlin%24use%28kotlin.use.T%2C+kotlin.Function1%28%28kotlin.use.T%2C+kotlin.use.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; function on this resource and then closes it down correctly whether an exception is thrown or not.</source>
          <target state="translated">このリソースで指定された&lt;a href=&quot;use#kotlin%24use%28kotlin.use.T%2C+kotlin.Function1%28%28kotlin.use.T%2C+kotlin.use.R%29%29%29%2Fblock&quot;&gt;ブロック&lt;/a&gt;関数を実行し、例外がスローされてもされなくても、正しく閉じます。</target>
        </trans-unit>
        <trans-unit id="022b916f4658570599fd7628fc1ddb1ee7466071" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;use#kotlin%24use(kotlin.use.T,%20kotlin.Function1((kotlin.use.T,%20kotlin.use.R)))/block&quot;&gt;block&lt;/a&gt; function on this resource and then closes it down correctly whether an exception is thrown or not.</source>
          <target state="translated">このリソースで指定された&lt;a href=&quot;use#kotlin%24use(kotlin.use.T,%20kotlin.Function1((kotlin.use.T,%20kotlin.use.R)))/block&quot;&gt;ブロック&lt;/a&gt;関数を実行し、例外がスローされるかどうかに関係なく、リソースを正しく閉じます。</target>
        </trans-unit>
        <trans-unit id="2e0781fbc1659638abe69b290403b74d1e477a6d" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;use#kotlin.io%24use%28kotlin.io.use.T%2C+kotlin.Function1%28%28kotlin.io.use.T%2C+kotlin.io.use.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; function on this resource and then closes it down correctly whether an exception is thrown or not.</source>
          <target state="translated">このリソースで指定された&lt;a href=&quot;use#kotlin.io%24use%28kotlin.io.use.T%2C+kotlin.Function1%28%28kotlin.io.use.T%2C+kotlin.io.use.R%29%29%29%2Fblock&quot;&gt;ブロック&lt;/a&gt;関数を実行し、例外がスローされてもされなくても、正しく閉じます。</target>
        </trans-unit>
        <trans-unit id="51854af804610f152b1a9859446a79ecc3d4067b" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;use#kotlin.io%24use(kotlin.io.use.T,%20kotlin.Function1((kotlin.io.use.T,%20kotlin.io.use.R)))/block&quot;&gt;block&lt;/a&gt; function on this resource and then closes it down correctly whether an exception is thrown or not.</source>
          <target state="translated">このリソースで指定された&lt;a href=&quot;use#kotlin.io%24use(kotlin.io.use.T,%20kotlin.Function1((kotlin.io.use.T,%20kotlin.io.use.R)))/block&quot;&gt;ブロック&lt;/a&gt;関数を実行し、例外がスローされるかどうかに関係なく、リソースを正しく閉じます。</target>
        </trans-unit>
        <trans-unit id="2c1c3a22034c156ae3b217a9a4c32c610ee18bd6" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;with-lock#kotlin.concurrent%24withLock%28java.util.concurrent.locks.Lock%2C+kotlin.Function0%28%28kotlin.concurrent.withLock.T%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; under this lock.</source>
          <target state="translated">このロックの下で指定された&lt;a href=&quot;with-lock#kotlin.concurrent%24withLock%28java.util.concurrent.locks.Lock%2C+kotlin.Function0%28%28kotlin.concurrent.withLock.T%29%29%29%2Faction&quot;&gt;アクションを&lt;/a&gt;実行します。</target>
        </trans-unit>
        <trans-unit id="14d0f5c305c5c1135403e7c30e9e79681fc04e22" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;with-lock#kotlin.concurrent%24withLock(java.util.concurrent.locks.Lock,%20kotlin.Function0((kotlin.concurrent.withLock.T)))/action&quot;&gt;action&lt;/a&gt; under this lock.</source>
          <target state="translated">このロックの下で指定された&lt;a href=&quot;with-lock#kotlin.concurrent%24withLock(java.util.concurrent.locks.Lock,%20kotlin.Function0((kotlin.concurrent.withLock.T)))/action&quot;&gt;アクションを&lt;/a&gt;実行します。</target>
        </trans-unit>
        <trans-unit id="67c84cfb8baeaffcb837ab0b1446834489eeab45" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;write#kotlin.concurrent%24write%28java.util.concurrent.locks.ReentrantReadWriteLock%2C+kotlin.Function0%28%28kotlin.concurrent.write.T%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; under the write lock of this lock.</source>
          <target state="translated">このロックの書き込みロックの下で、指定された&lt;a href=&quot;write#kotlin.concurrent%24write%28java.util.concurrent.locks.ReentrantReadWriteLock%2C+kotlin.Function0%28%28kotlin.concurrent.write.T%29%29%29%2Faction&quot;&gt;アクションを&lt;/a&gt;実行します。</target>
        </trans-unit>
        <trans-unit id="3477821e35c4cf105b6e409c49b88f95252666a5" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;write#kotlin.concurrent%24write(java.util.concurrent.locks.ReentrantReadWriteLock,%20kotlin.Function0((kotlin.concurrent.write.T)))/action&quot;&gt;action&lt;/a&gt; under the write lock of this lock.</source>
          <target state="translated">このロックの書き込みロックの下で、指定された&lt;a href=&quot;write#kotlin.concurrent%24write(java.util.concurrent.locks.ReentrantReadWriteLock,%20kotlin.Function0((kotlin.concurrent.write.T)))/action&quot;&gt;アクションを&lt;/a&gt;実行します。</target>
        </trans-unit>
        <trans-unit id="d878f68e2a355fbb917f2568270a4b7dcfb4a592" translate="yes" xml:space="preserve">
          <source>Executes the given function &lt;a href=&quot;repeat#kotlin%24repeat%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; specified number of &lt;a href=&quot;repeat#kotlin%24repeat%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Unit%29%29%29%2Ftimes&quot;&gt;times&lt;/a&gt;.</source>
          <target state="translated">与えられた関数を実行し&lt;a href=&quot;repeat#kotlin%24repeat%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;、アクション&lt;/a&gt;の数、指定&lt;a href=&quot;repeat#kotlin%24repeat%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Unit%29%29%29%2Ftimes&quot;&gt;時間を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c6bb6d8b2b4472893ea6d09abf0717e4fadbad7" translate="yes" xml:space="preserve">
          <source>Executes the given function &lt;a href=&quot;repeat#kotlin%24repeat(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; specified number of &lt;a href=&quot;repeat#kotlin%24repeat(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.Unit)))/times&quot;&gt;times&lt;/a&gt;.</source>
          <target state="translated">与えられた関数を実行し&lt;a href=&quot;repeat#kotlin%24repeat(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.Unit)))/action&quot;&gt;、アクション&lt;/a&gt;の数、指定&lt;a href=&quot;repeat#kotlin%24repeat(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.Unit)))/times&quot;&gt;時間を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d7ee5a9194bd33546aeecbed83957e3a6b1fb66" translate="yes" xml:space="preserve">
          <source>Executes the given function &lt;a href=&quot;synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; while holding the monitor of the given object &lt;a href=&quot;synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29%2Flock&quot;&gt;lock&lt;/a&gt;.</source>
          <target state="translated">指定されたオブジェクト&lt;a href=&quot;synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29%2Flock&quot;&gt;ロックの&lt;/a&gt;モニターを保持しながら、指定されたファンクション&lt;a href=&quot;synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29%2Fblock&quot;&gt;ブロック&lt;/a&gt;を実行します。</target>
        </trans-unit>
        <trans-unit id="dea84fe269ba69c0ce7c51ade8b40cc6bfddc30b" translate="yes" xml:space="preserve">
          <source>Executes the given function &lt;a href=&quot;synchronized#kotlin%24synchronized(kotlin.Any,%20kotlin.Function0((kotlin.synchronized.R)))/block&quot;&gt;block&lt;/a&gt; while holding the monitor of the given object &lt;a href=&quot;synchronized#kotlin%24synchronized(kotlin.Any,%20kotlin.Function0((kotlin.synchronized.R)))/lock&quot;&gt;lock&lt;/a&gt;.</source>
          <target state="translated">指定されたオブジェクト&lt;a href=&quot;synchronized#kotlin%24synchronized(kotlin.Any,%20kotlin.Function0((kotlin.synchronized.R)))/lock&quot;&gt;ロックの&lt;/a&gt;モニターを保持しながら、指定された機能&lt;a href=&quot;synchronized#kotlin%24synchronized(kotlin.Any,%20kotlin.Function0((kotlin.synchronized.R)))/block&quot;&gt;ブロック&lt;/a&gt;を実行します。</target>
        </trans-unit>
        <trans-unit id="e41faf78521557eb6736e0bf3af395d2b7982be4" translate="yes" xml:space="preserve">
          <source>Executing a lambda on non-null objects: &lt;code&gt;let&lt;/code&gt;</source>
          <target state="translated">null以外のオブジェクトでラムダを実行する： &lt;code&gt;let&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9cf1a2716f1a2c670bf0c7de278d2a8e68d7667f" translate="yes" xml:space="preserve">
          <source>Executing a statement if null</source>
          <target state="translated">nullの場合のステートメントの実行</target>
        </trans-unit>
        <trans-unit id="3c269bf863f985e09a56ca0835c97eb0941d25b9" translate="yes" xml:space="preserve">
          <source>Expected declarations never contain any implementation code.</source>
          <target state="translated">期待される宣言には、実装コードが含まれることはありません。</target>
        </trans-unit>
        <trans-unit id="b718f8c3a83788b1b360cc38380401a994fb4892" translate="yes" xml:space="preserve">
          <source>Experimental</source>
          <target state="translated">Experimental</target>
        </trans-unit>
        <trans-unit id="d621d7a06ece519175e16b02c031c6928f80477a" translate="yes" xml:space="preserve">
          <source>Experimental API Markers</source>
          <target state="translated">実験用APIマーカー</target>
        </trans-unit>
        <trans-unit id="de63b83952408b26ce587d5f72ebe87d781b87b5" translate="yes" xml:space="preserve">
          <source>Experimental API for representing &lt;a href=&quot;api/latest/jvm/stdlib/kotlin.time/-duration/index&quot;&gt;Duration&lt;/a&gt; values and measuring time intervals.</source>
          <target state="translated">&lt;a href=&quot;api/latest/jvm/stdlib/kotlin.time/-duration/index&quot;&gt;期間の&lt;/a&gt;値を表し、時間間隔を測定するための実験的なAPI 。</target>
        </trans-unit>
        <trans-unit id="ac76b852a915773325e2a6aa597d5290cd384ec5" translate="yes" xml:space="preserve">
          <source>Experimental APIs, subject to change in future versions of Kotlin.</source>
          <target state="translated">実験的なAPIであり、Kotlinの将来のバージョンで変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="83e69bded5eee52fb9cf80af633d0b035eb4533a" translate="yes" xml:space="preserve">
          <source>Experimental DSL for declaring custom function contracts.</source>
          <target state="translated">カスタム関数契約を宣言するための実験的DSL。</target>
        </trans-unit>
        <trans-unit id="0d95a6a73703895596be46e50da232129664280d" translate="yes" xml:space="preserve">
          <source>Experimental features</source>
          <target state="translated">実験的特徴</target>
        </trans-unit>
        <trans-unit id="5d7f1cf8e07153923c6d0b21531a1643339069a4" translate="yes" xml:space="preserve">
          <source>Experimental features usually graduate to the stable status after some iterations.</source>
          <target state="translated">実験的特徴は通常、いくつかの反復の後に安定した状態に移行します。</target>
        </trans-unit>
        <trans-unit id="95839ce792e67ff3e4fc9c17515cf67b4d2ce6bc" translate="yes" xml:space="preserve">
          <source>Experimental marker annotations must meet several requirements:</source>
          <target state="translated">実験マーカーのアノテーションは、いくつかの要件を満たす必要があります。</target>
        </trans-unit>
        <trans-unit id="a9a30d212b365f3c57c7ff6cfb07a356fa6aff18" translate="yes" xml:space="preserve">
          <source>Experimental metadata publishing mode</source>
          <target state="translated">実験的なメタデータ公開モード</target>
        </trans-unit>
        <trans-unit id="798815b51c596e7360bb82efdbdec703b1bb1941" translate="yes" xml:space="preserve">
          <source>Experimental status of experimental API markers</source>
          <target state="translated">実験的APIマーカーの実験状況</target>
        </trans-unit>
        <trans-unit id="ada450325004db70f7b9f62cf11736e270c333f9" translate="yes" xml:space="preserve">
          <source>Experimental status of inline classes</source>
          <target state="translated">インラインクラスの実験状況</target>
        </trans-unit>
        <trans-unit id="7238f4bce9d5c771de41a0852b1ae8eb6443e037" translate="yes" xml:space="preserve">
          <source>Experimental status of unsigned integers</source>
          <target state="translated">符号なし整数の実験状況</target>
        </trans-unit>
        <trans-unit id="82cdcb85dc419fa45dc9ac446e80ae9540f0e241" translate="yes" xml:space="preserve">
          <source>ExperimentalAssociatedObjects</source>
          <target state="translated">ExperimentalAssociatedObjects</target>
        </trans-unit>
        <trans-unit id="be95734df15b21d8571ecd278c36ee5d08b31707" translate="yes" xml:space="preserve">
          <source>ExperimentalContracts</source>
          <target state="translated">ExperimentalContracts</target>
        </trans-unit>
        <trans-unit id="61fdc72bc6abeb72fe1e8570b172d1846153bdb4" translate="yes" xml:space="preserve">
          <source>ExperimentalJsExport</source>
          <target state="translated">ExperimentalJsExport</target>
        </trans-unit>
        <trans-unit id="ad810ef395525b8fdd1e4947c449bf2f1eccd04b" translate="yes" xml:space="preserve">
          <source>ExperimentalMultiplatform</source>
          <target state="translated">ExperimentalMultiplatform</target>
        </trans-unit>
        <trans-unit id="ef6b4c3b738ea2aedb5f203fffec0f3eedea7b14" translate="yes" xml:space="preserve">
          <source>ExperimentalStdlibApi</source>
          <target state="translated">ExperimentalStdlibApi</target>
        </trans-unit>
        <trans-unit id="8019a191a0dc7109281118bce8555dbf8d4e7b47" translate="yes" xml:space="preserve">
          <source>ExperimentalTime</source>
          <target state="translated">ExperimentalTime</target>
        </trans-unit>
        <trans-unit id="c12c682ee6126acad804bc0d465ec31016ca1fff" translate="yes" xml:space="preserve">
          <source>ExperimentalTypeInference</source>
          <target state="translated">ExperimentalTypeInference</target>
        </trans-unit>
        <trans-unit id="f0e4f46aed2ac7c2ff93ed970bdbe71a48bfc4ca" translate="yes" xml:space="preserve">
          <source>ExperimentalUnsignedTypes</source>
          <target state="translated">ExperimentalUnsignedTypes</target>
        </trans-unit>
        <trans-unit id="7aa3684808a420bd5ec930091efde83abe389d26" translate="yes" xml:space="preserve">
          <source>Explicit Conversions</source>
          <target state="translated">明示的な変換</target>
        </trans-unit>
        <trans-unit id="c4b2884d537767a94d252645bed5703936c50506" translate="yes" xml:space="preserve">
          <source>Explicit conversions</source>
          <target state="translated">明示的な変換</target>
        </trans-unit>
        <trans-unit id="39b1b23e65cf21583e2e4ee9f34c127726f32ce5" translate="yes" xml:space="preserve">
          <source>Explicit return types</source>
          <target state="translated">明示的な戻り値の型</target>
        </trans-unit>
        <trans-unit id="b32cb310fac463afd22fd6fd3737a2207dc234c9" translate="yes" xml:space="preserve">
          <source>Explicitly declaring the return type is &lt;a href=&quot;#explicit-return-types&quot;&gt;optional&lt;/a&gt; when this can be inferred by the compiler:</source>
          <target state="translated">戻り値の型を明示的に宣言することは、これがコンパイラーによって推測できる場合は&lt;a href=&quot;#explicit-return-types&quot;&gt;オプションです&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5768299ac7908eb99b13fd833485b443a79c6c78" translate="yes" xml:space="preserve">
          <source>Exponent bits</source>
          <target state="translated">指数ビット</target>
        </trans-unit>
        <trans-unit id="43336edd2de8a8c0d6ca6212bebd882f4b6d4909" translate="yes" xml:space="preserve">
          <source>Exponentation: &lt;code&gt;pow&lt;/code&gt; (an extension function), &lt;code&gt;sqrt&lt;/code&gt;, &lt;code&gt;hypot&lt;/code&gt;, &lt;code&gt;exp&lt;/code&gt;, &lt;code&gt;expm1&lt;/code&gt;;</source>
          <target state="translated">指数： &lt;code&gt;pow&lt;/code&gt; （拡張関数）、 &lt;code&gt;sqrt&lt;/code&gt; 、 &lt;code&gt;hypot&lt;/code&gt; 、 &lt;code&gt;exp&lt;/code&gt; 、 &lt;code&gt;expm1&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="51b5379cf4a7b819639a6ede1381a5a13b164f83" translate="yes" xml:space="preserve">
          <source>ExportObjCClass</source>
          <target state="translated">ExportObjCClass</target>
        </trans-unit>
        <trans-unit id="43edbf4bd908e79b67863854024df0a7c2323414" translate="yes" xml:space="preserve">
          <source>Exporting dependencies in frameworks</source>
          <target state="translated">フレームワークでの依存関係のエクスポート</target>
        </trans-unit>
        <trans-unit id="e6869cbc0929e9b85511b6bcc53ce1bc5147ccc8" translate="yes" xml:space="preserve">
          <source>Exports top-level declaration on JS platform.</source>
          <target state="translated">JSプラットフォーム上のトップレベル宣言をエクスポートします。</target>
        </trans-unit>
        <trans-unit id="5b17190de402201512ee799bb88cd7f8d0a18cf4" translate="yes" xml:space="preserve">
          <source>Exposes the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt;Date API&lt;/a&gt; to Kotlin.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt;Date API&lt;/a&gt;をKotlinに公開します。</target>
        </trans-unit>
        <trans-unit id="b2e20d3d831015a9df71cf80fbd82aafb9cb6d98" translate="yes" xml:space="preserve">
          <source>Exposes the &lt;a href=&quot;https://developer.mozilla.org/en/DOM/console&quot;&gt;console API&lt;/a&gt; to Kotlin.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en/DOM/console&quot;&gt;コンソールAPI&lt;/a&gt;をKotlinに公開します。</target>
        </trans-unit>
        <trans-unit id="6ab1b33548d4fca15fffc5b58c1ec41e7907a41b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON&quot;&gt;JSON object&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON&quot;&gt;JSONオブジェクト&lt;/a&gt;をKotlinに公開します。</target>
        </trans-unit>
        <trans-unit id="e4a6243c9409724b2e58fee6d381c89fa19c64f2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;eval function&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;eval関数&lt;/a&gt;をKotlinに公開します。</target>
        </trans-unit>
        <trans-unit id="5a8fa21de53c1f3a28b2872d04dfaa83193015b1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;undefined property&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScriptの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;未定義プロパティ&lt;/a&gt;をKotlinに公開します。</target>
        </trans-unit>
        <trans-unit id="0e14fd5fe707f7f567a5aee1be266c99ea9b049d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/AbstractWorker&quot;&gt;AbstractWorker&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/AbstractWorker&quot;&gt;AbstractWorker&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="abec735cbcc57f96c140390409f054112384559d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="2e178f9b3c8329a8ac144e4d638b00b44aead423" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ArrayBufferView&quot;&gt;ArrayBufferView&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ArrayBufferView&quot;&gt;ArrayBufferView&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="78bf228bd96b7863df8dc0302a649e46544534fc" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/AudioTrack&quot;&gt;AudioTrack&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/AudioTrack&quot;&gt;AudioTrack&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="8a5e4a699c98b135404243956f1da06ae6a3c23f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Blob&quot;&gt;Blob&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Blob&quot;&gt;Blob&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="10f83d0d9f3ccc86a3665754da71ca7079fcc1cb" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Body&quot;&gt;Body&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Body&quot;&gt;ボディ&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="f20783e43ed5e6cdee4b24ca5efd181d2a07c885" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSS&quot;&gt;CSS&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSS&quot;&gt;CSS&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="66ff222964356401a7820893d69dd953e4824a2b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSRule&quot;&gt;CSSRule&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSRule&quot;&gt;CSSRule&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="d1da806b511e98e9a4f6a3f2ae167ef1360a0255" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSRuleList&quot;&gt;CSSRuleList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSRuleList&quot;&gt;CSSRuleList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="a2bd067acc6233cd661be4648c3abc2e07636126" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSStyleDeclaration&quot;&gt;CSSStyleDeclaration&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSStyleDeclaration&quot;&gt;CSSStyleDeclaration&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="4e3900fa446a47f9057628dbfc49e11ebfcab28b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Cache&quot;&gt;Cache&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Cache&quot;&gt;キャッシュ&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="bbdbd782d9e88901e1772158661da5e7a3db90bb" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CacheStorage&quot;&gt;CacheStorage&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CacheStorage&quot;&gt;CacheStorage&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b4f8c73e9e4d08b66f4014dcbac4bb38df823fd8" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasGradient&quot;&gt;CanvasGradient&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasGradient&quot;&gt;CanvasGradient&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="7f378c5e9dc1aa9ae0ca6ae667b6ace9b0e3f48d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasPattern&quot;&gt;CanvasPattern&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasPattern&quot;&gt;CanvasPattern&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="0dff1e94c348f48305efe1589b113686d4613952" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D&quot;&gt;CanvasRenderingContext2D&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D&quot;&gt;CanvasRenderingContext2D&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="4930f5ad3a9da6457e5252472c3ced645ae2cead" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CaretPosition&quot;&gt;CaretPosition&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CaretPosition&quot;&gt;CaretPosition&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="89ff70f6a73ea4a50c506300b6989950e61f2c2f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ChildNode&quot;&gt;ChildNode&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ChildNode&quot;&gt;ChildNode&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e4a925b4141cea624f09f915c771a8b09584d369" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Client&quot;&gt;Client&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Client&quot;&gt;クライアント&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="789a754b67eb39328c8c5b301bc2c39a0093fa36" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Clients&quot;&gt;Clients&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Clients&quot;&gt;クライアント&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e777b4982e65bc088b48f0713adbdb8dd5e124fb" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ConstrainBooleanParameters&quot;&gt;ConstrainBooleanParameters&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ConstrainBooleanParameters&quot;&gt;ConstrainBooleanParameters&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="24251d16da841ec785c88c102e9e7e04ab621ddd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ConstrainDOMStringParameters&quot;&gt;ConstrainDOMStringParameters&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ConstrainDOMStringParameters&quot;&gt;ConstrainDOMStringParameters&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="9555f96c2658affea0519712bf9618a7526a3cc0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CustomElementRegistry&quot;&gt;CustomElementRegistry&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CustomElementRegistry&quot;&gt;CustomElementRegistry&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="599721a5d18543535db48150b253ecacb693fcbd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMImplementation&quot;&gt;DOMImplementation&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMImplementation&quot;&gt;DOMImplementation&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e3eebd70ffb6c151ccc23dfc8ab2b798f64010aa" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMMatrixReadOnly&quot;&gt;DOMMatrixReadOnly&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMMatrixReadOnly&quot;&gt;DOMMatrixReadOnly&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="a8bc9d0ca02b4b87cb6ac5dda9e03dc15d4ce13e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMParser&quot;&gt;DOMParser&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMParser&quot;&gt;DOMParser&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="377d9cd673d55abf626add5da125727021158ac1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMPointInit&quot;&gt;DOMPointInit&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMPointInit&quot;&gt;DOMPointInit&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="df395f12d2cf46b2abf0b8dfc447b01f81b1cc95" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMPointReadOnly&quot;&gt;DOMPointReadOnly&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMPointReadOnly&quot;&gt;DOMPointReadOnly&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="fcb317c5366fd47254889133dfb6cadd5186d229" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMQuad&quot;&gt;DOMQuad&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMQuad&quot;&gt;DOMQuad&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="5c1355046bc22a15b9b555e96ce1465666a40a4c" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMRectReadOnly&quot;&gt;DOMRectReadOnly&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMRectReadOnly&quot;&gt;DOMRectReadOnly&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b966b2756ee971befb78ff1fc2f7ce0d36241720" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMStringMap&quot;&gt;DOMStringMap&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMStringMap&quot;&gt;DOMStringMap&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="be2e1a2d74c5dfab6ca0eeda618bc1cf3eb3da95" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMTokenList&quot;&gt;DOMTokenList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMTokenList&quot;&gt;DOMTokenList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="3e297d588fdf0551d7607ebe1a4dcbb9d8b361fc" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransfer&quot;&gt;DataTransfer&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransfer&quot;&gt;DataTransfer&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="657218ca287c4ab1d651dc874b92d90297881237" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransferItem&quot;&gt;DataTransferItem&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransferItem&quot;&gt;DataTransferItem&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="7161d538a8dd045951edca5302e4f4f3b01abe07" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransferItemList&quot;&gt;DataTransferItemList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransferItemList&quot;&gt;DataTransferItemList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="2ce5c44b812f7dd74e252a5c982d37c536143617" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataView&quot;&gt;DataView&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataView&quot;&gt;DataView&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="d6b220d67bd5020d5d0a01710584388f12e02103" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DocumentOrShadowRoot&quot;&gt;DocumentOrShadowRoot&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DocumentOrShadowRoot&quot;&gt;DocumentOrShadowRoot&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="fc6c327e8c193039e557e5dbdd5862092ef6e9d1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DoubleRange&quot;&gt;DoubleRange&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DoubleRange&quot;&gt;DoubleRange&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="c8faab27bc840b65d0f6510393f1dd829a58ba99" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Event&quot;&gt;Event&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Event&quot;&gt;イベント&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="31909a542544ab2a87787bc8a0f41d3fa14236b1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/EventListener&quot;&gt;EventListener&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/EventListener&quot;&gt;EventListener&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b0933aa986371c1e96909886bc002c8809633c57" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/EventTarget&quot;&gt;EventTarget&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/EventTarget&quot;&gt;EventTarget&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="01cc58cefd31c1f25cd29e7299dab0beb838132a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FileList&quot;&gt;FileList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FileList&quot;&gt;FileList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="d954a1747055695b2aa217fbee4e6d492f1823aa" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FileReaderSync&quot;&gt;FileReaderSync&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FileReaderSync&quot;&gt;FileReaderSync&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="eabde8bb825c4b4670eb79217903e19e64de6c3f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Float32Array&quot;&gt;Float32Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Float32Array&quot;&gt;Float32Array&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="61fbfd956a594009722cf43bce8d832b25fd78f7" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Float64Array&quot;&gt;Float64Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Float64Array&quot;&gt;Float64Array&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="df5d9fea1dd397884c321ca5ad54e9b66fa36f0a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FormData&quot;&gt;FormData&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FormData&quot;&gt;FormData&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="47eb053564cccb602e12d23d81ca75f2907f2615" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/GeometryUtils&quot;&gt;GeometryUtils&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/GeometryUtils&quot;&gt;GeometryUtils&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="7f14bc578acf1650c2af65e1ecf877c248074503" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/GlobalEventHandlers&quot;&gt;GlobalEventHandlers&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/GlobalEventHandlers&quot;&gt;GlobalEventHandlers&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="0f97809f5b83ec31a615da48f7059bb57d24f35a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/HTMLCollection&quot;&gt;HTMLCollection&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/HTMLCollection&quot;&gt;HTMLCollection&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="a4be2038903db95e40459a5b7b894454fe7b369c" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/HTMLHyperlinkElementUtils&quot;&gt;HTMLHyperlinkElementUtils&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/HTMLHyperlinkElementUtils&quot;&gt;HTMLHyperlinkElementUtils&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="90b22119e6b1b7ee93e4db7c22729bdf5749bffd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Headers&quot;&gt;Headers&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Headers&quot;&gt;ヘッダー&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="9fcc8fafc8fcb7e3b46668079b5781f28a479a4c" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/History&quot;&gt;History&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScriptの&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/History&quot;&gt;履歴&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="6d9ef3b736c7f42d0c8861ab0cc6eece785a8618" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageBitmap&quot;&gt;ImageBitmap&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageBitmap&quot;&gt;ImageBitmap&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="973cbfdbca2c36b7235dfc40f619002608ec7fce" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageBitmapRenderingContext&quot;&gt;ImageBitmapRenderingContext&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageBitmapRenderingContext&quot;&gt;ImageBitmapRenderingContext&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="f82954ca62c979f2496ec6c75850738af1a3c33a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageData&quot;&gt;ImageData&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageData&quot;&gt;ImageData&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="d285055d606a76b320c4404abab59ecb8acd058e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int16Array&quot;&gt;Int16Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int16Array&quot;&gt;Int16Array&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="aff6d2005ba74313a48864193ff2ecf7cf78f861" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int32Array&quot;&gt;Int32Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int32Array&quot;&gt;Int32Array&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="dd8fedd33e528d064a8c3c9df21aa80a0b282f4d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int8Array&quot;&gt;Int8Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int8Array&quot;&gt;Int8Array&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="129711733d4b366136e86fd6fcbf352f82eecce3" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/LinkStyle&quot;&gt;LinkStyle&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/LinkStyle&quot;&gt;LinkStyle&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="2b219bf877410a2e09d890c9e77587bb983243c8" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Location&quot;&gt;Location&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScriptの&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Location&quot;&gt;場所&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="594941baeab3b58f67ecd5c21d0b1e4b40bbc957" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDeviceInfo&quot;&gt;MediaDeviceInfo&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDeviceInfo&quot;&gt;MediaDeviceInfo&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="0740f2182dfbdaf8ba83fbd49306c7bbc1161276" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaError&quot;&gt;MediaError&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaError&quot;&gt;MediaError&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e79c365ce95423c640a10613c9ce3be82f04736d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaStreamConstraints&quot;&gt;MediaStreamConstraints&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaStreamConstraints&quot;&gt;MediaStreamConstraints&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="9e419166cd21b42d675612e45aa1af5c29ade451" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackConstraints&quot;&gt;MediaTrackConstraints&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackConstraints&quot;&gt;MediaTrackConstraints&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="68291c661b34c0e31166089125357d3815b272d8" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackSettings&quot;&gt;MediaTrackSettings&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackSettings&quot;&gt;MediaTrackSettings&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="ff03892bef60c1998049aef0de9ee2d17148a16a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackSupportedConstraints&quot;&gt;MediaTrackSupportedConstraints&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackSupportedConstraints&quot;&gt;MediaTrackSupportedConstraints&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="053f12e3979b8f507eece6ee8f2dda7eba1760f7" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MessageChannel&quot;&gt;MessageChannel&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MessageChannel&quot;&gt;MessageChannel&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="a713be19005a108490c636a26437642fcf666e96" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MimeType&quot;&gt;MimeType&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MimeType&quot;&gt;MimeType&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="9dcdfd72585577cb86ed3c56b45dcd29c329a2e2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MimeTypeArray&quot;&gt;MimeTypeArray&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MimeTypeArray&quot;&gt;MimeTypeArray&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="502e6200143e319eea72ef7a0d8f3976f09d6554" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationObserver&quot;&gt;MutationObserver&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationObserver&quot;&gt;MutationObserver&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="159d4c29526679b4def070ff47f3874ab0445340" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationObserverInit&quot;&gt;MutationObserverInit&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationObserverInit&quot;&gt;MutationObserverInit&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="c88b7e5c1859d6b4e116f43a892ec9e83413e2b9" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationRecord&quot;&gt;MutationRecord&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationRecord&quot;&gt;MutationRecord&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="ae9ba33271e618704e2556ffd0b4761516dbecf0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NamedNodeMap&quot;&gt;NamedNodeMap&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NamedNodeMap&quot;&gt;NamedNodeMap&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b4aaf62796642329437174298aebc06b6672bbe2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Navigator&quot;&gt;Navigator&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Navigator&quot;&gt;ナビゲーター&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="d1fdab215bf657f2971cf9c106d747aa79a0779f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorConcurrentHardware&quot;&gt;NavigatorConcurrentHardware&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorConcurrentHardware&quot;&gt;NavigatorConcurrentHardware&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="3eed33d131c33790c5648056a06c94987025b918" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorID&quot;&gt;NavigatorID&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorID&quot;&gt;NavigatorID&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="f13f74a7460676e529c928964a91f57efc1fb755" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorLanguage&quot;&gt;NavigatorLanguage&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorLanguage&quot;&gt;NavigatorLanguage&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="db9975cc843532c7e71febf7da5b9cdef4013205" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorOnLine&quot;&gt;NavigatorOnLine&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorOnLine&quot;&gt;NavigatorOnLine&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="0cab989ab29d81fc606498b1461b54abdb616973" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorPlugins&quot;&gt;NavigatorPlugins&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorPlugins&quot;&gt;NavigatorPlugins&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b4b114eb135375d93d610e89253f0d7f1338c498" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeFilter&quot;&gt;NodeFilter&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeFilter&quot;&gt;NodeFilter&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="837e4b2bb71ce6e6d07abaa4817afbd0a686267f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeIterator&quot;&gt;NodeIterator&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeIterator&quot;&gt;NodeIterator&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="0350ad5d05e21f7ce6c543c4ac253ea6516c4989" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeList&quot;&gt;NodeList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeList&quot;&gt;NodeList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="5ce16ccc392741a3c3d2c8e565b8a10724aec773" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NonDocumentTypeChildNode&quot;&gt;NonDocumentTypeChildNode&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NonDocumentTypeChildNode&quot;&gt;NonDocumentTypeChildNode&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="2fee1b01d1d6830d156d51f7bc02de375b36492c" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ParentNode&quot;&gt;ParentNode&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ParentNode&quot;&gt;ParentNode&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="3542685f71c53dcb7eadb5604c680f9810ac6991" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Path2D&quot;&gt;Path2D&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Path2D&quot;&gt;Path2D&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b57066c829f4ca9971eba9b6bb3d4bd38b7aea8e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PerformanceNavigation&quot;&gt;PerformanceNavigation&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PerformanceNavigation&quot;&gt;PerformanceNavigation&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="5accafb6bf29fc4fbec3bd2e054128cb2ba377dd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PerformanceTiming&quot;&gt;PerformanceTiming&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PerformanceTiming&quot;&gt;PerformanceTiming&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="d4fbaf94b37e485b14b450d8c7247ebb96aa678e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Plugin&quot;&gt;Plugin&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Plugin&quot;&gt;プラグイン&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="a3fc9a900a38b0133fe2a34587114f7fca726c3a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PluginArray&quot;&gt;PluginArray&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PluginArray&quot;&gt;PluginArray&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="2819f804c7a52056a59418c1fb2a86167b33fadf" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Range&quot;&gt;Range&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Range&quot;&gt;範囲&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="3b334cd256f0844989f2a345991c2eebcc56ff6e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Request&quot;&gt;Request&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Request&quot;&gt;リクエスト&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="0c52d88a09c46d141a3597b85a9216845f9eb9a1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Response&quot;&gt;Response&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Response&quot;&gt;応答&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="9ce8f42f6b18e9a8b089c9a14ecb5fdbaaea57c6" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAngle&quot;&gt;SVGAngle&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAngle&quot;&gt;SVGAngle&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="785e2f1f7635c086da66db4f3713f206535b9cc7" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedAngle&quot;&gt;SVGAnimatedAngle&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedAngle&quot;&gt;SVGAnimatedAngle&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="051a1286b426f5bec613b4abdcde9fa99f14ad38" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedBoolean&quot;&gt;SVGAnimatedBoolean&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedBoolean&quot;&gt;SVGAnimatedBoolean&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="81d7238d3df9d3b77c30b1ef3e78b1105e083d2a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedEnumeration&quot;&gt;SVGAnimatedEnumeration&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedEnumeration&quot;&gt;SVGAnimatedEnumeration&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="f04b9666e3a6dca28299f7846a3b53f766f49396" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedInteger&quot;&gt;SVGAnimatedInteger&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedInteger&quot;&gt;SVGAnimatedInteger&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="7774d99aa383d400d810ee4b809f89e1ba491a62" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedLength&quot;&gt;SVGAnimatedLength&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedLength&quot;&gt;SVGAnimatedLength&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="8b0a6e7fb9a1b23faeeb1c9113ee6f85cc9c34f1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedLengthList&quot;&gt;SVGAnimatedLengthList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedLengthList&quot;&gt;SVGAnimatedLengthList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="de7b4fa0a4c4bb3bdeca8e0ae307605fa182a490" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedNumber&quot;&gt;SVGAnimatedNumber&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedNumber&quot;&gt;SVGAnimatedNumber&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="176f0149ce43b70e00a21793f31c0f4848382dce" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedNumberList&quot;&gt;SVGAnimatedNumberList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedNumberList&quot;&gt;SVGAnimatedNumberList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e16282d1d93a66e25ec1e4d7ffbe189596d7852d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedPoints&quot;&gt;SVGAnimatedPoints&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedPoints&quot;&gt;SVGAnimatedPoints&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e5a8b61ef7c19a12dc2bb8afee431431ee113f84" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedPreserveAspectRatio&quot;&gt;SVGAnimatedPreserveAspectRatio&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedPreserveAspectRatio&quot;&gt;SVGAnimatedPreserveAspectRatio&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="2e7f7e344ee33aaef20de0ecb31899cf93296303" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedRect&quot;&gt;SVGAnimatedRect&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedRect&quot;&gt;SVGAnimatedRect&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e0e66a5ffa780d59897c918ac840cd70fa059232" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedString&quot;&gt;SVGAnimatedString&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedString&quot;&gt;SVGAnimatedString&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="0615dc49574b140ded7aa57b87618fffd3b30427" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedTransformList&quot;&gt;SVGAnimatedTransformList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedTransformList&quot;&gt;SVGAnimatedTransformList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b0e962fdeeb2551808a6e9aecbfe1a79a9cad559" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGLength&quot;&gt;SVGLength&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGLength&quot;&gt;SVGLength&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="078b1ec9b810dc9d975c22600b9c649cb85e51cf" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGLengthList&quot;&gt;SVGLengthList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGLengthList&quot;&gt;SVGLengthList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e08fa2c91c7c018c66a658d4ff9e7de2e687e68f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGNumber&quot;&gt;SVGNumber&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGNumber&quot;&gt;SVGNumber&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="abb6726d726b7d58da55bf78975506e3bf0e388b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGNumberList&quot;&gt;SVGNumberList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGNumberList&quot;&gt;SVGNumberList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="30358bc4fb2dfbd2f398bd1c37fe504752cecbad" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGPreserveAspectRatio&quot;&gt;SVGPreserveAspectRatio&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGPreserveAspectRatio&quot;&gt;SVGPreserveAspectRatio&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="6164bfeb6c1430f3b51271da676a9e9d47ffdd01" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGStringList&quot;&gt;SVGStringList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGStringList&quot;&gt;SVGStringList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="d1783b94978b6506971caef84995623354643256" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTests&quot;&gt;SVGTests&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTests&quot;&gt;SVGTest&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="efac11d0375fcac4e195ad460f2e9c2b8cc9dad1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTransform&quot;&gt;SVGTransform&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTransform&quot;&gt;SVGTransform&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="c2072d21623d4729dc79f90145320c926f93f51b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTransformList&quot;&gt;SVGTransformList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTransformList&quot;&gt;SVGTransformList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="794b61c8f72bac8f0b9d3fd2652c80ce1d80694d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGURIReference&quot;&gt;SVGURIReference&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGURIReference&quot;&gt;SVGURIReference&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="7c829e3628424e61dcc945a5462eea950f2d2c1d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGUnitTypes&quot;&gt;SVGUnitTypes&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGUnitTypes&quot;&gt;SVGUnitTypes&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="aaad2c9354613395e931347fed2604c7f33f44fd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGZoomAndPan&quot;&gt;SVGZoomAndPan&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGZoomAndPan&quot;&gt;SVGZoomAndPan&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="d0964c6b87e8f3595e610f46c83d621e45c94626" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Screen&quot;&gt;Screen&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Screen&quot;&gt;画面&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="7ab5bcdd6737147c7f9650419d9fa1d946080edd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ScrollToOptions&quot;&gt;ScrollToOptions&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ScrollToOptions&quot;&gt;ScrollToOptions&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="caf29a99f800ee4df1f509978fc9374661efadb6" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Slotable&quot;&gt;Slotable&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Slotable&quot;&gt;Slotable&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="c7b1cd1569fb790a7933995806002a84ef72115a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Storage&quot;&gt;Storage&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Storage&quot;&gt;ストレージ&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="df5f09f1c1d114ab78d0ed32fdc63bec2c70f7b2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/StyleSheet&quot;&gt;StyleSheet&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/StyleSheet&quot;&gt;StyleSheet&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="1db3c227625f52f06785d52413b5c48e54ff34ef" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/StyleSheetList&quot;&gt;StyleSheetList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/StyleSheetList&quot;&gt;StyleSheetList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="debcb2b5a5a08272f50dfab5ecbad48428a5713b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TextMetrics&quot;&gt;TextMetrics&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TextMetrics&quot;&gt;TextMetrics&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="51420fdb3827a705b67cb55f2acb6f7f7c1628c5" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TimeRanges&quot;&gt;TimeRanges&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TimeRanges&quot;&gt;TimeRanges&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e536765260fd33a0fb1c970d29b3f7ae1e52aa5b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Touch&quot;&gt;Touch&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Touch&quot;&gt;Touch&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="a047f1c4d3aaa1f205a636e1fb3c697f871596e3" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TreeWalker&quot;&gt;TreeWalker&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TreeWalker&quot;&gt;TreeWalker&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="1b6755f3767c0926efceb18412b59e78e5ddd7e6" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/URL&quot;&gt;URL&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/URL&quot;&gt;URL&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="a1bf59f10e3be594d883bfdf2a6469362f387868" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/URLSearchParams&quot;&gt;URLSearchParams&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/URLSearchParams&quot;&gt;URLSearchParams&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="3dfee26dedf689461470f9f5c52687188126f29e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint16Array&quot;&gt;Uint16Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint16Array&quot;&gt;Uint16Array&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b57fa61d6662e31034b82d1030292fd5e29802f2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint32Array&quot;&gt;Uint32Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint32Array&quot;&gt;Uint32Array&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="50101016b89badc5c44b4f57e7dd6fbc42c3d595" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint8Array&quot;&gt;Uint8Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint8Array&quot;&gt;Uint8Array&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="982e986db2fb851b76bb8066b72041ced1b81d88" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint8ClampedArray&quot;&gt;Uint8ClampedArray&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint8ClampedArray&quot;&gt;Uint8ClampedArray&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="2e48d5873d97381debc1ed63a5d1f151e5b8c6cb" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ValidityState&quot;&gt;ValidityState&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ValidityState&quot;&gt;ValidityState&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="181a8619cf89cb42e0df69afa8bc974fd83e4bf2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/VideoTrack&quot;&gt;VideoTrack&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/VideoTrack&quot;&gt;VideoTrack&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="736f21bc1ba71124f7e6d21a43012838c88762f1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLActiveInfo&quot;&gt;WebGLActiveInfo&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLActiveInfo&quot;&gt;WebGLActiveInfo&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="8c22a91d08cf479408a96c4aff1215bc647b37a5" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLRenderingContext&quot;&gt;WebGLRenderingContext&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLRenderingContext&quot;&gt;WebGLRenderingContext&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="24d413e2f6ddca096f6b75605cc7a8505e87bed0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLShaderPrecisionFormat&quot;&gt;WebGLShaderPrecisionFormat&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLShaderPrecisionFormat&quot;&gt;WebGLShaderPrecisionFormat&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="720c4b07bf8a67700ee7fdae70cb56aed58d51d6" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLUniformLocation&quot;&gt;WebGLUniformLocation&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLUniformLocation&quot;&gt;WebGLUniformLocation&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="dbdaf28de983adc6f6372cfce201b7e91dcab861" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowEventHandlers&quot;&gt;WindowEventHandlers&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowEventHandlers&quot;&gt;WindowEventHandlers&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b44fb2210010be4cea8c8bd9b7557abeacbf1323" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowLocalStorage&quot;&gt;WindowLocalStorage&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowLocalStorage&quot;&gt;WindowLocalStorage&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="edd5ec34a8b69af5a791317e7719446b9d28ac71" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowOrWorkerGlobalScope&quot;&gt;WindowOrWorkerGlobalScope&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowOrWorkerGlobalScope&quot;&gt;WindowOrWorkerGlobalScope&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="12ded232807775d1c78389294216756b150cc1f0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowSessionStorage&quot;&gt;WindowSessionStorage&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowSessionStorage&quot;&gt;WindowSessionStorage&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="29a69a8bf1473782da6fb3407ef2c139a6e6233d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WorkerLocation&quot;&gt;WorkerLocation&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WorkerLocation&quot;&gt;WorkerLocation&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="02de36425e15ec92f0499e15152296de14a85669" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WorkerNavigator&quot;&gt;WorkerNavigator&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WorkerNavigator&quot;&gt;WorkerNavigator&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="7b37415bc97597a600acdaac8f6aa4588e841914" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/XMLSerializer&quot;&gt;XMLSerializer&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/XMLSerializer&quot;&gt;XMLSerializer&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="169719bb7fe6c072f51b022f45191170db2da5b0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math&quot;&gt;Math object&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math&quot;&gt;Mathオブジェクト&lt;/a&gt;をKotlinに公開します。</target>
        </trans-unit>
        <trans-unit id="af12a69227d7123455a07f62644ac1f53f5fc9b0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise object&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promiseオブジェクト&lt;/a&gt;をKotlinに公開します。</target>
        </trans-unit>
        <trans-unit id="e9eb87eff6a035d83115bfb1ec018f9bc5372b8b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/RegExp&quot;&gt;RegExp object&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/RegExp&quot;&gt;RegExpオブジェクト&lt;/a&gt;をKotlinに公開します。</target>
        </trans-unit>
        <trans-unit id="97b695b9b9cfde3612c21b3add972cc0f21f4e26" translate="yes" xml:space="preserve">
          <source>Expression</source>
          <target state="translated">Expression</target>
        </trans-unit>
        <trans-unit id="f1c19d6b5edc0f215409941d6605832d490f7a6e" translate="yes" xml:space="preserve">
          <source>Expression body formatting</source>
          <target state="translated">式本文の書式設定</target>
        </trans-unit>
        <trans-unit id="8250f28d9a39afd3e8181e48d1deb5e48d360b03" translate="yes" xml:space="preserve">
          <source>Expressions using values of &lt;code&gt;dynamic&lt;/code&gt; type are translated to JavaScript &quot;as is&quot;, and do not use the Kotlin operator conventions. The following operators are supported:</source>
          <target state="translated">&lt;code&gt;dynamic&lt;/code&gt; タイプの値を使用する式は「現状のまま」JavaScriptに変換され、Kotlin演算子の規則を使用しません。次の演算子がサポートされています。</target>
        </trans-unit>
        <trans-unit id="8eb6bfee0bd7f9803c91c54c8e8b8b54210eb10e" translate="yes" xml:space="preserve">
          <source>ExtendableEventInit</source>
          <target state="translated">ExtendableEventInit</target>
        </trans-unit>
        <trans-unit id="6a0d6c93904de6a1cc9d0c587fd4c50c1053901f" translate="yes" xml:space="preserve">
          <source>ExtendableMessageEventInit</source>
          <target state="translated">ExtendableMessageEventInit</target>
        </trans-unit>
        <trans-unit id="d83a59dce7cd16ba52b0e73db158eb39b8977bdb" translate="yes" xml:space="preserve">
          <source>Extending JavaScript classes</source>
          <target state="translated">JavaScriptのクラスを拡張する</target>
        </trans-unit>
        <trans-unit id="0d6d521c48a1ba72b1626fab7ee2b08c70405da7" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt; by introducing a way to get matched groups by name, when regex supports it.</source>
          <target state="translated">正規表現がサポートしている場合に、名前で一致するグループを取得する方法を導入することにより、&lt;a href=&quot;-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt;を拡張します。</target>
        </trans-unit>
        <trans-unit id="5e41da74dacb9cfc137f741cb7062c82eaab0d55" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;../-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt; by introducing a way to get matched groups by name, when regex supports it.</source>
          <target state="translated">正規表現がサポートしている場合に、名前で一致するグループを取得する方法を導入することにより、&lt;a href=&quot;../-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt;を拡張します。</target>
        </trans-unit>
        <trans-unit id="e6ce257aad19fe0416795a1c9aadc67e8ed873e3" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;../../kotlin.text/-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt; by introducing a way to get matched groups by name, when regex supports it.</source>
          <target state="translated">正規表現がサポートしている場合に、名前で一致するグループを取得する方法を導入することにより、&lt;a href=&quot;../../kotlin.text/-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt;を拡張します。</target>
        </trans-unit>
        <trans-unit id="be3051f954b68657a9cbdc25d786b4ff25eff1c0" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;index&quot;&gt;MatchGroupCollection&lt;/a&gt; by introducing a way to get matched groups by name, when regex supports it.</source>
          <target state="translated">正規表現がサポートしている場合に、名前で一致するグループを取得する方法を導入することにより、&lt;a href=&quot;index&quot;&gt;MatchGroupCollection&lt;/a&gt;を拡張します。</target>
        </trans-unit>
        <trans-unit id="d16da02113a4ec75748867c4632e26a2f7b7bc45" translate="yes" xml:space="preserve">
          <source>Extends the given &lt;a href=&quot;nulls-first#kotlin.comparisons%24nullsFirst%28kotlin.Comparator%28%28kotlin.comparisons.nullsFirst.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; of non-nullable values to a comparator of nullable values considering &lt;code&gt;null&lt;/code&gt; value less than any other value.</source>
          <target state="translated">所与延び&lt;a href=&quot;nulls-first#kotlin.comparisons%24nullsFirst%28kotlin.Comparator%28%28kotlin.comparisons.nullsFirst.T%29%29%29%2Fcomparator&quot;&gt;コンパレータ&lt;/a&gt;考慮null許容値の比較に非NULL可能値の &lt;code&gt;null&lt;/code&gt; 以下の任意の他の値よりも値。</target>
        </trans-unit>
        <trans-unit id="54ea2d889c8654286a6452980a32b562769b0d90" translate="yes" xml:space="preserve">
          <source>Extends the given &lt;a href=&quot;nulls-first#kotlin.comparisons%24nullsFirst(kotlin.Comparator((kotlin.comparisons.nullsFirst.T)))/comparator&quot;&gt;comparator&lt;/a&gt; of non-nullable values to a comparator of nullable values considering &lt;code&gt;null&lt;/code&gt; value less than any other value.</source>
          <target state="translated">所与延び&lt;a href=&quot;nulls-first#kotlin.comparisons%24nullsFirst(kotlin.Comparator((kotlin.comparisons.nullsFirst.T)))/comparator&quot;&gt;コンパレータ&lt;/a&gt;考慮null許容値の比較に非NULL可能値の &lt;code&gt;null&lt;/code&gt; 以下の任意の他の値よりも値。</target>
        </trans-unit>
        <trans-unit id="cbb9ec2258d4e2b1504fbffe64af72ec3ff079e0" translate="yes" xml:space="preserve">
          <source>Extends the given &lt;a href=&quot;nulls-last#kotlin.comparisons%24nullsLast%28kotlin.Comparator%28%28kotlin.comparisons.nullsLast.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; of non-nullable values to a comparator of nullable values considering &lt;code&gt;null&lt;/code&gt; value greater than any other value.</source>
          <target state="translated">所与延び&lt;a href=&quot;nulls-last#kotlin.comparisons%24nullsLast%28kotlin.Comparator%28%28kotlin.comparisons.nullsLast.T%29%29%29%2Fcomparator&quot;&gt;コンパレータ&lt;/a&gt;考慮null許容値の比較に非NULL可能値の &lt;code&gt;null&lt;/code&gt; 以外の値よりも大きい値を。</target>
        </trans-unit>
        <trans-unit id="89f8f48c4197d4d526a2aec549f8f596ceaff3f3" translate="yes" xml:space="preserve">
          <source>Extends the given &lt;a href=&quot;nulls-last#kotlin.comparisons%24nullsLast(kotlin.Comparator((kotlin.comparisons.nullsLast.T)))/comparator&quot;&gt;comparator&lt;/a&gt; of non-nullable values to a comparator of nullable values considering &lt;code&gt;null&lt;/code&gt; value greater than any other value.</source>
          <target state="translated">所与延び&lt;a href=&quot;nulls-last#kotlin.comparisons%24nullsLast(kotlin.Comparator((kotlin.comparisons.nullsLast.T)))/comparator&quot;&gt;コンパレータ&lt;/a&gt;考慮null許容値の比較に非NULL可能値の &lt;code&gt;null&lt;/code&gt; 以外の値よりも大きい値を。</target>
        </trans-unit>
        <trans-unit id="659087d3ca23db6ae11e0a43579b5f4a260dda11" translate="yes" xml:space="preserve">
          <source>Extension</source>
          <target state="translated">Extension</target>
        </trans-unit>
        <trans-unit id="bc56dc0b9c671805d3fa3254212af0b6ec6d4765" translate="yes" xml:space="preserve">
          <source>Extension Functions</source>
          <target state="translated">拡張機能</target>
        </trans-unit>
        <trans-unit id="07d42748298f0d67ded63b428e89231e8cc38745" translate="yes" xml:space="preserve">
          <source>Extension Properties</source>
          <target state="translated">拡張プロパティ</target>
        </trans-unit>
        <trans-unit id="f3a349da9b92423626eca70230c45e7f230c41a4" translate="yes" xml:space="preserve">
          <source>Extension and member functions</source>
          <target state="translated">拡張機能とメンバー機能</target>
        </trans-unit>
        <trans-unit id="0508e77219f46be972ce3c02c3d431e8dfa41ced" translate="yes" xml:space="preserve">
          <source>Extension functions</source>
          <target state="translated">拡張機能</target>
        </trans-unit>
        <trans-unit id="c8264eafd9b93a89477b0af2f3e72bde5f7f0098" translate="yes" xml:space="preserve">
          <source>Extension functions are explained in &lt;a href=&quot;extensions&quot;&gt;their own section&lt;/a&gt;.</source>
          <target state="translated">拡張機能については&lt;a href=&quot;extensions&quot;&gt;、独自のセクションで&lt;/a&gt;説明しています。</target>
        </trans-unit>
        <trans-unit id="2d2a44dee5f51576e0e165d74f152ef76b696d38" translate="yes" xml:space="preserve">
          <source>Extension functions providing querying operations for collections (eager) and sequences (lazy).</source>
          <target state="translated">コレクション(eager)とシーケンス(lazy)のクエリ操作を提供する拡張関数です。</target>
        </trans-unit>
        <trans-unit id="1fe77a025e03b7c1d219475308773f2eb67f5ea0" translate="yes" xml:space="preserve">
          <source>Extension functions/properties</source>
          <target state="translated">拡張機能/プロパティ</target>
        </trans-unit>
        <trans-unit id="ce8ebae04f45bf9567544caaf288828f1ab273d3" translate="yes" xml:space="preserve">
          <source>Extension properties</source>
          <target state="translated">拡張プロパティ</target>
        </trans-unit>
        <trans-unit id="6fbafd05c05dff63bd87c3c487287decd1a283b0" translate="yes" xml:space="preserve">
          <source>Extension receiver of an extension function or property.</source>
          <target state="translated">拡張機能またはプロパティの拡張レシーバー。</target>
        </trans-unit>
        <trans-unit id="01085898b3fab1a22bc2f04ad759a96cacb2e826" translate="yes" xml:space="preserve">
          <source>ExtensionFunctionType</source>
          <target state="translated">ExtensionFunctionType</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="eaacaef25beb011b0ae53f176e1e8da974bb62d7" translate="yes" xml:space="preserve">
          <source>Extensions and category members</source>
          <target state="translated">拡張機能とカテゴリメンバー</target>
        </trans-unit>
        <trans-unit id="65823204317e74b224cb6b2cce660c01bb0fce85" translate="yes" xml:space="preserve">
          <source>Extensions are resolved &lt;strong&gt;statically&lt;/strong&gt;</source>
          <target state="translated">拡張機能は&lt;strong&gt;静的に&lt;/strong&gt;解決されます&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a9850a2bfef7f87f77e79f50f16de67a4437087" translate="yes" xml:space="preserve">
          <source>Extensions declared as members can be declared as &lt;code&gt;open&lt;/code&gt; and overridden in subclasses. This means that the dispatch of such functions is virtual with regard to the dispatch receiver type, but static with regard to the extension receiver type.</source>
          <target state="translated">メンバーとして宣言された拡張機能は、 &lt;code&gt;open&lt;/code&gt; として宣言され、サブクラスでオーバーライドできます。つまり、このような関数のディスパッチはディスパッチレシーバータイプに関しては仮想ですが、拡張レシーバータイプに関しては静的です。</target>
        </trans-unit>
        <trans-unit id="8e6d1c8a997cd22ea827a61962ef748d5ed5ca48" translate="yes" xml:space="preserve">
          <source>Extensions do not actually modify classes they extend. By defining an extension, you do not insert new members into a class, but merely make new functions callable with the dot-notation on variables of this type.</source>
          <target state="translated">拡張機能は、拡張するクラスを実際に変更することはありません。拡張機能を定義することで、新しいメンバをクラスに挿入するのではなく、単にこの型の変数にドット記法で新しい関数を呼び出し可能にするだけです。</target>
        </trans-unit>
        <trans-unit id="2593a8dfc13c7c0c959ccdc515619ba9d1c8d073" translate="yes" xml:space="preserve">
          <source>Extensions for &lt;a href=&quot;../../../../../docs/reference/reflection&quot;&gt;Kotlin reflection&lt;/a&gt; provided by &lt;code&gt;kotlin-reflect&lt;/code&gt; library.</source>
          <target state="translated">&lt;code&gt;kotlin-reflect&lt;/code&gt; ライブラリによって提供される&lt;a href=&quot;../../../../../docs/reference/reflection&quot;&gt;Kotlinリフレクションの&lt;/a&gt;拡張機能。</target>
        </trans-unit>
        <trans-unit id="262319f6e6a669249cf95f667b1fd0fa2e5c350e" translate="yes" xml:space="preserve">
          <source>Extensions for &lt;a href=&quot;docs/reference/reflection&quot;&gt;Kotlin reflection&lt;/a&gt; provided by &lt;code&gt;kotlin-reflect&lt;/code&gt; library.</source>
          <target state="translated">&lt;code&gt;kotlin-reflect&lt;/code&gt; ライブラリによって提供される&lt;a href=&quot;docs/reference/reflection&quot;&gt;Kotlinリフレクションの&lt;/a&gt;拡張機能。</target>
        </trans-unit>
        <trans-unit id="49832a1ebdf4f5668682a13c2f151f8e1267195f" translate="yes" xml:space="preserve">
          <source>Extensions for External Classes</source>
          <target state="translated">外部クラスの拡張機能</target>
        </trans-unit>
        <trans-unit id="5f228be09712a15893b5d848c62e3c657711b680" translate="yes" xml:space="preserve">
          <source>Extensions for JDK classes making it convenient to work with files, IO, and threading.</source>
          <target state="translated">ファイル、IO、スレッドを使った作業を便利にするJDKクラスのための拡張機能。</target>
        </trans-unit>
        <trans-unit id="4610d13ada7dc94c37cb8c0d288ed51a8b59020e" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.BufferedInputStream</source>
          <target state="translated">java.io.BufferedInputStreamの拡張機能</target>
        </trans-unit>
        <trans-unit id="90d18d9176044d4704cc79db47128df70dcfac58" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.BufferedReader</source>
          <target state="translated">java.io.BufferedReaderの拡張機能</target>
        </trans-unit>
        <trans-unit id="c9a256ac8d8337e3986435759ce63b670611d314" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.File</source>
          <target state="translated">java.io.Fileの拡張機能</target>
        </trans-unit>
        <trans-unit id="353d555a82b35fa53856f04bb4a9788692ddcdaa" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.InputStream</source>
          <target state="translated">java.io.InputStreamの拡張機能</target>
        </trans-unit>
        <trans-unit id="7c866a3221824bca9b7f5d4599a0c9dc84bab82f" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.OutputStream</source>
          <target state="translated">java.io.OutputStreamの拡張機能</target>
        </trans-unit>
        <trans-unit id="11ab0c0a7f587ef465def37cfdc1deb1b4be69ba" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.Reader</source>
          <target state="translated">java.io.Readerの拡張機能</target>
        </trans-unit>
        <trans-unit id="ddccd6f98474eb5b6f85a7e011a8615f58ab99ac" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.Writer</source>
          <target state="translated">java.io.Writer用の拡張機能</target>
        </trans-unit>
        <trans-unit id="910af862461d3bd30ea9ce035af6e32975f3ffa5" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.Appendable</source>
          <target state="translated">java.lang.Appendable用の拡張機能</target>
        </trans-unit>
        <trans-unit id="5d734df1d86332fe5c1c0883b237481868a6eb45" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.Class</source>
          <target state="translated">java.lang.Classの拡張機能</target>
        </trans-unit>
        <trans-unit id="7dfb388d369e5267e4e1d8c071143d790f1da0a9" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.StringBuilder</source>
          <target state="translated">java.lang.StringBuilder用の拡張機能</target>
        </trans-unit>
        <trans-unit id="42a7e63663d54d93bcac2363d5f99b205132dcb1" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.ThreadLocal</source>
          <target state="translated">java.lang.ThreadLocal の拡張機能</target>
        </trans-unit>
        <trans-unit id="e0d33457d7c5ae07736459433ab7863dd2d23048" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.reflect.Constructor</source>
          <target state="translated">java.lang.reflect.Constructor の拡張機能</target>
        </trans-unit>
        <trans-unit id="52860746d7cb86bbffcd7d48faaa9614487e2238" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.reflect.Field</source>
          <target state="translated">java.lang.reflect.Fieldの拡張機能</target>
        </trans-unit>
        <trans-unit id="18e154fc99122dceb560cb89e50cd85317a5ec79" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.reflect.Method</source>
          <target state="translated">java.lang.reflect.Methodの拡張機能</target>
        </trans-unit>
        <trans-unit id="4d57a6ee49879007c6f1c94860855f9cab702a1f" translate="yes" xml:space="preserve">
          <source>Extensions for java.math.BigDecimal</source>
          <target state="translated">java.math.BigDecimalの拡張機能</target>
        </trans-unit>
        <trans-unit id="0418015890da6d28427d023d4a378a41e7681950" translate="yes" xml:space="preserve">
          <source>Extensions for java.math.BigInteger</source>
          <target state="translated">java.math.BigIntegerの拡張機能</target>
        </trans-unit>
        <trans-unit id="fe35e40777eea67159ce5cc1fdd71d4c5d0d0ce1" translate="yes" xml:space="preserve">
          <source>Extensions for java.net.URL</source>
          <target state="translated">java.net.URL用の拡張機能</target>
        </trans-unit>
        <trans-unit id="97e069f223cf669139046c0679a9b909b863d264" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.Enumeration</source>
          <target state="translated">java.util.Enumerationの拡張機能</target>
        </trans-unit>
        <trans-unit id="6a90de809fe794a79ec52bdf3bd3fa37c93d3dea" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.Random</source>
          <target state="translated">java.util.Randomの拡張機能</target>
        </trans-unit>
        <trans-unit id="3f3041f4748454781df8851b55d5eccdd80a6c37" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.Timer</source>
          <target state="translated">java.util.Timerの拡張機能</target>
        </trans-unit>
        <trans-unit id="86c125f61aa798d8e570c84873c21f581edee4b6" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.concurrent.ConcurrentMap</source>
          <target state="translated">java.util.concurrent.ConcurrentMapの拡張機能</target>
        </trans-unit>
        <trans-unit id="7c4cef4cdc47c5a0bf19e79d3eb4fa62d21ca526" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.concurrent.locks.Lock</source>
          <target state="translated">java.util.concurrent.lock.Lockの拡張機能</target>
        </trans-unit>
        <trans-unit id="b485fb17804e0e991120066ac20569bfe5c26a3c" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.concurrent.locks.ReentrantReadWriteLock</source>
          <target state="translated">java.util.concurrent.lock.ReentrantReadWriteLockの拡張機能</target>
        </trans-unit>
        <trans-unit id="414cada964acd8bd9e1e6c02985aebf6df173ad7" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.regex.Pattern</source>
          <target state="translated">java.util.regex.Patternの拡張機能</target>
        </trans-unit>
        <trans-unit id="757d6146e2012199e6bb842d802f53ef4ff91fae" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.stream.DoubleStream</source>
          <target state="translated">java.util.stream.DoubleStream用の拡張機能</target>
        </trans-unit>
        <trans-unit id="2730f9b1d95c9b0be067fdfe8d1bf63f04d66c36" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.stream.IntStream</source>
          <target state="translated">java.util.stream.IntStreamの拡張機能</target>
        </trans-unit>
        <trans-unit id="a27ac102df0c42a230129dd84535df76fbd245be" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.stream.LongStream</source>
          <target state="translated">java.util.stream.LongStream用の拡張機能</target>
        </trans-unit>
        <trans-unit id="64be01bf05722c57090d4f50f3ce593da917cb7f" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.stream.Stream</source>
          <target state="translated">java.util.stream.Streamの拡張機能</target>
        </trans-unit>
        <trans-unit id="ffd106e43f1f60a473e9c938c997ed060ed8c485" translate="yes" xml:space="preserve">
          <source>Extensions for kotlin.sequences.Sequence</source>
          <target state="translated">kotlin.sequence.Sequence の拡張機能</target>
        </trans-unit>
        <trans-unit id="f99ea873dfea775479c335eab5803cfde34107d6" translate="yes" xml:space="preserve">
          <source>Extensions utilize the same &lt;a href=&quot;visibility-modifiers&quot;&gt;visibility of other entities&lt;/a&gt; as regular functions declared in the same scope would. For example:</source>
          <target state="translated">拡張機能は、同じスコープで宣言された通常の関数と同じように&lt;a href=&quot;visibility-modifiers&quot;&gt;、他のエンティティの可視性を&lt;/a&gt;利用します。例えば：</target>
        </trans-unit>
        <trans-unit id="8d10c693b773b327ecf17fbda7591feccda0c54d" translate="yes" xml:space="preserve">
          <source>External</source>
          <target state="translated">External</target>
        </trans-unit>
        <trans-unit id="b218d608576f8d28f4a7419eec6029fe3056ab1d" translate="yes" xml:space="preserve">
          <source>External interfaces have some restrictions:</source>
          <target state="translated">外部インターフェースにはいくつかの制限があります。</target>
        </trans-unit>
        <trans-unit id="fbe670fe71f260f3b9c49599ce41e0605a44d7d5" translate="yes" xml:space="preserve">
          <source>External parcelers can be applied using &lt;code&gt;@TypeParceler&lt;/code&gt; or &lt;code&gt;@WriteWith&lt;/code&gt; annotations:</source>
          <target state="translated">&lt;code&gt;@TypeParceler&lt;/code&gt; または &lt;code&gt;@WriteWith&lt;/code&gt; アノテーションを使用して、外部パーセルを適用できます。</target>
        </trans-unit>
        <trans-unit id="ae31299de3fd40f30a779befa5b69d1b665ecee7" translate="yes" xml:space="preserve">
          <source>ExternalObjCClass</source>
          <target state="translated">ExternalObjCClass</target>
        </trans-unit>
        <trans-unit id="8c3e992beac9ce57c5d18399f9649cfe6776dc02" translate="yes" xml:space="preserve">
          <source>Extract function refactoring</source>
          <target state="translated">抽出関数リファクタリング</target>
        </trans-unit>
        <trans-unit id="4747b6777a88b670963d81fa87bfefaa9f026fbb" translate="yes" xml:space="preserve">
          <source>Extract small pieces of Java functionality and convert to Kotlin classes and functions using the Java-to-Kotlin converter.</source>
          <target state="translated">Javaの機能の小片を抽出し、Java-to-Kotlinコンバータを使用してKotlinのクラスや関数に変換します。</target>
        </trans-unit>
        <trans-unit id="d7e4092f1ada90ff78c5ffbaece8f1d9c9fe883e" translate="yes" xml:space="preserve">
          <source>Extracts the key of an &lt;a href=&quot;key-of#kotlin.collections.Grouping%24keyOf%28kotlin.collections.Grouping.T%29%2Felement&quot;&gt;element&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;key-of#kotlin.collections.Grouping%24keyOf%28kotlin.collections.Grouping.T%29%2Felement&quot;&gt;要素&lt;/a&gt;のキーを抽出します。</target>
        </trans-unit>
        <trans-unit id="ecda6aebc922ae5661a2877a1185dbee753cf463" translate="yes" xml:space="preserve">
          <source>Extracts the key of an &lt;a href=&quot;key-of#kotlin.collections.Grouping%24keyOf(kotlin.collections.Grouping.T)/element&quot;&gt;element&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;key-of#kotlin.collections.Grouping%24keyOf(kotlin.collections.Grouping.T)/element&quot;&gt;要素&lt;/a&gt;のキーを抽出します。</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="987f4e96caf5df1037efbd4ee25756938e9da844" translate="yes" xml:space="preserve">
          <source>FIELD</source>
          <target state="translated">FIELD</target>
        </trans-unit>
        <trans-unit id="b4915d3a7ef82abdf96f2b5042452a69b2ea344c" translate="yes" xml:space="preserve">
          <source>FILE</source>
          <target state="translated">FILE</target>
        </trans-unit>
        <trans-unit id="58f8d703301dc080dbc5ad227fc9eb9a6907792a" translate="yes" xml:space="preserve">
          <source>FINAL_QUOTE_PUNCTUATION</source>
          <target state="translated">FINAL_QUOTE_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="3f6103eba0b588dc2c4ca41ac7c6811788d10af9" translate="yes" xml:space="preserve">
          <source>FORMAT</source>
          <target state="translated">FORMAT</target>
        </trans-unit>
        <trans-unit id="cbbe4ab96942b98eb0abdac26822dc1d38333a1f" translate="yes" xml:space="preserve">
          <source>FS</source>
          <target state="translated">FS</target>
        </trans-unit>
        <trans-unit id="63425456f14a800f08b688a005e2e85f84241751" translate="yes" xml:space="preserve">
          <source>FUNCTION</source>
          <target state="translated">FUNCTION</target>
        </trans-unit>
        <trans-unit id="9b310938807ae01c09739cc6dfb16a87ccdf31c5" translate="yes" xml:space="preserve">
          <source>Factory functions</source>
          <target state="translated">工場機能</target>
        </trans-unit>
        <trans-unit id="6a870f1db04a4fcdfc79d2c09cb8d2638f09b148" translate="yes" xml:space="preserve">
          <source>Fails the build if errors are detected during the compilation</source>
          <target state="translated">コンパイル中にエラーが検出された場合、ビルドに失敗します。</target>
        </trans-unit>
        <trans-unit id="d7376abef46b61b2c0e7f3ea50e99785a96f7b70" translate="yes" xml:space="preserve">
          <source>Failure to call either method will result in the iteration terminating with a failed state</source>
          <target state="translated">いずれかのメソッドの呼び出しに失敗すると、失敗した状態で反復処理が終了します。</target>
        </trans-unit>
        <trans-unit id="cf4e939a4bc9f1f8a5ed344753387fde48e4f393" translate="yes" xml:space="preserve">
          <source>Fan-in</source>
          <target state="translated">Fan-in</target>
        </trans-unit>
        <trans-unit id="68d396bc4617b24173f6299d8899670495af2a75" translate="yes" xml:space="preserve">
          <source>Fan-out</source>
          <target state="translated">Fan-out</target>
        </trans-unit>
        <trans-unit id="3985dc2113f752ea3d5ba01f6f5ea23216fd7920" translate="yes" xml:space="preserve">
          <source>Feature Releases and Incremental Releases</source>
          <target state="translated">フィーチャーリリースとインクリメンタルリリース</target>
        </trans-unit>
        <trans-unit id="c785d69b047aae15681a82c14fb44770ecc346fb" translate="yes" xml:space="preserve">
          <source>Feature releases often add new features and may remove or change previously deprecated ones. Feature graduation from experimental to stable also happens in feature releases.</source>
          <target state="translated">フィーチャーリリースでは、新機能が追加されたり、以前に非推奨とされた機能が削除されたり変更されたりすることがよくあります。実験的な機能から安定版への機能の移行も機能リリースで行われます。</target>
        </trans-unit>
        <trans-unit id="e1ac4aa218f52c0a8246343a13fb155e90bac529" translate="yes" xml:space="preserve">
          <source>Feature releases often add new features and may remove or change previously deprecated ones. Feature graduation from pre-stable to stable also happens in feature releases.</source>
          <target state="translated">フィーチャーリリースでは、しばしば新しい機能が追加され、以前に非推奨とされた機能が削除されたり変更されたりします。フィーチャーリリースでは、プレステーブルから安定版への機能の移行も行われます。</target>
        </trans-unit>
        <trans-unit id="fc8d8a130e59cea8845a112b8bb13aff241f58c0" translate="yes" xml:space="preserve">
          <source>FetchEventInit</source>
          <target state="translated">FetchEventInit</target>
        </trans-unit>
        <trans-unit id="2b91e715d2d02f2af55c3b002a28880144e2035c" translate="yes" xml:space="preserve">
          <source>Field, including property's backing field</source>
          <target state="translated">物件の裏地を含む畑</target>
        </trans-unit>
        <trans-unit id="af1f1743894e9d2075372f912106995709044999" translate="yes" xml:space="preserve">
          <source>Fields cannot be declared directly in Kotlin classes. However, when a property needs a backing field, Kotlin provides it automatically. This backing field can be referenced in the accessors using the &lt;code&gt;field&lt;/code&gt; identifier:</source>
          <target state="translated">Kotlinクラスでフィールドを直接宣言することはできません。ただし、プロパティがバッキングフィールドを必要とする場合、Kotlinはそれを自動的に提供します。このバッキングフィールドは、 &lt;code&gt;field&lt;/code&gt; 識別子を使用してアクセサーで参照できます。</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="0b2ab472c98d63ec948dc1ae7415adc951da0e82" translate="yes" xml:space="preserve">
          <source>File I/O</source>
          <target state="translated">ファイル入出力</target>
        </trans-unit>
        <trans-unit id="c244fb903631a89023331dc332d1f20761fe92c7" translate="yes" xml:space="preserve">
          <source>File annotations</source>
          <target state="translated">ファイルの注釈</target>
        </trans-unit>
        <trans-unit id="4795bd822544fa93a0e6b59333ebc039830614e8" translate="yes" xml:space="preserve">
          <source>File annotations are placed after the file comment (if any), before the &lt;code&gt;package&lt;/code&gt; statement, and are separated from &lt;code&gt;package&lt;/code&gt; with a blank line (to emphasize the fact that they target the file and not the package).</source>
          <target state="translated">ファイルの注釈は、ファイルのコメント（ある場合）の後、 &lt;code&gt;package&lt;/code&gt; ステートメントの前に配置され、 &lt;code&gt;package&lt;/code&gt; とは空白行で区切られます（パッケージではなくファイルを対象としていることを強調するため）。</target>
        </trans-unit>
        <trans-unit id="11d00030429cf440a0eed93048e18bcf0f608864" translate="yes" xml:space="preserve">
          <source>FileAlreadyExistsException</source>
          <target state="translated">FileAlreadyExistsException</target>
        </trans-unit>
        <trans-unit id="dcbfb4b9458e6276e2eaed8e1c3a90abe3a03e22" translate="yes" xml:space="preserve">
          <source>FileList</source>
          <target state="translated">FileList</target>
        </trans-unit>
        <trans-unit id="1eeed9fc8ac08cae63efd3e6cfb86688ca1eb09e" translate="yes" xml:space="preserve">
          <source>FilePropertyBag</source>
          <target state="translated">FilePropertyBag</target>
        </trans-unit>
        <trans-unit id="24e9abbe8a8774b06b669d519dc39a1fc22f37ef" translate="yes" xml:space="preserve">
          <source>FileReaderSync</source>
          <target state="translated">FileReaderSync</target>
        </trans-unit>
        <trans-unit id="f2c382539a871cd69dfa9067309de203426794f4" translate="yes" xml:space="preserve">
          <source>FileSystemException</source>
          <target state="translated">FileSystemException</target>
        </trans-unit>
        <trans-unit id="2019cdf50d33b987fa3917d1d7ff358ce86d7ed1" translate="yes" xml:space="preserve">
          <source>FileTreeWalk</source>
          <target state="translated">FileTreeWalk</target>
        </trans-unit>
        <trans-unit id="9d8ed3c9c34c5bd81bf0d6039e6207425141909a" translate="yes" xml:space="preserve">
          <source>FileWalkDirection</source>
          <target state="translated">FileWalkDirection</target>
        </trans-unit>
        <trans-unit id="851077fa3616a78308f5defffcf72a0cd04b8626" translate="yes" xml:space="preserve">
          <source>Fills a subrange of the specified &lt;code&gt;UByte&lt;/code&gt;&lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;array&lt;/a&gt; starting from &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndex&lt;/a&gt; inclusive and ending &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndex&lt;/a&gt; exclusive with random UBytes.</source>
          <target state="translated">指定されたのサブレンジ塗りつぶし &lt;code&gt;UByte&lt;/code&gt; &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;配列&lt;/a&gt;から始まっ&lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;たfromIndexの&lt;/a&gt;包括的で終了&lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndexのを&lt;/a&gt;ランダムUBytesとの独占を。</target>
        </trans-unit>
        <trans-unit id="eef15a14a786e45a82af03476fd21d8da28f02ed" translate="yes" xml:space="preserve">
          <source>Fills a subrange of the specified &lt;code&gt;UByte&lt;/code&gt;&lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray,%20kotlin.Int,%20kotlin.Int)/array&quot;&gt;array&lt;/a&gt; starting from &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray,%20kotlin.Int,%20kotlin.Int)/fromIndex&quot;&gt;fromIndex&lt;/a&gt; inclusive and ending &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray,%20kotlin.Int,%20kotlin.Int)/toIndex&quot;&gt;toIndex&lt;/a&gt; exclusive with random UBytes.</source>
          <target state="translated">指定されたのサブレンジ塗りつぶし &lt;code&gt;UByte&lt;/code&gt; &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray,%20kotlin.Int,%20kotlin.Int)/array&quot;&gt;配列&lt;/a&gt;から始まっ&lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray,%20kotlin.Int,%20kotlin.Int)/fromIndex&quot;&gt;たfromIndexの&lt;/a&gt;包括的で終了&lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray,%20kotlin.Int,%20kotlin.Int)/toIndex&quot;&gt;toIndexのを&lt;/a&gt;ランダムUBytesとの独占を。</target>
        </trans-unit>
        <trans-unit id="b9e3c8271aa2538c927e4314da56ddc22303ee52" translate="yes" xml:space="preserve">
          <source>Fills a subrange of the specified &lt;code&gt;UByte&lt;/code&gt;&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;array&lt;/a&gt; starting from &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndex&lt;/a&gt; inclusive and ending &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndex&lt;/a&gt; exclusive with random UBytes.</source>
          <target state="translated">指定されたのサブレンジ塗りつぶし &lt;code&gt;UByte&lt;/code&gt; &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;配列&lt;/a&gt;から始まっ&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;たfromIndexの&lt;/a&gt;包括的で終了&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndexのを&lt;/a&gt;ランダムUBytesとの独占を。</target>
        </trans-unit>
        <trans-unit id="0fa5dba25d2a2559404806d0b68987f31295b151" translate="yes" xml:space="preserve">
          <source>Fills a subrange of the specified &lt;code&gt;UByte&lt;/code&gt;&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray,%20kotlin.Int,%20kotlin.Int)/array&quot;&gt;array&lt;/a&gt; starting from &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray,%20kotlin.Int,%20kotlin.Int)/fromIndex&quot;&gt;fromIndex&lt;/a&gt; inclusive and ending &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray,%20kotlin.Int,%20kotlin.Int)/toIndex&quot;&gt;toIndex&lt;/a&gt; exclusive with random UBytes.</source>
          <target state="translated">指定されたのサブレンジ塗りつぶし &lt;code&gt;UByte&lt;/code&gt; &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray,%20kotlin.Int,%20kotlin.Int)/array&quot;&gt;配列&lt;/a&gt;から始まっ&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray,%20kotlin.Int,%20kotlin.Int)/fromIndex&quot;&gt;たfromIndexの&lt;/a&gt;包括的で終了&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray,%20kotlin.Int,%20kotlin.Int)/toIndex&quot;&gt;toIndexのを&lt;/a&gt;ランダムUBytesとの独占を。</target>
        </trans-unit>
        <trans-unit id="85987c9dd2c96e8f6547d6f683296a300a545e0f" translate="yes" xml:space="preserve">
          <source>Fills a subrange of the specified byte &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;array&lt;/a&gt; starting from &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndex&lt;/a&gt; inclusive and ending &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndex&lt;/a&gt; exclusive with random bytes.</source>
          <target state="translated">&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndexで&lt;/a&gt;始まり、toIndexで終わる指定されたバイト&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;配列の&lt;/a&gt;部分範囲をランダムなバイトで&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;埋め&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="90afd4db82345d38c2507653fb123db54c8e76c1" translate="yes" xml:space="preserve">
          <source>Fills a subrange of the specified byte &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/array&quot;&gt;array&lt;/a&gt; starting from &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/fromIndex&quot;&gt;fromIndex&lt;/a&gt; inclusive and ending &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/toIndex&quot;&gt;toIndex&lt;/a&gt; exclusive with random bytes.</source>
          <target state="translated">指定されたバイトのサブレンジ塗りつぶし&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/array&quot;&gt;配列&lt;/a&gt;から始め&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/fromIndex&quot;&gt;たfromIndexの&lt;/a&gt;包括的で終了&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/toIndex&quot;&gt;toIndexのは&lt;/a&gt;ランダムバイトとの排他的に。</target>
        </trans-unit>
        <trans-unit id="3d9d39692d77315c88a1dfa964cb0fa1189bb377" translate="yes" xml:space="preserve">
          <source>Fills a subrange of the specified byte &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;array&lt;/a&gt; starting from &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndex&lt;/a&gt; inclusive and ending &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndex&lt;/a&gt; exclusive with random bytes.</source>
          <target state="translated">&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndexで&lt;/a&gt;始まり、toIndexで終わる指定されたバイト&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;配列の&lt;/a&gt;部分範囲をランダムなバイトで&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;埋め&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="cf25c66f8c6aec455c52b7e9cd7d730564cdbaab" translate="yes" xml:space="preserve">
          <source>Fills a subrange of the specified byte &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/array&quot;&gt;array&lt;/a&gt; starting from &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/fromIndex&quot;&gt;fromIndex&lt;/a&gt; inclusive and ending &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/toIndex&quot;&gt;toIndex&lt;/a&gt; exclusive with random bytes.</source>
          <target state="translated">指定されたバイトのサブレンジ塗りつぶし&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/array&quot;&gt;配列&lt;/a&gt;から始め&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/fromIndex&quot;&gt;たfromIndexの&lt;/a&gt;包括的で終了&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/toIndex&quot;&gt;toIndexのは&lt;/a&gt;ランダムバイトとの排他的に。</target>
        </trans-unit>
        <trans-unit id="5c0dc43415d67e026e79beb225f338b213ba730c" translate="yes" xml:space="preserve">
          <source>Fills original array with the provided value.</source>
          <target state="translated">指定された値で元の配列を埋めます。</target>
        </trans-unit>
        <trans-unit id="89e798e1dda4e5dac33b7f11bf49290b106046be" translate="yes" xml:space="preserve">
          <source>Fills the list with the provided &lt;a href=&quot;fill#kotlin.collections%24fill%28kotlin.collections.MutableList%28%28kotlin.collections.fill.T%29%29%2C+kotlin.collections.fill.T%29%2Fvalue&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;fill#kotlin.collections%24fill%28kotlin.collections.MutableList%28%28kotlin.collections.fill.T%29%29%2C+kotlin.collections.fill.T%29%2Fvalue&quot;&gt;値で&lt;/a&gt;リストを埋めます。</target>
        </trans-unit>
        <trans-unit id="35b2d09b97137b78cb284f0b10fb631ed14c9ee4" translate="yes" xml:space="preserve">
          <source>Fills the list with the provided &lt;a href=&quot;fill#kotlin.collections%24fill(kotlin.collections.MutableList((kotlin.collections.fill.T)),%20kotlin.collections.fill.T)/value&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">提供された&lt;a href=&quot;fill#kotlin.collections%24fill(kotlin.collections.MutableList((kotlin.collections.fill.T)),%20kotlin.collections.fill.T)/value&quot;&gt;値で&lt;/a&gt;リストを埋めます。</target>
        </trans-unit>
        <trans-unit id="77be4617fe7494fb74087de5e016de347d74a0ab" translate="yes" xml:space="preserve">
          <source>Fills the provided &lt;a href=&quot;to-array#kotlin.collections.AbstractCollection%24toArray%28kotlin.Array%28%28kotlin.collections.AbstractCollection.toArray.T%29%29%29%2Farray&quot;&gt;array&lt;/a&gt; or creates new array of the same type and fills it with the elements of this collection.</source>
          <target state="translated">提供された&lt;a href=&quot;to-array#kotlin.collections.AbstractCollection%24toArray%28kotlin.Array%28%28kotlin.collections.AbstractCollection.toArray.T%29%29%29%2Farray&quot;&gt;配列&lt;/a&gt;を埋めるか、同じタイプの新しい配列を作成し、このコレクションの要素で埋めます。</target>
        </trans-unit>
        <trans-unit id="9ba2c0990c33ade702ad63911916fc5857c075a1" translate="yes" xml:space="preserve">
          <source>Fills the provided &lt;a href=&quot;to-array#kotlin.collections.AbstractCollection%24toArray(kotlin.Array((kotlin.collections.AbstractCollection.toArray.T)))/array&quot;&gt;array&lt;/a&gt; or creates new array of the same type and fills it with the elements of this collection.</source>
          <target state="translated">提供された&lt;a href=&quot;to-array#kotlin.collections.AbstractCollection%24toArray(kotlin.Array((kotlin.collections.AbstractCollection.toArray.T)))/array&quot;&gt;配列&lt;/a&gt;を埋めるか、同じタイプの新しい配列を作成して、このコレクションの要素で埋めます。</target>
        </trans-unit>
        <trans-unit id="9ce7a3ae6b4c588da234b20207da1a94d501af06" translate="yes" xml:space="preserve">
          <source>Fills the specified byte &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; with random bytes and returns it.</source>
          <target state="translated">指定されたバイト&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%29%2Farray&quot;&gt;配列&lt;/a&gt;をランダムなバイトで埋めて返します。</target>
        </trans-unit>
        <trans-unit id="7b21edf7691b9b0aa367f3cf01037c7609b8b716" translate="yes" xml:space="preserve">
          <source>Fills the specified byte &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray)/array&quot;&gt;array&lt;/a&gt; with random bytes and returns it.</source>
          <target state="translated">指定されたバイト&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray)/array&quot;&gt;配列&lt;/a&gt;をランダムなバイトで埋めて返します。</target>
        </trans-unit>
        <trans-unit id="0d55dfbc1b184e2a8dd831cfa97e75d935c52da9" translate="yes" xml:space="preserve">
          <source>Fills the specified byte &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; with random bytes and returns it.</source>
          <target state="translated">指定されたバイト&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%29%2Farray&quot;&gt;配列&lt;/a&gt;をランダムなバイトで埋めて返します。</target>
        </trans-unit>
        <trans-unit id="14af1d3fcb2bac412af50b23cab881789c79be95" translate="yes" xml:space="preserve">
          <source>Fills the specified byte &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray)/array&quot;&gt;array&lt;/a&gt; with random bytes and returns it.</source>
          <target state="translated">指定されたバイト&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray)/array&quot;&gt;配列&lt;/a&gt;をランダムなバイトで埋めて返します。</target>
        </trans-unit>
        <trans-unit id="d25169886a4c44c520ccc551bbc86ac14323c755" translate="yes" xml:space="preserve">
          <source>Fills the specified unsigned byte &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; with random bytes and returns it.</source>
          <target state="translated">指定された符号なしバイト&lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%29%2Farray&quot;&gt;配列&lt;/a&gt;をランダムなバイトで埋め、それを返します。</target>
        </trans-unit>
        <trans-unit id="7ef93d75f224df185cc38a7261c101b3a0d1d94a" translate="yes" xml:space="preserve">
          <source>Fills the specified unsigned byte &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray)/array&quot;&gt;array&lt;/a&gt; with random bytes and returns it.</source>
          <target state="translated">指定された符号なしバイト&lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray)/array&quot;&gt;配列&lt;/a&gt;をランダムバイトで埋めて返します。</target>
        </trans-unit>
        <trans-unit id="aebe03633eefd6ce76234594610876a4e1a0dc69" translate="yes" xml:space="preserve">
          <source>Fills the specified unsigned byte &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; with random bytes and returns it.</source>
          <target state="translated">指定された符号なしバイト&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%29%2Farray&quot;&gt;配列&lt;/a&gt;をランダムなバイトで埋め、それを返します。</target>
        </trans-unit>
        <trans-unit id="d6565fa698214c335daf342a35657b77ca97d209" translate="yes" xml:space="preserve">
          <source>Fills the specified unsigned byte &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray)/array&quot;&gt;array&lt;/a&gt; with random bytes and returns it.</source>
          <target state="translated">指定された符号なしバイト&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray)/array&quot;&gt;配列&lt;/a&gt;をランダムバイトで埋めて返します。</target>
        </trans-unit>
        <trans-unit id="95da1730b888530159943e7100ad893990d5ffd5" translate="yes" xml:space="preserve">
          <source>Fills this array or its subrange with the specified &lt;a href=&quot;../../kotlin.collections/fill#kotlin.collections%24fill(kotlin.UByteArray,%20kotlin.UByte,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; value.</source>
          <target state="translated">この配列またはそのサブ範囲を指定された&lt;a href=&quot;../../kotlin.collections/fill#kotlin.collections%24fill(kotlin.UByteArray,%20kotlin.UByte,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;要素&lt;/a&gt;値で埋めます。</target>
        </trans-unit>
        <trans-unit id="a28c610b838419ec960dcf61e22c158fa19515b1" translate="yes" xml:space="preserve">
          <source>Fills this array or its subrange with the specified &lt;a href=&quot;../../kotlin.collections/fill#kotlin.collections%24fill(kotlin.UIntArray,%20kotlin.UInt,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; value.</source>
          <target state="translated">この配列またはそのサブ範囲を指定された&lt;a href=&quot;../../kotlin.collections/fill#kotlin.collections%24fill(kotlin.UIntArray,%20kotlin.UInt,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;要素&lt;/a&gt;値で埋めます。</target>
        </trans-unit>
        <trans-unit id="dee59f8443cdde3a58371aaa7d28cf2242bb04dc" translate="yes" xml:space="preserve">
          <source>Fills this array or its subrange with the specified &lt;a href=&quot;../../kotlin.collections/fill#kotlin.collections%24fill(kotlin.ULongArray,%20kotlin.ULong,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; value.</source>
          <target state="translated">この配列またはそのサブ範囲を指定された&lt;a href=&quot;../../kotlin.collections/fill#kotlin.collections%24fill(kotlin.ULongArray,%20kotlin.ULong,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;要素&lt;/a&gt;値で埋めます。</target>
        </trans-unit>
        <trans-unit id="f4c92be1e968b289b30b22f17a29c1c059b45e59" translate="yes" xml:space="preserve">
          <source>Fills this array or its subrange with the specified &lt;a href=&quot;../../kotlin.collections/fill#kotlin.collections%24fill(kotlin.UShortArray,%20kotlin.UShort,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; value.</source>
          <target state="translated">この配列またはそのサブ範囲を指定された&lt;a href=&quot;../../kotlin.collections/fill#kotlin.collections%24fill(kotlin.UShortArray,%20kotlin.UShort,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;要素&lt;/a&gt;値で埋めます。</target>
        </trans-unit>
        <trans-unit id="3ce20ad01392f3fa8f4fcc84330d6db1b8d8fccd" translate="yes" xml:space="preserve">
          <source>Fills this array or its subrange with the specified &lt;a href=&quot;fill#kotlin.collections%24fill(kotlin.Array((kotlin.collections.fill.T)),%20kotlin.collections.fill.T,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; value.</source>
          <target state="translated">この配列またはそのサブ範囲を指定された&lt;a href=&quot;fill#kotlin.collections%24fill(kotlin.Array((kotlin.collections.fill.T)),%20kotlin.collections.fill.T,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;要素&lt;/a&gt;値で埋めます。</target>
        </trans-unit>
        <trans-unit id="58f8896b8e67fb8f074fd916ae3157cbc0b0be08" translate="yes" xml:space="preserve">
          <source>Fills this array or its subrange with the specified &lt;a href=&quot;fill#kotlin.collections%24fill(kotlin.UIntArray,%20kotlin.UInt,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; value.</source>
          <target state="translated">この配列またはそのサブ範囲を指定された&lt;a href=&quot;fill#kotlin.collections%24fill(kotlin.UIntArray,%20kotlin.UInt,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;要素&lt;/a&gt;値で埋めます。</target>
        </trans-unit>
        <trans-unit id="9075edca21736af901d2add18e4d9491f2452b4d" translate="yes" xml:space="preserve">
          <source>Filtering</source>
          <target state="translated">Filtering</target>
        </trans-unit>
        <trans-unit id="fa9054484d7a6e039e4277de5a9419714828fdfe" translate="yes" xml:space="preserve">
          <source>Filtering a list</source>
          <target state="translated">リストのフィルタリング</target>
        </trans-unit>
        <trans-unit id="9417e901507e0a69cfe6080357ed9c0901d63f40" translate="yes" xml:space="preserve">
          <source>Filtering by module maps</source>
          <target state="translated">モジュールマップによるフィルタリング</target>
        </trans-unit>
        <trans-unit id="51e63b81d7e9adf4e24abe5cfd7daefd74151793" translate="yes" xml:space="preserve">
          <source>Filtering by predicate</source>
          <target state="translated">述語によるフィルタリング</target>
        </trans-unit>
        <trans-unit id="db13d2fc62892a93874264f328534fe964c4ba34" translate="yes" xml:space="preserve">
          <source>Filtering headers by globs</source>
          <target state="translated">globs によるヘッダのフィルタリング</target>
        </trans-unit>
        <trans-unit id="b0aa5e3d2d9e2ddb22fa5005592a03e1e3622309" translate="yes" xml:space="preserve">
          <source>Filtering is one of the most popular tasks in the collection processing. In Kotlin, filtering conditions are defined by &lt;em&gt;predicates&lt;/em&gt; &amp;ndash; lambda functions that take a collection element and return a boolean value: &lt;code&gt;true&lt;/code&gt; means that the given element matches the predicate, &lt;code&gt;false&lt;/code&gt; means the opposite.</source>
          <target state="translated">フィルタリングは、コレクション処理で最も人気のあるタスクの1つです。Kotlinには、フィルタリング条件は以下のように定義されている&lt;em&gt;述語&lt;/em&gt;：コレクション要素を取り、ブール値を返すラムダ関数- &lt;code&gt;true&lt;/code&gt; 指定された要素が述語に一致することを意味し、 &lt;code&gt;false&lt;/code&gt; 手段反対を。</target>
        </trans-unit>
        <trans-unit id="28660880ee5a7abb3d5dc99a669dacae6c5950ae" translate="yes" xml:space="preserve">
          <source>Finally the last factory method version allows customizing the binary name.</source>
          <target state="translated">最後のファクトリーメソッドのバージョンでは、バイナリ名をカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="446f94faa289cad0a11793f2097a9a3e254ace94" translate="yes" xml:space="preserve">
          <source>Finally we need to define an Application class. As Spring Boot looks for a public static main method, we need to define this in Kotlin. It could be done with the &lt;em&gt;@JvmStatic&lt;/em&gt; annotation and a companion object but here we prefer using a &lt;a href=&quot;../reference/functions&quot;&gt;top-level function&lt;/a&gt; defined outside Application class since it leads to more concise and clean code.</source>
          <target state="translated">最後に、Applicationクラスを定義する必要があります。Spring Bootがpublic static mainメソッドを探すので、これをKotlinで定義する必要があります。&lt;em&gt;@JvmStatic&lt;/em&gt;アノテーションとコンパニオンオブジェクトを使用して&lt;em&gt;実行&lt;/em&gt;できますが、ここでは、より簡潔でクリーンなコードにつながるため、Applicationクラスの外部で定義された&lt;a href=&quot;../reference/functions&quot;&gt;トップレベル関数&lt;/a&gt;を使用することをお&lt;em&gt;勧めし&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="593295ace88e10040cffe008ef4c1167513b06bc" translate="yes" xml:space="preserve">
          <source>Finally, &lt;em&gt;in&lt;/em&gt;-checks have no overhead either:</source>
          <target state="translated">最後に&lt;em&gt;、&lt;/em&gt; -checksにはオーバーヘッドもありません。</target>
        </trans-unit>
        <trans-unit id="4ec4c9df9d82f5b8afd6529bbb9a8e7376248508" translate="yes" xml:space="preserve">
          <source>Finally, the API is either removed entirely, or hidden (&lt;a href=&quot;../-deprecation-level/-h-i-d-d-e-n#kotlin.DeprecationLevel.HIDDEN&quot;&gt;DeprecationLevel.HIDDEN&lt;/a&gt;) from code, so its usages look like unresolved references, while the API remains in the compiled code preserving binary compatibility with previously compiled code.</source>
          <target state="translated">最後に、APIは完全に削除されるか、コードから非表示（&lt;a href=&quot;../-deprecation-level/-h-i-d-d-e-n#kotlin.DeprecationLevel.HIDDEN&quot;&gt;DeprecationLevel.HIDDEN&lt;/a&gt;）になるため、APIはコンパイル済みコード内に残り、APIは以前にコンパイルされたコードとのバイナリ互換性を維持します。</target>
        </trans-unit>
        <trans-unit id="19ea1ed6fcf9d758b3f3804a9abd699e53d6d484" translate="yes" xml:space="preserve">
          <source>Finally, there are functions that apply such operations to collection elements from right to left - &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/reduce-right-indexed&quot;&gt;&lt;code&gt;reduceRightIndexed()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/fold-right-indexed&quot;&gt;&lt;code&gt;foldRightIndexed()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最後に、このような操作をコレクション要素に右から左に適用する関数、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/reduce-right-indexed&quot;&gt; &lt;code&gt;reduceRightIndexed()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/fold-right-indexed&quot;&gt; &lt;code&gt;foldRightIndexed()&lt;/code&gt; があり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="f53948bf71af7c505a51fa698490804ab1131cd8" translate="yes" xml:space="preserve">
          <source>Finally, there are functions that simply test a predicate against collection elements:</source>
          <target state="translated">最後に、単純にコレクション要素に対して述語をテストする関数があります。</target>
        </trans-unit>
        <trans-unit id="c1a8c5296921837c075cfaeca5d67cd0a04dbeda" translate="yes" xml:space="preserve">
          <source>Finally, there is a function that lets you produce sequence elements one by one or by chunks of arbitrary sizes &amp;ndash; the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/sequence&quot;&gt;&lt;code&gt;sequence()&lt;/code&gt;&lt;/a&gt; function. This function takes a lambda expression containing calls of &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/-sequence-scope/yield&quot;&gt;&lt;code&gt;yield()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/-sequence-scope/yield-all&quot;&gt;&lt;code&gt;yieldAll()&lt;/code&gt;&lt;/a&gt; functions. They return an element to the sequence consumer and suspend the execution of &lt;code&gt;sequence()&lt;/code&gt; until the next element is requested by the consumer. &lt;code&gt;yield()&lt;/code&gt; takes a single element as an argument; &lt;code&gt;yieldAll()&lt;/code&gt; can take an &lt;code&gt;Iterable&lt;/code&gt; object, an &lt;code&gt;Iterator&lt;/code&gt;, or another &lt;code&gt;Sequence&lt;/code&gt;. A &lt;code&gt;Sequence&lt;/code&gt; argument of &lt;code&gt;yieldAll()&lt;/code&gt; can be infinite. However, such a call must be the last: all subsequent calls will never be executed.</source>
          <target state="translated">最後に、シーケンス要素を1つずつ、または任意のサイズのチャンクで生成できる関数があります。sequence &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/sequence&quot;&gt; &lt;code&gt;sequence()&lt;/code&gt; &lt;/a&gt;関数です。この機能は、コールを含有するラムダ式かかり&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/-sequence-scope/yield&quot;&gt; &lt;code&gt;yield()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/-sequence-scope/yield-all&quot;&gt; &lt;code&gt;yieldAll()&lt;/code&gt; &lt;/a&gt;関数を。それらはシーケンスコンシューマに要素を返し、コンシューマによって次の要素が要求されるまで、 &lt;code&gt;sequence()&lt;/code&gt; の実行を一時停止します。 &lt;code&gt;yield()&lt;/code&gt; は引数として単一の要素を取ります。 &lt;code&gt;yieldAll()&lt;/code&gt; は、 &lt;code&gt;Iterable&lt;/code&gt; オブジェクト、 &lt;code&gt;Iterator&lt;/code&gt; 、または別の &lt;code&gt;Sequence&lt;/code&gt; を取ることができます。 &lt;code&gt;Sequence&lt;/code&gt; の引数 &lt;code&gt;yieldAll()&lt;/code&gt; 無限にすることができます。ただし、そのような呼び出しは最後でなければなりません。それ以降の呼び出しはすべて実行されることはありません。</target>
        </trans-unit>
        <trans-unit id="39afcd9bc5f82d8e31f2fbcbc90b5a411497578c" translate="yes" xml:space="preserve">
          <source>Finally, there is a function that returns a new &lt;code&gt;List&lt;/code&gt; containing the collection elements in a random order - &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/shuffled&quot;&gt;&lt;code&gt;shuffled()&lt;/code&gt;&lt;/a&gt;. You can call it without arguments or with a &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.random/-random/index&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">最後に、コレクション要素をランダムな順序で含む新しい &lt;code&gt;List&lt;/code&gt; を返す関数があります&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/shuffled&quot;&gt; &lt;code&gt;shuffled()&lt;/code&gt; &lt;/a&gt;。引数なしで、または&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.random/-random/index&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;/a&gt;オブジェクトを使用して呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="bee211daf716d379de0eb2d0c93c568e44163eef" translate="yes" xml:space="preserve">
          <source>Finally, there is a useful &lt;code&gt;forEach()&lt;/code&gt; function that lets you automatically iterate a collection and execute the given code for each element. So, the same example would look like this:</source>
          <target state="translated">最後に、コレクションを自動的に反復処理し、各要素に対して指定されたコードを実行できる便利な &lt;code&gt;forEach()&lt;/code&gt; 関数があります。したがって、同じ例は次のようになります。</target>
        </trans-unit>
        <trans-unit id="a531cdec3d49eab2a8812ff6da172cf703efe854" translate="yes" xml:space="preserve">
          <source>Finally, to customize the representation of elements themselves, provide the &lt;code&gt;transform&lt;/code&gt; function.</source>
          <target state="translated">最後に、要素自体の表現をカスタマイズするには、 &lt;code&gt;transform&lt;/code&gt; 機能を提供します。</target>
        </trans-unit>
        <trans-unit id="f1a1903657c0708c2f71083344aa00ede3a0dc0c" translate="yes" xml:space="preserve">
          <source>Finally, you can apply a transformation to the returned ranges right away. To do this, provide the transformation as a lambda function when calling &lt;code&gt;windowed()&lt;/code&gt;.</source>
          <target state="translated">最後に、返された範囲にすぐに変換を適用できます。これを行うには、 &lt;code&gt;windowed()&lt;/code&gt; を呼び出すときにラムダ関数として変換を提供します。</target>
        </trans-unit>
        <trans-unit id="0ca7c890de7b104b7c385cda2f789cbcd93f1e51" translate="yes" xml:space="preserve">
          <source>Find how &lt;a href=&quot;#primitive-types-in-kotlin&quot;&gt;Primitive Types in Kotlin&lt;/a&gt; are mapped to C</source>
          <target state="translated">&lt;a href=&quot;#primitive-types-in-kotlin&quot;&gt;Kotlinのプリミティブ型が&lt;/a&gt; Cにどのようにマップされているかを確認する</target>
        </trans-unit>
        <trans-unit id="91ab1b7db4dcce3cefb5d70f34a89d81dabe88d8" translate="yes" xml:space="preserve">
          <source>FindBugs (&lt;code&gt;edu.umd.cs.findbugs.annotations&lt;/code&gt;)</source>
          <target state="translated">FindBugs（ &lt;code&gt;edu.umd.cs.findbugs.annotations&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="229bcc4f101c8a8f98260f713325ebf63c5df391" translate="yes" xml:space="preserve">
          <source>Finding element positions</source>
          <target state="translated">要素の位置を見つける</target>
        </trans-unit>
        <trans-unit id="f36d389c4a89754dda5dec648cbd01607dc377cb" translate="yes" xml:space="preserve">
          <source>Finds the first occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../../kotlin.text/find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列&lt;/a&gt;の最初の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="6f6691e7f93172985cb1a8a1a899dccdbaab4790" translate="yes" xml:space="preserve">
          <source>Finds the first occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/find-any-of#kotlin.text%24findAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/find-any-of#kotlin.text%24findAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/find-any-of#kotlin.text%24findAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、このcharシーケンス内の指定された&lt;a href=&quot;../../kotlin.text/find-any-of#kotlin.text%24findAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;文字列の&lt;/a&gt;いずれかの最初の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="c5d2045460fd1c1eb9867fb6f91988c743842d3d" translate="yes" xml:space="preserve">
          <source>Finds the first occurrence of any of the specified &lt;a href=&quot;../find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列&lt;/a&gt;の最初の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="4ed0325d4e7941015900f3028603eb99bcc69c43" translate="yes" xml:space="preserve">
          <source>Finds the first occurrence of any of the specified &lt;a href=&quot;../find-any-of#kotlin.text%24findAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../find-any-of#kotlin.text%24findAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../find-any-of#kotlin.text%24findAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、このcharシーケンス内の指定された&lt;a href=&quot;../find-any-of#kotlin.text%24findAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;文字列の&lt;/a&gt;いずれかの最初の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="f9adcfa727ac2114339b9ea89540b3052d79d448" translate="yes" xml:space="preserve">
          <source>Finds the first occurrence of any of the specified &lt;a href=&quot;find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列&lt;/a&gt;の最初の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="bebe03842393d12483394d25198c7cbda8eca153" translate="yes" xml:space="preserve">
          <source>Finds the first occurrence of any of the specified &lt;a href=&quot;find-any-of#kotlin.text%24findAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;find-any-of#kotlin.text%24findAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;find-any-of#kotlin.text%24findAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、このcharシーケンス内の指定された&lt;a href=&quot;find-any-of#kotlin.text%24findAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;文字列の&lt;/a&gt;いずれかの最初の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="7fdcfe57198b5ce268c0465263ebea77712f40d7" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンスで指定された&lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;文字の&lt;/a&gt;いずれかが最初に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="d05669208f213fea94073f4b7dfd2030e95bdabd" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列の&lt;/a&gt;いずれかの最初の出現のインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="757a0e4955e10bfc029e8f561dbbd90953f399dc" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンスで指定された&lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;文字の&lt;/a&gt;いずれかが最初に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="0eeed8c90268c8a89b84b859a22dc2a31b58e184" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、このcharシーケンスで指定された&lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;文字列の&lt;/a&gt;いずれかが最初に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="87f37810b16a7e86468c6d165c040456f1de55a2" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンスで指定された&lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;文字の&lt;/a&gt;いずれかが最初に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="63b9588d1e0c8b5a5e365863e579eb40d20febad" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列の&lt;/a&gt;いずれかの最初の出現のインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="9a23abc68dbadfc67323328bd74602d0bf86b5bc" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンスで指定された&lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;文字の&lt;/a&gt;いずれかが最初に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="02c547cb7c71661792ba5b78fcc0e061a5baf68e" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、このcharシーケンスで指定された&lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;文字列の&lt;/a&gt;いずれかが最初に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="bc01891ab879b9ee334a5a559c564aacb3e76b2d" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンスで指定された&lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;文字の&lt;/a&gt;いずれかが最初に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="1983c1dc07932a0bc85d94b95f7ec0d26408fe92" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列の&lt;/a&gt;いずれかの最初の出現のインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="23c0131a03c294ec903541051b72c21467ead8f9" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンスで指定された&lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;文字の&lt;/a&gt;いずれかが最初に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="1edc2d88e2742d21feae91a70e3c395360dee70d" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、このcharシーケンスで指定された&lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;文字列の&lt;/a&gt;いずれかが最初に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="674c6c9c3a08b1c18f1e984ee189fd45b43c970b" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;文字の&lt;/a&gt;いずれかの最後の出現のインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="d01e387d9dc8aa0003032e7d9d83fb8e540bc837" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列の&lt;/a&gt;いずれかが最後に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="19c99c1dbd889f4bcaa8fa478e14f9fabf1ec783" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンスで指定された&lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;文字の&lt;/a&gt;いずれかが最後に出現したインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="c659d7c145ce01525eb6e81f896c0054ff7ded71" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、このcharシーケンスで指定された&lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;文字列の&lt;/a&gt;いずれかが最後に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="b0ed6c1ac3ed128e60b772ca566674d3454881c0" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;文字の&lt;/a&gt;いずれかの最後の出現のインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="71a3468c854493867feea9cd21596eb51c24a2f0" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列の&lt;/a&gt;いずれかが最後に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="401551ffd6730d58d38ee9296bf2d453548b0255" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンスで指定された&lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;文字の&lt;/a&gt;いずれかが最後に出現したインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="6858ae94a4eeb060f37e498675d0ef6f065061e7" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、このcharシーケンスで指定された&lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;文字列の&lt;/a&gt;いずれかが最後に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="b45b81266833b2a1ff0b148d7d94b234f79d174a" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;文字の&lt;/a&gt;いずれかの最後の出現のインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="be0e9163dfd3435d499a6cb09fb2eaeb14ae574a" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列の&lt;/a&gt;いずれかが最後に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="043be40e32d383389a2fdbb9e56367aa532fd27d" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンスで指定された&lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;文字の&lt;/a&gt;いずれかが最後に出現したインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="8c415d1ace9616f70f7d01bdd8390cd9768a80f7" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、このcharシーケンスで指定された&lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;文字列の&lt;/a&gt;いずれかが最後に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="b80b401d8af282b08f47b451f942a66fb84c87af" translate="yes" xml:space="preserve">
          <source>Finds the last occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../../kotlin.text/find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列&lt;/a&gt;の最後の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="ccada276fa9af760abfe583f9fcbdb4a6aee93c3" translate="yes" xml:space="preserve">
          <source>Finds the last occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/find-last-any-of#kotlin.text%24findLastAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/find-last-any-of#kotlin.text%24findLastAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/find-last-any-of#kotlin.text%24findLastAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、このcharシーケンス内の指定された&lt;a href=&quot;../../kotlin.text/find-last-any-of#kotlin.text%24findLastAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;文字列&lt;/a&gt;の最後の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="eb062c37513e3d9a197b4d9c0cf603ddb5a9f14d" translate="yes" xml:space="preserve">
          <source>Finds the last occurrence of any of the specified &lt;a href=&quot;../find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列&lt;/a&gt;の最後の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="ad1fca15d6aafb73bff67a48f42b1fe02554372f" translate="yes" xml:space="preserve">
          <source>Finds the last occurrence of any of the specified &lt;a href=&quot;../find-last-any-of#kotlin.text%24findLastAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../find-last-any-of#kotlin.text%24findLastAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../find-last-any-of#kotlin.text%24findLastAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、このcharシーケンス内の指定された&lt;a href=&quot;../find-last-any-of#kotlin.text%24findLastAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;文字列&lt;/a&gt;の最後の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="200ba29f97fb4cacc4a651ea6bacc3a16bbcda2d" translate="yes" xml:space="preserve">
          <source>Finds the last occurrence of any of the specified &lt;a href=&quot;find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列&lt;/a&gt;の最後の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="5a3e8a430f735e5f4395498172f18617c9f15f1b" translate="yes" xml:space="preserve">
          <source>Finds the last occurrence of any of the specified &lt;a href=&quot;find-last-any-of#kotlin.text%24findLastAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;find-last-any-of#kotlin.text%24findLastAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;find-last-any-of#kotlin.text%24findLastAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/startIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、このcharシーケンス内の指定された&lt;a href=&quot;find-last-any-of#kotlin.text%24findLastAnyOf(kotlin.CharSequence,%20kotlin.collections.Collection((kotlin.String)),%20kotlin.Int,%20kotlin.Boolean)/strings&quot;&gt;文字列&lt;/a&gt;の最後の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="a772f0b95a82f9b42ba3f2e47945b227fbfbe358" translate="yes" xml:space="preserve">
          <source>First and by default, &lt;a href=&quot;../-deprecation-level/-w-a-r-n-i-n-g#kotlin.DeprecationLevel.WARNING&quot;&gt;DeprecationLevel.WARNING&lt;/a&gt; is used to notify API consumers, but not to break their compilation or runtime usages.</source>
          <target state="translated">まず、デフォルトでは、&lt;a href=&quot;../-deprecation-level/-w-a-r-n-i-n-g#kotlin.DeprecationLevel.WARNING&quot;&gt;DeprecationLevel.WARNING&lt;/a&gt;は、APIコンシューマに通知するために使用されますが、コンパイルまたはランタイムの使用を中断するためには使用されません。</target>
        </trans-unit>
        <trans-unit id="10d34264de5bcf95a2368929c309f682ebf97d06" translate="yes" xml:space="preserve">
          <source>First let's create a library. Place the tiny library source code into &lt;code&gt;kotlinizer.kt&lt;/code&gt;:</source>
          <target state="translated">まず、ライブラリを作成しましょう。小さなライブラリのソースコードを &lt;code&gt;kotlinizer.kt&lt;/code&gt; に配置します。</target>
        </trans-unit>
        <trans-unit id="d6ebd189e555fcc845acb54b7025e742cee302fe" translate="yes" xml:space="preserve">
          <source>First of all, &lt;code&gt;select&lt;/code&gt; is &lt;em&gt;biased&lt;/em&gt; to the first clause. When several clauses are selectable at the same time, the first one among them gets selected. Here, both channels are constantly producing strings, so &lt;code&gt;a&lt;/code&gt; channel, being the first clause in select, wins. However, because we are using unbuffered channel, the &lt;code&gt;a&lt;/code&gt; gets suspended from time to time on its &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-send-channel/send.html&quot;&gt;send&lt;/a&gt; invocation and gives a chance for &lt;code&gt;b&lt;/code&gt; to send, too.</source>
          <target state="translated">まず、 &lt;code&gt;select&lt;/code&gt; は最初の句に&lt;em&gt;偏っ&lt;/em&gt;ています。複数の句を同時に選択できる場合は、それらの最初の句が選択されます。ここでは、両方のチャネルが常に文字列を生成しているため &lt;code&gt;a&lt;/code&gt; selectの最初の句であるチャネルが優先されます。ただし、バッファリングされていないチャネルを使用しているため、 &lt;code&gt;a&lt;/code&gt; はその&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-send-channel/send.html&quot;&gt;送信&lt;/a&gt;呼び出しで時々中断され、 &lt;code&gt;b&lt;/code&gt; も送信する機会が与えられます。</target>
        </trans-unit>
        <trans-unit id="91387211d09f73aa2d29f7472f1dc87ceea391b3" translate="yes" xml:space="preserve">
          <source>First of all, we need to have a native pointer to pass to the C function. We use the &lt;code&gt;usePinned&lt;/code&gt; extension function to temporarily pin the native memory address of the byte array. The C function fills in the byte array with data. We use another extension function &lt;code&gt;ByteArray.stringFromUtf8()&lt;/code&gt; to turn the byte array into a Kotlin &lt;code&gt;String&lt;/code&gt;, assuming UTF-8 encoding.</source>
          <target state="translated">まず、C関数に渡すネイティブポインターが必要です。 &lt;code&gt;usePinned&lt;/code&gt; 拡張関数を使用して、バイト配列のネイティブメモリアドレスを一時的に固定します。C関数は、バイト配列にデータを入力します。UTF-8エンコーディングを想定して、別の拡張関数 &lt;code&gt;ByteArray.stringFromUtf8()&lt;/code&gt; を使用して、バイト配列をKotlin &lt;code&gt;String&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="6922a366a38d0070295fdb4348b95ac88cf0b2f9" translate="yes" xml:space="preserve">
          <source>First of all, we need to have a native pointer to pass to the C function. We use the &lt;code&gt;usePinned&lt;/code&gt; extension function to temporarily pin the native memory address of the byte array. The C function fills in the byte array with data. We use another extension function &lt;code&gt;ByteArray.toKString()&lt;/code&gt; to turn the byte array into a Kotlin &lt;code&gt;String&lt;/code&gt;, assuming UTF-8 encoding.</source>
          <target state="translated">まず、C関数に渡すネイティブポインタが必要です。 &lt;code&gt;usePinned&lt;/code&gt; 拡張関数を使用して、バイト配列のネイティブメモリアドレスを一時的に固定します。 C関数は、バイト配列にデータを入力します。別の拡張関数 &lt;code&gt;ByteArray.toKString()&lt;/code&gt; を使用して、UTF-8エンコーディングを想定して、バイト配列をKotlin &lt;code&gt;String&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="07ace0e77a28e647a56e3217744218e0f591c0d5" translate="yes" xml:space="preserve">
          <source>First of all, you need the Eclipse IDE installed on your system. You can download its latest version from &lt;a href=&quot;https://www.eclipse.org/downloads/&quot;&gt;download page&lt;/a&gt;. The &quot;Eclipse IDE for Java Developers&quot; bundle is recommended.</source>
          <target state="translated">まず、システムにEclipse IDEをインストールする必要があります。最新バージョンは&lt;a href=&quot;https://www.eclipse.org/downloads/&quot;&gt;ダウンロードページ&lt;/a&gt;からダウンロードできます。「Eclipse Developer for Java Developers」バンドルをお勧めします。</target>
        </trans-unit>
        <trans-unit id="6def8856ba78db6ce14b20d1f189667c3be8cca9" translate="yes" xml:space="preserve">
          <source>First value.</source>
          <target state="translated">最初の値。</target>
        </trans-unit>
        <trans-unit id="014cd3d3385286090f24027a25e87fcac71bec38" translate="yes" xml:space="preserve">
          <source>First, create a new Kotlin Android Project for your application:</source>
          <target state="translated">まず、アプリケーション用の新しいKotlin Androidプロジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="07544b4bf851debb973c4f3d5555c5bb476a9ca7" translate="yes" xml:space="preserve">
          <source>First, let's create a project folder. All the paths in this tutorial will be relative to this folder. Sometimes the missing directories will have to be created before any new files can be added.</source>
          <target state="translated">まず、プロジェクトフォルダを作成しましょう。このチュートリアルのすべてのパスは、このフォルダからの相対パスになります。新しいファイルを追加する前に、不足しているディレクトリを作成しなければならないこともあります。</target>
        </trans-unit>
        <trans-unit id="9334a12c7372e26d6be5b8bb8e8eb7dc7fd289ac" translate="yes" xml:space="preserve">
          <source>First, let's think about why Java needs those mysterious wildcards. The problem is explained in &lt;a href=&quot;http://www.oracle.com/technetwork/java/effectivejava-136174.html&quot;&gt;Effective Java, 3rd Edition&lt;/a&gt;, Item 31: &lt;em&gt;Use bounded wildcards to increase API flexibility&lt;/em&gt;. First, generic types in Java are &lt;strong&gt;invariant&lt;/strong&gt;, meaning that &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; a subtype of &lt;code&gt;List&amp;lt;Object&amp;gt;&lt;/code&gt;. Why so? If List was not &lt;strong&gt;invariant&lt;/strong&gt;, it would have been no better than Java's arrays, since the following code would have compiled and caused an exception at runtime:</source>
          <target state="translated">最初に、なぜJavaがこれらの不可解なワイルドカードを必要とするのかを考えてみましょう。問題は、&lt;a href=&quot;http://www.oracle.com/technetwork/java/effectivejava-136174.html&quot;&gt;Effective Java、3rd Edition&lt;/a&gt;、アイテム31：&lt;em&gt;制限付きワイルドカードを使用してAPIの柔軟性を向上させる&lt;/em&gt;で説明されてい&lt;em&gt;ます&lt;/em&gt;。まず、Javaのジェネリック型は&lt;strong&gt;不変です&lt;/strong&gt;。つまり、 &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; は &lt;code&gt;List&amp;lt;Object&amp;gt;&lt;/code&gt; サブタイプではあり&lt;strong&gt;ません&lt;/strong&gt;。なんでそうなの？Listが&lt;strong&gt;不変&lt;/strong&gt;でなかった場合、次のコードがコンパイル時にコンパイルされて実行時に例外が発生するため、Javaの配列と同じです。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="903cc573c51fbef754880d4a04451b373d2ff417" translate="yes" xml:space="preserve">
          <source>First, there is &lt;em&gt;natural&lt;/em&gt; order. It is defined for inheritors of the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin/-comparable/index&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; interface. Natural order is used for sorting them when no other order is specified.</source>
          <target state="translated">まず、&lt;em&gt;自然な&lt;/em&gt;秩序があります。これは、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin/-comparable/index&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;インターフェースの継承者のために定義されています。他の順序が指定されていない場合、それらを並べ替えるために自然順序が使用されます。</target>
        </trans-unit>
        <trans-unit id="31dfd703459e1b6a9ae1ed2fc671be3556bf75c9" translate="yes" xml:space="preserve">
          <source>First, we add the new project into the &lt;code&gt;settings.gradle&lt;/code&gt; file, simply by adding the following line to the end of the file:</source>
          <target state="translated">まず、ファイルの最後に次の行を追加するだけで、新しいプロジェクトを &lt;code&gt;settings.gradle&lt;/code&gt; ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="141d229204c263b76a047b5bc576568829fec380" translate="yes" xml:space="preserve">
          <source>First, we need to include the compiled framework into the Xcode project. For this we add the framework to the &lt;code&gt;Embedded Binaries&lt;/code&gt; block of the &lt;code&gt;General&lt;/code&gt; section of the &lt;em&gt;target&lt;/em&gt; configuration page.</source>
          <target state="translated">まず、コンパイルされたフレームワークをXcodeプロジェクトに含める必要があります。このために、&lt;em&gt;ターゲット&lt;/em&gt;構成ページの &lt;code&gt;General&lt;/code&gt; セクションの &lt;code&gt;Embedded Binaries&lt;/code&gt; ブロックにフレームワークを追加します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8cb377ed1460ffda0b03789323fc3d1f940c32dd" translate="yes" xml:space="preserve">
          <source>First, we need to include the framework in the &lt;code&gt;General&lt;/code&gt; section of the &lt;em&gt;target&lt;/em&gt; configuration. There is the &lt;code&gt;Linked Frameworks and Libraries&lt;/code&gt; section to include our framework. This will make Xcode look at our framework and resolve imports both from Objective-C and Swift.</source>
          <target state="translated">最初に、&lt;em&gt;ターゲット&lt;/em&gt;構成の &lt;code&gt;General&lt;/code&gt; セクションにフレームワークを含める必要があります。そこで &lt;code&gt;Linked Frameworks and Libraries&lt;/code&gt; 私たちのフレームワークを含むようにセクションが。これにより、Xcodeがフレームワークを調べ、Objective-CとSwiftの両方からのインポートを解決します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="883cc965531c81000adec116dcd945c6473014b3" translate="yes" xml:space="preserve">
          <source>First, you can explicitly check if &lt;code&gt;b&lt;/code&gt; is &lt;em&gt;null&lt;/em&gt;, and handle the two options separately:</source>
          <target state="translated">まず、 &lt;code&gt;b&lt;/code&gt; が&lt;em&gt;null&lt;/em&gt;かどうかを明示的に確認し、2つのオプションを個別に処理します。</target>
        </trans-unit>
        <trans-unit id="db5e9d2943caab6eedc38de51f275f1c08eb5cbf" translate="yes" xml:space="preserve">
          <source>First-class delegation</source>
          <target state="translated">一流の代表団</target>
        </trans-unit>
        <trans-unit id="a4369cd318f982ecd4037bc347f7b700a90010b7" translate="yes" xml:space="preserve">
          <source>Fixing the Code</source>
          <target state="translated">コードの修正</target>
        </trans-unit>
        <trans-unit id="68839cce52f25f5e722d684d280b2b741a295de7" translate="yes" xml:space="preserve">
          <source>Flattening</source>
          <target state="translated">Flattening</target>
        </trans-unit>
        <trans-unit id="3ae6842a29a39335221041b3f30e383dacc9b9ea" translate="yes" xml:space="preserve">
          <source>Flavor support</source>
          <target state="translated">フレーバーサポート</target>
        </trans-unit>
        <trans-unit id="64435fd82de7b1d614dfb9844848a48b14c6cd2c" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="translated">Float</target>
        </trans-unit>
        <trans-unit id="1cbcea917c60692fe6c69a4151dd7e5bcc9da555" translate="yes" xml:space="preserve">
          <source>Float32Array</source>
          <target state="translated">Float32Array</target>
        </trans-unit>
        <trans-unit id="42ae0e778d4c2ca3c83ff2f30eea14a7dfba5a83" translate="yes" xml:space="preserve">
          <source>Float64Array</source>
          <target state="translated">Float64Array</target>
        </trans-unit>
        <trans-unit id="455a972c73b73dc4bac4b0a78033ba84362d0692" translate="yes" xml:space="preserve">
          <source>FloatArray</source>
          <target state="translated">FloatArray</target>
        </trans-unit>
        <trans-unit id="75f980af562e559d4e3cc96d1c51b44c9754fabe" translate="yes" xml:space="preserve">
          <source>FloatIterator</source>
          <target state="translated">FloatIterator</target>
        </trans-unit>
        <trans-unit id="b73efe618f9aa8e2897eb91cb0f18673e5d48a97" translate="yes" xml:space="preserve">
          <source>FloatVar</source>
          <target state="translated">FloatVar</target>
        </trans-unit>
        <trans-unit id="c0ea9f66df3119a44fa1e9b36eebfcf85cc69779" translate="yes" xml:space="preserve">
          <source>FloatVarOf</source>
          <target state="translated">FloatVarOf</target>
        </trans-unit>
        <trans-unit id="f2fcdb71bd772d3aedf2ab924de45e055aed5e47" translate="yes" xml:space="preserve">
          <source>Floating Point Numbers Comparison</source>
          <target state="translated">浮動小数点数の比較</target>
        </trans-unit>
        <trans-unit id="a2b231a839e2f44ec35f4b86d03071ef62be77b9" translate="yes" xml:space="preserve">
          <source>Floating point numbers comparison</source>
          <target state="translated">浮動小数点数の比較</target>
        </trans-unit>
        <trans-unit id="fbbce7c2bd0495f1dfb372805ab8fe1d050e33ba" translate="yes" xml:space="preserve">
          <source>Floating point numbers equality</source>
          <target state="translated">浮動小数点数の平等</target>
        </trans-unit>
        <trans-unit id="25f2649c6c900f682ec1c5457eaf2171cb22dfb9" translate="yes" xml:space="preserve">
          <source>Floating point to bits conversions</source>
          <target state="translated">浮動小数点からビットへの変換</target>
        </trans-unit>
        <trans-unit id="b61c95ccd79a54c27f8848d6bdd0e42be0d1b3ab" translate="yes" xml:space="preserve">
          <source>Floating-point and other types</source>
          <target state="translated">浮動小数点型など</target>
        </trans-unit>
        <trans-unit id="0e7554a08478576bef6230269bfec3d2f920dec7" translate="yes" xml:space="preserve">
          <source>Floating-point numbers act similarly to in Python, but they come in two types, depending on how many digits you need. If you need larger precision, or to work with monetary amounts (or other situations where you must have exact results), use the non-primitive type &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">浮動小数点数はPythonと同様に機能しますが、必要な桁数に応じて2つのタイプがあります。より高い精度が必要な場合、または金額（または正確な結果が必要なその他の状況）を処理する場合は、プリミティブ型ではない &lt;code&gt;BigDecimal&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="75247b1405beabbe2433c334ee457c6b63301008" translate="yes" xml:space="preserve">
          <source>Floats are tagged by &lt;code&gt;f&lt;/code&gt; or &lt;code&gt;F&lt;/code&gt;: &lt;code&gt;123.5f&lt;/code&gt;</source>
          <target state="translated">フロートは &lt;code&gt;f&lt;/code&gt; または &lt;code&gt;F&lt;/code&gt; でタグ付けされています： &lt;code&gt;123.5f&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99b116ec5966382c21a5d91ab57e879cd944d954" translate="yes" xml:space="preserve">
          <source>FocusEventInit</source>
          <target state="translated">FocusEventInit</target>
        </trans-unit>
        <trans-unit id="93a54a94f3c7246b2829b18c58f2f5f37395fb11" translate="yes" xml:space="preserve">
          <source>Fold and reduce</source>
          <target state="translated">折りたたんで減らす</target>
        </trans-unit>
        <trans-unit id="2e2afca6d0dd17580032d0ae27317e2de9b64677" translate="yes" xml:space="preserve">
          <source>Follow the &lt;a href=&quot;../tutorials/kotlin-android&quot;&gt;Getting Started with Android and Kotlin&lt;/a&gt; tutorial to create your first Kotlin application.</source>
          <target state="translated">&lt;a href=&quot;../tutorials/kotlin-android&quot;&gt;AndroidとKotlinの入門&lt;/a&gt;チュートリアルに従って、最初のKotlinアプリケーションを作成します。</target>
        </trans-unit>
        <trans-unit id="86976b6ee5831177f899feb4f06c0deedc66d834" translate="yes" xml:space="preserve">
          <source>Following the &lt;em&gt;Feedback Loop&lt;/em&gt; principle we release many things early for the community to try out, so a number of components are not yet released as &lt;strong&gt;Stable&lt;/strong&gt;. Some of them are very early stage, some are more mature. We mark them as &lt;strong&gt;Experimental&lt;/strong&gt;, &lt;strong&gt;Alpha&lt;/strong&gt; or &lt;strong&gt;Beta&lt;/strong&gt; depending on how quickly each component is evolving and how much risk the users are taking when adopting it.</source>
          <target state="translated">&lt;em&gt;フィードバックループの&lt;/em&gt;原則に従って、コミュニティが試してみるために多くのことを早期にリリースしているため、多くのコンポーネントはまだ&lt;strong&gt;Stable&lt;/strong&gt;としてリリースされていません。それらのいくつかは非常に初期の段階であり、いくつかはより成熟しています。各コンポーネントの進化の速さと、ユーザーがそれを採用する際に取るリスクに応じて、&lt;strong&gt;実験的&lt;/strong&gt;、&lt;strong&gt;アルファ、&lt;/strong&gt;または&lt;strong&gt;ベータ&lt;/strong&gt;としてマークします。</target>
        </trans-unit>
        <trans-unit id="3ea19335fbbfe973c7abd974cb5ad7401a1101f0" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;delegated-properties&quot;&gt;delegated properties&lt;/a&gt;, it is now possible to intercept delegate to property binding using the &lt;code&gt;provideDelegate&lt;/code&gt; operator. For example, if we want to check the property name before binding, we can write something like this:</source>
          <target state="translated">以下のために&lt;a href=&quot;delegated-properties&quot;&gt;委任の性質&lt;/a&gt;、それは使用して結合特性にインターセプトデリゲートにできるようになりました &lt;code&gt;provideDelegate&lt;/code&gt; の演算子を。たとえば、バインドする前にプロパティ名を確認する場合は、次のように記述できます。</target>
        </trans-unit>
        <trans-unit id="5f2a4b596e206597c0ed7295073dc6afa996e5b9" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html&quot;&gt;&lt;code&gt;ThreadLocal&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/java.lang.-thread-local/as-context-element.html&quot;&gt;asContextElement&lt;/a&gt; extension function is here for the rescue. It creates an additional context element, which keeps the value of the given &lt;code&gt;ThreadLocal&lt;/code&gt; and restores it every time the coroutine switches its context.</source>
          <target state="translated">以下のため&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html&quot;&gt; &lt;code&gt;ThreadLocal&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/java.lang.-thread-local/as-context-element.html&quot;&gt;asContextElementの&lt;/a&gt;拡張機能は、救助のためにここにあります。追加のコンテキスト要素を作成します。これは、指定された &lt;code&gt;ThreadLocal&lt;/code&gt; の値を保持し、コルーチンがコンテキストを切り替えるたびにそれを復元します。</target>
        </trans-unit>
        <trans-unit id="8602cc35fe8fa9fa0efd1f5b682b7c6543d1468d" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html&quot;&gt;&lt;code&gt;ThreadLocal&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/java.lang.-thread-local/as-context-element.html&quot;&gt;asContextElement&lt;/a&gt; extension function is here for the rescue. It creates an additional context element which keeps the value of the given &lt;code&gt;ThreadLocal&lt;/code&gt; and restores it every time the coroutine switches its context.</source>
          <target state="translated">以下のため&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html&quot;&gt; &lt;code&gt;ThreadLocal&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/java.lang.-thread-local/as-context-element.html&quot;&gt;asContextElementの&lt;/a&gt;拡張機能は、救助のためにここにあります。指定された &lt;code&gt;ThreadLocal&lt;/code&gt; の値を保持し、コルーチンがコンテキストを切り替えるたびにそれを復元する追加のコンテキスト要素を作成します。</target>
        </trans-unit>
        <trans-unit id="f20274a899133f1e66b0011aed86b24f7186d1ca" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Foo&amp;lt;T : TUpper&amp;gt;&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is an invariant type parameter with the upper bound &lt;code&gt;TUpper&lt;/code&gt;, &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; is equivalent to &lt;code&gt;Foo&amp;lt;out TUpper&amp;gt;&lt;/code&gt; for reading values and to &lt;code&gt;Foo&amp;lt;in Nothing&amp;gt;&lt;/code&gt; for writing values.</source>
          <target state="translated">&lt;code&gt;Foo&amp;lt;T : TUpper&amp;gt;&lt;/code&gt; 、 &lt;code&gt;T&lt;/code&gt; が上限と不変の型パラメータである &lt;code&gt;TUpper&lt;/code&gt; 、 &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; と等価である &lt;code&gt;Foo&amp;lt;out TUpper&amp;gt;&lt;/code&gt; 値を読み取るとするために &lt;code&gt;Foo&amp;lt;in Nothing&amp;gt;&lt;/code&gt; 値を書き込むため。</target>
        </trans-unit>
        <trans-unit id="332d2c7a81fe2ca27d839eef9b44bce000ba25e2" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Foo&amp;lt;in T&amp;gt;&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is a contravariant type parameter, &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; is equivalent to &lt;code&gt;Foo&amp;lt;in Nothing&amp;gt;&lt;/code&gt;. It means there is nothing you can &lt;em&gt;write&lt;/em&gt; to &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; in a safe way when &lt;code&gt;T&lt;/code&gt; is unknown.</source>
          <target state="translated">&lt;code&gt;Foo&amp;lt;in T&amp;gt;&lt;/code&gt; 、 &lt;code&gt;T&lt;/code&gt; は反変の型パラメータで、 &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; 同等です &lt;code&gt;Foo&amp;lt;in Nothing&amp;gt;&lt;/code&gt; 。それはあなたができることは何も存在しないことを意味&lt;em&gt;書く&lt;/em&gt;に &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; とき、安全な方法で、 &lt;code&gt;T&lt;/code&gt; は不明ですが。</target>
        </trans-unit>
        <trans-unit id="f764307d008b2dc88dbd4a50404093c551a59137" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Foo&amp;lt;out T : TUpper&amp;gt;&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is a covariant type parameter with the upper bound &lt;code&gt;TUpper&lt;/code&gt;, &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; is equivalent to &lt;code&gt;Foo&amp;lt;out TUpper&amp;gt;&lt;/code&gt;. It means that when the &lt;code&gt;T&lt;/code&gt; is unknown you can safely &lt;em&gt;read&lt;/em&gt; values of &lt;code&gt;TUpper&lt;/code&gt; from &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">ため &lt;code&gt;Foo&amp;lt;out T : TUpper&amp;gt;&lt;/code&gt; 、 &lt;code&gt;T&lt;/code&gt; が上限との共変の型パラメータである &lt;code&gt;TUpper&lt;/code&gt; 、 &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; と等価である &lt;code&gt;Foo&amp;lt;out TUpper&amp;gt;&lt;/code&gt; 。つまり、 &lt;code&gt;T&lt;/code&gt; が不明な場合、 &lt;code&gt;TUpper&lt;/code&gt; 値を &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; から安全に&lt;em&gt;読み取る&lt;/em&gt;ことができ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="de45977bda92a2c4ac133cf321bc144db3f877f2" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;a--&lt;/code&gt; the steps are completely analogous.</source>
          <target state="translated">aの場合 &lt;code&gt;a--&lt;/code&gt; 手順は完全に類似しています。</target>
        </trans-unit>
        <trans-unit id="402b4f2806b250e712e0c012f111a80ad8d2019c" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;commonTest&lt;/code&gt;, add the &lt;code&gt;kotlin-test-common&lt;/code&gt; and &lt;code&gt;kotlin-test-annotations-common&lt;/code&gt; dependencies.</source>
          <target state="translated">&lt;code&gt;commonTest&lt;/code&gt; 、追加 &lt;code&gt;kotlin-test-common&lt;/code&gt; と &lt;code&gt;kotlin-test-annotations-common&lt;/code&gt; の依存関係を。</target>
        </trans-unit>
        <trans-unit id="f16d61f55554c0f8e3fcbdd6a01df57f3ff5b3b3" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;in&lt;/code&gt; and &lt;code&gt;!in&lt;/code&gt; the procedure is the same, but the order of arguments is reversed.</source>
          <target state="translated">以下のため &lt;code&gt;in&lt;/code&gt; と &lt;code&gt;!in&lt;/code&gt; 手順は同じですが、引数の順序が逆になります。</target>
        </trans-unit>
        <trans-unit id="31f9ee789739cfb2cfe2b0d0e06d5b503a8b42d9" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;scoped&lt;/em&gt; concurrency &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/supervisor-scope.html&quot;&gt;supervisorScope&lt;/a&gt; can be used instead of &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;coroutineScope&lt;/a&gt; for the same purpose. It propagates cancellation only in one direction and cancels all children only if it has failed itself. It also waits for all children before completion just like &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;coroutineScope&lt;/a&gt; does.</source>
          <target state="translated">以下のために&lt;em&gt;スコープの&lt;/em&gt;同時実行&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/supervisor-scope.html&quot;&gt;supervisorScopeが&lt;/a&gt;代わりに使用することができます&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;coroutineScope&lt;/a&gt;同じ目的のために。キャンセルは一方向にのみ伝播し、失敗した場合にのみすべての子をキャンセルします。また、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;coroutineScope&lt;/a&gt;と同様に、完了前にすべての子を待機します。</target>
        </trans-unit>
        <trans-unit id="a0e12bb16ea7f7a27b9b78e993d5f87a2124f98e" translate="yes" xml:space="preserve">
          <source>For Common</source>
          <target state="translated">共通の場合</target>
        </trans-unit>
        <trans-unit id="6f36291090388ede8a74a2268f3b0b4769b93681" translate="yes" xml:space="preserve">
          <source>For Common, JS</source>
          <target state="translated">コモン、JSの場合</target>
        </trans-unit>
        <trans-unit id="08f2b4dbf3c972b5d411304bf3e11192f1f2b5cd" translate="yes" xml:space="preserve">
          <source>For Common, JS, Native</source>
          <target state="translated">Common,JS,Native用</target>
        </trans-unit>
        <trans-unit id="c57700f7e3a3d62bcd69c71749f0f3be05b90f01" translate="yes" xml:space="preserve">
          <source>For Common, JVM</source>
          <target state="translated">コモン、JVMの場合</target>
        </trans-unit>
        <trans-unit id="c6d6fbfa8f0b28a75a50eef0c4691e291e4ed840" translate="yes" xml:space="preserve">
          <source>For Common, JVM, JS</source>
          <target state="translated">コモン、JVM、JS用</target>
        </trans-unit>
        <trans-unit id="97569590cb4cba4889ce7c34a4818f4359884242" translate="yes" xml:space="preserve">
          <source>For Common, JVM, Native</source>
          <target state="translated">コモン、JVM、ネイティブ用</target>
        </trans-unit>
        <trans-unit id="dfb677aec3d63fca3e145c67432fc2f47b804a0f" translate="yes" xml:space="preserve">
          <source>For Common, Native</source>
          <target state="translated">コモン、ネイティブの場合</target>
        </trans-unit>
        <trans-unit id="f2a1cfa3398b9f0993eeb53309d74df3be92ac54" translate="yes" xml:space="preserve">
          <source>For Gradle, you can use &lt;a href=&quot;https://docs.gradle.org/current/userguide/composite_builds.html&quot;&gt;Gradle composite builds&lt;/a&gt; like this:</source>
          <target state="translated">Gradleの場合、次のような&lt;a href=&quot;https://docs.gradle.org/current/userguide/composite_builds.html&quot;&gt;Gradle複合ビルドを&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="03e5026bb8bab6b35279081359d5bd1232248dec" translate="yes" xml:space="preserve">
          <source>For JS</source>
          <target state="translated">JSの場合</target>
        </trans-unit>
        <trans-unit id="eb3146c22a68ff70c95d86d10c3aac2c61e9ff48" translate="yes" xml:space="preserve">
          <source>For JS, Native</source>
          <target state="translated">JSの場合は、ネイティブ</target>
        </trans-unit>
        <trans-unit id="52a5c3b06aba4f97fbfff83904d500d04c6cf159" translate="yes" xml:space="preserve">
          <source>For JVM</source>
          <target state="translated">JVMの場合</target>
        </trans-unit>
        <trans-unit id="f560905d6ce11426aa66b2a00de81c0fb9ddf9a2" translate="yes" xml:space="preserve">
          <source>For JVM targets, use &lt;code&gt;kotlin-test-junit&lt;/code&gt; or &lt;code&gt;kotlin-test-testng&lt;/code&gt; for the corresponding asserter implementation and annotations mapping.</source>
          <target state="translated">JVMターゲットの場合、対応する &lt;code&gt;kotlin-test-testng&lt;/code&gt; 実装とアノテーションのマッピングに &lt;code&gt;kotlin-test-junit&lt;/code&gt; またはkotlin-test-testngを使用します。</target>
        </trans-unit>
        <trans-unit id="936303ad2d9ed6332511f0fe756574116872b746" translate="yes" xml:space="preserve">
          <source>For JVM, JS</source>
          <target state="translated">JVM、JSの場合</target>
        </trans-unit>
        <trans-unit id="e336336a19c419821bcd2958c5a320b4be56f6b6" translate="yes" xml:space="preserve">
          <source>For JVM, JS, Native</source>
          <target state="translated">JVM、JS、ネイティブの場合</target>
        </trans-unit>
        <trans-unit id="4231cf261b352f7e81cbd406b3067bb406f78f5e" translate="yes" xml:space="preserve">
          <source>For JVM, Native</source>
          <target state="translated">JVMの場合、ネイティブ</target>
        </trans-unit>
        <trans-unit id="04b10a19cf1aeb7cc946055626cdf7a2d6e7e7bc" translate="yes" xml:space="preserve">
          <source>For Kotlin types, it means that &lt;code&gt;null&lt;/code&gt; value is allowed to be represented by this type. In practice it means that the type was declared with a question mark at the end. For non-Kotlin types, it means the type or the symbol which was declared with this type is annotated with a runtime-retained nullability annotation such as javax.annotation.Nullable.</source>
          <target state="translated">Kotlin型の場合、これは &lt;code&gt;null&lt;/code&gt; 値をこの型で表すことができることを意味します。実際には、型が最後に疑問符を付けて宣言されたことを意味します。非Kotlin型の場合、これは、この型で宣言された型またはシンボルに、javax.annotation.Nullableなどの実行時保持のnull可能性注釈が付けられていることを意味します。</target>
        </trans-unit>
        <trans-unit id="d736a4a8386128861056f685da36b811e20418d8" translate="yes" xml:space="preserve">
          <source>For Kotlin/JS targets, add &lt;code&gt;kotlin-test-js&lt;/code&gt; as a test dependency.</source>
          <target state="translated">For Kotlin/JS targets, add &lt;code&gt;kotlin-test-js&lt;/code&gt; as a test dependency.</target>
        </trans-unit>
        <trans-unit id="e5178c43125e009c8d866f7748cc2bbf34035517" translate="yes" xml:space="preserve">
          <source>For Kotlin/JS targets, add &lt;code&gt;kotlin-test-js&lt;/code&gt; as a test dependency. At this point, test tasks for Kotlin/JS are created but do not run tests by default; they should be manually configured to run the tests with a JavaScript test framework.</source>
          <target state="translated">Kotlin / JSターゲットの場合、 &lt;code&gt;kotlin-test-js&lt;/code&gt; をテスト依存関係として追加します。この時点で、Kotlin / JSのテストタスクが作成されますが、デフォルトではテストを実行しません。JavaScriptテストフレームワークを使用してテストを実行するには、手動で設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="83a9b0d03b9db5694bd1ebfb554d601404ed62d5" translate="yes" xml:space="preserve">
          <source>For Kotlin/JS, the following hands-on labs are currently available:</source>
          <target state="translated">Kotlin/JSについては、現在以下のハンズオンラボをご用意しています。</target>
        </trans-unit>
        <trans-unit id="a36b859180dd2062331e5d0956bbf601eda4340d" translate="yes" xml:space="preserve">
          <source>For Loops</source>
          <target state="translated">ループの場合</target>
        </trans-unit>
        <trans-unit id="6d6e345d366909cab27a1a82d173a98512a79549" translate="yes" xml:space="preserve">
          <source>For Maven, it would be:</source>
          <target state="translated">メイヴンの場合は</target>
        </trans-unit>
        <trans-unit id="1b374591365e51702410472ce8ea252f95f74ff7" translate="yes" xml:space="preserve">
          <source>For Native</source>
          <target state="translated">ネイティブのために</target>
        </trans-unit>
        <trans-unit id="fa0cf33839ec78139e380b6a981aa8d6503e8b15" translate="yes" xml:space="preserve">
          <source>For OSGi support see the &lt;a href=&quot;kotlin-osgi&quot;&gt;Kotlin OSGi page&lt;/a&gt;.</source>
          <target state="translated">OSGiサポートについては、&lt;a href=&quot;kotlin-osgi&quot;&gt;Kotlin OSGiページを参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8dd6a62a21cec1f18bb286c578958d05d4ddd65d" translate="yes" xml:space="preserve">
          <source>For a &lt;strong&gt;mutable&lt;/strong&gt; property (&lt;em&gt;var&lt;/em&gt;), a delegate has to additionally provide an operator function &lt;code&gt;setValue()&lt;/code&gt; with the following parameters:</source>
          <target state="translated">For a &lt;strong&gt;mutable&lt;/strong&gt; property (&lt;em&gt;var&lt;/em&gt;), a delegate has to additionally provide an operator function &lt;code&gt;setValue()&lt;/code&gt; with the following parameters:</target>
        </trans-unit>
        <trans-unit id="f4a584c0cd636b99f6cd5deb25bfe0a9ca2e2c8a" translate="yes" xml:space="preserve">
          <source>For a &lt;strong&gt;mutable&lt;/strong&gt; property (a &lt;em&gt;var&lt;/em&gt;), a delegate has to &lt;em&gt;additionally&lt;/em&gt; provide a function named &lt;code&gt;setValue&lt;/code&gt; that takes the following parameters:</source>
          <target state="translated">以下のために&lt;strong&gt;変更可能な&lt;/strong&gt;プロパティ（&lt;em&gt;VAR&lt;/em&gt;）、デリゲートをしなければなら&lt;em&gt;さらに&lt;/em&gt;名前の関数を提供 &lt;code&gt;setValue&lt;/code&gt; の次のパラメータを取ります。</target>
        </trans-unit>
        <trans-unit id="0f266f3d87d12b9f6e5d63efab1a4b239eb2eef2" translate="yes" xml:space="preserve">
          <source>For a &lt;strong&gt;read-only&lt;/strong&gt; property (&lt;em&gt;val&lt;/em&gt;), a delegate has to provide an operator function &lt;code&gt;getValue()&lt;/code&gt; with the following parameters:</source>
          <target state="translated">For a &lt;strong&gt;read-only&lt;/strong&gt; property (&lt;em&gt;val&lt;/em&gt;), a delegate has to provide an operator function &lt;code&gt;getValue()&lt;/code&gt; with the following parameters:</target>
        </trans-unit>
        <trans-unit id="35025801cc394371dfde9934e9cf7e49df02c0ef" translate="yes" xml:space="preserve">
          <source>For a &lt;strong&gt;read-only&lt;/strong&gt; property (i.e. a &lt;em&gt;val&lt;/em&gt;), a delegate has to provide a function named &lt;code&gt;getValue&lt;/code&gt; that takes the following parameters:</source>
          <target state="translated">以下のために&lt;strong&gt;読み取り専用の&lt;/strong&gt;プロパティ（すなわちA &lt;em&gt;ヴァル&lt;/em&gt;）、デリゲートは、名前の関数を提供しなければならない &lt;code&gt;getValue&lt;/code&gt; 次のパラメータを取ります。</target>
        </trans-unit>
        <trans-unit id="21cb8d49e26bf8342dc4bb5b4ad4da91a1e77a5f" translate="yes" xml:space="preserve">
          <source>For a gradual migration, it's possible to enable the &lt;em&gt;&quot;File is not formatted according to project settings&quot;&lt;/em&gt; inspection. It will highlight the places that should be reformatted. After enabling the &lt;em&gt;&quot;Apply only to modified files&quot;&lt;/em&gt; option, inspection will show formatting problems only in modified files. Such files are probably going to be committed soon anyway.</source>
          <target state="translated">段階的な移行の場合、&lt;em&gt;「ファイルはプロジェクト設定に従ってフォーマットされていません」&lt;/em&gt;検査を有効にすることができ&lt;em&gt;ます&lt;/em&gt;。再フォーマットする必要がある場所が強調表示されます。[ &lt;em&gt;変更されたファイルにのみ適用&lt;/em&gt; ]オプション&lt;em&gt;を&lt;/em&gt;有効にすると、検査により、変更されたファイルのみでフォーマットの問題が表示されます。そのようなファイルはおそらくとにかくすぐにコミットされるでしょう。</target>
        </trans-unit>
        <trans-unit id="6e4c801bbb25ddbc3c08a47408830082eed3477f" translate="yes" xml:space="preserve">
          <source>For a lambda with multiple parameters, you can use the &lt;code&gt;_&lt;/code&gt; character to replace the names of the parameters you don't use:</source>
          <target state="translated">複数のパラメーターを持つラムダの場合、 &lt;code&gt;_&lt;/code&gt; 文字を使用して、使用しないパラメーターの名前を置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="b3f1a97500bff9f685ac335e27f80b3c7d1687f3" translate="yes" xml:space="preserve">
          <source>For a low-level description, see the &lt;a href=&quot;https://github.com/JetBrains/kotlin/blob/master/spec-docs/reified-type-parameters.md&quot;&gt;spec document&lt;/a&gt;.</source>
          <target state="translated">低レベルの説明については、&lt;a href=&quot;https://github.com/JetBrains/kotlin/blob/master/spec-docs/reified-type-parameters.md&quot;&gt;仕様書を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="52de52af3f48a41d7aaf8f9a39e3810b703b093a" translate="yes" xml:space="preserve">
          <source>For a more complete example of using &lt;code&gt;libcurl&lt;/code&gt;, the &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/libcurl&quot;&gt;libcurl sample of the Kotlin/Native project&lt;/a&gt; shows how to abstract the code into Kotlin classes as well as display headers. It also demonstrates how to make the steps a little easier by combining them into a shell script or Gradle build. We'll cover these topics though in more detail in subsequent tutorials.</source>
          <target state="translated">&lt;code&gt;libcurl&lt;/code&gt; のより完全な使用例について&lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/libcurl&quot;&gt;は、Kotlin / Nativeプロジェクト&lt;/a&gt;のlibcurlサンプルで、コードをKotlinクラスに抽象化し、ヘッダーを表示する方法を示します。また、ステップをシェルスクリプトまたはGradleビルドに組み合わせることにより、ステップを少し簡単にする方法も示します。これらのトピックについては、以降のチュートリアルで詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="ed114e62d47b1c0762ff485fe26cc64acad1eb09" translate="yes" xml:space="preserve">
          <source>For a more complete example please refer to the &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/workers&quot;&gt;workers example&lt;/a&gt; in the Kotlin/Native repository.</source>
          <target state="translated">より完全な例については、Kotlin /ネイティブリポジトリの&lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/workers&quot;&gt;ワーカーの&lt;/a&gt;例を参照してください。</target>
        </trans-unit>
        <trans-unit id="05ea2ae6af0a59b8862585f8d9a02e695b4bd06e" translate="yes" xml:space="preserve">
          <source>For a more in-depth introduction to the language, check out the &lt;a href=&quot;index&quot;&gt;reference documentation&lt;/a&gt; on this site and &lt;a href=&quot;../tutorials/koans&quot;&gt;Kotlin Koans&lt;/a&gt;.</source>
          <target state="translated">この言語の詳細については、このサイトの&lt;a href=&quot;index&quot;&gt;リファレンスドキュメント&lt;/a&gt;と&lt;a href=&quot;../tutorials/koans&quot;&gt;Kotlin Koansをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8d65cf737fd6a20fca9a5968a403caa15ac7b74" translate="yes" xml:space="preserve">
          <source>For a more in-depth introduction, check out the &lt;a href=&quot;index&quot;&gt;reference documentation&lt;/a&gt; on this site and &lt;a href=&quot;../tutorials/koans&quot;&gt;Kotlin Koans&lt;/a&gt;.</source>
          <target state="translated">より詳細な&lt;a href=&quot;index&quot;&gt;概要&lt;/a&gt;については、このサイトおよび&lt;a href=&quot;../tutorials/koans&quot;&gt;Kotlin Koansの&lt;/a&gt;リファレンスドキュメントを確認してください。</target>
        </trans-unit>
        <trans-unit id="fbc2c91fbdda5a2b47669726bfdd3023ba301d36" translate="yes" xml:space="preserve">
          <source>For a more technical description, see the &lt;a href=&quot;https://github.com/JetBrains/kotlin/blob/master/spec-docs/dynamic-types.md&quot;&gt;spec document&lt;/a&gt;.</source>
          <target state="translated">より技術的な説明については、&lt;a href=&quot;https://github.com/JetBrains/kotlin/blob/master/spec-docs/dynamic-types.md&quot;&gt;仕様書を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4905d96c37716a04ccca3bcd0aec1d2235e24e05" translate="yes" xml:space="preserve">
          <source>For a mutable property, e.g. &lt;code&gt;var y = 1&lt;/code&gt;, &lt;code&gt;::y&lt;/code&gt; returns a value of type &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-mutable-property/index&quot;&gt;&lt;code&gt;KMutableProperty&amp;lt;Int&amp;gt;&lt;/code&gt;&lt;/a&gt;, which has a &lt;code&gt;set()&lt;/code&gt; method:</source>
          <target state="translated">可変のプロパティの場合（例： &lt;code&gt;var y = 1&lt;/code&gt; 、 &lt;code&gt;::y&lt;/code&gt; &lt;code&gt;set()&lt;/code&gt; は、set（）メソッドを持つ&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-mutable-property/index&quot;&gt; &lt;code&gt;KMutableProperty&amp;lt;Int&amp;gt;&lt;/code&gt; &lt;/a&gt;型の値を返します。</target>
        </trans-unit>
        <trans-unit id="1f11e27d6c4160d4e0f5dc6c118773d876e46d22" translate="yes" xml:space="preserve">
          <source>For a negative step: the minimum value not less than the end value such that &lt;code&gt;(last - first) % step == 0&lt;/code&gt;.</source>
          <target state="translated">For a negative step: the minimum value not less than the end value such that &lt;code&gt;(last - first) % step == 0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26c7bd834f85d8a26c302cb861ef1a96961fb03c" translate="yes" xml:space="preserve">
          <source>For a positive step: the maximum value not greater than the end value such that &lt;code&gt;(last - first) % step == 0&lt;/code&gt;.</source>
          <target state="translated">For a positive step: the maximum value not greater than the end value such that &lt;code&gt;(last - first) % step == 0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c04dc331c62e225f9ba430516892d65199206707" translate="yes" xml:space="preserve">
          <source>For a symbol that is declared inside a class:</source>
          <target state="translated">クラス内で宣言されているシンボルの場合。</target>
        </trans-unit>
        <trans-unit id="e993bf612bf1600b9ce9618843fca0af6ca52f9c" translate="yes" xml:space="preserve">
          <source>For a typical Unix library with a config script, the &lt;code&gt;compilerOpts&lt;/code&gt; will likely contain the output of a config script with the &lt;code&gt;--cflags&lt;/code&gt; flag (maybe without exact paths).</source>
          <target state="translated">構成スクリプトを使用する一般的なUnixライブラリの場合、 &lt;code&gt;compilerOpts&lt;/code&gt; には &lt;code&gt;--cflags&lt;/code&gt; フラグを使用した構成スクリプトの出力が含まれている可能性があります（正確なパスがない可能性があります）。</target>
        </trans-unit>
        <trans-unit id="f0ffc38ab87aa0a2254afe0dac4d4f4abe21ea7b" translate="yes" xml:space="preserve">
          <source>For additional details, please consult the &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/scripting-support.md&quot;&gt;KEEP-75&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/scripting-support.md&quot;&gt;KEEP-75&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="86c5db154bc4017f6e19e21eebb42b806549c22c" translate="yes" xml:space="preserve">
          <source>For advanced usage, for example for integration with logging MDC, transactional contexts or any other libraries which internally use thread-locals for passing data, see documentation for &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-thread-context-element/index.html&quot;&gt;ThreadContextElement&lt;/a&gt; interface that should be implemented.</source>
          <target state="translated">ロギングMDC、トランザクションコンテキスト、またはデータを渡すために内部でスレッドローカルを使用するその他のライブラリとの統合など、高度な使用法については、実装する必要がある&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-thread-context-element/index.html&quot;&gt;ThreadContextElement&lt;/a&gt;インターフェイスのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="f5bd8b47abaf885ba369c4b552650b5e600bab97" translate="yes" xml:space="preserve">
          <source>For advanced usage, for example for integration with logging MDC, transactional contexts or any other libraries which internally use thread-locals for passing data, see the documentation of the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-thread-context-element/index.html&quot;&gt;ThreadContextElement&lt;/a&gt; interface that should be implemented.</source>
          <target state="translated">For advanced usage, for example for integration with logging MDC, transactional contexts or any other libraries which internally use thread-locals for passing data, see the documentation of the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-thread-context-element/index.html&quot;&gt;ThreadContextElement&lt;/a&gt; interface that should be implemented.</target>
        </trans-unit>
        <trans-unit id="d1b6d864741b47438551c8743952cc88342b08e2" translate="yes" xml:space="preserve">
          <source>For all &lt;code&gt;Unix&lt;/code&gt; or &lt;code&gt;Windows&lt;/code&gt; based targets (including &lt;code&gt;Android&lt;/code&gt; and &lt;code&gt;iPhone&lt;/code&gt;) we provide the &lt;code&gt;posix&lt;/code&gt; platform lib. It contains bindings to platform's implementation of &lt;code&gt;POSIX&lt;/code&gt; standard.</source>
          <target state="translated">すべての &lt;code&gt;Unix&lt;/code&gt; または &lt;code&gt;Windows&lt;/code&gt; ベースのターゲット（ &lt;code&gt;Android&lt;/code&gt; および &lt;code&gt;iPhone&lt;/code&gt; を含む）に対して、 &lt;code&gt;posix&lt;/code&gt; プラットフォームlib を提供します。これには、 &lt;code&gt;POSIX&lt;/code&gt; 標準のプラットフォームの実装へのバインディングが含まれています。</target>
        </trans-unit>
        <trans-unit id="637ba86f66e04bfb5c21e0d443fd411f1ae0d969" translate="yes" xml:space="preserve">
          <source>For an example of CocoaPods integration, refer to the &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/cocoapods&quot;&gt;&lt;code&gt;cocoapods&lt;/code&gt;&lt;/a&gt; sample.</source>
          <target state="translated">CocoaPods統合の例については、&lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/cocoapods&quot;&gt; &lt;code&gt;cocoapods&lt;/code&gt; &lt;/a&gt;サンプルを参照してください。</target>
        </trans-unit>
        <trans-unit id="cdf11697a4677fb9ee8260c3dad7ad63798e47a6" translate="yes" xml:space="preserve">
          <source>For an extension property:</source>
          <target state="translated">増築物件の場合。</target>
        </trans-unit>
        <trans-unit id="71b6ee394141461f71e0ce2d3f94fa8ad9908ffc" translate="yes" xml:space="preserve">
          <source>For bigger collections, you may want to specify the &lt;code&gt;limit&lt;/code&gt; &amp;ndash; a number of elements that will be included into result. If the collection size exceeds the &lt;code&gt;limit&lt;/code&gt;, all the other elements will be replaced with a single value of the &lt;code&gt;truncated&lt;/code&gt; argument.</source>
          <target state="translated">より大きなコレクションでは、 &lt;code&gt;limit&lt;/code&gt; 結果に含まれる要素の数）を指定することができます。コレクションのサイズが &lt;code&gt;limit&lt;/code&gt; を超える場合、他のすべての要素は &lt;code&gt;truncated&lt;/code&gt; 引数の単一の値に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="694ca7b8850a82c8e256d49268391f7fa91d2fc1" translate="yes" xml:space="preserve">
          <source>For building maps with collection elements as values, there is the function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-by&quot;&gt;&lt;code&gt;associateBy()&lt;/code&gt;&lt;/a&gt;. It takes a function that returns a key based on an element's value. If two elements are equal, only the last one remains in the map. &lt;code&gt;associateBy()&lt;/code&gt; can also be called with a value transformation function.</source>
          <target state="translated">コレクション要素を値として持つマップを構築するために、関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-by&quot;&gt; &lt;code&gt;associateBy()&lt;/code&gt; &lt;/a&gt;ます。要素の値に基づいてキーを返す関数を受け取ります。2つの要素が等しい場合、最後の要素のみがマップに残ります。 &lt;code&gt;associateBy()&lt;/code&gt; は、値変換関数で呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="f47b960e3cf1bba7f7326ae02c9c3b8dd9fb72b5" translate="yes" xml:space="preserve">
          <source>For certain collection operations, there is an option to specify the &lt;em&gt;destination&lt;/em&gt; object. Destination is a mutable collection to which the function appends its resulting items instead of returning them in a new object. For performing operations with destinations, there are separate functions with the &lt;code&gt;To&lt;/code&gt; postfix in their names, for example, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter-to&quot;&gt;&lt;code&gt;filterTo()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-to&quot;&gt;&lt;code&gt;associateTo()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate&quot;&gt;&lt;code&gt;associate()&lt;/code&gt;&lt;/a&gt;. These functions take the destination collection as an additional parameter.</source>
          <target state="translated">特定のコレクション操作では、&lt;em&gt;宛先&lt;/em&gt;オブジェクトを指定するオプションがあります。 Destinationは、関数が結果のアイテムを新しいオブジェクトに返すのではなく追加する変更可能なコレクションです。宛先を使用して操作を実行する &lt;code&gt;To&lt;/code&gt; に、名前にTo接尾辞が付いた個別の関数があります。たとえば、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter-to&quot;&gt; &lt;code&gt;filterTo()&lt;/code&gt; &lt;/a&gt;代わりにfilterTo &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;や、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-to&quot;&gt; &lt;code&gt;associateTo()&lt;/code&gt; &lt;/a&gt;代わりに&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate&quot;&gt; &lt;code&gt;associate()&lt;/code&gt; &lt;/a&gt;ます。これらの関数は、追加のパラメーターとして宛先コレクションを受け取ります。</target>
        </trans-unit>
        <trans-unit id="02887bdbee3c2022f2023698adee356772aedd2e" translate="yes" xml:space="preserve">
          <source>For certain operations, there are pairs of functions for performing the same operation: one applies the operation in-place and the other returns the result as a separate collection. For example, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/a&gt; sorts a mutable collection in-place, so it's state changes; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; creates a new collection that contains the same elements in the sorted order.</source>
          <target state="translated">特定の操作については、同じ操作を実行するための関数のペアがあります。1つは操作をインプレースで適用し、もう1つは個別のコレクションとして結果を返します。たとえば、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt; &lt;code&gt;sort()&lt;/code&gt; &lt;/a&gt;は変更可能なコレクションをインプレースでソートするため、状態が変化します。&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;は、ソートされた順序で同じ要素を含む新しいコレクションを作成します。</target>
        </trans-unit>
        <trans-unit id="9dfed0b94e755921f99e0c6db40aa33e6c8d1e4f" translate="yes" xml:space="preserve">
          <source>For certain operations, there are pairs of functions for performing the same operation: one applies the operation in-place and the other returns the result as a separate collection. For example, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/a&gt; sorts a mutable collection in-place, so its state changes; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; creates a new collection that contains the same elements in the sorted order.</source>
          <target state="translated">For certain operations, there are pairs of functions for performing the same operation: one applies the operation in-place and the other returns the result as a separate collection. For example, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt; &lt;code&gt;sort()&lt;/code&gt; &lt;/a&gt; sorts a mutable collection in-place, so its state changes; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt; creates a new collection that contains the same elements in the sorted order.</target>
        </trans-unit>
        <trans-unit id="b47aa3d5261111e5dc0cf33a82d66cb2c8e5c3fe" translate="yes" xml:space="preserve">
          <source>For classes with a long supertype list, put a line break after the colon and align all supertype names horizontally:</source>
          <target state="translated">長いスーパータイプリストを持つクラスでは、コロンの後に改行を入れ、すべてのスーパータイプ名を水平に並べます。</target>
        </trans-unit>
        <trans-unit id="f5426c4f7933a1cb4871210952ed14cb2d0d066b" translate="yes" xml:space="preserve">
          <source>For classifiers representing type parameters, the type argument list must always be empty. For classes, the type argument list should contain arguments for the type parameters of the class. If the class is &lt;code&gt;inner&lt;/code&gt;, the list should follow with arguments for the type parameters of its outer class, and so forth until a class is not &lt;code&gt;inner&lt;/code&gt;, or is declared on the top level.</source>
          <target state="translated">型パラメーターを表す分類子の場合、型引数リストは常に空でなければなりません。クラスの場合、型引数リストには、クラスの型パラメーターの引数が含まれている必要があります。クラスがある場合は &lt;code&gt;inner&lt;/code&gt; クラスがでなくなるまで、リストは等々その外側のクラスの型パラメータの引数に従う、とすべきである &lt;code&gt;inner&lt;/code&gt; 、またはトップレベルで宣言されています。</target>
        </trans-unit>
        <trans-unit id="ed9eeecc6a0d768124a687f0cde43ed7908087f9" translate="yes" xml:space="preserve">
          <source>For completeness: it is also possible (but discouraged) to split the declaration and the initial assignment, and even to initialize in multiple places based on some condition. You can only read the variable at a point where the compiler can prove that every possible execution path will have initialized it. If you're creating a read-only variable in this way, you must also ensure that every possible execution path assigns to it &lt;em&gt;exactly&lt;/em&gt; once.</source>
          <target state="translated">完全を期すために、宣言と最初の割り当てを分割し、いくつかの条件に基づいて複数の場所で初期化することも可能です（ただし推奨されません）。可能なすべての実行パスが変数を初期化したことをコンパイラが証明できる時点でのみ、変数を読み取ることができます。この方法で読み取り専用変数を作成する場合は、可能なすべての実行パス&lt;em&gt;が&lt;/em&gt; 1回だけ変数に割り当てるようにする必要もあります。</target>
        </trans-unit>
        <trans-unit id="79ee8b4421a58fb8d8446ab0d337de5ea30eee34" translate="yes" xml:space="preserve">
          <source>For consistency with array literals in annotations, passing a single item for a vararg parameter in the named form (&lt;code&gt;foo(items = i)&lt;/code&gt;) has been deprecated. Please use the spread operator with the corresponding array factory functions:</source>
          <target state="translated">注釈内の配列リテラルとの一貫性を保つために、名前付き形式（ &lt;code&gt;foo(items = i)&lt;/code&gt; ）でvarargパラメーターに単一の項目を渡すことは非推奨になりました。対応する配列ファクトリ関数でスプレッド演算子を使用してください：</target>
        </trans-unit>
        <trans-unit id="afef4be80502f3cfdb78878e430e782b609b8c37" translate="yes" xml:space="preserve">
          <source>For convenience, these functions return the destination collection back, so you can create it right in the corresponding argument of the function call:</source>
          <target state="translated">便利なように、これらの関数は目的のコレクションを返してくれるので、関数呼び出しの対応する引数ですぐに作成することができます。</target>
        </trans-unit>
        <trans-unit id="b434cd5b8ed34d1f894873e141d8af5c3688e3d4" translate="yes" xml:space="preserve">
          <source>For curly braces, put the opening brace in the end of the line where the construct begins, and the closing brace on a separate line aligned horizontally with the opening construct.</source>
          <target state="translated">カーリーブレースの場合は、開始ブレースを構成要素が始まる線の端に置き、終了ブレースを開始構成要素と水平に並んだ別の線上に置きます。</target>
        </trans-unit>
        <trans-unit id="19a64fc7bea10f2735062a2c907700c0ef67633d" translate="yes" xml:space="preserve">
          <source>For debug build it embeds placeholder LLVM IR data as a marker.</source>
          <target state="translated">デバッグビルドでは、LLVMのIRデータをマーカーとして埋め込んでいます。</target>
        </trans-unit>
        <trans-unit id="f7296b3affa034e56286c14adf5ca5d09604d26c" translate="yes" xml:space="preserve">
          <source>For decades, as developers we are confronted with a problem to solve - how to prevent our applications from blocking. Whether we're developing desktop, mobile, or even server-side applications, we want to avoid having the user wait or what's worse cause bottlenecks that would prevent an application from scaling.</source>
          <target state="translated">何十年もの間、開発者として私たちは解決すべき問題に直面してきました。デスクトップ、モバイル、サーバーサイドのアプリケーションを開発しているかどうかに関わらず、ユーザーを待たせたり、アプリケーションのスケーリングを妨げるボトルネックの原因になったりすることは避けたいと考えています。</target>
        </trans-unit>
        <trans-unit id="e5618ea5aa387ca3d934fa7059f4ea5eb2684f42" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#also&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">使用法の詳細については、&lt;a href=&quot;../../../../../docs/reference/scope-functions#also&quot;&gt;スコープ関数&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1d58fbd0a86a8a8236e1ea5cfe8098c23478de1f" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#apply&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">使用法の詳細については、&lt;a href=&quot;../../../../../docs/reference/scope-functions#apply&quot;&gt;スコープ関数&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="757a87b936de48b2ca7dbd30472b34156baef56a" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#let&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">使用法の詳細については、&lt;a href=&quot;../../../../../docs/reference/scope-functions#let&quot;&gt;スコープ関数&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="9afaf366ae8ced14236278d07ef496e91fa87059" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#run&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">使用法の詳細については、&lt;a href=&quot;../../../../../docs/reference/scope-functions#run&quot;&gt;スコープ関数&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="c60faedb0188f0b5a90fa8dfbfa95ce16294c10e" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#with&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">使用法の詳細については、&lt;a href=&quot;../../../../../docs/reference/scope-functions#with&quot;&gt;スコープ関数&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="028e4a57b533fce9ed58d13b3dddb5fa9f3454af" translate="yes" xml:space="preserve">
          <source>For details on using &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt;&lt;code&gt;plusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;+=&lt;/code&gt;) and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus-assign&quot;&gt;&lt;code&gt;minusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;-=&lt;/code&gt;) operators on mutable maps, see &lt;a href=&quot;#map-write-operations&quot;&gt;Map write operations&lt;/a&gt; below.</source>
          <target state="translated">変更可能なマップでの&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt; &lt;code&gt;plusAssign&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;+=&lt;/code&gt; &lt;code&gt;-=&lt;/code&gt; ）演算子と&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus-assign&quot;&gt; &lt;code&gt;minusAssign&lt;/code&gt; &lt;/a&gt;（-=）演算子の使用の詳細については、以下の&lt;a href=&quot;#map-write-operations&quot;&gt;マップ書き込み操作を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a0931a279af808bfe00c2a0d994687a2bad1f41e" translate="yes" xml:space="preserve">
          <source>For each compilation, there is a default source set under the name composed as &lt;code&gt;&amp;lt;targetName&amp;gt;&amp;lt;CompilationName&amp;gt;&lt;/code&gt;. This default source set participates in the compilation, and thus it should be used for the platform-specific code and dependencies, and for adding other source sets to the compilation by the means of 'depends on'. For example, a project with targets &lt;code&gt;jvm6&lt;/code&gt; (JVM) and &lt;code&gt;nodeJs&lt;/code&gt; (JS) will have source sets: &lt;code&gt;commonMain&lt;/code&gt;, &lt;code&gt;commonTest&lt;/code&gt;, &lt;code&gt;jvm6Main&lt;/code&gt;, &lt;code&gt;jvm6Test&lt;/code&gt;, &lt;code&gt;nodeJsMain&lt;/code&gt;, &lt;code&gt;nodeJsTest&lt;/code&gt;.</source>
          <target state="translated">コンパイルごとに、 &lt;code&gt;&amp;lt;targetName&amp;gt;&amp;lt;CompilationName&amp;gt;&lt;/code&gt; として構成される名前の下にデフォルトのソースセットがあります。このデフォルトのソースセットはコンパイルに参加するため、プラットフォーム固有のコードと依存関係、および「依存」の方法でコンパイルに他のソースセットを追加するために使用する必要があります。たとえば、ターゲットが &lt;code&gt;jvm6&lt;/code&gt; （JVM）と &lt;code&gt;nodeJs&lt;/code&gt; （JS）のプロジェクトには、ソースセット &lt;code&gt;commonMain&lt;/code&gt; 、 &lt;code&gt;commonTest&lt;/code&gt; 、 &lt;code&gt;jvm6Main&lt;/code&gt; 、 &lt;code&gt;jvm6Test&lt;/code&gt; 、 &lt;code&gt;nodeJsMain&lt;/code&gt; 、 &lt;code&gt;nodeJsTest&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="a971809f1d47fbd85329764ce9196c05695ed736" translate="yes" xml:space="preserve">
          <source>For each key, there is always a single value associated with it. You can add and remove whole entries.</source>
          <target state="translated">各キーには、常に1つの値が関連付けられています。エントリ全体を追加したり削除したりすることができます。</target>
        </trans-unit>
        <trans-unit id="61b2fa33634d8be8df9db15d8bbf16aa0c02b58e" translate="yes" xml:space="preserve">
          <source>For each target, specify the minimum target version for the Pod library.</source>
          <target state="translated">各ターゲットに対して、Podライブラリの最小ターゲットバージョンを指定します。</target>
        </trans-unit>
        <trans-unit id="6341909ad40b37a6ea351364219d03a48215039d" translate="yes" xml:space="preserve">
          <source>For enum constants, it's OK to use either uppercase underscore-separated names (&lt;code&gt;enum class Color { RED, GREEN }&lt;/code&gt;) or regular camel-case names starting with an uppercase first letter, depending on the usage.</source>
          <target state="translated">For enum constants, it's OK to use either uppercase underscore-separated names ( &lt;code&gt;enum class Color { RED, GREEN }&lt;/code&gt; ) or regular camel-case names starting with an uppercase first letter, depending on the usage.</target>
        </trans-unit>
        <trans-unit id="f9d32997cfc2635d965d79f6a6f0696c8adae072" translate="yes" xml:space="preserve">
          <source>For enum constants, it's OK to use either uppercase underscore-separated names (&lt;code&gt;enum class Color { RED, GREEN }&lt;/code&gt;) or regular camel-humps names starting with an uppercase letter, depending on the usage.</source>
          <target state="translated">enum定数の場合、使用法に応じて、アンダースコアで区切られた大文字の名前（ &lt;code&gt;enum class Color { RED, GREEN }&lt;/code&gt; ）または大文字で始まる通常のキャメルこぶ名のいずれかを使用できます。</target>
        </trans-unit>
        <trans-unit id="3cdc85f184c2ea8335df38fe8b455a7815ab1f41" translate="yes" xml:space="preserve">
          <source>For every parameter with a default value, this will generate one additional overload, which has this parameter and all parameters to the right of it in the parameter list removed. In this example, the following will be generated:</source>
          <target state="translated">デフォルト値を持つすべてのパラメータに対して、このパラメータとその右側のすべてのパラメータが削除されたオーバーロードが追加で生成されます。この例では、以下のように生成されます。</target>
        </trans-unit>
        <trans-unit id="94b950f7e09b83a55502571aef5cf0416b4ce619" translate="yes" xml:space="preserve">
          <source>For every set of &lt;code&gt;.h&lt;/code&gt; files, we will be using the &lt;code&gt;cinterop&lt;/code&gt;&lt;a href=&quot;../../reference/native/c_interop&quot;&gt;C Libraries&lt;/a&gt; from Kotlin/Native to generate a Kotlin/Native library, or &lt;code&gt;.klib&lt;/code&gt;. The generated library will bridge calls from Kotlin/Native to C. It includes respective Kotlin declarations for the definitions form the &lt;code&gt;.h&lt;/code&gt; files. It is only necessary to have a &lt;code&gt;.h&lt;/code&gt; file to run the &lt;code&gt;cinterop&lt;/code&gt; tool. And we do not need to create a &lt;code&gt;lib.c&lt;/code&gt; file, unless we want to compile and run the example. More details on this are covered in the &lt;a href=&quot;../../reference/native/c_interop&quot;&gt;C Libraries&lt;/a&gt; page. It is enough for the tutorial to create the &lt;code&gt;lib.def&lt;/code&gt; file with the following content:</source>
          <target state="translated">&lt;code&gt;.h&lt;/code&gt; ファイルのすべてのセットについて、Kotlin / Nativeの &lt;code&gt;cinterop&lt;/code&gt; &lt;a href=&quot;../../reference/native/c_interop&quot;&gt;Cライブラリ&lt;/a&gt;を使用して、Kotlin / Nativeライブラリまたは &lt;code&gt;.klib&lt;/code&gt; を生成します。生成されたライブラリは、Kotlin /ネイティブからCへの呼び出しをブリッジします。これには、 &lt;code&gt;.h&lt;/code&gt; ファイルからの定義に対するそれぞれのKotlin宣言が含まれます。 &lt;code&gt;cinterop&lt;/code&gt; ツールを実行するには、 &lt;code&gt;.h&lt;/code&gt; ファイルが必要です。また、 &lt;code&gt;lib.c&lt;/code&gt; をコンパイルして実行する場合を除き、lib.cファイルを作成する必要はありません。これに関する詳細は、&lt;a href=&quot;../../reference/native/c_interop&quot;&gt;Cライブラリ&lt;/a&gt;ページで説明されています。チュートリアルが &lt;code&gt;lib.def&lt;/code&gt; ファイルを作成するには、次の内容で十分です。</target>
        </trans-unit>
        <trans-unit id="a79d24b8ae547d8a56979a7932df7c035d95e45d" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;compileDebugKlibraryMacos_x64KotlinNative&lt;/code&gt;, &lt;code&gt;compileTestDebugKotlinNative&lt;/code&gt;.</source>
          <target state="translated">たとえば、 &lt;code&gt;compileDebugKlibraryMacos_x64KotlinNative&lt;/code&gt; 、 &lt;code&gt;compileTestDebugKotlinNative&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="90fea239952b564e524c37f54598a7c5cbd251b7" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;private&lt;/code&gt; could be used to define a property or helper function that is needed by several functions in one file, or a complex type returned by one of your private functions, without leaking them to the rest of the codebase:</source>
          <target state="translated">たとえば、 &lt;code&gt;private&lt;/code&gt; を使用して、1つのファイル内のいくつかの関数が必要とするプロパティやヘルパー関数、またはプライベート関数の1つが返す複雑な型を定義して、コードベースの他の部分にリークすることはありません。</target>
        </trans-unit>
        <trans-unit id="41b672a7205fead42e4ee031049451669f4c3977" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;var firstName: String&lt;/code&gt; gets compiled to the following Java declarations:</source>
          <target state="translated">たとえば、 &lt;code&gt;var firstName: String&lt;/code&gt; は、次のJava宣言にコンパイルされます。</target>
        </trans-unit>
        <trans-unit id="2e26c3138f6c624545fd6a6aad2743d30af7ee6e" translate="yes" xml:space="preserve">
          <source>For example, adding &lt;code&gt;-Xjsr305=ignore -Xjsr305=under-migration:ignore -Xjsr305=@org.library.MyNullable:warn&lt;/code&gt; to the compiler arguments makes the compiler generate warnings for inappropriate usages of types annotated by &lt;code&gt;@org.library.MyNullable&lt;/code&gt; and ignore all other JSR-305 annotations.</source>
          <target state="translated">たとえば、コンパイラの引数に &lt;code&gt;-Xjsr305=ignore -Xjsr305=under-migration:ignore -Xjsr305=@org.library.MyNullable:warn&lt;/code&gt; を &lt;code&gt;@org.library.MyNullable&lt;/code&gt; と、@ org.library.MyNullableで注釈された型の不適切な使用についてコンパイラが警告を生成します。他のすべてのJSR-305アノテーションを無視します。</target>
        </trans-unit>
        <trans-unit id="62105b32ee578f8ede398419b9b2ca8e4ed39f3b" translate="yes" xml:space="preserve">
          <source>For example, adding the following Java class:</source>
          <target state="translated">例えば、次のようなJavaクラスを追加します。</target>
        </trans-unit>
        <trans-unit id="704304023cf4cdbc372fedca8efa4ba9b344de40" translate="yes" xml:space="preserve">
          <source>For example, consider a module is named &lt;code&gt;kotlin-js-example&lt;/code&gt; and it contains a function named &lt;code&gt;toKeep&lt;/code&gt; in package &lt;code&gt;org.jetbrains.kotlin.examples&lt;/code&gt;. Use the following line:</source>
          <target state="translated">例えば、モジュールの名前は考える &lt;code&gt;kotlin-js-example&lt;/code&gt; と、それはという名前の関数が含まれ &lt;code&gt;toKeep&lt;/code&gt; パッケージで &lt;code&gt;org.jetbrains.kotlin.examples&lt;/code&gt; を。次の行を使用します。</target>
        </trans-unit>
        <trans-unit id="04ebd0312e545c856b21c7f39080892fd1e967e8" translate="yes" xml:space="preserve">
          <source>For example, here we imitate a closeable resource with the &lt;code&gt;Resource&lt;/code&gt; class, that simply keeps track of how many times it was created by incrementing the &lt;code&gt;acquired&lt;/code&gt; counter and decrementing this counter from its &lt;code&gt;close&lt;/code&gt; function. Let us run a lot of coroutines with the small timeout try acquire this resource from inside of the &lt;code&gt;withTimeout&lt;/code&gt; block after a bit of delay and release it from outside.</source>
          <target state="translated">For example, here we imitate a closeable resource with the &lt;code&gt;Resource&lt;/code&gt; class, that simply keeps track of how many times it was created by incrementing the &lt;code&gt;acquired&lt;/code&gt; counter and decrementing this counter from its &lt;code&gt;close&lt;/code&gt; function. Let us run a lot of coroutines with the small timeout try acquire this resource from inside of the &lt;code&gt;withTimeout&lt;/code&gt; block after a bit of delay and release it from outside.</target>
        </trans-unit>
        <trans-unit id="f909490e8018194092afc3fb5cdc677fa190965f" translate="yes" xml:space="preserve">
          <source>For example, here's how you can import JQuery into a Kotlin module:</source>
          <target state="translated">例えば、JQueryをKotlinモジュールにインポートする方法は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="37483cc9fb0f554ae163c5d459de77c734124a8f" translate="yes" xml:space="preserve">
          <source>For example, if OV = 1.0 and NV = 1.1, you can observe one of the following warnings:</source>
          <target state="translated">例えば、OV=1.0、NV=1.1の場合、以下のいずれかの警告が観測されます。</target>
        </trans-unit>
        <trans-unit id="7e6d325fa34b0e3eb5a531fab7231604b20e54f9" translate="yes" xml:space="preserve">
          <source>For example, if you choose &quot;Kotlin (Multiplatform Library)&quot;, a library project is created that has three &lt;a href=&quot;#setting-up-targets&quot;&gt;targets&lt;/a&gt;, one for the JVM, one for JS, and one for the Native platform that you are using. These are configured in the &lt;code&gt;build.gradle&lt;/code&gt; script in the following way:</source>
          <target state="translated">たとえば、「Kotlin（マルチプラットフォームライブラリ）」を選択すると、JVM用、JS用、使用しているネイティブプラットフォーム用の3つの&lt;a href=&quot;#setting-up-targets&quot;&gt;ターゲット&lt;/a&gt;を持つライブラリプロジェクトが作成されます。これらは、 &lt;code&gt;build.gradle&lt;/code&gt; スクリプトで次のように構成されます。</target>
        </trans-unit>
        <trans-unit id="9e2cac3c12317d19b9429bd6c154e728f55e225b" translate="yes" xml:space="preserve">
          <source>For example, if you want to check the property name before binding, you can write something like this:</source>
          <target state="translated">例えば、バインドする前にプロパティ名を確認したい場合は、次のように書きます。</target>
        </trans-unit>
        <trans-unit id="b2e2d9ddd64f99c42afbd7403a3cecd42303d49b" translate="yes" xml:space="preserve">
          <source>For example, if you work a lot with bytes, you might want to easily get an unsigned byte in the range 0 through 255 instead of the default -128 through 127 (the result will have to be in the form of a &lt;code&gt;Short&lt;/code&gt;/&lt;code&gt;Int&lt;/code&gt;/&lt;code&gt;Long&lt;/code&gt;, though). &lt;code&gt;Byte&lt;/code&gt; is a built-in class that you can't modify, but you can define this extension function:</source>
          <target state="translated">たとえば、バイトを多用する場合、デフォルトの-128〜127ではなく、0〜255の範囲の符号なしバイトを簡単に取得できます（結果は &lt;code&gt;Short&lt;/code&gt; / &lt;code&gt;Int&lt;/code&gt; /の形式である必要があります） &lt;code&gt;Long&lt;/code&gt; ですが）。 &lt;code&gt;Byte&lt;/code&gt; は、変更できない組み込みクラスですが、次の拡張関数を定義できます。</target>
        </trans-unit>
        <trans-unit id="dc2ee7ccaf73dc899619ee5d9d39c7987e388739" translate="yes" xml:space="preserve">
          <source>For example, in the following case there will be no backing field:</source>
          <target state="translated">例えば、以下のような場合は、バッキングフィールドはありません。</target>
        </trans-unit>
        <trans-unit id="3a9c780158db1fc47c1a136b933a65ecc526133e" translate="yes" xml:space="preserve">
          <source>For example, let's make our example a bit more complicated:</source>
          <target state="translated">例えば、この例をもう少し複雑にしてみましょう。</target>
        </trans-unit>
        <trans-unit id="c1839f64eb2ce7573d6701acab747bd62c3838e1" translate="yes" xml:space="preserve">
          <source>For example, on JVM, &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; instances for a primitive type (&lt;code&gt;int&lt;/code&gt;) and the corresponding wrapper type (&lt;code&gt;java.lang.Integer&lt;/code&gt;) are considered equal, because they have the same fully qualified name &quot;kotlin.Int&quot;.</source>
          <target state="translated">たとえば、JVMでは、プリミティブ型（ &lt;code&gt;int&lt;/code&gt; ）と対応するラッパー型（ &lt;code&gt;java.lang.Integer&lt;/code&gt; ）の&lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt;インスタンスは、完全修飾名「kotlin.Int」が同じであるため、等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="36dc75e0d04d01c4a44b30e1411da2ccccd856ca" translate="yes" xml:space="preserve">
          <source>For example, the C function returning values through pointer parameters can be used like</source>
          <target state="translated">例えば、ポインタパラメータを介して値を返すC言語の関数は、次のように使用することができます。</target>
        </trans-unit>
        <trans-unit id="079a917fd14fe02e329ee98416d6d8eaef4f6689" translate="yes" xml:space="preserve">
          <source>For example, the following Kotlin code:</source>
          <target state="translated">例えば、次のようなKotlinのコード。</target>
        </trans-unit>
        <trans-unit id="17bc9d0385f8ddb156c83471c2dbea8b14c1add0" translate="yes" xml:space="preserve">
          <source>For example, to create a target for each of the Kotlin/Native supported platforms (see below), use this code:</source>
          <target state="translated">例えば、Kotlin/Native がサポートしている各プラットフォーム(下記参照)用のターゲットを作成するには、以下のコードを使用します。</target>
        </trans-unit>
        <trans-unit id="17b4ffea3f831eaa0dd821feed12e719a49e8b8e" translate="yes" xml:space="preserve">
          <source>For example, to disable DCE based on a custom condition for the &lt;code&gt;main&lt;/code&gt; source set and always for the &lt;code&gt;test&lt;/code&gt; code, add the following lines to the build script:</source>
          <target state="translated">たとえば、 &lt;code&gt;main&lt;/code&gt; ソースセットと常に &lt;code&gt;test&lt;/code&gt; コードのカスタム条件に基づいてDCEを無効にするには、ビルドスクリプトに次の行を追加します。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="54035fabb34ea56c34478a1b8f067c284fb150fe" translate="yes" xml:space="preserve">
          <source>For floating-point numbers, Kotlin provides types &lt;code&gt;Float&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt;. According to the &lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_754&quot;&gt;IEEE 754 standard&lt;/a&gt;, floating point types differ by their &lt;em&gt;decimal place&lt;/em&gt;, that is, how many decimal digits they can store. &lt;code&gt;Float&lt;/code&gt; reflects the IEEE 754 &lt;em&gt;single precision&lt;/em&gt;, while &lt;code&gt;Double&lt;/code&gt; provides &lt;em&gt;double precision&lt;/em&gt;.</source>
          <target state="translated">For floating-point numbers, Kotlin provides types &lt;code&gt;Float&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt; . According to the &lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_754&quot;&gt;IEEE 754 standard&lt;/a&gt;, floating point types differ by their &lt;em&gt;decimal place&lt;/em&gt;, that is, how many decimal digits they can store. &lt;code&gt;Float&lt;/code&gt; reflects the IEEE 754 &lt;em&gt;single precision&lt;/em&gt;, while &lt;code&gt;Double&lt;/code&gt; provides &lt;em&gt;double precision&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="4bbcf5e1acf1d0538a87cdcded2402b6469d470f" translate="yes" xml:space="preserve">
          <source>For fully stable versions of the compiler the default binary compatibility protocol is the following:</source>
          <target state="translated">コンパイラの完全に安定したバージョンでは、デフォルトのバイナリ互換性プロトコルは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="1890ad53fa33283873fb912de74957d361b6491e" translate="yes" xml:space="preserve">
          <source>For generic functions, using &lt;a href=&quot;inline-functions#reified-type-parameters&quot;&gt;reified type parameters&lt;/a&gt; makes the casts such as &lt;code&gt;arg as T&lt;/code&gt; checked, unless &lt;code&gt;arg&lt;/code&gt;'s type has &lt;em&gt;its own&lt;/em&gt; type arguments that are erased.</source>
          <target state="translated">ジェネリック関数の場合、&lt;a href=&quot;inline-functions#reified-type-parameters&quot;&gt;具体化された型パラメーターを使用&lt;/a&gt;すると、 &lt;code&gt;arg&lt;/code&gt; の型に消去される&lt;em&gt;独自の&lt;/em&gt;型引数がない限り、 &lt;code&gt;arg as T&lt;/code&gt; などのキャストがチェックされます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="38b15e10dc47b42201678c7bc8e7f549631406db" translate="yes" xml:space="preserve">
          <source>For information on how to do use each of these tutorials refer to the corresponding section:</source>
          <target state="translated">これらのチュートリアルの使用方法については、対応するセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="53871db63838c21ea25dd734e891b1c31c10f9df" translate="yes" xml:space="preserve">
          <source>For inline markup, KDoc uses the regular &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt; syntax, extended to support a shorthand syntax for linking to other elements in the code.</source>
          <target state="translated">インラインマークアップの場合、KDocは通常の&lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt;構文を使用し、コード内の他の要素にリンクするための省略構文をサポートするように拡張されています。</target>
        </trans-unit>
        <trans-unit id="0a82fb018c66cd1ea1c613ead3f02864bd52e930" translate="yes" xml:space="preserve">
          <source>For instance, given</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="54fe8967f6394a3362a64d10de78a37ca1295329" translate="yes" xml:space="preserve">
          <source>For instance, when you use Spring, you don't need all the classes to be open, but only classes annotated with specific annotations like &lt;code&gt;@Configuration&lt;/code&gt; or &lt;code&gt;@Service&lt;/code&gt;. &lt;em&gt;All-open&lt;/em&gt; allows to specify such annotations.</source>
          <target state="translated">たとえば、Springを使用する場合、すべてのクラスを開く必要はありませんが、 &lt;code&gt;@Configuration&lt;/code&gt; や &lt;code&gt;@Service&lt;/code&gt; などの特定のアノテーションが付けられたクラスのみが必要です。&lt;em&gt;All-open&lt;/em&gt;では、このような注釈を指定できます。</target>
        </trans-unit>
        <trans-unit id="1db2f3f2ab1b3b066a571a2d1a44758b0ea7e142" translate="yes" xml:space="preserve">
          <source>For integer numbers, there are four types with different sizes and, hence, value ranges.</source>
          <target state="translated">整数には、大きさの異なる4つのタイプがあり、したがって、値の範囲が異なります。</target>
        </trans-unit>
        <trans-unit id="7aaad9d147155eb1a6a3e244f5b9a2a8a6e149b0" translate="yes" xml:space="preserve">
          <source>For iterating mutable collections, there is &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/index&quot;&gt;&lt;code&gt;MutableIterator&lt;/code&gt;&lt;/a&gt; that extends &lt;code&gt;Iterator&lt;/code&gt; with the element removal function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt;. So, you can remove elements from a collection while iterating it.</source>
          <target state="translated">可変コレクションを反復するために、要素削除関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; で&lt;/a&gt; &lt;code&gt;Iterator&lt;/code&gt; を拡張する&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/index&quot;&gt; &lt;code&gt;MutableIterator&lt;/code&gt; &lt;/a&gt;があります。したがって、コレクションを反復しながら、コレクションから要素を削除できます。</target>
        </trans-unit>
        <trans-unit id="9623eecb005f28baef52cb3adf2863355f3a393f" translate="yes" xml:space="preserve">
          <source>For kotlin versions 1.1.50+/1.2, the default behavior is the same to &lt;code&gt;-Xjsr305=warn&lt;/code&gt;. The &lt;code&gt;strict&lt;/code&gt; value should be considered experimental (more checks may be added to it in the future).</source>
          <target state="translated">kotlinバージョン1.1.50 + / 1.2の場合、デフォルトの動作は &lt;code&gt;-Xjsr305=warn&lt;/code&gt; と同じです。 &lt;code&gt;strict&lt;/code&gt; 値は、実験（複数チェックが将来的にそれに添加することができる）を考慮すべきです。</target>
        </trans-unit>
        <trans-unit id="6cc59502f4a11ebcb9c7bb01b708f5f38029db03" translate="yes" xml:space="preserve">
          <source>For lists, there is a constructor that takes the list size and the initializer function that defines the element value based on its index.</source>
          <target state="translated">リストの場合は、リストのサイズを受け取るコンストラクタと、そのインデックスに基づいて要素の値を定義するイニシャライザ関数があります。</target>
        </trans-unit>
        <trans-unit id="cf7a2b59658422559e19da1a59a94b59966b8fc1" translate="yes" xml:space="preserve">
          <source>For lists, there is a special iterator implementation: &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/index&quot;&gt;&lt;code&gt;ListIterator&lt;/code&gt;&lt;/a&gt;. It supports iterating lists in both directions: forwards and backwards. Backward iteration is implemented by the functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/has-previous&quot;&gt;&lt;code&gt;hasPrevious()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous&quot;&gt;&lt;code&gt;previous()&lt;/code&gt;&lt;/a&gt;. Additionally, the &lt;code&gt;ListIterator&lt;/code&gt; provides information about the element indices with the functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/next-index&quot;&gt;&lt;code&gt;nextIndex()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous-index&quot;&gt;&lt;code&gt;previousIndex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">リストの場合、特別な反復子の実装：&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/index&quot;&gt; &lt;code&gt;ListIterator&lt;/code&gt; があり&lt;/a&gt;ます。それは双方向のリストの反復をサポートします：前方と後方。後方反復は、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/has-previous&quot;&gt; &lt;code&gt;hasPrevious()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous&quot;&gt; &lt;code&gt;previous()&lt;/code&gt; &lt;/a&gt;関数によって実装されます。さらに、 &lt;code&gt;ListIterator&lt;/code&gt; は、要素のインデックスに関する情報を関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/next-index&quot;&gt; &lt;code&gt;nextIndex()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous-index&quot;&gt; &lt;code&gt;previousIndex()&lt;/code&gt; で提供し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="2613f4bb9152895d1f3da19c9b902595c6bf07de" translate="yes" xml:space="preserve">
          <source>For longer documentation comments, place the opening &lt;code&gt;/**&lt;/code&gt; on a separate line and begin each subsequent line with an asterisk:</source>
          <target state="translated">ドキュメントのコメントを長くするには、最初の &lt;code&gt;/**&lt;/code&gt; を別々の行に配置し、後続の各行をアスタリスクで開始します。</target>
        </trans-unit>
        <trans-unit id="65b1c9d3c495af1a58e2d00003c1736af99c56da" translate="yes" xml:space="preserve">
          <source>For medium and large projects the decision may be tough. If you are not ready to update many files right away you may decide to migrate module by module, or continue with gradual migration for modified files only.</source>
          <target state="translated">中規模や大規模なプロジェクトでは、決断は難しいかもしれません。多くのファイルをすぐに更新する準備ができていない場合は、モジュールごとに移行するか、変更されたファイルのみを対象とした段階的な移行を継続するかを決定することができます。</target>
        </trans-unit>
        <trans-unit id="e162067bf7e3d179878c919852cbcdf24e4f2f1f" translate="yes" xml:space="preserve">
          <source>For members declared inside a class:</source>
          <target state="translated">クラス内で宣言されたメンバの場合。</target>
        </trans-unit>
        <trans-unit id="a09f3bfd60f839007a27ec3a24559d939b2a35e4" translate="yes" xml:space="preserve">
          <source>For more complex properties, always put &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; keywords on separate lines:</source>
          <target state="translated">より複雑なプロパティの場合は、 &lt;code&gt;get&lt;/code&gt; キーワードと &lt;code&gt;set&lt;/code&gt; キーワードを常に別々の行に配置します。</target>
        </trans-unit>
        <trans-unit id="2c6d11cb317dc6418f5fe966cb7b00efa9ca9a48" translate="yes" xml:space="preserve">
          <source>For more complicated problems, Kotlin's extensive library of functional operations on collections comes in handy to minimize the boilerplate and turn the code into a linear top-to-bottom and left-to-right fluent data transformation pipeline. For example, the &lt;a href=&quot;http://codeforces.com/contest/1157/problem/B&quot;&gt;Problem B: Long Number&lt;/a&gt; problem takes a simple greedy algorithm to implement and it can be written using this style without a single mutable variable:</source>
          <target state="translated">より複雑な問題については、コトリンのコレクションに対する広範な関数演算ライブラリが定型文を最小限に抑え、コードを上から下へ、左から右へ流れるようなデータ変換パイプラインに変換するのに役立ちます。たとえば、&lt;a href=&quot;http://codeforces.com/contest/1157/problem/B&quot;&gt;問題B：長い数値の&lt;/a&gt;問題は、実装に単純な貪欲なアルゴリズムを使用し、単一の可変変数なしでこのスタイルを使用して記述できます。</target>
        </trans-unit>
        <trans-unit id="c8c7b26bf892e65f4f2f16ff179ebd4da28ea9ec" translate="yes" xml:space="preserve">
          <source>For more details about compatibility issues, see the &lt;code&gt;@JvmDefault&lt;/code&gt;&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/index&quot;&gt;reference page&lt;/a&gt;.</source>
          <target state="translated">互換性の問題の詳細については、 &lt;code&gt;@JvmDefault&lt;/code&gt; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/index&quot;&gt;リファレンスページをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2b8ad66e41103aa7e5d576dd41cf032d9cca536" translate="yes" xml:space="preserve">
          <source>For more details about interface delegation in Kotlin, see &lt;a href=&quot;delegation&quot;&gt;Delegation&lt;/a&gt;.</source>
          <target state="translated">Kotlinのインターフェース委任の詳細については、「&lt;a href=&quot;delegation&quot;&gt;委任&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="4f99246268b944cbfb72319adef4c2c06f42700a" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;visibility-modifiers#constructors&quot;&gt;Visibility Modifiers&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;visibility-modifiers#constructors&quot;&gt;可視性修飾子を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1f8c202f6d3fc629243929f6137d51db369ef6ba" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;dynamic&lt;/code&gt; see the &lt;a href=&quot;../../reference/dynamic-type&quot;&gt;reference documentation&lt;/a&gt;.</source>
          <target state="translated">詳細については &lt;code&gt;dynamic&lt;/code&gt; 参照&lt;a href=&quot;../../reference/dynamic-type&quot;&gt;リファレンスドキュメントを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="976d63a365da3100af6d9872785a7fc0f872d0e7" translate="yes" xml:space="preserve">
          <source>For more information about configuring Gradle to target JavaScript please see &lt;a href=&quot;getting-started-gradle/getting-started-with-gradle&quot;&gt;Getting Started with Gradle&lt;/a&gt;.</source>
          <target state="translated">JavaScriptをターゲットとするようにGradleを構成する方法の詳細については、&lt;a href=&quot;getting-started-gradle/getting-started-with-gradle&quot;&gt;「Gradleスタートガイド」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c6ff59fd7a11f10a9972c2d13b56cf93a2a27bb8" translate="yes" xml:space="preserve">
          <source>For more information about operations on collections in Kotlin, see &lt;a href=&quot;collection-operations&quot;&gt;Collection Operations Overview&lt;/a&gt;.</source>
          <target state="translated">Kotlinでの&lt;a href=&quot;collection-operations&quot;&gt;コレクションの操作の&lt;/a&gt;詳細については、「コレクション操作の概要」を参照してください。</target>
        </trans-unit>
        <trans-unit id="6f6f131a11bc8f9aee46dcc694fdd53ec967e63c" translate="yes" xml:space="preserve">
          <source>For more information about the different types of module outputs, please see &lt;a href=&quot;../working-with-modules/working-with-modules&quot;&gt;Working with Modules&lt;/a&gt;</source>
          <target state="translated">さまざまなタイプのモジュール出力の詳細については&lt;a href=&quot;../working-with-modules/working-with-modules&quot;&gt;、モジュールの操作&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1a670969bcee8de36de21a8b92e43600ead5d941" translate="yes" xml:space="preserve">
          <source>For more information on classes and overriding members see &lt;a href=&quot;classes&quot;&gt;Classes&lt;/a&gt; and &lt;a href=&quot;classes#inheritance&quot;&gt;Inheritance&lt;/a&gt;.</source>
          <target state="translated">クラスとオーバーライドメンバーの詳細については、「&lt;a href=&quot;classes&quot;&gt;クラス&lt;/a&gt;と&lt;a href=&quot;classes#inheritance&quot;&gt;継承&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="4f493af417c0883b703c110e5ef635256b757a3b" translate="yes" xml:space="preserve">
          <source>For more information on generic functions see &lt;a href=&quot;generics&quot;&gt;Generics&lt;/a&gt;.</source>
          <target state="translated">ジェネリック関数の詳細については、&lt;a href=&quot;generics&quot;&gt;ジェネリックを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="303071782df80a3b92a14b04beb4abef6a8308f2" translate="yes" xml:space="preserve">
          <source>For more information on the output generated and the instructions for running the application, please see &lt;a href=&quot;../kotlin-to-javascript/kotlin-to-javascript&quot;&gt;Kotlin to JavaScript&lt;/a&gt;</source>
          <target state="translated">生成された出力とアプリケーションの実行手順の詳細については、&lt;a href=&quot;../kotlin-to-javascript/kotlin-to-javascript&quot;&gt;Kotlin to JavaScript&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="bc5273660a5131db46416a5fa7a3772f1b529324" translate="yes" xml:space="preserve">
          <source>For more information on the output generated please see &lt;a href=&quot;../kotlin-to-javascript/kotlin-to-javascript&quot;&gt;Kotlin to JavaScript&lt;/a&gt;</source>
          <target state="translated">生成された出力の詳細については、&lt;a href=&quot;../kotlin-to-javascript/kotlin-to-javascript&quot;&gt;Kotlin to JavaScript&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="daef8b2b4fbdfb10968e7ab8682260feb7d3ad24" translate="yes" xml:space="preserve">
          <source>For more information regarding Coroutines and the different possibilities, check out the reference guide.</source>
          <target state="translated">コルチンや様々な可能性についての詳細は、リファレンスガイドをご覧ください。</target>
        </trans-unit>
        <trans-unit id="b15215288bf8795d3069346c3f31ed3415c1f91f" translate="yes" xml:space="preserve">
          <source>For more information, please refer to the &lt;a href=&quot;coroutines-overview&quot;&gt;coroutine documentation&lt;/a&gt; and &lt;a href=&quot;../tutorials/coroutines/coroutines-basic-jvm&quot;&gt;tutorial&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;coroutines-overview&quot;&gt;コルーチンのドキュメント&lt;/a&gt;と&lt;a href=&quot;../tutorials/coroutines/coroutines-basic-jvm&quot;&gt;チュートリアル&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6eeee62282cd6eaa33fb5a1d8b69933a3a3935f0" translate="yes" xml:space="preserve">
          <source>For more information, please refer to the &lt;a href=&quot;multiplatform&quot;&gt;Multiplatform Programming documentation&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;multiplatform&quot;&gt;マルチプラットフォームプログラミングのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="da87ece52c9509e3c187c92dff775cc4483c1807" translate="yes" xml:space="preserve">
          <source>For more specific cases, there are the functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/reduce&quot;&gt;&lt;code&gt;reduce()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/fold&quot;&gt;&lt;code&gt;fold()&lt;/code&gt;&lt;/a&gt; that apply the provided operation to the collection elements sequentially and return the accumulated result. The operation takes two arguments: the previously accumulated value and the collection element.</source>
          <target state="translated">より具体的なケースとして、提供された操作をコレクション要素に順次適用して累積結果を返す関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/reduce&quot;&gt; &lt;code&gt;reduce()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/fold&quot;&gt; &lt;code&gt;fold()&lt;/code&gt; &lt;/a&gt;があります。操作は2つの引数を取ります。以前に累積された値とコレクション要素です。</target>
        </trans-unit>
        <trans-unit id="8fd634783b30e7c10ec073f2f6cf67643a4b61ca" translate="yes" xml:space="preserve">
          <source>For multiplatform projects, &lt;code&gt;@JsExport&lt;/code&gt; is available in common code as well. It only has an effect when compiling for the JavaScript target, and allows you to also export Kotlin declarations that are not platform specific.</source>
          <target state="translated">For multiplatform projects, &lt;code&gt;@JsExport&lt;/code&gt; is available in common code as well. It only has an effect when compiling for the JavaScript target, and allows you to also export Kotlin declarations that are not platform specific.</target>
        </trans-unit>
        <trans-unit id="ab0c4227fc15976eb92034e00419c20be38f5f2a" translate="yes" xml:space="preserve">
          <source>For multiple interfaces, the superclass constructor call should be located first and then each interface should be located in a different line:</source>
          <target state="translated">複数のインタフェースについては、スーパークラスのコンストラクタの呼び出しを最初に配置し、その後、各インタフェースを別の行に配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="bb77545005b94c54066e9d9c8881eb5ff714309f" translate="yes" xml:space="preserve">
          <source>For mutable collections, there are also &lt;em&gt;write operations&lt;/em&gt; that change the collection state. Such operations include adding, removing, and updating elements. Write operations are listed in the &lt;a href=&quot;collection-write&quot;&gt;Write operations&lt;/a&gt; and corresponding sections of &lt;a href=&quot;list-operations#list-write-operations&quot;&gt;List specific operations&lt;/a&gt; and &lt;a href=&quot;map-operations#map-write-operations&quot;&gt;Map specific operations&lt;/a&gt;.</source>
          <target state="translated">変更可能なコレクションの場合、コレクションの状態を変更する&lt;em&gt;書き込み操作&lt;/em&gt;もあります。このような操作には、要素の追加、削除、更新が含まれます。書き込み操作は、&lt;a href=&quot;collection-write&quot;&gt;書き込み操作&lt;/a&gt;と、&lt;a href=&quot;list-operations#list-write-operations&quot;&gt;特定の操作&lt;/a&gt;のリストおよび&lt;a href=&quot;map-operations#map-write-operations&quot;&gt;特定の操作のマップの&lt;/a&gt;対応するセクションにリストされています。</target>
        </trans-unit>
        <trans-unit id="2264476b9fddb2a93fca3dc48b27fc02f976f3a9" translate="yes" xml:space="preserve">
          <source>For other arguments that have an array type, you need to use the array literal syntax (since Kotlin 1.2) or &lt;code&gt;arrayOf(...)&lt;/code&gt;:</source>
          <target state="translated">配列型を持つ他の引数については、配列リテラル構文（Kotlin 1.2以降）または &lt;code&gt;arrayOf(...)&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="db60979da7e995256bb86e6d0277cb6571c18a2c" translate="yes" xml:space="preserve">
          <source>For pattern syntax reference see &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt;.</source>
          <target state="translated">パターン構文リファレンスについては、&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;パターンを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c6f6d754aa9e873410fd58f825ac72cd1786f800" translate="yes" xml:space="preserve">
          <source>For pattern syntax reference see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#Special_characters_meaning_in_regular_expressions&quot;&gt;MDN RegExp&lt;/a&gt; and &lt;a href=&quot;https://www.w3schools.com/jsref/jsref_obj_regexp.asp&quot;&gt;http://www.w3schools.com/jsref/jsref_obj_regexp.asp&lt;/a&gt;.</source>
          <target state="translated">パターン構文のリファレンスについては、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#Special_characters_meaning_in_regular_expressions&quot;&gt;MDN RegExp&lt;/a&gt;および&lt;a href=&quot;https://www.w3schools.com/jsref/jsref_obj_regexp.asp&quot;&gt;http://www.w3schools.com/jsref/jsref_obj_regexp.aspを参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0eaf01be18c0882488e465a91d26ab2e3e6ce42" translate="yes" xml:space="preserve">
          <source>For pattern syntax reference see &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt;.</source>
          <target state="translated">For pattern syntax reference see &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ce3c36f8dd721e91073e813fbaba0f4b4aa22ac4" translate="yes" xml:space="preserve">
          <source>For platform-specific source sets, the corresponding platform-specific variant of the library is used, while a common standard library is added to the rest. The Kotlin Gradle plugin will select the appropriate JVM standard library depending on the &lt;code&gt;kotlinOptions.jvmTarget&lt;/code&gt;&lt;a href=&quot;#compiler-options&quot;&gt;compiler option&lt;/a&gt; of your Gradle build script.</source>
          <target state="translated">For platform-specific source sets, the corresponding platform-specific variant of the library is used, while a common standard library is added to the rest. The Kotlin Gradle plugin will select the appropriate JVM standard library depending on the &lt;code&gt;kotlinOptions.jvmTarget&lt;/code&gt; &lt;a href=&quot;#compiler-options&quot;&gt;compiler option&lt;/a&gt; of your Gradle build script.</target>
        </trans-unit>
        <trans-unit id="82d4a54b61c92df737ecca3a9a2524b44eaf0db8" translate="yes" xml:space="preserve">
          <source>For properties with an initializer, if the initializer is long, add a line break after the equals sign and indent the initializer by four spaces:</source>
          <target state="translated">初期化子を持つプロパティの場合、初期化子が長い場合は、等号の後に改行を追加し、初期化子を4つのスペースでインデントします。</target>
        </trans-unit>
        <trans-unit id="9cdedbb82fb399140c8019e32038b4c4f46e6185" translate="yes" xml:space="preserve">
          <source>For properties with the getter defined as an expression body, the property type can now be omitted:</source>
          <target state="translated">ゲッターが式ボディとして定義されているプロパティでは、プロパティの型を省略できるようになりました。</target>
        </trans-unit>
        <trans-unit id="1513b20a53870cfed16fd2ad458f8813cde7ede7" translate="yes" xml:space="preserve">
          <source>For release build it embeds bitcode as data.</source>
          <target state="translated">リリースビルドではビットコードをデータとして埋め込んでいます。</target>
        </trans-unit>
        <trans-unit id="6714a4c30aef88bcbb0d4874a73165632b296c1c" translate="yes" xml:space="preserve">
          <source>For removing multiple elements at once, there are the following functions :</source>
          <target state="translated">複数の要素を一度に削除するには、以下の機能があります。</target>
        </trans-unit>
        <trans-unit id="20c6c845cf3cf8582150c5ac201bc9cf26d68f44" translate="yes" xml:space="preserve">
          <source>For removing the first and the last element, there are handy shortcuts &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-first&quot;&gt;&lt;code&gt;removeFirst()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-last&quot;&gt;&lt;code&gt;removeLast()&lt;/code&gt;&lt;/a&gt;. Note that on empty lists, they throw an exception. To receive &lt;code&gt;null&lt;/code&gt; instead, use &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-first-or-null&quot;&gt;&lt;code&gt;removeFirstOrNull()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-last-or-null&quot;&gt;&lt;code&gt;removeLastOrNull()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">For removing the first and the last element, there are handy shortcuts &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-first&quot;&gt; &lt;code&gt;removeFirst()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-last&quot;&gt; &lt;code&gt;removeLast()&lt;/code&gt; &lt;/a&gt;. Note that on empty lists, they throw an exception. To receive &lt;code&gt;null&lt;/code&gt; instead, use &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-first-or-null&quot;&gt; &lt;code&gt;removeFirstOrNull()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-last-or-null&quot;&gt; &lt;code&gt;removeLastOrNull()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b7f712789e7f5f5055614d3977263a4adb68a2d" translate="yes" xml:space="preserve">
          <source>For retrieving a value from a map, you must provide its key as an argument of the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-map/get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; function. The shorthand &lt;code&gt;[key]&lt;/code&gt; syntax is also supported. If the given key is not found, it returns &lt;code&gt;null&lt;/code&gt;. There is also the function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/get-value&quot;&gt;&lt;code&gt;getValue()&lt;/code&gt;&lt;/a&gt; which has slightly different behavior: it throws an exception if the key is not found in the map. Additionally, you have two more options to handle the key absence:</source>
          <target state="translated">マップから値を取得するには、キーを&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-map/get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;関数の引数として提供する必要があります。略記 &lt;code&gt;[key]&lt;/code&gt; 構文もサポートされています。指定されたキーが見つからない場合は、 &lt;code&gt;null&lt;/code&gt; を返します。わずかに異なる動作を持つ関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/get-value&quot;&gt; &lt;code&gt;getValue()&lt;/code&gt; &lt;/a&gt;もあります。キーがマップで見つからない場合、例外をスローします。さらに、キーの不在を処理するためのオプションがさらに2つあります。</target>
        </trans-unit>
        <trans-unit id="c741843158ffd3467a54ce4487c7800f9e54c35c" translate="yes" xml:space="preserve">
          <source>For retrieving an element at a specific position, there is the function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/element-at&quot;&gt;&lt;code&gt;elementAt()&lt;/code&gt;&lt;/a&gt;. Call it with the integer number as an argument, and you'll receive the collection element at the given position. The first element has the position &lt;code&gt;0&lt;/code&gt;, and the last one is &lt;code&gt;(size - 1)&lt;/code&gt;.</source>
          <target state="translated">特定の位置にある要素を取得するために、関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/element-at&quot;&gt; &lt;code&gt;elementAt()&lt;/code&gt; があり&lt;/a&gt;ます。整数を引数としてそれを呼び出すと、指定された位置にコレクション要素を受け取ります。最初の要素の位置は &lt;code&gt;0&lt;/code&gt; で、最後の要素は &lt;code&gt;(size - 1)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b392cd856b69f2efecba62da2529ccf97edcdc2b" translate="yes" xml:space="preserve">
          <source>For some reason you want to rename declaration, e.g. there's common term in JavaScript for a concept provided by the declaration, which in uncommon in Kotlin.</source>
          <target state="translated">何らかの理由で宣言の名前を変更したい場合、例えば、JavaScriptでは宣言で提供される概念のための共通語がありますが、Kotlinでは一般的ではありません。</target>
        </trans-unit>
        <trans-unit id="8158db5e8b246ddad0b2dfbfdebcbf1b90125c6f" translate="yes" xml:space="preserve">
          <source>For some specific use cases, creating a custom compilation may be required. This can be done within the target's &lt;code&gt;compilations&lt;/code&gt; domain object collection. Note that the dependencies need to be set up manually for all custom compilations, and the usage of a custom compilation's outputs is up to the build author. For example, consider a custom compilation for integration tests of a &lt;code&gt;jvm()&lt;/code&gt; target:</source>
          <target state="translated">特定の使用例では、カスタムコンパイルの作成が必要になる場合があります。これは、ターゲットの &lt;code&gt;compilations&lt;/code&gt; ドメインオブジェクトコレクション内で実行できます。すべてのカスタムコンパイルに対して依存関係を手動で設定する必要があることに注意してください。カスタムコンパイルの出力の使用法はビルド作成者次第です。たとえば、 &lt;code&gt;jvm()&lt;/code&gt; ターゲットの統合テストのカスタムコンパイルを考えてみます。</target>
        </trans-unit>
        <trans-unit id="8f20399dce7cafc92e613f156c508b5fbaf82b80" translate="yes" xml:space="preserve">
          <source>For sorting in custom orders or sorting non-comparable objects, there are the functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted-by&quot;&gt;&lt;code&gt;sortedBy()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted-by-descending&quot;&gt;&lt;code&gt;sortedByDescending()&lt;/code&gt;&lt;/a&gt;. They take a selector function that maps collection elements to &lt;code&gt;Comparable&lt;/code&gt; values and sort the collection in natural order of that values.</source>
          <target state="translated">カスタムオーダーでソートや非同等のオブジェクトをソートするために、機能がある&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted-by&quot;&gt; &lt;code&gt;sortedBy()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted-by-descending&quot;&gt; &lt;code&gt;sortedByDescending()&lt;/code&gt; &lt;/a&gt;。それらは、コレクション要素を &lt;code&gt;Comparable&lt;/code&gt; 値にマップするセレクター関数を取り、その値の自然な順序でコレクションをソートします。</target>
        </trans-unit>
        <trans-unit id="06c12102ea94e6d5c34aa4e1cb45ef7a132aadee" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;@JvmDefault&lt;/code&gt; annotation to take effect, the interface must be compiled with an &lt;code&gt;-Xjvm-default&lt;/code&gt; argument. Depending on the case of adding the annotation, specify one of the argument values:</source>
          <target state="translated">&lt;code&gt;@JvmDefault&lt;/code&gt; の注釈を有効にするには、インターフェイスがしてコンパイルする必要があります &lt;code&gt;-Xjvm-default&lt;/code&gt; 引数。注釈を追加する場合に応じて、引数値の1つを指定します。</target>
        </trans-unit>
        <trans-unit id="da62afa580a98e0eb59438fc6f192b8b9be1b649" translate="yes" xml:space="preserve">
          <source>For the &lt;em&gt;prefix&lt;/em&gt; forms &lt;code&gt;++a&lt;/code&gt; and &lt;code&gt;--a&lt;/code&gt; resolution works the same way, and the effect is:</source>
          <target state="translated">以下のための&lt;em&gt;接頭辞&lt;/em&gt;フォーム &lt;code&gt;++a&lt;/code&gt; と &lt;code&gt;--a&lt;/code&gt; 解像度は同じように動作し、効果は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1f7fafe2033f8e575628eabc01789127498dbf01" translate="yes" xml:space="preserve">
          <source>For the CLI, you can compile using gradle as stated in the README (and if you get errors, you can try to do a &lt;code&gt;./gradlew clean&lt;/code&gt;):</source>
          <target state="translated">CLIの場合、READMEに記載されているように、 &lt;code&gt;./gradlew clean&lt;/code&gt; を使用してコンパイルできます（エラーが発生した場合は、。/ gradlew cleanを実行してみてください）。</target>
        </trans-unit>
        <trans-unit id="6b5978de1c0c3fb2925d795946fd3b784f2b5a41" translate="yes" xml:space="preserve">
          <source>For the assignment operations, e.g. &lt;code&gt;a += b&lt;/code&gt;, the compiler performs the following steps:</source>
          <target state="translated">代入演算（例： &lt;code&gt;a += b&lt;/code&gt; では、コンパイラーは次のステップを実行します。</target>
        </trans-unit>
        <trans-unit id="539d8e13c53ef4abbcf027a9d0068c7cc4e5769d" translate="yes" xml:space="preserve">
          <source>For the details on &lt;code&gt;plus&lt;/code&gt; and &lt;code&gt;minus&lt;/code&gt; operators for maps, see &lt;a href=&quot;map-operations&quot;&gt;Map Specific Operations&lt;/a&gt;. The &lt;a href=&quot;operator-overloading#assignments&quot;&gt;augmented assignment operators&lt;/a&gt;&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt;&lt;code&gt;plusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;+=&lt;/code&gt;) and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus-assign&quot;&gt;&lt;code&gt;minusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;-=&lt;/code&gt;) are also defined for collections. However, for read-only collections, they actually use the &lt;code&gt;plus&lt;/code&gt; or &lt;code&gt;minus&lt;/code&gt; operators and try to assign the result to the same variable. Thus, they are available only on &lt;code&gt;var&lt;/code&gt; read-only collections. For mutable collections, they modify the collection if it's a &lt;code&gt;val&lt;/code&gt;. For more details see &lt;a href=&quot;collection-write&quot;&gt;Collection Write Operations&lt;/a&gt;.</source>
          <target state="translated">詳細については &lt;code&gt;plus&lt;/code&gt; と &lt;code&gt;minus&lt;/code&gt; の演算子のマップのために、参照&lt;a href=&quot;map-operations&quot;&gt;マップ具体的な操作&lt;/a&gt;。&lt;a href=&quot;operator-overloading#assignments&quot;&gt;増強代入演算子&lt;/a&gt;&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt; &lt;code&gt;plusAssign&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;+=&lt;/code&gt; ）と&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus-assign&quot;&gt; &lt;code&gt;minusAssign&lt;/code&gt; は、&lt;/a&gt;（ &lt;code&gt;-=&lt;/code&gt; ）また、コレクションのために定義されています。ただし、読み取り専用のコレクションの場合、実際には &lt;code&gt;plus&lt;/code&gt; または &lt;code&gt;minus&lt;/code&gt; 演算子を使用し、結果を同じ変数に割り当てようとします。したがって、これらは &lt;code&gt;var&lt;/code&gt; 読み取り専用コレクションでのみ使用できます。変更可能なコレクションの場合、 &lt;code&gt;val&lt;/code&gt; であればコレクションを変更します。詳細については、&lt;a href=&quot;collection-write&quot;&gt;コレクションの書き込み操作を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="99ae6cfe21ef096005ae65ac105caaba34a120b7" translate="yes" xml:space="preserve">
          <source>For the list of group-and-fold operations available, see the &lt;a href=&quot;#extension-functions&quot;&gt;extension functions&lt;/a&gt; for &lt;code&gt;Grouping&lt;/code&gt;.</source>
          <target state="translated">使用可能なグループ化および折りたたみ操作のリストについては、 &lt;code&gt;Grouping&lt;/code&gt; &lt;a href=&quot;#extension-functions&quot;&gt;拡張関数&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3d997519fcd24d20831bd6eeaa31e67ced9c303f" translate="yes" xml:space="preserve">
          <source>For the operations in this table, the compiler just resolves the expression in the &lt;em&gt;Translated to&lt;/em&gt; column.</source>
          <target state="translated">この表の操作の場合、コンパイラーは「&lt;em&gt;変換先」&lt;/em&gt;列の式を解決するだけです。</target>
        </trans-unit>
        <trans-unit id="fbe0069c2060f259a02cd894aa164e3831bd4221" translate="yes" xml:space="preserve">
          <source>For the opposite conversion, to turn a pointer into a by-value variable, we call the &lt;code&gt;readValue()&lt;/code&gt; extension function:</source>
          <target state="translated">逆の変換では、ポインターを値 &lt;code&gt;readValue()&lt;/code&gt; 変数に変換するために、readValue（）拡張関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="8f7d074241fa549a9ea4f9b661cdc64b28a3c053" translate="yes" xml:space="preserve">
          <source>For these purposes &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-supervisor-job.html&quot;&gt;SupervisorJob&lt;/a&gt; can be used. It is similar to a regular &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job.html&quot;&gt;Job&lt;/a&gt; with the only exception that cancellation is propagated only downwards. It is easy to demonstrate with an example:</source>
          <target state="translated">これらの目的のために、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-supervisor-job.html&quot;&gt;SupervisorJob&lt;/a&gt;を使用できます。これは通常の&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job.html&quot;&gt;ジョブに&lt;/a&gt;似ていますが、キャンセルが下方にのみ伝搬されるという点が異なります。例を使用して簡単に説明できます。</target>
        </trans-unit>
        <trans-unit id="df1761b46b93e575c969c1e93c41c9c609214097" translate="yes" xml:space="preserve">
          <source>For this reason, you should probably not use a function with side effects as a default value initializer, as the side effects will happen on every call. If you just reference a variable instead of calling a function, the same variable will be read every time the function is invoked: &lt;code&gt;numbers: MutableList&amp;lt;Int&amp;gt; = myMutableList&lt;/code&gt;. If the variable is immutable, each call will see the same value (but if the value itself is mutable, it might change between calls), and if the variable is mutable, each call will see the current value of the variable. Needless to say, these situations easily lead to confusion, so a default value initializer should be either a constant or a function call that always produces a new object with the same value.</source>
          <target state="translated">このため、副作用のある関数はデフォルト値の初期化子として使用しないでください。副作用はすべての呼び出しで発生するためです。関数を呼び出すのではなく変数を参照するだけの場合、関数が呼び出されるたびに同じ変数が読み込まれ &lt;code&gt;numbers: MutableList&amp;lt;Int&amp;gt; = myMutableList&lt;/code&gt; 。変数が不変の場合、各呼び出しは同じ値を参照します（ただし、値自体が変更可能な場合、呼び出し間で変更される可能性があります）。変数が変更可能な場合、各呼び出しは変数の現在の値を参照します。言うまでもなく、これらの状況は簡単に混乱を招くため、デフォルト値のイニシャライザは、定数または常に同じ値の新しいオブジェクトを生成する関数呼び出しのいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="d3b653bd00b4026d91ae27cf19e170d9e5fafb1f" translate="yes" xml:space="preserve">
          <source>For this tutorial, we want to minimize Android project changes, so we add an ordinary dependency from that project to the &lt;code&gt;SharedCode&lt;/code&gt; project. It is also possible to use the &lt;code&gt;kotlin-multiplatform&lt;/code&gt; plugin directly in an Android Gradle project, instead of the &lt;code&gt;kotlin-android&lt;/code&gt; plugin. For more information, please refer to the &lt;a href=&quot;../../reference/multiplatform&quot;&gt;Multiplatform Projects&lt;/a&gt; documentation.</source>
          <target state="translated">このチュートリアルでは、Androidプロジェクトの変更を最小限に抑えるため、そのプロジェクトから &lt;code&gt;SharedCode&lt;/code&gt; プロジェクトに通常の依存関係を追加します。 &lt;code&gt;kotlin-android&lt;/code&gt; プラグインの代わりに、直接Android Gradleプロジェクトで &lt;code&gt;kotlin-multiplatform&lt;/code&gt; プラグインを使用することもできます。詳細については、&lt;a href=&quot;../../reference/multiplatform&quot;&gt;マルチプラットフォームプロジェクトの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="2e99967fe57ee7a76a36c8deadb4fec1ccb4886b" translate="yes" xml:space="preserve">
          <source>For traversing collection elements, the Kotlin standard library supports the commonly used mechanism of &lt;em&gt;iterators&lt;/em&gt; &amp;ndash; objects that provide access to the elements sequentially without exposing the underlying structure of the collection. Iterators are useful when you need to process all the elements of a collection one-by-one, for example, print values or make similar updates to them.</source>
          <target state="translated">コレクション要素をトラバースするために、Kotlin標準ライブラリは、一般的に使用される&lt;em&gt;イテレータの&lt;/em&gt;メカニズム、つまりコレクションの基になる構造を公開せずに要素へのアクセスを順次提供するオブジェクトをサポートしてい&lt;em&gt;ます&lt;/em&gt;。イテレータは、コレクションのすべての要素を1つずつ処理する必要がある場合に便利です。たとえば、値を出力したり、要素に同様の更新を行ったりします。</target>
        </trans-unit>
        <trans-unit id="2f68c0b5ebbd06a7445ef5ecca5d9e9d637d9dcb" translate="yes" xml:space="preserve">
          <source>For types that have both representations, the one with a &quot;lvalue&quot; has a mutable &lt;code&gt;.value&lt;/code&gt; property for accessing the value.</source>
          <target state="translated">両方の表現を持つタイプの場合、「lvalue」を持つタイプには、値にアクセスするための変更可能な &lt;code&gt;.value&lt;/code&gt; プロパティがあります。</target>
        </trans-unit>
        <trans-unit id="c1e4f115384861adef16b8b2baffe917e562f4a0" translate="yes" xml:space="preserve">
          <source>For unit testing support, you also need to add a dependency on the &lt;code&gt;kotlin-test-js&lt;/code&gt; artifact.</source>
          <target state="translated">単体テストをサポートするには、 &lt;code&gt;kotlin-test-js&lt;/code&gt; アーティファクトへの依存関係も追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="a7f1af20e4840cf70de949b8090232e61a581d9c" translate="yes" xml:space="preserve">
          <source>For variables initialized with fractional numbers, the compiler infers the &lt;code&gt;Double&lt;/code&gt; type. To explicitly specify the &lt;code&gt;Float&lt;/code&gt; type for a value, add the suffix &lt;code&gt;f&lt;/code&gt; or &lt;code&gt;F&lt;/code&gt;. If such a value contains more than 6-7 decimal digits, it will be rounded.</source>
          <target state="translated">For variables initialized with fractional numbers, the compiler infers the &lt;code&gt;Double&lt;/code&gt; type. To explicitly specify the &lt;code&gt;Float&lt;/code&gt; type for a value, add the suffix &lt;code&gt;f&lt;/code&gt; or &lt;code&gt;F&lt;/code&gt; . If such a value contains more than 6-7 decimal digits, it will be rounded.</target>
        </trans-unit>
        <trans-unit id="529daec5f1bf826a76cdf0d941f5076d7ea34e5f" translate="yes" xml:space="preserve">
          <source>For very simple read-only properties, consider one-line formatting:</source>
          <target state="translated">非常にシンプルな読み取り専用のプロパティの場合は、1行フォーマットを検討してください。</target>
        </trans-unit>
        <trans-unit id="3dd63779dfda05c2ef28c4628ee7e9d8efbf8130" translate="yes" xml:space="preserve">
          <source>Forces the compiler to use specified symbol name for the target &lt;code&gt;external&lt;/code&gt; function.</source>
          <target state="translated">ターゲット &lt;code&gt;external&lt;/code&gt; 関数に指定されたシンボル名を使用するようコンパイラーに強制します。</target>
        </trans-unit>
        <trans-unit id="e69b34f01c97f652d8ef9e0c92a45af9259da382" translate="yes" xml:space="preserve">
          <source>ForeignFetchEventInit</source>
          <target state="translated">ForeignFetchEventInit</target>
        </trans-unit>
        <trans-unit id="75d9182c3bec31e50516efc67fc31601b8525430" translate="yes" xml:space="preserve">
          <source>ForeignFetchOptions</source>
          <target state="translated">ForeignFetchOptions</target>
        </trans-unit>
        <trans-unit id="12a487ec9be62c993fa0b4647bb4e76b66ee7f98" translate="yes" xml:space="preserve">
          <source>ForeignFetchResponse</source>
          <target state="translated">ForeignFetchResponse</target>
        </trans-unit>
        <trans-unit id="b92b85002a3fb316a5c6e08beb73b6cb9ed9d64d" translate="yes" xml:space="preserve">
          <source>FormData</source>
          <target state="translated">FormData</target>
        </trans-unit>
        <trans-unit id="841f832857c780b47f478b4f21d34d8995af64b8" translate="yes" xml:space="preserve">
          <source>Formatting</source>
          <target state="translated">Formatting</target>
        </trans-unit>
        <trans-unit id="ce0f3fcfa3eec092a3013ce4a7b42696b94dcbc1" translate="yes" xml:space="preserve">
          <source>Formatting control flow statements</source>
          <target state="translated">制御フロー文の書式設定</target>
        </trans-unit>
        <trans-unit id="0bdf2028ee128cef1644ccdc1afa0bcfab5ad779" translate="yes" xml:space="preserve">
          <source>Fortunately, there is a meta-runner already available that takes care of most of the manual work. If not familiar with the concept of TeamCity meta-runners, check the &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Working+with+Meta-Runner&quot;&gt;documentation&lt;/a&gt;. They are very easy and powerful way to introduce custom Runners without the need to write plugins</source>
          <target state="translated">幸いにも、手作業のほとんどを処理するメタランナーがすでに利用可能です。 TeamCityメタランナーの概念に慣れていない場合は、&lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Working+with+Meta-Runner&quot;&gt;ドキュメントを&lt;/a&gt;確認してください。プラグインを作成する必要なく、カスタムランナーを導入するための非常に簡単で強力な方法です。</target>
        </trans-unit>
        <trans-unit id="cf1d2c9702ec3c2c9c19d4853cd487b92618fb0c" translate="yes" xml:space="preserve">
          <source>Forum</source>
          <target state="translated">Forum</target>
        </trans-unit>
        <trans-unit id="3c108296aa2c6b7ffe348740261e9186846c294a" translate="yes" xml:space="preserve">
          <source>FrameType</source>
          <target state="translated">FrameType</target>
        </trans-unit>
        <trans-unit id="3fff0cc68f4be81edcb85632753b99c277aa4fa3" translate="yes" xml:space="preserve">
          <source>Frameworks for Server-side Development with Kotlin</source>
          <target state="translated">Kotlinを使ったサーバーサイド開発のためのフレームワーク</target>
        </trans-unit>
        <trans-unit id="e358664f6beffa8d97e25ecdeedb921b3ec65678" translate="yes" xml:space="preserve">
          <source>Freezable atomic reference is similar to the regular atomic reference, but until frozen behaves like regular box for a reference. After freezing it behaves like an atomic reference, and can only hold a reference to a frozen object.</source>
          <target state="translated">凍結可能な原子参照は通常の原子参照に似ていますが、凍結されるまでは通常の参照用の箱のように振る舞います。凍結後は原子参照のように振る舞い、凍結されたオブジェクトへの参照のみを保持することができます。</target>
        </trans-unit>
        <trans-unit id="c02f140d4e1c43d1f955dd72be8623c93c3777d5" translate="yes" xml:space="preserve">
          <source>FreezableAtomicReference</source>
          <target state="translated">FreezableAtomicReference</target>
        </trans-unit>
        <trans-unit id="80447dec7b683323831bc3898e849011567bb9dd" translate="yes" xml:space="preserve">
          <source>Freezes object subgraph reachable from this object. Frozen objects can be freely shared between threads/workers.</source>
          <target state="translated">このオブジェクトから到達可能なオブジェクトのサブグラフを凍結します。凍結されたオブジェクトは、スレッド/ワーカー間で自由に共有することができます。</target>
        </trans-unit>
        <trans-unit id="b5732305dc8d6bdd9feedc8e8feab21d51a4ad6a" translate="yes" xml:space="preserve">
          <source>Freezing is a runtime operation making a given object subgraph immutable, by modifying the object header so that future mutation attempts throw an &lt;code&gt;InvalidMutabilityException&lt;/code&gt;. It is deep, so if an object has a pointer to other objects - transitive closure of such objects will be frozen. Freezing is a one way transformation, frozen objects cannot be unfrozen. Frozen objects have a nice property that due to their immutability, they can be freely shared between multiple workers/threads without breaking the &quot;mutable XOR shared&quot; invariant.</source>
          <target state="translated">フリーズは、将来のミュー &lt;code&gt;InvalidMutabilityException&lt;/code&gt; 試行がInvalidMutabilityExceptionをスローするようにオブジェクトヘッダーを変更することにより、特定のオブジェクトサブグラフを不変にするランタイム操作です。それは深いので、オブジェクトが他のオブジェクトへのポインタを持っている場合-そのようなオブジェクトの推移的な閉鎖は凍結されます。フリーズは一方向の変換であり、フリーズされたオブジェクトはフリーズ解除できません。凍結されたオブジェクトには不変の性質があるため、「可変XOR共有」不変式を壊すことなく、複数のワーカー/スレッド間で自由に共有できます。</target>
        </trans-unit>
        <trans-unit id="080e2c352b2e6ce4d98cbfd75308fccd2d13b6e7" translate="yes" xml:space="preserve">
          <source>FreezingException</source>
          <target state="translated">FreezingException</target>
        </trans-unit>
        <trans-unit id="3270d126408ac9c895b73a16eb41ad3bd68810c6" translate="yes" xml:space="preserve">
          <source>Frequently - especially if you want a complex return type from a function or a complex key for a map - you'll want a quick and dirty class which only contains some properties, but is still comparable for equality and is usable as a map key. If you create a &lt;em&gt;data class&lt;/em&gt;, you'll get automatic implementations of the following functions: &lt;code&gt;toString()&lt;/code&gt; (which will produce a string containing all the property names and values), &lt;code&gt;equals()&lt;/code&gt; (which will do a per-property &lt;code&gt;equals()&lt;/code&gt;), &lt;code&gt;hashCode()&lt;/code&gt; (which will hash the individual properties and combine the hashes), and the functions that are required to enable Kotlin to destructure an instance of the class into a declaration (&lt;code&gt;component1()&lt;/code&gt;, &lt;code&gt;component2()&lt;/code&gt;, etc.):</source>
          <target state="translated">頻繁に-特に、関数からの複雑な戻り値の型またはマップの複雑なキーが必要な場合-一部のプロパティのみを含み、同等性については比較可能であり、マップキーとして使用可能な迅速でダーティなクラスが必要になります。&lt;em&gt;データクラス&lt;/em&gt;を作成すると、次の関数の自動実装が得られます： &lt;code&gt;toString()&lt;/code&gt; （すべてのプロパティ名と値を含む文字列を生成します）、 &lt;code&gt;equals()&lt;/code&gt; （プロパティごとの &lt;code&gt;equals()&lt;/code&gt; を実行します））、 &lt;code&gt;hashCode()&lt;/code&gt; （個々のプロパティをハッシュしてハッシュを組み合わせる）、およびKotlinがクラスのインスタンスを宣言に &lt;code&gt;component1()&lt;/code&gt; できるようにするために必要な関数（component1（）、 &lt;code&gt;component2()&lt;/code&gt; など）：</target>
        </trans-unit>
        <trans-unit id="eeaebac0ea185354ca4da1eed41ca0237a76e360" translate="yes" xml:space="preserve">
          <source>Frequently, global variables are a source of unintended concurrency issues, so &lt;em&gt;Kotlin/Native&lt;/em&gt; implements the following mechanisms to prevent the unintended sharing of state via global objects:</source>
          <target state="translated">多くの場合、グローバル変数は予期しない同時実行の問題の原因となるため、&lt;em&gt;Kotlin / Native&lt;/em&gt;は次のメカニズムを実装して、グローバルオブジェクトを介した意図しない状態の共有を防止します。</target>
        </trans-unit>
        <trans-unit id="6f534b1669d028d05de6c4f01c61b4cbefdfc68b" translate="yes" xml:space="preserve">
          <source>Frequently, you'll find that during the lifetime of your variable, it only ever needs to refer to one object. Then, you can declare it with &lt;code&gt;val&lt;/code&gt; (for &quot;value&quot;) instead:</source>
          <target state="translated">多くの場合、変数の存続期間中は、1つのオブジェクトを参照するだけで済みます。次に、代わりに &lt;code&gt;val&lt;/code&gt; （「値」用）を使用して宣言できます。</target>
        </trans-unit>
        <trans-unit id="7f1dacd0361126bb8241eaf5f54839027d1b83de" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;Iterable&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Iterable&lt;/code&gt; から</target>
        </trans-unit>
        <trans-unit id="e903d5d97686e54561b32d3001611ffcc2e0a685" translate="yes" xml:space="preserve">
          <source>From Gradle</source>
          <target state="translated">グラドルから</target>
        </trans-unit>
        <trans-unit id="2c1510bd121f7b4adb08915128573cbc22353dad" translate="yes" xml:space="preserve">
          <source>From IntelliJ IDEA</source>
          <target state="translated">IntelliJ IDEAより</target>
        </trans-unit>
        <trans-unit id="46a2318d1812b0419db3c6cf8e568ded984d2f97" translate="yes" xml:space="preserve">
          <source>From Kotlin they will be accessible by the same name &lt;code&gt;filterValid&lt;/code&gt;, but from Java it will be &lt;code&gt;filterValid&lt;/code&gt; and &lt;code&gt;filterValidInt&lt;/code&gt;.</source>
          <target state="translated">Kotlinからは同じ名前 &lt;code&gt;filterValid&lt;/code&gt; でアクセスできますが、Javaからは &lt;code&gt;filterValid&lt;/code&gt; および &lt;code&gt;filterValidInt&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="4b86aa5caa340495b300dfdb7661e78f45617313" translate="yes" xml:space="preserve">
          <source>From Maven</source>
          <target state="translated">メイヴンから</target>
        </trans-unit>
        <trans-unit id="63be8821b7dae58ac3edb96332553cab8bfda471" translate="yes" xml:space="preserve">
          <source>From chunks</source>
          <target state="translated">チャンクから</target>
        </trans-unit>
        <trans-unit id="7ab268169d69c739813b410b45da09fd14cd394a" translate="yes" xml:space="preserve">
          <source>From elements</source>
          <target state="translated">要素から</target>
        </trans-unit>
        <trans-unit id="99d7bcb17fff71b248e97c870c311e513e0173a5" translate="yes" xml:space="preserve">
          <source>From function</source>
          <target state="translated">関数から</target>
        </trans-unit>
        <trans-unit id="a7b57207ffe105a985227c26ccdced3c28406c1e" translate="yes" xml:space="preserve">
          <source>Full definition of the &lt;code&gt;com.example.html&lt;/code&gt; package</source>
          <target state="translated">&lt;code&gt;com.example.html&lt;/code&gt; パッケージの完全な定義</target>
        </trans-unit>
        <trans-unit id="aad1c0dafbf03119fdcdb3c699f48901b1590080" translate="yes" xml:space="preserve">
          <source>Full kotlinx.coroutines API reference</source>
          <target state="translated">完全な kotlinx.coroutines API リファレンス</target>
        </trans-unit>
        <trans-unit id="3bac36b2b7a23e52c764a12f2d4d0fc0a7a0e4d8" translate="yes" xml:space="preserve">
          <source>Fully qualified name of the package this class is located in, from Kotlin's point of view, or empty string if this name does not differ from the JVM's package FQ name. These names can be different in case the JvmPackageName annotation is used. Note that this information is also stored in the corresponding module's &lt;code&gt;.kotlin_module&lt;/code&gt; file.</source>
          <target state="translated">このクラスが配置されているパッケージの完全修飾名。Kotlinから見ると、この名前がJVMのパッケージFQ名と異なる場合は空の文字列。JvmPackageNameアノテーションが使用される場合、これらの名前は異なる場合があります。この情報は、対応するモジュールの &lt;code&gt;.kotlin_module&lt;/code&gt; ファイルにも保存されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="1dcdfd2ec9069a64630d38318805ac58f78ebc9a" translate="yes" xml:space="preserve">
          <source>Function (constructors are not included)</source>
          <target state="translated">関数(コンストラクタは含まれません</target>
        </trans-unit>
        <trans-unit id="035787f0ca20d22e08021c39f72834469799520f" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;max&lt;/code&gt; is a higher-order function, it takes a function value as the second argument. This second argument is an expression that is itself a function, i.e. a function literal, which is equivalent to the following named function:</source>
          <target state="translated">関数 &lt;code&gt;max&lt;/code&gt; は高次関数であり、2番目の引数として関数値を取ります。この2番目の引数は、それ自体が関数である式、つまり、次の名前付き関数と同等の関数リテラルです。</target>
        </trans-unit>
        <trans-unit id="751924331feba79685bd7ca453e7d70d1ee39798" translate="yes" xml:space="preserve">
          <source>Function Declarations</source>
          <target state="translated">関数宣言</target>
        </trans-unit>
        <trans-unit id="da9189d87675a5d44e6310e344886c7fd0a3671f" translate="yes" xml:space="preserve">
          <source>Function References</source>
          <target state="translated">関数リファレンス</target>
        </trans-unit>
        <trans-unit id="5c8224fb885f624660db62da8b1055688dda11c3" translate="yes" xml:space="preserve">
          <source>Function Scope</source>
          <target state="translated">機能範囲</target>
        </trans-unit>
        <trans-unit id="2267d63b26917f9a3715a86c5fd0aa733935b6e4" translate="yes" xml:space="preserve">
          <source>Function Usage</source>
          <target state="translated">関数の利用法</target>
        </trans-unit>
        <trans-unit id="cf18ccbe7924a806aa4ee8d2ed664f4d998e37b0" translate="yes" xml:space="preserve">
          <source>Function corresponding to JavaScript's &lt;code&gt;typeof&lt;/code&gt; operator</source>
          <target state="translated">JavaScriptの &lt;code&gt;typeof&lt;/code&gt; 演算子に対応する関数</target>
        </trans-unit>
        <trans-unit id="301ffb948f7d729015635b11db6553b40624b34f" translate="yes" xml:space="preserve">
          <source>Function declarations</source>
          <target state="translated">関数宣言</target>
        </trans-unit>
        <trans-unit id="b95c3bae5d82738e59f8b16d63717ed67c934752" translate="yes" xml:space="preserve">
          <source>Function formatting</source>
          <target state="translated">関数の書式設定</target>
        </trans-unit>
        <trans-unit id="ce6e413c01f8f88615ada6c7f6d349f7800231ea" translate="yes" xml:space="preserve">
          <source>Function having two &lt;code&gt;Int&lt;/code&gt; parameters with &lt;code&gt;Int&lt;/code&gt; return type:</source>
          <target state="translated">&lt;code&gt;Int&lt;/code&gt; 戻り型の2つの &lt;code&gt;Int&lt;/code&gt; パラメータを持つ関数：</target>
        </trans-unit>
        <trans-unit id="ca665affb7c73b78ff26c871ee3d6b8618de47f7" translate="yes" xml:space="preserve">
          <source>Function literals with receiver</source>
          <target state="translated">レシーバーを使った関数リテラル</target>
        </trans-unit>
        <trans-unit id="d74aadb0539e8ce0c16c1f970d53120878cd40d9" translate="yes" xml:space="preserve">
          <source>Function literals: lambda expressions and anonymous functions</source>
          <target state="translated">関数リテラル:ラムダ式と匿名関数</target>
        </trans-unit>
        <trans-unit id="dbfe0bee331f156c7ece93de6926384c2e325f16" translate="yes" xml:space="preserve">
          <source>Function names</source>
          <target state="translated">関数名</target>
        </trans-unit>
        <trans-unit id="f8d62ea92d3791c590b8073632a146bf910c0f88" translate="yes" xml:space="preserve">
          <source>Function names should use &lt;code&gt;lowerCamelCase&lt;/code&gt; instead of &lt;code&gt;snake_case&lt;/code&gt;.</source>
          <target state="translated">関数名は使うべき &lt;code&gt;lowerCamelCase&lt;/code&gt; の代わりに &lt;code&gt;snake_case&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2357eb920295d3ee4fd2746f790b824f9b769058" translate="yes" xml:space="preserve">
          <source>Function parameters are defined using Pascal notation, i.e. &lt;em&gt;name&lt;/em&gt;: &lt;em&gt;type&lt;/em&gt;. Parameters are separated using commas. Each parameter must be explicitly typed:</source>
          <target state="translated">関数パラメーターは、Pascal表記、つまり&lt;em&gt;name&lt;/em&gt;：&lt;em&gt;type&lt;/em&gt;を使用して定義されます。パラメータはカンマで区切られます。各パラメーターは明示的に入力する必要があります。</target>
        </trans-unit>
        <trans-unit id="5edd24c452ecd10a54093010f4990be666666f06" translate="yes" xml:space="preserve">
          <source>Function parameters can be named when calling functions. This is very convenient when a function has a high number of parameters or default ones.</source>
          <target state="translated">関数を呼び出す際に、関数のパラメータに名前を付けることができます。これは、関数のパラメータの数が多い場合やデフォルトのパラメータを持つ場合に非常に便利です。</target>
        </trans-unit>
        <trans-unit id="85a49cc1f92d081670928800342e92a2a2ac7f85" translate="yes" xml:space="preserve">
          <source>Function parameters can have default values, which are used when a corresponding argument is omitted. This allows for a reduced number of overloads compared to other languages:</source>
          <target state="translated">関数のパラメータはデフォルト値を持つことができ、対応する引数が省略された場合に使用されます。これにより、他の言語に比べてオーバーロードの数を減らすことができます。</target>
        </trans-unit>
        <trans-unit id="e96c3516563981053065b8dc40dcff2e71feb85b" translate="yes" xml:space="preserve">
          <source>Function parameters can have default values, which are used when you skip the corresponding argument. This reduces a number of overloads compared to other languages:</source>
          <target state="translated">関数のパラメータはデフォルト値を持つことができ、それは対応する引数をスキップするときに使用されます。これにより、他の言語に比べてオーバーロードの数を減らすことができます。</target>
        </trans-unit>
        <trans-unit id="807c42249b0922157615f7450853ad54609a2512" translate="yes" xml:space="preserve">
          <source>Function pointers from C and how they look in Kotlin/Native</source>
          <target state="translated">C からの関数ポインタと Kotlin/Native での見え方</target>
        </trans-unit>
        <trans-unit id="0f181fa3f949ca58e990503187b232168a8466d0" translate="yes" xml:space="preserve">
          <source>Function references</source>
          <target state="translated">関数参照</target>
        </trans-unit>
        <trans-unit id="e9bdf065ac1d9b004b177e363e9f91fbf2b96350" translate="yes" xml:space="preserve">
          <source>Function references belong to one of the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-function/index&quot;&gt;&lt;code&gt;KFunction&amp;lt;out R&amp;gt;&lt;/code&gt;&lt;/a&gt; subtypes, depending on the parameter count, e.g. &lt;code&gt;KFunction3&amp;lt;T1, T2, T3, R&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">関数参照は、パラメータ数に応じ&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-function/index&quot;&gt; &lt;code&gt;KFunction&amp;lt;out R&amp;gt;&lt;/code&gt; &lt;/a&gt;、KFunction &amp;lt;out R&amp;gt;サブタイプの1つに属します（例： &lt;code&gt;KFunction3&amp;lt;T1, T2, T3, R&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a31212b4d92d1dae20ef3440ad0c5dd83c9e9ba8" translate="yes" xml:space="preserve">
          <source>Function returning no meaningful value:</source>
          <target state="translated">意味のない値を返す関数。</target>
        </trans-unit>
        <trans-unit id="14644346bcc70a878c3eb265226005a7304bec16" translate="yes" xml:space="preserve">
          <source>Function scope</source>
          <target state="translated">機能範囲</target>
        </trans-unit>
        <trans-unit id="5f274445178a53837ad18098a8c7a5d6fc400cb9" translate="yes" xml:space="preserve">
          <source>Function selection</source>
          <target state="translated">機能選択</target>
        </trans-unit>
        <trans-unit id="bc031b64c0889a188091b33b3ffbe9e95dc3e702" translate="yes" xml:space="preserve">
          <source>Function type</source>
          <target state="translated">関数型</target>
        </trans-unit>
        <trans-unit id="4cf28af51590dee95695351a40b2cc8d5c35812e" translate="yes" xml:space="preserve">
          <source>Function types</source>
          <target state="translated">機能の種類</target>
        </trans-unit>
        <trans-unit id="856adb0347c3f4becd32b9cb22d963c4fe41d845" translate="yes" xml:space="preserve">
          <source>Function types can be combined using parentheses: &lt;code&gt;(Int) -&amp;gt; ((Int) -&amp;gt; Unit)&lt;/code&gt;</source>
          <target state="translated">括弧を使用して関数タイプを組み合わせることができます： &lt;code&gt;(Int) -&amp;gt; ((Int) -&amp;gt; Unit)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c9bebe6feed7f92b3e31e52ccb139bfa1b01661" translate="yes" xml:space="preserve">
          <source>Function types can optionally have an additional &lt;em&gt;receiver&lt;/em&gt; type, which is specified before a dot in the notation: the type &lt;code&gt;A.(B) -&amp;gt; C&lt;/code&gt; represents functions that can be called on a receiver object of &lt;code&gt;A&lt;/code&gt; with a parameter of &lt;code&gt;B&lt;/code&gt; and return a value of &lt;code&gt;C&lt;/code&gt;. &lt;a href=&quot;#function-literals-with-receiver&quot;&gt;Function literals with receiver&lt;/a&gt; are often used along with these types.</source>
          <target state="translated">関数タイプはオプションで、表記のドットの前に指定される追加の&lt;em&gt;レシーバー&lt;/em&gt;タイプを持つことができます &lt;code&gt;A.(B) -&amp;gt; C&lt;/code&gt; タイプA.（B）-&amp;gt; Cは、パラメーター &lt;code&gt;B&lt;/code&gt; で &lt;code&gt;A&lt;/code&gt; のレシーバーオブジェクトで呼び出すことができる関数を表し、 &lt;code&gt;C&lt;/code&gt; の値。&lt;a href=&quot;#function-literals-with-receiver&quot;&gt;レシーバー付きの関数リテラルは&lt;/a&gt;、これらのタイプとともによく使用されます。</target>
        </trans-unit>
        <trans-unit id="b10d6ef38e7c4bcdf1e94d9d7f107eefec065bab" translate="yes" xml:space="preserve">
          <source>Function usage</source>
          <target state="translated">機能の使い方</target>
        </trans-unit>
        <trans-unit id="2bd25700768632f324f5f85576fee01ec4787a93" translate="yes" xml:space="preserve">
          <source>Function value parameters</source>
          <target state="translated">関数値パラメータ</target>
        </trans-unit>
        <trans-unit id="cbb0a89a817f8245fd4501f682c4b83cd600158e" translate="yes" xml:space="preserve">
          <source>Function with an expression body and inferred return type:</source>
          <target state="translated">式本体と推論された戻り値の型を持つ関数。</target>
        </trans-unit>
        <trans-unit id="616348e4102e287bce650e93d6e6f0f3f64bef4a" translate="yes" xml:space="preserve">
          <source>Functional operators example: Long Number problem</source>
          <target state="translated">関数演算子の例。長い数の問題</target>
        </trans-unit>
        <trans-unit id="deb4e042b9d6249db97e6680ab8276b237985bd9" translate="yes" xml:space="preserve">
          <source>Functional programming</source>
          <target state="translated">機能的なプログラミング</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="c6cf63bb2db24e88a231a0809e16881a5299ada5" translate="yes" xml:space="preserve">
          <source>Functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/first&quot;&gt;&lt;code&gt;first()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/last&quot;&gt;&lt;code&gt;last()&lt;/code&gt;&lt;/a&gt; also let you search a collection for elements matching a given predicate. When you call &lt;code&gt;first()&lt;/code&gt; with a predicate that tests a collection element, you'll receive the first element on which the predicate yields &lt;code&gt;true&lt;/code&gt;. In turn, &lt;code&gt;last()&lt;/code&gt; with a predicate returns the last element matching it.</source>
          <target state="translated">関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/first&quot;&gt; &lt;code&gt;first()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/last&quot;&gt; &lt;code&gt;last()&lt;/code&gt; を使用&lt;/a&gt;すると、指定された述語に一致する要素のコレクションを検索することもできます。コレクション要素をテストする述語で &lt;code&gt;first()&lt;/code&gt; を呼び出すと、述語が &lt;code&gt;true&lt;/code&gt; を生成する最初の要素を受け取ります。次に、述語を持つ &lt;code&gt;last()&lt;/code&gt; は、それに一致する最後の要素を返します。</target>
        </trans-unit>
        <trans-unit id="9672456d84600d7933765df2e67cde51c9146628" translate="yes" xml:space="preserve">
          <source>Functions act similarly to properties, but can be referenced as two different kinds of types.</source>
          <target state="translated">関数はプロパティと似たような動作をしますが、2種類の異なるタイプとして参照することができます。</target>
        </trans-unit>
        <trans-unit id="38e0c96376951cc87589b6bdee7b1ee1c34c4cd2" translate="yes" xml:space="preserve">
          <source>Functions and annotations specific to the Java platform.</source>
          <target state="translated">Javaプラットフォームに固有の関数とアノテーション。</target>
        </trans-unit>
        <trans-unit id="af02c4bbfc0fd5d261d9a7c1341f5f36cb64fc58" translate="yes" xml:space="preserve">
          <source>Functions and other APIs specific to the JavaScript platform.</source>
          <target state="translated">JavaScriptプラットフォームに特化した関数などのAPI。</target>
        </trans-unit>
        <trans-unit id="1363a53b7740a8dfedddc08cb1096432aefce24a" translate="yes" xml:space="preserve">
          <source>Functions are called the same way as in Python:</source>
          <target state="translated">関数はPythonと同じように呼ばれます。</target>
        </trans-unit>
        <trans-unit id="ffffe56cc8b206d4da2960cd6acff3498dd8bab0" translate="yes" xml:space="preserve">
          <source>Functions are declared with the &lt;code&gt;fun&lt;/code&gt; keyword. For the parameters, you must declare not only their names, but also their types, and you must declare the type of the value the function is intending to return. The body of the function is usually a &lt;em&gt;block&lt;/em&gt;, which is enclosed in curly braces:</source>
          <target state="translated">関数は &lt;code&gt;fun&lt;/code&gt; キーワードで宣言されます。パラメータについては、名前だけでなく型も宣言する必要があり、関数が返す予定の値の型を宣言する必要があります。関数の本体は通常、中括弧で囲まれた&lt;em&gt;block&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="c5cabb16d69d786b4868a7a6a2bf74508116eaf0" translate="yes" xml:space="preserve">
          <source>Functions can be inlined and never get called directly (which happens always except for few situations).</source>
          <target state="translated">関数はインライン化することができ、直接呼び出されることはありません (これはいくつかの状況を除いて常に起こります)。</target>
        </trans-unit>
        <trans-unit id="8ec68d70c5ce9191111e899674a4b364e187fad0" translate="yes" xml:space="preserve">
          <source>Functions can have generic parameters which are specified using angle brackets before the function name:</source>
          <target state="translated">関数は、関数名の前に角括弧を使用して指定された汎用パラメータを持つことができます。</target>
        </trans-unit>
        <trans-unit id="bb364910311fce703048fea10e4d919d72d59716" translate="yes" xml:space="preserve">
          <source>Functions for working with text and regular expressions.</source>
          <target state="translated">テキストや正規表現を扱うための関数。</target>
        </trans-unit>
        <trans-unit id="e3e99c9a98e038eb3f95a845b33675a2ad31ed19" translate="yes" xml:space="preserve">
          <source>Functions in Kotlin are declared using the &lt;code&gt;fun&lt;/code&gt; keyword:</source>
          <target state="translated">Functions in Kotlin are declared using the &lt;code&gt;fun&lt;/code&gt; keyword:</target>
        </trans-unit>
        <trans-unit id="d223cff044f05e7b30816ce62b78775dd0b163cd" translate="yes" xml:space="preserve">
          <source>Functions in Kotlin are declared using the &lt;em&gt;fun&lt;/em&gt; keyword:</source>
          <target state="translated">Kotlinの関数は、&lt;em&gt;fun&lt;/em&gt;キーワードを使用して宣言され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="abcf79c145a0740ce76ae03026a3b5f6a374058e" translate="yes" xml:space="preserve">
          <source>Functions marked with the &lt;em&gt;infix&lt;/em&gt; keyword can also be called using the infix notation (omitting the dot and the parentheses for the call). Infix functions must satisfy the following requirements:</source>
          <target state="translated">&lt;em&gt;infix&lt;/em&gt;キーワードでマークされた関数は、infix表記を使用して呼び出すこともできます（呼び出しではドットと括弧を省略します）。中置関数は次の要件を満たしている必要があります。</target>
        </trans-unit>
        <trans-unit id="10e994cc2b3874457f1a3b7ea19e8f59d42dc03b" translate="yes" xml:space="preserve">
          <source>Functions vs Properties</source>
          <target state="translated">関数とプロパティ</target>
        </trans-unit>
        <trans-unit id="605aecda5c91b6b9048a949e9a032b635cbf0a1c" translate="yes" xml:space="preserve">
          <source>Functions with big arity</source>
          <target state="translated">大きなアリティを持つ関数</target>
        </trans-unit>
        <trans-unit id="4263c3e1bd4e555556b6d00bf49afae16b33edd0" translate="yes" xml:space="preserve">
          <source>Functions with block body must always specify return types explicitly, unless it's intended for them to return &lt;code&gt;Unit&lt;/code&gt;, &lt;a href=&quot;#unit-returning-functions&quot;&gt;in which case it is optional&lt;/a&gt;. Kotlin does not infer return types for functions with block bodies because such functions may have complex control flow in the body, and the return type will be non-obvious to the reader (and sometimes even for the compiler).</source>
          <target state="translated">彼らが返すようにするためのものだしない限り、ブロック本体を持つ関数は、常に、明示的に戻り値の型を指定しなければならない &lt;code&gt;Unit&lt;/code&gt; 、&lt;a href=&quot;#unit-returning-functions&quot;&gt;それはオプションであり、その場合には&lt;/a&gt;。Kotlinは、ブロック本体を含む関数の戻り値の型を推測しません。これは、そのような関数の本体に複雑な制御フローがあり、戻り値の型がリーダー（および場合によってはコンパイラー）からは明らかでないためです。</target>
        </trans-unit>
        <trans-unit id="869c75fbf27b8cca960a9441a8a796e1012f6db9" translate="yes" xml:space="preserve">
          <source>Functions with destination are available for filtering, association, grouping, flattening, and other operations. For the complete list of destination operations see the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/index&quot;&gt;Kotlin collections reference&lt;/a&gt;.</source>
          <target state="translated">宛先を持つ関数は、フィルタリング、関連付け、グループ化、フラット化、およびその他の操作に使用できます。宛先オペレーションの完全なリストについては、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/index&quot;&gt;Kotlinコレクションリファレンスを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="ec474f22ddefd224ff67020fbb6ae2182e01b1bd" translate="yes" xml:space="preserve">
          <source>Functions, properties and classes, objects and interfaces can be declared on the &quot;top-level&quot;, i.e. directly inside a package:</source>
          <target state="translated">関数、プロパティ、クラス、オブジェクト、インターフェイスは「トップレベル」、つまりパッケージの中で直接宣言することができます。</target>
        </trans-unit>
        <trans-unit id="64bb8f0fe0b9db02fc735271491aea4157abc344" translate="yes" xml:space="preserve">
          <source>Further discussion</source>
          <target state="translated">さらなる議論</target>
        </trans-unit>
        <trans-unit id="96c5f382ec6718fb0998748d71e7d0240a9b8b4e" translate="yes" xml:space="preserve">
          <source>Further we describe the conventions that regulate operator overloading for different operators.</source>
          <target state="translated">さらに、異なる演算子に対する演算子のオーバーロードを規制する規約を説明します。</target>
        </trans-unit>
        <trans-unit id="047ca54032a1756c098d3bc1a941a0ed8e583df8" translate="yes" xml:space="preserve">
          <source>Future</source>
          <target state="translated">Future</target>
        </trans-unit>
        <trans-unit id="bdeb21a050e1ff6f2a23beb6e6f7287a62d029a3" translate="yes" xml:space="preserve">
          <source>Future is cancelled.</source>
          <target state="translated">未来はキャンセルされました。</target>
        </trans-unit>
        <trans-unit id="62f3171baa5c0fb94afa3426a227046e9f1a7e06" translate="yes" xml:space="preserve">
          <source>Future is scheduled for execution.</source>
          <target state="translated">未来は実行予定です。</target>
        </trans-unit>
        <trans-unit id="195b2c4ef0b579e6fc4df56af690cec04f2f5bb0" translate="yes" xml:space="preserve">
          <source>Future result is computed.</source>
          <target state="translated">将来の結果を計算します。</target>
        </trans-unit>
        <trans-unit id="99e54311d7d01d796e399d911a504c91ce32cd9c" translate="yes" xml:space="preserve">
          <source>FutureState</source>
          <target state="translated">FutureState</target>
        </trans-unit>
        <trans-unit id="e9808cbd1900d3da5151bc3f2b38f18d4b846b48" translate="yes" xml:space="preserve">
          <source>Futures, Promises et al.</source>
          <target state="translated">未来、約束など</target>
        </trans-unit>
        <trans-unit id="d302df4ce43907abad06f077688fdd515b323131" translate="yes" xml:space="preserve">
          <source>Futures, Promises et. al</source>
          <target state="translated">未来、約束など</target>
        </trans-unit>
        <trans-unit id="6dbbfe6588647d02744e6218e0591657f4ee2019" translate="yes" xml:space="preserve">
          <source>Garbage Collection and Reference Counting</source>
          <target state="translated">ゴミの収集と参照カウント</target>
        </trans-unit>
        <trans-unit id="5537dfcf4040a457bb174bf6d48eae1b56f94aab" translate="yes" xml:space="preserve">
          <source>General category &quot;Cc&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Cc」。</target>
        </trans-unit>
        <trans-unit id="3580200580fcd436242306f983f3b3507549a6d0" translate="yes" xml:space="preserve">
          <source>General category &quot;Cf&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Cf」。</target>
        </trans-unit>
        <trans-unit id="fd1d6d98583bd5d286c8c74c0b9f29ebf1956524" translate="yes" xml:space="preserve">
          <source>General category &quot;Cn&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Cn」。</target>
        </trans-unit>
        <trans-unit id="3a106be07363c0507044c963eabc93ed51c9f075" translate="yes" xml:space="preserve">
          <source>General category &quot;Co&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Co」。</target>
        </trans-unit>
        <trans-unit id="03ca4907122b18ef856396c0fa40bcff775e3854" translate="yes" xml:space="preserve">
          <source>General category &quot;Cs&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Cs」。</target>
        </trans-unit>
        <trans-unit id="00468af6d9083b471cf09e0ab8f92739e492618c" translate="yes" xml:space="preserve">
          <source>General category &quot;Ll&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Ll」。</target>
        </trans-unit>
        <trans-unit id="257f5f2650986b8ae0295dd63b1dad60b91f932e" translate="yes" xml:space="preserve">
          <source>General category &quot;Lm&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Lm」。</target>
        </trans-unit>
        <trans-unit id="914f6778c8d6a3a8826bf16e80d3412755d054b5" translate="yes" xml:space="preserve">
          <source>General category &quot;Lo&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Lo」。</target>
        </trans-unit>
        <trans-unit id="fb8a22c756350d8003ac24a1929c70ad4b9d0b0b" translate="yes" xml:space="preserve">
          <source>General category &quot;Lt&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Lt」。</target>
        </trans-unit>
        <trans-unit id="0f887a16535e642a6540462856260b3a206e313f" translate="yes" xml:space="preserve">
          <source>General category &quot;Lu&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Lu」。</target>
        </trans-unit>
        <trans-unit id="1fb16989d2201c63c16c857610395df222c44d9f" translate="yes" xml:space="preserve">
          <source>General category &quot;Mc&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Mc」。</target>
        </trans-unit>
        <trans-unit id="db22004b965686c72aef5fe1a6705573f3aea2fc" translate="yes" xml:space="preserve">
          <source>General category &quot;Me&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「私」。</target>
        </trans-unit>
        <trans-unit id="e13b65d112880a2a8f689b8c3e69658f87c69992" translate="yes" xml:space="preserve">
          <source>General category &quot;Mn&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Mn」。</target>
        </trans-unit>
        <trans-unit id="7274a78e11b5a951cd6f03c870bd0ccefdda3504" translate="yes" xml:space="preserve">
          <source>General category &quot;Nd&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Nd」。</target>
        </trans-unit>
        <trans-unit id="dcce571b632cd78adf2562075b5c74018107e4e8" translate="yes" xml:space="preserve">
          <source>General category &quot;Nl&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Nl」。</target>
        </trans-unit>
        <trans-unit id="9d69dc6d8d9257de7ff5da721565e07f739f0467" translate="yes" xml:space="preserve">
          <source>General category &quot;No&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「いいえ」。</target>
        </trans-unit>
        <trans-unit id="e6d7f297a1537c8c470bb1754fefd41df20e32ee" translate="yes" xml:space="preserve">
          <source>General category &quot;Pc&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Pc」。</target>
        </trans-unit>
        <trans-unit id="6c9a46645388b12163772f1307cbfed28e013f2b" translate="yes" xml:space="preserve">
          <source>General category &quot;Pd&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Pd」。</target>
        </trans-unit>
        <trans-unit id="047b798db60291a961bbe18b169d957b5e8f2ac5" translate="yes" xml:space="preserve">
          <source>General category &quot;Pe&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Pe」。</target>
        </trans-unit>
        <trans-unit id="3be1b8cac97eeb03e34849d57e62caad6a798de0" translate="yes" xml:space="preserve">
          <source>General category &quot;Pf&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Pf」。</target>
        </trans-unit>
        <trans-unit id="f28cc64fbce4cdefe6051ea49212cc4fe7ae6e3b" translate="yes" xml:space="preserve">
          <source>General category &quot;Pi&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Pi」。</target>
        </trans-unit>
        <trans-unit id="ea0f8c2c8c4aaf5e8874fc537f1b92fabfd83b14" translate="yes" xml:space="preserve">
          <source>General category &quot;Po&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Po」。</target>
        </trans-unit>
        <trans-unit id="e6ac096a85e292ce39b00b857c0903ea5e39458f" translate="yes" xml:space="preserve">
          <source>General category &quot;Ps&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Ps」。</target>
        </trans-unit>
        <trans-unit id="2b08ccd66bb2e2119f27b38b956c87ccafcd1bbc" translate="yes" xml:space="preserve">
          <source>General category &quot;Sc&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Sc」。</target>
        </trans-unit>
        <trans-unit id="875265e6a3ae354a48ee9b551342c6834462859a" translate="yes" xml:space="preserve">
          <source>General category &quot;Sk&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Sk」。</target>
        </trans-unit>
        <trans-unit id="1fe1e30af0d3ea99f97e67460fef543e37c2753b" translate="yes" xml:space="preserve">
          <source>General category &quot;Sm&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Sm」。</target>
        </trans-unit>
        <trans-unit id="443a5fada001e01121a65d80a1d54f9e97daa061" translate="yes" xml:space="preserve">
          <source>General category &quot;So&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「だから」。</target>
        </trans-unit>
        <trans-unit id="32eb327deae57fb982c7872b593b2b6b26bc8a9b" translate="yes" xml:space="preserve">
          <source>General category &quot;Zl&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Zl」。</target>
        </trans-unit>
        <trans-unit id="91da17fb5fbcd7c99bc1b5e9d498abeba9e0df66" translate="yes" xml:space="preserve">
          <source>General category &quot;Zp&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Zp」。</target>
        </trans-unit>
        <trans-unit id="117612c710e794318f15c0e6f4ab0b9c45c47361" translate="yes" xml:space="preserve">
          <source>General category &quot;Zs&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Zs」。</target>
        </trans-unit>
        <trans-unit id="20e6f238bae1caf72a2ca34c802a17fadd4cc9c3" translate="yes" xml:space="preserve">
          <source>Generally Swift argument labels and Objective-C selector pieces are mapped to Kotlin parameter names. Anyway these two concepts have different semantics, so sometimes Swift/Objective-C methods can be imported with a clashing Kotlin signature. In this case the clashing methods can be called from Kotlin using named arguments, e.g.:</source>
          <target state="translated">一般的に、Swiftの引数ラベルとObjective-Cのセレクタの部分はKotlinのパラメータ名にマッピングされます。いずれにしても、この2つの概念は異なるセマンティクスを持っているので、時にはSwift/Objective-Cのメソッドが衝突するKotlinのシグネチャを使ってインポートされることもあります。この場合、衝突するメソッドは名前付き引数を使ってKotlinから呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="f0cc05fd19df56e0eacc01af5e8e38d1225bfd83" translate="yes" xml:space="preserve">
          <source>Generally, avoid using &lt;code&gt;@param&lt;/code&gt; and &lt;code&gt;@return&lt;/code&gt; tags. Instead, incorporate the description of parameters and return values directly into the documentation comment, and add links to parameters wherever they are mentioned. Use &lt;code&gt;@param&lt;/code&gt; and &lt;code&gt;@return&lt;/code&gt; only when a lengthy description is required which doesn't fit into the flow of the main text.</source>
          <target state="translated">一般的には、使用を避ける &lt;code&gt;@param&lt;/code&gt; 及び &lt;code&gt;@return&lt;/code&gt; タグを。代わりに、パラメーターの説明と戻り値をドキュメンテーションコメントに直接組み込み、パラメーターへのリンクを記載されている場所に追加します。 &lt;code&gt;@param&lt;/code&gt; と &lt;code&gt;@return&lt;/code&gt; は、本文の流れに合わない長い説明が必要な場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="29e3d514d55b6125bea56dda15b26eafa5f39066" translate="yes" xml:space="preserve">
          <source>Generally, the contents of a class is sorted in the following order:</source>
          <target state="translated">一般的に、クラスの内容は以下の順番でソートされます。</target>
        </trans-unit>
        <trans-unit id="d7fbe705690a6a1b73ca822febf65f9f439edf39" translate="yes" xml:space="preserve">
          <source>Generate .meta.js and .kjsm files with metadata. Use to create a library</source>
          <target state="translated">.meta.jsと.kjsmファイルをメタデータで生成します。ライブラリの作成に使用します。</target>
        </trans-unit>
        <trans-unit id="749ba44f18bc31e5613803f750e487c856af288a" translate="yes" xml:space="preserve">
          <source>Generate JS files for specific ECMA version</source>
          <target state="translated">特定のECMAバージョン用のJSファイルを生成</target>
        </trans-unit>
        <trans-unit id="baffdfbdc7b7e90b403385bcfcad05060b54977d" translate="yes" xml:space="preserve">
          <source>Generate code for &lt;code&gt;a.plusAssign(b)&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;a.plusAssign(b)&lt;/code&gt; のコードを生成します。</target>
        </trans-unit>
        <trans-unit id="ca6737eca8bb7217a2a3d4f7aeadd4eef8e6cc44" translate="yes" xml:space="preserve">
          <source>Generate metadata for Java 1.8 reflection on method parameters</source>
          <target state="translated">Java 1.8のメソッド・パラメータへの反映のためのメタデータを生成します。</target>
        </trans-unit>
        <trans-unit id="183b9e807d281d2fcdfa940f891802dccbfe3d82" translate="yes" xml:space="preserve">
          <source>Generate no warnings</source>
          <target state="translated">警告を生成しない</target>
        </trans-unit>
        <trans-unit id="250c962bc08b9b28e2eca7ecd5b00831756e4a37" translate="yes" xml:space="preserve">
          <source>Generate source map</source>
          <target state="translated">ソースマップの生成</target>
        </trans-unit>
        <trans-unit id="4e121fd0c11320ddcadbde030de322eb06e47f01" translate="yes" xml:space="preserve">
          <source>Generated Framework Headers</source>
          <target state="translated">生成されたフレームワークヘッダ</target>
        </trans-unit>
        <trans-unit id="f04b94c66b16d00a648fc6082eb3dfa21457f5ac" translate="yes" xml:space="preserve">
          <source>Generated Headers File</source>
          <target state="translated">生成されたヘッダファイル</target>
        </trans-unit>
        <trans-unit id="d946501e1e2ba7debd1406d8e243b228d0da85d2" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between &lt;a href=&quot;../kotlin/-u-int/-m-i-n_-v-a-l-u-e&quot;&gt;UInt.MIN_VALUE&lt;/a&gt; and &lt;a href=&quot;../kotlin/-u-int/-m-a-x_-v-a-l-u-e&quot;&gt;UInt.MAX_VALUE&lt;/a&gt; (inclusive).</source>
          <target state="translated">&lt;a href=&quot;../kotlin/-u-int/-m-i-n_-v-a-l-u-e&quot;&gt;UInt.MIN_VALUE&lt;/a&gt;と&lt;a href=&quot;../kotlin/-u-int/-m-a-x_-v-a-l-u-e&quot;&gt;UInt.MAX_VALUE&lt;/a&gt;（両端を含む）の間で均一に分散された&lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt;ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="5d92e2b8d802695176ccf8af3fa819c75baf685e" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">生成&lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UINT&lt;/a&gt;均一間に分配ランダム値 &lt;code&gt;0&lt;/code&gt; （含む）と指定&lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;するまで、&lt;/a&gt;結合（排他的に）。</target>
        </trans-unit>
        <trans-unit id="a2c3610e21da179f1a8b45bbc1ed74b6576d1b06" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</target>
        </trans-unit>
        <trans-unit id="c16c379abe1c61ef584ef9af40918bcd9ec2f049" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%2C+kotlin.UInt%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%2C+kotlin.UInt%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">生成&lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UINT&lt;/a&gt;均一指定間に分布乱数値&lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%2C+kotlin.UInt%29%2Ffrom&quot;&gt;から&lt;/a&gt;（包括的）と&lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%2C+kotlin.UInt%29%2Funtil&quot;&gt;なるまで&lt;/a&gt;（排他的）境界を。</target>
        </trans-unit>
        <trans-unit id="a6ba1fbed8d9e3fac55680d552d3665d4e152493" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt,%20kotlin.UInt)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt,%20kotlin.UInt)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</target>
        </trans-unit>
        <trans-unit id="4c70c93a911c0b7e6438702d76fce2c8ea628c12" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">生成&lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UINT&lt;/a&gt;均一指定に分布乱数値&lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;範囲&lt;/a&gt;：から &lt;code&gt;range.start&lt;/code&gt; 含めに &lt;code&gt;range.endInclusive&lt;/code&gt; 含め。</target>
        </trans-unit>
        <trans-unit id="8dd65cae72f943e49cc2ae41331bf9d1f69250ba" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</target>
        </trans-unit>
        <trans-unit id="757b30cdacd9eaaf9012afe9c2732ea102b190e3" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between &lt;a href=&quot;../kotlin/-u-long/-m-i-n_-v-a-l-u-e&quot;&gt;ULong.MIN_VALUE&lt;/a&gt; and &lt;a href=&quot;../kotlin/-u-long/-m-a-x_-v-a-l-u-e&quot;&gt;ULong.MAX_VALUE&lt;/a&gt; (inclusive).</source>
          <target state="translated">&lt;a href=&quot;../kotlin/-u-long/-m-i-n_-v-a-l-u-e&quot;&gt;ULong.MIN_VALUE&lt;/a&gt;と&lt;a href=&quot;../kotlin/-u-long/-m-a-x_-v-a-l-u-e&quot;&gt;ULong.MAX_VALUE&lt;/a&gt;（両端を含む）の間で均一に分散された&lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt;ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="fa35e4a57d086459b2d86d7150d6deae9f1ebdac" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; （両端を含む）から指定された範囲（両端を含まない）&lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;まで&lt;/a&gt;指定された値の間で均一に分散された&lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt;ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="33144cb69e6dde064e67678e0b37e02227d2556e" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</target>
        </trans-unit>
        <trans-unit id="86a5293679cfc4d641d91c7745d099cc5355381d" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%2C+kotlin.ULong%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%2C+kotlin.ULong%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">生成&lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULONG&lt;/a&gt;均一指定間に分布乱数値&lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%2C+kotlin.ULong%29%2Ffrom&quot;&gt;から&lt;/a&gt;（包括的）と&lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%2C+kotlin.ULong%29%2Funtil&quot;&gt;なるまで&lt;/a&gt;（排他的）境界を。</target>
        </trans-unit>
        <trans-unit id="571c162bfe41b0090519000961409bf2cf295446" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong,%20kotlin.ULong)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong,%20kotlin.ULong)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</target>
        </trans-unit>
        <trans-unit id="a6da6d1f8e6d83268cfddc1ca01d028666d50d99" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">生成&lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULONG&lt;/a&gt;均一指定に分布乱数値&lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;範囲&lt;/a&gt;：から &lt;code&gt;range.start&lt;/code&gt; 含めに &lt;code&gt;range.endInclusive&lt;/code&gt; 含め。</target>
        </trans-unit>
        <trans-unit id="5e80f4926dc7d92cc6dee1e8e9af3efd28995f96" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</target>
        </trans-unit>
        <trans-unit id="9d6b5d91e9590b09d5869bda06c3e6b0bf73ab0a" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between 0 (inclusive) and &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive).</source>
          <target state="translated">0（包括的）と&lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt;（排他的）の間で均一に分散された &lt;code&gt;Double&lt;/code&gt; ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="91641ec2d14eb7e455748acbcf43e0b4c007143e" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between 0 (inclusive) and &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive).</source>
          <target state="translated">Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between 0 (inclusive) and &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive).</target>
        </trans-unit>
        <trans-unit id="ec5869eeef0508f5a390633c4af337b342951d4d" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between 0 (inclusive) and &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive).</source>
          <target state="translated">0（包括的）と&lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt;（排他的）の間で均一に分散された &lt;code&gt;Double&lt;/code&gt; ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="68dd638f66fc56c5c11edb82000c96813df7cf4b" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between 0 (inclusive) and &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive).</source>
          <target state="translated">Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between 0 (inclusive) and &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive).</target>
        </trans-unit>
        <trans-unit id="23183f2a00cc05d170d3187fadb1b4c9530eeaa1" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">生成 &lt;code&gt;Double&lt;/code&gt; 均一指定間に分布乱数値&lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Ffrom&quot;&gt;から&lt;/a&gt;（包括的）と&lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Funtil&quot;&gt;なるまで&lt;/a&gt;（排他的）境界を。</target>
        </trans-unit>
        <trans-unit id="ef7ac639e2e7ec84ae2359772ffc6d7c437f649c" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</target>
        </trans-unit>
        <trans-unit id="2c885277e3d75b6a7d820f8993b27b0ea1ed1831" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">生成 &lt;code&gt;Double&lt;/code&gt; 均一指定間に分布乱数値&lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Ffrom&quot;&gt;から&lt;/a&gt;（包括的）と&lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Funtil&quot;&gt;なるまで&lt;/a&gt;（排他的）境界を。</target>
        </trans-unit>
        <trans-unit id="a4f7d5668372b6590c7eb64a6f021af20dc8aa57" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</target>
        </trans-unit>
        <trans-unit id="5a6b4f88da0f76f60921086afa057e783981746d" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; （両端を含む）から指定された範囲（両端を含まない）&lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;まで&lt;/a&gt;指定された値の間で均一に分散された &lt;code&gt;Long&lt;/code&gt; ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="4198d2f02645aa2957746f80f20b6382783fc050" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</target>
        </trans-unit>
        <trans-unit id="60c65d3b69ec73d8ccba96a172c16774c259c15d" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; （両端を含む）から指定された範囲（両端を含まない）&lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;まで&lt;/a&gt;指定された値の間で均一に分散された &lt;code&gt;Long&lt;/code&gt; ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="d96f28ee28e4008fd557d78da4f4444c595a9d9c" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</target>
        </trans-unit>
        <trans-unit id="ab109e5e8d3d0e327a16d9897abb1724c9e3febe" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; and &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; (inclusive).</source>
          <target state="translated">&lt;code&gt;Long.MIN_VALUE&lt;/code&gt; と &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; （両端を含む）の間で均一に分散された &lt;code&gt;Long&lt;/code&gt; ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="e607b06de9bc2f244a31f0349072809203ea1b71" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">生成 &lt;code&gt;Long&lt;/code&gt; 均一指定間に分布乱数値&lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Ffrom&quot;&gt;から&lt;/a&gt;（包括的）と&lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Funtil&quot;&gt;なるまで&lt;/a&gt;（排他的）境界が。</target>
        </trans-unit>
        <trans-unit id="f753b1cf30a047d83984aa4faf8120492d72c062" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</target>
        </trans-unit>
        <trans-unit id="e9f12bef09f7fda69f9bcf34d36b4a468e06795d" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">生成 &lt;code&gt;Long&lt;/code&gt; 均一指定間に分布乱数値&lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Ffrom&quot;&gt;から&lt;/a&gt;（包括的）と&lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Funtil&quot;&gt;なるまで&lt;/a&gt;（排他的）境界が。</target>
        </trans-unit>
        <trans-unit id="8243c6d6b812487d1a1813dc5042ebef33d06cec" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</target>
        </trans-unit>
        <trans-unit id="2ca32feb98c1f1a296ae0d442d2374d09519129f" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">生成 &lt;code&gt;Long&lt;/code&gt; 均一指定に分布乱数値&lt;a href=&quot;next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;範囲&lt;/a&gt;：から &lt;code&gt;range.start&lt;/code&gt; 含めに &lt;code&gt;range.endInclusive&lt;/code&gt; 含め。</target>
        </trans-unit>
        <trans-unit id="fe2ce194a7ecf13435936d2c4bee554f03333334" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</target>
        </trans-unit>
        <trans-unit id="0f136df27ab0868f4bf0a7576712f622b78145c2" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; （両端を含む）から指定された範囲（両端を含まない）&lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;まで&lt;/a&gt;指定された &lt;code&gt;Int&lt;/code&gt; ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="67f97d87f9890969756382145b17b9c9839973c1" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</target>
        </trans-unit>
        <trans-unit id="ec98b0a06fdbd7a82ef2f666365c49873e613a82" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; （両端を含む）から指定された範囲（両端を含まない）&lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;まで&lt;/a&gt;指定された &lt;code&gt;Int&lt;/code&gt; ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="51d973853786060c9dde56f61e8065ed21f9c9aa" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</target>
        </trans-unit>
        <trans-unit id="04f70d4706957e55f4983127f5ed29b9491f0f07" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;Int.MIN_VALUE&lt;/code&gt; and &lt;code&gt;Int.MAX_VALUE&lt;/code&gt; (inclusive).</source>
          <target state="translated">&lt;code&gt;Int.MIN_VALUE&lt;/code&gt; と &lt;code&gt;Int.MAX_VALUE&lt;/code&gt; （両端を含む）の間で均一に分散された &lt;code&gt;Int&lt;/code&gt; ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="476b2cb5400c0e512ae51d0729074ed01ac8bda4" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">生成 &lt;code&gt;Int&lt;/code&gt; 均一指定間に分布乱数値&lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Ffrom&quot;&gt;から&lt;/a&gt;（包括的）と&lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Funtil&quot;&gt;なるまで&lt;/a&gt;（排他的）境界が。</target>
        </trans-unit>
        <trans-unit id="38beaf15a8b3cdd762f7d06821c7323070497438" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</target>
        </trans-unit>
        <trans-unit id="0de235eec64bc5d3abe57854cae11f52092981c6" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">生成 &lt;code&gt;Int&lt;/code&gt; 均一指定間に分布乱数値&lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Ffrom&quot;&gt;から&lt;/a&gt;（包括的）と&lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Funtil&quot;&gt;なるまで&lt;/a&gt;（排他的）境界が。</target>
        </trans-unit>
        <trans-unit id="9cab4b63cd5507a5459c8b009d31e0176441cc9b" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</target>
        </trans-unit>
        <trans-unit id="1c5044362d31a36128faeaa0ad8440d54a5b8752" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">生成 &lt;code&gt;Int&lt;/code&gt; 均一指定に分布乱数値&lt;a href=&quot;next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;の範囲は&lt;/a&gt;：から &lt;code&gt;range.start&lt;/code&gt; 含めに &lt;code&gt;range.endInclusive&lt;/code&gt; 含め。</target>
        </trans-unit>
        <trans-unit id="ec707b0430137fd2aa951b831dba3c6acda44ab7" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</target>
        </trans-unit>
        <trans-unit id="0409d26d25d18313944791fd4e9f7071a9c95419" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; whose lower &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; bits are filled with random values and the remaining upper bits are zero.</source>
          <target state="translated">下位の&lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt;ビットがランダムな値で埋められ、残りの上位ビットがゼロである &lt;code&gt;Int&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="786960366d9c75f4e056e7152000d23d9f8dd21c" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; whose lower &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; bits are filled with random values and the remaining upper bits are zero.</source>
          <target state="translated">Generates an &lt;code&gt;Int&lt;/code&gt; whose lower &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; bits are filled with random values and the remaining upper bits are zero.</target>
        </trans-unit>
        <trans-unit id="ed35029e5017af43b400a43a4628d6b0d880f06d" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; whose lower &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; bits are filled with random values and the remaining upper bits are zero.</source>
          <target state="translated">下位の&lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt;ビットがランダムな値で埋められ、残りの上位ビットがゼロである &lt;code&gt;Int&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="5c4a56d82e432c297805d4d085dc1fe917016419" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; whose lower &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; bits are filled with random values and the remaining upper bits are zero.</source>
          <target state="translated">Generates an &lt;code&gt;Int&lt;/code&gt; whose lower &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; bits are filled with random values and the remaining upper bits are zero.</target>
        </trans-unit>
        <trans-unit id="1fd83bc9d972c10c11aa356e5d5814078cadb5db" translate="yes" xml:space="preserve">
          <source>Generating Bindings</source>
          <target state="translated">バインディングの生成</target>
        </trans-unit>
        <trans-unit id="1b570d05016f6a7ca8005a2f5e7a392d74fdcfce" translate="yes" xml:space="preserve">
          <source>Generating Documentation</source>
          <target state="translated">ドキュメントの生成</target>
        </trans-unit>
        <trans-unit id="d383d1659362e7239295fb9a0f5f6c1929f87149" translate="yes" xml:space="preserve">
          <source>Generating Kotlin sources</source>
          <target state="translated">Kotlinソースの生成</target>
        </trans-unit>
        <trans-unit id="8551aaa91b99dd56e53754d86f9c806a66101455" translate="yes" xml:space="preserve">
          <source>Generating documentation</source>
          <target state="translated">ドキュメントの生成</target>
        </trans-unit>
        <trans-unit id="c6b50b1155789f10b71f1d8e7eed8e5f96125848" translate="yes" xml:space="preserve">
          <source>Generating markup with Kotlin code, such as &lt;a href=&quot;https://github.com/Kotlin/kotlinx.html&quot;&gt;HTML&lt;/a&gt; or XML;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Kotlin/kotlinx.html&quot;&gt;HTML&lt;/a&gt;やXML などのKotlinコードでマークアップを生成します。</target>
        </trans-unit>
        <trans-unit id="ecabf0ae993c552c88079cae877c4784c545939c" translate="yes" xml:space="preserve">
          <source>Generating source map</source>
          <target state="translated">ソースマップの生成</target>
        </trans-unit>
        <trans-unit id="c551db814cb760b3eeb8c8927c9cd28545c1386e" translate="yes" xml:space="preserve">
          <source>Generating the Documentation</source>
          <target state="translated">ドキュメントの生成</target>
        </trans-unit>
        <trans-unit id="2968d68104a89b44e3e96456644969cfbe30ace4" translate="yes" xml:space="preserve">
          <source>Generation of default methods is only possible with JVM target bytecode version 1.8 (&lt;code&gt;-jvm-target 1.8&lt;/code&gt;) or higher.</source>
          <target state="translated">デフォルトのメソッドの生成は、JVMターゲットバイトコードバージョン1.8（ &lt;code&gt;-jvm-target 1.8&lt;/code&gt; ）以降でのみ可能です。</target>
        </trans-unit>
        <trans-unit id="83082f46072d254fd933bf6e78414552f2b12960" translate="yes" xml:space="preserve">
          <source>Generic Functions</source>
          <target state="translated">汎用関数</target>
        </trans-unit>
        <trans-unit id="c22e5721464820e7a81c36569ec53083ecc8eb34" translate="yes" xml:space="preserve">
          <source>Generic constraints</source>
          <target state="translated">一般的な制約</target>
        </trans-unit>
        <trans-unit id="cce03127b5a38d4eca19d77a229234d826517c5d" translate="yes" xml:space="preserve">
          <source>Generic enum value access</source>
          <target state="translated">汎用列挙値アクセス</target>
        </trans-unit>
        <trans-unit id="acc8a030fcc7a80f6f90bb435dde9b34b92c8a04" translate="yes" xml:space="preserve">
          <source>Generic feature support for Objc and Swift differ from Kotlin, so the translation will inevitably lose some information, but the features supported retain meaningful information.</source>
          <target state="translated">ObjcとSwiftの一般的な機能サポートはKotlinとは異なるため、翻訳は必然的に情報を失いますが、サポートされている機能は意味のある情報を保持しています。</target>
        </trans-unit>
        <trans-unit id="bac5ea8efabcabc15d0439c3f90e7862ba42db2b" translate="yes" xml:space="preserve">
          <source>Generic feature support for Objective-C and Swift differ from Kotlin, so the translation will inevitably lose some information, but the features supported retain meaningful information.</source>
          <target state="translated">Objective-CとSwiftの一般的な機能サポートはKotlinとは異なるため、翻訳ではどうしても情報が失われてしまいますが、サポートされている機能は意味のある情報を保持しています。</target>
        </trans-unit>
        <trans-unit id="37f5365cdbef14515226dcd384583192170cc525" translate="yes" xml:space="preserve">
          <source>Generic functions</source>
          <target state="translated">汎用関数</target>
        </trans-unit>
        <trans-unit id="e385420208351239c9848b5aa01ee2121d573c3a" translate="yes" xml:space="preserve">
          <source>Generic type parameter (unsupported yet)</source>
          <target state="translated">汎用型パラメータ(未サポート</target>
        </trans-unit>
        <trans-unit id="92a2f746b7830fb83eba6c4cddd355833efd75f2" translate="yes" xml:space="preserve">
          <source>Generic type parameters</source>
          <target state="translated">汎用型パラメータ</target>
        </trans-unit>
        <trans-unit id="4f81bf48fda6a667e13ada0305e9584972f3dbe7" translate="yes" xml:space="preserve">
          <source>Generic types used for Java interoperation with incorrect nullability, e.g. a piece of Java code might add &lt;code&gt;null&lt;/code&gt; into a Kotlin &lt;code&gt;MutableList&amp;lt;String&amp;gt;&lt;/code&gt;, meaning that &lt;code&gt;MutableList&amp;lt;String?&amp;gt;&lt;/code&gt; should be used for working with it;</source>
          <target state="translated">不正な &lt;code&gt;null&lt;/code&gt; 可能性を伴うJava相互運用に使用されるジェネリック型。たとえば、Javaコードの一部がKotlin &lt;code&gt;MutableList&amp;lt;String&amp;gt;&lt;/code&gt; にnullを追加する可能性があります。つまり、 &lt;code&gt;MutableList&amp;lt;String?&amp;gt;&lt;/code&gt; を使用して操作する必要があります。</target>
        </trans-unit>
        <trans-unit id="80dadd86173d0ff3979257793d4e45beb238b6a2" translate="yes" xml:space="preserve">
          <source>Generics</source>
          <target state="translated">Generics</target>
        </trans-unit>
        <trans-unit id="cca07acad0dc1efd73fdb4cb240cc7cfd1e90717" translate="yes" xml:space="preserve">
          <source>Generics are currently not enabled by default. To have the framework header written with generics, add an experimental flag to the compiler config:</source>
          <target state="translated">ジェネリックは現在のところデフォルトでは有効になっていません。フレームワークのヘッダをジェネリックで書かせるには、コンパイラの設定に experimental フラグを追加してください。</target>
        </trans-unit>
        <trans-unit id="55fd76732b46ad77052ac2d3873198cc27caa1b6" translate="yes" xml:space="preserve">
          <source>Generics can only be defined on classes, not on interfaces (protocols in Objc and Swift) or functions.</source>
          <target state="translated">ジェネリックはクラス上でのみ定義でき、インターフェース(ObjcやSwiftのプロトコル)や関数上では定義できません。</target>
        </trans-unit>
        <trans-unit id="f7dda3c2f67629977875e11f967ee30a54f78a53" translate="yes" xml:space="preserve">
          <source>Generics can only be defined on classes, not on interfaces (protocols in Objective-C and Swift) or functions.</source>
          <target state="translated">ジェネリックはクラスでのみ定義でき、インターフェース(Objective-CやSwiftのプロトコル)や関数では定義できません。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
