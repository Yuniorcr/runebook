<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="kotlin">
    <body>
      <group id="kotlin">
        <trans-unit id="e993bf612bf1600b9ce9618843fca0af6ca52f9c" translate="yes" xml:space="preserve">
          <source>For a typical Unix library with a config script, the &lt;code&gt;compilerOpts&lt;/code&gt; will likely contain the output of a config script with the &lt;code&gt;--cflags&lt;/code&gt; flag (maybe without exact paths).</source>
          <target state="translated">構成スクリプトを使用する一般的なUnixライブラリの場合、 &lt;code&gt;compilerOpts&lt;/code&gt; には &lt;code&gt;--cflags&lt;/code&gt; フラグを使用した構成スクリプトの出力が含まれている可能性があります（正確なパスがない可能性があります）。</target>
        </trans-unit>
        <trans-unit id="f0ffc38ab87aa0a2254afe0dac4d4f4abe21ea7b" translate="yes" xml:space="preserve">
          <source>For additional details, please consult the &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/scripting-support.md&quot;&gt;KEEP-75&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/scripting-support.md&quot;&gt;KEEP-75&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="86c5db154bc4017f6e19e21eebb42b806549c22c" translate="yes" xml:space="preserve">
          <source>For advanced usage, for example for integration with logging MDC, transactional contexts or any other libraries which internally use thread-locals for passing data, see documentation for &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-thread-context-element/index.html&quot;&gt;ThreadContextElement&lt;/a&gt; interface that should be implemented.</source>
          <target state="translated">ロギングMDC、トランザクションコンテキスト、またはデータを渡すために内部でスレッドローカルを使用するその他のライブラリとの統合など、高度な使用法については、実装する必要がある&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-thread-context-element/index.html&quot;&gt;ThreadContextElement&lt;/a&gt;インターフェイスのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="f5bd8b47abaf885ba369c4b552650b5e600bab97" translate="yes" xml:space="preserve">
          <source>For advanced usage, for example for integration with logging MDC, transactional contexts or any other libraries which internally use thread-locals for passing data, see the documentation of the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-thread-context-element/index.html&quot;&gt;ThreadContextElement&lt;/a&gt; interface that should be implemented.</source>
          <target state="translated">For advanced usage, for example for integration with logging MDC, transactional contexts or any other libraries which internally use thread-locals for passing data, see the documentation of the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-thread-context-element/index.html&quot;&gt;ThreadContextElement&lt;/a&gt; interface that should be implemented.</target>
        </trans-unit>
        <trans-unit id="d1b6d864741b47438551c8743952cc88342b08e2" translate="yes" xml:space="preserve">
          <source>For all &lt;code&gt;Unix&lt;/code&gt; or &lt;code&gt;Windows&lt;/code&gt; based targets (including &lt;code&gt;Android&lt;/code&gt; and &lt;code&gt;iPhone&lt;/code&gt;) we provide the &lt;code&gt;posix&lt;/code&gt; platform lib. It contains bindings to platform's implementation of &lt;code&gt;POSIX&lt;/code&gt; standard.</source>
          <target state="translated">すべての &lt;code&gt;Unix&lt;/code&gt; または &lt;code&gt;Windows&lt;/code&gt; ベースのターゲット（ &lt;code&gt;Android&lt;/code&gt; および &lt;code&gt;iPhone&lt;/code&gt; を含む）に対して、 &lt;code&gt;posix&lt;/code&gt; プラットフォームlib を提供します。これには、 &lt;code&gt;POSIX&lt;/code&gt; 標準のプラットフォームの実装へのバインディングが含まれています。</target>
        </trans-unit>
        <trans-unit id="637ba86f66e04bfb5c21e0d443fd411f1ae0d969" translate="yes" xml:space="preserve">
          <source>For an example of CocoaPods integration, refer to the &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/cocoapods&quot;&gt;&lt;code&gt;cocoapods&lt;/code&gt;&lt;/a&gt; sample.</source>
          <target state="translated">CocoaPods統合の例については、&lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/cocoapods&quot;&gt; &lt;code&gt;cocoapods&lt;/code&gt; &lt;/a&gt;サンプルを参照してください。</target>
        </trans-unit>
        <trans-unit id="cdf11697a4677fb9ee8260c3dad7ad63798e47a6" translate="yes" xml:space="preserve">
          <source>For an extension property:</source>
          <target state="translated">増築物件の場合。</target>
        </trans-unit>
        <trans-unit id="48c56f8a9eb62b42d56ef6f7aeb1acb05ae54735" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, when using the legacy compiler for Kotlin/JS, including or omitting &lt;code&gt;binaries.executable()&lt;/code&gt; will have no effect &amp;ndash; executable files will be generated in either case. To make the legacy backend stop producing executable files without the presence of &lt;code&gt;binaries.executable()&lt;/code&gt; (for example, to improve build times where runnable artifacts aren't required), set &lt;code&gt;kotlin.js.generate.executable.default=false&lt;/code&gt; in your &lt;code&gt;gradle.properties&lt;/code&gt;.</source>
          <target state="translated">下位互換性のために、Kotlin / JS用のレガシーコンパイラを使用する場合、 &lt;code&gt;binaries.executable()&lt;/code&gt; を含めたり省略したりしても効果はありません。どちらの場合も、実行可能ファイルが生成されます。存在なしに実行可能ファイルを生成する従来のバックエンドストップさせるために &lt;code&gt;binaries.executable()&lt;/code&gt; （例えば、実行可能な成果物が必要とされていないビルド時間を改善するために）、セット &lt;code&gt;kotlin.js.generate.executable.default=false&lt;/code&gt; をあなたの中 &lt;code&gt;gradle.properties&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71b6ee394141461f71e0ce2d3f94fa8ad9908ffc" translate="yes" xml:space="preserve">
          <source>For bigger collections, you may want to specify the &lt;code&gt;limit&lt;/code&gt; &amp;ndash; a number of elements that will be included into result. If the collection size exceeds the &lt;code&gt;limit&lt;/code&gt;, all the other elements will be replaced with a single value of the &lt;code&gt;truncated&lt;/code&gt; argument.</source>
          <target state="translated">より大きなコレクションでは、 &lt;code&gt;limit&lt;/code&gt; 結果に含まれる要素の数）を指定することができます。コレクションのサイズが &lt;code&gt;limit&lt;/code&gt; を超える場合、他のすべての要素は &lt;code&gt;truncated&lt;/code&gt; 引数の単一の値に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="f52bff34c82e9bbe7354a0901ea870b0a36772f0" translate="yes" xml:space="preserve">
          <source>For binaries configuration, the following parameters are available:</source>
          <target state="translated">バイナリの設定では、以下のパラメータを使用できます。</target>
        </trans-unit>
        <trans-unit id="595ad7dde734d66ff98543167d7cda57403ac6a6" translate="yes" xml:space="preserve">
          <source>For browser targets, the Kotlin/JS plugin uses the widely known &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt; module bundler.</source>
          <target state="translated">ブラウザターゲットの場合、Kotlin / JSプラグインは広く知られている&lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt;モジュールバンドラーを使用します。</target>
        </trans-unit>
        <trans-unit id="0a1218f3526712fb0bcb85917ba83277f653cbd2" translate="yes" xml:space="preserve">
          <source>For build authors</source>
          <target state="translated">ビルド作成者のために</target>
        </trans-unit>
        <trans-unit id="79e3bf0b5fcc62065d6ab9b8f87609a556bce363" translate="yes" xml:space="preserve">
          <source>For building executable JavaScript artifacts through webpack, the Kotlin/JS plugin contains the &lt;code&gt;browserDevelopmentWebpack&lt;/code&gt; and &lt;code&gt;browserProductionWebpack&lt;/code&gt; Gradle tasks.</source>
          <target state="translated">Webpackを介して実行可能なJavaScriptアーティファクトを構築するために、Kotlin / JSプラグインには &lt;code&gt;browserDevelopmentWebpack&lt;/code&gt; タスクと &lt;code&gt;browserProductionWebpack&lt;/code&gt; Gradleタスクが含まれています。</target>
        </trans-unit>
        <trans-unit id="694ca7b8850a82c8e256d49268391f7fa91d2fc1" translate="yes" xml:space="preserve">
          <source>For building maps with collection elements as values, there is the function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-by&quot;&gt;&lt;code&gt;associateBy()&lt;/code&gt;&lt;/a&gt;. It takes a function that returns a key based on an element's value. If two elements are equal, only the last one remains in the map. &lt;code&gt;associateBy()&lt;/code&gt; can also be called with a value transformation function.</source>
          <target state="translated">コレクション要素を値として持つマップを構築するために、関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-by&quot;&gt; &lt;code&gt;associateBy()&lt;/code&gt; &lt;/a&gt;ます。要素の値に基づいてキーを返す関数を受け取ります。2つの要素が等しい場合、最後の要素のみがマップに残ります。 &lt;code&gt;associateBy()&lt;/code&gt; は、値変換関数で呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="f47b960e3cf1bba7f7326ae02c9c3b8dd9fb72b5" translate="yes" xml:space="preserve">
          <source>For certain collection operations, there is an option to specify the &lt;em&gt;destination&lt;/em&gt; object. Destination is a mutable collection to which the function appends its resulting items instead of returning them in a new object. For performing operations with destinations, there are separate functions with the &lt;code&gt;To&lt;/code&gt; postfix in their names, for example, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter-to&quot;&gt;&lt;code&gt;filterTo()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-to&quot;&gt;&lt;code&gt;associateTo()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate&quot;&gt;&lt;code&gt;associate()&lt;/code&gt;&lt;/a&gt;. These functions take the destination collection as an additional parameter.</source>
          <target state="translated">特定のコレクション操作では、&lt;em&gt;宛先&lt;/em&gt;オブジェクトを指定するオプションがあります。 Destinationは、関数が結果のアイテムを新しいオブジェクトに返すのではなく追加する変更可能なコレクションです。宛先を使用して操作を実行する &lt;code&gt;To&lt;/code&gt; に、名前にTo接尾辞が付いた個別の関数があります。たとえば、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter-to&quot;&gt; &lt;code&gt;filterTo()&lt;/code&gt; &lt;/a&gt;代わりにfilterTo &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;や、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-to&quot;&gt; &lt;code&gt;associateTo()&lt;/code&gt; &lt;/a&gt;代わりに&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate&quot;&gt; &lt;code&gt;associate()&lt;/code&gt; &lt;/a&gt;ます。これらの関数は、追加のパラメーターとして宛先コレクションを受け取ります。</target>
        </trans-unit>
        <trans-unit id="02887bdbee3c2022f2023698adee356772aedd2e" translate="yes" xml:space="preserve">
          <source>For certain operations, there are pairs of functions for performing the same operation: one applies the operation in-place and the other returns the result as a separate collection. For example, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/a&gt; sorts a mutable collection in-place, so it's state changes; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; creates a new collection that contains the same elements in the sorted order.</source>
          <target state="translated">特定の操作については、同じ操作を実行するための関数のペアがあります。1つは操作をインプレースで適用し、もう1つは個別のコレクションとして結果を返します。たとえば、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt; &lt;code&gt;sort()&lt;/code&gt; &lt;/a&gt;は変更可能なコレクションをインプレースでソートするため、状態が変化します。&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;は、ソートされた順序で同じ要素を含む新しいコレクションを作成します。</target>
        </trans-unit>
        <trans-unit id="9dfed0b94e755921f99e0c6db40aa33e6c8d1e4f" translate="yes" xml:space="preserve">
          <source>For certain operations, there are pairs of functions for performing the same operation: one applies the operation in-place and the other returns the result as a separate collection. For example, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/a&gt; sorts a mutable collection in-place, so its state changes; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; creates a new collection that contains the same elements in the sorted order.</source>
          <target state="translated">For certain operations, there are pairs of functions for performing the same operation: one applies the operation in-place and the other returns the result as a separate collection. For example, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt; &lt;code&gt;sort()&lt;/code&gt; &lt;/a&gt; sorts a mutable collection in-place, so its state changes; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt; creates a new collection that contains the same elements in the sorted order.</target>
        </trans-unit>
        <trans-unit id="b47aa3d5261111e5dc0cf33a82d66cb2c8e5c3fe" translate="yes" xml:space="preserve">
          <source>For classes with a long supertype list, put a line break after the colon and align all supertype names horizontally:</source>
          <target state="translated">長いスーパータイプリストを持つクラスでは、コロンの後に改行を入れ、すべてのスーパータイプ名を水平に並べます。</target>
        </trans-unit>
        <trans-unit id="f5426c4f7933a1cb4871210952ed14cb2d0d066b" translate="yes" xml:space="preserve">
          <source>For classifiers representing type parameters, the type argument list must always be empty. For classes, the type argument list should contain arguments for the type parameters of the class. If the class is &lt;code&gt;inner&lt;/code&gt;, the list should follow with arguments for the type parameters of its outer class, and so forth until a class is not &lt;code&gt;inner&lt;/code&gt;, or is declared on the top level.</source>
          <target state="translated">型パラメーターを表す分類子の場合、型引数リストは常に空でなければなりません。クラスの場合、型引数リストには、クラスの型パラメーターの引数が含まれている必要があります。クラスがある場合は &lt;code&gt;inner&lt;/code&gt; クラスがでなくなるまで、リストは等々その外側のクラスの型パラメータの引数に従う、とすべきである &lt;code&gt;inner&lt;/code&gt; 、またはトップレベルで宣言されています。</target>
        </trans-unit>
        <trans-unit id="7beaf78c1b305ea0eab1379a4e304ae50d262ca8" translate="yes" xml:space="preserve">
          <source>For common combinations of targets, you can create a hierarchical structure with &lt;a href=&quot;mpp-share-on-platforms#use-target-shortcuts&quot;&gt;target shortcuts&lt;/a&gt;.</source>
          <target state="translated">ターゲットの一般的な組み合わせについては、&lt;a href=&quot;mpp-share-on-platforms#use-target-shortcuts&quot;&gt;ターゲットショートカットを&lt;/a&gt;使用して階層構造を作成できます。</target>
        </trans-unit>
        <trans-unit id="ed9eeecc6a0d768124a687f0cde43ed7908087f9" translate="yes" xml:space="preserve">
          <source>For completeness: it is also possible (but discouraged) to split the declaration and the initial assignment, and even to initialize in multiple places based on some condition. You can only read the variable at a point where the compiler can prove that every possible execution path will have initialized it. If you're creating a read-only variable in this way, you must also ensure that every possible execution path assigns to it &lt;em&gt;exactly&lt;/em&gt; once.</source>
          <target state="translated">完全を期すために、宣言と最初の割り当てを分割し、いくつかの条件に基づいて複数の場所で初期化することも可能です（ただし推奨されません）。可能なすべての実行パスが変数を初期化したことをコンパイラが証明できる時点でのみ、変数を読み取ることができます。この方法で読み取り専用変数を作成する場合は、可能なすべての実行パス&lt;em&gt;が&lt;/em&gt; 1回だけ変数に割り当てるようにする必要もあります。</target>
        </trans-unit>
        <trans-unit id="79ee8b4421a58fb8d8446ab0d337de5ea30eee34" translate="yes" xml:space="preserve">
          <source>For consistency with array literals in annotations, passing a single item for a vararg parameter in the named form (&lt;code&gt;foo(items = i)&lt;/code&gt;) has been deprecated. Please use the spread operator with the corresponding array factory functions:</source>
          <target state="translated">注釈内の配列リテラルとの一貫性を保つために、名前付き形式（ &lt;code&gt;foo(items = i)&lt;/code&gt; ）でvarargパラメーターに単一の項目を渡すことは非推奨になりました。対応する配列ファクトリ関数でスプレッド演算子を使用してください：</target>
        </trans-unit>
        <trans-unit id="17a65370b0052e81251cc519469f54908fa09134" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/flow.html&quot;&gt;flow&lt;/a&gt; builder performs additional &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/ensure-active.html&quot;&gt;ensureActive&lt;/a&gt; checks for cancellation on each emitted value. It means that a busy loop emitting from a &lt;code&gt;flow { ... }&lt;/code&gt; is cancellable:</source>
          <target state="translated">便宜上、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/flow.html&quot;&gt;フロー&lt;/a&gt;ビルダーは、放出された値ごとにキャンセルの追加の&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/ensure-active.html&quot;&gt;ensureActive&lt;/a&gt;チェックを実行します。これは、 &lt;code&gt;flow { ... }&lt;/code&gt; から放出されるビジーループがキャンセル可能であることを意味します。</target>
        </trans-unit>
        <trans-unit id="afef4be80502f3cfdb78878e430e782b609b8c37" translate="yes" xml:space="preserve">
          <source>For convenience, these functions return the destination collection back, so you can create it right in the corresponding argument of the function call:</source>
          <target state="translated">便利なように、これらの関数は目的のコレクションを返してくれるので、関数呼び出しの対応する引数ですぐに作成することができます。</target>
        </trans-unit>
        <trans-unit id="b434cd5b8ed34d1f894873e141d8af5c3688e3d4" translate="yes" xml:space="preserve">
          <source>For curly braces, put the opening brace in the end of the line where the construct begins, and the closing brace on a separate line aligned horizontally with the opening construct.</source>
          <target state="translated">カーリーブレースの場合は、開始ブレースを構成要素が始まる線の端に置き、終了ブレースを開始構成要素と水平に並んだ別の線上に置きます。</target>
        </trans-unit>
        <trans-unit id="43952d27570c840abe79a5442e35760596171a6d" translate="yes" xml:space="preserve">
          <source>For custom compilations, you need to set up all dependencies manually. The default source set of a custom compilation does not depend on the &lt;code&gt;commonMain&lt;/code&gt; and the &lt;code&gt;commonTest&lt;/code&gt; source sets.</source>
          <target state="translated">カスタムコンパイルの場合、すべての依存関係を手動で設定する必要があります。カスタムコンパイルのデフォルトのソースセットは、 &lt;code&gt;commonMain&lt;/code&gt; および &lt;code&gt;commonTest&lt;/code&gt; のソースセットに依存しません。</target>
        </trans-unit>
        <trans-unit id="19a64fc7bea10f2735062a2c907700c0ef67633d" translate="yes" xml:space="preserve">
          <source>For debug build it embeds placeholder LLVM IR data as a marker.</source>
          <target state="translated">デバッグビルドでは、LLVMのIRデータをマーカーとして埋め込んでいます。</target>
        </trans-unit>
        <trans-unit id="f7296b3affa034e56286c14adf5ca5d09604d26c" translate="yes" xml:space="preserve">
          <source>For decades, as developers we are confronted with a problem to solve - how to prevent our applications from blocking. Whether we're developing desktop, mobile, or even server-side applications, we want to avoid having the user wait or what's worse cause bottlenecks that would prevent an application from scaling.</source>
          <target state="translated">何十年もの間、開発者として私たちは解決すべき問題に直面してきました。デスクトップ、モバイル、サーバーサイドのアプリケーションを開発しているかどうかに関わらず、ユーザーを待たせたり、アプリケーションのスケーリングを妨げるボトルネックの原因になったりすることは避けたいと考えています。</target>
        </trans-unit>
        <trans-unit id="ccfb1bd3bd7bfd74cbd5fb080764cd427aa918e5" translate="yes" xml:space="preserve">
          <source>For depending on JavaScript packages from npm, the Gradle DSL exposes an &lt;code&gt;npm&lt;/code&gt; function that allows us to specify packages we want to import from npm. Let us consider the import of an NPM package called &lt;a href=&quot;https://www.npmjs.com/package/is-sorted&quot;&gt;&lt;code&gt;is-sorted&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">npmからのJavaScriptパッケージに依存するために、Gradle DSLは、 &lt;code&gt;npm&lt;/code&gt; からインポートするパッケージを指定できるnpm関数を公開します。&lt;a href=&quot;https://www.npmjs.com/package/is-sorted&quot;&gt; &lt;code&gt;is-sorted&lt;/code&gt; &lt;/a&gt;と呼ばれるNPMパッケージのインポートについて考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="e5618ea5aa387ca3d934fa7059f4ea5eb2684f42" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#also&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">使用法の詳細については、&lt;a href=&quot;../../../../../docs/reference/scope-functions#also&quot;&gt;スコープ関数&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1d58fbd0a86a8a8236e1ea5cfe8098c23478de1f" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#apply&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">使用法の詳細については、&lt;a href=&quot;../../../../../docs/reference/scope-functions#apply&quot;&gt;スコープ関数&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="757a87b936de48b2ca7dbd30472b34156baef56a" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#let&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">使用法の詳細については、&lt;a href=&quot;../../../../../docs/reference/scope-functions#let&quot;&gt;スコープ関数&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="9afaf366ae8ced14236278d07ef496e91fa87059" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#run&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">使用法の詳細については、&lt;a href=&quot;../../../../../docs/reference/scope-functions#run&quot;&gt;スコープ関数&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="c60faedb0188f0b5a90fa8dfbfa95ce16294c10e" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#with&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">使用法の詳細については、&lt;a href=&quot;../../../../../docs/reference/scope-functions#with&quot;&gt;スコープ関数&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="028e4a57b533fce9ed58d13b3dddb5fa9f3454af" translate="yes" xml:space="preserve">
          <source>For details on using &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt;&lt;code&gt;plusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;+=&lt;/code&gt;) and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus-assign&quot;&gt;&lt;code&gt;minusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;-=&lt;/code&gt;) operators on mutable maps, see &lt;a href=&quot;#map-write-operations&quot;&gt;Map write operations&lt;/a&gt; below.</source>
          <target state="translated">変更可能なマップでの&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt; &lt;code&gt;plusAssign&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;+=&lt;/code&gt; &lt;code&gt;-=&lt;/code&gt; ）演算子と&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus-assign&quot;&gt; &lt;code&gt;minusAssign&lt;/code&gt; &lt;/a&gt;（-=）演算子の使用の詳細については、以下の&lt;a href=&quot;#map-write-operations&quot;&gt;マップ書き込み操作を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a0931a279af808bfe00c2a0d994687a2bad1f41e" translate="yes" xml:space="preserve">
          <source>For each compilation, there is a default source set under the name composed as &lt;code&gt;&amp;lt;targetName&amp;gt;&amp;lt;CompilationName&amp;gt;&lt;/code&gt;. This default source set participates in the compilation, and thus it should be used for the platform-specific code and dependencies, and for adding other source sets to the compilation by the means of 'depends on'. For example, a project with targets &lt;code&gt;jvm6&lt;/code&gt; (JVM) and &lt;code&gt;nodeJs&lt;/code&gt; (JS) will have source sets: &lt;code&gt;commonMain&lt;/code&gt;, &lt;code&gt;commonTest&lt;/code&gt;, &lt;code&gt;jvm6Main&lt;/code&gt;, &lt;code&gt;jvm6Test&lt;/code&gt;, &lt;code&gt;nodeJsMain&lt;/code&gt;, &lt;code&gt;nodeJsTest&lt;/code&gt;.</source>
          <target state="translated">コンパイルごとに、 &lt;code&gt;&amp;lt;targetName&amp;gt;&amp;lt;CompilationName&amp;gt;&lt;/code&gt; として構成される名前の下にデフォルトのソースセットがあります。このデフォルトのソースセットはコンパイルに参加するため、プラットフォーム固有のコードと依存関係、および「依存」の方法でコンパイルに他のソースセットを追加するために使用する必要があります。たとえば、ターゲットが &lt;code&gt;jvm6&lt;/code&gt; （JVM）と &lt;code&gt;nodeJs&lt;/code&gt; （JS）のプロジェクトには、ソースセット &lt;code&gt;commonMain&lt;/code&gt; 、 &lt;code&gt;commonTest&lt;/code&gt; 、 &lt;code&gt;jvm6Main&lt;/code&gt; 、 &lt;code&gt;jvm6Test&lt;/code&gt; 、 &lt;code&gt;nodeJsMain&lt;/code&gt; 、 &lt;code&gt;nodeJsTest&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="a971809f1d47fbd85329764ce9196c05695ed736" translate="yes" xml:space="preserve">
          <source>For each key, there is always a single value associated with it. You can add and remove whole entries.</source>
          <target state="translated">各キーには、常に1つの値が関連付けられています。エントリ全体を追加したり削除したりすることができます。</target>
        </trans-unit>
        <trans-unit id="5a05b0dfb8b82378844bf815d925e39ae6cc816c" translate="yes" xml:space="preserve">
          <source>For each target, default compilations include:</source>
          <target state="translated">各ターゲットに対して、デフォルトのコンパイルには以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="61b2fa33634d8be8df9db15d8bbf16aa0c02b58e" translate="yes" xml:space="preserve">
          <source>For each target, specify the minimum target version for the Pod library.</source>
          <target state="translated">各ターゲットに対して、Podライブラリの最小ターゲットバージョンを指定します。</target>
        </trans-unit>
        <trans-unit id="6341909ad40b37a6ea351364219d03a48215039d" translate="yes" xml:space="preserve">
          <source>For enum constants, it's OK to use either uppercase underscore-separated names (&lt;code&gt;enum class Color { RED, GREEN }&lt;/code&gt;) or regular camel-case names starting with an uppercase first letter, depending on the usage.</source>
          <target state="translated">For enum constants, it's OK to use either uppercase underscore-separated names ( &lt;code&gt;enum class Color { RED, GREEN }&lt;/code&gt; ) or regular camel-case names starting with an uppercase first letter, depending on the usage.</target>
        </trans-unit>
        <trans-unit id="f9d32997cfc2635d965d79f6a6f0696c8adae072" translate="yes" xml:space="preserve">
          <source>For enum constants, it's OK to use either uppercase underscore-separated names (&lt;code&gt;enum class Color { RED, GREEN }&lt;/code&gt;) or regular camel-humps names starting with an uppercase letter, depending on the usage.</source>
          <target state="translated">enum定数の場合、使用法に応じて、アンダースコアで区切られた大文字の名前（ &lt;code&gt;enum class Color { RED, GREEN }&lt;/code&gt; ）または大文字で始まる通常のキャメルこぶ名のいずれかを使用できます。</target>
        </trans-unit>
        <trans-unit id="3cdc85f184c2ea8335df38fe8b455a7815ab1f41" translate="yes" xml:space="preserve">
          <source>For every parameter with a default value, this will generate one additional overload, which has this parameter and all parameters to the right of it in the parameter list removed. In this example, the following will be generated:</source>
          <target state="translated">デフォルト値を持つすべてのパラメータに対して、このパラメータとその右側のすべてのパラメータが削除されたオーバーロードが追加で生成されます。この例では、以下のように生成されます。</target>
        </trans-unit>
        <trans-unit id="94b950f7e09b83a55502571aef5cf0416b4ce619" translate="yes" xml:space="preserve">
          <source>For every set of &lt;code&gt;.h&lt;/code&gt; files, we will be using the &lt;code&gt;cinterop&lt;/code&gt;&lt;a href=&quot;../../reference/native/c_interop&quot;&gt;C Libraries&lt;/a&gt; from Kotlin/Native to generate a Kotlin/Native library, or &lt;code&gt;.klib&lt;/code&gt;. The generated library will bridge calls from Kotlin/Native to C. It includes respective Kotlin declarations for the definitions form the &lt;code&gt;.h&lt;/code&gt; files. It is only necessary to have a &lt;code&gt;.h&lt;/code&gt; file to run the &lt;code&gt;cinterop&lt;/code&gt; tool. And we do not need to create a &lt;code&gt;lib.c&lt;/code&gt; file, unless we want to compile and run the example. More details on this are covered in the &lt;a href=&quot;../../reference/native/c_interop&quot;&gt;C Libraries&lt;/a&gt; page. It is enough for the tutorial to create the &lt;code&gt;lib.def&lt;/code&gt; file with the following content:</source>
          <target state="translated">&lt;code&gt;.h&lt;/code&gt; ファイルのすべてのセットについて、Kotlin / Nativeの &lt;code&gt;cinterop&lt;/code&gt; &lt;a href=&quot;../../reference/native/c_interop&quot;&gt;Cライブラリ&lt;/a&gt;を使用して、Kotlin / Nativeライブラリまたは &lt;code&gt;.klib&lt;/code&gt; を生成します。生成されたライブラリは、Kotlin /ネイティブからCへの呼び出しをブリッジします。これには、 &lt;code&gt;.h&lt;/code&gt; ファイルからの定義に対するそれぞれのKotlin宣言が含まれます。 &lt;code&gt;cinterop&lt;/code&gt; ツールを実行するには、 &lt;code&gt;.h&lt;/code&gt; ファイルが必要です。また、 &lt;code&gt;lib.c&lt;/code&gt; をコンパイルして実行する場合を除き、lib.cファイルを作成する必要はありません。これに関する詳細は、&lt;a href=&quot;../../reference/native/c_interop&quot;&gt;Cライブラリ&lt;/a&gt;ページで説明されています。チュートリアルが &lt;code&gt;lib.def&lt;/code&gt; ファイルを作成するには、次の内容で十分です。</target>
        </trans-unit>
        <trans-unit id="a79d24b8ae547d8a56979a7932df7c035d95e45d" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;compileDebugKlibraryMacos_x64KotlinNative&lt;/code&gt;, &lt;code&gt;compileTestDebugKotlinNative&lt;/code&gt;.</source>
          <target state="translated">たとえば、 &lt;code&gt;compileDebugKlibraryMacos_x64KotlinNative&lt;/code&gt; 、 &lt;code&gt;compileTestDebugKotlinNative&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="90fea239952b564e524c37f54598a7c5cbd251b7" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;private&lt;/code&gt; could be used to define a property or helper function that is needed by several functions in one file, or a complex type returned by one of your private functions, without leaking them to the rest of the codebase:</source>
          <target state="translated">たとえば、 &lt;code&gt;private&lt;/code&gt; を使用して、1つのファイル内のいくつかの関数が必要とするプロパティやヘルパー関数、またはプライベート関数の1つが返す複雑な型を定義して、コードベースの他の部分にリークすることはありません。</target>
        </trans-unit>
        <trans-unit id="41b672a7205fead42e4ee031049451669f4c3977" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;var firstName: String&lt;/code&gt; gets compiled to the following Java declarations:</source>
          <target state="translated">たとえば、 &lt;code&gt;var firstName: String&lt;/code&gt; は、次のJava宣言にコンパイルされます。</target>
        </trans-unit>
        <trans-unit id="b015d6c9c8e4cfb6e57ed2e9d18be371370522a7" translate="yes" xml:space="preserve">
          <source>For example, a flow of incoming requests can be mapped to the results with the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/map.html&quot;&gt;map&lt;/a&gt; operator, even when performing a request is a long-running operation that is implemented by a suspending function:</source>
          <target state="translated">たとえば、要求の実行が一時停止関数によって実装される長時間実行操作である場合でも、着信要求のフローを&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/map.html&quot;&gt;map&lt;/a&gt;演算子を使用して結果にマップできます。</target>
        </trans-unit>
        <trans-unit id="2e26c3138f6c624545fd6a6aad2743d30af7ee6e" translate="yes" xml:space="preserve">
          <source>For example, adding &lt;code&gt;-Xjsr305=ignore -Xjsr305=under-migration:ignore -Xjsr305=@org.library.MyNullable:warn&lt;/code&gt; to the compiler arguments makes the compiler generate warnings for inappropriate usages of types annotated by &lt;code&gt;@org.library.MyNullable&lt;/code&gt; and ignore all other JSR-305 annotations.</source>
          <target state="translated">たとえば、コンパイラの引数に &lt;code&gt;-Xjsr305=ignore -Xjsr305=under-migration:ignore -Xjsr305=@org.library.MyNullable:warn&lt;/code&gt; を &lt;code&gt;@org.library.MyNullable&lt;/code&gt; と、@ org.library.MyNullableで注釈された型の不適切な使用についてコンパイラが警告を生成します。他のすべてのJSR-305アノテーションを無視します。</target>
        </trans-unit>
        <trans-unit id="62105b32ee578f8ede398419b9b2ca8e4ed39f3b" translate="yes" xml:space="preserve">
          <source>For example, adding the following Java class:</source>
          <target state="translated">例えば、次のようなJavaクラスを追加します。</target>
        </trans-unit>
        <trans-unit id="dab56c033fb818b17a2304677b82687c948e0a7a" translate="yes" xml:space="preserve">
          <source>For example, all Kotlin/Native features are available in the &lt;code&gt;desktopMain&lt;/code&gt; source set, which targets the Linux (&lt;code&gt;linuxX64&lt;/code&gt;), Windows (&lt;code&gt;mingwX64&lt;/code&gt;), and macOS (&lt;code&gt;macosX64&lt;/code&gt;) platforms.</source>
          <target state="translated">たとえば、すべてのKotlin / Native機能は、Linux（ &lt;code&gt;linuxX64&lt;/code&gt; ）、Windows（ &lt;code&gt;mingwX64&lt;/code&gt; ）、およびmacOS（ &lt;code&gt;macosX64&lt;/code&gt; ）プラットフォームを対象とする &lt;code&gt;desktopMain&lt;/code&gt; ソースセットで利用できます。</target>
        </trans-unit>
        <trans-unit id="4193b4063b3d43ab900d6cd8095c217fab2d7411" translate="yes" xml:space="preserve">
          <source>For example, assume that you write several modules in Kotlin and then want to access them from Swift. Since usage of several Kotlin/Native frameworks in one Swift application is limited, you can create a single umbrella framework and export all these modules to it.</source>
          <target state="translated">例えば、いくつかのモジュールをKotlinで書いて、Swiftからアクセスしたいとします。1つのSwiftアプリケーションで複数のKotlin/Nativeフレームワークを使うことは限られているので、1つのアンブレラフレームワークを作成して、これらのモジュールをすべてエクスポートすることができます。</target>
        </trans-unit>
        <trans-unit id="832f00e15259c77d71ad8af88dd5a825997e47be" translate="yes" xml:space="preserve">
          <source>For example, check out the following source set hierarchy from the &lt;code&gt;kotlinx.coroutines&lt;/code&gt; repository:</source>
          <target state="translated">たとえば、 &lt;code&gt;kotlinx.coroutines&lt;/code&gt; リポジトリから次のソースセット階層を確認します。</target>
        </trans-unit>
        <trans-unit id="704304023cf4cdbc372fedca8efa4ba9b344de40" translate="yes" xml:space="preserve">
          <source>For example, consider a module is named &lt;code&gt;kotlin-js-example&lt;/code&gt; and it contains a function named &lt;code&gt;toKeep&lt;/code&gt; in package &lt;code&gt;org.jetbrains.kotlin.examples&lt;/code&gt;. Use the following line:</source>
          <target state="translated">例えば、モジュールの名前は考える &lt;code&gt;kotlin-js-example&lt;/code&gt; と、それはという名前の関数が含まれ &lt;code&gt;toKeep&lt;/code&gt; パッケージで &lt;code&gt;org.jetbrains.kotlin.examples&lt;/code&gt; を。次の行を使用します。</target>
        </trans-unit>
        <trans-unit id="f3edd241ab90f88264f0969b091157c28f1ba684" translate="yes" xml:space="preserve">
          <source>For example, consider a testing library that supports both JUnit and TestNG in the two targets. The library author needs to add an attribute to both targets as follows:</source>
          <target state="translated">例えば、JUnit と TestNG の両方をサポートしているテストライブラリを 2 つのターゲットで考えてみましょう。ライブラリの作者は、以下のように両方のターゲットに属性を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="641f2a599c75215e05083918246b0bfa315daf1f" translate="yes" xml:space="preserve">
          <source>For example, consider the following Kotlin functional interface:</source>
          <target state="translated">例えば、次のようなKotlinの機能インタフェースを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="8a7088c82187d69fd24c496d5effb5a4129e5f41" translate="yes" xml:space="preserve">
          <source>For example, create two iOS targets and the shared source set shown above with the &lt;code&gt;ios()&lt;/code&gt; shortcut:</source>
          <target state="translated">たとえば、2つのiOSターゲットと、上記の共有ソースセットを &lt;code&gt;ios()&lt;/code&gt; ショートカットで作成します。</target>
        </trans-unit>
        <trans-unit id="04ebd0312e545c856b21c7f39080892fd1e967e8" translate="yes" xml:space="preserve">
          <source>For example, here we imitate a closeable resource with the &lt;code&gt;Resource&lt;/code&gt; class, that simply keeps track of how many times it was created by incrementing the &lt;code&gt;acquired&lt;/code&gt; counter and decrementing this counter from its &lt;code&gt;close&lt;/code&gt; function. Let us run a lot of coroutines with the small timeout try acquire this resource from inside of the &lt;code&gt;withTimeout&lt;/code&gt; block after a bit of delay and release it from outside.</source>
          <target state="translated">For example, here we imitate a closeable resource with the &lt;code&gt;Resource&lt;/code&gt; class, that simply keeps track of how many times it was created by incrementing the &lt;code&gt;acquired&lt;/code&gt; counter and decrementing this counter from its &lt;code&gt;close&lt;/code&gt; function. Let us run a lot of coroutines with the small timeout try acquire this resource from inside of the &lt;code&gt;withTimeout&lt;/code&gt; block after a bit of delay and release it from outside.</target>
        </trans-unit>
        <trans-unit id="f909490e8018194092afc3fb5cdc677fa190965f" translate="yes" xml:space="preserve">
          <source>For example, here's how you can import JQuery into a Kotlin module:</source>
          <target state="translated">例えば、JQueryをKotlinモジュールにインポートする方法は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="37483cc9fb0f554ae163c5d459de77c734124a8f" translate="yes" xml:space="preserve">
          <source>For example, if OV = 1.0 and NV = 1.1, you can observe one of the following warnings:</source>
          <target state="translated">例えば、OV=1.0、NV=1.1の場合、以下のいずれかの警告が観測されます。</target>
        </trans-unit>
        <trans-unit id="71d788a0eff469c098e19a9c059288c083d43fb6" translate="yes" xml:space="preserve">
          <source>For example, if the numbers in the previous example update every 300ms, but strings update every 400 ms, then zipping them using the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/zip.html&quot;&gt;zip&lt;/a&gt; operator will still produce the same result, albeit results that are printed every 400 ms:</source>
          <target state="translated">たとえば、前の例の数値が300ミリ秒ごとに更新され、文字列が400ミリ秒ごとに更新される場合、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/zip.html&quot;&gt;zip&lt;/a&gt;演算子を使用して数値を圧縮すると、結果は400ミリ秒ごとに出力されますが、同じ結果が生成されます。</target>
        </trans-unit>
        <trans-unit id="7e6d325fa34b0e3eb5a531fab7231604b20e54f9" translate="yes" xml:space="preserve">
          <source>For example, if you choose &quot;Kotlin (Multiplatform Library)&quot;, a library project is created that has three &lt;a href=&quot;#setting-up-targets&quot;&gt;targets&lt;/a&gt;, one for the JVM, one for JS, and one for the Native platform that you are using. These are configured in the &lt;code&gt;build.gradle&lt;/code&gt; script in the following way:</source>
          <target state="translated">たとえば、「Kotlin（マルチプラットフォームライブラリ）」を選択すると、JVM用、JS用、使用しているネイティブプラットフォーム用の3つの&lt;a href=&quot;#setting-up-targets&quot;&gt;ターゲット&lt;/a&gt;を持つライブラリプロジェクトが作成されます。これらは、 &lt;code&gt;build.gradle&lt;/code&gt; スクリプトで次のように構成されます。</target>
        </trans-unit>
        <trans-unit id="f4f19f17d1d471a4b54188968d5495addb34fb43" translate="yes" xml:space="preserve">
          <source>For example, if you have &lt;code&gt;nativeDarwinMain&lt;/code&gt; that is a parent of &lt;code&gt;watchosMain&lt;/code&gt; and &lt;code&gt;iosMain&lt;/code&gt;, where &lt;code&gt;iosMain&lt;/code&gt; has two children &amp;ndash; &lt;code&gt;iosArm64Main&lt;/code&gt; and &lt;code&gt;iosX64Main&lt;/code&gt;, you can use platform-dependent libraries only for &lt;code&gt;iosMain&lt;/code&gt; but not for &lt;code&gt;nativeDarwinMain&lt;/code&gt;.</source>
          <target state="translated">あなたが持っている場合たとえば、 &lt;code&gt;nativeDarwinMain&lt;/code&gt; の親である &lt;code&gt;watchosMain&lt;/code&gt; と &lt;code&gt;iosMain&lt;/code&gt; 、 &lt;code&gt;iosMain&lt;/code&gt; は2人の子供がある- &lt;code&gt;iosArm64Main&lt;/code&gt; と &lt;code&gt;iosX64Main&lt;/code&gt; を、あなたがのためにのみ、プラットフォームに依存するライブラリを使用することができます &lt;code&gt;iosMain&lt;/code&gt; ではなく、ために &lt;code&gt;nativeDarwinMain&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e2cac3c12317d19b9429bd6c154e728f55e225b" translate="yes" xml:space="preserve">
          <source>For example, if you want to check the property name before binding, you can write something like this:</source>
          <target state="translated">例えば、バインドする前にプロパティ名を確認したい場合は、次のように書きます。</target>
        </trans-unit>
        <trans-unit id="bd11627eb611c930e53508e1deef1d4547d10fe0" translate="yes" xml:space="preserve">
          <source>For example, if you want to share code among native Linux, Windows, and macOS targets &amp;ndash; &lt;code&gt;linuxX64M&lt;/code&gt;, &lt;code&gt;mingwX64&lt;/code&gt;, and &lt;code&gt;macosX64&lt;/code&gt;:</source>
          <target state="translated">たとえば、ネイティブのLinux、Windows、およびmacOSターゲット（ &lt;code&gt;linuxX64M&lt;/code&gt; 、 &lt;code&gt;mingwX64&lt;/code&gt; 、および &lt;code&gt;macosX64&lt;/code&gt; )間でコードを共有する場合：</target>
        </trans-unit>
        <trans-unit id="b2e2d9ddd64f99c42afbd7403a3cecd42303d49b" translate="yes" xml:space="preserve">
          <source>For example, if you work a lot with bytes, you might want to easily get an unsigned byte in the range 0 through 255 instead of the default -128 through 127 (the result will have to be in the form of a &lt;code&gt;Short&lt;/code&gt;/&lt;code&gt;Int&lt;/code&gt;/&lt;code&gt;Long&lt;/code&gt;, though). &lt;code&gt;Byte&lt;/code&gt; is a built-in class that you can't modify, but you can define this extension function:</source>
          <target state="translated">たとえば、バイトを多用する場合、デフォルトの-128〜127ではなく、0〜255の範囲の符号なしバイトを簡単に取得できます（結果は &lt;code&gt;Short&lt;/code&gt; / &lt;code&gt;Int&lt;/code&gt; /の形式である必要があります） &lt;code&gt;Long&lt;/code&gt; ですが）。 &lt;code&gt;Byte&lt;/code&gt; は、変更できない組み込みクラスですが、次の拡張関数を定義できます。</target>
        </trans-unit>
        <trans-unit id="a7c94e1bdf5706711377f851804de2d7e3ef7d31" translate="yes" xml:space="preserve">
          <source>For example, if you write this Kotlin function:</source>
          <target state="translated">例えば、このKotlin関数を書くとします。</target>
        </trans-unit>
        <trans-unit id="35d29cc5c415555f3f9e9c97d761b31bad39ad3e" translate="yes" xml:space="preserve">
          <source>For example, in a typical multiplatform project targeting iOS, there are two iOS-related targets: one for iOS ARM64 devices, and the other for the x64 simulator. They have separate platform-specific source sets, but in practice, there is rarely a need for different code for the device and simulator, and their dependencies are much alike. So iOS-specific code could be shared between them.</source>
          <target state="translated">例えば、iOS をターゲットにした典型的なマルチプラットフォームプロジェクトでは、2 つの iOS 関連のターゲットがあります:1 つは iOS ARM64 デバイス用、もう 1 つは x64 シミュレータ用です。これらはプラットフォーム固有のソースセットを持っていますが、実際には、デバイス用とシミュレータ用に異なるコードが必要になることはほとんどありませんし、依存関係も似ています。そのため、iOS固有のコードは、両者の間で共有することができます。</target>
        </trans-unit>
        <trans-unit id="6b38005442c4371bb1bab78bfe3bd82fa513f037" translate="yes" xml:space="preserve">
          <source>For example, in a typical multiplatform project targeting iOS, there are two iOS-related targets: one is for iOS ARM64 devices, the other is for the x64 simulator. They have separate platform-specific source sets, but in practice there is rarely a need for different code for the device and simulator, and their dependencies are much the same. So iOS-specific code could be shared between them.</source>
          <target state="translated">例えば、iOS をターゲットにした典型的なマルチプラットフォームのプロジェクトでは、iOS 関連のターゲットが 2 つあります:1 つは iOS ARM64 デバイス用で、もう 1 つは x64 シミュレータ用です。これらはプラットフォーム固有のソースセットを持っていますが、実際にはデバイス用とシミュレータ用に異なるコードが必要になることはほとんどなく、依存関係はほとんど同じです。そのため、iOS固有のコードは両者の間で共有することができます。</target>
        </trans-unit>
        <trans-unit id="dc2ee7ccaf73dc899619ee5d9d39c7987e388739" translate="yes" xml:space="preserve">
          <source>For example, in the following case there will be no backing field:</source>
          <target state="translated">例えば、以下のような場合は、バッキングフィールドはありません。</target>
        </trans-unit>
        <trans-unit id="eba5f31b0d0acfc6c9acba65d0abda157299e8d3" translate="yes" xml:space="preserve">
          <source>For example, let us emit the text on catching an exception:</source>
          <target state="translated">例えば、例外をキャッチしたときのテキストを出力してみましょう。</target>
        </trans-unit>
        <trans-unit id="3a9c780158db1fc47c1a136b933a65ecc526133e" translate="yes" xml:space="preserve">
          <source>For example, let's make our example a bit more complicated:</source>
          <target state="translated">例えば、この例をもう少し複雑にしてみましょう。</target>
        </trans-unit>
        <trans-unit id="c1839f64eb2ce7573d6701acab747bd62c3838e1" translate="yes" xml:space="preserve">
          <source>For example, on JVM, &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; instances for a primitive type (&lt;code&gt;int&lt;/code&gt;) and the corresponding wrapper type (&lt;code&gt;java.lang.Integer&lt;/code&gt;) are considered equal, because they have the same fully qualified name &quot;kotlin.Int&quot;.</source>
          <target state="translated">たとえば、JVMでは、プリミティブ型（ &lt;code&gt;int&lt;/code&gt; ）と対応するラッパー型（ &lt;code&gt;java.lang.Integer&lt;/code&gt; ）の&lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt;インスタンスは、完全修飾名「kotlin.Int」が同じであるため、等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="a79b9d46260c03cdda6e9ce2b8598593f9f9afa0" translate="yes" xml:space="preserve">
          <source>For example, take a look at the following recursive tree class and a deeply recursive instance of this tree with 100K nodes:</source>
          <target state="translated">例えば、次の再帰ツリー・クラスと、100K ノードを持つこのツリーの深い再帰インスタンスを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="36dc75e0d04d01c4a44b30e1411da2ccccd856ca" translate="yes" xml:space="preserve">
          <source>For example, the C function returning values through pointer parameters can be used like</source>
          <target state="translated">例えば、ポインタパラメータを介して値を返すC言語の関数は、次のように使用することができます。</target>
        </trans-unit>
        <trans-unit id="079a917fd14fe02e329ee98416d6d8eaef4f6689" translate="yes" xml:space="preserve">
          <source>For example, the following Kotlin code:</source>
          <target state="translated">例えば、次のようなKotlinのコード。</target>
        </trans-unit>
        <trans-unit id="441a501295e750bc3dd6bc99e258a8fc324e751a" translate="yes" xml:space="preserve">
          <source>For example, to create a custom compilation for integration tests of the &lt;code&gt;jvm()&lt;/code&gt; target, add a new item to the &lt;code&gt;compilations&lt;/code&gt; collection.</source>
          <target state="translated">たとえば、 &lt;code&gt;jvm()&lt;/code&gt; ターゲットの統合テスト用のカスタムコンパイルを作成するには、 &lt;code&gt;compilations&lt;/code&gt; コレクションに新しいアイテムを追加します。</target>
        </trans-unit>
        <trans-unit id="17bc9d0385f8ddb156c83471c2dbea8b14c1add0" translate="yes" xml:space="preserve">
          <source>For example, to create a target for each of the Kotlin/Native supported platforms (see below), use this code:</source>
          <target state="translated">例えば、Kotlin/Native がサポートしている各プラットフォーム(下記参照)用のターゲットを作成するには、以下のコードを使用します。</target>
        </trans-unit>
        <trans-unit id="17b4ffea3f831eaa0dd821feed12e719a49e8b8e" translate="yes" xml:space="preserve">
          <source>For example, to disable DCE based on a custom condition for the &lt;code&gt;main&lt;/code&gt; source set and always for the &lt;code&gt;test&lt;/code&gt; code, add the following lines to the build script:</source>
          <target state="translated">たとえば、 &lt;code&gt;main&lt;/code&gt; ソースセットと常に &lt;code&gt;test&lt;/code&gt; コードのカスタム条件に基づいてDCEを無効にするには、ビルドスクリプトに次の行を追加します。</target>
        </trans-unit>
        <trans-unit id="c1fc9a8c70cfcfdd6cead18244a7f9b16785d956" translate="yes" xml:space="preserve">
          <source>For example, to test the shared code in &lt;code&gt;commonMain&lt;/code&gt;:</source>
          <target state="translated">たとえば、 &lt;code&gt;commonMain&lt;/code&gt; で共有コードをテストするには：</target>
        </trans-unit>
        <trans-unit id="1984d74c07cbb7e1c0e09e9461fdcf6834185b4f" translate="yes" xml:space="preserve">
          <source>For example, to use a custom registry for npm packages, add the following line to a file called &lt;code&gt;.yarnrc&lt;/code&gt; in the project root:</source>
          <target state="translated">たとえば、npmパッケージのカスタムレジストリを使用するには、プロジェクトルートの &lt;code&gt;.yarnrc&lt;/code&gt; というファイルに次の行を追加します。</target>
        </trans-unit>
        <trans-unit id="912a24bde5d1d28481923f565b9636c709d4bec9" translate="yes" xml:space="preserve">
          <source>For example, using &lt;code&gt;transform&lt;/code&gt; we can emit a string before performing a long-running asynchronous request and follow it with a response:</source>
          <target state="translated">たとえば、 &lt;code&gt;transform&lt;/code&gt; を使用すると、長時間実行される非同期要求を実行する前に文字列を発行し、それに続いて応答を返すことができます。</target>
        </trans-unit>
        <trans-unit id="ea832a104c40fd95a84c4acdc0a08b99ee9f0124" translate="yes" xml:space="preserve">
          <source>For example, we can add UTF-16 tests on JVM. Just follow the same steps as before, but create file in &lt;code&gt;jvmTest/kotlin/jetbrains/base64&lt;/code&gt;:</source>
          <target state="translated">たとえば、JVMにUTF-16テストを追加できます。前と同じ手順に従いますが、 &lt;code&gt;jvmTest/kotlin/jetbrains/base64&lt;/code&gt; にファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="54035fabb34ea56c34478a1b8f067c284fb150fe" translate="yes" xml:space="preserve">
          <source>For floating-point numbers, Kotlin provides types &lt;code&gt;Float&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt;. According to the &lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_754&quot;&gt;IEEE 754 standard&lt;/a&gt;, floating point types differ by their &lt;em&gt;decimal place&lt;/em&gt;, that is, how many decimal digits they can store. &lt;code&gt;Float&lt;/code&gt; reflects the IEEE 754 &lt;em&gt;single precision&lt;/em&gt;, while &lt;code&gt;Double&lt;/code&gt; provides &lt;em&gt;double precision&lt;/em&gt;.</source>
          <target state="translated">For floating-point numbers, Kotlin provides types &lt;code&gt;Float&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt; . According to the &lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_754&quot;&gt;IEEE 754 standard&lt;/a&gt;, floating point types differ by their &lt;em&gt;decimal place&lt;/em&gt;, that is, how many decimal digits they can store. &lt;code&gt;Float&lt;/code&gt; reflects the IEEE 754 &lt;em&gt;single precision&lt;/em&gt;, while &lt;code&gt;Double&lt;/code&gt; provides &lt;em&gt;double precision&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="4bbcf5e1acf1d0538a87cdcded2402b6469d470f" translate="yes" xml:space="preserve">
          <source>For fully stable versions of the compiler the default binary compatibility protocol is the following:</source>
          <target state="translated">コンパイラの完全に安定したバージョンでは、デフォルトのバイナリ互換性プロトコルは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="e8f9fdf99c65b69f7ad811712f6d29d4c6cae3b0" translate="yes" xml:space="preserve">
          <source>For functional interfaces, you can use SAM conversions that help make your code more concise and readable by using &lt;a href=&quot;lambdas#lambda-expressions-and-anonymous-functions&quot;&gt;lambda expressions&lt;/a&gt;.</source>
          <target state="translated">関数型インターフェースの場合、&lt;a href=&quot;lambdas#lambda-expressions-and-anonymous-functions&quot;&gt;ラムダ式&lt;/a&gt;を使用することでコードをより簡潔で読みやすくするのに役立つSAM変換を使用できます。</target>
        </trans-unit>
        <trans-unit id="1890ad53fa33283873fb912de74957d361b6491e" translate="yes" xml:space="preserve">
          <source>For generic functions, using &lt;a href=&quot;inline-functions#reified-type-parameters&quot;&gt;reified type parameters&lt;/a&gt; makes the casts such as &lt;code&gt;arg as T&lt;/code&gt; checked, unless &lt;code&gt;arg&lt;/code&gt;'s type has &lt;em&gt;its own&lt;/em&gt; type arguments that are erased.</source>
          <target state="translated">ジェネリック関数の場合、&lt;a href=&quot;inline-functions#reified-type-parameters&quot;&gt;具体化された型パラメーターを使用&lt;/a&gt;すると、 &lt;code&gt;arg&lt;/code&gt; の型に消去される&lt;em&gt;独自の&lt;/em&gt;型引数がない限り、 &lt;code&gt;arg as T&lt;/code&gt; などのキャストがチェックされます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="38b15e10dc47b42201678c7bc8e7f549631406db" translate="yes" xml:space="preserve">
          <source>For information on how to do use each of these tutorials refer to the corresponding section:</source>
          <target state="translated">これらのチュートリアルの使用方法については、対応するセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="53871db63838c21ea25dd734e891b1c31c10f9df" translate="yes" xml:space="preserve">
          <source>For inline markup, KDoc uses the regular &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt; syntax, extended to support a shorthand syntax for linking to other elements in the code.</source>
          <target state="translated">インラインマークアップの場合、KDocは通常の&lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt;構文を使用し、コード内の他の要素にリンクするための省略構文をサポートするように拡張されています。</target>
        </trans-unit>
        <trans-unit id="0a82fb018c66cd1ea1c613ead3f02864bd52e930" translate="yes" xml:space="preserve">
          <source>For instance, given</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="54fe8967f6394a3362a64d10de78a37ca1295329" translate="yes" xml:space="preserve">
          <source>For instance, when you use Spring, you don't need all the classes to be open, but only classes annotated with specific annotations like &lt;code&gt;@Configuration&lt;/code&gt; or &lt;code&gt;@Service&lt;/code&gt;. &lt;em&gt;All-open&lt;/em&gt; allows to specify such annotations.</source>
          <target state="translated">たとえば、Springを使用する場合、すべてのクラスを開く必要はありませんが、 &lt;code&gt;@Configuration&lt;/code&gt; や &lt;code&gt;@Service&lt;/code&gt; などの特定のアノテーションが付けられたクラスのみが必要です。&lt;em&gt;All-open&lt;/em&gt;では、このような注釈を指定できます。</target>
        </trans-unit>
        <trans-unit id="1db2f3f2ab1b3b066a571a2d1a44758b0ea7e142" translate="yes" xml:space="preserve">
          <source>For integer numbers, there are four types with different sizes and, hence, value ranges.</source>
          <target state="translated">整数には、大きさの異なる4つのタイプがあり、したがって、値の範囲が異なります。</target>
        </trans-unit>
        <trans-unit id="b48041b0df69211410cfeb0283fb34b1d30b60cd" translate="yes" xml:space="preserve">
          <source>For interaction with the Document Object Model (DOM), we can use the variable &lt;code&gt;document&lt;/code&gt;. For example, we can set the background color of our website through this object:</source>
          <target state="translated">ドキュメントオブジェクトモデル（DOM）との対話には、変数 &lt;code&gt;document&lt;/code&gt; を使用できます。たとえば、次のオブジェクトを使用してWebサイトの背景色を設定できます。</target>
        </trans-unit>
        <trans-unit id="7aaad9d147155eb1a6a3e244f5b9a2a8a6e149b0" translate="yes" xml:space="preserve">
          <source>For iterating mutable collections, there is &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/index&quot;&gt;&lt;code&gt;MutableIterator&lt;/code&gt;&lt;/a&gt; that extends &lt;code&gt;Iterator&lt;/code&gt; with the element removal function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt;. So, you can remove elements from a collection while iterating it.</source>
          <target state="translated">可変コレクションを反復するために、要素削除関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; で&lt;/a&gt; &lt;code&gt;Iterator&lt;/code&gt; を拡張する&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/index&quot;&gt; &lt;code&gt;MutableIterator&lt;/code&gt; &lt;/a&gt;があります。したがって、コレクションを反復しながら、コレクションから要素を削除できます。</target>
        </trans-unit>
        <trans-unit id="9623eecb005f28baef52cb3adf2863355f3a393f" translate="yes" xml:space="preserve">
          <source>For kotlin versions 1.1.50+/1.2, the default behavior is the same to &lt;code&gt;-Xjsr305=warn&lt;/code&gt;. The &lt;code&gt;strict&lt;/code&gt; value should be considered experimental (more checks may be added to it in the future).</source>
          <target state="translated">kotlinバージョン1.1.50 + / 1.2の場合、デフォルトの動作は &lt;code&gt;-Xjsr305=warn&lt;/code&gt; と同じです。 &lt;code&gt;strict&lt;/code&gt; 値は、実験（複数チェックが将来的にそれに添加することができる）を考慮すべきです。</target>
        </trans-unit>
        <trans-unit id="92918a6e1f987473f03db07133dbcec4ea949af8" translate="yes" xml:space="preserve">
          <source>For library authors</source>
          <target state="translated">図書館の著者の方へ</target>
        </trans-unit>
        <trans-unit id="6cc59502f4a11ebcb9c7bb01b708f5f38029db03" translate="yes" xml:space="preserve">
          <source>For lists, there is a constructor that takes the list size and the initializer function that defines the element value based on its index.</source>
          <target state="translated">リストの場合は、リストのサイズを受け取るコンストラクタと、そのインデックスに基づいて要素の値を定義するイニシャライザ関数があります。</target>
        </trans-unit>
        <trans-unit id="cf7a2b59658422559e19da1a59a94b59966b8fc1" translate="yes" xml:space="preserve">
          <source>For lists, there is a special iterator implementation: &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/index&quot;&gt;&lt;code&gt;ListIterator&lt;/code&gt;&lt;/a&gt;. It supports iterating lists in both directions: forwards and backwards. Backward iteration is implemented by the functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/has-previous&quot;&gt;&lt;code&gt;hasPrevious()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous&quot;&gt;&lt;code&gt;previous()&lt;/code&gt;&lt;/a&gt;. Additionally, the &lt;code&gt;ListIterator&lt;/code&gt; provides information about the element indices with the functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/next-index&quot;&gt;&lt;code&gt;nextIndex()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous-index&quot;&gt;&lt;code&gt;previousIndex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">リストの場合、特別な反復子の実装：&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/index&quot;&gt; &lt;code&gt;ListIterator&lt;/code&gt; があり&lt;/a&gt;ます。それは双方向のリストの反復をサポートします：前方と後方。後方反復は、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/has-previous&quot;&gt; &lt;code&gt;hasPrevious()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous&quot;&gt; &lt;code&gt;previous()&lt;/code&gt; &lt;/a&gt;関数によって実装されます。さらに、 &lt;code&gt;ListIterator&lt;/code&gt; は、要素のインデックスに関する情報を関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/next-index&quot;&gt; &lt;code&gt;nextIndex()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous-index&quot;&gt; &lt;code&gt;previousIndex()&lt;/code&gt; で提供し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="2613f4bb9152895d1f3da19c9b902595c6bf07de" translate="yes" xml:space="preserve">
          <source>For longer documentation comments, place the opening &lt;code&gt;/**&lt;/code&gt; on a separate line and begin each subsequent line with an asterisk:</source>
          <target state="translated">ドキュメントのコメントを長くするには、最初の &lt;code&gt;/**&lt;/code&gt; を別々の行に配置し、後続の各行をアスタリスクで開始します。</target>
        </trans-unit>
        <trans-unit id="65b1c9d3c495af1a58e2d00003c1736af99c56da" translate="yes" xml:space="preserve">
          <source>For medium and large projects the decision may be tough. If you are not ready to update many files right away you may decide to migrate module by module, or continue with gradual migration for modified files only.</source>
          <target state="translated">中規模や大規模なプロジェクトでは、決断は難しいかもしれません。多くのファイルをすぐに更新する準備ができていない場合は、モジュールごとに移行するか、変更されたファイルのみを対象とした段階的な移行を継続するかを決定することができます。</target>
        </trans-unit>
        <trans-unit id="e162067bf7e3d179878c919852cbcdf24e4f2f1f" translate="yes" xml:space="preserve">
          <source>For members declared inside a class:</source>
          <target state="translated">クラス内で宣言されたメンバの場合。</target>
        </trans-unit>
        <trans-unit id="a09f3bfd60f839007a27ec3a24559d939b2a35e4" translate="yes" xml:space="preserve">
          <source>For more complex properties, always put &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; keywords on separate lines:</source>
          <target state="translated">より複雑なプロパティの場合は、 &lt;code&gt;get&lt;/code&gt; キーワードと &lt;code&gt;set&lt;/code&gt; キーワードを常に別々の行に配置します。</target>
        </trans-unit>
        <trans-unit id="2c6d11cb317dc6418f5fe966cb7b00efa9ca9a48" translate="yes" xml:space="preserve">
          <source>For more complicated problems, Kotlin's extensive library of functional operations on collections comes in handy to minimize the boilerplate and turn the code into a linear top-to-bottom and left-to-right fluent data transformation pipeline. For example, the &lt;a href=&quot;http://codeforces.com/contest/1157/problem/B&quot;&gt;Problem B: Long Number&lt;/a&gt; problem takes a simple greedy algorithm to implement and it can be written using this style without a single mutable variable:</source>
          <target state="translated">より複雑な問題については、コトリンのコレクションに対する広範な関数演算ライブラリが定型文を最小限に抑え、コードを上から下へ、左から右へ流れるようなデータ変換パイプラインに変換するのに役立ちます。たとえば、&lt;a href=&quot;http://codeforces.com/contest/1157/problem/B&quot;&gt;問題B：長い数値の&lt;/a&gt;問題は、実装に単純な貪欲なアルゴリズムを使用し、単一の可変変数なしでこのスタイルを使用して記述できます。</target>
        </trans-unit>
        <trans-unit id="1d5be25e2749170b42cd19e1cf3cada665918b60" translate="yes" xml:space="preserve">
          <source>For more detailed information about how to configure the Kotlin/JS IR compiler backend, check out the &lt;a href=&quot;js-ir-compiler&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">Kotlin / JS IRコンパイラバックエンドの設定方法の詳細については、&lt;a href=&quot;js-ir-compiler&quot;&gt;ドキュメントを&lt;/a&gt;確認してください。</target>
        </trans-unit>
        <trans-unit id="c8c7b26bf892e65f4f2f16ff179ebd4da28ea9ec" translate="yes" xml:space="preserve">
          <source>For more details about compatibility issues, see the &lt;code&gt;@JvmDefault&lt;/code&gt;&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/index&quot;&gt;reference page&lt;/a&gt;.</source>
          <target state="translated">互換性の問題の詳細については、 &lt;code&gt;@JvmDefault&lt;/code&gt; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/index&quot;&gt;リファレンスページをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2b8ad66e41103aa7e5d576dd41cf032d9cca536" translate="yes" xml:space="preserve">
          <source>For more details about interface delegation in Kotlin, see &lt;a href=&quot;delegation&quot;&gt;Delegation&lt;/a&gt;.</source>
          <target state="translated">Kotlinのインターフェース委任の詳細については、「&lt;a href=&quot;delegation&quot;&gt;委任&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="ce1f981fa10cfa942808a2637bc3ff1812b1b1ea" translate="yes" xml:space="preserve">
          <source>For more details about the explicit API mode, see the &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/explicit-api-mode.md&quot;&gt;KEEP&lt;/a&gt;.</source>
          <target state="translated">明示的なAPIモードの詳細については、&lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/explicit-api-mode.md&quot;&gt;KEEPを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4f99246268b944cbfb72319adef4c2c06f42700a" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;visibility-modifiers#constructors&quot;&gt;Visibility Modifiers&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;visibility-modifiers#constructors&quot;&gt;可視性修飾子を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1f8c202f6d3fc629243929f6137d51db369ef6ba" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;dynamic&lt;/code&gt; see the &lt;a href=&quot;../../reference/dynamic-type&quot;&gt;reference documentation&lt;/a&gt;.</source>
          <target state="translated">詳細については &lt;code&gt;dynamic&lt;/code&gt; 参照&lt;a href=&quot;../../reference/dynamic-type&quot;&gt;リファレンスドキュメントを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="976d63a365da3100af6d9872785a7fc0f872d0e7" translate="yes" xml:space="preserve">
          <source>For more information about configuring Gradle to target JavaScript please see &lt;a href=&quot;getting-started-gradle/getting-started-with-gradle&quot;&gt;Getting Started with Gradle&lt;/a&gt;.</source>
          <target state="translated">JavaScriptをターゲットとするようにGradleを構成する方法の詳細については、&lt;a href=&quot;getting-started-gradle/getting-started-with-gradle&quot;&gt;「Gradleスタートガイド」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2981d53b555f0875e9e5d88dcca8e5fb54c959d4" translate="yes" xml:space="preserve">
          <source>For more information about crash report symbolication, see the &lt;a href=&quot;native/ios_symbolication&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">クラッシュレポートの記号化の詳細については、&lt;a href=&quot;native/ios_symbolication&quot;&gt;ドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="437cfd1c20eb87cedbe5a61e205f4604fde6642f" translate="yes" xml:space="preserve">
          <source>For more information about default methods in the Java interop, see the &lt;a href=&quot;java-to-kotlin-interop#default-methods-in-interfaces&quot;&gt;documentation&lt;/a&gt; and &lt;a href=&quot;https://blog.jetbrains.com/kotlin/2020/07/kotlin-1-4-m3-generating-default-methods-in-interfaces/&quot;&gt;this blog post&lt;/a&gt;.</source>
          <target state="translated">Java相互運用機能のデフォルトのメソッドの詳細については、&lt;a href=&quot;java-to-kotlin-interop#default-methods-in-interfaces&quot;&gt;ドキュメント&lt;/a&gt;と&lt;a href=&quot;https://blog.jetbrains.com/kotlin/2020/07/kotlin-1-4-m3-generating-default-methods-in-interfaces/&quot;&gt;このブログ投稿を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="774ea3611b559f29112516a74e5203a4072ea27e" translate="yes" xml:space="preserve">
          <source>For more information about delegated properties, see the &lt;a href=&quot;delegated-properties&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">委任されたプロパティの詳細については、&lt;a href=&quot;delegated-properties&quot;&gt;ドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c6ff59fd7a11f10a9972c2d13b56cf93a2a27bb8" translate="yes" xml:space="preserve">
          <source>For more information about operations on collections in Kotlin, see &lt;a href=&quot;collection-operations&quot;&gt;Collection Operations Overview&lt;/a&gt;.</source>
          <target state="translated">Kotlinでの&lt;a href=&quot;collection-operations&quot;&gt;コレクションの操作の&lt;/a&gt;詳細については、「コレクション操作の概要」を参照してください。</target>
        </trans-unit>
        <trans-unit id="8ad663ec8a76f7146da194b1a118509a5854befa" translate="yes" xml:space="preserve">
          <source>For more information about serialization in Kotlin, see the &lt;a href=&quot;https://github.com/Kotlin/kotlinx.serialization/blob/master/docs/serialization-guide.md&quot;&gt;Kotlin Serialization Guide&lt;/a&gt;.</source>
          <target state="translated">Kotlinでのシリアル化の詳細については、&lt;a href=&quot;https://github.com/Kotlin/kotlinx.serialization/blob/master/docs/serialization-guide.md&quot;&gt;Kotlin&lt;/a&gt;シリアル化ガイドを参照してください。</target>
        </trans-unit>
        <trans-unit id="6f6f131a11bc8f9aee46dcc694fdd53ec967e63c" translate="yes" xml:space="preserve">
          <source>For more information about the different types of module outputs, please see &lt;a href=&quot;../working-with-modules/working-with-modules&quot;&gt;Working with Modules&lt;/a&gt;</source>
          <target state="translated">さまざまなタイプのモジュール出力の詳細については&lt;a href=&quot;../working-with-modules/working-with-modules&quot;&gt;、モジュールの操作&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3a2cd17b7118c2ca168f9271f65f8c844c0e1452" translate="yes" xml:space="preserve">
          <source>For more information about using suspending functions in Swift and Objective-C, see the &lt;a href=&quot;native/objc_interop&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">SwiftおよびObjective-Cでサスペンド関数を使用する方法の詳細については、&lt;a href=&quot;native/objc_interop&quot;&gt;ドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1a670969bcee8de36de21a8b92e43600ead5d941" translate="yes" xml:space="preserve">
          <source>For more information on classes and overriding members see &lt;a href=&quot;classes&quot;&gt;Classes&lt;/a&gt; and &lt;a href=&quot;classes#inheritance&quot;&gt;Inheritance&lt;/a&gt;.</source>
          <target state="translated">クラスとオーバーライドメンバーの詳細については、「&lt;a href=&quot;classes&quot;&gt;クラス&lt;/a&gt;と&lt;a href=&quot;classes#inheritance&quot;&gt;継承&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="4f493af417c0883b703c110e5ef635256b757a3b" translate="yes" xml:space="preserve">
          <source>For more information on generic functions see &lt;a href=&quot;generics&quot;&gt;Generics&lt;/a&gt;.</source>
          <target state="translated">ジェネリック関数の詳細については、&lt;a href=&quot;generics&quot;&gt;ジェネリックを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="303071782df80a3b92a14b04beb4abef6a8308f2" translate="yes" xml:space="preserve">
          <source>For more information on the output generated and the instructions for running the application, please see &lt;a href=&quot;../kotlin-to-javascript/kotlin-to-javascript&quot;&gt;Kotlin to JavaScript&lt;/a&gt;</source>
          <target state="translated">生成された出力とアプリケーションの実行手順の詳細については、&lt;a href=&quot;../kotlin-to-javascript/kotlin-to-javascript&quot;&gt;Kotlin to JavaScript&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="bc5273660a5131db46416a5fa7a3772f1b529324" translate="yes" xml:space="preserve">
          <source>For more information on the output generated please see &lt;a href=&quot;../kotlin-to-javascript/kotlin-to-javascript&quot;&gt;Kotlin to JavaScript&lt;/a&gt;</source>
          <target state="translated">生成された出力の詳細については、&lt;a href=&quot;../kotlin-to-javascript/kotlin-to-javascript&quot;&gt;Kotlin to JavaScript&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="daef8b2b4fbdfb10968e7ab8682260feb7d3ad24" translate="yes" xml:space="preserve">
          <source>For more information regarding Coroutines and the different possibilities, check out the reference guide.</source>
          <target state="translated">コルチンや様々な可能性についての詳細は、リファレンスガイドをご覧ください。</target>
        </trans-unit>
        <trans-unit id="b15215288bf8795d3069346c3f31ed3415c1f91f" translate="yes" xml:space="preserve">
          <source>For more information, please refer to the &lt;a href=&quot;coroutines-overview&quot;&gt;coroutine documentation&lt;/a&gt; and &lt;a href=&quot;../tutorials/coroutines/coroutines-basic-jvm&quot;&gt;tutorial&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;coroutines-overview&quot;&gt;コルーチンのドキュメント&lt;/a&gt;と&lt;a href=&quot;../tutorials/coroutines/coroutines-basic-jvm&quot;&gt;チュートリアル&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6eeee62282cd6eaa33fb5a1d8b69933a3a3935f0" translate="yes" xml:space="preserve">
          <source>For more information, please refer to the &lt;a href=&quot;multiplatform&quot;&gt;Multiplatform Programming documentation&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;multiplatform&quot;&gt;マルチプラットフォームプログラミングのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="da87ece52c9509e3c187c92dff775cc4483c1807" translate="yes" xml:space="preserve">
          <source>For more specific cases, there are the functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/reduce&quot;&gt;&lt;code&gt;reduce()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/fold&quot;&gt;&lt;code&gt;fold()&lt;/code&gt;&lt;/a&gt; that apply the provided operation to the collection elements sequentially and return the accumulated result. The operation takes two arguments: the previously accumulated value and the collection element.</source>
          <target state="translated">より具体的なケースとして、提供された操作をコレクション要素に順次適用して累積結果を返す関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/reduce&quot;&gt; &lt;code&gt;reduce()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/fold&quot;&gt; &lt;code&gt;fold()&lt;/code&gt; &lt;/a&gt;があります。操作は2つの引数を取ります。以前に累積された値とコレクション要素です。</target>
        </trans-unit>
        <trans-unit id="d19f8fc3604cb87e709d44b3b66040f7f67ddb86" translate="yes" xml:space="preserve">
          <source>For multiplatform project authors</source>
          <target state="translated">マルチプラットフォームのプロジェクト作成者向け</target>
        </trans-unit>
        <trans-unit id="8fd634783b30e7c10ec073f2f6cf67643a4b61ca" translate="yes" xml:space="preserve">
          <source>For multiplatform projects, &lt;code&gt;@JsExport&lt;/code&gt; is available in common code as well. It only has an effect when compiling for the JavaScript target, and allows you to also export Kotlin declarations that are not platform specific.</source>
          <target state="translated">For multiplatform projects, &lt;code&gt;@JsExport&lt;/code&gt; is available in common code as well. It only has an effect when compiling for the JavaScript target, and allows you to also export Kotlin declarations that are not platform specific.</target>
        </trans-unit>
        <trans-unit id="ab0c4227fc15976eb92034e00419c20be38f5f2a" translate="yes" xml:space="preserve">
          <source>For multiple interfaces, the superclass constructor call should be located first and then each interface should be located in a different line:</source>
          <target state="translated">複数のインタフェースについては、スーパークラスのコンストラクタの呼び出しを最初に配置し、その後、各インタフェースを別の行に配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="bb77545005b94c54066e9d9c8881eb5ff714309f" translate="yes" xml:space="preserve">
          <source>For mutable collections, there are also &lt;em&gt;write operations&lt;/em&gt; that change the collection state. Such operations include adding, removing, and updating elements. Write operations are listed in the &lt;a href=&quot;collection-write&quot;&gt;Write operations&lt;/a&gt; and corresponding sections of &lt;a href=&quot;list-operations#list-write-operations&quot;&gt;List specific operations&lt;/a&gt; and &lt;a href=&quot;map-operations#map-write-operations&quot;&gt;Map specific operations&lt;/a&gt;.</source>
          <target state="translated">変更可能なコレクションの場合、コレクションの状態を変更する&lt;em&gt;書き込み操作&lt;/em&gt;もあります。このような操作には、要素の追加、削除、更新が含まれます。書き込み操作は、&lt;a href=&quot;collection-write&quot;&gt;書き込み操作&lt;/a&gt;と、&lt;a href=&quot;list-operations#list-write-operations&quot;&gt;特定の操作&lt;/a&gt;のリストおよび&lt;a href=&quot;map-operations#map-write-operations&quot;&gt;特定の操作のマップの&lt;/a&gt;対応するセクションにリストされています。</target>
        </trans-unit>
        <trans-unit id="a3baf3d21508354b592c545c75eff6db0181b447" translate="yes" xml:space="preserve">
          <source>For native targets, the following specific blocks are available:</source>
          <target state="translated">ネイティブターゲットの場合、以下のような特定のブロックが利用可能です。</target>
        </trans-unit>
        <trans-unit id="2264476b9fddb2a93fca3dc48b27fc02f976f3a9" translate="yes" xml:space="preserve">
          <source>For other arguments that have an array type, you need to use the array literal syntax (since Kotlin 1.2) or &lt;code&gt;arrayOf(...)&lt;/code&gt;:</source>
          <target state="translated">配列型を持つ他の引数については、配列リテラル構文（Kotlin 1.2以降）または &lt;code&gt;arrayOf(...)&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="23d69b931aacad631808b0d57da21604bca264bd" translate="yes" xml:space="preserve">
          <source>For other combinations of targets, &lt;a href=&quot;mpp-share-on-platforms#configure-the-hierarchical-structure-manually&quot;&gt;create a hierarchy manually&lt;/a&gt; by connecting the source sets with the &lt;code&gt;dependsOn&lt;/code&gt; relation.</source>
          <target state="translated">ターゲットの他の組み合わせについては、ソースセットを &lt;code&gt;dependsOn&lt;/code&gt; リレーションに接続して、&lt;a href=&quot;mpp-share-on-platforms#configure-the-hierarchical-structure-manually&quot;&gt;手動で階層を作成します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="db60979da7e995256bb86e6d0277cb6571c18a2c" translate="yes" xml:space="preserve">
          <source>For pattern syntax reference see &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt;.</source>
          <target state="translated">パターン構文リファレンスについては、&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;パターンを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c6f6d754aa9e873410fd58f825ac72cd1786f800" translate="yes" xml:space="preserve">
          <source>For pattern syntax reference see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#Special_characters_meaning_in_regular_expressions&quot;&gt;MDN RegExp&lt;/a&gt; and &lt;a href=&quot;https://www.w3schools.com/jsref/jsref_obj_regexp.asp&quot;&gt;http://www.w3schools.com/jsref/jsref_obj_regexp.asp&lt;/a&gt;.</source>
          <target state="translated">パターン構文のリファレンスについては、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#Special_characters_meaning_in_regular_expressions&quot;&gt;MDN RegExp&lt;/a&gt;および&lt;a href=&quot;https://www.w3schools.com/jsref/jsref_obj_regexp.asp&quot;&gt;http://www.w3schools.com/jsref/jsref_obj_regexp.aspを参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0eaf01be18c0882488e465a91d26ab2e3e6ce42" translate="yes" xml:space="preserve">
          <source>For pattern syntax reference see &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt;.</source>
          <target state="translated">For pattern syntax reference see &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ce3c36f8dd721e91073e813fbaba0f4b4aa22ac4" translate="yes" xml:space="preserve">
          <source>For platform-specific source sets, the corresponding platform-specific variant of the library is used, while a common standard library is added to the rest. The Kotlin Gradle plugin will select the appropriate JVM standard library depending on the &lt;code&gt;kotlinOptions.jvmTarget&lt;/code&gt;&lt;a href=&quot;#compiler-options&quot;&gt;compiler option&lt;/a&gt; of your Gradle build script.</source>
          <target state="translated">For platform-specific source sets, the corresponding platform-specific variant of the library is used, while a common standard library is added to the rest. The Kotlin Gradle plugin will select the appropriate JVM standard library depending on the &lt;code&gt;kotlinOptions.jvmTarget&lt;/code&gt; &lt;a href=&quot;#compiler-options&quot;&gt;compiler option&lt;/a&gt; of your Gradle build script.</target>
        </trans-unit>
        <trans-unit id="2ad60b45085c8a5cd8e2d844183f41dcb5d2f438" translate="yes" xml:space="preserve">
          <source>For platform-specific source sets, the corresponding platform-specific variant of the library is used, while a common standard library is added to the rest. The Kotlin Gradle plugin will select the appropriate JVM standard library depending on the &lt;code&gt;kotlinOptions.jvmTarget&lt;/code&gt;&lt;a href=&quot;using-gradle#compiler-options&quot;&gt;compiler option&lt;/a&gt; of your Gradle build script</source>
          <target state="translated">プラットフォーム固有のソースセットの場合、ライブラリの対応するプラットフォーム固有のバリアントが使用され、残りには共通の標準ライブラリが追加されます。Kotlin Gradleプラグインは、Gradleビルドスクリプトの &lt;code&gt;kotlinOptions.jvmTarget&lt;/code&gt; &lt;a href=&quot;using-gradle#compiler-options&quot;&gt;コンパイラオプション&lt;/a&gt;に応じて、適切なJVM標準ライブラリを選択します。</target>
        </trans-unit>
        <trans-unit id="6a9e0b7f10700913df962ae53ccb14ac8eace34e" translate="yes" xml:space="preserve">
          <source>For platform-specific source sets, the corresponding platform-specific variant of the library is used, while a common standard library is added to the rest. The Kotlin Gradle plugin will select the appropriate JVM standard library depending on the &lt;code&gt;kotlinOptions.jvmTarget&lt;/code&gt;&lt;a href=&quot;using-gradle#compiler-options&quot;&gt;compiler option&lt;/a&gt; of your Gradle build script.</source>
          <target state="translated">プラットフォーム固有のソースセットの場合、ライブラリの対応するプラットフォーム固有のバリアントが使用され、残りには共通の標準ライブラリが追加されます。Kotlin Gradleプラグインは、Gradleビルドスクリプトの &lt;code&gt;kotlinOptions.jvmTarget&lt;/code&gt; &lt;a href=&quot;using-gradle#compiler-options&quot;&gt;コンパイラオプション&lt;/a&gt;に応じて、適切なJVM標準ライブラリを選択します。</target>
        </trans-unit>
        <trans-unit id="82d4a54b61c92df737ecca3a9a2524b44eaf0db8" translate="yes" xml:space="preserve">
          <source>For properties with an initializer, if the initializer is long, add a line break after the equals sign and indent the initializer by four spaces:</source>
          <target state="translated">初期化子を持つプロパティの場合、初期化子が長い場合は、等号の後に改行を追加し、初期化子を4つのスペースでインデントします。</target>
        </trans-unit>
        <trans-unit id="9cdedbb82fb399140c8019e32038b4c4f46e6185" translate="yes" xml:space="preserve">
          <source>For properties with the getter defined as an expression body, the property type can now be omitted:</source>
          <target state="translated">ゲッターが式ボディとして定義されているプロパティでは、プロパティの型を省略できるようになりました。</target>
        </trans-unit>
        <trans-unit id="1513b20a53870cfed16fd2ad458f8813cde7ede7" translate="yes" xml:space="preserve">
          <source>For release build it embeds bitcode as data.</source>
          <target state="translated">リリースビルドではビットコードをデータとして埋め込んでいます。</target>
        </trans-unit>
        <trans-unit id="6714a4c30aef88bcbb0d4874a73165632b296c1c" translate="yes" xml:space="preserve">
          <source>For removing multiple elements at once, there are the following functions :</source>
          <target state="translated">複数の要素を一度に削除するには、以下の機能があります。</target>
        </trans-unit>
        <trans-unit id="20c6c845cf3cf8582150c5ac201bc9cf26d68f44" translate="yes" xml:space="preserve">
          <source>For removing the first and the last element, there are handy shortcuts &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-first&quot;&gt;&lt;code&gt;removeFirst()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-last&quot;&gt;&lt;code&gt;removeLast()&lt;/code&gt;&lt;/a&gt;. Note that on empty lists, they throw an exception. To receive &lt;code&gt;null&lt;/code&gt; instead, use &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-first-or-null&quot;&gt;&lt;code&gt;removeFirstOrNull()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-last-or-null&quot;&gt;&lt;code&gt;removeLastOrNull()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">For removing the first and the last element, there are handy shortcuts &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-first&quot;&gt; &lt;code&gt;removeFirst()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-last&quot;&gt; &lt;code&gt;removeLast()&lt;/code&gt; &lt;/a&gt;. Note that on empty lists, they throw an exception. To receive &lt;code&gt;null&lt;/code&gt; instead, use &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-first-or-null&quot;&gt; &lt;code&gt;removeFirstOrNull()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-last-or-null&quot;&gt; &lt;code&gt;removeLastOrNull()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b7f712789e7f5f5055614d3977263a4adb68a2d" translate="yes" xml:space="preserve">
          <source>For retrieving a value from a map, you must provide its key as an argument of the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-map/get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; function. The shorthand &lt;code&gt;[key]&lt;/code&gt; syntax is also supported. If the given key is not found, it returns &lt;code&gt;null&lt;/code&gt;. There is also the function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/get-value&quot;&gt;&lt;code&gt;getValue()&lt;/code&gt;&lt;/a&gt; which has slightly different behavior: it throws an exception if the key is not found in the map. Additionally, you have two more options to handle the key absence:</source>
          <target state="translated">マップから値を取得するには、キーを&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-map/get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;関数の引数として提供する必要があります。略記 &lt;code&gt;[key]&lt;/code&gt; 構文もサポートされています。指定されたキーが見つからない場合は、 &lt;code&gt;null&lt;/code&gt; を返します。わずかに異なる動作を持つ関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/get-value&quot;&gt; &lt;code&gt;getValue()&lt;/code&gt; &lt;/a&gt;もあります。キーがマップで見つからない場合、例外をスローします。さらに、キーの不在を処理するためのオプションがさらに2つあります。</target>
        </trans-unit>
        <trans-unit id="c741843158ffd3467a54ce4487c7800f9e54c35c" translate="yes" xml:space="preserve">
          <source>For retrieving an element at a specific position, there is the function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/element-at&quot;&gt;&lt;code&gt;elementAt()&lt;/code&gt;&lt;/a&gt;. Call it with the integer number as an argument, and you'll receive the collection element at the given position. The first element has the position &lt;code&gt;0&lt;/code&gt;, and the last one is &lt;code&gt;(size - 1)&lt;/code&gt;.</source>
          <target state="translated">特定の位置にある要素を取得するために、関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/element-at&quot;&gt; &lt;code&gt;elementAt()&lt;/code&gt; があり&lt;/a&gt;ます。整数を引数としてそれを呼び出すと、指定された位置にコレクション要素を受け取ります。最初の要素の位置は &lt;code&gt;0&lt;/code&gt; で、最後の要素は &lt;code&gt;(size - 1)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="177b96a956022c6a52f796ebedecaf88b1699bf5" translate="yes" xml:space="preserve">
          <source>For running Kotlin/JS projects in the browser, this task is an alias for the &lt;code&gt;browserDevelopmentRun&lt;/code&gt; task (which is also available in Kotlin multiplatform projects). It uses the &lt;a href=&quot;https://webpack.js.org/configuration/dev-server/&quot;&gt;webpack-dev-server&lt;/a&gt; to serve your JavaScript artifacts. If you want to customize the configuration used by &lt;code&gt;webpack-dev-server&lt;/code&gt;, for example adjust the port the server runs on, use the &lt;a href=&quot;#configuring-webpack-bundling&quot;&gt;webpack configuration file&lt;/a&gt;.</source>
          <target state="translated">ブラウザでKotlin / JSプロジェクトを実行する場合、このタスクは &lt;code&gt;browserDevelopmentRun&lt;/code&gt; タスクのエイリアスです（Kotlinマルチプラットフォームプロジェクトでも使用できます）。これは、使用しています&lt;a href=&quot;https://webpack.js.org/configuration/dev-server/&quot;&gt;WebPACKの-devのサーバーを&lt;/a&gt;ご使用のJavaScriptの成果物を提供します。 &lt;code&gt;webpack-dev-server&lt;/code&gt; で使用される構成をカスタマイズする場合、たとえばサーバーが実行されるポートを調整する場合は、&lt;a href=&quot;#configuring-webpack-bundling&quot;&gt;webpack構成ファイルを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="00c64711b2649e9f3a84ca6b11f111e405fc7f95" translate="yes" xml:space="preserve">
          <source>For running Kotlin/JS projects targeting Node.js, the &lt;code&gt;run&lt;/code&gt; task is an alias for the &lt;code&gt;nodeRun&lt;/code&gt; task (which is also available in Kotlin multiplatform projects).</source>
          <target state="translated">Node.jsをターゲットとするKotlin / JSプロジェクトを &lt;code&gt;run&lt;/code&gt; する場合、実行タスクは &lt;code&gt;nodeRun&lt;/code&gt; タスクのエイリアスです（Kotlinマルチプラットフォームプロジェクトでも使用できます）。</target>
        </trans-unit>
        <trans-unit id="0f72bc3d35de51eeefae32ef505b9dad8fdaea6a" translate="yes" xml:space="preserve">
          <source>For running browser tests, the plugin uses &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md&quot;&gt;Headless Chrome&lt;/a&gt; by default. You can also choose other browser to run tests in, by adding the corresponding entries inside the &lt;code&gt;useKarma&lt;/code&gt; section of the build script:</source>
          <target state="translated">ブラウザテストを実行するために、プラグインはデフォルトで&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md&quot;&gt;ヘッドレスChromeを&lt;/a&gt;使用します。ビルドスクリプトの &lt;code&gt;useKarma&lt;/code&gt; セクション内に対応するエントリを追加することにより、テストを実行する他のブラウザを選択することもできます。</target>
        </trans-unit>
        <trans-unit id="b392cd856b69f2efecba62da2529ccf97edcdc2b" translate="yes" xml:space="preserve">
          <source>For some reason you want to rename declaration, e.g. there's common term in JavaScript for a concept provided by the declaration, which in uncommon in Kotlin.</source>
          <target state="translated">何らかの理由で宣言の名前を変更したい場合、例えば、JavaScriptでは宣言で提供される概念のための共通語がありますが、Kotlinでは一般的ではありません。</target>
        </trans-unit>
        <trans-unit id="8158db5e8b246ddad0b2dfbfdebcbf1b90125c6f" translate="yes" xml:space="preserve">
          <source>For some specific use cases, creating a custom compilation may be required. This can be done within the target's &lt;code&gt;compilations&lt;/code&gt; domain object collection. Note that the dependencies need to be set up manually for all custom compilations, and the usage of a custom compilation's outputs is up to the build author. For example, consider a custom compilation for integration tests of a &lt;code&gt;jvm()&lt;/code&gt; target:</source>
          <target state="translated">特定の使用例では、カスタムコンパイルの作成が必要になる場合があります。これは、ターゲットの &lt;code&gt;compilations&lt;/code&gt; ドメインオブジェクトコレクション内で実行できます。すべてのカスタムコンパイルに対して依存関係を手動で設定する必要があることに注意してください。カスタムコンパイルの出力の使用法はビルド作成者次第です。たとえば、 &lt;code&gt;jvm()&lt;/code&gt; ターゲットの統合テストのカスタムコンパイルを考えてみます。</target>
        </trans-unit>
        <trans-unit id="8f20399dce7cafc92e613f156c508b5fbaf82b80" translate="yes" xml:space="preserve">
          <source>For sorting in custom orders or sorting non-comparable objects, there are the functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted-by&quot;&gt;&lt;code&gt;sortedBy()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted-by-descending&quot;&gt;&lt;code&gt;sortedByDescending()&lt;/code&gt;&lt;/a&gt;. They take a selector function that maps collection elements to &lt;code&gt;Comparable&lt;/code&gt; values and sort the collection in natural order of that values.</source>
          <target state="translated">カスタムオーダーでソートや非同等のオブジェクトをソートするために、機能がある&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted-by&quot;&gt; &lt;code&gt;sortedBy()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted-by-descending&quot;&gt; &lt;code&gt;sortedByDescending()&lt;/code&gt; &lt;/a&gt;。それらは、コレクション要素を &lt;code&gt;Comparable&lt;/code&gt; 値にマップするセレクター関数を取り、その値の自然な順序でコレクションをソートします。</target>
        </trans-unit>
        <trans-unit id="8e605d5e5cf082abe698fb8f0e26e6a4f93c3d7f" translate="yes" xml:space="preserve">
          <source>For testing shared code, you can use &lt;a href=&quot;mpp-connect-to-apis&quot;&gt;actual declarations&lt;/a&gt; in your tests.</source>
          <target state="translated">共有コードをテストするために、テストで&lt;a href=&quot;mpp-connect-to-apis&quot;&gt;実際の宣言&lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="06c12102ea94e6d5c34aa4e1cb45ef7a132aadee" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;@JvmDefault&lt;/code&gt; annotation to take effect, the interface must be compiled with an &lt;code&gt;-Xjvm-default&lt;/code&gt; argument. Depending on the case of adding the annotation, specify one of the argument values:</source>
          <target state="translated">&lt;code&gt;@JvmDefault&lt;/code&gt; の注釈を有効にするには、インターフェイスがしてコンパイルする必要があります &lt;code&gt;-Xjvm-default&lt;/code&gt; 引数。注釈を追加する場合に応じて、引数値の1つを指定します。</target>
        </trans-unit>
        <trans-unit id="da62afa580a98e0eb59438fc6f192b8b9be1b649" translate="yes" xml:space="preserve">
          <source>For the &lt;em&gt;prefix&lt;/em&gt; forms &lt;code&gt;++a&lt;/code&gt; and &lt;code&gt;--a&lt;/code&gt; resolution works the same way, and the effect is:</source>
          <target state="translated">以下のための&lt;em&gt;接頭辞&lt;/em&gt;フォーム &lt;code&gt;++a&lt;/code&gt; と &lt;code&gt;--a&lt;/code&gt; 解像度は同じように動作し、効果は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1f7fafe2033f8e575628eabc01789127498dbf01" translate="yes" xml:space="preserve">
          <source>For the CLI, you can compile using gradle as stated in the README (and if you get errors, you can try to do a &lt;code&gt;./gradlew clean&lt;/code&gt;):</source>
          <target state="translated">CLIの場合、READMEに記載されているように、 &lt;code&gt;./gradlew clean&lt;/code&gt; を使用してコンパイルできます（エラーが発生した場合は、。/ gradlew cleanを実行してみてください）。</target>
        </trans-unit>
        <trans-unit id="6b5978de1c0c3fb2925d795946fd3b784f2b5a41" translate="yes" xml:space="preserve">
          <source>For the assignment operations, e.g. &lt;code&gt;a += b&lt;/code&gt;, the compiler performs the following steps:</source>
          <target state="translated">代入演算（例： &lt;code&gt;a += b&lt;/code&gt; では、コンパイラーは次のステップを実行します。</target>
        </trans-unit>
        <trans-unit id="eef30e92a5e5bf4ce6600a6919ba767de7c0b702" translate="yes" xml:space="preserve">
          <source>For the declarative approach, flow has &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/on-completion.html&quot;&gt;onCompletion&lt;/a&gt; intermediate operator that is invoked when the flow has completely collected.</source>
          <target state="translated">宣言型アプローチの場合、フローには、フローが完全に収集されたときに呼び出される&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/on-completion.html&quot;&gt;onCompletion&lt;/a&gt;中間演算子があります。</target>
        </trans-unit>
        <trans-unit id="539d8e13c53ef4abbcf027a9d0068c7cc4e5769d" translate="yes" xml:space="preserve">
          <source>For the details on &lt;code&gt;plus&lt;/code&gt; and &lt;code&gt;minus&lt;/code&gt; operators for maps, see &lt;a href=&quot;map-operations&quot;&gt;Map Specific Operations&lt;/a&gt;. The &lt;a href=&quot;operator-overloading#assignments&quot;&gt;augmented assignment operators&lt;/a&gt;&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt;&lt;code&gt;plusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;+=&lt;/code&gt;) and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus-assign&quot;&gt;&lt;code&gt;minusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;-=&lt;/code&gt;) are also defined for collections. However, for read-only collections, they actually use the &lt;code&gt;plus&lt;/code&gt; or &lt;code&gt;minus&lt;/code&gt; operators and try to assign the result to the same variable. Thus, they are available only on &lt;code&gt;var&lt;/code&gt; read-only collections. For mutable collections, they modify the collection if it's a &lt;code&gt;val&lt;/code&gt;. For more details see &lt;a href=&quot;collection-write&quot;&gt;Collection Write Operations&lt;/a&gt;.</source>
          <target state="translated">詳細については &lt;code&gt;plus&lt;/code&gt; と &lt;code&gt;minus&lt;/code&gt; の演算子のマップのために、参照&lt;a href=&quot;map-operations&quot;&gt;マップ具体的な操作&lt;/a&gt;。&lt;a href=&quot;operator-overloading#assignments&quot;&gt;増強代入演算子&lt;/a&gt;&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt; &lt;code&gt;plusAssign&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;+=&lt;/code&gt; ）と&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus-assign&quot;&gt; &lt;code&gt;minusAssign&lt;/code&gt; は、&lt;/a&gt;（ &lt;code&gt;-=&lt;/code&gt; ）また、コレクションのために定義されています。ただし、読み取り専用のコレクションの場合、実際には &lt;code&gt;plus&lt;/code&gt; または &lt;code&gt;minus&lt;/code&gt; 演算子を使用し、結果を同じ変数に割り当てようとします。したがって、これらは &lt;code&gt;var&lt;/code&gt; 読み取り専用コレクションでのみ使用できます。変更可能なコレクションの場合、 &lt;code&gt;val&lt;/code&gt; であればコレクションを変更します。詳細については、&lt;a href=&quot;collection-write&quot;&gt;コレクションの書き込み操作を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="99ae6cfe21ef096005ae65ac105caaba34a120b7" translate="yes" xml:space="preserve">
          <source>For the list of group-and-fold operations available, see the &lt;a href=&quot;#extension-functions&quot;&gt;extension functions&lt;/a&gt; for &lt;code&gt;Grouping&lt;/code&gt;.</source>
          <target state="translated">使用可能なグループ化および折りたたみ操作のリストについては、 &lt;code&gt;Grouping&lt;/code&gt; &lt;a href=&quot;#extension-functions&quot;&gt;拡張関数&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3d997519fcd24d20831bd6eeaa31e67ced9c303f" translate="yes" xml:space="preserve">
          <source>For the operations in this table, the compiler just resolves the expression in the &lt;em&gt;Translated to&lt;/em&gt; column.</source>
          <target state="translated">この表の操作の場合、コンパイラーは「&lt;em&gt;変換先」&lt;/em&gt;列の式を解決するだけです。</target>
        </trans-unit>
        <trans-unit id="fbe0069c2060f259a02cd894aa164e3831bd4221" translate="yes" xml:space="preserve">
          <source>For the opposite conversion, to turn a pointer into a by-value variable, we call the &lt;code&gt;readValue()&lt;/code&gt; extension function:</source>
          <target state="translated">逆の変換では、ポインターを値 &lt;code&gt;readValue()&lt;/code&gt; 変数に変換するために、readValue（）拡張関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="8f7d074241fa549a9ea4f9b661cdc64b28a3c053" translate="yes" xml:space="preserve">
          <source>For these purposes &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-supervisor-job.html&quot;&gt;SupervisorJob&lt;/a&gt; can be used. It is similar to a regular &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job.html&quot;&gt;Job&lt;/a&gt; with the only exception that cancellation is propagated only downwards. It is easy to demonstrate with an example:</source>
          <target state="translated">これらの目的のために、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-supervisor-job.html&quot;&gt;SupervisorJob&lt;/a&gt;を使用できます。これは通常の&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job.html&quot;&gt;ジョブに&lt;/a&gt;似ていますが、キャンセルが下方にのみ伝搬されるという点が異なります。例を使用して簡単に説明できます。</target>
        </trans-unit>
        <trans-unit id="df1761b46b93e575c969c1e93c41c9c609214097" translate="yes" xml:space="preserve">
          <source>For this reason, you should probably not use a function with side effects as a default value initializer, as the side effects will happen on every call. If you just reference a variable instead of calling a function, the same variable will be read every time the function is invoked: &lt;code&gt;numbers: MutableList&amp;lt;Int&amp;gt; = myMutableList&lt;/code&gt;. If the variable is immutable, each call will see the same value (but if the value itself is mutable, it might change between calls), and if the variable is mutable, each call will see the current value of the variable. Needless to say, these situations easily lead to confusion, so a default value initializer should be either a constant or a function call that always produces a new object with the same value.</source>
          <target state="translated">このため、副作用のある関数はデフォルト値の初期化子として使用しないでください。副作用はすべての呼び出しで発生するためです。関数を呼び出すのではなく変数を参照するだけの場合、関数が呼び出されるたびに同じ変数が読み込まれ &lt;code&gt;numbers: MutableList&amp;lt;Int&amp;gt; = myMutableList&lt;/code&gt; 。変数が不変の場合、各呼び出しは同じ値を参照します（ただし、値自体が変更可能な場合、呼び出し間で変更される可能性があります）。変数が変更可能な場合、各呼び出しは変数の現在の値を参照します。言うまでもなく、これらの状況は簡単に混乱を招くため、デフォルト値のイニシャライザは、定数または常に同じ値の新しいオブジェクトを生成する関数呼び出しのいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="d3b653bd00b4026d91ae27cf19e170d9e5fafb1f" translate="yes" xml:space="preserve">
          <source>For this tutorial, we want to minimize Android project changes, so we add an ordinary dependency from that project to the &lt;code&gt;SharedCode&lt;/code&gt; project. It is also possible to use the &lt;code&gt;kotlin-multiplatform&lt;/code&gt; plugin directly in an Android Gradle project, instead of the &lt;code&gt;kotlin-android&lt;/code&gt; plugin. For more information, please refer to the &lt;a href=&quot;../../reference/multiplatform&quot;&gt;Multiplatform Projects&lt;/a&gt; documentation.</source>
          <target state="translated">このチュートリアルでは、Androidプロジェクトの変更を最小限に抑えるため、そのプロジェクトから &lt;code&gt;SharedCode&lt;/code&gt; プロジェクトに通常の依存関係を追加します。 &lt;code&gt;kotlin-android&lt;/code&gt; プラグインの代わりに、直接Android Gradleプロジェクトで &lt;code&gt;kotlin-multiplatform&lt;/code&gt; プラグインを使用することもできます。詳細については、&lt;a href=&quot;../../reference/multiplatform&quot;&gt;マルチプラットフォームプロジェクトの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="acfdc01062f9c91e04e30ba794fa72188e1b8e21" translate="yes" xml:space="preserve">
          <source>For those who are familiar with &lt;a href=&quot;https://www.reactive-streams.org/&quot;&gt;Reactive Streams&lt;/a&gt; or reactive frameworks such as RxJava and project Reactor, design of the Flow may look very familiar.</source>
          <target state="translated">&lt;a href=&quot;https://www.reactive-streams.org/&quot;&gt;リアクティブストリーム&lt;/a&gt;や、RxJavaやプロジェクトReactorなどのリアクティブフレームワークに精通している人にとっては、フローの設計は非常に馴染みがあるように見えるかもしれません。</target>
        </trans-unit>
        <trans-unit id="2e99967fe57ee7a76a36c8deadb4fec1ccb4886b" translate="yes" xml:space="preserve">
          <source>For traversing collection elements, the Kotlin standard library supports the commonly used mechanism of &lt;em&gt;iterators&lt;/em&gt; &amp;ndash; objects that provide access to the elements sequentially without exposing the underlying structure of the collection. Iterators are useful when you need to process all the elements of a collection one-by-one, for example, print values or make similar updates to them.</source>
          <target state="translated">コレクション要素をトラバースするために、Kotlin標準ライブラリは、一般的に使用される&lt;em&gt;イテレータの&lt;/em&gt;メカニズム、つまりコレクションの基になる構造を公開せずに要素へのアクセスを順次提供するオブジェクトをサポートしてい&lt;em&gt;ます&lt;/em&gt;。イテレータは、コレクションのすべての要素を1つずつ処理する必要がある場合に便利です。たとえば、値を出力したり、要素に同様の更新を行ったりします。</target>
        </trans-unit>
        <trans-unit id="2f68c0b5ebbd06a7445ef5ecca5d9e9d637d9dcb" translate="yes" xml:space="preserve">
          <source>For types that have both representations, the one with a &quot;lvalue&quot; has a mutable &lt;code&gt;.value&lt;/code&gt; property for accessing the value.</source>
          <target state="translated">両方の表現を持つタイプの場合、「lvalue」を持つタイプには、値にアクセスするための変更可能な &lt;code&gt;.value&lt;/code&gt; プロパティがあります。</target>
        </trans-unit>
        <trans-unit id="c1e4f115384861adef16b8b2baffe917e562f4a0" translate="yes" xml:space="preserve">
          <source>For unit testing support, you also need to add a dependency on the &lt;code&gt;kotlin-test-js&lt;/code&gt; artifact.</source>
          <target state="translated">単体テストをサポートするには、 &lt;code&gt;kotlin-test-js&lt;/code&gt; アーティファクトへの依存関係も追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="0441f5dbcdbec58d034875acaee6d1d01ac9a695" translate="yes" xml:space="preserve">
          <source>For using the Kotlin/JS target</source>
          <target state="translated">Kotlin/JSターゲットを使用する場合</target>
        </trans-unit>
        <trans-unit id="a7f1af20e4840cf70de949b8090232e61a581d9c" translate="yes" xml:space="preserve">
          <source>For variables initialized with fractional numbers, the compiler infers the &lt;code&gt;Double&lt;/code&gt; type. To explicitly specify the &lt;code&gt;Float&lt;/code&gt; type for a value, add the suffix &lt;code&gt;f&lt;/code&gt; or &lt;code&gt;F&lt;/code&gt;. If such a value contains more than 6-7 decimal digits, it will be rounded.</source>
          <target state="translated">For variables initialized with fractional numbers, the compiler infers the &lt;code&gt;Double&lt;/code&gt; type. To explicitly specify the &lt;code&gt;Float&lt;/code&gt; type for a value, add the suffix &lt;code&gt;f&lt;/code&gt; or &lt;code&gt;F&lt;/code&gt; . If such a value contains more than 6-7 decimal digits, it will be rounded.</target>
        </trans-unit>
        <trans-unit id="529daec5f1bf826a76cdf0d941f5076d7ea34e5f" translate="yes" xml:space="preserve">
          <source>For very simple read-only properties, consider one-line formatting:</source>
          <target state="translated">非常にシンプルな読み取り専用のプロパティの場合は、1行フォーマットを検討してください。</target>
        </trans-unit>
        <trans-unit id="83137f4dfe213a5a0a964cbac5ecfb9914d1da73" translate="yes" xml:space="preserve">
          <source>Forbid spread operator in signature-polymorphic calls</source>
          <target state="translated">シグネチャポリモーフィックコールでの拡散演算子の禁止</target>
        </trans-unit>
        <trans-unit id="3dd63779dfda05c2ef28c4628ee7e9d8efbf8130" translate="yes" xml:space="preserve">
          <source>Forces the compiler to use specified symbol name for the target &lt;code&gt;external&lt;/code&gt; function.</source>
          <target state="translated">ターゲット &lt;code&gt;external&lt;/code&gt; 関数に指定されたシンボル名を使用するようコンパイラーに強制します。</target>
        </trans-unit>
        <trans-unit id="e69b34f01c97f652d8ef9e0c92a45af9259da382" translate="yes" xml:space="preserve">
          <source>ForeignFetchEventInit</source>
          <target state="translated">ForeignFetchEventInit</target>
        </trans-unit>
        <trans-unit id="75d9182c3bec31e50516efc67fc31601b8525430" translate="yes" xml:space="preserve">
          <source>ForeignFetchOptions</source>
          <target state="translated">ForeignFetchOptions</target>
        </trans-unit>
        <trans-unit id="12a487ec9be62c993fa0b4647bb4e76b66ee7f98" translate="yes" xml:space="preserve">
          <source>ForeignFetchResponse</source>
          <target state="translated">ForeignFetchResponse</target>
        </trans-unit>
        <trans-unit id="b92b85002a3fb316a5c6e08beb73b6cb9ed9d64d" translate="yes" xml:space="preserve">
          <source>FormData</source>
          <target state="translated">FormData</target>
        </trans-unit>
        <trans-unit id="2804d9f16a38553f8238529c90d66e7d7426c150" translate="yes" xml:space="preserve">
          <source>Formats</source>
          <target state="translated">Formats</target>
        </trans-unit>
        <trans-unit id="841f832857c780b47f478b4f21d34d8995af64b8" translate="yes" xml:space="preserve">
          <source>Formatting</source>
          <target state="translated">Formatting</target>
        </trans-unit>
        <trans-unit id="ce0f3fcfa3eec092a3013ce4a7b42696b94dcbc1" translate="yes" xml:space="preserve">
          <source>Formatting control flow statements</source>
          <target state="translated">制御フロー文の書式設定</target>
        </trans-unit>
        <trans-unit id="0bdf2028ee128cef1644ccdc1afa0bcfab5ad779" translate="yes" xml:space="preserve">
          <source>Fortunately, there is a meta-runner already available that takes care of most of the manual work. If not familiar with the concept of TeamCity meta-runners, check the &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Working+with+Meta-Runner&quot;&gt;documentation&lt;/a&gt;. They are very easy and powerful way to introduce custom Runners without the need to write plugins</source>
          <target state="translated">幸いにも、手作業のほとんどを処理するメタランナーがすでに利用可能です。 TeamCityメタランナーの概念に慣れていない場合は、&lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Working+with+Meta-Runner&quot;&gt;ドキュメントを&lt;/a&gt;確認してください。プラグインを作成する必要なく、カスタムランナーを導入するための非常に簡単で強力な方法です。</target>
        </trans-unit>
        <trans-unit id="cf1d2c9702ec3c2c9c19d4853cd487b92618fb0c" translate="yes" xml:space="preserve">
          <source>Forum</source>
          <target state="translated">Forum</target>
        </trans-unit>
        <trans-unit id="3c108296aa2c6b7ffe348740261e9186846c294a" translate="yes" xml:space="preserve">
          <source>FrameType</source>
          <target state="translated">FrameType</target>
        </trans-unit>
        <trans-unit id="3fff0cc68f4be81edcb85632753b99c277aa4fa3" translate="yes" xml:space="preserve">
          <source>Frameworks for Server-side Development with Kotlin</source>
          <target state="translated">Kotlinを使ったサーバーサイド開発のためのフレームワーク</target>
        </trans-unit>
        <trans-unit id="e358664f6beffa8d97e25ecdeedb921b3ec65678" translate="yes" xml:space="preserve">
          <source>Freezable atomic reference is similar to the regular atomic reference, but until frozen behaves like regular box for a reference. After freezing it behaves like an atomic reference, and can only hold a reference to a frozen object.</source>
          <target state="translated">凍結可能な原子参照は通常の原子参照に似ていますが、凍結されるまでは通常の参照用の箱のように振る舞います。凍結後は原子参照のように振る舞い、凍結されたオブジェクトへの参照のみを保持することができます。</target>
        </trans-unit>
        <trans-unit id="c02f140d4e1c43d1f955dd72be8623c93c3777d5" translate="yes" xml:space="preserve">
          <source>FreezableAtomicReference</source>
          <target state="translated">FreezableAtomicReference</target>
        </trans-unit>
        <trans-unit id="80447dec7b683323831bc3898e849011567bb9dd" translate="yes" xml:space="preserve">
          <source>Freezes object subgraph reachable from this object. Frozen objects can be freely shared between threads/workers.</source>
          <target state="translated">このオブジェクトから到達可能なオブジェクトのサブグラフを凍結します。凍結されたオブジェクトは、スレッド/ワーカー間で自由に共有することができます。</target>
        </trans-unit>
        <trans-unit id="b5732305dc8d6bdd9feedc8e8feab21d51a4ad6a" translate="yes" xml:space="preserve">
          <source>Freezing is a runtime operation making a given object subgraph immutable, by modifying the object header so that future mutation attempts throw an &lt;code&gt;InvalidMutabilityException&lt;/code&gt;. It is deep, so if an object has a pointer to other objects - transitive closure of such objects will be frozen. Freezing is a one way transformation, frozen objects cannot be unfrozen. Frozen objects have a nice property that due to their immutability, they can be freely shared between multiple workers/threads without breaking the &quot;mutable XOR shared&quot; invariant.</source>
          <target state="translated">フリーズは、将来のミュー &lt;code&gt;InvalidMutabilityException&lt;/code&gt; 試行がInvalidMutabilityExceptionをスローするようにオブジェクトヘッダーを変更することにより、特定のオブジェクトサブグラフを不変にするランタイム操作です。それは深いので、オブジェクトが他のオブジェクトへのポインタを持っている場合-そのようなオブジェクトの推移的な閉鎖は凍結されます。フリーズは一方向の変換であり、フリーズされたオブジェクトはフリーズ解除できません。凍結されたオブジェクトには不変の性質があるため、「可変XOR共有」不変式を壊すことなく、複数のワーカー/スレッド間で自由に共有できます。</target>
        </trans-unit>
        <trans-unit id="080e2c352b2e6ce4d98cbfd75308fccd2d13b6e7" translate="yes" xml:space="preserve">
          <source>FreezingException</source>
          <target state="translated">FreezingException</target>
        </trans-unit>
        <trans-unit id="3270d126408ac9c895b73a16eb41ad3bd68810c6" translate="yes" xml:space="preserve">
          <source>Frequently - especially if you want a complex return type from a function or a complex key for a map - you'll want a quick and dirty class which only contains some properties, but is still comparable for equality and is usable as a map key. If you create a &lt;em&gt;data class&lt;/em&gt;, you'll get automatic implementations of the following functions: &lt;code&gt;toString()&lt;/code&gt; (which will produce a string containing all the property names and values), &lt;code&gt;equals()&lt;/code&gt; (which will do a per-property &lt;code&gt;equals()&lt;/code&gt;), &lt;code&gt;hashCode()&lt;/code&gt; (which will hash the individual properties and combine the hashes), and the functions that are required to enable Kotlin to destructure an instance of the class into a declaration (&lt;code&gt;component1()&lt;/code&gt;, &lt;code&gt;component2()&lt;/code&gt;, etc.):</source>
          <target state="translated">頻繁に-特に、関数からの複雑な戻り値の型またはマップの複雑なキーが必要な場合-一部のプロパティのみを含み、同等性については比較可能であり、マップキーとして使用可能な迅速でダーティなクラスが必要になります。&lt;em&gt;データクラス&lt;/em&gt;を作成すると、次の関数の自動実装が得られます： &lt;code&gt;toString()&lt;/code&gt; （すべてのプロパティ名と値を含む文字列を生成します）、 &lt;code&gt;equals()&lt;/code&gt; （プロパティごとの &lt;code&gt;equals()&lt;/code&gt; を実行します））、 &lt;code&gt;hashCode()&lt;/code&gt; （個々のプロパティをハッシュしてハッシュを組み合わせる）、およびKotlinがクラスのインスタンスを宣言に &lt;code&gt;component1()&lt;/code&gt; できるようにするために必要な関数（component1（）、 &lt;code&gt;component2()&lt;/code&gt; など）：</target>
        </trans-unit>
        <trans-unit id="eeaebac0ea185354ca4da1eed41ca0237a76e360" translate="yes" xml:space="preserve">
          <source>Frequently, global variables are a source of unintended concurrency issues, so &lt;em&gt;Kotlin/Native&lt;/em&gt; implements the following mechanisms to prevent the unintended sharing of state via global objects:</source>
          <target state="translated">多くの場合、グローバル変数は予期しない同時実行の問題の原因となるため、&lt;em&gt;Kotlin / Native&lt;/em&gt;は次のメカニズムを実装して、グローバルオブジェクトを介した意図しない状態の共有を防止します。</target>
        </trans-unit>
        <trans-unit id="6f534b1669d028d05de6c4f01c61b4cbefdfc68b" translate="yes" xml:space="preserve">
          <source>Frequently, you'll find that during the lifetime of your variable, it only ever needs to refer to one object. Then, you can declare it with &lt;code&gt;val&lt;/code&gt; (for &quot;value&quot;) instead:</source>
          <target state="translated">多くの場合、変数の存続期間中は、1つのオブジェクトを参照するだけで済みます。次に、代わりに &lt;code&gt;val&lt;/code&gt; （「値」用）を使用して宣言できます。</target>
        </trans-unit>
        <trans-unit id="7f1dacd0361126bb8241eaf5f54839027d1b83de" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;Iterable&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Iterable&lt;/code&gt; から</target>
        </trans-unit>
        <trans-unit id="e903d5d97686e54561b32d3001611ffcc2e0a685" translate="yes" xml:space="preserve">
          <source>From Gradle</source>
          <target state="translated">グラドルから</target>
        </trans-unit>
        <trans-unit id="2c1510bd121f7b4adb08915128573cbc22353dad" translate="yes" xml:space="preserve">
          <source>From IntelliJ IDEA</source>
          <target state="translated">IntelliJ IDEAより</target>
        </trans-unit>
        <trans-unit id="46a2318d1812b0419db3c6cf8e568ded984d2f97" translate="yes" xml:space="preserve">
          <source>From Kotlin they will be accessible by the same name &lt;code&gt;filterValid&lt;/code&gt;, but from Java it will be &lt;code&gt;filterValid&lt;/code&gt; and &lt;code&gt;filterValidInt&lt;/code&gt;.</source>
          <target state="translated">Kotlinからは同じ名前 &lt;code&gt;filterValid&lt;/code&gt; でアクセスできますが、Javaからは &lt;code&gt;filterValid&lt;/code&gt; および &lt;code&gt;filterValidInt&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="4b86aa5caa340495b300dfdb7661e78f45617313" translate="yes" xml:space="preserve">
          <source>From Maven</source>
          <target state="translated">メイヴンから</target>
        </trans-unit>
        <trans-unit id="348ba1b21583b3d0701a95f3c648fcbdd98f155f" translate="yes" xml:space="preserve">
          <source>From building data pipelines to productionizing machine learning models, Kotlin can be a great choice for working with data:</source>
          <target state="translated">データパイプラインの構築から機械学習モデルの制作まで、Kotlinはデータを扱う作業に最適です。</target>
        </trans-unit>
        <trans-unit id="63be8821b7dae58ac3edb96332553cab8bfda471" translate="yes" xml:space="preserve">
          <source>From chunks</source>
          <target state="translated">チャンクから</target>
        </trans-unit>
        <trans-unit id="7ab268169d69c739813b410b45da09fd14cd394a" translate="yes" xml:space="preserve">
          <source>From elements</source>
          <target state="translated">要素から</target>
        </trans-unit>
        <trans-unit id="99d7bcb17fff71b248e97c870c311e513e0173a5" translate="yes" xml:space="preserve">
          <source>From function</source>
          <target state="translated">関数から</target>
        </trans-unit>
        <trans-unit id="318000773f13f97f5d3182522f9781bea9ccfb76" translate="yes" xml:space="preserve">
          <source>From now on, instead of specifying dependencies on different variants of the same library in shared and platform-specific source sets where it is used, you should specify a dependency only once in the shared source set.</source>
          <target state="translated">今後は、同じライブラリが使用される共有ソースセットとプラットフォーム固有のソースセットで、同じライブラリの異なるバリアントの依存関係を指定するのではなく、共有ソースセットで一度だけ依存関係を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="d1ee5e7942ed964b13119f8bb7d31b29207aa3b2" translate="yes" xml:space="preserve">
          <source>From the root project folder, execute the build by running</source>
          <target state="translated">ルートプロジェクトフォルダから、以下を実行してビルドを実行します。</target>
        </trans-unit>
        <trans-unit id="a7b57207ffe105a985227c26ccdced3c28406c1e" translate="yes" xml:space="preserve">
          <source>Full definition of the &lt;code&gt;com.example.html&lt;/code&gt; package</source>
          <target state="translated">&lt;code&gt;com.example.html&lt;/code&gt; パッケージの完全な定義</target>
        </trans-unit>
        <trans-unit id="aad1c0dafbf03119fdcdb3c699f48901b1590080" translate="yes" xml:space="preserve">
          <source>Full kotlinx.coroutines API reference</source>
          <target state="translated">完全な kotlinx.coroutines API リファレンス</target>
        </trans-unit>
        <trans-unit id="3bac36b2b7a23e52c764a12f2d4d0fc0a7a0e4d8" translate="yes" xml:space="preserve">
          <source>Fully qualified name of the package this class is located in, from Kotlin's point of view, or empty string if this name does not differ from the JVM's package FQ name. These names can be different in case the JvmPackageName annotation is used. Note that this information is also stored in the corresponding module's &lt;code&gt;.kotlin_module&lt;/code&gt; file.</source>
          <target state="translated">このクラスが配置されているパッケージの完全修飾名。Kotlinから見ると、この名前がJVMのパッケージFQ名と異なる場合は空の文字列。JvmPackageNameアノテーションが使用される場合、これらの名前は異なる場合があります。この情報は、対応するモジュールの &lt;code&gt;.kotlin_module&lt;/code&gt; ファイルにも保存されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="1dcdfd2ec9069a64630d38318805ac58f78ebc9a" translate="yes" xml:space="preserve">
          <source>Function (constructors are not included)</source>
          <target state="translated">関数(コンストラクタは含まれません</target>
        </trans-unit>
        <trans-unit id="035787f0ca20d22e08021c39f72834469799520f" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;max&lt;/code&gt; is a higher-order function, it takes a function value as the second argument. This second argument is an expression that is itself a function, i.e. a function literal, which is equivalent to the following named function:</source>
          <target state="translated">関数 &lt;code&gt;max&lt;/code&gt; は高次関数であり、2番目の引数として関数値を取ります。この2番目の引数は、それ自体が関数である式、つまり、次の名前付き関数と同等の関数リテラルです。</target>
        </trans-unit>
        <trans-unit id="751924331feba79685bd7ca453e7d70d1ee39798" translate="yes" xml:space="preserve">
          <source>Function Declarations</source>
          <target state="translated">関数宣言</target>
        </trans-unit>
        <trans-unit id="da9189d87675a5d44e6310e344886c7fd0a3671f" translate="yes" xml:space="preserve">
          <source>Function References</source>
          <target state="translated">関数リファレンス</target>
        </trans-unit>
        <trans-unit id="5c8224fb885f624660db62da8b1055688dda11c3" translate="yes" xml:space="preserve">
          <source>Function Scope</source>
          <target state="translated">機能範囲</target>
        </trans-unit>
        <trans-unit id="2267d63b26917f9a3715a86c5fd0aa733935b6e4" translate="yes" xml:space="preserve">
          <source>Function Usage</source>
          <target state="translated">関数の利用法</target>
        </trans-unit>
        <trans-unit id="cf18ccbe7924a806aa4ee8d2ed664f4d998e37b0" translate="yes" xml:space="preserve">
          <source>Function corresponding to JavaScript's &lt;code&gt;typeof&lt;/code&gt; operator</source>
          <target state="translated">JavaScriptの &lt;code&gt;typeof&lt;/code&gt; 演算子に対応する関数</target>
        </trans-unit>
        <trans-unit id="301ffb948f7d729015635b11db6553b40624b34f" translate="yes" xml:space="preserve">
          <source>Function declarations</source>
          <target state="translated">関数宣言</target>
        </trans-unit>
        <trans-unit id="b95c3bae5d82738e59f8b16d63717ed67c934752" translate="yes" xml:space="preserve">
          <source>Function formatting</source>
          <target state="translated">関数の書式設定</target>
        </trans-unit>
        <trans-unit id="ce6e413c01f8f88615ada6c7f6d349f7800231ea" translate="yes" xml:space="preserve">
          <source>Function having two &lt;code&gt;Int&lt;/code&gt; parameters with &lt;code&gt;Int&lt;/code&gt; return type:</source>
          <target state="translated">&lt;code&gt;Int&lt;/code&gt; 戻り型の2つの &lt;code&gt;Int&lt;/code&gt; パラメータを持つ関数：</target>
        </trans-unit>
        <trans-unit id="ca665affb7c73b78ff26c871ee3d6b8618de47f7" translate="yes" xml:space="preserve">
          <source>Function literals with receiver</source>
          <target state="translated">レシーバーを使った関数リテラル</target>
        </trans-unit>
        <trans-unit id="d74aadb0539e8ce0c16c1f970d53120878cd40d9" translate="yes" xml:space="preserve">
          <source>Function literals: lambda expressions and anonymous functions</source>
          <target state="translated">関数リテラル:ラムダ式と匿名関数</target>
        </trans-unit>
        <trans-unit id="dbfe0bee331f156c7ece93de6926384c2e325f16" translate="yes" xml:space="preserve">
          <source>Function names</source>
          <target state="translated">関数名</target>
        </trans-unit>
        <trans-unit id="f8d62ea92d3791c590b8073632a146bf910c0f88" translate="yes" xml:space="preserve">
          <source>Function names should use &lt;code&gt;lowerCamelCase&lt;/code&gt; instead of &lt;code&gt;snake_case&lt;/code&gt;.</source>
          <target state="translated">関数名は使うべき &lt;code&gt;lowerCamelCase&lt;/code&gt; の代わりに &lt;code&gt;snake_case&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2357eb920295d3ee4fd2746f790b824f9b769058" translate="yes" xml:space="preserve">
          <source>Function parameters are defined using Pascal notation, i.e. &lt;em&gt;name&lt;/em&gt;: &lt;em&gt;type&lt;/em&gt;. Parameters are separated using commas. Each parameter must be explicitly typed:</source>
          <target state="translated">関数パラメーターは、Pascal表記、つまり&lt;em&gt;name&lt;/em&gt;：&lt;em&gt;type&lt;/em&gt;を使用して定義されます。パラメータはカンマで区切られます。各パラメーターは明示的に入力する必要があります。</target>
        </trans-unit>
        <trans-unit id="5edd24c452ecd10a54093010f4990be666666f06" translate="yes" xml:space="preserve">
          <source>Function parameters can be named when calling functions. This is very convenient when a function has a high number of parameters or default ones.</source>
          <target state="translated">関数を呼び出す際に、関数のパラメータに名前を付けることができます。これは、関数のパラメータの数が多い場合やデフォルトのパラメータを持つ場合に非常に便利です。</target>
        </trans-unit>
        <trans-unit id="85a49cc1f92d081670928800342e92a2a2ac7f85" translate="yes" xml:space="preserve">
          <source>Function parameters can have default values, which are used when a corresponding argument is omitted. This allows for a reduced number of overloads compared to other languages:</source>
          <target state="translated">関数のパラメータはデフォルト値を持つことができ、対応する引数が省略された場合に使用されます。これにより、他の言語に比べてオーバーロードの数を減らすことができます。</target>
        </trans-unit>
        <trans-unit id="e96c3516563981053065b8dc40dcff2e71feb85b" translate="yes" xml:space="preserve">
          <source>Function parameters can have default values, which are used when you skip the corresponding argument. This reduces a number of overloads compared to other languages:</source>
          <target state="translated">関数のパラメータはデフォルト値を持つことができ、それは対応する引数をスキップするときに使用されます。これにより、他の言語に比べてオーバーロードの数を減らすことができます。</target>
        </trans-unit>
        <trans-unit id="807c42249b0922157615f7450853ad54609a2512" translate="yes" xml:space="preserve">
          <source>Function pointers from C and how they look in Kotlin/Native</source>
          <target state="translated">C からの関数ポインタと Kotlin/Native での見え方</target>
        </trans-unit>
        <trans-unit id="0f181fa3f949ca58e990503187b232168a8466d0" translate="yes" xml:space="preserve">
          <source>Function references</source>
          <target state="translated">関数参照</target>
        </trans-unit>
        <trans-unit id="e9bdf065ac1d9b004b177e363e9f91fbf2b96350" translate="yes" xml:space="preserve">
          <source>Function references belong to one of the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-function/index&quot;&gt;&lt;code&gt;KFunction&amp;lt;out R&amp;gt;&lt;/code&gt;&lt;/a&gt; subtypes, depending on the parameter count, e.g. &lt;code&gt;KFunction3&amp;lt;T1, T2, T3, R&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">関数参照は、パラメータ数に応じ&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-function/index&quot;&gt; &lt;code&gt;KFunction&amp;lt;out R&amp;gt;&lt;/code&gt; &lt;/a&gt;、KFunction &amp;lt;out R&amp;gt;サブタイプの1つに属します（例： &lt;code&gt;KFunction3&amp;lt;T1, T2, T3, R&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="264093b03d43cb82bc00558bf0d7756dc478b24e" translate="yes" xml:space="preserve">
          <source>Function references in &lt;code&gt;Unit&lt;/code&gt;-returning functions</source>
          <target state="translated">&lt;code&gt;Unit&lt;/code&gt; 返す関数での関数参照</target>
        </trans-unit>
        <trans-unit id="a31212b4d92d1dae20ef3440ad0c5dd83c9e9ba8" translate="yes" xml:space="preserve">
          <source>Function returning no meaningful value:</source>
          <target state="translated">意味のない値を返す関数。</target>
        </trans-unit>
        <trans-unit id="14644346bcc70a878c3eb265226005a7304bec16" translate="yes" xml:space="preserve">
          <source>Function scope</source>
          <target state="translated">機能範囲</target>
        </trans-unit>
        <trans-unit id="5f274445178a53837ad18098a8c7a5d6fc400cb9" translate="yes" xml:space="preserve">
          <source>Function selection</source>
          <target state="translated">機能選択</target>
        </trans-unit>
        <trans-unit id="bc031b64c0889a188091b33b3ffbe9e95dc3e702" translate="yes" xml:space="preserve">
          <source>Function type</source>
          <target state="translated">関数型</target>
        </trans-unit>
        <trans-unit id="4cf28af51590dee95695351a40b2cc8d5c35812e" translate="yes" xml:space="preserve">
          <source>Function types</source>
          <target state="translated">機能の種類</target>
        </trans-unit>
        <trans-unit id="856adb0347c3f4becd32b9cb22d963c4fe41d845" translate="yes" xml:space="preserve">
          <source>Function types can be combined using parentheses: &lt;code&gt;(Int) -&amp;gt; ((Int) -&amp;gt; Unit)&lt;/code&gt;</source>
          <target state="translated">括弧を使用して関数タイプを組み合わせることができます： &lt;code&gt;(Int) -&amp;gt; ((Int) -&amp;gt; Unit)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c9bebe6feed7f92b3e31e52ccb139bfa1b01661" translate="yes" xml:space="preserve">
          <source>Function types can optionally have an additional &lt;em&gt;receiver&lt;/em&gt; type, which is specified before a dot in the notation: the type &lt;code&gt;A.(B) -&amp;gt; C&lt;/code&gt; represents functions that can be called on a receiver object of &lt;code&gt;A&lt;/code&gt; with a parameter of &lt;code&gt;B&lt;/code&gt; and return a value of &lt;code&gt;C&lt;/code&gt;. &lt;a href=&quot;#function-literals-with-receiver&quot;&gt;Function literals with receiver&lt;/a&gt; are often used along with these types.</source>
          <target state="translated">関数タイプはオプションで、表記のドットの前に指定される追加の&lt;em&gt;レシーバー&lt;/em&gt;タイプを持つことができます &lt;code&gt;A.(B) -&amp;gt; C&lt;/code&gt; タイプA.（B）-&amp;gt; Cは、パラメーター &lt;code&gt;B&lt;/code&gt; で &lt;code&gt;A&lt;/code&gt; のレシーバーオブジェクトで呼び出すことができる関数を表し、 &lt;code&gt;C&lt;/code&gt; の値。&lt;a href=&quot;#function-literals-with-receiver&quot;&gt;レシーバー付きの関数リテラルは&lt;/a&gt;、これらのタイプとともによく使用されます。</target>
        </trans-unit>
        <trans-unit id="3a236cb6147e5b9e87701e732d2fc9707c91fce8" translate="yes" xml:space="preserve">
          <source>Function types with exportable parameters and return types</source>
          <target state="translated">エクスポート可能なパラメータと戻り値の型を持つ関数型</target>
        </trans-unit>
        <trans-unit id="b10d6ef38e7c4bcdf1e94d9d7f107eefec065bab" translate="yes" xml:space="preserve">
          <source>Function usage</source>
          <target state="translated">機能の使い方</target>
        </trans-unit>
        <trans-unit id="2bd25700768632f324f5f85576fee01ec4787a93" translate="yes" xml:space="preserve">
          <source>Function value parameters</source>
          <target state="translated">関数値パラメータ</target>
        </trans-unit>
        <trans-unit id="cbb0a89a817f8245fd4501f682c4b83cd600158e" translate="yes" xml:space="preserve">
          <source>Function with an expression body and inferred return type:</source>
          <target state="translated">式本体と推論された戻り値の型を持つ関数。</target>
        </trans-unit>
        <trans-unit id="e254dfa27f4d6e6266ffbc98f2d086a9dc8f4acb" translate="yes" xml:space="preserve">
          <source>Functional (SAM) interfaces</source>
          <target state="translated">機能(SAM)インターフェース</target>
        </trans-unit>
        <trans-unit id="93672d0aa15105591a1cf3d6e6a482dc5530d9e4" translate="yes" xml:space="preserve">
          <source>Functional interfaces and &lt;a href=&quot;type-aliases&quot;&gt;type aliases&lt;/a&gt; serve different purposes. Type aliases are just names for existing types &amp;ndash; they don't create a new type, while functional interfaces do.</source>
          <target state="translated">機能インターフェイスと&lt;a href=&quot;type-aliases&quot;&gt;タイプエイリアス&lt;/a&gt;は、さまざまな目的を果たします。型エイリアスは既存の型の単なる名前です。関数型インターフェースは作成しますが、新しい型は作成しません。</target>
        </trans-unit>
        <trans-unit id="73de24a0af3f203a01aaaae900771b18c9b4be5f" translate="yes" xml:space="preserve">
          <source>Functional interfaces vs. type aliases</source>
          <target state="translated">機能インターフェイスと型エイリアス</target>
        </trans-unit>
        <trans-unit id="616348e4102e287bce650e93d6e6f0f3f64bef4a" translate="yes" xml:space="preserve">
          <source>Functional operators example: Long Number problem</source>
          <target state="translated">関数演算子の例。長い数の問題</target>
        </trans-unit>
        <trans-unit id="deb4e042b9d6249db97e6680ab8276b237985bd9" translate="yes" xml:space="preserve">
          <source>Functional programming</source>
          <target state="translated">機能的なプログラミング</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="c6cf63bb2db24e88a231a0809e16881a5299ada5" translate="yes" xml:space="preserve">
          <source>Functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/first&quot;&gt;&lt;code&gt;first()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/last&quot;&gt;&lt;code&gt;last()&lt;/code&gt;&lt;/a&gt; also let you search a collection for elements matching a given predicate. When you call &lt;code&gt;first()&lt;/code&gt; with a predicate that tests a collection element, you'll receive the first element on which the predicate yields &lt;code&gt;true&lt;/code&gt;. In turn, &lt;code&gt;last()&lt;/code&gt; with a predicate returns the last element matching it.</source>
          <target state="translated">関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/first&quot;&gt; &lt;code&gt;first()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/last&quot;&gt; &lt;code&gt;last()&lt;/code&gt; を使用&lt;/a&gt;すると、指定された述語に一致する要素のコレクションを検索することもできます。コレクション要素をテストする述語で &lt;code&gt;first()&lt;/code&gt; を呼び出すと、述語が &lt;code&gt;true&lt;/code&gt; を生成する最初の要素を受け取ります。次に、述語を持つ &lt;code&gt;last()&lt;/code&gt; は、それに一致する最後の要素を返します。</target>
        </trans-unit>
        <trans-unit id="9672456d84600d7933765df2e67cde51c9146628" translate="yes" xml:space="preserve">
          <source>Functions act similarly to properties, but can be referenced as two different kinds of types.</source>
          <target state="translated">関数はプロパティと似たような動作をしますが、2種類の異なるタイプとして参照することができます。</target>
        </trans-unit>
        <trans-unit id="38e0c96376951cc87589b6bdee7b1ee1c34c4cd2" translate="yes" xml:space="preserve">
          <source>Functions and annotations specific to the Java platform.</source>
          <target state="translated">Javaプラットフォームに固有の関数とアノテーション。</target>
        </trans-unit>
        <trans-unit id="af02c4bbfc0fd5d261d9a7c1341f5f36cb64fc58" translate="yes" xml:space="preserve">
          <source>Functions and other APIs specific to the JavaScript platform.</source>
          <target state="translated">JavaScriptプラットフォームに特化した関数などのAPI。</target>
        </trans-unit>
        <trans-unit id="1363a53b7740a8dfedddc08cb1096432aefce24a" translate="yes" xml:space="preserve">
          <source>Functions are called the same way as in Python:</source>
          <target state="translated">関数はPythonと同じように呼ばれます。</target>
        </trans-unit>
        <trans-unit id="ffffe56cc8b206d4da2960cd6acff3498dd8bab0" translate="yes" xml:space="preserve">
          <source>Functions are declared with the &lt;code&gt;fun&lt;/code&gt; keyword. For the parameters, you must declare not only their names, but also their types, and you must declare the type of the value the function is intending to return. The body of the function is usually a &lt;em&gt;block&lt;/em&gt;, which is enclosed in curly braces:</source>
          <target state="translated">関数は &lt;code&gt;fun&lt;/code&gt; キーワードで宣言されます。パラメータについては、名前だけでなく型も宣言する必要があり、関数が返す予定の値の型を宣言する必要があります。関数の本体は通常、中括弧で囲まれた&lt;em&gt;block&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="c5cabb16d69d786b4868a7a6a2bf74508116eaf0" translate="yes" xml:space="preserve">
          <source>Functions can be inlined and never get called directly (which happens always except for few situations).</source>
          <target state="translated">関数はインライン化することができ、直接呼び出されることはありません (これはいくつかの状況を除いて常に起こります)。</target>
        </trans-unit>
        <trans-unit id="8ec68d70c5ce9191111e899674a4b364e187fad0" translate="yes" xml:space="preserve">
          <source>Functions can have generic parameters which are specified using angle brackets before the function name:</source>
          <target state="translated">関数は、関数名の前に角括弧を使用して指定された汎用パラメータを持つことができます。</target>
        </trans-unit>
        <trans-unit id="4d36d4585288cfb6e198289cffbd8d27eb25dfa0" translate="yes" xml:space="preserve">
          <source>Functions for string manipulations</source>
          <target state="translated">文字列操作のための関数</target>
        </trans-unit>
        <trans-unit id="bb364910311fce703048fea10e4d919d72d59716" translate="yes" xml:space="preserve">
          <source>Functions for working with text and regular expressions.</source>
          <target state="translated">テキストや正規表現を扱うための関数。</target>
        </trans-unit>
        <trans-unit id="e3e99c9a98e038eb3f95a845b33675a2ad31ed19" translate="yes" xml:space="preserve">
          <source>Functions in Kotlin are declared using the &lt;code&gt;fun&lt;/code&gt; keyword:</source>
          <target state="translated">Functions in Kotlin are declared using the &lt;code&gt;fun&lt;/code&gt; keyword:</target>
        </trans-unit>
        <trans-unit id="d223cff044f05e7b30816ce62b78775dd0b163cd" translate="yes" xml:space="preserve">
          <source>Functions in Kotlin are declared using the &lt;em&gt;fun&lt;/em&gt; keyword:</source>
          <target state="translated">Kotlinの関数は、&lt;em&gt;fun&lt;/em&gt;キーワードを使用して宣言され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="abcf79c145a0740ce76ae03026a3b5f6a374058e" translate="yes" xml:space="preserve">
          <source>Functions marked with the &lt;em&gt;infix&lt;/em&gt; keyword can also be called using the infix notation (omitting the dot and the parentheses for the call). Infix functions must satisfy the following requirements:</source>
          <target state="translated">&lt;em&gt;infix&lt;/em&gt;キーワードでマークされた関数は、infix表記を使用して呼び出すこともできます（呼び出しではドットと括弧を省略します）。中置関数は次の要件を満たしている必要があります。</target>
        </trans-unit>
        <trans-unit id="10e994cc2b3874457f1a3b7ea19e8f59d42dc03b" translate="yes" xml:space="preserve">
          <source>Functions vs Properties</source>
          <target state="translated">関数とプロパティ</target>
        </trans-unit>
        <trans-unit id="605aecda5c91b6b9048a949e9a032b635cbf0a1c" translate="yes" xml:space="preserve">
          <source>Functions with big arity</source>
          <target state="translated">大きなアリティを持つ関数</target>
        </trans-unit>
        <trans-unit id="4263c3e1bd4e555556b6d00bf49afae16b33edd0" translate="yes" xml:space="preserve">
          <source>Functions with block body must always specify return types explicitly, unless it's intended for them to return &lt;code&gt;Unit&lt;/code&gt;, &lt;a href=&quot;#unit-returning-functions&quot;&gt;in which case it is optional&lt;/a&gt;. Kotlin does not infer return types for functions with block bodies because such functions may have complex control flow in the body, and the return type will be non-obvious to the reader (and sometimes even for the compiler).</source>
          <target state="translated">彼らが返すようにするためのものだしない限り、ブロック本体を持つ関数は、常に、明示的に戻り値の型を指定しなければならない &lt;code&gt;Unit&lt;/code&gt; 、&lt;a href=&quot;#unit-returning-functions&quot;&gt;それはオプションであり、その場合には&lt;/a&gt;。Kotlinは、ブロック本体を含む関数の戻り値の型を推測しません。これは、そのような関数の本体に複雑な制御フローがあり、戻り値の型がリーダー（および場合によってはコンパイラー）からは明らかでないためです。</target>
        </trans-unit>
        <trans-unit id="869c75fbf27b8cca960a9441a8a796e1012f6db9" translate="yes" xml:space="preserve">
          <source>Functions with destination are available for filtering, association, grouping, flattening, and other operations. For the complete list of destination operations see the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/index&quot;&gt;Kotlin collections reference&lt;/a&gt;.</source>
          <target state="translated">宛先を持つ関数は、フィルタリング、関連付け、グループ化、フラット化、およびその他の操作に使用できます。宛先オペレーションの完全なリストについては、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/index&quot;&gt;Kotlinコレクションリファレンスを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="ec474f22ddefd224ff67020fbb6ae2182e01b1bd" translate="yes" xml:space="preserve">
          <source>Functions, properties and classes, objects and interfaces can be declared on the &quot;top-level&quot;, i.e. directly inside a package:</source>
          <target state="translated">関数、プロパティ、クラス、オブジェクト、インターフェイスは「トップレベル」、つまりパッケージの中で直接宣言することができます。</target>
        </trans-unit>
        <trans-unit id="64bb8f0fe0b9db02fc735271491aea4157abc344" translate="yes" xml:space="preserve">
          <source>Further discussion</source>
          <target state="translated">さらなる議論</target>
        </trans-unit>
        <trans-unit id="96c5f382ec6718fb0998748d71e7d0240a9b8b4e" translate="yes" xml:space="preserve">
          <source>Further we describe the conventions that regulate operator overloading for different operators.</source>
          <target state="translated">さらに、異なる演算子に対する演算子のオーバーロードを規制する規約を説明します。</target>
        </trans-unit>
        <trans-unit id="047ca54032a1756c098d3bc1a941a0ed8e583df8" translate="yes" xml:space="preserve">
          <source>Future</source>
          <target state="translated">Future</target>
        </trans-unit>
        <trans-unit id="bdeb21a050e1ff6f2a23beb6e6f7287a62d029a3" translate="yes" xml:space="preserve">
          <source>Future is cancelled.</source>
          <target state="translated">未来はキャンセルされました。</target>
        </trans-unit>
        <trans-unit id="62f3171baa5c0fb94afa3426a227046e9f1a7e06" translate="yes" xml:space="preserve">
          <source>Future is scheduled for execution.</source>
          <target state="translated">未来は実行予定です。</target>
        </trans-unit>
        <trans-unit id="195b2c4ef0b579e6fc4df56af690cec04f2f5bb0" translate="yes" xml:space="preserve">
          <source>Future result is computed.</source>
          <target state="translated">将来の結果を計算します。</target>
        </trans-unit>
        <trans-unit id="99e54311d7d01d796e399d911a504c91ce32cd9c" translate="yes" xml:space="preserve">
          <source>FutureState</source>
          <target state="translated">FutureState</target>
        </trans-unit>
        <trans-unit id="e9808cbd1900d3da5151bc3f2b38f18d4b846b48" translate="yes" xml:space="preserve">
          <source>Futures, Promises et al.</source>
          <target state="translated">未来、約束など</target>
        </trans-unit>
        <trans-unit id="d302df4ce43907abad06f077688fdd515b323131" translate="yes" xml:space="preserve">
          <source>Futures, Promises et. al</source>
          <target state="translated">未来、約束など</target>
        </trans-unit>
        <trans-unit id="6dbbfe6588647d02744e6218e0591657f4ee2019" translate="yes" xml:space="preserve">
          <source>Garbage Collection and Reference Counting</source>
          <target state="translated">ゴミの収集と参照カウント</target>
        </trans-unit>
        <trans-unit id="5537dfcf4040a457bb174bf6d48eae1b56f94aab" translate="yes" xml:space="preserve">
          <source>General category &quot;Cc&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Cc」。</target>
        </trans-unit>
        <trans-unit id="3580200580fcd436242306f983f3b3507549a6d0" translate="yes" xml:space="preserve">
          <source>General category &quot;Cf&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Cf」。</target>
        </trans-unit>
        <trans-unit id="fd1d6d98583bd5d286c8c74c0b9f29ebf1956524" translate="yes" xml:space="preserve">
          <source>General category &quot;Cn&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Cn」。</target>
        </trans-unit>
        <trans-unit id="3a106be07363c0507044c963eabc93ed51c9f075" translate="yes" xml:space="preserve">
          <source>General category &quot;Co&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Co」。</target>
        </trans-unit>
        <trans-unit id="03ca4907122b18ef856396c0fa40bcff775e3854" translate="yes" xml:space="preserve">
          <source>General category &quot;Cs&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Cs」。</target>
        </trans-unit>
        <trans-unit id="00468af6d9083b471cf09e0ab8f92739e492618c" translate="yes" xml:space="preserve">
          <source>General category &quot;Ll&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Ll」。</target>
        </trans-unit>
        <trans-unit id="257f5f2650986b8ae0295dd63b1dad60b91f932e" translate="yes" xml:space="preserve">
          <source>General category &quot;Lm&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Lm」。</target>
        </trans-unit>
        <trans-unit id="914f6778c8d6a3a8826bf16e80d3412755d054b5" translate="yes" xml:space="preserve">
          <source>General category &quot;Lo&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Lo」。</target>
        </trans-unit>
        <trans-unit id="fb8a22c756350d8003ac24a1929c70ad4b9d0b0b" translate="yes" xml:space="preserve">
          <source>General category &quot;Lt&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Lt」。</target>
        </trans-unit>
        <trans-unit id="0f887a16535e642a6540462856260b3a206e313f" translate="yes" xml:space="preserve">
          <source>General category &quot;Lu&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Lu」。</target>
        </trans-unit>
        <trans-unit id="1fb16989d2201c63c16c857610395df222c44d9f" translate="yes" xml:space="preserve">
          <source>General category &quot;Mc&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Mc」。</target>
        </trans-unit>
        <trans-unit id="db22004b965686c72aef5fe1a6705573f3aea2fc" translate="yes" xml:space="preserve">
          <source>General category &quot;Me&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「私」。</target>
        </trans-unit>
        <trans-unit id="e13b65d112880a2a8f689b8c3e69658f87c69992" translate="yes" xml:space="preserve">
          <source>General category &quot;Mn&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Mn」。</target>
        </trans-unit>
        <trans-unit id="7274a78e11b5a951cd6f03c870bd0ccefdda3504" translate="yes" xml:space="preserve">
          <source>General category &quot;Nd&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Nd」。</target>
        </trans-unit>
        <trans-unit id="dcce571b632cd78adf2562075b5c74018107e4e8" translate="yes" xml:space="preserve">
          <source>General category &quot;Nl&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Nl」。</target>
        </trans-unit>
        <trans-unit id="9d69dc6d8d9257de7ff5da721565e07f739f0467" translate="yes" xml:space="preserve">
          <source>General category &quot;No&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「いいえ」。</target>
        </trans-unit>
        <trans-unit id="e6d7f297a1537c8c470bb1754fefd41df20e32ee" translate="yes" xml:space="preserve">
          <source>General category &quot;Pc&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Pc」。</target>
        </trans-unit>
        <trans-unit id="6c9a46645388b12163772f1307cbfed28e013f2b" translate="yes" xml:space="preserve">
          <source>General category &quot;Pd&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Pd」。</target>
        </trans-unit>
        <trans-unit id="047b798db60291a961bbe18b169d957b5e8f2ac5" translate="yes" xml:space="preserve">
          <source>General category &quot;Pe&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Pe」。</target>
        </trans-unit>
        <trans-unit id="3be1b8cac97eeb03e34849d57e62caad6a798de0" translate="yes" xml:space="preserve">
          <source>General category &quot;Pf&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Pf」。</target>
        </trans-unit>
        <trans-unit id="f28cc64fbce4cdefe6051ea49212cc4fe7ae6e3b" translate="yes" xml:space="preserve">
          <source>General category &quot;Pi&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Pi」。</target>
        </trans-unit>
        <trans-unit id="ea0f8c2c8c4aaf5e8874fc537f1b92fabfd83b14" translate="yes" xml:space="preserve">
          <source>General category &quot;Po&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Po」。</target>
        </trans-unit>
        <trans-unit id="e6ac096a85e292ce39b00b857c0903ea5e39458f" translate="yes" xml:space="preserve">
          <source>General category &quot;Ps&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Ps」。</target>
        </trans-unit>
        <trans-unit id="2b08ccd66bb2e2119f27b38b956c87ccafcd1bbc" translate="yes" xml:space="preserve">
          <source>General category &quot;Sc&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Sc」。</target>
        </trans-unit>
        <trans-unit id="875265e6a3ae354a48ee9b551342c6834462859a" translate="yes" xml:space="preserve">
          <source>General category &quot;Sk&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Sk」。</target>
        </trans-unit>
        <trans-unit id="1fe1e30af0d3ea99f97e67460fef543e37c2753b" translate="yes" xml:space="preserve">
          <source>General category &quot;Sm&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Sm」。</target>
        </trans-unit>
        <trans-unit id="443a5fada001e01121a65d80a1d54f9e97daa061" translate="yes" xml:space="preserve">
          <source>General category &quot;So&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「だから」。</target>
        </trans-unit>
        <trans-unit id="32eb327deae57fb982c7872b593b2b6b26bc8a9b" translate="yes" xml:space="preserve">
          <source>General category &quot;Zl&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Zl」。</target>
        </trans-unit>
        <trans-unit id="91da17fb5fbcd7c99bc1b5e9d498abeba9e0df66" translate="yes" xml:space="preserve">
          <source>General category &quot;Zp&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Zp」。</target>
        </trans-unit>
        <trans-unit id="117612c710e794318f15c0e6f4ab0b9c45c47361" translate="yes" xml:space="preserve">
          <source>General category &quot;Zs&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様における一般的なカテゴリ「Zs」。</target>
        </trans-unit>
        <trans-unit id="20e6f238bae1caf72a2ca34c802a17fadd4cc9c3" translate="yes" xml:space="preserve">
          <source>Generally Swift argument labels and Objective-C selector pieces are mapped to Kotlin parameter names. Anyway these two concepts have different semantics, so sometimes Swift/Objective-C methods can be imported with a clashing Kotlin signature. In this case the clashing methods can be called from Kotlin using named arguments, e.g.:</source>
          <target state="translated">一般的に、Swiftの引数ラベルとObjective-Cのセレクタの部分はKotlinのパラメータ名にマッピングされます。いずれにしても、この2つの概念は異なるセマンティクスを持っているので、時にはSwift/Objective-Cのメソッドが衝突するKotlinのシグネチャを使ってインポートされることもあります。この場合、衝突するメソッドは名前付き引数を使ってKotlinから呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="f0cc05fd19df56e0eacc01af5e8e38d1225bfd83" translate="yes" xml:space="preserve">
          <source>Generally, avoid using &lt;code&gt;@param&lt;/code&gt; and &lt;code&gt;@return&lt;/code&gt; tags. Instead, incorporate the description of parameters and return values directly into the documentation comment, and add links to parameters wherever they are mentioned. Use &lt;code&gt;@param&lt;/code&gt; and &lt;code&gt;@return&lt;/code&gt; only when a lengthy description is required which doesn't fit into the flow of the main text.</source>
          <target state="translated">一般的には、使用を避ける &lt;code&gt;@param&lt;/code&gt; 及び &lt;code&gt;@return&lt;/code&gt; タグを。代わりに、パラメーターの説明と戻り値をドキュメンテーションコメントに直接組み込み、パラメーターへのリンクを記載されている場所に追加します。 &lt;code&gt;@param&lt;/code&gt; と &lt;code&gt;@return&lt;/code&gt; は、本文の流れに合わない長い説明が必要な場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="29e3d514d55b6125bea56dda15b26eafa5f39066" translate="yes" xml:space="preserve">
          <source>Generally, the contents of a class is sorted in the following order:</source>
          <target state="translated">一般的に、クラスの内容は以下の順番でソートされます。</target>
        </trans-unit>
        <trans-unit id="d7fbe705690a6a1b73ca822febf65f9f439edf39" translate="yes" xml:space="preserve">
          <source>Generate .meta.js and .kjsm files with metadata. Use to create a library</source>
          <target state="translated">.meta.jsと.kjsmファイルをメタデータで生成します。ライブラリの作成に使用します。</target>
        </trans-unit>
        <trans-unit id="001f8d08da61693a2c46468f4e9518d481110b30" translate="yes" xml:space="preserve">
          <source>Generate &lt;code&gt;.meta.js&lt;/code&gt; and &lt;code&gt;.kjsm&lt;/code&gt; files with metadata. Use this option when creating a JS library.</source>
          <target state="translated">生成 &lt;code&gt;.meta.js&lt;/code&gt; と &lt;code&gt;.kjsm&lt;/code&gt; のメタデータファイルを。JSライブラリを作成するときにこのオプションを使用します。</target>
        </trans-unit>
        <trans-unit id="749ba44f18bc31e5613803f750e487c856af288a" translate="yes" xml:space="preserve">
          <source>Generate JS files for specific ECMA version</source>
          <target state="translated">特定のECMAバージョン用のJSファイルを生成</target>
        </trans-unit>
        <trans-unit id="baffdfbdc7b7e90b403385bcfcad05060b54977d" translate="yes" xml:space="preserve">
          <source>Generate code for &lt;code&gt;a.plusAssign(b)&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;a.plusAssign(b)&lt;/code&gt; のコードを生成します。</target>
        </trans-unit>
        <trans-unit id="ca6737eca8bb7217a2a3d4f7aeadd4eef8e6cc44" translate="yes" xml:space="preserve">
          <source>Generate metadata for Java 1.8 reflection on method parameters</source>
          <target state="translated">Java 1.8のメソッド・パラメータへの反映のためのメタデータを生成します。</target>
        </trans-unit>
        <trans-unit id="737f7f190ef8fe985e848f35532ca3dd4e01d4a2" translate="yes" xml:space="preserve">
          <source>Generate metadata for Java 1.8 reflection on method parameters.</source>
          <target state="translated">Java 1.8のメソッド・パラメータへの反映のためのメタデータを生成します。</target>
        </trans-unit>
        <trans-unit id="183b9e807d281d2fcdfa940f891802dccbfe3d82" translate="yes" xml:space="preserve">
          <source>Generate no warnings</source>
          <target state="translated">警告を生成しない</target>
        </trans-unit>
        <trans-unit id="f70272b5aac2f09d0427a00ddf047afb46876629" translate="yes" xml:space="preserve">
          <source>Generate release &lt;code&gt;.dSYM&lt;/code&gt;s on Apple targets by default</source>
          <target state="translated">デフォルトでAppleターゲットにリリース &lt;code&gt;.dSYM&lt;/code&gt; を生成します</target>
        </trans-unit>
        <trans-unit id="250c962bc08b9b28e2eca7ecd5b00831756e4a37" translate="yes" xml:space="preserve">
          <source>Generate source map</source>
          <target state="translated">ソースマップの生成</target>
        </trans-unit>
        <trans-unit id="805c7fcf649a526b73dcdaa07f01ce7a66754439" translate="yes" xml:space="preserve">
          <source>Generate the source map.</source>
          <target state="translated">ソース マップを生成します。</target>
        </trans-unit>
        <trans-unit id="4e121fd0c11320ddcadbde030de322eb06e47f01" translate="yes" xml:space="preserve">
          <source>Generated Framework Headers</source>
          <target state="translated">生成されたフレームワークヘッダ</target>
        </trans-unit>
        <trans-unit id="f04b94c66b16d00a648fc6082eb3dfa21457f5ac" translate="yes" xml:space="preserve">
          <source>Generated Headers File</source>
          <target state="translated">生成されたヘッダファイル</target>
        </trans-unit>
        <trans-unit id="a484168d1b1d183dbb0f84d7d08359bdb29df447" translate="yes" xml:space="preserve">
          <source>Generated overloads for &lt;code&gt;@JvmOverloads&lt;/code&gt; on &lt;code&gt;open&lt;/code&gt; methods should be &lt;code&gt;final&lt;/code&gt;</source>
          <target state="translated">用に生成されたオーバーロード &lt;code&gt;@JvmOverloads&lt;/code&gt; 上の &lt;code&gt;open&lt;/code&gt; 方法がある必要があり &lt;code&gt;final&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d946501e1e2ba7debd1406d8e243b228d0da85d2" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between &lt;a href=&quot;../kotlin/-u-int/-m-i-n_-v-a-l-u-e&quot;&gt;UInt.MIN_VALUE&lt;/a&gt; and &lt;a href=&quot;../kotlin/-u-int/-m-a-x_-v-a-l-u-e&quot;&gt;UInt.MAX_VALUE&lt;/a&gt; (inclusive).</source>
          <target state="translated">&lt;a href=&quot;../kotlin/-u-int/-m-i-n_-v-a-l-u-e&quot;&gt;UInt.MIN_VALUE&lt;/a&gt;と&lt;a href=&quot;../kotlin/-u-int/-m-a-x_-v-a-l-u-e&quot;&gt;UInt.MAX_VALUE&lt;/a&gt;（両端を含む）の間で均一に分散された&lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt;ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="5d92e2b8d802695176ccf8af3fa819c75baf685e" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">生成&lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UINT&lt;/a&gt;均一間に分配ランダム値 &lt;code&gt;0&lt;/code&gt; （含む）と指定&lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;するまで、&lt;/a&gt;結合（排他的に）。</target>
        </trans-unit>
        <trans-unit id="a2c3610e21da179f1a8b45bbc1ed74b6576d1b06" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</target>
        </trans-unit>
        <trans-unit id="c16c379abe1c61ef584ef9af40918bcd9ec2f049" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%2C+kotlin.UInt%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%2C+kotlin.UInt%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">生成&lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UINT&lt;/a&gt;均一指定間に分布乱数値&lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%2C+kotlin.UInt%29%2Ffrom&quot;&gt;から&lt;/a&gt;（包括的）と&lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%2C+kotlin.UInt%29%2Funtil&quot;&gt;なるまで&lt;/a&gt;（排他的）境界を。</target>
        </trans-unit>
        <trans-unit id="a6ba1fbed8d9e3fac55680d552d3665d4e152493" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt,%20kotlin.UInt)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt,%20kotlin.UInt)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</target>
        </trans-unit>
        <trans-unit id="4c70c93a911c0b7e6438702d76fce2c8ea628c12" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">生成&lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UINT&lt;/a&gt;均一指定に分布乱数値&lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;範囲&lt;/a&gt;：から &lt;code&gt;range.start&lt;/code&gt; 含めに &lt;code&gt;range.endInclusive&lt;/code&gt; 含め。</target>
        </trans-unit>
        <trans-unit id="8dd65cae72f943e49cc2ae41331bf9d1f69250ba" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</target>
        </trans-unit>
        <trans-unit id="757b30cdacd9eaaf9012afe9c2732ea102b190e3" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between &lt;a href=&quot;../kotlin/-u-long/-m-i-n_-v-a-l-u-e&quot;&gt;ULong.MIN_VALUE&lt;/a&gt; and &lt;a href=&quot;../kotlin/-u-long/-m-a-x_-v-a-l-u-e&quot;&gt;ULong.MAX_VALUE&lt;/a&gt; (inclusive).</source>
          <target state="translated">&lt;a href=&quot;../kotlin/-u-long/-m-i-n_-v-a-l-u-e&quot;&gt;ULong.MIN_VALUE&lt;/a&gt;と&lt;a href=&quot;../kotlin/-u-long/-m-a-x_-v-a-l-u-e&quot;&gt;ULong.MAX_VALUE&lt;/a&gt;（両端を含む）の間で均一に分散された&lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt;ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="fa35e4a57d086459b2d86d7150d6deae9f1ebdac" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; （両端を含む）から指定された範囲（両端を含まない）&lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;まで&lt;/a&gt;指定された値の間で均一に分散された&lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt;ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="33144cb69e6dde064e67678e0b37e02227d2556e" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</target>
        </trans-unit>
        <trans-unit id="86a5293679cfc4d641d91c7745d099cc5355381d" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%2C+kotlin.ULong%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%2C+kotlin.ULong%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">生成&lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULONG&lt;/a&gt;均一指定間に分布乱数値&lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%2C+kotlin.ULong%29%2Ffrom&quot;&gt;から&lt;/a&gt;（包括的）と&lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%2C+kotlin.ULong%29%2Funtil&quot;&gt;なるまで&lt;/a&gt;（排他的）境界を。</target>
        </trans-unit>
        <trans-unit id="571c162bfe41b0090519000961409bf2cf295446" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong,%20kotlin.ULong)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong,%20kotlin.ULong)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</target>
        </trans-unit>
        <trans-unit id="a6da6d1f8e6d83268cfddc1ca01d028666d50d99" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">生成&lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULONG&lt;/a&gt;均一指定に分布乱数値&lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;範囲&lt;/a&gt;：から &lt;code&gt;range.start&lt;/code&gt; 含めに &lt;code&gt;range.endInclusive&lt;/code&gt; 含め。</target>
        </trans-unit>
        <trans-unit id="5e80f4926dc7d92cc6dee1e8e9af3efd28995f96" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</target>
        </trans-unit>
        <trans-unit id="9d6b5d91e9590b09d5869bda06c3e6b0bf73ab0a" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between 0 (inclusive) and &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive).</source>
          <target state="translated">0（包括的）と&lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt;（排他的）の間で均一に分散された &lt;code&gt;Double&lt;/code&gt; ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="91641ec2d14eb7e455748acbcf43e0b4c007143e" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between 0 (inclusive) and &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive).</source>
          <target state="translated">Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between 0 (inclusive) and &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive).</target>
        </trans-unit>
        <trans-unit id="ec5869eeef0508f5a390633c4af337b342951d4d" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between 0 (inclusive) and &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive).</source>
          <target state="translated">0（包括的）と&lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt;（排他的）の間で均一に分散された &lt;code&gt;Double&lt;/code&gt; ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="68dd638f66fc56c5c11edb82000c96813df7cf4b" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between 0 (inclusive) and &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive).</source>
          <target state="translated">Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between 0 (inclusive) and &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive).</target>
        </trans-unit>
        <trans-unit id="23183f2a00cc05d170d3187fadb1b4c9530eeaa1" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">生成 &lt;code&gt;Double&lt;/code&gt; 均一指定間に分布乱数値&lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Ffrom&quot;&gt;から&lt;/a&gt;（包括的）と&lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Funtil&quot;&gt;なるまで&lt;/a&gt;（排他的）境界を。</target>
        </trans-unit>
        <trans-unit id="ef7ac639e2e7ec84ae2359772ffc6d7c437f649c" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</target>
        </trans-unit>
        <trans-unit id="2c885277e3d75b6a7d820f8993b27b0ea1ed1831" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">生成 &lt;code&gt;Double&lt;/code&gt; 均一指定間に分布乱数値&lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Ffrom&quot;&gt;から&lt;/a&gt;（包括的）と&lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Funtil&quot;&gt;なるまで&lt;/a&gt;（排他的）境界を。</target>
        </trans-unit>
        <trans-unit id="a4f7d5668372b6590c7eb64a6f021af20dc8aa57" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</target>
        </trans-unit>
        <trans-unit id="5a6b4f88da0f76f60921086afa057e783981746d" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; （両端を含む）から指定された範囲（両端を含まない）&lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;まで&lt;/a&gt;指定された値の間で均一に分散された &lt;code&gt;Long&lt;/code&gt; ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="4198d2f02645aa2957746f80f20b6382783fc050" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</target>
        </trans-unit>
        <trans-unit id="60c65d3b69ec73d8ccba96a172c16774c259c15d" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; （両端を含む）から指定された範囲（両端を含まない）&lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;まで&lt;/a&gt;指定された値の間で均一に分散された &lt;code&gt;Long&lt;/code&gt; ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="d96f28ee28e4008fd557d78da4f4444c595a9d9c" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</target>
        </trans-unit>
        <trans-unit id="ab109e5e8d3d0e327a16d9897abb1724c9e3febe" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; and &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; (inclusive).</source>
          <target state="translated">&lt;code&gt;Long.MIN_VALUE&lt;/code&gt; と &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; （両端を含む）の間で均一に分散された &lt;code&gt;Long&lt;/code&gt; ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="e607b06de9bc2f244a31f0349072809203ea1b71" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">生成 &lt;code&gt;Long&lt;/code&gt; 均一指定間に分布乱数値&lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Ffrom&quot;&gt;から&lt;/a&gt;（包括的）と&lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Funtil&quot;&gt;なるまで&lt;/a&gt;（排他的）境界が。</target>
        </trans-unit>
        <trans-unit id="f753b1cf30a047d83984aa4faf8120492d72c062" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</target>
        </trans-unit>
        <trans-unit id="e9f12bef09f7fda69f9bcf34d36b4a468e06795d" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">生成 &lt;code&gt;Long&lt;/code&gt; 均一指定間に分布乱数値&lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Ffrom&quot;&gt;から&lt;/a&gt;（包括的）と&lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Funtil&quot;&gt;なるまで&lt;/a&gt;（排他的）境界が。</target>
        </trans-unit>
        <trans-unit id="8243c6d6b812487d1a1813dc5042ebef33d06cec" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</target>
        </trans-unit>
        <trans-unit id="2ca32feb98c1f1a296ae0d442d2374d09519129f" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">生成 &lt;code&gt;Long&lt;/code&gt; 均一指定に分布乱数値&lt;a href=&quot;next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;範囲&lt;/a&gt;：から &lt;code&gt;range.start&lt;/code&gt; 含めに &lt;code&gt;range.endInclusive&lt;/code&gt; 含め。</target>
        </trans-unit>
        <trans-unit id="fe2ce194a7ecf13435936d2c4bee554f03333334" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</target>
        </trans-unit>
        <trans-unit id="0f136df27ab0868f4bf0a7576712f622b78145c2" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; （両端を含む）から指定された範囲（両端を含まない）&lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;まで&lt;/a&gt;指定された &lt;code&gt;Int&lt;/code&gt; ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="67f97d87f9890969756382145b17b9c9839973c1" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</target>
        </trans-unit>
        <trans-unit id="ec98b0a06fdbd7a82ef2f666365c49873e613a82" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; （両端を含む）から指定された範囲（両端を含まない）&lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;まで&lt;/a&gt;指定された &lt;code&gt;Int&lt;/code&gt; ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="51d973853786060c9dde56f61e8065ed21f9c9aa" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</target>
        </trans-unit>
        <trans-unit id="04f70d4706957e55f4983127f5ed29b9491f0f07" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;Int.MIN_VALUE&lt;/code&gt; and &lt;code&gt;Int.MAX_VALUE&lt;/code&gt; (inclusive).</source>
          <target state="translated">&lt;code&gt;Int.MIN_VALUE&lt;/code&gt; と &lt;code&gt;Int.MAX_VALUE&lt;/code&gt; （両端を含む）の間で均一に分散された &lt;code&gt;Int&lt;/code&gt; ランダム値を生成します。</target>
        </trans-unit>
        <trans-unit id="476b2cb5400c0e512ae51d0729074ed01ac8bda4" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">生成 &lt;code&gt;Int&lt;/code&gt; 均一指定間に分布乱数値&lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Ffrom&quot;&gt;から&lt;/a&gt;（包括的）と&lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Funtil&quot;&gt;なるまで&lt;/a&gt;（排他的）境界が。</target>
        </trans-unit>
        <trans-unit id="38beaf15a8b3cdd762f7d06821c7323070497438" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</target>
        </trans-unit>
        <trans-unit id="0de235eec64bc5d3abe57854cae11f52092981c6" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">生成 &lt;code&gt;Int&lt;/code&gt; 均一指定間に分布乱数値&lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Ffrom&quot;&gt;から&lt;/a&gt;（包括的）と&lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Funtil&quot;&gt;なるまで&lt;/a&gt;（排他的）境界が。</target>
        </trans-unit>
        <trans-unit id="9cab4b63cd5507a5459c8b009d31e0176441cc9b" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</target>
        </trans-unit>
        <trans-unit id="1c5044362d31a36128faeaa0ad8440d54a5b8752" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">生成 &lt;code&gt;Int&lt;/code&gt; 均一指定に分布乱数値&lt;a href=&quot;next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;の範囲は&lt;/a&gt;：から &lt;code&gt;range.start&lt;/code&gt; 含めに &lt;code&gt;range.endInclusive&lt;/code&gt; 含め。</target>
        </trans-unit>
        <trans-unit id="ec707b0430137fd2aa951b831dba3c6acda44ab7" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</target>
        </trans-unit>
        <trans-unit id="0409d26d25d18313944791fd4e9f7071a9c95419" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; whose lower &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; bits are filled with random values and the remaining upper bits are zero.</source>
          <target state="translated">下位の&lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt;ビットがランダムな値で埋められ、残りの上位ビットがゼロである &lt;code&gt;Int&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="786960366d9c75f4e056e7152000d23d9f8dd21c" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; whose lower &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; bits are filled with random values and the remaining upper bits are zero.</source>
          <target state="translated">Generates an &lt;code&gt;Int&lt;/code&gt; whose lower &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; bits are filled with random values and the remaining upper bits are zero.</target>
        </trans-unit>
        <trans-unit id="ed35029e5017af43b400a43a4628d6b0d880f06d" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; whose lower &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; bits are filled with random values and the remaining upper bits are zero.</source>
          <target state="translated">下位の&lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt;ビットがランダムな値で埋められ、残りの上位ビットがゼロである &lt;code&gt;Int&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="5c4a56d82e432c297805d4d085dc1fe917016419" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; whose lower &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; bits are filled with random values and the remaining upper bits are zero.</source>
          <target state="translated">Generates an &lt;code&gt;Int&lt;/code&gt; whose lower &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; bits are filled with random values and the remaining upper bits are zero.</target>
        </trans-unit>
        <trans-unit id="1fd83bc9d972c10c11aa356e5d5814078cadb5db" translate="yes" xml:space="preserve">
          <source>Generating Bindings</source>
          <target state="translated">バインディングの生成</target>
        </trans-unit>
        <trans-unit id="1b570d05016f6a7ca8005a2f5e7a392d74fdcfce" translate="yes" xml:space="preserve">
          <source>Generating Documentation</source>
          <target state="translated">ドキュメントの生成</target>
        </trans-unit>
        <trans-unit id="d383d1659362e7239295fb9a0f5f6c1929f87149" translate="yes" xml:space="preserve">
          <source>Generating Kotlin sources</source>
          <target state="translated">Kotlinソースの生成</target>
        </trans-unit>
        <trans-unit id="8551aaa91b99dd56e53754d86f9c806a66101455" translate="yes" xml:space="preserve">
          <source>Generating documentation</source>
          <target state="translated">ドキュメントの生成</target>
        </trans-unit>
        <trans-unit id="2c97da3b7f822c06e7d5650b0879d8583f711e9f" translate="yes" xml:space="preserve">
          <source>Generating external declarations at build time</source>
          <target state="translated">ビルド時の外部宣言の生成</target>
        </trans-unit>
        <trans-unit id="c6b50b1155789f10b71f1d8e7eed8e5f96125848" translate="yes" xml:space="preserve">
          <source>Generating markup with Kotlin code, such as &lt;a href=&quot;https://github.com/Kotlin/kotlinx.html&quot;&gt;HTML&lt;/a&gt; or XML;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Kotlin/kotlinx.html&quot;&gt;HTML&lt;/a&gt;やXML などのKotlinコードでマークアップを生成します。</target>
        </trans-unit>
        <trans-unit id="ecabf0ae993c552c88079cae877c4784c545939c" translate="yes" xml:space="preserve">
          <source>Generating source map</source>
          <target state="translated">ソースマップの生成</target>
        </trans-unit>
        <trans-unit id="c551db814cb760b3eeb8c8927c9cd28545c1386e" translate="yes" xml:space="preserve">
          <source>Generating the Documentation</source>
          <target state="translated">ドキュメントの生成</target>
        </trans-unit>
        <trans-unit id="2968d68104a89b44e3e96456644969cfbe30ace4" translate="yes" xml:space="preserve">
          <source>Generation of default methods is only possible with JVM target bytecode version 1.8 (&lt;code&gt;-jvm-target 1.8&lt;/code&gt;) or higher.</source>
          <target state="translated">デフォルトのメソッドの生成は、JVMターゲットバイトコードバージョン1.8（ &lt;code&gt;-jvm-target 1.8&lt;/code&gt; ）以降でのみ可能です。</target>
        </trans-unit>
        <trans-unit id="83082f46072d254fd933bf6e78414552f2b12960" translate="yes" xml:space="preserve">
          <source>Generic Functions</source>
          <target state="translated">汎用関数</target>
        </trans-unit>
        <trans-unit id="c22e5721464820e7a81c36569ec53083ecc8eb34" translate="yes" xml:space="preserve">
          <source>Generic constraints</source>
          <target state="translated">一般的な制約</target>
        </trans-unit>
        <trans-unit id="cce03127b5a38d4eca19d77a229234d826517c5d" translate="yes" xml:space="preserve">
          <source>Generic enum value access</source>
          <target state="translated">汎用列挙値アクセス</target>
        </trans-unit>
        <trans-unit id="acc8a030fcc7a80f6f90bb435dde9b34b92c8a04" translate="yes" xml:space="preserve">
          <source>Generic feature support for Objc and Swift differ from Kotlin, so the translation will inevitably lose some information, but the features supported retain meaningful information.</source>
          <target state="translated">ObjcとSwiftの一般的な機能サポートはKotlinとは異なるため、翻訳は必然的に情報を失いますが、サポートされている機能は意味のある情報を保持しています。</target>
        </trans-unit>
        <trans-unit id="bac5ea8efabcabc15d0439c3f90e7862ba42db2b" translate="yes" xml:space="preserve">
          <source>Generic feature support for Objective-C and Swift differ from Kotlin, so the translation will inevitably lose some information, but the features supported retain meaningful information.</source>
          <target state="translated">Objective-CとSwiftの一般的な機能サポートはKotlinとは異なるため、翻訳ではどうしても情報が失われてしまいますが、サポートされている機能は意味のある情報を保持しています。</target>
        </trans-unit>
        <trans-unit id="37f5365cdbef14515226dcd384583192170cc525" translate="yes" xml:space="preserve">
          <source>Generic functions</source>
          <target state="translated">汎用関数</target>
        </trans-unit>
        <trans-unit id="e385420208351239c9848b5aa01ee2121d573c3a" translate="yes" xml:space="preserve">
          <source>Generic type parameter (unsupported yet)</source>
          <target state="translated">汎用型パラメータ(未サポート</target>
        </trans-unit>
        <trans-unit id="92a2f746b7830fb83eba6c4cddd355833efd75f2" translate="yes" xml:space="preserve">
          <source>Generic type parameters</source>
          <target state="translated">汎用型パラメータ</target>
        </trans-unit>
        <trans-unit id="4f81bf48fda6a667e13ada0305e9584972f3dbe7" translate="yes" xml:space="preserve">
          <source>Generic types used for Java interoperation with incorrect nullability, e.g. a piece of Java code might add &lt;code&gt;null&lt;/code&gt; into a Kotlin &lt;code&gt;MutableList&amp;lt;String&amp;gt;&lt;/code&gt;, meaning that &lt;code&gt;MutableList&amp;lt;String?&amp;gt;&lt;/code&gt; should be used for working with it;</source>
          <target state="translated">不正な &lt;code&gt;null&lt;/code&gt; 可能性を伴うJava相互運用に使用されるジェネリック型。たとえば、Javaコードの一部がKotlin &lt;code&gt;MutableList&amp;lt;String&amp;gt;&lt;/code&gt; にnullを追加する可能性があります。つまり、 &lt;code&gt;MutableList&amp;lt;String?&amp;gt;&lt;/code&gt; を使用して操作する必要があります。</target>
        </trans-unit>
        <trans-unit id="80dadd86173d0ff3979257793d4e45beb238b6a2" translate="yes" xml:space="preserve">
          <source>Generics</source>
          <target state="translated">Generics</target>
        </trans-unit>
        <trans-unit id="cca07acad0dc1efd73fdb4cb240cc7cfd1e90717" translate="yes" xml:space="preserve">
          <source>Generics are currently not enabled by default. To have the framework header written with generics, add an experimental flag to the compiler config:</source>
          <target state="translated">ジェネリックは現在のところデフォルトでは有効になっていません。フレームワークのヘッダをジェネリックで書かせるには、コンパイラの設定に experimental フラグを追加してください。</target>
        </trans-unit>
        <trans-unit id="55fd76732b46ad77052ac2d3873198cc27caa1b6" translate="yes" xml:space="preserve">
          <source>Generics can only be defined on classes, not on interfaces (protocols in Objc and Swift) or functions.</source>
          <target state="translated">ジェネリックはクラス上でのみ定義でき、インターフェース(ObjcやSwiftのプロトコル)や関数上では定義できません。</target>
        </trans-unit>
        <trans-unit id="f7dda3c2f67629977875e11f967ee30a54f78a53" translate="yes" xml:space="preserve">
          <source>Generics can only be defined on classes, not on interfaces (protocols in Objective-C and Swift) or functions.</source>
          <target state="translated">ジェネリックはクラスでのみ定義でき、インターフェース(Objective-CやSwiftのプロトコル)や関数では定義できません。</target>
        </trans-unit>
        <trans-unit id="1e94ba5be90faaf690548102545dc0952f060022" translate="yes" xml:space="preserve">
          <source>GeometryUtils</source>
          <target state="translated">GeometryUtils</target>
        </trans-unit>
        <trans-unit id="4e3fb78e17a8387a0dee01367cbbd69a1775c579" translate="yes" xml:space="preserve">
          <source>Get a byte from the mutable data.</source>
          <target state="translated">変形可能なデータからバイトを取得します。</target>
        </trans-unit>
        <trans-unit id="bfab0204422bfeb94ae7d9f7a9237c9d9a1e7ba4" translate="yes" xml:space="preserve">
          <source>Get a full report that contains the state of each coroutine and its stack. To obtain it, right-click inside the &lt;strong&gt;Coroutines&lt;/strong&gt; tab, and then click &lt;strong&gt;Get Coroutines Dump&lt;/strong&gt;.</source>
          <target state="translated">Get a full report that contains the state of each coroutine and its stack. To obtain it, right-click inside the &lt;strong&gt;Coroutines&lt;/strong&gt; tab, and then click &lt;strong&gt;Get Coroutines Dump&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="97255b26e50ef02686cad7f6fc1ee00930f7d4a3" translate="yes" xml:space="preserve">
          <source>Get first item of a possibly empty collection</source>
          <target state="translated">空の可能性のあるコレクションの最初の項目を取得</target>
        </trans-unit>
        <trans-unit id="f94eb63ea7b5c688c7d367da8144aa72283d06a2" translate="yes" xml:space="preserve">
          <source>Get started with Kotlin Multiplatform Mobile (KMM)</source>
          <target state="translated">Kotlin Multiplatform Mobile (KMM)のご利用を開始します。</target>
        </trans-unit>
        <trans-unit id="faf571ccb638eecee3197f110247a2246bab11e9" translate="yes" xml:space="preserve">
          <source>Get started with Kotlin/JS for React</source>
          <target state="translated">Kotlin/JS for Reactで始める</target>
        </trans-unit>
        <trans-unit id="ff3e1f71917fbb03ccf0e7c1221d8ba9c76bdecf" translate="yes" xml:space="preserve">
          <source>Get started with Kotlin/Native using IntelliJ IDEA</source>
          <target state="translated">IntelliJ IDEAを使ってKotlin/Nativeを始める</target>
        </trans-unit>
        <trans-unit id="c2e1b35c387fa63896999438c72ee91795fb8ecd" translate="yes" xml:space="preserve">
          <source>GetNotificationOptions</source>
          <target state="translated">GetNotificationOptions</target>
        </trans-unit>
        <trans-unit id="00112e9e707db49f0a0f93f1ee129c6efe3c1bc4" translate="yes" xml:space="preserve">
          <source>GetRootNodeOptions</source>
          <target state="translated">GetRootNodeOptions</target>
        </trans-unit>
        <trans-unit id="0c7c6733bfd36f14bb53c13bb7a5f327d6e85555" translate="yes" xml:space="preserve">
          <source>GetSVGDocument</source>
          <target state="translated">GetSVGDocument</target>
        </trans-unit>
        <trans-unit id="1c29cd0a72813c07e82b51cdf61ab34e19b8d38a" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-char-at#kotlin.native%24getCharAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;../../kotlin.native/get-char-at#kotlin.native%24getCharAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーから&lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Charを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="49b054960ff26f54ffbb1b4ce10fe0dffa2b6894" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-char-at#kotlin.native%24getCharAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-char-at#kotlin.native%24getCharAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12c146ab92ff828f48210bfc29f2a0b851cff183" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-double-at#kotlin.native%24getDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;../../kotlin.native/get-double-at#kotlin.native%24getDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーから&lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Doubleを&lt;/a&gt;取得します</target>
        </trans-unit>
        <trans-unit id="1f529825faff1b1381005dfcdc07db44e0dce4c5" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-double-at#kotlin.native%24getDoubleAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-double-at#kotlin.native%24getDoubleAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c613a964720f0d6b16c4f6f3e24ca409a93e230b" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-float-at#kotlin.native%24getFloatAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;../../kotlin.native/get-float-at#kotlin.native%24getFloatAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーから&lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Floatを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="601935ff15204ec1fc75fdb33f0ddb75d3c32e1e" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-float-at#kotlin.native%24getFloatAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-float-at#kotlin.native%24getFloatAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e40860a0e917d0b30df1c353bdab3718cc1a5cae" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-int-at#kotlin.native%24getIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;../../kotlin.native/get-int-at#kotlin.native%24getIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーから&lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Intを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="57657e63af1c3d11183b11147cc642f679e87be6" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-int-at#kotlin.native%24getIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-int-at#kotlin.native%24getIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba9e4dffcc804ef80ace24233a9a283d9ee2413e" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-long-at#kotlin.native%24getLongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;../../kotlin.native/get-long-at#kotlin.native%24getLongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーから&lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Longを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="e34ce9f4a9cf96bdfab2bc1915bf1ef9c4aa59b4" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-long-at#kotlin.native%24getLongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-long-at#kotlin.native%24getLongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="050c879d6a9b25698d6d451f3f94af42b69689a3" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-short-at#kotlin.native%24getShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;../../kotlin.native/get-short-at#kotlin.native%24getShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーから&lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Shortを&lt;/a&gt;取得します</target>
        </trans-unit>
        <trans-unit id="d86e4ff6a657a1b0f2d8a5e25ddfb8a897e55615" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-short-at#kotlin.native%24getShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-short-at#kotlin.native%24getShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3b81bd33b6cd037160b4cec0ac8e3dda6d1f79b" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-char-at#kotlin.native%24getCharAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;get-char-at#kotlin.native%24getCharAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーから&lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Charを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="1f8022c3c9bee45cfe140c1c30cf3fdd5eed4178" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-char-at#kotlin.native%24getCharAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-char-at#kotlin.native%24getCharAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a9274c2e88dd117f1562e9fb7853c1bb8a76f52" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-double-at#kotlin.native%24getDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;get-double-at#kotlin.native%24getDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーから&lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Doubleを&lt;/a&gt;取得します</target>
        </trans-unit>
        <trans-unit id="b2c0932268f392529c7267cbe6bd33aacf1c5ac0" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-double-at#kotlin.native%24getDoubleAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-double-at#kotlin.native%24getDoubleAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05f14be5d64ee1f27a2c3eebdfd84da241f1b7b5" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-float-at#kotlin.native%24getFloatAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;get-float-at#kotlin.native%24getFloatAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーから&lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Floatを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="b47fbfb16819fea890346bf56370b10e0fe6b09d" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-float-at#kotlin.native%24getFloatAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-float-at#kotlin.native%24getFloatAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19b181f7974529f4fcfdfb7c7df609deb054c407" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-int-at#kotlin.native%24getIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;get-int-at#kotlin.native%24getIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーから&lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Intを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="cba0729c202f994b45075bee2a230e3b803ee8d9" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-int-at#kotlin.native%24getIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-int-at#kotlin.native%24getIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58b0897e8884a67298867d9626c28bef8ba34b98" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-long-at#kotlin.native%24getLongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;get-long-at#kotlin.native%24getLongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーから&lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Longを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="65ded6c3e5b39175169799b69105c25d38f74bba" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-long-at#kotlin.native%24getLongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-long-at#kotlin.native%24getLongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77ab2f99d15b02d7c8aede4c088766c187e76fbe" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-short-at#kotlin.native%24getShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;get-short-at#kotlin.native%24getShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーから&lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Shortを&lt;/a&gt;取得します</target>
        </trans-unit>
        <trans-unit id="eba163b6256c35de7fd91af80a6a1ec957825686" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-short-at#kotlin.native%24getShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-short-at#kotlin.native%24getShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ceba4e0c24f35bc1d24919beac99894fff5cc49e" translate="yes" xml:space="preserve">
          <source>Gets UByte out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-byte-at#kotlin.native%24getUByteAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;get-u-byte-at#kotlin.native%24getUByteAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーからUByteを取得します。</target>
        </trans-unit>
        <trans-unit id="6a93b4ec86defaa569a52c059d53e5a7d37d3efa" translate="yes" xml:space="preserve">
          <source>Gets UByte out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-byte-at#kotlin.native%24getUByteAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets UByte out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-byte-at#kotlin.native%24getUByteAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5443eaf1f8b4d504383ed266ef07407ecf2dec10" translate="yes" xml:space="preserve">
          <source>Gets UByte out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-byte-at#kotlin.native%24getUByteAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;../../kotlin.native/get-u-byte-at#kotlin.native%24getUByteAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーからUByteを取得します。</target>
        </trans-unit>
        <trans-unit id="8e7128204fcd595b514aaa5f54b40f869da3aa3a" translate="yes" xml:space="preserve">
          <source>Gets UByte out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-byte-at#kotlin.native%24getUByteAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets UByte out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-byte-at#kotlin.native%24getUByteAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e56c63ae7abdc2f655dc5a3867f58e6cf8f10ec" translate="yes" xml:space="preserve">
          <source>Gets UInt out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-int-at#kotlin.native%24getUIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;get-u-int-at#kotlin.native%24getUIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーからUIntを取得します。</target>
        </trans-unit>
        <trans-unit id="ff166f5e64d8705b447c57cacfb6ac60ac2b7a3b" translate="yes" xml:space="preserve">
          <source>Gets UInt out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-int-at#kotlin.native%24getUIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets UInt out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-int-at#kotlin.native%24getUIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff8bb654dc35893343272fb488280f04d13917e5" translate="yes" xml:space="preserve">
          <source>Gets UInt out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-int-at#kotlin.native%24getUIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;../../kotlin.native/get-u-int-at#kotlin.native%24getUIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーからUIntを取得します。</target>
        </trans-unit>
        <trans-unit id="68b8029657597c84d727421ce61c5d52481aff8a" translate="yes" xml:space="preserve">
          <source>Gets UInt out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-int-at#kotlin.native%24getUIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets UInt out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-int-at#kotlin.native%24getUIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad23f949f964388c3320ca1484e325ac9c528b96" translate="yes" xml:space="preserve">
          <source>Gets ULong out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-long-at#kotlin.native%24getULongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;get-u-long-at#kotlin.native%24getULongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーからULongを取得します。</target>
        </trans-unit>
        <trans-unit id="7fb406360458354dbfa0420bae21a2778069a23b" translate="yes" xml:space="preserve">
          <source>Gets ULong out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-long-at#kotlin.native%24getULongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets ULong out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-long-at#kotlin.native%24getULongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f09eaa4ed41d19ee2683030c8f94ad668353d816" translate="yes" xml:space="preserve">
          <source>Gets ULong out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-long-at#kotlin.native%24getULongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;../../kotlin.native/get-u-long-at#kotlin.native%24getULongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーからULongを取得します。</target>
        </trans-unit>
        <trans-unit id="546d4f2ac7bd7483f85b8483d95f71b63a5930e9" translate="yes" xml:space="preserve">
          <source>Gets ULong out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-long-at#kotlin.native%24getULongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets ULong out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-long-at#kotlin.native%24getULongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6b5923edb949a03319c75e067d0d3d389ef5b5b" translate="yes" xml:space="preserve">
          <source>Gets UShort out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-short-at#kotlin.native%24getUShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;get-u-short-at#kotlin.native%24getUShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーからUShortを取得します</target>
        </trans-unit>
        <trans-unit id="62b82e9e716ae2481105eecd5dcfe6a4d4473d82" translate="yes" xml:space="preserve">
          <source>Gets UShort out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-short-at#kotlin.native%24getUShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets UShort out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-short-at#kotlin.native%24getUShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="359c6d06bf5b44e59852ecd275fcbab50a57e29e" translate="yes" xml:space="preserve">
          <source>Gets UShort out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-short-at#kotlin.native%24getUShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">指定されたインデックス&lt;a href=&quot;../../kotlin.native/get-u-short-at#kotlin.native%24getUShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;インデックス&lt;/a&gt;で&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;バイトバッファーからUShortを取得します</target>
        </trans-unit>
        <trans-unit id="19122847839d9371ee42bcdf3b7ae24fbf838432" translate="yes" xml:space="preserve">
          <source>Gets UShort out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-short-at#kotlin.native%24getUShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Gets UShort out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-short-at#kotlin.native%24getUShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11cb5c2d4da49e0fbbf552dbf506006785cc6aec" translate="yes" xml:space="preserve">
          <source>Gets a sequence for visiting this directory and all its content in bottom-up order. Depth-first search is used and directories are visited after all their files.</source>
          <target state="translated">このディレクトリとそのすべてのコンテンツをボトムアップ順に訪問する順序を取得します。深さ優先検索が使用され、ディレクトリはすべてのファイルの後に訪問されます。</target>
        </trans-unit>
        <trans-unit id="de21168140d7a6ffec2aa5d645b81cfb0b1d5ead" translate="yes" xml:space="preserve">
          <source>Gets a sequence for visiting this directory and all its content in top-down order. Depth-first search is used and directories are visited before all their files.</source>
          <target state="translated">このディレクトリとそのすべてのコンテンツをトップダウン順に訪問する順序を取得します。深さ優先検索が使用され、ディレクトリはすべてのファイルの前に訪問されます。</target>
        </trans-unit>
        <trans-unit id="8c112a6c105dbc16e8786834f4d9d438ca98749b" translate="yes" xml:space="preserve">
          <source>Gets a sequence for visiting this directory and all its content.</source>
          <target state="translated">このディレクトリを訪問するためのシーケンスと、そのすべてのコンテンツを取得します。</target>
        </trans-unit>
        <trans-unit id="ba0bb49ff92219d8b958b11eef51aa366e859249" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this node is a TEXT_NODE or a CDATA_SECTION_NODE.</source>
          <target state="translated">このノードが TEXT_NODE であるか CDATA_SECTION_NODE であるかを示す値を取得する。</target>
        </trans-unit>
        <trans-unit id="194ae6961c389bb66dfbaf6c24ca4f8b25cffd7f" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this node is an &lt;a href=&quot;https://kotlinlang.org/api/latest/jvm/stdlib/org.w3c.dom/-element/index.html&quot;&gt;Element&lt;/a&gt;.</source>
          <target state="translated">このノードが&lt;a href=&quot;https://kotlinlang.org/api/latest/jvm/stdlib/org.w3c.dom/-element/index.html&quot;&gt;Element&lt;/a&gt;かどうかを示す値を取得します。</target>
        </trans-unit>
        <trans-unit id="31dbfb91c70eeb1c5307d3ad1bfaea63d69faa0e" translate="yes" xml:space="preserve">
          <source>Gets current system time in microseconds since certain moment in the past, only delta between two subsequent calls makes sense.</source>
          <target state="translated">過去のある瞬間からの現在のシステム時刻をマイクロ秒単位で取得します。</target>
        </trans-unit>
        <trans-unit id="0809d536712c860de45cf5b17c686273bac85a06" translate="yes" xml:space="preserve">
          <source>Gets current system time in milliseconds since certain moment in the past, only delta between two subsequent calls makes sense.</source>
          <target state="translated">過去のある瞬間からの現在のシステム時刻をミリ秒単位で取得します。</target>
        </trans-unit>
        <trans-unit id="a307890a113e29c1affbb02eeed92e0fe3c13424" translate="yes" xml:space="preserve">
          <source>Gets current system time in nanoseconds since certain moment in the past, only delta between two subsequent calls makes sense.</source>
          <target state="translated">過去のある瞬間からの現在のシステム時刻をナノ秒単位で取得します。</target>
        </trans-unit>
        <trans-unit id="c3c82af36761705f1895b7f6ddac8345e79e3d55" translate="yes" xml:space="preserve">
          <source>Gets the entire content of this file as a String using UTF-8 or specified &lt;a href=&quot;read-text#kotlin.io%24readText%28java.io.File%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">このファイルのコンテンツ全体を、UTF-8または指定された&lt;a href=&quot;read-text#kotlin.io%24readText%28java.io.File%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;文字セット&lt;/a&gt;を使用する文字列として取得します。</target>
        </trans-unit>
        <trans-unit id="e6040e7906d6549ba4f60e8b187589a139f31acf" translate="yes" xml:space="preserve">
          <source>Gets the entire content of this file as a String using UTF-8 or specified &lt;a href=&quot;read-text#kotlin.io%24readText(java.io.File,%20java.nio.charset.Charset)/charset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">Gets the entire content of this file as a String using UTF-8 or specified &lt;a href=&quot;read-text#kotlin.io%24readText(java.io.File,%20java.nio.charset.Charset)/charset&quot;&gt;charset&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="95b4415867bb0e04fef4852f7d8e7b04b048c510" translate="yes" xml:space="preserve">
          <source>Gets the entire content of this file as a byte array.</source>
          <target state="translated">このファイルの内容全体をバイト配列で取得します。</target>
        </trans-unit>
        <trans-unit id="7163713dcc358cd25d8cb51e383949b943ff7b3c" translate="yes" xml:space="preserve">
          <source>Gets the lazily initialized value of the current Lazy instance. Once the value was initialized it must not change during the rest of lifetime of this Lazy instance.</source>
          <target state="translated">現在の Lazy インスタンスの初期化された値を取得します。一度初期化された値は、この Lazy インスタンスの残りのライフタイム中は変更してはいけません。</target>
        </trans-unit>
        <trans-unit id="37c41acddc812cd7a66c995087ca7ce3dbb73e5d" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../../kotlin/-boolean/index#kotlin.Boolean&quot;&gt;Boolean&lt;/a&gt; value.</source>
          <target state="translated">次のランダムな&lt;a href=&quot;../../../kotlin/-boolean/index#kotlin.Boolean&quot;&gt;ブール&lt;/a&gt;値を取得します。</target>
        </trans-unit>
        <trans-unit id="30956cdd85522de8900f766117ac0700a203fc7b" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value uniformly distributed between 0 (inclusive) and 1 (exclusive).</source>
          <target state="translated">0（両端を含む）と1（両端を含まない）の間で均一に分散された次のランダム&lt;a href=&quot;../../../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt;値を取得します。</target>
        </trans-unit>
        <trans-unit id="309ef06192b09598fcb2a4953632ab464eb205c6" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value uniformly distributed between 0 (inclusive) and 1 (exclusive).</source>
          <target state="translated">0（両端を含む）と1（両端を含まない）の間で均一に分散された次のランダムな&lt;a href=&quot;../../../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt;値を取得します。</target>
        </trans-unit>
        <trans-unit id="f13b624fdef9631938704e53303259adbf3d3008" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-boolean/index#kotlin.Boolean&quot;&gt;Boolean&lt;/a&gt; value.</source>
          <target state="translated">次のランダムな&lt;a href=&quot;../../kotlin/-boolean/index#kotlin.Boolean&quot;&gt;ブール&lt;/a&gt;値を取得します。</target>
        </trans-unit>
        <trans-unit id="9c1a73c830924c485c129aec0e959e687729be76" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value uniformly distributed between 0 (inclusive) and 1 (exclusive).</source>
          <target state="translated">0（両端を含む）と1（両端を含まない）の間で均一に分散された次のランダム&lt;a href=&quot;../../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt;値を取得します。</target>
        </trans-unit>
        <trans-unit id="78b55d267d8cb8da4eb67367038fae92883ffba8" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value uniformly distributed between 0 (inclusive) and 1 (exclusive).</source>
          <target state="translated">0（両端を含む）と1（両端を含まない）の間で均一に分散された次のランダムな&lt;a href=&quot;../../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt;値を取得します。</target>
        </trans-unit>
        <trans-unit id="6b069452c867cc34d833fd1f74484a4bac1b8d73" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;範囲内の&lt;/a&gt;乱数ジェネレータから次のランダム&lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UIntを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="1cbd1bb5d2125b2f551302a9b943746f99e58ea5" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;range&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="37e9ce94104e274134ae5cd0024dee2a28d8b36a" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified range.</source>
          <target state="translated">指定された範囲内の乱数ジェネレータから次のランダム&lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UIntを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="3c9db191e67fe2d032c273f05c4c2a95b4fca99e" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">バインドさ&lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;れるまで&lt;/a&gt;、指定された値よりも小さい乱数ジェネレータから次のランダム&lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UIntを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="7e363c5a913bdff96b90480285006c531367f387" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound.</target>
        </trans-unit>
        <trans-unit id="df0f8f4c47ad4633251926059d24e74bd095651a" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator.</source>
          <target state="translated">乱数&lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;ジェネレータ&lt;/a&gt;から次のランダムUIntを取得します。</target>
        </trans-unit>
        <trans-unit id="e7793f99b74ab0789880c106b3979b40f240bb01" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;../next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;範囲内の&lt;/a&gt;乱数ジェネレータから次のランダム&lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULongを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="96ee62ed14f41b8d4642283e30c55973f533b66b" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;range&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c6382977c67f7a868b05c20e430ee75137588175" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified range.</source>
          <target state="translated">指定された範囲内の乱数ジェネレータから次のランダム&lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULongを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="7ac3458718ad9505600ca7fb8773a471b9e50892" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">バインドさ&lt;a href=&quot;../next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;れるまで&lt;/a&gt;、指定された数よりも小さい乱数ジェネレータから次のランダム&lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULongを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="43d4e8c3597f77c95aa5cdbd79821205a9767f82" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound.</target>
        </trans-unit>
        <trans-unit id="a54b4e342c19fcbe2f3af7a96c78016cc14cedb3" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator.</source>
          <target state="translated">乱数&lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ジェネレータ&lt;/a&gt;から次のランダムULongを取得します。</target>
        </trans-unit>
        <trans-unit id="929b9e532a5b7b161a700de08add954ec6d36ca6" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;範囲内の&lt;/a&gt;乱数ジェネレータから次のランダム&lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UIntを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="0ef5d04545551739de14c6fd65488dd540a1a244" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;range&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="471972f13ea37f1c27e3718fc1a40679cedb0068" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified range.</source>
          <target state="translated">指定された範囲内の乱数ジェネレータから次のランダム&lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UIntを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="f11249e53ff101c876fd8a178739950955288fdc" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">バインドさ&lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;れるまで&lt;/a&gt;、指定された値よりも小さい乱数ジェネレータから次のランダム&lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UIntを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="72c3593c40d15b89dc5054e7a9b34c0485042b1b" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound.</target>
        </trans-unit>
        <trans-unit id="8d7b64258910d1f8e7e95f6885bafd4b7d6aef91" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator.</source>
          <target state="translated">乱数&lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;ジェネレータ&lt;/a&gt;から次のランダムUIntを取得します。</target>
        </trans-unit>
        <trans-unit id="6066b9becb7346790721071986c20dd5acb6de18" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;範囲内の&lt;/a&gt;乱数ジェネレータから次のランダム&lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULongを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="378a74bcb0a7a649e96155198b63424181554331" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;range&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9b589f8eef60bcd4b38db2895bff627da29fcfcd" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified range.</source>
          <target state="translated">指定された範囲内の乱数ジェネレータから次のランダム&lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULongを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="112333309fc46102c0a0448255000cc3c9ba3f69" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">バインドさ&lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;れるまで&lt;/a&gt;、指定された数よりも小さい乱数ジェネレータから次のランダム&lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULongを&lt;/a&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="db08580ed0422c907bcb2dfa0d4162e33db438fd" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound.</target>
        </trans-unit>
        <trans-unit id="76b0c05fa65e814a57c8a2da06ad7a361405834e" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator.</source>
          <target state="translated">乱数&lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ジェネレータ&lt;/a&gt;から次のランダムULongを取得します。</target>
        </trans-unit>
        <trans-unit id="04f34e55827ddb4623c3b83662a56026854407e8" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">次のランダムな&lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt;ビット数を取得します。</target>
        </trans-unit>
        <trans-unit id="5fca2f68d8d64cc86694d0727b45f2e6693c49d0" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">Gets the next random &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</target>
        </trans-unit>
        <trans-unit id="2faba648c909e55694100a5c0c3e4adf90257566" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">次のランダムな&lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt;ビット数を取得します。</target>
        </trans-unit>
        <trans-unit id="b7b16619da193b089c5042ce71e53f3064e3c961" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">Gets the next random &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</target>
        </trans-unit>
        <trans-unit id="9028d1dcb4cef84a31ee55278bbac6ae5357d31d" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Double&lt;/code&gt; from the random number generator in the specified range.</source>
          <target state="translated">指定された範囲内の乱数ジェネレータから次のランダム &lt;code&gt;Double&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="f543f8df7361b2bb53169e28e58d78384cbc4fc5" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;../next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;../next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;範囲内の&lt;/a&gt;乱数ジェネレータから次のランダム &lt;code&gt;Int&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="63158e16fc626408ed0826d6bb4bd9b1ba5c2f26" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;../next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;../next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;range&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0308952d598f94e2695c06c2f23d1a62905b0bee" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;範囲内の&lt;/a&gt;乱数ジェネレータから次のランダム &lt;code&gt;Int&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="7907a96413297312e1e976c02f529646c93d27e4" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;range&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f1e1e810f585a0afdffc6e7c00adc9f1a30bb15d" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified range.</source>
          <target state="translated">指定された範囲内の乱数ジェネレータから次のランダム &lt;code&gt;Int&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="705882ad155ff18dc9f97216330472b8c8b24ba3" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator.</source>
          <target state="translated">乱数ジェネレータから次のランダム &lt;code&gt;Int&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="d1ca0ffd7d53e1b5ad497b30e898b764bfc015ac" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;../next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;../next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;範囲内の&lt;/a&gt;乱数ジェネレータから次のランダム &lt;code&gt;Long&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="0fd24d7fee903ddf723690241e58e954bd6839f4" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;../next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;../next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;range&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e5fb6f9e1469c44b19d531da2765acbd786f7313" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;範囲内の&lt;/a&gt;乱数ジェネレータから次のランダム &lt;code&gt;Long&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="5d2057722dcae282a0c74257d1e7116deff3b0d0" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;range&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7b1e8d7297c8baa2df40c7c82c7aad1283ee0ef7" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified range.</source>
          <target state="translated">指定された範囲内の乱数ジェネレータから次のランダム &lt;code&gt;Long&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="c21be4abd909031b3586371d1970672e7e168e9a" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator.</source>
          <target state="translated">乱数ジェネレータから次のランダム &lt;code&gt;Long&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="b6be61594fa2dd329ed385c4171b2602f61166a8" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Double&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">バインドさ&lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;れるまで&lt;/a&gt;、指定された値よりも小さい乱数ジェネレータから次のランダムな非負の &lt;code&gt;Double&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="35de7abd6d78c66b02dede8c8258919512d6312a" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Double&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">Gets the next random non-negative &lt;code&gt;Double&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; bound.</target>
        </trans-unit>
        <trans-unit id="0c9a1bb80dc61d4350189c8d53a1723a1ce8bab5" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Double&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">バインドさ&lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;れるまで&lt;/a&gt;、指定された値よりも小さい乱数ジェネレータから次のランダムな非負の &lt;code&gt;Double&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="f519f9abf3df48b71bc5c4b424ff0e45b077d44a" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Double&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">Gets the next random non-negative &lt;code&gt;Double&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; bound.</target>
        </trans-unit>
        <trans-unit id="4284455c3c686da2f5f0607a4e4f8fdbd0d56bd4" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Int&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">バインドさ&lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;れるまで&lt;/a&gt;、指定された数よりも小さい次のランダムな非負の &lt;code&gt;Int&lt;/code&gt; を乱数ジェネレーターから取得します。</target>
        </trans-unit>
        <trans-unit id="d665eceea8128cbcca937a41290f9a04d16c5c2c" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Int&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">Gets the next random non-negative &lt;code&gt;Int&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound.</target>
        </trans-unit>
        <trans-unit id="8bd8c79c3e21d295fb1c15cde569828a6e0d3051" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Int&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">バインドさ&lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;れるまで&lt;/a&gt;、指定された数よりも小さい次のランダムな非負の &lt;code&gt;Int&lt;/code&gt; を乱数ジェネレーターから取得します。</target>
        </trans-unit>
        <trans-unit id="3eef112031f60dafb1489e4454a7c2aa6f439cae" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Int&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">Gets the next random non-negative &lt;code&gt;Int&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound.</target>
        </trans-unit>
        <trans-unit id="403ac94b16c81a69dd16b254f1801320c57f5111" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Long&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">バインドさ&lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;れるまで&lt;/a&gt;、指定された値よりも小さい次のランダムな非負の &lt;code&gt;Long&lt;/code&gt; を乱数ジェネレーターから取得します。</target>
        </trans-unit>
        <trans-unit id="887a28c24ae21edb0753e6ee220f0b99ae1bf479" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Long&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">Gets the next random non-negative &lt;code&gt;Long&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound.</target>
        </trans-unit>
        <trans-unit id="9c0e48933f74bb2c6310b971048738f978b109d0" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Long&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">バインドさ&lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;れるまで&lt;/a&gt;、指定された値よりも小さい次のランダムな非負の &lt;code&gt;Long&lt;/code&gt; を乱数ジェネレーターから取得します。</target>
        </trans-unit>
        <trans-unit id="f20a65909641053c65fe2a0983e412bff5b8c000" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Long&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">Gets the next random non-negative &lt;code&gt;Long&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound.</target>
        </trans-unit>
        <trans-unit id="2b7e0a9f8042c263c6cd6468bf56dde544cd8ae0" translate="yes" xml:space="preserve">
          <source>Gets the value in the current thread's copy of this thread-local variable or replaces the value with the result of calling &lt;a href=&quot;get-or-set#kotlin.concurrent%24getOrSet%28java.lang.ThreadLocal%28%28kotlin.concurrent.getOrSet.T%29%29%2C+kotlin.Function0%28%28kotlin.concurrent.getOrSet.T%29%29%29%2Fdefault&quot;&gt;default&lt;/a&gt; function in case if that value was &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このスレッドローカル変数の現在のスレッドのコピー内の値を取得するか、その値が &lt;code&gt;null&lt;/code&gt; の場合は、その値を&lt;a href=&quot;get-or-set#kotlin.concurrent%24getOrSet%28java.lang.ThreadLocal%28%28kotlin.concurrent.getOrSet.T%29%29%2C+kotlin.Function0%28%28kotlin.concurrent.getOrSet.T%29%29%29%2Fdefault&quot;&gt;デフォルト&lt;/a&gt;関数の呼び出しの結果で置き換えます。</target>
        </trans-unit>
        <trans-unit id="a337436a44db6e3083d5164f17cd53641525b567" translate="yes" xml:space="preserve">
          <source>Gets the value in the current thread's copy of this thread-local variable or replaces the value with the result of calling &lt;a href=&quot;get-or-set#kotlin.concurrent%24getOrSet(java.lang.ThreadLocal((kotlin.concurrent.getOrSet.T)),%20kotlin.Function0((kotlin.concurrent.getOrSet.T)))/default&quot;&gt;default&lt;/a&gt; function in case if that value was &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Gets the value in the current thread's copy of this thread-local variable or replaces the value with the result of calling &lt;a href=&quot;get-or-set#kotlin.concurrent%24getOrSet(java.lang.ThreadLocal((kotlin.concurrent.getOrSet.T)),%20kotlin.Function0((kotlin.concurrent.getOrSet.T)))/default&quot;&gt;default&lt;/a&gt; function in case if that value was &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96857c88cebeabc578d887e01fbcb2fd02cbcdb7" translate="yes" xml:space="preserve">
          <source>Getter</source>
          <target state="translated">Getter</target>
        </trans-unit>
        <trans-unit id="163dc52918f86c26710b8acaf72b5734b1cf27d1" translate="yes" xml:space="preserve">
          <source>Getter of the property is a &lt;code&gt;get&lt;/code&gt; method declared alongside the property.</source>
          <target state="translated">プロパティのゲッターは、プロパティと一緒に宣言された &lt;code&gt;get&lt;/code&gt; メソッドです。</target>
        </trans-unit>
        <trans-unit id="4ed1aac47efbb51b56ad6a6f326722a1c1c048e0" translate="yes" xml:space="preserve">
          <source>Getters and Setters</source>
          <target state="translated">ゲッターとセッター</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">はじめに</target>
        </trans-unit>
        <trans-unit id="f2a96e364f18ce2cf12d58c581b9f77f01d71c61" translate="yes" xml:space="preserve">
          <source>Getting Started with Eclipse IDE</source>
          <target state="translated">Eclipse IDEの入門編</target>
        </trans-unit>
        <trans-unit id="42cf14ca65905dcfc442ada3294d53e40371efdc" translate="yes" xml:space="preserve">
          <source>Getting Started with Gradle</source>
          <target state="translated">Gradleを始めるには</target>
        </trans-unit>
        <trans-unit id="13f4cc71ba71e855fd6ee40fe700d140aa4d0403" translate="yes" xml:space="preserve">
          <source>Getting Started with IntelliJ IDEA</source>
          <target state="translated">IntelliJ IDEAを使い始める</target>
        </trans-unit>
        <trans-unit id="09a6c0662ea8b013dc38e6e6c3267f9f99f71bbe" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin</source>
          <target state="translated">Kotlinを始めるには</target>
        </trans-unit>
        <trans-unit id="984760bee6820a43a1176969d0eb8e8758e08f83" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin and JavaScript with Gradle</source>
          <target state="translated">GradleでKotlinとJavaScriptを始める</target>
        </trans-unit>
        <trans-unit id="5dd4a2a2de278dbd47a7cbdaa4c4b6745d4a19be" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin and JavaScript with IntelliJ IDEA</source>
          <target state="translated">IntelliJ IDEAでKotlinとJavaScriptを始める</target>
        </trans-unit>
        <trans-unit id="1d48ae394054c582aa04c2975c93978aeac99618" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin and JavaScript with Maven</source>
          <target state="translated">MavenでKotlinとJavaScriptを始める</target>
        </trans-unit>
        <trans-unit id="cd4b0c856208f741f17d1a02da2b24b267c56935" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin to JavaScript</source>
          <target state="translated">Kotlin から JavaScript への入門</target>
        </trans-unit>
        <trans-unit id="1a2d1df7c699bc1c3627a59dee9f5d675ea4ab4d" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin/JS</source>
          <target state="translated">Kotlin/JSを始めるには</target>
        </trans-unit>
        <trans-unit id="646a49e49eae55b672b6de83fc26901b5720412e" translate="yes" xml:space="preserve">
          <source>Getting Started with Maven</source>
          <target state="translated">Mavenを始めるには</target>
        </trans-unit>
        <trans-unit id="da6eb7f117bc1433780193d58fd1a8c334269d93" translate="yes" xml:space="preserve">
          <source>Getting Started with the Command Line</source>
          <target state="translated">コマンドラインで始める</target>
        </trans-unit>
        <trans-unit id="77195551022e69f3fe692e55f18a442cb14d057e" translate="yes" xml:space="preserve">
          <source>Getting around</source>
          <target state="translated">移動手段</target>
        </trans-unit>
        <trans-unit id="d966aa4c0cb6af87411922025d607a28da9dadc4" translate="yes" xml:space="preserve">
          <source>Getting representation of the object variable (var) could also be done using the built-in runtime function &lt;code&gt;Konan_DebugPrint&lt;/code&gt; (this approach also works for gdb, using a module of command syntax):</source>
          <target state="translated">オブジェクト変数（var）の表現の取得は、組み込みのランタイム関数 &lt;code&gt;Konan_DebugPrint&lt;/code&gt; を使用して行うこともできます（このアプローチは、コマンド構文のモジュールを使用して、gdbでも機能します）。</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">始めるには</target>
        </trans-unit>
        <trans-unit id="52be919dd9daef1b311b120fb6fe20a334a24e25" translate="yes" xml:space="preserve">
          <source>Getting started with Android and Kotlin</source>
          <target state="translated">AndroidとKotlinを使い始める</target>
        </trans-unit>
        <trans-unit id="49b001fc8041567a39e8397d73aa6f1db38cee63" translate="yes" xml:space="preserve">
          <source>Getting started with Kotlin</source>
          <target state="translated">Kotlinを始める</target>
        </trans-unit>
        <trans-unit id="a8fef841204af009adaf90bc21fac5ecb522d4af" translate="yes" xml:space="preserve">
          <source>Getting the Ant Tasks</source>
          <target state="translated">アリのタスクの取得</target>
        </trans-unit>
        <trans-unit id="afad882b9cc056965179ab8ca4d21bd55cf909e2" translate="yes" xml:space="preserve">
          <source>Give your project a name and select an SDK version for it.</source>
          <target state="translated">プロジェクトに名前を付け、SDKのバージョンを選択します。</target>
        </trans-unit>
        <trans-unit id="ed8daa798a5b15bec0a3209902f2dd5b84e2b411" translate="yes" xml:space="preserve">
          <source>Given a string &lt;code&gt;s&lt;/code&gt;, you can get a &lt;code&gt;ByteArray&lt;/code&gt; with the UTF-8 encoding of the string by calling &lt;code&gt;s.toByteArray()&lt;/code&gt;, or you can specify another encoding, e.g. &lt;code&gt;s.toByteArray(Charsets.US_ASCII)&lt;/code&gt; - just like &lt;code&gt;encode()&lt;/code&gt; in Python. Given a byte array &lt;code&gt;b&lt;/code&gt; that contains a UTF-8-encoded string, you can get a &lt;code&gt;String&lt;/code&gt; by calling &lt;code&gt;String(b)&lt;/code&gt;; if you've got a different encoding, use e.g. &lt;code&gt;String(b, Charsets.US_ASCII)&lt;/code&gt;, just like &lt;code&gt;decode()&lt;/code&gt; in Python. You can also call e.g. &lt;code&gt;b.toString(Charsets.US_ASCII)&lt;/code&gt;, but do &lt;em&gt;not&lt;/em&gt; call &lt;code&gt;b.toString()&lt;/code&gt; without parameters (this will just print an internal reference to the byte array).</source>
          <target state="translated">文字列を考える &lt;code&gt;s&lt;/code&gt; 、あなたが得ることができ &lt;code&gt;ByteArray&lt;/code&gt; 呼び出すことにより、文字列のUTF-8エンコーディングで &lt;code&gt;s.toByteArray()&lt;/code&gt; 、またはあなたが別のエンコーディングを指定することができ、例えば &lt;code&gt;s.toByteArray(Charsets.US_ASCII)&lt;/code&gt; だけのように- &lt;code&gt;encode()&lt;/code&gt; にPython。バイト配列を考えると &lt;code&gt;b&lt;/code&gt; UTF-8でエンコードされた文字列が含まれている、あなたが得ることができる &lt;code&gt;String&lt;/code&gt; 呼び出すことによって &lt;code&gt;String(b)&lt;/code&gt; ;別のエンコーディングがある場合は、Pythonの &lt;code&gt;decode()&lt;/code&gt; と同じように &lt;code&gt;String(b, Charsets.US_ASCII)&lt;/code&gt; 例えばString（b、Charsets.US_ASCII）を使用します。たとえば &lt;code&gt;b.toString(Charsets.US_ASCII)&lt;/code&gt; を呼び出すこともできますが、 &lt;code&gt;b.toString()&lt;/code&gt; &lt;em&gt;は&lt;/em&gt;呼び出さ&lt;em&gt;ないで&lt;/em&gt;ください。&lt;em&gt;&lt;/em&gt; パラメータなし（これはバイト配列への内部参照を出力するだけです）。</target>
        </trans-unit>
        <trans-unit id="d52776ec9b50b7e842377169a2dc0f87740730c0" translate="yes" xml:space="preserve">
          <source>Given an &lt;a href=&quot;-iterable#kotlin.collections%24Iterable%28kotlin.Function0%28%28kotlin.collections.Iterator%28%28kotlin.collections.Iterable.T%29%29%29%29%29%2Fiterator&quot;&gt;iterator&lt;/a&gt; function constructs an &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that returns values through the &lt;a href=&quot;-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; provided by that function.</source>
          <target state="translated">&lt;a href=&quot;-iterable#kotlin.collections%24Iterable%28kotlin.Function0%28%28kotlin.collections.Iterator%28%28kotlin.collections.Iterable.T%29%29%29%29%29%2Fiterator&quot;&gt;イテレータ&lt;/a&gt;関数を指定すると、その関数によって提供される&lt;a href=&quot;-iterator/index#kotlin.collections.Iterator&quot;&gt;イテレータ&lt;/a&gt;を介して値を返す&lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt;インスタンスが構築されます。</target>
        </trans-unit>
        <trans-unit id="7be3632c2382671a0f603162342cc595556f496f" translate="yes" xml:space="preserve">
          <source>Given an &lt;a href=&quot;-iterable#kotlin.collections%24Iterable(kotlin.Function0((kotlin.collections.Iterator((kotlin.collections.Iterable.T)))))/iterator&quot;&gt;iterator&lt;/a&gt; function constructs an &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that returns values through the &lt;a href=&quot;-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; provided by that function.</source>
          <target state="translated">Given an &lt;a href=&quot;-iterable#kotlin.collections%24Iterable(kotlin.Function0((kotlin.collections.Iterator((kotlin.collections.Iterable.T)))))/iterator&quot;&gt;iterator&lt;/a&gt; function constructs an &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that returns values through the &lt;a href=&quot;-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; provided by that function.</target>
        </trans-unit>
        <trans-unit id="6f0cc0f079c270a0f9cdb6aa220795e4826b92e8" translate="yes" xml:space="preserve">
          <source>Given an &lt;a href=&quot;-sequence#kotlin.sequences%24Sequence%28kotlin.Function0%28%28kotlin.collections.Iterator%28%28kotlin.sequences.Sequence.T%29%29%29%29%29%2Fiterator&quot;&gt;iterator&lt;/a&gt; function constructs a &lt;a href=&quot;-sequence/index&quot;&gt;Sequence&lt;/a&gt; that returns values through the &lt;a href=&quot;../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; provided by that function. The values are evaluated lazily, and the sequence is potentially infinite.</source>
          <target state="translated">&lt;a href=&quot;-sequence#kotlin.sequences%24Sequence%28kotlin.Function0%28%28kotlin.collections.Iterator%28%28kotlin.sequences.Sequence.T%29%29%29%29%29%2Fiterator&quot;&gt;イテレータ&lt;/a&gt;関数を指定すると、その関数によって提供される&lt;a href=&quot;../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;イテレータ&lt;/a&gt;を介して値を返す&lt;a href=&quot;-sequence/index&quot;&gt;シーケンス&lt;/a&gt;が構築されます。値は遅延評価され、シーケンスは潜在的に無限です。</target>
        </trans-unit>
        <trans-unit id="0edbc663583339d7367d2349ea7bf1cd8b018d4d" translate="yes" xml:space="preserve">
          <source>Given an &lt;a href=&quot;-sequence#kotlin.sequences%24Sequence(kotlin.Function0((kotlin.collections.Iterator((kotlin.sequences.Sequence.T)))))/iterator&quot;&gt;iterator&lt;/a&gt; function constructs a &lt;a href=&quot;-sequence/index&quot;&gt;Sequence&lt;/a&gt; that returns values through the &lt;a href=&quot;../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; provided by that function. The values are evaluated lazily, and the sequence is potentially infinite.</source>
          <target state="translated">Given an &lt;a href=&quot;-sequence#kotlin.sequences%24Sequence(kotlin.Function0((kotlin.collections.Iterator((kotlin.sequences.Sequence.T)))))/iterator&quot;&gt;iterator&lt;/a&gt; function constructs a &lt;a href=&quot;-sequence/index&quot;&gt;Sequence&lt;/a&gt; that returns values through the &lt;a href=&quot;../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; provided by that function. The values are evaluated lazily, and the sequence is potentially infinite.</target>
        </trans-unit>
        <trans-unit id="c485d6c75b301df13711cf1468e06dd2f21a2da3" translate="yes" xml:space="preserve">
          <source>Given an &lt;code&gt;R&lt;/code&gt; instance, &lt;code&gt;KProperty1&amp;lt;R, V&amp;gt;&lt;/code&gt; will let you read the value that the property has in that instance by calling &lt;code&gt;get()&lt;/code&gt;, and &lt;code&gt;KMutableProperty1&amp;lt;R, V&amp;gt;&lt;/code&gt; will also let you change the property value in the instance by calling &lt;code&gt;set()&lt;/code&gt;. Using this, we can start writing functions that manipulate properties without knowing in advance which property (or which class) they are going to deal with:</source>
          <target state="translated">与えられた &lt;code&gt;R&lt;/code&gt; のインスタンス、 &lt;code&gt;KProperty1&amp;lt;R, V&amp;gt;&lt;/code&gt; 、プロパティを呼び出すことによって、そのインスタンスであることを値読ませます &lt;code&gt;get()&lt;/code&gt; 、そして &lt;code&gt;KMutableProperty1&amp;lt;R, V&amp;gt;&lt;/code&gt; また、あなたが呼び出すことで、インスタンス内のプロパティの値を変更できます &lt;code&gt;set()&lt;/code&gt; 。これを使用して、どのプロパティ（またはどのクラス）を処理するかを事前に知らなくても、プロパティを操作する関数の作成を開始できます。</target>
        </trans-unit>
        <trans-unit id="1e5731d4bf9c4d88436dc7528815df264748c74c" translate="yes" xml:space="preserve">
          <source>Given that, the compiler prohibits &lt;em&gt;is&lt;/em&gt;-checks that cannot be performed at runtime due to type erasure, such as &lt;code&gt;ints is List&amp;lt;Int&amp;gt;&lt;/code&gt; or &lt;code&gt;list is T&lt;/code&gt; (type parameter). You can, however, check an instance against a &lt;a href=&quot;generics#star-projections&quot;&gt;star-projected type&lt;/a&gt;:</source>
          <target state="translated">コンパイラー&lt;em&gt;は&lt;/em&gt;、 &lt;code&gt;ints is List&amp;lt;Int&amp;gt;&lt;/code&gt; か &lt;code&gt;list is T&lt;/code&gt; （型パラメーター）であるなど、型の消去のために実行時に実行できないチェックを禁止しています。ただし、インスタンスを&lt;a href=&quot;generics#star-projections&quot;&gt;star-projected型&lt;/a&gt;と照合できます。</target>
        </trans-unit>
        <trans-unit id="d14fa916aad304abf9368effaed2af1c9cae9a7d" translate="yes" xml:space="preserve">
          <source>Given the following function:</source>
          <target state="translated">次のような関数があるとします。</target>
        </trans-unit>
        <trans-unit id="3bccba6c1d0dad412745ca499dd4881c9a868243" translate="yes" xml:space="preserve">
          <source>Gives a declaration (a function, a property or a class) specific name in JavaScript.</source>
          <target state="translated">JavaScriptで宣言(関数、プロパティ、クラス)の特定の名前を与えます。</target>
        </trans-unit>
        <trans-unit id="881cfc245c723cf7c3f61576f22801ef2e3c72b2" translate="yes" xml:space="preserve">
          <source>Global Declarations from Kotlin</source>
          <target state="translated">コトリンのグローバル宣言</target>
        </trans-unit>
        <trans-unit id="659f27a0f1f897cced3c75d045ad40fe242c727f" translate="yes" xml:space="preserve">
          <source>Global coroutines are like daemon threads</source>
          <target state="translated">グローバルコルーチンはデーモンスレッドのようなもの</target>
        </trans-unit>
        <trans-unit id="d468d0378c00d1e27a28a236d7de95756c08f8c9" translate="yes" xml:space="preserve">
          <source>Global functions &lt;code&gt;forInts&lt;/code&gt;, &lt;code&gt;forFloats&lt;/code&gt;, or &lt;code&gt;strings&lt;/code&gt; are turned into the functions pointers in the &lt;code&gt;kotlin.root.example&lt;/code&gt; anonymous struct.</source>
          <target state="translated">グローバル関数 &lt;code&gt;forInts&lt;/code&gt; 、 &lt;code&gt;forFloats&lt;/code&gt; 、または &lt;code&gt;strings&lt;/code&gt; は、 &lt;code&gt;kotlin.root.example&lt;/code&gt; 匿名構造体の関数ポインターに変換されます。</target>
        </trans-unit>
        <trans-unit id="30cadf19adfad41f8a6e59daa5ff3a3d48ba595c" translate="yes" xml:space="preserve">
          <source>Global variables and singletons</source>
          <target state="translated">グローバル変数とシングルトン</target>
        </trans-unit>
        <trans-unit id="1044c240904be1204cda061e8f188ed693002d4b" translate="yes" xml:space="preserve">
          <source>GlobalEventHandlers</source>
          <target state="translated">GlobalEventHandlers</target>
        </trans-unit>
        <trans-unit id="baed9919f2e4f46815715dc91aa4078ed633aaf4" translate="yes" xml:space="preserve">
          <source>GlobalPerformance</source>
          <target state="translated">GlobalPerformance</target>
        </trans-unit>
        <trans-unit id="765216c578e052557132746a69028e4fe8edce22" translate="yes" xml:space="preserve">
          <source>Go on to the next task with the &lt;strong&gt;Next&lt;/strong&gt; icon at the top of &lt;strong&gt;Task Description&lt;/strong&gt; panel:</source>
          <target state="translated">&lt;strong&gt;[タスクの説明&lt;/strong&gt; ]パネルの上部にある&lt;strong&gt;[ &lt;/strong&gt;&lt;strong&gt;次へ&lt;/strong&gt; ]アイコンを使用して、次のタスクに&lt;strong&gt;進み&lt;/strong&gt;ます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5f3e2d1c4c51aa19411eef4446fc3ed3a3fbd788" translate="yes" xml:space="preserve">
          <source>Go through and accept the default configuration, then click &lt;strong&gt;Finish&lt;/strong&gt;.</source>
          <target state="translated">デフォルト設定を実行して受け入れ、[&lt;strong&gt;完了&lt;/strong&gt;]をクリックします。</target>
        </trans-unit>
        <trans-unit id="1dc56189f84c8bd9505ed21d652da81943de515c" translate="yes" xml:space="preserve">
          <source>Go to &lt;strong&gt;Preferences -&amp;gt; Plugins&lt;/strong&gt; (or &lt;strong&gt;Configure -&amp;gt; Plugins&lt;/strong&gt; from the &lt;strong&gt;Welcome Screen&lt;/strong&gt;), press &lt;strong&gt;Install JetBrains Plugin&amp;hellip;&lt;/strong&gt; and search for EduTools plugin:</source>
          <target state="translated">行く&lt;strong&gt;設定- &amp;gt;プラグイン&lt;/strong&gt;（または&lt;strong&gt;設定- &amp;gt;プラグイン&lt;/strong&gt;から&lt;strong&gt;ようこそ画面&lt;/strong&gt;）を押し&lt;strong&gt;JetBrainsのプラグインをインストールして...&lt;/strong&gt;とプラグインEduToolsを検索：</target>
        </trans-unit>
        <trans-unit id="891a1edb814b257caca47fbe98d9f5d5b15c6d14" translate="yes" xml:space="preserve">
          <source>Go to &lt;strong&gt;View -&amp;gt; Tool Windows -&amp;gt; Project&lt;/strong&gt; to look at the course structure:</source>
          <target state="translated">&lt;strong&gt;[表示]-&amp;gt; [ツールウィンドウ]-&amp;gt; [プロジェクト]に&lt;/strong&gt;移動して、コース構造を確認します。</target>
        </trans-unit>
        <trans-unit id="c27811348e0f42b5d50dfc6beb14f03482678a47" translate="yes" xml:space="preserve">
          <source>Go to any &lt;code&gt;.kt&lt;/code&gt; file and rename the package with the IntelliJ IDEA action &lt;strong&gt;Refactor&lt;/strong&gt; | &lt;strong&gt;Rename&lt;/strong&gt; action to &lt;code&gt;org.jetbrains.base64&lt;/code&gt;</source>
          <target state="translated">いずれかに行く &lt;code&gt;.kt&lt;/code&gt; のファイルとのIntelliJ IDEAアクションでパッケージの名前を変更&lt;strong&gt;リファクタリング&lt;/strong&gt;| アクションの&lt;strong&gt;名前&lt;/strong&gt;を &lt;code&gt;org.jetbrains.base64&lt;/code&gt; に変更します</target>
        </trans-unit>
        <trans-unit id="06d828f9fe55d8ce78c63f895a57df7399b093e1" translate="yes" xml:space="preserve">
          <source>Go to the browser and enjoy the result.</source>
          <target state="translated">ブラウザにアクセスして、結果をお楽しみください。</target>
        </trans-unit>
        <trans-unit id="8165d64dbe21ad94145d018a811b3d046578b825" translate="yes" xml:space="preserve">
          <source>Google Cloud Platform offers a series of tutorials for deploying Kotlin applications to GCP, both for &lt;a href=&quot;https://cloud.google.com/community/tutorials/kotlin-ktor-app-engine-java8&quot;&gt;Ktor and App Engine&lt;/a&gt; and &lt;a href=&quot;https://cloud.google.com/community/tutorials/kotlin-springboot-app-engine-java8&quot;&gt;Spring and App engine&lt;/a&gt;. In addition there is an &lt;a href=&quot;https://codelabs.developers.google.com/codelabs/cloud-spring-cloud-gcp-kotlin&quot;&gt;interactive code lab&lt;/a&gt; for deploying a Kotlin Spring application.</source>
          <target state="translated">Google Cloud Platformは、&lt;a href=&quot;https://cloud.google.com/community/tutorials/kotlin-ktor-app-engine-java8&quot;&gt;KtorとApp Engine&lt;/a&gt;、&lt;a href=&quot;https://cloud.google.com/community/tutorials/kotlin-springboot-app-engine-java8&quot;&gt;SpringとApp engineの&lt;/a&gt;両方で、KotlinアプリケーションをGCPにデプロイするための一連のチュートリアルを提供します。さらに、Kotlin Springアプリケーションをデプロイするための&lt;a href=&quot;https://codelabs.developers.google.com/codelabs/cloud-spring-cloud-gcp-kotlin&quot;&gt;インタラクティブなコードラボ&lt;/a&gt;もあります。</target>
        </trans-unit>
        <trans-unit id="f426be61bd7a1e2a2ad7e39cb0258e09623e3b4d" translate="yes" xml:space="preserve">
          <source>Gradle</source>
          <target state="translated">Gradle</target>
        </trans-unit>
        <trans-unit id="6134eca2b360f22c2387c3051541c510c1250e3f" translate="yes" xml:space="preserve">
          <source>Gradle Build Cache Support (since 1.2.20)</source>
          <target state="translated">Gradle ビルドキャッシュのサポート (1.2.20 以降)</target>
        </trans-unit>
        <trans-unit id="c7cb10f96b225f304e707e064e5400d18a33549a" translate="yes" xml:space="preserve">
          <source>Gradle Plugin</source>
          <target state="translated">Gradle プラグイン</target>
        </trans-unit>
        <trans-unit id="277f29d49197aac9cb14a4370ca7921f6b1ecad2" translate="yes" xml:space="preserve">
          <source>Gradle build cache support</source>
          <target state="translated">Gradle ビルドキャッシュのサポート</target>
        </trans-unit>
        <trans-unit id="35d1c8165e4e67c09f92e3d5f647ffd5441e58ba" translate="yes" xml:space="preserve">
          <source>Gradle build cache support (since 1.2.20)</source>
          <target state="translated">Gradle ビルドキャッシュのサポート (1.2.20 以降)</target>
        </trans-unit>
        <trans-unit id="a0575dd3e951b41de498712d03d4e2bfef8d7b1f" translate="yes" xml:space="preserve">
          <source>Gradle function</source>
          <target state="translated">グラドルきのう</target>
        </trans-unit>
        <trans-unit id="d3a9f6031ee84eef8cc0f71b7cc016500786fd72" translate="yes" xml:space="preserve">
          <source>Gradle module metadata provides rich publishing and dependency resolution features that are used in Kotlin Multiplatform Projects. In Gradle 6.0 and above, module metadata is used in dependency resolution and included in publications by default. Thus, once you update to Gradle 6.0, you can remove &lt;code&gt;enableFeaturePreview(&quot;GRADLE_METADATA&quot;)&lt;/code&gt; from the project&amp;rsquo;s &lt;code&gt;settings.gradle&lt;/code&gt; file.</source>
          <target state="translated">Gradleモジュールのメタデータは、Kotlinマルチプラットフォームプロジェクトで使用される豊富な公開機能と依存関係解決機能を提供します。Gradle 6.0以降では、モジュールメタデータは依存関係の解決に使用され、デフォルトでパブリケーションに含まれています。したがって、Gradle 6.0に更新すると、プロジェクトの &lt;code&gt;settings.gradle&lt;/code&gt; ファイルから &lt;code&gt;enableFeaturePreview(&quot;GRADLE_METADATA&quot;)&lt;/code&gt; を削除できます。</target>
        </trans-unit>
        <trans-unit id="5e8f2626ed20cf2fef59f13d2bd987a20f6e43c4" translate="yes" xml:space="preserve">
          <source>Gradle module metadata provides rich publishing and dependency resolution features that are used in Kotlin multiplatform projects to simplify dependencies configuration for build authors. In particular, the publications of a multiplatform library may include a special 'root' module that stands for the whole library and is automatically resolved to the appropriate platform-specific artifacts when added as a dependency, as described below.</source>
          <target state="translated">Gradleモジュールメタデータは、Kotlinマルチプラットフォームプロジェクトで使用される豊富なパブリッシング機能と依存関係解決機能を提供し、ビルド作者の依存関係設定を簡素化します。特に、マルチプラットフォームライブラリのパブリケーションには、ライブラリ全体を表す特別な「ルート」モジュールが含まれている場合があり、以下に説明するように、依存関係として追加されると、適切なプラットフォーム固有のアーティファクトに自動的に解決されます。</target>
        </trans-unit>
        <trans-unit id="86031b6812dfd2337c5860974fdf8e6ac4495090" translate="yes" xml:space="preserve">
          <source>Gradle project improvements</source>
          <target state="translated">Gradleプロジェクトの改善</target>
        </trans-unit>
        <trans-unit id="d0735888b18954fa286b0b5708d1a00215213bb3" translate="yes" xml:space="preserve">
          <source>Gradle supports two languages for build scripts:</source>
          <target state="translated">Gradleはビルドスクリプトのために2つの言語をサポートしています。</target>
        </trans-unit>
        <trans-unit id="2fd0f11cc0565eea500951b2cff526bf32d99bc4" translate="yes" xml:space="preserve">
          <source>Gradle supports two languages for the build scripts. We have the following options:</source>
          <target state="translated">Gradleはビルドスクリプトのために2つの言語をサポートしています。以下のオプションがあります。</target>
        </trans-unit>
        <trans-unit id="d87bf69ff6157578fc2fcd2ba9dd05978704f9c9" translate="yes" xml:space="preserve">
          <source>Gradle task for compiling Kotlin sources.</source>
          <target state="translated">KotlinソースをコンパイルするためのGradleタスク。</target>
        </trans-unit>
        <trans-unit id="4a09374e25b0d58ba0d749966f8a7d5f70a1922d" translate="yes" xml:space="preserve">
          <source>Gradually change the return type of collection &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; functions to non-nullable</source>
          <target state="translated">コレクションの &lt;code&gt;min&lt;/code&gt; 関数と &lt;code&gt;max&lt;/code&gt; 関数の戻り値の型をnull許容でないものに徐々に変更します</target>
        </trans-unit>
        <trans-unit id="f71244b324fcc1c6b328413612267429db191347" translate="yes" xml:space="preserve">
          <source>Graduation of experimental API</source>
          <target state="translated">実験用APIの卒業</target>
        </trans-unit>
        <trans-unit id="dc1c6d4a7505aca84258226a0109982d4ee37319" translate="yes" xml:space="preserve">
          <source>Groovy language is the oldest supported scripting language for Gradle, it leverages the power of the dynamic typing and runtime features of the language. Sometimes it can be harder to maintain Groovy build scripts. IDEs are struggling to get through the dynamism of Groovy to provide helpful insights or code completion.</source>
          <target state="translated">Groovy 言語は Gradle で最も古くからサポートされているスクリプト言語で、動的な型付けとランタイム機能を活用しています。時には、Groovyビルドスクリプトのメンテナンスが難しくなることもあります。IDEはGroovyの動的な機能を使いこなすことで、有用な洞察やコード補完を提供するのに苦労しています。</target>
        </trans-unit>
        <trans-unit id="a7214450a2aa2acc2aff209936d73e98c04d25cc" translate="yes" xml:space="preserve">
          <source>Groovy scripts in &lt;code&gt;build.gradle&lt;/code&gt; files</source>
          <target state="translated">&lt;code&gt;build.gradle&lt;/code&gt; ファイル内のGroovyスクリプト</target>
        </trans-unit>
        <trans-unit id="2ae6967b07a45b63c8543a6c5e34052414ba32af" translate="yes" xml:space="preserve">
          <source>Grouping</source>
          <target state="translated">Grouping</target>
        </trans-unit>
        <trans-unit id="f580fcf315dbe0e3aac37a8e051a65190b4d82e6" translate="yes" xml:space="preserve">
          <source>Grouping function calls on an object: &lt;code&gt;with&lt;/code&gt;</source>
          <target state="translated">オブジェクトの関数呼び出しのグループ化： &lt;code&gt;with&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1bb9860eb5022e44d178a9eaf4fcdc57655695f" translate="yes" xml:space="preserve">
          <source>Groups are indexed from 1 to the count of groups in the regular expression. A group with the index 0 corresponds to the entire match.</source>
          <target state="translated">グループは、1から正規表現内のグループの数までのインデックスが付けられます。インデックス0のグループはマッチ全体に対応します。</target>
        </trans-unit>
        <trans-unit id="ac61ad0a10837ed5627a2dd0ab6b66c7c3e0676f" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">元の文字シーケンスの文字を、各文字に適用された特定の&lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーでグループ化し、各グループキーが対応する文字のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="d2d350494754a3bd923f181a90224cb9cf590352" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</target>
        </trans-unit>
        <trans-unit id="7cf73cc29f8dbedce10d3ff42ded5a6b73eda280" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">元の文字シーケンスの文字を、各文字に適用された特定の&lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーでグループ化し、対応する文字のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="346fca99a847fd81522697719b47e4d9be2925a6" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</target>
        </trans-unit>
        <trans-unit id="16819263b803ee1d619eddf7cea3cc3aa1ddb8a9" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">元の文字シーケンスの文字を、各文字に適用された特定の&lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーでグループ化し、各グループキーが対応する文字のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="ec9462a902044081c941bc01dd80fd18c25a3c6d" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</target>
        </trans-unit>
        <trans-unit id="834ceb29666dfabc2774c58d68cddf77c4b7e8b3" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">元の文字シーケンスの文字を、各文字に適用された特定の&lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーでグループ化し、対応する文字のリストに関連付けられた各グループキーを&lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="8faec9e70e853d1243873896887d86f6b26a40a1" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</target>
        </trans-unit>
        <trans-unit id="a3b218745ea0cc39939249fc515c9fb52230dc23" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">元の文字シーケンスの文字を、各文字に適用された特定の&lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーでグループ化し、各グループキーが対応する文字のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="aa607dec624fa976f2dc35e62083c3f589864460" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</target>
        </trans-unit>
        <trans-unit id="eab6055c069a2c7df989a9febe4f384188c0c9be" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">元の文字シーケンスの文字を、各文字に適用された特定の&lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーでグループ化し、対応する文字のリストに関連付けられた各グループキーを&lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="1e1722772c9fcdf13c173da691f7ed416bf37de8" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</target>
        </trans-unit>
        <trans-unit id="beb10184b9eaf2a19d2c8a85f0dcc9de8f275a3d" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;aggregate#kotlin.collections%24aggregate%28kotlin.collections.Grouping%28%28kotlin.collections.aggregate.T%2C+kotlin.collections.aggregate.K%29%29%2C+kotlin.Function4%28%28kotlin.collections.aggregate.K%2C+kotlin.collections.aggregate.R%2C+kotlin.collections.aggregate.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregate.R%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map.</source>
          <target state="translated">グループ&lt;a href=&quot;-grouping/index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、各グループの要素に&lt;a href=&quot;aggregate#kotlin.collections%24aggregate%28kotlin.collections.Grouping%28%28kotlin.collections.aggregate.T%2C+kotlin.collections.aggregate.K%29%29%2C+kotlin.Function4%28%28kotlin.collections.aggregate.K%2C+kotlin.collections.aggregate.R%2C+kotlin.collections.aggregate.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregate.R%29%29%29%2Foperation&quot;&gt;操作&lt;/a&gt;を順次適用して、以前に累積された値と現在の要素を引数として渡し、結果を新しいマップに保存します。</target>
        </trans-unit>
        <trans-unit id="f52b84e4a22cd7031d4c054373f2b53b2bcd58e6" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;aggregate#kotlin.collections%24aggregate(kotlin.collections.Grouping((kotlin.collections.aggregate.T,%20kotlin.collections.aggregate.K)),%20kotlin.Function4((kotlin.collections.aggregate.K,%20kotlin.collections.aggregate.R?,%20kotlin.collections.aggregate.T,%20kotlin.Boolean,%20kotlin.collections.aggregate.R)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;aggregate#kotlin.collections%24aggregate(kotlin.collections.Grouping((kotlin.collections.aggregate.T,%20kotlin.collections.aggregate.K)),%20kotlin.Function4((kotlin.collections.aggregate.K,%20kotlin.collections.aggregate.R?,%20kotlin.collections.aggregate.T,%20kotlin.Boolean,%20kotlin.collections.aggregate.R)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map.</target>
        </trans-unit>
        <trans-unit id="d78b573eb1ea66f3add23f57f9a4df87cbfded46" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">グループ&lt;a href=&quot;-grouping/index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、各グループの要素に&lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Foperation&quot;&gt;操作&lt;/a&gt;を順次適用して、以前に累積された値と現在の要素を引数として渡し、その結果を指定された&lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに格納します。</target>
        </trans-unit>
        <trans-unit id="c31631c151a343f9c8b5dabb1281b5c29af9a273" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/destination&quot;&gt;destination&lt;/a&gt; map.</target>
        </trans-unit>
        <trans-unit id="76bb6c1807250140b502881e8ffed09dd4b1fd1b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is provided by &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">グループ&lt;a href=&quot;-grouping/index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、各グループの要素に&lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;操作&lt;/a&gt;を順次適用して、以前に累積された値と現在の要素を引数として渡し、結果を新しいマップに保存します。アキュムレータの初期値は、&lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt;関数によって提供されます。</target>
        </trans-unit>
        <trans-unit id="c65c91e0b49e269f0aacbdeb1e8b6110be08d78b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the same &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">グループ&lt;a href=&quot;-grouping/index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、各グループの要素に&lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;操作&lt;/a&gt;を順次適用して、以前に累積された値と現在の要素を引数として渡し、結果を新しいマップに保存します。アキュムレータの初期値は同じで&lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValue&quot;&gt;はinitialValue&lt;/a&gt;グループごと。</target>
        </trans-unit>
        <trans-unit id="14438b03252190d88b47c52214444da5b75cf170" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is provided by &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is provided by &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</target>
        </trans-unit>
        <trans-unit id="3eb5e77739fb3f0557d67687ad744f1af73c24b7" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the same &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the same &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</target>
        </trans-unit>
        <trans-unit id="9854f2468f181697be0f2d6e46ea0904ecd6079d" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is provided by &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">グループ&lt;a href=&quot;-grouping/index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、各グループの要素に&lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;操作&lt;/a&gt;を順次適用して、以前に累積された値と現在の要素を引数として渡し、その結果を指定された&lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに格納します。アキュムレータの初期値は、&lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt;関数によって提供されます。</target>
        </trans-unit>
        <trans-unit id="889e9070bf99aa4bd4efd50edeaf2a68bfa9907b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the same &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">グループ&lt;a href=&quot;-grouping/index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、各グループの要素に&lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;操作&lt;/a&gt;を順次適用して、以前に累積された値と現在の要素を引数として渡し、その結果を指定された&lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに格納します。アキュムレータの初期値は同じで&lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValue&quot;&gt;はinitialValue&lt;/a&gt;グループごと。</target>
        </trans-unit>
        <trans-unit id="e26bb9c412996b6a5418cd0809fc777fed178a94" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is provided by &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is provided by &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</target>
        </trans-unit>
        <trans-unit id="37f0fd67f4552217edda6f5fb57f461c21447dcd" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the same &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the same &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</target>
        </trans-unit>
        <trans-unit id="83efeb50c4e9dec95e37f4820667b4239119591b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;reduce#kotlin.collections%24reduce%28kotlin.collections.Grouping%28%28kotlin.collections.reduce.T%2C+kotlin.collections.reduce.K%29%29%2C+kotlin.Function3%28%28kotlin.collections.reduce.K%2C+kotlin.collections.reduce.S%2C+kotlin.collections.reduce.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">グループ&lt;a href=&quot;-grouping/index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、グループの2番目の要素から順に各グループの要素に削減&lt;a href=&quot;reduce#kotlin.collections%24reduce%28kotlin.collections.Grouping%28%28kotlin.collections.reduce.T%2C+kotlin.collections.reduce.K%29%29%2C+kotlin.Function3%28%28kotlin.collections.reduce.K%2C+kotlin.collections.reduce.S%2C+kotlin.collections.reduce.T%2C+%29%29%29%2Foperation&quot;&gt;操作&lt;/a&gt;を適用し、以前に累積された値と現在の要素を引数として渡し、結果を新しいマップに格納します。アキュムレータの初期値は、グループの最初の要素です。</target>
        </trans-unit>
        <trans-unit id="2bf19ea4b61cd9873e10f6e15627becebec930bc" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;reduce#kotlin.collections%24reduce(kotlin.collections.Grouping((kotlin.collections.reduce.T,%20kotlin.collections.reduce.K)),%20kotlin.Function3((kotlin.collections.reduce.K,%20kotlin.collections.reduce.S,%20kotlin.collections.reduce.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;reduce#kotlin.collections%24reduce(kotlin.collections.Grouping((kotlin.collections.reduce.T,%20kotlin.collections.reduce.K)),%20kotlin.Function3((kotlin.collections.reduce.K,%20kotlin.collections.reduce.S,%20kotlin.collections.reduce.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the first element of the group.</target>
        </trans-unit>
        <trans-unit id="933500c1ca8e977ee9b0687537291630d3768a4b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">グループ&lt;a href=&quot;-grouping/index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、グループの2番目の要素から順に各グループの要素に削減&lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Foperation&quot;&gt;操作&lt;/a&gt;を適用し、以前に累積された値と現在の要素を引数として渡し、結果を指定された&lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに格納します。アキュムレータの初期値は、グループの最初の要素です。</target>
        </trans-unit>
        <trans-unit id="6807429f4d55a1f34d26de339744b2d8d2671f2b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the first element of the group.</target>
        </trans-unit>
        <trans-unit id="015ae8e55e1e1ac2045e4141888e3b1d7417038b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and counts elements in each group to the given &lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo%28kotlin.collections.Grouping%28%28kotlin.collections.eachCountTo.T%2C+kotlin.collections.eachCountTo.K%29%29%2C+kotlin.collections.eachCountTo.M%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">グループ&lt;a href=&quot;-grouping/index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、各グループの要素を指定された&lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo%28kotlin.collections.Grouping%28%28kotlin.collections.eachCountTo.T%2C+kotlin.collections.eachCountTo.K%29%29%2C+kotlin.collections.eachCountTo.M%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップにカウントします。</target>
        </trans-unit>
        <trans-unit id="83005e92a6cd8a98b424194ea12d5c603886f856" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and counts elements in each group to the given &lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo(kotlin.collections.Grouping((kotlin.collections.eachCountTo.T,%20kotlin.collections.eachCountTo.K)),%20kotlin.collections.eachCountTo.M)/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and counts elements in each group to the given &lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo(kotlin.collections.Grouping((kotlin.collections.eachCountTo.T,%20kotlin.collections.eachCountTo.K)),%20kotlin.collections.eachCountTo.M)/destination&quot;&gt;destination&lt;/a&gt; map.</target>
        </trans-unit>
        <trans-unit id="490f294445acd743261ddc1eb23853d6e61b542c" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../aggregate#kotlin.collections%24aggregate%28kotlin.collections.Grouping%28%28kotlin.collections.aggregate.T%2C+kotlin.collections.aggregate.K%29%29%2C+kotlin.Function4%28%28kotlin.collections.aggregate.K%2C+kotlin.collections.aggregate.R%2C+kotlin.collections.aggregate.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregate.R%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map.</source>
          <target state="translated">グループ&lt;a href=&quot;index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、各グループの要素に&lt;a href=&quot;../aggregate#kotlin.collections%24aggregate%28kotlin.collections.Grouping%28%28kotlin.collections.aggregate.T%2C+kotlin.collections.aggregate.K%29%29%2C+kotlin.Function4%28%28kotlin.collections.aggregate.K%2C+kotlin.collections.aggregate.R%2C+kotlin.collections.aggregate.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregate.R%29%29%29%2Foperation&quot;&gt;操作&lt;/a&gt;を順次適用して、以前に累積された値と現在の要素を引数として渡し、結果を新しいマップに保存します。</target>
        </trans-unit>
        <trans-unit id="e84b78281375756fcdd0beb8006d504c305de7bb" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../aggregate#kotlin.collections%24aggregate(kotlin.collections.Grouping((kotlin.collections.aggregate.T,%20kotlin.collections.aggregate.K)),%20kotlin.Function4((kotlin.collections.aggregate.K,%20kotlin.collections.aggregate.R?,%20kotlin.collections.aggregate.T,%20kotlin.Boolean,%20kotlin.collections.aggregate.R)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../aggregate#kotlin.collections%24aggregate(kotlin.collections.Grouping((kotlin.collections.aggregate.T,%20kotlin.collections.aggregate.K)),%20kotlin.Function4((kotlin.collections.aggregate.K,%20kotlin.collections.aggregate.R?,%20kotlin.collections.aggregate.T,%20kotlin.Boolean,%20kotlin.collections.aggregate.R)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map.</target>
        </trans-unit>
        <trans-unit id="d0d422dce75fcd6501bddf563bfffca9153d62f0" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">グループ&lt;a href=&quot;index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、各グループの要素に&lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Foperation&quot;&gt;操作&lt;/a&gt;を順次適用して、以前に累積された値と現在の要素を引数として渡し、その結果を指定された&lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに格納します。</target>
        </trans-unit>
        <trans-unit id="49043aae2ae8239d9ff33b791e426da2b7ddd9cd" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/destination&quot;&gt;destination&lt;/a&gt; map.</target>
        </trans-unit>
        <trans-unit id="b3acede8354576676a7060a6788281a42ba83ce9" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is provided by &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">グループ&lt;a href=&quot;index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、各グループの要素に&lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;操作&lt;/a&gt;を順次適用して、以前に累積された値と現在の要素を引数として渡し、結果を新しいマップに保存します。アキュムレータの初期値は、&lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt;関数によって提供されます。</target>
        </trans-unit>
        <trans-unit id="bee30654191ef79d0432bd589fd07c4fc64c2c69" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the same &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">グループ&lt;a href=&quot;index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、各グループの要素に&lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;操作&lt;/a&gt;を順次適用して、以前に累積された値と現在の要素を引数として渡し、結果を新しいマップに保存します。アキュムレータの初期値は同じで&lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValue&quot;&gt;はinitialValue&lt;/a&gt;グループごと。</target>
        </trans-unit>
        <trans-unit id="6f872af8fb0409f68f45c9a310c99062b4c6acbb" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is provided by &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is provided by &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</target>
        </trans-unit>
        <trans-unit id="6207086f6f3ad1a2f4fe638d7281a6d2d2a6bfde" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the same &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the same &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</target>
        </trans-unit>
        <trans-unit id="0ed265b07fc8dddafb0187a982928efab397ce8f" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is provided by &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">グループ&lt;a href=&quot;index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、各グループの要素に&lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;操作&lt;/a&gt;を順次適用して、以前に累積された値と現在の要素を引数として渡し、その結果を指定された&lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに格納します。アキュムレータの初期値は、&lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt;関数によって提供されます。</target>
        </trans-unit>
        <trans-unit id="993e5ec052dbbeb5a3ec6c7dcfcb192706c6c5a9" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the same &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">グループ&lt;a href=&quot;index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、各グループの要素に&lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;操作&lt;/a&gt;を順次適用して、以前に累積された値と現在の要素を引数として渡し、その結果を指定された&lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに格納します。アキュムレータの初期値は同じで&lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValue&quot;&gt;はinitialValue&lt;/a&gt;グループごと。</target>
        </trans-unit>
        <trans-unit id="cdd2d8ebf8c1d61fb92c6427de8b3e55569c3960" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is provided by &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is provided by &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</target>
        </trans-unit>
        <trans-unit id="e51ab8517eab3bfe25b9b0a9c43678a44556ea4c" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the same &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the same &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</target>
        </trans-unit>
        <trans-unit id="c13abf5bc4eeafadf280004e040101dde3fb83cb" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;../reduce#kotlin.collections%24reduce%28kotlin.collections.Grouping%28%28kotlin.collections.reduce.T%2C+kotlin.collections.reduce.K%29%29%2C+kotlin.Function3%28%28kotlin.collections.reduce.K%2C+kotlin.collections.reduce.S%2C+kotlin.collections.reduce.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">グループ&lt;a href=&quot;index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、グループの2番目の要素から順に各グループの要素に削減&lt;a href=&quot;../reduce#kotlin.collections%24reduce%28kotlin.collections.Grouping%28%28kotlin.collections.reduce.T%2C+kotlin.collections.reduce.K%29%29%2C+kotlin.Function3%28%28kotlin.collections.reduce.K%2C+kotlin.collections.reduce.S%2C+kotlin.collections.reduce.T%2C+%29%29%29%2Foperation&quot;&gt;操作&lt;/a&gt;を適用し、以前に累積された値と現在の要素を引数として渡し、結果を新しいマップに格納します。アキュムレータの初期値は、グループの最初の要素です。</target>
        </trans-unit>
        <trans-unit id="701b0d8ef55ce90cadb15bc8ef5711de7e64828b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;../reduce#kotlin.collections%24reduce(kotlin.collections.Grouping((kotlin.collections.reduce.T,%20kotlin.collections.reduce.K)),%20kotlin.Function3((kotlin.collections.reduce.K,%20kotlin.collections.reduce.S,%20kotlin.collections.reduce.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;../reduce#kotlin.collections%24reduce(kotlin.collections.Grouping((kotlin.collections.reduce.T,%20kotlin.collections.reduce.K)),%20kotlin.Function3((kotlin.collections.reduce.K,%20kotlin.collections.reduce.S,%20kotlin.collections.reduce.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the first element of the group.</target>
        </trans-unit>
        <trans-unit id="abbc3f18ca4e8fe2849f2e16a8381bdec04177da" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">グループ&lt;a href=&quot;index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、グループの2番目の要素から順に各グループの要素に削減&lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Foperation&quot;&gt;操作&lt;/a&gt;を適用し、以前に累積された値と現在の要素を引数として渡し、結果を指定された&lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに格納します。アキュムレータの初期値は、グループの最初の要素です。</target>
        </trans-unit>
        <trans-unit id="8e5e985f01683758c44d7c9923fccb94f2cf72aa" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the first element of the group.</target>
        </trans-unit>
        <trans-unit id="def242ad6826d52ffd2160988337cd2d241e310d" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and counts elements in each group to the given &lt;a href=&quot;../each-count-to#kotlin.collections%24eachCountTo%28kotlin.collections.Grouping%28%28kotlin.collections.eachCountTo.T%2C+kotlin.collections.eachCountTo.K%29%29%2C+kotlin.collections.eachCountTo.M%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">グループ&lt;a href=&quot;index&quot;&gt;化&lt;/a&gt;ソースの要素をキーでグループ化し、各グループの要素を指定された&lt;a href=&quot;../each-count-to#kotlin.collections%24eachCountTo%28kotlin.collections.Grouping%28%28kotlin.collections.eachCountTo.T%2C+kotlin.collections.eachCountTo.K%29%29%2C+kotlin.collections.eachCountTo.M%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップにカウントします。</target>
        </trans-unit>
        <trans-unit id="75c6f356334d079413ca86cb4f880a11e2068327" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and counts elements in each group to the given &lt;a href=&quot;../each-count-to#kotlin.collections%24eachCountTo(kotlin.collections.Grouping((kotlin.collections.eachCountTo.T,%20kotlin.collections.eachCountTo.K)),%20kotlin.collections.eachCountTo.M)/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and counts elements in each group to the given &lt;a href=&quot;../each-count-to#kotlin.collections%24eachCountTo(kotlin.collections.Grouping((kotlin.collections.eachCountTo.T,%20kotlin.collections.eachCountTo.K)),%20kotlin.collections.eachCountTo.M)/destination&quot;&gt;destination&lt;/a&gt; map.</target>
        </trans-unit>
        <trans-unit id="33bdc57b4803e7486893c856c65f9f2dc83d888d" translate="yes" xml:space="preserve">
          <source>Groups elements from the Grouping source by key and counts elements in each group.</source>
          <target state="translated">グループ化ソースの要素をキーでグループ化し、各グループ内の要素をカウントします。</target>
        </trans-unit>
        <trans-unit id="0049cbdd9a79fa0c1c0a57f41eb649c85fb3f9da" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用される指定された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元の配列の要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="1c51d9088c4daf2245ac28bdf16088c56db1ffb6" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用される指定された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元の配列の要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="b2c08078d6fe0e8e94be2dbd5c83cf3ded89183e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用される指定された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元の配列の要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="2114e4aff30894275945688a229421607cdf62f9" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用される指定された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元の配列の要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="a2bb5c5822f15801f72e694bf63c203633cabb8e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用される指定された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元の配列の要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="fdef4c643a8c0c33ffb57b3bbff3489b47f9e492" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用される指定された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元の配列の要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="5aef18a32d519975f70caf15dc5e44830c8833f7" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用される指定された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元の配列の要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="5f139e736a7f90fc2da9b03415aad0910e913890" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用される指定された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元の配列の要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="ae18d1f7b9a9fac041c1f739af868e400dd69900" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用される指定された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元の配列の要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="4f3177e8bbafa7ae57628d22bf32feb937052adf" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用される指定された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元の配列の要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="bb266de87014489fcf7146d343f2089ced330186" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用される指定された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元の配列の要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="ed7d644cb34fbeb886322ce233475a7ba83b2351" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用される指定された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元の配列の要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="82394286609da7139425ea67f88a8ceec3cb07d3" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用される指定された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元の配列の要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="00be0847533736b989db053061f9d8259f5ad30c" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="851dc2a7f0b5bf3f0550eb1666343fa4298b77e7" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="d0686021f7dd8de62016ee3edbfb2fd36fd9af47" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="b4485e588db84ca7c3dfeb796a75f2b1646eaa90" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="35d37c5aeaf63c6b99ac03443d5c7d6fc8c4ed69" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="42dd362008c94e1c24999bff86f64540a0d78915" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="73a2fc8ff63aac6c8ba7ba540f42315241f445a4" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="9cd16b19000fbfd1271e5a6063fe1f5998f36bd0" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="aee9f29d1a17ba05da4ea0df4b3ad33e9ce1ac9f" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="7d8d6b89a1ffd4edf5f704956fd67152bc730c30" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="6fc1d1216ab12356ac9f4534f9863816b14f47b5" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="0e559ac6014c6475b204e822ee249f10246561c0" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="40daa48f46aa32fde5690ab8a81a97501bd4554d" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="b97359dd418232f3e9dfba4839af5b34080c030a" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="ce5a0635a524f1fec495708d53a45e84dfbe68b5" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="958569e0463e46cabce02a2bbd6365d74a9b357e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="f0fb79969db9482e65fa3420c1d0bf7843b07e7f" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="306933cb3933a6a1a74b8d42cc0396d5c33a34dc" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="565bf8325f2e55755766a63645c8ab50123f18b5" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="391eb4b360ddda6247da1f2acec1ff424920a711" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="4eaa4fffc174c3473d3d102b97c7875e8172a200" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="48d9c4775abfc93a0b1d431d33160466750f89f2" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="b8605775196a80b16b6519486fb7c28367deeec5" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="0dc001caed09ffefd53b93e3197a629ed1fc0ec4" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="a72b276dac35986efed8b6df558338b126cfdf57" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="0226904415121a1435b0100b90ba0df857d6c486" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="b26d70081c9844a17a1b7dedbd25e3b5d8bccd9e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="53ca44e9009ee71d251a3b844ed67db64fe945a2" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="bd9cf0053728f15d0a04e11c79ecb2b08f4e2d79" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="4e23304eaf85eacc24085e9d44044b80eba0d853" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="b8e21cc415d3a6b7422e1cb1cc57bc3a34816407" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="a673bcb10b2afd9a53d6e2930f5d472748f33ab3" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="2fa4db2d190a336a56066a41714cf2d0d9833be3" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="3dbdb6025dfcd229b2af63a2bcf4111f0cc34cac" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="5946536c3ea37e9763e0415867c32eaeeeb97963" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="68e74c2740eed77d8bcefc6f236f43775a6ec431" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="184e8c08bebdae365e9e5a2e376642b16492ef98" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="c50753c669c09345d773fbfb1fe3a6cc83d1bbc8" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="819cc0bf941cc430b4e7d67fbb606c3dc00fce1e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="f1ea1983ee1ace62ea4d7847ae47f2af29e3e8b7" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用される指定された&lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元の配列の要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="60057156284b20a226c459687a5df5375c98b407" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="6f9c701e783385331f9ae2fa7a4574978463d51e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="c4346532147f3b7227b76a9ea9ccb0dcb1ef48ff" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original array by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="aeab561390722ea1c65c8dd6cb19582a63491afa" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーによって元のコレクションの要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="6b223949c43afb147fd558310083444af5573fdc" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="517d4d0a40fb4e4ebf5b17ce5e285bf3ea95e744" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーで元のコレクションの要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="fdb96cee8b23426759c383481c1e9e091bac835b" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="18645dce0a179d46721040a013c7c2aaf281e353" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーによって元のコレクションの要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="7d871694cc7e99432d86f1ef7a7307d8a0b67f70" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="839f3ff0a4b21a3fb439fd9a44418a2158e05fa4" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーで元のコレクションの要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="d8afc4e0571a5dbffbed0463fbf8088fa2876f03" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="33bf3bb48ad29661f3baae393a0cc99f73167717" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーによって元のコレクションの要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="f3f8482249d4dd70954b6803191cd2679b868e2c" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original collection by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="7931ac3eb2cb1ac7f85b3778bd370248cf181321" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーで元のコレクションの要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="0994ec7bb2bbbda52f55efe47fea24be4785b00e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original collection by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="b738b8d42d76ab1d26042cd7bca1712e233e1b00" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元のシーケンスの要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="9c21c1183dc7cdbc83cbd116e0d231316200c5ff" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="97ac36e3e9fd52501da0a3b987cc43c0293e964d" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用される特定の&lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元のシーケンスの要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="0849a7627e44c1cb08f9cd081b09688106279546" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="8a8875f0180052555387882539b34b0e16ba24e2" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用された特定の&lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元のシーケンスの要素をグループ化し、各グループキーが対応する要素のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="1ef7e07bd10fd401a375bd880a4a64dce16aa688" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="05b9a5d5612ee02f871ecbd0b90c1f1934726c0f" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">各要素に適用される特定の&lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されるキーで元のシーケンスの要素をグループ化し、対応する要素のリストに関連付けられた各グループキーを&lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="a84388243a1cb9bf17e3b36ea4d2ca2d008c524e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</target>
        </trans-unit>
        <trans-unit id="0c13d802fc83fb417f4db679bc54a8b8dd9c4cd6" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="edf45bfebe04f5e0932aa2ebd24d8f8ad23cf236" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="ec68bf694aaedf58fbfabe0c2f60c18f77929117" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="30925fcc6b9f20201f2ddac9f2047ff0b5d9574b" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="9e12a790fbd231e076f738a178fccc8139b8c554" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="5a588399d89bc5711966ed2730aedf4dbbc22c98" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="bef79b8ef9f6baedb0d78a983d328c8bf8fa09e0" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="4a9b47e51433f950b5a1bd41c28bae6d294580d6" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="5d0867a1b19df800095755738cbfc807be904120" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="b833a48470c0f3342699c408599dfb224a17fc29" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="9323fc10d5fdfdc6ca5c0862bd237bce5d316229" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="262fd693f93c7d8fc592a4a596034da2937b873c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="105d959656cfbe5d1a8214c7c01d2e5689ed25e9" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="ecf4088d9c38778f598151be7feb7b7774df4498" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元のコレクションの各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="3e818374c832f11ad7cf45f6178a91f51d726c8f" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="d43c17790dc4757831d2cc50497c2e18b09d0601" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="37b71ce400ec291fcef9e599c5f9caee14462f98" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="7a48686c2dea60384d7268be3076663be02e3ccc" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="dff2bb1f566c5a3bc8920566b9e44fc8cc19de29" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="073f6639c0e8a5161ab11731ee32de336db0b24c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="2b5328206de5ee8f25250e777d0ce8504c619ffd" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="93bcc37951503ce8f435d9dd7f415ef907f2fe04" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="8481a8141b9fca364a117ac317145fcddcdce0b8" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="99a29eff32f18cebce5eaf3017168b185cd4d887" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="f60c8c1cf857e5f500c8a1f4ff2857524de2f085" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="6a9e85939866bd6c507e4c0389b8135268fd91e3" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="ff37a5858a1e7cdefab2bfcf1039804f418f1712" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="3514bab0fde26cbf388eca1ef93294598a9e6f13" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="5e14e17af229b7a64cd72c9e61381d31167b02c6" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="15afb1e1aafcde9c9f0c493b7b5514d708c3ef21" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="6102f783ca6b80ae09922c8a9d4c9e3a06950b2c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="bfd1d751a5b539bd58d073a68e86a87eda78d821" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="6c7492e3646e11be56f82e0e3e11b83b12c93472" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="90040553349b0e00671106e1fa0d8a198cb768af" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="75946a44f171c6d433da12b2a5c3adcb053d5d8a" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="1388bb95a8bb43baa4d446382e92690f393842e5" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="f797f7632480a1a27f645be371f21e618e72d2f2" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="b8aa35750fe93dcea4289b1f9976ae9787e28035" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="1211c1d0459b8fb7bd06c13ce866bd49a3af49e8" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="2ded10c3a8711d6ea075fd3e37b8a98fb491c5ce" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="5f2aa4bf740741abbe1bf0a2e26d33e482572358" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="e91b7e58de38408e07d485e9a36d764d14890a9f" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元のコレクションの各要素に適用された&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="8cb093e9d155f168a630e7aede8f7059f633d240" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="0ad68d3c5e60aee8250b8e17e15b15cb8ac4b1d9" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="aa4f46661a4e5ec7b0630ffeb46eda4ee66f8d8a" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="d4ffea609218a4d7817e1121f93a4a9aa8b0ff47" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="6cfbc51899fa056af66031ae18cb2a4d364ca8ce" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="2d7afd4e18186602c7c9f75a9c192d4e83926abd" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="5b63fd1cf47e396ac9cd84945487e899d4160ec0" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="728c3ca682cd740058691866d114df4ed247906f" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="5bd4c94b207344d45b189203d30c685f9860f5aa" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="6472f8a967cf6245c2c00dbcf7377ea042439d61" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="be7a0bcafa14a0c8d1d1eaf216c7892b7844065a" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="7b2063272bc8475372d68ba6f4e291ce4eb4f944" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="7979b93d1658f4ea63f4b83055a526a207587537" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="824c5d62bf5b4938a4aae65549bdfbedd3c690ae" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="d4f604c6cf9776efcb0fe97f434c98f29bdb30c9" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">文字に適用された特定の&lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の文字シーケンスの各文字に適用された&lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="62f5eace8d7430a4c5c2bea936df42368df12f17" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="171645e45f713d2812e6be2c0af2d2e851f725e7" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">文字に適用された特定の&lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の文字シーケンスの各文字に適用された&lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="f5eb122ee5f9296f4be7fb1d730758d514d26017" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="4b7ae2e49f1074a964984328edf28807a4559cf8" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元のコレクションの各要素に適用された&lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="a583367e4596cea2375c96d5c33bbaf2492abbd6" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="c42e35967e0dd9f88938b50e060ea0e9bc5436b8" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元のシーケンスの各要素に適用された&lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="5aa63f587015029a0ef487442013804505efc6db" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="d328f2ed4366d09469e07761469f5b31429bef7f" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">文字に適用された特定の&lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の文字シーケンスの各文字に適用された&lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="d301c21048ea8a999d42d1f7ed4ef685c21030dc" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="91a56fc90f80e9983e4d12c68b952245f2c4863d" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元のコレクションの各要素に適用された&lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="c05ad7e6c70a3d43eb32106de6b5bf5c6da323a0" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="6133e7ffcba60e8c7ca183d8754244013dee3051" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元のシーケンスの各要素に適用された&lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="47265c2657b6a926528cb7d9c427b73abe06c12c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="c3249a0b5205f9c05c4f99cd18f9870458d31e02" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">文字に適用された特定の&lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の文字シーケンスの各文字に適用された&lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="166baa96ab7a1a69b981ec5750e0ff539841a42e" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="b4efab6e1ea870536f5cc2e69ae3873ac048af7c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="c30df3e35a857b962ce402eb2bfb40bad2ff2661" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元のコレクションの各要素に適用された&lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="df1154b067448259d39461c53e341dd45348e7a5" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="b77cbf8ddc40afafa0077e39bfc24f8a3bb62261" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="cbab5fc57f5e6a44c19a84ad4fa26397fdc1c1ad" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元のシーケンスの各要素に適用された&lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="e85ec99a0a08aeac0d7277d4be8d9ac8b851d048" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="82fd00734c32884d111e62bfa57dfd2543bb77c1" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">文字に適用された特定の&lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の文字シーケンスの各文字に適用された&lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、各グループキーが対応する値のリストに関連付けられているマップを返します。</target>
        </trans-unit>
        <trans-unit id="2812e3260030a692b4e5a1c003e7b35b693912d7" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">Groups values returned by the &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</target>
        </trans-unit>
        <trans-unit id="61af8b8644747449b7ea854a912826205e29374c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の配列の各要素に適用された&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="57b7411c62c1b48f7b2329cc0f360e751a1d5f04" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元のコレクションの各要素に適用された&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="886377e472e1a87f40381595e3ac451afa5c137f" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">元の配列の各要素に適用された&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値を、要素に適用された特定の&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによってグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="f5c8eadbdf334cd6d3c254e2f98e976036a64579" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">元のコレクションの各要素に適用された&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値を、要素に適用された特定の&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによってグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="ec746744415ac5324814073f398ea295c5d97be1" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">要素に適用された特定の&lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元のシーケンスの各要素に適用された&lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="8bebc800c05ec839bcf0d26565459321def9c6f6" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">元のシーケンスの各要素に適用された&lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値を、要素に適用された特定の&lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによってグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/destination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="a5af5557d5a229c09e04a3dabd9144f68eed9121" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">文字に適用された特定の&lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによって元の文字シーケンスの各文字に適用された&lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値をグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="045313e9d37e7902173be877c270d12d829e38f8" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">元のcharシーケンスの各文字に適用された&lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt;関数によって返された値を、その文字に適用された特定の&lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt;関数によって返されたキーによってグループ化し、対応する値のリストに関連付けられた各グループキーを&lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;宛先&lt;/a&gt;マップに配置します。</target>
        </trans-unit>
        <trans-unit id="0b4e0ad36013170249087a39af06addff8702427" translate="yes" xml:space="preserve">
          <source>Guide to UI programming with coroutines</source>
          <target state="translated">コアーチンを使ったUIプログラミングガイド</target>
        </trans-unit>
        <trans-unit id="ffcd6fd3be2b8e68d56b152d3c64c5bfe63651d1" translate="yes" xml:space="preserve">
          <source>Guide to reactive streams with coroutines</source>
          <target state="translated">コアーチンを用いたリアクティブ・ストリームのガイド</target>
        </trans-unit>
        <trans-unit id="1ba3456507ad0628ffef08bfa52a7b0cd368f255" translate="yes" xml:space="preserve">
          <source>HIDDEN</source>
          <target state="translated">HIDDEN</target>
        </trans-unit>
        <trans-unit id="0d32529c866e8eac25caf2442d2cc1202e340175" translate="yes" xml:space="preserve">
          <source>HOURS</source>
          <target state="translated">HOURS</target>
        </trans-unit>
        <trans-unit id="cb19a6374948586d14e2b1a2c546309492910187" translate="yes" xml:space="preserve">
          <source>HTMLAllCollection</source>
          <target state="translated">HTMLAllCollection</target>
        </trans-unit>
        <trans-unit id="4c52783da612b22fe54d1b6ac95e715dd9c1b742" translate="yes" xml:space="preserve">
          <source>HTMLCollection</source>
          <target state="translated">HTMLCollection</target>
        </trans-unit>
        <trans-unit id="4160c6e1a844a0e46d0b25c230278933561d83be" translate="yes" xml:space="preserve">
          <source>HTMLHyperlinkElementUtils</source>
          <target state="translated">HTMLHyperlinkElementUtils</target>
        </trans-unit>
        <trans-unit id="5afa4ce27f1e140932faf73c7ec2657e9e9fb1a9" translate="yes" xml:space="preserve">
          <source>HTMLOrSVGImageElement</source>
          <target state="translated">HTMLOrSVGImageElement</target>
        </trans-unit>
        <trans-unit id="e4260e00d7ae68e26d8b2788375dd101818548cd" translate="yes" xml:space="preserve">
          <source>HTMLOrSVGScriptElement</source>
          <target state="translated">HTMLOrSVGScriptElement</target>
        </trans-unit>
        <trans-unit id="f5e84acdec73cacccdd6a0e6708e899e233ab5ef" translate="yes" xml:space="preserve">
          <source>Hadi Hariri, Edoardo Vacchi, S&amp;eacute;bastien Deleuze</source>
          <target state="translated">ハディハリリ、エドアルドヴァッキ、セバスチャンドゥルーズ</target>
        </trans-unit>
        <trans-unit id="c0a888dd9c427e4a217a64402be233d1b8e8282e" translate="yes" xml:space="preserve">
          <source>Handling signature clashes with &lt;code&gt;@JvmName&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@JvmName&lt;/code&gt; による署名の衝突の処理</target>
        </trans-unit>
        <trans-unit id="6a7b0d82dac8b36df9262e7f047f7d42bc13f6ba" translate="yes" xml:space="preserve">
          <source>Hands-on Labs</source>
          <target state="translated">ハンズオンラボ</target>
        </trans-unit>
        <trans-unit id="f5b53691461c367d22af5a5d9ea5e5bdb4bd573d" translate="yes" xml:space="preserve">
          <source>Hands-on experience is the way to master your Kotlin skills on real examples right in the browser:</source>
          <target state="translated">ハンズオン体験は、ブラウザ上で実際の例を見ながらKotlinのスキルをマスターする方法です。</target>
        </trans-unit>
        <trans-unit id="c7e218e13ccebeed31dc7c2a8e9a7a5d7435f040" translate="yes" xml:space="preserve">
          <source>Hands-on labs are long-form tutorials that help you get to know a technology by guiding you through a self-contained project related to a specific topic.</source>
          <target state="translated">ハンズオンラボは、特定のトピックに関連した自己完結型のプロジェクトを通して、技術を知るのに役立つ長時間のチュートリアルです。</target>
        </trans-unit>
        <trans-unit id="a27e0d652450f11c5a65726ad51c1e32bfd59aa5" translate="yes" xml:space="preserve">
          <source>Hands-on labs for Kotlin/JS</source>
          <target state="translated">Kotlin/JSのハンズオンラボ</target>
        </trans-unit>
        <trans-unit id="a9b3bcc1c1b6077725b43c7b2b03b2329c85a7d0" translate="yes" xml:space="preserve">
          <source>Hard Keywords</source>
          <target state="translated">ハードキーワード</target>
        </trans-unit>
        <trans-unit id="97a2b75e2d466574b1a6c8cc957b97c7acf70c1a" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface, which additionally preserves the insertion order of entries during the iteration.</source>
          <target state="translated">&lt;a href=&quot;-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt;インターフェースのハッシュテーブルベースの実装。これにより、反復中にエントリの挿入順序がさらに保持されます。</target>
        </trans-unit>
        <trans-unit id="d0ceb916e1d644fa6b5389696f5076cf8fd624c1" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt;インターフェースのハッシュテーブルベースの実装。</target>
        </trans-unit>
        <trans-unit id="16326864f33a381692b73eed3eeaf677ec94bad6" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;../-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface, which additionally preserves the insertion order of entries during the iteration.</source>
          <target state="translated">&lt;a href=&quot;../-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt;インターフェースのハッシュテーブルベースの実装。これにより、反復中にエントリの挿入順序がさらに保持されます。</target>
        </trans-unit>
        <trans-unit id="f0bdef08fd6dd05500473c598e6d74a82da5a9fd" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;../-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;../-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt;インターフェースのハッシュテーブルベースの実装。</target>
        </trans-unit>
        <trans-unit id="7ea419b54a457cb3c6c5cc65609c5ace43529e56" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;../../kotlin.collections/-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface, which additionally preserves the insertion order of entries during the iteration.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt;インターフェースのハッシュテーブルベースの実装。これにより、反復中にエントリの挿入順序がさらに保持されます。</target>
        </trans-unit>
        <trans-unit id="c5be46be14f718f12035351a7fec221127466ed7" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;../../kotlin.collections/-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt;インターフェースのハッシュテーブルベースの実装。</target>
        </trans-unit>
        <trans-unit id="9b4378e29bed19a0caf75d9accb188eba1f1cb68" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface, which additionally preserves the insertion order of entries during the iteration.</source>
          <target state="translated">&lt;a href=&quot;index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt;インターフェースのハッシュテーブルベースの実装。これにより、反復中にエントリの挿入順序がさらに保持されます。</target>
        </trans-unit>
        <trans-unit id="158ac569cb9477fc0e1256d1493d1370cd5b34b5" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt;インターフェースのハッシュテーブルベースの実装。</target>
        </trans-unit>
        <trans-unit id="aa8c17a3b1dda3ebc62cb63e33bdab65004a22b7" translate="yes" xml:space="preserve">
          <source>HashChangeEventInit</source>
          <target state="translated">HashChangeEventInit</target>
        </trans-unit>
        <trans-unit id="ba62d7b8d0b157f714c6a6132554b38789c6ada5" translate="yes" xml:space="preserve">
          <source>HashMap</source>
          <target state="translated">HashMap</target>
        </trans-unit>
        <trans-unit id="cac17f9bdb6febebe0052a72f2ab8a6828d20944" translate="yes" xml:space="preserve">
          <source>HashSet</source>
          <target state="translated">HashSet</target>
        </trans-unit>
        <trans-unit id="8503ede3ea63ea360679c1a7bb9c6feb415c1aeb" translate="yes" xml:space="preserve">
          <source>Have fun!</source>
          <target state="translated">楽しもう!</target>
        </trans-unit>
        <trans-unit id="614c8c725939c1409d2367860130473abc3d4ef4" translate="yes" xml:space="preserve">
          <source>Having multiple files which have the same generated Java class name (the same package and the same name or the same &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-name/index&quot;&gt;&lt;code&gt;@JvmName&lt;/code&gt;&lt;/a&gt; annotation) is normally an error. However, the compiler has the ability to generate a single Java facade class which has the specified name and contains all the declarations from all the files which have that name. To enable the generation of such a facade, use the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-multifile-class/index&quot;&gt;&lt;code&gt;@JvmMultifileClass&lt;/code&gt;&lt;/a&gt; annotation in all of the files.</source>
          <target state="translated">同じ生成されたJavaクラス名（同じパッケージ、同じ名前、または同じ&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-name/index&quot;&gt; &lt;code&gt;@JvmName&lt;/code&gt; &lt;/a&gt;アノテーション）を持つ複数のファイルがあると、通常はエラーになります。ただし、コンパイラーには、指定された名前を持ち、その名前を持つすべてのファイルからのすべての宣言を含む単一のJavaファサードクラスを生成する機能があります。このようなファサードの生成を有効にするには、すべてのファイルで&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-multifile-class/index&quot;&gt; &lt;code&gt;@JvmMultifileClass&lt;/code&gt; &lt;/a&gt;アノテーションを使用します。</target>
        </trans-unit>
        <trans-unit id="1f242aabecbf270e9098f316d26a6f3578a9273f" translate="yes" xml:space="preserve">
          <source>Having the &lt;code&gt;lengthComparator&lt;/code&gt;, you are able to arrange strings by their length instead of the default lexicographical order.</source>
          <target state="translated">持っ &lt;code&gt;lengthComparator&lt;/code&gt; を、あなたの代わりにデフォルトの辞書順の彼らの長さの文字列を手配することができます。</target>
        </trans-unit>
        <trans-unit id="2c0eaa8edf655cc1e8de855aec9d918e7b1ea95d" translate="yes" xml:space="preserve">
          <source>Having the ability to iterate in both directions, means the &lt;code&gt;ListIterator&lt;/code&gt; can still be used after it reaches the last element.</source>
          <target state="translated">両方向に反復する機能があるということは、 &lt;code&gt;ListIterator&lt;/code&gt; が最後の要素に到達した後も引き続き使用できることを意味します。</target>
        </trans-unit>
        <trans-unit id="90be45baa04a9d5a158798fb0b4bf37260137255" translate="yes" xml:space="preserve">
          <source>Having the receiver as the return value, you can easily include &lt;code&gt;apply&lt;/code&gt; into call chains for more complex processing.</source>
          <target state="translated">戻り値としてレシーバーを &lt;code&gt;apply&lt;/code&gt; すると、適用を呼び出しチェーンに簡単に組み込んで、より複雑な処理を行うことができます。</target>
        </trans-unit>
        <trans-unit id="e0d9450925442ce470d2e864cab9481d218ffe6d" translate="yes" xml:space="preserve">
          <source>Header files under the covers</source>
          <target state="translated">カバーの下のヘッダーファイル</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="9ed4e25a00846b8efd8b4c649f7a88f722c16c20" translate="yes" xml:space="preserve">
          <source>Hello Kotlin/Native</source>
          <target state="translated">コトリン/ネイティブさんこんにちは</target>
        </trans-unit>
        <trans-unit id="4aa431cc733d86f8c5a98e712c70b132d3671c4f" translate="yes" xml:space="preserve">
          <source>Hello Kotlin/Native using Command Line Compiler</source>
          <target state="translated">コマンドラインコンパイラを使ったHello Kotlin/Native</target>
        </trans-unit>
        <trans-unit id="e3628475129b7d03ffe4afe3ff3fd3fb746caedb" translate="yes" xml:space="preserve">
          <source>Hello Kotlin/Native using Gradle</source>
          <target state="translated">Gradleを使ったKotlin/Nativeのこんにちは</target>
        </trans-unit>
        <trans-unit id="0a4d55a8d778e5022fab701977c5d840bbc486d0" translate="yes" xml:space="preserve">
          <source>Hello World</source>
          <target state="translated">ハローワールド</target>
        </trans-unit>
        <trans-unit id="ff5585f75c04b35aa1980b334e869011a0d42614" translate="yes" xml:space="preserve">
          <source>Helper functions for creating &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html&quot;&gt;Comparator&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html&quot;&gt;コンパレータ&lt;/a&gt;インスタンスを作成するためのヘルパー関数。</target>
        </trans-unit>
        <trans-unit id="4ba5653c21422f1b85430fd5794566088974aa2d" translate="yes" xml:space="preserve">
          <source>Helper functions for creating &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html&quot;&gt;Comparator&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html&quot;&gt;コンパレータ&lt;/a&gt;インスタンスを作成するためのヘルパー関数。</target>
        </trans-unit>
        <trans-unit id="aadf38d42c47f2942d053ad710757cc1b854fee0" translate="yes" xml:space="preserve">
          <source>Helper functions for creating Comparator instances.</source>
          <target state="translated">コンパレータインスタンスを作成するためのヘルパー関数です。</target>
        </trans-unit>
        <trans-unit id="0b73fa64c5ddbe065b8467f94a6ebd4f7c1823cc" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;::isOdd&lt;/code&gt; is a value of function type &lt;code&gt;(Int) -&amp;gt; Boolean&lt;/code&gt;.</source>
          <target state="translated">ここで &lt;code&gt;::isOdd&lt;/code&gt; は、関数型 &lt;code&gt;(Int) -&amp;gt; Boolean&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="41ccfd26f5a19a10fbdd491b940c29702e4e0642" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;runBlocking&amp;lt;Unit&amp;gt; { ... }&lt;/code&gt; works as an adaptor that is used to start the top-level main coroutine. We explicitly specify its &lt;code&gt;Unit&lt;/code&gt; return type, because a well-formed &lt;code&gt;main&lt;/code&gt; function in Kotlin has to return &lt;code&gt;Unit&lt;/code&gt;.</source>
          <target state="translated">ここで、 &lt;code&gt;runBlocking&amp;lt;Unit&amp;gt; { ... }&lt;/code&gt; は、トップレベルのメインコルーチンを開始するために使用されるアダプターとして機能します。私たちは、明示的に指定した &lt;code&gt;Unit&lt;/code&gt; 整形ので、戻り値の型を &lt;code&gt;main&lt;/code&gt; Kotlin内の関数が返すために持っている &lt;code&gt;Unit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73ec159c610c0bde512d4dd98796481a0f1dd9af" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;startOtherActivity&lt;/code&gt; is a method defined in our &lt;code&gt;MainActivity&lt;/code&gt;:</source>
          <target state="translated">ここで &lt;code&gt;startOtherActivity&lt;/code&gt; は、MainActivityで定義されたメソッド &lt;code&gt;MainActivity&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64e9f395cb5a12a58f09dadd871e66a32af07cec" translate="yes" xml:space="preserve">
          <source>Here an interop library will be built and added in the component dependencies.</source>
          <target state="translated">ここでinteropライブラリがビルドされ、コンポーネントの依存関係に追加されます。</target>
        </trans-unit>
        <trans-unit id="9817b024dae16b279b9de34a5943e840e3c6c191" translate="yes" xml:space="preserve">
          <source>Here is a list of the available options:</source>
          <target state="translated">ここでは、利用可能なオプションの一覧です。</target>
        </trans-unit>
        <trans-unit id="3964503de4031e1f67f448283c7c7436d1b66391" translate="yes" xml:space="preserve">
          <source>Here is a short guide for choosing scope functions depending on the intended purpose:</source>
          <target state="translated">ここでは、目的に応じてスコープ機能を選択するための簡単なガイドをご紹介します。</target>
        </trans-unit>
        <trans-unit id="ffc12a7f4c76f906c5fdb788b5e01253afdd3556" translate="yes" xml:space="preserve">
          <source>Here is an example of a Kotlin interface with a default method:</source>
          <target state="translated">ここでは、デフォルトのメソッドを持つKotlinのインターフェースの例を示します。</target>
        </trans-unit>
        <trans-unit id="354b21831f3e1d3354009c224825e8899e667c5d" translate="yes" xml:space="preserve">
          <source>Here is an example of a function literal with receiver along with its type, where &lt;code&gt;plus&lt;/code&gt; is called on the receiver object:</source>
          <target state="translated">以下は、型と一緒にレシーバーを持つ関数リテラルの例です。ここで、 &lt;code&gt;plus&lt;/code&gt; はレシーバーオブジェクトで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">ここでは一例を紹介します。</target>
        </trans-unit>
        <trans-unit id="9cbaae661e521db61b00232121154a0bc978c4dc" translate="yes" xml:space="preserve">
          <source>Here is how you can encode options by yourself:</source>
          <target state="translated">ここでは、自分でオプションをエンコードする方法を紹介します。</target>
        </trans-unit>
        <trans-unit id="bcb68cd11077c1a66dff0232c6f982357e38486f" translate="yes" xml:space="preserve">
          <source>Here is how you can pass arbitrary options to javac:</source>
          <target state="translated">ここでは、任意のオプションを javac に渡す方法を説明します。</target>
        </trans-unit>
        <trans-unit id="8b5c51aaaea8e6fb9ff9f4bba92240eccf7a3b31" translate="yes" xml:space="preserve">
          <source>Here is the complete list of bitwise operations (available for &lt;code&gt;Int&lt;/code&gt; and &lt;code&gt;Long&lt;/code&gt; only):</source>
          <target state="translated">以下は、ビット単位の操作の完全なリストです（ &lt;code&gt;Int&lt;/code&gt; および &lt;code&gt;Long&lt;/code&gt; でのみ使用可能）。</target>
        </trans-unit>
        <trans-unit id="56019f0e43274837fd8fced2fec882756323dc6f" translate="yes" xml:space="preserve">
          <source>Here is the list of the most significant changes to the Kotlin standard library in 1.4.0:</source>
          <target state="translated">1.4.0でのKotlin標準ライブラリの最も重要な変更点の一覧です。</target>
        </trans-unit>
        <trans-unit id="ef5968a2159afa31759e26f3ea13b246a929d737" translate="yes" xml:space="preserve">
          <source>Here the constructor is private. By default, all constructors are &lt;code&gt;public&lt;/code&gt;, which effectively amounts to them being visible everywhere where the class is visible (i.e. a constructor of an &lt;code&gt;internal&lt;/code&gt; class is only visible within the same module).</source>
          <target state="translated">ここではコンストラクタはプライベートです。デフォルトでは、すべてのコンストラクタは &lt;code&gt;public&lt;/code&gt; であり、これは事実上、クラスが表示されるすべての場所で表示されることになります（つまり、 &lt;code&gt;internal&lt;/code&gt; クラスのコンストラクタは同じモジュール内でのみ表示されます）。</target>
        </trans-unit>
        <trans-unit id="f0628102a9e16610a1147c5ea146af2767dcf266" translate="yes" xml:space="preserve">
          <source>Here the type argument of the resulting sequence is inferred to &lt;code&gt;String&lt;/code&gt; from the argument of the &lt;a href=&quot;../../kotlin.sequences/-sequence-scope/yield&quot;&gt;SequenceScope.yield&lt;/a&gt; function, that is called inside the lambda passed to &lt;a href=&quot;../../kotlin.sequences/sequence&quot;&gt;sequence&lt;/a&gt;.</source>
          <target state="translated">ここで、結果のシーケンスの型引数は、&lt;a href=&quot;../../kotlin.sequences/-sequence-scope/yield&quot;&gt;SequenceScope.yield&lt;/a&gt;関数の引数から &lt;code&gt;String&lt;/code&gt; に推定され&lt;a href=&quot;../../kotlin.sequences/sequence&quot;&gt;ます&lt;/a&gt;。これは、sequenceに渡されたラムダ内で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="5ed150d2efdc560bc0c053dcbb778cf03c9077fc" translate="yes" xml:space="preserve">
          <source>Here we call a transform function on an element first, and then build a pair from the properties of that function's result.</source>
          <target state="translated">ここでは、まず要素に対して変換関数を呼び出し、その関数の結果のプロパティからペアを作成します。</target>
        </trans-unit>
        <trans-unit id="2cbc4d7a889a0c905e849d457558acb812460a70" translate="yes" xml:space="preserve">
          <source>Here we can use the &lt;a href=&quot;https://developer.apple.com/documentation/uikit/uidevice?language=objc&quot;&gt;UIDevice&lt;/a&gt; class from the Apple UIKit Framework, which is not available in Java, it is only usable in Swift and Objective-C. Kotlin/Native compiler comes with a set of pre-imported frameworks, so we can use the UIKit Framework without additional steps. Objective-C and Swift Interop is covered in details in the &lt;a href=&quot;../../reference/native/objc_interop&quot;&gt;documentation&lt;/a&gt;</source>
          <target state="translated">ここでは、Javaでは使用できないApple UIKitフレームワークの&lt;a href=&quot;https://developer.apple.com/documentation/uikit/uidevice?language=objc&quot;&gt;UIDevice&lt;/a&gt;クラスを使用できます。これは、SwiftおよびObjective-Cでのみ使用できます。Kotlin / Nativeコンパイラーには、事前にインポートされた一連のフレームワークが付属しているため、追加の手順なしでUIKitフレームワークを使用できます。Objective-CとSwiftの相互運用については、&lt;a href=&quot;../../reference/native/objc_interop&quot;&gt;ドキュメント&lt;/a&gt;で詳しく説明されています</target>
        </trans-unit>
        <trans-unit id="2251b76155288ed7475b3b229f327779f9362db1" translate="yes" xml:space="preserve">
          <source>Here we make use of Java's &lt;em&gt;wildcards types&lt;/em&gt; (&lt;code&gt;? extends Base&lt;/code&gt;) to emulate declaration-site variance through use-site variance, because it is all Java has.</source>
          <target state="translated">ここでは、Javaの&lt;em&gt;ワイルドカードタイプ&lt;/em&gt;（ &lt;code&gt;? extends Base&lt;/code&gt; ）を利用して、use-site varianceを介して宣言-site varianceをエミュレートしています。</target>
        </trans-unit>
        <trans-unit id="f338597b8ea0d5b8d01fd5c7c715bf06c34ca072" translate="yes" xml:space="preserve">
          <source>Here we provide basic information about learning Kotlin with the EduTools plugin.</source>
          <target state="translated">ここではEduToolsプラグインを使ってKotlinを学習するための基本的な情報を提供します。</target>
        </trans-unit>
        <trans-unit id="303358f917fac47ec5578a6e0fa150481911ae89" translate="yes" xml:space="preserve">
          <source>Here we provide basic information about teaching Kotlin with the EduTools plugin.</source>
          <target state="translated">ここではEduToolsプラグインを使ってKotlinを教えるための基本的な情報を提供します。</target>
        </trans-unit>
        <trans-unit id="1ef65687c96ed79c329d047f1e866230a83d8fdd" translate="yes" xml:space="preserve">
          <source>Here we run into the same familiar problem: &lt;code&gt;Array&amp;lt;T&amp;gt;&lt;/code&gt; is &lt;strong&gt;invariant&lt;/strong&gt; in &lt;code&gt;T&lt;/code&gt;, thus neither of &lt;code&gt;Array&amp;lt;Int&amp;gt;&lt;/code&gt; and &lt;code&gt;Array&amp;lt;Any&amp;gt;&lt;/code&gt; is a subtype of the other. Why? Again, because copy &lt;strong&gt;might&lt;/strong&gt; be doing bad things, i.e. it might attempt to &lt;strong&gt;write&lt;/strong&gt;, say, a String to &lt;code&gt;from&lt;/code&gt;, and if we actually passed an array of &lt;code&gt;Int&lt;/code&gt; there, a &lt;code&gt;ClassCastException&lt;/code&gt; would have been thrown sometime later.</source>
          <target state="translated">ここでは、使い慣れた同じ問題に遭遇： &lt;code&gt;Array&amp;lt;T&amp;gt;&lt;/code&gt; ありません&lt;strong&gt;不変&lt;/strong&gt;で &lt;code&gt;T&lt;/code&gt; したがってどちらの、 &lt;code&gt;Array&amp;lt;Int&amp;gt;&lt;/code&gt; および &lt;code&gt;Array&amp;lt;Any&amp;gt;&lt;/code&gt; その他のサブタイプです。どうして？繰り返します&lt;strong&gt;が&lt;/strong&gt;、コピー&lt;strong&gt;は&lt;/strong&gt;悪いことをしている&lt;strong&gt;可能性&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。つまり、たとえばStringを &lt;code&gt;from&lt;/code&gt; に&lt;strong&gt;書き込も&lt;/strong&gt;うとする可能性があり、実際にそこに &lt;code&gt;Int&lt;/code&gt; の配列を渡した場合、後で &lt;code&gt;ClassCastException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="35c15034dc107b5dfe7ca81016a55158d3c1422e" translate="yes" xml:space="preserve">
          <source>Here we start a coroutine that waits for 1 second and prints &lt;code&gt;Hello&lt;/code&gt;.</source>
          <target state="translated">ここで、1秒間待機して &lt;code&gt;Hello&lt;/code&gt; を出力するコルーチンを開始します。</target>
        </trans-unit>
        <trans-unit id="a39b3fc4994029915e40feeb64b4f5236e8052fc" translate="yes" xml:space="preserve">
          <source>Here we summarize requirements to delegate objects.</source>
          <target state="translated">ここでは、オブジェクトをデリゲートするための要件をまとめてみました。</target>
        </trans-unit>
        <trans-unit id="d5b472ee7ff40bf88f4ec29f0eda10fcaca784a6" translate="yes" xml:space="preserve">
          <source>Here we use service function &lt;code&gt;usePinned&lt;/code&gt;, which pins an object, executes block and unpins it on normal and exception paths.</source>
          <target state="translated">ここでは、サービス関数 &lt;code&gt;usePinned&lt;/code&gt; を使用します。これは、オブジェクトを固定し、ブロックを実行して、通常のパスと例外パスでオブジェクトの固定を解除します。</target>
        </trans-unit>
        <trans-unit id="e4f4aba80443aa3eb8e2f7ea243b14bbcc6a9610" translate="yes" xml:space="preserve">
          <source>Here's a list of &lt;code&gt;Product&lt;/code&gt; instances that aren't &lt;code&gt;Comparable&lt;/code&gt; and a &lt;code&gt;Comparator&lt;/code&gt; that defines the order: product &lt;code&gt;p1&lt;/code&gt; precedes product &lt;code&gt;p2&lt;/code&gt; if &lt;code&gt;p1&lt;/code&gt;'s price is less than &lt;code&gt;p2&lt;/code&gt;'s price. So, having a list sorted ascending according to this order, we use &lt;code&gt;binarySearch()&lt;/code&gt; to find the index of the specified &lt;code&gt;Product&lt;/code&gt;.</source>
          <target state="translated">ここのリストだ &lt;code&gt;Product&lt;/code&gt; ではありませんインスタンス &lt;code&gt;Comparable&lt;/code&gt; と &lt;code&gt;Comparator&lt;/code&gt; の順序を定義します。製品 &lt;code&gt;p1&lt;/code&gt; 先行製品 &lt;code&gt;p2&lt;/code&gt; 場合 &lt;code&gt;p1&lt;/code&gt; の価格未満である &lt;code&gt;p2&lt;/code&gt; の価格&quot;。したがって、リストをこの順序に従って昇順にソートし、 &lt;code&gt;binarySearch()&lt;/code&gt; を使用して、指定された &lt;code&gt;Product&lt;/code&gt; のインデックスを見つけます。</target>
        </trans-unit>
        <trans-unit id="d6299908e8e92ed259a89571d944697ef58fb31f" translate="yes" xml:space="preserve">
          <source>Here's a quick guide to these stability levels and their meaning:</source>
          <target state="translated">ここでは、これらの安定度とその意味について簡単に説明します。</target>
        </trans-unit>
        <trans-unit id="efbc73d5132802ac71f5934ce19cbcd5fb8b7408" translate="yes" xml:space="preserve">
          <source>Here's a small DSL example for constructing tree structures:</source>
          <target state="translated">ここでは、木構造を構築するための小さなDSLの例を示します。</target>
        </trans-unit>
        <trans-unit id="deacdfc6a74517cf99346be6c831a7d4dcdbaad3" translate="yes" xml:space="preserve">
          <source>Here's a typical usage of a scope function:</source>
          <target state="translated">スコープ機能の典型的な使い方をご紹介します。</target>
        </trans-unit>
        <trans-unit id="b32f6d706eff957c972b3e1645609c6f0f0e541d" translate="yes" xml:space="preserve">
          <source>Here's an example content of the file:</source>
          <target state="translated">ファイルの内容の一例です。</target>
        </trans-unit>
        <trans-unit id="a5606f252ecc2ad174dea4647e01f60d2aaeb354" translate="yes" xml:space="preserve">
          <source>Here's an example of a class documented using KDoc:</source>
          <target state="translated">KDocを使って文書化したクラスの例です。</target>
        </trans-unit>
        <trans-unit id="3c3d7fa503d9b11d735a1dcda178f0b19a2cefe9" translate="yes" xml:space="preserve">
          <source>Here's an example of code sharing and interaction between the common and platform logic in a minimalistic logging framework. The common code would look like this:</source>
          <target state="translated">最小限のロギングフレームワークにおける共通ロジックとプラットフォームロジック間のコード共有と相互作用の例を示します。共通コードは次のようになります。</target>
        </trans-unit>
        <trans-unit id="30b994f56b0ee580bb2d52aad3f9e3570f83d7b9" translate="yes" xml:space="preserve">
          <source>Here's an illustration of what a project targeting the JVM and JS looks like:</source>
          <target state="translated">JVMとJSをターゲットにしたプロジェクトがどのようなものかを説明します。</target>
        </trans-unit>
        <trans-unit id="83fd9bccf96ff2476fc784803b5af28e61092dd2" translate="yes" xml:space="preserve">
          <source>Here's another example of code sharing and interaction between the common and platform logic in a minimalistic logging framework.</source>
          <target state="translated">ミニマムなロギングフレームワークにおける共通ロジックとプラットフォームロジック間のコード共有と相互作用の別の例を示します。</target>
        </trans-unit>
        <trans-unit id="fc7be004e2e60aa56a1148a79def1e9ee80e98df" translate="yes" xml:space="preserve">
          <source>Here's how to use all-open with Maven:</source>
          <target state="translated">ここでは、Mavenでall-openを使う方法を紹介します。</target>
        </trans-unit>
        <trans-unit id="c1c3f3dd507e26d2dcc90d9449cf5588ff4d3164" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;async { ... }&lt;/code&gt; starts a coroutine and, when we use &lt;code&gt;await()&lt;/code&gt;, the execution of the coroutine is suspended while the operation being awaited is executed, and is resumed (possibly on a different thread) when the operation being awaited completes.</source>
          <target state="translated">ここでは、 &lt;code&gt;async { ... }&lt;/code&gt; がコルーチンを開始し、 &lt;code&gt;await()&lt;/code&gt; を使用すると、待機中の操作が実行されている間、コルーチンの実行が一時停止され、待機中の操作が再開されると（別のスレッドで）再開されます。完了します。</target>
        </trans-unit>
        <trans-unit id="24f1b6a4e672cb4df34dbd0c1ed96ab04f2d6a88" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;name&lt;/code&gt; must be a string, &lt;code&gt;age&lt;/code&gt; must be an integer, and the function must return a string. However, you can also make a oneliner function, where the body simply is the expression whose result is to be returned. In that case, the return type is inferred, and an equals sign is used to indicate that it's a oneliner:</source>
          <target state="translated">ここで、 &lt;code&gt;name&lt;/code&gt; は文字列、 &lt;code&gt;age&lt;/code&gt; は整数、関数は文字列を返す必要があります。ただし、本体が結果を返す式であるoneliner関数を作成することもできます。その場合、戻り値の型は推論され、等号はそれがワンライナーであることを示すために使用されます。</target>
        </trans-unit>
        <trans-unit id="b47502105661e1b046d12435cd46d97524cb6677" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;jvmMain&lt;/code&gt; source set provides &lt;a href=&quot;platform-specific-declarations&quot;&gt;plaform-specific implementations&lt;/a&gt; for the expected API in the shared &lt;code&gt;commonMain&lt;/code&gt; sources. This is how the code is shared between the platforms in a flexible way with platform-specific implementations where needed.</source>
          <target state="translated">ここで、 &lt;code&gt;jvmMain&lt;/code&gt; ソースセットは、共有 &lt;code&gt;commonMain&lt;/code&gt; ソースで予期されるAPIの&lt;a href=&quot;platform-specific-declarations&quot;&gt;プラットフォーム固有の実装&lt;/a&gt;を提供します。これは、必要に応じてプラットフォーム固有の実装を使用して、コードをプラットフォーム間で柔軟に共有する方法です。</target>
        </trans-unit>
        <trans-unit id="1a4b7aa1a5f137db0fd44fc2a6d9f303d3f93187" translate="yes" xml:space="preserve">
          <source>Here, the two targets, &lt;code&gt;jvm&lt;/code&gt; and &lt;code&gt;js&lt;/code&gt;, each compile the production and test sources, and some of the sources are shared. This layout is achieved by just creating the two targets, with no additional configuration for the compilations and source sets: those are &lt;a href=&quot;#default-project-layout&quot;&gt;created by default&lt;/a&gt; for these targets.</source>
          <target state="translated">ここでは、2つのターゲット &lt;code&gt;jvm&lt;/code&gt; と &lt;code&gt;js&lt;/code&gt; がそれぞれ本番ソースとテストソースをコンパイルし、一部のソースは共有されています。このレイアウトは、2つのターゲットを作成するだけで実現され、コンパイルとソースセットの追加構成は不要&lt;a href=&quot;#default-project-layout&quot;&gt;です&lt;/a&gt;。これらは、これらのターゲットに対してデフォルトで作成されます。</target>
        </trans-unit>
        <trans-unit id="873b8d686246b463c295f204a9ac94e12e662907" translate="yes" xml:space="preserve">
          <source>Here, we walk up a tree and use reflection to check if a node has a certain type. It&amp;rsquo;s all fine, but the call site is not very pretty:</source>
          <target state="translated">ここでは、ツリーをたどり、リフレクションを使用してノードに特定のタイプがあるかどうかを確認します。すべて問題ありませんが、呼び出しサイトはそれほどきれいではありません。</target>
        </trans-unit>
        <trans-unit id="c26c5c5e687a30b11835307ebbf485121ab5d535" translate="yes" xml:space="preserve">
          <source>Here, we're saying that the type parameter of &lt;code&gt;from&lt;/code&gt; must be a subtype of the type parameter of &lt;code&gt;to&lt;/code&gt;. This function will accept e.g. a &lt;code&gt;Bowl&amp;lt;Apple&amp;gt;&lt;/code&gt; as &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;Bowl&amp;lt;Fruit&amp;gt;&lt;/code&gt; as &lt;code&gt;to&lt;/code&gt;. The price we're paying for using the &lt;code&gt;out&lt;/code&gt; projection is that we can't call &lt;code&gt;add()&lt;/code&gt; on &lt;code&gt;from()&lt;/code&gt;, since we don't know its true type parameter and we would therefore risk adding incompatible fruits to it.</source>
          <target state="translated">ここでは、 &lt;code&gt;from&lt;/code&gt; の型パラメーターは &lt;code&gt;to&lt;/code&gt; の型パラメーターのサブタイプでなければならないことを示しています。この関数は、例えば、 &lt;code&gt;Bowl&amp;lt;Apple&amp;gt;&lt;/code&gt; を &lt;code&gt;from&lt;/code&gt; 、 &lt;code&gt;Bowl&amp;lt;Fruit&amp;gt;&lt;/code&gt; を &lt;code&gt;to&lt;/code&gt; として受け入れます。 &lt;code&gt;out&lt;/code&gt; プロジェクションを使用するために支払う代償は、 &lt;code&gt;from()&lt;/code&gt; で &lt;code&gt;add()&lt;/code&gt; を呼び出せないことです。これは、その真の型パラメーターがわからないため、互換性のない果物を追加するリスクがあるためです。</target>
        </trans-unit>
        <trans-unit id="fd526ef99a476acb9c78bf5c9a11e6ea0860b857" translate="yes" xml:space="preserve">
          <source>Hexadecimals: &lt;code&gt;0x0F&lt;/code&gt;</source>
          <target state="translated">16進数： &lt;code&gt;0x0F&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e743a6dd1ed04ccfc1e8f392cdfb6f69810adb21" translate="yes" xml:space="preserve">
          <source>Hide &lt;code&gt;Throwable.addSuppressed&lt;/code&gt; member and prefer extension instead</source>
          <target state="translated">&lt;code&gt;Throwable.addSuppressed&lt;/code&gt; メンバーを非表示にし、代わりに拡張機能を優先します</target>
        </trans-unit>
        <trans-unit id="30fe03c33b8a84674c73678ff4c5b2d65ac121be" translate="yes" xml:space="preserve">
          <source>Higher-Order Functions</source>
          <target state="translated">高次関数</target>
        </trans-unit>
        <trans-unit id="a41e5f0f0a047564f4254bac665f73f90f95046f" translate="yes" xml:space="preserve">
          <source>Higher-Order Functions and Lambdas</source>
          <target state="translated">高次関数とラムダ</target>
        </trans-unit>
        <trans-unit id="67ee6db3881c67f5daa465a08c67e8184f10a9cd" translate="yes" xml:space="preserve">
          <source>Higher-Order functions and Lambdas are explained in &lt;a href=&quot;lambdas&quot;&gt;their own section&lt;/a&gt;.</source>
          <target state="translated">高次関数とラムダについては&lt;a href=&quot;lambdas&quot;&gt;、それぞれのセクションで&lt;/a&gt;説明しています。</target>
        </trans-unit>
        <trans-unit id="3315df05d0375ffe4bdc179f9ca2be5169f2a805" translate="yes" xml:space="preserve">
          <source>Higher-order functions and lambdas</source>
          <target state="translated">高次関数とラムダ</target>
        </trans-unit>
        <trans-unit id="72139434928027cd54d82a5ef7b3629d508b0f44" translate="yes" xml:space="preserve">
          <source>Higher-order functions implementing idiomatic patterns (&lt;a href=&quot;api/latest/jvm/stdlib/kotlin/let&quot;&gt;let&lt;/a&gt;, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/apply&quot;&gt;apply&lt;/a&gt;, use, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29&quot;&gt;synchronized&lt;/a&gt;, etc).</source>
          <target state="translated">慣用的なパターンを実装する高次関数（&lt;a href=&quot;api/latest/jvm/stdlib/kotlin/let&quot;&gt;let&lt;/a&gt;、&lt;a href=&quot;api/latest/jvm/stdlib/kotlin/apply&quot;&gt;apply&lt;/a&gt;、use、&lt;a href=&quot;api/latest/jvm/stdlib/kotlin/synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29&quot;&gt;synchronized&lt;/a&gt;など）。</target>
        </trans-unit>
        <trans-unit id="71b2c72211319ad783a149c79b7dc2ab70c6fe85" translate="yes" xml:space="preserve">
          <source>Higher-order functions implementing idiomatic patterns (&lt;a href=&quot;api/latest/jvm/stdlib/kotlin/let&quot;&gt;let&lt;/a&gt;, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/apply&quot;&gt;apply&lt;/a&gt;, use, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/synchronized#kotlin%24synchronized(kotlin.Any,%20kotlin.Function0((kotlin.synchronized.R)))&quot;&gt;synchronized&lt;/a&gt;, etc).</source>
          <target state="translated">慣用的なパターンを実装する高階関数（&lt;a href=&quot;api/latest/jvm/stdlib/kotlin/let&quot;&gt;let&lt;/a&gt;、&lt;a href=&quot;api/latest/jvm/stdlib/kotlin/apply&quot;&gt;apply&lt;/a&gt;、use、&lt;a href=&quot;api/latest/jvm/stdlib/kotlin/synchronized#kotlin%24synchronized(kotlin.Any,%20kotlin.Function0((kotlin.synchronized.R)))&quot;&gt;synchronized&lt;/a&gt;など）。</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="0eb3ee7e7a16153c8f6a87abb16da40d619a3efa" translate="yes" xml:space="preserve">
          <source>HitRegionOptions</source>
          <target state="translated">HitRegionOptions</target>
        </trans-unit>
        <trans-unit id="b24cd4dd561003744f6839bba6f0b01af01e9c66" translate="yes" xml:space="preserve">
          <source>Homebrew</source>
          <target state="translated">Homebrew</target>
        </trans-unit>
        <trans-unit id="cbfc13df571c4c83d93997bf94e3b83b772c380a" translate="yes" xml:space="preserve">
          <source>Horizontal whitespace</source>
          <target state="translated">水平方向の空白</target>
        </trans-unit>
        <trans-unit id="86ddaf47a34381dda708ccb6f4f8d658790bbfa0" translate="yes" xml:space="preserve">
          <source>How Struct and Union types are mapped</source>
          <target state="translated">Struct 型と Union 型のマッピング方法</target>
        </trans-unit>
        <trans-unit id="35c4267f2ce497ed96e9a713e96604a9eab77acf" translate="yes" xml:space="preserve">
          <source>How it can be used</source>
          <target state="translated">どのように使用することができるか</target>
        </trans-unit>
        <trans-unit id="1dd6a17cb4033f4f74df1bb6912b8a28a8074084" translate="yes" xml:space="preserve">
          <source>How it works</source>
          <target state="translated">どのように動作するか</target>
        </trans-unit>
        <trans-unit id="602a8f7c41c71250fa416b68c4f67d256ca06632" translate="yes" xml:space="preserve">
          <source>How to Start</source>
          <target state="translated">開始方法</target>
        </trans-unit>
        <trans-unit id="0243beebd793612aa2ee36e3e4f3c0c11cc4db4e" translate="yes" xml:space="preserve">
          <source>How to construct DOM elements using kotlinx.html and Kotlin DSLs.</source>
          <target state="translated">kotlinx.htmlとKotlin DSLを使ってDOM要素を構築する方法。</target>
        </trans-unit>
        <trans-unit id="a39cfe6bd350237cc427201fbd0b25630bfc08c1" translate="yes" xml:space="preserve">
          <source>How to debug Kotlin/JS code using the browser developer tools.</source>
          <target state="translated">ブラウザの開発者ツールを使ってKotlin/JSのコードをデバッグする方法。</target>
        </trans-unit>
        <trans-unit id="766024c3d172acd05a99a55de2575e5c42211fab" translate="yes" xml:space="preserve">
          <source>How to interact with browser-specific APIs from Kotlin, and how do we work with the Document Object Model (DOM).</source>
          <target state="translated">Kotlinのブラウザ固有のAPIとのやりとりや、Document Object Model (DOM)との連携方法について。</target>
        </trans-unit>
        <trans-unit id="78e595bb7e86e937a4e874393a96a5363dcaedf4" translate="yes" xml:space="preserve">
          <source>How to run a Kotlin/JS program that was created using the Gradle plugin.</source>
          <target state="translated">Gradleプラグインを使って作成したKotlin/JSプログラムを実行する方法。</target>
        </trans-unit>
        <trans-unit id="c4836632c6daf79f375cd1f8eccb1a6fce84d803" translate="yes" xml:space="preserve">
          <source>How to run tests for the Kotlin/JS target using test runners in Gradle.</source>
          <target state="translated">Gradleのテストランナーを使ってKotlin/JSターゲットのテストを実行する方法。</target>
        </trans-unit>
        <trans-unit id="7db32bf41278eb29cd396ae9617e7fe8df893782" translate="yes" xml:space="preserve">
          <source>How to set up the local development environment for automatic recompilation and reloading.</source>
          <target state="translated">自動再コンパイルとリロードのためのローカル開発環境の設定方法</target>
        </trans-unit>
        <trans-unit id="a300459d78bbcb70e72c699d68bbe2c60d99400e" translate="yes" xml:space="preserve">
          <source>How to start</source>
          <target state="translated">開始方法</target>
        </trans-unit>
        <trans-unit id="dd45fd3f2e347de26d6cbb92c276978c2dd03be8" translate="yes" xml:space="preserve">
          <source>How to use</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="c8dac9e108cb40b7e0a9d87700f138976ecc8ddc" translate="yes" xml:space="preserve">
          <source>How to use Struct and Union type from Kotlin</source>
          <target state="translated">KotlinからStructとUnion型を使う方法</target>
        </trans-unit>
        <trans-unit id="6eb76bcb0980c7013f0d079912759039bd94ad75" translate="yes" xml:space="preserve">
          <source>How to use npm packages from a Kotlin/JS Gradle project and how do we interact with them from Kotlin.</source>
          <target state="translated">Kotlin/JS Gradleプロジェクトからのnpmパッケージの使い方とKotlinからのやりとりについて。</target>
        </trans-unit>
        <trans-unit id="87da5869c150f567fc13bde03027b7419ad453eb" translate="yes" xml:space="preserve">
          <source>How would we do this from Kotlin given that the function &lt;code&gt;dataTable()&lt;/code&gt; does not exist, and calling it would give a compiler error?</source>
          <target state="translated">関数 &lt;code&gt;dataTable()&lt;/code&gt; が存在しない場合、これをKotlinからどのように実行し、それを呼び出すとコンパイラエラーが発生しますか？</target>
        </trans-unit>
        <trans-unit id="be0464a11908e8c7b9be38021ee672219ffad064" translate="yes" xml:space="preserve">
          <source>However in the following case:</source>
          <target state="translated">しかし、次のような場合。</target>
        </trans-unit>
        <trans-unit id="ad02680cd2b83239f918c8dcc7a44484db377d03" translate="yes" xml:space="preserve">
          <source>However, JavaScript is a dynamically typed language, which means it does not check types at compile time. You can freely talk to JavaScript from Kotlin via &lt;a href=&quot;dynamic-type&quot;&gt;dynamic&lt;/a&gt; types. If you want to use the full power of the Kotlin type system, you can create external declarations for JavaScript libraries which will be understood by the Kotlin compiler and the surrounding tooling.</source>
          <target state="translated">ただし、JavaScriptは動的に型指定された言語であるため、コンパイル時に型をチェックしません。Kotlinから&lt;a href=&quot;dynamic-type&quot;&gt;動的&lt;/a&gt;型を介してJavaScriptと自由に会話できます。Kotlin型システムの能力を最大限に活用したい場合は、JavaScriptライブラリの外部宣言を作成できます。これは、Kotlinコンパイラとその周辺のツールによって理解されます。</target>
        </trans-unit>
        <trans-unit id="08aa25ee369322b7c9cce859c3276910252c6990" translate="yes" xml:space="preserve">
          <source>However, a &lt;code&gt;project('...')&lt;/code&gt; dependency on another multiplatform project is resolved to an appropriate target automatically. It is enough to specify a single &lt;code&gt;project('...')&lt;/code&gt; dependency in a source set's dependencies, and the compilations that include the source set will receive a corresponding platform-specific artifact of that project, given that it has a compatible target:</source>
          <target state="translated">ただし、別のマルチプラットフォームプロジェクトに対する &lt;code&gt;project('...')&lt;/code&gt; 依存関係は、適切なターゲットに自動的に解決されます。ソースセットの依存関係で単一の &lt;code&gt;project('...')&lt;/code&gt; 依存関係を指定するだけで十分です。互換性のあるターゲットがある場合、ソースセットを含むコンパイルは、そのプロジェクトの対応するプラットフォーム固有のアーティファクトを受け取ります。</target>
        </trans-unit>
        <trans-unit id="9f0073d145a72380a67857aa70bcd14c61466462" translate="yes" xml:space="preserve">
          <source>However, as soon as these checks are extracted in a separate function, all the smartcasts immediately disappear:</source>
          <target state="translated">しかし、これらのチェックが別の関数で抽出されると、すぐにすべてのスマートキャストが消えてしまいます。</target>
        </trans-unit>
        <trans-unit id="070f5cebd5d9214c243e1534bfda4f0cf0927625" translate="yes" xml:space="preserve">
          <source>However, compile avoidance can't be used for annotation processors discovered in the compile classpath since &lt;em&gt;any changes&lt;/em&gt; in them require running the annotation processing tasks.</source>
          <target state="translated">ただし、コンパイルの回避は、コンパイルクラスパスで検出されたアノテーションプロセッサには使用できません。アノテーションプロセッサで&lt;em&gt;変更&lt;/em&gt;を行うと、アノテーション処理タスクを実行する必要があるためです。</target>
        </trans-unit>
        <trans-unit id="b08734b9aff767eee11e08eafa8988bd2c1174ca" translate="yes" xml:space="preserve">
          <source>However, dependencies on such a multiplatform library may be ambiguous and may thus fail to resolve because there is not enough information to decide which of the targets to choose.</source>
          <target state="translated">しかし、このようなマルチプラットフォームライブラリへの依存関係は、どのターゲットを選択するかを決定するのに十分な情報がないため、曖昧であり、その結果、解決に失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="479fa5ba0f8e1b445bab5b40d926a5ca86729d0e" translate="yes" xml:space="preserve">
          <source>However, if the mutability of the list is unknown or the source is not a list at all, &lt;code&gt;reversed()&lt;/code&gt; is more preferable since its result is a copy that won't change in the future.</source>
          <target state="translated">ただし、リストの変更可能性が不明であるか、ソースがリストではない場合、その結果は将来変更されないコピーになるため、 &lt;code&gt;reversed()&lt;/code&gt; の方が適しています。</target>
        </trans-unit>
        <trans-unit id="09fa8d58225957d34b7eea70bb62562ee76d26df" translate="yes" xml:space="preserve">
          <source>However, if we derive &lt;em&gt;D&lt;/em&gt; from &lt;em&gt;A&lt;/em&gt; and &lt;em&gt;B&lt;/em&gt;, we need to implement all the methods which we have inherited from multiple interfaces, and to specify how exactly &lt;em&gt;D&lt;/em&gt; should implement them. This rule applies both to methods for which we've inherited a single implementation (&lt;em&gt;bar()&lt;/em&gt;) and multiple implementations (&lt;em&gt;foo()&lt;/em&gt;).</source>
          <target state="translated">ただし、&lt;em&gt;A&lt;/em&gt;と&lt;em&gt;B&lt;/em&gt;から&lt;em&gt;D&lt;/em&gt;を派生させる場合は、複数のインターフェースから継承したすべてのメソッドを実装し、&lt;em&gt;D&lt;/em&gt;がそれらをどのように実装するかを正確に指定する必要があります。このルールは、単一の実装（&lt;em&gt;bar（）&lt;/em&gt;）と複数の実装（&lt;em&gt;foo（）&lt;/em&gt;）を継承したメソッドの両方に適用されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5c2b71d2c4944197bf814089efe3e169f6241a1" translate="yes" xml:space="preserve">
          <source>However, it's perfectly OK for extension functions to overload member functions which have the same name but a different signature:</source>
          <target state="translated">しかし、拡張関数が同じ名前で署名が異なるメンバ関数をオーバーロードすることは完全に問題ありません。</target>
        </trans-unit>
        <trans-unit id="b6b84920563bfcc2aefa1cdbb2f79f49d112f69c" translate="yes" xml:space="preserve">
          <source>However, most other flow operators do not do additional cancellation checks on their own for performance reasons. For example, if you use &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/kotlin.ranges.-int-range/as-flow.html&quot;&gt;IntRange.asFlow&lt;/a&gt; extension to write the same busy loop and don't suspend anywhere, then there are no checks for cancellation:</source>
          <target state="translated">ただし、他のほとんどのフローオペレーターは、パフォーマンス上の理由から、独自に追加のキャンセルチェックを実行しません。たとえば、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/kotlin.ranges.-int-range/as-flow.html&quot;&gt;IntRange.asFlow&lt;/a&gt;拡張機能を使用して同じビジーループを記述し、どこにも中断しない場合、キャンセルのチェックはありません。</target>
        </trans-unit>
        <trans-unit id="ebade98d4850f4f9cc04221f98a7dccbdf5346e7" translate="yes" xml:space="preserve">
          <source>However, note that there are some limitations:</source>
          <target state="translated">ただし、いくつかの制限があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7211de00f87035400862ba49948436c704051e31" translate="yes" xml:space="preserve">
          <source>However, on the JVM you can have members of companion objects generated as real static methods and fields, if you use the &lt;code&gt;@JvmStatic&lt;/code&gt; annotation. See the &lt;a href=&quot;java-to-kotlin-interop#static-fields&quot;&gt;Java interoperability&lt;/a&gt; section for more details.</source>
          <target state="translated">ただし、 &lt;code&gt;@JvmStatic&lt;/code&gt; アノテーションを使用すると、JVMで実際の静的メソッドおよびフィールドとして生成されるコンパニオンオブジェクトのメンバーを持つことができます。詳細については、&lt;a href=&quot;java-to-kotlin-interop#static-fields&quot;&gt;Javaの相互運用性の&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="2c6ec492a393170936fcd33d66c559dd167d5e00" translate="yes" xml:space="preserve">
          <source>However, the change doesn&amp;rsquo;t currently affect:</source>
          <target state="translated">ただし、この変更は現在影響しません。</target>
        </trans-unit>
        <trans-unit id="0bad521f56fe8a915aa6062aecd121e23b4faae6" translate="yes" xml:space="preserve">
          <source>However, the crucial difference is that type aliases are &lt;em&gt;assignment-compatible&lt;/em&gt; with their underlying type (and with other type aliases with the same underlying type), while inline classes are not.</source>
          <target state="translated">ただし、決定的な違いは、型のエイリアスは、基になる型（および同じ基になる型を持つ他の型のエイリアス）と&lt;em&gt;代入互換性&lt;/em&gt;があるのに対し、インラインクラスは&lt;em&gt;割り当て互換性&lt;/em&gt;がないことです。</target>
        </trans-unit>
        <trans-unit id="8dd1f3cacf0fcb4414c2d1a278f7fbd543f3b7f6" translate="yes" xml:space="preserve">
          <source>However, the lifetime of allocated memory is often bound to the lexical scope. It is possible to define such scope with &lt;code&gt;memScoped { ... }&lt;/code&gt;. Inside the braces, the temporary placement is available as an implicit receiver, so it is possible to allocate native memory with &lt;code&gt;alloc&lt;/code&gt; and &lt;code&gt;allocArray&lt;/code&gt;, and the allocated memory will be automatically freed after leaving the scope.</source>
          <target state="translated">ただし、割り当てられたメモリの有効期間は、多くの場合、字句スコープにバインドされます。そのようなスコープを &lt;code&gt;memScoped { ... }&lt;/code&gt; で定義することが可能です。中括弧内では、一時的な配置が暗黙的なレシーバーとして使用できるため、 &lt;code&gt;alloc&lt;/code&gt; および &lt;code&gt;allocArray&lt;/code&gt; を使用してネイティブメモリを割り当てることができ、割り当てられたメモリはスコープを離れると自動的に解放されます。</target>
        </trans-unit>
        <trans-unit id="ca15a50ae448289a07aa099c12bd615c3214db22" translate="yes" xml:space="preserve">
          <source>However, the long-running CPU-consuming code might need to be executed in the context of &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-default.html&quot;&gt;Dispatchers.Default&lt;/a&gt; and UI-updating code might need to be executed in the context of &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-main.html&quot;&gt;Dispatchers.Main&lt;/a&gt;. Usually, &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-context.html&quot;&gt;withContext&lt;/a&gt; is used to change the context in the code using Kotlin coroutines, but code in the &lt;code&gt;flow { ... }&lt;/code&gt; builder has to honor the context preservation property and is not allowed to &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow-collector/emit.html&quot;&gt;emit&lt;/a&gt; from a different context.</source>
          <target state="translated">ただし、長時間実行されるCPUを消費するコードは、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-default.html&quot;&gt;Dispatchers.Default&lt;/a&gt;のコンテキストで実行する必要がある場合があり、UI更新コードは&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-main.html&quot;&gt;Dispatchers.Main&lt;/a&gt;のコンテキストで実行する必要がある場合があります。通常、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-context.html&quot;&gt;withContext&lt;/a&gt;は、Kotlinコルーチンを使用してコード内のコンテキストを変更するために使用されますが、 &lt;code&gt;flow { ... }&lt;/code&gt; ビルダーのコードは、コンテキスト保存プロパティを尊重&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow-collector/emit.html&quot;&gt;する必要&lt;/a&gt;があり、別のコンテキストから出力することはできません。</target>
        </trans-unit>
        <trans-unit id="ae0918f5641e63c3a09e5fadf6918891cd0a9092" translate="yes" xml:space="preserve">
          <source>However, there are some restrictions for inline class members:</source>
          <target state="translated">ただし、インラインクラスのメンバーには制限があります。</target>
        </trans-unit>
        <trans-unit id="4dea4b6485490d55c315e723b0e2a381616b34cd" translate="yes" xml:space="preserve">
          <source>However, this computation blocks the main thread that is running the code. When these values are computed by asynchronous code we can mark the &lt;code&gt;simple&lt;/code&gt; function with a &lt;code&gt;suspend&lt;/code&gt; modifier, so that it can perform its work without blocking and return the result as a list:</source>
          <target state="translated">ただし、この計算は、コードを実行しているメインスレッドをブロックします。これらの値が非同期コードによって計算される場合、 &lt;code&gt;simple&lt;/code&gt; 関数に &lt;code&gt;suspend&lt;/code&gt; 修飾子を付けることができるため、ブロックせずに作業を実行し、結果をリストとして返すことができます。</target>
        </trans-unit>
        <trans-unit id="982bf0758421af7f56223ac97a5942a5eb849e7c" translate="yes" xml:space="preserve">
          <source>However, to support generic use cases and provide total ordering, when the operands are &lt;strong&gt;not&lt;/strong&gt; statically typed as floating point numbers (e.g. &lt;code&gt;Any&lt;/code&gt;, &lt;code&gt;Comparable&amp;lt;...&amp;gt;&lt;/code&gt;, a type parameter), the operations use the &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;compareTo&lt;/code&gt; implementations for &lt;code&gt;Float&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt;, which disagree with the standard, so that:</source>
          <target state="translated">しかし、一般的なユースケースをサポートし、オペランドがされた場合、全順序を提供し&lt;strong&gt;ていない&lt;/strong&gt;静的浮動小数点数として入力された（例えば &lt;code&gt;Any&lt;/code&gt; 、 &lt;code&gt;Comparable&amp;lt;...&amp;gt;&lt;/code&gt; 、typeパラメータ）、操作が使用 &lt;code&gt;equals&lt;/code&gt; と &lt;code&gt;compareTo&lt;/code&gt; の実装を &lt;code&gt;Float&lt;/code&gt; し、 &lt;code&gt;Double&lt;/code&gt; 。これは標準に同意しないため、次のようになります。</target>
        </trans-unit>
        <trans-unit id="5ca45e03bc21f5ab9507a309528260ebbde146f9" translate="yes" xml:space="preserve">
          <source>However, when &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt; is used to launch a coroutine, it is not tied to the scope it was launched from and operates independently.</source>
          <target state="translated">ただし、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt;を使用してコルーチンを起動する場合、コルーチンは、起動元のスコープとは関係なく、独立して動作します。</target>
        </trans-unit>
        <trans-unit id="6fa46c9cc480889e14a2ca5e9982d4d494a04611" translate="yes" xml:space="preserve">
          <source>However, when &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt; is used to launch a coroutine, there is no parent for the job of the new coroutine. It is therefore not tied to the scope it was launched from and operates independently.</source>
          <target state="translated">ただし、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt;を使用してコルーチンを起動する場合、新しいコルーチンのジョブの親はありません。したがって、起動元のスコープに関連付けられておらず、独立して動作します。</target>
        </trans-unit>
        <trans-unit id="4d1d9b7a2bcd9b2aa8b62eaa04c9b3c6ae4ca870" translate="yes" xml:space="preserve">
          <source>However, when calling it with non-default, the call would look something like:</source>
          <target state="translated">しかし、デフォルトではない状態で呼び出すと、次のようになります。</target>
        </trans-unit>
        <trans-unit id="1c3dc2decd5535513b89bb659e9efd6ecfebaffd" translate="yes" xml:space="preserve">
          <source>However, when using a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/combine.html&quot;&gt;combine&lt;/a&gt; operator here instead of a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/zip.html&quot;&gt;zip&lt;/a&gt;:</source>
          <target state="translated">ただし、ここで&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/zip.html&quot;&gt;zipの&lt;/a&gt;代わりに&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/combine.html&quot;&gt;combine&lt;/a&gt;演算子を使用する場合：</target>
        </trans-unit>
        <trans-unit id="c85468492872696cce76d8471e59f791f6d182b2" translate="yes" xml:space="preserve">
          <source>However, you can't spread a map into a function call and expect the values in the map to be passed to the parameters named by the keys - the names of the parameters must be known at compile time. If you need runtime-defined parameter names, your function must either take a map or take &lt;code&gt;vararg kwargs: Pair&amp;lt;String, X&amp;gt;&lt;/code&gt; (where &lt;code&gt;X&lt;/code&gt; is the &quot;lowest common denominator&quot; of the parameter types, in the worst case &lt;code&gt;Any?&lt;/code&gt; - be prepared to have to typecast the parameter values, and note that you'll lose type safety). You can call such a function like this: &lt;code&gt;foo(&quot;bar&quot; to 42, &quot;test&quot; to &quot;hello&quot;)&lt;/code&gt;, since &lt;code&gt;to&lt;/code&gt; is an &lt;a href=&quot;classes#infix-functions&quot;&gt;infix function&lt;/a&gt; that creates a &lt;code&gt;Pair&lt;/code&gt;.</source>
          <target state="translated">ただし、マップを関数呼び出しに展開して、マップ内の値がキーによって名前が付けられたパラメーターに渡されることを期待することはできません。パラメーターの名前はコンパイル時に既知でなければなりません。実行時に定義された必要であればパラメータ名を、あなたの関数は、いずれかのマップを取るか、取らなければならない &lt;code&gt;vararg kwargs: Pair&amp;lt;String, X&amp;gt;&lt;/code&gt; （ &lt;code&gt;X&lt;/code&gt; は、最悪の場合には、パラメータタイプの「最小公分母」で、 &lt;code&gt;Any?&lt;/code&gt; -ことパラメータ値をタイプキャストする必要があり、タイプセーフが失われることに注意してください）。 ：あなたはこのような関数を呼び出すことができ &lt;code&gt;foo(&quot;bar&quot; to 42, &quot;test&quot; to &quot;hello&quot;)&lt;/code&gt; 以来、 &lt;code&gt;to&lt;/code&gt; ある&lt;a href=&quot;classes#infix-functions&quot;&gt;中置関数&lt;/a&gt;を作成 &lt;code&gt;Pair&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8531a005c4e1249c38eb76c35700e47d28dd56c4" translate="yes" xml:space="preserve">
          <source>However, you cannot change the type of a variable: &lt;code&gt;number&lt;/code&gt; can only ever refer to &lt;code&gt;Int&lt;/code&gt; values, and &lt;code&gt;message&lt;/code&gt; can only ever refer to &lt;code&gt;String&lt;/code&gt; values, so both &lt;code&gt;number = &quot;Test&quot;&lt;/code&gt; and &lt;code&gt;message = 3&lt;/code&gt; are illegal and will produce syntax errors.</source>
          <target state="translated">：ただし、変数の型を変更することはできません &lt;code&gt;number&lt;/code&gt; しかを参照することができます &lt;code&gt;Int&lt;/code&gt; 値、および &lt;code&gt;message&lt;/code&gt; しかを参照することができます &lt;code&gt;String&lt;/code&gt; 両方ので、値 &lt;code&gt;number = &quot;Test&quot;&lt;/code&gt; と &lt;code&gt;message = 3&lt;/code&gt; 違法であると構文エラーが生成されます。</target>
        </trans-unit>
        <trans-unit id="3027d872a38e795211cb7e3ae47043fbab5b615d" translate="yes" xml:space="preserve">
          <source>Hyperbolic: &lt;code&gt;cosh&lt;/code&gt;, &lt;code&gt;sinh&lt;/code&gt;, &lt;code&gt;tanh&lt;/code&gt; and their inverse: &lt;code&gt;acosh&lt;/code&gt;, &lt;code&gt;asinh&lt;/code&gt;, &lt;code&gt;atanh&lt;/code&gt;</source>
          <target state="translated">双曲線： &lt;code&gt;cosh&lt;/code&gt; 、 &lt;code&gt;sinh&lt;/code&gt; 、 &lt;code&gt;tanh&lt;/code&gt; およびそれらの逆： &lt;code&gt;acosh&lt;/code&gt; 、 &lt;code&gt;asinh&lt;/code&gt; 、 &lt;code&gt;atanh&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a21e8428249ae48d17127a95118ae2f24cfd3ac4" translate="yes" xml:space="preserve">
          <source>I.e. if &lt;code&gt;a&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it calls the &lt;code&gt;equals(Any?)&lt;/code&gt; function, otherwise (i.e. &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;) it checks that &lt;code&gt;b&lt;/code&gt; is referentially equal to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">場合、すなわちない &lt;code&gt;null&lt;/code&gt; 、それが呼び出し &lt;code&gt;equals(Any?)&lt;/code&gt; （すなわち、さもなければ、機能 &lt;code&gt;a&lt;/code&gt; ある &lt;code&gt;null&lt;/code&gt; のことがチェック） &lt;code&gt;b&lt;/code&gt; は参照上に等しい &lt;code&gt;null&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b4059c9b5820041f826f688b6e57c7201e42d5f" translate="yes" xml:space="preserve">
          <source>IDE</source>
          <target state="translated">IDE</target>
        </trans-unit>
        <trans-unit id="574c819e8b68fbc5deeb72ec7f823f930d288043" translate="yes" xml:space="preserve">
          <source>IDEA has built-in &lt;a href=&quot;https://www.jetbrains.com/help/idea/converting-a-java-file-to-kotlin-file.html&quot;&gt;Java-to-Kotlin converter&lt;/a&gt;. It can be used by people familiar with Java to learn the corresponding Kotlin syntactic constructions, but it is not perfect and it is still worth familiarizing yourself with Kotlin and learning the &lt;a href=&quot;../reference/idioms&quot;&gt;Kotlin idioms&lt;/a&gt;.</source>
          <target state="translated">IDEAには&lt;a href=&quot;https://www.jetbrains.com/help/idea/converting-a-java-file-to-kotlin-file.html&quot;&gt;Java-to-Kotlinコンバーター&lt;/a&gt;が組み込まれています。Javaに精通している人が対応するKotlin構文構文を学ぶために使用できますが、完全ではなく、Kotlinに慣れ、&lt;a href=&quot;../reference/idioms&quot;&gt;Kotlinイディオム&lt;/a&gt;を学ぶ価値はあります。</target>
        </trans-unit>
        <trans-unit id="3e8437143d4c208041b9e7dc73001eda18b471b7" translate="yes" xml:space="preserve">
          <source>IEEErem</source>
          <target state="translated">IEEErem</target>
        </trans-unit>
        <trans-unit id="a479a89af81322719229d26626e9261747f5e247" translate="yes" xml:space="preserve">
          <source>IGNORE_CASE</source>
          <target state="translated">IGNORE_CASE</target>
        </trans-unit>
        <trans-unit id="6fca55ca3c828a46bfe96a10e69f572b61ce540c" translate="yes" xml:space="preserve">
          <source>IN</source>
          <target state="translated">IN</target>
        </trans-unit>
        <trans-unit id="e5e4713ba8f441acc2311c63185a8591a20ddcaf" translate="yes" xml:space="preserve">
          <source>INFINITE</source>
          <target state="translated">INFINITE</target>
        </trans-unit>
        <trans-unit id="d60d89994c2165dbb5cb15c0ca6a53ef57dbf709" translate="yes" xml:space="preserve">
          <source>INITIAL_QUOTE_PUNCTUATION</source>
          <target state="translated">INITIAL_QUOTE_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="4c38beffa49b3c4e833b61ab982e642ee37bd833" translate="yes" xml:space="preserve">
          <source>INSTANCE</source>
          <target state="translated">INSTANCE</target>
        </trans-unit>
        <trans-unit id="bc0a7fedf606734e8b8a7a6a0423b5fd26cf0e94" translate="yes" xml:space="preserve">
          <source>INTERNAL</source>
          <target state="translated">INTERNAL</target>
        </trans-unit>
        <trans-unit id="3abcb72b954677e513cd35785ddfd45da21ba7df" translate="yes" xml:space="preserve">
          <source>INVALID</source>
          <target state="translated">INVALID</target>
        </trans-unit>
        <trans-unit id="6309dcdb883fbfdbdd8583370627de3f62431921" translate="yes" xml:space="preserve">
          <source>INVARIANT</source>
          <target state="translated">INVARIANT</target>
        </trans-unit>
        <trans-unit id="74b5e33e6c2950450e841be55ad77a9a298f6e82" translate="yes" xml:space="preserve">
          <source>IO API for working with files and streams.</source>
          <target state="translated">ファイルやストリームを扱うための IO API。</target>
        </trans-unit>
        <trans-unit id="d4ba35793b9b14a1c9dfe7552c4aadb3500b92b0" translate="yes" xml:space="preserve">
          <source>IOS</source>
          <target state="translated">IOS</target>
        </trans-unit>
        <trans-unit id="880aaed583c06128d0dabc74c31f4f9c0f838de0" translate="yes" xml:space="preserve">
          <source>ISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1.</source>
          <target state="translated">ISO Latin Alphabet No.1,a.k.a.ISO-LATIN-1.</target>
        </trans-unit>
        <trans-unit id="7ed18c6c7ea70ff1be77a3ecb9a66a126984e1e5" translate="yes" xml:space="preserve">
          <source>ISO_8859_1</source>
          <target state="translated">ISO_8859_1</target>
        </trans-unit>
        <trans-unit id="c252e4ebc2a8a2a4f6c18e35a3c3483e483dd246" translate="yes" xml:space="preserve">
          <source>Id and version</source>
          <target state="translated">IDとバージョン</target>
        </trans-unit>
        <trans-unit id="d3a51ffb1e3f01b30accf6df0d2f721e7f26e556" translate="yes" xml:space="preserve">
          <source>Ideally, a new version of a library can be used as a &quot;drop-in replacement&quot; for an older version. This means that upgrading a binary dependency should not break anything, even if the application is not recompiled (this is possible under dynamic linking).</source>
          <target state="translated">理想的には、ライブラリの新バージョンは古いバージョンの「ドロップイン置換」として使用できます。これは、アプリケーションが再コンパイルされていなくても、バイナリ依存関係をアップグレードしても何も壊さないことを意味します (これはダイナミックリンクで可能です)。</target>
        </trans-unit>
        <trans-unit id="859ba4fec3728f6f969697355896871c211c1e1f" translate="yes" xml:space="preserve">
          <source>Ideally, every incompatible change should be announced through a compile-time warning reported in the problematic code (usually referred to as a &lt;em&gt;deprecation warning&lt;/em&gt;) and accompanied with automated migration aids. So, the ideal migration workflow goes as follows:</source>
          <target state="translated">理想的には、互換性のないすべての変更は、問題のあるコードで報告されるコンパイル時の警告（通常は&lt;em&gt;非推奨の警告&lt;/em&gt;と呼ば&lt;em&gt;れます&lt;/em&gt;）を介して通知され、自動化された移行支援が付随します。したがって、理想的な移行ワークフローは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="087a9655745fc0cab55d8e68ef13c11042591cc2" translate="yes" xml:space="preserve">
          <source>Idiomatic use of language features</source>
          <target state="translated">言語機能の慣用的な使用</target>
        </trans-unit>
        <trans-unit id="ec04bd386a626dbd6df1f3954dfd578f058ce091" translate="yes" xml:space="preserve">
          <source>Idioms</source>
          <target state="translated">Idioms</target>
        </trans-unit>
        <trans-unit id="3da115646ac4bed9a99193bb94e35bef8ed64988" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;append#kotlin.text.StringBuilder%24append(kotlin.String?)/value&quot;&gt;value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended.</source>
          <target state="translated">&lt;a href=&quot;append#kotlin.text.StringBuilder%24append(kotlin.String?)/value&quot;&gt;値&lt;/a&gt;が &lt;code&gt;null&lt;/code&gt; の場合、4文字の &lt;code&gt;&quot;null&quot;&lt;/code&gt; が追加されます。</target>
        </trans-unit>
        <trans-unit id="7116ccfc9bfe7776006467cfb0a446f8b7f1a57f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with &lt;code&gt;null&lt;/code&gt; values.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズより大きい場合、コピー配列の余分な要素は &lt;code&gt;null&lt;/code&gt; 値で埋められます。</target>
        </trans-unit>
        <trans-unit id="10756c73471a82f7019c38192c8009852ba15419" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズより小さい場合、コピー配列は&lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSizeに&lt;/a&gt;切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="51af16ecd7473c2e5424019e748ee393e778bc49" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with &lt;code&gt;false&lt;/code&gt; values.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズより大きい場合、コピー配列の余分な要素は &lt;code&gt;false&lt;/code&gt; 値で埋められます。</target>
        </trans-unit>
        <trans-unit id="c1e121c8e99f645abbf72f057357f99718caaa2f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズより小さい場合、コピー配列は&lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSizeに&lt;/a&gt;切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="1f2abba5d06a22a16ee639e853c70cb9ca87180f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with zero values.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズより大きい場合、コピー配列の余分な要素はゼロ値で埋められます。</target>
        </trans-unit>
        <trans-unit id="f9cc62e5c68b22296cffe98ca0d3ae74a9771f17" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズより小さい場合、コピー配列は&lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSizeに&lt;/a&gt;切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="54313bea7a81301c76111eaa07088a4a9fb7c12c" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with null char (&lt;code&gt;\u0000&lt;/code&gt;) values.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズより大きい場合、コピー配列の余分な要素はnull char（ &lt;code&gt;\u0000&lt;/code&gt; ）値で埋められます。</target>
        </trans-unit>
        <trans-unit id="b0875c9b1dc49854df801a1cc12ab6317eaea969" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズより小さい場合、コピー配列は&lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSizeに&lt;/a&gt;切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="ada9d3a67b3da1ac031d4b8eab6aa15e10e6f505" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with zero values.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズより大きい場合、コピー配列の余分な要素はゼロ値で埋められます。</target>
        </trans-unit>
        <trans-unit id="a4d533ebbe21d5f918e9006bf160fa180cce3bde" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズより小さい場合、コピー配列は&lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSizeに&lt;/a&gt;切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="c42a89a0a4cd96e24df901b9aa82a05f84012972" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with &lt;code&gt;null&lt;/code&gt; values.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズより大きい場合、コピー配列の余分な要素は &lt;code&gt;null&lt;/code&gt; 値で埋められます。</target>
        </trans-unit>
        <trans-unit id="409249b4b39897fe51824168aaadc0a266615ba8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズよりも小さい場合、コピー配列は&lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSizeに&lt;/a&gt;切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="45aac04fd71dfd2bc26c11ffe78da83301480137" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with &lt;code&gt;false&lt;/code&gt; values.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズより大きい場合、コピー配列の余分な要素は &lt;code&gt;false&lt;/code&gt; 値で埋められます。</target>
        </trans-unit>
        <trans-unit id="60377e3a2ee5c9d0582df5e7225fd81cf996b18d" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズよりも小さい場合、コピー配列は&lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSizeに&lt;/a&gt;切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="3b05c8bbd75503d8e6a757c4ffaee353008eb06a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with zero values.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズより大きい場合、コピー配列の余分な要素はゼロ値で埋められます。</target>
        </trans-unit>
        <trans-unit id="d68f7fc720a43801d5ec0fb8e11c4ff714977108" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズよりも小さい場合、コピー配列は&lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSizeに&lt;/a&gt;切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="08338744c1d3dc8e1c228b11670b7813cf32d8d5" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with null char (&lt;code&gt;\u0000&lt;/code&gt;) values.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズより大きい場合、コピー配列の余分な要素はnull文字（ &lt;code&gt;\u0000&lt;/code&gt; ）値で埋められます。</target>
        </trans-unit>
        <trans-unit id="9db2ce53e2a43334e6fe2a23124f9533508dd54b" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズよりも小さい場合、コピー配列は&lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSizeに&lt;/a&gt;切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="06592245364633ec4f7c7e7a9181301a3b171e05" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with zero values.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズより大きい場合、コピー配列の余分な要素はゼロ値で埋められます。</target>
        </trans-unit>
        <trans-unit id="7eec95129b2717b835f1bfade38acd0752e1f4d7" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;が元の配列のサイズよりも小さい場合、コピー配列は&lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSizeに&lt;/a&gt;切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="323d80bac9fea71a1cf91f72104d4ae325480945" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; is not specified then some unspecified name will be used. If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt; is not specified then &quot;.tmp&quot; will be used. If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;directory&lt;/a&gt; is not specified then the default temporary-file directory will be used.</source>
          <target state="translated">&lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;プレフィックス&lt;/a&gt;が指定されていない場合、未指定の名前が使用されます。&lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;サフィックス&lt;/a&gt;が指定されていない場合は、「。tmp」が使用されます。&lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;ディレクトリ&lt;/a&gt;が指定されていない場合は、デフォルトの一時ファイルディレクトリが使用されます。</target>
        </trans-unit>
        <trans-unit id="b99190d89c3b360b3a835806e0662622d3cf0dbf" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/prefix&quot;&gt;prefix&lt;/a&gt; is not specified then some unspecified string will be used. If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/suffix&quot;&gt;suffix&lt;/a&gt; is not specified then &quot;.tmp&quot; will be used. If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/directory&quot;&gt;directory&lt;/a&gt; is not specified then the default temporary-file directory will be used.</source>
          <target state="translated">&lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/prefix&quot;&gt;プレフィックス&lt;/a&gt;が指定されていない場合、指定されていない文字列が使用されます。&lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/suffix&quot;&gt;サフィックス&lt;/a&gt;が指定されていない場合は、「。tmp」が使用されます。&lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/directory&quot;&gt;ディレクトリ&lt;/a&gt;が指定されていない場合は、デフォルトの一時ファイルディレクトリが使用されます。</target>
        </trans-unit>
        <trans-unit id="58f46707a7046964465798b99af9c1e475421494" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; is not specified then some unspecified name will be used. If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt; is not specified then &quot;.tmp&quot; will be used. If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;directory&lt;/a&gt; is not specified then the default temporary-file directory will be used.</source>
          <target state="translated">&lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;プレフィックス&lt;/a&gt;が指定されていない場合、未指定の名前が使用されます。&lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;サフィックス&lt;/a&gt;が指定されていない場合は、「。tmp」が使用されます。&lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;ディレクトリ&lt;/a&gt;が指定されていない場合は、デフォルトの一時ファイルディレクトリが使用されます。</target>
        </trans-unit>
        <trans-unit id="93e080d1cace70a7bf233d5a4555f4d07357dc7a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/prefix&quot;&gt;prefix&lt;/a&gt; is not specified then some unspecified string will be used. If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/suffix&quot;&gt;suffix&lt;/a&gt; is not specified then &quot;.tmp&quot; will be used. If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/directory&quot;&gt;directory&lt;/a&gt; is not specified then the default temporary-file directory will be used.</source>
          <target state="translated">&lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/prefix&quot;&gt;プレフィックス&lt;/a&gt;が指定されていない場合、指定されていない文字列が使用されます。&lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/suffix&quot;&gt;サフィックス&lt;/a&gt;が指定されていない場合は、「。tmp」が使用されます。&lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/directory&quot;&gt;ディレクトリ&lt;/a&gt;が指定されていない場合は、デフォルトの一時ファイルディレクトリが使用されます。</target>
        </trans-unit>
        <trans-unit id="39f8f458ec615b321af11d61c4b5bbe5ba0596a6" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; is rooted path it must be equal to this. If &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; is relative path then last N components of &lt;code&gt;this&lt;/code&gt; must be the same as all components in &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt;, where N is the number of components in &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;、他のは、&lt;/a&gt;パスを根ざしていることは、これに等しくなければなりません。場合&lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;他方が&lt;/a&gt;相対パスであり、その後の最後のN個の成分 &lt;code&gt;this&lt;/code&gt; すべてのコンポーネントと同じである必要があり&lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;、他の&lt;/a&gt; Nの中の成分の数であり、&lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;他方が&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59d70d8b4ea0e7645f189a9d7bf64c9955918ff9" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt; is rooted path it must be equal to this. If &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt; is relative path then last N components of &lt;code&gt;this&lt;/code&gt; must be the same as all components in &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt;, where N is the number of components in &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;、他のは、&lt;/a&gt;パスを根ざしていることは、これに等しくなければなりません。&lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt;が相対パスの場合、 &lt;code&gt;this&lt;/code&gt; 最後のNコンポーネントは&lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;otherの&lt;/a&gt;すべてのコンポーネントと同じである必要があります。ここで、Nは&lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt;のコンポーネントの数です。</target>
        </trans-unit>
        <trans-unit id="df00345c684b508fceaa49f4842de52e91ae93ec" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;find-associated-object#T&quot;&gt;T&lt;/a&gt; is an @&lt;a href=&quot;-associated-object-key/index#kotlin.reflect.AssociatedObjectKey&quot;&gt;AssociatedObjectKey&lt;/a&gt;-annotated annotation class and &lt;a href=&quot;find-associated-object/-this-&quot;&gt;this&lt;/a&gt; class is annotated with @&lt;a href=&quot;find-associated-object#T&quot;&gt;T&lt;/a&gt; (&lt;code&gt;S::class&lt;/code&gt;), returns object &lt;code&gt;S&lt;/code&gt;.</source>
          <target state="translated">場合&lt;a href=&quot;find-associated-object#T&quot;&gt;Tは&lt;/a&gt;@です&lt;a href=&quot;-associated-object-key/index#kotlin.reflect.AssociatedObjectKey&quot;&gt;AssociatedObjectKey&lt;/a&gt; -annotated注釈クラスと&lt;a href=&quot;find-associated-object/-this-&quot;&gt;、この&lt;/a&gt;クラスは、@でアノテートされた&lt;a href=&quot;find-associated-object#T&quot;&gt;T&lt;/a&gt;（ &lt;code&gt;S::class&lt;/code&gt; ）、戻り値Object &lt;code&gt;S&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="3f51d056b5749a61a78e491d362e33bcfd18e1b8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;get-original-kotlin-class#kotlinx.cinterop%24getOriginalKotlinClass(kotlinx.cinterop.ObjCClass)/objCClass&quot;&gt;objCClass&lt;/a&gt; is a class generated to Objective-C header for Kotlin class, returns &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; for that original Kotlin class.</source>
          <target state="translated">&lt;a href=&quot;get-original-kotlin-class#kotlinx.cinterop%24getOriginalKotlinClass(kotlinx.cinterop.ObjCClass)/objCClass&quot;&gt;objCClass&lt;/a&gt;がKotlinクラスのObjective-Cヘッダーに生成されたクラスである場合、その元のKotlinクラスの&lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="ac8f4b48d7ad52ef413b5d46f6ee7b18429f8a5c" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;get-original-kotlin-class#kotlinx.cinterop%24getOriginalKotlinClass(kotlinx.cinterop.ObjCProtocol)/objCProtocol&quot;&gt;objCProtocol&lt;/a&gt; is a protocol generated to Objective-C header for Kotlin class, returns &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; for that original Kotlin class.</source>
          <target state="translated">&lt;a href=&quot;get-original-kotlin-class#kotlinx.cinterop%24getOriginalKotlinClass(kotlinx.cinterop.ObjCProtocol)/objCProtocol&quot;&gt;objCProtocol&lt;/a&gt;がKotlinクラスのObjective-Cヘッダーに対して生成されたプロトコルである場合、その元のKotlinクラスの&lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="81624da05304cb9c4f3d0bda93d35dac96653765" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;insert#kotlin.text.StringBuilder%24insert(kotlin.Int,%20kotlin.String?)/value&quot;&gt;value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are inserted.</source>
          <target state="translated">&lt;a href=&quot;insert#kotlin.text.StringBuilder%24insert(kotlin.Int,%20kotlin.String?)/value&quot;&gt;値&lt;/a&gt;が &lt;code&gt;null&lt;/code&gt; の場合、4文字の &lt;code&gt;&quot;null&quot;&lt;/code&gt; が挿入されます。</target>
        </trans-unit>
        <trans-unit id="9c3436ce672978ed57529bad76b43af3b8c8d35f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;with-sign#kotlin.math%24withSign%28kotlin.Double%2C+kotlin.Double%29%2Fsign&quot;&gt;sign&lt;/a&gt; is &lt;code&gt;NaN&lt;/code&gt; the sign of the result is undefined.</source>
          <target state="translated">&lt;a href=&quot;with-sign#kotlin.math%24withSign%28kotlin.Double%2C+kotlin.Double%29%2Fsign&quot;&gt;符号&lt;/a&gt;が &lt;code&gt;NaN&lt;/code&gt; の場合、結果の符号は未定義です。</target>
        </trans-unit>
        <trans-unit id="0919bd45dfd5813545ade9fbc603f875245cc160" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;with-sign#kotlin.math%24withSign(kotlin.Double,%20kotlin.Double)/sign&quot;&gt;sign&lt;/a&gt; is &lt;code&gt;NaN&lt;/code&gt; the sign of the result is undefined.</source>
          <target state="translated">&lt;a href=&quot;with-sign#kotlin.math%24withSign(kotlin.Double,%20kotlin.Double)/sign&quot;&gt;符号&lt;/a&gt;が &lt;code&gt;NaN&lt;/code&gt; の場合、結果の符号は未定義です。</target>
        </trans-unit>
        <trans-unit id="97bd02530a6e92760dbfeb249a29a66473663604" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Car&lt;/code&gt; does nothing, it will inherit this function as-is, and it will return a message with the car's horsepowers and max speed. If we want a car-specific message, &lt;code&gt;Car&lt;/code&gt; can override the function by redeclaring it with the &lt;code&gt;override&lt;/code&gt; keyword:</source>
          <target state="translated">&lt;code&gt;Car&lt;/code&gt; が何もしない場合、この関数はそのまま継承され、車の馬力と最高速度を示すメッセージが返されます。車固有のメッセージが必要な場合、 &lt;code&gt;Car&lt;/code&gt; は &lt;code&gt;override&lt;/code&gt; キーワードを使用して関数を再宣言することにより、関数をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="6b65a764a6e57020469ed37fe85c746bc23325c2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;T&lt;/code&gt; is contravariant: is it okay that the user of my class thinks that &lt;code&gt;T&lt;/code&gt; in this position is a &lt;code&gt;Subtype&lt;/code&gt;, while in reality, it's a &lt;code&gt;Supertype&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; が反変である場合：私のクラスのユーザーは、この位置の &lt;code&gt;T&lt;/code&gt; が &lt;code&gt;Subtype&lt;/code&gt; であると考えていても &lt;code&gt;Supertype&lt;/code&gt; ませんが、実際には、スーパータイプですか？</target>
        </trans-unit>
        <trans-unit id="7f4b2a8362f8c8da16a2daf58794c2f8fb9ef78c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;T&lt;/code&gt; is covariant: is it okay that the user of my class thinks that &lt;code&gt;T&lt;/code&gt; in this position is a &lt;code&gt;Supertype&lt;/code&gt;, while in reality, it's a &lt;code&gt;Subtype&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; が共変である場合：私のクラスのユーザーは、この位置の &lt;code&gt;T&lt;/code&gt; が &lt;code&gt;Supertype&lt;/code&gt; &lt;code&gt;Subtype&lt;/code&gt; と考えていても問題ありませんが、実際にはサブタイプですか？</target>
        </trans-unit>
        <trans-unit id="bfd51f1001dac80c99a4bb3dda8e4e82d6a1ba60" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;maybeNull&lt;/code&gt; is null, the function won't be called, and &lt;code&gt;result&lt;/code&gt; will be null; otherwise, it will be the return value of &lt;code&gt;functionThatCanNotHandleNull(this)&lt;/code&gt;, where &lt;code&gt;this&lt;/code&gt; refers to &lt;code&gt;maybeNull&lt;/code&gt;. You can chain &lt;code&gt;run()&lt;/code&gt; calls with &lt;code&gt;?.&lt;/code&gt; - each one will be called on the previous result if it's not null:</source>
          <target state="translated">場合 &lt;code&gt;maybeNull&lt;/code&gt; nullの場合、関数が呼び出されず、 &lt;code&gt;result&lt;/code&gt; nullになります。それ以外の場合は、の戻り値となる &lt;code&gt;functionThatCanNotHandleNull(this)&lt;/code&gt; 、 &lt;code&gt;this&lt;/code&gt; を意味 &lt;code&gt;maybeNull&lt;/code&gt; 。 &lt;code&gt;run()&lt;/code&gt; 呼び出しは &lt;code&gt;?.&lt;/code&gt; チェーンできます。-それぞれがnullでない場合、前の結果で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1fae05b8006d19a81c7cfe4f83b2f0b20d1eb681" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;output&lt;/code&gt; is a .jar file, whether Kotlin runtime library is included in the jar</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; が.jarファイルの場合、Kotlinランタイムライブラリがjarに含まれているかどうか</target>
        </trans-unit>
        <trans-unit id="76b835947859ca1b8bd986c559c1ae81675e7041" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;this&lt;/em&gt; has no qualifiers, it refers to the &lt;em&gt;innermost enclosing scope&lt;/em&gt;. To refer to &lt;em&gt;this&lt;/em&gt; in other scopes, &lt;em&gt;label qualifiers&lt;/em&gt; are used:</source>
          <target state="translated">&lt;em&gt;これ&lt;/em&gt;に修飾子がない場合は、&lt;em&gt;最も内側の囲みスコープを&lt;/em&gt;参照し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;これ&lt;/em&gt;を他のスコープで参照するには、&lt;em&gt;ラベル修飾子&lt;/em&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="61eed3660645882617baf218a091099d9cf2b60b" translate="yes" xml:space="preserve">
          <source>If Expression</source>
          <target state="translated">式の場合</target>
        </trans-unit>
        <trans-unit id="067406276e7bea71dbdf3fc57b0b60425f4f81e1" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;headerFilter&lt;/code&gt; is not specified, then all headers are included.</source>
          <target state="translated">&lt;code&gt;headerFilter&lt;/code&gt; が指定されていない場合、すべてのヘッダーが含まれます。</target>
        </trans-unit>
        <trans-unit id="c1d473c7be95157741f59b453932617b9a2d63b7" translate="yes" xml:space="preserve">
          <source>If a Java method returns void, it will return &lt;code&gt;Unit&lt;/code&gt; when called from Kotlin. If, by any chance, someone uses that return value, it will be assigned at the call site by the Kotlin compiler, since the value itself is known in advance (being &lt;code&gt;Unit&lt;/code&gt;).</source>
          <target state="translated">Javaメソッドがvoidを返す場合、Kotlinから呼び出されると &lt;code&gt;Unit&lt;/code&gt; が返されます。万が一、誰かがその戻り値を使用した場合、値自体は事前に（ &lt;code&gt;Unit&lt;/code&gt; であるため）わかっているため、コールサイトでKotlinコンパイラーによって割り当てられます。</target>
        </trans-unit>
        <trans-unit id="40ec1cb51b1e7e966d4cdec7135acdd24d93310b" translate="yes" xml:space="preserve">
          <source>If a Kotlin file contains a single class (potentially with related top-level declarations), its name should be the same as the name of the class, with the .kt extension appended. If a file contains multiple classes, or only top-level declarations, choose a name describing what the file contains, and name the file accordingly. Use camel humps with an uppercase first letter (e.g. &lt;code&gt;ProcessDeclarations.kt&lt;/code&gt;).</source>
          <target state="translated">Kotlinファイルに単一のクラスが含まれている場合（関連するトップレベルの宣言が含まれている可能性があります）、その名前はクラスの名前と同じで、.kt拡張子が追加されている必要があります。ファイルに複数のクラスが含まれている場合、または最上位の宣言のみが含まれている場合は、ファイルの内容を説明する名前を選択し、それに応じてファイルに名前を付けます。キャメルのこぶを最初の文字に大文字で使用します（例： &lt;code&gt;ProcessDeclarations.kt&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a5f29e49b7a1540ab6955bac6bab0b557adcfa46" translate="yes" xml:space="preserve">
          <source>If a Kotlin file contains a single class (potentially with related top-level declarations), its name should be the same as the name of the class, with the .kt extension appended. If a file contains multiple classes, or only top-level declarations, choose a name describing what the file contains, and name the file accordingly. Use the &lt;a href=&quot;https://en.wikipedia.org/wiki/Camel_case&quot;&gt;camel case&lt;/a&gt; with an uppercase first letter (for example, &lt;code&gt;ProcessDeclarations.kt&lt;/code&gt;).</source>
          <target state="translated">Kotlinファイルに単一のクラスが含まれている場合（関連するトップレベルの宣言がある可能性があります）、その名前はクラスの名前と同じで、拡張子に.ktが追加されている必要があります。ファイルに複数のクラスが含まれている場合、または最上位の宣言のみが含まれている場合は、ファイルに含まれる内容を説明する名前を選択し、それに応じてファイルに名前を付けます。最初の文字が大文字の&lt;a href=&quot;https://en.wikipedia.org/wiki/Camel_case&quot;&gt;キャメルケース&lt;/a&gt;を使用します（たとえば、 &lt;code&gt;ProcessDeclarations.kt&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d499261dcf077150b8a893ee60227455c9e843ed" translate="yes" xml:space="preserve">
          <source>If a Kotlin/Native module uses a CocoaPods library, you can build this module only from an Xcode project. Otherwise the CocoaPods library cannot be resolved by the Kotlin/Native infrastructure.</source>
          <target state="translated">Kotlin/NativeモジュールがCocoaPodsライブラリを使用している場合、Xcodeプロジェクトからのみビルドできます。そうしないと、CocoaPods ライブラリは Kotlin/Native インフラストラクチャで解決できません。</target>
        </trans-unit>
        <trans-unit id="c57e5e1c183d06345fa4f91784753426d2cd7cbe" translate="yes" xml:space="preserve">
          <source>If a class has a &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;companion object&lt;/a&gt; defined, you can also define extension functions and properties for the companion object. Just like regular members of the companion object, they can be called using only the class name as the qualifier:</source>
          <target state="translated">クラスに&lt;a href=&quot;object-declarations#companion-objects&quot;&gt;コンパニオンオブジェクトが&lt;/a&gt;定義されている場合は、コンパニオンオブジェクトの拡張関数とプロパティを定義することもできます。コンパニオンオブジェクトの通常のメンバーと同様に、修飾子としてクラス名のみを使用して呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="a60ec0b587e0996e818004264195b3afcc09cec1" translate="yes" xml:space="preserve">
          <source>If a class has a &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;companion object&lt;/a&gt; defined, you can also define extension functions and properties for the companion object:</source>
          <target state="translated">クラスに&lt;a href=&quot;object-declarations#companion-objects&quot;&gt;コンパニオンオブジェクトが&lt;/a&gt;定義されている場合は、コンパニオンオブジェクトの拡張関数とプロパティを定義することもできます。</target>
        </trans-unit>
        <trans-unit id="4764e437b4a8e0194f97255ccbb034043a390f71" translate="yes" xml:space="preserve">
          <source>If a class has a member function, and an extension function is defined which has the same receiver type, the same name is applicable to given arguments, the &lt;strong&gt;member always wins&lt;/strong&gt;. For example:</source>
          <target state="translated">クラスにメンバー関数があり、同じレシーバータイプを持つ拡張関数が定義されている場合、同じ名前が特定の引数に適用され、&lt;strong&gt;メンバーは常にwinになり&lt;/strong&gt;ます。例えば：</target>
        </trans-unit>
        <trans-unit id="9198c3448fff5eb29091025ac1cdca923057a3b0" translate="yes" xml:space="preserve">
          <source>If a class has a member function, and an extension function is defined which has the same receiver type, the same name, and is applicable to given arguments, the &lt;strong&gt;member always wins&lt;/strong&gt;. For example:</source>
          <target state="translated">クラスにメンバー関数があり、同じレシーバータイプ、同じ名前を持ち、指定された引数に適用できる拡張関数が定義されている場合、&lt;strong&gt;メンバーは常に勝ち&lt;/strong&gt;ます。例えば：</target>
        </trans-unit>
        <trans-unit id="b0751c2dcab880d762e9ac5f2b150da0f43d1aeb" translate="yes" xml:space="preserve">
          <source>If a class has two properties which are conceptually the same but one is part of a public API and another is an implementation detail, use an underscore as the prefix for the name of the private property:</source>
          <target state="translated">概念的には同じですが、1 つがパブリック API の一部で、もう 1 つが実装の詳細である 2 つのプロパティを持つクラスの場合、プライベート プロパティの名前の接頭語にはアンダースコアを使用します。</target>
        </trans-unit>
        <trans-unit id="62aeef1d35409f9d2a0e16b783bc032764ff6cdc" translate="yes" xml:space="preserve">
          <source>If a class or a function from a library is marked by its author as experimental, using it in your code will produce warnings or compilation errors unless you explicitly accept their experimental status. There are several ways to accept the experimental status of API elements; all of them are applicable without technical limitations. You are free to choose the way that you find best for your situation.</source>
          <target state="translated">ライブラリのクラスや関数が作者によって実験的なものとしてマークされている場合、明示的に実験的な状態を受け入れない限り、コード内でそれを使用すると警告やコンパイルエラーが発生します。API 要素の実験的な状態を受け入れるにはいくつかの方法があります。あなたの状況に最も適した方法を自由に選択することができます。</target>
        </trans-unit>
        <trans-unit id="b68424f5ba6a2078bd8f39139d9b1b4eecca3f3f" translate="yes" xml:space="preserve">
          <source>If a component of the destructured parameter is unused, you can replace it with the underscore to avoid inventing its name:</source>
          <target state="translated">破壊されたパラメータのコンポーネントが使用されていない場合は、アンダースコアに置き換えることで、その名前を考案しないようにすることができます。</target>
        </trans-unit>
        <trans-unit id="69396f6988ae56a2b749974b16702f3935d83bf9" translate="yes" xml:space="preserve">
          <source>If a coroutine encounters an exception other than &lt;code&gt;CancellationException&lt;/code&gt;, it cancels its parent with that exception. This behaviour cannot be overridden and is used to provide stable coroutines hierarchies for &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/blob/master/docs/composing-suspending-functions.md#structured-concurrency-with-async&quot;&gt;structured concurrency&lt;/a&gt;. &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html&quot;&gt;CoroutineExceptionHandler&lt;/a&gt; implementation is not used for child coroutines.</source>
          <target state="translated">コルーチンが &lt;code&gt;CancellationException&lt;/code&gt; 以外の例外を検出した場合、その例外で親をキャンセルします。この動作はオーバーライドできず、&lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/blob/master/docs/composing-suspending-functions.md#structured-concurrency-with-async&quot;&gt;構造化された同時実行の&lt;/a&gt;ための安定したコルーチン階層を提供するために使用されます。&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html&quot;&gt;CoroutineExceptionHandler&lt;/a&gt;実装は、子コルーチンには使用されません。</target>
        </trans-unit>
        <trans-unit id="c6f280ee1c596a483e44dc5cd919a56f36a6fc8d" translate="yes" xml:space="preserve">
          <source>If a coroutine encounters exception other than &lt;code&gt;CancellationException&lt;/code&gt;, it cancels its parent with that exception. This behaviour cannot be overridden and is used to provide stable coroutines hierarchies for &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/blob/master/docs/composing-suspending-functions.md#structured-concurrency-with-async&quot;&gt;structured concurrency&lt;/a&gt; which do not depend on &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html&quot;&gt;CoroutineExceptionHandler&lt;/a&gt; implementation. The original exception is handled by the parent when all its children terminate.</source>
          <target state="translated">コルーチンが &lt;code&gt;CancellationException&lt;/code&gt; 以外の例外を検出した場合、コルーチンはその例外を使用してその親をキャンセルします。この動作はオーバーライドできず、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html&quot;&gt;CoroutineExceptionHandler&lt;/a&gt;実装に依存しない&lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/blob/master/docs/composing-suspending-functions.md#structured-concurrency-with-async&quot;&gt;構造化された同時実行性の&lt;/a&gt;ための安定したコルーチン階層を提供するために使用されます。元の例外は、すべての子が終了したときに親によって処理されます。</target>
        </trans-unit>
        <trans-unit id="d2d462cd8e9ba3b7d699994700c496f2c560b29d" translate="yes" xml:space="preserve">
          <source>If a declaration has multiple modifiers, always put them in the following order:</source>
          <target state="translated">宣言に複数の修飾子がある場合は、常に以下の順序で配置してください。</target>
        </trans-unit>
        <trans-unit id="1c324efe9f900ec5ab9502805d87c655d837da4d" translate="yes" xml:space="preserve">
          <source>If a default parameter precedes a parameter with no default value, the default value can only be used by calling the function with &lt;a href=&quot;#named-arguments&quot;&gt;named arguments&lt;/a&gt;:</source>
          <target state="translated">デフォルトパラメータがデフォルト値のないパラメータの前にある場合、デフォルト値は、&lt;a href=&quot;#named-arguments&quot;&gt;名前付き引数で&lt;/a&gt;関数を呼び出すことによってのみ使用できます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
