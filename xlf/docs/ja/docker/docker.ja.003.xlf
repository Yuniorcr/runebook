<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="docker">
    <body>
      <group id="docker">
        <trans-unit id="73318d9b7dbead96a3e980bc9aa9fb5ba9fa819f" translate="yes" xml:space="preserve">
          <source>By default, these pre-defined variables are excluded from the output of &lt;code&gt;docker history&lt;/code&gt;. Excluding them reduces the risk of accidentally leaking sensitive authentication information in an &lt;code&gt;HTTP_PROXY&lt;/code&gt; variable.</source>
          <target state="translated">デフォルトでは、これらの事前定義された変数は &lt;code&gt;docker history&lt;/code&gt; の出力から除外されます。それらを除外すると、 &lt;code&gt;HTTP_PROXY&lt;/code&gt; 変数の機密認証情報が誤って漏洩するリスクが軽減されます。</target>
        </trans-unit>
        <trans-unit id="cbea582f956209002e88cbc4ada27fa0d962fe95" translate="yes" xml:space="preserve">
          <source>By default, this development Notary server container runs with the testing self-signed TLS certificates. Before you can successfully connect to it, you must use the root CA file in &lt;code&gt;fixtures/root-ca.crt&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、この開発公証サーバーコンテナーは、テスト用の自己署名TLS証明書で実行されます。正常に接続する前に、 &lt;code&gt;fixtures/root-ca.crt&lt;/code&gt; にあるルートCAファイルを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="c53079a207e51923dadf487a6a0e31e100b39a4c" translate="yes" xml:space="preserve">
          <source>By default, this renders all results in a JSON array. If a format is specified, the given template will be executed for each result.</source>
          <target state="translated">デフォルトでは、これはすべての結果をJSON配列で表示します。フォーマットが指定された場合、与えられたテンプレートが各結果に対して実行されます。</target>
        </trans-unit>
        <trans-unit id="f51db5b4d533e607b784cec6f3a067a0e505fdd1" translate="yes" xml:space="preserve">
          <source>By default, this renders information about a machine as JSON. If a format is specified, the given template is executed for each result.</source>
          <target state="translated">デフォルトでは、これはマシンに関する情報をJSONとして表示します。フォーマットが指定された場合、与えられたテンプレートが結果ごとに実行されます。</target>
        </trans-unit>
        <trans-unit id="49af628ba5a483808d5b27cc35bc9caff6e40302" translate="yes" xml:space="preserve">
          <source>By default, this will render all version information in an easy to read layout. If a format is specified, the given template will be executed instead.</source>
          <target state="translated">デフォルトでは、これはすべてのバージョン情報を読みやすいレイアウトで表示します。フォーマットが指定された場合は、代わりに与えられたテンプレートが実行されます。</target>
        </trans-unit>
        <trans-unit id="95e08bbdcf1f3ff1bfea58b1ae2dd471014f72ea" translate="yes" xml:space="preserve">
          <source>By default, volumes are not removed to prevent important data from being deleted if there is currently no container using the volume. Use the &lt;code&gt;--volumes&lt;/code&gt; flag when running the command to prune volumes as well:</source>
          <target state="translated">デフォルトでは、現在ボリュームを使用しているコンテナーがない場合、重要なデータが削除されるのを防ぐためにボリュームは削除されません。コマンドを実行してボリュームも &lt;code&gt;--volumes&lt;/code&gt; 場合は、-volumesフラグを使用します。</target>
        </trans-unit>
        <trans-unit id="a5698285a251cb301803c0efaee5ee3410551f36" translate="yes" xml:space="preserve">
          <source>By default, when an update to an individual task returns a state of &lt;code&gt;RUNNING&lt;/code&gt;, the scheduler schedules another task to update until all tasks are updated. If, at any time during an update a task returns &lt;code&gt;FAILED&lt;/code&gt;, the scheduler pauses the update. You can control the behavior using the &lt;code&gt;--update-failure-action&lt;/code&gt; flag for &lt;code&gt;docker service create&lt;/code&gt; or &lt;code&gt;docker service update&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、個々のタスクの更新が &lt;code&gt;RUNNING&lt;/code&gt; の状態を返すと、スケジューラは、すべてのタスクが更新されるまで更新する別のタスクをスケジュールします。更新中にタスクが &lt;code&gt;FAILED&lt;/code&gt; を返した場合、スケジューラは更新を一時停止します。 &lt;code&gt;--update-failure-action&lt;/code&gt; &lt;code&gt;docker service create&lt;/code&gt; または &lt;code&gt;docker service update&lt;/code&gt; の--update-failure-actionフラグを使用して、動作を制御できます。</target>
        </trans-unit>
        <trans-unit id="8354b32fc43b73137ebadee639f16b108477b8fc" translate="yes" xml:space="preserve">
          <source>By default, when you connect a container to an &lt;code&gt;overlay&lt;/code&gt; network, Docker also connects a bridge network to it to provide external connectivity. If you want to create an externally isolated &lt;code&gt;overlay&lt;/code&gt; network, you can specify the &lt;code&gt;--internal&lt;/code&gt; option.</source>
          <target state="translated">デフォルトでは、コンテナーを &lt;code&gt;overlay&lt;/code&gt; ネットワークに接続すると、Dockerはブリッジネットワークも接続して外部接続を提供します。外部で隔離された &lt;code&gt;overlay&lt;/code&gt; ネットワークを作成する場合は、 &lt;code&gt;--internal&lt;/code&gt; オプションを指定できます。</target>
        </trans-unit>
        <trans-unit id="87acbcf709a227d9e7363b9622887ebaccae3163" translate="yes" xml:space="preserve">
          <source>By default, when you publish a port, it is a TCP port. You can specifically publish a UDP port instead of or in addition to a TCP port. When you publish both TCP and UDP ports, If you omit the protocol specifier, the port is published as a TCP port. If you use the longer syntax (recommended for Docker 1.13 and higher), set the &lt;code&gt;protocol&lt;/code&gt; key to either &lt;code&gt;tcp&lt;/code&gt; or &lt;code&gt;udp&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、ポートを公開するとき、それはTCPポートです。TCPポートの代わりに、またはTCPポートに加えて、UDPポートを具体的に公開できます。TCPポートとUDPポートの両方を公開する場合、プロトコル指定子を省略すると、ポートはTCPポートとして公開されます。より長い構文（Docker 1.13以降で推奨）を使用する場合は、 &lt;code&gt;protocol&lt;/code&gt; キーを &lt;code&gt;tcp&lt;/code&gt; または &lt;code&gt;udp&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="3de445d9198de33b1b5e1abd1cacaae2390bcdfe" translate="yes" xml:space="preserve">
          <source>By having this flag it allows for batch cleanup. For example, use this filter to delete all user defined networks:</source>
          <target state="translated">このフラグを持つことで、バッチクリーンアップが可能になります。例えば、このフィルタを使用してすべてのユーザ定義ネットワークを削除します。</target>
        </trans-unit>
        <trans-unit id="f740c5dd5d4ab97daaadc90e6b49355a452a8581" translate="yes" xml:space="preserve">
          <source>By using a docker-in-docker image for the &lt;code&gt;trustsandbox&lt;/code&gt; container, you also don&amp;rsquo;t pollute your real Docker daemon cache with any images you push and pull. The images are stored in an anonymous volume attached to this container, and can be destroyed after you destroy the container.</source>
          <target state="translated">&lt;code&gt;trustsandbox&lt;/code&gt; コンテナーにdocker -in- dockerイメージを使用することで、プッシュおよびプルするイメージで実際のDockerデーモンキャッシュを汚染することもありません。画像はこのコンテナにアタッチされた匿名ボリュームに保存され、コンテナを破棄した後に破棄できます。</target>
        </trans-unit>
        <trans-unit id="399a8ae2cc774a81a085c3e615dd0d4dd7cd51ca" translate="yes" xml:space="preserve">
          <source>Bypass file read permission checks and directory read and execute permission checks.</source>
          <target state="translated">ファイルの読み取り許可チェックとディレクトリの読み取りと実行許可チェックをバイパスします。</target>
        </trans-unit>
        <trans-unit id="db07c2e40c63332bba384355fb97919c05048d69" translate="yes" xml:space="preserve">
          <source>Bypass file read, write, and execute permission checks.</source>
          <target state="translated">ファイルの読み取り、書き込み、許可チェックの実行をバイパスします。</target>
        </trans-unit>
        <trans-unit id="688bd1d15287dadde2712a82e28cc7fcde93aebe" translate="yes" xml:space="preserve">
          <source>Bypass permission checks for operations on System V IPC objects.</source>
          <target state="translated">System V IPC オブジェクトに対する操作の許可チェックをバイパスします。</target>
        </trans-unit>
        <trans-unit id="df2c011fdcc669510635c7c7e87f87ad7e8aeb36" translate="yes" xml:space="preserve">
          <source>Bypass permission checks for sending signals.</source>
          <target state="translated">信号を送信するための許可チェックをバイパスします。</target>
        </trans-unit>
        <trans-unit id="011dca1c2857e5a8a40248e13ec26dffab6f7307" translate="yes" xml:space="preserve">
          <source>Bypass permission checks on operations that normally require the file system UID of the process to match the UID of the file.</source>
          <target state="translated">通常、プロセスのファイルシステムUIDがファイルのUIDと一致するように要求される操作の許可チェックをバイパスします。</target>
        </trans-unit>
        <trans-unit id="d43a46bc93439a36eed6bd56de27d87c84fd7540" translate="yes" xml:space="preserve">
          <source>Bypass the routing mesh</source>
          <target state="translated">ルーティングメッシュをバイパス</target>
        </trans-unit>
        <trans-unit id="e94da20465e0da677d6cf3ac9cb94fc7dba70dc6" translate="yes" xml:space="preserve">
          <source>CHOWN</source>
          <target state="translated">CHOWN</target>
        </trans-unit>
        <trans-unit id="00ac5337ed74f4a1145dc2e813199dafe24a6311" translate="yes" xml:space="preserve">
          <source>CLI environment variables</source>
          <target state="translated">CLI環境変数</target>
        </trans-unit>
        <trans-unit id="4eb763e19c12c4ef0eb3f0f22117a1d1f6386136" translate="yes" xml:space="preserve">
          <source>CLI option</source>
          <target state="translated">CLIオプション</target>
        </trans-unit>
        <trans-unit id="08e4da4e4f3b9df4371883c2c534d94c9bbb7158" translate="yes" xml:space="preserve">
          <source>CMD</source>
          <target state="translated">CMD</target>
        </trans-unit>
        <trans-unit id="edf1318ab7906e3281e77996aa018595ff3f2807" translate="yes" xml:space="preserve">
          <source>CMD (Default Command or Options)</source>
          <target state="translated">CMD (デフォルトコマンドまたはオプション)</target>
        </trans-unit>
        <trans-unit id="ff823d42eb8e55df458984f382e6a4124ef2e286" translate="yes" xml:space="preserve">
          <source>CMD (default command or options)</source>
          <target state="translated">CMD (デフォルトのコマンドまたはオプション)</target>
        </trans-unit>
        <trans-unit id="0ca73595d3e41a195bdc11db00a6c5e2352092ea" translate="yes" xml:space="preserve">
          <source>COMMAND should be an executable, a chained or a quoted command will not work. Example: &lt;code&gt;docker exec -ti my_container &quot;echo a &amp;amp;&amp;amp; echo b&quot;&lt;/code&gt; will not work, but &lt;code&gt;docker exec -ti my_container sh -c &quot;echo a &amp;amp;&amp;amp; echo b&quot;&lt;/code&gt; will.</source>
          <target state="translated">COMMANDは実行可能ファイルである必要があります。チェーンまたは引用されたコマンドは機能しません。例： &lt;code&gt;docker exec -ti my_container &quot;echo a &amp;amp;&amp;amp; echo b&quot;&lt;/code&gt; は機能しませんが、 &lt;code&gt;docker exec -ti my_container sh -c &quot;echo a &amp;amp;&amp;amp; echo b&quot;&lt;/code&gt; は機能します。</target>
        </trans-unit>
        <trans-unit id="c13ae391a18ea16b88f231499bcdc42ae973cc00" translate="yes" xml:space="preserve">
          <source>COMMAND will run in the default directory of the container. If the underlying image has a custom directory specified with the WORKDIR directive in its Dockerfile, this will be used instead.</source>
          <target state="translated">COMMANDはコンテナのデフォルトディレクトリで実行されます。基礎となるイメージがDockerfileのWORKDIRディレクティブで指定されたカスタムディレクトリを持っている場合は、これが代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="09c61b1bb570b8919fe1bfa6d593e36ff4a0558a" translate="yes" xml:space="preserve">
          <source>COMPOSE_API_VERSION</source>
          <target state="translated">COMPOSE_API_VERSION</target>
        </trans-unit>
        <trans-unit id="075934e990bf2de58e08cf8bc7d8405ca0df74ea" translate="yes" xml:space="preserve">
          <source>COMPOSE_CONVERT_WINDOWS_PATHS</source>
          <target state="translated">COMPOSE_CONVERT_WINDOWS_PATHS</target>
        </trans-unit>
        <trans-unit id="a490fef2862488ec598a044ef66cbaa0e6ed6651" translate="yes" xml:space="preserve">
          <source>COMPOSE_FILE</source>
          <target state="translated">COMPOSE_FILE</target>
        </trans-unit>
        <trans-unit id="9c04da925f221a57c723c7a5d71f2f43068aa84b" translate="yes" xml:space="preserve">
          <source>COMPOSE_FORCE_WINDOWS_HOST</source>
          <target state="translated">COMPOSE_FORCE_WINDOWS_HOST</target>
        </trans-unit>
        <trans-unit id="02b02f63ae8382f43f44da4438404fd6e7bb1b11" translate="yes" xml:space="preserve">
          <source>COMPOSE_HTTP_TIMEOUT</source>
          <target state="translated">COMPOSE_HTTP_TIMEOUT</target>
        </trans-unit>
        <trans-unit id="78b7173c08d665d6614297937677c7962886d548" translate="yes" xml:space="preserve">
          <source>COMPOSE_IGNORE_ORPHANS</source>
          <target state="translated">COMPOSE_IGNORE_ORPHANS</target>
        </trans-unit>
        <trans-unit id="335c7f5a80f41c4383b121b41106a8c7ab022a09" translate="yes" xml:space="preserve">
          <source>COMPOSE_INTERACTIVE_NO_CLI</source>
          <target state="translated">COMPOSE_INTERACTIVE_NO_CLI</target>
        </trans-unit>
        <trans-unit id="19959f805703be5e30548ee28eb85e39c05f2448" translate="yes" xml:space="preserve">
          <source>COMPOSE_PARALLEL_LIMIT</source>
          <target state="translated">COMPOSE_PARALLEL_LIMIT</target>
        </trans-unit>
        <trans-unit id="2635050b6bad499664faff2d6b1e86f77f24bd1f" translate="yes" xml:space="preserve">
          <source>COMPOSE_PATH_SEPARATOR</source>
          <target state="translated">COMPOSE_PATH_SEPARATOR</target>
        </trans-unit>
        <trans-unit id="7ccecf7f48e4797ab29bb7ee4cfc9d25640a2a8b" translate="yes" xml:space="preserve">
          <source>COMPOSE_PROJECT_NAME</source>
          <target state="translated">COMPOSE_PROJECT_NAME</target>
        </trans-unit>
        <trans-unit id="8721489da6c5e16b234673e52e0a33e814d823d3" translate="yes" xml:space="preserve">
          <source>COMPOSE_TLS_VERSION</source>
          <target state="translated">COMPOSE_TLS_VERSION</target>
        </trans-unit>
        <trans-unit id="aecf0292da85cb2048d8b648567127d024d4074f" translate="yes" xml:space="preserve">
          <source>COPY</source>
          <target state="translated">COPY</target>
        </trans-unit>
        <trans-unit id="af396b5b7c546c0a09ecc046780a7720f167b658" translate="yes" xml:space="preserve">
          <source>COPY has two forms:</source>
          <target state="translated">COPYには2つの形態があります。</target>
        </trans-unit>
        <trans-unit id="c831e7fae7388596527f17dbff20814a0d1fd001" translate="yes" xml:space="preserve">
          <source>CPU and memory limits and reservations</source>
          <target state="translated">CPUとメモリの制限と予約</target>
        </trans-unit>
        <trans-unit id="200f5c7c731f401ed6f00ff8af68860192d88c65" translate="yes" xml:space="preserve">
          <source>CPU count (Windows only)</source>
          <target state="translated">CPU数(Windowsのみ</target>
        </trans-unit>
        <trans-unit id="6c02cf31fa32c922fe001ab5a78ecf92e7ae40a4" translate="yes" xml:space="preserve">
          <source>CPU percent (Windows only)</source>
          <target state="translated">CPU パーセンテージ (Windows のみ)</target>
        </trans-unit>
        <trans-unit id="1baaafc01fcd1fa20dd909d6f145822785746ada" translate="yes" xml:space="preserve">
          <source>CPU percentage</source>
          <target state="translated">CPUパーセンテージ</target>
        </trans-unit>
        <trans-unit id="826eef91b62ab7b7180fec73d9d176fc23154845" translate="yes" xml:space="preserve">
          <source>CPU period constraint</source>
          <target state="translated">CPU期間制約</target>
        </trans-unit>
        <trans-unit id="f5d6decace4e7b99bf6d5bc06d4d2f3db103367d" translate="yes" xml:space="preserve">
          <source>CPU quota constraint</source>
          <target state="translated">CPUクォータ制約</target>
        </trans-unit>
        <trans-unit id="681a20aa365b8c97d1eacd38d32b955811e8582c" translate="yes" xml:space="preserve">
          <source>CPU share constraint</source>
          <target state="translated">CPUシェア制約</target>
        </trans-unit>
        <trans-unit id="408cf93fd244e93de9ad93777131031fb9c7c515" translate="yes" xml:space="preserve">
          <source>CPU shares (relative weight)</source>
          <target state="translated">CPUのシェア(相対的な重み</target>
        </trans-unit>
        <trans-unit id="8629f26a763371cf20640e7221a696538b5658c3" translate="yes" xml:space="preserve">
          <source>CPUs in which to allow execution (0-3, 0,1)</source>
          <target state="translated">実行を許可するCPU (0-3,0,1)</target>
        </trans-unit>
        <trans-unit id="b5b27172fc740e15a31d844f9dc2b505dc87eeae" translate="yes" xml:space="preserve">
          <source>Caching options for volume mounts (Docker Desktop for Mac)</source>
          <target state="translated">ボリュームマウントのキャッシュオプション (Docker Desktop for Mac)</target>
        </trans-unit>
        <trans-unit id="beb5f11d17f3f498d8ba53d407895453f2287671" translate="yes" xml:space="preserve">
          <source>Calling authorized command (allow)</source>
          <target state="translated">認可されたコマンドの呼び出し(許可)</target>
        </trans-unit>
        <trans-unit id="4fc2f468884c0bfcbbef63dedbe3164123a41dd7" translate="yes" xml:space="preserve">
          <source>Calling unauthorized command (deny)</source>
          <target state="translated">不正なコマンドの呼び出し(拒否</target>
        </trans-unit>
        <trans-unit id="0c17dce1cc7f5b328b0ae93dce5a79dc79c30a77" translate="yes" xml:space="preserve">
          <source>Can I control service startup order?</source>
          <target state="translated">サービスの起動順を制御することはできますか?</target>
        </trans-unit>
        <trans-unit id="3f06a09ae74025bf28f544b2f1b6b3012bdd50ce" translate="yes" xml:space="preserve">
          <source>Can I use json instead of yaml for my Compose file?</source>
          <target state="translated">Composeファイルにyamlの代わりにjsonを使うことはできますか?</target>
        </trans-unit>
        <trans-unit id="b22ecea78140bcc829d30570fc1033f11c81186e" translate="yes" xml:space="preserve">
          <source>Cancel a pull</source>
          <target state="translated">プルのキャンセル</target>
        </trans-unit>
        <trans-unit id="76855863c476e5d1e636a20f81b7a2fe9b7e8b1c" translate="yes" xml:space="preserve">
          <source>Capabilities are just one of the many security features provided by modern Linux kernels. It is also possible to leverage existing, well-known systems like TOMOYO, AppArmor, SELinux, GRSEC, etc. with Docker.</source>
          <target state="translated">機能は、最新のLinuxカーネルが提供する多くのセキュリティ機能の一つに過ぎません。また、TOMOYO、AppArmor、SELinux、GRSECなどのような既存のよく知られたシステムをDockerで活用することも可能です。</target>
        </trans-unit>
        <trans-unit id="9de03488ab597a2e4d896db6c4a5042733f44a66" translate="yes" xml:space="preserve">
          <source>Capabilities turn the binary &amp;ldquo;root/non-root&amp;rdquo; dichotomy into a fine-grained access control system. Processes (like web servers) that just need to bind on a port below 1024 do not need to run as root: they can just be granted the &lt;code&gt;net_bind_service&lt;/code&gt; capability instead. And there are many other capabilities, for almost all the specific areas where root privileges are usually needed.</source>
          <target state="translated">機能により、バイナリの「ルート/非ルート」二分法がきめ細かいアクセス制御システムに変わります。1024未満のポートにバインドする必要があるプロセス（Webサーバーなど）は、rootとして実行する必要はありません。代わりに、 &lt;code&gt;net_bind_service&lt;/code&gt; 機能を付与することができます。また、通常root権限が必要とされるほとんどすべての特定の領域には、他にも多くの機能があります。</target>
        </trans-unit>
        <trans-unit id="4c9b454f7d1c1b8d1a3b4be10aeb579549fcec25" translate="yes" xml:space="preserve">
          <source>Capability Description</source>
          <target state="translated">能力の説明</target>
        </trans-unit>
        <trans-unit id="fe9785052b609f2a0a53d9e1633acc05dd0c97e8" translate="yes" xml:space="preserve">
          <source>Capability Key</source>
          <target state="translated">能力キー</target>
        </trans-unit>
        <trans-unit id="ca62903c589b7fa47f2c2acdfd4f0b3a3ababb36" translate="yes" xml:space="preserve">
          <source>Capture container ID (--cidfile)</source>
          <target state="translated">キャプチャコンテナID (--cidfile)</target>
        </trans-unit>
        <trans-unit id="5b00288fd36cd410e4f77454c64756ab782cb577" translate="yes" xml:space="preserve">
          <source>Casbin AuthZ Plugin</source>
          <target state="translated">Casbin AuthZ プラグイン</target>
        </trans-unit>
        <trans-unit id="04a4d6b5502f6f0f9b81f41e9ffe8681eb02c812" translate="yes" xml:space="preserve">
          <source>Cause of an old container breakout. Also gated by &lt;code&gt;CAP_DAC_READ_SEARCH&lt;/code&gt;.</source>
          <target state="translated">古いコンテナのブレイクアウトの原因。 &lt;code&gt;CAP_DAC_READ_SEARCH&lt;/code&gt; によってもゲートされます。</target>
        </trans-unit>
        <trans-unit id="51ad199d6352d3bb64db022bd0fbb0fcdea024f8" translate="yes" xml:space="preserve">
          <source>CentOS</source>
          <target state="translated">CentOS</target>
        </trans-unit>
        <trans-unit id="b37179a97c82948697ad0d49c7b76c411f9c0218" translate="yes" xml:space="preserve">
          <source>Certificate directory</source>
          <target state="translated">証明書ディレクトリ</target>
        </trans-unit>
        <trans-unit id="b3e4eb01f159b35b99f9fe62dc4d20f8175f1cc1" translate="yes" xml:space="preserve">
          <source>Certificates</source>
          <target state="translated">Certificates</target>
        </trans-unit>
        <trans-unit id="ef29a7d24a43a235dc356f1205550a1344d0963b" translate="yes" xml:space="preserve">
          <source>Certificates can be world-readable, but you might want to remove write access to prevent accidental damage:</source>
          <target state="translated">証明書は世界で読めるようにすることができますが、偶発的な損傷を防ぐために書き込みアクセスを削除した方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="1b91d632e95864e44f7de6e0d0e5107f0757728f" translate="yes" xml:space="preserve">
          <source>Change a device path</source>
          <target state="translated">デバイスパスの変更</target>
        </trans-unit>
        <trans-unit id="193c9fb0cb02e6ef0f48edd152c2c5212018ce7c" translate="yes" xml:space="preserve">
          <source>Change an environment variable</source>
          <target state="translated">環境変数の変更</target>
        </trans-unit>
        <trans-unit id="148e99f4df78975763a1303a4721acdfdf1fd3fd" translate="yes" xml:space="preserve">
          <source>Change into the registry storage for one of those layers (this is in a different directory):</source>
          <target state="translated">これらのレイヤーの1つのレジストリストレージに変更します(これは別のディレクトリにあります)。</target>
        </trans-unit>
        <trans-unit id="a681edf94ac7dbcf190629d114bba658ef30fa09" translate="yes" xml:space="preserve">
          <source>Change into your project directory.</source>
          <target state="translated">プロジェクトディレクトリに変更します。</target>
        </trans-unit>
        <trans-unit id="8a09ab92670fb750892c92f0b76b0a0ca9cfb3fa" translate="yes" xml:space="preserve">
          <source>Change manager autolocking setting (true|false)</source>
          <target state="translated">マネージャの自動ロック設定の変更 (true|false)</target>
        </trans-unit>
        <trans-unit id="5a343e008293dccc9bfd9a6189d4c101185b8dff" translate="yes" xml:space="preserve">
          <source>Change node availability</source>
          <target state="translated">ノードの可用性の変更</target>
        </trans-unit>
        <trans-unit id="a6ce7413e01a89de3c83c6c7145ae263067be792" translate="yes" xml:space="preserve">
          <source>Change roles</source>
          <target state="translated">役割の変更</target>
        </trans-unit>
        <trans-unit id="523445ab7d571797e64833166abcc5af3f9e019c" translate="yes" xml:space="preserve">
          <source>Change settings for a plugin</source>
          <target state="translated">プラグインの設定を変更する</target>
        </trans-unit>
        <trans-unit id="06d6ba403e5c4576b52e5e8912912b50b3ab8072" translate="yes" xml:space="preserve">
          <source>Change settings for a plugin. The plugin must be disabled.</source>
          <target state="translated">プラグインの設定を変更します。プラグインを無効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="2fad2e5e8a9f7d5be42da23adc6313b72858ac52" translate="yes" xml:space="preserve">
          <source>Change the app behavior by editing code, then rebuild, and push the new image. (To do this, follow the same steps you took earlier to &lt;a href=&quot;../part2/index#build-the-app&quot;&gt;build the app&lt;/a&gt; and &lt;a href=&quot;../part2/index#publish-the-image&quot;&gt;publish the image&lt;/a&gt;).</source>
          <target state="translated">コードを編集してアプリの動作を変更し、再ビルドして、新しいイメージをプッシュします。（これを行うには、前に行ったのと同じ手順に従って&lt;a href=&quot;../part2/index#build-the-app&quot;&gt;、アプリ&lt;/a&gt;をビルド&lt;a href=&quot;../part2/index#publish-the-image&quot;&gt;してイメージ&lt;/a&gt;を公開します）。</target>
        </trans-unit>
        <trans-unit id="f90e1a532e2ee7440d242012ee83ed31e5604946" translate="yes" xml:space="preserve">
          <source>Change the greeting in &lt;code&gt;app.py&lt;/code&gt; and save it. For example, change the &lt;code&gt;Hello World!&lt;/code&gt; message to &lt;code&gt;Hello from Docker!&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;app.py&lt;/code&gt; で挨拶を変更して保存します。たとえば、 &lt;code&gt;Hello World!&lt;/code&gt; を変更します。 &lt;code&gt;Hello from Docker!&lt;/code&gt; からHelloへのメッセージ！：</target>
        </trans-unit>
        <trans-unit id="3e6ff36197d807db528fa8c6647c2b182ed610e1" translate="yes" xml:space="preserve">
          <source>Change the source of a mount</source>
          <target state="translated">マウントのソースを変更する</target>
        </trans-unit>
        <trans-unit id="2c500e17f4b87da98a3ea0b21ec930483b1f8d1b" translate="yes" xml:space="preserve">
          <source>Change the source of the arguments</source>
          <target state="translated">引数のソースを変更する</target>
        </trans-unit>
        <trans-unit id="afdd19eaaea7d7fb74e93441ad14a55478947a3c" translate="yes" xml:space="preserve">
          <source>Change to the root of your project directory.</source>
          <target state="translated">プロジェクトディレクトリのルートに変更します。</target>
        </trans-unit>
        <trans-unit id="59969f9bb48d798846b57f0f098144f18b1ae9a2" translate="yes" xml:space="preserve">
          <source>Change your &lt;code&gt;sources.list&lt;/code&gt; entries to start with &lt;code&gt;http://dockerhost:3142/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sources.list&lt;/code&gt; エントリを &lt;code&gt;http://dockerhost:3142/&lt;/code&gt; 始まるように変更します。</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">Changelog</target>
        </trans-unit>
        <trans-unit id="c309779a945e9ddee3c5fe112fcfa5449a5ae007" translate="yes" xml:space="preserve">
          <source>Changing node availability lets you:</source>
          <target state="translated">ノードの可用性を変更することで、以下のことが可能になります。</target>
        </trans-unit>
        <trans-unit id="9f6e9711ada7ea25e1cd23f17c92e698561118d2" translate="yes" xml:space="preserve">
          <source>Check back here for instructions after Notary Server has an official stable release. To get a head start on deploying Notary in production, see &lt;a href=&quot;https://github.com/theupdateframework/notary&quot;&gt;the Notary repository&lt;/a&gt;.</source>
          <target state="translated">Notary Serverの正式な安定版リリース後の手順については、こちらを確認してください。Notaryの本番環境への展開を始めるには&lt;a href=&quot;https://github.com/theupdateframework/notary&quot;&gt;、Notaryリポジトリーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="644dab178864587da5bb7f92dc65e7b971e8c5bf" translate="yes" xml:space="preserve">
          <source>Check for available engine updates</source>
          <target state="translated">使用可能なエンジンのアップデートをチェック</target>
        </trans-unit>
        <trans-unit id="a110c34d8c38423dcac540dfab62d55eaef79ab9" translate="yes" xml:space="preserve">
          <source>Check that the plugin is enabled in the output of &lt;code&gt;docker plugin ls&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;docker plugin ls&lt;/code&gt; の出力でプラグインが有効になっていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="0502b724f096f24d3582f7e026bedab007c4dd6b" translate="yes" xml:space="preserve">
          <source>Check that this worked by running:</source>
          <target state="translated">これを実行して動作したことを確認してください。</target>
        </trans-unit>
        <trans-unit id="bef2e3e3c561bbd31fb824f6e5488b7912edceba" translate="yes" xml:space="preserve">
          <source>Check the &lt;a href=&quot;#user-namespace-known-restrictions&quot;&gt;limitations&lt;/a&gt; on user namespaces to be sure your use case is possible.</source>
          <target state="translated">ユーザー名前空間の&lt;a href=&quot;#user-namespace-known-restrictions&quot;&gt;制限&lt;/a&gt;を確認して、ユースケースが可能であることを確認してください。</target>
        </trans-unit>
        <trans-unit id="dacb428fe895b728c75fb68f86ab4a8f7dbf6293" translate="yes" xml:space="preserve">
          <source>Check the &lt;code&gt;Hello World&lt;/code&gt; message in a web browser again, and refresh to see the count increment.</source>
          <target state="translated">チェック &lt;code&gt;Hello World&lt;/code&gt; 再びWebブラウザでのメッセージを、カウント増分を見てリフレッシュ。</target>
        </trans-unit>
        <trans-unit id="36eeeb0689ba8b725486b43f278608eb18b0a7a0" translate="yes" xml:space="preserve">
          <source>Check the installation by displaying the Machine version:</source>
          <target state="translated">マシンバージョンを表示してインストールを確認します。</target>
        </trans-unit>
        <trans-unit id="d35d5bd251abfed6056958e2b3d5a462986790e9" translate="yes" xml:space="preserve">
          <source>Check the web page at one of your nodes, such as &lt;code&gt;http://192.168.99.101&lt;/code&gt;, and take a look at the results of the visitor counter, which is now live and storing information on Redis.</source>
          <target state="translated">ノードの1つ（ &lt;code&gt;http://192.168.99.101&lt;/code&gt; など）でWebページを確認し、ビジターカウンターの結果を確認します。ビジターカウンターは現在有効であり、Redisに情報を保存しています。</target>
        </trans-unit>
        <trans-unit id="19d4ff6105858c4d97705c73b3992c4b1b7ddcd0" translate="yes" xml:space="preserve">
          <source>Check to prove that the delegation (Signer) now contains multiple Key IDs.</source>
          <target state="translated">委任(署名者)が複数の鍵IDを含むようになったことを証明するためにチェックしてください。</target>
        </trans-unit>
        <trans-unit id="dd7fb0e59434adcd7432fe8c5a2ab288ba10d6e1" translate="yes" xml:space="preserve">
          <source>Check to prove that there are now 2 delegations (Signer).</source>
          <target state="translated">現在2つの代表団があることを証明するためにチェックする(署名者)。</target>
        </trans-unit>
        <trans-unit id="8304b78473d74216c35214672be4e65436320aaa" translate="yes" xml:space="preserve">
          <source>Cherry-pick particular tags</source>
          <target state="translated">特定のタグをチェリーピック</target>
        </trans-unit>
        <trans-unit id="e77d754fed24a2c4b721366e8f41348f91322b91" translate="yes" xml:space="preserve">
          <source>Child commands</source>
          <target state="translated">子コマンド</target>
        </trans-unit>
        <trans-unit id="7151c214aba2dc1de22be22f99af83bac16dc14f" translate="yes" xml:space="preserve">
          <source>Choose a passphrase</source>
          <target state="translated">パスフレーズを選択してください</target>
        </trans-unit>
        <trans-unit id="45b9ce6e2d695ff2c034093f4531d40c366e7b04" translate="yes" xml:space="preserve">
          <source>Choose an option</source>
          <target state="translated">オプションを選択してください</target>
        </trans-unit>
        <trans-unit id="a93c8ad4b394423a7c05f2cb2af56afa2ae1869d" translate="yes" xml:space="preserve">
          <source>Clean up (--rm)</source>
          <target state="translated">クリーンアップ (--rm)</target>
        </trans-unit>
        <trans-unit id="f45ee3cc149fd4de8b1ee347a8389efb3a5d068e" translate="yes" xml:space="preserve">
          <source>Clean up your sandbox</source>
          <target state="translated">サンドボックスの掃除</target>
        </trans-unit>
        <trans-unit id="e918bbd989b5f3b69dde492dafde6c2f175ff7ef" translate="yes" xml:space="preserve">
          <source>Cleanup and reboot</source>
          <target state="translated">クリーンアップと再起動</target>
        </trans-unit>
        <trans-unit id="cb1e4c2ca89462e8328c3bc0974bfcad78bf7b59" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Virtual Switch&lt;/strong&gt; of type &lt;strong&gt;External&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;外部&lt;/strong&gt;タイプの&lt;strong&gt;仮想スイッチ&lt;/strong&gt;の&lt;strong&gt;作成を&lt;/strong&gt;クリックし&lt;strong&gt;ます&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec31a3779162b65d297fd11bad098abb602ccb1c" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Generate new token&lt;/strong&gt; to get to the token generator.</source>
          <target state="translated">[ &lt;strong&gt;新しいトークン&lt;/strong&gt;を&lt;strong&gt;生成]を&lt;/strong&gt;クリックして、トークンジェネレーターにアクセスします。</target>
        </trans-unit>
        <trans-unit id="8ab06144aed875f75ec3896dbc0f68618718e88d" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Virtual Switch Manager&lt;/strong&gt; in the right-hand menu</source>
          <target state="translated">右側のメニューで[ &lt;strong&gt;Virtual Switch Manager]&lt;/strong&gt;をクリックします</target>
        </trans-unit>
        <trans-unit id="c2be7013749cabd978b773cdb7f235f2c74db5f1" translate="yes" xml:space="preserve">
          <source>Client Enforcement with Docker Content Trust</source>
          <target state="translated">Docker Content Trustを使ったクライアントエンフォースメント</target>
        </trans-unit>
        <trans-unit id="6bd793bd42bd6c765be60ff70e7463a544f0c59c" translate="yes" xml:space="preserve">
          <source>Client modes</source>
          <target state="translated">クライアントモード</target>
        </trans-unit>
        <trans-unit id="38947f88b77d32fe42a376ebe43953f3317fb2ac" translate="yes" xml:space="preserve">
          <source>Clients both with and without pinned trust would be vulnerable to these attacks, so long as the attacker ensures that the version number of their malicious metadata is higher than the version number of the most recent good metadata that any client may have.</source>
          <target state="translated">攻撃者が悪意のあるメタデータのバージョン番号が、どのクライアントでも持っている可能性のある最新の優れたメタデータのバージョン番号よりも高いことを確実にしている限り、ピン留めされた信頼の有無に関わらず、クライアントはこれらの攻撃に対して脆弱です。</target>
        </trans-unit>
        <trans-unit id="3484854f932fb32a11cd731540813de173cab0e0" translate="yes" xml:space="preserve">
          <source>Clone the Notary repository.</source>
          <target state="translated">Notaryリポジトリをクローンします。</target>
        </trans-unit>
        <trans-unit id="becd6dae52b2df153aa08d2d6f44756bb498c1b3" translate="yes" xml:space="preserve">
          <source>Column name</source>
          <target state="translated">カラム名</target>
        </trans-unit>
        <trans-unit id="2d23d7e0e385f27dfb197e48cf6a729c5b08bad4" translate="yes" xml:space="preserve">
          <source>Combining &lt;code&gt;--restart&lt;/code&gt; (restart policy) with the &lt;code&gt;--rm&lt;/code&gt; (clean up) flag results in an error. On container restart, attached clients are disconnected. See the examples on using the &lt;a href=&quot;#clean-up-rm&quot;&gt;&lt;code&gt;--rm&lt;/code&gt; (clean up)&lt;/a&gt; flag later in this page.</source>
          <target state="translated">&lt;code&gt;--restart&lt;/code&gt; （再起動ポリシー）と &lt;code&gt;--rm&lt;/code&gt; （クリーンアップ）フラグを組み合わせると、エラーが発生します。コンテナーの再起動時に、接続されているクライアントは切断されます。このページの後半にある&lt;a href=&quot;#clean-up-rm&quot;&gt; &lt;code&gt;--rm&lt;/code&gt; （クリーンアップ）&lt;/a&gt;フラグの使用例を参照してください。</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="255684026a493948394aa6e99f5955d85240c000" translate="yes" xml:space="preserve">
          <source>Command &lt;code&gt;[]string&lt;/code&gt;</source>
          <target state="translated">コマンド &lt;code&gt;[]string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c3a4cb0e8d5bdf5fa5b450b5630968ed5d200fa" translate="yes" xml:space="preserve">
          <source>Command line arguments to &lt;code&gt;docker run &amp;lt;image&amp;gt;&lt;/code&gt; will be appended after all elements in an &lt;em&gt;exec&lt;/em&gt; form &lt;code&gt;ENTRYPOINT&lt;/code&gt;, and will override all elements specified using &lt;code&gt;CMD&lt;/code&gt;. This allows arguments to be passed to the entry point, i.e., &lt;code&gt;docker run &amp;lt;image&amp;gt; -d&lt;/code&gt; will pass the &lt;code&gt;-d&lt;/code&gt; argument to the entry point. You can override the &lt;code&gt;ENTRYPOINT&lt;/code&gt; instruction using the &lt;code&gt;docker run --entrypoint&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;docker run &amp;lt;image&amp;gt;&lt;/code&gt; へのコマンドライン引数は、&lt;em&gt;exec&lt;/em&gt;フォーム &lt;code&gt;ENTRYPOINT&lt;/code&gt; のすべての要素の後に追加され、 &lt;code&gt;CMD&lt;/code&gt; を使用して指定されたすべての要素をオーバーライドします。これにより、引数をエントリポイントに渡すことができます。つまり、 &lt;code&gt;docker run &amp;lt;image&amp;gt; -d&lt;/code&gt; は &lt;code&gt;-d&lt;/code&gt; 引数をエントリポイントに渡します。 &lt;code&gt;ENTRYPOINT&lt;/code&gt; &lt;code&gt;docker run --entrypoint&lt;/code&gt; フラグを使用して、ENTRYPOINT命令をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="f927f97e16b666d22e83e4b3be801cba873d9cc9" translate="yes" xml:space="preserve">
          <source>Command line flags</source>
          <target state="translated">コマンドラインフラグ</target>
        </trans-unit>
        <trans-unit id="4b467d9a7efae69bd2e2955753860f0739e2c14d" translate="yes" xml:space="preserve">
          <source>Command line reference</source>
          <target state="translated">コマンドラインの参照</target>
        </trans-unit>
        <trans-unit id="7f2b2838fef4e3d547080ec519b87a3653aa0758" translate="yes" xml:space="preserve">
          <source>Command options overview and help</source>
          <target state="translated">コマンドオプションの概要とヘルプ</target>
        </trans-unit>
        <trans-unit id="94ccff13e302b3dec25077fee024719c64593150" translate="yes" xml:space="preserve">
          <source>Command that was used to create the image</source>
          <target state="translated">画像の作成に使用したコマンド</target>
        </trans-unit>
        <trans-unit id="3b75ee9273d0b462d108b0dd8dfa630aa1b9b6e3" translate="yes" xml:space="preserve">
          <source>Command to run in service containers.</source>
          <target state="translated">サービスコンテナで実行するコマンド。</target>
        </trans-unit>
        <trans-unit id="4197740bef0960d67e4b2527c866cf25ac14a496" translate="yes" xml:space="preserve">
          <source>Command to run to check health</source>
          <target state="translated">健康状態を確認するために実行するコマンド</target>
        </trans-unit>
        <trans-unit id="0158aa873485eb1569f3f06229005153ec03c380" translate="yes" xml:space="preserve">
          <source>Command-line changes</source>
          <target state="translated">コマンドラインの変更</target>
        </trans-unit>
        <trans-unit id="36445bce193e3cada4ed3f6d24054222a746b990" translate="yes" xml:space="preserve">
          <source>Command-line completion</source>
          <target state="translated">コマンドライン補完</target>
        </trans-unit>
        <trans-unit id="6c6085c1607f75bdd88560bcdb0f3dd9c80875db" translate="yes" xml:space="preserve">
          <source>Commands that follow this style are:</source>
          <target state="translated">このスタイルに従うコマンドは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="1ec444230a3c0b36871d72148d6f3fd455f71097" translate="yes" xml:space="preserve">
          <source>Commands with flags work as well:</source>
          <target state="translated">フラグを使ったコマンドも同様に動作します。</target>
        </trans-unit>
        <trans-unit id="aa47400dc5d6b8df67eb65c405958ea3b25950c3" translate="yes" xml:space="preserve">
          <source>Commands you use with &lt;code&gt;run&lt;/code&gt; start in new containers with configuration defined by that of the service, including volumes, links, and other details. However, there are two important differences.</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; で使用するコマンドは、ボリューム、リンク、その他の詳細を含む、サービスの構成によって定義された構成を持つ新しいコンテナーで開始します。ただし、2つの重要な違いがあります。</target>
        </trans-unit>
        <trans-unit id="bce8ea109d558bbcd1a98eb56cc3dab6f35f72b2" translate="yes" xml:space="preserve">
          <source>Comment for image</source>
          <target state="translated">画像へのコメント</target>
        </trans-unit>
        <trans-unit id="f9721ef9c0a6422cd07cca1f0a06b7fab54c1907" translate="yes" xml:space="preserve">
          <source>Commit Used</source>
          <target state="translated">使用済みのコミット</target>
        </trans-unit>
        <trans-unit id="712f5914e316c02a22f0b31e36138034fd2878d3" translate="yes" xml:space="preserve">
          <source>Commit a container</source>
          <target state="translated">コンテナをコミット</target>
        </trans-unit>
        <trans-unit id="e4e0ec028044ecb1d01e4b4f939c288997f0d197" translate="yes" xml:space="preserve">
          <source>Commit a container with new &lt;code&gt;CMD&lt;/code&gt; and &lt;code&gt;EXPOSE&lt;/code&gt; instructions</source>
          <target state="translated">新しい &lt;code&gt;CMD&lt;/code&gt; および &lt;code&gt;EXPOSE&lt;/code&gt; 命令でコンテナをコミットします</target>
        </trans-unit>
        <trans-unit id="f7fd9771a4d3d4d3ae543f79413b8f7271b73add" translate="yes" xml:space="preserve">
          <source>Commit a container with new configurations</source>
          <target state="translated">新しい設定でコンテナをコミットする</target>
        </trans-unit>
        <trans-unit id="a635957687d394ed8eb32dd7af4e9fb9ea45ae9c" translate="yes" xml:space="preserve">
          <source>Commit message</source>
          <target state="translated">コミットメッセージ</target>
        </trans-unit>
        <trans-unit id="2e0131c378cd8f204b7d74bded69a39a62adcc40" translate="yes" xml:space="preserve">
          <source>Common use cases</source>
          <target state="translated">一般的な使用例</target>
        </trans-unit>
        <trans-unit id="1519ab42528ad477c8b67f839c957ecdfd3a1c85" translate="yes" xml:space="preserve">
          <source>Compared to the default &lt;code&gt;bridge&lt;/code&gt; mode, the &lt;code&gt;host&lt;/code&gt; mode gives &lt;em&gt;significantly&lt;/em&gt; better networking performance since it uses the host&amp;rsquo;s native networking stack whereas the bridge has to go through one level of virtualization through the docker daemon. It is recommended to run containers in this mode when their networking performance is critical, for example, a production Load Balancer or a High Performance Web Server.</source>
          <target state="translated">デフォルトの &lt;code&gt;bridge&lt;/code&gt; モードと比較して、 &lt;code&gt;host&lt;/code&gt; モードはホストのネイティブネットワークスタックを使用するため、ブリッジはdockerデーモンを介して1レベルの仮想化を通過する必要があるため、ネットワークモードのパフォーマンスが&lt;em&gt;大幅に&lt;/em&gt;向上します。本番環境のロードバランサーや高性能Webサーバーなど、ネットワークのパフォーマンスが重要な場合は、このモードでコンテナーを実行することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="dd9e5420dea4b8056efc1bac98c632bc471f8ccc" translate="yes" xml:space="preserve">
          <source>Compatibility matrix</source>
          <target state="translated">互換性マトリックス</target>
        </trans-unit>
        <trans-unit id="d8347536c83b0d123d4fbad5b8e521b5822871d9" translate="yes" xml:space="preserve">
          <source>Compatibility mode</source>
          <target state="translated">互換性モード</target>
        </trans-unit>
        <trans-unit id="47da6f0838f083d3a01f384d483b468a305c5a2c" translate="yes" xml:space="preserve">
          <source>Compose</source>
          <target state="translated">Compose</target>
        </trans-unit>
        <trans-unit id="d4c1e5e1652c9203185b0dac590e6c9f90cfffc7" translate="yes" xml:space="preserve">
          <source>Compose CLI environment variables</source>
          <target state="translated">CLI環境変数を構成する</target>
        </trans-unit>
        <trans-unit id="a5f6d815c097f8f59e86d02a2ff3305ddd3e6b1d" translate="yes" xml:space="preserve">
          <source>Compose File v3.4 and under</source>
          <target state="translated">ファイルを作成する v3.4 以下</target>
        </trans-unit>
        <trans-unit id="ede468b8d0ca5795ebe32bd5128b4f0dfdd28033" translate="yes" xml:space="preserve">
          <source>Compose File v3.5 and above</source>
          <target state="translated">ファイルを作成する v3.5 以上</target>
        </trans-unit>
        <trans-unit id="f554083073f17df98a1e4473b5d09ca5670f2e7e" translate="yes" xml:space="preserve">
          <source>Compose and Docker compatibility matrix</source>
          <target state="translated">ComposeとDockerの互換性マトリックス</target>
        </trans-unit>
        <trans-unit id="34131501fff0e2e2929c7f900e60c9e42c65f4b0" translate="yes" xml:space="preserve">
          <source>Compose builds and tags it with a generated name, and use that image thereafter.</source>
          <target state="translated">ビルドを作成し、生成された名前でタグを付け、その後その画像を使用します。</target>
        </trans-unit>
        <trans-unit id="f43f2c8ee00c8071cba3be0c8dd4bb010c270263" translate="yes" xml:space="preserve">
          <source>Compose builds and tags it with a generated name, and uses that image thereafter.</source>
          <target state="translated">Compose はそれをビルドして生成された名前でタグ付けし、その後その画像を使用します。</target>
        </trans-unit>
        <trans-unit id="8bdafad6a741f1f3d2f3e5619c920a256f8b3245" translate="yes" xml:space="preserve">
          <source>Compose caches the configuration used to create a container. When you restart a service that has not changed, Compose re-uses the existing containers. Re-using containers means that you can make changes to your environment very quickly.</source>
          <target state="translated">Compose はコンテナの作成に使用した設定をキャッシュします。変更のないサービスを再起動すると、Compose は既存のコンテナを再利用します。コンテナを再利用するということは、環境の変更を非常に迅速に行うことができるということです。</target>
        </trans-unit>
        <trans-unit id="fc930e64f16fd341dc07e516db00c19ea88f2bc0" translate="yes" xml:space="preserve">
          <source>Compose can also be run inside a container, from a small bash script wrapper. To install compose as a container run this command:</source>
          <target state="translated">Compose はコンテナの中で、小さな bash スクリプトのラッパーから実行することもできます。コンテナとして compose をインストールするには、以下のコマンドを実行してください。</target>
        </trans-unit>
        <trans-unit id="9978d0ebff1d2373fdf9e9cbf4d9d70a24b2c365" translate="yes" xml:space="preserve">
          <source>Compose can be installed from &lt;a href=&quot;https://pypi.python.org/pypi/docker-compose&quot;&gt;pypi&lt;/a&gt; using &lt;code&gt;pip&lt;/code&gt;. If you install using &lt;code&gt;pip&lt;/code&gt;, we recommend that you use a &lt;a href=&quot;https://virtualenv.pypa.io/en/latest/&quot;&gt;virtualenv&lt;/a&gt; because many operating systems have python system packages that conflict with docker-compose dependencies. See the &lt;a href=&quot;http://docs.python-guide.org/en/latest/dev/virtualenvs/&quot;&gt;virtualenv tutorial&lt;/a&gt; to get started.</source>
          <target state="translated">Composeは、 &lt;code&gt;pip&lt;/code&gt; を使用して&lt;a href=&quot;https://pypi.python.org/pypi/docker-compose&quot;&gt;pypi&lt;/a&gt;からインストールできます。 &lt;code&gt;pip&lt;/code&gt; を使用してインストールする場合、&lt;a href=&quot;https://virtualenv.pypa.io/en/latest/&quot;&gt;docker&lt;/a&gt; -compose依存関係と競合するpythonシステムパッケージが多くのオペレーティングシステムにあるため、virtualenvを使用することをお勧めします。開始するには、&lt;a href=&quot;http://docs.python-guide.org/en/latest/dev/virtualenvs/&quot;&gt;virtualenvチュートリアル&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4d071ac46ca55130538e4e63b76ed22dcc1835f4" translate="yes" xml:space="preserve">
          <source>Compose can be used in many different ways. Some common use cases are outlined below.</source>
          <target state="translated">Compose は様々な方法で使用することができます。以下に、一般的な使用例をいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="39be4ce40abd066cedce36fe734b46c076381db9" translate="yes" xml:space="preserve">
          <source>Compose comes with &lt;a href=&quot;http://en.wikipedia.org/wiki/Command-line_completion&quot;&gt;command completion&lt;/a&gt; for the bash and zsh shell.</source>
          <target state="translated">Composeには、bashおよびzshシェルの&lt;a href=&quot;http://en.wikipedia.org/wiki/Command-line_completion&quot;&gt;コマンド補完&lt;/a&gt;が付属しています。</target>
        </trans-unit>
        <trans-unit id="e34da51ef4035737e6b4088d3729729b82d95588" translate="yes" xml:space="preserve">
          <source>Compose comes with &lt;a href=&quot;https://en.wikipedia.org/wiki/Command-line_completion&quot;&gt;command completion&lt;/a&gt; for the bash and zsh shell.</source>
          <target state="translated">Composeには、bashおよびzshシェルの&lt;a href=&quot;https://en.wikipedia.org/wiki/Command-line_completion&quot;&gt;コマンド補完&lt;/a&gt;が付属しています。</target>
        </trans-unit>
        <trans-unit id="ce1ce01b3b7d3dabc6eca5daf5450ad4876ed2d4" translate="yes" xml:space="preserve">
          <source>Compose command-line reference</source>
          <target state="translated">コマンドラインリファレンスを作成する</target>
        </trans-unit>
        <trans-unit id="eaa6516c19b160e7cd7050a0912b5a095e89ac72" translate="yes" xml:space="preserve">
          <source>Compose configuration file reference</source>
          <target state="translated">設定ファイルの参照を作成する</target>
        </trans-unit>
        <trans-unit id="fb0c5018561dc54adab2ce3dd553936330dbdb70" translate="yes" xml:space="preserve">
          <source>Compose copies configurations from the original service over to the local one. If a configuration option is defined in both the original service and the local service, the local value &lt;em&gt;replaces&lt;/em&gt; or &lt;em&gt;extends&lt;/em&gt; the original value.</source>
          <target state="translated">Composeは、元のサービスからローカルサービスに構成をコピーします。構成オプションが元のサービスとローカルサービスの両方で定義されている場合、ローカル値&lt;em&gt;は&lt;/em&gt;元の値を&lt;em&gt;置き換える&lt;/em&gt;か&lt;em&gt;拡張&lt;/em&gt;します。</target>
        </trans-unit>
        <trans-unit id="b78e4cfc09614792f61d82eda1e3388e3f31ac09" translate="yes" xml:space="preserve">
          <source>Compose documentation</source>
          <target state="translated">ドキュメントの作成</target>
        </trans-unit>
        <trans-unit id="c2ee48fa2aa8cd6ab55fa3df18408f4ae60243df" translate="yes" xml:space="preserve">
          <source>Compose does not give Swarm any specific scheduling instructions if a service uses only named volumes.</source>
          <target state="translated">サービスが名前付きボリュームのみを使用する場合、ComposeはSwarmに特定のスケジューリング指示を与えません。</target>
        </trans-unit>
        <trans-unit id="40928cd09f78232b15a856edf05aed9c21ab989f" translate="yes" xml:space="preserve">
          <source>Compose does not take advantage of &lt;a href=&quot;../../networking/index&quot;&gt;networking&lt;/a&gt; when you use version 1: every container is placed on the default &lt;code&gt;bridge&lt;/code&gt; network and is reachable from every other container at its IP address. You need to use &lt;a href=&quot;../compose-file-v1/index#links&quot;&gt;links&lt;/a&gt; to enable discovery between containers.</source>
          <target state="translated">バージョン1を使用する場合、Composeは&lt;a href=&quot;../../networking/index&quot;&gt;ネットワーキング&lt;/a&gt;を利用しません。すべてのコンテナーはデフォルトの &lt;code&gt;bridge&lt;/code&gt; ネットワークに配置され、他のすべてのコンテナーからそのIPアドレスで到達可能です。コンテナー間の検出を有効にするには、&lt;a href=&quot;../compose-file-v1/index#links&quot;&gt;リンク&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="77b11889093e95e7c53a40ca67fb512f4680c69b" translate="yes" xml:space="preserve">
          <source>Compose expects each line in an &lt;code&gt;env&lt;/code&gt; file to be in &lt;code&gt;VAR=VAL&lt;/code&gt; format.</source>
          <target state="translated">Composeは、 &lt;code&gt;env&lt;/code&gt; ファイルの各行が &lt;code&gt;VAR=VAL&lt;/code&gt; 形式であると想定しています。</target>
        </trans-unit>
        <trans-unit id="015de808b3f22f273c9882ebcd68693529610759" translate="yes" xml:space="preserve">
          <source>Compose expects each line in an env file to be in &lt;code&gt;VAR=VAL&lt;/code&gt; format. Lines beginning with &lt;code&gt;#&lt;/code&gt; are processed as comments and are ignored. Blank lines are also ignored.</source>
          <target state="translated">Composeは、envファイルの各行が &lt;code&gt;VAR=VAL&lt;/code&gt; 形式であると想定しています。 &lt;code&gt;#&lt;/code&gt; で始まる行はコメントとして処理され、無視されます。空白行も無視されます。</target>
        </trans-unit>
        <trans-unit id="dd79bf3a304d21bbf15e5bdc4c0dd5e7cdd63499" translate="yes" xml:space="preserve">
          <source>Compose expects each line in an env file to be in &lt;code&gt;VAR=VAL&lt;/code&gt; format. Lines beginning with &lt;code&gt;#&lt;/code&gt; are treated as comments and are ignored. Blank lines are also ignored.</source>
          <target state="translated">Composeは、envファイルの各行が &lt;code&gt;VAR=VAL&lt;/code&gt; 形式であると想定しています。 &lt;code&gt;#&lt;/code&gt; で始まる行はコメントとして扱われ、無視されます。空白行も無視されます。</target>
        </trans-unit>
        <trans-unit id="a98ae9061fd805fb9bbd5cffd8e607458fba4d88" translate="yes" xml:space="preserve">
          <source>Compose file</source>
          <target state="translated">ファイルの作成</target>
        </trans-unit>
        <trans-unit id="7f7358ebe3ab02121530cac1e994e6b9f4e2f10f" translate="yes" xml:space="preserve">
          <source>Compose file and CLI variables</source>
          <target state="translated">ファイルとCLI変数を作成する</target>
        </trans-unit>
        <trans-unit id="f8475644c4fa3f29c6d625557f27919636334593" translate="yes" xml:space="preserve">
          <source>Compose file format references</source>
          <target state="translated">ファイル形式のリファレンスを作成する</target>
        </trans-unit>
        <trans-unit id="710a68559e0d07669ddb5ec0c372036582d40b58" translate="yes" xml:space="preserve">
          <source>Compose file reference</source>
          <target state="translated">ファイル参照を作成する</target>
        </trans-unit>
        <trans-unit id="736373394fa8035c0a458ab0c80a67671692b263" translate="yes" xml:space="preserve">
          <source>Compose file structure and examples</source>
          <target state="translated">ファイルの構造と例を構成する</target>
        </trans-unit>
        <trans-unit id="d3609ce98d4150148cc62e8846ce191b5bf70705" translate="yes" xml:space="preserve">
          <source>Compose file version 1</source>
          <target state="translated">ファイルを作成するバージョン1</target>
        </trans-unit>
        <trans-unit id="9b5e92b17043849cc9be5fdef48d55b213ba154c" translate="yes" xml:space="preserve">
          <source>Compose file version 1 reference</source>
          <target state="translated">コンポーズファイルバージョン1リファレンス</target>
        </trans-unit>
        <trans-unit id="2f10b70dd88a4e31ddefbd1e7db817315d901c80" translate="yes" xml:space="preserve">
          <source>Compose file version 2</source>
          <target state="translated">ファイルを作成するバージョン2</target>
        </trans-unit>
        <trans-unit id="820560bb1436716124355bf4751d66f2b41846d0" translate="yes" xml:space="preserve">
          <source>Compose file version 2 reference</source>
          <target state="translated">コンポーズファイルバージョン2リファレンス</target>
        </trans-unit>
        <trans-unit id="9bf14b8307392cfae07d9d1098d0f6a7184c963f" translate="yes" xml:space="preserve">
          <source>Compose file version 3</source>
          <target state="translated">ファイルを作成するバージョン3</target>
        </trans-unit>
        <trans-unit id="0c18f108ef1c5fee3294239c5a6c73d1abe3b7ef" translate="yes" xml:space="preserve">
          <source>Compose file version 3 reference</source>
          <target state="translated">コンポーズファイルバージョン3リファレンス</target>
        </trans-unit>
        <trans-unit id="28519625026da3a01ddf395d19725d2ddf9d6506" translate="yes" xml:space="preserve">
          <source>Compose file versions and upgrading</source>
          <target state="translated">ファイルのバージョンを作成してアップグレード</target>
        </trans-unit>
        <trans-unit id="0de01e2191940c632830c64a7b2fa5db56aa391c" translate="yes" xml:space="preserve">
          <source>Compose files that do not declare a version are considered &amp;ldquo;version 1&amp;rdquo;. In those files, all the &lt;a href=&quot;../index#service-configuration-reference&quot;&gt;services&lt;/a&gt; are declared at the root of the document.</source>
          <target state="translated">バージョンを宣言していない構成ファイルは、「バージョン1」と見なされます。これらのファイルでは、すべての&lt;a href=&quot;../index#service-configuration-reference&quot;&gt;サービス&lt;/a&gt;がドキュメントのルートで宣言されています。</target>
        </trans-unit>
        <trans-unit id="e7d93af396e2115fe58e411ba710b0891a38adf6" translate="yes" xml:space="preserve">
          <source>Compose files using the version 2 syntax must indicate the version number at the root of the document. All &lt;a href=&quot;../compose-file-v2/index#service-configuration-reference&quot;&gt;services&lt;/a&gt; must be declared under the &lt;code&gt;services&lt;/code&gt; key.</source>
          <target state="translated">バージョン2の構文を使用して作成するファイルは、ドキュメントのルートにあるバージョン番号を示す必要があります。すべての&lt;a href=&quot;../compose-file-v2/index#service-configuration-reference&quot;&gt;サービス&lt;/a&gt;は、 &lt;code&gt;services&lt;/code&gt; キーの下で宣言する必要があります。</target>
        </trans-unit>
        <trans-unit id="ddf6bf130e3cee06b6fd1466fd08c297df124a2a" translate="yes" xml:space="preserve">
          <source>Compose has commands for managing the whole lifecycle of your application:</source>
          <target state="translated">Composeには、アプリケーションのライフサイクル全体を管理するためのコマンドがあります。</target>
        </trans-unit>
        <trans-unit id="0047866a9df5a3ee0faaab104145a2dc641da9ac" translate="yes" xml:space="preserve">
          <source>Compose has traditionally been focused on development and testing workflows, but with each release we&amp;rsquo;re making progress on more production-oriented features. You can use Compose to deploy to a remote Docker Engine. The Docker Engine may be a single instance provisioned with &lt;a href=&quot;../machine/overview/index&quot;&gt;Docker Machine&lt;/a&gt; or an entire &lt;a href=&quot;../engine/swarm/index&quot;&gt;Docker Swarm&lt;/a&gt; cluster.</source>
          <target state="translated">Composeは従来、開発とテストのワークフローに焦点を当ててきましたが、リリースごとに、より生産指向の機能を開発しています。Composeを使用して、リモートのDockerエンジンにデプロイできます。Docker Engineは、&lt;a href=&quot;../machine/overview/index&quot;&gt;Docker Machineで&lt;/a&gt;プロビジョニングされた単一のインスタンスまたは&lt;a href=&quot;../engine/swarm/index&quot;&gt;Docker Swarm&lt;/a&gt;クラスター全体の場合があります。</target>
        </trans-unit>
        <trans-unit id="23b7fcc289bc9f4e64dc1869a26dc62f576346be" translate="yes" xml:space="preserve">
          <source>Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a YAML file to configure your application&amp;rsquo;s services. Then, with a single command, you create and start all the services from your configuration. To learn more about all the features of Compose, see &lt;a href=&quot;index#features&quot;&gt;the list of features&lt;/a&gt;.</source>
          <target state="translated">Composeは、マルチコンテナのDockerアプリケーションを定義して実行するためのツールです。Composeでは、YAMLファイルを使用してアプリケーションのサービスを構成します。次に、1つのコマンドで、構成からすべてのサービスを作成して開始します。Composeのすべての機能について詳しく&lt;a href=&quot;index#features&quot;&gt;は、機能のリストを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="2387269a0a4d5f641373450e81f1dd6565f3d1d7" translate="yes" xml:space="preserve">
          <source>Compose preserves all volumes used by your services. When &lt;code&gt;docker-compose up&lt;/code&gt; runs, if it finds any containers from previous runs, it copies the volumes from the old container to the new container. This process ensures that any data you&amp;rsquo;ve created in volumes isn&amp;rsquo;t lost.</source>
          <target state="translated">Composeは、サービスで使用されるすべてのボリュームを保持します。 &lt;code&gt;docker-compose up&lt;/code&gt; の実行時に、以前の実行のコンテナーが見つかった場合は、古いコンテナーから新しいコンテナーにボリュームをコピーします。このプロセスにより、ボリュームに作成したデータが失われないことが保証されます。</target>
        </trans-unit>
        <trans-unit id="b3d9cc51d6c852c2f6e8b0b1d6585b0841e21fb3" translate="yes" xml:space="preserve">
          <source>Compose pulls a Redis image, builds an image for your code, and starts the services you defined. In this case, the code is statically copied into the image at build time.</source>
          <target state="translated">Compose は Redis イメージを取得し、コード用のイメージをビルドし、定義したサービスを開始します。この場合、コードはビルド時にイメージに静的にコピーされます。</target>
        </trans-unit>
        <trans-unit id="0cb7e80ee28d04009047168bf97e999f5bff7f9f" translate="yes" xml:space="preserve">
          <source>Compose stop attempts to stop a container by sending a &lt;code&gt;SIGTERM&lt;/code&gt;. It then waits for a &lt;a href=&quot;../reference/stop/index&quot;&gt;default timeout of 10 seconds&lt;/a&gt;. After the timeout, a &lt;code&gt;SIGKILL&lt;/code&gt; is sent to the container to forcefully kill it. If you are waiting for this timeout, it means that your containers aren&amp;rsquo;t shutting down when they receive the &lt;code&gt;SIGTERM&lt;/code&gt; signal.</source>
          <target state="translated">compose stopは、 &lt;code&gt;SIGTERM&lt;/code&gt; を送信してコンテナを停止しようとします。次に、&lt;a href=&quot;../reference/stop/index&quot;&gt;デフォルトのタイムアウトである10秒&lt;/a&gt;待機します。タイムアウト後、 &lt;code&gt;SIGKILL&lt;/code&gt; がコンテナに送信され、強制的に強制終了します。このタイムアウトを待機している場合は、 &lt;code&gt;SIGTERM&lt;/code&gt; シグナルを受信したときにコンテナーがシャットダウンしていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="e8a72bd9db2df54291aa5d31eec9bb4133649688" translate="yes" xml:space="preserve">
          <source>Compose supports declaring default environment variables in an environment file named &lt;code&gt;.env&lt;/code&gt; placed in the folder where the &lt;code&gt;docker-compose&lt;/code&gt; command is executed &lt;em&gt;(current working directory)&lt;/em&gt;.</source>
          <target state="translated">Composeは、 &lt;code&gt;.env&lt;/code&gt; &lt;code&gt;docker-compose&lt;/code&gt; コマンドが実行されるフォルダー&lt;em&gt;（現在の作業ディレクトリ）に&lt;/em&gt;配置された.envという名前の環境ファイルでのデフォルト環境変数の宣言をサポートしています。</target>
        </trans-unit>
        <trans-unit id="e77e4f0d412182251ba07b779b9341d6dcc638be" translate="yes" xml:space="preserve">
          <source>Compose supports two methods of sharing common configuration:</source>
          <target state="translated">Composeは、共通の設定を共有する2つの方法をサポートしています。</target>
        </trans-unit>
        <trans-unit id="59c27cff0aec47d16c67a7bb4fdc25bb9c7db167" translate="yes" xml:space="preserve">
          <source>Compose supports variables in the Compose file. You can use these variables to customize your composition for different environments, or different users. See &lt;a href=&quot;compose-file/index#variable-substitution&quot;&gt;Variable substitution&lt;/a&gt; for more details.</source>
          <target state="translated">Composeは、Composeファイル内の変数をサポートしています。これらの変数を使用して、環境やユーザーごとに構成をカスタマイズできます。詳細については、&lt;a href=&quot;compose-file/index#variable-substitution&quot;&gt;変数置換&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="75a2b24b028cf55b29c10a1ad79b8305ccf43f4d" translate="yes" xml:space="preserve">
          <source>Compose uses &lt;a href=&quot;https://docs.docker.com/network&quot;&gt;Docker links&lt;/a&gt; to expose services&amp;rsquo; containers to one another. Each linked container injects a set of environment variables, each of which begins with the uppercase name of the container.</source>
          <target state="translated">Composeは&lt;a href=&quot;https://docs.docker.com/network&quot;&gt;Dockerリンク&lt;/a&gt;を使用して、サービスのコンテナーを相互に公開します。リンクされた各コンテナは、一連の環境変数を注入します。各環境変数は、コンテナの大文字の名前で始まります。</target>
        </trans-unit>
        <trans-unit id="60d9eed33ea388c450611acb15e1107146efd8e5" translate="yes" xml:space="preserve">
          <source>Compose uses a project name to isolate environments from each other. You can make use of this project name in several different contexts:</source>
          <target state="translated">Compose はプロジェクト名を使用して環境を互いに分離します。このプロジェクト名は、いくつかの異なるコンテキストで使用することができます。</target>
        </trans-unit>
        <trans-unit id="fc03c49509aaa7cd2e9775747d09c68fb95c3961" translate="yes" xml:space="preserve">
          <source>Compose uses an alternate file to build with. A build path must also be specified.</source>
          <target state="translated">Compose は代替ファイルを使用してビルドします。ビルドパスも指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="335079a8bd1e39bbb51752d33b8640de1dc1a819" translate="yes" xml:space="preserve">
          <source>Compose uses the project name to create unique identifiers for all of a project&amp;rsquo;s containers and other resources. To run multiple copies of a project, set a custom project name using the &lt;a href=&quot;../reference/overview/index&quot;&gt;&lt;code&gt;-p&lt;/code&gt; command line option&lt;/a&gt; or the &lt;a href=&quot;../reference/envvars/index#compose-project-name&quot;&gt;&lt;code&gt;COMPOSE_PROJECT_NAME&lt;/code&gt; environment variable&lt;/a&gt;.</source>
          <target state="translated">Composeはプロジェクト名を使用して、プロジェクトのすべてのコンテナおよびその他のリソースに一意の識別子を作成します。プロジェクトの複数のコピーを実行するには、&lt;a href=&quot;../reference/overview/index&quot;&gt; &lt;code&gt;-p&lt;/code&gt; コマンドラインオプション&lt;/a&gt;または&lt;a href=&quot;../reference/envvars/index#compose-project-name&quot;&gt; &lt;code&gt;COMPOSE_PROJECT_NAME&lt;/code&gt; 環境変数&lt;/a&gt;を使用してカスタムプロジェクト名を設定します。</target>
        </trans-unit>
        <trans-unit id="4677d99d4ec04c83551d372aa46d0054562ee40c" translate="yes" xml:space="preserve">
          <source>Compose works in all environments: production, staging, development, testing, as well as CI workflows. You can learn more about each case in &lt;a href=&quot;#common-use-cases&quot;&gt;Common Use Cases&lt;/a&gt;.</source>
          <target state="translated">Composeは、本番環境、ステージング、開発、テスト、およびCIワークフローのすべての環境で機能します。各ケースの詳細については、&lt;a href=&quot;#common-use-cases&quot;&gt;一般的な使用例を&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="88044713189110d01cf69b668ef6881189a2fc6a" translate="yes" xml:space="preserve">
          <source>Compose&amp;rsquo;s behaviour with regards to networking</source>
          <target state="translated">ネットワーキングに関するComposeの動作</target>
        </trans-unit>
        <trans-unit id="9b01efc8e992a37c815bc682402afdc05ee53344" translate="yes" xml:space="preserve">
          <source>Compress the build context using gzip</source>
          <target state="translated">gzip を使ってビルドコンテキストを圧縮します。</target>
        </trans-unit>
        <trans-unit id="e6728f24442370bd4b8f27c507420910564f6d49" translate="yes" xml:space="preserve">
          <source>Compress the context using gzip</source>
          <target state="translated">gzip を使ってコンテキストを圧縮します。</target>
        </trans-unit>
        <trans-unit id="178a38e3a0933385db96b62dbd2a3bed55d0031a" translate="yes" xml:space="preserve">
          <source>Conclusion of part one</source>
          <target state="translated">第1部の締めくくり</target>
        </trans-unit>
        <trans-unit id="047a208658bcb3f40c5800707ee3385d93096ca1" translate="yes" xml:space="preserve">
          <source>Conclusion of part two</source>
          <target state="translated">第二部の締めくくり</target>
        </trans-unit>
        <trans-unit id="b536777ff175ae7f0dadd5ccfd9e78c00761a19e" translate="yes" xml:space="preserve">
          <source>Conclusions</source>
          <target state="translated">Conclusions</target>
        </trans-unit>
        <trans-unit id="65439542dad4b5ca3c59e27058e232d5e29170b6" translate="yes" xml:space="preserve">
          <source>Concurrent downloads</source>
          <target state="translated">同時ダウンロード</target>
        </trans-unit>
        <trans-unit id="01b57e7d93f2736be7c2dd2ef48f69250a2709d8" translate="yes" xml:space="preserve">
          <source>Concurrent uploads</source>
          <target state="translated">同時アップロード</target>
        </trans-unit>
        <trans-unit id="fe0b4a63aaece517fb22a46a542d2a71ac0e943d" translate="yes" xml:space="preserve">
          <source>Config Type</source>
          <target state="translated">設定タイプ</target>
        </trans-unit>
        <trans-unit id="2d01a736370127aa619954131610d5831c62780d" translate="yes" xml:space="preserve">
          <source>Config files with custom targets are not directly bind-mounted into Windows containers, since Windows does not support non-directory file bind-mounts. Instead, configs for a container are all mounted in &lt;code&gt;C:\ProgramData\Docker\internal\configs&lt;/code&gt; (an implementation detail which should not be relied upon by applications) within the container. Symbolic links are used to point from there to the desired target of the config within the container. The default target is &lt;code&gt;C:\ProgramData\Docker\configs&lt;/code&gt;.</source>
          <target state="translated">Windowsは非ディレクトリファイルのバインドマウントをサポートしていないため、カスタムターゲットを含む構成ファイルはWindowsコンテナに直接バインドマウントされません。代わりに、コンテナーの構成はすべてコンテナー内の &lt;code&gt;C:\ProgramData\Docker\internal\configs&lt;/code&gt; （アプリケーションが依存すべきではない実装の詳細）にマウントされます。シンボリックリンクは、そこからコンテナー内の構成の目的のターゲットを指すために使用されます。デフォルトのターゲットは &lt;code&gt;C:\ProgramData\Docker\configs&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f6fedf5f100e546178bcf0a38ad66aac064fdfa2" translate="yes" xml:space="preserve">
          <source>Config labels</source>
          <target state="translated">設定ラベル</target>
        </trans-unit>
        <trans-unit id="c4aa28bfc178add6f157a2e8fb00ba6673b1d826" translate="yes" xml:space="preserve">
          <source>Config provides the base accessible fields for working with V0 plugin format in the registry.</source>
          <target state="translated">Config はレジストリで V0 プラグインフォーマットを操作するための基本的なアクセス可能なフィールドを提供します。</target>
        </trans-unit>
        <trans-unit id="6355cff1e61b5cd688cec493b080516655b2ac6a" translate="yes" xml:space="preserve">
          <source>Configs</source>
          <target state="translated">Configs</target>
        </trans-unit>
        <trans-unit id="c5abc2d9778f0bfd5625816dc85c107e7bd8f465" translate="yes" xml:space="preserve">
          <source>Configs are supported on both Linux and Windows services.</source>
          <target state="translated">設定はLinuxとWindowsの両方のサービスでサポートされています。</target>
        </trans-unit>
        <trans-unit id="ed995dab7d3e08b5669d05da768fccc5a73064b0" translate="yes" xml:space="preserve">
          <source>Configs operate in a similar way to &lt;a href=&quot;../secrets/index&quot;&gt;secrets&lt;/a&gt;, except that they are not encrypted at rest and are mounted directly into the container&amp;rsquo;s filesystem without the use of RAM disks. Configs can be added or removed from a service at any time, and services can share a config. You can even use configs in conjunction with environment variables or labels, for maximum flexibility. Config values can be generic strings or binary content (up to 500 kb in size).</source>
          <target state="translated">構成は&lt;a href=&quot;../secrets/index&quot;&gt;シークレット&lt;/a&gt;と同様に動作しますが、保存時に暗号化されず、RAMディスクを使用せずにコンテナーのファイルシステムに直接マウントされる点が異なります。構成はいつでもサービスに追加または削除でき、サービスは構成を共有できます。最大限の柔軟性を得るために、環境変数またはラベルと組み合わせて構成を使用することもできます。構成値は、汎用文字列またはバイナリコンテンツ（サイズが最大500 kb）にすることができます。</target>
        </trans-unit>
        <trans-unit id="5e9e2d64c5e127c299b896e015cd2b7bb4f8b5d4" translate="yes" xml:space="preserve">
          <source>Configuration files</source>
          <target state="translated">設定ファイル</target>
        </trans-unit>
        <trans-unit id="9a188f2e6ce2e96857bc638594f2b181b4888d6a" translate="yes" xml:space="preserve">
          <source>Configuration of VPCs is beyond the scope of this guide. However, the first step in troubleshooting is making sure that you are using private subnets that follow the design guidance in the &lt;a href=&quot;http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Scenario2.html&quot;&gt;AWS VPC User Guide&lt;/a&gt; and have some form of NAT available so that the setup process can access the internet to complete the setup.</source>
          <target state="translated">VPCの構成は、このガイドの範囲外です。ただし、トラブルシューティングの最初のステップは、&lt;a href=&quot;http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Scenario2.html&quot;&gt;AWS VPCユーザーガイド&lt;/a&gt;の設計ガイダンスに従うプライベートサブネットを使用していて、セットアッププロセスがインターネットにアクセスしてセットアップを完了することができるように、何らかの形式のNATを使用できることを確認することです。</target>
        </trans-unit>
        <trans-unit id="55fd40e0ad89a0ef480d48ecdcb0e7b08bc7caf9" translate="yes" xml:space="preserve">
          <source>Configuration of VPCs is beyond the scope of this guide. However, the first step in troubleshooting is making sure that you are using private subnets that follow the design guidance in the &lt;a href=&quot;https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Scenario2.html&quot;&gt;AWS VPC User Guide&lt;/a&gt; and have some form of NAT available so that the setup process can access the internet to complete the setup.</source>
          <target state="translated">VPCの設定は、このガイドの範囲を超えています。ただし、トラブルシューティングの最初のステップは、&lt;a href=&quot;https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Scenario2.html&quot;&gt;AWS VPCユーザーガイド&lt;/a&gt;の設計ガイダンスに従い、セットアッププロセスがインターネットにアクセスしてセットアップを完了することができるように、何らかの形式のNATを使用できるプライベートサブネットを使用していることを確認することです。</target>
        </trans-unit>
        <trans-unit id="10d5d70651fbbbcc9319e228c538db9fa8de8b62" translate="yes" xml:space="preserve">
          <source>Configuration options that are applied at build time.</source>
          <target state="translated">ビルド時に適用される設定オプション。</target>
        </trans-unit>
        <trans-unit id="df27974f2e1b86e430d22ba5e33f4d94774fa506" translate="yes" xml:space="preserve">
          <source>Configuration reload behavior</source>
          <target state="translated">コンフィギュレーションのリロード動作</target>
        </trans-unit>
        <trans-unit id="ea862023c249df8faaa69c49ec83969686159be9" translate="yes" xml:space="preserve">
          <source>Configuration sections common to the Notary Server and Signer</source>
          <target state="translated">公証人サーバと署名者に共通の設定セクション</target>
        </trans-unit>
        <trans-unit id="9d623b43cff61d4bceb474c013736d6cc186632a" translate="yes" xml:space="preserve">
          <source>Configuration sections common to the Notary server and signer</source>
          <target state="translated">公証人サーバと署名者に共通の設定セクション</target>
        </trans-unit>
        <trans-unit id="a87f797aeeff8890a10c896d239af13817176363" translate="yes" xml:space="preserve">
          <source>Configure CPU allocation parameters using the Docker daemon realtime scheduler.</source>
          <target state="translated">Dockerデーモンのリアルタイムスケジューラを使用してCPUの割り当てパラメータを設定します。</target>
        </trans-unit>
        <trans-unit id="93102a79cad36fa3fbb4aab8f6a2a97076f871a5" translate="yes" xml:space="preserve">
          <source>Configure Compose using environment variables</source>
          <target state="translated">環境変数を使ったComposeの設定</target>
        </trans-unit>
        <trans-unit id="fdc461c6eab66327cd125df5305c6d48cc030aed" translate="yes" xml:space="preserve">
          <source>Configure a &lt;code&gt;docker-machine&lt;/code&gt; shell to the swarm manager</source>
          <target state="translated">&lt;code&gt;docker-machine&lt;/code&gt; シェルをスウォームマネージャーに設定する</target>
        </trans-unit>
        <trans-unit id="84395a78bf9ce076df2fc21bca07ae9da1192ba1" translate="yes" xml:space="preserve">
          <source>Configure a check that&amp;rsquo;s run to determine whether or not containers for this service are &amp;ldquo;healthy&amp;rdquo;. See the docs for the &lt;a href=&quot;../../../engine/reference/builder/index#healthcheck&quot;&gt;HEALTHCHECK Dockerfile instruction&lt;/a&gt; for details on how healthchecks work.</source>
          <target state="translated">このサービスのコンテナーが「正常」かどうかを判断するために実行されるチェックを構成します。ヘルスチェックの仕組みの詳細については、&lt;a href=&quot;../../../engine/reference/builder/index#healthcheck&quot;&gt;HEALTHCHECK Dockerfile命令の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="76afd1968c38665f6014eefeb689098646a1ac23" translate="yes" xml:space="preserve">
          <source>Configure a check that&amp;rsquo;s run to determine whether or not containers for this service are &amp;ldquo;healthy&amp;rdquo;. See the docs for the &lt;a href=&quot;../../engine/reference/builder/index#healthcheck&quot;&gt;HEALTHCHECK Dockerfile instruction&lt;/a&gt; for details on how healthchecks work.</source>
          <target state="translated">このサービスのコンテナーが「正常」かどうかを判断するために実行されるチェックを構成します。ヘルスチェックの仕組みの詳細については、&lt;a href=&quot;../../engine/reference/builder/index#healthcheck&quot;&gt;HEALTHCHECK Dockerfile命令の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="d78fa93516b94be5dae69461a727f4104a4a8492" translate="yes" xml:space="preserve">
          <source>Configure a service&amp;rsquo;s update behavior</source>
          <target state="translated">サービスの更新動作を構成する</target>
        </trans-unit>
        <trans-unit id="b06aa1f168051cc2eaad07a1ac719cfad361bfff" translate="yes" xml:space="preserve">
          <source>Configure an external load balancer</source>
          <target state="translated">外部ロードバランサーの設定</target>
        </trans-unit>
        <trans-unit id="27c9ce7c9c1f2880d7d46f94d35c33e22770a12f" translate="yes" xml:space="preserve">
          <source>Configure and activate Swarm if applicable.</source>
          <target state="translated">該当する場合は、Swarmを設定してアクティブにします。</target>
        </trans-unit>
        <trans-unit id="7b89618af035d488d11b00c21886ce407760f8a0" translate="yes" xml:space="preserve">
          <source>Configure credential helpers</source>
          <target state="translated">クレデンシャルヘルパーの設定</target>
        </trans-unit>
        <trans-unit id="b39658de11c52c9e607d5518126991cfa8d96dd4" translate="yes" xml:space="preserve">
          <source>Configure namespaced kernel parameters (sysctls) at runtime</source>
          <target state="translated">実行時に名前空間カーネルパラメータ (sysctls)を設定する</target>
        </trans-unit>
        <trans-unit id="0c04d4425fc15cb7ea1711e671df4b91d2667b9d" translate="yes" xml:space="preserve">
          <source>Configure sections common to Notary server and signer</source>
          <target state="translated">公証人サーバと署名者に共通のセクションを設定する</target>
        </trans-unit>
        <trans-unit id="372c5d54060d22a4631b9c25031d964069a116dd" translate="yes" xml:space="preserve">
          <source>Configure the Docker Engine according to the options specified at create time.</source>
          <target state="translated">作成時に指定したオプションに従ってDocker Engineを設定します。</target>
        </trans-unit>
        <trans-unit id="5ebf0cd9d269ce6965ab190c53f11c7f4760aed9" translate="yes" xml:space="preserve">
          <source>Configure the Nginx container</source>
          <target state="translated">Nginxコンテナを設定する</target>
        </trans-unit>
        <trans-unit id="72ef8b1661b7a52ba5b32b85cd364e93f18378aa" translate="yes" xml:space="preserve">
          <source>Configure the advertise address</source>
          <target state="translated">アドバタイズアドレスを構成する</target>
        </trans-unit>
        <trans-unit id="bf2078e2684d30a4f71b5ef15622827a1ea41ba5" translate="yes" xml:space="preserve">
          <source>Configure the client</source>
          <target state="translated">クライアントの設定</target>
        </trans-unit>
        <trans-unit id="a54e95987e14875b6e3b160c0605bd6f5fd2092f" translate="yes" xml:space="preserve">
          <source>Configure the credential spec for managed service account. This option is only used for services using Windows containers. The &lt;code&gt;credential_spec&lt;/code&gt; must be in the format &lt;code&gt;file://&amp;lt;filename&amp;gt;&lt;/code&gt; or &lt;code&gt;registry://&amp;lt;value-name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">管理されたサービスアカウントの資格情報の仕様を構成します。このオプションは、Windowsコンテナーを使用するサービスにのみ使用されます。 &lt;code&gt;credential_spec&lt;/code&gt; は、フォーマットでなければなりません &lt;code&gt;file://&amp;lt;filename&amp;gt;&lt;/code&gt; や &lt;code&gt;registry://&amp;lt;value-name&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="84a8023b690a298ff74a0a8bbfb9118daa89717c" translate="yes" xml:space="preserve">
          <source>Configure the credentials store</source>
          <target state="translated">クレデンシャルストアの設定</target>
        </trans-unit>
        <trans-unit id="6bba6b18d7f9f3ab5298916cf23f6a1664ba76b3" translate="yes" xml:space="preserve">
          <source>Configure the default network</source>
          <target state="translated">デフォルトのネットワークを設定する</target>
        </trans-unit>
        <trans-unit id="e8d108aedf7f5c4e1216e659739269d2b8eb0fc2" translate="yes" xml:space="preserve">
          <source>Configure the manager to advertise on a static IP address</source>
          <target state="translated">固定IPアドレスでアドバタイズするようにマネージャを構成する</target>
        </trans-unit>
        <trans-unit id="7831eed2c45e2ad990a3cb3d7d4e5fce50642841" translate="yes" xml:space="preserve">
          <source>Configure the root CA. Edit a new file called &lt;code&gt;root-ca.cnf&lt;/code&gt; and paste the following contents into it. This constrains the root CA to only sign leaf certificates and not intermediate CAs.</source>
          <target state="translated">ルートCAを構成します。 &lt;code&gt;root-ca.cnf&lt;/code&gt; という名前の新しいファイルを編集し、以下の内容をそのファイルに貼り付けます。これにより、ルートCAはリーフ証明書のみに署名し、中間CAには署名しないように制限されます。</target>
        </trans-unit>
        <trans-unit id="60bab647c17da19f78d15dc7676a9ebf2321b3c2" translate="yes" xml:space="preserve">
          <source>Configure the root CA. Edit a new file called &lt;code&gt;root-ca.cnf&lt;/code&gt; and paste the following contents into it. This constrains the root CA to signing leaf certificates and not intermediate CAs.</source>
          <target state="translated">ルートCAを構成します。 &lt;code&gt;root-ca.cnf&lt;/code&gt; という名前の新しいファイルを編集し、以下の内容をそのファイルに貼り付けます。これにより、ルートCAは中間CAではなくリーフ証明書に署名するように制限されます。</target>
        </trans-unit>
        <trans-unit id="24c847f58b707be853aaefa4d435b11e9db6417a" translate="yes" xml:space="preserve">
          <source>Configure the runtime environment</source>
          <target state="translated">ランタイム環境の設定</target>
        </trans-unit>
        <trans-unit id="659705b2dd4dc3c147e891d974cc408bc1400f12" translate="yes" xml:space="preserve">
          <source>Configure the site certificate. Edit a new file called &lt;code&gt;site.cnf&lt;/code&gt; and paste the following contents into it. This constrains the site certificate so that it can only be used to authenticate a server and can&amp;rsquo;t be used to sign certificates.</source>
          <target state="translated">サイト証明書を構成します。 &lt;code&gt;site.cnf&lt;/code&gt; という名前の新しいファイルを編集し、次の内容をそのファイルに貼り付けます。これにより、サイト証明書はサーバーの認証にのみ使用でき、証明書への署名には使用できないように制約されます。</target>
        </trans-unit>
        <trans-unit id="f42c4bcdef007713a0bc82b3e80afb6ba7a78e00" translate="yes" xml:space="preserve">
          <source>Configure which TLS version is used for TLS communication with the &lt;code&gt;docker&lt;/code&gt; daemon. Defaults to &lt;code&gt;TLSv1&lt;/code&gt;. Supported values are: &lt;code&gt;TLSv1&lt;/code&gt;, &lt;code&gt;TLSv1_1&lt;/code&gt;, &lt;code&gt;TLSv1_2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;docker&lt;/code&gt; デーモンとのTLS通信に使用するTLSバージョンを構成します。デフォルトは &lt;code&gt;TLSv1&lt;/code&gt; です。サポートされる値は以下のとおりです。 &lt;code&gt;TLSv1&lt;/code&gt; が、 &lt;code&gt;TLSv1_1&lt;/code&gt; 、 &lt;code&gt;TLSv1_2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05912d3f38f5a3826da18c02cd2b5271daafd461" translate="yes" xml:space="preserve">
          <source>Configures how the service should be rollbacked in case of a failing update.</source>
          <target state="translated">更新に失敗した場合にサービスをロールバックする方法を設定します。</target>
        </trans-unit>
        <trans-unit id="189102b7b5755e5d8be08034702b31d299f0936a" translate="yes" xml:space="preserve">
          <source>Configures how the service should be updated. Useful for configuring rolling updates.</source>
          <target state="translated">サービスの更新方法を設定します。ローリングアップデートの設定に便利です。</target>
        </trans-unit>
        <trans-unit id="af597658cfde53aa6c566204a031a9c9fd9c277c" translate="yes" xml:space="preserve">
          <source>Configures if and how to restart containers when they exit. Replaces &lt;a href=&quot;compose-file-v2/index#orig-resources&quot;&gt;&lt;code&gt;restart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コンテナが終了したときにコンテナを再起動するかどうか、およびどのように再起動するかを構成します。&lt;a href=&quot;compose-file-v2/index#orig-resources&quot;&gt; &lt;code&gt;restart&lt;/code&gt; を&lt;/a&gt;置き換えます。</target>
        </trans-unit>
        <trans-unit id="ec569abdda69db41ca01b8e045000691de01ab92" translate="yes" xml:space="preserve">
          <source>Configures resource constraints.</source>
          <target state="translated">リソース制約を設定します。</target>
        </trans-unit>
        <trans-unit id="42aa9f169994c3a961d0487af2abe5c0b9643e3c" translate="yes" xml:space="preserve">
          <source>Configures the path to the &lt;code&gt;ca.pem&lt;/code&gt;, &lt;code&gt;cert.pem&lt;/code&gt;, and &lt;code&gt;key.pem&lt;/code&gt; files used for TLS verification. Defaults to &lt;code&gt;~/.docker&lt;/code&gt;.</source>
          <target state="translated">TLS検証に使用される &lt;code&gt;ca.pem&lt;/code&gt; 、 &lt;code&gt;cert.pem&lt;/code&gt; 、および &lt;code&gt;key.pem&lt;/code&gt; ファイルへのパスを設定します。デフォルトは &lt;code&gt;~/.docker&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="62e8db3681c497de080c377d097a08860ca647a0" translate="yes" xml:space="preserve">
          <source>Configures the time (in seconds) a request to the Docker daemon is allowed to hang before Compose considers it failed. Defaults to 60 seconds.</source>
          <target state="translated">Composeが失敗と判断する前にDockerデーモンへのリクエストがハングするまでの時間(秒単位)を設定します。デフォルトは60秒です。</target>
        </trans-unit>
        <trans-unit id="60cf8fe5d1ed26cb035e32ecf63b73bdd81e61b6" translate="yes" xml:space="preserve">
          <source>Configuring CLI environment variables for a Docker host</source>
          <target state="translated">DockerホストのCLI環境変数を設定する</target>
        </trans-unit>
        <trans-unit id="f5715daf8a92aa33149aa5737dcc519b00a4a9e8" translate="yes" xml:space="preserve">
          <source>Configuring credentials</source>
          <target state="translated">クレデンシャルの設定</target>
        </trans-unit>
        <trans-unit id="8769ece908fe3bf79c25d961711eb6e0c2fce015" translate="yes" xml:space="preserve">
          <source>Configuring default address pools</source>
          <target state="translated">デフォルトのアドレスプールの設定</target>
        </trans-unit>
        <trans-unit id="9b38fba5bf4344973caa3e73b9112107ffbf07ab" translate="yes" xml:space="preserve">
          <source>Configuring the Docker Client</source>
          <target state="translated">Dockerクライアントの設定</target>
        </trans-unit>
        <trans-unit id="0bde84edd5e9eb453b40e4f15761cb14a3800f7f" translate="yes" xml:space="preserve">
          <source>Configuring the Notary Client</source>
          <target state="translated">公証人クライアントの設定</target>
        </trans-unit>
        <trans-unit id="3b3836d9d12d6ea9f27574f7bb1ee200760c96a1" translate="yes" xml:space="preserve">
          <source>Confirm that the service is running with a single replica:</source>
          <target state="translated">サービスが単一のレプリカで動作していることを確認します。</target>
        </trans-unit>
        <trans-unit id="db237e241428746dd6040cc370e2c1874db0af6c" translate="yes" xml:space="preserve">
          <source>Confirm the version and save scripts to &lt;code&gt;/etc/bash_completion.d&lt;/code&gt; or &lt;code&gt;/usr/local/etc/bash_completion.d&lt;/code&gt;:</source>
          <target state="translated">バージョンを確認し、スクリプトを &lt;code&gt;/etc/bash_completion.d&lt;/code&gt; または &lt;code&gt;/usr/local/etc/bash_completion.d&lt;/code&gt; に保存します。</target>
        </trans-unit>
        <trans-unit id="9e46c44eecd640a22f01999d3ba045b41e76ceac" translate="yes" xml:space="preserve">
          <source>Congrats! You just deployed a container secured with a custom apparmor profile!</source>
          <target state="translated">おめでとうございます。カスタムのアパーマープロファイルで保護されたコンテナをデプロイしました!</target>
        </trans-unit>
        <trans-unit id="36b2528eb5eba749498d236019d2276436d5415a" translate="yes" xml:space="preserve">
          <source>Congratulations!</source>
          <target state="translated">Congratulations!</target>
        </trans-unit>
        <trans-unit id="dba10908f987c2b93212bc7e72407e38ac2413f6" translate="yes" xml:space="preserve">
          <source>Congratulations, you are now running two Couchdb containers, completely isolated from each other &lt;em&gt;except&lt;/em&gt; for their data.</source>
          <target state="translated">おめでとうございます。これで、2つのCouchdbコンテナを実行し、データ&lt;em&gt;を除い&lt;/em&gt;て互いに完全に分離しました。</target>
        </trans-unit>
        <trans-unit id="dabbf35705b08e1f470dc7f998b2bb3de37ad9ad" translate="yes" xml:space="preserve">
          <source>Congratulations, you have created your first swarm!</source>
          <target state="translated">おめでとうございます!初めての大群ができましたね。</target>
        </trans-unit>
        <trans-unit id="9de76d2a2299444190ddfbd29d76fca5ad916555" translate="yes" xml:space="preserve">
          <source>Connect a container to a network</source>
          <target state="translated">コンテナをネットワークに接続する</target>
        </trans-unit>
        <trans-unit id="3d79df6ab008958ca7df5955720642c450795801" translate="yes" xml:space="preserve">
          <source>Connect a container to a network (--network)</source>
          <target state="translated">コンテナをネットワークに接続する (--network)</target>
        </trans-unit>
        <trans-unit id="0a626f7ed091d7b6ea8c6d521bdfd2e1a0b07818" translate="yes" xml:space="preserve">
          <source>Connect a container to a network when it starts</source>
          <target state="translated">起動時にコンテナをネットワークに接続する</target>
        </trans-unit>
        <trans-unit id="994571ab97d668d02c0a6a76aaabb68430d6651e" translate="yes" xml:space="preserve">
          <source>Connect a running container to a network</source>
          <target state="translated">実行中のコンテナをネットワークに接続する</target>
        </trans-unit>
        <trans-unit id="fa6d731f5795044a238652ef49352b46e6dd9127" translate="yes" xml:space="preserve">
          <source>Connect containers</source>
          <target state="translated">コンテナを接続する</target>
        </trans-unit>
        <trans-unit id="34cca06f6198ee8b266637860307bd6005b9da74" translate="yes" xml:space="preserve">
          <source>Connect from your host system</source>
          <target state="translated">ホストシステムからの接続</target>
        </trans-unit>
        <trans-unit id="9fdf6083671a9baa507335308de454ced28803f1" translate="yes" xml:space="preserve">
          <source>Connect the container to the bridge via veth interfaces.</source>
          <target state="translated">コンテナを veth インターフェイスを介してブリッジに接続します。</target>
        </trans-unit>
        <trans-unit id="46e846bfbb41c6ce43181debb4226e8b5e5027bd" translate="yes" xml:space="preserve">
          <source>Connect the database</source>
          <target state="translated">データベースを接続する</target>
        </trans-unit>
        <trans-unit id="4cd363d031376c9fb1ec3f674400aa911ef5a175" translate="yes" xml:space="preserve">
          <source>Connect the service to an overlay network</source>
          <target state="translated">サービスをオーバーレイネットワークに接続する</target>
        </trans-unit>
        <trans-unit id="bb50c88d2b349b8a14a394f1942a991a338117c6" translate="yes" xml:space="preserve">
          <source>Connect your shell to the new machine.</source>
          <target state="translated">シェルを新しいマシンに接続します。</target>
        </trans-unit>
        <trans-unit id="0efc656240b5a28f753f438f1f77b66270c74472" translate="yes" xml:space="preserve">
          <source>Connecting to VMs with &lt;code&gt;docker-machine env&lt;/code&gt; and &lt;code&gt;docker-machine ssh&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;docker-machine env&lt;/code&gt; および &lt;code&gt;docker-machine ssh&lt;/code&gt; を使用したVMへの接続</target>
        </trans-unit>
        <trans-unit id="c67996f7b143c083c5c6eb4a6a2f6203bd862d01" translate="yes" xml:space="preserve">
          <source>Connecting to the secure Docker port using &lt;code&gt;curl&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;curl&lt;/code&gt; を使用して安全なDockerポートに接続する</target>
        </trans-unit>
        <trans-unit id="5ddc2b5d55922da766cdb960dd566a3c8e91fd8d" translate="yes" xml:space="preserve">
          <source>Connects a container to a network. You can connect a container by name or by ID. Once connected, the container can communicate with other containers in the same network.</source>
          <target state="translated">コンテナをネットワークに接続します。コンテナを名前またはIDで接続することができます。接続すると、コンテナは同じネットワーク内の他のコンテナと通信することができます。</target>
        </trans-unit>
        <trans-unit id="e66455c20f04dd1e1177f7c9fbac38cf21742180" translate="yes" xml:space="preserve">
          <source>Connects the container to a user created network (using &lt;code&gt;docker network create&lt;/code&gt; command)</source>
          <target state="translated">コンテナーをユーザーが作成したネットワークに接続します（ &lt;code&gt;docker network create&lt;/code&gt; コマンドを使用）</target>
        </trans-unit>
        <trans-unit id="b068ddfd8c3f790416fb90c3a0a0b165924a9896" translate="yes" xml:space="preserve">
          <source>Connects to the &lt;code&gt;mysql_private&lt;/code&gt; network so it can communicate with the &lt;code&gt;mysql&lt;/code&gt; container, and also publishes port 80 to port 30000 on all swarm nodes.</source>
          <target state="translated">&lt;code&gt;mysql_private&lt;/code&gt; ネットワークに接続して &lt;code&gt;mysql&lt;/code&gt; コンテナーと通信できるようにし、すべてのスウォームノードでポート80をポート30000に公開します。</target>
        </trans-unit>
        <trans-unit id="b2a75ab6ecf709b9245ec9a65c0646fee5ff8e2e" translate="yes" xml:space="preserve">
          <source>Connects to the MySQL container using the username &lt;code&gt;wordpress&lt;/code&gt; and the password in &lt;code&gt;/run/secrets/wp_db_password&lt;/code&gt; and creates the &lt;code&gt;wordpress&lt;/code&gt; database if it does not yet exist.</source>
          <target state="translated">ユーザー名 &lt;code&gt;wordpress&lt;/code&gt; と &lt;code&gt;/run/secrets/wp_db_password&lt;/code&gt; のパスワードを使用してMySQLコンテナーに接続し、 &lt;code&gt;wordpress&lt;/code&gt; データベースがまだ存在しない場合は作成します。</target>
        </trans-unit>
        <trans-unit id="3db8434f7702be3f23839b03f566a7f331b477f4" translate="yes" xml:space="preserve">
          <source>Consecutive failures needed to report unhealthy</source>
          <target state="translated">不健康な報告をするために必要な連続した失敗</target>
        </trans-unit>
        <trans-unit id="91a77218118e7ead06e7cce011d8a62489b88c22" translate="yes" xml:space="preserve">
          <source>Consider a situation where your image starts a lightweight web server. You could use that image as a base image, copy in your website&amp;rsquo;s HTML files, and package that into another image. Each time your website changed, you&amp;rsquo;d need to update the new image and redeploy all of the containers serving your website. A better solution is to store the website in a named volume which is attached to each of your web server containers when they start. To update the website, you just update the named volume.</source>
          <target state="translated">画像が軽量Webサーバーを起動する状況を考えてみましょう。その画像をベース画像として使用し、WebサイトのHTMLファイルにコピーして、別の画像にパッケージ化できます。Webサイトが変更されるたびに、新しいイメージを更新し、Webサイトを提供するすべてのコンテナーを再デプロイする必要があります。より良い解決策は、起動時に各Webサーバーコンテナーに接続されている名前付きボリュームにWebサイトを保存することです。Webサイトを更新するには、指定したボリュームを更新するだけです。</target>
        </trans-unit>
        <trans-unit id="cca4084b2119f2d40f356f45cc33c8c51f442030" translate="yes" xml:space="preserve">
          <source>Consider a situation where your swarm is running as expected, then a manager node becomes unavailable. You troubleshoot the problem and bring the physical node back online, but you need to unlock the manager by providing the unlock key to read the encrypted credentials and Raft logs.</source>
          <target state="translated">スウォームが期待通りに実行されているにもかかわらず、マネージャノードが使用できなくなった場合を考えてみましょう。問題をトラブルシューティングして物理ノードをオンラインに戻しますが、暗号化された資格情報と Raft ログを読み取るためにロック解除キーを提供してマネージャのロックを解除する必要があります。</target>
        </trans-unit>
        <trans-unit id="9e4336cac658aad03ed3d7f39e28b5600f9b8c04" translate="yes" xml:space="preserve">
          <source>Consider another example under the same command line:</source>
          <target state="translated">同じコマンドラインで別の例を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="a96423729bf8c93e804a21ee587de890d532a70b" translate="yes" xml:space="preserve">
          <source>Consider the following &lt;code&gt;config.json&lt;/code&gt; file.</source>
          <target state="translated">次の &lt;code&gt;config.json&lt;/code&gt; ファイルを検討してください。</target>
        </trans-unit>
        <trans-unit id="bf910df441117104dea7e2b42694f1b732c96d07" translate="yes" xml:space="preserve">
          <source>Consider the following example which would fail in a non-obvious way on &lt;code&gt;Windows&lt;/code&gt;. The second &lt;code&gt;\&lt;/code&gt; at the end of the second line would be interpreted as an escape for the newline, instead of a target of the escape from the first &lt;code&gt;\&lt;/code&gt;. Similarly, the &lt;code&gt;\&lt;/code&gt; at the end of the third line would, assuming it was actually handled as an instruction, cause it be treated as a line continuation. The result of this dockerfile is that second and third lines are considered a single instruction:</source>
          <target state="translated">&lt;code&gt;Windows&lt;/code&gt; で明白ではない方法で失敗する次の例を考えてみます。2行目の最後の2番目の &lt;code&gt;\&lt;/code&gt; は、最初の &lt;code&gt;\&lt;/code&gt; からのエスケープのターゲットではなく、改行のエスケープとして解釈されます。同様に、3行目の最後の &lt;code&gt;\&lt;/code&gt; は、実際に命令として処理されたと想定すると、行の継続として扱われます。このdockerfileの結果は、2行目と3行目が単一の命令と見なされることです。</target>
        </trans-unit>
        <trans-unit id="d7f69e049d11cfea430a186ac01ffac1bca0cfc8" translate="yes" xml:space="preserve">
          <source>Consider the following example:</source>
          <target state="translated">次のような例を考えてみてください。</target>
        </trans-unit>
        <trans-unit id="406c145a25565e04397d6ca3ea205bede6b0629e" translate="yes" xml:space="preserve">
          <source>Consider the following swarm, as seen from the manager:</source>
          <target state="translated">管理人から見た次のような群を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="411768d7c15f6e0c773741ed83c248b075d4e432" translate="yes" xml:space="preserve">
          <source>Consult the &lt;a href=&quot;https://docs.docker.com/network&quot;&gt;Getting started with multi-host networking&lt;/a&gt; to see how to set up a Swarm cluster. The cluster uses the &lt;code&gt;overlay&lt;/code&gt; driver by default, but you can specify it explicitly if you prefer - see below for how to do this.</source>
          <target state="translated">相談する&lt;a href=&quot;https://docs.docker.com/network&quot;&gt;マルチホストネットワーキング入門&lt;/a&gt;スウォームクラスタを設定する方法を参照してください。クラスターはデフォルトで &lt;code&gt;overlay&lt;/code&gt; ドライバーを使用しますが、必要に応じて明示的に指定できます。これを行う方法については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="e6443af99d2f470f50affd5057bf48db2d09dae4" translate="yes" xml:space="preserve">
          <source>Container</source>
          <target state="translated">Container</target>
        </trans-unit>
        <trans-unit id="7b07858cd8374b9a836d7cb699be5e5b240ba41c" translate="yes" xml:space="preserve">
          <source>Container (covered in &lt;a href=&quot;../part2/index&quot;&gt;part 2&lt;/a&gt;)</source>
          <target state="translated">コンテナ（&lt;a href=&quot;../part2/index&quot;&gt;パート2で&lt;/a&gt;カバー）</target>
        </trans-unit>
        <trans-unit id="fab020546f97dd4838c561646252f367e697df9c" translate="yes" xml:space="preserve">
          <source>Container ID</source>
          <target state="translated">コンテナID</target>
        </trans-unit>
        <trans-unit id="19f9eb327f9e48553729e16fcfbab276c6cd3084" translate="yes" xml:space="preserve">
          <source>Container IPv4/IPv6 link-local addresses</source>
          <target state="translated">コンテナ IPv4/IPv6 リンクローカルアドレス</target>
        </trans-unit>
        <trans-unit id="589922b2ec53ee57db5ee6be63e67455c56dbd02" translate="yes" xml:space="preserve">
          <source>Container MAC address (e.g., 92:d0:c6:0a:29:33)</source>
          <target state="translated">コンテナMACアドレス(例:92:d0:c6:0a:29:33</target>
        </trans-unit>
        <trans-unit id="e9988fcc237bece1969394402c613c4340dc4bd1" translate="yes" xml:space="preserve">
          <source>Container NIS domain name</source>
          <target state="translated">コンテナNISドメイン名</target>
        </trans-unit>
        <trans-unit id="dd2350293081c953b598956e829aa22abd8046ce" translate="yes" xml:space="preserve">
          <source>Container disk size.</source>
          <target state="translated">コンテナのディスクサイズ。</target>
        </trans-unit>
        <trans-unit id="f22bf764b81b60ce32edb50d6ac6877ee25de96a" translate="yes" xml:space="preserve">
          <source>Container host name</source>
          <target state="translated">コンテナホスト名</target>
        </trans-unit>
        <trans-unit id="b98dea0976c0defb9abe714c9fa4599debfd33e4" translate="yes" xml:space="preserve">
          <source>Container hostname</source>
          <target state="translated">コンテナのホスト名</target>
        </trans-unit>
        <trans-unit id="082a73c6636248e28fccfef6d6bf4df648919c19" translate="yes" xml:space="preserve">
          <source>Container identification</source>
          <target state="translated">容器の識別</target>
        </trans-unit>
        <trans-unit id="0d2f38c8334e8e09e810f43fdb21e03e77baab92" translate="yes" xml:space="preserve">
          <source>Container isolation technology</source>
          <target state="translated">コンテナの分離技術</target>
        </trans-unit>
        <trans-unit id="8e5af269481642c5e2a011ef986efcd672144d01" translate="yes" xml:space="preserve">
          <source>Container labels</source>
          <target state="translated">コンテナラベル</target>
        </trans-unit>
        <trans-unit id="7925d75c0a599cc043a9e1fb4efc5c97e7306549" translate="yes" xml:space="preserve">
          <source>Container name</source>
          <target state="translated">コンテナ名</target>
        </trans-unit>
        <trans-unit id="e353bf82926eed310dbf9ae9c790772757d3b18a" translate="yes" xml:space="preserve">
          <source>Container name or ID (user input)</source>
          <target state="translated">コンテナ名またはID(ユーザー入力</target>
        </trans-unit>
        <trans-unit id="e8b3b74cd1597401c6c764fbfbdfa9c9341916ab" translate="yes" xml:space="preserve">
          <source>Container names.</source>
          <target state="translated">コンテナ名。</target>
        </trans-unit>
        <trans-unit id="491590dfaeb4fc91bdacff4d53b21c4c3ecf319e" translate="yes" xml:space="preserve">
          <source>Container status.</source>
          <target state="translated">コンテナの状態。</target>
        </trans-unit>
        <trans-unit id="3c7e0bdda11c982ebf90053ec6f709ca3df7fc4a" translate="yes" xml:space="preserve">
          <source>Container&amp;rsquo;s ID</source>
          <target state="translated">コンテナのID</target>
        </trans-unit>
        <trans-unit id="4ee2497ce79f8f7f6a9aa13be0a8f0032f3d9aa9" translate="yes" xml:space="preserve">
          <source>Container&amp;rsquo;s IP address, such as &lt;code&gt;DB_PORT_5432_TCP_ADDR=172.17.0.5&lt;/code&gt;</source>
          <target state="translated">コンテナーのIPアドレス（ &lt;code&gt;DB_PORT_5432_TCP_ADDR=172.17.0.5&lt;/code&gt; など)</target>
        </trans-unit>
        <trans-unit id="ced53195b0df3fde79379c83b53bd2bf45b96874" translate="yes" xml:space="preserve">
          <source>Container&amp;rsquo;s name</source>
          <target state="translated">コンテナの名前</target>
        </trans-unit>
        <trans-unit id="fa7f85b507774144400e45f500b3a7cb9f216263" translate="yes" xml:space="preserve">
          <source>Containerization is increasingly popular because containers are:</source>
          <target state="translated">コンテナはコンテナであるため、コンテナ化はますます普及しています。</target>
        </trans-unit>
        <trans-unit id="2f70921ea1d4fe353ac011eedc6a11582bc98b01" translate="yes" xml:space="preserve">
          <source>Containerization makes &lt;a href=&quot;https://www.docker.com/solutions/cicd&quot;&gt;CI/CD&lt;/a&gt; seamless. For example:</source>
          <target state="translated">コンテナ化により、&lt;a href=&quot;https://www.docker.com/solutions/cicd&quot;&gt;CI / CDが&lt;/a&gt;シームレスになります。例えば：</target>
        </trans-unit>
        <trans-unit id="e040a458f46532a90ec69fa0b4bfc33ba151c98b" translate="yes" xml:space="preserve">
          <source>Containers</source>
          <target state="translated">Containers</target>
        </trans-unit>
        <trans-unit id="e4b8caef3ce605c81fb47ae70edae4c40e0090bd" translate="yes" xml:space="preserve">
          <source>Containers and virtual machines</source>
          <target state="translated">コンテナと仮想マシン</target>
        </trans-unit>
        <trans-unit id="901ef2ebf787860d5ac6f562c5dccfc6d321358a" translate="yes" xml:space="preserve">
          <source>Containers can be linked to another container&amp;rsquo;s ports directly using &lt;code&gt;-link remote_name:local_alias&lt;/code&gt; in the client&amp;rsquo;s &lt;code&gt;docker run&lt;/code&gt;. This sets a number of environment variables that can then be used to connect:</source>
          <target state="translated">コンテナは直接使用して別のコンテナのポートにリンクすることができます &lt;code&gt;-link remote_name:local_alias&lt;/code&gt; クライアントの中に &lt;code&gt;docker run&lt;/code&gt; 。これにより、接続に使用できるいくつかの環境変数が設定されます。</target>
        </trans-unit>
        <trans-unit id="bc1df9d8262028c1d35803901ef8471e5b1e581b" translate="yes" xml:space="preserve">
          <source>Containers can communicate via their IP addresses by default. To communicate by name, they must be linked.</source>
          <target state="translated">デフォルトでは、コンテナはそのIPアドレスを介して通信できます。名前で通信するには、それらをリンクする必要があります。</target>
        </trans-unit>
        <trans-unit id="8aecf7b76ac483fc194b882a9bb4f0f333cd9b34" translate="yes" xml:space="preserve">
          <source>Containers for services defined in the Compose file</source>
          <target state="translated">Compose ファイルで定義されたサービスのコンテナ</target>
        </trans-unit>
        <trans-unit id="e96a631cad9af3e620b42be51b9024d716814d31" translate="yes" xml:space="preserve">
          <source>Containers for the linked service are reachable at a hostname identical to the alias, or the service name if no alias was specified.</source>
          <target state="translated">リンクされたサービスのコンテナは、エイリアスと同じホスト名、またはエイリアスが指定されていない場合はサービス名で到達可能です。</target>
        </trans-unit>
        <trans-unit id="040b49dce2c65a1a20e4bd3b48876c7887ebe58a" translate="yes" xml:space="preserve">
          <source>Containers on the same network can access each other using &lt;a href=&quot;https://docs.docker.com/network#use-swarm-mode-service-discovery&quot;&gt;service discovery&lt;/a&gt;.</source>
          <target state="translated">同じネットワーク上のコンテナは、&lt;a href=&quot;https://docs.docker.com/network#use-swarm-mode-service-discovery&quot;&gt;サービスディスカバリ&lt;/a&gt;を使用して相互にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="3f433936b8f5899593532cf2afaad98bfdd98c2d" translate="yes" xml:space="preserve">
          <source>Content trust in Docker</source>
          <target state="translated">Dockerにおけるコンテンツの信頼性</target>
        </trans-unit>
        <trans-unit id="9f7c3e82e3f4966eaddef6dfeec59c0fbf3a643c" translate="yes" xml:space="preserve">
          <source>Continue to Part 3 &amp;gt;&amp;gt;</source>
          <target state="translated">パート3に進む&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4c8aae68b108adcaaf7819fe9bfa5cccdbc5827f" translate="yes" xml:space="preserve">
          <source>Contiv Networking</source>
          <target state="translated">コンティヴネットワーキング</target>
        </trans-unit>
        <trans-unit id="19369b453ceeaa7d79c7cba96e70a6004866bf6b" translate="yes" xml:space="preserve">
          <source>Contiv Volume Plugin</source>
          <target state="translated">Contivボリュームプラグイン</target>
        </trans-unit>
        <trans-unit id="bec60318652b89c3623cbfe59a2345b48c957f3c" translate="yes" xml:space="preserve">
          <source>Contribute Docker&amp;rsquo;s AppArmor code</source>
          <target state="translated">DockerのAppArmorコードを提供する</target>
        </trans-unit>
        <trans-unit id="91a6f69a661cffc53439264d11345a8b4e5e99a1" translate="yes" xml:space="preserve">
          <source>Control Groups are another key component of Linux Containers. They implement resource accounting and limiting. They provide many useful metrics, but they also help ensure that each container gets its fair share of memory, CPU, disk I/O; and, more importantly, that a single container cannot bring the system down by exhausting one of those resources.</source>
          <target state="translated">コントロールグループは Linux コンテナのもう一つの重要なコンポーネントです。コントロールグループは、リソースのアカウンティングと制限を実装します。コントロールグループは多くの有用なメトリクスを提供しますが、各コンテナがメモリ、CPU、ディスク I/O の公平なシェアを確保するのにも役立ちます。</target>
        </trans-unit>
        <trans-unit id="c8eab1cebaade7b7830a76a983b393cdb9f8ded3" translate="yes" xml:space="preserve">
          <source>Control Groups have been around for a while as well: the code was started in 2006, and initially merged in kernel 2.6.24.</source>
          <target state="translated">コントロールグループもしばらくの間は存在していました。</target>
        </trans-unit>
        <trans-unit id="ad3f8b4a937008010b7821331752816b0c86ad4d" translate="yes" xml:space="preserve">
          <source>Control groups</source>
          <target state="translated">コントロールグループ</target>
        </trans-unit>
        <trans-unit id="fa110beff3e2e22c015c2e8502c2117da26402a1" translate="yes" xml:space="preserve">
          <source>Control service placement</source>
          <target state="translated">制御サービスの配置</target>
        </trans-unit>
        <trans-unit id="3ba3cb0124238824108607cef72bc4221b291856" translate="yes" xml:space="preserve">
          <source>Control startup and shutdown order in Compose</source>
          <target state="translated">Composeでの起動とシャットダウンの順序の制御</target>
        </trans-unit>
        <trans-unit id="1d04ab53dfecfa634e22ab2d999f8be1b6fc9287" translate="yes" xml:space="preserve">
          <source>Control the network&amp;rsquo;s scope</source>
          <target state="translated">ネットワークのスコープを制御する</target>
        </trans-unit>
        <trans-unit id="b28cab1a10a31ccf14a021fc328cb52d252d051c" translate="yes" xml:space="preserve">
          <source>Convoy plugin</source>
          <target state="translated">コンボイプラグイン</target>
        </trans-unit>
        <trans-unit id="291c41e8ae84bd4bc854cf3138b8670406fb4b8e" translate="yes" xml:space="preserve">
          <source>Copy &lt;code&gt;requirements.txt&lt;/code&gt; and install the Python dependencies.</source>
          <target state="translated">&lt;code&gt;requirements.txt&lt;/code&gt; をコピーして、Pythonの依存関係をインストールします。</target>
        </trans-unit>
        <trans-unit id="7a96822e81ed4585e8f3db5b02c732e3c00b276b" translate="yes" xml:space="preserve">
          <source>Copy files from your local host to a machine, from machine to machine, or from a machine to your local host using &lt;code&gt;scp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scp&lt;/code&gt; を使用して、ローカルホストからマシンに、マシンからマシンに、またはマシンからローカルホストにファイルをコピーします。</target>
        </trans-unit>
        <trans-unit id="f336ea8f2bf71db9c2a5f8130f6d9f910cdf9147" translate="yes" xml:space="preserve">
          <source>Copy files/folders between a container and the local filesystem</source>
          <target state="translated">コンテナとローカルファイルシステム間でファイル/フォルダをコピーする</target>
        </trans-unit>
        <trans-unit id="3918c439905b3b402ece21aaec0bbaa4e29596e2" translate="yes" xml:space="preserve">
          <source>Copy the container IP address and paste into your browser. (For example, &lt;code&gt;172.16.240.197&lt;/code&gt;)</source>
          <target state="translated">コンテナのIPアドレスをコピーして、ブラウザに貼り付けます。（例： &lt;code&gt;172.16.240.197&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="3133460a94368cd0c629cd9aaa902165771e9fa3" translate="yes" xml:space="preserve">
          <source>Copy the current directory &lt;code&gt;.&lt;/code&gt; in the project to the workdir &lt;code&gt;.&lt;/code&gt; in the image.</source>
          <target state="translated">現在のディレクトリをコピーし &lt;code&gt;.&lt;/code&gt; プロジェクトのworkdirに &lt;code&gt;.&lt;/code&gt; 画像で。</target>
        </trans-unit>
        <trans-unit id="89cbe1fd0c7f5734bed32e5200ab1979795ae143" translate="yes" xml:space="preserve">
          <source>Copy the generated certificates to the server and local config directory.</source>
          <target state="translated">生成された証明書をサーバとローカルのconfigディレクトリにコピーします。</target>
        </trans-unit>
        <trans-unit id="90758bd72f5cabc032466a7a4dcd876d1d052f41" translate="yes" xml:space="preserve">
          <source>Cpuset constraint</source>
          <target state="translated">クピュセット制約</target>
        </trans-unit>
        <trans-unit id="bb1ef70674671bfa1d7c3d3c8f9bc9ef8a9bcbc5" translate="yes" xml:space="preserve">
          <source>Crash reporting</source>
          <target state="translated">クラッシュレポート</target>
        </trans-unit>
        <trans-unit id="ea5bb996ed8925671d978b5067bf0492984a6f16" translate="yes" xml:space="preserve">
          <source>Create Docker machines on &lt;a href=&quot;https://www.digitalocean.com/&quot;&gt;DigitalOcean&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.digitalocean.com/&quot;&gt;DigitalOceanで&lt;/a&gt; Dockerマシンを作成します。</target>
        </trans-unit>
        <trans-unit id="2e349886628499b205284ffad91ac41006c1f66f" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;./data&lt;/code&gt; directory on the manager:</source>
          <target state="translated">マネージャーに &lt;code&gt;./data&lt;/code&gt; ディレクトリを作成します。</target>
        </trans-unit>
        <trans-unit id="bf668703bef08c21928ed3c1250cbbc190e9005d" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;Dockerfile&lt;/code&gt; in your project folder.</source>
          <target state="translated">プロジェクトフォルダに &lt;code&gt;Dockerfile&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="3e6ad8e34658bbf5d0fb9939c8bda557d246cbbf" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;docker-compose.yml&lt;/code&gt; file that starts your &lt;code&gt;WordPress&lt;/code&gt; blog and a separate &lt;code&gt;MySQL&lt;/code&gt; instance with a volume mount for data persistence:</source>
          <target state="translated">&lt;code&gt;WordPress&lt;/code&gt; ブログを開始する &lt;code&gt;docker-compose.yml&lt;/code&gt; ファイルと、データ永続化用のボリュームマウントを備えた別の &lt;code&gt;MySQL&lt;/code&gt; インスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="53ee88ac474b10cf32511cf94e09dc18fdd5317b" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;redis&lt;/code&gt; service and grant it access to the config. By default, the container can access the config at &lt;code&gt;/my-config&lt;/code&gt;, but you can customize the file name on the container using the &lt;code&gt;target&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;redis&lt;/code&gt; サービスを作成し、configへのアクセスを許可します。デフォルトでは、コンテナは &lt;code&gt;/my-config&lt;/code&gt; の設定にアクセスできますが、 &lt;code&gt;target&lt;/code&gt; オプションを使用してコンテナのファイル名をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="2b4c77fb071a420e4abddef123a1b85ac7a0d7f6" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;redis&lt;/code&gt; service and grant it access to the secret. By default, the container can access the secret at &lt;code&gt;/run/secrets/&amp;lt;secret_name&amp;gt;&lt;/code&gt;, but you can customize the file name on the container using the &lt;code&gt;target&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;redis&lt;/code&gt; サービスを作成し、シークレットへのアクセスを許可します。デフォルトでは、コンテナは &lt;code&gt;/run/secrets/&amp;lt;secret_name&amp;gt;&lt;/code&gt; のシークレットにアクセスできますが、 &lt;code&gt;target&lt;/code&gt; オプションを使用してコンテナのファイル名をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="6102d9aadc36bf3fa4fd1620095eead2b34bf918" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;requirements.txt&lt;/code&gt; in your project directory.</source>
          <target state="translated">プロジェクトディレクトリに &lt;code&gt;requirements.txt&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="2afa60eb6bb78e0aa6bef3f71f5c20178e059079" translate="yes" xml:space="preserve">
          <source>Create a CA, server and client keys with OpenSSL</source>
          <target state="translated">OpenSSLでCA、サーバ、クライアントの鍵を作成する</target>
        </trans-unit>
        <trans-unit id="4885208fb8b950bc31e70e82f4c753f946200e41" translate="yes" xml:space="preserve">
          <source>Create a Django project</source>
          <target state="translated">Djangoプロジェクトを作成する</target>
        </trans-unit>
        <trans-unit id="d2e11bddca4233ab493e7318ea72604a09501a26" translate="yes" xml:space="preserve">
          <source>Create a Dockerfile for an ASP.NET Core application</source>
          <target state="translated">ASP.NET CoreアプリケーションのDockerfileを作成する</target>
        </trans-unit>
        <trans-unit id="a0ef72f8541de4d53aca1e6413404d6e21c3b830" translate="yes" xml:space="preserve">
          <source>Create a VolumeDriver</source>
          <target state="translated">VolumeDriverの作成</target>
        </trans-unit>
        <trans-unit id="be9d5cff6b40a61053f0e5406264fa46192c8e76" translate="yes" xml:space="preserve">
          <source>Create a backup that can then be used with &lt;code&gt;docker load&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;docker load&lt;/code&gt; で使用できるバックアップを作成します。</target>
        </trans-unit>
        <trans-unit id="ac5bed111d26f472ea187d239f0d0efeae7087d3" translate="yes" xml:space="preserve">
          <source>Create a checkpoint from a running container</source>
          <target state="translated">実行中のコンテナからチェックポイントを作成する</target>
        </trans-unit>
        <trans-unit id="6440e56bd3c060e689ddfa896b09bbd0ce045bb0" translate="yes" xml:space="preserve">
          <source>Create a cluster</source>
          <target state="translated">クラスターを作成する</target>
        </trans-unit>
        <trans-unit id="fd8f74092ac29cffc635d96d5c218039d01e95be" translate="yes" xml:space="preserve">
          <source>Create a config from a file or STDIN</source>
          <target state="translated">ファイルまたはSTDINからコンフィグを作成する</target>
        </trans-unit>
        <trans-unit id="17539791df575249b8565444eca5a839b7eb0478" translate="yes" xml:space="preserve">
          <source>Create a configuration only network</source>
          <target state="translated">設定のみのネットワークを作成する</target>
        </trans-unit>
        <trans-unit id="6613bee0926e82377a6c1df09bea6e64a5e35610" translate="yes" xml:space="preserve">
          <source>Create a context</source>
          <target state="translated">コンテキストの作成</target>
        </trans-unit>
        <trans-unit id="cb3fb5a057cb5d35afc9b75ea1a83f792cf3ded5" translate="yes" xml:space="preserve">
          <source>Create a custom network of an APT proxy container with Debian-based containers.</source>
          <target state="translated">Debian ベースのコンテナで APT プロキシコンテナのカスタムネットワークを作成します。</target>
        </trans-unit>
        <trans-unit id="1a36817066d773a38d9c6fa39dd2b4be1dc7c6a5" translate="yes" xml:space="preserve">
          <source>Create a directory for the project:</source>
          <target state="translated">プロジェクトのディレクトリを作成します。</target>
        </trans-unit>
        <trans-unit id="df906deb5dfa1bee5bbeb754debc8276288cd049" translate="yes" xml:space="preserve">
          <source>Create a file called &lt;code&gt;app.py&lt;/code&gt; in your project directory and paste this in:</source>
          <target state="translated">プロジェクトディレクトリに &lt;code&gt;app.py&lt;/code&gt; というファイルを作成し、次の場所に貼り付けます。</target>
        </trans-unit>
        <trans-unit id="6e50372ee97819bfd724c04e926a28e036c80219" translate="yes" xml:space="preserve">
          <source>Create a file called &lt;code&gt;com.docker.machine.default.plist&lt;/code&gt; in the &lt;code&gt;~/Library/LaunchAgents/&lt;/code&gt; directory, with the following content:</source>
          <target state="translated">ファイルを作成 &lt;code&gt;com.docker.machine.default.plist&lt;/code&gt; をして &lt;code&gt;~/Library/LaunchAgents/&lt;/code&gt; 次の内容で、ディレクトリ：</target>
        </trans-unit>
        <trans-unit id="04df220e1f7705e9962fb93b691fbc7f28c531e1" translate="yes" xml:space="preserve">
          <source>Create a file called &lt;code&gt;docker-compose.yml&lt;/code&gt; in your project directory and paste the following:</source>
          <target state="translated">プロジェクトディレクトリに &lt;code&gt;docker-compose.yml&lt;/code&gt; というファイルを作成し、以下を貼り付けます。</target>
        </trans-unit>
        <trans-unit id="5bb10200f76f449f5653669f370e0669c665f114" translate="yes" xml:space="preserve">
          <source>Create a file called &lt;code&gt;docker-compose.yml&lt;/code&gt; in your project directory.</source>
          <target state="translated">プロジェクトディレクトリに &lt;code&gt;docker-compose.yml&lt;/code&gt; というファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="9cf156bc8882775c774414b4bb8ba7895b49c0d2" translate="yes" xml:space="preserve">
          <source>Create a file called &lt;code&gt;docker-compose.yml&lt;/code&gt; with your favorite editor. For example, using vim:</source>
          <target state="translated">お気に入りのエディターで &lt;code&gt;docker-compose.yml&lt;/code&gt; というファイルを作成します。たとえば、vimを使用します。</target>
        </trans-unit>
        <trans-unit id="bf86ea907e9d20e5c5d09f428ba556a008462132" translate="yes" xml:space="preserve">
          <source>Create a local manifest list for annotating and pushing to a registry</source>
          <target state="translated">アノテーションとレジストリへのプッシュのためのローカル マニフェスト リストを作成します。</target>
        </trans-unit>
        <trans-unit id="97f19b47c55b754bc1d8e0164534194b00f192a6" translate="yes" xml:space="preserve">
          <source>Create a machine</source>
          <target state="translated">マシンを作成する</target>
        </trans-unit>
        <trans-unit id="9917f3b67c75482216c7fb5796f625e17c7ba14d" translate="yes" xml:space="preserve">
          <source>Create a machine.</source>
          <target state="translated">機械を作ります。</target>
        </trans-unit>
        <trans-unit id="f40ffe7edf4ea6bf3387372effdab6520ae62bed" translate="yes" xml:space="preserve">
          <source>Create a machine. Requires the &lt;code&gt;--driver&lt;/code&gt; flag to indicate which provider (VirtualBox, DigitalOcean, AWS, etc.) the machine should be created on, and an argument to indicate the name of the created machine.</source>
          <target state="translated">マシンを作成します。必要 &lt;code&gt;--driver&lt;/code&gt; マシンが作成されるべきプロバイダ（等VirtualBoxは、DigitalOcean、AWS）を示すフラグ、および作成したマシンの名前を指定する引数。</target>
        </trans-unit>
        <trans-unit id="4bb8758984dbc7cfe086ef8a5ed978dcd34dfc71" translate="yes" xml:space="preserve">
          <source>Create a network</source>
          <target state="translated">ネットワークを作る</target>
        </trans-unit>
        <trans-unit id="ecf685791835be7a1b2dd9186a8211f0c3200c44" translate="yes" xml:space="preserve">
          <source>Create a network alias for a container</source>
          <target state="translated">コンテナのネットワークエイリアスを作成する</target>
        </trans-unit>
        <trans-unit id="7f9353935e115784ccea5c918aff4035b198bb1e" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;trustsandbox&lt;/code&gt; directory and change into it.</source>
          <target state="translated">新しい &lt;code&gt;trustsandbox&lt;/code&gt; ディレクトリを作成して、そこに移動します。</target>
        </trans-unit>
        <trans-unit id="d9112eec714b47e36f0d6b5b9e1835d40f5fdd8b" translate="yes" xml:space="preserve">
          <source>Create a new Docker config using the new &lt;code&gt;site.conf&lt;/code&gt;, called &lt;code&gt;site-v2.conf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;site-v2.conf&lt;/code&gt; という新しい &lt;code&gt;site.conf&lt;/code&gt; を使用して、新しいDocker構成を作成します。</target>
        </trans-unit>
        <trans-unit id="3b77dbcb6258d2c2743425c762e7730cd1cee09c" translate="yes" xml:space="preserve">
          <source>Create a new container</source>
          <target state="translated">新しいコンテナを作成する</target>
        </trans-unit>
        <trans-unit id="af287a34b518c56c8359626e45a0b81efb406c43" translate="yes" xml:space="preserve">
          <source>Create a new file called &lt;code&gt;Dockerfile&lt;/code&gt; in your project directory.</source>
          <target state="translated">プロジェクトディレクトリに &lt;code&gt;Dockerfile&lt;/code&gt; という新しいファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="6fa177c875e610844b4289c1a49633693ecc48cb" translate="yes" xml:space="preserve">
          <source>Create a new image from a container&amp;rsquo;s changes</source>
          <target state="translated">コンテナーの変更から新しいイメージを作成する</target>
        </trans-unit>
        <trans-unit id="0f4d3abf69b050947ee350209c4858b2d70cd642" translate="yes" xml:space="preserve">
          <source>Create a new service</source>
          <target state="translated">新規サービスの作成</target>
        </trans-unit>
        <trans-unit id="c69a926e4a6cbcf8ce442ec206283170a7b95825" translate="yes" xml:space="preserve">
          <source>Create a new swarm, covered in this article.</source>
          <target state="translated">この記事で取り上げた新しい群を作成します。</target>
        </trans-unit>
        <trans-unit id="35bccaa41ae5b58849bde62432137da30fb180e1" translate="yes" xml:space="preserve">
          <source>Create a plugin from a rootfs and configuration. Plugin data directory must contain config.json and rootfs directory.</source>
          <target state="translated">rootfsとconfigからプラグインを作成します。プラグインのデータディレクトリにはconfig.jsonとrootfsディレクトリが必要です。</target>
        </trans-unit>
        <trans-unit id="c512738a7635b8ca5e323d04812779dc696f3874" translate="yes" xml:space="preserve">
          <source>Create a secret</source>
          <target state="translated">秘密を作る</target>
        </trans-unit>
        <trans-unit id="460585255344876d5f43a2577fad375d3bf943ea" translate="yes" xml:space="preserve">
          <source>Create a secret from a file or STDIN as content</source>
          <target state="translated">ファイルまたはSTDINからコンテンツとして秘密を作成する</target>
        </trans-unit>
        <trans-unit id="67ba5e0d056d2467e8afb78991bb378980c06fce" translate="yes" xml:space="preserve">
          <source>Create a secret with a file</source>
          <target state="translated">ファイルで秘密を作る</target>
        </trans-unit>
        <trans-unit id="587aba78bbf569e9febb68f2c39d26c46b23542b" translate="yes" xml:space="preserve">
          <source>Create a secret with labels</source>
          <target state="translated">ラベルで秘密を作る</target>
        </trans-unit>
        <trans-unit id="389405cf0c5dda32148ac6bf0cc140f0c2fc8aa6" translate="yes" xml:space="preserve">
          <source>Create a service</source>
          <target state="translated">サービスの作成</target>
        </trans-unit>
        <trans-unit id="8e1e5f8e1b7edd780348917dbbe4a4110cdf331b" translate="yes" xml:space="preserve">
          <source>Create a service specifying a secret:</source>
          <target state="translated">秘密を指定したサービスを作成します。</target>
        </trans-unit>
        <trans-unit id="9dba39db1e7a65e26c43ec4298564c9b4dcc91a1" translate="yes" xml:space="preserve">
          <source>Create a service specifying the secret, target, user/group ID, and mode:</source>
          <target state="translated">秘密、ターゲット、ユーザー/グループID、モードを指定したサービスを作成します。</target>
        </trans-unit>
        <trans-unit id="669e3f0e78a0ada26f5cc0acfff0918ab968f965" translate="yes" xml:space="preserve">
          <source>Create a service that runs Nginx and has access to the three secrets. The last part of the &lt;code&gt;docker service create&lt;/code&gt; command creates a symbolic link from the location of the &lt;code&gt;site.conf&lt;/code&gt; secret to &lt;code&gt;/etc/nginx.conf.d/&lt;/code&gt;, where Nginx looks for extra configuration files. This step happens before Nginx actually starts, so you don&amp;rsquo;t need to rebuild your image if you change the Nginx configuration.</source>
          <target state="translated">Nginxを実行し、3つのシークレットにアクセスできるサービスを作成します。 &lt;code&gt;site.conf&lt;/code&gt; &lt;code&gt;docker service create&lt;/code&gt; コマンドの最後の部分は、site.confシークレットの場所から &lt;code&gt;/etc/nginx.conf.d/&lt;/code&gt; へのシンボリックリンクを作成します。ここで、Nginxは追加の構成ファイルを探します。この手順はNginxが実際に起動する前に行われるため、Nginxの構成を変更した場合にイメージを再構築する必要はありません。</target>
        </trans-unit>
        <trans-unit id="6db02fe70314f90c7d054d1943e014fae8c71c29" translate="yes" xml:space="preserve">
          <source>Create a service that runs Nginx and has access to the two secrets and the config. Set the mode to &lt;code&gt;0440&lt;/code&gt; so that the file is only readable by its owner and that owner&amp;rsquo;s group, not the world.</source>
          <target state="translated">Nginxを実行し、2つのシークレットと設定にアクセスできるサービスを作成します。モードを &lt;code&gt;0440&lt;/code&gt; に設定すると、ファイルはその所有者とその所有者のグループのみが読み取ることができ、世界は読み取れません。</target>
        </trans-unit>
        <trans-unit id="9c391910d7ce750b6a83f58c5f955fb9876d2069" translate="yes" xml:space="preserve">
          <source>Create a service that uses a bind-mounted host directory</source>
          <target state="translated">バインドマウントされたホストディレクトリを使用するサービスの作成</target>
        </trans-unit>
        <trans-unit id="6511b5211018a15fa470b65c44051800089eb6c6" translate="yes" xml:space="preserve">
          <source>Create a service that uses an anonymous volume</source>
          <target state="translated">匿名ボリュームを使用するサービスを作成する</target>
        </trans-unit>
        <trans-unit id="ff574951637b434810518ec67bdeafb2867247db" translate="yes" xml:space="preserve">
          <source>Create a service using a named volume</source>
          <target state="translated">名前付きボリュームを使用してサービスを作成する</target>
        </trans-unit>
        <trans-unit id="fe16951e16b4287aeedebfd9b87b1520a3ae5593" translate="yes" xml:space="preserve">
          <source>Create a service using an image on a private registry</source>
          <target state="translated">プライベートレジストリ上にイメージを使用したサービスを作成する</target>
        </trans-unit>
        <trans-unit id="61c9e6782c0d42d7c1471fc2c0fd992b3af7d70c" translate="yes" xml:space="preserve">
          <source>Create a service with 5 replica tasks (--replicas)</source>
          <target state="translated">5つのレプリカタスクを持つサービスを作成する (--replicas)</target>
        </trans-unit>
        <trans-unit id="0b7df42ff8ba2d2bc3de7223e58cf3c603457496" translate="yes" xml:space="preserve">
          <source>Create a service with a rolling update policy</source>
          <target state="translated">ローリングアップデートポリシーを持つサービスを作成する</target>
        </trans-unit>
        <trans-unit id="9d3fe30066e6a47ee41a1a2afe816cd89abe8e9e" translate="yes" xml:space="preserve">
          <source>Create a service with a single replica:</source>
          <target state="translated">単一のレプリカでサービスを作成します。</target>
        </trans-unit>
        <trans-unit id="0c4970087b051fa4c46b3bd5fb08e4a4eb975601" translate="yes" xml:space="preserve">
          <source>Create a service with secrets</source>
          <target state="translated">秘密のサービスを作る</target>
        </trans-unit>
        <trans-unit id="869c3cb33ddbf3030f0a4b0a238edc9c2470d198" translate="yes" xml:space="preserve">
          <source>Create a service with specific hostname (--hostname)</source>
          <target state="translated">特定のホスト名でサービスを作成する (--hostname)</target>
        </trans-unit>
        <trans-unit id="a78632a5f052275ff078c1264e99bc3dd132d789" translate="yes" xml:space="preserve">
          <source>Create a stack from a bundle</source>
          <target state="translated">バンドルからスタックを作成する</target>
        </trans-unit>
        <trans-unit id="52195f91546c438162bfe697230f76202475ab77" translate="yes" xml:space="preserve">
          <source>Create a swarm</source>
          <target state="translated">群れを作る</target>
        </trans-unit>
        <trans-unit id="2d96aec7a7fe4958c98a9770005c5c231d26602d" translate="yes" xml:space="preserve">
          <source>Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE</source>
          <target state="translated">SOURCE_IMAGEを参照するTARGET_IMAGEタグを作成します。</target>
        </trans-unit>
        <trans-unit id="7005b50794a7529159667fb0c3eb09de711b38c3" translate="yes" xml:space="preserve">
          <source>Create a user-defined overlay network which is used for communication between the MySQL and WordPress services. There is no need to expose the MySQL service to any external host or container.</source>
          <target state="translated">MySQL と WordPress サービス間の通信に使用するユーザー定義のオーバーレイネットワークを作成します。MySQL サービスを外部ホストやコンテナに公開する必要はありません。</target>
        </trans-unit>
        <trans-unit id="4dc758788555b971923af952dd41568803518bd1" translate="yes" xml:space="preserve">
          <source>Create a volume</source>
          <target state="translated">ボリュームを作成する</target>
        </trans-unit>
        <trans-unit id="a03b22aee5d6ce6c4a18a64468b4987b10177008" translate="yes" xml:space="preserve">
          <source>Create a volume and then configure the container to use it:</source>
          <target state="translated">ボリュームを作成し、それを使用するコンテナを設定します。</target>
        </trans-unit>
        <trans-unit id="046edc7c142a9d19a94cd8e8ea99fa1aa8b55d95" translate="yes" xml:space="preserve">
          <source>Create a volume using the plugin. This example mounts the &lt;code&gt;/remote&lt;/code&gt; directory on host &lt;code&gt;1.2.3.4&lt;/code&gt; into a volume named &lt;code&gt;sshvolume&lt;/code&gt;.</source>
          <target state="translated">プラグインを使用してボリュームを作成します。この例では、ホスト &lt;code&gt;1.2.3.4&lt;/code&gt; の &lt;code&gt;/remote&lt;/code&gt; ディレクトリを &lt;code&gt;sshvolume&lt;/code&gt; という名前のボリュームにマウントします。</target>
        </trans-unit>
        <trans-unit id="a7884286f80e4b48260cfab44dd17b1f15245642" translate="yes" xml:space="preserve">
          <source>Create an IAM (Identity and Access Management) administrator user, an admin group, and a key pair associated with a region.</source>
          <target state="translated">IAM(Identity and Access Management)管理者ユーザー、管理者グループ、およびリージョンに関連付けられたキーペアを作成します。</target>
        </trans-unit>
        <trans-unit id="a98ee1ca6db8bdf6ec2879ba895f443b9a23f125" translate="yes" xml:space="preserve">
          <source>Create an IIS service and grant it access to the &lt;code&gt;homepage&lt;/code&gt; config.</source>
          <target state="translated">IISサービスを作成し、 &lt;code&gt;homepage&lt;/code&gt; へのアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="ef3c0c6ae7d9177620eb111ca37df4f4b11f20ff" translate="yes" xml:space="preserve">
          <source>Create an IIS service and grant it access to the &lt;code&gt;homepage&lt;/code&gt; secret.</source>
          <target state="translated">IISサービスを作成し、 &lt;code&gt;homepage&lt;/code&gt; シークレットへのアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="a5a46cab28e0fbbbe65d297ade97ddaaee9d71c0" translate="yes" xml:space="preserve">
          <source>Create an empty &lt;code&gt;Gemfile.lock&lt;/code&gt; to build our &lt;code&gt;Dockerfile&lt;/code&gt;.</source>
          <target state="translated">空の作成 &lt;code&gt;Gemfile.lock&lt;/code&gt; 当社構築する &lt;code&gt;Dockerfile&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="0c7ba5abbbfdf88d73359968e395df34b7f49337" translate="yes" xml:space="preserve">
          <source>Create an empty directory on your local machine. Change directories (&lt;code&gt;cd&lt;/code&gt;) into the new directory, create a file called &lt;code&gt;Dockerfile&lt;/code&gt;, copy-and-paste the following content into that file, and save it. Take note of the comments that explain each statement in your new Dockerfile.</source>
          <target state="translated">ローカルマシンに空のディレクトリを作成します。ディレクトリ（ &lt;code&gt;cd&lt;/code&gt; ）を新しいディレクトリに変更し、 &lt;code&gt;Dockerfile&lt;/code&gt; と呼ばれるファイルを作成し、次のコンテンツをそのファイルにコピーアンドペーストして保存します。新しいDockerfileの各ステートメントを説明するコメントに注意してください。</target>
        </trans-unit>
        <trans-unit id="584a4b8ac7c2c575852696f136ad38f0ba377b9f" translate="yes" xml:space="preserve">
          <source>Create an empty project directory.</source>
          <target state="translated">空のプロジェクトディレクトリを作成します。</target>
        </trans-unit>
        <trans-unit id="668f42f4a55d0c35002deb9aded9ca5480e84c08" translate="yes" xml:space="preserve">
          <source>Create and push a manifest list</source>
          <target state="translated">マニフェストリストの作成とプッシュ</target>
        </trans-unit>
        <trans-unit id="d3122e1b698d7e459858c705f67c83491a5b2968" translate="yes" xml:space="preserve">
          <source>Create and run a Docker host on your &lt;a href=&quot;../get-started/index&quot;&gt;local system using VirtualBox&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../get-started/index&quot;&gt;VirtualBoxを使用&lt;/a&gt;してローカルシステムで Dockerホストを作成して実行する</target>
        </trans-unit>
        <trans-unit id="846247a19b5a7de5f56cf2788d34c3e2761af368" translate="yes" xml:space="preserve">
          <source>Create and run a Docker host on your &lt;a href=&quot;../get-started/index&quot;&gt;local system using virtualization&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../get-started/index&quot;&gt;仮想化を使用&lt;/a&gt;してローカルシステムで Dockerホストを作成して実行する</target>
        </trans-unit>
        <trans-unit id="17f9486818d2d4a68a71245de91b64d5c0d2d442" translate="yes" xml:space="preserve">
          <source>Create and start a container</source>
          <target state="translated">コンテナを作成して起動する</target>
        </trans-unit>
        <trans-unit id="48416b89069e0fc64a6e61bd2b5408be79429229" translate="yes" xml:space="preserve">
          <source>Create and update a stack from a &lt;code&gt;compose&lt;/code&gt; or a &lt;code&gt;dab&lt;/code&gt; file on the swarm. This command has to be run targeting a manager node.</source>
          <target state="translated">スウォームの &lt;code&gt;compose&lt;/code&gt; または &lt;code&gt;dab&lt;/code&gt; ファイルからスタックを作成および更新します。このコマンドは、マネージャーノードを対象として実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="558b0d66df8ecb9aa064f7867a36041aff8013b0" translate="yes" xml:space="preserve">
          <source>Create another file called &lt;code&gt;requirements.txt&lt;/code&gt; in your project directory and paste this in:</source>
          <target state="translated">プロジェクトディレクトリに &lt;code&gt;requirements.txt&lt;/code&gt; という別のファイルを作成し、次の場所に貼り付けます。</target>
        </trans-unit>
        <trans-unit id="aa4403ad0808e24547ff839d43ecda648d22b4ec" translate="yes" xml:space="preserve">
          <source>Create containers for your Docker Machine</source>
          <target state="translated">Docker Machine用のコンテナを作成する</target>
        </trans-unit>
        <trans-unit id="77bd80857654a4fd1fdea0faa5de5301de018ab6" translate="yes" xml:space="preserve">
          <source>Create first database</source>
          <target state="translated">最初のデータベースを作成</target>
        </trans-unit>
        <trans-unit id="145727fef61de61742acaa60dfd7a2190b3f1464" translate="yes" xml:space="preserve">
          <source>Create machines locally using &lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt;. This driver requires VirtualBox 5+ to be installed on your host. Using VirtualBox 4.3+ should work but emits a warning. Older versions do not work.</source>
          <target state="translated">&lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt;を使用してローカルにマシンを作成します。このドライバーを使用するには、ホストにVirtualBox 5+をインストールする必要があります。VirtualBox 4.3以降を使用すると機能しますが、警告が表示されます。古いバージョンは機能しません。</target>
        </trans-unit>
        <trans-unit id="ca7e57dff3a5fa4ef905033f1c56719eff99e843" translate="yes" xml:space="preserve">
          <source>Create machines on &lt;a href=&quot;http://aws.amazon.com&quot;&gt;Amazon Web Services&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://aws.amazon.com&quot;&gt;アマゾンウェブサービスで&lt;/a&gt;マシンを作成します。</target>
        </trans-unit>
        <trans-unit id="d468bd3d473bd9436abde4e06b870a3eca26cd79" translate="yes" xml:space="preserve">
          <source>Create machines on &lt;a href=&quot;http://softlayer.com&quot;&gt;Softlayer&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://softlayer.com&quot;&gt;Softlayerで&lt;/a&gt;マシンを作成します。</target>
        </trans-unit>
        <trans-unit id="85ee6dab3b298d00313f7acf524f1850b6c691f2" translate="yes" xml:space="preserve">
          <source>Create machines on &lt;a href=&quot;http://www.openstack.org/software/&quot;&gt;OpenStack&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.openstack.org/software/&quot;&gt;OpenStackで&lt;/a&gt;マシンを作成する</target>
        </trans-unit>
        <trans-unit id="73163c97d746a6bb18b4120c6ce20aca91a02238" translate="yes" xml:space="preserve">
          <source>Create machines on &lt;a href=&quot;http://www.rackspace.com/cloud&quot;&gt;Rackspace cloud&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.rackspace.com/cloud&quot;&gt;Rackspaceクラウドで&lt;/a&gt;マシンを作成する</target>
        </trans-unit>
        <trans-unit id="7f16b76b7923c17e31dae7ae5ec8c54e8bb79ba9" translate="yes" xml:space="preserve">
          <source>Create machines on &lt;a href=&quot;https://aws.amazon.com&quot;&gt;Amazon Web Services&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://aws.amazon.com&quot;&gt;アマゾンウェブサービスで&lt;/a&gt;マシンを作成します。</target>
        </trans-unit>
        <trans-unit id="61d526bc5a920300982b2a81c274ffe701b03321" translate="yes" xml:space="preserve">
          <source>Create machines on &lt;a href=&quot;https://cloud.google.com/compute/&quot;&gt;Google Compute Engine&lt;/a&gt;. You need a Google account and a project ID. See &lt;a href=&quot;https://cloud.google.com/compute/docs/projects&quot;&gt;https://cloud.google.com/compute/docs/projects&lt;/a&gt; for details on projects.</source>
          <target state="translated">&lt;a href=&quot;https://cloud.google.com/compute/&quot;&gt;Google Compute Engineで&lt;/a&gt;マシンを作成します。GoogleアカウントとプロジェクトIDが必要です。参照してください&lt;a href=&quot;https://cloud.google.com/compute/docs/projects&quot;&gt;https://cloud.google.com/compute/docs/projects&lt;/a&gt;プロジェクトの詳細については、を。</target>
        </trans-unit>
        <trans-unit id="f5c612d63df19300ece6fe87abf701eb62abf032" translate="yes" xml:space="preserve">
          <source>Create machines on &lt;a href=&quot;https://www.exoscale.com/&quot;&gt;Exoscale&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.exoscale.com/&quot;&gt;Exoscaleで&lt;/a&gt;マシンを作成します。</target>
        </trans-unit>
        <trans-unit id="7a9e4ab4d7459c562e540cdfd7cdfdc48858d91b" translate="yes" xml:space="preserve">
          <source>Create machines on &lt;a href=&quot;https://www.linode.com&quot;&gt;Linode&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.linode.com&quot;&gt;Linodeで&lt;/a&gt;マシンを作成します。</target>
        </trans-unit>
        <trans-unit id="a3122e02a4ef3539078535297dddb59833f592af" translate="yes" xml:space="preserve">
          <source>Create machines on &lt;a href=&quot;https://www.openstack.org/software/&quot;&gt;OpenStack&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.openstack.org/software/&quot;&gt;OpenStackで&lt;/a&gt;マシンを作成する</target>
        </trans-unit>
        <trans-unit id="2db6088e31b93a96771b03bd1c596a4c931bded4" translate="yes" xml:space="preserve">
          <source>Create second database</source>
          <target state="translated">2つ目のデータベースを作成</target>
        </trans-unit>
        <trans-unit id="7aa79dde40e53ea43ccae03eb993840c0c855528" translate="yes" xml:space="preserve">
          <source>Create services requesting Generic Resources</source>
          <target state="translated">汎用リソースを要求するサービスを作成する</target>
        </trans-unit>
        <trans-unit id="10a29c2fddcd33c74102df4acd0447c73c303b38" translate="yes" xml:space="preserve">
          <source>Create services using templates</source>
          <target state="translated">テンプレートを使ってサービスを作る</target>
        </trans-unit>
        <trans-unit id="8883c00ccd5572eb15ddd1a0b30d7cc2f75e9287" translate="yes" xml:space="preserve">
          <source>Create special files using mknod(2).</source>
          <target state="translated">mknod(2)を使用して特殊なファイルを作成。</target>
        </trans-unit>
        <trans-unit id="f35c99777e26ab83c67386816641c33372aec8c8" translate="yes" xml:space="preserve">
          <source>Create swarm routing-mesh network</source>
          <target state="translated">スウォームルーティングメッシュネットワークの作成</target>
        </trans-unit>
        <trans-unit id="23aa664e9535105ce7d92523e4b4a9434ec81a56" translate="yes" xml:space="preserve">
          <source>Create the Django project by running the &lt;a href=&quot;../reference/run/index&quot;&gt;docker-compose run&lt;/a&gt; command as follows.</source>
          <target state="translated">次のように&lt;a href=&quot;../reference/run/index&quot;&gt;docker-compose run&lt;/a&gt;コマンドを実行して、Djangoプロジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="5f3402d2a1e28ada47eeeea46f6a056be4e7d3d8" translate="yes" xml:space="preserve">
          <source>Create the MySQL service. The MySQL service has the following characteristics:</source>
          <target state="translated">MySQL サービスを作成します。MySQLサービスには以下のような特徴があります。</target>
        </trans-unit>
        <trans-unit id="35f7ea88c737bee2a5ae01c56af59f92e9a0128b" translate="yes" xml:space="preserve">
          <source>Create the client certificates</source>
          <target state="translated">クライアント証明書の作成</target>
        </trans-unit>
        <trans-unit id="049e17b3e3386b47f4997ad013a4914a0ce7a6f5" translate="yes" xml:space="preserve">
          <source>Create the new password and store it as a secret named &lt;code&gt;mysql_password_v2&lt;/code&gt;.</source>
          <target state="translated">新しいパスワードを作成し、それを &lt;code&gt;mysql_password_v2&lt;/code&gt; という名前のシークレットとして保存します。</target>
        </trans-unit>
        <trans-unit id="108790e55117c532b044f0c51ca238d2f194f746" translate="yes" xml:space="preserve">
          <source>Create this Dockerfile:</source>
          <target state="translated">このDockerfileを作成します。</target>
        </trans-unit>
        <trans-unit id="3721a18ebe3614603c7dd4beffa1b483545620c7" translate="yes" xml:space="preserve">
          <source>Create three secrets, representing the key, the certificate, and the &lt;code&gt;site.conf&lt;/code&gt;. You can store any file as a secret as long as it is smaller than 500 KB. This allows you to decouple the key, certificate, and configuration from the services that use them. In each of these commands, the last argument represents the path to the file to read the secret from on the host machine&amp;rsquo;s filesystem. In these examples, the secret name and the file name are the same.</source>
          <target state="translated">キー、証明書、および &lt;code&gt;site.conf&lt;/code&gt; を表す3つのシークレットを作成します。ファイルが500 KB未満であれば、任意のファイルをシークレットとして保存できます。これにより、キー、証明書、および構成を、それらを使用するサービスから切り離すことができます。これらの各コマンドの最後の引数は、ホストマシンのファイルシステムでシークレットを読み取るファイルへのパスを表します。これらの例では、シークレット名とファイル名は同じです。</target>
        </trans-unit>
        <trans-unit id="4486b9e187758ccaa0d1c36dbafd70268d7d27ca" translate="yes" xml:space="preserve">
          <source>Create time</source>
          <target state="translated">時間の作成</target>
        </trans-unit>
        <trans-unit id="fbe4163ac227f8a432e98459e1f9dda0f91192a0" translate="yes" xml:space="preserve">
          <source>Create two more files, &lt;code&gt;requirements.txt&lt;/code&gt; and &lt;code&gt;app.py&lt;/code&gt;, and put them in the same folder with the &lt;code&gt;Dockerfile&lt;/code&gt;. This completes our app, which as you can see is quite simple. When the above &lt;code&gt;Dockerfile&lt;/code&gt; is built into an image, &lt;code&gt;app.py&lt;/code&gt; and &lt;code&gt;requirements.txt&lt;/code&gt; is present because of that &lt;code&gt;Dockerfile&lt;/code&gt;&amp;rsquo;s &lt;code&gt;COPY&lt;/code&gt; command, and the output from &lt;code&gt;app.py&lt;/code&gt; is accessible over HTTP thanks to the &lt;code&gt;EXPOSE&lt;/code&gt; command.</source>
          <target state="translated">さらに2つのファイル &lt;code&gt;requirements.txt&lt;/code&gt; と &lt;code&gt;app.py&lt;/code&gt; を作成し、それらを &lt;code&gt;Dockerfile&lt;/code&gt; と同じフォルダーに配置します。これでアプリが完成しました。ご覧のとおり、これは非常にシンプルです。上記の &lt;code&gt;Dockerfile&lt;/code&gt; がイメージに組み込まれている場合、その &lt;code&gt;Dockerfile&lt;/code&gt; の &lt;code&gt;COPY&lt;/code&gt; コマンドが原因で &lt;code&gt;app.py&lt;/code&gt; および &lt;code&gt;requirements.txt&lt;/code&gt; が存在し、 &lt;code&gt;EXPOSE&lt;/code&gt; コマンドにより &lt;code&gt;app.py&lt;/code&gt; からの出力にHTTP 経由でアクセスできます。</target>
        </trans-unit>
        <trans-unit id="d8a73f83be3fff2b74b9a3199cfc9d44a40faf39" translate="yes" xml:space="preserve">
          <source>Create two secrets, representing the key and the certificate. You can store any file as a secret as long as it is smaller than 500 KB. This allows you to decouple the key and certificate from the services that use them. In these examples, the secret name and the file name are the same.</source>
          <target state="translated">鍵と証明書を表す2つの秘密を作成します。500 KB 未満のファイルであれば、どのようなファイルでもシークレットとして保存できます。これにより、鍵と証明書を使用するサービスから切り離すことができます。これらの例では、シークレット名とファイル名は同じです。</target>
        </trans-unit>
        <trans-unit id="58e376a2cd068270eb67da453726573c42d1e514" translate="yes" xml:space="preserve">
          <source>Create your swarm</source>
          <target state="translated">あなたの群を作成します。</target>
        </trans-unit>
        <trans-unit id="09f1ac995e432fb7414ac73ebbceb487c823dfaa" translate="yes" xml:space="preserve">
          <source>Created services do not always run right away. A service can be in a pending state if its image is unavailable, if no node meets the requirements you configure for the service, or other reasons. See &lt;a href=&quot;../how-swarm-mode-works/services/index#pending-services&quot;&gt;Pending services&lt;/a&gt; for more information.</source>
          <target state="translated">作成されたサービスは、すぐに実行されるとは限りません。イメージが利用できない場合、サービスに対して構成した要件を満たすノードがない場合、またはその他の理由により、サービスは保留状態になる可能性があります。詳細については、&lt;a href=&quot;../how-swarm-mode-works/services/index#pending-services&quot;&gt;保留中のサービス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1cc0293d8ee752b3dd004a542614e81946b72c4c" translate="yes" xml:space="preserve">
          <source>Creates a Boot2Docker virtual machine locally on your Windows machine using Hyper-V.</source>
          <target state="translated">Hyper-Vを使用してWindowsマシン上にBoot2Docker仮想マシンをローカルに作成します。</target>
        </trans-unit>
        <trans-unit id="06ad3c9fcdf4505c8fd19beb153fd0401f191ebd" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;context&lt;/code&gt;. This allows you to quickly switch the cli configuration to connect to different clusters or single nodes.</source>
          <target state="translated">新しい &lt;code&gt;context&lt;/code&gt; 作成します。これにより、CLI構成をすばやく切り替えて、異なるクラスターまたは単一ノードに接続できます。</target>
        </trans-unit>
        <trans-unit id="31fad037f8e2341bfe0f409639bfb24cee6e904f" translate="yes" xml:space="preserve">
          <source>Creates a new docker host.</source>
          <target state="translated">新しいdockerホストを作成します。</target>
        </trans-unit>
        <trans-unit id="9a5f7caddfdf53feeda5d1109da9a4d38946d999" translate="yes" xml:space="preserve">
          <source>Creates a new network. The &lt;code&gt;DRIVER&lt;/code&gt; accepts &lt;code&gt;bridge&lt;/code&gt; or &lt;code&gt;overlay&lt;/code&gt; which are the built-in network drivers. If you have installed a third party or your own custom network driver you can specify that &lt;code&gt;DRIVER&lt;/code&gt; here also. If you don&amp;rsquo;t specify the &lt;code&gt;--driver&lt;/code&gt; option, the command automatically creates a &lt;code&gt;bridge&lt;/code&gt; network for you. When you install Docker Engine it creates a &lt;code&gt;bridge&lt;/code&gt; network automatically. This network corresponds to the &lt;code&gt;docker0&lt;/code&gt; bridge that Engine has traditionally relied on. When you launch a new container with &lt;code&gt;docker run&lt;/code&gt; it automatically connects to this bridge network. You cannot remove this default bridge network, but you can create new ones using the &lt;code&gt;network create&lt;/code&gt; command.</source>
          <target state="translated">新しいネットワークを作成します。 &lt;code&gt;DRIVER&lt;/code&gt; 受け付け &lt;code&gt;bridge&lt;/code&gt; または &lt;code&gt;overlay&lt;/code&gt; 内蔵のネットワークドライバです。サードパーティまたは独自のカスタムネットワークドライバをインストールしている場合は、その指定することができます &lt;code&gt;DRIVER&lt;/code&gt; ここにも。 &lt;code&gt;--driver&lt;/code&gt; オプションを指定しない場合、コマンドは自動的に &lt;code&gt;bridge&lt;/code&gt; ネットワークを作成します。 Docker Engineをインストールすると、 &lt;code&gt;bridge&lt;/code&gt; ネットワークが自動的に作成されます。このネットワークは、エンジンが伝統的に依存してきた &lt;code&gt;docker0&lt;/code&gt; ブリッジに対応しています。 &lt;code&gt;docker run&lt;/code&gt; で新しいコンテナーを起動するときこのブリッジネットワークに自動的に接続します。このデフォルトのブリッジネットワークは削除できませんが、 &lt;code&gt;network create&lt;/code&gt; コマンドを使用して新しいネットワークを作成できます。</target>
        </trans-unit>
        <trans-unit id="01a3b4ce161207a9793326499bd80a6914d65d89" translate="yes" xml:space="preserve">
          <source>Creates a new volume that containers can consume and store data in. If a name is not specified, Docker generates a random name.</source>
          <target state="translated">コンテナがデータを消費して保存できる新しいボリュームを作成します。名前が指定されていない場合、Dockerはランダムな名前を生成します。</target>
        </trans-unit>
        <trans-unit id="5bc69cc247b1b1c7419c09b74786e2b484237e3c" translate="yes" xml:space="preserve">
          <source>Creates a plugin. Before creating the plugin, prepare the plugin&amp;rsquo;s root filesystem as well as &lt;a href=&quot;../../../extend/config/index&quot;&gt;the config.json&lt;/a&gt;</source>
          <target state="translated">プラグインを作成します。プラグインを作成する前に、プラグインのルートファイルシステムと&lt;a href=&quot;../../../extend/config/index&quot;&gt;config.jsonを&lt;/a&gt;準備します</target>
        </trans-unit>
        <trans-unit id="2c0c67ccc45d0650563cf06c791fb98759b4cc5b" translate="yes" xml:space="preserve">
          <source>Creates a secret using standard input or from a file for the secret content. You must run this command on a manager node.</source>
          <target state="translated">標準入力を使用して、または秘密の内容のファイルから秘密を作成します。このコマンドは、マネージャ・ノードで実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="94f0b5f68b9f400f6468d2055d2b4f105e296212" translate="yes" xml:space="preserve">
          <source>Creates a service as described by the specified parameters. You must run this command on a manager node.</source>
          <target state="translated">指定されたパラメータで記述されたサービスを作成します。このコマンドは、マネージャ・ノードで実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="0f37b9da31b0c5901a375a4e7d524f45bf5f5c41" translate="yes" xml:space="preserve">
          <source>Creates machines locally on &lt;a href=&quot;http://www.vmware.com/products/fusion&quot;&gt;VMware Fusion&lt;/a&gt;. Requires VMware Fusion to be installed.</source>
          <target state="translated">&lt;a href=&quot;http://www.vmware.com/products/fusion&quot;&gt;VMware Fusion&lt;/a&gt;でローカルにマシンを作成します。VMware Fusionをインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="5e1956213b448bdcbccb31a10b995557df821f4a" translate="yes" xml:space="preserve">
          <source>Creates machines locally on &lt;a href=&quot;https://www.vmware.com/products/fusion&quot;&gt;VMware Fusion&lt;/a&gt;. Requires VMware Fusion to be installed.</source>
          <target state="translated">上でローカルマシンを作成します&lt;a href=&quot;https://www.vmware.com/products/fusion&quot;&gt;VMware Fusionの&lt;/a&gt;。VMwareFusionがインストールされている必要があります。</target>
        </trans-unit>
        <trans-unit id="dd088c2100115936fa0084c0d700784a083ba767" translate="yes" xml:space="preserve">
          <source>Creates machines on &lt;a href=&quot;http://vcloud.vmware.com&quot;&gt;vCloud Air&lt;/a&gt; subscription service. You need an account within an existing subscription of vCloud Air VPC or Dedicated Cloud.</source>
          <target state="translated">&lt;a href=&quot;http://vcloud.vmware.com&quot;&gt;vCloud Air&lt;/a&gt;サブスクリプションサービスでマシンを作成します。vCloud Air VPCまたは専用クラウドの既存のサブスクリプション内のアカウントが必要です。</target>
        </trans-unit>
        <trans-unit id="e0f304a0ba7e44720bd6595c6936c6ee1ecb1664" translate="yes" xml:space="preserve">
          <source>Creates machines on &lt;a href=&quot;https://vcloud.vmware.com&quot;&gt;vCloud Air&lt;/a&gt; subscription service. You need an account within an existing subscription of vCloud Air VPC or Dedicated Cloud.</source>
          <target state="translated">&lt;a href=&quot;https://vcloud.vmware.com&quot;&gt;vCloudAir&lt;/a&gt;サブスクリプションサービスでマシンを作成します。vCloud AirVPCまたはDedicatedCloudの既存のサブスクリプション内にアカウントが必要です。</target>
        </trans-unit>
        <trans-unit id="2b040600179da3f91beffed8cef26c279c4da872" translate="yes" xml:space="preserve">
          <source>Creates machines on a &lt;a href=&quot;http://www.vmware.com/products/vsphere&quot;&gt;VMware vSphere&lt;/a&gt; Virtual Infrastructure. The machine must have a working vSphere ESXi installation. You can use a paid license or free 60 day trial license. Your installation may also include an optional VCenter server.</source>
          <target state="translated">&lt;a href=&quot;http://www.vmware.com/products/vsphere&quot;&gt;VMware vSphere&lt;/a&gt; Virtual Infrastructureにマシンを作成します。マシンにvSphere ESXiがインストールされている必要があります。有料ライセンスまたは60日間の無料試用ライセンスを使用できます。インストールには、オプションのVCenterサーバーが含まれる場合もあります。</target>
        </trans-unit>
        <trans-unit id="0c1e2fef7ec3de1bf309cf9295e75e6080300fb5" translate="yes" xml:space="preserve">
          <source>Creates machines on a &lt;a href=&quot;https://www.vmware.com/products/vsphere&quot;&gt;VMware vSphere&lt;/a&gt; Virtual Infrastructure. The machine must have a working vSphere ESXi installation. You can use a paid license or free 60 day trial license. Your installation may also include an optional VCenter server.</source>
          <target state="translated">&lt;a href=&quot;https://www.vmware.com/products/vsphere&quot;&gt;VMwarevSphere&lt;/a&gt;仮想インフラストラクチャ上にマシンを作成します。マシンには、動作するvSphereESXiがインストールされている必要があります。有料ライセンスまたは60日間の無料トライアルライセンスを使用できます。インストールには、オプションのVCenterサーバーが含まれる場合もあります。</target>
        </trans-unit>
        <trans-unit id="ceb36cdbe0ce0d03d93791c2afa69d0f83f047b9" translate="yes" xml:space="preserve">
          <source>Creating Delegation Keys</source>
          <target state="translated">委任キーの作成</target>
        </trans-unit>
        <trans-unit id="346b96dd2a298e8e4e58d8d7fd5ea860bb5196d8" translate="yes" xml:space="preserve">
          <source>Creating the plugin</source>
          <target state="translated">プラグインの作成</target>
        </trans-unit>
        <trans-unit id="572c87b0f7af9ef5b0d44e74f5689d36c33bf38c" translate="yes" xml:space="preserve">
          <source>Credential helper protocol</source>
          <target state="translated">クレデンシャルヘルパープロトコル</target>
        </trans-unit>
        <trans-unit id="50eff9046add9e39454939a3b21539f8d83ef2d8" translate="yes" xml:space="preserve">
          <source>Credential helpers</source>
          <target state="translated">資格ヘルパー</target>
        </trans-unit>
        <trans-unit id="9b0e43a5d170812e639cd468740b6ffe7214476a" translate="yes" xml:space="preserve">
          <source>Credential helpers are similar to the credential store above, but act as the designated programs to handle credentials for &lt;em&gt;specific registries&lt;/em&gt;. The default credential store (&lt;code&gt;credsStore&lt;/code&gt; or the config file itself) will not be used for operations concerning credentials of the specified registries.</source>
          <target state="translated">資格情報ヘルパーは上記の資格情報ストアに似ていますが、&lt;em&gt;特定のレジストリの&lt;/em&gt;資格情報を処理するための指定されたプログラムとして機能します。デフォルトの資格情報ストア（ &lt;code&gt;credsStore&lt;/code&gt; または構成ファイル自体）は、指定されたレジストリーの資格情報に関する操作には使用されません。</target>
        </trans-unit>
        <trans-unit id="ae3d12aa496b774388ec30a2c753188ca35bf250" translate="yes" xml:space="preserve">
          <source>Credential helpers are specified in a similar way to &lt;code&gt;credsStore&lt;/code&gt;, but allow for multiple helpers to be configured at a time. Keys specify the registry domain, and values specify the suffix of the program to use (i.e. everything after &lt;code&gt;docker-credential-&lt;/code&gt;). For example:</source>
          <target state="translated">資格情報ヘルパーは &lt;code&gt;credsStore&lt;/code&gt; と同様の方法で指定されますが、一度に複数のヘルパーを構成できます。キーはレジストリドメインを指定し、値は使用するプログラムのサフィックス（つまり &lt;code&gt;docker-credential-&lt;/code&gt; の後のすべて）を指定します。例えば：</target>
        </trans-unit>
        <trans-unit id="61c25bc38a2e80c3955be63adb2e3e0697e9d0bf" translate="yes" xml:space="preserve">
          <source>Credential helpers can be any program or script that follows a very simple protocol. This protocol is heavily inspired by Git, but it differs in the information shared.</source>
          <target state="translated">クレデンシャルヘルパーは、非常にシンプルなプロトコルに従うプログラムやスクリプトになります。このプロトコルはGitに大きく影響を受けていますが、共有する情報が異なります。</target>
        </trans-unit>
        <trans-unit id="13fd7f7900c5dda9777460fab327589eef71ed3b" translate="yes" xml:space="preserve">
          <source>Credential spec files are applied at runtime, eliminating the need for host-based credential spec files or registry entries - no gMSA credentials are written to disk on worker nodes. You can make credential specs available to Docker Engine running swarm kit worker nodes before a container starts. When deploying a service using a gMSA-based config, the credential spec is passed directly to the runtime of containers in that service.</source>
          <target state="translated">クレデンシャル仕様ファイルは実行時に適用されるため、ホストベースのクレデンシャル仕様ファイルやレジストリエントリが不要になり、ワーカーノード上でgMSAクレデンシャルがディスクに書き込まれることはありません。コンテナが起動する前に、スウォームキットのワーカーノードを実行しているDocker Engineでクレデンシャル仕様を利用できるようにすることができます。gMSAベースの設定を使用してサービスをデプロイする場合、クレデンシャルスペックはそのサービス内のコンテナのランタイムに直接渡されます。</target>
        </trans-unit>
        <trans-unit id="1af441562a2e5c4afa1cc0f0016af18589bd06e5" translate="yes" xml:space="preserve">
          <source>Credential spec for managed service account (Windows only)</source>
          <target state="translated">管理サービスアカウントのクレデンシャル仕様(Windowsのみ</target>
        </trans-unit>
        <trans-unit id="dd097a229701c1db23e0a192b0e48637872c75b8" translate="yes" xml:space="preserve">
          <source>Credentials</source>
          <target state="translated">Credentials</target>
        </trans-unit>
        <trans-unit id="767fa29a267eb555ad1ebba7510eb40a7b8b4bcc" translate="yes" xml:space="preserve">
          <source>Credentials store</source>
          <target state="translated">クレデンシャルストア</target>
        </trans-unit>
        <trans-unit id="8e4859c8b5edd9f7a9653432d175e11b29d37990" translate="yes" xml:space="preserve">
          <source>Current state of the task</source>
          <target state="translated">課題の現状</target>
        </trans-unit>
        <trans-unit id="9089cebd2b01ef40e141969560b50dbc41018cbc" translate="yes" xml:space="preserve">
          <source>Current versions of Docker include &lt;em&gt;swarm mode&lt;/em&gt; for natively managing a cluster of Docker Engines called a &lt;em&gt;swarm&lt;/em&gt;. Use the Docker CLI to create a swarm, deploy application services to a swarm, and manage swarm behavior.</source>
          <target state="translated">Dockerの現在のバージョンには、&lt;em&gt;スウォーム&lt;/em&gt;と呼ばれるDockerエンジンのクラスターをネイティブに管理するための&lt;em&gt;スウォームモード&lt;/em&gt;が含まれてい&lt;em&gt;ます&lt;/em&gt;。Docker CLIを使用して、スウォームを作成し、アプリケーションサービスをスウォームにデプロイし、スウォームの動作を管理します。</target>
        </trans-unit>
        <trans-unit id="27fd9c8d7cced70d9569ac86ea4587dd31b200a0" translate="yes" xml:space="preserve">
          <source>Currently Docker supports authorization, volume and network driver plugins. In the future it will support additional plugin types.</source>
          <target state="translated">現在Dockerは認可、ボリューム、ネットワークドライバのプラグインをサポートしています。将来的には追加のプラグインタイプをサポートする予定です。</target>
        </trans-unit>
        <trans-unit id="4081ae0c6ddced73e2afc6312874155a886aaff9" translate="yes" xml:space="preserve">
          <source>Currently supported sysctls</source>
          <target state="translated">現在サポートされている sysctls</target>
        </trans-unit>
        <trans-unit id="47830fbe2c44c9d9b94e705b642eae728284cd29" translate="yes" xml:space="preserve">
          <source>Currently, content trust is disabled by default in the Docker Client. To enable it, set the &lt;code&gt;DOCKER_CONTENT_TRUST&lt;/code&gt; environment variable to &lt;code&gt;1&lt;/code&gt;. This prevents users from working with tagged images unless they contain a signature.</source>
          <target state="translated">現在、コンテンツの信頼は、Dockerクライアントではデフォルトで無効になっています。これを有効にするには、 &lt;code&gt;DOCKER_CONTENT_TRUST&lt;/code&gt; 環境変数を &lt;code&gt;1&lt;/code&gt; に設定します。これにより、ユーザーが署名を含まない限り、タグ付きの画像を操作できなくなります。</target>
        </trans-unit>
        <trans-unit id="e1110f65aee995b0ee76f04363bcbd01b1f7f9c6" translate="yes" xml:space="preserve">
          <source>Currently, there is no &lt;code&gt;docker-machine create&lt;/code&gt; driver for HyperKit, so use the &lt;code&gt;virtualbox&lt;/code&gt; driver to create local machines. (See the &lt;a href=&quot;../drivers/virtualbox/index&quot;&gt;Docker Machine driver for Oracle VirtualBox&lt;/a&gt;.) You can run both HyperKit and Oracle VirtualBox on the same system. To learn more, see &lt;a href=&quot;https://docs.docker.com/docker-for-mac/docker-toolbox/&quot;&gt;Docker Desktop for Mac vs. Docker Toolbox&lt;/a&gt;.</source>
          <target state="translated">現在、HyperKitにはdocker &lt;code&gt;docker-machine create&lt;/code&gt; ドライバーがないため、 &lt;code&gt;virtualbox&lt;/code&gt; ドライバーを使用してローカルマシンを作成します。（&lt;a href=&quot;../drivers/virtualbox/index&quot;&gt;Oracle VirtualBoxのDocker Machineドライバーを&lt;/a&gt;参照してください。）同じシステムでHyperKitとOracle VirtualBoxの両方を実行できます。詳しくは、&lt;a href=&quot;https://docs.docker.com/docker-for-mac/docker-toolbox/&quot;&gt;Docker Desktop for MacとDocker Toolboxを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="cb7b0f1a420304ce3134a12e4747bb3796354c68" translate="yes" xml:space="preserve">
          <source>Currently, you can modify the &lt;code&gt;docker&lt;/code&gt; command behavior using environment variables or command-line options. You can also use options within &lt;code&gt;config.json&lt;/code&gt; to modify some of the same behavior. When using these mechanisms, you must keep in mind the order of precedence among them. Command line options override environment variables and environment variables override properties you specify in a &lt;code&gt;config.json&lt;/code&gt; file.</source>
          <target state="translated">現在、環境変数またはコマンドラインオプションを使用して、 &lt;code&gt;docker&lt;/code&gt; コマンドの動作を変更できます。 &lt;code&gt;config.json&lt;/code&gt; 内のオプションを使用して、同じ動作の一部を変更することもできます。これらのメカニズムを使用するときは、それらの間の優先順位を覚えておく必要があります。コマンドラインオプションは環境変数をオーバーライドし、環境変数は &lt;code&gt;config.json&lt;/code&gt; ファイルで指定したプロパティをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="be94cef1027d7d14da80a85ed68f14cbd86aac92" translate="yes" xml:space="preserve">
          <source>Currently, you cannot use Docker Desktop for Mac or Docker Desktop for Windows alone to test a &lt;em&gt;multi-node&lt;/em&gt; swarm. However, you can use the included version of &lt;a href=&quot;../../../machine/overview/index&quot;&gt;Docker Machine&lt;/a&gt; to create the swarm nodes (see &lt;a href=&quot;../../../machine/get-started/index&quot;&gt;Get started with Docker Machine and a local VM&lt;/a&gt;), then follow the tutorial for all multi-node features. For this scenario, you run commands from a Docker Desktop for Mac or Docker Desktop for Windows host, but that Docker host itself is &lt;em&gt;not&lt;/em&gt; participating in the swarm. After you create the nodes, you can run all swarm commands as shown from the Mac terminal or Windows PowerShell with Docker Desktop for Mac or Docker Desktop for Windows running.</source>
          <target state="translated">現在、Docker Desktop for MacまたはDocker Desktop for Windowsだけを使用して&lt;em&gt;マルチノード&lt;/em&gt;スウォームをテストすることはできません。ただし、付属のバージョンの&lt;a href=&quot;../../../machine/overview/index&quot;&gt;Docker Machine&lt;/a&gt;を使用してスウォームノードを作成し（&lt;a href=&quot;../../../machine/get-started/index&quot;&gt;Docker MachineとローカルVMの使用を開始するを&lt;/a&gt;参照）、すべてのマルチノード機能のチュートリアルに従ってください。このシナリオでは、Mac用のDockerデスクトップまたはWindows用のDockerデスクトップホストからコマンドを実行しますが、そのDockerホスト自体はスウォームに参加して&lt;em&gt;いません&lt;/em&gt;。ノードを作成した後、Mac端末またはWindows PowerShellから、Docker Desktop for MacまたはDocker Desktop for Windowsを実行した状態で、すべてのswarmコマンドを実行できます。</target>
        </trans-unit>
        <trans-unit id="d2c0d790d0bfdef976a124c747237a8aee3867cf" translate="yes" xml:space="preserve">
          <source>Custom AMI and SSH username</source>
          <target state="translated">カスタムAMIとSSHユーザ名</target>
        </trans-unit>
        <trans-unit id="100ac3f5746d5d0530f76861f4339cfa92d98c1e" translate="yes" xml:space="preserve">
          <source>Custom DNS search domains. Can be a single value or a list.</source>
          <target state="translated">カスタムDNS検索ドメイン。単一の値またはリストにすることができます。</target>
        </trans-unit>
        <trans-unit id="0151dc3cdbf422982bde8c987d7f7239bdf0412d" translate="yes" xml:space="preserve">
          <source>Custom DNS servers. Can be a single value or a list.</source>
          <target state="translated">カスタムDNSサーバー。単一の値またはリストにすることができます。</target>
        </trans-unit>
        <trans-unit id="1cbf505cb5ae88e20e2b75971982b1d7fee785d9" translate="yes" xml:space="preserve">
          <source>Custom Dockerfile implementation allows you to:</source>
          <target state="translated">カスタムDockerfileの実装では、以下のようなことができます。</target>
        </trans-unit>
        <trans-unit id="88db904dbc6313028d188c3431262ec1ca745d4d" translate="yes" xml:space="preserve">
          <source>Custom root Certificate Authority for Registry</source>
          <target state="translated">レジストリのカスタムルート認証局</target>
        </trans-unit>
        <trans-unit id="8dfd1aed1794d0463377f145a366071637a21275" translate="yes" xml:space="preserve">
          <source>Custom security group</source>
          <target state="translated">カスタムセキュリティグループ</target>
        </trans-unit>
        <trans-unit id="ae607f169f00105c98f577bd5dc1b1c41972f9b5" translate="yes" xml:space="preserve">
          <source>Customers of Docker Enterprise Edition run a stable, commercially-supported version of Docker Engine, and as an add-on they get our first-class management software, Docker Datacenter. You can manage every aspect of your application through the interface using Universal Control Plane, run a private image registry with Docker Trusted Registry, integrate with your LDAP provider, sign production images with Docker Content Trust, and many other features.</source>
          <target state="translated">Docker Enterprise Editionをお使いのお客様は、安定した商用サポート版のDocker Engineを実行し、アドオンとして当社のファーストクラスの管理ソフトウェアであるDocker Datacenterを入手することができます。Universal Control Planeを使用したインターフェースによるアプリケーションのあらゆる側面の管理、Docker Trusted Registryを使用したプライベートイメージレジストリの実行、LDAPプロバイダとの統合、Docker Content Trustを使用したプロダクションイメージへの署名など、多くの機能を利用することができます。</target>
        </trans-unit>
        <trans-unit id="48b0e7cd97ad2f0a9a84c790c5b344a3d0d9b9d5" translate="yes" xml:space="preserve">
          <source>Customize a service&amp;rsquo;s isolation mode</source>
          <target state="translated">サービスの分離モードをカスタマイズする</target>
        </trans-unit>
        <trans-unit id="44599269a95ae3f9a3c03eac6e1bc420a2643f9a" translate="yes" xml:space="preserve">
          <source>D-Bus Secret Service: https://github.com/docker/docker-credential-helpers/releases</source>
          <target state="translated">Dバスシークレットサービス https://github.com/docker/docker-credential-helpers/releases</target>
        </trans-unit>
        <trans-unit id="075b4a95e8c47ed7f2dfdb5df9a1d8b43f582990" translate="yes" xml:space="preserve">
          <source>DAB file</source>
          <target state="translated">DABファイル</target>
        </trans-unit>
        <trans-unit id="3d2463fb0ec9034d839ac7d59a6a2537ebc0f169" translate="yes" xml:space="preserve">
          <source>DAC_OVERRIDE</source>
          <target state="translated">DAC_OVERRIDE</target>
        </trans-unit>
        <trans-unit id="adf655b5664e5476ae1a4f6296573e9540cca701" translate="yes" xml:space="preserve">
          <source>DAC_READ_SEARCH</source>
          <target state="translated">DAC_READ_SEARCH</target>
        </trans-unit>
        <trans-unit id="f8d09d2312b4b561137aa82dd85a15d5e54949e7" translate="yes" xml:space="preserve">
          <source>DB storage example:</source>
          <target state="translated">DBストレージの例。</target>
        </trans-unit>
        <trans-unit id="62f1da82a36956513704610758c0773de15fbc73" translate="yes" xml:space="preserve">
          <source>DCT does not verify that a running container&amp;rsquo;s filesystem has not been altered from what was in the image. For example, it does not prevent a container from writing to the filesystem, once the container is running, nor does it prevent the container&amp;rsquo;s filesystem from being altered on disk. DCT will also not prevent unsigned images from being imported, loaded, or created.</source>
          <target state="translated">DCTは、実行中のコンテナーのファイルシステムがイメージ内のものから変更されていないことを確認しません。たとえば、コンテナが実行されると、コンテナがファイルシステムに書き込むのを妨げたり、ディスク上でコンテナのファイルシステムが変更されたりするのを防ぎません。DCTは、署名されていないイメージのインポート、ロード、作成を妨げません。</target>
        </trans-unit>
        <trans-unit id="d5d1fe1fb36ec3406338802addf876e51617baee" translate="yes" xml:space="preserve">
          <source>DCT is associated with the &lt;code&gt;TAG&lt;/code&gt; portion of an image. Each image repository has a set of keys that image publishers use to sign an image tag. Image publishers have discretion on which tags they sign.</source>
          <target state="translated">DCTは、イメージの &lt;code&gt;TAG&lt;/code&gt; 部分に関連付けられています。各画像リポジトリには、画像発行元が画像タグに署名するために使用する一連のキーがあります。画像発行者は、どのタグに署名するかについての裁量があります。</target>
        </trans-unit>
        <trans-unit id="08ebf767f3e0485c33c91186c567476a23890029" translate="yes" xml:space="preserve">
          <source>DCT is controlled by the Docker Engine&amp;rsquo;s configuration file. By default this is found at &lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;. More details on this file can be found &lt;a href=&quot;../../../reference/commandline/dockerd/index#daemon-configuration-file&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">DCTは、Dockerエンジンの構成ファイルによって制御されます。デフォルトでは、これは &lt;code&gt;/etc/docker/daemon.json&lt;/code&gt; にあります。このファイルの詳細については、&lt;a href=&quot;../../../reference/commandline/dockerd/index#daemon-configuration-file&quot;&gt;こちらをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="296737c1835c809024d82990900d3e5d52c80396" translate="yes" xml:space="preserve">
          <source>DNS misconfigurations can generate problems with &lt;code&gt;pip&lt;/code&gt;. You need to set your own DNS server address to make &lt;code&gt;pip&lt;/code&gt; work properly. You might want to change the DNS settings of the Docker daemon. You can edit (or create) the configuration file at &lt;code&gt;/etc/docker/daemon.json&lt;/code&gt; with the &lt;code&gt;dns&lt;/code&gt; key, as following:</source>
          <target state="translated">DNSの設定ミスにより、 &lt;code&gt;pip&lt;/code&gt; で問題が発生する場合があります。 &lt;code&gt;pip&lt;/code&gt; を正しく機能させるには、独自のDNSサーバーアドレスを設定する必要があります。DockerデーモンのDNS設定を変更したい場合があります。次のように、 &lt;code&gt;dns&lt;/code&gt; キーを使用して &lt;code&gt;/etc/docker/daemon.json&lt;/code&gt; にある構成ファイルを編集（または作成）できます。</target>
        </trans-unit>
        <trans-unit id="7cead5494dadffd261d39591bfcce95dde62edc5" translate="yes" xml:space="preserve">
          <source>DOCKER_CERT_PATH</source>
          <target state="translated">DOCKER_CERT_PATH</target>
        </trans-unit>
        <trans-unit id="fdff43b66b8bfbd2930f9e1d19d37355d869c48b" translate="yes" xml:space="preserve">
          <source>DOCKER_CONTENT_TRUST_OFFLINE_PASSPHRASE is now named DOCKER_CONTENT_TRUST_ROOT_PASSPHRASE</source>
          <target state="translated">DOCKER_CONTENT_TRUST_OFFLINE_PASSPHRASEはDOCKER_CONTENT_TRUST_ROOT_PASSPHRASEに変更されました。</target>
        </trans-unit>
        <trans-unit id="e71a1ddafbc15187f16cbaee23419484701bad26" translate="yes" xml:space="preserve">
          <source>DOCKER_CONTENT_TRUST_TAGGING_PASSPHRASE is now named DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE</source>
          <target state="translated">DOCKER_CONTENT_TRUST_TAGGING_PASSPHRASEは、DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASEという名前に変更されました。</target>
        </trans-unit>
        <trans-unit id="02709165bae45deea5d4f1dbcc6a7861b030f64e" translate="yes" xml:space="preserve">
          <source>DOCKER_HOST</source>
          <target state="translated">DOCKER_HOST</target>
        </trans-unit>
        <trans-unit id="4e7191556fb8f788a954a7325117d150a81e4416" translate="yes" xml:space="preserve">
          <source>DOCKER_TLS_VERIFY</source>
          <target state="translated">DOCKER_TLS_VERIFY</target>
        </trans-unit>
        <trans-unit id="899a3d7bf7f3a02b8c57aefbb3cda766edfdc3dc" translate="yes" xml:space="preserve">
          <source>DRBD plugin</source>
          <target state="translated">DRBDプラグイン</target>
        </trans-unit>
        <trans-unit id="efc5bc14d89eb3989b04a9a424bd8ffad65d2903" translate="yes" xml:space="preserve">
          <source>Daemon -&amp;gt; Plugin</source>
          <target state="translated">デーモン-&amp;gt;プラグイン</target>
        </trans-unit>
        <trans-unit id="170e01374aaa04ddfcf6d43180f6006e03a6d43a" translate="yes" xml:space="preserve">
          <source>Daemon DNS options</source>
          <target state="translated">デーモンDNSオプション</target>
        </trans-unit>
        <trans-unit id="1763ac0999fd3431d0ad34214bb74d73b0e8fb73" translate="yes" xml:space="preserve">
          <source>Daemon configuration file</source>
          <target state="translated">デーモン設定ファイル</target>
        </trans-unit>
        <trans-unit id="bdcf17f092d88cae35bfcc96221a3237a8aaf17a" translate="yes" xml:space="preserve">
          <source>Daemon metrics</source>
          <target state="translated">デーモンメトリクス</target>
        </trans-unit>
        <trans-unit id="c28beefa3df9cc47ca6b1c6928c72df36c2c8319" translate="yes" xml:space="preserve">
          <source>Daemon modes</source>
          <target state="translated">デーモンモード</target>
        </trans-unit>
        <trans-unit id="15010e3fd8304d53b48429bd60699b8b5a5d4bb3" translate="yes" xml:space="preserve">
          <source>Daemon socket option</source>
          <target state="translated">デーモンソケットオプション</target>
        </trans-unit>
        <trans-unit id="e4241a7fcd010bef70f651afad7b555fa19843a8" translate="yes" xml:space="preserve">
          <source>Daemon storage-driver</source>
          <target state="translated">デーモンストレージドライバ</target>
        </trans-unit>
        <trans-unit id="0cee0969d363d5c038a459352c65ce0635eab46d" translate="yes" xml:space="preserve">
          <source>Daemon user namespace options</source>
          <target state="translated">デーモンユーザ名前空間オプション</target>
        </trans-unit>
        <trans-unit id="121a37f5f85a3a162018e843c756b5a8c8364e27" translate="yes" xml:space="preserve">
          <source>Daemons</source>
          <target state="translated">Daemons</target>
        </trans-unit>
        <trans-unit id="072949f98fcdb44a858421a260964521fe183df4" translate="yes" xml:space="preserve">
          <source>Data volumes</source>
          <target state="translated">データ量</target>
        </trans-unit>
        <trans-unit id="5250c90f1902307b40ae97fd9c40a5ebbc5127cf" translate="yes" xml:space="preserve">
          <source>Data volumes are storage that exist independently of a container. The lifecycle of data volumes under swarm services is similar to that under containers. Volumes outlive tasks and services, so their removal must be managed separately. Volumes can be created before deploying a service, or if they don&amp;rsquo;t exist on a particular host when a task is scheduled there, they are created automatically according to the volume specification on the service.</source>
          <target state="translated">データボリュームは、コンテナとは独立して存在するストレージです。スウォームサービスでのデータボリュームのライフサイクルは、コンテナでのライフサイクルと同様です。ボリュームはタスクやサービスよりも長いので、削除は個別に管理する必要があります。ボリュームは、サービスをデプロイする前に作成できます。または、タスクがスケジュールされているときに特定のホストに存在しない場合は、サービスのボリューム仕様に従って自動的に作成されます。</target>
        </trans-unit>
        <trans-unit id="d9df769b266c487f912c433c67364fc569bb2078" translate="yes" xml:space="preserve">
          <source>Databases</source>
          <target state="translated">Databases</target>
        </trans-unit>
        <trans-unit id="ceea7263c52dfcc2b788001e480ee8b80b3222de" translate="yes" xml:space="preserve">
          <source>Dealing with dynamically created devices (--device-cgroup-rule)</source>
          <target state="translated">動的に作成されたデバイスの扱い (--device-cgroup-rule)</target>
        </trans-unit>
        <trans-unit id="f775329a5b94da0d8b124d7e0ac6a8c3f9336607" translate="yes" xml:space="preserve">
          <source>Debian</source>
          <target state="translated">Debian</target>
        </trans-unit>
        <trans-unit id="5367a25a69aa999b3ce10c122069b404f503c7e9" translate="yes" xml:space="preserve">
          <source>Debian 9</source>
          <target state="translated">Debian 9</target>
        </trans-unit>
        <trans-unit id="59bb0100c22f69c6fb05b7971f4898cc42672196" translate="yes" xml:space="preserve">
          <source>Debug AppArmor</source>
          <target state="translated">デバッグAppArmor</target>
        </trans-unit>
        <trans-unit id="8de98ff28fdaf7b82ad6c1a70d7f197b8522bf34" translate="yes" xml:space="preserve">
          <source>Debug the redis container by running another container that has strace in it:</source>
          <target state="translated">redisコンテナにstraceが入っている別のコンテナを実行して、redisコンテナをデバッグします。</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="925b2b94a96df73123944669d3f72d1a02a5841e" translate="yes" xml:space="preserve">
          <source>Debugging plugins</source>
          <target state="translated">プラグインのデバッグ</target>
        </trans-unit>
        <trans-unit id="55ed113c1a9eb71584f9e5ef064d9683dea9afef" translate="yes" xml:space="preserve">
          <source>Declare default environment variables in file</source>
          <target state="translated">ファイル内にデフォルトの環境変数を宣言する</target>
        </trans-unit>
        <trans-unit id="0a9083b607343d5dea600f69e8998aa8c7446d64" translate="yes" xml:space="preserve">
          <source>Decrypted Delegation Key + Decrypted Snapshot Key + Notary Service write-capable credentials</source>
          <target state="translated">復号化された委任鍵+復号化されたスナップショット鍵+公証人サービスの書き込み可能な証明書</target>
        </trans-unit>
        <trans-unit id="22f3f182c4fa9138ca7c47e7e04015d9ac519af8" translate="yes" xml:space="preserve">
          <source>Decrypted Delegation Key + Decrypted Snapshot Key, only</source>
          <target state="translated">復号化された委任鍵+復号化されたスナップショット鍵のみ</target>
        </trans-unit>
        <trans-unit id="0f05f13cc57f690f4d3626a5d3ee6a0d1dcb6999" translate="yes" xml:space="preserve">
          <source>Decrypted Delegation Key + Notary Service write-capable credentials</source>
          <target state="translated">復号化された委任鍵+公証人サービスの書き込み可能な証明書</target>
        </trans-unit>
        <trans-unit id="f68f590872f48fbf7bf7de673e48099ecda42bb2" translate="yes" xml:space="preserve">
          <source>Decrypted Delegation Key, only</source>
          <target state="translated">復号化された委任キーのみ</target>
        </trans-unit>
        <trans-unit id="614dc2a91e682005d61a514639b3b4ebcc92591b" translate="yes" xml:space="preserve">
          <source>Decrypted Root Key + none or any combination of decrypted keys + Notary Service write-capable credentials</source>
          <target state="translated">復号化されたルート鍵+復号化された鍵の組み合わせなし、または任意の組み合わせ+公証人サービスの書き込み可能な資格情報</target>
        </trans-unit>
        <trans-unit id="f2db1f598756425d85209e0b65e0e51805c0a759" translate="yes" xml:space="preserve">
          <source>Decrypted Root Key + none or any combination of decrypted keys, only</source>
          <target state="translated">復号化されたルートキー+none または復号化されたキーの任意の組み合わせ、のみ</target>
        </trans-unit>
        <trans-unit id="6adb11010fbc19c83a46949e48ef0b57c43bde49" translate="yes" xml:space="preserve">
          <source>Decrypted Targets Key + Decrypted Snapshot Key + Notary Service write-capable credentials</source>
          <target state="translated">復号化されたターゲット鍵+復号化されたスナップショット鍵+公証人サービスの書き込み可能な証明書</target>
        </trans-unit>
        <trans-unit id="067add7134101a7390466c84dd84ce476968fdde" translate="yes" xml:space="preserve">
          <source>Decrypted Targets Key + Decrypted Snapshot Key, only</source>
          <target state="translated">復号化されたターゲット鍵+復号化されたスナップショット鍵、のみ</target>
        </trans-unit>
        <trans-unit id="abceab95ead4c757abe4dd25c4299486aba6148c" translate="yes" xml:space="preserve">
          <source>Decrypted Targets Key + Notary Service write-capable credentials</source>
          <target state="translated">復号化されたターゲット鍵+公証人サービスの書き込み可能な証明書</target>
        </trans-unit>
        <trans-unit id="9f0cc8000bf70ceda9d6e07e8ed4740870d1f2c8" translate="yes" xml:space="preserve">
          <source>Decrypted Targets Key, only</source>
          <target state="translated">復号化されたターゲットキーのみ</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="0a094bef6479c0428967f2157a35ae720ed7491b" translate="yes" xml:space="preserve">
          <source>Default &lt;code&gt;ulimit&lt;/code&gt; settings</source>
          <target state="translated">デフォルトの &lt;code&gt;ulimit&lt;/code&gt; 設定</target>
        </trans-unit>
        <trans-unit id="279135b160653c468c76d4d9728d88dc3cf45596" translate="yes" xml:space="preserve">
          <source>Default AMIs</source>
          <target state="translated">デフォルトのAMI</target>
        </trans-unit>
        <trans-unit id="d595947198b2650834662c8fb4e56d2a61a2c7f5" translate="yes" xml:space="preserve">
          <source>Default IP when binding container ports</source>
          <target state="translated">コンテナポートをバインドする場合のデフォルトIP</target>
        </trans-unit>
        <trans-unit id="393c57d4354177cdde7897ea5e52449416375b69" translate="yes" xml:space="preserve">
          <source>Default base operating systems for local and cloud hosts</source>
          <target state="translated">ローカルおよびクラウドホストのデフォルトの基本オペレーティングシステム</target>
        </trans-unit>
        <trans-unit id="efc2b2805691dec1aa3faf903fef171b6f73830f" translate="yes" xml:space="preserve">
          <source>Default behavior</source>
          <target state="translated">デフォルトの動作</target>
        </trans-unit>
        <trans-unit id="fe71d2fcfc830bf2155cd1cd7010d2be536047ec" translate="yes" xml:space="preserve">
          <source>Default cgroup parent</source>
          <target state="translated">デフォルトの cgroup の親</target>
        </trans-unit>
        <trans-unit id="ad80af755576e5d21ff5ca05a9c801c7ca3fe19c" translate="yes" xml:space="preserve">
          <source>Default logging driver for Docker. Writes JSON messages to file. No logging options are supported for this driver.</source>
          <target state="translated">Dockerのデフォルトのロギングドライバ。ファイルにJSONメッセージを書き込みます。このドライバにはロギングオプションはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="f1dac81c76957fbb60942c07f71f984f66f2b7c9" translate="yes" xml:space="preserve">
          <source>Default orchestrator for stack operations to use with this context (swarm|kubernetes|all)</source>
          <target state="translated">このコンテキストで使用するスタック操作のデフォルトオーケストレータ (swarm|kubernetes|all)</target>
        </trans-unit>
        <trans-unit id="0f881f0e3ec5f9d6f1fc0fd8fc366e10d34bf05c" translate="yes" xml:space="preserve">
          <source>Default output</source>
          <target state="translated">デフォルト出力</target>
        </trans-unit>
        <trans-unit id="5aaa1749bd9c10a1961c032f08b68e8abb43acfe" translate="yes" xml:space="preserve">
          <source>Default user authorization mechanism</source>
          <target state="translated">デフォルトのユーザ認証メカニズム</target>
        </trans-unit>
        <trans-unit id="e034cbbe2b8762f796d4892d08bbfed1145d3ef8" translate="yes" xml:space="preserve">
          <source>Default values</source>
          <target state="translated">デフォルト値</target>
        </trans-unit>
        <trans-unit id="dbbd33f643700a75519791f9f5797932592b72e1" translate="yes" xml:space="preserve">
          <source>Deferred device removal means that if device is busy when devices are being removed/deactivated, then a deferred removal is scheduled on device. And devices automatically go away when last user of the device exits.</source>
          <target state="translated">デバイスの削除を延期するとは、デバイスの削除/非アクティブ化が行われているときにデバイスがビジー状態になっている場合、デバイス上で延期された削除がスケジュールされることを意味します。また、デバイスの最後のユーザが退出すると、デバイスは自動的に退出します。</target>
        </trans-unit>
        <trans-unit id="73abda24c0ca3b8b8dde92ba2c40a6e7c395a507" translate="yes" xml:space="preserve">
          <source>Define a container with &lt;code&gt;Dockerfile&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Dockerfile&lt;/code&gt; でコンテナを定義する</target>
        </trans-unit>
        <trans-unit id="e9ef13a71018b21569a2657f0a83cc28c745a0a2" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;webnet&lt;/code&gt; network with the default settings (which is a load-balanced overlay network).</source>
          <target state="translated">デフォルト設定で &lt;code&gt;webnet&lt;/code&gt; ネットワークを定義します（これは負荷分散されたオーバーレイネットワークです）。</target>
        </trans-unit>
        <trans-unit id="ec12be71d16f96b224856153fa1ed155d38f5c49" translate="yes" xml:space="preserve">
          <source>Define the application dependencies.</source>
          <target state="translated">アプリケーションの依存関係を定義します。</target>
        </trans-unit>
        <trans-unit id="8b7bdebcf7615752dcfb6a5981210d8062e89d32" translate="yes" xml:space="preserve">
          <source>Define the project</source>
          <target state="translated">プロジェクトの定義</target>
        </trans-unit>
        <trans-unit id="14380fa68255a99f324216d75f14ef1b093c0e4c" translate="yes" xml:space="preserve">
          <source>Define the project components</source>
          <target state="translated">プロジェクトのコンポーネントを定義する</target>
        </trans-unit>
        <trans-unit id="ab00f55acb5995d4bf4b48fcef49616fdbb68d1a" translate="yes" xml:space="preserve">
          <source>Define the services that make up your app in &lt;code&gt;docker-compose.yml&lt;/code&gt; so they can be run together in an isolated environment.</source>
          <target state="translated">&lt;code&gt;docker-compose.yml&lt;/code&gt; でアプリを構成するサービスを定義して、隔離された環境で一緒に実行できるようにします。</target>
        </trans-unit>
        <trans-unit id="dfe60b12f4c42255cae1d7032c7cd57ccbadb142" translate="yes" xml:space="preserve">
          <source>Define your app&amp;rsquo;s environment with a &lt;code&gt;Dockerfile&lt;/code&gt; so it can be reproduced anywhere.</source>
          <target state="translated">&lt;code&gt;Dockerfile&lt;/code&gt; を使用してアプリの環境を定義し、どこでも再現できるようにします。</target>
        </trans-unit>
        <trans-unit id="f77aac34490836f9e4b92ffcd90923896678636d" translate="yes" xml:space="preserve">
          <source>Defining and using configs in compose files</source>
          <target state="translated">コンポーズファイルでの設定の定義と使用</target>
        </trans-unit>
        <trans-unit id="20b545fdca1f77ab80641fe58ad90683099206ec" translate="yes" xml:space="preserve">
          <source>Defining and using secrets in compose files</source>
          <target state="translated">ファイルを作成する際の秘密の定義と使用</target>
        </trans-unit>
        <trans-unit id="3d444b9766eb82d8e17757d014e4b7aee539493a" translate="yes" xml:space="preserve">
          <source>Delay between restart attempts (ns|us|ms|s|m|h)</source>
          <target state="translated">再起動間隔 (ns|us|ms|s|m|h)</target>
        </trans-unit>
        <trans-unit id="1a4f8c4609c63bc9e603df6cb4df236265bc3b5e" translate="yes" xml:space="preserve">
          <source>Delay between restart attempts (ns|us|ms|s|m|h) (default 5s)</source>
          <target state="translated">再起動間隔 (ns|us|ms|s|m|h)(デフォルト 5s)</target>
        </trans-unit>
        <trans-unit id="6c31e7e76dd7558090a1077fb7f838ddab9948cf" translate="yes" xml:space="preserve">
          <source>Delay between task rollbacks (ns|us|ms|s|m|h)</source>
          <target state="translated">タスクロールバック間の遅延時間 (ns|us|ms|s|m|h)</target>
        </trans-unit>
        <trans-unit id="8a8c1562fe07fb41a58d185552616acfef1d7cf8" translate="yes" xml:space="preserve">
          <source>Delay between task rollbacks (ns|us|ms|s|m|h) (default 0s)</source>
          <target state="translated">タスクロールバック間の遅延 (ns|us|ms|s|m|h)(デフォルト 0s)</target>
        </trans-unit>
        <trans-unit id="cc0534877bdcbedd89091d53051e5073e6ea167a" translate="yes" xml:space="preserve">
          <source>Delay between updates (ns|us|ms|s|m|h)</source>
          <target state="translated">更新間隔 (ns|us|ms|s|m|h)</target>
        </trans-unit>
        <trans-unit id="c7deed47d8e10b7f9df976e44e885c304a3d9b7e" translate="yes" xml:space="preserve">
          <source>Delay between updates (ns|us|ms|s|m|h) (default 0s)</source>
          <target state="translated">更新間隔 (ns|us|ms|s|m|h)(デフォルト 0s)</target>
        </trans-unit>
        <trans-unit id="b53c64fe6a857cc55a10677529e5d1f621745f8b" translate="yes" xml:space="preserve">
          <source>Delegation key</source>
          <target state="translated">委任キー</target>
        </trans-unit>
        <trans-unit id="e1203146ef7d1cb8a3527086cafb0315eb15c1ed" translate="yes" xml:space="preserve">
          <source>Delegation key, Snapshot key</source>
          <target state="translated">委任キー、スナップショットキー</target>
        </trans-unit>
        <trans-unit id="3d4cd78a02c93af009004ad314829a3688c08dbc" translate="yes" xml:space="preserve">
          <source>Delegation keys are optional tagging keys and allow you to delegate signing image tags to other publishers without having to share your targets key.</source>
          <target state="translated">委任キーはオプションのタグ付けキーで、ターゲットキーを共有することなく、署名画像タグを他のパブリッシャーに委任することができます。</target>
        </trans-unit>
        <trans-unit id="fc81b039085920d00adc579665e69e4b7b1f0660" translate="yes" xml:space="preserve">
          <source>Delegation keys are optional, and not generated as part of the normal &lt;code&gt;docker&lt;/code&gt; workflow. They need to be &lt;a href=&quot;../trust_delegation/index#generating-delegation-keys&quot;&gt;manually generated and added to the repository&lt;/a&gt;.</source>
          <target state="translated">委任キーはオプションであり、通常の &lt;code&gt;docker&lt;/code&gt; ワークフローの一部として生成されません。これらは&lt;a href=&quot;../trust_delegation/index#generating-delegation-keys&quot;&gt;手動で生成してリポジトリに追加する&lt;/a&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="f5025b6581b8de46618baedb125e788e71d0b00b" translate="yes" xml:space="preserve">
          <source>Delegation keys sign &lt;a href=&quot;https://github.com/theupdateframework/tuf/blob/1bed3e09a478c2c918ffbff10b9118f6e52ee129/docs/tuf-spec.txt#L678&quot;&gt;delegation metadata files&lt;/a&gt;, which lists filenames in the collection, and their sizes and respective &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographic_hash_function&quot;&gt;hashes&lt;/a&gt;. These files are used to verify the integrity of some or all of the actual contents of the repository. They are also used to [delegate trust to other collaborators via lower level &lt;a href=&quot;../advanced_usage/index#working-with-delegation-roles&quot;&gt;delegation roles&lt;/a&gt;. Delegation keys are held by anyone from the collection owner or administrator to collection collaborators.</source>
          <target state="translated">委任キーは&lt;a href=&quot;https://github.com/theupdateframework/tuf/blob/1bed3e09a478c2c918ffbff10b9118f6e52ee129/docs/tuf-spec.txt#L678&quot;&gt;委任メタデータファイル&lt;/a&gt;に署名します。これには、コレクション内のファイル名、それらのサイズ、およびそれぞれの&lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographic_hash_function&quot;&gt;ハッシュ&lt;/a&gt;がリストされます。これらのファイルは、リポジトリの実際のコンテンツの一部またはすべての整合性を検証するために使用されます。これらは、[下位レベルの&lt;a href=&quot;../advanced_usage/index#working-with-delegation-roles&quot;&gt;委任ロールを&lt;/a&gt;介して他の共同編集者に信頼を委任するためにも使用されます。委任キーは、コレクションの所有者または管理者からコレクションの共同編集者まで、だれでも所有します。</target>
        </trans-unit>
        <trans-unit id="6151626d831da994a329fff0144b59699f2fbec3" translate="yes" xml:space="preserve">
          <source>Delegation roles simplify collaborator workflows in notary trusted collections, and also allow for fine-grained permissions within a collection&amp;rsquo;s contents across delegations. In essence, delegation roles are restricted versions of the targets role that are only allowed to sign targets within certain filepaths.</source>
          <target state="translated">委任の役割は、公証されたコレクションの共同作業者のワークフローを簡略化し、委任全体でコレクションのコンテンツ内のきめ細かな権限を許可します。本質的に、委任の役割は、特定のファイルパス内のターゲットに署名することのみが許可されているターゲットの役割の制限されたバージョンです。</target>
        </trans-unit>
        <trans-unit id="a9d305daf767e532550292a9ae3e2b283a73a090" translate="yes" xml:space="preserve">
          <source>Delegations for content trust</source>
          <target state="translated">コンテンツの信頼のための委任</target>
        </trans-unit>
        <trans-unit id="327c8749d53afe957468edd419507d208d02097e" translate="yes" xml:space="preserve">
          <source>Delegations in Docker Content Trust (DCT) allow you to control who can and cannot sign an image tag. A delegation will have a pair of private and public delegation keys. A delegation could contain multiple pairs of keys and contributors in order to a) allow multiple users to be part of a delegation, and b) to support key rotation.</source>
          <target state="translated">Docker Content Trust (DCT)での委任は、画像タグに署名できる人とできない人をコントロールすることができます。委任には秘密鍵と公開鍵のペアがあります。a)複数のユーザーが委任に参加できるようにし、b)鍵のローテーションをサポートするために、委任には複数の鍵と貢献者のペアを含めることができます。</target>
        </trans-unit>
        <trans-unit id="5bb92738ab53c6cbeff384e0a24a2cfd9a45dc16" translate="yes" xml:space="preserve">
          <source>Delete a tag</source>
          <target state="translated">タグの削除</target>
        </trans-unit>
        <trans-unit id="2a38e729c3088c2f3c0a9056be8fd2133c61ace6" translate="yes" xml:space="preserve">
          <source>Delete the service running on the swarm</source>
          <target state="translated">swarm上で実行されているサービスを削除します。</target>
        </trans-unit>
        <trans-unit id="5160893bc61c21be5ddbaac22f60eecb08a0a476" translate="yes" xml:space="preserve">
          <source>Delete the specified volume from disk. This request is issued when a user invokes &lt;code&gt;docker rm -v&lt;/code&gt; to remove volumes associated with a container.</source>
          <target state="translated">指定されたボリュームをディスクから削除します。このリクエストは、ユーザーが &lt;code&gt;docker rm -v&lt;/code&gt; を呼び出して、コンテナーに関連付けられているボリュームを削除するときに発行されます。</target>
        </trans-unit>
        <trans-unit id="3e37c7b3569ede2bbe1e3a5ffc7fa9e0e3793ca2" translate="yes" xml:space="preserve">
          <source>Demote one or more nodes from manager in the swarm</source>
          <target state="translated">スウォーム内の1つ以上のノードをマネージャから降格させる</target>
        </trans-unit>
        <trans-unit id="a67996643297c2d757052881da1a13340799d1db" translate="yes" xml:space="preserve">
          <source>Demotes an existing manager so that it is no longer a manager. This command targets a docker engine that is a manager in the swarm.</source>
          <target state="translated">既存のマネージャをマネージャでなくなるように降格させます。このコマンドは、スウォーム内のマネージャーである docker エンジンを対象としています。</target>
        </trans-unit>
        <trans-unit id="562e8903063ed8770f6527d563bca3ab2868b0d9" translate="yes" xml:space="preserve">
          <source>Denial of Service</source>
          <target state="translated">サービスの拒否</target>
        </trans-unit>
        <trans-unit id="657ec7161ca0893a8398727168d9a686f396c71b" translate="yes" xml:space="preserve">
          <source>Deny &lt;code&gt;pivot_root&lt;/code&gt;, should be privileged operation.</source>
          <target state="translated">&lt;code&gt;pivot_root&lt;/code&gt; を拒否します。特権操作である必要があります。</target>
        </trans-unit>
        <trans-unit id="9c91e0e2afc67a1726aabdabd1c6bbb8ffb1917a" translate="yes" xml:space="preserve">
          <source>Deny associating a thread with a namespace. Also gated by &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt;.</source>
          <target state="translated">スレッドと名前空間の関連付けを拒否します。 &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt; によってもゲートされます。</target>
        </trans-unit>
        <trans-unit id="e33d1c27b0f058d56e6066a514c65ecf336af269" translate="yes" xml:space="preserve">
          <source>Deny cloning new namespaces for processes. Also gated by &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt;, with the exception of &lt;code&gt;unshare --user&lt;/code&gt;.</source>
          <target state="translated">プロセスの新しい名前空間の複製を拒否します。 &lt;code&gt;unshare --user&lt;/code&gt; を除いて、 &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt; によってもゲートされます。</target>
        </trans-unit>
        <trans-unit id="c26eb5e0718364a0a48f0cbe7e98393d84533464" translate="yes" xml:space="preserve">
          <source>Deny cloning new namespaces. Also gated by &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt; for CLONE_* flags, except &lt;code&gt;CLONE_USERNS&lt;/code&gt;.</source>
          <target state="translated">新しい名前空間の複製を拒否します。CLONE_USERNSを除く &lt;code&gt;CLONE_USERNS&lt;/code&gt; *フラグの &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt; によってもゲートされます。</target>
        </trans-unit>
        <trans-unit id="e492f056ddf2974291b2bd148606f3490e46c284" translate="yes" xml:space="preserve">
          <source>Deny interaction with the kernel nfs daemon. Obsolete since Linux 3.1.</source>
          <target state="translated">カーネルの nfs デーモンとの相互作用を拒否します。Linux 3.1 以降では廃止されました。</target>
        </trans-unit>
        <trans-unit id="2304d3fa80630e2e2b2bde48b253e40a47990c11" translate="yes" xml:space="preserve">
          <source>Deny loading a new kernel for later execution. Also gated by &lt;code&gt;CAP_SYS_BOOT&lt;/code&gt;.</source>
          <target state="translated">後で実行するために新しいカーネルのロードを拒否します。 &lt;code&gt;CAP_SYS_BOOT&lt;/code&gt; によってもゲートされます。</target>
        </trans-unit>
        <trans-unit id="f2478e82e010014119a01de72284e09d752b9839" translate="yes" xml:space="preserve">
          <source>Deny loading potentially persistent bpf programs into kernel, already gated by &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt;.</source>
          <target state="translated">潜在的に永続的なbpfプログラムをカーネルにロードすることを拒否します。すでに &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt; によってゲートされています。</target>
        </trans-unit>
        <trans-unit id="fb64c5e7729411408bee7d652e6469d381b16346" translate="yes" xml:space="preserve">
          <source>Deny manipulation and functions on kernel modules. Also gated by &lt;code&gt;CAP_SYS_MODULE&lt;/code&gt;.</source>
          <target state="translated">カーネルモジュールの操作と機能を拒否します。 &lt;code&gt;CAP_SYS_MODULE&lt;/code&gt; によってもゲートされます。</target>
        </trans-unit>
        <trans-unit id="a741e056ec871bc4ae62b34ad516e40c5699c87d" translate="yes" xml:space="preserve">
          <source>Deny manipulation and functions on kernel modules. Obsolete.</source>
          <target state="translated">カーネルモジュール上での操作や関数を拒否します。廃止されました。</target>
        </trans-unit>
        <trans-unit id="338b8dcb44072b70c3e9bde2caf37fe69bb5d142" translate="yes" xml:space="preserve">
          <source>Deny manipulation and functions on kernel modules. Obsolete. Also gated by &lt;code&gt;CAP_SYS_MODULE&lt;/code&gt;.</source>
          <target state="translated">カーネルモジュールの操作と機能を拒否します。廃止されました。 &lt;code&gt;CAP_SYS_MODULE&lt;/code&gt; によってもゲートされます。</target>
        </trans-unit>
        <trans-unit id="3d148a4612cc99fe95bbad92867e133ea7e828fb" translate="yes" xml:space="preserve">
          <source>Deny mounting, already gated by &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt; によってすでにゲートされているマウントを拒否します。</target>
        </trans-unit>
        <trans-unit id="d7e23e44ceaf53ce30a77cac3e490d16999cc985" translate="yes" xml:space="preserve">
          <source>Deny retrieval of exported kernel and module symbols. Obsolete.</source>
          <target state="translated">エクスポートされたカーネルおよびモジュールシンボルの検索を拒否します。廃止されました。</target>
        </trans-unit>
        <trans-unit id="b5b350b48b4c47e3b693e5c2f2b651243a8f9ae4" translate="yes" xml:space="preserve">
          <source>Deny start/stop swapping to file/device. Also gated by &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt;.</source>
          <target state="translated">ファイル/デバイスへのスワッピングの開始/停止を拒否します。 &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt; によってもゲートされます。</target>
        </trans-unit>
        <trans-unit id="406c8b24550593c1ded264d86b0c221004518847" translate="yes" xml:space="preserve">
          <source>Depending on the storage driver in use, additional information can be shown, such as pool name, data file, metadata file, data space used, total data space, metadata space used, and total metadata space.</source>
          <target state="translated">使用中のストレージドライバに応じて、プール名、データファイル、メタデータファイル、使用されるデータスペース、総データスペース、使用されるメタデータスペース、総メタデータスペースなどの追加情報を表示することができます。</target>
        </trans-unit>
        <trans-unit id="b9b44ac62807270ffa3b0eb5af71fb9c649df3e7" translate="yes" xml:space="preserve">
          <source>Depending on what you typed on the command line so far, it completes:</source>
          <target state="translated">これまでのコマンドラインで入力した内容にもよりますが、完了します。</target>
        </trans-unit>
        <trans-unit id="bdf58c1f4b33f044c1285cab326d14f589767825" translate="yes" xml:space="preserve">
          <source>Depending on your Docker system configuration, you may be required to preface each &lt;code&gt;docker&lt;/code&gt; command with &lt;code&gt;sudo&lt;/code&gt;. To avoid having to use &lt;code&gt;sudo&lt;/code&gt; with the &lt;code&gt;docker&lt;/code&gt; command, your system administrator can create a Unix group called &lt;code&gt;docker&lt;/code&gt; and add users to it.</source>
          <target state="translated">お使いのドッカーシステムの構成によっては、各前置きが必要な場合があり &lt;code&gt;docker&lt;/code&gt; でコマンドを &lt;code&gt;sudo&lt;/code&gt; を。使用する必要がないように、 &lt;code&gt;sudo&lt;/code&gt; をして &lt;code&gt;docker&lt;/code&gt; コマンドは、システム管理者と呼ばれるUNIXのグループを作成することができ &lt;code&gt;docker&lt;/code&gt; し、それにユーザーを追加します。</target>
        </trans-unit>
        <trans-unit id="df3c6d5ceacc608627ca4286e64130ca8c1fe4a7" translate="yes" xml:space="preserve">
          <source>Depending on your environment&amp;rsquo;s networking configuration, it may take up to 30 seconds for the containers to respond to HTTP requests. This is not indicative of Docker or swarm performance, but rather an unmet Redis dependency that we address later in the tutorial. For now, the visitor counter isn&amp;rsquo;t working for the same reason; we haven&amp;rsquo;t yet added a service to persist data.</source>
          <target state="translated">環境のネットワーク構成によっては、コンテナがHTTPリクエストに応答するまでに最大30秒かかる場合があります。これはDockerまたは群れのパフォーマンスを示すものではなく、チュートリアルの後半で対処する満たされていないRedis依存関係を示しています。現在のところ、ビジターカウンターは同じ理由で機能していません。データを永続化するサービスはまだ追加していません。</target>
        </trans-unit>
        <trans-unit id="feb6d59317d621b62a1a989fc25c55eed2939fa3" translate="yes" xml:space="preserve">
          <source>Deploy Notary Server with Compose</source>
          <target state="translated">Compose で公証人サーバをデプロイする</target>
        </trans-unit>
        <trans-unit id="60fcf58f4b5938c6de9d37bdd4bba09360988c57" translate="yes" xml:space="preserve">
          <source>Deploy a new stack or update an existing stack</source>
          <target state="translated">新しいスタックをデプロイしたり、既存のスタックを更新したりする</target>
        </trans-unit>
        <trans-unit id="c2d985f55ebd5738261815a6cbabac66e090c549" translate="yes" xml:space="preserve">
          <source>Deploy a service to the swarm</source>
          <target state="translated">スウォームにサービスを展開する</target>
        </trans-unit>
        <trans-unit id="f307d98e89b280d66c49a9cf5ad2c3591c1d2d29" translate="yes" xml:space="preserve">
          <source>Deploy services to a swarm</source>
          <target state="translated">スウォームにサービスを展開する</target>
        </trans-unit>
        <trans-unit id="205b1c97708b7bd3b0f025a0ab73c95d6b343570" translate="yes" xml:space="preserve">
          <source>Deploy the app on the swarm manager</source>
          <target state="translated">スウォームマネージャにアプリをデプロイする</target>
        </trans-unit>
        <trans-unit id="9e32a684f4f58a4b260b5af40fa57e381e1ebf53" translate="yes" xml:space="preserve">
          <source>Deploy your Redis tag to the swarm and configure the swarm with a 10 second update delay. Note that the following example shows an older Redis tag:</source>
          <target state="translated">Redisタグをスウォームにデプロイし、10秒の更新遅延を設定します。以下の例は、古い Redis タグを示していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="f5b30162ed997446ef7b9a0210679b50205d94b3" translate="yes" xml:space="preserve">
          <source>Deploy your app</source>
          <target state="translated">アプリのデプロイ</target>
        </trans-unit>
        <trans-unit id="9e1c2f275184364df174a066f2ce3479bf0f4a3f" translate="yes" xml:space="preserve">
          <source>Deploy your app on the swarm cluster</source>
          <target state="translated">スウォームクラスタにアプリをデプロイします。</target>
        </trans-unit>
        <trans-unit id="4880d2aaca6e2f874e6f134c3a20570f7b643e02" translate="yes" xml:space="preserve">
          <source>Deploy your app to production</source>
          <target state="translated">アプリを本番環境にデプロイする</target>
        </trans-unit>
        <trans-unit id="f1cadfa9b366b3a865227c5370a417d91728ace4" translate="yes" xml:space="preserve">
          <source>Deploying changes</source>
          <target state="translated">変更のデプロイ</target>
        </trans-unit>
        <trans-unit id="36c50ec2616202c90ec5420c454225d71164c71d" translate="yes" xml:space="preserve">
          <source>Deprecated Engine Features</source>
          <target state="translated">非推奨エンジンの機能</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="8562043fa00f1093b84876923bf31bf0f1ccfaf2" translate="yes" xml:space="preserve">
          <source>Description of the context</source>
          <target state="translated">コンテキストの説明</target>
        </trans-unit>
        <trans-unit id="3a0f23557d568989c44602a98c65506ae979691b" translate="yes" xml:space="preserve">
          <source>Designed to be cross-compatible between Compose and the Docker Engine&amp;rsquo;s &lt;a href=&quot;../../../engine/swarm/index&quot;&gt;swarm mode&lt;/a&gt;, version 3 removes several options and adds several more.</source>
          <target state="translated">ComposeとDockerエンジンの&lt;a href=&quot;../../../engine/swarm/index&quot;&gt;スウォームモード&lt;/a&gt;の間で相互互換性を持つように設計されたバージョン3では、いくつかのオプションが削除され、さらにいくつか追加されています。</target>
        </trans-unit>
        <trans-unit id="97cc99e36c88e1878a13d320faca5bf42543ad96" translate="yes" xml:space="preserve">
          <source>Designed to provide an optimized development framework for apps that are deployed to the cloud or run on-premises</source>
          <target state="translated">クラウドにデプロイされたり、オンプレミスで実行されたりするアプリに最適化された開発フレームワークを提供するように設計されています。</target>
        </trans-unit>
        <trans-unit id="34b1b65ff33062c33552dee2d781d0c3070584c3" translate="yes" xml:space="preserve">
          <source>Desired state of the task (&lt;code&gt;running&lt;/code&gt;, &lt;code&gt;shutdown&lt;/code&gt;, or &lt;code&gt;accepted&lt;/code&gt;)</source>
          <target state="translated">タスクの望ましい状態（ &lt;code&gt;running&lt;/code&gt; 、 &lt;code&gt;shutdown&lt;/code&gt; 、または &lt;code&gt;accepted&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="eb873665742106d8005a64c16c377ea1ddf3c282" translate="yes" xml:space="preserve">
          <source>Detached (-d)</source>
          <target state="translated">一戸建て (-d)</target>
        </trans-unit>
        <trans-unit id="44abfdb180f5badff2b40061cc6133e8c09f4ea9" translate="yes" xml:space="preserve">
          <source>Detached mode: run command in the background</source>
          <target state="translated">分離モード:バックグラウンドでコマンドを実行</target>
        </trans-unit>
        <trans-unit id="9fda204518bb6ba59ac898d6bec1e68ef7e1e9e5" translate="yes" xml:space="preserve">
          <source>Detached vs foreground</source>
          <target state="translated">戸建 vs フォアグラウンド</target>
        </trans-unit>
        <trans-unit id="cc1278a0424b43637549a039f376c1d44bb8f18a" translate="yes" xml:space="preserve">
          <source>Detailed run output will be emitted when using the LinodeGo &lt;code&gt;LINODE_DEBUG=1&lt;/code&gt; option along with the &lt;code&gt;docker-machine&lt;/code&gt;&lt;code&gt;--debug&lt;/code&gt; option.</source>
          <target state="translated">LinodeGo &lt;code&gt;LINODE_DEBUG=1&lt;/code&gt; オプションをdocker &lt;code&gt;docker-machine&lt;/code&gt; &lt;code&gt;--debug&lt;/code&gt; オプションと一緒に使用すると、詳細な実行出力が出力されます。</target>
        </trans-unit>
        <trans-unit id="c923b376c93bfa25d2dc92f8dd72a0ba1b98d69c" translate="yes" xml:space="preserve">
          <source>Detect and skip executing unused build stages</source>
          <target state="translated">未使用のビルドステージの検出と実行スキップ</target>
        </trans-unit>
        <trans-unit id="84f09c20040f8fa64429e6f0a515948c9abecf0d" translate="yes" xml:space="preserve">
          <source>Detect and skip transferring unused files in your build context</source>
          <target state="translated">ビルドコンテキスト内の未使用ファイルの転送を検出してスキップします。</target>
        </trans-unit>
        <trans-unit id="9c29be74391cd3cf42657d8a2f8ec0deb68878f4" translate="yes" xml:space="preserve">
          <source>Develop and run your ASP.NET Core apps cross-platform on Windows, MacOS, and Linux</source>
          <target state="translated">Windows、MacOS、LinuxでASP.NET Coreアプリケーションをクロスプラットフォームで開発し、実行することができます。</target>
        </trans-unit>
        <trans-unit id="7ad0b1a2a2a4624b67402d68603274adc4149a46" translate="yes" xml:space="preserve">
          <source>Developing a plugin</source>
          <target state="translated">プラグインの開発</target>
        </trans-unit>
        <trans-unit id="86930051e532fb0f8e3c6625a84ff35c9022b9ba" translate="yes" xml:space="preserve">
          <source>Development environments</source>
          <target state="translated">開発環境</target>
        </trans-unit>
        <trans-unit id="93554d18e30c224881b1bf32fd74aa81f4df0a43" translate="yes" xml:space="preserve">
          <source>Devicemapper options</source>
          <target state="translated">デバイスマッパーのオプション</target>
        </trans-unit>
        <trans-unit id="4e0d301763da9ac2f4eda478cafe4d96db009aa4" translate="yes" xml:space="preserve">
          <source>Devices available to a container are assigned at creation time. The assigned devices will both be added to the cgroup.allow file and created into the container once it is run. This poses a problem when a new device needs to be added to running container.</source>
          <target state="translated">コンテナで利用可能なデバイスは、作成時に割り当てられます。割り当てられたデバイスは cgroup.allow ファイルに追加され、コンテナが実行されるとコンテナに作成されます。これは、新しいデバイスを実行中のコンテナに追加する必要がある場合に問題が発生します。</target>
        </trans-unit>
        <trans-unit id="af944f45bc6a580c2ff86b7c4ccd15c6e6ed05af" translate="yes" xml:space="preserve">
          <source>Differences between &amp;ldquo;--mount&amp;rdquo; and &amp;ldquo;--volume&amp;rdquo;</source>
          <target state="translated">「--mount」と「--volume」の違い</target>
        </trans-unit>
        <trans-unit id="4d28a823646dad4fa5ce7ae04d766cba5537b95e" translate="yes" xml:space="preserve">
          <source>Different environments</source>
          <target state="translated">異なる環境</target>
        </trans-unit>
        <trans-unit id="2e826a504cf976ac0033b44871860b7f0a480229" translate="yes" xml:space="preserve">
          <source>Different types of SSH</source>
          <target state="translated">異なるタイプのSSH</target>
        </trans-unit>
        <trans-unit id="9fadd39087d0ca9c53d5821d56db509753e0d4b7" translate="yes" xml:space="preserve">
          <source>Digest can also be used in the &lt;code&gt;FROM&lt;/code&gt; of a Dockerfile, for example:</source>
          <target state="translated">ダイジェストはDockerfile の &lt;code&gt;FROM&lt;/code&gt; でも使用できます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="9ed3183e8512b7affbb7cb7e4056e54c3847f73e" translate="yes" xml:space="preserve">
          <source>DigitalOcean</source>
          <target state="translated">DigitalOcean</target>
        </trans-unit>
        <trans-unit id="da5b989b773fd438d038d9f19b95190051448370" translate="yes" xml:space="preserve">
          <source>DigitalOcean Block Storage plugin</source>
          <target state="translated">DigitalOceanブロックストレージプラグイン</target>
        </trans-unit>
        <trans-unit id="2267bb09bb2d215c2cadaff92cd40b54aa23f0c9" translate="yes" xml:space="preserve">
          <source>DigitalOcean Example</source>
          <target state="translated">DigitalOceanの例</target>
        </trans-unit>
        <trans-unit id="2fbf521cf611cf54e00144de6fac8b89da8251d3" translate="yes" xml:space="preserve">
          <source>DigitalOcean example</source>
          <target state="translated">デジタルオーシャンの例</target>
        </trans-unit>
        <trans-unit id="e0da718dd50c57c4dd15dfaa8613d31738e2fa4e" translate="yes" xml:space="preserve">
          <source>Directly afterwards, run &lt;code&gt;docker service ls&lt;/code&gt;, to see the actual number of replicas.</source>
          <target state="translated">その直後に、 &lt;code&gt;docker service ls&lt;/code&gt; を実行して、レプリカの実際の数を確認します。</target>
        </trans-unit>
        <trans-unit id="4a8e254f27fd61aa7aeae26c72e12b77f4bf6cb2" translate="yes" xml:space="preserve">
          <source>Directory to generate key in, defaults to current directory</source>
          <target state="translated">キーを生成するディレクトリ、デフォルトはカレントディレクトリ</target>
        </trans-unit>
        <trans-unit id="b5f8767c9eb2602757acda4037e8086b640e6698" translate="yes" xml:space="preserve">
          <source>Disable OOM Killer</source>
          <target state="translated">OOMキラーを無効化</target>
        </trans-unit>
        <trans-unit id="7d4feaf27871e9c812ca3e3ef7d23778dcdb7f5f" translate="yes" xml:space="preserve">
          <source>Disable a plugin</source>
          <target state="translated">プラグインを無効にする</target>
        </trans-unit>
        <trans-unit id="613720c88836f37026fdc86f600ca13cc1447ae3" translate="yes" xml:space="preserve">
          <source>Disable any container-specified HEALTHCHECK</source>
          <target state="translated">コンテナを指定したHEALTHCHECKを無効にする</target>
        </trans-unit>
        <trans-unit id="a8b75a59c22f29961a07212202124834ba5cb4dc" translate="yes" xml:space="preserve">
          <source>Disable namespace remapping for a container</source>
          <target state="translated">コンテナの名前空間のリマッピングを無効にする</target>
        </trans-unit>
        <trans-unit id="d2bbc4ec6c38c2c7beb72c5c113c67fe22790940" translate="yes" xml:space="preserve">
          <source>Disable streaming stats and only pull the first result</source>
          <target state="translated">ストリーミング統計を無効にして、最初の結果だけを引き出す</target>
        </trans-unit>
        <trans-unit id="c12b28c385f915cd8f2e9fd788f271e431cf00a6" translate="yes" xml:space="preserve">
          <source>Disables a plugin. The plugin must be installed before it can be disabled, see &lt;a href=&quot;../plugin_install/index&quot;&gt;&lt;code&gt;docker plugin install&lt;/code&gt;&lt;/a&gt;. Without the &lt;code&gt;-f&lt;/code&gt; option, a plugin that has references (e.g., volumes, networks) cannot be disabled.</source>
          <target state="translated">プラグインを無効にします。プラグインは、無効にする前にインストールする必要があります&lt;a href=&quot;../plugin_install/index&quot;&gt; &lt;code&gt;docker plugin install&lt;/code&gt; &lt;/a&gt;参照してください。せずに &lt;code&gt;-f&lt;/code&gt; オプション、参照（例えば、ボリューム、ネットワーク）を持っているプラグインは無効にすることはできません。</target>
        </trans-unit>
        <trans-unit id="bfc3329cca1108589feb31bcb7ac986e5ee88e4c" translate="yes" xml:space="preserve">
          <source>Disables any logging for the container. &lt;code&gt;docker logs&lt;/code&gt; won&amp;rsquo;t be available with this driver.</source>
          <target state="translated">コンテナのロギングを無効にします。 &lt;code&gt;docker logs&lt;/code&gt; は、このドライバーでは使用できません。</target>
        </trans-unit>
        <trans-unit id="f0baa2a33988fcfcedb8e46916b7af29c8fca8bf" translate="yes" xml:space="preserve">
          <source>Disables the user namespace for this service, if Docker daemon is configured with user namespaces. See &lt;a href=&quot;../../../engine/reference/commandline/dockerd/index#disable-user-namespace-for-a-container&quot;&gt;dockerd&lt;/a&gt; for more information.</source>
          <target state="translated">Dockerデーモンがユーザー名前空間で構成されている場合、このサービスのユーザー名前空間を無効にします。詳細については、&lt;a href=&quot;../../../engine/reference/commandline/dockerd/index#disable-user-namespace-for-a-container&quot;&gt;dockerd&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4cc71b070a575bc09f6bbdaaa67034910a051b50" translate="yes" xml:space="preserve">
          <source>Disables the user namespace for this service, if Docker daemon is configured with user namespaces. See &lt;a href=&quot;../../engine/reference/commandline/dockerd/index#disable-user-namespace-for-a-container&quot;&gt;dockerd&lt;/a&gt; for more information.</source>
          <target state="translated">Dockerデーモンがユーザー名前空間で構成されている場合、このサービスのユーザー名前空間を無効にします。詳細については、&lt;a href=&quot;../../engine/reference/commandline/dockerd/index#disable-user-namespace-for-a-container&quot;&gt;dockerd&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="94c45cefffd88bec5229a69467a90582834ffa77" translate="yes" xml:space="preserve">
          <source>Disabling this on loopback can lead to &lt;em&gt;much&lt;/em&gt; faster container removal times, but will make the space used in &lt;code&gt;/var/lib/docker&lt;/code&gt; directory not be returned to the system for other use when containers are removed.</source>
          <target state="translated">ループバックでこれを無効にすると、コンテナーの削除時間が&lt;em&gt;大幅に&lt;/em&gt;短縮されますが、 &lt;code&gt;/var/lib/docker&lt;/code&gt; ディレクトリーで使用されているスペースは、コンテナーが削除されたときに他の用途でシステムに返されなくなります。</target>
        </trans-unit>
        <trans-unit id="c1627486fa2639ec721369ca9e01d91f76c2e3f2" translate="yes" xml:space="preserve">
          <source>Disconnect a container from a network</source>
          <target state="translated">ネットワークからコンテナを切り離す</target>
        </trans-unit>
        <trans-unit id="7eeea272f53ee873457e2694b4a5fc7a09e6a91c" translate="yes" xml:space="preserve">
          <source>Disconnects a container from a network. The container must be running to disconnect it from the network.</source>
          <target state="translated">コンテナをネットワークから切断します。コンテナをネットワークから切断するには、コンテナを実行している必要があります。</target>
        </trans-unit>
        <trans-unit id="07c518009e6b759e1550a87ab619b2f5c56814c4" translate="yes" xml:space="preserve">
          <source>Discover Docker&amp;rsquo;s features;</source>
          <target state="translated">Dockerの機能を発見してください。</target>
        </trans-unit>
        <trans-unit id="25a158a70b1fbaeddada5e2abc2e644c98030502" translate="yes" xml:space="preserve">
          <source>Dispatcher heartbeat period (ns|us|ms|s|m|h)</source>
          <target state="translated">ディスパッチャの心拍周期 (ns|us|ms|s|m|h)</target>
        </trans-unit>
        <trans-unit id="fe8622ee5935b394c4ec0dbdba739bf9d87a3089" translate="yes" xml:space="preserve">
          <source>Display a live stream of container(s) resource usage statistics</source>
          <target state="translated">コンテナのリソース使用統計のライブストリームを表示します。</target>
        </trans-unit>
        <trans-unit id="8c350304680fa74e86d2662995e4779f7dfa56a5" translate="yes" xml:space="preserve">
          <source>Display an image manifest, or manifest list</source>
          <target state="translated">画像マニフェスト、またはマニフェストリストを表示します。</target>
        </trans-unit>
        <trans-unit id="196d16bc9a94dd281ee7e1b88522f43c7fc180ca" translate="yes" xml:space="preserve">
          <source>Display and rotate the root CA</source>
          <target state="translated">ルートCAの表示と回転</target>
        </trans-unit>
        <trans-unit id="b7661095c1f0cb0821b8534662f936e0c3338c56" translate="yes" xml:space="preserve">
          <source>Display detailed information on one or more configs</source>
          <target state="translated">1つまたは複数の設定の詳細情報を表示する</target>
        </trans-unit>
        <trans-unit id="937d200c8568444b7e1d77461975f2f17b266504" translate="yes" xml:space="preserve">
          <source>Display detailed information on one or more containers</source>
          <target state="translated">1つ以上のコンテナの詳細情報を表示</target>
        </trans-unit>
        <trans-unit id="deb98de8c58a9d2db2ca41e63488ffefbd98a3fd" translate="yes" xml:space="preserve">
          <source>Display detailed information on one or more contexts</source>
          <target state="translated">1つ以上のコンテキストの詳細情報を表示する</target>
        </trans-unit>
        <trans-unit id="2668d4e4910e4edecd6782eff98c7e80c5d82dfb" translate="yes" xml:space="preserve">
          <source>Display detailed information on one or more images</source>
          <target state="translated">1つ以上の画像の詳細情報を表示</target>
        </trans-unit>
        <trans-unit id="7a8b978bdfece1e933094d3ed6f83779f497c857" translate="yes" xml:space="preserve">
          <source>Display detailed information on one or more networks</source>
          <target state="translated">1つ以上のネットワークの詳細情報を表示</target>
        </trans-unit>
        <trans-unit id="7edb6519c7b2ab35dda46f17cf30660dd2c72b77" translate="yes" xml:space="preserve">
          <source>Display detailed information on one or more nodes</source>
          <target state="translated">1つ以上のノードの詳細情報を表示</target>
        </trans-unit>
        <trans-unit id="e43c44f126e612084c6551bc26e876d68fae1c4b" translate="yes" xml:space="preserve">
          <source>Display detailed information on one or more plugins</source>
          <target state="translated">1つ以上のプラグインの詳細情報を表示する</target>
        </trans-unit>
        <trans-unit id="0e25e2904bffd4aeef7f96bd0abbcc70e9313975" translate="yes" xml:space="preserve">
          <source>Display detailed information on one or more secrets</source>
          <target state="translated">1つ以上の秘密の詳細情報を表示</target>
        </trans-unit>
        <trans-unit id="319af85fb8a8442e35170f717ac7e5a6dc6b2199" translate="yes" xml:space="preserve">
          <source>Display detailed information on one or more services</source>
          <target state="translated">1つ以上のサービスの詳細情報を表示</target>
        </trans-unit>
        <trans-unit id="abc5f31476724eb1c6d859b1c21010a78c660011" translate="yes" xml:space="preserve">
          <source>Display detailed information on one or more volumes</source>
          <target state="translated">1つまたは複数のボリュームの詳細情報を表示</target>
        </trans-unit>
        <trans-unit id="4c357e1bceec8c70eb54f83b50e6e92950edeb4a" translate="yes" xml:space="preserve">
          <source>Display help text</source>
          <target state="translated">ヘルプテキストを表示する</target>
        </trans-unit>
        <trans-unit id="549c42e224f69e7d08f0e869d8833f7fd100921e" translate="yes" xml:space="preserve">
          <source>Display non-truncated description (--no-trunc)</source>
          <target state="translated">切り捨てられていない説明を表示する (--no-trunc)</target>
        </trans-unit>
        <trans-unit id="586adf04949d2f549650a7d8f0049daf7c9015cb" translate="yes" xml:space="preserve">
          <source>Display system-wide information</source>
          <target state="translated">システム全体の情報を表示する</target>
        </trans-unit>
        <trans-unit id="a6455fdd8367bd89702457e99115dfd41f1df1ef" translate="yes" xml:space="preserve">
          <source>Display the running processes of a container</source>
          <target state="translated">コンテナの実行中のプロセスを表示する</target>
        </trans-unit>
        <trans-unit id="254d69a896b1e37f344391db12b7f8b9567eacb8" translate="yes" xml:space="preserve">
          <source>Display total file sizes</source>
          <target state="translated">総ファイルサイズの表示</target>
        </trans-unit>
        <trans-unit id="38c62f3cd8a8fb642f2b55d18b2d6ebf6c85d6e4" translate="yes" xml:space="preserve">
          <source>Display total file sizes if the type is container</source>
          <target state="translated">タイプがコンテナの場合、合計ファイルサイズを表示する</target>
        </trans-unit>
        <trans-unit id="b00c674694a0b6016c070ba9ffd6f0f766b4c103" translate="yes" xml:space="preserve">
          <source>Displays a machine&amp;rsquo;s details.</source>
          <target state="translated">マシンの詳細を表示します。</target>
        </trans-unit>
        <trans-unit id="7c316974af7c72efeec84970883a301976f0dae2" translate="yes" xml:space="preserve">
          <source>Displays help and usage instructions for a command.</source>
          <target state="translated">コマンドのヘルプと使用方法を表示します。</target>
        </trans-unit>
        <trans-unit id="ff8ae8d24d6f2086995a2be9c38368319dbaae82" translate="yes" xml:space="preserve">
          <source>Displays log output from services.</source>
          <target state="translated">サービスのログ出力を表示します。</target>
        </trans-unit>
        <trans-unit id="e7344edcdd12520d1689713bcf2135adb9dfb995" translate="yes" xml:space="preserve">
          <source>Displays shell commands needed to configure your shell to interact with a machine</source>
          <target state="translated">マシンと対話するためにシェルを設定するために必要なシェルコマンドを表示します。</target>
        </trans-unit>
        <trans-unit id="5d51e0b86fa5da409b5652ab07623b1022ba0914" translate="yes" xml:space="preserve">
          <source>Displays the machine&amp;rsquo;s IP address.</source>
          <target state="translated">マシンのIPアドレスを表示します。</target>
        </trans-unit>
        <trans-unit id="07abc9d3b92908122382b69289aca3ffcc385cf6" translate="yes" xml:space="preserve">
          <source>Displays the running processes.</source>
          <target state="translated">実行中のプロセスを表示します。</target>
        </trans-unit>
        <trans-unit id="70eb77b0158ae604788216b0675fb2940f7028b4" translate="yes" xml:space="preserve">
          <source>Distribute manager nodes</source>
          <target state="translated">管理者ノードの分散</target>
        </trans-unit>
        <trans-unit id="2d5d87f319af5eda92849e5802171b6295f8b415" translate="yes" xml:space="preserve">
          <source>Distribute your app across a cluster</source>
          <target state="translated">クラスタにアプリを分散させる</target>
        </trans-unit>
        <trans-unit id="9adee3b6973caa2d769cacbade5ef134cf3a4626" translate="yes" xml:space="preserve">
          <source>Distributed application bundles are described in a JSON format. When bundles are persisted as files, the file extension is &lt;code&gt;.dab&lt;/code&gt;.</source>
          <target state="translated">分散アプリケーションバンドルは、JSON形式で記述されます。バンドルがファイルとして永続化される場合、ファイル拡張子は &lt;code&gt;.dab&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b7b5a8a5361a87b31c4635582c5bf43f1e30dd3c" translate="yes" xml:space="preserve">
          <source>Do not attach STDIN</source>
          <target state="translated">STDIN を添付しないでください。</target>
        </trans-unit>
        <trans-unit id="ed0a01bab5e9eae4d9b35cb8e35e740d22d6d30e" translate="yes" xml:space="preserve">
          <source>Do not automatically restart the container when it exits. This is the default.</source>
          <target state="translated">終了時にコンテナを自動的に再起動しないようにします。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="b3637a8ff42a1be1edb83618f6ca24fa82d198c1" translate="yes" xml:space="preserve">
          <source>Do not check if specified remote plugin matches existing plugin image</source>
          <target state="translated">指定されたリモートプラグインが既存のプラグインイメージと一致するかどうかをチェックしない</target>
        </trans-unit>
        <trans-unit id="5b463b465c661680b234c6255af34edff02d793a" translate="yes" xml:space="preserve">
          <source>Do not clean up any services or secrets if you intend to proceed to the next example, which demonstrates how to rotate the MySQL root password.</source>
          <target state="translated">次の例に進む場合は、サービスや秘密をクリーンアップしないでください。</target>
        </trans-unit>
        <trans-unit id="2f8acf4dbae86e42e4c8a7b10c573cf3fd2a6340" translate="yes" xml:space="preserve">
          <source>Do not delete untagged parents</source>
          <target state="translated">タグ付けされていない親を削除しない</target>
        </trans-unit>
        <trans-unit id="cf9b5732f0664e9e630faf3b43668481db027799" translate="yes" xml:space="preserve">
          <source>Do not enable the plugin on install</source>
          <target state="translated">インストール時にプラグインを有効にしない</target>
        </trans-unit>
        <trans-unit id="586c22687cbcaa65c4838ac382d89606fe147a74" translate="yes" xml:space="preserve">
          <source>Do not include task IDs in output</source>
          <target state="translated">出力にタスクIDを含まない</target>
        </trans-unit>
        <trans-unit id="d302fff8a8a54c9485ffc10b6cfe7adc479b5ba6" translate="yes" xml:space="preserve">
          <source>Do not map IDs to Names</source>
          <target state="translated">ID を名前にマッピングしない</target>
        </trans-unit>
        <trans-unit id="610636b144c29090bad4c3c223d958431ab8bf74" translate="yes" xml:space="preserve">
          <source>Do not map IDs to Names in output</source>
          <target state="translated">出力でIDを名前にマッピングしない</target>
        </trans-unit>
        <trans-unit id="e89564f443c675d61ddbdab2f81386622c91ca59" translate="yes" xml:space="preserve">
          <source>Do not neatly format logs</source>
          <target state="translated">ログをきれいにフォーマットしない</target>
        </trans-unit>
        <trans-unit id="027bc8b10f773570babb5fea0a9cb7c9458edff5" translate="yes" xml:space="preserve">
          <source>Do not pass a &lt;code&gt;service x start&lt;/code&gt; command to a detached container. For example, this command attempts to start the &lt;code&gt;nginx&lt;/code&gt; service.</source>
          <target state="translated">分離されたコンテナに &lt;code&gt;service x start&lt;/code&gt; コマンドを渡さないでください。たとえば、このコマンドは &lt;code&gt;nginx&lt;/code&gt; サービスを開始しようとします。</target>
        </trans-unit>
        <trans-unit id="c60eef8b14975ad0bba8d5ad419ddc7da2e0f4bc" translate="yes" xml:space="preserve">
          <source>Do not prompt for confirmation</source>
          <target state="translated">確認のためのプロンプトを表示しないでください。</target>
        </trans-unit>
        <trans-unit id="10145045b5c0b244e12c4477a82d2bc769c5c08b" translate="yes" xml:space="preserve">
          <source>Do not prompt for confirmation before removing the most recent signer</source>
          <target state="translated">直近の署名者を削除する前に確認を求めないでください。</target>
        </trans-unit>
        <trans-unit id="e1cd949866ccfaa5e8f0c255356910547fc479b9" translate="yes" xml:space="preserve">
          <source>Do not query the registry to resolve image digest and supported platforms</source>
          <target state="translated">イメージダイジェストとサポートされているプラットフォームを解決するためにレジストリを照会しないでください。</target>
        </trans-unit>
        <trans-unit id="c589024137fa6f2b5053f673a30a7fd374ac1281" translate="yes" xml:space="preserve">
          <source>Do not truncate output</source>
          <target state="translated">出力を切り捨てないでください。</target>
        </trans-unit>
        <trans-unit id="af4812a5813b02f556c71cdc99b7c81d1e74198a" translate="yes" xml:space="preserve">
          <source>Do not truncate the output</source>
          <target state="translated">出力を切り捨てないでください。</target>
        </trans-unit>
        <trans-unit id="a71e39ca8baf6485c17d49f457e3be2c4451f183" translate="yes" xml:space="preserve">
          <source>Do not use cache when building the image</source>
          <target state="translated">画像を構築する際にキャッシュを使用しない</target>
        </trans-unit>
        <trans-unit id="9df82311645e18c702563d988f036f055e354cbc" translate="yes" xml:space="preserve">
          <source>Do not use this in production!</source>
          <target state="translated">本番では使用しないでください</target>
        </trans-unit>
        <trans-unit id="30a7ab5d3d82e8d8969094c1104df7528bd4c209" translate="yes" xml:space="preserve">
          <source>Do this quickly and move on to the next step, because WordPress loses the ability to connect to MySQL.</source>
          <target state="translated">WordPressがMySQLに接続する機能を失ってしまうので、これを素早く行い、次のステップに進みましょう。</target>
        </trans-unit>
        <trans-unit id="9f1141549f7c054b71516937d3febc77d991d59b" translate="yes" xml:space="preserve">
          <source>Docker</source>
          <target state="translated">Docker</target>
        </trans-unit>
        <trans-unit id="15b3ee6f96cffd907e4df852496f6c39417fba5f" translate="yes" xml:space="preserve">
          <source>Docker 17.05.0 added an optional &lt;code&gt;--detach=false&lt;/code&gt; option to make the &lt;code&gt;docker service create&lt;/code&gt; and &lt;code&gt;docker service update&lt;/code&gt; work synchronously. This option will be enabled by default in Docker 17.10, at which point the &lt;code&gt;--detach&lt;/code&gt; flag can be used to use the previous (asynchronous) behavior.</source>
          <target state="translated">Docker 17.05.0では、オプションの &lt;code&gt;--detach=false&lt;/code&gt; オプションが追加され、Docker &lt;code&gt;docker service create&lt;/code&gt; と &lt;code&gt;docker service update&lt;/code&gt; 同期的に機能するようになりました。このオプションはDocker 17.10でデフォルトで有効になり、その時点で &lt;code&gt;--detach&lt;/code&gt; フラグを使用して以前の（非同期）動作を使用できます。</target>
        </trans-unit>
        <trans-unit id="c84930c94be78898371b68cb18016a8340fecd42" translate="yes" xml:space="preserve">
          <source>Docker 17.06 and higher include support for configs on Windows containers. Where there are differences in the implementations, they are called out in the examples below. Keep the following notable differences in mind:</source>
          <target state="translated">Docker 17.06以降では、Windowsコンテナ上でのコンフィグのサポートが含まれています。実装に違いがある場合は、以下の例で説明します。以下の注目すべき違いを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="ea0bf75369b594541fb33e60727c241a45a14360" translate="yes" xml:space="preserve">
          <source>Docker 17.06 and higher include support for secrets on Windows containers. Where there are differences in the implementations, they are called out in the examples below. Keep the following notable differences in mind:</source>
          <target state="translated">Docker 17.06以降では、Windowsコンテナ上でのシークレットのサポートが含まれています。実装に違いがある場合は、以下の例で説明します。以下の注目すべき違いを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="38fa6aaa54e8aeab5d846ca367e409da3befe487" translate="yes" xml:space="preserve">
          <source>Docker 17.06 introduces swarm service configs, which allow you to store non-sensitive information, such as configuration files, outside a service&amp;rsquo;s image or running containers. This allows you to keep your images as generic as possible, without the need to bind-mount configuration files into the containers or use environment variables.</source>
          <target state="translated">Docker 17.06は、サービスのイメージや実行中のコンテナの外部に、構成ファイルなどの機密ではない情報を格納できる、swarmサービス構成を導入しています。これにより、構成ファイルをコンテナーにバインドマウントしたり、環境変数を使用したりする必要なく、イメージを可能な限り汎用的に保つことができます。</target>
        </trans-unit>
        <trans-unit id="44a5dee83dada219bd1cc01e548c67cc651fc9b2" translate="yes" xml:space="preserve">
          <source>Docker 17.12 CE and higher allow you to specify a swarm service&amp;rsquo;s isolation mode. &lt;strong&gt;This setting applies to Windows hosts only and is ignored for Linux hosts.&lt;/strong&gt; The isolation mode can be one of the following:</source>
          <target state="translated">Docker 17.12 CE以降では、swarmサービスの分離モードを指定できます。&lt;strong&gt;この設定はWindowsホストにのみ適用され、Linuxホストでは無視されます。&lt;/strong&gt;分離モードは次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="50a2527e5f78dd83f3b538a56d07b975248c326a" translate="yes" xml:space="preserve">
          <source>Docker Compose and &lt;a href=&quot;https://docs.docker.com/swarm/overview/&quot;&gt;Docker Swarm&lt;/a&gt; aim to have full integration, meaning you can point a Compose app at a Swarm cluster and have it all just work as if you were using a single Docker host.</source>
          <target state="translated">Docker Composeと&lt;a href=&quot;https://docs.docker.com/swarm/overview/&quot;&gt;Docker Swarm&lt;/a&gt;は完全な統合を目指しています。つまり、1つのDockerホストを使用している場合と同じように、ComposeアプリをSwarmクラスターに向けることができます。</target>
        </trans-unit>
        <trans-unit id="36380209e82f9571b4b3a6ebdf25588a96db096d" translate="yes" xml:space="preserve">
          <source>Docker Compose is under active development. If you need help, would like to contribute, or simply want to talk about the project with like-minded individuals, we have a number of open channels for communication.</source>
          <target state="translated">Docker Composeは活発な開発が行われています。助けが必要な場合、貢献したい場合、あるいは同じ志を持った人たちとプロジェクトについて話したい場合、私たちは多くのオープンなコミュニケーションチャネルを用意しています。</target>
        </trans-unit>
        <trans-unit id="3599b00f041ba89cd599683ac3c0362fa9489d4d" translate="yes" xml:space="preserve">
          <source>Docker Compose relies on Docker Engine for any meaningful work, so make sure you have Docker Engine installed either locally or remote, depending on your setup.</source>
          <target state="translated">Docker ComposeはDocker Engineに依存しているので、設定に応じてローカルまたはリモートにDocker Engineをインストールしておきましょう。</target>
        </trans-unit>
        <trans-unit id="caf414726c189aa3cb27a2290240b5c7c6c010be" translate="yes" xml:space="preserve">
          <source>Docker Compose&amp;rsquo;s &lt;code&gt;extends&lt;/code&gt; keyword enables sharing of common configurations among different files, or even different projects entirely. Extending services is useful if you have several services that reuse a common set of configuration options. Using &lt;code&gt;extends&lt;/code&gt; you can define a common set of service options in one place and refer to it from anywhere.</source>
          <target state="translated">Docker Composeの &lt;code&gt;extends&lt;/code&gt; キーワードを使用すると、異なるファイル間で、または完全に異なるプロジェクト間でさえ、共通の構成を共有できます。サービスの拡張は、構成オプションの共通セットを再利用するサービスがいくつかある場合に役立ちます。 &lt;code&gt;extends&lt;/code&gt; を使用すると、共通のサービスオプションセットを1か所で定義して、どこからでも参照できます。</target>
        </trans-unit>
        <trans-unit id="b032dee91964d42ad5d0c2a849a576e80c5c7284" translate="yes" xml:space="preserve">
          <source>Docker Content Trust (DCT) provides the ability to use digital signatures for data sent to and received from remote Docker registries. These signatures allow client-side or runtime verification of the integrity and publisher of specific image tags.</source>
          <target state="translated">Docker Content Trust (DCT)は、リモートのDockerレジストリとの間で送受信されるデータにデジタル署名を使用する機能を提供します。これらの署名により、特定のイメージタグの完全性とパブリッシャーのクライアントサイドまたはランタイムの検証が可能になります。</target>
        </trans-unit>
        <trans-unit id="cb875ec0273f1a25d29dd355397274d5c3a53f9e" translate="yes" xml:space="preserve">
          <source>Docker Content Trust ENV passphrase variables name change</source>
          <target state="translated">Docker Content Trust ENV パスフレーズ変数名変更</target>
        </trans-unit>
        <trans-unit id="bf8434b10a2aeb8b173e492d087491b97e6caef0" translate="yes" xml:space="preserve">
          <source>Docker Content Trust Keys</source>
          <target state="translated">Dockerコンテンツのトラストキー</target>
        </trans-unit>
        <trans-unit id="fc20720914a0d008c69a1814e27e881b01440539" translate="yes" xml:space="preserve">
          <source>Docker Content Trust Signature Verification</source>
          <target state="translated">Dockerコンテンツトラスト署名検証</target>
        </trans-unit>
        <trans-unit id="bd8d2a2e04165d2c6e430e3a0562465ad41d91a7" translate="yes" xml:space="preserve">
          <source>Docker Content Trust can store and sign with root keys from a Yubikey 4. The Yubikey is prioritized over keys stored in the filesystem. When you initialize a new repository with content trust, Docker Engine looks for a root key locally. If a key is not found and the Yubikey 4 exists, Docker Engine creates a root key in the Yubikey 4. Consult the &lt;a href=&quot;../../../../notary/advanced_usage/index#use-a-yubikey&quot;&gt;Notary documentation&lt;/a&gt; for more details.</source>
          <target state="translated">Docker Content Trustは、Yubikey 4のルートキーを保存して署名できます。Yubikeyは、ファイルシステムに保存されたキーよりも優先されます。コンテンツの信頼で新しいリポジトリを初期化すると、Docker Engineはローカルでルートキーを探します。キーが見つからず、Yubikey 4が存在する場合、Docker EngineはYubikey 4にルートキーを作成します。詳細については、&lt;a href=&quot;../../../../notary/advanced_usage/index#use-a-yubikey&quot;&gt;公証人のドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4a74411c07df2f364781dfac0d0f3b4e44e1d7ac" translate="yes" xml:space="preserve">
          <source>Docker Content Trust within the Docker Enterprise Engine prevents a user from using a container image from an unknown source, it will also prevent a user from building a container image from a base layer from an unknown source. Trusted sources could include Official Docker Images, found on the &lt;a href=&quot;https://hub.docker.com/search?image_filter=official&amp;amp;type=image&quot;&gt;Docker Hub&lt;/a&gt;, or User trusted sources, with repositories and tags signed with the commands &lt;a href=&quot;#signing-images-with-docker-content-trust&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">Docker Enterprise Engine内のDocker Content Trustにより、ユーザーは不明なソースからのコンテナーイメージを使用できなくなります。また、ユーザーが不明なソースからのベースレイヤーからコンテナーイメージを構築することもできなくなります。信頼できるソースには、&lt;a href=&quot;https://hub.docker.com/search?image_filter=official&amp;amp;type=image&quot;&gt;Docker Hub&lt;/a&gt;にある公式のDockerイメージ、またはユーザーの信頼できるソースが含まれ、リポジトリとタグが&lt;a href=&quot;#signing-images-with-docker-content-trust&quot;&gt;上記&lt;/a&gt;のコマンドで署名されています。</target>
        </trans-unit>
        <trans-unit id="717f4e5351ce2920e77e76450655b92cb390ae71" translate="yes" xml:space="preserve">
          <source>Docker Daemon version</source>
          <target state="translated">Dockerデーモンバージョン</target>
        </trans-unit>
        <trans-unit id="c7d61bc2dfc8916b1f53db41e16531364ac12126" translate="yes" xml:space="preserve">
          <source>Docker Desktop for Mac and Docker Desktop for Windows both require newer versions of their respective operating systems, so users with older OS versions must use Docker Toolbox.</source>
          <target state="translated">Docker Desktop for MacとDocker Desktop for WindowsはどちらもそれぞれのOSの新しいバージョンが必要なので、OSのバージョンが古いユーザーはDocker Toolboxを使う必要があります。</target>
        </trans-unit>
        <trans-unit id="e0318d66c6f26409e430441e81b32bcb46d07e07" translate="yes" xml:space="preserve">
          <source>Docker Desktop for Mac uses &lt;a href=&quot;https://github.com/docker/HyperKit/&quot;&gt;HyperKit&lt;/a&gt;, a lightweight macOS virtualization solution built on top of the &lt;a href=&quot;https://developer.apple.com/reference/hypervisor&quot;&gt;Hypervisor.framework&lt;/a&gt;.</source>
          <target state="translated">Docker Desktop for Macは、&lt;a href=&quot;https://developer.apple.com/reference/hypervisor&quot;&gt;Hypervisor.frameworkの&lt;/a&gt;上に構築された軽量のmacOS仮想化ソリューションである&lt;a href=&quot;https://github.com/docker/HyperKit/&quot;&gt;HyperKitを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="0dffa00d5d260607cc8f3821272f56896d5a9ae2" translate="yes" xml:space="preserve">
          <source>Docker Desktop for Windows uses &lt;a href=&quot;https://msdn.microsoft.com/en-us/virtualization/hyperv_on_windows/windows_welcome&quot;&gt;Microsoft Hyper-V&lt;/a&gt; for virtualization, and Hyper-V is not compatible with Oracle VirtualBox. Therefore, you cannot run the two solutions simultaneously. But you can still use &lt;code&gt;docker-machine&lt;/code&gt; to create more local VMs by using the Microsoft Hyper-V driver.</source>
          <target state="translated">Docker Desktop for Windowsは仮想化に&lt;a href=&quot;https://msdn.microsoft.com/en-us/virtualization/hyperv_on_windows/windows_welcome&quot;&gt;Microsoft Hyper-V&lt;/a&gt;を使用しており、Hyper-VはOracle VirtualBoxと互換性がありません。したがって、2つのソリューションを同時に実行することはできません。ただし、Microsoft Hyper-Vドライバーを使用することにより、 &lt;code&gt;docker-machine&lt;/code&gt; を使用してさらにローカルVMを作成できます。</target>
        </trans-unit>
        <trans-unit id="73c6b07c9355c7390db745c20bd91ceb1abe53a1" translate="yes" xml:space="preserve">
          <source>Docker Documentation</source>
          <target state="translated">Dockerのドキュメント</target>
        </trans-unit>
        <trans-unit id="b6d7a6ee9c405b3694f4b40f6c27dbed71d91c40" translate="yes" xml:space="preserve">
          <source>Docker Engine - Community</source>
          <target state="translated">Dockerエンジン-コミュニティ</target>
        </trans-unit>
        <trans-unit id="aa10a3bfababca53f5fd0204a3d9f4518710ac0f" translate="yes" xml:space="preserve">
          <source>Docker Engine 1.10 and above supports the usage of the &lt;code&gt;targets/releases&lt;/code&gt; delegation as the canonical source of a trusted image tag, if it exists.</source>
          <target state="translated">Docker Engine 1.10以降では、信頼できるイメージタグが存在する場合、その信頼できるイメージタグの正規ソースとして、 &lt;code&gt;targets/releases&lt;/code&gt; 委任の使用をサポートしています。</target>
        </trans-unit>
        <trans-unit id="01d702b3faac9f63d084e080a075b069289a9487" translate="yes" xml:space="preserve">
          <source>Docker Engine 1.12 introduces swarm mode that enables you to create a cluster of one or more Docker Engines called a swarm. A swarm consists of one or more nodes: physical or virtual machines running Docker Engine 1.12 or later in swarm mode.</source>
          <target state="translated">Docker Engine 1.12では、スウォームと呼ばれる1つ以上のDockerエンジンのクラスタを作成できるスウォームモードが導入されています。スウォームは1つ以上のノード、つまりスウォームモードでDocker Engine 1.12以降を実行している物理マシンや仮想マシンで構成されています。</target>
        </trans-unit>
        <trans-unit id="fe6a2c5b264914ab5eadc944ce369ebe707aac57" translate="yes" xml:space="preserve">
          <source>Docker Engine 1.12 or later installed</source>
          <target state="translated">Docker Engine 1.12以降のインストール</target>
        </trans-unit>
        <trans-unit id="9f8a4143e0d9d14b1f219d38ba1ded99fe280444" translate="yes" xml:space="preserve">
          <source>Docker Engine 1.12 or newer</source>
          <target state="translated">Docker Engine 1.12以降</target>
        </trans-unit>
        <trans-unit id="ed849467d13e888852bc27f255fcdb6370a90d63" translate="yes" xml:space="preserve">
          <source>Docker Engine command line reference</source>
          <target state="translated">Docker Engineのコマンドラインリファレンス</target>
        </trans-unit>
        <trans-unit id="fd0da34319e387ca46fd20dff39ae670a6a8914c" translate="yes" xml:space="preserve">
          <source>Docker Engine managed plugin system</source>
          <target state="translated">Docker Engine管理型プラグインシステム</target>
        </trans-unit>
        <trans-unit id="5f255d50d6539853caf74cc09261dc57ffa7150b" translate="yes" xml:space="preserve">
          <source>Docker Engine network plugins enable Engine deployments to be extended to support a wide range of networking technologies, such as VXLAN, IPVLAN, MACVLAN or something completely different. Network driver plugins are supported via the LibNetwork project. Each plugin is implemented as a &amp;ldquo;remote driver&amp;rdquo; for LibNetwork, which shares plugin infrastructure with Engine. Effectively, network driver plugins are activated in the same way as other plugins, and use the same kind of protocol.</source>
          <target state="translated">Docker Engineネットワークプラグインを使用すると、VXLAN、IPVLAN、MACVLANなどの完全に異なるネットワークテクノロジーをサポートするように、エンジンのデプロイメントを拡張できます。ネットワークドライバープラグインは、LibNetworkプロジェクトを介してサポートされます。各プラグインは、プラグインインフラストラクチャをエンジンと共有するLibNetworkの「リモートドライバー」として実装されます。実質的に、ネットワークドライバープラグインは他のプラグインと同じようにアクティブ化され、同じ種類のプロトコルを使用します。</target>
        </trans-unit>
        <trans-unit id="f64b19a832bcdc3a4356df589519ca61049f9fc4" translate="yes" xml:space="preserve">
          <source>Docker Engine runs natively on Linux systems. If you have a Linux box as your primary system, and want to run &lt;code&gt;docker&lt;/code&gt; commands, all you need to do is download and install Docker Engine. However, if you want an efficient way to provision multiple Docker hosts on a network, in the cloud or even locally, you need Docker Machine.</source>
          <target state="translated">Docker EngineはLinuxシステムでネイティブに実行されます。あなたがプライマリシステムとしてLinuxボックスを持って、そして実行したい場合は &lt;code&gt;docker&lt;/code&gt; コマンドを、あなたがする必要があるすべては、ダウンロードとドッカーエンジンをインストールです。ただし、ネットワーク、クラウド、またはローカルの複数のDockerホストを効率的にプロビジョニングする方法が必要な場合は、Docker Machineが必要です。</target>
        </trans-unit>
        <trans-unit id="58c77391b3acb8cff3bba10fafbf58e62fc2dfc5" translate="yes" xml:space="preserve">
          <source>Docker Engine swarm mode automatically names the node for the machine host name. The tutorial covers other columns in later steps.</source>
          <target state="translated">Docker Engineのスウォームモードでは、マシンのホスト名に自動的にノードの名前が付けられます。チュートリアルでは、後のステップで他の列をカバーしています。</target>
        </trans-unit>
        <trans-unit id="0bbf0223c6fb1c1cafb06b7f64045bf07ff34dad" translate="yes" xml:space="preserve">
          <source>Docker Engine swarm mode makes it easy to publish ports for services to make them available to resources outside the swarm. All nodes participate in an ingress &lt;strong&gt;routing mesh&lt;/strong&gt;. The routing mesh enables each node in the swarm to accept connections on published ports for any service running in the swarm, even if there&amp;rsquo;s no task running on the node. The routing mesh routes all incoming requests to published ports on available nodes to an active container.</source>
          <target state="translated">Docker Engineスウォームモードを使用すると、サービスのポートを簡単に公開して、スウォームの外部のリソースで利用できるようになります。すべてのノードが入力&lt;strong&gt;ルーティングメッシュに&lt;/strong&gt;参加し&lt;strong&gt;ます&lt;/strong&gt;。ルーティングメッシュにより、スウォーム内の各ノードは、ノード上で実行されているタスクがない場合でも、スウォームで実行されているすべてのサービスの公開ポート上の接続を受け入れることができます。ルーティングメッシュは、利用可能なノードの公開ポートへのすべての受信リクエストをアクティブなコンテナーにルーティングします。</target>
        </trans-unit>
        <trans-unit id="b2c13f5a5d9b78e83d36fce8030a4a2366617386" translate="yes" xml:space="preserve">
          <source>Docker Engine volume plugins enable Engine deployments to be integrated with external storage systems such as Amazon EBS, and enable data volumes to persist beyond the lifetime of a single Docker host. See the &lt;a href=&quot;../legacy_plugins/index&quot;&gt;plugin documentation&lt;/a&gt; for more information.</source>
          <target state="translated">Docker Engineボリュームプラグインを使用すると、エンジンのデプロイをAmazon EBSなどの外部ストレージシステムと統合し、データボリュームを単一のDockerホストの寿命を超えて存続させることができます。詳細については、&lt;a href=&quot;../legacy_plugins/index&quot;&gt;プラグインのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e41c3832a435c434851d3063bb07a88d07e535c5" translate="yes" xml:space="preserve">
          <source>Docker Engine&amp;rsquo;s plugin system allows you to install, start, stop, and remove plugins using Docker Engine.</source>
          <target state="translated">Docker Engineのプラグインシステムでは、Docker Engineを使用してプラグインをインストール、開始、停止、および削除できます。</target>
        </trans-unit>
        <trans-unit id="1fba150e54cff0eec41fdee94731e5dd5eb39acf" translate="yes" xml:space="preserve">
          <source>Docker Engine's labels</source>
          <target state="translated">Docker Engineのラベル</target>
        </trans-unit>
        <trans-unit id="572957b87156643096b3f6ef6253fbf2c6355c1f" translate="yes" xml:space="preserve">
          <source>Docker Enterprise</source>
          <target state="translated">ドッカーエンタープライズ</target>
        </trans-unit>
        <trans-unit id="13c010ccd4f2d2bbb372c0bfd71d9d72f00244f8" translate="yes" xml:space="preserve">
          <source>Docker Machine</source>
          <target state="translated">ドッカーマシン</target>
        </trans-unit>
        <trans-unit id="d4d4d28187d9be67d2ca80e103da027f1a9fac35" translate="yes" xml:space="preserve">
          <source>Docker Machine Overview</source>
          <target state="translated">Dockerマシンの概要</target>
        </trans-unit>
        <trans-unit id="fcde8d59c209e4b1686e13c44f0342acf8a2cbcc" translate="yes" xml:space="preserve">
          <source>Docker Machine allows you to provision Docker machines in a variety of environments, including virtual machines that reside on your local system, on cloud providers, or on bare metal servers (physical computers). Docker Machine creates a Docker host, and you use the Docker Engine client as needed to build images and create containers on the host.</source>
          <target state="translated">Docker Machineを使用すると、ローカルシステム上に存在する仮想マシン、クラウドプロバイダー上に存在する仮想マシン、ベアメタルサーバー(物理コンピュータ)上に存在する仮想マシンなど、さまざまな環境でDockerマシンをプロビジョニングすることができます。Docker MachineはDockerホストを作成し、必要に応じてDocker Engineクライアントを使用してホスト上にイメージを構築し、コンテナを作成します。</target>
        </trans-unit>
        <trans-unit id="d72bffc2203e4a1dacfc765e999f28a08d9d211a" translate="yes" xml:space="preserve">
          <source>Docker Machine command-line reference</source>
          <target state="translated">Docker Machineのコマンドラインリファレンス</target>
        </trans-unit>
        <trans-unit id="8688c99c7ccbe0996771b295fd75e8224d2e206c" translate="yes" xml:space="preserve">
          <source>Docker Machine commmand line reference</source>
          <target state="translated">Docker Machineのコマンドラインリファレンス</target>
        </trans-unit>
        <trans-unit id="5a56c924c68a2f36f632b6c51dc99155e5f34069" translate="yes" xml:space="preserve">
          <source>Docker Machine driver for Microsoft Hyper-V</source>
          <target state="translated">Microsoft Hyper-V用Docker Machineドライバ</target>
        </trans-unit>
        <trans-unit id="b70b0c352857dcadb319b900fac00c1ffe58d0cd" translate="yes" xml:space="preserve">
          <source>Docker Machine driver for Oracle VirtualBox</source>
          <target state="translated">Oracle VirtualBox用のDocker Machineドライバ</target>
        </trans-unit>
        <trans-unit id="8fed77ce7ac5f681613ba574d4d5c2ecf8496d2e" translate="yes" xml:space="preserve">
          <source>Docker Machine driver plugins are available for many cloud platforms, so you can use Machine to provision cloud hosts. When you use Docker Machine for provisioning, you create cloud hosts with Docker Engine installed on them.</source>
          <target state="translated">Docker Machineのドライバプラグインは多くのクラウドプラットフォームに対応しているので、Machineを使ってクラウドホストのプロビジョニングを行うことができます。プロビジョニングにDocker Machineを使用する場合は、Docker Engineをインストールしたクラウドホストを作成します。</target>
        </trans-unit>
        <trans-unit id="b44f3fbe45580363d9450ec91ef790ad7d100edc" translate="yes" xml:space="preserve">
          <source>Docker Machine driver reference</source>
          <target state="translated">Docker Machineドライバリファレンス</target>
        </trans-unit>
        <trans-unit id="0988385498a51e24d58d1def06fae10241319329" translate="yes" xml:space="preserve">
          <source>Docker Machine enables you to provision multiple remote Docker hosts on various flavors of Linux.</source>
          <target state="translated">Docker Machineを使用すると、Linuxの様々なフレーバー上で複数のリモートDockerホストをプロビジョニングすることができます。</target>
        </trans-unit>
        <trans-unit id="c5d0914e4c8dae74ec8b500625417c23cb4962b9" translate="yes" xml:space="preserve">
          <source>Docker Machine has &lt;a href=&quot;../../machine/reference/ssh/index#different-types-of-ssh&quot;&gt;the option to let you use your own system&amp;rsquo;s SSH&lt;/a&gt;, if for some reason you&amp;rsquo;re having trouble sending commands to your Swarm manager. Just specify the &lt;code&gt;--native-ssh&lt;/code&gt; flag when invoking the &lt;code&gt;ssh&lt;/code&gt; command:</source>
          <target state="translated">Docker Machineには&lt;a href=&quot;../../machine/reference/ssh/index#different-types-of-ssh&quot;&gt;、&lt;/a&gt;何らかの理由でSwarmマネージャーにコマンドを送信できない場合に、独自のシステムのSSHを使用できるオプションがあります。 &lt;code&gt;ssh&lt;/code&gt; コマンドを呼び出すときに &lt;code&gt;--native-ssh&lt;/code&gt; フラグを指定するだけです。</target>
        </trans-unit>
        <trans-unit id="30a9a99fff8b0e86159cc1fdbdce6a67a52bd3c5" translate="yes" xml:space="preserve">
          <source>Docker Machine has these two broad use cases.</source>
          <target state="translated">Docker Machineには、この2つの大まかなユースケースがあります。</target>
        </trans-unit>
        <trans-unit id="3bcadd07d9793947a9ccf4aaf7bb39fcf2ad3b93" translate="yes" xml:space="preserve">
          <source>Docker Machine is a tool that lets you install Docker Engine on virtual hosts, and manage the hosts with &lt;code&gt;docker-machine&lt;/code&gt; commands. You can use Machine to create Docker hosts on your local Mac or Windows box, on your company network, in your data center, or on cloud providers like Azure, AWS, or DigitalOcean.</source>
          <target state="translated">Docker Machineは、仮想ホストにDocker Engineをインストールし、 &lt;code&gt;docker-machine&lt;/code&gt; コマンドを使用してホストを管理できるツールです。Machineを使用して、ローカルのMacまたはWindowsボックス、会社のネットワーク、データセンター、またはAzure、AWS、DigitalOceanなどのクラウドプロバイダーにDockerホストを作成できます。</target>
        </trans-unit>
        <trans-unit id="c353031039191dcf70cddd0324a3eb9362d35d12" translate="yes" xml:space="preserve">
          <source>Docker Machine is still in its infancy and under active development. If you need help, would like to contribute, or simply want to talk about the project with like-minded individuals, we have a number of open channels for communication.</source>
          <target state="translated">Docker Machineはまだ初期段階にあり、活発な開発が行われています。助けが必要な方、貢献したい方、同じ志を持った人たちとプロジェクトについて話したい方など、私たちはコミュニケーションのためのオープンなチャンネルをいくつか用意しています。</target>
        </trans-unit>
        <trans-unit id="9239d8916c5c5c4c9001c8ef20c4a2f53088421d" translate="yes" xml:space="preserve">
          <source>Docker Machine list of reference pages for all supported drivers</source>
          <target state="translated">Docker Machineの全対応ドライバのリファレンスページ一覧</target>
        </trans-unit>
        <trans-unit id="8dd2970f2d2c16a490129a161e878963262b5128" translate="yes" xml:space="preserve">
          <source>Docker Machine only sets the configured parameters on the daemon and does not set up any of the &amp;ldquo;dependencies&amp;rdquo; for you. For instance, if you specify that the created daemon should use &lt;code&gt;btrfs&lt;/code&gt; as a storage driver, you still must ensure that the proper dependencies are installed, the BTRFS filesystem has been created, and so on.</source>
          <target state="translated">Docker Machineはデーモンに構成されたパラメーターのみを設定し、「依存関係」を設定しません。たとえば、作成されたデーモンが &lt;code&gt;btrfs&lt;/code&gt; をストレージドライバーとして使用するように指定した場合でも、適切な依存関係がインストールされていること、BTRFSファイルシステムが作成されていることなどを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="ad47b6b352b1ac679883107670f089f0acb63723" translate="yes" xml:space="preserve">
          <source>Docker Machine overview</source>
          <target state="translated">Docker Machineの概要</target>
        </trans-unit>
        <trans-unit id="cee1b2adcf7f278c41ac3e239b7e9eef04c13988" translate="yes" xml:space="preserve">
          <source>Docker Machine subcommand reference</source>
          <target state="translated">Docker Machineのサブコマンドリファレンス</target>
        </trans-unit>
        <trans-unit id="c246ffd3fe124c2fc6e6ae5b5eba91b06d2f5e66" translate="yes" xml:space="preserve">
          <source>Docker Machine uses SSH to complete the set up of instances in EC2 and requires the ability to access the instance directly.</source>
          <target state="translated">Docker Machineでは、EC2でインスタンスのセットアップを完了させるためにSSHを使用しており、インスタンスに直接アクセスする機能が必要となります。</target>
        </trans-unit>
        <trans-unit id="ead56b39dee7ef3d59ba310f67983e1ebbc10799" translate="yes" xml:space="preserve">
          <source>Docker Plugin API</source>
          <target state="translated">Docker プラグイン API</target>
        </trans-unit>
        <trans-unit id="4e71b63b949540dbd45960e1a9b3a7720b904c15" translate="yes" xml:space="preserve">
          <source>Docker Stacks and Distributed Application Bundles started as experimental features introduced in Docker 1.12 and Docker Compose 1.8, alongside the concept of swarm mode, and nodes and services in the Engine API. Neither Docker Engine nor the Docker Registry support distribution of bundles, and the concept of a &lt;code&gt;bundle&lt;/code&gt; is not the emphasis for new releases going forward.</source>
          <target state="translated">Dockerスタックと分散アプリケーションバンドルは、スウォームモードの概念、エンジンAPIのノードとサービスとともに、Docker 1.12とDocker Compose 1.8で導入された実験的な機能として始まりました。ドッカーエンジンもバンドルのドッカーレジストリサポート分布、および概念のどちら &lt;code&gt;bundle&lt;/code&gt; 、今後、新たなリリースのための重点ではありません。</target>
        </trans-unit>
        <trans-unit id="a06825d079ab2849cd767d10505f8e64cb3a6485" translate="yes" xml:space="preserve">
          <source>Docker Tools for Visual Studio</source>
          <target state="translated">Visual Studio用Dockerツール</target>
        </trans-unit>
        <trans-unit id="cc02628d6a1178aeb13e6439ce9ec843b98a3172" translate="yes" xml:space="preserve">
          <source>Docker Trust allows you to configure multiple delegations per repository, allowing you to manage the lifecycle of delegations. When adding additional delegations with &lt;code&gt;$ docker trust&lt;/code&gt; the collaborators key is once again added to the &lt;code&gt;targets/release&lt;/code&gt; role.</source>
          <target state="translated">Docker Trustを使用すると、リポジトリごとに複数の委任を構成でき、委任のライフサイクルを管理できます。 &lt;code&gt;$ docker trust&lt;/code&gt; を使用して委任を追加すると、collaboratorsキーが再度、 &lt;code&gt;targets/release&lt;/code&gt; ロールに追加されます。</target>
        </trans-unit>
        <trans-unit id="7aa58adea32a9f7a4bc781d957e50b1b0949739b" translate="yes" xml:space="preserve">
          <source>Docker Volume Driver for vSphere enables customers to address persistent storage requirements for Docker containers in vSphere environments.</source>
          <target state="translated">Docker Volume Driver for vSphereは、お客様がvSphere環境でDockerコンテナの永続的なストレージ要件に対応できるようにします。</target>
        </trans-unit>
        <trans-unit id="9e40a9a8660d369ea358fc5cfa50f1913f1b9637" translate="yes" xml:space="preserve">
          <source>Docker allocates subnet addresses from the address ranges specified by the &lt;code&gt;--default-addr-pool&lt;/code&gt; option. For example, a command line option &lt;code&gt;--default-addr-pool 10.10.0.0/16&lt;/code&gt; indicates that Docker will allocate subnets from that &lt;code&gt;/16&lt;/code&gt; address range. If &lt;code&gt;--default-addr-pool-mask-len&lt;/code&gt; were unspecified or set explicitly to 24, this would result in 256 &lt;code&gt;/24&lt;/code&gt; networks of the form &lt;code&gt;10.10.X.0/24&lt;/code&gt;.</source>
          <target state="translated">Dockerは、 &lt;code&gt;--default-addr-pool&lt;/code&gt; オプションで指定されたアドレス範囲からサブネットアドレスを割り当てます。たとえば、コマンドラインオプション &lt;code&gt;--default-addr-pool 10.10.0.0/16&lt;/code&gt; は、Dockerがその &lt;code&gt;/16&lt;/code&gt; アドレス範囲からサブネットを割り当てることを示します。場合 &lt;code&gt;--default-addr-pool-mask-len&lt;/code&gt; 不特定した又は24に明示的に設定され、これは256をもたらすであろう &lt;code&gt;/24&lt;/code&gt; 形式のネットワーク &lt;code&gt;10.10.X.0/24&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6278038acc032e7953c6df8aad186ebc1002fdd4" translate="yes" xml:space="preserve">
          <source>Docker also prints the digest of an image when &lt;em&gt;pushing&lt;/em&gt; to a registry. This may be useful if you want to pin to a version of the image you just pushed.</source>
          <target state="translated">Dockerは、レジストリに&lt;em&gt;プッシュ&lt;/em&gt;するときに、イメージのダイジェストも出力します。これは、プッシュした画像のバージョンに固定したい場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="5324a93ff598c142e2e98933ac188a461609f133" translate="yes" xml:space="preserve">
          <source>Docker always searches for unix sockets in &lt;code&gt;/run/docker/plugins&lt;/code&gt; first. It checks for spec or json files under &lt;code&gt;/etc/docker/plugins&lt;/code&gt; and &lt;code&gt;/usr/lib/docker/plugins&lt;/code&gt; if the socket doesn&amp;rsquo;t exist. The directory scan stops as soon as it finds the first plugin definition with the given name.</source>
          <target state="translated">Dockerは常に &lt;code&gt;/run/docker/plugins&lt;/code&gt; でunixソケットを最初に検索します。ソケットが存在しない場合は、 &lt;code&gt;/etc/docker/plugins&lt;/code&gt; および &lt;code&gt;/usr/lib/docker/plugins&lt;/code&gt; の下のspecファイルまたはjsonファイルをチェックします。ディレクトリスキャンは、指定された名前の最初のプラグイン定義を見つけるとすぐに停止します。</target>
        </trans-unit>
        <trans-unit id="b1e2c184a58d7fa6986d5c5fb9c54fd2bcedcb08" translate="yes" xml:space="preserve">
          <source>Docker and Kubernetes endpoints configurations, as well as default stack orchestrator and description can be modified with &lt;code&gt;docker context update&lt;/code&gt;</source>
          <target state="translated">DockerとKubernetesのエンドポイント構成、デフォルトのスタックオーケストレーターと説明は、Docker &lt;code&gt;docker context update&lt;/code&gt; 変更できます</target>
        </trans-unit>
        <trans-unit id="19c6a327829e80ff2849f300b8be119aad185da8" translate="yes" xml:space="preserve">
          <source>Docker and the Docker logo are trademarks or registered trademarks of Docker, Inc. in the United States and/or other countries.</source>
          <target state="translated">DockerおよびDockerロゴは、米国および/またはその他の国におけるDocker,Inc.の商標または登録商標です。</target>
        </trans-unit>
        <trans-unit id="5fd261f97c0753dd9d2677012873eff0de835e50" translate="yes" xml:space="preserve">
          <source>Docker automatically generates and loads a default profile for containers named &lt;code&gt;docker-default&lt;/code&gt;. On Docker versions &lt;code&gt;1.13.0&lt;/code&gt; and later, the Docker binary generates this profile in &lt;code&gt;tmpfs&lt;/code&gt; and then loads it into the kernel. On Docker versions earlier than &lt;code&gt;1.13.0&lt;/code&gt;, this profile is generated in &lt;code&gt;/etc/apparmor.d/docker&lt;/code&gt; instead.</source>
          <target state="translated">Dockerは、 &lt;code&gt;docker-default&lt;/code&gt; という名前のコンテナーのデフォルトプロファイルを自動的に生成してロードします。Dockerバージョン &lt;code&gt;1.13.0&lt;/code&gt; 以降では、Dockerバイナリがこのプロファイルを &lt;code&gt;tmpfs&lt;/code&gt; に生成し、それをカーネルにロードします。 &lt;code&gt;1.13.0&lt;/code&gt; より前のバージョンのDocker では、このプロファイルは代わりに &lt;code&gt;/etc/apparmor.d/docker&lt;/code&gt; に生成されます。</target>
        </trans-unit>
        <trans-unit id="36aab98cac3b30264c30a3b8c1ab2a8492bf6b01" translate="yes" xml:space="preserve">
          <source>Docker automatically sets some environment variables when creating a Linux container. Docker does not set any environment variables when creating a Windows container.</source>
          <target state="translated">DockerはLinuxコンテナを作成する際に、いくつかの環境変数を自動的に設定します。Windowsコンテナを作成する際には、Dockerは環境変数を設定しません。</target>
        </trans-unit>
        <trans-unit id="26f7ed16f22034c85a3924a533800947d612d3c0" translate="yes" xml:space="preserve">
          <source>Docker build supports experimental features like cache mounts, build secrets and ssh forwarding that are enabled by using an external implementation of the builder with a syntax directive. To learn about these features, &lt;a href=&quot;https://github.com/moby/buildkit/blob/master/frontend/dockerfile/docs/experimental/&quot;&gt;refer to the documentation in BuildKit repository&lt;/a&gt;.</source>
          <target state="translated">Dockerビルドは、キャッシュマウント、ビルドシークレット、ssh転送などの実験的機能をサポートします。これらは、構文ディレクティブを使用したビルダーの外部実装を使用することで有効になります。これらの機能については、&lt;a href=&quot;https://github.com/moby/buildkit/blob/master/frontend/dockerfile/docs/experimental/&quot;&gt;BuildKitリポジトリのドキュメントを参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9670987a72aa3ffadf269680e48b2636d70046ab" translate="yes" xml:space="preserve">
          <source>Docker can build images automatically by reading the instructions from a &lt;code&gt;Dockerfile&lt;/code&gt;. A &lt;code&gt;Dockerfile&lt;/code&gt; is a text document that contains all the commands a user could call on the command line to assemble an image. Using &lt;code&gt;docker build&lt;/code&gt; users can create an automated build that executes several command-line instructions in succession.</source>
          <target state="translated">Dockerは、 &lt;code&gt;Dockerfile&lt;/code&gt; から指示を読み取ることにより、イメージを自動的に構築できます。A &lt;code&gt;Dockerfile&lt;/code&gt; は、ユーザーが画像を組み立てるために、コマンドラインで呼び出すことができるすべてのコマンドを含むテキストドキュメントです。使用 &lt;code&gt;docker build&lt;/code&gt; 連続していくつかのコマンドライン命令を実行する自動ビルドを作成できるユーザーを。</target>
        </trans-unit>
        <trans-unit id="4bb9b20862141b3f6d322dbb6a74161a410cc1e2" translate="yes" xml:space="preserve">
          <source>Docker client flows</source>
          <target state="translated">Dockerクライアントフロー</target>
        </trans-unit>
        <trans-unit id="d20e070a888708ac804bb7f3478c403e44b83956" translate="yes" xml:space="preserve">
          <source>Docker concepts</source>
          <target state="translated">Dockerの概念</target>
        </trans-unit>
        <trans-unit id="d3b52a967f6c76cee08c0e14a2a11be4d550ea2d" translate="yes" xml:space="preserve">
          <source>Docker configs report the following events:</source>
          <target state="translated">Dockerの設定では、以下のようなイベントが報告されます。</target>
        </trans-unit>
        <trans-unit id="ce44a37fd4d945806f8253598f57605800cac7ac" translate="yes" xml:space="preserve">
          <source>Docker considers a private registry either secure or insecure. In the rest of this section, &lt;em&gt;registry&lt;/em&gt; is used for &lt;em&gt;private registry&lt;/em&gt;, and &lt;code&gt;myregistry:5000&lt;/code&gt; is a placeholder example for a private registry.</source>
          <target state="translated">Dockerはプライベートレジストリを安全または安全ではないと見なします。このセクションの残りの部分では、&lt;em&gt;レジストリ&lt;/em&gt;は&lt;em&gt;プライベートレジストリ&lt;/em&gt;に使用され、 &lt;code&gt;myregistry:5000&lt;/code&gt; はプライベートレジストリのプレースホルダーの例です。</target>
        </trans-unit>
        <trans-unit id="88b4598a5ff96f31828992a3d683ccb7e14868af" translate="yes" xml:space="preserve">
          <source>Docker consists of:</source>
          <target state="translated">Dockerで構成されています。</target>
        </trans-unit>
        <trans-unit id="8fa864f6d63b7920d5feeea58ebe98aacc779ad5" translate="yes" xml:space="preserve">
          <source>Docker containers are lightweight and fast! Containers have sub-second launch times, reducing the cycle time of development, testing, and deployment.</source>
          <target state="translated">Dockerコンテナは軽量で高速! コンテナの起動時間は1秒以下で、開発、テスト、デプロイのサイクルタイムを短縮します。</target>
        </trans-unit>
        <trans-unit id="c1b8e47dc472b543da346bab4e80d9953fa94e72" translate="yes" xml:space="preserve">
          <source>Docker containers are very similar to LXC containers, and they have similar security features. When you start a container with &lt;code&gt;docker run&lt;/code&gt;, behind the scenes Docker creates a set of namespaces and control groups for the container.</source>
          <target state="translated">DockerコンテナーはLXCコンテナーと非常によく似ており、同様のセキュリティ機能を備えています。 &lt;code&gt;docker run&lt;/code&gt; でコンテナーを起動すると、Dockerは舞台裏でコンテナーの名前空間とコントロールグループのセットを作成します。</target>
        </trans-unit>
        <trans-unit id="ae9ccf1da58c4c1d2b47b81602d33c9dc573c01c" translate="yes" xml:space="preserve">
          <source>Docker containers are, by default, quite secure; especially if you run your processes as non-privileged users inside the container.</source>
          <target state="translated">Dockerコンテナはデフォルトではかなり安全ですが、特にコンテナ内で非特権ユーザとしてプロセスを実行している場合は注意が必要です。</target>
        </trans-unit>
        <trans-unit id="0f06c8666f97517a7d3d00d4ebb45d7ef312ed79" translate="yes" xml:space="preserve">
          <source>Docker containers don&amp;rsquo;t need a hypervisor, so you can pack more of them onto your hosts. This means you get more value out of every server and can potentially reduce what you spend on equipment and licenses.</source>
          <target state="translated">Dockerコンテナーはハイパーバイザーを必要としないため、より多くのコンテナーをホストにパックできます。つまり、すべてのサーバーからより多くの価値を引き出し、機器やライセンスへの支出を削減できる可能性があります。</target>
        </trans-unit>
        <trans-unit id="620d948bfb0604a71c82ef396e99a3de6f366d2b" translate="yes" xml:space="preserve">
          <source>Docker containers report the following events:</source>
          <target state="translated">Dockerコンテナは以下のイベントを報告します。</target>
        </trans-unit>
        <trans-unit id="2610ade2da99a839eecc387366205cd50b64e532" translate="yes" xml:space="preserve">
          <source>Docker containers run (almost) everywhere. You can deploy containers on desktops, physical servers, virtual machines, into data centers, and up to public and private clouds.</source>
          <target state="translated">Dockerコンテナは(ほぼ)あらゆる場所で動作します。デスクトップ、物理サーバ、仮想マシン、データセンター、パブリッククラウドやプライベートクラウドにコンテナを展開することができます。</target>
        </trans-unit>
        <trans-unit id="876ee5a178115a1a05ba51423ede3227412455fe" translate="yes" xml:space="preserve">
          <source>Docker daemon attack surface</source>
          <target state="translated">Dockerデーモンの攻撃面</target>
        </trans-unit>
        <trans-unit id="75fb7248a691100473dcf0175bed3b866cf3a543" translate="yes" xml:space="preserve">
          <source>Docker daemon restarts which kills all running containers</source>
          <target state="translated">Docker デーモンが再起動し、実行中のコンテナをすべて終了させます。</target>
        </trans-unit>
        <trans-unit id="70c8555a506aabefb4688f4ef0118ace6220b6eb" translate="yes" xml:space="preserve">
          <source>Docker daemons report the following events:</source>
          <target state="translated">Dockerデーモンは以下のイベントを報告します。</target>
        </trans-unit>
        <trans-unit id="4251677d657a5c553e466fb729e810325a9c2c64" translate="yes" xml:space="preserve">
          <source>Docker defaults to using a &lt;code&gt;bridge&lt;/code&gt; network on a single host. For examples of how to work with bridge networks, see the Docker Labs tutorial on &lt;a href=&quot;https://github.com/docker/labs/blob/master/networking/A2-bridge-networking/&quot;&gt;Bridge networking&lt;/a&gt;.</source>
          <target state="translated">Dockerはデフォルトで、単一のホストで &lt;code&gt;bridge&lt;/code&gt; ネットワークを使用します。ブリッジネットワークの使用例については、&lt;a href=&quot;https://github.com/docker/labs/blob/master/networking/A2-bridge-networking/&quot;&gt;ブリッジネットワーク&lt;/a&gt;に関するDocker Labsチュートリアルをご覧ください。</target>
        </trans-unit>
        <trans-unit id="351bf0b8a014056cbddc02e7e25c41dac8157210" translate="yes" xml:space="preserve">
          <source>Docker discovers plugins by looking for them in the plugin directory whenever a user or container tries to use one by name.</source>
          <target state="translated">Dockerは、ユーザーやコンテナが名前を付けてプラグインを使おうとしたときに、プラグインディレクトリでプラグインを探すことでプラグインを発見します。</target>
        </trans-unit>
        <trans-unit id="9d2c047a9f4640206b9ae1ad934af06ef13db28a" translate="yes" xml:space="preserve">
          <source>Docker distributes official versions of the images that can be used for building Dockerfiles under &lt;code&gt;docker/dockerfile&lt;/code&gt; repository on Docker Hub. There are two channels where new images are released: stable and experimental.</source>
          <target state="translated">Dockerは、Docker Hubの &lt;code&gt;docker/dockerfile&lt;/code&gt; リポジトリの下でDockerfileを構築するために使用できるイメージの公式バージョンを配布しています。新しいイメージがリリースされるチャネルは2つあります。安定版と実験版です。</target>
        </trans-unit>
        <trans-unit id="c5432cb10accede4d487ad4c951b076e34b61ead" translate="yes" xml:space="preserve">
          <source>Docker does not re-download images that it already has cached, but we want Docker to attempt to download the tampered image from the registry and reject it because it is invalid.</source>
          <target state="translated">Dockerはすでにキャッシュされている画像を再ダウンロードすることはありませんが、Dockerにはレジストリから改ざんされた画像をダウンロードしようとし、無効だからと拒否するようにしてほしいのです。</target>
        </trans-unit>
        <trans-unit id="732b5ffc4585e751646589a16ffc8acce2e7c130" translate="yes" xml:space="preserve">
          <source>Docker generates a cross-signed certificate. This means that a version of the new root CA certificate is signed with the old root CA certificate. This cross-signed certificate is used as an intermediate certificate for all new node certificates. This ensures that nodes that still trust the old root CA can still validate a certificate signed by the new CA.</source>
          <target state="translated">Dockerはクロスサインされた証明書を生成します。これは、新しいルートCA証明書のバージョンが古いルートCA証明書で署名されることを意味します。このクロスサインされた証明書は、すべての新しいノード証明書の中間証明書として使用されます。これにより、まだ古いルートCAを信頼しているノードは、新しいCAが署名した証明書を検証することができます。</target>
        </trans-unit>
        <trans-unit id="a752842ad719d2a10386b20f1e29b257d090521b" translate="yes" xml:space="preserve">
          <source>Docker has a set of predefined &lt;code&gt;ARG&lt;/code&gt; variables that you can use without a corresponding &lt;code&gt;ARG&lt;/code&gt; instruction in the Dockerfile.</source>
          <target state="translated">Dockerには、Dockerfile内の対応する &lt;code&gt;ARG&lt;/code&gt; 命令なしで使用できる事前定義された &lt;code&gt;ARG&lt;/code&gt; 変数のセットがあります。</target>
        </trans-unit>
        <trans-unit id="5a9ab3b5144c01d2cf064a01fa77d77bca73fafe" translate="yes" xml:space="preserve">
          <source>Docker images can consist of multiple layers. In the example above, the image consists of two layers; &lt;code&gt;fdd5d7827f33&lt;/code&gt; and &lt;code&gt;a3ed95caeb02&lt;/code&gt;.</source>
          <target state="translated">Dockerイメージは複数のレイヤーで構成できます。上記の例では、画像は2つのレイヤーで構成されています。 &lt;code&gt;fdd5d7827f33&lt;/code&gt; および &lt;code&gt;a3ed95caeb02&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d088fbf44d726100ad0f41c1f23e4e05581f501a" translate="yes" xml:space="preserve">
          <source>Docker images have intermediate layers that increase reusability, decrease disk usage, and speed up &lt;code&gt;docker build&lt;/code&gt; by allowing each step to be cached. These intermediate layers are not shown by default.</source>
          <target state="translated">Dockerイメージには中間層があり、各ステップをキャッシュできるようにすることで、再利用性を高め、ディスク使用量を減らし、Docker &lt;code&gt;docker build&lt;/code&gt; を高速化します。これらの中間層はデフォルトでは表示されません。</target>
        </trans-unit>
        <trans-unit id="01c99cd4e6b6524d11e77af6915fc44a7fe11e1c" translate="yes" xml:space="preserve">
          <source>Docker images report the following events:</source>
          <target state="translated">Dockerイメージは以下のイベントを報告します。</target>
        </trans-unit>
        <trans-unit id="05529fa5b2f6c8c756fb80473a93b0a74a7271be" translate="yes" xml:space="preserve">
          <source>Docker inspect provides detailed information on constructs controlled by Docker.</source>
          <target state="translated">Docker inspectでは、Dockerで制御されているコンストラクトの詳細な情報を提供しています。</target>
        </trans-unit>
        <trans-unit id="b7d816c70aa6a50e18998939d4c8f412747557dd" translate="yes" xml:space="preserve">
          <source>Docker is a platform for developers and sysadmins to &lt;strong&gt;develop, deploy, and run&lt;/strong&gt; applications with containers. The use of Linux containers to deploy applications is called &lt;em&gt;containerization&lt;/em&gt;. Containers are not new, but their use for easily deploying applications is.</source>
          <target state="translated">Dockerは、開発者とシステム管理者がコンテナを使用してアプリケーションを&lt;strong&gt;開発、デプロイ、実行する&lt;/strong&gt;ためのプラットフォームです。Linuxコンテナーを使用してアプリケーションをデプロイすることを&lt;em&gt;コンテナー&lt;/em&gt;化と呼びます。コンテナーは新しいものではありませんが、アプリケーションを簡単にデプロイするためのコンテナーの使用はそうです。</target>
        </trans-unit>
        <trans-unit id="4630f4f6b9bb350d6435927aabbb527fa315450e" translate="yes" xml:space="preserve">
          <source>Docker is licensed under the Apache License, Version 2.0. See &lt;a href=&quot;https://github.com/moby/moby/blob/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for the full license text.</source>
          <target state="translated">Dockerは、Apache License、Version 2.0に基づいてライセンスされています。ライセンスの全文については、&lt;a href=&quot;https://github.com/moby/moby/blob/master/LICENSE&quot;&gt;ライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="41eb805f7f5ce74c0136241ce201f4359fdc1b5a" translate="yes" xml:space="preserve">
          <source>Docker is no longer using the named volume. &lt;code&gt;Unmount&lt;/code&gt; is called once per container stop. Plugin may deduce that it is safe to deprovision the volume at this point.</source>
          <target state="translated">Dockerは指定されたボリュームを使用しなくなりました。 &lt;code&gt;Unmount&lt;/code&gt; は、コンテナの停止ごとに1回呼び出されます。プラグインは、この時点でボリュームをプロビジョニング解除しても安全であると推定する場合があります。</target>
        </trans-unit>
        <trans-unit id="cea8c3af456a588aa615fe42a9efcc72125aba99" translate="yes" xml:space="preserve">
          <source>Docker machine shell environment on Mac or Linux</source>
          <target state="translated">MacやLinuxでのDockerマシンのシェル環境</target>
        </trans-unit>
        <trans-unit id="834d9eb820d510688500bc9822bc4f6013ff27d6" translate="yes" xml:space="preserve">
          <source>Docker machine shell environment on Windows</source>
          <target state="translated">Windows上のDockerマシンシェル環境</target>
        </trans-unit>
        <trans-unit id="153a53ca45c6ac5f58f492b5ce3d25d78f6a46ba" translate="yes" xml:space="preserve">
          <source>Docker manager nodes store the swarm state and manager logs in the &lt;code&gt;/var/lib/docker/swarm/&lt;/code&gt; directory. In 1.13 and higher, this data includes the keys used to encrypt the Raft logs. Without these keys, you cannot restore the swarm.</source>
          <target state="translated">Dockerマネージャノードは、 &lt;code&gt;/var/lib/docker/swarm/&lt;/code&gt; ディレクトリにswarm状態とマネージャログを保存します。1.13以降では、このデータにはRaftログの暗号化に使用されるキーが含まれています。これらのキーがないと、スウォームを復元できません。</target>
        </trans-unit>
        <trans-unit id="9d8c8020848a1bc698d9ebd74c79180b0d8fb55f" translate="yes" xml:space="preserve">
          <source>Docker manages most of the files in the configuration directory and you should not modify them. However, you &lt;em&gt;can modify&lt;/em&gt; the &lt;code&gt;config.json&lt;/code&gt; file to control certain aspects of how the &lt;code&gt;docker&lt;/code&gt; command behaves.</source>
          <target state="translated">Dockerは構成ディレクトリ内のほとんどのファイルを管理するため、変更しないでください。ただし、 &lt;code&gt;config.json&lt;/code&gt; ファイルを&lt;em&gt;変更し&lt;/em&gt;て、 &lt;code&gt;docker&lt;/code&gt; コマンドの動作の特定の側面を制御できます。</target>
        </trans-unit>
        <trans-unit id="a702cba7106194c03e0367bdc1ffd7b882680096" translate="yes" xml:space="preserve">
          <source>Docker network driver plugins</source>
          <target state="translated">Dockerネットワークドライバプラグイン</target>
        </trans-unit>
        <trans-unit id="de85e84b42d67d5eafe125abbb5ac9ea7d7002d8" translate="yes" xml:space="preserve">
          <source>Docker networks feature overview</source>
          <target state="translated">Dockerネットワークの機能概要</target>
        </trans-unit>
        <trans-unit id="65b01032e0693c656e6a408b50ae27aa4b93819a" translate="yes" xml:space="preserve">
          <source>Docker networks report the following events:</source>
          <target state="translated">Dockerネットワークは以下のイベントを報告します。</target>
        </trans-unit>
        <trans-unit id="868564ce7af93236022670b074a3f1505f5debbb" translate="yes" xml:space="preserve">
          <source>Docker nodes report the following events:</source>
          <target state="translated">Docker ノードは以下のイベントを報告します。</target>
        </trans-unit>
        <trans-unit id="1fc1d746218b957768b329fc69b99ad3a97b0387" translate="yes" xml:space="preserve">
          <source>Docker now connects securely by default:</source>
          <target state="translated">Dockerはデフォルトでセキュアに接続できるようになりました。</target>
        </trans-unit>
        <trans-unit id="0671294b90d6a2729f187a3420f9b4c77e962850" translate="yes" xml:space="preserve">
          <source>Docker performs an in-place update, no need to tear the stack down first or kill any containers.</source>
          <target state="translated">Dockerはインプレースアップデートを行い、スタックを最初に破壊したり、コンテナを削除する必要はありません。</target>
        </trans-unit>
        <trans-unit id="84aefc06cc0cbabc59eed166a320a96c6b7b735c" translate="yes" xml:space="preserve">
          <source>Docker plugins are out-of-process extensions which add capabilities to the Docker Engine.</source>
          <target state="translated">Dockerプラグインは、Dockerエンジンに機能を追加するプロセス外の拡張機能です。</target>
        </trans-unit>
        <trans-unit id="c36900e7cef6b121ca0ce592e13fb920c49e319d" translate="yes" xml:space="preserve">
          <source>Docker plugins report the following events:</source>
          <target state="translated">Dockerプラグインは以下のイベントを報告します。</target>
        </trans-unit>
        <trans-unit id="631b67106b47b10afeb3855dca09866284d583c8" translate="yes" xml:space="preserve">
          <source>Docker predefines a set of &lt;code&gt;ARG&lt;/code&gt; variables with information on the platform of the node performing the build (build platform) and on the platform of the resulting image (target platform). The target platform can be specified with the &lt;code&gt;--platform&lt;/code&gt; flag on &lt;code&gt;docker build&lt;/code&gt;.</source>
          <target state="translated">Docker は、ビルドを実行するノードのプラットフォーム（ビルドプラットフォーム）と結果のイメージのプラットフォーム（ターゲットプラットフォーム）に関する情報を使用して、 &lt;code&gt;ARG&lt;/code&gt; 変数のセットを事前定義します。ターゲットプラットフォームは、 &lt;code&gt;docker build&lt;/code&gt; の &lt;code&gt;--platform&lt;/code&gt; フラグで指定できます。</target>
        </trans-unit>
        <trans-unit id="cc0e08864d7ec1ddba1cadd269e1368821c375d8" translate="yes" xml:space="preserve">
          <source>Docker prints the digest of the image after the pull has finished. In the example above, the digest of the image is:</source>
          <target state="translated">Dockerはプルが終了した後、イメージのダイジェストを印刷します。上の例では、イメージのダイジェストが</target>
        </trans-unit>
        <trans-unit id="fcf96fb035e7bc5ae306abe9393d3cb0903ab5ea" translate="yes" xml:space="preserve">
          <source>Docker recommends a maximum of seven manager nodes for a swarm.</source>
          <target state="translated">Dockerでは、スウォームに対して最大7つのマネージャノードを推奨しています。</target>
        </trans-unit>
        <trans-unit id="f96906f4bb592181dbe9a39c15c8f9ea527f5635" translate="yes" xml:space="preserve">
          <source>Docker recommends three or five manager nodes per cluster to implement high availability. Because swarm mode manager nodes share data using Raft, there must be an odd number of managers. The swarm can continue to function after as long as a quorum of more than half of the manager nodes are available.</source>
          <target state="translated">Dockerでは、高可用性を実装するために、1クラスタあたり3~5台のマネージャノードを推奨しています。スウォームモードのマネージャーノードはRaftを使ってデータを共有するため、奇数のマネージャーノードが必要です。スウォームは、マネージャーノードの半数以上のクォーラムが利用可能である限り、その後も機能を継続することができます。</target>
        </trans-unit>
        <trans-unit id="6e57a0616687d980e1a126195a0a5e1df3f0cdb4" translate="yes" xml:space="preserve">
          <source>Docker requires the plugin to provide a volume, given a user specified volume name. &lt;code&gt;Mount&lt;/code&gt; is called once per container start. If the same &lt;code&gt;volume_name&lt;/code&gt; is requested more than once, the plugin may need to keep track of each new mount request and provision at the first mount request and deprovision at the last corresponding unmount request.</source>
          <target state="translated">Dockerは、ユーザーが指定したボリューム名を指定して、ボリュームを提供するプラグインを必要とします。 &lt;code&gt;Mount&lt;/code&gt; は、コンテナの起動ごとに1回呼び出されます。同じ &lt;code&gt;volume_name&lt;/code&gt; が複数回要求された場合、プラグインは、新しいマウント要求を追跡し、最初のマウント要求でプロビジョニングし、最後の対応するアンマウント要求でプロビジョニング解除する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="7f5da00bd131d9b5f72ea571b68ed8ed5938eb30" translate="yes" xml:space="preserve">
          <source>Docker run reference</source>
          <target state="translated">Dockerランリファレンス</target>
        </trans-unit>
        <trans-unit id="a3467015c714f0f2eec0a42f643e6952535a32e0" translate="yes" xml:space="preserve">
          <source>Docker runs instructions in a &lt;code&gt;Dockerfile&lt;/code&gt; in order. A &lt;code&gt;Dockerfile&lt;/code&gt;&lt;strong&gt;must start with a `FROM` instruction&lt;/strong&gt;. The &lt;code&gt;FROM&lt;/code&gt; instruction specifies the &lt;a href=&quot;https://docs.docker.com/engine/reference/glossary/#base-image&quot;&gt;&lt;em&gt;Base Image&lt;/em&gt;&lt;/a&gt; from which you are building. &lt;code&gt;FROM&lt;/code&gt; may only be preceded by one or more &lt;code&gt;ARG&lt;/code&gt; instructions, which declare arguments that are used in &lt;code&gt;FROM&lt;/code&gt; lines in the &lt;code&gt;Dockerfile&lt;/code&gt;.</source>
          <target state="translated">Dockerは &lt;code&gt;Dockerfile&lt;/code&gt; 内の命令を順番に実行します。 A &lt;code&gt;Dockerfile&lt;/code&gt; は&lt;strong&gt;`FROM`命令で開始する必要があります&lt;/strong&gt;。 &lt;code&gt;FROM&lt;/code&gt; 命令が指定する&lt;a href=&quot;https://docs.docker.com/engine/reference/glossary/#base-image&quot;&gt;&lt;em&gt;ベースイメージ&lt;/em&gt;&lt;/a&gt;あなたが構築しているからです。 &lt;code&gt;FROM&lt;/code&gt; の前には、 &lt;code&gt;Dockerfile&lt;/code&gt; の &lt;code&gt;FROM&lt;/code&gt; 行で使用される引数を宣言する1つ以上の &lt;code&gt;ARG&lt;/code&gt; 命令のみを指定できます。</target>
        </trans-unit>
        <trans-unit id="f7dfe54475fab92a3e82ad34c021ab33e93916f9" translate="yes" xml:space="preserve">
          <source>Docker runs processes in isolated containers. A container is a process which runs on a host. The host may be local or remote. When an operator executes &lt;code&gt;docker run&lt;/code&gt;, the container process that runs is isolated in that it has its own file system, its own networking, and its own isolated process tree separate from the host.</source>
          <target state="translated">Dockerはプロセスを分離されたコンテナーで実行します。コンテナは、ホスト上で実行されるプロセスです。ホストはローカルでもリモートでもかまいません。オペレーターが &lt;code&gt;docker run&lt;/code&gt; を実行すると、実行されるコンテナープロセスは、ホストから分離された独自のファイルシステム、独自のネットワーク、および独自の分離されたプロセスツリーを持つという点で分離されます。</target>
        </trans-unit>
        <trans-unit id="1bc79d0dc0a7f1f2b47d20cf6eef0c0378cf1728" translate="yes" xml:space="preserve">
          <source>Docker runtime execution options</source>
          <target state="translated">Dockerのランタイム実行オプション</target>
        </trans-unit>
        <trans-unit id="bb5c7c92c94eedb039ab7e24f249362401f74e58" translate="yes" xml:space="preserve">
          <source>Docker secrets report the following events:</source>
          <target state="translated">Dockerの秘密は、以下のイベントを報告しています。</target>
        </trans-unit>
        <trans-unit id="eff5599afc94cd79ffdef38b7838c922b9530085" translate="yes" xml:space="preserve">
          <source>Docker security</source>
          <target state="translated">ドッカーセキュリティ</target>
        </trans-unit>
        <trans-unit id="668e503dedbd5e9512ec49949d3a1985d4e340a8" translate="yes" xml:space="preserve">
          <source>Docker services report the following events:</source>
          <target state="translated">Docker サービスは以下のイベントを報告します。</target>
        </trans-unit>
        <trans-unit id="ed6989a1777de6ed159693207cffb0235412baf3" translate="yes" xml:space="preserve">
          <source>Docker stacks and distributed application bundles (experimental)</source>
          <target state="translated">Dockerスタックと分散型アプリケーションバンドル(実験編</target>
        </trans-unit>
        <trans-unit id="b37ea7c142dd122eb29c5b75066d8ea4046db002" translate="yes" xml:space="preserve">
          <source>Docker supports softlinks for the Docker data directory (&lt;code&gt;/var/lib/docker&lt;/code&gt;) and for &lt;code&gt;/var/lib/docker/tmp&lt;/code&gt;. The &lt;code&gt;DOCKER_TMPDIR&lt;/code&gt; and the data directory can be set like this:</source>
          <target state="translated">Dockerは、Dockerデータディレクトリ（ &lt;code&gt;/var/lib/docker&lt;/code&gt; ）および &lt;code&gt;/var/lib/docker/tmp&lt;/code&gt; のソフトリンクをサポートしています。 &lt;code&gt;DOCKER_TMPDIR&lt;/code&gt; とデータディレクトリは次のように設定することができます。</target>
        </trans-unit>
        <trans-unit id="faafa781465c97af3b7790acd7e65b291e131cdd" translate="yes" xml:space="preserve">
          <source>Docker supports the addition and removal of capabilities, allowing use of a non-default profile. This may make Docker more secure through capability removal, or less secure through the addition of capabilities. The best practice for users would be to remove all capabilities except those explicitly required for their processes.</source>
          <target state="translated">Dockerはケイパビリティの追加と削除をサポートしており、デフォルトではないプロファイルの使用を可能にしています。これにより、Dockerはケイパビリティの削除によってより安全になり、ケイパビリティの追加によって安全性が低下する可能性があります。ユーザーにとってのベストプラクティスは、プロセスに明示的に必要なものを除いて、すべてのケイパビリティを削除することでしょう。</target>
        </trans-unit>
        <trans-unit id="99a0efd6be62ff276e3630887ac2f70ed894f5c5" translate="yes" xml:space="preserve">
          <source>Docker supports the following restart policies:</source>
          <target state="translated">Dockerは以下の再起動ポリシーをサポートしています。</target>
        </trans-unit>
        <trans-unit id="027b46244a43e72d45ab57807d2f6dac54af37a6" translate="yes" xml:space="preserve">
          <source>Docker supports three different kinds of mounts, which allow containers to read from or write to files or directories, either on the host operating system, or on memory filesystems. These types are &lt;em&gt;data volumes&lt;/em&gt; (often referred to simply as volumes), &lt;em&gt;bind mounts&lt;/em&gt;, &lt;em&gt;tmpfs&lt;/em&gt;, and &lt;em&gt;named pipes&lt;/em&gt;.</source>
          <target state="translated">Dockerは3種類のマウントをサポートします。これにより、コンテナーは、ホストオペレーティングシステム上またはメモリファイルシステム上で、ファイルまたはディレクトリの読み取りまたは書き込みを行うことができます。これらのタイプは、&lt;em&gt;データボリューム&lt;/em&gt;（多くの場合、単にボリュームと呼ばれます）、&lt;em&gt;バインドマウント&lt;/em&gt;、&lt;em&gt;tmpfs&lt;/em&gt;、&lt;em&gt;名前付きパイプ&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="e9d1c0f4559e2cac2257d9f69a1a5ce24ec2dd3c" translate="yes" xml:space="preserve">
          <source>Docker swarm mode overlay network security model</source>
          <target state="translated">Dockerスウォームモードオーバーレイネットワークセキュリティモデル</target>
        </trans-unit>
        <trans-unit id="984ccf852a89f0fcd495e2cac824009025386e21" translate="yes" xml:space="preserve">
          <source>Docker treats lines that &lt;em&gt;begin&lt;/em&gt; with &lt;code&gt;#&lt;/code&gt; as a comment, unless the line is a valid &lt;a href=&quot;#parser-directives&quot;&gt;parser directive&lt;/a&gt;. A &lt;code&gt;#&lt;/code&gt; marker anywhere else in a line is treated as an argument. This allows statements like:</source>
          <target state="translated">ドッカーの扱いライン&lt;em&gt;始める&lt;/em&gt;と &lt;code&gt;#&lt;/code&gt; ラインが有効でない限り、コメントとして&lt;a href=&quot;#parser-directives&quot;&gt;パーサディレクティブ&lt;/a&gt;。 &lt;code&gt;#&lt;/code&gt; の行のどこか他のマーカーは、引数として扱われます。これにより、次のようなステートメントが許可されます。</target>
        </trans-unit>
        <trans-unit id="6fc652cfb42eea3121ea7094e3e49d78901d3e1e" translate="yes" xml:space="preserve">
          <source>Docker trust has a built-in generator for a delegation key pair, &lt;code&gt;$ docker trust generate &amp;lt;name&amp;gt;&lt;/code&gt;. Running this command will automatically load the delegation private key in to the local Docker trust store.</source>
          <target state="translated">Docker trustには、委任キーペアの組み込みジェネレーター、 &lt;code&gt;$ docker trust generate &amp;lt;name&amp;gt;&lt;/code&gt; があります。このコマンドを実行すると、委任秘密鍵がローカルのDockerトラストストアに自動的に読み込まれます。</target>
        </trans-unit>
        <trans-unit id="a3e18ce2b318155498923998a10a647781b37d97" translate="yes" xml:space="preserve">
          <source>Docker user guide</source>
          <target state="translated">Dockerユーザーガイド</target>
        </trans-unit>
        <trans-unit id="7cf0c8985f554a2ab43c541ad5d5654b5853f203" translate="yes" xml:space="preserve">
          <source>Docker uses a content-addressable image store, and the image ID is a SHA256 digest covering the image&amp;rsquo;s configuration and layers. In the example above, &lt;code&gt;debian:jessie&lt;/code&gt; and &lt;code&gt;debian:latest&lt;/code&gt; have the same image ID because they are actually the &lt;em&gt;same&lt;/em&gt; image tagged with different names. Because they are the same image, their layers are stored only once and do not consume extra disk space.</source>
          <target state="translated">Dockerはコンテンツアドレス可能なイメージストアを使用し、イメージIDはイメージの構成とレイヤーをカバーするSHA256ダイジェストです。上記の例では、 &lt;code&gt;debian:jessie&lt;/code&gt; と &lt;code&gt;debian:latest&lt;/code&gt; は、実際には&lt;em&gt;同じ&lt;/em&gt;名前のタグが付けられた&lt;em&gt;同じ&lt;/em&gt;画像であるため、同じ画像IDを持っています。それらは同じイメージであるため、それらのレイヤーは一度だけ保存され、余分なディスク領域を消費しません。</target>
        </trans-unit>
        <trans-unit id="443f071bf808fd15c344b1fbe1bf2930114552cd" translate="yes" xml:space="preserve">
          <source>Docker uses the &lt;code&gt;https://&lt;/code&gt; protocol to communicate with a registry, unless the registry is allowed to be accessed over an insecure connection. Refer to the &lt;a href=&quot;../dockerd/index#insecure-registries&quot;&gt;insecure registries&lt;/a&gt; section for more information.</source>
          <target state="translated">Dockerは、 &lt;code&gt;https://&lt;/code&gt; プロトコルを使用してレジストリと通信します。ただし、安全でない接続を介してレジストリへのアクセスが許可されている場合を除きます。詳細については、&lt;a href=&quot;../dockerd/index#insecure-registries&quot;&gt;安全でないレジストリの&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="b751958c100c7de7c22737834416e1fd56107444" translate="yes" xml:space="preserve">
          <source>Docker volume plugins</source>
          <target state="translated">Dockerボリュームプラグイン</target>
        </trans-unit>
        <trans-unit id="4606af6de220606ce501f303c6559e2261c61fad" translate="yes" xml:space="preserve">
          <source>Docker volumes report the following events:</source>
          <target state="translated">Dockerボリュームは以下のイベントを報告します。</target>
        </trans-unit>
        <trans-unit id="7d98d6a033d4e26ddc2c12fc65210ef05a32ca92" translate="yes" xml:space="preserve">
          <source>Docker&amp;rsquo;s &lt;a href=&quot;../plugin_api/index&quot;&gt;plugin infrastructure&lt;/a&gt; enables extending Docker by loading, removing and communicating with third-party components using a generic API. The access authorization subsystem was built using this mechanism.</source>
          <target state="translated">Dockerの&lt;a href=&quot;../plugin_api/index&quot;&gt;プラグインインフラストラクチャで&lt;/a&gt;は、汎用APIを使用してサードパーティコンポーネントをロード、削除、および通信することにより、Dockerを拡張できます。アクセス許可サブシステムは、このメカニズムを使用して構築されました。</target>
        </trans-unit>
        <trans-unit id="4b2afdd95105633b8f91194763ac61dd13f359f3" translate="yes" xml:space="preserve">
          <source>Docker&amp;rsquo;s access authorization can be extended by authorization plugins that your organization can purchase or build themselves. You can install one or more authorization plugins when you start the Docker &lt;code&gt;daemon&lt;/code&gt; using the &lt;code&gt;--authorization-plugin=PLUGIN_ID&lt;/code&gt; option.</source>
          <target state="translated">Dockerのアクセス認証は、組織が購入または構築できる認証プラグインによって拡張できます。 &lt;code&gt;--authorization-plugin=PLUGIN_ID&lt;/code&gt; オプションを使用してDocker &lt;code&gt;daemon&lt;/code&gt; を起動するときに、1つ以上の認証プラグインをインストールできます。</target>
        </trans-unit>
        <trans-unit id="8812524181e240b29c523eaa6071906a718eea45" translate="yes" xml:space="preserve">
          <source>Docker&amp;rsquo;s authorization subsystem supports multiple &lt;code&gt;--authorization-plugin&lt;/code&gt; parameters.</source>
          <target state="translated">Dockerの承認サブシステムは、複数の &lt;code&gt;--authorization-plugin&lt;/code&gt; パラメーターをサポートしています。</target>
        </trans-unit>
        <trans-unit id="04d227915ed4556b72a81c69397c4672ce57e948" translate="yes" xml:space="preserve">
          <source>Docker&amp;rsquo;s default seccomp profile is a whitelist which specifies the calls that are allowed. The table below lists the significant (but not all) syscalls that are effectively blocked because they are not on the whitelist. The table includes the reason each syscall is blocked rather than white-listed.</source>
          <target state="translated">Dockerのデフォルトのseccompプロファイルは、許可される呼び出しを指定するホワイトリストです。以下の表は、ホワイトリストに含まれていないために効果的にブロックされる重要な（すべてではない）システムコールを示しています。この表には、各syscallがホワイトリストに登録されているのではなくブロックされている理由が含まれています。</target>
        </trans-unit>
        <trans-unit id="b847750c1d2ed81302ec7ea1f562bf90ed2b5393" translate="yes" xml:space="preserve">
          <source>Docker&amp;rsquo;s lightweight containers also make scaling up and down fast and easy. You can quickly launch more containers when needed and then shut them down easily when they&amp;rsquo;re no longer needed.</source>
          <target state="translated">Dockerの軽量コンテナを使用すると、すばやく簡単にスケールアップおよびスケールダウンできます。必要に応じてより多くのコンテナをすばやく起動し、不要になったときに簡単にシャットダウンできます。</target>
        </trans-unit>
        <trans-unit id="0dcd710262e8728d2cdb3fc51c476cdaf6c2089b" translate="yes" xml:space="preserve">
          <source>Docker&amp;rsquo;s out-of-the-box authorization model is all or nothing. Any user with permission to access the Docker daemon can run any Docker client command. The same is true for callers using Docker&amp;rsquo;s Engine API to contact the daemon. If you require greater access control, you can create authorization plugins and add them to your Docker daemon configuration. Using an authorization plugin, a Docker administrator can configure granular access policies for managing access to the Docker daemon.</source>
          <target state="translated">Dockerのすぐに使える認証モデルは、全部かゼロかです。Dockerデーモンにアクセスする権限を持つユーザーは、任意のDockerクライアントコマンドを実行できます。DockerのエンジンAPIを使用してデーモンに接続する呼び出し元についても同様です。より高度なアクセス制御が必要な場合は、承認プラグインを作成してDockerデーモン構成に追加できます。Docker管理者は、承認プラグインを使用して、Dockerデーモンへのアクセスを管理するためのきめ細かいアクセスポリシーを構成できます。</target>
        </trans-unit>
        <trans-unit id="b384df8c9095dc1d5ee30c7a2997988b4d311cbd" translate="yes" xml:space="preserve">
          <source>Docker, Inc. and other parties may also have trademark rights in other terms used herein.</source>
          <target state="translated">Docker,Inc.および他の当事者は、本明細書で使用されている他の用語でも商標権を有する場合があります。</target>
        </trans-unit>
        <trans-unit id="6651ddff6eb82c840ced7c1dddee15c6e1913dd4" translate="yes" xml:space="preserve">
          <source>Dockerfile</source>
          <target state="translated">Dockerfile</target>
        </trans-unit>
        <trans-unit id="ebd579a5756c1f559e79a1bd43d69b702990a3a7" translate="yes" xml:space="preserve">
          <source>Dockerfile examples</source>
          <target state="translated">Dockerfileの例</target>
        </trans-unit>
        <trans-unit id="f164e275f12c58fb053600677577c996297db57b" translate="yes" xml:space="preserve">
          <source>Dockerfile reference</source>
          <target state="translated">Dockerfile参照</target>
        </trans-unit>
        <trans-unit id="96e071ae656bb862be892e05a7f4dceaebcc6252" translate="yes" xml:space="preserve">
          <source>Dockerfile should specify at least one of &lt;code&gt;CMD&lt;/code&gt; or &lt;code&gt;ENTRYPOINT&lt;/code&gt; commands.</source>
          <target state="translated">Dockerfileは、 &lt;code&gt;CMD&lt;/code&gt; または &lt;code&gt;ENTRYPOINT&lt;/code&gt; コマンドの少なくとも1つを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="6710996fbc943377b9f326a252a8fc870442c545" translate="yes" xml:space="preserve">
          <source>Dockerize PostgreSQL</source>
          <target state="translated">PostgreSQLをDocker化する</target>
        </trans-unit>
        <trans-unit id="f522617514b0faa2a1a00723ae5d71b42a83ed32" translate="yes" xml:space="preserve">
          <source>Dockerize a CouchDB service</source>
          <target state="translated">CouchDBサービスをDockerize</target>
        </trans-unit>
        <trans-unit id="53faf3cb66cc0848ff1ed7d72721c35f93befffb" translate="yes" xml:space="preserve">
          <source>Dockerize an ASP.NET Core application</source>
          <target state="translated">ASP.NET CoreアプリケーションをDocker化する</target>
        </trans-unit>
        <trans-unit id="7dc9d5fd4f0db1a0f934fb7cd570ecf366b29eea" translate="yes" xml:space="preserve">
          <source>Dockerize an application</source>
          <target state="translated">アプリケーションをDocker化する</target>
        </trans-unit>
        <trans-unit id="cc2d41256b7df192f9235517c4a22bb447581976" translate="yes" xml:space="preserve">
          <source>Dockerize an apt-cacher-ng service</source>
          <target state="translated">apt-cacher-ngサービスをDocker化する</target>
        </trans-unit>
        <trans-unit id="e1787e2991c7c57aea620420b24b740abd78acae" translate="yes" xml:space="preserve">
          <source>Dockerizing PostgreSQL</source>
          <target state="translated">PostgreSQLのDocker化</target>
        </trans-unit>
        <trans-unit id="e59d1fb14fd39cd54a3427a54381767e8f9dee2c" translate="yes" xml:space="preserve">
          <source>Dockerizing a CouchDB service</source>
          <target state="translated">CouchDBサービスをDockerizing</target>
        </trans-unit>
        <trans-unit id="5104f17bddb874a5f496e34a963f7c2acccddefa" translate="yes" xml:space="preserve">
          <source>Dockerizing an ASP.NET Core application</source>
          <target state="translated">ASP.NET CoreアプリケーションのDocker化</target>
        </trans-unit>
        <trans-unit id="da05b2de152a55abb340ddf6e2195c5afcbda127" translate="yes" xml:space="preserve">
          <source>Dockerizing an apt-cacher-ng service</source>
          <target state="translated">apt-cacher-ngサービスのDocker化</target>
        </trans-unit>
        <trans-unit id="65a094b0363a85cb7e0cb44baec4c0a53171ef92" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t clear set-user-ID and set-group-ID permission bits when a file is modified.</source>
          <target state="translated">ファイルが変更されたときに、set-user-IDおよびset-group-ID許可ビットをクリアしないでください。</target>
        </trans-unit>
        <trans-unit id="f09df74b71932e7ccae31d1ae0c37aad556a5785" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t let containers reboot the host. Also gated by &lt;code&gt;CAP_SYS_BOOT&lt;/code&gt;.</source>
          <target state="translated">コンテナにホストを再起動させないでください。 &lt;code&gt;CAP_SYS_BOOT&lt;/code&gt; によってもゲートされます。</target>
        </trans-unit>
        <trans-unit id="9c6134ff9ce78244820bbca45a71e71ba3ab910e" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t truncate output</source>
          <target state="translated">出力を切り捨てない</target>
        </trans-unit>
        <trans-unit id="6962cf79c6381a85a2a514c11b44290383e7dec4" translate="yes" xml:space="preserve">
          <source>Double check what you have in the ports section under your web service and make sure the ip addresses you enter in your browser or curl reflects that</source>
          <target state="translated">Web サービスの下の ports セクションにあるものをダブルチェックし、ブラウザまたは curl に入力した ip アドレスが反映されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="be4e5ba4a3ea4d0c241bbc8d66a24e9c251a8bb4" translate="yes" xml:space="preserve">
          <source>Download a &lt;code&gt;docker&lt;/code&gt; image to test with.</source>
          <target state="translated">テストに使用する &lt;code&gt;docker&lt;/code&gt; イメージをダウンロードします。</target>
        </trans-unit>
        <trans-unit id="dfbf148f90529dad9825aed5f1dbd161aebca5e6" translate="yes" xml:space="preserve">
          <source>Download all tagged images in the repository</source>
          <target state="translated">リポジトリ内のすべてのタグ付き画像をダウンロード</target>
        </trans-unit>
        <trans-unit id="987841e8f6296f9c01a31ac8e9715f0f8086ece7" translate="yes" xml:space="preserve">
          <source>Download an &lt;code&gt;ubuntu&lt;/code&gt; image:</source>
          <target state="translated">&lt;code&gt;ubuntu&lt;/code&gt; イメージをダウンロードします。</target>
        </trans-unit>
        <trans-unit id="449a13186a2f61dafc8a4085b58b02b8e07afd95" translate="yes" xml:space="preserve">
          <source>Download the Docker Machine binary and extract it to your PATH.</source>
          <target state="translated">Docker MachineのバイナリをダウンロードしてPATHに展開します。</target>
        </trans-unit>
        <trans-unit id="4cbdb9690ada90270949b9b9c2ab410dc16b546e" translate="yes" xml:space="preserve">
          <source>Drain a node on the swarm</source>
          <target state="translated">スウォーム上のノードをドレインする</target>
        </trans-unit>
        <trans-unit id="b5c7d8b545ea7fdba609234ce2324aa0c0d6dbb0" translate="yes" xml:space="preserve">
          <source>Driver</source>
          <target state="translated">Driver</target>
        </trans-unit>
        <trans-unit id="58623e02e26a5eecacd7ec6d29cbc2da6cf829be" translate="yes" xml:space="preserve">
          <source>Driver Specific Log Tags</source>
          <target state="translated">ドライバー固有のログタグ</target>
        </trans-unit>
        <trans-unit id="63a7342acd4948df144843654bb4f58b3c0934e9" translate="yes" xml:space="preserve">
          <source>Driver name</source>
          <target state="translated">ドライバー名</target>
        </trans-unit>
        <trans-unit id="82f820e3ae879e421ed356bdaeb83cb74f60b8e8" translate="yes" xml:space="preserve">
          <source>Driver options and operating system defaults</source>
          <target state="translated">ドライバのオプションとオペレーティングシステムのデフォルト</target>
        </trans-unit>
        <trans-unit id="988f30538766cc86e0b1714347b5186cdbcbaf7d" translate="yes" xml:space="preserve">
          <source>Driver to manage the Network</source>
          <target state="translated">ネットワークを管理するドライバ</target>
        </trans-unit>
        <trans-unit id="dcf380a033027a26c2e3ddd55737f95eab21addf" translate="yes" xml:space="preserve">
          <source>Driver-specific options</source>
          <target state="translated">ドライバー固有のオプション</target>
        </trans-unit>
        <trans-unit id="089b71742f71efa9494ba163a9af65ed77d86c46" translate="yes" xml:space="preserve">
          <source>Drivers for cloud providers</source>
          <target state="translated">クラウド事業者のドライバー</target>
        </trans-unit>
        <trans-unit id="624db526c9888ba34387475c520773e8d7f6c797" translate="yes" xml:space="preserve">
          <source>Drivers for creating machines</source>
          <target state="translated">機械を作るためのドライバー</target>
        </trans-unit>
        <trans-unit id="a8e62c51b2b545ed908d99a99d2a81a9fecc1415" translate="yes" xml:space="preserve">
          <source>Drop Linux capabilities</source>
          <target state="translated">Linux の機能を削除</target>
        </trans-unit>
        <trans-unit id="0133959e0fe28ab7df28ee900d281cb45688219d" translate="yes" xml:space="preserve">
          <source>Due to these rules, the following examples are all invalid:</source>
          <target state="translated">これらのルールのため、以下の例はすべて無効です。</target>
        </trans-unit>
        <trans-unit id="f1203cbad7d464de9bf142430c50fba1897215d2" translate="yes" xml:space="preserve">
          <source>Dump raw JSON data</source>
          <target state="translated">生のJSONデータをダンプ</target>
        </trans-unit>
        <trans-unit id="5fcbce098b3631017ceed4386fb90b26949078a6" translate="yes" xml:space="preserve">
          <source>Duplicate keys with conflicting values in engine labels</source>
          <target state="translated">エンジンラベルの値が競合するキーの重複</target>
        </trans-unit>
        <trans-unit id="034eba109fdd840d7987f2f7935b670a859ce55a" translate="yes" xml:space="preserve">
          <source>Duration after each task rollback to monitor for failure (ns|us|ms|s|m|h)</source>
          <target state="translated">各タスクのロールバック後の障害監視時間 (ns|us|ms|s|m|h)</target>
        </trans-unit>
        <trans-unit id="c59ac303e72ea0ef7a170c402f88f45692524572" translate="yes" xml:space="preserve">
          <source>Duration after each task rollback to monitor for failure (ns|us|ms|s|m|h) (default 5s)</source>
          <target state="translated">各タスクのロールバック後、障害を監視する時間 (ns|us|ms|s|m|h)(デフォルト 5s)</target>
        </trans-unit>
        <trans-unit id="da4c7e39ba8c23e5e0cd899639175471eebf78e6" translate="yes" xml:space="preserve">
          <source>Duration after each task rollback to monitor for failure. If a task stops before this time period has elapsed, the rollback is considered to have failed.</source>
          <target state="translated">各タスクのロールバックが失敗したかどうかを監視するための、各タスクのロールバック後の時間。この期間が経過する前にタスクが停止した場合、ロールバックは失敗したとみなされます。</target>
        </trans-unit>
        <trans-unit id="0a61c50c913a6678b1bfd7c31c73581a705f1488" translate="yes" xml:space="preserve">
          <source>Duration after each task update to monitor for failure (ns|us|ms|s|m|h)</source>
          <target state="translated">各タスク更新後の障害監視時間 (ns|us|ms|s|m|h)</target>
        </trans-unit>
        <trans-unit id="6f49c2a3a35daff2e829e9af1525f2881741bf33" translate="yes" xml:space="preserve">
          <source>Duration after each task update to monitor for failure (ns|us|ms|s|m|h) (default 5s)</source>
          <target state="translated">各タスク更新後の障害監視時間 (ns|us|ms|s|m|h)(デフォルト 5s)</target>
        </trans-unit>
        <trans-unit id="53554785487e58cd3cefb0f6ceb88e2b6bd04dfe" translate="yes" xml:space="preserve">
          <source>During request/response processing, some authorization flows might need to do additional queries to the Docker daemon. To complete such flows, plugins can call the daemon API similar to a regular user. To enable these additional queries, the plugin must provide the means for an administrator to configure proper authentication and security policies.</source>
          <target state="translated">リクエスト/レスポンス処理の間、いくつかの認可フローはDockerデーモンに追加のクエリを行う必要があるかもしれません。このようなフローを完了させるために、プラグインは通常のユーザーと同様にデーモンAPIを呼び出すことができます。これらの追加クエリを有効にするには、プラグインは管理者が適切な認証とセキュリティポリシーを設定するための手段を提供しなければなりません。</target>
        </trans-unit>
        <trans-unit id="405e980d070ffd80ef37d8db39f5de068a7257fb" translate="yes" xml:space="preserve">
          <source>Dynamic IP addresses are OK for worker nodes.</source>
          <target state="translated">ワーカーノードの場合は、ダイナミックIPアドレスでOKです。</target>
        </trans-unit>
        <trans-unit id="faef57a22f7dc2e4b79a848b00f33490f12e5bd3" translate="yes" xml:space="preserve">
          <source>ENTRYPOINT</source>
          <target state="translated">ENTRYPOINT</target>
        </trans-unit>
        <trans-unit id="04d4562bb62de255ce2134b682c3ab49d92a1184" translate="yes" xml:space="preserve">
          <source>ENTRYPOINT (Default Command to Execute at Runtime)</source>
          <target state="translated">ENTRYPOINT (ランタイム時に実行するデフォルトコマンド)</target>
        </trans-unit>
        <trans-unit id="1677e962b49d802523d196bc91db93a12cdada42" translate="yes" xml:space="preserve">
          <source>ENTRYPOINT (default command to execute at runtime)</source>
          <target state="translated">ENTRYPOINT (実行時に実行するデフォルトのコマンド)</target>
        </trans-unit>
        <trans-unit id="83f5abde9a6352351a80acadba39616daafb7b93" translate="yes" xml:space="preserve">
          <source>ENTRYPOINT [&amp;ldquo;exec_entry&amp;rdquo;, &amp;ldquo;p1_entry&amp;rdquo;]</source>
          <target state="translated">ENTRYPOINT [&amp;ldquo; exec_entry&amp;rdquo;、&amp;ldquo; p1_entry&amp;rdquo;]</target>
        </trans-unit>
        <trans-unit id="92fd4ff5517c94179eb9833675bd0b743beeb4fd" translate="yes" xml:space="preserve">
          <source>ENTRYPOINT exec_entry p1_entry</source>
          <target state="translated">ENTRYPOINT exec_entry p1_entry</target>
        </trans-unit>
        <trans-unit id="7f184d5c4b1062456981688cae02931835eb9712" translate="yes" xml:space="preserve">
          <source>ENTRYPOINT has two forms:</source>
          <target state="translated">ENTRYPOINTには2つの形があります。</target>
        </trans-unit>
        <trans-unit id="086bfb42cb0e1f0682c42f25c92a8f7e76b5bda4" translate="yes" xml:space="preserve">
          <source>ENV</source>
          <target state="translated">ENV</target>
        </trans-unit>
        <trans-unit id="03e04fbf0b8725a53a6cbe38461c5e03bae0c5b7" translate="yes" xml:space="preserve">
          <source>ENV (Environment Variables)</source>
          <target state="translated">ENV(環境変数</target>
        </trans-unit>
        <trans-unit id="8dce721662f75046379d078561daafe3ba721934" translate="yes" xml:space="preserve">
          <source>ENV (environment variables)</source>
          <target state="translated">ENV (環境変数)</target>
        </trans-unit>
        <trans-unit id="4fb971f0e169071591da240f314bc6257187853c" translate="yes" xml:space="preserve">
          <source>EXPOSE</source>
          <target state="translated">EXPOSE</target>
        </trans-unit>
        <trans-unit id="205f373e190ef924849c88ee768b689f00154d1e" translate="yes" xml:space="preserve">
          <source>EXPOSE (Incoming Ports)</source>
          <target state="translated">EXPOSE (受信ポート)</target>
        </trans-unit>
        <trans-unit id="f9ece15f75c59e80e6a67c5b0f0021430e495c12" translate="yes" xml:space="preserve">
          <source>EXPOSE (incoming ports)</source>
          <target state="translated">EXPOSE (受信ポート)</target>
        </trans-unit>
        <trans-unit id="fec76ceae8ec767e98d00e461960272da2b038cd" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; may contain wildcards and matching will be done using Go&amp;rsquo;s &lt;a href=&quot;http://golang.org/pkg/path/filepath#Match&quot;&gt;filepath.Match&lt;/a&gt; rules. For example:</source>
          <target state="translated">各 &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; にはワイルドカードを含めることができ、マッチングはGoの&lt;a href=&quot;http://golang.org/pkg/path/filepath#Match&quot;&gt;filepath.Match&lt;/a&gt;ルールを使用して行われます。例えば：</target>
        </trans-unit>
        <trans-unit id="81877b0fd46dd38cadce3c4988473582091ff0e3" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; may contain wildcards and matching will be done using Go&amp;rsquo;s &lt;a href=&quot;https://golang.org/pkg/path/filepath#Match&quot;&gt;filepath.Match&lt;/a&gt; rules. For example:</source>
          <target state="translated">各 &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; にはワイルドカードを含めることができ、照合はGoの&lt;a href=&quot;https://golang.org/pkg/path/filepath#Match&quot;&gt;filepath.Match&lt;/a&gt;ルールを使用して行われます。例えば：</target>
        </trans-unit>
        <trans-unit id="f939d974bc27b2998fc295acd174f5d1d234214a" translate="yes" xml:space="preserve">
          <source>Each configuration has a project name. If you supply a &lt;code&gt;-p&lt;/code&gt; flag, you can specify a project name. If you don&amp;rsquo;t specify the flag, Compose uses the current directory name. See also the &lt;a href=&quot;../envvars/index#compose_project_name&quot;&gt;COMPOSE_PROJECT_NAME environment variable&lt;/a&gt;.</source>
          <target state="translated">各構成にはプロジェクト名があります。ユーザーが指定する場合は &lt;code&gt;-p&lt;/code&gt; フラグを、あなたはプロジェクト名を指定することができます。フラグを指定しない場合、Composeは現在のディレクトリ名を使用します。&lt;a href=&quot;../envvars/index#compose_project_name&quot;&gt;COMPOSE_PROJECT_NAME環境変数&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="d05d3dac7850e88121b8c8657cbb82c0c48d319d" translate="yes" xml:space="preserve">
          <source>Each container can now look up the hostname &lt;code&gt;web&lt;/code&gt; or &lt;code&gt;db&lt;/code&gt; and get back the appropriate container&amp;rsquo;s IP address. For example, &lt;code&gt;web&lt;/code&gt;&amp;rsquo;s application code could connect to the URL &lt;code&gt;postgres://db:5432&lt;/code&gt; and start using the Postgres database.</source>
          <target state="translated">これで、各コンテナーはホスト名 &lt;code&gt;web&lt;/code&gt; または &lt;code&gt;db&lt;/code&gt; を検索して、適切なコンテナーのIPアドレスを取得できます。たとえば、 &lt;code&gt;web&lt;/code&gt; のアプリケーションコードはURL &lt;code&gt;postgres://db:5432&lt;/code&gt; に接続し、Postgresデータベースの使用を開始できます。</target>
        </trans-unit>
        <trans-unit id="63d3059d71a3c7e0018a7f1eac3dab7fc01b8dc7" translate="yes" xml:space="preserve">
          <source>Each driver has a set of options specific to that provider. These options provide information to machine such as connection credentials, ports, and so forth. For example, to create an Azure machine:</source>
          <target state="translated">各ドライバは、そのプロバイダに固有のオプションのセットを持っています。これらのオプションは、接続認証情報やポートなどの情報をマシンに提供します。例えば、Azure マシンを作成する場合。</target>
        </trans-unit>
        <trans-unit id="0a9ac250ed75a8fea3b23e453a93e4a9adcf7d4b" translate="yes" xml:space="preserve">
          <source>Each file contains three fields: the username or ID of the user, followed by a beginning UID or GID (which is treated as UID or GID 0 within the namespace) and a maximum number of UIDs or GIDs available to the user. For instance, given the following entry:</source>
          <target state="translated">各ファイルには3つのフィールドが含まれています。ユーザ名またはユーザIDの後に、最初のUIDまたはGID(名前空間内ではUIDまたはGID 0として扱われます)と、ユーザが利用可能なUIDまたはGIDの最大数が続きます。例えば、次のようなエントリがあるとします。</target>
        </trans-unit>
        <trans-unit id="48d29e9b7dc895f5241f8439eda539b51c5c11c4" translate="yes" xml:space="preserve">
          <source>Each machine is created with a public dynamic IP address for external connectivity. All its ports (except Docker and SSH) are closed by default. You can use &lt;code&gt;--azure-open-port&lt;/code&gt; argument to specify multiple port numbers to be accessible from Internet.</source>
          <target state="translated">各マシンは、外部接続用のパブリック動的IPアドレスで作成されます。すべてのポート（DockerとSSHを除く）はデフォルトで閉じられています。 &lt;code&gt;--azure-open-port&lt;/code&gt; 引数を使用して、インターネットからアクセスできるように複数のポート番号を指定できます。</target>
        </trans-unit>
        <trans-unit id="f7cf7abc3625e74684dcb7c2a7f5ea37a6f32e52" translate="yes" xml:space="preserve">
          <source>Each of these commands has the same result.</source>
          <target state="translated">これらのコマンドはそれぞれ同じ結果になります。</target>
        </trans-unit>
        <trans-unit id="72688ceb1a686a8383bd3bad94e7f07926f95bba" translate="yes" xml:space="preserve">
          <source>Each of these is a single value, analogous to its &lt;a href=&quot;../../../engine/reference/run/index&quot;&gt;docker run&lt;/a&gt; counterpart.</source>
          <target state="translated">これらのそれぞれは単一の値であり、その&lt;a href=&quot;../../../engine/reference/run/index&quot;&gt;docker run&lt;/a&gt;対応物と類似しています。</target>
        </trans-unit>
        <trans-unit id="c05fb1ce12f08ea9d8319a0b5cb6bbed623d709f" translate="yes" xml:space="preserve">
          <source>Each of these is a single value, analogous to its &lt;a href=&quot;../../engine/reference/commandline/service_create/index&quot;&gt;docker service create&lt;/a&gt; counterpart.</source>
          <target state="translated">これらのそれぞれは単一の値であり、その&lt;a href=&quot;../../engine/reference/commandline/service_create/index&quot;&gt;docker service create&lt;/a&gt;対応物に類似しています。</target>
        </trans-unit>
        <trans-unit id="112493318b697fbb6df3f82f76f9734a97e10cf2" translate="yes" xml:space="preserve">
          <source>Each of these is a single value, analogous to its &lt;a href=&quot;../../engine/reference/run/index&quot;&gt;docker run&lt;/a&gt; counterpart. Note that &lt;code&gt;mac_address&lt;/code&gt; is a legacy option.</source>
          <target state="translated">これらのそれぞれは単一の値であり、その&lt;a href=&quot;../../engine/reference/run/index&quot;&gt;docker run&lt;/a&gt;対応物と類似しています。 &lt;code&gt;mac_address&lt;/code&gt; はレガシーオプションであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8547c75aa80e0153efd29d3adb473078942ffb32" translate="yes" xml:space="preserve">
          <source>Each plugin must support two request authorization messages formats, one from the daemon to the plugin and then from the plugin to the daemon. The tables below detail the content expected in each message.</source>
          <target state="translated">各プラグインは、デーモンからプラグインへ、そしてプラグインからデーモンへの2つのリクエスト承認メッセージのフォーマットをサポートしなければなりません。以下の表は、各メッセージで期待される内容の詳細を示しています。</target>
        </trans-unit>
        <trans-unit id="68288698f702142daab7d4db0b2579a134118a4f" translate="yes" xml:space="preserve">
          <source>Each request sent to the plugin includes the authenticated user, the HTTP headers, and the request/response body. Only the user name and the authentication method used are passed to the plugin. Most importantly, no user credentials or tokens are passed. Finally, not all request/response bodies are sent to the authorization plugin. Only those request/response bodies where the &lt;code&gt;Content-Type&lt;/code&gt; is either &lt;code&gt;text/*&lt;/code&gt; or &lt;code&gt;application/json&lt;/code&gt; are sent.</source>
          <target state="translated">プラグインに送信される各リクエストには、認証されたユーザー、HTTPヘッダー、およびリクエスト/レスポンスの本文が含まれます。使用されるユーザー名と認証方法のみがプラグインに渡されます。最も重要なのは、ユーザーの資格情報やトークンが渡されないことです。最後に、すべてのリクエスト/レスポンス本文が承認プラグインに送信されるわけではありません。 &lt;code&gt;Content-Type&lt;/code&gt; が &lt;code&gt;text/*&lt;/code&gt; または &lt;code&gt;application/json&lt;/code&gt; のいずれかである要求/応答本文のみが送信されます。</target>
        </trans-unit>
        <trans-unit id="ede8414aac2a8f9c014fb055a6c15ef89760961c" translate="yes" xml:space="preserve">
          <source>Each service can specify what networks to connect to with the &lt;em&gt;service-level&lt;/em&gt;&lt;code&gt;networks&lt;/code&gt; key, which is a list of names referencing entries under the &lt;em&gt;top-level&lt;/em&gt;&lt;code&gt;networks&lt;/code&gt; key.</source>
          <target state="translated">各サービスは、&lt;em&gt;サービスレベル&lt;/em&gt; &lt;code&gt;networks&lt;/code&gt; キーで接続するネットワークを指定できます。これは、&lt;em&gt;トップレベル&lt;/em&gt; &lt;code&gt;networks&lt;/code&gt; キーの下のエントリを参照する名前のリストです。</target>
        </trans-unit>
        <trans-unit id="ddf861ab76baae722957a31e0c09819c1c81b9da" translate="yes" xml:space="preserve">
          <source>Each service uses environment variables to specify where the service should look for that secret data.</source>
          <target state="translated">各サービスは環境変数を使用して、サービスが秘密のデータを探す場所を指定します。</target>
        </trans-unit>
        <trans-unit id="cd8f61abf8393e15d2e53da309cf37cc9e034baf" translate="yes" xml:space="preserve">
          <source>Each tag represents a digest, similar to a Git hash. Some tags, such as &lt;code&gt;latest&lt;/code&gt;, are updated often to point to a new digest. Others, such as &lt;code&gt;ubuntu:16.04&lt;/code&gt;, represent a released software version and are not expected to update to point to a new digest often if at all. In Docker 1.13 and higher, when you create a service, it is constrained to create tasks using a specific digest of an image until you update the service using &lt;code&gt;service update&lt;/code&gt; with the &lt;code&gt;--image&lt;/code&gt; flag. If you use an older version of Docker Engine, you must remove and re-create the service to update its image.</source>
          <target state="translated">各タグは、Gitハッシュに似たダイジェストを表します。 &lt;code&gt;latest&lt;/code&gt; などの一部のタグは、新しいダイジェストを指すように頻繁に更新されます。 &lt;code&gt;ubuntu:16.04&lt;/code&gt; などのその他のものは、リリースされたソフトウェアバージョンを表しており、新しいダイジェストを指すように更新されることはほとんどありません。 Docker 1.13以降では、サービスを作成 &lt;code&gt;service update&lt;/code&gt; と、-- &lt;code&gt;--image&lt;/code&gt; フラグを指定したservice updateを使用してサービスを更新するまで、イメージの特定のダイジェストを使用してタスクを作成することが制限されます。古いバージョンのDocker Engineを使用している場合は、サービスを削除して再作成し、そのイメージを更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="a6f2f4704f62df79d585dc4ffe564572ce2ba51b" translate="yes" xml:space="preserve">
          <source>Each time a new node joins the swarm, the manager issues a certificate to the node. The certificate contains a randomly generated node ID to identify the node under the certificate common name (CN) and the role under the organizational unit (OU). The node ID serves as the cryptographically secure node identity for the lifetime of the node in the current swarm.</source>
          <target state="translated">新しいノードがスウォームに参加するたびに、マネージャはそのノードに証明書を発行します。証明書には、ランダムに生成されたノードIDが含まれており、証明書の共通名(CN)と組織単位(OU)の役割の下でノードを識別します。ノードIDは、現在のスウォーム内のノードのライフタイムの間、暗号化された安全なノードIDとして機能します。</target>
        </trans-unit>
        <trans-unit id="659da81d9c19635927de8c105a82812d63c281f0" translate="yes" xml:space="preserve">
          <source>Edit &lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;. Assuming the file was previously empty, the following entry enables &lt;code&gt;userns-remap&lt;/code&gt; using user and group called &lt;code&gt;testuser&lt;/code&gt;. You can address the user and group by ID or name. You only need to specify the group name or ID if it is different from the user name or ID. If you provide both the user and group name or ID, separate them by a colon (&lt;code&gt;:&lt;/code&gt;) character. The following formats all work for the value, assuming the UID and GID of &lt;code&gt;testuser&lt;/code&gt; are &lt;code&gt;1001&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;/etc/docker/daemon.json&lt;/code&gt; を編集します。ファイルが以前は空であったと仮定すると、次のエントリは、 &lt;code&gt;testuser&lt;/code&gt; と呼ばれるユーザーとグループを使用して &lt;code&gt;userns-remap&lt;/code&gt; を有効にします。IDまたは名前でユーザーとグループをアドレス指定できます。グループ名またはIDは、ユーザー名またはIDと異なる場合にのみ指定する必要があります。（ユーザーおよびグループの名前またはIDの両方を提供する場合は、コロンで区切り &lt;code&gt;:&lt;/code&gt; ）文字。 &lt;code&gt;testuser&lt;/code&gt; の UIDとGID が &lt;code&gt;1001&lt;/code&gt; であると仮定すると、次の形式はすべて値に対して機能します。</target>
        </trans-unit>
        <trans-unit id="16e51a30d5c7085e75eb2ed76ad0ee16781ee86d" translate="yes" xml:space="preserve">
          <source>Edit &lt;code&gt;docker-compose.yml&lt;/code&gt; in your project directory to add a &lt;a href=&quot;https://docs.docker.com/storage&quot;&gt;bind mount&lt;/a&gt; for the &lt;code&gt;web&lt;/code&gt; service:</source>
          <target state="translated">プロジェクトディレクトリの &lt;code&gt;docker-compose.yml&lt;/code&gt; を編集して、 &lt;code&gt;web&lt;/code&gt; サービスの&lt;a href=&quot;https://docs.docker.com/storage&quot;&gt;バインドマウント&lt;/a&gt;を追加します。</target>
        </trans-unit>
        <trans-unit id="030ba073945e9a4d524dd24469171822bc1bba7b" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;site.conf&lt;/code&gt; file locally. Add &lt;code&gt;index.php&lt;/code&gt; to the &lt;code&gt;index&lt;/code&gt; line, and save the file.</source>
          <target state="translated">ローカルで &lt;code&gt;site.conf&lt;/code&gt; ファイルを編集します。 &lt;code&gt;index.php&lt;/code&gt; を &lt;code&gt;index&lt;/code&gt; 行に追加し、ファイルを保存します。</target>
        </trans-unit>
        <trans-unit id="6bce1d3a05a28e804e1f31329955f70786fe93e5" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;global&lt;/code&gt; (exactly one container per swarm node) or &lt;code&gt;replicated&lt;/code&gt; (a specified number of containers). The default is &lt;code&gt;replicated&lt;/code&gt;. (To learn more, see &lt;a href=&quot;../../engine/swarm/how-swarm-mode-works/services/index#replicated-and-global-services&quot;&gt;Replicated and global services&lt;/a&gt; in the &lt;a href=&quot;../../engine/swarm/index&quot;&gt;swarm&lt;/a&gt; topics.)</source>
          <target state="translated">いずれかの &lt;code&gt;global&lt;/code&gt; （群れノードごとに1つの容器）または &lt;code&gt;replicated&lt;/code&gt; （コンテナの指定された数）。デフォルトは &lt;code&gt;replicated&lt;/code&gt; ます。（詳細については、&lt;a href=&quot;../../engine/swarm/index&quot;&gt;Swarm&lt;/a&gt;トピックの&lt;a href=&quot;../../engine/swarm/how-swarm-mode-works/services/index#replicated-and-global-services&quot;&gt;複製サービスとグローバルサービスを&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="034fd3d633edbf5f3d71596084aedf716e386c5d" translate="yes" xml:space="preserve">
          <source>Either a path to a directory containing a Dockerfile, or a url to a git repository.</source>
          <target state="translated">Dockerfile を含むディレクトリへのパスか、git リポジトリへの url を指定します。</target>
        </trans-unit>
        <trans-unit id="4e54b82b5409478679f33467cdc36837f8bd9108" translate="yes" xml:space="preserve">
          <source>Either connect the external container to your app&amp;rsquo;s &lt;a href=&quot;../networking/index&quot;&gt;default network&lt;/a&gt;, or connect both the external container and your service&amp;rsquo;s containers to an &lt;a href=&quot;../networking/index#using-a-pre-existing-network&quot;&gt;external network&lt;/a&gt;.</source>
          <target state="translated">外部コンテナをアプリの&lt;a href=&quot;../networking/index&quot;&gt;デフォルトネットワーク&lt;/a&gt;に接続するか、外部コンテナとサービスのコンテナの両方を&lt;a href=&quot;../networking/index#using-a-pre-existing-network&quot;&gt;外部ネットワークに接続します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0459cd16db81041abea3871a268e6cc405528079" translate="yes" xml:space="preserve">
          <source>Either specify both ports (&lt;code&gt;HOST:CONTAINER&lt;/code&gt;), or just the container port (an ephemeral host port is chosen).</source>
          <target state="translated">両方のポート（ &lt;code&gt;HOST:CONTAINER&lt;/code&gt; ）を指定するか、コンテナーポートのみを指定します（一時的なホストポートが選択されます）。</target>
        </trans-unit>
        <trans-unit id="81cc40da1ba6b25ccfd5e40ffbd683b8fdb1e64c" translate="yes" xml:space="preserve">
          <source>Either way, the container ID changes, demonstrating the load-balancing; with each request, one of the 5 tasks is chosen, in a round-robin fashion, to respond. The container IDs match your output from the previous command (&lt;code&gt;docker container ls -q&lt;/code&gt;).</source>
          <target state="translated">どちらの方法でも、コンテナーIDが変更され、負荷分散が示されます。要求ごとに、5つのタスクの1つがラウンドロビン方式で選択されて応答します。コンテナーIDは、前のコマンド（ &lt;code&gt;docker container ls -q&lt;/code&gt; ）の出力と一致します。</target>
        </trans-unit>
        <trans-unit id="dcfce7f7a7b6f391557239cc872516341c580a8b" translate="yes" xml:space="preserve">
          <source>Elapsed time since the container was started.</source>
          <target state="translated">コンテナを起動してからの経過時間</target>
        </trans-unit>
        <trans-unit id="f871297e2664ceb7970d1a447ad4542a616c52ac" translate="yes" xml:space="preserve">
          <source>Elapsed time since the image was created</source>
          <target state="translated">画像が作成されてからの経過時間</target>
        </trans-unit>
        <trans-unit id="ca17c24def8e4372a838d5bfe0a0e0bfbb4b76c7" translate="yes" xml:space="preserve">
          <source>Elapsed time since the image was created if &lt;code&gt;--human=true&lt;/code&gt;, otherwise timestamp of when image was created</source>
          <target state="translated">&lt;code&gt;--human=true&lt;/code&gt; の場合、イメージが作成されてからの経過時間。それ以外の場合は、イメージが作成されたときのタイムスタンプ</target>
        </trans-unit>
        <trans-unit id="2c3492f51f4fa3e7ecfaa09607bfe1811b868dda" translate="yes" xml:space="preserve">
          <source>Employ features that can block system suspend.</source>
          <target state="translated">システムのサスペンドをブロックできる機能を採用</target>
        </trans-unit>
        <trans-unit id="b93df846d96019fa32d739accbe1fb399b6c23a7" translate="yes" xml:space="preserve">
          <source>Enable Docker experimental</source>
          <target state="translated">実験的にDockerを有効にする</target>
        </trans-unit>
        <trans-unit id="b1b96feffa71f19ade959ce82c01db18aca86230" translate="yes" xml:space="preserve">
          <source>Enable IP masquerading</source>
          <target state="translated">IPマスカレードを有効にする</target>
        </trans-unit>
        <trans-unit id="ea3a8f185eac3902f4b71a4b69ec9adc6b95b2f1" translate="yes" xml:space="preserve">
          <source>Enable IPv6 networking</source>
          <target state="translated">IPv6ネットワーキングを有効にする</target>
        </trans-unit>
        <trans-unit id="8b6bab18a4495a9f6f662faef1b93be08e1f4126" translate="yes" xml:space="preserve">
          <source>Enable IPv6 networking on this network.</source>
          <target state="translated">このネットワークでIPv6ネットワーキングを有効にします。</target>
        </trans-unit>
        <trans-unit id="5fb64ad03e43c38f193b35e2090ba0f5d7d81090" translate="yes" xml:space="preserve">
          <source>Enable a plugin</source>
          <target state="translated">プラグインを有効にする</target>
        </trans-unit>
        <trans-unit id="12489120255975ffad5d0dfeb58120a9ca6e21db" translate="yes" xml:space="preserve">
          <source>Enable and disable kernel auditing; change auditing filter rules; retrieve auditing status and filtering rules.</source>
          <target state="translated">カーネル監査の有効化と無効化、監査フィルタルールの変更、監査ステータスとフィルタリングルールの取得。</target>
        </trans-unit>
        <trans-unit id="0c04a3ee9ec392fb3a8d83b2a032948695456223" translate="yes" xml:space="preserve">
          <source>Enable content trust.</source>
          <target state="translated">コンテンツの信頼性を高めます。</target>
        </trans-unit>
        <trans-unit id="03bb6120d33e7d454f7c3f8c75cc6e2f71bfe924" translate="yes" xml:space="preserve">
          <source>Enable manager autolocking (requiring an unlock key to start a stopped manager)</source>
          <target state="translated">マネージャの自動ロックを有効にする(停止しているマネージャを起動するにはロック解除キーが必要</target>
        </trans-unit>
        <trans-unit id="687bf24cbad4ddbe97dff925d9be8e557ad3c710" translate="yes" xml:space="preserve">
          <source>Enable manual container attachment</source>
          <target state="translated">手動での容器取り付けを有効にする</target>
        </trans-unit>
        <trans-unit id="5b310e38a9ad3a2b0b920d01a78f6b533ac50926" translate="yes" xml:space="preserve">
          <source>Enable or Disable Inter Container Connectivity</source>
          <target state="translated">コンテナ間接続の有効化または無効化</target>
        </trans-unit>
        <trans-unit id="4afbb8b67d2f281a99ccb340341111363cb1bf22" translate="yes" xml:space="preserve">
          <source>Enable or disable autolock on an existing swarm</source>
          <target state="translated">既存のスウォームのオートロックを有効または無効にする</target>
        </trans-unit>
        <trans-unit id="f069781d967febc4ff6f8ed4e19b46dc73ebe6e2" translate="yes" xml:space="preserve">
          <source>Enable path conversion from Windows-style to Unix-style in volume definitions. Users of Docker Machine and Docker Toolbox on Windows should always set this. Defaults to &lt;code&gt;0&lt;/code&gt;. Supported values: &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; to enable, &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; to disable.</source>
          <target state="translated">ボリューム定義でWindowsスタイルからUnixスタイルへのパス変換を有効にします。Windows上のDocker MachineおよびDocker Toolboxのユーザーは、常にこれを設定する必要があります。デフォルトは &lt;code&gt;0&lt;/code&gt; です。サポートされる値：有効にする &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;1&lt;/code&gt; 、無効にする場合は &lt;code&gt;false&lt;/code&gt; または &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b26ab87d29ba39e5169ffcad08a66bc67488042" translate="yes" xml:space="preserve">
          <source>Enable the authorization plugin with a dedicated command line flag in the &lt;code&gt;--authorization-plugin=PLUGIN_ID&lt;/code&gt; format. The flag supplies a &lt;code&gt;PLUGIN_ID&lt;/code&gt; value. This value can be the plugin&amp;rsquo;s socket or a path to a specification file. Authorization plugins can be loaded without restarting the daemon. Refer to the &lt;a href=&quot;../../reference/commandline/dockerd/index#configuration-reloading&quot;&gt;&lt;code&gt;dockerd&lt;/code&gt; documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;--authorization-plugin=PLUGIN_ID&lt;/code&gt; 形式の専用のコマンドラインフラグを使用して認証プラグインを有効にします。フラグは &lt;code&gt;PLUGIN_ID&lt;/code&gt; 値を提供します。この値には、プラグインのソケットまたは仕様ファイルへのパスを指定できます。承認プラグインは、デーモンを再起動せずにロードできます。詳細については、&lt;a href=&quot;../../reference/commandline/dockerd/index#configuration-reloading&quot;&gt; &lt;code&gt;dockerd&lt;/code&gt; のドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5b483056614dd2499f92b4d9d440f9e2798fbbcc" translate="yes" xml:space="preserve">
          <source>Enable userns-remap on the daemon</source>
          <target state="translated">デーモンで userns-remap を有効にする</target>
        </trans-unit>
        <trans-unit id="bbc0a1ee61521c138c75b9c237d4994fc3fd6f6d" translate="yes" xml:space="preserve">
          <source>Enables a plugin. The plugin must be installed before it can be enabled, see &lt;a href=&quot;../plugin_install/index&quot;&gt;&lt;code&gt;docker plugin install&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プラグインを有効にします。プラグインは、有効にする前にインストールする必要があります&lt;a href=&quot;../plugin_install/index&quot;&gt; &lt;code&gt;docker plugin install&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3a1cf1630ffda1cf99ca4a5d913d2bea4156ff36" translate="yes" xml:space="preserve">
          <source>Enables or disables the use of &lt;code&gt;blkdiscard&lt;/code&gt; when removing devicemapper devices. This is enabled by default (only) if using loopback devices and is required to resparsify the loopback file on image/container removal.</source>
          <target state="translated">&lt;code&gt;blkdiscard&lt;/code&gt; デバイスを削除するときのblkdiscardの使用を有効または無効にします。これは、ループバックデバイスを使用しており、イメージ/コンテナーの削除時にループバックファイルを再解析する必要がある場合にのみ、デフォルトで有効になります（のみ）。</target>
        </trans-unit>
        <trans-unit id="60e8ec556f1b1efdd9cde6a8e7c6346f818592a0" translate="yes" xml:space="preserve">
          <source>Enables use of deferred device deletion for thin pool devices. By default, thin pool device deletion is synchronous. Before a container is deleted, the Docker daemon removes any associated devices. If the storage driver can not remove a device, the container deletion fails and daemon returns.</source>
          <target state="translated">シンプール デバイスの遅延デバイス削除の使用を有効にします。デフォルトでは、シンプールデバイスの削除は同期的に行われます。コンテナが削除される前に、Docker デーモンは関連するデバイスを削除します。ストレージドライバがデバイスを削除できない場合、コンテナの削除に失敗し、デーモンが戻ります。</target>
        </trans-unit>
        <trans-unit id="6bad1fc1ebc05187b9c5d1bcffd98fcc36e7e086" translate="yes" xml:space="preserve">
          <source>Enables use of deferred device removal if &lt;code&gt;libdm&lt;/code&gt; and the kernel driver support the mechanism.</source>
          <target state="translated">&lt;code&gt;libdm&lt;/code&gt; とカーネルドライバーがこのメカニズムをサポートしている場合、遅延デバイス削除の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="407c321f923d222152ab1d34fcc71de67e6b8f8e" translate="yes" xml:space="preserve">
          <source>Enabling &lt;code&gt;--insecure-registry&lt;/code&gt;, i.e., allowing un-encrypted and/or untrusted communication, can be useful when running a local registry. However, because its use creates security vulnerabilities it should ONLY be enabled for testing purposes. For increased security, users should add their CA to their system&amp;rsquo;s list of trusted CAs instead of enabling &lt;code&gt;--insecure-registry&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--insecure-registry&lt;/code&gt; を有効にする、つまり暗号化されていない、または信頼されていない通信を許可することは、ローカルレジストリを実行するときに役立ちます。ただし、これを使用するとセキュリティの脆弱性が生じるため、テスト目的でのみ有効にする必要があります。セキュリティを強化するために、ユーザーは &lt;code&gt;--insecure-registry&lt;/code&gt; を有効にする代わりに、システムの信頼されたCAのリストにCAを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="479b71dbee892668c1f80cc6251c8e81c7bc1e0e" translate="yes" xml:space="preserve">
          <source>Enabling &lt;code&gt;userns-remap&lt;/code&gt; effectively masks existing image and container layers, as well as other Docker objects within &lt;code&gt;/var/lib/docker/&lt;/code&gt;. This is because Docker needs to adjust the ownership of these resources and actually stores them in a subdirectory within &lt;code&gt;/var/lib/docker/&lt;/code&gt;. It is best to enable this feature on a new Docker installation rather than an existing one.</source>
          <target state="translated">イネーブル &lt;code&gt;userns-remap&lt;/code&gt; 画像とコンテナ層を既存の有効マスク、並びに他ドッカーは、内のオブジェクト &lt;code&gt;/var/lib/docker/&lt;/code&gt; 。これは、Dockerがこれらのリソースの所有権を調整し、実際には &lt;code&gt;/var/lib/docker/&lt;/code&gt; 内のサブディレクトリに格納する必要があるためです。既存の機能ではなく、新しいDockerインストールでこの機能を有効にすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8df41410f0e69c3b669c6b0c90fd203bf9aa13dd" translate="yes" xml:space="preserve">
          <source>Enabling DCT within the Docker Enterprise Engine</source>
          <target state="translated">Docker Enterprise Engine内でDCTを有効にする</target>
        </trans-unit>
        <trans-unit id="77b7c0b80a55a6a3bbed07276ee02a49e018b49c" translate="yes" xml:space="preserve">
          <source>Endpoint mode (vip or dnsrr)</source>
          <target state="translated">エンドポイントモード(vip または dnsrr</target>
        </trans-unit>
        <trans-unit id="c1f65ddb75ed7d97e701168af35171410be8f9e7" translate="yes" xml:space="preserve">
          <source>Engine</source>
          <target state="translated">Engine</target>
        </trans-unit>
        <trans-unit id="c7ca0168639b26558608f71306fbcfc59170c974" translate="yes" xml:space="preserve">
          <source>Engine Signature Verification prevents the following:</source>
          <target state="translated">エンジン署名検証では、以下のようなことを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="bb5b74c5ab88f1844f3d33bc8aada0e5ae1e4bc8" translate="yes" xml:space="preserve">
          <source>Engine labels, however, are still useful because some features that do not affect secure orchestration of containers might be better off set in a decentralized manner. For instance, an engine could have a label to indicate that it has a certain type of disk device, which may not be relevant to security directly. These labels are more easily &amp;ldquo;trusted&amp;rdquo; by the swarm orchestrator.</source>
          <target state="translated">ただし、コンテナーの安全なオーケストレーションに影響を与えない一部の機能は、分散方式でオフセットする方がよい場合があるため、エンジンラベルは依然として有用です。たとえば、エンジンには、特定のタイプのディスクデバイスがあることを示すラベルがあり、これはセキュリティには直接関係しない場合があります。これらのラベルは、スウォームオーケストレータによってより簡単に「信頼」されます。</target>
        </trans-unit>
        <trans-unit id="6110771211754965a99627f5efceaae01c3623bb" translate="yes" xml:space="preserve">
          <source>Engine version</source>
          <target state="translated">エンジンバージョン</target>
        </trans-unit>
        <trans-unit id="8dc56c74fb98052210621189c5f8286d06e5d247" translate="yes" xml:space="preserve">
          <source>Engine: CLI</source>
          <target state="translated">エンジン CLI</target>
        </trans-unit>
        <trans-unit id="233a0fc8e1e9435025bf34accd0b6fd84de93f5c" translate="yes" xml:space="preserve">
          <source>Engine: Extend</source>
          <target state="translated">エンジンです。拡張</target>
        </trans-unit>
        <trans-unit id="e2a0889b3a84740853205595574538dfa4e36613" translate="yes" xml:space="preserve">
          <source>Engine: Security</source>
          <target state="translated">エンジン:セキュリティ</target>
        </trans-unit>
        <trans-unit id="3a5cf14888a952dd25e7d0bd8b009362bf336170" translate="yes" xml:space="preserve">
          <source>Enjoy working with Compose faster and with fewer typos!</source>
          <target state="translated">Composeを使って、より速く、より少ない誤字脱字で作業を楽しみましょう。</target>
        </trans-unit>
        <trans-unit id="cb0d2ab53d82a94125c6eba2fc2d44118e26a662" translate="yes" xml:space="preserve">
          <source>Ensure that you ran hello-world on aws-sandbox (and not localhost or some other machine):</source>
          <target state="translated">hello-world が aws-sandbox 上で実行されていることを確認してください (localhost や他のマシンではなく)。</target>
        </trans-unit>
        <trans-unit id="9f45880843193cbed95cd4a2f28cc693f125f063" translate="yes" xml:space="preserve">
          <source>Ensure that your new machine is the active host.</source>
          <target state="translated">新しいマシンがアクティブなホストであることを確認します。</target>
        </trans-unit>
        <trans-unit id="07ba826bff5d02d3be3fdfe8c72d338c2e592a78" translate="yes" xml:space="preserve">
          <source>Enter http://localhost:5000/ in a browser to see the application running.</source>
          <target state="translated">ブラウザで http://localhost:5000/と入力すると、アプリケーションが実行されているのがわかります。</target>
        </trans-unit>
        <trans-unit id="f98c86359b348a7eb1389606655f5679dba4563c" translate="yes" xml:space="preserve">
          <source>Enter the encryption key that was generated and shown in the command output when you locked the swarm or rotated the key, and the swarm unlocks.</source>
          <target state="translated">スウォームをロックしたとき、またはキーを回転させたときに生成されコマンド出力に表示される暗号化キーを入力すると、スウォームのロックが解除されます。</target>
        </trans-unit>
        <trans-unit id="038719f6ceb54de987547575fd78d6a1f65751b2" translate="yes" xml:space="preserve">
          <source>Entries for &lt;code&gt;volumes&lt;/code&gt; and &lt;code&gt;devices&lt;/code&gt; are merged using the mount path in the container:</source>
          <target state="translated">&lt;code&gt;volumes&lt;/code&gt; と &lt;code&gt;devices&lt;/code&gt; エントリは、コンテナのマウントパスを使用してマージされます。</target>
        </trans-unit>
        <trans-unit id="a2562690818adae41c773c584b6f6c09ebb4d39c" translate="yes" xml:space="preserve">
          <source>Env</source>
          <target state="translated">Env</target>
        </trans-unit>
        <trans-unit id="b56277a540bec60ac935f8adc8f0ea1f1cd3de64" translate="yes" xml:space="preserve">
          <source>Env &lt;code&gt;[]string&lt;/code&gt;</source>
          <target state="translated">環境 &lt;code&gt;[]string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="384a6e9623ee89d57bf379a1678db79477e198f0" translate="yes" xml:space="preserve">
          <source>Environment Variable</source>
          <target state="translated">環境変数</target>
        </trans-unit>
        <trans-unit id="54b32271fa672079e69cc48ae73aa09818054726" translate="yes" xml:space="preserve">
          <source>Environment file</source>
          <target state="translated">環境ファイル</target>
        </trans-unit>
        <trans-unit id="ded050a86ce618b1ff5f973718a6edcdca017e9c" translate="yes" xml:space="preserve">
          <source>Environment replacement</source>
          <target state="translated">環境への置き換え</target>
        </trans-unit>
        <trans-unit id="1fd9ebabc73d44769bebe3309979c884ce26c72d" translate="yes" xml:space="preserve">
          <source>Environment variable</source>
          <target state="translated">環境変数</target>
        </trans-unit>
        <trans-unit id="2633fc9fd8270cc5536df6749eb8eade14cccb45" translate="yes" xml:space="preserve">
          <source>Environment variable substitution will use the same value for each variable throughout the entire instruction. In other words, in this example:</source>
          <target state="translated">環境変数の置換は、命令全体を通して各変数に同じ値を使用します。つまり、この例では</target>
        </trans-unit>
        <trans-unit id="1173b2e11bd16e5dc36c119a4b84f02be11626b5" translate="yes" xml:space="preserve">
          <source>Environment variables</source>
          <target state="translated">環境変数</target>
        </trans-unit>
        <trans-unit id="5c6cc86bda2422be1d2b6e534666c5d5ccb6df68" translate="yes" xml:space="preserve">
          <source>Environment variables (declared with &lt;a href=&quot;#env&quot;&gt;the &lt;code&gt;ENV&lt;/code&gt; statement&lt;/a&gt;) can also be used in certain instructions as variables to be interpreted by the &lt;code&gt;Dockerfile&lt;/code&gt;. Escapes are also handled for including variable-like syntax into a statement literally.</source>
          <target state="translated">（で宣言された環境変数&lt;a href=&quot;#env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; の&lt;/a&gt;文は）によっても解釈される変数として、特定の命令で使用することができます &lt;code&gt;Dockerfile&lt;/code&gt; 。エスケープは、文字どおり変数のような構文をステートメントに含めるためにも処理されます。</target>
        </trans-unit>
        <trans-unit id="d93d5d2fffd283412c0966df71ddf7b43bf1c517" translate="yes" xml:space="preserve">
          <source>Environment variables (optional)</source>
          <target state="translated">環境変数 (オプション)</target>
        </trans-unit>
        <trans-unit id="50f422458c43c16ae69c377dcb83836cc310187a" translate="yes" xml:space="preserve">
          <source>Environment variables (required if using MySQL)</source>
          <target state="translated">環境変数 (MySQL を使用する場合は必須)</target>
        </trans-unit>
        <trans-unit id="cbe0d5e919b6a128c10d17af4582d0d520c868fd" translate="yes" xml:space="preserve">
          <source>Environment variables and default values</source>
          <target state="translated">環境変数とデフォルト値</target>
        </trans-unit>
        <trans-unit id="cec02bad93bef151c0e9f8f2ad0e696543ac132d" translate="yes" xml:space="preserve">
          <source>Environment variables and default values:</source>
          <target state="translated">環境変数とデフォルト値</target>
        </trans-unit>
        <trans-unit id="98c8743e32427484df297dacd0030f32d7f96b74" translate="yes" xml:space="preserve">
          <source>Environment variables are notated in the &lt;code&gt;Dockerfile&lt;/code&gt; either with &lt;code&gt;$variable_name&lt;/code&gt; or &lt;code&gt;${variable_name}&lt;/code&gt;. They are treated equivalently and the brace syntax is typically used to address issues with variable names with no whitespace, like &lt;code&gt;${foo}_bar&lt;/code&gt;.</source>
          <target state="translated">環境変数は、 &lt;code&gt;Dockerfile&lt;/code&gt; で &lt;code&gt;$variable_name&lt;/code&gt; または &lt;code&gt;${variable_name}&lt;/code&gt; 使用して表記されます。それらは同等に扱われ、ブレース構文は通常、 &lt;code&gt;${foo}_bar&lt;/code&gt; ように空白のない変数名の問題に対処するために使用されます。</target>
        </trans-unit>
        <trans-unit id="7363226e41bca724f2ac6994d0c896add3a42942" translate="yes" xml:space="preserve">
          <source>Environment variables are only populated if you&amp;rsquo;re using the &lt;a href=&quot;../compose-file/index#versioning&quot;&gt;legacy version 1 Compose file format&lt;/a&gt;.</source>
          <target state="translated">環境変数は、&lt;a href=&quot;../compose-file/index#versioning&quot;&gt;レガシーバージョン1のComposeファイル形式&lt;/a&gt;を使用している場合にのみ入力されます。</target>
        </trans-unit>
        <trans-unit id="a879855e2250c0dcadb45e02162ad90df764c36f" translate="yes" xml:space="preserve">
          <source>Environment variables are supported by the following list of instructions in the &lt;code&gt;Dockerfile&lt;/code&gt;:</source>
          <target state="translated">環境変数は、 &lt;code&gt;Dockerfile&lt;/code&gt; 内の次の命令リストでサポートされています。</target>
        </trans-unit>
        <trans-unit id="1cfc8cf023d2279187be1345aa21369d20be0b00" translate="yes" xml:space="preserve">
          <source>Environment variables created by links</source>
          <target state="translated">リンクで作成される環境変数</target>
        </trans-unit>
        <trans-unit id="1a086129101965a6f5b3b985ba7f2580bc600e7a" translate="yes" xml:space="preserve">
          <source>Environment variables declared in the &lt;a href=&quot;#environment&quot;&gt;environment&lt;/a&gt; section &lt;em&gt;override&lt;/em&gt; these values &amp;ndash; this holds true even if those values are empty or undefined.</source>
          <target state="translated">環境変数がで宣言された&lt;a href=&quot;#environment&quot;&gt;環境の&lt;/a&gt;セクションの&lt;em&gt;オーバーライド&lt;/em&gt;これらの値を-これは、これらの値が空または未定義であっても当てはまります。</target>
        </trans-unit>
        <trans-unit id="0a4aa18ae3a8ba8135d0de809c3beae27f33c740" translate="yes" xml:space="preserve">
          <source>Environment variables defined in the &lt;code&gt;.env&lt;/code&gt; file are not automatically visible inside containers. To set container-applicable environment variables, follow the guidelines in the topic &lt;a href=&quot;../environment-variables/index&quot;&gt;Environment variables in Compose&lt;/a&gt;, which describes how to pass shell environment variables through to containers, define environment variables in Compose files, and more.</source>
          <target state="translated">&lt;code&gt;.env&lt;/code&gt; ファイルで定義された環境変数は、コンテナー内では自動的に表示されません。コンテナーに適用可能な環境変数を設定するには、トピック&lt;a href=&quot;../environment-variables/index&quot;&gt;Composeの環境変数の&lt;/a&gt;ガイドラインに従ってください。ここでは、シェル環境変数をコンテナーに渡す方法、Composeファイルで環境変数を定義する方法などについて説明しています。</target>
        </trans-unit>
        <trans-unit id="f1b7aa23246ecaa27a33e76f42622a81113062fa" translate="yes" xml:space="preserve">
          <source>Environment variables in Compose</source>
          <target state="translated">Compose での環境変数</target>
        </trans-unit>
        <trans-unit id="bafb6ea2b5f7c40cbf95f1202a73ba2c834e8f7f" translate="yes" xml:space="preserve">
          <source>Environment variables specified in &lt;a href=&quot;#environment&quot;&gt;environment&lt;/a&gt;&lt;em&gt;override&lt;/em&gt; these values.</source>
          <target state="translated">環境で指定された&lt;a href=&quot;#environment&quot;&gt;環境&lt;/a&gt;変数は、これらの値を&lt;em&gt;上書きし&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="18e8d17988a2b3356c73297e5900d60db7c71b85" translate="yes" xml:space="preserve">
          <source>Environment variables with only a key are resolved to their values on the machine Compose is running on, which can be helpful for secret or host-specific values.</source>
          <target state="translated">キーのみを持つ環境変数は、Composeが実行されているマシン上の値に解決されます。</target>
        </trans-unit>
        <trans-unit id="203b28516ac07f6fafa23caa84894494350505ec" translate="yes" xml:space="preserve">
          <source>Environment variables.</source>
          <target state="translated">環境変数です。</target>
        </trans-unit>
        <trans-unit id="1f55cac8623bcd3e718c002528aa20c26ca69289" translate="yes" xml:space="preserve">
          <source>Equivalent</source>
          <target state="translated">Equivalent</target>
        </trans-unit>
        <trans-unit id="b7f3c6993982d24c6c080b5c9817e705a665831d" translate="yes" xml:space="preserve">
          <source>Err</source>
          <target state="translated">Err</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="2cfd83f7d33121ed8f0aa5f45b0405b08231a306" translate="yes" xml:space="preserve">
          <source>Error condition: cannot copy a directory to a file</source>
          <target state="translated">エラー条件:ディレクトリをファイルにコピーできない</target>
        </trans-unit>
        <trans-unit id="088340cdc2e4a3c29613256618dcf783f03fdc51" translate="yes" xml:space="preserve">
          <source>Error condition: the destination directory must exist.</source>
          <target state="translated">エラー条件:宛先ディレクトリが存在しなければなりません。</target>
        </trans-unit>
        <trans-unit id="1c7b46b8fc0793e0698c3959386bb12272df7e26" translate="yes" xml:space="preserve">
          <source>Error from plugins</source>
          <target state="translated">プラグインからのエラー</target>
        </trans-unit>
        <trans-unit id="a2448e42d079ba159017705ad66afbca205bd1de" translate="yes" xml:space="preserve">
          <source>Error message (will be returned to the client in case the plugin encounter an error. The string value supplied may appear in logs, so should not include confidential information)</source>
          <target state="translated">エラーメッセージ (プラグインがエラーに遭遇した場合にクライアントに返されます。与えられた文字列の値はログに表示される可能性があるので、機密情報を含むべきではありません)</target>
        </trans-unit>
        <trans-unit id="e76a5333a10bc19db1ec4744208c436dd13e1195" translate="yes" xml:space="preserve">
          <source>Escaping is possible by adding a &lt;code&gt;\&lt;/code&gt; before the variable: &lt;code&gt;\$foo&lt;/code&gt; or &lt;code&gt;\${foo}&lt;/code&gt;, for example, will translate to &lt;code&gt;$foo&lt;/code&gt; and &lt;code&gt;${foo}&lt;/code&gt; literals respectively.</source>
          <target state="translated">エスケープは、変数の前に &lt;code&gt;\&lt;/code&gt; を追加することで可能です。たとえば、 &lt;code&gt;\$foo&lt;/code&gt; または &lt;code&gt;\${foo}&lt;/code&gt; 、それぞれ &lt;code&gt;$foo&lt;/code&gt; および &lt;code&gt;${foo}&lt;/code&gt; リテラルに変換されます。</target>
        </trans-unit>
        <trans-unit id="2b3c06778e0c2c2862df06d5bfc9860dfff53283" translate="yes" xml:space="preserve">
          <source>Establish leases on arbitrary files (see fcntl(2)).</source>
          <target state="translated">任意のファイルにリースを設定 (fcntl(2)を参照)。</target>
        </trans-unit>
        <trans-unit id="f5cd08a796c40eee9db51e74c952a41e938009fe" translate="yes" xml:space="preserve">
          <source>Even if a swarm loses the quorum of managers, swarm tasks on existing worker nodes continue to run. However, swarm nodes cannot be added, updated, or removed, and new or existing tasks cannot be started, stopped, moved, or updated.</source>
          <target state="translated">スウォームが管理者の定足数を失っても、既存のワーカーノード上のスウォームタスクは継続して実行されます。ただし、スウォームノードを追加、更新、削除することはできず、新規または既存のタスクを開始、停止、移動、更新することはできません。</target>
        </trans-unit>
        <trans-unit id="2761c876d57866f158edbdc9b1dbd8daadc82089" translate="yes" xml:space="preserve">
          <source>Even though the MySQL service has access to both the old and new secrets now, the MySQL password for the WordPress user has not yet been changed.</source>
          <target state="translated">MySQLサービスが新旧両方の秘密にアクセスできるようになったとはいえ、WordPressユーザーのMySQLパスワードはまだ変更されていません。</target>
        </trans-unit>
        <trans-unit id="cef284c9e16d89ac74d0473dcc0be44064fca38e" translate="yes" xml:space="preserve">
          <source>Even though the service no longer exists, the task containers take a few seconds to clean up. You can use &lt;code&gt;docker ps&lt;/code&gt; on the nodes to verify when the tasks have been removed.</source>
          <target state="translated">サービスが存在しなくても、タスクコンテナーがクリーンアップするのに数秒かかります。ノードで &lt;code&gt;docker ps&lt;/code&gt; を使用して、タスクがいつ削除されたかを確認できます。</target>
        </trans-unit>
        <trans-unit id="10b3e860d1ad6efd6c00f519fdd4ef72be63f023" translate="yes" xml:space="preserve">
          <source>Even though there is no plan to deprecate &lt;code&gt;--volume&lt;/code&gt;, usage of &lt;code&gt;--mount&lt;/code&gt; is recommended.</source>
          <target state="translated">廃止する予定はありませんにもかかわらず &lt;code&gt;--volume&lt;/code&gt; は、の使用 &lt;code&gt;--mount&lt;/code&gt; が推奨されます。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="c071e354e38bffd4802a52115ca5ff6db771af2b" translate="yes" xml:space="preserve">
          <source>Example (parsed representation is displayed after the &lt;code&gt;#&lt;/code&gt;):</source>
          <target state="translated">例（解析された表現は &lt;code&gt;#&lt;/code&gt; の後に表示されます）：</target>
        </trans-unit>
        <trans-unit id="6ceeb4c4e97d57377e75337a4b59245541e569bd" translate="yes" xml:space="preserve">
          <source>Example Compose file version 3</source>
          <target state="translated">例 コンポーズファイルバージョン3</target>
        </trans-unit>
        <trans-unit id="bc1515e6fa46ada277f22dc81464579676446a91" translate="yes" xml:space="preserve">
          <source>Example Config</source>
          <target state="translated">設定例</target>
        </trans-unit>
        <trans-unit id="139f4b6a4052f9708c21edba14f3122a3d5c4d92" translate="yes" xml:space="preserve">
          <source>Example client-server-signer interaction</source>
          <target state="translated">クライアント-サーバ-署名者間の相互作用の例</target>
        </trans-unit>
        <trans-unit id="338ed17778e90e709bd066617a2cacbed222a9f3" translate="yes" xml:space="preserve">
          <source>Example create:</source>
          <target state="translated">作成例。</target>
        </trans-unit>
        <trans-unit id="ee8284b11d76d24a002d6a868d6126c02b388c3f" translate="yes" xml:space="preserve">
          <source>Example gMSA configuration</source>
          <target state="translated">gMSAの設定例</target>
        </trans-unit>
        <trans-unit id="ec1136270e452edec85ece96cdcd819465f02495" translate="yes" xml:space="preserve">
          <source>Example of usage:</source>
          <target state="translated">使用例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="2e4ccc244461fd2a12825ef96a60da2329e2ce3c" translate="yes" xml:space="preserve">
          <source>Example output:</source>
          <target state="translated">出力例。</target>
        </trans-unit>
        <trans-unit id="db20e067f795bbd6b56b86e35b7ce062f901b50e" translate="yes" xml:space="preserve">
          <source>Example running a Redis container with Redis binding to &lt;code&gt;localhost&lt;/code&gt; then running the &lt;code&gt;redis-cli&lt;/code&gt; command and connecting to the Redis server over the &lt;code&gt;localhost&lt;/code&gt; interface.</source>
          <target state="translated">例はRedisのは、への結合をRedisのコンテナを実行して &lt;code&gt;localhost&lt;/code&gt; 実行その後 &lt;code&gt;redis-cli&lt;/code&gt; コマンドをオーバーRedisのサーバーに接続する &lt;code&gt;localhost&lt;/code&gt; インターフェース。</target>
        </trans-unit>
        <trans-unit id="6168f7c7ad028811fb0ce4a03682a3e3592e0e04" translate="yes" xml:space="preserve">
          <source>Example script for a separate &amp;ldquo;bootstrap&amp;rdquo; instance of the Docker daemon without network:</source>
          <target state="translated">ネットワークなしのDockerデーモンの個別の「ブートストラップ」インスタンスのスクリプト例：</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">使用例。</target>
        </trans-unit>
        <trans-unit id="1de832bb703ac987e5fa7e3d02c956d7deaa09b3" translate="yes" xml:space="preserve">
          <source>Example use case</source>
          <target state="translated">使用例</target>
        </trans-unit>
        <trans-unit id="f926e8aa381c9473da8ffa66ceaa3620c768d1fd" translate="yes" xml:space="preserve">
          <source>Example value</source>
          <target state="translated">値の例</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="664362fa57340d48ec0da855b0665ff34e077389" translate="yes" xml:space="preserve">
          <source>Example: Provision Dockerized &lt;a href=&quot;../examples/aws/index&quot;&gt;AWS EC2 Instances&lt;/a&gt;</source>
          <target state="translated">例：Docker化された&lt;a href=&quot;../examples/aws/index&quot;&gt;AWS EC2インスタンスの&lt;/a&gt;プロビジョニング</target>
        </trans-unit>
        <trans-unit id="bdce96b6b9386dec00c034ce9e9a7d2cbda1e7cf" translate="yes" xml:space="preserve">
          <source>Example: Provision Dockerized &lt;a href=&quot;../examples/ocean/index&quot;&gt;DigitalOcean Droplets&lt;/a&gt;</source>
          <target state="translated">例：Dockerized &lt;a href=&quot;../examples/ocean/index&quot;&gt;DigitalOcean&lt;/a&gt;ドロップレットのプロビジョニング</target>
        </trans-unit>
        <trans-unit id="71d90aece061cf2e5c39c514d9cfeff63fe2af8a" translate="yes" xml:space="preserve">
          <source>Example: Rotate a config</source>
          <target state="translated">例 設定を回転させる</target>
        </trans-unit>
        <trans-unit id="1ed7ee8b68f0da1a14f5a46fa471b5aad664d698" translate="yes" xml:space="preserve">
          <source>Example: Rotate a secret</source>
          <target state="translated">例.秘密を回転させる</target>
        </trans-unit>
        <trans-unit id="d21676198100926724dfe34ab94f7da07f9cd3d6" translate="yes" xml:space="preserve">
          <source>Example: Run a three-task Nginx service on 10-node swarm</source>
          <target state="translated">例 10ノードスウォーム上で3タスクのNginxサービスを実行する</target>
        </trans-unit>
        <trans-unit id="4c10f3fbce5993c9b2e736544f3d5572f04c59f1" translate="yes" xml:space="preserve">
          <source>Example: Run an &lt;code&gt;nginx&lt;/code&gt; web server service on every swarm node</source>
          <target state="translated">例：すべてのSwarmノードで &lt;code&gt;nginx&lt;/code&gt; Webサーバーサービスを実行する</target>
        </trans-unit>
        <trans-unit id="5f79bdee5c02bb8cdebac3f70f4ae8e095295adb" translate="yes" xml:space="preserve">
          <source>Example: run htop inside a container</source>
          <target state="translated">例:コンテナ内で htop を実行</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="f97f83622db711aab2f971320864edd01da3ec1d" translate="yes" xml:space="preserve">
          <source>Exclude files and directories in the root directory whose names are a one-character extension of &lt;code&gt;temp&lt;/code&gt;. For example, &lt;code&gt;/tempa&lt;/code&gt; and &lt;code&gt;/tempb&lt;/code&gt; are excluded.</source>
          <target state="translated">名前が &lt;code&gt;temp&lt;/code&gt; の 1文字の拡張子であるルートディレクトリ内のファイルとディレクトリを除外します。例えば、 &lt;code&gt;/tempa&lt;/code&gt; および &lt;code&gt;/tempb&lt;/code&gt; 除外されています。</target>
        </trans-unit>
        <trans-unit id="f7032f8f2adb5d72efd818375c7be71d02dd4d18" translate="yes" xml:space="preserve">
          <source>Exclude files and directories starting with &lt;code&gt;temp&lt;/code&gt; from any subdirectory that is two levels below the root. For example, &lt;code&gt;/somedir/subdir/temporary.txt&lt;/code&gt; is excluded.</source>
          <target state="translated">ルートの2つ下のレベルにあるサブディレクトリから、 &lt;code&gt;temp&lt;/code&gt; で始まるファイルとディレクトリを除外します。たとえば、 &lt;code&gt;/somedir/subdir/temporary.txt&lt;/code&gt; は除外されます。</target>
        </trans-unit>
        <trans-unit id="48b4ef53636d589b01b9eaacfada2d4b7b355498" translate="yes" xml:space="preserve">
          <source>Exclude files and directories whose names start with &lt;code&gt;temp&lt;/code&gt; in any immediate subdirectory of the root. For example, the plain file &lt;code&gt;/somedir/temporary.txt&lt;/code&gt; is excluded, as is the directory &lt;code&gt;/somedir/temp&lt;/code&gt;.</source>
          <target state="translated">ルートの直接のサブディレクトリにある、名前が &lt;code&gt;temp&lt;/code&gt; で始まるファイルとディレクトリを除外します。たとえば、プレーンファイル &lt;code&gt;/somedir/temporary.txt&lt;/code&gt; は除外され、ディレクトリ &lt;code&gt;/somedir/temp&lt;/code&gt; も除外されます。</target>
        </trans-unit>
        <trans-unit id="db6e820f9a9836d70cab544f31abf0e3b7bcd72c" translate="yes" xml:space="preserve">
          <source>Excluding the created machine from proxies</source>
          <target state="translated">作成したマシンをプロキシから除外する</target>
        </trans-unit>
        <trans-unit id="447072a385a9153c3aabef979557e86e963d1dae" translate="yes" xml:space="preserve">
          <source>Exec form ENTRYPOINT example</source>
          <target state="translated">実行フォーム ENTRYPOINT の例</target>
        </trans-unit>
        <trans-unit id="9da9fb624d36bd73b6e426d60c0bcd634b3f007f" translate="yes" xml:space="preserve">
          <source>Exec into the running container.</source>
          <target state="translated">実行中のコンテナに実行します。</target>
        </trans-unit>
        <trans-unit id="6f147bbcdc2ea57f6c81bec669ec536b253dc54b" translate="yes" xml:space="preserve">
          <source>Exit Status</source>
          <target state="translated">終了ステータス</target>
        </trans-unit>
        <trans-unit id="352bcb04af63aaef9b26863916e01fa35f9e3cea" translate="yes" xml:space="preserve">
          <source>Exit immediately instead of waiting for the root rotation to converge</source>
          <target state="translated">ルートの回転が収束するのを待つのではなく、すぐに終了します。</target>
        </trans-unit>
        <trans-unit id="627ec4c7ad09baf49d325f7ddbdfdf249ad127bf" translate="yes" xml:space="preserve">
          <source>Exit immediately instead of waiting for the service to converge</source>
          <target state="translated">サービスが収束するのを待つのではなく、すぐに退出してください。</target>
        </trans-unit>
        <trans-unit id="4f367efe0739c603d5fcf7f5b4be3a2504347102" translate="yes" xml:space="preserve">
          <source>Exoscale</source>
          <target state="translated">Exoscale</target>
        </trans-unit>
        <trans-unit id="586f8b18954c3f69d4bde8087ca20d84933e6460" translate="yes" xml:space="preserve">
          <source>Experimental features are now included in the standard Docker binaries as of version 1.13.0. For enabling experimental features, you need to start the Docker daemon with &lt;code&gt;--experimental&lt;/code&gt; flag. You can also enable the daemon flag via /etc/docker/daemon.json. e.g.</source>
          <target state="translated">実験的機能は、バージョン1.13.0以降、標準のDockerバイナリに含まれています。試験 &lt;code&gt;--experimental&lt;/code&gt; 機能を有効にするには、-experimentalフラグを指定してDockerデーモンを起動する必要があります。/etc/docker/daemon.jsonからデーモンフラグを有効にすることもできます。例えば</target>
        </trans-unit>
        <trans-unit id="881daf02462f851103387305cf576374cd0143a0" translate="yes" xml:space="preserve">
          <source>Experimental features provide early access to future product functionality. These features are intended for testing and feedback only as they may change between releases without warning or can be removed entirely from a future release. Experimental features must not be used in production environments. Docker does not offer support for experimental features. For more information, see &lt;a href=&quot;https://success.docker.com/article/experimental-features&quot;&gt;Experimental features&lt;/a&gt;.</source>
          <target state="translated">試験的な機能により、将来の製品機能に早期にアクセスできます。これらの機能は、警告なしにリリース間で変更される可能性があるか、将来のリリースから完全に削除できるため、テストとフィードバックのみを目的としています。試験運用機能は、本番環境では使用しないでください。Dockerは実験的機能のサポートを提供していません。詳細については、「&lt;a href=&quot;https://success.docker.com/article/experimental-features&quot;&gt;実験的機能&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="37233e9e2203edceb13c353b8dc5beadafa61b7f" translate="yes" xml:space="preserve">
          <source>Experimental mode can be enabled by using the &lt;code&gt;--experimental&lt;/code&gt; flag when starting the Docker daemon or setting &lt;code&gt;experimental: true&lt;/code&gt; in the &lt;code&gt;daemon.json&lt;/code&gt; configuration file.</source>
          <target state="translated">実験モードは、Dockerデーモンの起動時に &lt;code&gt;--experimental&lt;/code&gt; フラグを使用するか、 &lt;code&gt;daemon.json&lt;/code&gt; 構成ファイルで &lt;code&gt;experimental: true&lt;/code&gt; を設定することで有効にできます。</target>
        </trans-unit>
        <trans-unit id="7f2118aa77bf9068468b97641408509e2b04dff0" translate="yes" xml:space="preserve">
          <source>Explore swarm mode CLI commands</source>
          <target state="translated">スワームモードのCLIコマンドを調べる</target>
        </trans-unit>
        <trans-unit id="832780f2db43b4e090fc20f00f93f0282825d56e" translate="yes" xml:space="preserve">
          <source>Explore the full list of Compose commands</source>
          <target state="translated">Compose コマンドの全リストを見る</target>
        </trans-unit>
        <trans-unit id="cba3ce3d0b8ccd99428ac4035ee99da16a827628" translate="yes" xml:space="preserve">
          <source>Export a container&amp;rsquo;s filesystem as a tar archive</source>
          <target state="translated">コンテナーのファイルシステムをtarアーカイブとしてエクスポートする</target>
        </trans-unit>
        <trans-unit id="981f20848eaf7b8bce28d9d707538d4d3e42962e" translate="yes" xml:space="preserve">
          <source>Export a context to a tar or kubeconfig file</source>
          <target state="translated">コンテキストを tar や kubeconfig ファイルにエクスポートする</target>
        </trans-unit>
        <trans-unit id="db1a9e6cf20056bdb2c6daaf1f6612266bb04f61" translate="yes" xml:space="preserve">
          <source>Export as a kubeconfig file</source>
          <target state="translated">kubeconfigファイルとしてエクスポート</target>
        </trans-unit>
        <trans-unit id="3364bb95aa5e8866b190dab6e92407bc2e3e5135" translate="yes" xml:space="preserve">
          <source>Exports a context in a file that can then be used with &lt;code&gt;docker context import&lt;/code&gt; (or with &lt;code&gt;kubectl&lt;/code&gt; if &lt;code&gt;--kubeconfig&lt;/code&gt; is set). Default output filename is &lt;code&gt;&amp;lt;CONTEXT&amp;gt;.dockercontext&lt;/code&gt;, or &lt;code&gt;&amp;lt;CONTEXT&amp;gt;.kubeconfig&lt;/code&gt; if &lt;code&gt;--kubeconfig&lt;/code&gt; is set. To export to &lt;code&gt;STDOUT&lt;/code&gt;, you can run &lt;code&gt;docker context export my-context -&lt;/code&gt;.</source>
          <target state="translated">ファイル内のコンテキストをエクスポートし、 &lt;code&gt;kubectl&lt;/code&gt; &lt;code&gt;docker context import&lt;/code&gt; （または &lt;code&gt;--kubeconfig&lt;/code&gt; が設定されている場合はkubectl）で使用できるようにします。デフォルトの出力ファイル名は &lt;code&gt;&amp;lt;CONTEXT&amp;gt;.dockercontext&lt;/code&gt; 、または &lt;code&gt;--kubeconfig&lt;/code&gt; が設定されている場合は &lt;code&gt;&amp;lt;CONTEXT&amp;gt;.kubeconfig&lt;/code&gt; です。 &lt;code&gt;STDOUT&lt;/code&gt; にエクスポートするには、 &lt;code&gt;docker context export my-context -&lt;/code&gt; を実行できます。</target>
        </trans-unit>
        <trans-unit id="6851d6895d0099c40915873297c67ea84b9cab59" translate="yes" xml:space="preserve">
          <source>Expose a port or a range of ports</source>
          <target state="translated">ポートまたはポートの範囲を公開する</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
