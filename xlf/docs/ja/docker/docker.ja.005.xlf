<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="docker">
    <body>
      <group id="docker">
        <trans-unit id="7d8d847b75f3a6994514e317fe873aaab359c26e" translate="yes" xml:space="preserve">
          <source>Install Docker</source>
          <target state="translated">Dockerのインストール</target>
        </trans-unit>
        <trans-unit id="effe8c5d510d1ef23d3d1afa6d6f9626aa058bb1" translate="yes" xml:space="preserve">
          <source>Install Docker Compose</source>
          <target state="translated">Dockerのインストール Compose</target>
        </trans-unit>
        <trans-unit id="f73cdb9e5e0c429bc2f9602e720984379cce17ac" translate="yes" xml:space="preserve">
          <source>Install Docker Engine --- Community</source>
          <target state="translated">Dockerエンジンのインストール ---コミュニティ</target>
        </trans-unit>
        <trans-unit id="2b788e561c2a6bc904e0585158056a4640cc9fa3" translate="yes" xml:space="preserve">
          <source>Install Docker Engine on Linux machines</source>
          <target state="translated">LinuxマシンにDocker Engineをインストールする</target>
        </trans-unit>
        <trans-unit id="ab8c815d1df0c9a68ee41d49677b7e8479630da7" translate="yes" xml:space="preserve">
          <source>Install Docker Machine</source>
          <target state="translated">Dockerマシンのインストール</target>
        </trans-unit>
        <trans-unit id="fcd15501b35dfd1508ea6cfdf266785c9f0b0125" translate="yes" xml:space="preserve">
          <source>Install Docker if it is not present already.</source>
          <target state="translated">Dockerがまだ存在しない場合はインストールします。</target>
        </trans-unit>
        <trans-unit id="68fe0d84c9530073db651f2d2739b1fa7d4cf976" translate="yes" xml:space="preserve">
          <source>Install Machine directly</source>
          <target state="translated">機械を直接インストール</target>
        </trans-unit>
        <trans-unit id="bd2a014e2849bb66e55ba8985d1a4ec16b1565e2" translate="yes" xml:space="preserve">
          <source>Install Notary</source>
          <target state="translated">公証人の設置</target>
        </trans-unit>
        <trans-unit id="414c684e2283f776c8848e25014d3b137cd57a09" translate="yes" xml:space="preserve">
          <source>Install PostgreSQL on Docker</source>
          <target state="translated">DockerにPostgreSQLをインストールする</target>
        </trans-unit>
        <trans-unit id="88e024bcaece1405f0a9a82c3e618d481010c7c5" translate="yes" xml:space="preserve">
          <source>Install a &lt;a href=&quot;https://docs.docker.com/install#updates-and-patches&quot;&gt;maintained version&lt;/a&gt; of Docker Community Edition (CE) or Enterprise Edition (EE) on a &lt;a href=&quot;https://docs.docker.com/ee/supported-platforms/&quot;&gt;supported platform&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.docker.com/install#updates-and-patches&quot;&gt;維持されているバージョン&lt;/a&gt;のDocker Community Edition（CE）またはEnterprise Edition（EE）を&lt;a href=&quot;https://docs.docker.com/ee/supported-platforms/&quot;&gt;サポートさ&lt;/a&gt;れているプラットフォームにインストールします。</target>
        </trans-unit>
        <trans-unit id="d5af554abffdfd00543190034e3d8ea6fd312a72" translate="yes" xml:space="preserve">
          <source>Install a different version</source>
          <target state="translated">別のバージョンをインストールする</target>
        </trans-unit>
        <trans-unit id="7157acf8705c88c8679be64b631dfe061c4bc8ca" translate="yes" xml:space="preserve">
          <source>Install a machine on your local system using VirtualBox</source>
          <target state="translated">VirtualBoxを使用してローカルシステムにマシンをインストールします。</target>
        </trans-unit>
        <trans-unit id="fad90044f6e32c4fc215d03ac9d0f8477984284a" translate="yes" xml:space="preserve">
          <source>Install a plugin</source>
          <target state="translated">プラグインのインストール</target>
        </trans-unit>
        <trans-unit id="7307505bba158128bb25cf3412765f5616f95a44" translate="yes" xml:space="preserve">
          <source>Install and run Docker Machine, and create an account with the cloud provider.</source>
          <target state="translated">Docker Machineをインストールして実行し、クラウドプロバイダーでアカウントを作成します。</target>
        </trans-unit>
        <trans-unit id="3e3c4906d982de07025d954b6313c60a4e6bff22" translate="yes" xml:space="preserve">
          <source>Install and run Docker on Mac or Windows</source>
          <target state="translated">MacやWindowsにDockerをインストールして実行する</target>
        </trans-unit>
        <trans-unit id="920d15a7b64315557be1656da1c03b0a21459fb2" translate="yes" xml:space="preserve">
          <source>Install as a container</source>
          <target state="translated">コンテナとしてインストール</target>
        </trans-unit>
        <trans-unit id="e01195622131cc7b66ed627bb3e348f21aec92cd" translate="yes" xml:space="preserve">
          <source>Install bash completion scripts</source>
          <target state="translated">bash補完スクリプトのインストール</target>
        </trans-unit>
        <trans-unit id="985269bff7deea1c16c709b6e5a38a78131fba4f" translate="yes" xml:space="preserve">
          <source>Install command completion</source>
          <target state="translated">インストールコマンドの完了</target>
        </trans-unit>
        <trans-unit id="c62b3a5d25daa86f70d1e10b2cdecb7055e521c5" translate="yes" xml:space="preserve">
          <source>Install gcc so Python packages such as MarkupSafe and SQLAlchemy can compile speedups.</source>
          <target state="translated">MarkupSafeやSQLAlchemyなどのPythonパッケージがスピードアップしてコンパイルできるようにgccをインストールします。</target>
        </trans-unit>
        <trans-unit id="0d5edcf1519af8ebf157467482f6f70ac7e8f753" translate="yes" xml:space="preserve">
          <source>Install multiple machines on your cloud provider</source>
          <target state="translated">クラウドプロバイダーに複数のマシンをインストールする</target>
        </trans-unit>
        <trans-unit id="2ee689495a59c4dbcd174640a4ad79329564c761" translate="yes" xml:space="preserve">
          <source>Install plugins on swarm nodes</source>
          <target state="translated">スウォームノードへのプラグインのインストール</target>
        </trans-unit>
        <trans-unit id="a0aa0319e27238320c2d2cd9c0155769488706c0" translate="yes" xml:space="preserve">
          <source>Install pre-release builds</source>
          <target state="translated">プレリリースビルドのインストール</target>
        </trans-unit>
        <trans-unit id="253f580ae57224cf3afc9aacf2fddc9d48a9c3a3" translate="yes" xml:space="preserve">
          <source>Install the &lt;code&gt;ca-certificates&lt;/code&gt; package for your distribution</source>
          <target state="translated">ディストリビューション用の &lt;code&gt;ca-certificates&lt;/code&gt; パッケージをインストールします</target>
        </trans-unit>
        <trans-unit id="fac24b27dd18bd73f2e0717fb8f9f788fcaf3b60" translate="yes" xml:space="preserve">
          <source>Install the &lt;code&gt;sshfs&lt;/code&gt; plugin.</source>
          <target state="translated">&lt;code&gt;sshfs&lt;/code&gt; プラグインをインストールします。</target>
        </trans-unit>
        <trans-unit id="b0e677ca9e0decdfa6bb05eae401ed20d23f760f" translate="yes" xml:space="preserve">
          <source>Install using pip</source>
          <target state="translated">ピップを使ったインストール</target>
        </trans-unit>
        <trans-unit id="4122d343b08318eb1eb379802aeba53f2cef2053" translate="yes" xml:space="preserve">
          <source>Install via Homebrew</source>
          <target state="translated">Homebrew経由でインストール</target>
        </trans-unit>
        <trans-unit id="57497709172a790f247f334266c83b73fd1f8ad9" translate="yes" xml:space="preserve">
          <source>Install via MacPorts</source>
          <target state="translated">MacPorts経由でインストール</target>
        </trans-unit>
        <trans-unit id="3f1f3f20c560a55d4c43ecd242029ad0fd932e58" translate="yes" xml:space="preserve">
          <source>Install with &lt;code&gt;brew install bash-completion&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;brew install bash-completion&lt;/code&gt; でインストールします。</target>
        </trans-unit>
        <trans-unit id="20f45969ccd3c7ccdd2eda25c277e7e6b0b4a82e" translate="yes" xml:space="preserve">
          <source>Installation guides</source>
          <target state="translated">インストールガイド</target>
        </trans-unit>
        <trans-unit id="ccabf4bf4e0de325e1ee8faa76fd7ef3ed9182e3" translate="yes" xml:space="preserve">
          <source>Installing Compose</source>
          <target state="translated">コンポーズのインストール</target>
        </trans-unit>
        <trans-unit id="7c207b93b2af1157f5c75bb99e15b47da86e9f24" translate="yes" xml:space="preserve">
          <source>Installing a plugin</source>
          <target state="translated">プラグインのインストール</target>
        </trans-unit>
        <trans-unit id="4bc88762dcd338eccd994cf11d81ff8f35a99665" translate="yes" xml:space="preserve">
          <source>Installing and using a plugin</source>
          <target state="translated">プラグインのインストールと使用</target>
        </trans-unit>
        <trans-unit id="56c5d8012ec8972f75469f2c995ebfd14bb7349f" translate="yes" xml:space="preserve">
          <source>Installs and enables a plugin. Docker looks first for the plugin on your Docker host. If the plugin does not exist locally, then the plugin is pulled from the registry. Note that the minimum required registry version to distribute plugins is 2.3.0</source>
          <target state="translated">プラグインをインストールして有効化します。Dockerはまず、Dockerホスト上のプラグインを探します。プラグインがローカルに存在しない場合は、レジストリからプラグインが引き出されます。プラグインを配布するために必要な最小のレジストリバージョンは2.3.0であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="11c5c046555a081f52c01b4c53a5149c2251194d" translate="yes" xml:space="preserve">
          <source>Instead of (or as well as) specifying your own networks, you can also change the settings of the app-wide default network by defining an entry under &lt;code&gt;networks&lt;/code&gt; named &lt;code&gt;default&lt;/code&gt;:</source>
          <target state="translated">独自のネットワークを指定する代わりに（またはそれとともに）、default という名前の &lt;code&gt;networks&lt;/code&gt; 下にエントリを定義することで、アプリ全体のデフォルトネットワークの設定を変更することもでき &lt;code&gt;default&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="327f6afaad88c8a7eb781cae2c94ececdb88f375" translate="yes" xml:space="preserve">
          <source>Instead of attempting to create a network called &lt;code&gt;[projectname]_default&lt;/code&gt;, Compose looks for a network called &lt;code&gt;my-pre-existing-network&lt;/code&gt; and connect your app&amp;rsquo;s containers to it.</source>
          <target state="translated">&lt;code&gt;[projectname]_default&lt;/code&gt; と呼ばれるネットワークを作成しようとする代わりに、Composeは &lt;code&gt;my-pre-existing-network&lt;/code&gt; と呼ばれるネットワークを探し、アプリのコンテナーをそれに接続します。</target>
        </trans-unit>
        <trans-unit id="ceb73bae5c3ea227ccc859e3e9b8cd2909f5b14e" translate="yes" xml:space="preserve">
          <source>Instead of just using the default app network, you can specify your own networks with the top-level &lt;code&gt;networks&lt;/code&gt; key. This lets you create more complex topologies and specify &lt;a href=&quot;../../engine/extend/plugins_network/index&quot;&gt;custom network drivers&lt;/a&gt; and options. You can also use it to connect services to externally-created networks which aren&amp;rsquo;t managed by Compose.</source>
          <target state="translated">デフォルトのアプリネットワークを使用する代わりに、最上位の &lt;code&gt;networks&lt;/code&gt; キーを使用して独自のネットワークを指定できます。これにより、より複雑なトポロジを作成し、&lt;a href=&quot;../../engine/extend/plugins_network/index&quot;&gt;カスタムネットワークドライバー&lt;/a&gt;とオプションを指定できます。また、Composeで管理されていない外部で作成されたネットワークにサービスを接続するためにも使用できます。</target>
        </trans-unit>
        <trans-unit id="1586a5faab679aeb3f3c65bb6aa080fc9a80c9cf" translate="yes" xml:space="preserve">
          <source>Instead of specifying a context, you can pass a single &lt;code&gt;Dockerfile&lt;/code&gt; in the &lt;code&gt;URL&lt;/code&gt; or pipe the file in via &lt;code&gt;STDIN&lt;/code&gt;. To pipe a &lt;code&gt;Dockerfile&lt;/code&gt; from &lt;code&gt;STDIN&lt;/code&gt;:</source>
          <target state="translated">コンテキストを指定する代わりに、 &lt;code&gt;URL&lt;/code&gt; で単一の &lt;code&gt;Dockerfile&lt;/code&gt; を渡すか、 &lt;code&gt;STDIN&lt;/code&gt; を介してファイルをパイプすることができます。 &lt;code&gt;STDIN&lt;/code&gt; から &lt;code&gt;Dockerfile&lt;/code&gt; をパイプするには：</target>
        </trans-unit>
        <trans-unit id="7feb792a2137961928c5a8020b743e18ac9e2684" translate="yes" xml:space="preserve">
          <source>Instruct &lt;code&gt;web&lt;/code&gt;&amp;rsquo;s containers to share port 80 via a load-balanced network called &lt;code&gt;webnet&lt;/code&gt;. (Internally, the containers themselves publish to &lt;code&gt;web&lt;/code&gt;&amp;rsquo;s port 80 at an ephemeral port.)</source>
          <target state="translated">指示し &lt;code&gt;web&lt;/code&gt; と呼ばれる負荷分散されたネットワークを経由して共有ポート80へのコンテナ &lt;code&gt;webnet&lt;/code&gt; 。（内部的には、コンテナ自体が一時的なポートで &lt;code&gt;web&lt;/code&gt; のポート80にパブリッシュします。）</target>
        </trans-unit>
        <trans-unit id="0cb25351508738c1e72f51dac2adbd26d32df9de" translate="yes" xml:space="preserve">
          <source>Instruct the plugin that the user wants to create a volume, given a user specified volume name. The plugin does not need to actually manifest the volume on the filesystem yet (until &lt;code&gt;Mount&lt;/code&gt; is called). &lt;code&gt;Opts&lt;/code&gt; is a map of driver specific options passed through from the user request.</source>
          <target state="translated">ユーザーが指定したボリューム名を指定して、ユーザーがボリュームを作成することをプラグインに指示します。プラグインは、まだ（ &lt;code&gt;Mount&lt;/code&gt; が呼び出されるまで）ファイルシステム上のボリュームを実際に明示する必要はありません。 &lt;code&gt;Opts&lt;/code&gt; は、ユーザー要求から渡されるドライバー固有のオプションのマップです。</target>
        </trans-unit>
        <trans-unit id="4b320627e7e83d71928edb47345e9fddde3f407e" translate="yes" xml:space="preserve">
          <source>Instructs Docker to use the configuration files in your &lt;code&gt;~/testconfigs/&lt;/code&gt; directory when running the &lt;code&gt;ps&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;ps&lt;/code&gt; コマンドの実行時に &lt;code&gt;~/testconfigs/&lt;/code&gt; ディレクトリー内の構成ファイルを使用するようにDockerに指示します。</target>
        </trans-unit>
        <trans-unit id="57d9dbd5dcbd0c603ce1bf0de8a0af03387cb66c" translate="yes" xml:space="preserve">
          <source>Integrates DigitalOcean&amp;rsquo;s &lt;a href=&quot;https://www.digitalocean.com/products/storage/&quot;&gt;block storage solution&lt;/a&gt; into the Docker ecosystem by automatically attaching a given block storage volume to a DigitalOcean droplet and making the contents of the volume available to Docker containers running on that droplet.</source>
          <target state="translated">特定のブロックストレージボリュームをDigitalOceanドロップレットに自動的に接続し、そのドロップレットで実行されているDockerコンテナーがボリュームのコンテンツを利用できるようにすることで、DigitalOceanの&lt;a href=&quot;https://www.digitalocean.com/products/storage/&quot;&gt;ブロックストレージソリューション&lt;/a&gt;をDockerエコシステムに統合します。</target>
        </trans-unit>
        <trans-unit id="598b135fbc60de7f56b7050b3c8e1607dfe4369e" translate="yes" xml:space="preserve">
          <source>Interacting with V1 registries</source>
          <target state="translated">V1 レジストリとの相互作用</target>
        </trans-unit>
        <trans-unit id="df2378ff796ccc4391d1d98901c08d99e0d94683" translate="yes" xml:space="preserve">
          <source>Interchangeable: You can deploy updates and upgrades on-the-fly.</source>
          <target state="translated">交換可能。アップデートやアップグレードをその場で展開できます。</target>
        </trans-unit>
        <trans-unit id="9737649cf66da4e8b5ad0fa79bbb6beb6a05dfc6" translate="yes" xml:space="preserve">
          <source>Intermediate example: Use secrets with a Nginx service</source>
          <target state="translated">中間的な例です。Nginx サービスでシークレットを使用する</target>
        </trans-unit>
        <trans-unit id="8ad89b207241a5025e1f29ae7cbbfeeb628b29cc" translate="yes" xml:space="preserve">
          <source>Introduces the following additional parameters:</source>
          <target state="translated">以下の追加パラメータを導入します。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="3bba5a776b3e7cb238cc21fc35dd6e60be4e6f46" translate="yes" xml:space="preserve">
          <source>Invalid due to appearing twice:</source>
          <target state="translated">2回登場するため無効です。</target>
        </trans-unit>
        <trans-unit id="8d51fa63074df9f9a50d255a710d0abe98f627b1" translate="yes" xml:space="preserve">
          <source>Invalid due to line continuation:</source>
          <target state="translated">行が連続しているため無効です。</target>
        </trans-unit>
        <trans-unit id="f4f1063380b6a3533c8904a8a26985d395de0ed8" translate="yes" xml:space="preserve">
          <source>Is the machine active?</source>
          <target state="translated">機械は動いているのか?</target>
        </trans-unit>
        <trans-unit id="ff4478fa2b6d4a5cd64aa4e2e8abfa4aa48dc732" translate="yes" xml:space="preserve">
          <source>Is the machine an active non-swarm host?</source>
          <target state="translated">マシンはアクティブな非スウォームホストですか?</target>
        </trans-unit>
        <trans-unit id="669beb05b49a94f1397d2428a19ed16598646db0" translate="yes" xml:space="preserve">
          <source>Is the machine an active swarm master?</source>
          <target state="translated">マシンはアクティブスウォームマスターですか?</target>
        </trans-unit>
        <trans-unit id="0ea8925b358e4794e62a9fa1de38ac84a43186ca" translate="yes" xml:space="preserve">
          <source>Isolate containers with a user namespace</source>
          <target state="translated">ユーザー名空間を持つコンテナを分離する</target>
        </trans-unit>
        <trans-unit id="58fcfddf38b8e0d321a7e6e4460da1f3284cbefe" translate="yes" xml:space="preserve">
          <source>It appears alongside &lt;code&gt;build&lt;/code&gt;, not as a sub-option:</source>
          <target state="translated">サブオプションとしてではなく、 &lt;code&gt;build&lt;/code&gt; と一緒に表示されます：</target>
        </trans-unit>
        <trans-unit id="9c9a4e988b803a6e718342920f90863200804e58" translate="yes" xml:space="preserve">
          <source>It can also be used in conjunction with the &lt;code&gt;external&lt;/code&gt; property:</source>
          <target state="translated">また、 &lt;code&gt;external&lt;/code&gt; プロパティと組み合わせて使用​​することもできます。</target>
        </trans-unit>
        <trans-unit id="4cfd9b8200a6b654fa715e2dec5735322d030d40" translate="yes" xml:space="preserve">
          <source>It can be useful to commit a container&amp;rsquo;s file changes or settings into a new image. This allows you to debug a container by running an interactive shell, or to export a working dataset to another server. Generally, it is better to use Dockerfiles to manage your images in a documented and maintainable way. &lt;a href=&quot;../tag/index&quot;&gt;Read more about valid image names and tags&lt;/a&gt;.</source>
          <target state="translated">コンテナのファイルの変更や設定を新しいイメージにコミットすると便利です。これにより、インタラクティブシェルを実行してコンテナをデバッグしたり、作業中のデータセットを別のサーバーにエクスポートしたりできます。一般的に、Dockerfileを使用して、文書化された保守可能な方法でイメージを管理することをお勧めします。&lt;a href=&quot;../tag/index&quot;&gt;有効な画像名とタグの詳細をご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="538361963c7660e2eb64a4bb384340a77753ac2e" translate="yes" xml:space="preserve">
          <source>It is also possible to partially override values in extension fields using the &lt;a href=&quot;http://yaml.org/type/merge.html&quot;&gt;YAML merge type&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;http://yaml.org/type/merge.html&quot;&gt;YAMLマージタイプ&lt;/a&gt;を使用して、拡張フィールドの値を部分的にオーバーライドすることもできます。例えば：</target>
        </trans-unit>
        <trans-unit id="df078ace6a20c1cd682763b4e3588d1eeeaf6bf9" translate="yes" xml:space="preserve">
          <source>It is also possible to specify a network interface to advertise that interface&amp;rsquo;s address; for example &lt;code&gt;--advertise-addr eth0:2377&lt;/code&gt;.</source>
          <target state="translated">ネットワークインターフェイスを指定して、そのインターフェイスのアドレスをアドバタイズすることもできます。たとえば &lt;code&gt;--advertise-addr eth0:2377&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e7a5887bd057baa0e9a3a278333ae9d6e4a833c7" translate="yes" xml:space="preserve">
          <source>It is forbidden to redirect the standard input of a &lt;code&gt;docker attach&lt;/code&gt; command while attaching to a tty-enabled container (i.e.: launched with &lt;code&gt;-t&lt;/code&gt;).</source>
          <target state="translated">ttyが有効なコンテナーに接続している間（つまり、 &lt;code&gt;-t&lt;/code&gt; で起動）、 &lt;code&gt;docker attach&lt;/code&gt; コマンドの標準入力をリダイレクトすることは禁止されています。</target>
        </trans-unit>
        <trans-unit id="954570f5d18b55e059d5c1d62b27d940e84ce289" translate="yes" xml:space="preserve">
          <source>It is important to note the distinction between &lt;code&gt;HOST_PORT&lt;/code&gt; and &lt;code&gt;CONTAINER_PORT&lt;/code&gt;. In the above example, for &lt;code&gt;db&lt;/code&gt;, the &lt;code&gt;HOST_PORT&lt;/code&gt; is &lt;code&gt;8001&lt;/code&gt; and the container port is &lt;code&gt;5432&lt;/code&gt; (postgres default). Networked service-to-service communication use the &lt;code&gt;CONTAINER_PORT&lt;/code&gt;. When &lt;code&gt;HOST_PORT&lt;/code&gt; is defined, the service is accessible outside the swarm as well.</source>
          <target state="translated">&lt;code&gt;HOST_PORT&lt;/code&gt; と &lt;code&gt;CONTAINER_PORT&lt;/code&gt; の違いに注意することが重要です。上記の例では、 &lt;code&gt;db&lt;/code&gt; の場合、 &lt;code&gt;HOST_PORT&lt;/code&gt; は &lt;code&gt;8001&lt;/code&gt; で、コンテナーポートは &lt;code&gt;5432&lt;/code&gt; （postgresのデフォルト）です。ネットワーク化されたサービス間通信は &lt;code&gt;CONTAINER_PORT&lt;/code&gt; を使用します。とき &lt;code&gt;HOST_PORT&lt;/code&gt; が定義され、サービスも群れアクセス外です。</target>
        </trans-unit>
        <trans-unit id="69541379c8dfeadb47fa3ff3e6d08feab423f643" translate="yes" xml:space="preserve">
          <source>It is not possible to copy certain system files such as resources under &lt;code&gt;/proc&lt;/code&gt;, &lt;code&gt;/sys&lt;/code&gt;, &lt;code&gt;/dev&lt;/code&gt;, &lt;a href=&quot;../run/index#mount-tmpfs-tmpfs&quot;&gt;tmpfs&lt;/a&gt;, and mounts created by the user in the container. However, you can still copy such files by manually running &lt;code&gt;tar&lt;/code&gt; in &lt;code&gt;docker exec&lt;/code&gt;. Both of the following examples do the same thing in different ways (consider &lt;code&gt;SRC_PATH&lt;/code&gt; and &lt;code&gt;DEST_PATH&lt;/code&gt; are directories):</source>
          <target state="translated">&lt;code&gt;/proc&lt;/code&gt; 、 &lt;code&gt;/sys&lt;/code&gt; 、 &lt;code&gt;/dev&lt;/code&gt; 、&lt;a href=&quot;../run/index#mount-tmpfs-tmpfs&quot;&gt;tmpfsの&lt;/a&gt;下のリソース、およびユーザーがコンテナに作成したマウントなどの特定のシステムファイルをコピーすることはできません。ただし、 &lt;code&gt;docker exec&lt;/code&gt; で &lt;code&gt;tar&lt;/code&gt; を手動で実行することで、このようなファイルをコピーすることはできます。次の例はどちらも、同じことを異なる方法で実行します（ &lt;code&gt;SRC_PATH&lt;/code&gt; と &lt;code&gt;DEST_PATH&lt;/code&gt; がディレクトリであることを考慮してください）。</target>
        </trans-unit>
        <trans-unit id="1c11ee0a47ab61bcddee811a4a3c1551f471a651" translate="yes" xml:space="preserve">
          <source>It is often necessary to directly expose devices to a container. The &lt;code&gt;--device&lt;/code&gt; option enables that. For example, a specific block storage device or loop device or audio device can be added to an otherwise unprivileged container (without the &lt;code&gt;--privileged&lt;/code&gt; flag) and have the application directly access it.</source>
          <target state="translated">多くの場合、デバイスをコンテナに直接公開する必要があります。 &lt;code&gt;--device&lt;/code&gt; オプションはそれを可能にします。たとえば、特定のブロックストレージデバイス、ループデバイス、またはオーディオデバイスを、権限のないコンテナー（ &lt;code&gt;--privileged&lt;/code&gt; フラグなし）に追加して、アプリケーションに直接アクセスさせることができます。</target>
        </trans-unit>
        <trans-unit id="137436fa9d11e7cf2b1523743fc24bfa701a5257" translate="yes" xml:space="preserve">
          <source>It is possible to add multiple placement preferences to a service. This establishes a hierarchy of preferences, so that tasks are first divided over one category, and then further divided over additional categories. One example of where this may be useful is dividing tasks fairly between datacenters, and then splitting the tasks within each datacenter over a choice of racks. To add multiple placement preferences, specify the &lt;code&gt;--placement-pref&lt;/code&gt; flag multiple times. The order is significant, and the placement preferences will be applied in the order given when making scheduling decisions.</source>
          <target state="translated">サービスに複数の配置設定を追加することが可能です。これにより、設定の階層が確立されるため、タスクは最初に1つのカテゴリーに分割され、次に追加のカテゴリーにさらに分割されます。これが役立つ場合の1つの例は、データセンター間でタスクを公平に分割し、各データセンター内のタスクを選択したラックに分割することです。複数の配置設定を追加するには、 &lt;code&gt;--placement-pref&lt;/code&gt; フラグを複数回指定します。順序は重要であり、配置の設定は、スケジュールを決定するときに指定された順序で適用されます。</target>
        </trans-unit>
        <trans-unit id="e1a4a31399fcf6a0ef976d8b6afd92f99ddc9162" translate="yes" xml:space="preserve">
          <source>It is possible to assign multiple subordinate ranges for a given user or group by adding multiple non-overlapping mappings for the same user or group in the &lt;code&gt;/etc/subuid&lt;/code&gt; or &lt;code&gt;/etc/subgid&lt;/code&gt; file. In this case, Docker uses only the first five mappings, in accordance with the kernel&amp;rsquo;s limitation of only five entries in &lt;code&gt;/proc/self/uid_map&lt;/code&gt; and &lt;code&gt;/proc/self/gid_map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;/etc/subuid&lt;/code&gt; または &lt;code&gt;/etc/subgid&lt;/code&gt; ファイルで同じユーザーまたはグループに重複しない複数のマッピングを追加することにより、特定のユーザーまたはグループに複数の従属範囲を割り当てることができます。この場合、Dockerは &lt;code&gt;/proc/self/uid_map&lt;/code&gt; および &lt;code&gt;/proc/self/gid_map&lt;/code&gt; のエントリが5つだけというカーネルの制限に従って、最初の5つのマッピングのみを使用します。</target>
        </trans-unit>
        <trans-unit id="551fd76d387af32f9f893489e03e5a685cceffd5" translate="yes" xml:space="preserve">
          <source>It is possible to re-use configuration fragments using extension fields. Those special fields can be of any format as long as they are located at the root of your Compose file and their name start with the &lt;code&gt;x-&lt;/code&gt; character sequence.</source>
          <target state="translated">拡張フィールドを使用して構成フラグメントを再利用することが可能です。これらの特殊フィールドは、Composeファイルのルートにあり、名前が &lt;code&gt;x-&lt;/code&gt; 文字シーケンスで始まる限り、任意の形式にすることができます。</target>
        </trans-unit>
        <trans-unit id="68cf732760ff3e36537f7e909dd972b7e0e5d277" translate="yes" xml:space="preserve">
          <source>It is up to the user to choose an appropriate password, and to protect their key from offline brute-force attacks.</source>
          <target state="translated">適切なパスワードを選択し、オフラインのブルートフォース攻撃から鍵を保護するのはユーザー次第です。</target>
        </trans-unit>
        <trans-unit id="d9ecf1faee05f906fccea0d1bdc78e242cd8859e" translate="yes" xml:space="preserve">
          <source>It is verbose and tedious to always provide the &lt;code&gt;-s&lt;/code&gt; and &lt;code&gt;-d&lt;/code&gt; flags manually to most commands. A simple way to create preconfigured versions of the Notary command is via aliases. Add the following to your &lt;code&gt;.bashrc&lt;/code&gt; or equivalent:</source>
          <target state="translated">ほとんどのコマンドに常に &lt;code&gt;-s&lt;/code&gt; フラグと &lt;code&gt;-d&lt;/code&gt; フラグを手動で指定するのは、冗長で面倒です。Notaryコマンドの構成済みバージョンを作成する簡単な方法は、エイリアスを使用することです。以下を &lt;code&gt;.bashrc&lt;/code&gt; または同等のものに追加します。</target>
        </trans-unit>
        <trans-unit id="ab2ab2b0d4be20a1a682036b18e20547e2eb4abd" translate="yes" xml:space="preserve">
          <source>It is very common for Docker Content Trust to be built into existing automation systems. To allow tools to wrap Docker and push trusted content, there are environment variables that can be passed through to the client.</source>
          <target state="translated">Docker Content Trustが既存の自動化システムに組み込まれていることは非常に一般的です。ツールがDockerをラップして信頼されたコンテンツをプッシュできるようにするために、クライアントに渡すことができる環境変数があります。</target>
        </trans-unit>
        <trans-unit id="46f03a17d1d739be3eeef92fe2ab04d21f892ae4" translate="yes" xml:space="preserve">
          <source>It is very important that the ranges not overlap, so that a process cannot gain access in a different namespace. On most Linux distributions, system utilities manage the ranges for you when you add or remove users.</source>
          <target state="translated">プロセスが別の名前空間にアクセスできないように、範囲が重ならないようにすることが非常に重要です。ほとんどの Linux ディストリビューションでは、ユーザの追加や削除の際に、システムユーティリティが範囲を管理してくれます。</target>
        </trans-unit>
        <trans-unit id="908d259667bbd0fdef59c321815dc169bc5aeba3" translate="yes" xml:space="preserve">
          <source>It is very important that you back up your keys to a safe, secure location. Loss of the repository key is recoverable; loss of the root key is not.</source>
          <target state="translated">鍵を安全で安全な場所にバックアップすることが非常に重要です。リポジトリ鍵の紛失は回復可能であるが、ルート鍵の紛失は回復できない。</target>
        </trans-unit>
        <trans-unit id="0996e39baf4be9342e25f764757669c04464f5e1" translate="yes" xml:space="preserve">
          <source>It needs access to the &lt;code&gt;host&lt;/code&gt; network.</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; ネットワークにアクセスする必要があります。</target>
        </trans-unit>
        <trans-unit id="0d7eedd4e614c25f9ddc8acc6796003a23d9005f" translate="yes" xml:space="preserve">
          <source>It needs the &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt; capability, which allows the plugin to run the &lt;code&gt;mount&lt;/code&gt; command.</source>
          <target state="translated">プラグインが &lt;code&gt;mount&lt;/code&gt; コマンドを実行できるようにする &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt; 機能が必要です。</target>
        </trans-unit>
        <trans-unit id="9ff9966fd7633997c32dddad2c3dc6ffa015b7de" translate="yes" xml:space="preserve">
          <source>It takes &lt;strong&gt;retries&lt;/strong&gt; consecutive failures of the health check for the container to be considered &lt;code&gt;unhealthy&lt;/code&gt;.</source>
          <target state="translated">コンテナーが &lt;code&gt;unhealthy&lt;/code&gt; ないと見なされるには、ヘルスチェックの連続した失敗を&lt;strong&gt;再試行&lt;/strong&gt;します。</target>
        </trans-unit>
        <trans-unit id="fb6be6f28fa6b870443eae3570839a4488846c4d" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s as easy as that to stand up and scale your app with Docker. You&amp;rsquo;ve taken a huge step towards learning how to run containers in production. Up next, you learn how to run this app as a bonafide swarm on a cluster of Docker machines.</source>
          <target state="translated">立ち上がってDockerでアプリを拡張するのはそれと同じくらい簡単です。本番環境でコンテナを実行する方法を学習するための大きな一歩を踏み出しました。次は、Dockerマシンのクラスター上でこのアプリを真の群れとして実行する方法を学びます。</target>
        </trans-unit>
        <trans-unit id="b76533502d26aed93795ce54b6b76f49c1fc7928" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s easy to add services to our &lt;code&gt;docker-compose.yml&lt;/code&gt; file. First, let&amp;rsquo;s add a free visualizer service that lets us look at how our swarm is scheduling containers.</source>
          <target state="translated">&lt;code&gt;docker-compose.yml&lt;/code&gt; ファイルにサービスを追加するのは簡単です。最初に、無料のビジュアライザーサービスを追加して、群れがコンテナーをスケジュールする方法を確認できるようにします。</target>
        </trans-unit>
        <trans-unit id="7f082fb8d4bea15f8889d77377e106a9c22adf29" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s more complicated if you&amp;rsquo;re using particular configuration features:</source>
          <target state="translated">特定の構成機能を使用している場合は、さらに複雑になります。</target>
        </trans-unit>
        <trans-unit id="88fa82c4d602eb465e03c911efedb365b397a9f4" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to use environment variables in your shell to populate values inside a Compose file:</source>
          <target state="translated">シェルで環境変数を使用して、Composeファイル内に値を入力することができます。</target>
        </trans-unit>
        <trans-unit id="1975be0afa476f4590f4ee055de3b736753a6139" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s recommended that you use reverse-DNS notation to prevent your labels from conflicting with those used by other software.</source>
          <target state="translated">ラベルが他のソフトウェアで使用されているラベルと競合しないように、逆DNS表記を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d18cbae40de71fdcfbb88d66c4df0313d679687a" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s time to begin building an app the Docker way. We start at the bottom of the hierarchy of such app, a container, which this page covers. Above this level is a service, which defines how containers behave in production, covered in &lt;a href=&quot;../part3/index&quot;&gt;Part 3&lt;/a&gt;. Finally, at the top level is the stack, defining the interactions of all the services, covered in &lt;a href=&quot;../part5/index&quot;&gt;Part 5&lt;/a&gt;.</source>
          <target state="translated">Docker方式でアプリの構築を開始する時が来ました。このページで説明する、コンテナのようなアプリの階層の一番下から始めます。このレベルの上位にあるのはサービスで、本番でのコンテナーの動作を定義します（&lt;a href=&quot;../part3/index&quot;&gt;パート3で説明）&lt;/a&gt;。最後に、トップレベルはスタックであり、&lt;a href=&quot;../part5/index&quot;&gt;Part 5&lt;/a&gt;でカバーされているすべてのサービスの相互作用を定義しています。</target>
        </trans-unit>
        <trans-unit id="ed9626b5c17e6a3158778059cc2cd1d8afdf0d16" translate="yes" xml:space="preserve">
          <source>Iterating and scaling your app</source>
          <target state="translated">アプリの反復処理とスケーリング</target>
        </trans-unit>
        <trans-unit id="227293154ef1fdf91a030290b560e39b9d2559a4" translate="yes" xml:space="preserve">
          <source>Iteration and cleanup</source>
          <target state="translated">イテレーションとクリーンアップ</target>
        </trans-unit>
        <trans-unit id="d8586e1d9d2ce52f2da48ea9c543162fc685898a" translate="yes" xml:space="preserve">
          <source>JSON specification</source>
          <target state="translated">JSON仕様</target>
        </trans-unit>
        <trans-unit id="93d86bc8906bb78510b2ad977d86b22ee7438fe4" translate="yes" xml:space="preserve">
          <source>Join a node to a swarm. The node joins as a manager node or worker node based upon the token you pass with the &lt;code&gt;--token&lt;/code&gt; flag. If you pass a manager token, the node joins as a manager. If you pass a worker token, the node joins as a worker.</source>
          <target state="translated">ノードをスウォームに参加させます。ノードは、 &lt;code&gt;--token&lt;/code&gt; フラグで渡したトークンに基づいて、マネージャーノードまたはワーカーノードとして参加します。マネージャートークンを渡すと、ノードはマネージャーとして参加します。ワーカートークンを渡すと、ノードはワーカーとして参加します。</target>
        </trans-unit>
        <trans-unit id="cdf346545f85bcd2ac6db7457477379f3dc8ce88" translate="yes" xml:space="preserve">
          <source>Join a node to swarm as a manager</source>
          <target state="translated">ノードにマネージャとして参加してスウォーム化する</target>
        </trans-unit>
        <trans-unit id="2fa0bb20b23bfe84cd39b0230b7be38315e7d5ec" translate="yes" xml:space="preserve">
          <source>Join a node to swarm as a worker</source>
          <target state="translated">ノードにワーカーとして参加してスワームに参加する</target>
        </trans-unit>
        <trans-unit id="3931d1d98d15f29366e0d7406263139f1aadd5f6" translate="yes" xml:space="preserve">
          <source>Join a swarm as a node and/or manager</source>
          <target state="translated">ノードやマネージャとしてスウォームに参加する</target>
        </trans-unit>
        <trans-unit id="af5c636f2c747e60cb0eb3c3c05b8c83dda18ac8" translate="yes" xml:space="preserve">
          <source>Join another (&amp;ldquo;shareable&amp;rdquo;) container&amp;rsquo;s IPC namespace.</source>
          <target state="translated">別の（「共有可能」）コンテナのIPC名前空間に参加します。</target>
        </trans-unit>
        <trans-unit id="5510aae81745a900ff6a1d206ddcefde9e0889e5" translate="yes" xml:space="preserve">
          <source>Join as a manager node</source>
          <target state="translated">管理者ノードとして参加する</target>
        </trans-unit>
        <trans-unit id="55f67cb6fd9d40fd8a2df610b373d4d52d2cd515" translate="yes" xml:space="preserve">
          <source>Join as a worker node</source>
          <target state="translated">ワーカーノードとして参加</target>
        </trans-unit>
        <trans-unit id="c76220bfd1fb7b9f59e2e1fc23873bcdcf8cc1c4" translate="yes" xml:space="preserve">
          <source>Join nodes to a swarm</source>
          <target state="translated">スウォームにノードを結合する</target>
        </trans-unit>
        <trans-unit id="3639cacbe072346a35839355fa73730779f710a2" translate="yes" xml:space="preserve">
          <source>Joining another container&amp;rsquo;s pid namespace can be used for debugging that container.</source>
          <target state="translated">別のコンテナーのpid名前空間に参加すると、そのコンテナーのデバッグに使用できます。</target>
        </trans-unit>
        <trans-unit id="e71ac678a59bc83ece73e440193af7fd503cce30" translate="yes" xml:space="preserve">
          <source>Journald logging driver for Docker. Writes log messages to &lt;code&gt;journald&lt;/code&gt;.</source>
          <target state="translated">Docker用のジャーナルロギングドライバー。ログメッセージを &lt;code&gt;journald&lt;/code&gt; に書き込みます。</target>
        </trans-unit>
        <trans-unit id="d03028658a8cf7cb32848154d239e0ac38f439f2" translate="yes" xml:space="preserve">
          <source>Just as with other docker commands that take image names, you can refer to an image with or without a tag, or by digest (e.g. hello-world@sha256:f3b3b28a45160805bb16542c9531888519430e9e6d6ffc09d72261b0d26ff74f).</source>
          <target state="translated">画像名を取る他の docker コマンドと同様に、タグの有無やダイジェストで画像を参照することができます (例:hello-world@sha256:f3b3b28a45160805bb16542c9531888519430e9e6d6ffc09d72261b0d26ff74f)。</target>
        </trans-unit>
        <trans-unit id="b01f1f8b458e043c28cc5fe41fbfb19ff7253960" translate="yes" xml:space="preserve">
          <source>Just as you can use third-party tools to augment Docker containers, including special network topologies or shared filesystems, tools exist to harden Docker containers without the need to modify Docker itself.</source>
          <target state="translated">特別なネットワークトポロジや共有ファイルシステムなど、Dockerコンテナを拡張するためにサードパーティ製のツールを使用することができるのと同様に、Docker自体を変更することなくDockerコンテナを強化するためのツールが存在します。</target>
        </trans-unit>
        <trans-unit id="9d438933844f319b751c15e820ef73fbb188fa3d" translate="yes" xml:space="preserve">
          <source>Just like before, run the following command to deploy the app on &lt;code&gt;myvm1&lt;/code&gt;.</source>
          <target state="translated">前と同じように、次のコマンドを実行してアプリを &lt;code&gt;myvm1&lt;/code&gt; にデプロイします。</target>
        </trans-unit>
        <trans-unit id="81ff80dadbd4fe6e241f2137d7faf499603979ab" translate="yes" xml:space="preserve">
          <source>Just like how &lt;code&gt;scp&lt;/code&gt; has a &lt;code&gt;-r&lt;/code&gt; flag for copying files recursively, &lt;code&gt;docker-machine&lt;/code&gt; has a &lt;code&gt;-r&lt;/code&gt; flag for this feature.</source>
          <target state="translated">&lt;code&gt;scp&lt;/code&gt; がファイルを再帰的にコピーするための &lt;code&gt;-r&lt;/code&gt; フラグを持っているのと同じように、 &lt;code&gt;docker-machine&lt;/code&gt; はこの機能のために &lt;code&gt;-r&lt;/code&gt; フラグを持っています。</target>
        </trans-unit>
        <trans-unit id="883faf2f89ef7add648c9777bc1131e09ab63aff" translate="yes" xml:space="preserve">
          <source>Just like with &lt;code&gt;docker run -e&lt;/code&gt;, you can set environment variables on a one-off container with &lt;code&gt;docker-compose run -e&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;docker run -e&lt;/code&gt; と同様に、docker &lt;code&gt;docker-compose run -e&lt;/code&gt; して、1回限りのコンテナーに環境変数を設定できます。</target>
        </trans-unit>
        <trans-unit id="2c16dfdfaa07d58c9003c38d9df7e1cb56fd2fc2" translate="yes" xml:space="preserve">
          <source>Just like with standalone containers, you can specify a command that the service&amp;rsquo;s containers should run, by adding it after the image name. This example starts a service called &lt;code&gt;helloworld&lt;/code&gt; which uses an &lt;code&gt;alpine&lt;/code&gt; image and runs the command &lt;code&gt;ping docker.com&lt;/code&gt;:</source>
          <target state="translated">スタンドアロンコンテナーと同様に、イメージ名の後に追加することで、サービスのコンテナーが実行するコマンドを指定できます。この例では、 &lt;code&gt;alpine&lt;/code&gt; イメージを使用してコマンド &lt;code&gt;ping docker.com&lt;/code&gt; を実行する &lt;code&gt;helloworld&lt;/code&gt; というサービスを開始します。</target>
        </trans-unit>
        <trans-unit id="532c83cd72eb94d7728dd9be6890048bea72e775" translate="yes" xml:space="preserve">
          <source>KILL</source>
          <target state="translated">KILL</target>
        </trans-unit>
        <trans-unit id="3edc762a6dd4eaf007e8ced210c65e58d4076e7d" translate="yes" xml:space="preserve">
          <source>Keep STDIN open even if not attached</source>
          <target state="translated">アタッチされていなくてもSTDINを開いたままにしておく</target>
        </trans-unit>
        <trans-unit id="e2946dbcc93cf37aaf8b462033edeb19faf7901e" translate="yes" xml:space="preserve">
          <source>Keep in mind that &lt;code&gt;links&lt;/code&gt;, &lt;code&gt;volumes_from&lt;/code&gt;, and &lt;code&gt;depends_on&lt;/code&gt; are never shared between services using &lt;code&gt;extends&lt;/code&gt;. These exceptions exist to avoid implicit dependencies; you always define &lt;code&gt;links&lt;/code&gt; and &lt;code&gt;volumes_from&lt;/code&gt; locally. This ensures dependencies between services are clearly visible when reading the current file. Defining these locally also ensures that changes to the referenced file don&amp;rsquo;t break anything.</source>
          <target state="translated">ことを覚えておいてください &lt;code&gt;links&lt;/code&gt; 、 &lt;code&gt;volumes_from&lt;/code&gt; 、および &lt;code&gt;depends_on&lt;/code&gt; を使用してサービス間で共有されることはありません &lt;code&gt;extends&lt;/code&gt; 。これらの例外は、暗黙的な依存関係を回避するために存在します。 &lt;code&gt;links&lt;/code&gt; と &lt;code&gt;volumes_from&lt;/code&gt; は常にローカルで定義します。これにより、現在のファイルを読み取るときにサービス間の依存関係が明確に表示されます。これらをローカルに定義することで、参照ファイルを変更しても何も壊れないことが保証されます。</target>
        </trans-unit>
        <trans-unit id="9f1115406bbe1f5a1759e17480c853c28c03bada" translate="yes" xml:space="preserve">
          <source>Keep in mind that &lt;em&gt;the order of files in the list is significant in determining the value assigned to a variable that shows up more than once&lt;/em&gt;. The files in the list are processed from the top down. For the same variable specified in file &lt;code&gt;a.env&lt;/code&gt; and assigned a different value in file &lt;code&gt;b.env&lt;/code&gt;, if &lt;code&gt;b.env&lt;/code&gt; is listed below (after), then the value from &lt;code&gt;b.env&lt;/code&gt; stands. For example, given the following declaration in &lt;code&gt;docker-compose.yml&lt;/code&gt;:</source>
          <target state="translated">&lt;em&gt;リスト内のファイルの順序は、2回以上表示される変数に割り当てられた値を決定する際に重要であること&lt;/em&gt;を覚えておいてください。リスト内のファイルは上から下に処理されます。ファイルで指定された同一の変数の &lt;code&gt;a.env&lt;/code&gt; とファイル内の異なる値に割り当てられ &lt;code&gt;b.env&lt;/code&gt; の場合、 &lt;code&gt;b.env&lt;/code&gt; が下に記載されている（後に）、次いでから値 &lt;code&gt;b.env&lt;/code&gt; が立ちます。たとえば、 &lt;code&gt;docker-compose.yml&lt;/code&gt; に次の宣言があるとします。</target>
        </trans-unit>
        <trans-unit id="e5d006e0f5f0fdb492321b358c4830db6193e4f0" translate="yes" xml:space="preserve">
          <source>Keep in mind that to use the ingress network in the swarm, you need to have the following ports open between the swarm nodes before you enable swarm mode:</source>
          <target state="translated">スウォームでイングレスネットワークを使用するには、スウォームモードを有効にする前に、スウォームノード間で次のポートを開いておく必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="fc88f191aba3d8e4c6cb58eed4d8ce6e24cb8f78" translate="yes" xml:space="preserve">
          <source>Keep reading for details about concepts relating to Docker swarm services, including nodes, services, tasks, and load balancing.</source>
          <target state="translated">ノード、サービス、タスク、ロードバランシングなど、Dockerのスウォームサービスに関連する概念の詳細については、引き続きお読みください。</target>
        </trans-unit>
        <trans-unit id="c051e176f76f78e1ac5b2f45d44479ee599645d5" translate="yes" xml:space="preserve">
          <source>Keep reading for more information and use cases for each of these methods.</source>
          <target state="translated">これらのメソッドの詳細情報とユースケースについては、引き続きお読みください。</target>
        </trans-unit>
        <trans-unit id="8a34eafa0ebcf421dd485c9abf116916491dbd04" translate="yes" xml:space="preserve">
          <source>Keep the following things in mind about volumes in the &lt;code&gt;Dockerfile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Dockerfile&lt;/code&gt; のボリュームについては、次の点に注意してください。</target>
        </trans-unit>
        <trans-unit id="d261a130a52919c210d7f95561d0c0690d62daac" translate="yes" xml:space="preserve">
          <source>Keep the swarm or remove it?</source>
          <target state="translated">群れを維持するか除去するか?</target>
        </trans-unit>
        <trans-unit id="021071f2b5e1149a4373f45b77446654a5b8c8dd" translate="yes" xml:space="preserve">
          <source>Keep the unlock key around for a short time after disabling autolocking, in case a manager goes down while it is still configured to lock using the old key.</source>
          <target state="translated">古いキーを使用してロックするように設定されている間にマネージャーがダウンした場合に備えて、オートロックを無効にした後、しばらくの間はロック解除キーを周りに置いておいてください。</target>
        </trans-unit>
        <trans-unit id="e636c1c192a5d61c1955d55cce82990cbd13a12c" translate="yes" xml:space="preserve">
          <source>Kernel memory constraints</source>
          <target state="translated">カーネルメモリ制約</target>
        </trans-unit>
        <trans-unit id="f4fae48265f804d84d60e52dc1217418236f50fd" translate="yes" xml:space="preserve">
          <source>Kernel memory is a subset of the user memory. This setup is useful in deployments where the total amount of memory per-cgroup is overcommitted. Overcommitting kernel memory limits is definitely not recommended, since the box can still run out of non-reclaimable memory. In this case, you can configure K so that the sum of all groups is never greater than the total memory. Then, freely set U at the expense of the system's service quality.</source>
          <target state="translated">カーネルメモリはユーザーメモリのサブセットです。このセットアップは、グループあたりのメモリの総量がオーバーコミットされているような展開で有用です。カーネルメモリの制限をオーバーコミットすることは絶対にお勧めできません。この場合、すべてのグループの合計がメモリの合計よりも決して大きくならないように K を設定することができます。その後、システムのサービス品質を犠牲にしてUを自由に設定してください。</target>
        </trans-unit>
        <trans-unit id="625ee403e60bf922a70a9cc53027a328cb82e400" translate="yes" xml:space="preserve">
          <source>Kernel memory is fundamentally different than user memory as kernel memory can&amp;rsquo;t be swapped out. The inability to swap makes it possible for the container to block system services by consuming too much kernel memory. Kernel memory includes：</source>
          <target state="translated">カーネルメモリはスワップアウトできないため、カーネルメモリは基本的にユーザーメモリとは異なります。スワップできないため、コンテナがカーネルメモリを使いすぎてシステムサービスをブロックする可能性があります。カーネルメモリに含まれるもの：</target>
        </trans-unit>
        <trans-unit id="c3161c0722c81ad66454215a48baa52c84eb62d1" translate="yes" xml:space="preserve">
          <source>Kernel memory is never completely independent of user memory. Instead, you limit kernel memory in the context of the user memory limit. Assume &amp;ldquo;U&amp;rdquo; is the user memory limit and &amp;ldquo;K&amp;rdquo; the kernel limit. There are three possible ways to set limits:</source>
          <target state="translated">カーネルメモリがユーザーメモリから完全に独立することはありません。代わりに、ユーザーメモリ制限のコンテキストでカーネルメモリを制限します。「U」がユーザーメモリの制限で、「K」がカーネルの制限であると仮定します。制限を設定する方法は3つあります。</target>
        </trans-unit>
        <trans-unit id="622da91ebd496ca53f00d65623eb2e7a0b35c8d7" translate="yes" xml:space="preserve">
          <source>Kernel memory limit</source>
          <target state="translated">カーネルのメモリ制限</target>
        </trans-unit>
        <trans-unit id="99fa080e74c6537742a518ae8e215a46e700f823" translate="yes" xml:space="preserve">
          <source>Kernel memory limit (format: &lt;code&gt;&amp;lt;number&amp;gt;[&amp;lt;unit&amp;gt;]&lt;/code&gt;). Number is a positive integer. Unit can be one of &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;k&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, or &lt;code&gt;g&lt;/code&gt;. Minimum is 4M.</source>
          <target state="translated">カーネルメモリの制限（形式： &lt;code&gt;&amp;lt;number&amp;gt;[&amp;lt;unit&amp;gt;]&lt;/code&gt; ）。数値は正の整数です。単位は &lt;code&gt;b&lt;/code&gt; 、 &lt;code&gt;k&lt;/code&gt; 、 &lt;code&gt;m&lt;/code&gt; 、または &lt;code&gt;g&lt;/code&gt; のいずれかです。最小は4Mです。</target>
        </trans-unit>
        <trans-unit id="dd5b7abe9db8c00fa8fa1c95d5d672464d3af952" translate="yes" xml:space="preserve">
          <source>Kernel namespaces</source>
          <target state="translated">カーネルの名前空間</target>
        </trans-unit>
        <trans-unit id="d3a71e9e90b5758667b7011f33bfcae957b7ece7" translate="yes" xml:space="preserve">
          <source>Kernel parameters to set in the container. You can use either an array or a dictionary.</source>
          <target state="translated">コンテナに設定するカーネルパラメータ。配列または辞書を使用することができます。</target>
        </trans-unit>
        <trans-unit id="74a7772cc0d951bb8363df81f7791cb7b0ec04ad" translate="yes" xml:space="preserve">
          <source>Kernel version newer than (include) 4.6 does not have this limitation, you can use &lt;code&gt;--kernel-memory&lt;/code&gt; the same way as other options.</source>
          <target state="translated">（include）4.6より新しいカーネルバージョンにはこの制限がありません。他のオプションと同じように &lt;code&gt;--kernel-memory&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="925fa1c20a0c397925a02d36b63d14186e7b48b1" translate="yes" xml:space="preserve">
          <source>Keys compromised</source>
          <target state="translated">危殆化したキー</target>
        </trans-unit>
        <trans-unit id="e2588bc14565b6087a35b3bcaa6b086fa30e602a" translate="yes" xml:space="preserve">
          <source>Keywhiz plugin</source>
          <target state="translated">Keywhizプラグイン</target>
        </trans-unit>
        <trans-unit id="8ff5564effa5413d6d90c225280c49e51e955168" translate="yes" xml:space="preserve">
          <source>Kill one or more running containers</source>
          <target state="translated">1つ以上の実行中のコンテナを削除する</target>
        </trans-unit>
        <trans-unit id="76fdcfeaa1626fed3a98b2a2a2d5045de6256995" translate="yes" xml:space="preserve">
          <source>Killing the &lt;code&gt;docker pull&lt;/code&gt; process, for example by pressing &lt;code&gt;CTRL-c&lt;/code&gt; while it is running in a terminal, will terminate the pull operation.</source>
          <target state="translated">ターミナルで実行中に &lt;code&gt;CTRL-c&lt;/code&gt; を押すなどして、 &lt;code&gt;docker pull&lt;/code&gt; プロセスを強制終了すると、プル操作が終了します。</target>
        </trans-unit>
        <trans-unit id="cadb2f192fe25020f03d4b7dcad8d86660f4eac5" translate="yes" xml:space="preserve">
          <source>Killing the &lt;code&gt;docker push&lt;/code&gt; process, for example by pressing &lt;code&gt;CTRL-c&lt;/code&gt; while it is running in a terminal, terminates the push operation.</source>
          <target state="translated">ターミナルで実行中に &lt;code&gt;CTRL-c&lt;/code&gt; を押すなどして、 &lt;code&gt;docker push&lt;/code&gt; プロセスを強制終了すると、プッシュ操作が終了します。</target>
        </trans-unit>
        <trans-unit id="f5025143a89e9b224781aa62468c0e2c91c66496" translate="yes" xml:space="preserve">
          <source>Known Issues</source>
          <target state="translated">既知の問題</target>
        </trans-unit>
        <trans-unit id="19f69d063691f8d80817a5f8e91ee85171ee0c6e" translate="yes" xml:space="preserve">
          <source>Known issues (RUN)</source>
          <target state="translated">既知の問題(RUN</target>
        </trans-unit>
        <trans-unit id="b36c6077a62ee3e8bd61bbeb730cb7130516f528" translate="yes" xml:space="preserve">
          <source>Known limitations</source>
          <target state="translated">既知の制限</target>
        </trans-unit>
        <trans-unit id="bee0cb05f850f53dc7ec012e5b12bbe98948693b" translate="yes" xml:space="preserve">
          <source>Kubernetes</source>
          <target state="translated">Kubernetes</target>
        </trans-unit>
        <trans-unit id="66fed4cbaa3577772e82ac7bc59ecf69e2406d35" translate="yes" xml:space="preserve">
          <source>Kubernetes config file</source>
          <target state="translated">Kubernetes設定ファイル</target>
        </trans-unit>
        <trans-unit id="65014fd4298be69069ae75bd59b771f0ea05a2e5" translate="yes" xml:space="preserve">
          <source>Kubernetes namespace to use</source>
          <target state="translated">使用するKubernetesの名前空間</target>
        </trans-unit>
        <trans-unit id="0e61dbda7b04b06f71cdfaf436aadb8072eabe36" translate="yes" xml:space="preserve">
          <source>Kubernetes namespaces to use</source>
          <target state="translated">使用するKubernetesの名前空間</target>
        </trans-unit>
        <trans-unit id="21c3ba932a4a7b7154ff817d82650d01e6cfe41c" translate="yes" xml:space="preserve">
          <source>Kubernetes: not supported</source>
          <target state="translated">Kubernetes:サポートされていない</target>
        </trans-unit>
        <trans-unit id="1616e14ec9d4c0a39b19aba74e1eb02899a120b9" translate="yes" xml:space="preserve">
          <source>Kubernetes: supported</source>
          <target state="translated">Kubernetes:サポートされている</target>
        </trans-unit>
        <trans-unit id="a286ef73dc47ff9f8e7d5dcede30ce66a0b6c3bf" translate="yes" xml:space="preserve">
          <source>Kuryr Network Plugin</source>
          <target state="translated">Kuryrネットワークプラグイン</target>
        </trans-unit>
        <trans-unit id="64b8a7e20b4f639e91be58a1c2dfc4878f384e11" translate="yes" xml:space="preserve">
          <source>LABEL</source>
          <target state="translated">LABEL</target>
        </trans-unit>
        <trans-unit id="41175145e3d154aa574b30244895905f6a48a28f" translate="yes" xml:space="preserve">
          <source>LCOW (Linux Containers on Windows) options</source>
          <target state="translated">LCOW (Linux Containers on Windows)オプション</target>
        </trans-unit>
        <trans-unit id="0dfc15d2da49d5f09a464bed22da71e16e24aa06" translate="yes" xml:space="preserve">
          <source>LEASE</source>
          <target state="translated">LEASE</target>
        </trans-unit>
        <trans-unit id="e0e86fad8959136b6bbd6054e4a3ca23f4104814" translate="yes" xml:space="preserve">
          <source>LINUX_IMMUTABLE</source>
          <target state="translated">LINUX_IMMUTABLE</target>
        </trans-unit>
        <trans-unit id="f65ef3c405092078ab064a6409413ad0c2b37715" translate="yes" xml:space="preserve">
          <source>LXC built-in exec driver</source>
          <target state="translated">LXC組み込みexecドライバ</target>
        </trans-unit>
        <trans-unit id="74341e3c271df3c784e595b804b1f90be0f80429" translate="yes" xml:space="preserve">
          <source>Label</source>
          <target state="translated">Label</target>
        </trans-unit>
        <trans-unit id="9f9b411205904fd15a31cac020b5f7ad86f6d927" translate="yes" xml:space="preserve">
          <source>Labeling systems like SELinux require that proper labels are placed on volume content mounted into a container. Without a label, the security system might prevent the processes running inside the container from using the content. By default, Docker does not change the labels set by the OS.</source>
          <target state="translated">SELinux のようなラベリングシステムでは、コンテナにマウントされたボリュームコンテンツに適切なラベルを貼る必要があります。ラベルがないと、セキュリティシステムがコンテナ内で実行しているプロセスがコンテンツを利用できないようにしてしまう可能性があります。デフォルトでは、DockerはOSが設定したラベルを変更しません。</target>
        </trans-unit>
        <trans-unit id="99623225883875fed762367fadcd596048d1ab39" translate="yes" xml:space="preserve">
          <source>Labels &lt;code&gt;map[string]string&lt;/code&gt;</source>
          <target state="translated">ラベル &lt;code&gt;map[string]string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38a08247f87855b3bb56e8b972ab653a02be99fe" translate="yes" xml:space="preserve">
          <source>Labels included in base or parent images (images in the &lt;code&gt;FROM&lt;/code&gt; line) are inherited by your image. If a label already exists but with a different value, the most-recently-applied value overrides any previously-set value.</source>
          <target state="translated">ベースまたは親イメージ（ &lt;code&gt;FROM&lt;/code&gt; 行のイメージ）に含まれるラベルは、イメージによって継承されます。ラベルはすでに存在しているが、値が異なる場合、最後に適用された値が以前に設定された値を上書きします。</target>
        </trans-unit>
        <trans-unit id="2139c30d12f32b7036ab09c47f34a712624e576f" translate="yes" xml:space="preserve">
          <source>Labels used for setting meta data on services.</source>
          <target state="translated">サービスのメタデータを設定する際に使用するラベルです。</target>
        </trans-unit>
        <trans-unit id="cfa2a3ccd6b50663487ded4a1e77fff64797972c" translate="yes" xml:space="preserve">
          <source>Lastly, if you need to do some extra cleanup (or communicate with other containers) on shutdown, or are co-ordinating more than one executable, you may need to ensure that the &lt;code&gt;ENTRYPOINT&lt;/code&gt; script receives the Unix signals, passes them on, and then does some more work:</source>
          <target state="translated">最後に、シャットダウン時に追加のクリーンアップを行う（または他のコンテナーと通信する）必要がある場合、または複数の実行可能ファイルを調整している場合は、 &lt;code&gt;ENTRYPOINT&lt;/code&gt; スクリプトがUnixシグナルを受信し、それらを渡してから、さらにいくつかの作業を行います：</target>
        </trans-unit>
        <trans-unit id="9592ae07ee081cbedb348d2f1fa101285248d879" translate="yes" xml:space="preserve">
          <source>Later the image may be used as a base for a new build, using the &lt;code&gt;FROM&lt;/code&gt; instruction. As part of processing the &lt;code&gt;FROM&lt;/code&gt; instruction, the downstream builder looks for &lt;code&gt;ONBUILD&lt;/code&gt; triggers, and executes them in the same order they were registered. If any of the triggers fail, the &lt;code&gt;FROM&lt;/code&gt; instruction is aborted which in turn causes the build to fail. If all triggers succeed, the &lt;code&gt;FROM&lt;/code&gt; instruction completes and the build continues as usual.</source>
          <target state="translated">その後、 &lt;code&gt;FROM&lt;/code&gt; 命令を使用して、イメージを新しいビルドのベースとして使用できます。 &lt;code&gt;FROM&lt;/code&gt; 命令の処理の一環として、ダウンストリームビルダーは &lt;code&gt;ONBUILD&lt;/code&gt; トリガーを探し、登録された順序でトリガーを実行します。いずれかのトリガーが失敗すると、 &lt;code&gt;FROM&lt;/code&gt; 命令が中止され、ビルドが失敗します。すべてのトリガーが成功すると、 &lt;code&gt;FROM&lt;/code&gt; 命令が完了し、ビルドは通常どおり続行されます。</target>
        </trans-unit>
        <trans-unit id="1e79d12bc4437cad629aa8f70d788ec07f67f160" translate="yes" xml:space="preserve">
          <source>Launch Hyper-V Manager</source>
          <target state="translated">Hyper-Vマネージャーの起動</target>
        </trans-unit>
        <trans-unit id="d4d31a66cd8f2de79c4dc403a83a20afb1a8a536" translate="yes" xml:space="preserve">
          <source>Layering &lt;code&gt;RUN&lt;/code&gt; instructions and generating commits conforms to the core concepts of Docker where commits are cheap and containers can be created from any point in an image&amp;rsquo;s history, much like source control.</source>
          <target state="translated">&lt;code&gt;RUN&lt;/code&gt; 命令の階層化とコミットの生成はDockerのコアコンセプトに準拠しており、コミットが安価で、ソース管理と同様にイメージの履歴の任意の時点からコンテナーを作成できます。</target>
        </trans-unit>
        <trans-unit id="40af804c302e7ac20b00c30bab41fc8d5c6d3e05" translate="yes" xml:space="preserve">
          <source>Layers can be reused by images. For example, the &lt;code&gt;debian:jessie&lt;/code&gt; image shares both layers with &lt;code&gt;debian:latest&lt;/code&gt;. Pulling the &lt;code&gt;debian:jessie&lt;/code&gt; image therefore only pulls its metadata, but not its layers, because all layers are already present locally:</source>
          <target state="translated">レイヤーは画像で再利用できます。たとえば、 &lt;code&gt;debian:jessie&lt;/code&gt; イメージは両方のレイヤーを &lt;code&gt;debian:latest&lt;/code&gt; と共有します。したがって、 &lt;code&gt;debian:jessie&lt;/code&gt; イメージをプルすると、そのメタデータだけがプルされますが、そのレイヤーはプルされません。これは、すべてのレイヤーがすでにローカルに存在しているためです。</target>
        </trans-unit>
        <trans-unit id="378cbbf54cbb2e3f3bd201f02c1b946ec3601eba" translate="yes" xml:space="preserve">
          <source>Learn More</source>
          <target state="translated">詳細はこちら</target>
        </trans-unit>
        <trans-unit id="4e41542d9ea87e4c7a177ef2813704427f08d1a1" translate="yes" xml:space="preserve">
          <source>Learn how &lt;a href=&quot;../pki/index&quot;&gt;PKI&lt;/a&gt; works in swarm mode.</source>
          <target state="translated">スウォームモードで&lt;a href=&quot;../pki/index&quot;&gt;PKIが&lt;/a&gt;どのように機能するかを学びます。</target>
        </trans-unit>
        <trans-unit id="c6e94171098d02849dc1715b2f6fd541dc455ec4" translate="yes" xml:space="preserve">
          <source>Learn how swarm mode &lt;a href=&quot;../services/index&quot;&gt;services&lt;/a&gt; work.</source>
          <target state="translated">スウォームモード&lt;a href=&quot;../services/index&quot;&gt;サービスの&lt;/a&gt;仕組みをご覧ください。</target>
        </trans-unit>
        <trans-unit id="380a712cc07085ce1d1329c08893a90d0996261e" translate="yes" xml:space="preserve">
          <source>Learn how to &lt;a href=&quot;../../ingress/index&quot;&gt;use a swarm mode routing mesh&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../ingress/index&quot;&gt;スウォームモードルーティングメッシュの使用&lt;/a&gt;方法を学習します。</target>
        </trans-unit>
        <trans-unit id="d3b0923eff22e50e3513a150c82331f6bb9131d1" translate="yes" xml:space="preserve">
          <source>Learn how to create containers in &lt;a href=&quot;../part2/index&quot;&gt;Part 2&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../part2/index&quot;&gt;パート2で&lt;/a&gt;コンテナを作成する方法を学びます。</target>
        </trans-unit>
        <trans-unit id="824d76b124e6289f372e2ff6bcba91e8939343bd" translate="yes" xml:space="preserve">
          <source>Learn more</source>
          <target state="translated">詳細はこちら</target>
        </trans-unit>
        <trans-unit id="9271e197be4840ef4c9395777dcb8495868583bc" translate="yes" xml:space="preserve">
          <source>Learn swarm mode &lt;a href=&quot;key-concepts/index&quot;&gt;key concepts&lt;/a&gt;.</source>
          <target state="translated">スウォームモードの&lt;a href=&quot;key-concepts/index&quot;&gt;主要な概念を&lt;/a&gt;学びます。</target>
        </trans-unit>
        <trans-unit id="220c633c19194228df884b045e77d2699be377b3" translate="yes" xml:space="preserve">
          <source>Leave the &lt;code&gt;trustsandbox&lt;/code&gt; shell and container running.</source>
          <target state="translated">まま &lt;code&gt;trustsandbox&lt;/code&gt; のシェルとコンテナを実行しました。</target>
        </trans-unit>
        <trans-unit id="d9a68ae1642d7a6e9109ef808c5c4f18c84b0f74" translate="yes" xml:space="preserve">
          <source>Leave the container running after checkpoint</source>
          <target state="translated">チェックポイント後にコンテナを起動したままにしておく</target>
        </trans-unit>
        <trans-unit id="3d7dcc5f6be64001146f2c5cf968dbdb2aeeb475" translate="yes" xml:space="preserve">
          <source>Leave the swarm</source>
          <target state="translated">群れを残す</target>
        </trans-unit>
        <trans-unit id="87424edda45e23481b54dfd85449af2235a1ff48" translate="yes" xml:space="preserve">
          <source>Leaving a swarm</source>
          <target state="translated">群れを残す</target>
        </trans-unit>
        <trans-unit id="9c9836b6ddb6fdd38539472714b585cfcc4dc19d" translate="yes" xml:space="preserve">
          <source>Legacy &amp;ldquo;overlay&amp;rdquo; storage driver</source>
          <target state="translated">従来の「オーバーレイ」ストレージドライバー</target>
        </trans-unit>
        <trans-unit id="51399109ad60688d95d8415210375d5ca4cb6dc8" translate="yes" xml:space="preserve">
          <source>Legacy Registries</source>
          <target state="translated">レガシーレジストリ</target>
        </trans-unit>
        <trans-unit id="64fb4426792c66b646f4728d069cfea000de79ab" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s deploy the stack created before:</source>
          <target state="translated">前に作成したスタックをデプロイしましょう：</target>
        </trans-unit>
        <trans-unit id="daf990bba19131f95b3a8a3c97f7ed96aa4c9e66" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s go through the same workflow once more to add a Redis database for storing app data.</source>
          <target state="translated">アプリデータを保存するためのRedisデータベースを追加するために、もう一度同じワークフローを実行してみましょう。</target>
        </trans-unit>
        <trans-unit id="fffaf2eab9d192f03c3dc3efec300e51a4170815" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say that you wanted to change the password that is used to create new keys (rotating the passphrase and re-encrypting all the private keys is not supported yet).</source>
          <target state="translated">新しい鍵の作成に使用されるパスワードを変更したいとしましょう（パスフレーズの回転とすべての秘密鍵の再暗号化はまだサポートされていません）。</target>
        </trans-unit>
        <trans-unit id="12507f3ac18e59146cb75890d9538c0c6a361957" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a look at using &lt;code&gt;docker-machine&lt;/code&gt; to create, use and manage a Docker host inside of a local virtual machine.</source>
          <target state="translated">&lt;code&gt;docker-machine&lt;/code&gt; を使用して、ローカル仮想マシン内でDockerホストを作成、使用、管理する方法を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="b59bc3ab3df4c49c882bcce76cce376a48d4a1ef" translate="yes" xml:space="preserve">
          <source>Lets you mount Microsoft &lt;a href=&quot;https://azure.microsoft.com/blog/azure-file-storage-now-generally-available/&quot;&gt;Azure File Storage&lt;/a&gt; shares to Docker containers as volumes using the SMB 3.0 protocol. &lt;a href=&quot;https://azure.microsoft.com/blog/persistent-docker-volumes-with-azure-file-storage/&quot;&gt;Learn more&lt;/a&gt;.</source>
          <target state="translated">SMB 3.0プロトコルを使用して、Microsoft &lt;a href=&quot;https://azure.microsoft.com/blog/azure-file-storage-now-generally-available/&quot;&gt;Azure File Storage&lt;/a&gt;共有をボリュームとしてDockerコンテナーにマウントできます。&lt;a href=&quot;https://azure.microsoft.com/blog/persistent-docker-volumes-with-azure-file-storage/&quot;&gt;詳細をご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="93d7f130977ce6ebd7f181fb07b97c0898afd023" translate="yes" xml:space="preserve">
          <source>License File</source>
          <target state="translated">ライセンスファイル</target>
        </trans-unit>
        <trans-unit id="ec793eb7fd1d6c9106d97e622f4fcbf89e666960" translate="yes" xml:space="preserve">
          <source>Licensed under the Apache License, Version 2.0.</source>
          <target state="translated">Apache License,Version 2.0の下でライセンスされています。</target>
        </trans-unit>
        <trans-unit id="aa636d64869928622347b0ebd93665113e78146c" translate="yes" xml:space="preserve">
          <source>Licensing</source>
          <target state="translated">Licensing</target>
        </trans-unit>
        <trans-unit id="86cbe03ed8f5fc1191085ff37b666f9ae0b75a94" translate="yes" xml:space="preserve">
          <source>Lightweight: Containers leverage and share the host kernel.</source>
          <target state="translated">軽量。コンテナはホストカーネルを活用し、共有します。</target>
        </trans-unit>
        <trans-unit id="1383eb4efa3f583724f88dc9bd12826b03000da7" translate="yes" xml:space="preserve">
          <source>Limit CPU CFS (Completely Fair Scheduler) period</source>
          <target state="translated">リミット CPU CFS(完全公平スケジューラ)期間</target>
        </trans-unit>
        <trans-unit id="b33e601bc58589387c3dbc9da0d76e26087fd087" translate="yes" xml:space="preserve">
          <source>Limit CPU CFS (Completely Fair Scheduler) quota</source>
          <target state="translated">CPUのCFS(Completely Fair Scheduler)のクォータを制限する</target>
        </trans-unit>
        <trans-unit id="6de6dc3214b3fa418e299b4879681e6c87e13599" translate="yes" xml:space="preserve">
          <source>Limit CPU real-time period in microseconds</source>
          <target state="translated">CPUのリアルタイム期間をマイクロ秒単位で制限</target>
        </trans-unit>
        <trans-unit id="74f741ec63541d7093613fcdcf44ef4f7cdc8f83" translate="yes" xml:space="preserve">
          <source>Limit CPU real-time runtime in microseconds</source>
          <target state="translated">CPUのリアルタイムランタイムをマイクロ秒単位で制限</target>
        </trans-unit>
        <trans-unit id="769da0a9c9458ee4156693ee512f398df99b8d0a" translate="yes" xml:space="preserve">
          <source>Limit CPUs</source>
          <target state="translated">CPUを制限する</target>
        </trans-unit>
        <trans-unit id="57b4e0799cf80d8e0a1aff695d78244b22335674" translate="yes" xml:space="preserve">
          <source>Limit Memory</source>
          <target state="translated">メモリを制限する</target>
        </trans-unit>
        <trans-unit id="e18f047404cb128f8ca7d270e5bd4b1c6d3eb0c1" translate="yes" xml:space="preserve">
          <source>Limit events by time</source>
          <target state="translated">時間でイベントを制限する</target>
        </trans-unit>
        <trans-unit id="6be2f00f997ceda220d941077334fed7e0828e56" translate="yes" xml:space="preserve">
          <source>Limit read rate (IO per second) from a device</source>
          <target state="translated">デバイスからの読み取り速度(IO/秒)の制限</target>
        </trans-unit>
        <trans-unit id="553bf251d4b114ecb451bd8bcb986ef78813c8d7" translate="yes" xml:space="preserve">
          <source>Limit read rate (IO per second) from a device (format: &lt;code&gt;&amp;lt;device-path&amp;gt;:&amp;lt;number&amp;gt;&lt;/code&gt;). Number is a positive integer.</source>
          <target state="translated">デバイスからの読み取り速度（1秒あたりのIO）を制限します（形式： &lt;code&gt;&amp;lt;device-path&amp;gt;:&amp;lt;number&amp;gt;&lt;/code&gt; ）。数値は正の整数です。</target>
        </trans-unit>
        <trans-unit id="ab472f2529b3fe483d50c5da3bec8b8fb2eded49" translate="yes" xml:space="preserve">
          <source>Limit read rate (bytes per second) from a device</source>
          <target state="translated">デバイスからの読み取り速度(毎秒バイト)を制限する</target>
        </trans-unit>
        <trans-unit id="2ec23a8fca1fdcadc79858eb146cca4ec57a1c95" translate="yes" xml:space="preserve">
          <source>Limit read rate from a device (format: &lt;code&gt;&amp;lt;device-path&amp;gt;:&amp;lt;number&amp;gt;[&amp;lt;unit&amp;gt;]&lt;/code&gt;). Number is a positive integer. Unit can be one of &lt;code&gt;kb&lt;/code&gt;, &lt;code&gt;mb&lt;/code&gt;, or &lt;code&gt;gb&lt;/code&gt;.</source>
          <target state="translated">デバイスからの読み取り速度を制限します（形式： &lt;code&gt;&amp;lt;device-path&amp;gt;:&amp;lt;number&amp;gt;[&amp;lt;unit&amp;gt;]&lt;/code&gt; ）。数値は正の整数です。単位は &lt;code&gt;kb&lt;/code&gt; 、 &lt;code&gt;mb&lt;/code&gt; 、または &lt;code&gt;gb&lt;/code&gt; のいずれかです。</target>
        </trans-unit>
        <trans-unit id="3e639f8c2a895f6f0cd4f52182a42df91e25f695" translate="yes" xml:space="preserve">
          <source>Limit search results (--limit)</source>
          <target state="translated">検索結果を制限する (--limit)</target>
        </trans-unit>
        <trans-unit id="f7735eed83cdd958730bb0f11474166ad0d18c4b" translate="yes" xml:space="preserve">
          <source>Limit the CPU CFS (Completely Fair Scheduler) period</source>
          <target state="translated">CPUのCFS(Completely Fair Scheduler)期間を制限する</target>
        </trans-unit>
        <trans-unit id="6f5ce2bff20a198205464e3774aa7560355d636c" translate="yes" xml:space="preserve">
          <source>Limit the CPU CFS (Completely Fair Scheduler) quota</source>
          <target state="translated">CPUのCFS(Completely Fair Scheduler)のクォータを制限する</target>
        </trans-unit>
        <trans-unit id="789e84b9433da0dd7efba6cf7f6a1c73fc7e4403" translate="yes" xml:space="preserve">
          <source>Limit the CPU real-time period in microseconds</source>
          <target state="translated">CPUのリアルタイム期間をマイクロ秒単位で制限する</target>
        </trans-unit>
        <trans-unit id="c0c4b39e9c7f6b874afde7463ca6c8f25970d13c" translate="yes" xml:space="preserve">
          <source>Limit the CPU real-time period. In microseconds. Requires parent cgroups be set and cannot be higher than parent. Also check rtprio ulimits.</source>
          <target state="translated">CPUのリアルタイム期間を制限します。単位はマイクロ秒。親の cgroups が設定されている必要があり、親より高くすることはできません。rtprio ulimitsも確認してください。</target>
        </trans-unit>
        <trans-unit id="333468a78a2d552c701e18343fe458c15f9906e9" translate="yes" xml:space="preserve">
          <source>Limit the CPU real-time runtime in microseconds</source>
          <target state="translated">CPUのリアルタイムランタイムをマイクロ秒単位で制限する</target>
        </trans-unit>
        <trans-unit id="3cdd3b8a6d509b820e98d743c0e5bb6bf5c010eb" translate="yes" xml:space="preserve">
          <source>Limit the CPU real-time runtime. In microseconds. Requires parent cgroups be set and cannot be higher than parent. Also check rtprio ulimits.</source>
          <target state="translated">CPUのリアルタイムランタイムを制限します。単位はマイクロ秒。親の cgroups が設定されている必要があり、親より高くすることはできません。rtprio ulimitsも確認してください。</target>
        </trans-unit>
        <trans-unit id="7f2bcc046711665c85da86062a74532aa7a1dc43" translate="yes" xml:space="preserve">
          <source>Limit write rate (IO per second) to a device</source>
          <target state="translated">デバイスへの書き込み速度(IO/秒)の制限</target>
        </trans-unit>
        <trans-unit id="c9922ee4978e4049ddd400ba67d96efff2171950" translate="yes" xml:space="preserve">
          <source>Limit write rate (IO per second) to a device (format: &lt;code&gt;&amp;lt;device-path&amp;gt;:&amp;lt;number&amp;gt;&lt;/code&gt;). Number is a positive integer.</source>
          <target state="translated">デバイスへの書き込み速度（1秒あたりのIO）を制限します（形式： &lt;code&gt;&amp;lt;device-path&amp;gt;:&amp;lt;number&amp;gt;&lt;/code&gt; ）。数値は正の整数です。</target>
        </trans-unit>
        <trans-unit id="4992dc5d324dac7ebda270b77aca5bc6e30bfdd9" translate="yes" xml:space="preserve">
          <source>Limit write rate (bytes per second) to a device</source>
          <target state="translated">デバイスへの書き込み速度(バイト/秒)の制限</target>
        </trans-unit>
        <trans-unit id="be0fd00e311ad24cbd1bbb3e6eed4f4f57e26ab3" translate="yes" xml:space="preserve">
          <source>Limit write rate to a device (format: &lt;code&gt;&amp;lt;device-path&amp;gt;:&amp;lt;number&amp;gt;[&amp;lt;unit&amp;gt;]&lt;/code&gt;). Number is a positive integer. Unit can be one of &lt;code&gt;kb&lt;/code&gt;, &lt;code&gt;mb&lt;/code&gt;, or &lt;code&gt;gb&lt;/code&gt;.</source>
          <target state="translated">デバイスへの書き込み速度を制限します（形式： &lt;code&gt;&amp;lt;device-path&amp;gt;:&amp;lt;number&amp;gt;[&amp;lt;unit&amp;gt;]&lt;/code&gt; ）。数値は正の整数です。単位は &lt;code&gt;kb&lt;/code&gt; 、 &lt;code&gt;mb&lt;/code&gt; 、または &lt;code&gt;gb&lt;/code&gt; のいずれかです。</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="b7596ff1238f8df765b40659c83776be05373a56" translate="yes" xml:space="preserve">
          <source>Limiting, filtering, and formatting the output</source>
          <target state="translated">出力の制限、フィルタリング、フォーマット</target>
        </trans-unit>
        <trans-unit id="ec7b9415694864df137a4389f991b6c947560195" translate="yes" xml:space="preserve">
          <source>Line 3 does not cause a cache miss because the value of &lt;code&gt;CONT_IMG_VER&lt;/code&gt; is a constant (&lt;code&gt;hello&lt;/code&gt;). As a result, the environment variables and values used on the &lt;code&gt;RUN&lt;/code&gt; (line 4) doesn&amp;rsquo;t change between builds.</source>
          <target state="translated">&lt;code&gt;CONT_IMG_VER&lt;/code&gt; の値は定数（ &lt;code&gt;hello&lt;/code&gt; ）であるため、行3ではキャッシュミスは発生しません。その結果、 &lt;code&gt;RUN&lt;/code&gt; （4行目）で使用される環境変数と値は、ビルド間で変更されません。</target>
        </trans-unit>
        <trans-unit id="1869e6febd7924369fbc139ed2fcfc1594840b74" translate="yes" xml:space="preserve">
          <source>Line continuation characters are not supported in comments.</source>
          <target state="translated">コメントでは改行文字はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="efc0cb77f949404327a42f6983fafeef43add97b" translate="yes" xml:space="preserve">
          <source>Lines beginning with &lt;code&gt;#&lt;/code&gt; are processed as comments and ignored.</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt; で始まる行はコメントとして処理され、無視されます。</target>
        </trans-unit>
        <trans-unit id="29cc00769343477bee1b880ba16556a50636e224" translate="yes" xml:space="preserve">
          <source>Lines starting with &lt;code&gt;!&lt;/code&gt; (exclamation mark) can be used to make exceptions to exclusions. The following is an example &lt;code&gt;.dockerignore&lt;/code&gt; file that uses this mechanism:</source>
          <target state="translated">&lt;code&gt;!&lt;/code&gt; で始まる行 （感嘆符）を使用して、除外の例外を作成できます。以下は、このメカニズムを使用する &lt;code&gt;.dockerignore&lt;/code&gt; ファイルの例です。</target>
        </trans-unit>
        <trans-unit id="f97ee74e79e216e226115d1e59d8fc209a21cfb8" translate="yes" xml:space="preserve">
          <source>Link Debian-based containers to the APT proxy container using &lt;code&gt;--link&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--link&lt;/code&gt; を使用してDebianベースのコンテナーをAPTプロキシコンテナーにリンクする</target>
        </trans-unit>
        <trans-unit id="c7876b7880f64e23aa3336be2b53e9265816b2df" translate="yes" xml:space="preserve">
          <source>Link environment variables (superseded)</source>
          <target state="translated">環境変数をリンクします。</target>
        </trans-unit>
        <trans-unit id="87c10d61d3bef8e681d492689759c80c1cee9a11" translate="yes" xml:space="preserve">
          <source>Link to containers in another service. Either specify both the service name and a link alias (&lt;code&gt;&quot;SERVICE:ALIAS&quot;&lt;/code&gt;), or just the service name.</source>
          <target state="translated">別のサービスのコンテナにリンクします。サービス名とリンクエイリアス（ &lt;code&gt;&quot;SERVICE:ALIAS&quot;&lt;/code&gt; ）の両方を指定するか、サービス名のみを指定します。</target>
        </trans-unit>
        <trans-unit id="86aafc1b11e524eb5c4c12b1e9e277b5545e080d" translate="yes" xml:space="preserve">
          <source>Link to containers in another service. Either specify both the service name and a link alias (&lt;code&gt;SERVICE:ALIAS&lt;/code&gt;), or just the service name.</source>
          <target state="translated">別のサービスのコンテナにリンクします。サービス名とリンクエイリアス（ &lt;code&gt;SERVICE:ALIAS&lt;/code&gt; ）の両方を指定するか、サービス名のみを指定します。</target>
        </trans-unit>
        <trans-unit id="484518142f5b4da66527db2b3b38add0a6d45502" translate="yes" xml:space="preserve">
          <source>Link to containers started outside this &lt;code&gt;docker-compose.yml&lt;/code&gt; or even outside of Compose, especially for containers that provide shared or common services. &lt;code&gt;external_links&lt;/code&gt; follow semantics similar to &lt;code&gt;links&lt;/code&gt; when specifying both the container name and the link alias (&lt;code&gt;CONTAINER:ALIAS&lt;/code&gt;).</source>
          <target state="translated">この &lt;code&gt;docker-compose.yml&lt;/code&gt; の外部、またはComposeの外部で開始されたコンテナーへのリンク。特に、共有サービスまたは共通サービスを提供するコンテナーの場合。コンテナ名とリンクエイリアス（ &lt;code&gt;CONTAINER:ALIAS&lt;/code&gt; ）の両方を指定する場合、 &lt;code&gt;external_links&lt;/code&gt; は &lt;code&gt;links&lt;/code&gt; と同様のセマンティクスに従います。</target>
        </trans-unit>
        <trans-unit id="a8397ad390f68b47916c39e529c9d869134015d2" translate="yes" xml:space="preserve">
          <source>Link to containers started outside this &lt;code&gt;docker-compose.yml&lt;/code&gt; or even outside of Compose, especially for containers that provide shared or common services. &lt;code&gt;external_links&lt;/code&gt; follow semantics similar to the legacy option &lt;code&gt;links&lt;/code&gt; when specifying both the container name and the link alias (&lt;code&gt;CONTAINER:ALIAS&lt;/code&gt;).</source>
          <target state="translated">この &lt;code&gt;docker-compose.yml&lt;/code&gt; の外部、またはComposeの外部で開始されたコンテナーへのリンク。特に、共有サービスまたは共通サービスを提供するコンテナーの場合。コンテナ名とリンクエイリアス（ &lt;code&gt;CONTAINER:ALIAS&lt;/code&gt; ）の両方を指定する場合、 &lt;code&gt;external_links&lt;/code&gt; は従来のオプション &lt;code&gt;links&lt;/code&gt; と同様のセマンティクスに従います。</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="e6e881f97b609f76613c3d1f4f3704e894e9286f" translate="yes" xml:space="preserve">
          <source>Links allow you to define extra aliases by which a service is reachable from another service. They are not required to enable services to communicate - by default, any service can reach any other service at that service&amp;rsquo;s name. In the following example, &lt;code&gt;db&lt;/code&gt; is reachable from &lt;code&gt;web&lt;/code&gt; at the hostnames &lt;code&gt;db&lt;/code&gt; and &lt;code&gt;database&lt;/code&gt;:</source>
          <target state="translated">リンクを使用すると、別のサービスからサービスに到達できるようにする追加のエイリアスを定義できます。サービスが通信できるようにする必要はありません。デフォルトでは、どのサービスもそのサービス名で他のサービスに到達できます。次の例では、ホスト名 &lt;code&gt;db&lt;/code&gt; および &lt;code&gt;database&lt;/code&gt; で &lt;code&gt;web&lt;/code&gt; から &lt;code&gt;db&lt;/code&gt; に到達できます。</target>
        </trans-unit>
        <trans-unit id="2bac2f325f8b4cde931825a71eecf1b69f144f9c" translate="yes" xml:space="preserve">
          <source>Links also express dependency between services in the same way as &lt;a href=&quot;#depends_on&quot;&gt;depends_on&lt;/a&gt;, so they determine the order of service startup.</source>
          <target state="translated">リンクは、&lt;a href=&quot;#depends_on&quot;&gt;depends_on&lt;/a&gt;と同じ方法でサービス間の依存関係も表現するため、サービスの起動順序を決定します。</target>
        </trans-unit>
        <trans-unit id="60dbf3750c69e99f351f3bdeed18d7b9e4206360" translate="yes" xml:space="preserve">
          <source>Links are a legacy option. We recommend using &lt;a href=&quot;#networks&quot;&gt;networks&lt;/a&gt; instead.</source>
          <target state="translated">リンクは従来のオプションです。代わりに&lt;a href=&quot;#networks&quot;&gt;ネットワーク&lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5e25946ba1640260fbe1b909c4ceb3bf1af1a235" translate="yes" xml:space="preserve">
          <source>Links are not required to enable services to communicate - by default, any service can reach any other service at that service&amp;rsquo;s name. (See also, the &lt;a href=&quot;../networking/index#links&quot;&gt;Links topic in Networking in Compose&lt;/a&gt;.)</source>
          <target state="translated">サービスが通信できるようにするためにリンクは必要ありません。デフォルトでは、どのサービスもそのサービスの名前で他のサービスに到達できます。（「&lt;a href=&quot;../networking/index#links&quot;&gt;Composeのネットワーキング」の&lt;/a&gt;「リンク」トピックも参照してください。）</target>
        </trans-unit>
        <trans-unit id="d82d60ec9a24b5a6f0524c417588ca2580c02065" translate="yes" xml:space="preserve">
          <source>Linode</source>
          <target state="translated">Linode</target>
        </trans-unit>
        <trans-unit id="a2027041fe4263007b370f971253b31310333a1d" translate="yes" xml:space="preserve">
          <source>Linode user accounts (separated by commas) whose Linode SSH keys will be permitted root access to the created node</source>
          <target state="translated">LinodeのSSH鍵が作成されたノードへのルートアクセスを許可するLinodeユーザアカウント(コンマで区切られています)</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="2c07cfa1b4b3e69a24753c2168f87812146bd633" translate="yes" xml:space="preserve">
          <source>Linux CentOS 7.3 64-bit</source>
          <target state="translated">Linux CentOS 7.3 64ビット</target>
        </trans-unit>
        <trans-unit id="ce13955787a40983390a0ee68bae105a8a5d72ad" translate="yes" xml:space="preserve">
          <source>Linux CoreOS stable 1298 64-bit</source>
          <target state="translated">安定したLinux CoreOS 1298 64ビット</target>
        </trans-unit>
        <trans-unit id="9b7d6fcf1d2cc3e82b0e1cca9f3aa07282debce0" translate="yes" xml:space="preserve">
          <source>Linux Debian 8 64-bit</source>
          <target state="translated">Linux Debian 8 64-bit</target>
        </trans-unit>
        <trans-unit id="205a061e02ef72db64928de7ffe13d452aa2af97" translate="yes" xml:space="preserve">
          <source>Linux Ubuntu 16.04 LTS 64-bit</source>
          <target state="translated">Linux Ubuntu 16.04 LTS 64ビット</target>
        </trans-unit>
        <trans-unit id="8819772a62a544825201c3e9b1135c6d8be1ba45" translate="yes" xml:space="preserve">
          <source>Linux kernel capabilities</source>
          <target state="translated">Linux カーネルの機能</target>
        </trans-unit>
        <trans-unit id="790f67048303a5620d45b68634aff9bc07eaadeb" translate="yes" xml:space="preserve">
          <source>Linux namespaces provide isolation for running processes, limiting their access to system resources without the running process being aware of the limitations. For more information on Linux namespaces, see &lt;a href=&quot;https://www.linux.com/news/understanding-and-securing-linux-namespaces&quot;&gt;Linux namespaces&lt;/a&gt;.</source>
          <target state="translated">Linux名前空間は、実行中のプロセスを分離し、実行中のプロセスが制限を認識せずにシステムリソースへのアクセスを制限します。Linuxの名前空間の詳細については、以下を参照してください&lt;a href=&quot;https://www.linux.com/news/understanding-and-securing-linux-namespaces&quot;&gt;Linuxの名前空間を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2838af98b4b6c7ef3d6b872be1a873b7dd4b936e" translate="yes" xml:space="preserve">
          <source>List all networks</source>
          <target state="translated">すべてのネットワークをリストアップ</target>
        </trans-unit>
        <trans-unit id="40bb7b841c189c1207e8ca5a4b263d8cf1a8e6e5" translate="yes" xml:space="preserve">
          <source>List all port bindings</source>
          <target state="translated">すべてのポートバインディングをリストアップ</target>
        </trans-unit>
        <trans-unit id="d7235aa41cf1aec9166f78f0cd48819d4765c04a" translate="yes" xml:space="preserve">
          <source>List all the volumes known to Docker. You can filter using the &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--filter&lt;/code&gt; flag. Refer to the &lt;a href=&quot;#filtering&quot;&gt;filtering&lt;/a&gt; section for more information about available filter options.</source>
          <target state="translated">Dockerが認識しているすべてのボリュームをリストします。 &lt;code&gt;-f&lt;/code&gt; または &lt;code&gt;--filter&lt;/code&gt; フラグを使用してフィルタリングできます。使用可能なフィルターオプションの詳細については、&lt;a href=&quot;#filtering&quot;&gt;フィルターの&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="2b88e5db4cc0338756f238d5480460e09b34ea18" translate="yes" xml:space="preserve">
          <source>List available machines again to see your newly minted machine.</source>
          <target state="translated">使用可能なマシンを再度リストアップして、新たに鋳造したマシンを確認してください。</target>
        </trans-unit>
        <trans-unit id="0c327c1b3a27207a9fe6629ef11d8639e3b7035c" translate="yes" xml:space="preserve">
          <source>List checkpoints for a container</source>
          <target state="translated">コンテナのチェックポイントをリストアップ</target>
        </trans-unit>
        <trans-unit id="bc5328c6d7d8da3449569ae103330d4a4e02fbe3" translate="yes" xml:space="preserve">
          <source>List configs</source>
          <target state="translated">リスト設定</target>
        </trans-unit>
        <trans-unit id="8bb351fa7e3312da5f08749108a54beb36655c4b" translate="yes" xml:space="preserve">
          <source>List containers</source>
          <target state="translated">コンテナ一覧</target>
        </trans-unit>
        <trans-unit id="8f182980ede90ca9f275b5a71f57b1328cb327f8" translate="yes" xml:space="preserve">
          <source>List contexts</source>
          <target state="translated">リストコンテキスト</target>
        </trans-unit>
        <trans-unit id="cd8f09bb1dceadc8d9f11cb8667293c21c93ed20" translate="yes" xml:space="preserve">
          <source>List image digests</source>
          <target state="translated">画像ダイジェスト一覧</target>
        </trans-unit>
        <trans-unit id="b13c516aafeacc00d699cb2fcc4d66cb26ecb511" translate="yes" xml:space="preserve">
          <source>List images</source>
          <target state="translated">画像一覧</target>
        </trans-unit>
        <trans-unit id="76ea469447b4d9367aeb1fbd5d565cfe880f3d00" translate="yes" xml:space="preserve">
          <source>List images by name and tag</source>
          <target state="translated">名前とタグで画像を一覧表示</target>
        </trans-unit>
        <trans-unit id="c9b6d4e65a8f908773085e3302723c630af3d103" translate="yes" xml:space="preserve">
          <source>List images used by the created containers.</source>
          <target state="translated">作成されたコンテナで使用される画像を一覧表示します。</target>
        </trans-unit>
        <trans-unit id="0706e32189e936258f5f8e476e1b9500917d3508" translate="yes" xml:space="preserve">
          <source>List networks</source>
          <target state="translated">ネットワーク一覧</target>
        </trans-unit>
        <trans-unit id="78cc321a062d536414c2c53089104b56cd6786b2" translate="yes" xml:space="preserve">
          <source>List nodes</source>
          <target state="translated">ノードのリスト</target>
        </trans-unit>
        <trans-unit id="18b6660178827d0f5c4205a62a705cb782317996" translate="yes" xml:space="preserve">
          <source>List nodes in the swarm</source>
          <target state="translated">スウォーム内のノードをリストアップ</target>
        </trans-unit>
        <trans-unit id="caa02be720da1273161fa778f2f5f67326ae56f1" translate="yes" xml:space="preserve">
          <source>List of custom DNS options to be added to the container&amp;rsquo;s &lt;code&gt;resolv.conf&lt;/code&gt; file.</source>
          <target state="translated">コンテナの &lt;code&gt;resolv.conf&lt;/code&gt; ファイルに追加されるカスタムDNSオプションのリスト。</target>
        </trans-unit>
        <trans-unit id="03ea6b50907f36932282d0cc70f3288755fe45a2" translate="yes" xml:space="preserve">
          <source>List of device mappings. Uses the same format as the &lt;code&gt;--device&lt;/code&gt; docker client create option.</source>
          <target state="translated">デバイスマッピングのリスト。 &lt;code&gt;--device&lt;/code&gt; docker client createオプションと同じ形式を使用します。</target>
        </trans-unit>
        <trans-unit id="b51e700970226505ea301d54671633f68040d0e3" translate="yes" xml:space="preserve">
          <source>List plugins</source>
          <target state="translated">プラグイン一覧</target>
        </trans-unit>
        <trans-unit id="b3b2bef9ac5bcb664439b922e710bcdf18fab96c" translate="yes" xml:space="preserve">
          <source>List port mappings or a specific mapping for the container</source>
          <target state="translated">ポートマッピングまたはコンテナの特定のマッピングを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="68d19609739791f5315f90167b560940cf03d6fe" translate="yes" xml:space="preserve">
          <source>List running containers.</source>
          <target state="translated">実行中のコンテナをリストアップします。</target>
        </trans-unit>
        <trans-unit id="1fcd8854f78e944ea272742ba13ccc8c1045f3df" translate="yes" xml:space="preserve">
          <source>List secrets</source>
          <target state="translated">秘密をリストアップ</target>
        </trans-unit>
        <trans-unit id="d4ecef6101d8ecc6539c9e100e748e7cdcf80083" translate="yes" xml:space="preserve">
          <source>List services</source>
          <target state="translated">サービス一覧</target>
        </trans-unit>
        <trans-unit id="6e806dc602a149f409f1097b774f91e9089331cc" translate="yes" xml:space="preserve">
          <source>List stacks</source>
          <target state="translated">リストスタック</target>
        </trans-unit>
        <trans-unit id="430adfa4648aa8c61169a2b40d5a716d7724de51" translate="yes" xml:space="preserve">
          <source>List stacks from all Kubernetes namespaces</source>
          <target state="translated">すべてのKubernetesネームスペースからスタックをリストアップする</target>
        </trans-unit>
        <trans-unit id="865dfd4c6b218f100164d373140c6fac4f71cbd6" translate="yes" xml:space="preserve">
          <source>List tasks running on one or more nodes, defaults to current node</source>
          <target state="translated">1つ以上のノードで実行中のタスクをリストアップ、デフォルトは現在のノード</target>
        </trans-unit>
        <trans-unit id="49770902aa6d3bc2df13ff4849470290e3e98c86" translate="yes" xml:space="preserve">
          <source>List the &lt;code&gt;hello-world&lt;/code&gt; container (spawned by the image) which exits after displaying its message. If it were still running, you would not need the &lt;code&gt;--all&lt;/code&gt; option:</source>
          <target state="translated">メッセージを表示した後に終了する &lt;code&gt;hello-world&lt;/code&gt; コンテナ（画像で生成）を一覧表示します。それがまだ実行されている場合は、-- &lt;code&gt;--all&lt;/code&gt; オプションは必要ありません。</target>
        </trans-unit>
        <trans-unit id="3f37c164e1544d1e37b3454c4556f9a77f4ef9c2" translate="yes" xml:space="preserve">
          <source>List the &lt;code&gt;hello-world&lt;/code&gt; image that was downloaded to your machine:</source>
          <target state="translated">マシンにダウンロードされた &lt;code&gt;hello-world&lt;/code&gt; イメージを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="5005f9952c8b357c438ed994f317e744101a15e2" translate="yes" xml:space="preserve">
          <source>List the &lt;code&gt;trusttest&lt;/code&gt; image.</source>
          <target state="translated">&lt;code&gt;trusttest&lt;/code&gt; イメージをリストします。</target>
        </trans-unit>
        <trans-unit id="ce59177e14fc321242b1018a9e43372b4a3e4af5" translate="yes" xml:space="preserve">
          <source>List the VMs and get their IP addresses</source>
          <target state="translated">VMをリストアップしてIPアドレスを取得</target>
        </trans-unit>
        <trans-unit id="e72a8b848ca6ce5991b107c22c169938afc0bbca" translate="yes" xml:space="preserve">
          <source>List the changed files and directories in a container᾿s filesystem since the container was created. Three different types of change are tracked:</source>
          <target state="translated">コンテナが作成されてから変更されたファイルとディレクトリを一覧表示します。3つの異なるタイプの変更が追跡されます。</target>
        </trans-unit>
        <trans-unit id="5e47629788ef59615965e0ab987a91779695ed47" translate="yes" xml:space="preserve">
          <source>List the configs:</source>
          <target state="translated">コンフィグを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="16593cd5ca907c12a252dc93b8399209897a9a69" translate="yes" xml:space="preserve">
          <source>List the files.</source>
          <target state="translated">ファイルをリストアップします。</target>
        </trans-unit>
        <trans-unit id="0fc38bb955af9d847c19ab762e511c4de3c6ebb1" translate="yes" xml:space="preserve">
          <source>List the full length image IDs</source>
          <target state="translated">フルレングスの画像IDを一覧表示</target>
        </trans-unit>
        <trans-unit id="9d374f51f68ed10c1f49c201a021c5b5138f0004" translate="yes" xml:space="preserve">
          <source>List the layers for the &lt;code&gt;test/trusttest&lt;/code&gt; image you pushed:</source>
          <target state="translated">プッシュした &lt;code&gt;test/trusttest&lt;/code&gt; イメージのレイヤーを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="c47769ec83bd93b7233a0682e68411ace67b89ed" translate="yes" xml:space="preserve">
          <source>List the most recently created images</source>
          <target state="translated">最近作成した画像を一覧表示</target>
        </trans-unit>
        <trans-unit id="6629910125e27ed0dc2d17b4f02616921d96d6ac" translate="yes" xml:space="preserve">
          <source>List the secrets managed by Docker using &lt;code&gt;docker secret ls&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;docker secret ls&lt;/code&gt; を使用して、Dockerが管理するシークレットを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="746760a443c880cdc253b25543feb939d6ae57b9" translate="yes" xml:space="preserve">
          <source>List the services in the stack</source>
          <target state="translated">スタック内のサービスを一覧表示する</target>
        </trans-unit>
        <trans-unit id="e1b7ee72f6984f5d1b685b067f7177553fcadf2e" translate="yes" xml:space="preserve">
          <source>List the tasks in the stack</source>
          <target state="translated">スタック内のタスクを一覧表示する</target>
        </trans-unit>
        <trans-unit id="5262554c47a5fb2aa6e20f0a1a505f1f0da376a9" translate="yes" xml:space="preserve">
          <source>List the tasks of one or more services</source>
          <target state="translated">1つ以上のサービスのタスクをリストアップする</target>
        </trans-unit>
        <trans-unit id="d64607aec9402008dd36f9a57a795a2a3e0384bd" translate="yes" xml:space="preserve">
          <source>List the tasks that are part of a service</source>
          <target state="translated">サービスの一部であるタスクをリストアップする</target>
        </trans-unit>
        <trans-unit id="e8a311051da06229cd61412dc166e82eb44aced8" translate="yes" xml:space="preserve">
          <source>List the tasks that are part of a stack</source>
          <target state="translated">スタックの一部であるタスクをリストアップする</target>
        </trans-unit>
        <trans-unit id="2746c081f46f43691a571d7371c32add210c7124" translate="yes" xml:space="preserve">
          <source>List volumes</source>
          <target state="translated">ボリューム一覧</target>
        </trans-unit>
        <trans-unit id="662c6fa833e13fe960bde5ee21766869d06308c1" translate="yes" xml:space="preserve">
          <source>Listen address (format: &amp;lt;ip|interface&amp;gt;[:port])</source>
          <target state="translated">リスンアドレス（形式：&amp;lt;ip |インターフェース&amp;gt; [：ポート]）</target>
        </trans-unit>
        <trans-unit id="07cc28daecd8326008e3448372e96c703d00095b" translate="yes" xml:space="preserve">
          <source>Listing images at this point should return &lt;code&gt;redis&lt;/code&gt; and &lt;code&gt;web&lt;/code&gt;.</source>
          <target state="translated">この時点で画像をリストすると、 &lt;code&gt;redis&lt;/code&gt; と &lt;code&gt;web&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="58971a4ba23dd0cf3b8f451a2d9faaae3bda607b" translate="yes" xml:space="preserve">
          <source>Lists all machines and their status.</source>
          <target state="translated">すべてのマシンとその状態を一覧表示します。</target>
        </trans-unit>
        <trans-unit id="4f60cd7bd99f8aa7412a08e0648e5e447a283cd3" translate="yes" xml:space="preserve">
          <source>Lists all the networks the Engine &lt;code&gt;daemon&lt;/code&gt; knows about. This includes the networks that span across multiple hosts in a cluster.</source>
          <target state="translated">Engine &lt;code&gt;daemon&lt;/code&gt; 認識しているすべてのネットワークを一覧表示します。これには、クラスター内の複数のホストにまたがるネットワークが含まれます。</target>
        </trans-unit>
        <trans-unit id="a5bdec6ccc84c4909ad8a8bbf17aef9101d65e48" translate="yes" xml:space="preserve">
          <source>Lists all the nodes that the Docker Swarm manager knows about. You can filter using the &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--filter&lt;/code&gt; flag. Refer to the &lt;a href=&quot;#filtering&quot;&gt;filtering&lt;/a&gt; section for more information about available filter options.</source>
          <target state="translated">Docker Swarmマネージャーが認識しているすべてのノードをリストします。 &lt;code&gt;-f&lt;/code&gt; または &lt;code&gt;--filter&lt;/code&gt; フラグを使用してフィルタリングできます。使用可能なフィルターオプションの詳細については、&lt;a href=&quot;#filtering&quot;&gt;フィルターの&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="2cf1410f712c10b4e82b71c18d0172c27bc29782" translate="yes" xml:space="preserve">
          <source>Lists all the plugins that are currently installed. You can install plugins using the &lt;a href=&quot;../plugin_install/index&quot;&gt;&lt;code&gt;docker plugin install&lt;/code&gt;&lt;/a&gt; command. You can also filter using the &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--filter&lt;/code&gt; flag. Refer to the &lt;a href=&quot;#filtering&quot;&gt;filtering&lt;/a&gt; section for more information about available filter options.</source>
          <target state="translated">現在インストールされているすべてのプラグインを一覧表示します。&lt;a href=&quot;../plugin_install/index&quot;&gt; &lt;code&gt;docker plugin install&lt;/code&gt; &lt;/a&gt;コマンドを使用してプラグインをインストールできます。 &lt;code&gt;-f&lt;/code&gt; または &lt;code&gt;--filter&lt;/code&gt; フラグを使用してフィルタリングすることもできます。使用可能なフィルターオプションの詳細については、&lt;a href=&quot;#filtering&quot;&gt;フィルターの&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="e893a1516daf55a8e6ffc8e75fb75168abdb2cca" translate="yes" xml:space="preserve">
          <source>Lists all the tasks on a Node that Docker knows about. You can filter using the &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--filter&lt;/code&gt; flag. Refer to the &lt;a href=&quot;#filtering&quot;&gt;filtering&lt;/a&gt; section for more information about available filter options.</source>
          <target state="translated">Dockerが認識しているノード上のすべてのタスクを一覧表示します。 &lt;code&gt;-f&lt;/code&gt; または &lt;code&gt;--filter&lt;/code&gt; フラグを使用してフィルタリングできます。使用可能なフィルターオプションの詳細については、&lt;a href=&quot;#filtering&quot;&gt;フィルターの&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="a76d0cc8a8f211bf884194672828fcff07859e2e" translate="yes" xml:space="preserve">
          <source>Lists containers.</source>
          <target state="translated">コンテナを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="ce43d09e478cac45d874a48b4d6533cdaa8fd60c" translate="yes" xml:space="preserve">
          <source>Lists the services that are running as part of the specified stack. This command has to be run targeting a manager node.</source>
          <target state="translated">指定されたスタックの一部として実行されているサービスを一覧表示します。このコマンドは、マネージャノードをターゲットにして実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="b30da6ba44aca1fb97e64aaf80cbdb1ec3381042" translate="yes" xml:space="preserve">
          <source>Lists the stacks.</source>
          <target state="translated">スタックをリストアップします。</target>
        </trans-unit>
        <trans-unit id="07f04fb94cc0ac57eab880d85581b8e5c03833df" translate="yes" xml:space="preserve">
          <source>Lists the tasks that are running as part of the specified services. This command has to be run targeting a manager node.</source>
          <target state="translated">指定したサービスの一部として実行されているタスクを一覧表示します。このコマンドは、マネージャノードをターゲットにして実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="1c621d822c718d7fe1e0ebf7c1fed844f01f9929" translate="yes" xml:space="preserve">
          <source>Lists the tasks that are running as part of the specified stack. This command has to be run targeting a manager node.</source>
          <target state="translated">指定されたスタックの一部として実行中のタスクを一覧表示します。このコマンドは、マネージャノードをターゲットにして実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="2703b349699d206d5ce77d3da54d44d9fac1164a" translate="yes" xml:space="preserve">
          <source>Load a private key file for signing</source>
          <target state="translated">署名用の秘密鍵ファイルのロード</target>
        </trans-unit>
        <trans-unit id="d32390f64d5a52dad51f085a292fbc4f3ffb1dc9" translate="yes" xml:space="preserve">
          <source>Load an image from a tar archive or STDIN</source>
          <target state="translated">tar アーカイブまたは STDIN からイメージを読み込む</target>
        </trans-unit>
        <trans-unit id="047b84a623801df7b60f0a8b82f56c09d18f25a7" translate="yes" xml:space="preserve">
          <source>Load an image or repository from a tar archive (even if compressed with gzip, bzip2, or xz) from a file or STDIN. It restores both images and tags.</source>
          <target state="translated">tar アーカイブ (gzip,bzip2,xz で圧縮されていても可)からファイルまたは STDIN から画像またはリポジトリをロードします。画像とタグの両方を復元します。</target>
        </trans-unit>
        <trans-unit id="f7d0f3b665bde02eb354220bdc78d45e667b1f22" translate="yes" xml:space="preserve">
          <source>Load and unload kernel modules.</source>
          <target state="translated">カーネルモジュールのロードとアンロードを行います。</target>
        </trans-unit>
        <trans-unit id="aaf1f52c9a2d4feb27bbbb876002c94c6d5cec47" translate="yes" xml:space="preserve">
          <source>Load and unload profiles</source>
          <target state="translated">プロファイルのロードとアンロード</target>
        </trans-unit>
        <trans-unit id="6afb192e8876001093b7d61830ada7231e1990f5" translate="yes" xml:space="preserve">
          <source>Load balancing</source>
          <target state="translated">ロードバランシング</target>
        </trans-unit>
        <trans-unit id="eb7dd0e1f5b6510ea89d8bbe27d4c334c2adcb1e" translate="yes" xml:space="preserve">
          <source>Load the profile.</source>
          <target state="translated">プロファイルをロードします。</target>
        </trans-unit>
        <trans-unit id="091ee31687d15dde3475376fd5b229cea63cfd02" translate="yes" xml:space="preserve">
          <source>Local Persist Plugin</source>
          <target state="translated">ローカルパーシストプラグイン</target>
        </trans-unit>
        <trans-unit id="1136b923a502c5338b5a576817a04209e2327c4b" translate="yes" xml:space="preserve">
          <source>Local VMs (Mac, Linux, Windows 7 and 8)</source>
          <target state="translated">ローカルVM(Mac、Linux、Windows 7および8</target>
        </trans-unit>
        <trans-unit id="f1be9945b24ef43d7c0a28c6b262ff1c9d661c5b" translate="yes" xml:space="preserve">
          <source>Local VMs (Windows 10/Hyper-V)</source>
          <target state="translated">ローカルVM(Windows 10/Hyper-V</target>
        </trans-unit>
        <trans-unit id="ad0c8070cfe29a915099cd99fa3849b7e4fbce89" translate="yes" xml:space="preserve">
          <source>Local name for plugin</source>
          <target state="translated">プラグインのローカル名</target>
        </trans-unit>
        <trans-unit id="551878825e1bf75204a6ee2e060d910121100cbe" translate="yes" xml:space="preserve">
          <source>Local registries, whose IP address falls in the 127.0.0.0/8 range, are automatically marked as insecure as of Docker 1.3.2. It is not recommended to rely on this, as it may change in the future.</source>
          <target state="translated">IPアドレスが127.0.0.0.0/8の範囲にあるローカルレジストリは、Docker 1.3.2の時点で自動的に安全でないとマークされています。将来的に変更される可能性があるので、これに頼るのはお勧めできません。</target>
        </trans-unit>
        <trans-unit id="f57e9597beada07ee4246d5954338aa928b267c6" translate="yes" xml:space="preserve">
          <source>Local trust service example:</source>
          <target state="translated">地域密着型のトラストサービスの例。</target>
        </trans-unit>
        <trans-unit id="d758cb891cf8299f0470e63bb5e13d4a830cc110" translate="yes" xml:space="preserve">
          <source>Locate the VPC ID you want from the &lt;em&gt;_VPC_&lt;/em&gt; column.</source>
          <target state="translated">&lt;em&gt;_VPC_&lt;/em&gt;列から&lt;em&gt;目的&lt;/em&gt;のVPC IDを見つけます。</target>
        </trans-unit>
        <trans-unit id="e04c480bbb93d626b524b227016a1e35249c3b62" translate="yes" xml:space="preserve">
          <source>Lock memory (mlock(2), mlockall(2), mmap(2), shmctl(2)).</source>
          <target state="translated">メモリをロック (mlock(2)、mlockall(2)、mmap(2)、shmctl(2))。</target>
        </trans-unit>
        <trans-unit id="79a4e7d6bafeb38d6a59ec2582f1494f3513b40a" translate="yes" xml:space="preserve">
          <source>Lock your swarm to protect its encryption key</source>
          <target state="translated">暗号化キーを保護するためにスワームをロックする</target>
        </trans-unit>
        <trans-unit id="08c7b674da323ca6c5f64898ac7aef9591ba113a" translate="yes" xml:space="preserve">
          <source>Log driver options</source>
          <target state="translated">ログドライバのオプション</target>
        </trans-unit>
        <trans-unit id="c9bcde476a874df8c92888dcc3bd588f9df7cea4" translate="yes" xml:space="preserve">
          <source>Log in to a Docker registry</source>
          <target state="translated">Dockerのレジストリにログイン</target>
        </trans-unit>
        <trans-unit id="5439a6d504dea8006d7dfcb64edad0c29261b7e6" translate="yes" xml:space="preserve">
          <source>Log in to the Docker public registry on your local machine.</source>
          <target state="translated">ローカルマシンのDockerパブリックレジストリにログインします。</target>
        </trans-unit>
        <trans-unit id="5a41266340791a2fb777c87b9951d4cbb7313be4" translate="yes" xml:space="preserve">
          <source>Log in with your Docker ID</source>
          <target state="translated">Docker IDでログイン</target>
        </trans-unit>
        <trans-unit id="7beca296e88142c52783383b05edec45bf615b09" translate="yes" xml:space="preserve">
          <source>Log into AWS with your IAM credentials, and navigate to your EC2 Running Instances.</source>
          <target state="translated">IAM資格情報でAWSにログインし、EC2 Running Instancesに移動します。</target>
        </trans-unit>
        <trans-unit id="3ef4c7bc52bacf859c1a7c24985d78c109e85196" translate="yes" xml:space="preserve">
          <source>Log into or run a command on a machine using SSH.</source>
          <target state="translated">SSHを使ってマシンにログインしたり、コマンドを実行したりします。</target>
        </trans-unit>
        <trans-unit id="430926a868ec05a889cccc0acbdb54695d7bb6ae" translate="yes" xml:space="preserve">
          <source>Log off aws-sandbox and unset this machine as active. Then list images again. You should not see hello-world (at least not with the same exited status):</source>
          <target state="translated">aws-sandboxをログオフして、このマシンをアクティブに設定解除します。その後、再度画像をリストアップしてください。hello-world は表示されないはずです (少なくとも同じ終了状態ではありません)。</target>
        </trans-unit>
        <trans-unit id="97d5c3ecfdd9a7c1d3cc9cc6529e0cf11675178a" translate="yes" xml:space="preserve">
          <source>Log on to aws-sandbox with ssh and list all containers. You should see hello-world (with a recent exited status):</source>
          <target state="translated">aws-sandbox に ssh でログインし、すべてのコンテナをリストアップします。hello-world (最近終了した状態)が表示されているはずです。</target>
        </trans-unit>
        <trans-unit id="95e1507c064c2164207aa341c733e4a4a33d287c" translate="yes" xml:space="preserve">
          <source>Log out from a Docker registry</source>
          <target state="translated">Dockerのレジストリからログアウトする</target>
        </trans-unit>
        <trans-unit id="1bad184e71db4b7b2c6d7db40597ca1156069695" translate="yes" xml:space="preserve">
          <source>Log tags are now generated in a standard way across different logging drivers. Because of which, the driver specific log tag options &lt;code&gt;syslog-tag&lt;/code&gt;, &lt;code&gt;gelf-tag&lt;/code&gt; and &lt;code&gt;fluentd-tag&lt;/code&gt; have been deprecated in favor of the generic &lt;code&gt;tag&lt;/code&gt; option.</source>
          <target state="translated">ログタグは、さまざまなロギングドライバーで標準的な方法で生成されるようになりました。そのため、ドライバー固有のログタグオプションである &lt;code&gt;syslog-tag&lt;/code&gt; 、 &lt;code&gt;gelf-tag&lt;/code&gt; 、および &lt;code&gt;fluentd-tag&lt;/code&gt; は、一般的な &lt;code&gt;tag&lt;/code&gt; オプションに代わり、非推奨になりました。</target>
        </trans-unit>
        <trans-unit id="6311a15cb719e67c88f2ab21e25917e54cfb90a3" translate="yes" xml:space="preserve">
          <source>Logging configuration for the service.</source>
          <target state="translated">サービスのロギング設定</target>
        </trans-unit>
        <trans-unit id="3995f4794095f38da456c451e8de607ccb0ddc2e" translate="yes" xml:space="preserve">
          <source>Logging driver for service</source>
          <target state="translated">サービス用ロギングドライバー</target>
        </trans-unit>
        <trans-unit id="b707340cec842d91fd39d9ab2d21b97944d61d2e" translate="yes" xml:space="preserve">
          <source>Logging driver for the container</source>
          <target state="translated">コンテナのロギングドライバ</target>
        </trans-unit>
        <trans-unit id="e61f2b47e7b82e0012066d7214e394b8fd0247cd" translate="yes" xml:space="preserve">
          <source>Logging driver options</source>
          <target state="translated">ロギングドライバのオプション</target>
        </trans-unit>
        <trans-unit id="8af7be6a41432aa0cc26283b2756ea1f67c02c97" translate="yes" xml:space="preserve">
          <source>Logging drivers (--log-driver)</source>
          <target state="translated">ドライバのロギング (--log-driver)</target>
        </trans-unit>
        <trans-unit id="50093938a8bb1b2c32f5651f3f6d4e878614bca8" translate="yes" xml:space="preserve">
          <source>Logging options are key-value pairs. An example of &lt;code&gt;syslog&lt;/code&gt; options:</source>
          <target state="translated">ロギングオプションはキーと値のペアです。 &lt;code&gt;syslog&lt;/code&gt; オプションの例：</target>
        </trans-unit>
        <trans-unit id="c0a0572405e41f41804d4705577111810b222882" translate="yes" xml:space="preserve">
          <source>Logging options available depend on which logging driver you use</source>
          <target state="translated">利用可能なロギングオプションは、使用するロギングドライバに依存します。</target>
        </trans-unit>
        <trans-unit id="2dc6355727dcecb8cabec8c057c09014af22668d" translate="yes" xml:space="preserve">
          <source>Login to a registry.</source>
          <target state="translated">レジストリにログインします。</target>
        </trans-unit>
        <trans-unit id="aa474ece40f3d12ea7394779458269289031690e" translate="yes" xml:space="preserve">
          <source>Login to a self-hosted registry</source>
          <target state="translated">自己ホスト型レジストリへのログイン</target>
        </trans-unit>
        <trans-unit id="a279144324bfb8de205b9846b281b828ebe37ec1" translate="yes" xml:space="preserve">
          <source>Login to the AWS console.</source>
          <target state="translated">AWSコンソールにログインします。</target>
        </trans-unit>
        <trans-unit id="32a4ec3cd36c42b8850b25ce76e4f8962a0d8bc3" translate="yes" xml:space="preserve">
          <source>Long form syntax of &lt;code&gt;--network&lt;/code&gt; allows to specify list of aliases and driver options:</source>
          <target state="translated">&lt;code&gt;--network&lt;/code&gt; の長い形式の構文では、エイリアスとドライバーオプションのリストを指定できます。</target>
        </trans-unit>
        <trans-unit id="d0079be04249bc215276be7ea649f7b310cc5417" translate="yes" xml:space="preserve">
          <source>Long syntax</source>
          <target state="translated">長い構文</target>
        </trans-unit>
        <trans-unit id="b0b5cc4a3981dbccf4f67cf66a938232195de847" translate="yes" xml:space="preserve">
          <source>Look at another log line:</source>
          <target state="translated">別のログラインを見てください。</target>
        </trans-unit>
        <trans-unit id="3b9a3019f4ec0693d42b69d68ce61e085d08bfc4" translate="yes" xml:space="preserve">
          <source>Look for output for the &lt;code&gt;web&lt;/code&gt; service, prepended with your app name. If you named it the same as shown in this example, the name is &lt;code&gt;getstartedlab_web&lt;/code&gt;. The service ID is listed as well, along with the number of replicas, image name, and exposed ports.</source>
          <target state="translated">アプリケーション名が前に付いた &lt;code&gt;web&lt;/code&gt; サービスの出力を探します。この例と同じ名前を付けた場合、名前は &lt;code&gt;getstartedlab_web&lt;/code&gt; になります。レプリカの数、イメージ名、公開されたポートとともに、サービスIDもリストされます。</target>
        </trans-unit>
        <trans-unit id="abec19580d901c89957066d47c1a2ed1e01d93bf" translate="yes" xml:space="preserve">
          <source>Looking for more detail on Docker and Compose compatibility?</source>
          <target state="translated">DockerとComposeの互換性の詳細をお探しですか?</target>
        </trans-unit>
        <trans-unit id="2e3ea4d978a39d5c0cf8de875ed6b3912ce6f703" translate="yes" xml:space="preserve">
          <source>Looking for options to set resources on non swarm mode containers?</source>
          <target state="translated">スウォームモード以外のコンテナにリソースを設定するオプションを探していますか?</target>
        </trans-unit>
        <trans-unit id="f4bea74d65429b644d3feea9a1038222a3b32683" translate="yes" xml:space="preserve">
          <source>Looking for the full list of available drivers?</source>
          <target state="translated">利用可能なドライバーの一覧をお探しですか?</target>
        </trans-unit>
        <trans-unit id="5732d5744b5d38159349a11af62f3e676d72b3c7" translate="yes" xml:space="preserve">
          <source>Lost keys</source>
          <target state="translated">失われた鍵</target>
        </trans-unit>
        <trans-unit id="885185a9aa4ed2b8438f2b90b756c5a4f9bebb47" translate="yes" xml:space="preserve">
          <source>Luckily it&amp;rsquo;s very easy to define, run, and scale services with the Docker platform -- just write a &lt;code&gt;docker-compose.yml&lt;/code&gt; file.</source>
          <target state="translated">幸い、Dockerプラットフォームを使用してサービスを定義、実行、スケーリングするのは非常に簡単です &lt;code&gt;docker-compose.yml&lt;/code&gt; ファイルを記述するだけです。</target>
        </trans-unit>
        <trans-unit id="a65d72aa00c2250d3647d3d73656119f7505cd93" translate="yes" xml:space="preserve">
          <source>MAC_ADMIN</source>
          <target state="translated">MAC_ADMIN</target>
        </trans-unit>
        <trans-unit id="ee9aeb4cea3f448dfa4e2864ecc5fb9fbe166cea" translate="yes" xml:space="preserve">
          <source>MAC_OVERRIDE</source>
          <target state="translated">MAC_OVERRIDE</target>
        </trans-unit>
        <trans-unit id="7a389eb4b1d34368319653350b3b40f02c5a2c13" translate="yes" xml:space="preserve">
          <source>MAINTAINER (deprecated)</source>
          <target state="translated">メインテナー (非推奨)</target>
        </trans-unit>
        <trans-unit id="431aa4bbf4c09724b37b4c525c3af1e8e76e1913" translate="yes" xml:space="preserve">
          <source>MEMs in which to allow execution (0-3, 0,1)</source>
          <target state="translated">実行を許可するMEM (0-3,0,1)</target>
        </trans-unit>
        <trans-unit id="b2d4b60209f46eeb00795352c06b840a5d1aab81" translate="yes" xml:space="preserve">
          <source>MKNOD</source>
          <target state="translated">MKNOD</target>
        </trans-unit>
        <trans-unit id="08bce2d9a3206bf0d7143d86833197a8534fabc6" translate="yes" xml:space="preserve">
          <source>Mac</source>
          <target state="translated">Mac</target>
        </trans-unit>
        <trans-unit id="7ac790c1388499464df8279c8730726aef37cfb6" translate="yes" xml:space="preserve">
          <source>Mac, Linux</source>
          <target state="translated">マック、リナックス</target>
        </trans-unit>
        <trans-unit id="65bb1b78be827ba8f92a54c7729f67f1997eb1d6" translate="yes" xml:space="preserve">
          <source>Machine</source>
          <target state="translated">Machine</target>
        </trans-unit>
        <trans-unit id="07be30e87e3efa6d900b240d30cd70e73b41ef27" translate="yes" xml:space="preserve">
          <source>Machine &lt;em&gt;was&lt;/em&gt; the &lt;em&gt;only&lt;/em&gt; way to run Docker on Mac or Windows previous to Docker v1.12. Starting with the beta program and Docker v1.12, &lt;a href=&quot;https://docs.docker.com/docker-for-mac/&quot;&gt;Docker Desktop for Mac&lt;/a&gt; and &lt;a href=&quot;https://docs.docker.com/docker-for-windows/&quot;&gt;Docker Desktop for Windows&lt;/a&gt; are available as native apps and the better choice for this use case on newer desktops and laptops. We encourage you to try out these new apps. The installers for Docker Desktop for Mac and Docker Desktop for Windows include Docker Machine, along with Docker Compose.</source>
          <target state="translated">マシン&lt;em&gt;は&lt;/em&gt;、Docker v1.12より前のMacまたはWindowsでDockerを実行する&lt;em&gt;唯一の&lt;/em&gt;方法でした。ベータプログラムとDocker v1.12以降、&lt;a href=&quot;https://docs.docker.com/docker-for-mac/&quot;&gt;Docker Desktop for Mac&lt;/a&gt;と&lt;a href=&quot;https://docs.docker.com/docker-for-windows/&quot;&gt;Docker Desktop for Windows&lt;/a&gt;がネイティブアプリとして利用可能になり、新しいデスクトップやラップトップでのこのユースケースに最適です。これらの新しいアプリをぜひお試しください。Docker Desktop for MacおよびDocker Desktop for Windowsのインストーラーには、Docker ComposeとともにDocker Machineが含まれています。</target>
        </trans-unit>
        <trans-unit id="4c03dee5af51924820fc1b9aeee37f4f723d43e9" translate="yes" xml:space="preserve">
          <source>Machine URL</source>
          <target state="translated">機械のURL</target>
        </trans-unit>
        <trans-unit id="4f710f49ebfbc26e3f2cfb931118f8d0db3218b2" translate="yes" xml:space="preserve">
          <source>Machine concepts and getting help</source>
          <target state="translated">機械の概念と助けを得る</target>
        </trans-unit>
        <trans-unit id="5a260334638a6a3b280af99fb18a3278b5d47363" translate="yes" xml:space="preserve">
          <source>Machine concepts and help</source>
          <target state="translated">機械の概念とヘルプ</target>
        </trans-unit>
        <trans-unit id="605ac44ca8f01735df8a04d197482734f3d92799" translate="yes" xml:space="preserve">
          <source>Machine drivers</source>
          <target state="translated">マシンドライバー</target>
        </trans-unit>
        <trans-unit id="73453de8707622690245a4cac3f67f1c4d2b5e6e" translate="yes" xml:space="preserve">
          <source>Machine errors</source>
          <target state="translated">機械のエラー</target>
        </trans-unit>
        <trans-unit id="d4a15abfc787b19ec249457d293ea47624bed03a" translate="yes" xml:space="preserve">
          <source>Machine name</source>
          <target state="translated">機械名</target>
        </trans-unit>
        <trans-unit id="dda046430c84992be720bcb21bbf0649b5ae3f96" translate="yes" xml:space="preserve">
          <source>Machine state (running, stopped...)</source>
          <target state="translated">マシンの状態(実行中、停止中...</target>
        </trans-unit>
        <trans-unit id="b115c7962d2794af3497157fb34c391d8e96475b" translate="yes" xml:space="preserve">
          <source>Machine swarm name</source>
          <target state="translated">機械群名</target>
        </trans-unit>
        <trans-unit id="068c3d2445abdd16055dba63bd26cbd5eec7f381" translate="yes" xml:space="preserve">
          <source>Maintain the quorum of managers</source>
          <target state="translated">管理職の定足数を維持する</target>
        </trans-unit>
        <trans-unit id="151b1d56ed2e516d72f5c029177a71763571b7f2" translate="yes" xml:space="preserve">
          <source>Majority</source>
          <target state="translated">Majority</target>
        </trans-unit>
        <trans-unit id="d0a9b15ea28679461248d4bc0247b0879a9d2543" translate="yes" xml:space="preserve">
          <source>Make arbitrary changes to file UIDs and GIDs (see chown(2)).</source>
          <target state="translated">ファイル UID および GID を任意に変更 (chown(2)を参照)。</target>
        </trans-unit>
        <trans-unit id="dbc091743f0ad07f28d5e79dafd08ab876d8a7ac" translate="yes" xml:space="preserve">
          <source>Make arbitrary manipulations of process GIDs and supplementary GID list.</source>
          <target state="translated">プロセスGIDと補助GIDリストを任意に操作できるようにします。</target>
        </trans-unit>
        <trans-unit id="e01488d00a6eeb2062b2dfb7d42e468886182e46" translate="yes" xml:space="preserve">
          <source>Make arbitrary manipulations of process UIDs.</source>
          <target state="translated">プロセスUIDの任意の操作を行う。</target>
        </trans-unit>
        <trans-unit id="a4dba9d2be0a191a1e3160ae4416e889b676b55a" translate="yes" xml:space="preserve">
          <source>Make socket broadcasts, and listen to multicasts.</source>
          <target state="translated">ソケットブロードキャストを作成し、マルチキャストをリッスンします。</target>
        </trans-unit>
        <trans-unit id="8b7638e07d2029e34e3a191f76dffcc9cad24a1b" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;compinit&lt;/code&gt; is loaded or do it by adding in &lt;code&gt;~/.zshrc&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;compinit&lt;/code&gt; がロードされていることを確認するか、 &lt;code&gt;~/.zshrc&lt;/code&gt; 追加して実行します。</target>
        </trans-unit>
        <trans-unit id="705694b7b7502535d2dcccc182f067dedede3814" translate="yes" xml:space="preserve">
          <source>Make sure all users are using the same implementation to build your Dockerfile</source>
          <target state="translated">すべてのユーザーが同じ実装を使用してDockerfileを構築していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="6d44a61ad148d45ef2fa8e39eb502416783e93b1" translate="yes" xml:space="preserve">
          <source>Make sure bash completion is installed.</source>
          <target state="translated">bash の完了がインストールされていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="233840b9e17aed38b50ee9974ed9baa0eaffb2c8" translate="yes" xml:space="preserve">
          <source>Make sure that the machines you set up in &lt;a href=&quot;../part4/index&quot;&gt;part 4&lt;/a&gt; are running and ready. Run &lt;code&gt;docker-machine ls&lt;/code&gt; to verify this. If the machines are stopped, run &lt;code&gt;docker-machine start myvm1&lt;/code&gt; to boot the manager, followed by &lt;code&gt;docker-machine start myvm2&lt;/code&gt; to boot the worker.</source>
          <target state="translated">&lt;a href=&quot;../part4/index&quot;&gt;パート4で&lt;/a&gt;セットアップしたマシンが実行中で準備ができていることを確認してください。 &lt;code&gt;docker-machine ls&lt;/code&gt; を実行してこれを確認します。マシンが停止している場合は、 &lt;code&gt;docker-machine start myvm1&lt;/code&gt; を実行してマネージャーを起動し、続いて &lt;code&gt;docker-machine start myvm2&lt;/code&gt; を実行してワーカーを起動します。</target>
        </trans-unit>
        <trans-unit id="b9637dac4dc0ffa59dedb0a8f5f9339cd68b1235" translate="yes" xml:space="preserve">
          <source>Make sure that the nodes to which you are deploying are correctly configured for the gMSA.</source>
          <target state="translated">デプロイ先のノードがgMSA用に正しく設定されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="a707b73a324a09d05d5ff7e77e92cedf99244233" translate="yes" xml:space="preserve">
          <source>Make sure that your Docker or Notary client trusts Notary Server&amp;rsquo;s certificate before you try to interact with the Notary server.</source>
          <target state="translated">Notaryサーバーとやり取りする前に、DockerまたはNotaryクライアントがNotaryサーバーの証明書を信頼していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="2f5d3828d514410e6ef3256714e6fef132ede964" translate="yes" xml:space="preserve">
          <source>Make sure you have &lt;a href=&quot;https://ohmyz.sh/&quot;&gt;installed &lt;code&gt;oh-my-zsh&lt;/code&gt;&lt;/a&gt; on your computer.</source>
          <target state="translated">コンピューターに&lt;a href=&quot;https://ohmyz.sh/&quot;&gt; &lt;code&gt;oh-my-zsh&lt;/code&gt; &lt;/a&gt;がインストールされていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="22da1faf840f31d1d8fda0d6c0bfaefd3ccae50f" translate="yes" xml:space="preserve">
          <source>Make sure you have &lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;the latest VirtualBox&lt;/a&gt; correctly installed on your system (either as part of an earlier Toolbox install, or manual install).</source>
          <target state="translated">&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;最新のVirtualBoxが&lt;/a&gt;システムに正しくインストールされていることを確認してください（以前のToolboxインストールの一部として、または手動インストールのいずれかとして）。</target>
        </trans-unit>
        <trans-unit id="ce61487bec2faf243487b5a3bb8155d7c39cb509" translate="yes" xml:space="preserve">
          <source>Make sure you have &lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;the latest VirtualBox&lt;/a&gt; correctly installed on your system. If you used &lt;a href=&quot;https://www.docker.com/products/docker-toolbox&quot;&gt;Toolbox&lt;/a&gt; or &lt;a href=&quot;https://docs.docker.com/docker-for-windows/&quot;&gt;Docker Desktop for Windows&lt;/a&gt; to install Docker Machine, VirtualBox is automatically installed.</source>
          <target state="translated">システムに&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;最新のVirtualBoxが&lt;/a&gt;正しくインストールされていることを確認してください。&lt;a href=&quot;https://www.docker.com/products/docker-toolbox&quot;&gt;Toolbox&lt;/a&gt;または&lt;a href=&quot;https://docs.docker.com/docker-for-windows/&quot;&gt;Docker Desktop for Windows&lt;/a&gt;を使用してDocker Machineをインストールした場合、VirtualBoxは自動的にインストールされます。</target>
        </trans-unit>
        <trans-unit id="704b9f4fbac246cf05033e233f4c26af69a7c239" translate="yes" xml:space="preserve">
          <source>Make sure you have Ethernet connectivity while you are doing this.</source>
          <target state="translated">この作業をしている間に、イーサネット接続があることを確認してください。</target>
        </trans-unit>
        <trans-unit id="461ffd5471dba7fbae9ef186c5e78fbaaa01b5ff" translate="yes" xml:space="preserve">
          <source>Make sure you have already installed both &lt;a href=&quot;https://docs.docker.com/install/&quot;&gt;Docker Engine&lt;/a&gt; and &lt;a href=&quot;../install/index&quot;&gt;Docker Compose&lt;/a&gt;. You don&amp;rsquo;t need to install Python or Redis, as both are provided by Docker images.</source>
          <target state="translated">&lt;a href=&quot;https://docs.docker.com/install/&quot;&gt;Docker Engine&lt;/a&gt;と&lt;a href=&quot;../install/index&quot;&gt;Docker Composeの&lt;/a&gt;両方がすでにインストールされていることを確認してください。両方ともDockerイメージによって提供されるため、PythonまたはRedisをインストールする必要はありません。</target>
        </trans-unit>
        <trans-unit id="57b3e22976c9e809c712f206abd6f88267784b38" translate="yes" xml:space="preserve">
          <source>Make sure you have published the &lt;code&gt;friendlyhello&lt;/code&gt; image you created by &lt;a href=&quot;../part2/index#share-your-image&quot;&gt;pushing it to a registry&lt;/a&gt;. We use that shared image here.</source>
          <target state="translated">作成した &lt;code&gt;friendlyhello&lt;/code&gt; イメージを&lt;a href=&quot;../part2/index#share-your-image&quot;&gt;レジストリにプッシュし&lt;/a&gt;て公開したことを確認してください。ここではその共有イメージを使用します。</target>
        </trans-unit>
        <trans-unit id="0bda0f339875207091c7544edceb323cfe951d5e" translate="yes" xml:space="preserve">
          <source>Make sure you&amp;rsquo;re using the JSON form of &lt;code&gt;CMD&lt;/code&gt; and &lt;code&gt;ENTRYPOINT&lt;/code&gt; in your Dockerfile.</source>
          <target state="translated">&lt;code&gt;ENTRYPOINT&lt;/code&gt; で &lt;code&gt;CMD&lt;/code&gt; およびENTRYPOINTの JSON形式を使用していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="9501271b488dec577acb82f33c59b5118b60bd51" translate="yes" xml:space="preserve">
          <source>Make sure your shell is configured to talk to &lt;code&gt;myvm1&lt;/code&gt; (full examples are &lt;a href=&quot;../part4/index#configure-a-docker-machine-shell-to-the-swarm-manager&quot;&gt;here&lt;/a&gt;).</source>
          <target state="translated">シェルが &lt;code&gt;myvm1&lt;/code&gt; と通信するように構成されていることを確認してください（完全な例は&lt;a href=&quot;../part4/index#configure-a-docker-machine-shell-to-the-swarm-manager&quot;&gt;ここにあります&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f977de0a41b6e0754e8b04fe8d708b903866fd23" translate="yes" xml:space="preserve">
          <source>Malicious Content</source>
          <target state="translated">悪質なコンテンツ</target>
        </trans-unit>
        <trans-unit id="0aed30e53271f1442c01d076ae8ecc452aa9bc62" translate="yes" xml:space="preserve">
          <source>Manage Docker</source>
          <target state="translated">Dockerを管理する</target>
        </trans-unit>
        <trans-unit id="bcbb760a40d4d27ed6dce122e58642ea0d762520" translate="yes" xml:space="preserve">
          <source>Manage Docker configs</source>
          <target state="translated">Dockerの設定を管理する</target>
        </trans-unit>
        <trans-unit id="17e939346d8036125e03af5fa4590c2aff2f7f7f" translate="yes" xml:space="preserve">
          <source>Manage Docker image manifests and manifest lists</source>
          <target state="translated">Dockerイメージのマニフェストとマニフェストリストの管理</target>
        </trans-unit>
        <trans-unit id="56a6341b02815f9610632a1989d34e5bac126b50" translate="yes" xml:space="preserve">
          <source>Manage Docker secrets</source>
          <target state="translated">Dockerの秘密を管理する</target>
        </trans-unit>
        <trans-unit id="bc33a12960955d423d50900c78fc18845d9571ff" translate="yes" xml:space="preserve">
          <source>Manage Docker stacks</source>
          <target state="translated">Dockerスタックの管理</target>
        </trans-unit>
        <trans-unit id="cee1ae6ad67f882f65f3946aa6d5983cccdc7d2e" translate="yes" xml:space="preserve">
          <source>Manage Docker.</source>
          <target state="translated">Dockerを管理する。</target>
        </trans-unit>
        <trans-unit id="4b15609405e5ec940d25c47397f86a5cfe053f0a" translate="yes" xml:space="preserve">
          <source>Manage Swarm</source>
          <target state="translated">群を管理する</target>
        </trans-unit>
        <trans-unit id="f1683aad0cfdfbf2d0b0bbf98840d3993e05d53b" translate="yes" xml:space="preserve">
          <source>Manage Swarm nodes</source>
          <target state="translated">スワームノードの管理</target>
        </trans-unit>
        <trans-unit id="9971a524e1dcfc83599d855bf8b44b6a7a426567" translate="yes" xml:space="preserve">
          <source>Manage builds</source>
          <target state="translated">ビルドの管理</target>
        </trans-unit>
        <trans-unit id="af9e697b4841239a517b39528247101a9381a00c" translate="yes" xml:space="preserve">
          <source>Manage checkpoints</source>
          <target state="translated">チェックポイントの管理</target>
        </trans-unit>
        <trans-unit id="96cc0a10b76864edc967bb5b8ee4a632103c0601" translate="yes" xml:space="preserve">
          <source>Manage containers</source>
          <target state="translated">コンテナの管理</target>
        </trans-unit>
        <trans-unit id="bc29b4effee3ed0f46db2ad7d094e62f818c33bd" translate="yes" xml:space="preserve">
          <source>Manage containers.</source>
          <target state="translated">コンテナを管理します。</target>
        </trans-unit>
        <trans-unit id="7a321e19438bb6e3fcf3391726a46dc0a94400fa" translate="yes" xml:space="preserve">
          <source>Manage contexts</source>
          <target state="translated">コンテキスト依存の処理</target>
        </trans-unit>
        <trans-unit id="153e8da9310447b8bfbaf10f33fe42e84be07fca" translate="yes" xml:space="preserve">
          <source>Manage entities who can sign Docker images</source>
          <target state="translated">Dockerイメージに署名できるエンティティの管理</target>
        </trans-unit>
        <trans-unit id="69f0e7e25d97c19dab1a624fc1083e9fcfa09b2d" translate="yes" xml:space="preserve">
          <source>Manage images</source>
          <target state="translated">画像の管理</target>
        </trans-unit>
        <trans-unit id="9a6a94acb397526c72b5accbffe4094a7eeade49" translate="yes" xml:space="preserve">
          <source>Manage images.</source>
          <target state="translated">画像を管理します。</target>
        </trans-unit>
        <trans-unit id="6aa433092469091efc9353560598d0368d20614c" translate="yes" xml:space="preserve">
          <source>Manage join tokens</source>
          <target state="translated">ジョイントークンの管理</target>
        </trans-unit>
        <trans-unit id="007eb7119a33f70ea4736b8d4a7495ae89d8d27a" translate="yes" xml:space="preserve">
          <source>Manage keys</source>
          <target state="translated">キーの管理</target>
        </trans-unit>
        <trans-unit id="d833541f337049e4b6010e0dff170ddf08cb8b60" translate="yes" xml:space="preserve">
          <source>Manage keys for content trust</source>
          <target state="translated">コンテンツの信頼性を高めるためのキーの管理</target>
        </trans-unit>
        <trans-unit id="911e100e3b15f5c68fecd340597c6702308505e3" translate="yes" xml:space="preserve">
          <source>Manage keys for signing Docker images</source>
          <target state="translated">Dockerイメージに署名するための鍵の管理</target>
        </trans-unit>
        <trans-unit id="d6266116214fe2079c3d48e4bba4083b7bc59868" translate="yes" xml:space="preserve">
          <source>Manage networks</source>
          <target state="translated">ネットワークの管理</target>
        </trans-unit>
        <trans-unit id="1bd59ff701675d05d207b9abe398a1d084b217b9" translate="yes" xml:space="preserve">
          <source>Manage networks. You can use subcommands to create, inspect, list, remove, prune, connect, and disconnect networks.</source>
          <target state="translated">ネットワークを管理します。サブコマンドを使用して、ネットワークの作成、検査、一覧表示、削除、剪定、接続、切断を行うことができます。</target>
        </trans-unit>
        <trans-unit id="612a2b383606d4791a6c6b6df0147f8a51c3caf5" translate="yes" xml:space="preserve">
          <source>Manage nodes in a swarm</source>
          <target state="translated">スウォームでノードを管理する</target>
        </trans-unit>
        <trans-unit id="af96b1747a80ee06953359c79a995ed50a2f4956" translate="yes" xml:space="preserve">
          <source>Manage nodes.</source>
          <target state="translated">ノードを管理します。</target>
        </trans-unit>
        <trans-unit id="9910954a7e7e56c91aaebe1836d50e3b162b663e" translate="yes" xml:space="preserve">
          <source>Manage plugins</source>
          <target state="translated">プラグインの管理</target>
        </trans-unit>
        <trans-unit id="8181ae4cda527c282130ec0b7101b5bde4c41279" translate="yes" xml:space="preserve">
          <source>Manage plugins.</source>
          <target state="translated">プラグインを管理します。</target>
        </trans-unit>
        <trans-unit id="c9f4a785b96116e180a70609b0ee07bec8713280" translate="yes" xml:space="preserve">
          <source>Manage secrets.</source>
          <target state="translated">秘密を管理する。</target>
        </trans-unit>
        <trans-unit id="2079ccf1541ccd5ec64fcee3b32f834c8dfb9ea5" translate="yes" xml:space="preserve">
          <source>Manage sensitive data with Docker secrets</source>
          <target state="translated">Dockerの秘密で機密データを管理</target>
        </trans-unit>
        <trans-unit id="6812ba217b8a3467171d803924a29265245a8032" translate="yes" xml:space="preserve">
          <source>Manage services</source>
          <target state="translated">サービスの管理</target>
        </trans-unit>
        <trans-unit id="504ac790264ade8bf891cd0c3e46e9c3a86327a0" translate="yes" xml:space="preserve">
          <source>Manage services.</source>
          <target state="translated">サービスを管理する。</target>
        </trans-unit>
        <trans-unit id="22afcf33077ef6916a32a7737dc888c2b9bd6060" translate="yes" xml:space="preserve">
          <source>Manage stacks</source>
          <target state="translated">スタックの管理</target>
        </trans-unit>
        <trans-unit id="459b5dd3861d81d78c5d8df728c8521ed711685c" translate="yes" xml:space="preserve">
          <source>Manage stacks.</source>
          <target state="translated">スタックを管理する。</target>
        </trans-unit>
        <trans-unit id="7b5e56be7c1d8955cf5b48313d3250a2366e9ee2" translate="yes" xml:space="preserve">
          <source>Manage swarm security with public key infrastructure (PKI)</source>
          <target state="translated">公開鍵インフラストラクチャ(PKI)を使用したスウォームセキュリティの管理</target>
        </trans-unit>
        <trans-unit id="2db78016cf1c6bd648339212e82488ffc4815d02" translate="yes" xml:space="preserve">
          <source>Manage the docker engine</source>
          <target state="translated">ドッカーエンジンの管理</target>
        </trans-unit>
        <trans-unit id="2425d5ac784b7763f191dd77cbff1ea7395f037b" translate="yes" xml:space="preserve">
          <source>Manage the swarm.</source>
          <target state="translated">群れを管理する。</target>
        </trans-unit>
        <trans-unit id="da5572562e6b0d9d3fa8bc9452d35f9c1d7808d8" translate="yes" xml:space="preserve">
          <source>Manage the unlock key</source>
          <target state="translated">ロック解除キーの管理</target>
        </trans-unit>
        <trans-unit id="718c90560aae1370a5401b9f791672f85b5db309" translate="yes" xml:space="preserve">
          <source>Manage trust on Docker images</source>
          <target state="translated">Dockerイメージの信頼性を管理する</target>
        </trans-unit>
        <trans-unit id="36f96c2ee0b65a5b7078438a3af7593b746cba13" translate="yes" xml:space="preserve">
          <source>Manage volumes</source>
          <target state="translated">ボリュームの管理</target>
        </trans-unit>
        <trans-unit id="c998f5e77a97c350d1dac59e27c21c7e64ee4071" translate="yes" xml:space="preserve">
          <source>Manage volumes. You can use subcommands to create, inspect, list, remove, or prune volumes.</source>
          <target state="translated">ボリュームを管理します。サブコマンドを使用して、ボリュームの作成、検査、一覧表示、削除、または剪定を行うことができます。</target>
        </trans-unit>
        <trans-unit id="651e6e7b2684f1d43e83282a4ba5d044dbf85a13" translate="yes" xml:space="preserve">
          <source>Manager nodes</source>
          <target state="translated">管理者ノード</target>
        </trans-unit>
        <trans-unit id="2d92c309bcee780a4a65b1669f4387c99cde3c26" translate="yes" xml:space="preserve">
          <source>Manager nodes also perform the orchestration and cluster management functions required to maintain the desired state of the swarm. Manager nodes elect a single leader to conduct orchestration tasks.</source>
          <target state="translated">また、マネージャノードは、スウォームの望ましい状態を維持するために必要なオーケストレーションとクラスタ管理の機能を実行します。マネージャノードは、オーケストレーションタスクを実行するために1人のリーダーを選択します。</target>
        </trans-unit>
        <trans-unit id="bb17aefff727aeedc1ec5fce2d758d32905fd260" translate="yes" xml:space="preserve">
          <source>Manager nodes handle cluster management tasks:</source>
          <target state="translated">管理者ノードはクラスタ管理タスクを処理します。</target>
        </trans-unit>
        <trans-unit id="7965df2d8940eef51069a39c363b5f5aad9b4836" translate="yes" xml:space="preserve">
          <source>Manager nodes increase fault-tolerance. Manager nodes perform the orchestration and cluster management functions for the swarm. Among manager nodes, a single leader node conducts orchestration tasks. If a leader node goes down, the remaining manager nodes elect a new leader and resume orchestration and maintenance of the swarm state. By default, manager nodes also run tasks.</source>
          <target state="translated">マネージャ・ノードはフォールト・トレランスを向上させます。マネージャノードは、スウォームのオーケストレーションとクラスタ管理機能を実行します。マネージャノードの中で、1つのリーダーノードがオーケストレーションタスクを実行します。リーダーノードがダウンすると、残りのマネージャーノードが新しいリーダーを選択し、スウォーム状態のオーケストレーションとメンテナンスを再開します。デフォルトでは、マネージャノードはタスクも実行します。</target>
        </trans-unit>
        <trans-unit id="005dff29e5c23dfba4fdee901a2c9d6ed94019fa" translate="yes" xml:space="preserve">
          <source>Manager nodes use an advertise address to allow other nodes in the swarm access to the Swarmkit API and overlay networking. The other nodes on the swarm must be able to access the manager node on its advertise address.</source>
          <target state="translated">マネージャー ノードはアドバタイズ アドレスを使用して、スウォーム内の他のノードが Swarmkit API とオーバーレイ ネットワーキングにアクセスできるようにします。スウォーム上の他のノードは、そのアドバタイズ アドレス上のマネージャ ノードにアクセスできる必要があります。</target>
        </trans-unit>
        <trans-unit id="910fdd0d108caa6a55952caea60ef5141def8a73" translate="yes" xml:space="preserve">
          <source>Manager status of the node</source>
          <target state="translated">ノードの管理者の状態</target>
        </trans-unit>
        <trans-unit id="d2b0410329a3eab90ceb43d48ffbb77412ae2574" translate="yes" xml:space="preserve">
          <source>Managing /etc/hosts</source>
          <target state="translated">etc/hosts の管理</target>
        </trans-unit>
        <trans-unit id="bd8c1b2fedcd8758444f2d94bfb6c8eba8eac164" translate="yes" xml:space="preserve">
          <source>Managing Delegations in a Notary Server</source>
          <target state="translated">公証人サーバでの委任状の管理</target>
        </trans-unit>
        <trans-unit id="3e4d9bf678d7a35cbe054e7e78691d4126c06e31" translate="yes" xml:space="preserve">
          <source>Managing the thin-pool outside of Engine makes for the most feature-rich method of having Docker utilize device mapper thin provisioning as the backing storage for Docker containers. The highlights of the lvm-based thin-pool management feature include: automatic or interactive thin-pool resize support, dynamically changing thin-pool features, automatic thinp metadata checking when lvm activates the thin-pool, etc.</source>
          <target state="translated">Engineの外でシンプールを管理することで、DockerにデバイスマッパーのシンプロビジョニングをDockerコンテナのバッキングストレージとして利用させる最も機能豊富な方法となります。lvmベースのシンプール管理機能のハイライトは、自動またはインタラクティブなシンプールリサイズのサポート、シンプールの機能を動的に変更する機能、lvmがシンプールをアクティブにしたときに自動的にシンプールのメタデータをチェックする機能などです。</target>
        </trans-unit>
        <trans-unit id="12715780d4d150abbe9e3857ad55e1a613bb8751" translate="yes" xml:space="preserve">
          <source>Mandatory:</source>
          <target state="translated">Mandatory:</target>
        </trans-unit>
        <trans-unit id="241359691c33d5d621cbccc9b88fda8b028a8039" translate="yes" xml:space="preserve">
          <source>Manual scheduling</source>
          <target state="translated">マニュアルスケジューリング</target>
        </trans-unit>
        <trans-unit id="bf042799231be65b3d68a7591be84935f41268d1" translate="yes" xml:space="preserve">
          <source>Manually Generating Keys</source>
          <target state="translated">手動でキーを生成する</target>
        </trans-unit>
        <trans-unit id="a0da65d72342575cd244ec94009c257136b53215" translate="yes" xml:space="preserve">
          <source>Many drivers require a certain set of conditions to be in place before machines can be created. For instance, VirtualBox needs to be installed before the &lt;code&gt;virtualbox&lt;/code&gt; driver can be used. For this reason, Docker Machine has a &amp;ldquo;pre-create check&amp;rdquo; which is specified at the driver level.</source>
          <target state="translated">多くのドライバーは、マシンを作成する前に、特定の条件を設定する必要があります。たとえば、 &lt;code&gt;virtualbox&lt;/code&gt; ドライバーを使用する前に、VirtualBoxをインストールする必要があります。このため、Docker Machineには、ドライバーレベルで指定された「事前作成チェック」があります。</target>
        </trans-unit>
        <trans-unit id="bcb0d704f9521dbd1d311f115854c59e375e6857" translate="yes" xml:space="preserve">
          <source>Many of the official images in the &lt;a href=&quot;https://github.com/docker-library/&quot;&gt;Docker library&lt;/a&gt;, such as the &lt;a href=&quot;https://github.com/docker-library/wordpress/&quot;&gt;wordpress&lt;/a&gt; image used in the above examples, have been updated in this way.</source>
          <target state="translated">上記の例で使用されている&lt;a href=&quot;https://github.com/docker-library/wordpress/&quot;&gt;wordpress&lt;/a&gt;画像など、&lt;a href=&quot;https://github.com/docker-library/&quot;&gt;Dockerライブラリの&lt;/a&gt;公式画像の多くは、この方法で更新されています。</target>
        </trans-unit>
        <trans-unit id="9cf2ce94e3924a3676408390a211bd30f36fc144" translate="yes" xml:space="preserve">
          <source>Map port 4000 on the host to &lt;code&gt;web&lt;/code&gt;&amp;rsquo;s port 80.</source>
          <target state="translated">ホストのポート4000を &lt;code&gt;web&lt;/code&gt; のポート80にマッピングします。</target>
        </trans-unit>
        <trans-unit id="371a6e388eb86c9c5d5ac630ff9bf2c9460b0aec" translate="yes" xml:space="preserve">
          <source>Mapping of GUN prefixes to filepaths containing the root CA file with which to verify the certificates in the root file. This file can contain multiple root certificates, bundled in separate PEM blocks. The path is relative to the directory of the configuration file.</source>
          <target state="translated">ルートファイル内の証明書を検証するためのルート CA ファイルを含むファイルパスへの GUN 接頭辞のマッピング。このファイルは、別々の PEM ブロックにバンドルされた複数のルート証明書を含むことができます。パスは、構成ファイルのディレクトリに対する相対パスです。</target>
        </trans-unit>
        <trans-unit id="54acd4a9cccf9e21cd0e1bc63e73040c32003a5b" translate="yes" xml:space="preserve">
          <source>Mapping of GUN to certificate IDs to pin to. Both are strings in the JSON object.</source>
          <target state="translated">GUNとピン留めする証明書IDのマッピング。どちらもJSONオブジェクト内の文字列です。</target>
        </trans-unit>
        <trans-unit id="989b2287465a640317819f9bb5b03151d31046a5" translate="yes" xml:space="preserve">
          <source>Match containers based on the &lt;code&gt;ubuntu-c1&lt;/code&gt; image which, in this case, is a child of &lt;code&gt;ubuntu&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ubuntu-c1&lt;/code&gt; イメージ（この場合は &lt;code&gt;ubuntu&lt;/code&gt; の子）に基づいてコンテナーを一致させます。</target>
        </trans-unit>
        <trans-unit id="b2749f0242940b71b2b2187d20b39fd3f198d874" translate="yes" xml:space="preserve">
          <source>Match containers based on the &lt;code&gt;ubuntu&lt;/code&gt; version &lt;code&gt;12.04.5&lt;/code&gt; image:</source>
          <target state="translated">&lt;code&gt;ubuntu&lt;/code&gt; バージョン &lt;code&gt;12.04.5&lt;/code&gt; イメージに基づいてコンテナーを一致させます。</target>
        </trans-unit>
        <trans-unit id="9e8e126b303a9cc47a8f61427166dbc9bf68e93a" translate="yes" xml:space="preserve">
          <source>Matching is done using Go&amp;rsquo;s &lt;a href=&quot;http://golang.org/pkg/path/filepath#Match&quot;&gt;filepath.Match&lt;/a&gt; rules. A preprocessing step removes leading and trailing whitespace and eliminates &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;..&lt;/code&gt; elements using Go&amp;rsquo;s &lt;a href=&quot;http://golang.org/pkg/path/filepath/#Clean&quot;&gt;filepath.Clean&lt;/a&gt;. Lines that are blank after preprocessing are ignored.</source>
          <target state="translated">マッチングはGoの&lt;a href=&quot;http://golang.org/pkg/path/filepath#Match&quot;&gt;filepath.Match&lt;/a&gt;ルールを使用して行われます。前処理ステップでは、先頭と末尾の空白が削除され、が削除され &lt;code&gt;.&lt;/code&gt; および &lt;code&gt;..&lt;/code&gt; Goの&lt;a href=&quot;http://golang.org/pkg/path/filepath/#Clean&quot;&gt;filepath.Clean&lt;/a&gt;を使用した要素。前処理後の空白行は無視されます。</target>
        </trans-unit>
        <trans-unit id="07a11a761f999cb7ce1507b233065f3dc13ef343" translate="yes" xml:space="preserve">
          <source>Matching is done using Go&amp;rsquo;s &lt;a href=&quot;https://golang.org/pkg/path/filepath#Match&quot;&gt;filepath.Match&lt;/a&gt; rules. A preprocessing step removes leading and trailing whitespace and eliminates &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;..&lt;/code&gt; elements using Go&amp;rsquo;s &lt;a href=&quot;https://golang.org/pkg/path/filepath/#Clean&quot;&gt;filepath.Clean&lt;/a&gt;. Lines that are blank after preprocessing are ignored.</source>
          <target state="translated">マッチングは、Goの&lt;a href=&quot;https://golang.org/pkg/path/filepath#Match&quot;&gt;filepath.Match&lt;/a&gt;ルールを使用して行われます。前処理ステップにより、先頭と末尾の空白が削除され、が削除され &lt;code&gt;.&lt;/code&gt; そして、 &lt;code&gt;..&lt;/code&gt; ゴーの使用要素&lt;a href=&quot;https://golang.org/pkg/path/filepath/#Clean&quot;&gt;filepath.Cleanを&lt;/a&gt;。前処理後に空白の行は無視されます。</target>
        </trans-unit>
        <trans-unit id="3e0da068fcb2287180011aa444991a3de8f3ed6a" translate="yes" xml:space="preserve">
          <source>Max number of search results</source>
          <target state="translated">検索結果の最大数</target>
        </trans-unit>
        <trans-unit id="eb5d4bf6f2281b770d8dc4c2b0020ee3cd57f079" translate="yes" xml:space="preserve">
          <source>Maximum IO bandwidth limit for the system drive (Windows only)</source>
          <target state="translated">システムドライブの最大IO帯域幅制限(Windowsのみ</target>
        </trans-unit>
        <trans-unit id="42b527a7695a6fede3e4b6c2c1b609466e43c3d6" translate="yes" xml:space="preserve">
          <source>Maximum IOps limit for the system drive (Windows only)</source>
          <target state="translated">システムドライブの最大IOps制限(Windowsのみ</target>
        </trans-unit>
        <trans-unit id="dfffc6fb3b3c2a919637ad93325a34acff28f149" translate="yes" xml:space="preserve">
          <source>Maximum number of restarts before giving up</source>
          <target state="translated">諦める前の最大再起動回数</target>
        </trans-unit>
        <trans-unit id="ade9c278c92219ab9e0376c7e40674145f09d97f" translate="yes" xml:space="preserve">
          <source>Maximum number of tasks per node (default 0 = unlimited)</source>
          <target state="translated">ノードあたりの最大タスク数(デフォルト 0=無制限</target>
        </trans-unit>
        <trans-unit id="2664cfa37954331a3314e960b2e250656baa30e7" translate="yes" xml:space="preserve">
          <source>Maximum number of tasks rolled back simultaneously (0 to roll back all at once)</source>
          <target state="translated">同時にロールバックするタスクの最大数(0で一気にロールバックする</target>
        </trans-unit>
        <trans-unit id="87cdbc35cac32c6baaa6a737e3f41cc58a02a276" translate="yes" xml:space="preserve">
          <source>Maximum number of tasks updated simultaneously (0 to update all at once)</source>
          <target state="translated">同時に更新されるタスクの最大数(0で一斉更新)</target>
        </trans-unit>
        <trans-unit id="b5b1950bb9db9fe065877dcdf81532404b1e2668" translate="yes" xml:space="preserve">
          <source>Maximum time to allow one check to run (ms|s|m|h)</source>
          <target state="translated">1回のチェックを実行できる最大時間 (ms|s|m|h)</target>
        </trans-unit>
        <trans-unit id="7aa948bb95ccc5227d65b6789dcd47611c35f863" translate="yes" xml:space="preserve">
          <source>Maximum time to allow one check to run (ms|s|m|h) (default 0s)</source>
          <target state="translated">1回のチェックを実行できる最大時間 (ms|s|m|h)(デフォルトは0s)</target>
        </trans-unit>
        <trans-unit id="622a2e56f6d7c0edc29dd1ba6eff3f8fab20db4f" translate="yes" xml:space="preserve">
          <source>Media Type</source>
          <target state="translated">メディアタイプ</target>
        </trans-unit>
        <trans-unit id="6f3478f41b305c9341e1ec9d9ca38150f3734196" translate="yes" xml:space="preserve">
          <source>Memory limit</source>
          <target state="translated">メモリ制限</target>
        </trans-unit>
        <trans-unit id="41f87e9a9d3752706de2bdb69e4ca63cbc448970" translate="yes" xml:space="preserve">
          <source>Memory limit (format: &lt;code&gt;&amp;lt;number&amp;gt;[&amp;lt;unit&amp;gt;]&lt;/code&gt;). Number is a positive integer. Unit can be one of &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;k&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, or &lt;code&gt;g&lt;/code&gt;. Minimum is 4M.</source>
          <target state="translated">メモリ制限（形式： &lt;code&gt;&amp;lt;number&amp;gt;[&amp;lt;unit&amp;gt;]&lt;/code&gt; ）。数値は正の整数です。単位は &lt;code&gt;b&lt;/code&gt; 、 &lt;code&gt;k&lt;/code&gt; 、 &lt;code&gt;m&lt;/code&gt; 、または &lt;code&gt;g&lt;/code&gt; のいずれかです。最小は4Mです。</target>
        </trans-unit>
        <trans-unit id="7937d23a97ea39909f9540f0ef9efd72d3b2a729" translate="yes" xml:space="preserve">
          <source>Memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems.</source>
          <target state="translated">実行を許可するメモリノード(MEM)です(0-3,0,1)。NUMAシステムでのみ有効。</target>
        </trans-unit>
        <trans-unit id="3f9b787699efd1ad1f1a46f6ce9637d0566175ac" translate="yes" xml:space="preserve">
          <source>Memory percentage (Not available on Windows)</source>
          <target state="translated">メモリの割合(Windowsでは利用できません</target>
        </trans-unit>
        <trans-unit id="139e724e8896bb9e810c36540b971118d2f91261" translate="yes" xml:space="preserve">
          <source>Memory reservation is a kind of memory soft limit that allows for greater sharing of memory. Under normal circumstances, containers can use as much of the memory as needed and are constrained only by the hard limits set with the &lt;code&gt;-m&lt;/code&gt;/&lt;code&gt;--memory&lt;/code&gt; option. When memory reservation is set, Docker detects memory contention or low memory and forces containers to restrict their consumption to a reservation limit.</source>
          <target state="translated">メモリ予約は、メモリの共有を向上させる一種のメモリソフト制限です。通常の状況では、コンテナーは必要なだけのメモリを使用でき、 &lt;code&gt;-m&lt;/code&gt; / &lt;code&gt;--memory&lt;/code&gt; オプションで設定されたハード制限によってのみ制約されます。メモリ予約が設定されている場合、Dockerはメモリの競合またはメモリ不足を検出し、コンテナに消費を予約制限に制限します。</target>
        </trans-unit>
        <trans-unit id="d90f761f2b955162e7e109b51a9dcd42ff98789c" translate="yes" xml:space="preserve">
          <source>Memory reservation is a soft-limit feature and does not guarantee the limit won&amp;rsquo;t be exceeded. Instead, the feature attempts to ensure that, when memory is heavily contended for, memory is allocated based on the reservation hints/setup.</source>
          <target state="translated">メモリ予約はソフト制限機能であり、制限を超えないことを保証するものではありません。代わりに、この機能は、メモリの競合が激しい場合、予約のヒント/設定に基づいてメモリが割り当てられるようにします。</target>
        </trans-unit>
        <trans-unit id="20b15ace296d665a57049a512414d89db4bbe882" translate="yes" xml:space="preserve">
          <source>Memory soft limit</source>
          <target state="translated">メモリソフトリミット</target>
        </trans-unit>
        <trans-unit id="e8c0f8bc49fd35707f331e523a6b7d4ea8dcfaff" translate="yes" xml:space="preserve">
          <source>Memory soft limit (format: &lt;code&gt;&amp;lt;number&amp;gt;[&amp;lt;unit&amp;gt;]&lt;/code&gt;). Number is a positive integer. Unit can be one of &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;k&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, or &lt;code&gt;g&lt;/code&gt;.</source>
          <target state="translated">メモリのソフト制限（形式： &lt;code&gt;&amp;lt;number&amp;gt;[&amp;lt;unit&amp;gt;]&lt;/code&gt; ）。数値は正の整数です。単位は &lt;code&gt;b&lt;/code&gt; 、 &lt;code&gt;k&lt;/code&gt; 、 &lt;code&gt;m&lt;/code&gt; 、または &lt;code&gt;g&lt;/code&gt; のいずれかです。</target>
        </trans-unit>
        <trans-unit id="530f6ddbe6f5cabf01f18a63d450d84bd827f45b" translate="yes" xml:space="preserve">
          <source>Memory usage</source>
          <target state="translated">メモリ使用量</target>
        </trans-unit>
        <trans-unit id="874b3c4b6995f098b447c02e80adbaec08c11146" translate="yes" xml:space="preserve">
          <source>Methods for doing this vary depending on your cloud provider.</source>
          <target state="translated">その方法は、ご利用のクラウドプロバイダーによって異なります。</target>
        </trans-unit>
        <trans-unit id="5e0e80e05f6b63306d80d9083140096a863b1af8" translate="yes" xml:space="preserve">
          <source>Microsoft ASP.NET Core on Docker Hub</source>
          <target state="translated">Microsoft ASP.NET Core on Docker Hub</target>
        </trans-unit>
        <trans-unit id="ce1b25befca382d0c1fbf760de6ce165ed7a0e08" translate="yes" xml:space="preserve">
          <source>Microsoft Azure</source>
          <target state="translated">マイクロソフトアジュール</target>
        </trans-unit>
        <trans-unit id="806975ae6c4cab06a55ecd3355837d4a03826904" translate="yes" xml:space="preserve">
          <source>Microsoft Hyper-V</source>
          <target state="translated">マイクロソフトハイパーブイ</target>
        </trans-unit>
        <trans-unit id="84c01655ae0a70b6856f3be9c14ac8e736377c9c" translate="yes" xml:space="preserve">
          <source>Microsoft Windows Credential Manager: https://github.com/docker/docker-credential-helpers/releases</source>
          <target state="translated">Microsoft Windows Credential Manager:https://github.com/docker/docker-credential-helpers/releases</target>
        </trans-unit>
        <trans-unit id="4a94b757ab80aad04a2eeb6162194b288cb01fd6" translate="yes" xml:space="preserve">
          <source>Microsoft Windows has no built-in driver for managing RAM disks, so within running Windows containers, secrets &lt;strong&gt;are&lt;/strong&gt; persisted in clear text to the container&amp;rsquo;s root disk. However, the secrets are explicitly removed when a container stops. In addition, Windows does not support persisting a running container as an image using &lt;code&gt;docker commit&lt;/code&gt; or similar commands.</source>
          <target state="translated">Microsoft WindowsにはRAMディスクを管理するための組み込みドライバーがないため、実行中のWindowsコンテナー内では、シークレット&lt;strong&gt;は&lt;/strong&gt;クリアテキストでコンテナーのルートディスクに保持されます。ただし、シークレットはコンテナーが停止すると明示的に削除されます。さらに、Windowsは &lt;code&gt;docker commit&lt;/code&gt; または同様のコマンドを使用して、実行中のコンテナーをイメージとして永続化することをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="0b9befd43cd162f84d1c9e28141069060b6733f5" translate="yes" xml:space="preserve">
          <source>Migrate from Boot2Docker to Docker Machine</source>
          <target state="translated">Boot2DockerからDocker Machineへの移行</target>
        </trans-unit>
        <trans-unit id="9cd51733ef265f009afdf9ef40cfa0a4dcdda13f" translate="yes" xml:space="preserve">
          <source>Migrate from Boot2Docker to Machine</source>
          <target state="translated">Boot2DockerからMachineへの移行</target>
        </trans-unit>
        <trans-unit id="0d58caaa07d487e342887e5c89ba6415b53959c3" translate="yes" xml:space="preserve">
          <source>Miscellaneous options</source>
          <target state="translated">その他のオプション</target>
        </trans-unit>
        <trans-unit id="f4c37cfb3abc87fcc85ca3b9293f83f5713d0050" translate="yes" xml:space="preserve">
          <source>Missing or null labels</source>
          <target state="translated">欠落またはヌルのラベル</target>
        </trans-unit>
        <trans-unit id="f9a95c3f2c990cb184d3294f2cc09b865cda4463" translate="yes" xml:space="preserve">
          <source>Mitigations</source>
          <target state="translated">Mitigations</target>
        </trans-unit>
        <trans-unit id="5e506f287c85c446202f62f0fbcb245e6c11583a" translate="yes" xml:space="preserve">
          <source>Modify process capabilities.</source>
          <target state="translated">プロセス機能を変更します。</target>
        </trans-unit>
        <trans-unit id="ec5b4ce7a62f243cb5e33bcce21a33f2d1223e99" translate="yes" xml:space="preserve">
          <source>Modify the proportion of bandwidth allocated to this service relative to other services. Takes an integer value between 10 and 1000, with 500 being the default.</source>
          <target state="translated">他のサービスと比較して、このサービスに割り当てられる帯域幅の割合を変更します。10 から 1000 の間の整数値を取り、デフォルトは 500 です。</target>
        </trans-unit>
        <trans-unit id="f3652f98d84a6a36e4a47e62dbf486831b18be5d" translate="yes" xml:space="preserve">
          <source>Modify your Compose file for production</source>
          <target state="translated">本番用にComposeファイルを修正する</target>
        </trans-unit>
        <trans-unit id="a0506f4cdc2fa84cf3d6712842fcae780eb93937" translate="yes" xml:space="preserve">
          <source>Modular components with minimal overhead retain flexibility while constructing your solutions</source>
          <target state="translated">オーバーヘッドを最小限に抑えたモジュール式コンポーネントは、ソリューションを構築する際の柔軟性を維持します。</target>
        </trans-unit>
        <trans-unit id="a6f6fcc11cd5a4cda1540411710996127fced19d" translate="yes" xml:space="preserve">
          <source>Monitor swarm health</source>
          <target state="translated">群の健康状態を監視する</target>
        </trans-unit>
        <trans-unit id="75bef888ca25dbbee7e30d2ddeb2c82b94be4f36" translate="yes" xml:space="preserve">
          <source>More Compose documentation</source>
          <target state="translated">More Compose ドキュメンテーションを作成する</target>
        </trans-unit>
        <trans-unit id="96f4aa8b34b9ebefe8f8375ad6df9d0312712ec8" translate="yes" xml:space="preserve">
          <source>More advanced methods of configuration, and additional options, can be found in the &lt;a href=&quot;../reference/index&quot;&gt;configuration doc&lt;/a&gt; and by running &lt;code&gt;notary --help&lt;/code&gt;.</source>
          <target state="translated">より高度な設定方法と追加オプションは、&lt;a href=&quot;../reference/index&quot;&gt;設定ドキュメント&lt;/a&gt;と &lt;code&gt;notary --help&lt;/code&gt; を実行することで見つけることができます。</target>
        </trans-unit>
        <trans-unit id="5a2a63942b87fc93b00e75cd732d3fa178b577f6" translate="yes" xml:space="preserve">
          <source>More detailed information on restart policies can be found in the &lt;a href=&quot;../../run/index#restart-policies---restart&quot;&gt;Restart Policies (--restart)&lt;/a&gt; section of the Docker run reference page.</source>
          <target state="translated">再起動ポリシーの詳細については、Docker runリファレンスページの&lt;a href=&quot;../../run/index#restart-policies---restart&quot;&gt;再起動ポリシー（--restart）&lt;/a&gt;セクションをご覧ください。</target>
        </trans-unit>
        <trans-unit id="59842d981c57fb9cc87deffb5fe760f6cbaebe00" translate="yes" xml:space="preserve">
          <source>More info</source>
          <target state="translated">詳細情報</target>
        </trans-unit>
        <trans-unit id="fb9d9e9b664a0d82776f9d3eebd0701f28348eb6" translate="yes" xml:space="preserve">
          <source>More information on short and long syntax for secrets can be found at &lt;a href=&quot;../../../compose/compose-file/index#secrets&quot;&gt;Compose file version 3 reference&lt;/a&gt;.</source>
          <target state="translated">シークレットの短い構文と長い構文の詳細については、&lt;a href=&quot;../../../compose/compose-file/index#secrets&quot;&gt;Composeファイルバージョン3リファレンスを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="cfbebe34ff1ff71906709461d6a7a51dc712ccdf" translate="yes" xml:space="preserve">
          <source>More information on the &lt;code&gt;$ notary witness&lt;/code&gt; command can be found &lt;a href=&quot;https://github.com/theupdateframework/notary/blob/master/docs/advanced_usage/#recovering-a-delegation&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;$ notary witness&lt;/code&gt; コマンドの詳細については、&lt;a href=&quot;https://github.com/theupdateframework/notary/blob/master/docs/advanced_usage/#recovering-a-delegation&quot;&gt;こちらをご覧ください&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22808c5574015f8ad7b133e0c22072e232e2ae10" translate="yes" xml:space="preserve">
          <source>More play in the sandbox</source>
          <target state="translated">砂場でもっと遊ぼう</target>
        </trans-unit>
        <trans-unit id="80e21a3d26283fe1ec952272f1b272b2e85a14ee" translate="yes" xml:space="preserve">
          <source>More than 8 docker machines?</source>
          <target state="translated">8台以上のドッカーマシン?</target>
        </trans-unit>
        <trans-unit id="3347345e531540df59edf729568e9d5da848a1cc" translate="yes" xml:space="preserve">
          <source>Moreover, if you want to use &lt;a href=&quot;../../../engine/swarm/swarm-tutorial/index&quot;&gt;Docker Swarm&lt;/a&gt;, also add TCP port 2377, UDP/TCP on 7946, and UDP on 4789.</source>
          <target state="translated">さらに、&lt;a href=&quot;../../../engine/swarm/swarm-tutorial/index&quot;&gt;Docker Swarm&lt;/a&gt;を使用する場合は、TCPポート2377、UDP / TCP 7946、UDP 4789も追加します。</target>
        </trans-unit>
        <trans-unit id="5620560da848b176cd61a0f05819a71d6560d73d" translate="yes" xml:space="preserve">
          <source>Most importantly, there are a couple of things in the &lt;code&gt;redis&lt;/code&gt; specification that make data persist between deployments of this stack:</source>
          <target state="translated">最も重要なことは、 &lt;code&gt;redis&lt;/code&gt; 仕様には、このスタックのデプロイメント間でデータを永続化するためのものがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="f519679a9bbc4e2c449fa80ef369987c307f81bd" translate="yes" xml:space="preserve">
          <source>Most of your images will be created on top of a base image from the &lt;a href=&quot;https://hub.docker.com&quot;&gt;Docker Hub&lt;/a&gt; registry.</source>
          <target state="translated">ほとんどのイメージは、&lt;a href=&quot;https://hub.docker.com&quot;&gt;Docker Hub&lt;/a&gt;レジストリのベースイメージの上に作成されます。</target>
        </trans-unit>
        <trans-unit id="92cfb4be28376daf94bb60b407727790697d459f" translate="yes" xml:space="preserve">
          <source>Mount a temporary file system inside the container. Can be a single value or a list.</source>
          <target state="translated">コンテナ内の一時ファイルシステムをマウントします。単一の値またはリストにすることができます。</target>
        </trans-unit>
        <trans-unit id="0e48be240d536351df4966946d5bc4570fa13507" translate="yes" xml:space="preserve">
          <source>Mount a temporary file system inside the container. Size parameter specifies the size of the tmpfs mount in bytes. Unlimited by default.</source>
          <target state="translated">コンテナ内の一時ファイルシステムをマウントします。Sizeパラメータはtmpfsマウントのサイズをバイト単位で指定します。デフォルトでは無制限です。</target>
        </trans-unit>
        <trans-unit id="85823aceb0182bea3afb3eaed9c52cd2350e589d" translate="yes" xml:space="preserve">
          <source>Mount a tmpfs directory</source>
          <target state="translated">tmpfsディレクトリのマウント</target>
        </trans-unit>
        <trans-unit id="91f560dd786427c0e0c57b8b2a1d32206b1d9273" translate="yes" xml:space="preserve">
          <source>Mount all of the volumes from another service or container, optionally specifying read-only access (&lt;code&gt;ro&lt;/code&gt;) or read-write (&lt;code&gt;rw&lt;/code&gt;). If no access level is specified, then read-write is used.</source>
          <target state="translated">別のサービスまたはコンテナーからすべてのボリュームをマウントし、オプションで読み取り専用アクセス（ &lt;code&gt;ro&lt;/code&gt; ）または読み取り/書き込み（ &lt;code&gt;rw&lt;/code&gt; ）を指定します。アクセスレベルが指定されていない場合は、読み書きが使用されます。</target>
        </trans-unit>
        <trans-unit id="da0fa830ad355881d94c4807ff1ad650bba47d46" translate="yes" xml:space="preserve">
          <source>Mount directories from a machine to your local host, using &lt;code&gt;sshfs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sshfs&lt;/code&gt; を使用して、マシンからローカルホストにディレクトリをマウントします。</target>
        </trans-unit>
        <trans-unit id="86a353f3b51b8f2d18815b68aaefe20f759faab1" translate="yes" xml:space="preserve">
          <source>Mount host folders or named volumes. Named volumes need to be specified with the &lt;a href=&quot;#volume-configuration-reference&quot;&gt;top-level &lt;code&gt;volumes&lt;/code&gt; key&lt;/a&gt;.</source>
          <target state="translated">ホストフォルダーまたは名前付きボリュームをマウントします。名前付きボリュームは、&lt;a href=&quot;#volume-configuration-reference&quot;&gt;トップレベルの &lt;code&gt;volumes&lt;/code&gt; キー&lt;/a&gt;で指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="7defaa4ccf5e37510def0937d1dd546d1da7e21e" translate="yes" xml:space="preserve">
          <source>Mount host paths or named volumes, specified as sub-options to a service.</source>
          <target state="translated">サービスのサブオプションとして指定されたホストパスまたは名前付きボリュームをマウントします。</target>
        </trans-unit>
        <trans-unit id="b8566c0f05e5f416974cf5434edaf05f302512bd" translate="yes" xml:space="preserve">
          <source>Mount path inside the container, for example</source>
          <target state="translated">コンテナ内のマウントパス、例えば</target>
        </trans-unit>
        <trans-unit id="35f9278e8c4a19bf12721b7affad17b358eba677" translate="yes" xml:space="preserve">
          <source>Mount paths or named volumes, optionally specifying a path on the host machine (&lt;code&gt;HOST:CONTAINER&lt;/code&gt;), or an access mode (&lt;code&gt;HOST:CONTAINER:ro&lt;/code&gt;). For &lt;a href=&quot;../compose-versioning/index#version-2&quot;&gt;version 2 files&lt;/a&gt;, named volumes need to be specified with the &lt;a href=&quot;../compose-file-v2/index#volume-configuration-reference&quot;&gt;top-level &lt;code&gt;volumes&lt;/code&gt; key&lt;/a&gt;. When using &lt;a href=&quot;../compose-versioning/index#version-1&quot;&gt;version 1&lt;/a&gt;, the Docker Engine creates the named volume automatically if it doesn&amp;rsquo;t exist.</source>
          <target state="translated">パスまたは名前付きボリュームをマウントします。オプションで、ホストマシン上のパス（ &lt;code&gt;HOST:CONTAINER&lt;/code&gt; ）またはアクセスモード（ &lt;code&gt;HOST:CONTAINER:ro&lt;/code&gt; ）を指定します。以下のために&lt;a href=&quot;../compose-versioning/index#version-2&quot;&gt;、バージョン2つのファイル&lt;/a&gt;ボリュームの名前は、で指定する必要が&lt;a href=&quot;../compose-file-v2/index#volume-configuration-reference&quot;&gt;トップレベルの &lt;code&gt;volumes&lt;/code&gt; キー&lt;/a&gt;。&lt;a href=&quot;../compose-versioning/index#version-1&quot;&gt;バージョン1&lt;/a&gt;を使用する場合、Docker Engineは指定されたボリュームが存在しない場合は自動的に作成します。</target>
        </trans-unit>
        <trans-unit id="4a793c31bfb3fbe8d945266cf6982d8e19e2768d" translate="yes" xml:space="preserve">
          <source>Mount the container&amp;rsquo;s root filesystem as read only</source>
          <target state="translated">コンテナーのルートファイルシステムを読み取り専用としてマウントする</target>
        </trans-unit>
        <trans-unit id="c63969ffb9cefc7177f3502cbb895de9305e9149" translate="yes" xml:space="preserve">
          <source>Mount tmpfs (--tmpfs)</source>
          <target state="translated">tmpfs のマウント (--tmpfs)</target>
        </trans-unit>
        <trans-unit id="dd72e7dc4d2e79077b2337f049558d0c4758d1b5" translate="yes" xml:space="preserve">
          <source>Mount volume (-v, --read-only)</source>
          <target state="translated">ボリュームのマウント (-v,--読み取り専用)</target>
        </trans-unit>
        <trans-unit id="e1d0850660e4571703f18661e2e220d9baaf927a" translate="yes" xml:space="preserve">
          <source>Mount volumes from container (--volumes-from)</source>
          <target state="translated">コンテナからボリュームをマウント (--volumes-from)</target>
        </trans-unit>
        <trans-unit id="89cd494a16e8195c1b444308a8126134da6693e6" translate="yes" xml:space="preserve">
          <source>Mount volumes from the specified container(s)</source>
          <target state="translated">指定したコンテナからボリュームをマウントする</target>
        </trans-unit>
        <trans-unit id="14766b11b99f48495ad4c21d250367a73f20edac" translate="yes" xml:space="preserve">
          <source>Msg</source>
          <target state="translated">Msg</target>
        </trans-unit>
        <trans-unit id="d26a862e80e9980f33f480dfda6ecd6bcb3ca806" translate="yes" xml:space="preserve">
          <source>Multi</source>
          <target state="translated">Multi</target>
        </trans-unit>
        <trans-unit id="519f998c05c9ee7680f1e1f0a99874ac7bf38eca" translate="yes" xml:space="preserve">
          <source>Multi-host networking</source>
          <target state="translated">マルチホストネットワーク</target>
        </trans-unit>
        <trans-unit id="c8e34199b0dc0d9dd49c139b1ef17d1bd104962d" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; resources may be specified but if they are files or directories, their paths are interpreted as relative to the source of the context of the build.</source>
          <target state="translated">複数の &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; リソースを指定できますが、それらがファイルまたはディレクトリの場合、それらのパスは、ビルドのコンテキストのソースに対する相対パスとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="26a11916bb19c0abdb9f19bbe46be8eaebb47961" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; resources may be specified but the paths of files and directories will be interpreted as relative to the source of the context of the build.</source>
          <target state="translated">複数の &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; リソースを指定できますが、ファイルとディレクトリのパスは、ビルドのコンテキストのソースを基準にして解釈されます。</target>
        </trans-unit>
        <trans-unit id="fae9ae732e6ec06c7aa85fb6597f6726faceff03" translate="yes" xml:space="preserve">
          <source>Multiple Compose files</source>
          <target state="translated">複数のコンポーズファイル</target>
        </trans-unit>
        <trans-unit id="c709ad37f517d2882f4a480ee7e3ecbae00010e5" translate="yes" xml:space="preserve">
          <source>Multiple containers can use the same volume in the same time period. This is useful if two containers need access to shared data. For example, if one container writes and the other reads the data.</source>
          <target state="translated">複数のコンテナが同じ時間帯に同じボリュームを使用することができます。これは、2つのコンテナが共有データにアクセスする必要がある場合に便利です。例えば、一方のコンテナが書き込みを行い、他方のコンテナがデータを読み取る場合などです。</target>
        </trans-unit>
        <trans-unit id="465b1d063624d1fcd3acbd7f7a3be4db41f5edf8" translate="yes" xml:space="preserve">
          <source>Multiple dependencies</source>
          <target state="translated">複数の依存関係</target>
        </trans-unit>
        <trans-unit id="a90b5acfeccb0d35fe87e49d7db585d97cd3c333" translate="yes" xml:space="preserve">
          <source>Multiple isolated environments on a single host</source>
          <target state="translated">単一ホスト上の複数の分離された環境</target>
        </trans-unit>
        <trans-unit id="a9575de0f432dbaff755a2190eee759f8b96abe6" translate="yes" xml:space="preserve">
          <source>Multiple ranges</source>
          <target state="translated">複数のレンジ</target>
        </trans-unit>
        <trans-unit id="65a8a5ce44d374f82b26ef0009f098065b477d98" translate="yes" xml:space="preserve">
          <source>Must be &lt;code&gt;&quot;mysql&quot;&lt;/code&gt; or &lt;code&gt;&quot;memory&quot;&lt;/code&gt;. If &lt;code&gt;&quot;memory&quot;&lt;/code&gt; is selected, the &lt;code&gt;db_url&lt;/code&gt; is ignored.</source>
          <target state="translated">&lt;code&gt;&quot;mysql&quot;&lt;/code&gt; または &lt;code&gt;&quot;memory&quot;&lt;/code&gt; 必要があります。場合は &lt;code&gt;&quot;memory&quot;&lt;/code&gt; 選択され、 &lt;code&gt;db_url&lt;/code&gt; は無視されます。</target>
        </trans-unit>
        <trans-unit id="aa10ba3abaeacc374bba38673191d9a0285526ae" translate="yes" xml:space="preserve">
          <source>Must be &lt;code&gt;&quot;remote&quot;&lt;/code&gt; or &lt;code&gt;&quot;local&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;remote&quot;&lt;/code&gt; または &lt;code&gt;&quot;local&quot;&lt;/code&gt; 必要があります</target>
        </trans-unit>
        <trans-unit id="302bab3d237654c9742db4ae6ae04f55c72a7566" translate="yes" xml:space="preserve">
          <source>Must be &lt;code&gt;&quot;token&quot;&lt;/code&gt;; all other values result in no authentication (and the rest of the parameters are ignored)</source>
          <target state="translated">&lt;code&gt;&quot;token&quot;&lt;/code&gt; 必要があります。他のすべての値は認証なしになります（そして残りのパラメーターは無視されます）</target>
        </trans-unit>
        <trans-unit id="b5f542945b0612c4c9533b659dba323eb463f843" translate="yes" xml:space="preserve">
          <source>NET_ADMIN</source>
          <target state="translated">NET_ADMIN</target>
        </trans-unit>
        <trans-unit id="7ccbf5888b444d8453990b807f720770732a9767" translate="yes" xml:space="preserve">
          <source>NET_BIND_SERVICE</source>
          <target state="translated">NET_BIND_SERVICE</target>
        </trans-unit>
        <trans-unit id="085a17e851ae0a02928634dc2973a3eb2fa16f4d" translate="yes" xml:space="preserve">
          <source>NET_BROADCAST</source>
          <target state="translated">NET_BROADCAST</target>
        </trans-unit>
        <trans-unit id="829362ba32bb20ec9c53a53f1853516e1e58727d" translate="yes" xml:space="preserve">
          <source>NET_RAW</source>
          <target state="translated">NET_RAW</target>
        </trans-unit>
        <trans-unit id="6282fc57f4e258746ab20715e515c39d5ec6b10b" translate="yes" xml:space="preserve">
          <source>NOTE: initially present devices still need to be explicitly added to the create/run command</source>
          <target state="translated">注意:最初に存在するデバイスは、作成/実行コマンドに明示的に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="18c483d570afdd90f0cbe943ed909635246cc964" translate="yes" xml:space="preserve">
          <source>NWe include a remote trust service and a database storage type to demonstrate how environment variables can override configuration parameters.</source>
          <target state="translated">Nリモート・トラスト・サービスとデータベース・ストレージ・タイプを使用して、環境変数が設定パラメータをどのようにオーバーライドできるかを実証します。</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="fa3a18074226cac08a7318659b7d1b9dcb5c2e52" translate="yes" xml:space="preserve">
          <source>Name (--name)</source>
          <target state="translated">名前 (--名前)</target>
        </trans-unit>
        <trans-unit id="c0d42a8520549d28bde339998e38fc28a12c8c8b" translate="yes" xml:space="preserve">
          <source>Name and optionally a tag in the &amp;lsquo;name:tag&amp;rsquo; format</source>
          <target state="translated">名前、およびオプションで「name：tag」形式のタグ</target>
        </trans-unit>
        <trans-unit id="65f18292226721b5555f684ab68341369abec5e0" translate="yes" xml:space="preserve">
          <source>Name for the loaded key</source>
          <target state="translated">読み込んだキーの名前</target>
        </trans-unit>
        <trans-unit id="f8c33ddbee31340a81a4ad72d323d9cb85ccaaf1" translate="yes" xml:space="preserve">
          <source>Name of the Dockerfile (Default is &amp;lsquo;PATH/Dockerfile&amp;rsquo;)</source>
          <target state="translated">Dockerfileの名前（デフォルトは「PATH / Dockerfile」）</target>
        </trans-unit>
        <trans-unit id="efdb093ed35f4754e1e3f79287162bf5b5f2f2d1" translate="yes" xml:space="preserve">
          <source>Name of the volume-driver plugin to use for the volume. Defaults to</source>
          <target state="translated">ボリュームに使用するボリュームドライバプラグインの名前。デフォルトは</target>
        </trans-unit>
        <trans-unit id="1fa3d1039f5e7670a5ffdd89b3a73785adb65e56" translate="yes" xml:space="preserve">
          <source>Name, shorthand</source>
          <target state="translated">名前、略語</target>
        </trans-unit>
        <trans-unit id="8a29a693635ff053d60f13d45c498d4748366dda" translate="yes" xml:space="preserve">
          <source>Named &lt;a href=&quot;../compose-file-v2/index#volume-configuration-reference&quot;&gt;volumes&lt;/a&gt; can be declared under the &lt;code&gt;volumes&lt;/code&gt; key, and &lt;a href=&quot;../compose-file-v2/index#network-configuration-reference&quot;&gt;networks&lt;/a&gt; can be declared under the &lt;code&gt;networks&lt;/code&gt; key.</source>
          <target state="translated">名前付き&lt;a href=&quot;../compose-file-v2/index#volume-configuration-reference&quot;&gt;のボリュームが&lt;/a&gt;下に宣言することができる &lt;code&gt;volumes&lt;/code&gt; キー、および&lt;a href=&quot;../compose-file-v2/index#network-configuration-reference&quot;&gt;ネットワークが&lt;/a&gt;下に宣言することができる &lt;code&gt;networks&lt;/code&gt; キー。</target>
        </trans-unit>
        <trans-unit id="18968e128cc1700bdb88c59bc81fb9e50422f360" translate="yes" xml:space="preserve">
          <source>Names of the networks attached to this container.</source>
          <target state="translated">このコンテナに接続されているネットワークの名前。</target>
        </trans-unit>
        <trans-unit id="b54976080a8f9f2a48c3af0d58716abaaf956c8b" translate="yes" xml:space="preserve">
          <source>Names of the volumes mounted in this container.</source>
          <target state="translated">このコンテナにマウントされているボリュームの名前。</target>
        </trans-unit>
        <trans-unit id="0449e1003dd0cdd92ab163e844540614258e8b38" translate="yes" xml:space="preserve">
          <source>Namespace</source>
          <target state="translated">Namespace</target>
        </trans-unit>
        <trans-unit id="117a667ff0c64e26e679810f1e7a105c8edb7f5d" translate="yes" xml:space="preserve">
          <source>Namespace isolation only.</source>
          <target state="translated">名前空間の分離のみ。</target>
        </trans-unit>
        <trans-unit id="b5ac620ce518081217aad94247bfffb1b7cea151" translate="yes" xml:space="preserve">
          <source>Netshare plugin</source>
          <target state="translated">Netshareプラグイン</target>
        </trans-unit>
        <trans-unit id="53ebc572b4a44802ba114729f07bdaaf5409a9d7" translate="yes" xml:space="preserve">
          <source>Network</source>
          <target state="translated">Network</target>
        </trans-unit>
        <trans-unit id="0a3cc0d3967af3a4a2ce3debb6f49ac54bbc6c70" translate="yes" xml:space="preserve">
          <source>Network ID</source>
          <target state="translated">ネットワークID</target>
        </trans-unit>
        <trans-unit id="8baad1cbc284c12f56ea33b670eb34325f6b8199" translate="yes" xml:space="preserve">
          <source>Network IO</source>
          <target state="translated">ネットワークIO</target>
        </trans-unit>
        <trans-unit id="96c1204e5bdf557b4758a5c227378af4fd1e4baf" translate="yes" xml:space="preserve">
          <source>Network attachments</source>
          <target state="translated">ネットワークの添付ファイル</target>
        </trans-unit>
        <trans-unit id="167bc25bedd90a2e13c74d4d83597339d7fdab34" translate="yes" xml:space="preserve">
          <source>Network configuration reference</source>
          <target state="translated">ネットワーク構成リファレンス</target>
        </trans-unit>
        <trans-unit id="35aa5aad6b0c9ad6328f38fe72b3bd771502da1c" translate="yes" xml:space="preserve">
          <source>Network driver</source>
          <target state="translated">ネットワークドライバ</target>
        </trans-unit>
        <trans-unit id="8cfa0ea99a9b82d6628de987b0deee821e48e566" translate="yes" xml:space="preserve">
          <source>Network implications of stopping, pausing, or restarting containers</source>
          <target state="translated">コンテナの停止、一時停止、再起動のネットワークへの影響</target>
        </trans-unit>
        <trans-unit id="6b090a7a0a1f781c60ebe095f4f99630c7c704a9" translate="yes" xml:space="preserve">
          <source>Network ingress mode</source>
          <target state="translated">ネットワークイングレスモード</target>
        </trans-unit>
        <trans-unit id="84f8b556b30a3fd21cd79a5f2533917f840f443f" translate="yes" xml:space="preserve">
          <source>Network internal mode</source>
          <target state="translated">ネットワーク内部モード</target>
        </trans-unit>
        <trans-unit id="7aade3cb20bac3d51aa3479095ea9192d988bd33" translate="yes" xml:space="preserve">
          <source>Network mode. Use the same values as the docker client &lt;code&gt;--net&lt;/code&gt; parameter, plus the special form &lt;code&gt;service:[service name]&lt;/code&gt;.</source>
          <target state="translated">ネットワークモード。 &lt;code&gt;--net&lt;/code&gt; client --netパラメーターと同じ値に加えて、特殊な形式 &lt;code&gt;service:[service name]&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="ba58a6be58c603cdd3b1b52d4cef98c772990b3b" translate="yes" xml:space="preserve">
          <source>Network mode. Use the same values as the docker client &lt;code&gt;--net&lt;/code&gt; parameter. The &lt;code&gt;container:...&lt;/code&gt; form can take a service name instead of a container name or id.</source>
          <target state="translated">ネットワークモード。 &lt;code&gt;--net&lt;/code&gt; client --netパラメーターと同じ値を使用します。 &lt;code&gt;container:...&lt;/code&gt; フォームは、サービス名の代わりに、コンテナ名またはIDを取ることができます。</target>
        </trans-unit>
        <trans-unit id="f368f8e9d0b932c508cca5bb69a0168f28fb6de6" translate="yes" xml:space="preserve">
          <source>Network mode. Use the same values as the docker client &lt;code&gt;--network&lt;/code&gt; parameter, plus the special form &lt;code&gt;service:[service name]&lt;/code&gt;.</source>
          <target state="translated">ネットワークモード。docker client &lt;code&gt;--network&lt;/code&gt; パラメーターと同じ値に加えて、特殊な形式の &lt;code&gt;service:[service name]&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="a5b4702201b4664d10d25eb8965c93e110a9c62c" translate="yes" xml:space="preserve">
          <source>Network name</source>
          <target state="translated">ネットワーク名</target>
        </trans-unit>
        <trans-unit id="6eb454694b246b6b9c739f45ec44537cc54602d3" translate="yes" xml:space="preserve">
          <source>Network names must be unique. The Docker daemon attempts to identify naming conflicts but this is not guaranteed. It is the user&amp;rsquo;s responsibility to avoid name conflicts.</source>
          <target state="translated">ネットワーク名は一意である必要があります。Dockerデーモンは名前の競合を識別しようとしますが、これは保証されていません。名前の競合を回避するのはユーザーの責任です。</target>
        </trans-unit>
        <trans-unit id="fddefdacfa6d4b3cec136db3f8013973e48b973a" translate="yes" xml:space="preserve">
          <source>Network plugin protocol</source>
          <target state="translated">ネットワークプラグインプロトコル</target>
        </trans-unit>
        <trans-unit id="32916143a353219e82281e4ef7bb794c89001a31" translate="yes" xml:space="preserve">
          <source>Network plugins</source>
          <target state="translated">ネットワークプラグイン</target>
        </trans-unit>
        <trans-unit id="0d5a11f0c10edd2b2ab98d3d184edd4f2a778321" translate="yes" xml:space="preserve">
          <source>Network plugins and swarm mode</source>
          <target state="translated">ネットワークプラグインとスウォームモード</target>
        </trans-unit>
        <trans-unit id="fcdf1dd47fc0b42ab6625050371361d5046ccc50" translate="yes" xml:space="preserve">
          <source>Network plugins are written by third parties, and are published by those third parties, either on &lt;a href=&quot;https://store.docker.com/search?category=network&amp;amp;q=&amp;amp;type=plugin&quot;&gt;Docker Store&lt;/a&gt; or on the third party&amp;rsquo;s site.</source>
          <target state="translated">ネットワークプラグインはサードパーティによって作成され、&lt;a href=&quot;https://store.docker.com/search?category=network&amp;amp;q=&amp;amp;type=plugin&quot;&gt;Docker Store&lt;/a&gt;またはサードパーティのサイトでこれらのサードパーティによって公開されます。</target>
        </trans-unit>
        <trans-unit id="8467c079abae3169326f67640f6bad10aa1e2071" translate="yes" xml:space="preserve">
          <source>Network plugins implement the &lt;a href=&quot;../plugin_api/index&quot;&gt;Docker plugin API&lt;/a&gt; and the network plugin protocol</source>
          <target state="translated">ネットワークプラグインは、&lt;a href=&quot;../plugin_api/index&quot;&gt;DockerプラグインAPI&lt;/a&gt;とネットワークプラグインプロトコルを実装します</target>
        </trans-unit>
        <trans-unit id="f6d36e60f925e856446ee20a386b06b76ad9629a" translate="yes" xml:space="preserve">
          <source>Network scope (local, global)</source>
          <target state="translated">ネットワークの範囲(ローカル、グローバル</target>
        </trans-unit>
        <trans-unit id="e5f8b762c250cf3c96a82100eea54a1d276d390a" translate="yes" xml:space="preserve">
          <source>Network settings</source>
          <target state="translated">ネットワーク設定</target>
        </trans-unit>
        <trans-unit id="3564e7d4b2accdec337d0880198fce2f38d983f8" translate="yes" xml:space="preserve">
          <source>Network: bridge</source>
          <target state="translated">ネットワーク:ブリッジ</target>
        </trans-unit>
        <trans-unit id="5d12cbd392a8a73722dc3e5b2b977a561cb19028" translate="yes" xml:space="preserve">
          <source>Network: container</source>
          <target state="translated">ネットワーク:コンテナ</target>
        </trans-unit>
        <trans-unit id="37c130287db9670ce7398782e5e587d2890fbb9e" translate="yes" xml:space="preserve">
          <source>Network: host</source>
          <target state="translated">ネットワーク:ホスト</target>
        </trans-unit>
        <trans-unit id="3efaaf97c6e312648e58b0fe6987ecf924673093" translate="yes" xml:space="preserve">
          <source>Network: none</source>
          <target state="translated">ネットワーク:なし</target>
        </trans-unit>
        <trans-unit id="be484398a70d567ad075797b2899557f4448c1c0" translate="yes" xml:space="preserve">
          <source>Networking in Compose</source>
          <target state="translated">コンポーズでのネットワーキング</target>
        </trans-unit>
        <trans-unit id="e931cb5b030b0b23b76dc4c2cda72c59d8286727" translate="yes" xml:space="preserve">
          <source>Networks</source>
          <target state="translated">Networks</target>
        </trans-unit>
        <trans-unit id="18f84c1c489b7cd21f6dad6352f11fc31d83525c" translate="yes" xml:space="preserve">
          <source>Networks &lt;code&gt;[]string&lt;/code&gt;</source>
          <target state="translated">ネットワーク &lt;code&gt;[]string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca73ef28e59159a1eec600baf211c40ee0328de0" translate="yes" xml:space="preserve">
          <source>Networks and volumes defined as &lt;code&gt;external&lt;/code&gt; are never removed.</source>
          <target state="translated">&lt;code&gt;external&lt;/code&gt; として定義されたネットワークとボリュームは決して削除されません。</target>
        </trans-unit>
        <trans-unit id="a1488c7592780bc2bddd9bfa66fbb9c8877e6322" translate="yes" xml:space="preserve">
          <source>Networks can also be given a &lt;a href=&quot;../compose-file/index#name-1&quot;&gt;custom name&lt;/a&gt; (since version 3.5):</source>
          <target state="translated">ネットワークには&lt;a href=&quot;../compose-file/index#name-1&quot;&gt;カスタム名を付ける&lt;/a&gt;こともできます（バージョン3.5以降）：</target>
        </trans-unit>
        <trans-unit id="5a9347be96119f963b20d8e4624030bc2cfe50f4" translate="yes" xml:space="preserve">
          <source>Networks can be configured with static IP addresses by setting the &lt;a href=&quot;../compose-file/compose-file-v2/index#ipv4-address-ipv6-address&quot;&gt;ipv4_address and/or ipv6_address&lt;/a&gt; for each attached network.</source>
          <target state="translated">接続されているネットワークごとに&lt;a href=&quot;../compose-file/compose-file-v2/index#ipv4-address-ipv6-address&quot;&gt;ipv4_addressやipv6_addressを&lt;/a&gt;設定することにより、ネットワークに静的IPアドレスを設定できます。</target>
        </trans-unit>
        <trans-unit id="f46dc0e6e735c3a9b30f608ddf276ef327ba8c34" translate="yes" xml:space="preserve">
          <source>Networks defined in the &lt;code&gt;networks&lt;/code&gt; section of the Compose file</source>
          <target state="translated">Composeファイルの &lt;code&gt;networks&lt;/code&gt; セクションで定義されたネットワーク</target>
        </trans-unit>
        <trans-unit id="620542cfb14105c061a649409afc05719d5aa6bf" translate="yes" xml:space="preserve">
          <source>Networks that the service containers should be connected to. An entity deploying a bundle should create networks as needed.</source>
          <target state="translated">サービスコンテナが接続すべきネットワーク。バンドルをデプロイするエンティティは、必要に応じてネットワークを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="0bdea07641e36036e56d89fe7614b6bd8eba1aa7" translate="yes" xml:space="preserve">
          <source>Networks to join, referencing entries under the &lt;a href=&quot;#network-configuration-reference&quot;&gt;top-level &lt;code&gt;networks&lt;/code&gt; key&lt;/a&gt;.</source>
          <target state="translated">参加する&lt;a href=&quot;#network-configuration-reference&quot;&gt; &lt;code&gt;networks&lt;/code&gt; &lt;/a&gt;。トップレベルネットワークキーの下のエントリを参照します。</target>
        </trans-unit>
        <trans-unit id="2e51ecf0ef706a7e3573a5caadea3c8ad03351e0" translate="yes" xml:space="preserve">
          <source>New collections created by a Docker 1.11 Engine client cause the server manage to the snapshot key by default. To reclaim control of the snapshot key on the client, use the &lt;code&gt;notary key rotate&lt;/code&gt; command without the &lt;code&gt;-r&lt;/code&gt; flag.</source>
          <target state="translated">Docker 1.11 Engineクライアントによって作成された新しいコレクションにより、サーバーはデフォルトでスナップショットキーを管理します。クライアントでスナップショットキーの制御を取り戻すには、 &lt;code&gt;-r&lt;/code&gt; フラグを付けずにnotary &lt;code&gt;notary key rotate&lt;/code&gt; コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="88f9460cdba223a64badee58be920b07fb4009dc" translate="yes" xml:space="preserve">
          <source>Next we will need to add the delegation public key to the Notary server; this is specific to a particular image repository in Notary known as a Global Unique Name (GUN). If this is the first time you are adding a delegation to that repository, this command will also initiate the repository, using a local Notary canonical root key. To understand more about initiating a repository, and the role of delegations, head to &lt;a href=&quot;../trust_delegation/index#managing-delegations-in-a-notary-server&quot;&gt;delegations for content trust&lt;/a&gt;.</source>
          <target state="translated">次に、委任公開鍵をNotaryサーバーに追加する必要があります。これは、Global Unique Name（GUN）として知られるNotaryの特定のイメージリポジトリに固有です。初めて委任をそのリポジトリに追加するのが初めての場合、このコマンドはローカルのNotary正規ルートキーを使用してリポジトリも開始します。リポジトリの開始と委任の役割について詳しく理解するには&lt;a href=&quot;../trust_delegation/index#managing-delegations-in-a-notary-server&quot;&gt;、コンテンツの信頼に関する&lt;/a&gt;委任に進んでください。</target>
        </trans-unit>
        <trans-unit id="be0c3a9ca09954ad383f644fe4dbce7914f476be" translate="yes" xml:space="preserve">
          <source>Next, create a bootstrap &lt;code&gt;Gemfile&lt;/code&gt; which just loads Rails. It&amp;rsquo;ll be overwritten in a moment by &lt;code&gt;rails new&lt;/code&gt;.</source>
          <target state="translated">次に、Railsをロードするだけのブートストラップ &lt;code&gt;Gemfile&lt;/code&gt; を作成します。 &lt;code&gt;rails new&lt;/code&gt; によってすぐに上書きされます。</target>
        </trans-unit>
        <trans-unit id="d864baa3671c53b36acf459bbaa5bd02cd9f88d2" translate="yes" xml:space="preserve">
          <source>Next, execute a command on the container.</source>
          <target state="translated">次に、コンテナ上でコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="c1e9bf67beda1e60e925fd792fbd4cdc38a04db0" translate="yes" xml:space="preserve">
          <source>Next, execute an interactive &lt;code&gt;bash&lt;/code&gt; shell on the container.</source>
          <target state="translated">次に、コンテナでインタラクティブ &lt;code&gt;bash&lt;/code&gt; シェルを実行します。</target>
        </trans-unit>
        <trans-unit id="d71be7a9fc4d22e943beae9d489b100c2cefb81c" translate="yes" xml:space="preserve">
          <source>Next, learn about how to &lt;a href=&quot;../drain-node/index&quot;&gt;drain a node&lt;/a&gt; in the swarm.</source>
          <target state="translated">次に、スウォーム内の&lt;a href=&quot;../drain-node/index&quot;&gt;ノード&lt;/a&gt;をドレインする方法について学びます。</target>
        </trans-unit>
        <trans-unit id="df9f3dba9b9a15590801c21bc8508e5b79dff4e6" translate="yes" xml:space="preserve">
          <source>Next, provide an entrypoint script to fix a Rails-specific issue that prevents the server from restarting when a certain &lt;code&gt;server.pid&lt;/code&gt; file pre-exists. This script will be executed every time the container gets started. &lt;code&gt;entrypoint.sh&lt;/code&gt; consists of:</source>
          <target state="translated">次に、特定の &lt;code&gt;server.pid&lt;/code&gt; ファイルが既に存在する場合にサーバーが再起動しないようにするRails固有の問題を修正するためのエントリポイントスクリプトを提供します。このスクリプトは、コンテナが起動するたびに実行されます。 &lt;code&gt;entrypoint.sh&lt;/code&gt; は以下で構成されます。</target>
        </trans-unit>
        <trans-unit id="f7f34dbc99394babd2ab430691aafe0c48b016ca" translate="yes" xml:space="preserve">
          <source>Next, set an environment variable in the current bash session.</source>
          <target state="translated">次に、現在のbashセッションに環境変数を設定します。</target>
        </trans-unit>
        <trans-unit id="86392ec1c9e3e6cb524e5d751f4c215c12d606cf" translate="yes" xml:space="preserve">
          <source>Next, try the quick start guide for &lt;a href=&quot;../django/index&quot;&gt;Django&lt;/a&gt;, &lt;a href=&quot;../rails/index&quot;&gt;Rails&lt;/a&gt;, or &lt;a href=&quot;https://docs.docker.com/samples/library/wordpress/&quot;&gt;WordPress&lt;/a&gt;</source>
          <target state="translated">次に、&lt;a href=&quot;../django/index&quot;&gt;Django&lt;/a&gt;、&lt;a href=&quot;../rails/index&quot;&gt;Rails&lt;/a&gt;、または&lt;a href=&quot;https://docs.docker.com/samples/library/wordpress/&quot;&gt;WordPress&lt;/a&gt;のクイックスタートガイドをお試しください</target>
        </trans-unit>
        <trans-unit id="85607956e4c196d071593872cdc088a63ced9728" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;re going to sign the public key with our CA:</source>
          <target state="translated">次に、CAで公開鍵に署名します。</target>
        </trans-unit>
        <trans-unit id="d6cb807a024758b7ab671e44846b9b97caa4bfe1" translate="yes" xml:space="preserve">
          <source>Next, you can &lt;a href=&quot;../scale-service/index&quot;&gt;change the scale&lt;/a&gt; for the service running in the swarm.</source>
          <target state="translated">次に、スウォームで実行されているサービス&lt;a href=&quot;../scale-service/index&quot;&gt;のスケール&lt;/a&gt;を変更できます。</target>
        </trans-unit>
        <trans-unit id="238be3f8155454f1a1aeb8b9315afe1e30c3c724" translate="yes" xml:space="preserve">
          <source>Nginx example profile</source>
          <target state="translated">Nginx のプロファイル例</target>
        </trans-unit>
        <trans-unit id="60852cedd43d2d58e10dc1710719289417d70c62" translate="yes" xml:space="preserve">
          <source>Nimble Storage Volume Plugin</source>
          <target state="translated">Nimble Storage Volumeプラグイン</target>
        </trans-unit>
        <trans-unit id="6399f9053c8784cf12c6ba054ac5c49836b7ca23" translate="yes" xml:space="preserve">
          <source>No ENTRYPOINT</source>
          <target state="translated">エントリーポイントなし</target>
        </trans-unit>
        <trans-unit id="1fac2d9e8e1390366efe91bb0c10387109ea5e97" translate="yes" xml:space="preserve">
          <source>No markdown files are included in the context except README files other than &lt;code&gt;README-secret.md&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;README-secret.md&lt;/code&gt; 以外のREADMEファイルを除いて、マークダウンファイルはコンテキストに含まれません。</target>
        </trans-unit>
        <trans-unit id="a38123105e3af48cf78a01e05911f47ef41a8121" translate="yes" xml:space="preserve">
          <source>No matter where &lt;code&gt;docker run&lt;/code&gt; executes, it pulls your image, along with Python and all the dependencies from &lt;code&gt;requirements.txt&lt;/code&gt;, and runs your code. It all travels together in a neat little package, and you don&amp;rsquo;t need to install anything on the host machine for Docker to run it.</source>
          <target state="translated">&lt;code&gt;docker run&lt;/code&gt; がどこで実行されるかに関係なく、Pythonとすべての依存関係とともに、 &lt;code&gt;requirements.txt&lt;/code&gt; からイメージをプルし、コードを実行します。それはすべて、きちんとした小さなパッケージで一緒に移動し、Dockerを実行するためにホストマシンに何もインストールする必要はありません。</target>
        </trans-unit>
        <trans-unit id="0f6e3d6b7da8a3567b8e29e22a615f119b7ebf97" translate="yes" xml:space="preserve">
          <source>No networking in the container.</source>
          <target state="translated">コンテナ内にネットワークはありません。</target>
        </trans-unit>
        <trans-unit id="31ef4328a40d9038cfc997a8c36bed85e2e315d4" translate="yes" xml:space="preserve">
          <source>No other keys are needed, since the attacker can just any rotate or all of them to ones that they generate. With these keys, they can set up a mirror to serve malicious data - any malicious data at all, given that they have access to all the keys.</source>
          <target state="translated">攻撃者は、自分が生成したものにそれらのすべてを回転させることができるので、他のキーは必要ありません。これらの鍵を使えば、悪意のあるデータを提供するためにミラーをセットアップすることができる。</target>
        </trans-unit>
        <trans-unit id="7f0bbd3d2b33bac92d611cbcb4083565b0d4c06b" translate="yes" xml:space="preserve">
          <source>No path expansion is done if you have also specified a &lt;code&gt;volume_driver&lt;/code&gt;. For example, if you specify a mapping of &lt;code&gt;./foo:/data&lt;/code&gt;, the &lt;code&gt;./foo&lt;/code&gt; part is passed straight to the volume driver without being expanded.</source>
          <target state="translated">&lt;code&gt;volume_driver&lt;/code&gt; も指定した場合、パスの拡張は行われません。たとえば、./ &lt;code&gt;./foo:/data&lt;/code&gt; : / dataのマッピングを指定した場合、. &lt;code&gt;./foo&lt;/code&gt; 部分は展開されずに直接ボリュームドライバーに渡されます。</target>
        </trans-unit>
        <trans-unit id="d194595d3a38fe9dbfc9ad36f97dbfb397d2f2f4" translate="yes" xml:space="preserve">
          <source>No value indicates a worker node that does not participate in swarm management.</source>
          <target state="translated">値がない場合は、スウォーム管理に参加していないワーカーノードを示します。</target>
        </trans-unit>
        <trans-unit id="03cd78554aa5d97f60726ab2767d5b03be8344a7" translate="yes" xml:space="preserve">
          <source>Node Generic Resources</source>
          <target state="translated">ノード汎用リソース</target>
        </trans-unit>
        <trans-unit id="d9bcd10ae0282fcbf46ad9fd0bf1874a5bd2ef06" translate="yes" xml:space="preserve">
          <source>Node Hostname</source>
          <target state="translated">ノード ホスト名</target>
        </trans-unit>
        <trans-unit id="30ee552d63e50d10e2c2248120d4a87b66df325c" translate="yes" xml:space="preserve">
          <source>Node ID</source>
          <target state="translated">ノードID</target>
        </trans-unit>
        <trans-unit id="97a2ed4558a69a0f65845995074fbcf40e4e4881" translate="yes" xml:space="preserve">
          <source>Node availability (&amp;ldquo;active&amp;rdquo;, &amp;ldquo;pause&amp;rdquo;, or &amp;ldquo;drain&amp;rdquo;)</source>
          <target state="translated">ノードの可用性（「アクティブ」、「一時停止」、または「ドレイン」）</target>
        </trans-unit>
        <trans-unit id="0f408cf44c0310e65e30764772e6758f0be5b548" translate="yes" xml:space="preserve">
          <source>Node discovery</source>
          <target state="translated">ノードの発見</target>
        </trans-unit>
        <trans-unit id="5de3566e506938021a2d9cdea89a34345ecb95da" translate="yes" xml:space="preserve">
          <source>Node hostname</source>
          <target state="translated">ノードのホスト名</target>
        </trans-unit>
        <trans-unit id="f1c2ab4a0411bd81a10c2a3bf88ecac10876fb92" translate="yes" xml:space="preserve">
          <source>Node labels provide a flexible method of node organization. You can also use node labels in service constraints. Apply constraints when you create a service to limit the nodes where the scheduler assigns tasks for the service.</source>
          <target state="translated">ノードラベルは、ノードの編成の柔軟な方法を提供します。ノードラベルは、サービスの制約でも使用できます。サービスを作成する際に制約を適用して、スケジューラがサービスのタスクを割り当てるノードを制限します。</target>
        </trans-unit>
        <trans-unit id="33caff309067ff7a3190f207fd4cbfe252c4a208" translate="yes" xml:space="preserve">
          <source>Node of the daemon (&lt;code&gt;true/false&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;indicates that the node is the same as current docker daemon)</source>
          <target state="translated">デーモンのノード（ &lt;code&gt;true/false&lt;/code&gt; 、 &lt;code&gt;true&lt;/code&gt; はノードが現在のdockerデーモンと同じであることを示します）</target>
        </trans-unit>
        <trans-unit id="d23a32c64a3fc2816b9f836b53d4c9c8b7d5aeb1" translate="yes" xml:space="preserve">
          <source>Node role</source>
          <target state="translated">ノードの役割</target>
        </trans-unit>
        <trans-unit id="70c248daad57d36ae1df7530a676ad77bcc00952" translate="yes" xml:space="preserve">
          <source>Node status</source>
          <target state="translated">ノードの状態</target>
        </trans-unit>
        <trans-unit id="9e325452c6548fc2449564842660d75ef3b1eb73" translate="yes" xml:space="preserve">
          <source>Nodes</source>
          <target state="translated">Nodes</target>
        </trans-unit>
        <trans-unit id="17f74cb809ac518a0c64cd7486e589deeef1ecdb" translate="yes" xml:space="preserve">
          <source>Nodes require a secret token to join the swarm. The token for worker nodes is different from the token for manager nodes. Nodes only use the join-token at the moment they join the swarm. Rotating the join token after a node has already joined a swarm does not affect the node&amp;rsquo;s swarm membership. Token rotation ensures an old token cannot be used by any new nodes attempting to join the swarm.</source>
          <target state="translated">ノードがスウォームに参加するには、シークレットトークンが必要です。ワーカーノードのトークンは、マネージャーノードのトークンとは異なります。ノードは、スウォームに参加するときにのみ結合トークンを使用します。ノードがすでにswarmに参加した後にjoinトークンを回転しても、ノードのswarmメンバーシップには影響しません。トークンのローテーションにより、群れに加わろうとする新しいノードが古いトークンを使用できないようにします。</target>
        </trans-unit>
        <trans-unit id="fc9016d789b5baac4302ce4bd3ab6986fa0c1543" translate="yes" xml:space="preserve">
          <source>Nodes which are missing the label used to spread still receive task assignments. As a group, these nodes receive tasks in equal proportion to any of the other groups identified by a specific label value. In a sense, a missing label is the same as having the label with a null value attached to it. If the service should &lt;strong&gt;only&lt;/strong&gt; run on nodes with the label being used for the spread preference, the preference should be combined with a constraint.</source>
          <target state="translated">展開に使用されたラベルが欠落しているノードは、引き続きタスク割り当てを受け取ります。グループとして、これらのノードは、特定のラベル値によって識別される他のグループのいずれかに等しい割合でタスクを受け取ります。ある意味では、ラベルが欠落しているということは、ラベルにnull値が付加されていることと同じです。ラベルがスプレッド設定に使用されているノードで&lt;strong&gt;のみ&lt;/strong&gt;サービスを実行する必要がある場合は、設定を制約と組み合わせる必要があります。</target>
        </trans-unit>
        <trans-unit id="44b104392f496c73ef0862d47b81a1a25d2cfa51" translate="yes" xml:space="preserve">
          <source>Non line-breaking whitespace is permitted in a parser directive. Hence, the following lines are all treated identically:</source>
          <target state="translated">パーサディレクティブでは、改行しないホワイトスペースが許可されています。したがって、以下の行はすべて同じように扱われます。</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="48cec5b8c3c36a4eac8509bef7910ad467642df4" translate="yes" xml:space="preserve">
          <source>Normally, updating a service will only cause the service&amp;rsquo;s tasks to be replaced with new ones if a change to the service requires recreating the tasks for it to take effect. For example, only changing the &lt;code&gt;--update-parallelism&lt;/code&gt; setting will not recreate the tasks, because the individual tasks are not affected by this setting. However, the &lt;code&gt;--force&lt;/code&gt; flag will cause the tasks to be recreated anyway. This can be used to perform a rolling restart without any changes to the service parameters.</source>
          <target state="translated">通常、サービスを更新しても、サービスの変更を有効にするにはタスクの再作成が必要な場合にのみ、サービスのタスクが新しいタスクに置き換えられます。たとえば、個々のタスクはこの設定の影響を受けないため、 &lt;code&gt;--update-parallelism&lt;/code&gt; 設定を変更するだけではタスクは再作成されません。ただし、 &lt;code&gt;--force&lt;/code&gt; フラグを使用すると、タスクが再作成されます。これを使用して、サービスパラメータを変更せずにローリングリスタートを実行できます。</target>
        </trans-unit>
        <trans-unit id="f3a561a666d179ca85f5eca5281a4cc29dc561d4" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
          <target state="translated">該当しません。</target>
        </trans-unit>
        <trans-unit id="f13d3310c3b9d55f01410d93cb630fd4e6bf4ea9" translate="yes" xml:space="preserve">
          <source>Not possible to set using short syntax.</source>
          <target state="translated">短い構文では設定できません。</target>
        </trans-unit>
        <trans-unit id="fe5fd3defe6de12664b502e100fb837128c517d1" translate="yes" xml:space="preserve">
          <source>Not supported for &lt;code&gt;docker stack deploy&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;docker stack deploy&lt;/code&gt; はサポートされていません</target>
        </trans-unit>
        <trans-unit id="5ed79bdaba84564136166caaf0df7f080287e215" translate="yes" xml:space="preserve">
          <source>Not supported for version 2 &lt;code&gt;docker-compose&lt;/code&gt; files. Use &lt;a href=&quot;#network_mode&quot;&gt;network_mode&lt;/a&gt; instead.</source>
          <target state="translated">バージョン2の &lt;code&gt;docker-compose&lt;/code&gt; ファイルではサポートされていません。代わりに&lt;a href=&quot;#network_mode&quot;&gt;network_mode&lt;/a&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="c18043740e10cfe580ee92182ccc51157b710f59" translate="yes" xml:space="preserve">
          <source>Not supported in Compose File version 3</source>
          <target state="translated">Compose File バージョン 3 ではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="f8425dd90bdc24493968502b375350be12832f07" translate="yes" xml:space="preserve">
          <source>Notary</source>
          <target state="translated">Notary</target>
        </trans-unit>
        <trans-unit id="9f23ac875f928053c24e9643c158d4e7ead9e0dc" translate="yes" xml:space="preserve">
          <source>Notary Canonical Root Key ID (DCT Root Key) is an ID that describes &lt;em&gt;just&lt;/em&gt; the root key used to sign a repository (or rather its respective keys). This is the root key on the host that originally signed the repository (i.e. your workstation). This can be retrieved from the workstation that signed the repository through &lt;code&gt;$ grep -r &quot;root&quot; ~/.docker/trust/private/&lt;/code&gt; (Assuming your trust data is at &lt;code&gt;~/.docker/trust/*&lt;/code&gt;). It is expected that this canonical ID has initiated multiple image repositories (&lt;code&gt;mydtr/user1/image1&lt;/code&gt; and &lt;code&gt;mydtr/user1/image2&lt;/code&gt;).</source>
          <target state="translated">公証正規ルートキーID（DCTルートキー）は、リポジトリの署名に使用されるルートキー（またはそのそれぞれのキー）&lt;em&gt;のみ&lt;/em&gt;を表すIDです。これは、最初にリポジトリに署名したホスト（ワークステーションなど）のルートキーです。これは、 &lt;code&gt;$ grep -r &quot;root&quot; ~/.docker/trust/private/&lt;/code&gt; を介してリポジトリに署名したワークステーションから取得できます（信頼データが &lt;code&gt;~/.docker/trust/*&lt;/code&gt; と想定）。この正規IDが複数のイメージリポジトリ（ &lt;code&gt;mydtr/user1/image1&lt;/code&gt; および &lt;code&gt;mydtr/user1/image2&lt;/code&gt; ）を開始したことが予想されます。</target>
        </trans-unit>
        <trans-unit id="b1e23773d2db943d17d33f1b60837b2b715f0a73" translate="yes" xml:space="preserve">
          <source>Notary Client Configuration File</source>
          <target state="translated">公証人クライアント設定ファイル</target>
        </trans-unit>
        <trans-unit id="db4c0f3212971f1e2f9cb9a9452a6575b05a3674" translate="yes" xml:space="preserve">
          <source>Notary Root key ID (DCT Certificate ID) is an ID that describes the same, but the ID is unique per repository. For example, &lt;code&gt;mydtr/user1/image1&lt;/code&gt; and &lt;code&gt;mydtr/usr1/image2&lt;/code&gt; will have unique certificate IDs. A certificate ID can be retrieved through a &lt;code&gt;$ docker trust inspect&lt;/code&gt; command and is labelled as a root-key (referring back to the Notary key name). This is designed for when different users are signing their own repositories, for example, when there is no central signing server. As a cert-id is more granular, it would take priority if a conflict occurs over a root ID.</source>
          <target state="translated">公証ルートキーID（DCT証明書ID）は、それを記述するIDですが、IDはリポジトリごとに一意です。たとえば、 &lt;code&gt;mydtr/user1/image1&lt;/code&gt; と &lt;code&gt;mydtr/usr1/image2&lt;/code&gt; には一意の証明書IDがあります。証明書IDは、 &lt;code&gt;$ docker trust inspect&lt;/code&gt; コマンドを介して取得でき、ルートキー（Notaryキー名を参照）としてラベル付けされます。これは、中央の署名サーバーがない場合など、さまざまなユーザーが自分のリポジトリに署名する場合のために設計されています。 cert-idの方が細かいため、ルートIDで競合が発生した場合に優先されます。</target>
        </trans-unit>
        <trans-unit id="2353d50d9ad55e59211ddd641d5913ce406c0c1e" translate="yes" xml:space="preserve">
          <source>Notary Server Configuration File</source>
          <target state="translated">公証人サーバ設定ファイル</target>
        </trans-unit>
        <trans-unit id="2d324b7b0ff34981b45dcfc57a72c4cb955df56b" translate="yes" xml:space="preserve">
          <source>Notary Signer Configuration File</source>
          <target state="translated">公証人設定ファイル</target>
        </trans-unit>
        <trans-unit id="03ba794233cbf9d9c89193a8dda6e64a7a401e81" translate="yes" xml:space="preserve">
          <source>Notary can be used with &lt;a href=&quot;https://www.yubico.com/products/yubikey-hardware/yubikey4/&quot;&gt;Yubikey 4&lt;/a&gt; keys, via a PKCS11 interface when the Yubikey has CCID mode enabled. The Yubikey is prioritized to store root keys, and requires user touch-input for signing. Yubikey support is included with the Docker Engine 1.11 client for use with Docker Content Trust.</source>
          <target state="translated">YubikeyでCCIDモードが有効になっている場合、PKCS11インターフェースを介して、&lt;a href=&quot;https://www.yubico.com/products/yubikey-hardware/yubikey4/&quot;&gt;Yarykey 4&lt;/a&gt;キーでNotaryを使用できます。Yubikeyはルートキーを保存するために優先され、署名のためにユーザーのタッチ入力を必要とします。Yubikeyサポートは、Docker Content Trustで使用するためにDocker Engine 1.11クライアントに含まれています。</target>
        </trans-unit>
        <trans-unit id="19c141f55a587664a9a3c3435366d68c101c4381" translate="yes" xml:space="preserve">
          <source>Notary can be used with a CDN or other caching system. All GET requests for JSON files may be cached indefinitely &lt;strong&gt;except&lt;/strong&gt; URLs matching:</source>
          <target state="translated">Notaryは、CDNまたは他のキャッシングシステムで使用できます。JSONファイルに対するすべてのGETリクエストは、一致するURL &lt;strong&gt;を除き、&lt;/strong&gt;無期限にキャッシュされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="49fbaaa6a941137bf2f9c27641f53cc80f208760" translate="yes" xml:space="preserve">
          <source>Notary client configuration file</source>
          <target state="translated">公証人クライアント設定ファイル</target>
        </trans-unit>
        <trans-unit id="0f0df0aa3817459ef6e7a5169d055be08fad7156" translate="yes" xml:space="preserve">
          <source>Notary client keys and credentials compromise</source>
          <target state="translated">公証人のクライアントの鍵と資格情報が危うくなる</target>
        </trans-unit>
        <trans-unit id="3a11adbb03247e1aa5cc111d8b07cae7b6afe595" translate="yes" xml:space="preserve">
          <source>Notary clients pull metadata from one or more (remote) Notary services. Some Notary clients push metadata to one or more Notary services.</source>
          <target state="translated">公証人クライアントは、1つ以上の(リモートの)公証人サービスからメタデータをプルします。公証人クライアントの中には、メタデータを一つ以上の公証人サービスにプッシュするものもあります。</target>
        </trans-unit>
        <trans-unit id="b634ca093b4c6fc7ed47a40adc7a6106a114a461" translate="yes" xml:space="preserve">
          <source>Notary configuration files</source>
          <target state="translated">公証人設定ファイル</target>
        </trans-unit>
        <trans-unit id="2cf969b31cdbe5fe9eec8f3bac2009c26e281f70" translate="yes" xml:space="preserve">
          <source>Notary generates and stores signing keys on the host it&amp;rsquo;s running on. This means that the Docker Hub cannot delete tags from the trust data, they must be deleted using the Notary client. You can do this with the &lt;code&gt;notary remove&lt;/code&gt; command. Again, you must direct it to speak to the correct Notary server. Neither you nor the author has permissions to delete tags from the official &lt;code&gt;alpine&lt;/code&gt; repository, so the output below is for demonstration only:</source>
          <target state="translated">公証人はそれが実行されているホストで署名鍵を生成して保存します。つまり、Docker Hubは信頼データからタグを削除できません。Notaryクライアントを使用してタグを削除する必要があります。これは &lt;code&gt;notary remove&lt;/code&gt; コマンドで実行できます。この場合も、正しいNotaryサーバーと通信するように指示する必要があります。あなたも作者も公式の &lt;code&gt;alpine&lt;/code&gt; リポジトリからタグを削除する権限を持っていないので、以下の出力はデモのみです。</target>
        </trans-unit>
        <trans-unit id="bc76fe3c233a265eeed22300549b626aed9c408c" translate="yes" xml:space="preserve">
          <source>Notary is a tool for publishing and managing trusted collections of content. Publishers can digitally sign collections and consumers can verify integrity and origin of content. This ability is built on a straightforward key management and signing interface to create signed collections and configure trusted publishers.</source>
          <target state="translated">公証人は、信頼できるコンテンツのコレクションを公開し、管理するためのツールです。パブリッシャーはコレクションにデジタル署名を行い、消費者はコンテンツの完全性と出所を確認することができます。この機能は、署名済みのコレクションを作成し、信頼できるパブリッシャーを設定するための簡単な鍵管理と署名のインターフェイス上に構築されています。</target>
        </trans-unit>
        <trans-unit id="6e2b899daff0ee1b2e0f219daddb06b87885a7e2" translate="yes" xml:space="preserve">
          <source>Notary is a user/client-based system, and it searches for certificates in the user&amp;rsquo;s home directory, at &lt;code&gt;~/.docker/trust&lt;/code&gt;. To streamline using Notary from the command line, create an alias that maps the user&amp;rsquo;s &lt;code&gt;trust&lt;/code&gt; directory to the system&amp;rsquo;s &lt;code&gt;ca-certificates&lt;/code&gt; directory.</source>
          <target state="translated">Notaryはユーザー/クライアントベースのシステムであり、ユーザーのホームディレクトリ &lt;code&gt;~/.docker/trust&lt;/code&gt; で証明書を検索します。コマンドラインからNotaryを使用して効率化するには、ユーザーの &lt;code&gt;trust&lt;/code&gt; ディレクトリをシステムの &lt;code&gt;ca-certificates&lt;/code&gt; ディレクトリにマップするエイリアスを作成します。</target>
        </trans-unit>
        <trans-unit id="0a490668b5c9ae86a240fbfb02749cfc26bae5b9" translate="yes" xml:space="preserve">
          <source>Notary server</source>
          <target state="translated">公証人サーバー</target>
        </trans-unit>
        <trans-unit id="419d3099c046e02344217ab9a003bf2930dcd014" translate="yes" xml:space="preserve">
          <source>Notary server also allows you to &lt;a href=&quot;index#hot-logging-level-reload&quot;&gt;increase/decrease&lt;/a&gt; the logging level without having to restart.</source>
          <target state="translated">公証サーバーでは、再起動せずにログレベルを&lt;a href=&quot;index#hot-logging-level-reload&quot;&gt;増減&lt;/a&gt;できます。</target>
        </trans-unit>
        <trans-unit id="eed243f9106eef57047270377aeafe62464ca448" translate="yes" xml:space="preserve">
          <source>Notary server and Notary signer communicate over mutually authenticated TLS (using the self-signed testing certs in the repository), and Notary server listens for HTTPS traffic on port 4443.</source>
          <target state="translated">公証人サーバと公証人署名者は、相互に認証された TLS(リポジトリ内の自己署名付きテスト証明書を使用)を介して通信し、公証人サーバはポート 4443 で HTTPS トラフィックをリッスンします。</target>
        </trans-unit>
        <trans-unit id="e76600e4af5eea334b2c7d6d9df0872687be9d93" translate="yes" xml:space="preserve">
          <source>Notary server compromise</source>
          <target state="translated">公証人サーバーの危険性</target>
        </trans-unit>
        <trans-unit id="dc62b9861db8ad276322977c410bea7d5052c886" translate="yes" xml:space="preserve">
          <source>Notary server configuration file</source>
          <target state="translated">公証人サーバ設定ファイル</target>
        </trans-unit>
        <trans-unit id="0b2cc101d3a9e6add8984aaed94ead7850635db9" translate="yes" xml:space="preserve">
          <source>Notary server database user: &lt;code&gt;SELECT, INSERT, UPDATE, DELETE&lt;/code&gt;</source>
          <target state="translated">公証サーバーデータベースユーザー： &lt;code&gt;SELECT, INSERT, UPDATE, DELETE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="edafbfefe994ec424552d598ce63c9652703e14b" translate="yes" xml:space="preserve">
          <source>Notary server is the source of truth for the state of a trusted collection of data, storing both client-uploaded and server-generated metadata in the TUF database. The generated timestamp and snapshot metadata certify that the metadata files the client uploaded are the most recent for that trusted collection.</source>
          <target state="translated">公証人サーバは、信頼されたデータのコレクションの状態の真実のソースであり、クライアントがアップロードしたメタデータとサーバが生成したメタデータの両方をTUFデータベースに格納します。生成されたタイムスタンプとスナップショットのメタデータは、クライアントがアップロードしたメタデータファイルがその信頼されたコレクションの最新のものであることを証明します。</target>
        </trans-unit>
        <trans-unit id="ed617c59b678af3b880d4ba9075cb26e752d8c8d" translate="yes" xml:space="preserve">
          <source>Notary server optionally supports authentication from clients using &lt;a href=&quot;http://jwt.io/&quot;&gt;JWT&lt;/a&gt; tokens. This requires an authorization server that manages access controls, and a cert bundle from this authorization server containing the public key it uses to sign tokens.</source>
          <target state="translated">公証サーバーはオプションで、&lt;a href=&quot;http://jwt.io/&quot;&gt;JWT&lt;/a&gt;トークンを使用したクライアントからの認証をサポートします。これには、アクセス制御を管理する承認サーバーと、トークンの署名に使用する公開鍵を含むこの承認サーバーからの証明書バンドルが必要です。</target>
        </trans-unit>
        <trans-unit id="66d0d9142ddb32d4955731c6f1775e7c734ed548" translate="yes" xml:space="preserve">
          <source>Notary service architecture</source>
          <target state="translated">公証サービスアーキテクチャ</target>
        </trans-unit>
        <trans-unit id="1e27a237572dc33330f238785e304387b393895f" translate="yes" xml:space="preserve">
          <source>Notary signer &lt;a href=&quot;index#environment-variables-required-if-using-mysql&quot;&gt;requires environment variables&lt;/a&gt; to encrypt private keys at rest. It also requires a configuration file, the path to which is specified on the command line using the &lt;code&gt;-config&lt;/code&gt; flag.</source>
          <target state="translated">公証人の署名者&lt;a href=&quot;index#environment-variables-required-if-using-mysql&quot;&gt;は&lt;/a&gt;、保管時に秘密鍵を暗号化するために環境変数を必要とします。コマンドラインで &lt;code&gt;-config&lt;/code&gt; フラグを使用して指定するパスである構成ファイルも必要です。</target>
        </trans-unit>
        <trans-unit id="564d933165b32affdce3b7d5ad64c25d21532adb" translate="yes" xml:space="preserve">
          <source>Notary signer compromise</source>
          <target state="translated">公証人の妥協点</target>
        </trans-unit>
        <trans-unit id="d68347447c95f7745b04ed1be67901ed02af21de" translate="yes" xml:space="preserve">
          <source>Notary signer configuration file</source>
          <target state="translated">公証人署名人設定ファイル</target>
        </trans-unit>
        <trans-unit id="d7ceb3eac2527a5d3b4ee27cfd0b395b74aad249" translate="yes" xml:space="preserve">
          <source>Notary signer database user: &lt;code&gt;SELECT, INSERT, DELETE&lt;/code&gt;</source>
          <target state="translated">公証人の署名者データベースユーザー： &lt;code&gt;SELECT, INSERT, DELETE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3e820fe2768baad3cf1111e411577f14fe166c24" translate="yes" xml:space="preserve">
          <source>Notary signer retrieves the necessary encrypted private keys from its database if available, decrypts the keys, and uses them to sign the metadata. If successful, it sends the signatures back to Notary server.</source>
          <target state="translated">公証人署名者は、必要な暗号化された秘密鍵をデータベースから取得し、その鍵を復号化し、メタデータに署名するためにそれらを使用します。成功した場合、署名をNotaryサーバに送り返す。</target>
        </trans-unit>
        <trans-unit id="3080621d53ae4405865c12cad6617e2e2f7dc108" translate="yes" xml:space="preserve">
          <source>Notary signer stores the private keys in encrypted form. The alias of the passphrase used to encrypt the keys is also stored. In order to encrypt the keys for storage and decrypt the keys for signing, the passphrase must be passed in as an environment variable.</source>
          <target state="translated">公証人は秘密鍵を暗号化して保存する。また、鍵の暗号化に使用したパスフレーズのエイリアスも格納される。保存用の鍵を暗号化し、署名用の鍵を復号化するためには、パスフレーズを環境変数として渡す必要がある。</target>
        </trans-unit>
        <trans-unit id="3d1cade0dba287c88c56d5d364a14c9a6ad22539" translate="yes" xml:space="preserve">
          <source>Notary stores state in its &lt;code&gt;trust_dir&lt;/code&gt; directory, which is &lt;code&gt;~/.notary&lt;/code&gt; by default or usually &lt;code&gt;~/.docker/trust&lt;/code&gt; when enabling docker content trust. Within this directory, &lt;code&gt;trusted_certificates&lt;/code&gt; stores certificates for bootstrapping trust in a collection, &lt;code&gt;tuf&lt;/code&gt; stores TUF metadata and changelists to be applied to a GUN, and &lt;code&gt;private&lt;/code&gt; stores private keys.</source>
          <target state="translated">その中公証人格納状態 &lt;code&gt;trust_dir&lt;/code&gt; のあるディレクトリ、 &lt;code&gt;~/.notary&lt;/code&gt; デフォルトまたは通常によって &lt;code&gt;~/.docker/trust&lt;/code&gt; ドッキングウィンドウの内容の信頼を有効にします。このディレクトリ内で、 &lt;code&gt;trusted_certificates&lt;/code&gt; は信頼をブートストラップするための証明書をコレクションに格納し、 &lt;code&gt;tuf&lt;/code&gt; はTUFメタデータとGUNに適用される変更リストを格納し、 &lt;code&gt;private&lt;/code&gt; ストアは秘密鍵を格納します。</target>
        </trans-unit>
        <trans-unit id="2081c6513b1275fbf4ac08e18d0db98f18a0c08e" translate="yes" xml:space="preserve">
          <source>Notary uses Globally Unique Names (GUNs) to identify trust collections. To enable Notary to run in a multi-tenant fashion, you must use this format when interacting with Docker Hub through the Notary client. When specifying Docker image names for the Notary client, the GUN format is:</source>
          <target state="translated">Notaryでは、トラストコレクションを識別するためにGUN(Globally Unique Names)を使用します。Notaryをマルチテナントで動作させるためには、Notaryクライアントを介してDocker Hubとやりとりする際にこのフォーマットを使用する必要があります。NotaryクライアントでDockerイメージ名を指定する場合、GUNのフォーマットは次のようになります。</target>
        </trans-unit>
        <trans-unit id="d95e87a063ba792a7a9f3076edd7ccdc8383d626" translate="yes" xml:space="preserve">
          <source>Note how the tag defaulted to &lt;code&gt;latest&lt;/code&gt;. The full syntax for the tag option would be something like &lt;code&gt;--tag=friendlyhello:v0.0.1&lt;/code&gt;.</source>
          <target state="translated">タグのデフォルトが &lt;code&gt;latest&lt;/code&gt; に注意してください。tagオプションの完全な構文は、--tag &lt;code&gt;--tag=friendlyhello:v0.0.1&lt;/code&gt; ようになります。</target>
        </trans-unit>
        <trans-unit id="f7a8cc491170a7a61e1d07096a8f54569160f402" translate="yes" xml:space="preserve">
          <source>Note tags that were signed by the removed delegation will need to be resigned by an active delegation</source>
          <target state="translated">削除された代表団によって署名された注記タグは、活性化された代表団によって再署名される必要があります。</target>
        </trans-unit>
        <trans-unit id="fc7da1c9ee8e03c183001b787166338e4f5f79a7" translate="yes" xml:space="preserve">
          <source>Note that each instruction is run independently, and causes a new image to be created - so &lt;code&gt;RUN cd /tmp&lt;/code&gt; will not have any effect on the next instructions.</source>
          <target state="translated">各命令は独立して実行され、新しいイメージが作成されることに注意してください。したがって、 &lt;code&gt;RUN cd /tmp&lt;/code&gt; は次の命令に影響を与えません。</target>
        </trans-unit>
        <trans-unit id="e81a07d720f951ef46d1a6efbb46d185c6538e8e" translate="yes" xml:space="preserve">
          <source>Note that if the container is started with &amp;ldquo;--rm&amp;rdquo; flag, you cannot update the restart policy for it. The &lt;code&gt;AutoRemove&lt;/code&gt; and &lt;code&gt;RestartPolicy&lt;/code&gt; are mutually exclusive for the container.</source>
          <target state="translated">コンテナーが「--rm」フラグで開始されている場合は、コンテナーの再起動ポリシーを更新できないことに注意してください。 &lt;code&gt;AutoRemove&lt;/code&gt; と &lt;code&gt;RestartPolicy&lt;/code&gt; は、コンテナの相互に排他的です。</target>
        </trans-unit>
        <trans-unit id="69dc2be469b4f00c85a523b4cf1326bf766e3784" translate="yes" xml:space="preserve">
          <source>Note that since the tag name is not specified, the alias is created for an existing local version &lt;code&gt;httpd:latest&lt;/code&gt;.</source>
          <target state="translated">タグ名が指定されていないため、既存のローカルバージョン &lt;code&gt;httpd:latest&lt;/code&gt; のエイリアスが作成されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2be3f4864b795395d0cad85f5421fbef40b9ed8a" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;--insecure&lt;/code&gt; flag is not required to annotate a manifest list, since annotations are to a locally-stored copy of a manifest list. You may also skip the &lt;code&gt;--insecure&lt;/code&gt; flag if you are performing a &lt;code&gt;docker manifest inspect&lt;/code&gt; on a locally-stored manifest list. Be sure to keep in mind that locally-stored manifest lists are never used by the engine on a &lt;code&gt;docker pull&lt;/code&gt;.</source>
          <target state="translated">そのノート &lt;code&gt;--insecure&lt;/code&gt; フラグが注釈マニフェストリストのローカルに格納されたコピーにあるので、マニフェストリストに注釈を付けるために必要とされません。ローカルに保存されたマニフェストリスト &lt;code&gt;--insecure&lt;/code&gt; &lt;code&gt;docker manifest inspect&lt;/code&gt; を実行している場合は、-insecureフラグをスキップすることもできます。ローカルに保存されたマニフェストリストは、 &lt;code&gt;docker pull&lt;/code&gt; エンジンでは決して使用されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="de4704a1fb295bf83cf6f53277f77024d8e0b6a6" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;sudo&lt;/code&gt; in this example &amp;ndash; you must preserve the ownership of the files (especially root ownership) during the archiving with tar. If you are not root (or the sudo command) when you tar, then the ownerships might not get preserved.</source>
          <target state="translated">この例の &lt;code&gt;sudo&lt;/code&gt; に注意してください。tarを使用したアーカイブ中に、ファイルの所有権（特にrootの所有権）を保持する必要があります。tarを実行するときにroot（またはsudoコマンド）でない場合、所有権が保持されない可能性があります。</target>
        </trans-unit>
        <trans-unit id="80db4901087496d523f6b8a9d3c9055ad31d3cdf" translate="yes" xml:space="preserve">
          <source>Note the way the &lt;code&gt;get_hit_count&lt;/code&gt; function is written. This basic retry loop lets us attempt our request multiple times if the redis service is not available. This is useful at startup while the application comes online, but also makes our application more resilient if the Redis service needs to be restarted anytime during the app&amp;rsquo;s lifetime. In a cluster, this also helps handling momentary connection drops between nodes.</source>
          <target state="translated">&lt;code&gt;get_hit_count&lt;/code&gt; 関数の記述方法に注意してください。この基本的な再試行ループにより、redisサービスが利用できない場合にリクエストを複数回試行できます。これは、アプリケーションがオンラインになる起動時に役立ちますが、アプリの存続期間中にRedisサービスをいつでも再起動する必要がある場合に、アプリケーションの回復力を高めます。クラスタでは、これはノード間の一時的な接続ドロップの処理にも役立ちます。</target>
        </trans-unit>
        <trans-unit id="f4eb7bdb9e067350b554e3246b23193bfab28e84" translate="yes" xml:space="preserve">
          <source>Note this applies to Docker Community Engine 17.12 and newer, and Docker Enterprise Engine 18.03 and newer.</source>
          <target state="translated">これはDocker Community Engine 17.12以降とDocker Enterprise Engine 18.03以降に適用されます。</target>
        </trans-unit>
        <trans-unit id="358b0703673b277c02c23e4e267b68ebe0cff10a" translate="yes" xml:space="preserve">
          <source>Note this is supported on Docker Community and Enterprise Engines newer than 17.03.</source>
          <target state="translated">17.03より新しいDocker CommunityとEnterprise Enginesでサポートされていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4fb1627d0796d7b2850fe3d54d7b8e263a426516" translate="yes" xml:space="preserve">
          <source>Note this only applies to Docker Enterprise Engine 18.09 or newer. This implementation is also separate from the &lt;code&gt;only run signed images&lt;/code&gt; feature of &lt;a href=&quot;https://docs.docker.com/ee/ucp/admin/configure/run-only-the-images-you-trust/&quot;&gt;Universal Control Plane&lt;/a&gt;</source>
          <target state="translated">これはDocker Enterprise Engine 18.09以降にのみ適用されることに注意してください。この実装は、&lt;a href=&quot;https://docs.docker.com/ee/ucp/admin/configure/run-only-the-images-you-trust/&quot;&gt;ユニバーサルコントロールプレーンの&lt;/a&gt; &lt;code&gt;only run signed images&lt;/code&gt; 機能の実行からも分離されています</target>
        </trans-unit>
        <trans-unit id="5ddc32e28754d6c09a5dc57d868e592e884a38d6" translate="yes" xml:space="preserve">
          <source>Note you will need the passphrase for the repository key; this would have been configured when you first initiated the repository.</source>
          <target state="translated">リポジトリキーのパスフレーズが必要になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="f2e116b8c748f4d601c3b6102ae6d0df1034d3cd" translate="yes" xml:space="preserve">
          <source>Notes about specifying volumes</source>
          <target state="translated">ボリュームを指定する際の注意点</target>
        </trans-unit>
        <trans-unit id="863ebb6ad384df28c10cfc4aeab4e5b74edb224f" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;CONTAINER ID&lt;/code&gt; matches what&amp;rsquo;s on &lt;code&gt;http://localhost:4000&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CONTAINER ID&lt;/code&gt; が &lt;code&gt;http://localhost:4000&lt;/code&gt; にあるものと一致することに注意してください。</target>
        </trans-unit>
        <trans-unit id="7bf61bb30b1b650e35f2e7709fbca3962abf7bf1" translate="yes" xml:space="preserve">
          <source>Now consider this example:</source>
          <target state="translated">では、この例を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="ae443e91912f33eb53bbf8b0185cdac21ca4debc" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s run it. You need to give your app a name. Here, it is set to &lt;code&gt;getstartedlab&lt;/code&gt;:</source>
          <target state="translated">それを実行してみましょう。アプリに名前を付ける必要があります。ここでは、 &lt;code&gt;getstartedlab&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="ff773cc1f2f784ee35782a5457851787ed1874a2" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s run the app in the background, in detached mode:</source>
          <target state="translated">次に、アプリをバックグラウンドで分離モードで実行します。</target>
        </trans-unit>
        <trans-unit id="b6e0b8ae8d9e432b7f6ca1768b68337280206378" translate="yes" xml:space="preserve">
          <source>Now roll back the service to its previous version, and confirm it is running a single replica again:</source>
          <target state="translated">ここで、サービスを以前のバージョンにロールバックし、再び単一のレプリカを実行していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="1f4dc2793ce511b458789ee5368e79c5a5a2b921" translate="yes" xml:space="preserve">
          <source>Now run the build command. This creates a Docker image, which we&amp;rsquo;re going to name using the &lt;code&gt;--tag&lt;/code&gt; option. Use &lt;code&gt;-t&lt;/code&gt; if you want to use the shorter option.</source>
          <target state="translated">次に、ビルドコマンドを実行します。これにより、 &lt;code&gt;--tag&lt;/code&gt; オプションを使用して名前を付ける Dockerイメージが作成されます。使用 &lt;code&gt;-t&lt;/code&gt; あなたは短いオプションを使用する場合。</target>
        </trans-unit>
        <trans-unit id="16ee0e8abcb78866db3097dfa6032720373fade9" translate="yes" xml:space="preserve">
          <source>Now that MySQL is set up, create a WordPress service that connects to the MySQL service. The WordPress service has the following characteristics:</source>
          <target state="translated">MySQLの設定が完了したので、MySQLサービスに接続するWordPressサービスを作成します。WordPressサービスには以下のような特徴があります。</target>
        </trans-unit>
        <trans-unit id="683431649c88002133934df7706386a0654a2fca" translate="yes" xml:space="preserve">
          <source>Now that Ubuntu 14.04 is no longer a supported distro for Docker, and &lt;code&gt;overlay2&lt;/code&gt; is available to all supported distros (as they are either on kernel 4.x, or have support for multiple lowerdirs backported), there is no reason to continue maintenance of the &lt;code&gt;aufs&lt;/code&gt; storage driver.</source>
          <target state="translated">Ubuntu 14.04はDockerのサポートされているディストリビューションではなくなり、 &lt;code&gt;overlay2&lt;/code&gt; はサポートされているすべてのディストリビューションで利用できるようになったため（カーネル4.x上にあるか、複数のlowerdirsがサポートされているため）、メンテナンスを続行する理由はありません。 &lt;code&gt;aufs&lt;/code&gt; ストレージドライバー。</target>
        </trans-unit>
        <trans-unit id="081640c7dfc2b80a1eedbdf022c4c7052d0863e5" translate="yes" xml:space="preserve">
          <source>Now that everything is setup, you can go into your &lt;code&gt;trustsandbox&lt;/code&gt; container and start testing Docker content trust. From your host machine, obtain a shell in the &lt;code&gt;trustsandbox&lt;/code&gt; container.</source>
          <target state="translated">すべてが設定されたので、 &lt;code&gt;trustsandbox&lt;/code&gt; コンテナーに移動して、Dockerコンテンツの信頼のテストを開始できます。ホストマシンから、 &lt;code&gt;trustsandbox&lt;/code&gt; コンテナー内のシェルを取得します。</target>
        </trans-unit>
        <trans-unit id="083b487e1f89b839206167be8e219c0a1c52db0e" translate="yes" xml:space="preserve">
          <source>Now that support for &lt;code&gt;overlay2&lt;/code&gt; is added to all supported distros (as they are either on kernel 4.x, or have support for multiple lowerdirs backported), there is no reason to continue maintenance of the &lt;code&gt;devicemapper&lt;/code&gt; storage driver.</source>
          <target state="translated">今のサポートという &lt;code&gt;overlay2&lt;/code&gt; は（彼らはカーネルの4.xのいずれかであるか、あるいはバックポート複数lowerdirsのサポートを持っているように）サポートされているすべてのディストリビューションに追加され、維持継続する理由はありません &lt;code&gt;devicemapper&lt;/code&gt; のストレージドライバが。</target>
        </trans-unit>
        <trans-unit id="d557625e52c7ef4ee7e234e45a4177ec7dc687cc" translate="yes" xml:space="preserve">
          <source>Now that you have &lt;code&gt;myvm1&lt;/code&gt;, you can use its powers as a swarm manager to deploy your app by using the same &lt;code&gt;docker stack deploy&lt;/code&gt; command you used in part 3 to &lt;code&gt;myvm1&lt;/code&gt;, and your local copy of &lt;code&gt;docker-compose.yml&lt;/code&gt;. This command may take a few seconds to complete and the deployment takes some time to be available. Use the &lt;code&gt;docker service ps &amp;lt;service_name&amp;gt;&lt;/code&gt; command on a swarm manager to verify that all services have been redeployed.</source>
          <target state="translated">今あなたが持っていることを &lt;code&gt;myvm1&lt;/code&gt; を、あなたは同じ使用してアプリケーションをデプロイするために群れマネージャーとしてその権限を使用することができる &lt;code&gt;docker stack deploy&lt;/code&gt; あなたがパート3で使用されるコマンド &lt;code&gt;myvm1&lt;/code&gt; 、とのローカルコピー &lt;code&gt;docker-compose.yml&lt;/code&gt; 。このコマンドが完了するまでに数秒かかる場合があり、デプロイメントが使用可能になるまでにしばらく時間がかかります。スウォームマネージャーで &lt;code&gt;docker service ps &amp;lt;service_name&amp;gt;&lt;/code&gt; コマンドを使用して、すべてのサービスが再デプロイされたことを確認します。</target>
        </trans-unit>
        <trans-unit id="d043d71c7bfbff557b596802c41e02fc94e7bc75" translate="yes" xml:space="preserve">
          <source>Now that you have a CA, you can create a server key and certificate signing request (CSR). Make sure that &amp;ldquo;Common Name&amp;rdquo; matches the hostname you use to connect to Docker:</source>
          <target state="translated">CAが作成されたので、サーバーキーと証明書署名要求（CSR）を作成できます。「共通名」がDockerへの接続に使用するホスト名と一致していることを確認してください：</target>
        </trans-unit>
        <trans-unit id="5911812cfc292c068facdc414e32bc4a00436c91" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve got a new Gemfile, you need to build the image again. (This, and changes to the &lt;code&gt;Gemfile&lt;/code&gt; or the Dockerfile, should be the only times you&amp;rsquo;ll need to rebuild.)</source>
          <target state="translated">新しいGemfileを入手したので、イメージを再度ビルドする必要があります。（これと、 &lt;code&gt;Gemfile&lt;/code&gt; またはDockerfileへの変更は、再構築が必要な唯一の場合です。）</target>
        </trans-unit>
        <trans-unit id="cc09b76ad01e3d703fb279ec55dc59e0d3608b43" translate="yes" xml:space="preserve">
          <source>Now use &lt;code&gt;docker container stop&lt;/code&gt; to end the process, using the &lt;code&gt;CONTAINER ID&lt;/code&gt;, like so:</source>
          <target state="translated">次に、次のように &lt;code&gt;CONTAINER ID&lt;/code&gt; を使用して、 &lt;code&gt;docker container stop&lt;/code&gt; を使用してプロセスを終了します。</target>
        </trans-unit>
        <trans-unit id="6c9d2bdef11774f4144fb3e63d8ec8de4e4a9ace" translate="yes" xml:space="preserve">
          <source>Now we see that &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; installs the Flask and Redis libraries for Python, and the app prints the environment variable &lt;code&gt;NAME&lt;/code&gt;, as well as the output of a call to &lt;code&gt;socket.gethostname()&lt;/code&gt;. Finally, because Redis isn&amp;rsquo;t running (as we&amp;rsquo;ve only installed the Python library, and not Redis itself), we should expect that the attempt to use it here fails and produces the error message.</source>
          <target state="translated">これで、 &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; がPython用のFlaskおよびRedisライブラリをインストールし、アプリが環境変数 &lt;code&gt;NAME&lt;/code&gt; と、 &lt;code&gt;socket.gethostname()&lt;/code&gt; への呼び出しの出力を出力することがわかります。最後に、Redisが実行されていないため（ここでは、Pythonライブラリのみをインストールし、Redis自体はインストールしていないため）、ここでの使用は失敗し、エラーメッセージが生成されることを期待する必要があります。</target>
        </trans-unit>
        <trans-unit id="bba6a9c72ca597a6c47a46cdbf1ddebad7045d2f" translate="yes" xml:space="preserve">
          <source>Now you can create a service using this credential spec. Specify the &lt;code&gt;--credential-spec&lt;/code&gt; flag with the config name:</source>
          <target state="translated">これで、この資格情報仕様を使用してサービスを作成できます。設定名で &lt;code&gt;--credential-spec&lt;/code&gt; フラグを指定します。</target>
        </trans-unit>
        <trans-unit id="560f6bd7dd73d810504e0e5288375e45d72e8fcf" translate="yes" xml:space="preserve">
          <source>Now you can make the Docker daemon only accept connections from clients providing a certificate trusted by your CA:</source>
          <target state="translated">これでDockerデーモンは、認証局から信頼された証明書を提供しているクライアントからの接続のみを受け入れるようになりました。</target>
        </trans-unit>
        <trans-unit id="a12978740371ec03823ab206e48c8bbd84fab335" translate="yes" xml:space="preserve">
          <source>Now you can update the container image for &lt;code&gt;redis&lt;/code&gt;. The swarm manager applies the update to nodes according to the &lt;code&gt;UpdateConfig&lt;/code&gt; policy:</source>
          <target state="translated">これで、 &lt;code&gt;redis&lt;/code&gt; のコンテナーイメージを更新できます。Swarm Managerは、 &lt;code&gt;UpdateConfig&lt;/code&gt; ポリシーに従って更新をノードに適用します。</target>
        </trans-unit>
        <trans-unit id="c6a134473cc488809f26b7267302255e6a487fc2" translate="yes" xml:space="preserve">
          <source>Now you can use the directory on the machine, for mounting into containers. Any changes done in the local directory, is reflected in the machine too.</source>
          <target state="translated">これで、コンテナにマウントするためにマシン上のディレクトリを使用できるようになりました。ローカルディレクトリで行われた変更は、マシンにも反映されます。</target>
        </trans-unit>
        <trans-unit id="5223a354788aa556a3daf3b2f6837e2418e655f3" translate="yes" xml:space="preserve">
          <source>Now you can use the same &lt;a href=&quot;../part3/index#run-your-new-load-balanced-app&quot;&gt;docker commands you used in part 3&lt;/a&gt;. Only this time notice that the services (and associated containers) have been distributed between both &lt;code&gt;myvm1&lt;/code&gt; and &lt;code&gt;myvm2&lt;/code&gt;.</source>
          <target state="translated">これ&lt;a href=&quot;../part3/index#run-your-new-load-balanced-app&quot;&gt;で、パート3で&lt;/a&gt;使用したのと同じdockerコマンドを使用できます。今回のみ、サービス（および関連するコンテナー）が &lt;code&gt;myvm1&lt;/code&gt; と &lt;code&gt;myvm2&lt;/code&gt; の両方に分散されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b599b99bc8051acfe76d2c22303456a4919925cf" translate="yes" xml:space="preserve">
          <source>Now you&amp;rsquo;ve deployed a service to the swarm, you&amp;rsquo;re ready to &lt;a href=&quot;../inspect-service/index&quot;&gt;inspect the service&lt;/a&gt;.</source>
          <target state="translated">これで、サービスをスウォームにデプロイしたので、サービスを&lt;a href=&quot;../inspect-service/index&quot;&gt;検査する&lt;/a&gt;準備が整いました。</target>
        </trans-unit>
        <trans-unit id="c16a1ccc9cf7c7d5ea891c7fac3c34ff3dfa13be" translate="yes" xml:space="preserve">
          <source>Now your swarm consists of a manager and two worker nodes. In the next step of the tutorial, you &lt;a href=&quot;../deploy-service/index&quot;&gt;deploy a service&lt;/a&gt; to the swarm.</source>
          <target state="translated">これで、スウォームはマネージャーと2つのワーカーノードで構成されます。チュートリアルの次のステップでは&lt;a href=&quot;../deploy-service/index&quot;&gt;、サービス&lt;/a&gt;をスウォームにデプロイします。</target>
        </trans-unit>
        <trans-unit id="3a323fb2a5b65dc144b50b57d0be1be60d50f2d5" translate="yes" xml:space="preserve">
          <source>Now, after running either of the above commands, this command should return no output.</source>
          <target state="translated">さて、上記のいずれかのコマンドを実行した後、このコマンドは出力を返さないはずです。</target>
        </trans-unit>
        <trans-unit id="85dfdc89ee84bb829b8095c30e68313b5b92daf0" translate="yes" xml:space="preserve">
          <source>Now, change the MySQL password for the &lt;code&gt;wordpress&lt;/code&gt; user using the &lt;code&gt;mysqladmin&lt;/code&gt; CLI. This command reads the old and new password from the files in &lt;code&gt;/run/secrets&lt;/code&gt; but does not expose them on the command line or save them in the shell history.</source>
          <target state="translated">次に、 &lt;code&gt;mysqladmin&lt;/code&gt; CLI を使用して &lt;code&gt;wordpress&lt;/code&gt; ユーザーのMySQLパスワードを変更します。このコマンドは、 &lt;code&gt;/run/secrets&lt;/code&gt; 内のファイルから新旧のパスワードを読み取りますが、コマンドラインでそれらを公開したり、シェルの履歴に保存したりしません。</target>
        </trans-unit>
        <trans-unit id="a82fdbe6ef4eaa2e3a539b916a62bd7a95c2b30a" translate="yes" xml:space="preserve">
          <source>Now, create a couple of VMs using &lt;code&gt;docker-machine&lt;/code&gt;, using the VirtualBox driver:</source>
          <target state="translated">次に、VirtualBoxドライバーを使用して、 &lt;code&gt;docker-machine&lt;/code&gt; を使用していくつかのVMを作成します。</target>
        </trans-unit>
        <trans-unit id="cadcf954d7c70f8ad10edb849fe60b7305c4b9ba" translate="yes" xml:space="preserve">
          <source>Now, create a couple of VMs using our node management tool, &lt;code&gt;docker-machine&lt;/code&gt;:</source>
          <target state="translated">次に、ノード管理ツール &lt;code&gt;docker-machine&lt;/code&gt; を使用して、いくつかのVMを作成します。</target>
        </trans-unit>
        <trans-unit id="050951d485f2d2f57ca9f665570232b10e47f71a" translate="yes" xml:space="preserve">
          <source>Now, generate the signed certificate:</source>
          <target state="translated">さて、署名付き証明書を生成します。</target>
        </trans-unit>
        <trans-unit id="48084de74ff50e8f7e78821f7010b2e100c6c1d9" translate="yes" xml:space="preserve">
          <source>Now, it would be nice to use this Compose app in a production environment. So, create another override file (which might be stored in a different git repo or managed by a different team).</source>
          <target state="translated">さて、この Compose アプリを本番環境で使うのがいいでしょう。そこで、別のオーバーライドファイルを作成します (これは別の git repo に保存されているかもしれませんし、別のチームが管理しているかもしれません)。</target>
        </trans-unit>
        <trans-unit id="7b237b3b8f54ec283d505ee4d3db66dbbccdb820" translate="yes" xml:space="preserve">
          <source>Now, pull some images from within the &lt;code&gt;trustsandbox&lt;/code&gt; container.</source>
          <target state="translated">次に、 &lt;code&gt;trustsandbox&lt;/code&gt; コンテナー内からいくつかのイメージをプルします。</target>
        </trans-unit>
        <trans-unit id="f481f01a74d9d9c9c13a7bc17aefb7f335dfc602" translate="yes" xml:space="preserve">
          <source>Now, push the image to the registry using the image ID. In this example the registry is on host named &lt;code&gt;registry-host&lt;/code&gt; and listening on port &lt;code&gt;5000&lt;/code&gt;. To do this, tag the image with the host name or IP address, and the port of the registry:</source>
          <target state="translated">次に、イメージIDを使用してイメージをレジストリにプッシュします。この例では、レジストリーは &lt;code&gt;registry-host&lt;/code&gt; という名前のホストにあり、ポート &lt;code&gt;5000&lt;/code&gt; で listenしています。これを行うには、ホスト名またはIPアドレス、およびレジストリのポートでイメージをタグ付けします。</target>
        </trans-unit>
        <trans-unit id="95e44ff4a4399adb864e5414fde08fe2151e7e36" translate="yes" xml:space="preserve">
          <source>Now, put it all together to tag the image. Run &lt;code&gt;docker tag image&lt;/code&gt; with your username, repository, and tag names so that the image uploads to your desired destination. The syntax of the command is:</source>
          <target state="translated">それをまとめて、画像にタグを付けます。ユーザー名、リポジトリ、タグ名で &lt;code&gt;docker tag image&lt;/code&gt; を実行し、イメージが目的の宛先にアップロードされるようにします。コマンドの構文は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="4d58b713ea11a40480565ab6c80605b6e8b7dc28" translate="yes" xml:space="preserve">
          <source>Now, re-run &lt;code&gt;docker container ls -q&lt;/code&gt; to see the deployed instances reconfigured. If you scaled up the replicas, more tasks, and hence, more containers, are started.</source>
          <target state="translated">ここで、 &lt;code&gt;docker container ls -q&lt;/code&gt; を再実行して、デプロイされたインスタンスが再構成されたことを確認します。レプリカをスケールアップすると、より多くのタスク、つまりより多くのコンテナーが開始されます。</target>
        </trans-unit>
        <trans-unit id="9c596d7d215aadae620edf397771bd4d0104fc53" translate="yes" xml:space="preserve">
          <source>Now, rebuild and restart the app with &lt;code&gt;docker-compose up --build&lt;/code&gt;.</source>
          <target state="translated">次に、 &lt;code&gt;docker-compose up --build&lt;/code&gt; を使用してアプリを再ビルドして再起動します。</target>
        </trans-unit>
        <trans-unit id="73ef7293357183866d1f79bbae2680078f42e09e" translate="yes" xml:space="preserve">
          <source>Now, run &lt;code&gt;docker-compose up -d&lt;/code&gt; from your project directory.</source>
          <target state="translated">次に、プロジェクトディレクトリから &lt;code&gt;docker-compose up -d&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="8aafc9a34251817fc924a944fbe60d0bff7814a6" translate="yes" xml:space="preserve">
          <source>Now, you have a full Docker content trust sandbox on your local system, feel free to play with it and see how it behaves. If you find any security issues with Docker, feel free to send us an email at &lt;a href=&quot;mailto:security@docker.com&quot;&gt;security@docker.com&lt;/a&gt;.</source>
          <target state="translated">これで、ローカルシステムに完全なDockerコンテンツ信頼サンドボックスが作成されました。自由に試して、動作を確認してください。あなたがドッカーと任意のセキュリティ問題を発見した場合は、で私達に電子メールを送ること自由に感じ&lt;a href=&quot;mailto:security@docker.com&quot;&gt;security@docker.com&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e83a79c383412bd23c7f848f52ce0bf23c98308c" translate="yes" xml:space="preserve">
          <source>Now, you should have a Docker Config named credspec, and you can create a service using this credential spec. To do so, use the --credential-spec flag with the config name, like this:</source>
          <target state="translated">これで、credspecという名前のDocker Configがあるはずなので、このcredential specを使ってサービスを作成することができます。そのためには、以下のようにconfig名に--credential-specフラグをつけてください。</target>
        </trans-unit>
        <trans-unit id="6a5044180dae2c4d19df18e49a11dd260de78b0b" translate="yes" xml:space="preserve">
          <source>Number of CPUs</source>
          <target state="translated">CPU数</target>
        </trans-unit>
        <trans-unit id="b2e27a86ebe15438fc126487fe1e129471f0dd98" translate="yes" xml:space="preserve">
          <source>Number of CPUs. Number is a fractional number. 0.000 means no limit.</source>
          <target state="translated">CPUの数です。Numberは端数です。0.000は無制限を意味します。</target>
        </trans-unit>
        <trans-unit id="b57c13a48b05193802b000868454264cd056e530" translate="yes" xml:space="preserve">
          <source>Number of PIDs (Not available on Windows)</source>
          <target state="translated">PID数(Windowsでは使用できません</target>
        </trans-unit>
        <trans-unit id="597a89c3b5bf1ae73f66e47b919b0382b83f0278" translate="yes" xml:space="preserve">
          <source>Number of additional Raft snapshots to retain</source>
          <target state="translated">保持する追加のラフトスナップショットの数</target>
        </trans-unit>
        <trans-unit id="1268baa715e1a2698165d607139219a32e9fca3a" translate="yes" xml:space="preserve">
          <source>Number of lines to show from the end of the logs</source>
          <target state="translated">ログの末尾から表示する行数</target>
        </trans-unit>
        <trans-unit id="d5858cd8bd07a74c956b6eb294baed506071a396" translate="yes" xml:space="preserve">
          <source>Number of log entries between Raft snapshots</source>
          <target state="translated">Raftスナップショット間のログエントリ数</target>
        </trans-unit>
        <trans-unit id="7833181000d643b63436596bf28dd9ab6195bb55" translate="yes" xml:space="preserve">
          <source>Number of services</source>
          <target state="translated">サービス数</target>
        </trans-unit>
        <trans-unit id="dafb832a616a146bf1f8a0f6e019acfe7b7a9ac3" translate="yes" xml:space="preserve">
          <source>Number of stars for the image</source>
          <target state="translated">画像の星の数</target>
        </trans-unit>
        <trans-unit id="114174999297a9b61fc6e315ee54546affc61f5f" translate="yes" xml:space="preserve">
          <source>Number of tasks</source>
          <target state="translated">タスクの数</target>
        </trans-unit>
        <trans-unit id="28871d3a2f857b7d00734bb5b9f138e138a0c0cc" translate="yes" xml:space="preserve">
          <source>Numbers are specified as arguments in the form &lt;code&gt;service=num&lt;/code&gt;. For example:</source>
          <target state="translated">番号は &lt;code&gt;service=num&lt;/code&gt; の形式で引数として指定されます。例えば：</target>
        </trans-unit>
        <trans-unit id="4c08bc02800f2db95bfd879a26f93f354c1be80e" translate="yes" xml:space="preserve">
          <source>ONBUILD</source>
          <target state="translated">ONBUILD</target>
        </trans-unit>
        <trans-unit id="66c888d10ab6a46198fcec7325df97ad7688050e" translate="yes" xml:space="preserve">
          <source>Object types</source>
          <target state="translated">オブジェクトの種類</target>
        </trans-unit>
        <trans-unit id="d881dcc3afbe226a53109706ad79426dbb444350" translate="yes" xml:space="preserve">
          <source>Obsolete syscall.</source>
          <target state="translated">廃止されたsyscall。</target>
        </trans-unit>
        <trans-unit id="17af2683771ef384131a99cda548f7fe95bf5c27" translate="yes" xml:space="preserve">
          <source>Obsolete, replaced by /proc/sys.</source>
          <target state="translated">廃止され、/proc/sys に置き換えられました。</target>
        </trans-unit>
        <trans-unit id="3e3367da33b7d6479466d1024e006883ccc94168" translate="yes" xml:space="preserve">
          <source>Official Docker images</source>
          <target state="translated">Dockerの公式画像</target>
        </trans-unit>
        <trans-unit id="7793d4a97bd3df3bc05a4b86fb6f470af0ea0308" translate="yes" xml:space="preserve">
          <source>Official releases</source>
          <target state="translated">公式リリース</target>
        </trans-unit>
        <trans-unit id="4ca8f6a31d4bc912de657e810710b473b92f8edb" translate="yes" xml:space="preserve">
          <source>Old Command Line Options</source>
          <target state="translated">古いコマンドラインオプション</target>
        </trans-unit>
        <trans-unit id="49162bfe35908e142ab7c9c7e15c9378f849afc1" translate="yes" xml:space="preserve">
          <source>Older passwords may also be provided as environment variables.</source>
          <target state="translated">古いパスワードを環境変数として提供することもできます。</target>
        </trans-unit>
        <trans-unit id="6878a0498321e485df2f8e925ad2c53c6beb3252" translate="yes" xml:space="preserve">
          <source>Older syscall related to shared libraries, unused for a long time.</source>
          <target state="translated">共有ライブラリに関連する古いシステムコールで、長い間使用されていません。</target>
        </trans-unit>
        <trans-unit id="3efb2e83ba060c5fa694012b6590ce062483d066" translate="yes" xml:space="preserve">
          <source>On &lt;strong&gt;Mac or Linux&lt;/strong&gt; the command is:</source>
          <target state="translated">上の&lt;strong&gt;MacやLinuxの&lt;/strong&gt;コマンドは、次のとおりです。</target>
        </trans-unit>
        <trans-unit id="62315d09478dc1fc7114e43a7538a47e959fcd51" translate="yes" xml:space="preserve">
          <source>On &lt;strong&gt;Windows&lt;/strong&gt; the command is:</source>
          <target state="translated">上の&lt;strong&gt;Windowsの&lt;/strong&gt;コマンドは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="2295f011a6999b2a2dbdb79f5bca513f3fa75ca8" translate="yes" xml:space="preserve">
          <source>On Docker 17.04 CE Edge and up, including 17.06 CE Edge and Stable, you can configure container-and-host consistency requirements for bind-mounted directories in Compose files to allow for better performance on read/write of volume mounts. These options address issues specific to &lt;code&gt;osxfs&lt;/code&gt; file sharing, and therefore are only applicable on Docker Desktop for Mac.</source>
          <target state="translated">Docker 17.04 CE Edge以降（17.06 CE EdgeとStableを含む）では、ボリュームマウントの読み取り/書き込みのパフォーマンスを向上させるために、コンポーズファイルでバインドマウントディレクトリのコンテナーとホストの整合性要件を構成できます。これらのオプションは &lt;code&gt;osxfs&lt;/code&gt; ファイル共有に固有の問題に対処するため、Docker Desktop for Macにのみ適用できます。</target>
        </trans-unit>
        <trans-unit id="97ca604370c5c41a1c4b387a4675f5729fc3bf97" translate="yes" xml:space="preserve">
          <source>On Docker Desktop for Mac and Docker Desktop for Windows, go to &lt;code&gt;http://localhost:3000&lt;/code&gt; on a web browser to see the Rails Welcome.</source>
          <target state="translated">Mac用DockerデスクトップおよびWindows用Dockerデスクトップで、Webブラウザーから &lt;code&gt;http://localhost:3000&lt;/code&gt; にアクセスして、Railsへようこそを表示します。</target>
        </trans-unit>
        <trans-unit id="28c796f16d3bc2493357baccd7620e95a9978b4a" translate="yes" xml:space="preserve">
          <source>On Docker Desktop for Windows systems that support Hyper-V, use the &lt;code&gt;hyperv&lt;/code&gt; driver as shown in the &lt;a href=&quot;../drivers/hyper-v/index&quot;&gt;Docker Machine Microsoft Hyper-V driver reference&lt;/a&gt; and follow the &lt;a href=&quot;../drivers/hyper-v/index#example&quot;&gt;example&lt;/a&gt;, which shows how to use an external network switch and provides the flags for the full command. (See &lt;a href=&quot;index#prerequisite-information&quot;&gt;prerequisites&lt;/a&gt; above to learn more.)</source>
          <target state="translated">Hyper-VをサポートするWindowsシステム用のDockerデスクトップで、&lt;a href=&quot;../drivers/hyper-v/index&quot;&gt;Docker Machine Microsoft Hyper-Vドライバーリファレンスに&lt;/a&gt;示されているように &lt;code&gt;hyperv&lt;/code&gt; ドライバーを使用し、外部ネットワークスイッチの使用方法を示し、完全なコマンドのフラグを提供する&lt;a href=&quot;../drivers/hyper-v/index#example&quot;&gt;例&lt;/a&gt;に従ってください。（詳細については、上記の&lt;a href=&quot;index#prerequisite-information&quot;&gt;前提条件を&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="610a7c8308dc534debe195d4c451fb01e8204dc3" translate="yes" xml:space="preserve">
          <source>On Linux</source>
          <target state="translated">Linuxでは</target>
        </trans-unit>
        <trans-unit id="d350b7b788d4d3a51c25ad7f7ba1ff806cc9f10b" translate="yes" xml:space="preserve">
          <source>On Linux systems, first install the &lt;a href=&quot;https://docs.docker.com/install/#server&quot;&gt;Docker&lt;/a&gt; for your OS as described on the Get Docker page, then come back here for instructions on installing Compose on Linux systems.</source>
          <target state="translated">Linuxシステムでは、最初にGet Dockerページで説明されているようにOSに&lt;a href=&quot;https://docs.docker.com/install/#server&quot;&gt;Docker&lt;/a&gt;をインストールし、次にLinuxシステムにComposeをインストールする手順についてここに戻ってください。</target>
        </trans-unit>
        <trans-unit id="ead05e563bbd5d93408dc2c62204cebd33a0b6d9" translate="yes" xml:space="preserve">
          <source>On Linux, the Docker daemon has support for several different image layer storage drivers: &lt;code&gt;aufs&lt;/code&gt;, &lt;code&gt;devicemapper&lt;/code&gt;, &lt;code&gt;btrfs&lt;/code&gt;, &lt;code&gt;zfs&lt;/code&gt;, &lt;code&gt;overlay&lt;/code&gt; and &lt;code&gt;overlay2&lt;/code&gt;.</source>
          <target state="translated">：Linuxでは、ドッカーデーモンは、いくつかの異なる画像レイヤストレージドライバをサポートしている &lt;code&gt;aufs&lt;/code&gt; 、 &lt;code&gt;devicemapper&lt;/code&gt; 、 &lt;code&gt;btrfs&lt;/code&gt; 、 &lt;code&gt;zfs&lt;/code&gt; 、 &lt;code&gt;overlay&lt;/code&gt; と &lt;code&gt;overlay2&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="d72d2c32104c919ece444f06be7c4c2f3dc734b4" translate="yes" xml:space="preserve">
          <source>On Linux, you can download the Docker Compose binary from the &lt;a href=&quot;https://github.com/docker/compose/releases&quot;&gt;Compose repository release page on GitHub&lt;/a&gt;. Follow the instructions from the link, which involve running the &lt;code&gt;curl&lt;/code&gt; command in your terminal to download the binaries. These step-by-step instructions are also included below.</source>
          <target state="translated">Linuxでは、&lt;a href=&quot;https://github.com/docker/compose/releases&quot;&gt;GitHubのComposeリポジトリリリースページ&lt;/a&gt;からDocker Composeバイナリをダウンロードできます。端末で &lt;code&gt;curl&lt;/code&gt; コマンドを実行してバイナリをダウンロードするリンクからの指示に従います。これらのステップバイステップの説明も以下に含まれています。</target>
        </trans-unit>
        <trans-unit id="7fc3d52902162d74f8ed313c5de739bb86f3a25d" translate="yes" xml:space="preserve">
          <source>On Linux:</source>
          <target state="translated">Linuxで。</target>
        </trans-unit>
        <trans-unit id="851bcc5548ae4eaa87267e9ebae009299500c1f3" translate="yes" xml:space="preserve">
          <source>On Mac OS or various flavors of Linux you can install the &lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html#cli-quick-configuration&quot;&gt;AWS Command Line Interface&lt;/a&gt; (&lt;code&gt;aws cli&lt;/code&gt;) in the terminal and use the &lt;code&gt;aws configure&lt;/code&gt; command which guides you through the creation of the credentials file.</source>
          <target state="translated">Mac OSまたはLinuxのさまざまな種類では、&lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html#cli-quick-configuration&quot;&gt;AWSコマンドラインインターフェイス&lt;/a&gt;（ &lt;code&gt;aws cli&lt;/code&gt; ）をターミナルにインストールし、認証情報ファイルの作成をガイドする &lt;code&gt;aws configure&lt;/code&gt; コマンドを使用できます。</target>
        </trans-unit>
        <trans-unit id="481c289a2361cd7b90f1a9b9271caa43fb1e0a81" translate="yes" xml:space="preserve">
          <source>On Mac OS or various flavors of Linux you can install the &lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html#cli-quick-configuration&quot;&gt;AWS Command Line Interface&lt;/a&gt; (&lt;code&gt;aws cli&lt;/code&gt;) in the terminal and use the &lt;code&gt;aws configure&lt;/code&gt; command which guides you through the creation of the credentials file.</source>
          <target state="translated">Mac OSまたはさまざまな種類のLinuxでは、ターミナルに&lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html#cli-quick-configuration&quot;&gt;AWSコマンドラインインターフェイス&lt;/a&gt;（ &lt;code&gt;aws cli&lt;/code&gt; ）をインストールし、認証ファイルの作成をガイドする &lt;code&gt;aws configure&lt;/code&gt; コマンドを使用できます。</target>
        </trans-unit>
        <trans-unit id="160eab92a471579273aabcee741b1f941837bd15" translate="yes" xml:space="preserve">
          <source>On Mac and Linux, you can use &lt;code&gt;docker-machine scp &amp;lt;file&amp;gt; &amp;lt;machine&amp;gt;:~&lt;/code&gt; to copy files across machines, but Windows users need a Linux terminal emulator like &lt;a href=&quot;https://git-for-windows.github.io/&quot;&gt;Git Bash&lt;/a&gt; for this to work.</source>
          <target state="translated">MacとLinuxでは、 &lt;code&gt;docker-machine scp &amp;lt;file&amp;gt; &amp;lt;machine&amp;gt;:~&lt;/code&gt; を使用してマシン間でファイルをコピーできますが、Windowsユーザーがこれを機能させるには、&lt;a href=&quot;https://git-for-windows.github.io/&quot;&gt;Git Bash&lt;/a&gt;などのLinux端末エミュレータが必要です。</target>
        </trans-unit>
        <trans-unit id="0e7739d54b3bf0b7f66058f938877391b4a8b25b" translate="yes" xml:space="preserve">
          <source>On Systemd based systems, you can communicate with the daemon via &lt;a href=&quot;http://0pointer.de/blog/projects/socket-activation.html&quot;&gt;Systemd socket activation&lt;/a&gt;, use &lt;code&gt;dockerd -H fd://&lt;/code&gt;. Using &lt;code&gt;fd://&lt;/code&gt; will work perfectly for most setups but you can also specify individual sockets: &lt;code&gt;dockerd -H fd://3&lt;/code&gt;. If the specified socket activated files aren&amp;rsquo;t found, then Docker will exit. You can find examples of using Systemd socket activation with Docker and Systemd in the &lt;a href=&quot;https://github.com/docker/docker/tree/master/contrib/init/systemd/&quot;&gt;Docker source tree&lt;/a&gt;.</source>
          <target state="translated">Systemdベースのシステムでは、&lt;a href=&quot;http://0pointer.de/blog/projects/socket-activation.html&quot;&gt;Systemdソケットアクティベーション&lt;/a&gt;を介してデーモンと通信できます &lt;code&gt;dockerd -H fd://&lt;/code&gt; 使用します。 &lt;code&gt;fd://&lt;/code&gt; を使用すると、ほとんどのセットアップで完全に機能しますが、個々のソケットを指定することもできます： &lt;code&gt;dockerd -H fd://3&lt;/code&gt; 。指定されたソケットでアクティブ化されたファイルが見つからない場合、Dockerは終了します。&lt;a href=&quot;https://github.com/docker/docker/tree/master/contrib/init/systemd/&quot;&gt;Dockerのソースツリーに&lt;/a&gt;は、DockerおよびSystemdでSystemdソケットアクティベーションを使用する例があります。</target>
        </trans-unit>
        <trans-unit id="08103bc8083664f610de1cd76da40c7342e367bf" translate="yes" xml:space="preserve">
          <source>On Windows</source>
          <target state="translated">Windowsの場合</target>
        </trans-unit>
        <trans-unit id="a51ebef39bf662027f89ea33d4c9025e3852774a" translate="yes" xml:space="preserve">
          <source>On Windows server, assuming the default configuration, these commands are equivalent and result in &lt;code&gt;process&lt;/code&gt; isolation:</source>
          <target state="translated">Windowsサーバーでは、デフォルトの構成を想定して、これらのコマンドは同等であり、 &lt;code&gt;process&lt;/code&gt; 分離されます。</target>
        </trans-unit>
        <trans-unit id="f864f3c57aaf96354973f5c397f859445cf498d5" translate="yes" xml:space="preserve">
          <source>On Windows systems, &lt;code&gt;CTRL+C&lt;/code&gt; does not stop the container. So, first type &lt;code&gt;CTRL+C&lt;/code&gt; to get the prompt back (or open another shell), then type &lt;code&gt;docker container ls&lt;/code&gt; to list the running containers, followed by &lt;code&gt;docker container stop &amp;lt;Container NAME or ID&amp;gt;&lt;/code&gt; to stop the container. Otherwise, you get an error response from the daemon when you try to re-run the container in the next step.</source>
          <target state="translated">Windowsシステムでは、 &lt;code&gt;CTRL+C&lt;/code&gt; はコンテナーを停止しません。したがって、最初に &lt;code&gt;CTRL+C&lt;/code&gt; を入力してプロンプトを表示し（または別のシェルを開き）、次に &lt;code&gt;docker container ls&lt;/code&gt; を入力して実行中のコンテナーをリストし、次に &lt;code&gt;docker container stop &amp;lt;Container NAME or ID&amp;gt;&lt;/code&gt; を入力してコンテナーを停止します。そうしないと、次のステップでコンテナーを再実行しようとしたときに、デーモンからエラー応答が返されます。</target>
        </trans-unit>
        <trans-unit id="2a12fc226e9eb663105368f333ca7573df024e2a" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;--isolation&lt;/code&gt; can take one of these values:</source>
          <target state="translated">Windowsでは、 &lt;code&gt;--isolation&lt;/code&gt; は次のいずれかの値をとります。</target>
        </trans-unit>
        <trans-unit id="9249f8494a22ccb9ca8ea47eb5b745a8224d02b6" translate="yes" xml:space="preserve">
          <source>On Windows, create or update a service using &lt;code&gt;--credential-spec&lt;/code&gt; with the &lt;code&gt;config://&amp;lt;config-name&amp;gt;&lt;/code&gt; format. This passes the gMSA credentials file directly to nodes before a container starts. No gMSA credentials are written to disk on worker nodes. For more information, refer to &lt;a href=&quot;../../swarmservices/index&quot;&gt;Deploy services to a swarm&lt;/a&gt;.</source>
          <target state="translated">Windowsでは、 &lt;code&gt;--credential-spec&lt;/code&gt; を &lt;code&gt;config://&amp;lt;config-name&amp;gt;&lt;/code&gt; 形式で使用して、サービスを作成または更新します。これにより、コンテナーが起動する前にgMSA資格情報ファイルがノードに直接渡されます。gMSA認証情報はワーカーノードのディスクに書き込まれません。詳細については&lt;a href=&quot;../../swarmservices/index&quot;&gt;、「群へのサービスのデプロイ&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="bcaa1b49c54bf92c499ac69437ce1c0046dcff1a" translate="yes" xml:space="preserve">
          <source>On Windows, explicitly stop the container</source>
          <target state="translated">Windowsでは、コンテナを明示的に停止します。</target>
        </trans-unit>
        <trans-unit id="93804a854b02a2211ab35a60157431ff9028530a" translate="yes" xml:space="preserve">
          <source>On Windows, the Docker daemon supports a single image layer storage driver depending on the image platform: &lt;code&gt;windowsfilter&lt;/code&gt; for Windows images, and &lt;code&gt;lcow&lt;/code&gt; for Linux containers on Windows.</source>
          <target state="translated">Windowsでは、Dockerデーモンは、イメージプラットフォームに応じて単一のイメージレイヤーストレージドライバーをサポートします。Windowsイメージの場合は &lt;code&gt;windowsfilter&lt;/code&gt; 、WindowsのLinuxコンテナーの場合は &lt;code&gt;lcow&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cfb26dd18e2ebeaf592451c803995e5562de3472" translate="yes" xml:space="preserve">
          <source>On Windows, the paths must be specified using Windows-style semantics.</source>
          <target state="translated">Windowsでは、Windowsスタイルのセマンティクスを使ってパスを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="17ea02ec47937b82ca98eed2c3ffd4303b5388f5" translate="yes" xml:space="preserve">
          <source>On Windows, the user must be created first if it&amp;rsquo;s not a built-in account. This can be done with the &lt;code&gt;net user&lt;/code&gt; command called as part of a Dockerfile.</source>
          <target state="translated">Windowsでは、ビルトインアカウントでない場合、ユーザーを最初に作成する必要があります。これは、Dockerfileの一部として呼び出される &lt;code&gt;net user&lt;/code&gt; コマンドで実行できます。</target>
        </trans-unit>
        <trans-unit id="e99af4aee74dd489a9da0c62db7f41b1900f8942" translate="yes" xml:space="preserve">
          <source>On Windows, this flag can be used to specify the &lt;code&gt;credentialspec&lt;/code&gt; option. The &lt;code&gt;credentialspec&lt;/code&gt; must be in the format &lt;code&gt;file://spec.txt&lt;/code&gt; or &lt;code&gt;registry://keyname&lt;/code&gt;.</source>
          <target state="translated">Windowsでは、このフラグを使用して &lt;code&gt;credentialspec&lt;/code&gt; オプションを指定できます。 &lt;code&gt;credentialspec&lt;/code&gt; は、フォーマットでなければなりません &lt;code&gt;file://spec.txt&lt;/code&gt; や &lt;code&gt;registry://keyname&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff0cd0dd6f64662649e6ba025d96f2751d9812cb" translate="yes" xml:space="preserve">
          <source>On Windows, this will affect containers differently depending on what type of isolation is used.</source>
          <target state="translated">Windowsでは、どのタイプのアイソレーションを使用するかによって、コンテナに異なる影響を与えます。</target>
        </trans-unit>
        <trans-unit id="e3a7f1db1aeaae9c19c9e00e771e4140a20478bb" translate="yes" xml:space="preserve">
          <source>On Windows, we recommend enabling &lt;a href=&quot;https://technet.microsoft.com/en-us/library/cc732774(v=ws.11).aspx&quot;&gt;BitLocker&lt;/a&gt; on the volume containing the Docker root directory on the host machine to ensure that secrets for running containers are encrypted at rest.</source>
          <target state="translated">Windowsでは、実行中のコンテナのシークレットが保存時に暗号化されるように、ホストマシンのDockerルートディレクトリを含むボリュームで&lt;a href=&quot;https://technet.microsoft.com/en-us/library/cc732774(v=ws.11).aspx&quot;&gt;BitLocker&lt;/a&gt;を有効にすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="55b56364276b5f7e47e7f031287b139fc5b947d5" translate="yes" xml:space="preserve">
          <source>On Windows:</source>
          <target state="translated">Windowsで。</target>
        </trans-unit>
        <trans-unit id="da86036017d8daba957579114829b3cd86adc533" translate="yes" xml:space="preserve">
          <source>On a current Linux OS (in a non-minimal installation), bash completion should be available.</source>
          <target state="translated">現在のLinux OSでは(ミニマムインストールではない)bash補完が利用できるはずです。</target>
        </trans-unit>
        <trans-unit id="50feda3e764b18a3d4b10e11e466dd34cce35bb8" translate="yes" xml:space="preserve">
          <source>On a manager node:</source>
          <target state="translated">マネージャノード上で</target>
        </trans-unit>
        <trans-unit id="4e155d27931b614af33d264a2af2b534e10a3c18" translate="yes" xml:space="preserve">
          <source>On a multi-core system, the shares of CPU time are distributed over all CPU cores. Even if a container is limited to less than 100% of CPU time, it can use 100% of each individual CPU core.</source>
          <target state="translated">マルチコアシステムでは、CPU時間のシェアはすべてのCPUコアに分散されます。コンテナがCPU時間の100%未満に制限されている場合でも、個々のCPUコアを100%使用することができます。</target>
        </trans-unit>
        <trans-unit id="e944d5fb7464fb058f07c3befc40f2587068c87a" translate="yes" xml:space="preserve">
          <source>On certain platforms (Windows 10), you might need to edit &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; inside &lt;code&gt;settings.py&lt;/code&gt; and add your Docker host name or IP address to the list. For demo purposes, you can set the value to:</source>
          <target state="translated">特定のプラットフォーム（Windowsの10）で、あなたは編集する必要があるかもしれません &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; 内 &lt;code&gt;settings.py&lt;/code&gt; 、リストにあなたのドッカーのホスト名またはIPアドレスを追加します。デモ用に、値を次のように設定できます。</target>
        </trans-unit>
        <trans-unit id="575c4ec90bbe7da51a51b795e32ed21481ced090" translate="yes" xml:space="preserve">
          <source>On desktop systems like Docker Desktop for Mac and Windows, Docker Compose is included as part of those desktop installs.</source>
          <target state="translated">Docker Desktop for MacやWindowsのようなデスクトップシステムでは、Docker Composeはそれらのデスクトップインストールの一部として含まれています。</target>
        </trans-unit>
        <trans-unit id="4d7d21116803faef336b719bf1dfa6910d9eb299" translate="yes" xml:space="preserve">
          <source>On macOS and Windows, Machine is installed along with other Docker products when you install the &lt;a href=&quot;https://docs.docker.com/docker-for-mac/&quot;&gt;Docker for Mac&lt;/a&gt;, &lt;a href=&quot;https://docs.docker.com/docker-for-windows/&quot;&gt;Docker for Windows&lt;/a&gt;, or &lt;a href=&quot;https://docs.docker.com/toolbox/overview/&quot;&gt;Docker Toolbox&lt;/a&gt;.</source>
          <target state="translated">macOSおよびWindowsでは、&lt;a href=&quot;https://docs.docker.com/docker-for-mac/&quot;&gt;Docker for Mac&lt;/a&gt;、&lt;a href=&quot;https://docs.docker.com/docker-for-windows/&quot;&gt;Docker for Windows&lt;/a&gt;、または&lt;a href=&quot;https://docs.docker.com/toolbox/overview/&quot;&gt;Docker Toolbox&lt;/a&gt;をインストールすると、Machineが他のDocker製品と共にインストールされます。</target>
        </trans-unit>
        <trans-unit id="72a45d6859d0adf02144ca0002e5c0fe9b75f160" translate="yes" xml:space="preserve">
          <source>On the Security of Containers (2014)</source>
          <target state="translated">コンテナのセキュリティについて (2014)</target>
        </trans-unit>
        <trans-unit id="9c3e42e98c296af685a79df8f41b6209e9eef0af" translate="yes" xml:space="preserve">
          <source>On this page you build a simple Python web application running on Docker Compose. The application uses the Flask framework and maintains a hit counter in Redis. While the sample uses Python, the concepts demonstrated here should be understandable even if you&amp;rsquo;re not familiar with it.</source>
          <target state="translated">このページでは、Docker Composeで実行する簡単なPython Webアプリケーションを構築します。アプリケーションはFlaskフレームワークを使用し、Redisでヒットカウンターを維持します。サンプルではPythonを使用していますが、ここで説明する概念は、慣れていない場合でも理解できるはずです。</target>
        </trans-unit>
        <trans-unit id="b807fc9347a2d037d0144e5bdab85677416a0c8d" translate="yes" xml:space="preserve">
          <source>On this page, you get an overview of the Notary service architecture.</source>
          <target state="translated">このページでは、Notary サービスのアーキテクチャの概要について説明します。</target>
        </trans-unit>
        <trans-unit id="74d910cbfd0aab2723f08ca998900202f12cc836" translate="yes" xml:space="preserve">
          <source>On to &amp;ldquo;Part 4&amp;rdquo; &amp;gt;&amp;gt;</source>
          <target state="translated">「パート4」へ&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="54c4e480c1328e48bc77f242d3cc9c1c938968de" translate="yes" xml:space="preserve">
          <source>On to Part 2 &amp;gt;&amp;gt;</source>
          <target state="translated">パート2に進む&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9843d995f490c8520f5b6924cbd4173fc130a03a" translate="yes" xml:space="preserve">
          <source>On to Part 5 &amp;gt;&amp;gt;</source>
          <target state="translated">パート5に進む&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="be02dda3f3835cfcb8c70ac71d44e92b8af35642" translate="yes" xml:space="preserve">
          <source>On to Part 6 &amp;gt;&amp;gt;</source>
          <target state="translated">パート6に進む&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5b0bb396a922e3c794100d9a776d358eac094609" translate="yes" xml:space="preserve">
          <source>Once a comment, empty line or builder instruction has been processed, Docker no longer looks for parser directives. Instead it treats anything formatted as a parser directive as a comment and does not attempt to validate if it might be a parser directive. Therefore, all parser directives must be at the very top of a &lt;code&gt;Dockerfile&lt;/code&gt;.</source>
          <target state="translated">コメント、空行、またはビルダー命令が処理されると、Dockerはパーサーディレクティブを検索しなくなります。代わりに、パーサーディレクティブとしてフォーマットされたものはすべてコメントとして扱われ、パーサーディレクティブであるかどうかの検証は行われません。したがって、すべてのパーサーディレクティブは &lt;code&gt;Dockerfile&lt;/code&gt; の最上部にある必要があります。</target>
        </trans-unit>
        <trans-unit id="4d1efe14751f47bf322327bc9fde1504b6bb52ae" translate="yes" xml:space="preserve">
          <source>Once a plugin is installed, requests made to the &lt;code&gt;daemon&lt;/code&gt; through the command line or Docker&amp;rsquo;s Engine API are allowed or denied by the plugin. If you have multiple plugins installed, each plugin, in order, must allow the request for it to complete.</source>
          <target state="translated">プラグインがインストールされると、コマンドラインまたはDockerのエンジンAPIを介して &lt;code&gt;daemon&lt;/code&gt; 行われた要求は、プラグインによって許可または拒否されます。複数のプラグインがインストールされている場合、各プラグインは順番に、リクエストの完了を許可する必要があります。</target>
        </trans-unit>
        <trans-unit id="7fe9de19505737022fd6b32fc9b0e8fccb803575" translate="yes" xml:space="preserve">
          <source>Once all the tasks are created and &lt;code&gt;RUNNING&lt;/code&gt;, the actual number of tasks is equal to the desired number:</source>
          <target state="translated">すべてのタスクが作成されて &lt;code&gt;RUNNING&lt;/code&gt; になると、実際のタスク数は目的の数と等しくなります。</target>
        </trans-unit>
        <trans-unit id="56942fc77efe5bdc7966eaa3b75a1ae686316851" translate="yes" xml:space="preserve">
          <source>Once all the uploaded metadata has been validated, Notary server generates the timestamp (and maybe snapshot) metadata. It sends this generated metadata to the Notary signer to be signed.</source>
          <target state="translated">アップロードされた全てのメタデータが検証されると、Notaryサーバはタイムスタンプ(と多分スナップショット)のメタデータを生成します。生成されたメタデータは、署名されるNotary署名者に送信されます。</target>
        </trans-unit>
        <trans-unit id="a0d98c5297f8e33cd69518be48ac156591623851" translate="yes" xml:space="preserve">
          <source>Once attached to a container, users detach from it and leave it running using the using &lt;code&gt;CTRL-p CTRL-q&lt;/code&gt; key sequence. This detach key sequence is customizable using the &lt;code&gt;detachKeys&lt;/code&gt; property. Specify a &lt;code&gt;&amp;lt;sequence&amp;gt;&lt;/code&gt; value for the property. The format of the &lt;code&gt;&amp;lt;sequence&amp;gt;&lt;/code&gt; is a comma-separated list of either a letter [a-Z], or the &lt;code&gt;ctrl-&lt;/code&gt; combined with any of the following:</source>
          <target state="translated">コンテナーに接続すると、ユーザーはコンテナーから切り離し、 &lt;code&gt;CTRL-p CTRL-q&lt;/code&gt; キーシーケンスを使用してコンテナーを実行したままにします。この切り離しキーシーケンスは、 &lt;code&gt;detachKeys&lt;/code&gt; プロパティを使用してカスタマイズできます。プロパティの &lt;code&gt;&amp;lt;sequence&amp;gt;&lt;/code&gt; 値を指定します。 &lt;code&gt;&amp;lt;sequence&amp;gt;&lt;/code&gt; の形式は、文字[aZ]、または &lt;code&gt;ctrl-&lt;/code&gt; のいずれかを次のいずれかと組み合わせたコンマ区切りのリストです。</target>
        </trans-unit>
        <trans-unit id="e90c896fc09f64b766bf35d746822d56cffc04ab" translate="yes" xml:space="preserve">
          <source>Once complete, the results of this upload are publicly available. If you log in to &lt;a href=&quot;https://hub.docker.com/&quot;&gt;Docker Hub&lt;/a&gt;, you see the new image there, with its pull command.</source>
          <target state="translated">完了すると、このアップロードの結果が公開されます。&lt;a href=&quot;https://hub.docker.com/&quot;&gt;Docker Hubに&lt;/a&gt;ログインすると、pullコマンドを使用して新しいイメージが表示されます。</target>
        </trans-unit>
        <trans-unit id="d8f7c925db7d01fbb66e5e5405a4d3bb23f3f946" translate="yes" xml:space="preserve">
          <source>Once connected in network, containers can communicate using only another container&amp;rsquo;s IP address or name. For &lt;code&gt;overlay&lt;/code&gt; networks or custom plugins that support multi-host connectivity, containers connected to the same multi-host network but launched from different Engines can also communicate in this way.</source>
          <target state="translated">ネットワークに接続すると、コンテナは別のコンテナのIPアドレスまたは名前のみを使用して通信できます。以下のために &lt;code&gt;overlay&lt;/code&gt; マルチホスト接続をサポートするネットワークまたはカスタムプラグイン、異なるエンジンから同じマルチホストネットワークに接続されているが、立ち上げた容器も、このように通信することができます。</target>
        </trans-unit>
        <trans-unit id="15e8ac44d73c6bc1cfc3fc73665137e6071769e6" translate="yes" xml:space="preserve">
          <source>Once fixed, retry to run the &lt;code&gt;build&lt;/code&gt; command.</source>
          <target state="translated">修正したら、 &lt;code&gt;build&lt;/code&gt; コマンドの実行を再試行します。</target>
        </trans-unit>
        <trans-unit id="eaaabd5b3500b89a4a6b4867d962747ad3977f96" translate="yes" xml:space="preserve">
          <source>Once running however, network driver plugins are used just like the built-in network drivers: by being mentioned as a driver in network-oriented Docker commands. For example,</source>
          <target state="translated">しかし、一度実行されると、ネットワークドライバプラグインは組み込みのネットワークドライバと同じように使用されます:ネットワーク指向のDockerコマンドの中でドライバとして言及されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="3dda62cdf72947347d71493f46957a16d8a0f35e" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;web&lt;/code&gt; service image is built, Compose runs it and executes the &lt;code&gt;django-admin startproject&lt;/code&gt; command in the container. This command instructs Django to create a set of files and directories representing a Django project.</source>
          <target state="translated">いったん &lt;code&gt;web&lt;/code&gt; サービスイメージが構築され、作曲はそれを実行し、実行 &lt;code&gt;django-admin startproject&lt;/code&gt; コンテナ内のコマンドを。このコマンドは、Djangoに、Djangoプロジェクトを表す一連のファイルとディレクトリを作成するように指示します。</target>
        </trans-unit>
        <trans-unit id="c38c944032eb15d8d5a2eaa143a9a3db348e4ee1" translate="yes" xml:space="preserve">
          <source>Once the image is built, squash the new layers into a new image with a single new layer. Squashing does not destroy any existing image, rather it creates a new image with the content of the squashed layers. This effectively makes it look like all &lt;code&gt;Dockerfile&lt;/code&gt; commands were created with a single layer. The build cache is preserved with this method.</source>
          <target state="translated">イメージが構築されたら、新しいレイヤーを1つの新しいレイヤーを持つ新しいイメージに押しつぶします。押しつぶしても既存の画像は破壊されず、押しつぶされたレイヤーの内容で新しい画像が作成されます。これにより、すべての &lt;code&gt;Dockerfile&lt;/code&gt; コマンドが1つのレイヤーで作成されたように見えます。ビルドキャッシュはこのメソッドで保持されます。</target>
        </trans-unit>
        <trans-unit id="ca3896babc6ce8fb1343800222a8b601ca8a17a1" translate="yes" xml:space="preserve">
          <source>Once the machine is created, you can modify &lt;a href=&quot;https://azure.microsoft.com/en-us/documentation/articles/virtual-networks-nsg/&quot;&gt;Network Security Group&lt;/a&gt; rules and open ports of the machine from the &lt;a href=&quot;https://portal.azure.com/&quot;&gt;Azure Portal&lt;/a&gt;.</source>
          <target state="translated">マシンが作成されたら、&lt;a href=&quot;https://azure.microsoft.com/en-us/documentation/articles/virtual-networks-nsg/&quot;&gt;ネットワークセキュリティグループの&lt;/a&gt;ルールを変更し、&lt;a href=&quot;https://portal.azure.com/&quot;&gt;Azure Portal&lt;/a&gt;からマシンのポートを開くことができます。</target>
        </trans-unit>
        <trans-unit id="7d163691b6fcdbab63ae51c125da2d8cbd8e30fb" translate="yes" xml:space="preserve">
          <source>Once the rotation os finished (all the progress bars have completed) the now-current CA certificate will be printed:</source>
          <target state="translated">ローテーションが終了すると(すべてのプログレスバーが完了した)、現在のCA証明書が印刷されます。</target>
        </trans-unit>
        <trans-unit id="e6a0da935f3387c6cf23ed7dfd3c1abcd6d15eb2" translate="yes" xml:space="preserve">
          <source>Once you create a machine, you can reuse it as often as you like. Like any VirtualBox VM, it maintains its configuration between uses.</source>
          <target state="translated">一度作成したマシンは何度でも再利用できます。他の VirtualBox VM と同様に、使用する間は設定を維持します。</target>
        </trans-unit>
        <trans-unit id="454015aad37d070d30cca27f23fcf8cfb238ed55" translate="yes" xml:space="preserve">
          <source>Once you have &lt;a href=&quot;../deploy-service/index&quot;&gt;deployed a service&lt;/a&gt; to a swarm, you are ready to use the Docker CLI to scale the number of containers in the service. Containers running in a service are called &amp;ldquo;tasks.&amp;rdquo;</source>
          <target state="translated">あなたがしたら、&lt;a href=&quot;../deploy-service/index&quot;&gt;サービス展開&lt;/a&gt;群れには、あなたは、サービス内のコンテナの数を拡張するドッカーCLIを使用する準備が整いました。サービスで実行されているコンテナは「タスク」と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="9bcab9e6b01a5724ea4674f151046a69aeb6d019" translate="yes" xml:space="preserve">
          <source>Once you have authenticated and have a &lt;code&gt;docker =#&lt;/code&gt; prompt, you can create a table and populate it.</source>
          <target state="translated">認証が完了して &lt;code&gt;docker =#&lt;/code&gt; プロンプトが表示されたら、テーブルを作成してデータを入力できます。</target>
        </trans-unit>
        <trans-unit id="5657e872b393a567f71a1814946d96ff6edb7246" translate="yes" xml:space="preserve">
          <source>Once you have prepared the &lt;code&gt;overlay&lt;/code&gt; network prerequisites you simply choose a Docker host in the cluster and issue the following to create the network:</source>
          <target state="translated">&lt;code&gt;overlay&lt;/code&gt; ネットワークの前提条件を準備したら、クラスター内のDockerホストを選択し、次のコマンドを発行してネットワークを作成します。</target>
        </trans-unit>
        <trans-unit id="1f009904ccff92bba5b6ea6fcc355e42d3ce4c64" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;re all set up and Docker Enterprise is running, you can &lt;a href=&quot;https://docs.docker.com/ee/ucp/swarm/deploy-multi-service-app/&quot;&gt;deploy your Compose file from directly within the UI&lt;/a&gt;.</source>
          <target state="translated">すべての設定が完了し、Docker Enterpriseが実行されたら&lt;a href=&quot;https://docs.docker.com/ee/ucp/swarm/deploy-multi-service-app/&quot;&gt;、UI内から直接Composeファイルをデプロイできます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="116656d8ab8df9e7fd835c2eda2bee76bc3980f8" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve &lt;a href=&quot;../create-swarm/index&quot;&gt;created a swarm&lt;/a&gt; with a manager node, you&amp;rsquo;re ready to add worker nodes.</source>
          <target state="translated">マネージャーノードで&lt;a href=&quot;../create-swarm/index&quot;&gt;スウォーム&lt;/a&gt;を作成したら、ワーカーノードを追加する準備が整います。</target>
        </trans-unit>
        <trans-unit id="77917b8cb1d222e94bdaf0dd39241770f26e0097" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve acquired the delegate&amp;rsquo;s x509 certificate, you can add a delegation for this user:</source>
          <target state="translated">デリゲートのx509証明書を取得したら、このユーザーのデリゲートを追加できます。</target>
        </trans-unit>
        <trans-unit id="2727a7eab8f6eb87a7ebf4ec8b3a1914247b0efd" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve got a second configuration file, tell Compose to use it with the &lt;code&gt;-f&lt;/code&gt; option:</source>
          <target state="translated">2番目の構成ファイルを取得したら、 &lt;code&gt;-f&lt;/code&gt; オプションを付けて使用するようにComposeに指示します。</target>
        </trans-unit>
        <trans-unit id="3778c802be7c428cae96c2a439939a1c8da464b8" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve set up your environment variables, all the normal &lt;code&gt;docker-compose&lt;/code&gt; commands work with no further configuration.</source>
          <target state="translated">環境変数を設定すると、通常のすべての &lt;code&gt;docker-compose&lt;/code&gt; コマンドがそれ以上の構成なしで機能します。</target>
        </trans-unit>
        <trans-unit id="74525fecde5ee28aa0ef8e4beb36249c122bad51" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve shut down the app, you can safely remove the Django project directory (for example, &lt;code&gt;rm -rf django&lt;/code&gt;).</source>
          <target state="translated">アプリをシャットダウンしたら、Djangoプロジェクトディレクトリ（たとえば、 &lt;code&gt;rm -rf django&lt;/code&gt; ）を安全に削除できます。</target>
        </trans-unit>
        <trans-unit id="051cbdf3c78cb0f6f7669084244f68dd8c47bfe6" translate="yes" xml:space="preserve">
          <source>One example where this can be useful is to balance tasks over a set of data centers together with &lt;code&gt;--placement-pref&lt;/code&gt; and let &lt;code&gt;--replicas-max-per-node&lt;/code&gt; setting make sure that replicas are not migrated to another datacenter during maintenance or datacenter failure.</source>
          <target state="translated">これが有用であることができる一つの例は、一緒にデータセンターのセットの上にバランスのタスクにある &lt;code&gt;--placement-pref&lt;/code&gt; とせ &lt;code&gt;--replicas-max-per-node&lt;/code&gt; レプリカがメンテナンスやデータセンターの間に別のデータセンターに移行されていないことを確認してくださいを設定します失敗。</target>
        </trans-unit>
        <trans-unit id="8fa15a8cd6bb999bab428cb61240621e59c0d4b5" translate="yes" xml:space="preserve">
          <source>One node with &lt;code&gt;node.labels.datacenter=west&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;node.labels.datacenter=west&lt;/code&gt; の 1つのノード</target>
        </trans-unit>
        <trans-unit id="348eb2becfa41247043a7aed9f62a577b3355fdc" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;&quot;debug&quot;&lt;/code&gt;, &lt;code&gt;&quot;info&quot;&lt;/code&gt;, &lt;code&gt;&quot;warning&quot;&lt;/code&gt;, &lt;code&gt;&quot;error&quot;&lt;/code&gt;, &lt;code&gt;&quot;fatal&quot;&lt;/code&gt;, or &lt;code&gt;&quot;panic&quot;&lt;/code&gt;</source>
          <target state="translated">一つ &lt;code&gt;&quot;debug&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;info&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;warning&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;error&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;fatal&quot;&lt;/code&gt; 、または &lt;code&gt;&quot;panic&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b97ba5665c47d913f8e537994abc4452d4a0461" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;created&lt;/code&gt;, &lt;code&gt;restarting&lt;/code&gt;, &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;removing&lt;/code&gt;, &lt;code&gt;paused&lt;/code&gt;, &lt;code&gt;exited&lt;/code&gt;, or &lt;code&gt;dead&lt;/code&gt;</source>
          <target state="translated">一つの &lt;code&gt;created&lt;/code&gt; 、 &lt;code&gt;restarting&lt;/code&gt; 、 &lt;code&gt;running&lt;/code&gt; 、 &lt;code&gt;removing&lt;/code&gt; 、 &lt;code&gt;paused&lt;/code&gt; 、 &lt;code&gt;exited&lt;/code&gt; 、または &lt;code&gt;dead&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e9b643632e1f4fe5313a82eef5d384932ab430b" translate="yes" xml:space="preserve">
          <source>One of the key advantages of swarm services over standalone containers is that you can modify a service&amp;rsquo;s configuration, including the networks and volumes it is connected to, without the need to manually restart the service. Docker will update the configuration, stop the service tasks with the out of date configuration, and create new ones matching the desired configuration.</source>
          <target state="translated">スタンドアロンコンテナに対するSwarmサービスの主な利点の1つは、サービスを手動で再起動する必要なしに、接続されているネットワークやボリュームを含むサービスの構成を変更できることです。Dockerは構成を更新し、古い構成でサービスタスクを停止し、目的の構成に一致する新しいタスクを作成します。</target>
        </trans-unit>
        <trans-unit id="bdc48965a7027e7a8943cd2f1cab62e508bb10b0" translate="yes" xml:space="preserve">
          <source>One of the solution is to add a more permissive rule to a container allowing it access to a wider range of devices. For example, supposing our container needs access to a character device with major &lt;code&gt;42&lt;/code&gt; and any number of minor number (added as new devices appear), the following rule would be added:</source>
          <target state="translated">解決策の1つは、より許容範囲の広いルールをコンテナーに追加して、コンテナーがより幅広いデバイスにアクセスできるようにすることです。たとえば、コンテナがメジャー &lt;code&gt;42&lt;/code&gt; と任意の数のマイナー番号（新しいデバイスが表示されるときに追加される）のキャラクターデバイスにアクセスする必要がある場合、次のルールが追加されます。</target>
        </trans-unit>
        <trans-unit id="84885fc5a91971a3365b54e8a5fe873f3a68b977" translate="yes" xml:space="preserve">
          <source>One of these machines is a manager (called &lt;code&gt;manager1&lt;/code&gt;) and two of them are workers (&lt;code&gt;worker1&lt;/code&gt; and &lt;code&gt;worker2&lt;/code&gt;).</source>
          <target state="translated">これらのマシンの1つはマネージャー（ &lt;code&gt;manager1&lt;/code&gt; と呼ばれます）であり、そのうちの2つはワーカー（ &lt;code&gt;worker1&lt;/code&gt; および &lt;code&gt;worker2&lt;/code&gt; ）です。</target>
        </trans-unit>
        <trans-unit id="eaea1d4f625abd92e75da029bbae5df079760d28" translate="yes" xml:space="preserve">
          <source>One or more custom metadata (&quot;labels&quot;) to apply to the volume upon creation. For example,</source>
          <target state="translated">作成時にボリュームに適用する1つ以上のカスタム・メタデータ(「ラベル」)。例えば、以下のようなものです。</target>
        </trans-unit>
        <trans-unit id="2a0d703048410736d5373cad1e26fec8963dae74" translate="yes" xml:space="preserve">
          <source>One primary risk with running Docker containers is that the default set of capabilities and mounts given to a container may provide incomplete isolation, either independently, or when used in combination with kernel vulnerabilities.</source>
          <target state="translated">Dockerコンテナを実行する際の主なリスクとして、コンテナに与えられたデフォルトの機能とマウントのセットが、単独で、あるいはカーネルの脆弱性と組み合わせて使用された場合に、不完全な分離を提供する可能性があるということが挙げられます。</target>
        </trans-unit>
        <trans-unit id="da52240c2554be4279062881dbc210df95e113ab" translate="yes" xml:space="preserve">
          <source>One solution to the above would be to use &lt;code&gt;/&lt;/code&gt; as the target of both the &lt;code&gt;COPY&lt;/code&gt; instruction, and &lt;code&gt;dir&lt;/code&gt;. However, this syntax is, at best, confusing as it is not natural for paths on &lt;code&gt;Windows&lt;/code&gt;, and at worst, error prone as not all commands on &lt;code&gt;Windows&lt;/code&gt; support &lt;code&gt;/&lt;/code&gt; as the path separator.</source>
          <target state="translated">上記の解決策の1つは、 &lt;code&gt;COPY&lt;/code&gt; 命令と &lt;code&gt;dir&lt;/code&gt; の両方のターゲットとして &lt;code&gt;/&lt;/code&gt; を使用することです。ただし、この構文は、 &lt;code&gt;Windows&lt;/code&gt; のパスでは自然ではないため、よくても混乱を招き、最悪の場合、 &lt;code&gt;Windows&lt;/code&gt; のすべてのコマンドが &lt;code&gt;/&lt;/code&gt; をパス区切り文字としてサポートするわけではないため、エラーが発生しやすくなります。</target>
        </trans-unit>
        <trans-unit id="d503cec36ba3889aa583ab44a017b49867ef70ae" translate="yes" xml:space="preserve">
          <source>One way to configure credentials is to use the standard credential file for Amazon AWS &lt;code&gt;~/.aws/credentials&lt;/code&gt; file, which might look like:</source>
          <target state="translated">認証情報を設定する1つの方法は、Amazon &lt;code&gt;~/.aws/credentials&lt;/code&gt; ファイルの標準の認証情報ファイルを使用することです。これは次のようになります。</target>
        </trans-unit>
        <trans-unit id="4c837782ce87036a24d5fce05db6fa517e6dad7c" translate="yes" xml:space="preserve">
          <source>One way to do this would be:</source>
          <target state="translated">一つの方法としては</target>
        </trans-unit>
        <trans-unit id="836cf691d03f65c71ca270a0d1c1e46e99aa0091" translate="yes" xml:space="preserve">
          <source>Only a manager that is running as the leader &lt;strong&gt;and&lt;/strong&gt; running Docker 17.06 or higher tells nodes to renew their TLS certificates.</source>
          <target state="translated">指導者として実行されているだけマネージャー&lt;strong&gt;と&lt;/strong&gt;ドッカー17.06以上を実行しては、彼らのTLS証明書を更新するノードに指示します。</target>
        </trans-unit>
        <trans-unit id="97662b4ccf0171aec4bb35a43361c5cc033a67b3" translate="yes" xml:space="preserve">
          <source>Only display IDs</source>
          <target state="translated">IDのみ表示</target>
        </trans-unit>
        <trans-unit id="9ab86dcef4c90f8cc1c591f2617ae4b73b5c0d3a" translate="yes" xml:space="preserve">
          <source>Only display available licenses by ID</source>
          <target state="translated">利用可能なライセンスのみをIDで表示</target>
        </trans-unit>
        <trans-unit id="7e68c0586f0a038388cd4ceca06ffe73eb6aaba4" translate="yes" xml:space="preserve">
          <source>Only display available versions</source>
          <target state="translated">利用可能なバージョンのみ表示</target>
        </trans-unit>
        <trans-unit id="94a1b3e803e0efb4d69c909c9c2970d7e9898bf7" translate="yes" xml:space="preserve">
          <source>Only display network IDs</source>
          <target state="translated">ネットワークIDのみ表示</target>
        </trans-unit>
        <trans-unit id="f9e80298753072b6ed35c687090505f5bbbb1473" translate="yes" xml:space="preserve">
          <source>Only display numeric IDs</source>
          <target state="translated">数字のIDのみ表示</target>
        </trans-unit>
        <trans-unit id="48d7cbd90c6b618454294145ec7f3554a6930c2a" translate="yes" xml:space="preserve">
          <source>Only display plugin IDs</source>
          <target state="translated">プラグインIDのみ表示</target>
        </trans-unit>
        <trans-unit id="960e69e3e6df8844a37315d85436cdfa790a36af" translate="yes" xml:space="preserve">
          <source>Only display task IDs</source>
          <target state="translated">タスクIDのみ表示</target>
        </trans-unit>
        <trans-unit id="9f6e222ebe43d7f341e831c0667c50a0fb885a7b" translate="yes" xml:space="preserve">
          <source>Only display token</source>
          <target state="translated">表示トークンのみ</target>
        </trans-unit>
        <trans-unit id="b911d9aa3b899277c67d4cc215df97379ff896b5" translate="yes" xml:space="preserve">
          <source>Only display volume names</source>
          <target state="translated">ボリューム名のみ表示</target>
        </trans-unit>
        <trans-unit id="6e4b8beb34eb55485ecd1246f53668cf6d84b10d" translate="yes" xml:space="preserve">
          <source>Only displays with at least x stars</source>
          <target state="translated">少なくとも x 個の星が付いている表示のみ</target>
        </trans-unit>
        <trans-unit id="b0f4b17835d4d9182fd1134b6c14839078b83007" translate="yes" xml:space="preserve">
          <source>Only nodes running Docker 17.06 or higher obey this directive.</source>
          <target state="translated">Docker 17.06以上を実行しているノードのみがこのディレクティブに従います。</target>
        </trans-unit>
        <trans-unit id="89bdf6b8c61a8d2421795f315b1bb5daa2f685b1" translate="yes" xml:space="preserve">
          <source>Only one trust pinning option is used to validate a GUN even if multiple sections are specified, and any validation failure results in a failed bootstrapping of the repo.</source>
          <target state="translated">複数のセクションが指定されている場合でも、GUNの検証には1つのトラストピン留めオプションのみが使用され、検証に失敗するとレポのブートストラップに失敗します。</target>
        </trans-unit>
        <trans-unit id="3deca4e6f5e41ffffaeb699f5775f94b0ba66dee" translate="yes" xml:space="preserve">
          <source>Only reachable by other containers on the &lt;code&gt;mysql_private&lt;/code&gt; network.</source>
          <target state="translated">&lt;code&gt;mysql_private&lt;/code&gt; ネットワーク上の他のコンテナーからのみ到達可能。</target>
        </trans-unit>
        <trans-unit id="290007b091dcea10b5cf4c61f4c56991ea6502b0" translate="yes" xml:space="preserve">
          <source>Only recreate containers that have changed</source>
          <target state="translated">変更したコンテナのみを再作成する</target>
        </trans-unit>
        <trans-unit id="8ab2c05fb1993f387a0820512191c0c7ceddcea7" translate="yes" xml:space="preserve">
          <source>Only show automated builds</source>
          <target state="translated">自動ビルドのみ表示</target>
        </trans-unit>
        <trans-unit id="bb2f3e52e454841d64badb4f91abaf43c9c67ca0" translate="yes" xml:space="preserve">
          <source>Only show context names</source>
          <target state="translated">コンテキスト名のみ表示</target>
        </trans-unit>
        <trans-unit id="1006436cb96a095ec0230b3414c15a3ddef19d2e" translate="yes" xml:space="preserve">
          <source>Only show numeric IDs</source>
          <target state="translated">数字のIDのみ表示</target>
        </trans-unit>
        <trans-unit id="781aa39610d18058a92379b7f9d0ed56dd72ec77" translate="yes" xml:space="preserve">
          <source>Only the last &lt;code&gt;ENTRYPOINT&lt;/code&gt; instruction in the &lt;code&gt;Dockerfile&lt;/code&gt; will have an effect.</source>
          <target state="translated">唯一の最後の &lt;code&gt;ENTRYPOINT&lt;/code&gt; の命令 &lt;code&gt;Dockerfile&lt;/code&gt; は効果があります。</target>
        </trans-unit>
        <trans-unit id="5e61e329a2e0c93f824dc71096e72344a436f1b5" translate="yes" xml:space="preserve">
          <source>Only the operator (the person executing &lt;code&gt;docker run&lt;/code&gt;) can set the following options.</source>
          <target state="translated">オペレーター（ &lt;code&gt;docker run&lt;/code&gt; を実行する人）のみが次のオプションを設定できます。</target>
        </trans-unit>
        <trans-unit id="23a6b346c16bf1294baeac2410838ec04a1545ea" translate="yes" xml:space="preserve">
          <source>Only the string form (&lt;code&gt;build: .&lt;/code&gt;) is allowed - not the object form that is allowed in Version 2 and up.</source>
          <target state="translated">文字列形式（ &lt;code&gt;build: .&lt;/code&gt; ）のみが許可されます-バージョン2以降で許可されているオブジェクト形式は許可されません。</target>
        </trans-unit>
        <trans-unit id="65d25ab9942777b1b0014048bae309a0e743c8f4" translate="yes" xml:space="preserve">
          <source>Only used when the &lt;code&gt;driver&lt;/code&gt; is set to &lt;code&gt;overlay&lt;/code&gt;. If set to &lt;code&gt;true&lt;/code&gt;, then standalone containers can attach to this network, in addition to services. If a standalone container attaches to an overlay network, it can communicate with services and standalone containers that are also attached to the overlay network from other Docker daemons.</source>
          <target state="translated">&lt;code&gt;driver&lt;/code&gt; が &lt;code&gt;overlay&lt;/code&gt; に設定されている場合にのみ使用されます。 &lt;code&gt;true&lt;/code&gt; に設定すると、スタンドアロンのコンテナがサービスに加えてこのネットワークに接続できます。スタンドアロンコンテナーがオーバーレイネットワークに接続している場合、他のDockerデーモンからオーバーレイネットワークにも接続されているサービスやスタンドアロンコンテナーと通信できます。</target>
        </trans-unit>
        <trans-unit id="20144a2732a327e45c11d44494ba6852d26b907d" translate="yes" xml:space="preserve">
          <source>Open a command prompt and navigate to your project folder.</source>
          <target state="translated">コマンドプロンプトを開き、プロジェクトフォルダに移動します。</target>
        </trans-unit>
        <trans-unit id="73821dd0dd9432d69d6529ac10fff014c941b165" translate="yes" xml:space="preserve">
          <source>Open a command shell or terminal window.</source>
          <target state="translated">コマンドシェルまたはターミナルウィンドウを開きます。</target>
        </trans-unit>
        <trans-unit id="f140b48ecb5b38e5dc91bab8531febeef621c8d9" translate="yes" xml:space="preserve">
          <source>Open a new interactive terminal from your host, and obtain a shell into the &lt;code&gt;sandboxregistry&lt;/code&gt; container.</source>
          <target state="translated">ホストから新しいインタラクティブターミナルを開き、 &lt;code&gt;sandboxregistry&lt;/code&gt; コンテナーにシェルを取得します。</target>
        </trans-unit>
        <trans-unit id="8ff00a92e81513e496b0ebe9b2bef278874e789e" translate="yes" xml:space="preserve">
          <source>Open a terminal and ssh into the machine where the manager node runs and run the &lt;code&gt;docker node ls&lt;/code&gt; command to see the worker nodes:</source>
          <target state="translated">ターミナルを開き、マネージャーノードが実行されているマシンにSSHで接続し、 &lt;code&gt;docker node ls&lt;/code&gt; コマンドを実行してワーカーノードを表示します。</target>
        </trans-unit>
        <trans-unit id="9c12930eb306e8f822bb709dc19dacef127702b4" translate="yes" xml:space="preserve">
          <source>Open a terminal and ssh into the machine where you run your manager node. For example, the tutorial uses a machine named &lt;code&gt;manager1&lt;/code&gt;.</source>
          <target state="translated">ターミナルを開いて、マネージャーノードを実行しているマシンにSSHで接続します。たとえば、チュートリアルでは &lt;code&gt;manager1&lt;/code&gt; という名前のマシンを使用しています。</target>
        </trans-unit>
        <trans-unit id="c986665333a8a1d4d867db05c76bff37d7e42e8e" translate="yes" xml:space="preserve">
          <source>Open a terminal and ssh into the machine where you want to run a second worker node. This tutorial uses the name &lt;code&gt;worker2&lt;/code&gt;.</source>
          <target state="translated">ターミナルを開き、2番目のワーカーノードを実行するマシンにSSHで接続します。このチュートリアルでは、 &lt;code&gt;worker2&lt;/code&gt; という名前を使用しています。</target>
        </trans-unit>
        <trans-unit id="cb177fbe8481d03c21d43e751ee8ae3ec64dac99" translate="yes" xml:space="preserve">
          <source>Open a terminal and ssh into the machine where you want to run a worker node. This tutorial uses the name &lt;code&gt;worker1&lt;/code&gt;.</source>
          <target state="translated">ターミナルを開き、ワーカーノードを実行するマシンにSSHで接続します。このチュートリアルでは、 &lt;code&gt;worker1&lt;/code&gt; という名前を使用しています。</target>
        </trans-unit>
        <trans-unit id="66392c87ae248bacd34a4d1b70b1cb48f706c63c" translate="yes" xml:space="preserve">
          <source>Open a terminal and ssh into the machine where you want to run your manager node. This tutorial uses a machine named &lt;code&gt;manager1&lt;/code&gt;. If you use Docker Machine, you can connect to it via SSH using the following command:</source>
          <target state="translated">ターミナルを開き、マネージャーノードを実行するマシンにSSHで接続します。このチュートリアルでは、 &lt;code&gt;manager1&lt;/code&gt; という名前のマシンを使用します。Docker Machineを使用している場合は、次のコマンドを使用してSSH経由でそれに接続できます。</target>
        </trans-unit>
        <trans-unit id="90d95d523000f1334d29b28bdfb3f5d9e6fdf46c" translate="yes" xml:space="preserve">
          <source>Open a terminal or the Docker CLI on your system.</source>
          <target state="translated">システム上でターミナルまたはDocker CLIを開きます。</target>
        </trans-unit>
        <trans-unit id="fe7789ab4bbfe44daaecfeb6aa74dc555796c33f" translate="yes" xml:space="preserve">
          <source>Open ports to services on cloud provider machines</source>
          <target state="translated">クラウドプロバイダのマシン上のサービスにポートをオープン</target>
        </trans-unit>
        <trans-unit id="c2b085241c5d1c3d094ef71abb91763cf44b165c" translate="yes" xml:space="preserve">
          <source>Open protocols and ports between the hosts</source>
          <target state="translated">ホスト間でプロトコルとポートをオープン</target>
        </trans-unit>
        <trans-unit id="f0931780652eaa7cd0ab5ad77bf4567f01fd5a6d" translate="yes" xml:space="preserve">
          <source>Open the &lt;strong&gt;Hyper-V Manager&lt;/strong&gt;. (On Windows 10, search for the Hyper-V Manager in the lower left search field.)</source>
          <target state="translated">&lt;strong&gt;Hyper-Vマネージャーを&lt;/strong&gt;開きます。（Windows 10では、左下の検索フィールドでHyper-Vマネージャーを検索します。）</target>
        </trans-unit>
        <trans-unit id="71d18671c4ef09e35eabea9ba29259d586061bc1" translate="yes" xml:space="preserve">
          <source>Open up &lt;code&gt;docker-compose.yml&lt;/code&gt; in an editor and replace its contents with the following. Be sure to replace &lt;code&gt;username/repo:tag&lt;/code&gt; with your image details.</source>
          <target state="translated">エディターで &lt;code&gt;docker-compose.yml&lt;/code&gt; を開き、その内容を次のように置き換えます。 &lt;code&gt;username/repo:tag&lt;/code&gt; を画像の詳細に置き換えてください。</target>
        </trans-unit>
        <trans-unit id="359dbe2983a5e056ff6a9e5eb77bedf941963318" translate="yes" xml:space="preserve">
          <source>Open-source</source>
          <target state="translated">Open-source</target>
        </trans-unit>
        <trans-unit id="3d8bd6f9a145c81ba3f59062586c5cf6108400d0" translate="yes" xml:space="preserve">
          <source>OpenStack</source>
          <target state="translated">OpenStack</target>
        </trans-unit>
        <trans-unit id="9afacaa405964a9f3509bd63e45c0643e9b44bc8" translate="yes" xml:space="preserve">
          <source>OpenStorage Plugin</source>
          <target state="translated">OpenStorage プラグイン</target>
        </trans-unit>
        <trans-unit id="d123520b5a0068be3e31e6f7c3f36e3e5a8612d5" translate="yes" xml:space="preserve">
          <source>Operate manager nodes in a swarm</source>
          <target state="translated">スウォームでマネージャノードを操作する</target>
        </trans-unit>
        <trans-unit id="fc9c955d85178cd913bd38c446f912eed92dc41e" translate="yes" xml:space="preserve">
          <source>Operate on machines without specifying the name</source>
          <target state="translated">名前を指定せずにマシンを操作する</target>
        </trans-unit>
        <trans-unit id="e5ba86326755952233b0543acced2995e5faf457" translate="yes" xml:space="preserve">
          <source>Operating System</source>
          <target state="translated">オペレーティングシステム</target>
        </trans-unit>
        <trans-unit id="ef9f46256fd0814f00b707514623ae1a3f1eb5e1" translate="yes" xml:space="preserve">
          <source>Operator exclusive options</source>
          <target state="translated">オペレーター専用オプション</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="61d64dff0785571c6eba5ea81694dab18d784171" translate="yes" xml:space="preserve">
          <source>Option types</source>
          <target state="translated">オプションの種類</target>
        </trans-unit>
        <trans-unit id="968cd00280ec3de7f43254c915aeb523cbc48e86" translate="yes" xml:space="preserve">
          <source>Optional parent cgroup for the container</source>
          <target state="translated">コンテナのオプションの親 cgroup</target>
        </trans-unit>
        <trans-unit id="067a1029f7359b1bec4c546c6c0672c3b9517818" translate="yes" xml:space="preserve">
          <source>Optional security options (--security-opt)</source>
          <target state="translated">オプションのセキュリティオプション (-security-opt)</target>
        </trans-unit>
        <trans-unit id="2b19dd7d02f914828409b09a211d46a776fdf662" translate="yes" xml:space="preserve">
          <source>Optional volume driver for the container</source>
          <target state="translated">コンテナ用のオプションのボリュームドライバ</target>
        </trans-unit>
        <trans-unit id="166b83695108e689f06f6d8c9503d654c46d0387" translate="yes" xml:space="preserve">
          <source>Optional:</source>
          <target state="translated">Optional:</target>
        </trans-unit>
        <trans-unit id="e19c10f0574eae1f843ee1f8516d026345ba6571" translate="yes" xml:space="preserve">
          <source>Optionally &lt;code&gt;COPY&lt;/code&gt; accepts a flag &lt;code&gt;--from=&amp;lt;name|index&amp;gt;&lt;/code&gt; that can be used to set the source location to a previous build stage (created with &lt;code&gt;FROM .. AS &amp;lt;name&amp;gt;&lt;/code&gt;) that will be used instead of a build context sent by the user. The flag also accepts a numeric index assigned for all previous build stages started with &lt;code&gt;FROM&lt;/code&gt; instruction. In case a build stage with a specified name can&amp;rsquo;t be found an image with the same name is attempted to be used instead.</source>
          <target state="translated">随意 &lt;code&gt;COPY&lt;/code&gt; はフラグ受け付け &lt;code&gt;--from=&amp;lt;name|index&amp;gt;&lt;/code&gt; （で作成された以前のビルドステージにソースの場所を設定するために使用することができる &lt;code&gt;FROM .. AS &amp;lt;name&amp;gt;&lt;/code&gt; 代わりによって送信されたビルドコンテキストのに使用されます）ユーザー。このフラグは、 &lt;code&gt;FROM&lt;/code&gt; 命令で開始された以前のすべてのビルドステージに割り当てられた数値インデックスも受け入れます。指定された名前のビルドステージが見つからない場合、同じ名前のイメージが代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="70a18d4d4d9cff0221fbba3064bff784177f9b09" translate="yes" xml:space="preserve">
          <source>Optionally a name can be given to a new build stage by adding &lt;code&gt;AS name&lt;/code&gt; to the &lt;code&gt;FROM&lt;/code&gt; instruction. The name can be used in subsequent &lt;code&gt;FROM&lt;/code&gt; and &lt;code&gt;COPY --from=&amp;lt;name|index&amp;gt;&lt;/code&gt; instructions to refer to the image built in this stage.</source>
          <target state="translated">オプションで、 &lt;code&gt;FROM&lt;/code&gt; 命令に &lt;code&gt;AS name&lt;/code&gt; を追加して、新しいビルドステージに名前を付けることができます。この名前は、以降の &lt;code&gt;FROM&lt;/code&gt; および &lt;code&gt;COPY --from=&amp;lt;name|index&amp;gt;&lt;/code&gt; 命令で使用して、このステージで構築されたイメージを参照できます。</target>
        </trans-unit>
        <trans-unit id="da1dff0fd723d5323b4ff25d25090bd7d73c2a34" translate="yes" xml:space="preserve">
          <source>Optionally specify a path on the host machine (&lt;code&gt;HOST:CONTAINER&lt;/code&gt;), or an access mode (&lt;code&gt;HOST:CONTAINER:ro&lt;/code&gt;).</source>
          <target state="translated">オプションで、ホストマシン上のパス（ &lt;code&gt;HOST:CONTAINER&lt;/code&gt; ）またはアクセスモード（ &lt;code&gt;HOST:CONTAINER:ro&lt;/code&gt; ）を指定します。</target>
        </trans-unit>
        <trans-unit id="56fcf3735ce385cf68e901ac1dacb6f811093553" translate="yes" xml:space="preserve">
          <source>Optionally, create an AWS credential file.</source>
          <target state="translated">オプションでAWSのクレデンシャルファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="e43603d33f432024aed5c582d5d86095fb10f05f" translate="yes" xml:space="preserve">
          <source>Optionally, install &lt;a href=&quot;../completion/index&quot;&gt;command completion&lt;/a&gt; for the &lt;code&gt;bash&lt;/code&gt; and &lt;code&gt;zsh&lt;/code&gt; shell.</source>
          <target state="translated">オプションで、 &lt;code&gt;bash&lt;/code&gt; および &lt;code&gt;zsh&lt;/code&gt; シェルの&lt;a href=&quot;../completion/index&quot;&gt;コマンド補完&lt;/a&gt;をインストールします。</target>
        </trans-unit>
        <trans-unit id="ff6f78b2b732dd50d2bb5b796ceeafb9791c7c1a" translate="yes" xml:space="preserve">
          <source>Optionally, remove the machines you created.</source>
          <target state="translated">オプションで、作成したマシンを削除します。</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="d1f9c65ceed5ac10fc6f610fce7eb34eea64f903" translate="yes" xml:space="preserve">
          <source>Options for Bind Mounts</source>
          <target state="translated">バインドマウントのオプション</target>
        </trans-unit>
        <trans-unit id="d72d2c2d03d1750c7638123c82b942c95499306e" translate="yes" xml:space="preserve">
          <source>Options for named volumes</source>
          <target state="translated">名前付きボリュームのオプション</target>
        </trans-unit>
        <trans-unit id="2e04ea69bd11f5159ab09d902e468334f123a9f1" translate="yes" xml:space="preserve">
          <source>Options for the runtime</source>
          <target state="translated">ランタイムのオプション</target>
        </trans-unit>
        <trans-unit id="a1cf8fe2d90fce64054ef798ae99d316551b6d5b" translate="yes" xml:space="preserve">
          <source>Options for tmpfs</source>
          <target state="translated">tmpfs のオプション</target>
        </trans-unit>
        <trans-unit id="6f268a80958e1f56daa912f8eec225fec6754f2b" translate="yes" xml:space="preserve">
          <source>Options like &lt;code&gt;--name=&quot;&quot;&lt;/code&gt; expect a string, and they can only be specified once. Options like &lt;code&gt;-c=0&lt;/code&gt; expect an integer, and they can only be specified once.</source>
          <target state="translated">&lt;code&gt;--name=&quot;&quot;&lt;/code&gt; のようなオプションは文字列を期待し、それらは一度しか指定できません。 &lt;code&gt;-c=0&lt;/code&gt; のようなオプションは整数を期待し、それらは一度しか指定できません。</target>
        </trans-unit>
        <trans-unit id="97d86f82e924af65a4340bf40e3d953394e0c765" translate="yes" xml:space="preserve">
          <source>Options per storage driver</source>
          <target state="translated">ストレージドライバごとのオプション</target>
        </trans-unit>
        <trans-unit id="a2194be9af6f0547c10d6dedd8548e5af9de6c7a" translate="yes" xml:space="preserve">
          <source>Options specific to a given volume driver, which will be passed to the driver when creating the volume. Options are provided as a comma-separated list of key/value pairs, for example,</source>
          <target state="translated">ボリュームを作成する際にドライバに渡される、指定されたボリュームドライバに固有のオプション。オプションは、例えば、キーと値のペアをカンマで区切ったリストとして提供されます。</target>
        </trans-unit>
        <trans-unit id="2ee54a2902a3f6515377b2b4148d5996f355be54" translate="yes" xml:space="preserve">
          <source>Options which default to &lt;code&gt;true&lt;/code&gt; (e.g., &lt;code&gt;docker build --rm=true&lt;/code&gt;) can only be set to the non-default value by explicitly setting them to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">デフォルトが &lt;code&gt;true&lt;/code&gt; になっているオプション（例： &lt;code&gt;docker build --rm=true&lt;/code&gt; ）は、明示的に &lt;code&gt;false&lt;/code&gt; に設定することによって、デフォルト以外の値にのみ設定できます。</target>
        </trans-unit>
        <trans-unit id="758dba0595095b1b9bb3efb50538508ec47ab8a6" translate="yes" xml:space="preserve">
          <source>Options with [] may be specified multiple times.</source>
          <target state="translated">オプションに[]を付けると複数回指定することができます。</target>
        </trans-unit>
        <trans-unit id="bbd0d74b6040cff807335c68824ae8280a7f1976" translate="yes" xml:space="preserve">
          <source>Options, Environment Variables, and Defaults</source>
          <target state="translated">オプション、環境変数、デフォルト</target>
        </trans-unit>
        <trans-unit id="e72184f55cc026514b7160d78c3c5aef63c2a050" translate="yes" xml:space="preserve">
          <source>Or</source>
          <target state="translated">Or</target>
        </trans-unit>
        <trans-unit id="b55c13cfcccc46111b383d467e3af37c5be9c20c" translate="yes" xml:space="preserve">
          <source>Or if you have an existing key:</source>
          <target state="translated">もしくは、既存の鍵をお持ちの場合。</target>
        </trans-unit>
        <trans-unit id="23e567971464eec55937f48d4f3c8159e2ff3e29" translate="yes" xml:space="preserve">
          <source>Or, as an object with the path specified under &lt;a href=&quot;#context&quot;&gt;context&lt;/a&gt; and optionally &lt;a href=&quot;#dockerfile&quot;&gt;Dockerfile&lt;/a&gt; and &lt;a href=&quot;#args&quot;&gt;args&lt;/a&gt;:</source>
          <target state="translated">または、&lt;a href=&quot;#context&quot;&gt;コンテキスト&lt;/a&gt;で指定されたパスを持つオブジェクトとして、オプションで&lt;a href=&quot;#dockerfile&quot;&gt;Dockerfile&lt;/a&gt;と&lt;a href=&quot;#args&quot;&gt;argsとして&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="4ffd9aa4653315d01ae6878019c4385211fb4807" translate="yes" xml:space="preserve">
          <source>Or, for a more elegant shutdown, switch to a different shell, and run &lt;a href=&quot;../reference/down/index&quot;&gt;docker-compose down&lt;/a&gt; from the top level of your Django sample project directory.</source>
          <target state="translated">または、より洗練されたシャットダウンを行うには、別のシェルに切り替えて、Djangoサンプルプロジェクトディレクトリの最上位から&lt;a href=&quot;../reference/down/index&quot;&gt;docker-compose&lt;/a&gt;を実行します。</target>
        </trans-unit>
        <trans-unit id="091c4901b6071de52dffb8bc1ff5ad41977267a6" translate="yes" xml:space="preserve">
          <source>Or, learn how to &lt;a href=&quot;../../machine/examples/ocean/index&quot;&gt;launch your container on your own machine using DigitalOcean&lt;/a&gt;.</source>
          <target state="translated">または、&lt;a href=&quot;../../machine/examples/ocean/index&quot;&gt;DigitalOceanを使用して自分のマシンでコンテナー&lt;/a&gt;を起動する方法を学びます。</target>
        </trans-unit>
        <trans-unit id="abf31eecd21f3bc9e0c3ab5cbd025122ef95c9bd" translate="yes" xml:space="preserve">
          <source>Or, manually download the credentials.json file to the local, and set the &lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt; environment variable point to its location, such as:</source>
          <target state="translated">または、手動でcredentials.jsonファイルをローカルにダウンロードし、 &lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt; 環境変数のポイントを次のような場所に設定します。</target>
        </trans-unit>
        <trans-unit id="9641c10061cb254a472391cd2be37679c83ed4ea" translate="yes" xml:space="preserve">
          <source>Or, to get the last time the container was (re)started;</source>
          <target state="translated">あるいは、最後にコンテナを(再)起動した時のものを取得する。</target>
        </trans-unit>
        <trans-unit id="c9595499c4828097288e4ef396cfd9c1c6d3de0e" translate="yes" xml:space="preserve">
          <source>Oracle VirtualBox</source>
          <target state="translated">オラクルバーチャルボックス</target>
        </trans-unit>
        <trans-unit id="ba09c49c562eb2bd6c5f61c435a4a1315ed16fc3" translate="yes" xml:space="preserve">
          <source>Orchestrator name</source>
          <target state="translated">オーケストラ名</target>
        </trans-unit>
        <trans-unit id="05605f281fd5f919de8af24fd8953b98ead63400" translate="yes" xml:space="preserve">
          <source>Orchestrator to use (swarm|kubernetes|all)</source>
          <target state="translated">使用するオーケストレータ (swarm|kubernetes|all)</target>
        </trans-unit>
        <trans-unit id="7f8c83a2e9d79061710933f4e2c394956211e327" translate="yes" xml:space="preserve">
          <source>Other extended shell-style features, such as &lt;code&gt;${VARIABLE/foo/bar}&lt;/code&gt;, are not supported.</source>
          <target state="translated">&lt;code&gt;${VARIABLE/foo/bar}&lt;/code&gt; などの他の拡張シェルスタイルの機能はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="08285fb71e08e2a83a9aff62be6be95fb97518b0" translate="yes" xml:space="preserve">
          <source>Other important data such as the name of a database or internal server</source>
          <target state="translated">その他、データベース名や内部サーバー名などの重要なデータ</target>
        </trans-unit>
        <trans-unit id="ff66b4a8e242fa3cf836666e7971d83ff8620b0f" translate="yes" xml:space="preserve">
          <source>Other kernel security features</source>
          <target state="translated">その他のカーネルセキュリティ機能</target>
        </trans-unit>
        <trans-unit id="497809d5462818e8f9932c9b38cd77840134f5fe" translate="yes" xml:space="preserve">
          <source>Other modes</source>
          <target state="translated">その他のモード</target>
        </trans-unit>
        <trans-unit id="4615ec3f22c175134637f03b404230709b685a58" translate="yes" xml:space="preserve">
          <source>Other options can be combined with &lt;code&gt;--rollback&lt;/code&gt; as well, for example, &lt;code&gt;--update-delay 0s&lt;/code&gt; to execute the rollback without a delay between tasks:</source>
          <target state="translated">他のオプションを &lt;code&gt;--rollback&lt;/code&gt; と組み合わせることもできます。たとえば、 &lt;code&gt;--update-delay 0s&lt;/code&gt; を使用すると、タスク間の遅延なしでロールバックを実行できます。</target>
        </trans-unit>
        <trans-unit id="d12a5098a4c1e254845520e4d685f7713dd6a436" translate="yes" xml:space="preserve">
          <source>Other options can be combined with &lt;code&gt;--rollback&lt;/code&gt;; for example, &lt;code&gt;--update-delay 0s&lt;/code&gt; to execute the rollback without a delay between tasks:</source>
          <target state="translated">他のオプションは &lt;code&gt;--rollback&lt;/code&gt; と組み合わせることができます。たとえば、タスク間の遅延なしでロールバックを実行する &lt;code&gt;--update-delay 0s&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="10e45ca399d3f12696b9c46335e90a64bfbb3d42" translate="yes" xml:space="preserve">
          <source>Other types of tags, such as &lt;code&gt;latest&lt;/code&gt; or &lt;code&gt;nightly&lt;/code&gt;, may resolve to a new digest often, depending on how often an image&amp;rsquo;s author updates the tag. It is not recommended to run services using a tag which is updated frequently, to prevent different service replica tasks from using different image versions.</source>
          <target state="translated">&lt;code&gt;latest&lt;/code&gt; や &lt;code&gt;nightly&lt;/code&gt; など、他のタイプのタグは、画像の作成者がタグを更新する頻度に応じて、新しいダイジェストに解決される場合があります。頻繁に更新されるタグを使用してサービスを実行し、異なるサービスレプリカタスクが異なるイメージバージョンを使用しないようにすることはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="2d59e70b3050ac8983cf25ce00e8727106cb6f7a" translate="yes" xml:space="preserve">
          <source>Otherwise, download one of the releases from the &lt;a href=&quot;https://github.com/docker/machine/releases/&quot;&gt;docker/machine release page&lt;/a&gt; directly.</source>
          <target state="translated">それ以外の場合は、&lt;a href=&quot;https://github.com/docker/machine/releases/&quot;&gt;docker / machineリリースページから&lt;/a&gt;直接リリースの1つをダウンロードします。</target>
        </trans-unit>
        <trans-unit id="e09cd7263bb9b4e1ad90beb058278019f4c4ff76" translate="yes" xml:space="preserve">
          <source>Our single service stack is running 5 container instances of our deployed image on one host. Let&amp;rsquo;s investigate.</source>
          <target state="translated">単一のサービススタックは、1つのホスト上でデプロイされたイメージの5つのコンテナーインスタンスを実行しています。調べてみましょう。</target>
        </trans-unit>
        <trans-unit id="dd012c12de10c3debb145c0b98a7de5d9f16ef2b" translate="yes" xml:space="preserve">
          <source>Out Of Memory Exceptions (OOME)</source>
          <target state="translated">メモリ切れの例外 (OME)</target>
        </trans-unit>
        <trans-unit id="a8e827c31f497098a6c727c8c141883d2e51da76" translate="yes" xml:space="preserve">
          <source>Output additional info including layers and platform</source>
          <target state="translated">レイヤーやプラットフォームなどの追加情報を出力</target>
        </trans-unit>
        <trans-unit id="a0203ac3470dd137c38ed56ab6041f10182c2ee3" translate="yes" xml:space="preserve">
          <source>Output destination (format: type=local,dest=path)</source>
          <target state="translated">出力先(フォーマット:type=local,dest=path)</target>
        </trans-unit>
        <trans-unit id="c6446248abe8acc407055445d2a1f0cb4b69f0f1" translate="yes" xml:space="preserve">
          <source>Overlay network limitations</source>
          <target state="translated">オーバーレイネットワークの制限</target>
        </trans-unit>
        <trans-unit id="937cfbc009330ac5c402ca228b80005e7dbc88f7" translate="yes" xml:space="preserve">
          <source>Overlay2 options</source>
          <target state="translated">オーバーレイ2オプション</target>
        </trans-unit>
        <trans-unit id="3d1fe7eae5e22fff11fa78015dbe052b1f7062c0" translate="yes" xml:space="preserve">
          <source>Override Mandatory Access Control (MAC). Implemented for the Smack Linux Security Module (LSM).</source>
          <target state="translated">強制アクセス制御 (MAC)を上書きします。Smack Linux セキュリティモジュール (LSM)用に実装。</target>
        </trans-unit>
        <trans-unit id="4bc0c08c87f1f825b709b3544ae2f3731ea2929c" translate="yes" xml:space="preserve">
          <source>Override resource Limits.</source>
          <target state="translated">リソースの制限を上書きします。</target>
        </trans-unit>
        <trans-unit id="3eb8744fedec986b16750bc8b95ba2ca0188f45a" translate="yes" xml:space="preserve">
          <source>Override the current location where engine images are pulled</source>
          <target state="translated">エンジンイメージが引き出される現在の場所をオーバーライドする</target>
        </trans-unit>
        <trans-unit id="0473ba965ed5ea3acbab59b4decdf8481e851c01" translate="yes" xml:space="preserve">
          <source>Override the default command.</source>
          <target state="translated">デフォルトのコマンドを上書きします。</target>
        </trans-unit>
        <trans-unit id="1fb7f9877b90787162c56a15a7ec4bc17d5ebd9c" translate="yes" xml:space="preserve">
          <source>Override the default entrypoint.</source>
          <target state="translated">デフォルトのエントリポイントを上書きします。</target>
        </trans-unit>
        <trans-unit id="254bcfade56264dcaa5c2c691900d06910c3b387" translate="yes" xml:space="preserve">
          <source>Override the default labeling scheme for each container.</source>
          <target state="translated">各コンテナのデフォルトのラベリングスキームをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="761466450c75ee8adcf900f70b40bd12ba032044" translate="yes" xml:space="preserve">
          <source>Override the default location where engine images are pulled</source>
          <target state="translated">エンジンイメージがプルされるデフォルトの場所をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="a251a28b1e7fe3634ba59a330bbf61d5178b125e" translate="yes" xml:space="preserve">
          <source>Override the default ulimits for a container. You can either specify a single limit as an integer or soft/hard limits as a mapping.</source>
          <target state="translated">コンテナのデフォルトの ulimits を上書きします。単一の制限を整数で指定するか、ソフト/ハードの制限をマッピングで指定することができます。</target>
        </trans-unit>
        <trans-unit id="1b8103feac99917fdb17772128b0cecc55692039" translate="yes" xml:space="preserve">
          <source>Override the detach sequence</source>
          <target state="translated">デタッチシーケンスを上書きする</target>
        </trans-unit>
        <trans-unit id="1ab9c189c41d8f16b6f6a150a9b270bfb79d0ce2" translate="yes" xml:space="preserve">
          <source>Override the existing location where engine images are pulled</source>
          <target state="translated">エンジンイメージが引き出される既存の場所を上書きする</target>
        </trans-unit>
        <trans-unit id="bebaa4f48d6cc6f7b302abbcdd7450e644ed6443" translate="yes" xml:space="preserve">
          <source>Override the key sequence for detaching a container</source>
          <target state="translated">コンテナを切り離すためのキーシーケンスをオーバーライドする</target>
        </trans-unit>
        <trans-unit id="d9f0d7434bb4167992d2eeef041f5525ea9b03cc" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;code&gt;udev&lt;/code&gt; synchronization checks between &lt;code&gt;devicemapper&lt;/code&gt; and &lt;code&gt;udev&lt;/code&gt;. &lt;code&gt;udev&lt;/code&gt; is the device manager for the Linux kernel.</source>
          <target state="translated">&lt;code&gt;devicemapper&lt;/code&gt; と &lt;code&gt;udev&lt;/code&gt; 間の &lt;code&gt;udev&lt;/code&gt; 同期チェックを上書きします。 &lt;code&gt;udev&lt;/code&gt; はLinuxカーネルのデバイスマネージャです。</target>
        </trans-unit>
        <trans-unit id="9da4ef22baf105c71788c0ce8b6d4921b5d14631" translate="yes" xml:space="preserve">
          <source>Overrides the Linux kernel version check allowing overlay2. Support for specifying multiple lower directories needed by overlay2 was added to the Linux kernel in 4.0.0. However, some older kernel versions may be patched to add multiple lower directory support for OverlayFS. This option should only be used after verifying this support exists in the kernel. Applying this option on a kernel without this support will cause failures on mount.</source>
          <target state="translated">overlay2 を許可する Linux カーネルのバージョンチェックを上書きします。overlay2 が必要とする複数の下位ディレクトリを指定するサポートは 4.0.0 で Linux カーネルに追加されましたが、一部の古いカーネルバージョンでは OverlayFS の複数の下位ディレクトリのサポートを追加するようにパッチが当てられている可能性があります。このオプションは、このサポートがカーネル内に存在することを確認した後にのみ使用してください。このサポートがないカーネルにこのオプションを適用すると、マウント時に失敗します。</target>
        </trans-unit>
        <trans-unit id="6b5e732f2fa5b2105b1de3e123ce8199f6f6161e" translate="yes" xml:space="preserve">
          <source>Overriding Dockerfile image defaults</source>
          <target state="translated">Dockerfileイメージのデフォルトを上書きする</target>
        </trans-unit>
        <trans-unit id="845a0bed924d732a988ae2264dc4d0ed123325f6" translate="yes" xml:space="preserve">
          <source>Overriding configuration file parameters using environment variables</source>
          <target state="translated">環境変数を使用した設定ファイルのパラメータのオーバーライド</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="3edf049391ed6e8758a3b3023d46711f7353b3c0" translate="yes" xml:space="preserve">
          <source>Overview of Docker Compose</source>
          <target state="translated">Docker Composeの概要</target>
        </trans-unit>
        <trans-unit id="8287ed1ad32829bd3b5f9f80fd3b7562037ac7ac" translate="yes" xml:space="preserve">
          <source>Overview of docker-compose CLI</source>
          <target state="translated">docker-compose CLIの概要</target>
        </trans-unit>
        <trans-unit id="31f5f03f259ac0cb2e44c1dd7ca0c3398912dadc" translate="yes" xml:space="preserve">
          <source>Overview of the file</source>
          <target state="translated">ファイルの概要</target>
        </trans-unit>
        <trans-unit id="11f898c301bfb8618ea3088b9b3788c94c15dfef" translate="yes" xml:space="preserve">
          <source>Overwrite the default ENTRYPOINT of the image</source>
          <target state="translated">画像のデフォルトのENTRYPOINTを上書きします。</target>
        </trans-unit>
        <trans-unit id="f7a906eb9f003561cf81d980ceaf0edc8a486bbb" translate="yes" xml:space="preserve">
          <source>Own private IPC namespace, with /dev/shm not mounted.</source>
          <target state="translated">dev/shm がマウントされていない状態で、自分のプライベート IPC ネームスペースを持つ。</target>
        </trans-unit>
        <trans-unit id="897a10837bbfe15a8f76145e73e399107e711091" translate="yes" xml:space="preserve">
          <source>Own private IPC namespace, with a possibility to share it with other containers.</source>
          <target state="translated">プライベートIPCネームスペースを所有し、他のコンテナと共有することができます。</target>
        </trans-unit>
        <trans-unit id="e8227d0b2995daeefa9a0f4274fa6594c1346653" translate="yes" xml:space="preserve">
          <source>Own private IPC namespace.</source>
          <target state="translated">プライベートIPCネームスペースを所有しています。</target>
        </trans-unit>
        <trans-unit id="97191026215e3e01f089f93777a76e24766a62db" translate="yes" xml:space="preserve">
          <source>PID equivalent</source>
          <target state="translated">PID等価</target>
        </trans-unit>
        <trans-unit id="597ef4a0f67758736d62514f5f1fd5f1f3d0d992" translate="yes" xml:space="preserve">
          <source>PID is the process id of &lt;code&gt;notary-server&lt;/code&gt; and it may not the PID 1 process if you are running the container with some kind of wrapper startup script or something.</source>
          <target state="translated">PIDは &lt;code&gt;notary-server&lt;/code&gt; のプロセスIDであり、ある種のラッパー起動スクリプトなどでコンテナーを実行している場合は、PID 1プロセスではない可能性があります。</target>
        </trans-unit>
        <trans-unit id="6285a5fe67969c91bc578f9f8ba9b45caaaff04d" translate="yes" xml:space="preserve">
          <source>PID namespace provides separation of processes. The PID Namespace removes the view of the system processes, and allows process ids to be reused including pid 1.</source>
          <target state="translated">PID 名前空間はプロセスの分離を提供します。PID 名前空間は、システムプロセスのビューを削除し、pid 1 を含むプロセス ID の再利用を可能にします。</target>
        </trans-unit>
        <trans-unit id="24584fcb52c6d856e140a5f8b30ebecc7ee06e7d" translate="yes" xml:space="preserve">
          <source>PID namespace to use</source>
          <target state="translated">使用する PID 名前空間</target>
        </trans-unit>
        <trans-unit id="9b210c8c95e4cf65466a49bab1e89bdb4c59ac3b" translate="yes" xml:space="preserve">
          <source>PID settings (--pid)</source>
          <target state="translated">PID 設定 (--pid)</target>
        </trans-unit>
        <trans-unit id="92cca1191c951841138a2665f060c96816b19bca" translate="yes" xml:space="preserve">
          <source>Parallelize building independent build stages</source>
          <target state="translated">独立したビルドステージを並列化</target>
        </trans-unit>
        <trans-unit id="f699f295e5ae4ac633cfa18437fed38d028b3fdb" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="translated">Parameter</target>
        </trans-unit>
        <trans-unit id="31ed1f83abf4e051270efb10db7e14a36ddb3909" translate="yes" xml:space="preserve">
          <source>Parent command</source>
          <target state="translated">コマンドの親</target>
        </trans-unit>
        <trans-unit id="b80955bea8bd531677e3c955260b4fbe71f1f29a" translate="yes" xml:space="preserve">
          <source>Parser directives</source>
          <target state="translated">パーサディレクティブ</target>
        </trans-unit>
        <trans-unit id="dfc802b986fb4ff69d10de7d3927249648d4c79a" translate="yes" xml:space="preserve">
          <source>Parser directives are not case-sensitive. However, convention is for them to be lowercase. Convention is also to include a blank line following any parser directives. Line continuation characters are not supported in parser directives.</source>
          <target state="translated">パーサディレクティブは大文字と小文字を区別しません。しかし、慣例では、それらは小文字であることになっています。また、パーサディレクティブの後には空行を含めるのが慣例です。パーサディレクティブでは、改行文字はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="387a49832770a1774fa099cfd338d06e12fdff96" translate="yes" xml:space="preserve">
          <source>Parser directives are optional, and affect the way in which subsequent lines in a &lt;code&gt;Dockerfile&lt;/code&gt; are handled. Parser directives do not add layers to the build, and will not be shown as a build step. Parser directives are written as a special type of comment in the form &lt;code&gt;# directive=value&lt;/code&gt;. A single directive may only be used once.</source>
          <target state="translated">パーサーディレクティブはオプションであり、 &lt;code&gt;Dockerfile&lt;/code&gt; の後続の行の処理方法に影響を与えます。パーサーディレクティブはビルドにレイヤーを追加せず、ビルドステップとして表示されません。パーサーディレクティブは、 &lt;code&gt;# directive=value&lt;/code&gt; 形式で特別なタイプのコメントとして記述されます。1つのディレクティブは1回しか使用できません。</target>
        </trans-unit>
        <trans-unit id="1d1bce007197e30b5e0c13535d91b1a5c367e5d0" translate="yes" xml:space="preserve">
          <source>Particular storage-driver can be configured with options specified with &lt;code&gt;--storage-opt&lt;/code&gt; flags. Options for &lt;code&gt;devicemapper&lt;/code&gt; are prefixed with &lt;code&gt;dm&lt;/code&gt;, options for &lt;code&gt;zfs&lt;/code&gt; start with &lt;code&gt;zfs&lt;/code&gt;, options for &lt;code&gt;btrfs&lt;/code&gt; start with &lt;code&gt;btrfs&lt;/code&gt; and options for &lt;code&gt;lcow&lt;/code&gt; start with &lt;code&gt;lcow&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--storage-opt&lt;/code&gt; フラグで指定されたオプションを使用して、特定のストレージドライバーを構成できます。オプション &lt;code&gt;devicemapper&lt;/code&gt; が接頭辞いる &lt;code&gt;dm&lt;/code&gt; 、のオプション &lt;code&gt;zfs&lt;/code&gt; で始まる &lt;code&gt;zfs&lt;/code&gt; のためのオプション &lt;code&gt;btrfs&lt;/code&gt; で始まる &lt;code&gt;btrfs&lt;/code&gt; 用とオプション &lt;code&gt;lcow&lt;/code&gt; でスタート &lt;code&gt;lcow&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b4b1449c9a0f425ab54b96ccae83262249d5b02" translate="yes" xml:space="preserve">
          <source>Pass a profile for a container</source>
          <target state="translated">コンテナのプロファイルを渡す</target>
        </trans-unit>
        <trans-unit id="e908dff5a253e36632011f59f86b0a6299293c6b" translate="yes" xml:space="preserve">
          <source>Pass environment variables to containers</source>
          <target state="translated">環境変数をコンテナに渡す</target>
        </trans-unit>
        <trans-unit id="534171b485c4823cbc7bad7579ec8d58b9f53e00" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--label-add&lt;/code&gt; flag once for each node label you want to add:</source>
          <target state="translated">パス &lt;code&gt;--label-add&lt;/code&gt; 追加したい各ノードラベルの後にフラグ：</target>
        </trans-unit>
        <trans-unit id="e4b058cfca2e72535808381ac3cbb84b36fdb7f7" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--quiet&lt;/code&gt; flag to print only the token:</source>
          <target state="translated">&lt;code&gt;--quiet&lt;/code&gt; フラグを渡して、トークンのみを出力します。</target>
        </trans-unit>
        <trans-unit id="ed8fec9fe3a5a64725006200143c76bb739ca11c" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--rotate&lt;/code&gt; flag (and optionally a &lt;code&gt;--ca-cert&lt;/code&gt;, along with a &lt;code&gt;--ca-key&lt;/code&gt; or &lt;code&gt;--external-ca&lt;/code&gt; parameter flag), in order to rotate the current swarm root CA.</source>
          <target state="translated">現在のスウォームルートCAをローテーションするには、 &lt;code&gt;--rotate&lt;/code&gt; フラグ（およびオプションで &lt;code&gt;--ca-key&lt;/code&gt; または &lt;code&gt;--external-ca&lt;/code&gt; パラメータフラグとともに &lt;code&gt;--ca-cert&lt;/code&gt; ）を渡します。</target>
        </trans-unit>
        <trans-unit id="c5fb9c9faec8112491a1ca7915bc462a3ff83d02" translate="yes" xml:space="preserve">
          <source>Passing a negative number or a non-integer to &lt;code&gt;--tail&lt;/code&gt; is invalid and the value is set to &lt;code&gt;all&lt;/code&gt; in that case.</source>
          <target state="translated">&lt;code&gt;--tail&lt;/code&gt; に負の数または非整数を渡すことは無効であり、その場合、値は &lt;code&gt;all&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="90762cc33a299cdb91241d47d7b0ab8185b2f96c" translate="yes" xml:space="preserve">
          <source>Passing an &lt;code&gt;HostConfig&lt;/code&gt; to &lt;code&gt;POST /containers/{name}/start&lt;/code&gt; is deprecated in favor of defining it at container creation (&lt;code&gt;POST /containers/create&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;HostConfig&lt;/code&gt; を &lt;code&gt;POST /containers/{name}/start&lt;/code&gt; 渡すことは、コンテナの作成時に定義することを優先して廃止されました（ &lt;code&gt;POST /containers/create&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8be3c943b1609fffbfc51aad666d0a04adf83c9d" translate="yes" xml:space="preserve">
          <source>Password</source>
          <target state="translated">Password</target>
        </trans-unit>
        <trans-unit id="971727446a3e7627ce7f649cdfb169489e9350bb" translate="yes" xml:space="preserve">
          <source>Path to a Compose file, or &amp;ldquo;-&amp;ldquo; to read from stdin</source>
          <target state="translated">Composeファイルへのパス、またはstdinから読み取る「-」</target>
        </trans-unit>
        <trans-unit id="9d9e6791324b9349fa7664bfee386745e210219d" translate="yes" xml:space="preserve">
          <source>Path to a Distributed Application Bundle file</source>
          <target state="translated">分散アプリケーションバンドルファイルへのパス</target>
        </trans-unit>
        <trans-unit id="6f0b3f5cfdceda12eb75a14223743358648835b4" translate="yes" xml:space="preserve">
          <source>Path to the PEM-formatted root CA certificate to use for the new cluster</source>
          <target state="translated">新しいクラスタで使用する PEM 形式のルート CA 証明書へのパス</target>
        </trans-unit>
        <trans-unit id="6069c61633d84f3aa0aa544eed2c97c82d1d7618" translate="yes" xml:space="preserve">
          <source>Path to the PEM-formatted root CA key to use for the new cluster</source>
          <target state="translated">新しいクラスタで使用する PEM 形式のルート CA キーへのパス</target>
        </trans-unit>
        <trans-unit id="93245c49296746a4c679d0454d021efbf89f625e" translate="yes" xml:space="preserve">
          <source>Path to the signer&amp;rsquo;s public key file</source>
          <target state="translated">署名者の公開鍵ファイルへのパス</target>
        </trans-unit>
        <trans-unit id="19a7d4879989252ab1b28a655bfda46d26bc6195" translate="yes" xml:space="preserve">
          <source>Pause all processes within one or more containers</source>
          <target state="translated">1つ以上のコンテナ内のすべてのプロセスを一時停止</target>
        </trans-unit>
        <trans-unit id="54c2fa4a2fc554403d0627ace2fc3d910226cc30" translate="yes" xml:space="preserve">
          <source>Pause container during commit</source>
          <target state="translated">コミット中にコンテナを一時停止</target>
        </trans-unit>
        <trans-unit id="8f2e2b2ce2a8cae64328d6d50c37cd74ab0aaa58" translate="yes" xml:space="preserve">
          <source>Pauses running containers of a service. They can be unpaused with &lt;code&gt;docker-compose unpause&lt;/code&gt;.</source>
          <target state="translated">サービスの実行中のコンテナを一時停止します。docker &lt;code&gt;docker-compose unpause&lt;/code&gt; 停止を解除できます。</target>
        </trans-unit>
        <trans-unit id="41f4d6cdfd12f3a300dd7657d6084c74ab33a3fc" translate="yes" xml:space="preserve">
          <source>Pending services</source>
          <target state="translated">保留中のサービス</target>
        </trans-unit>
        <trans-unit id="17aadc976d1d1fbd5a80c0291f878a418a003747" translate="yes" xml:space="preserve">
          <source>Perform I/O port operations (iopl(2) and ioperm(2)).</source>
          <target state="translated">I/Oポート操作(iopl(2)、ioperm(2))を行います。</target>
        </trans-unit>
        <trans-unit id="4a1137a9348dfbbcaa3db3d6eda5c91d9d3a52c7" translate="yes" xml:space="preserve">
          <source>Perform a range of system administration operations.</source>
          <target state="translated">各種システム管理業務を行う。</target>
        </trans-unit>
        <trans-unit id="3b23332f4443743e1739a2846788df8a75cd7565" translate="yes" xml:space="preserve">
          <source>Perform a rolling restart with no parameter changes</source>
          <target state="translated">パラメータを変更せずにローリングリスタートを実行</target>
        </trans-unit>
        <trans-unit id="9887f3d6c196c4bc3fdf4b1070458deac77d5658" translate="yes" xml:space="preserve">
          <source>Perform privileged syslog(2) operations.</source>
          <target state="translated">特権的な syslog(2)操作を実行。</target>
        </trans-unit>
        <trans-unit id="997bb6cf2ced2dbab6b4fc5994f23c9695379b7b" translate="yes" xml:space="preserve">
          <source>Perform various network-related operations.</source>
          <target state="translated">ネットワーク関連の各種業務を行う。</target>
        </trans-unit>
        <trans-unit id="53f5f1f3789f0a1bca49324388f61dd4531f2980" translate="yes" xml:space="preserve">
          <source>Persist the data</source>
          <target state="translated">データを持続させる</target>
        </trans-unit>
        <trans-unit id="3b2ff85a578feb9159297fb10a47edbaa81f8410" translate="yes" xml:space="preserve">
          <source>Place the completion script in &lt;code&gt;/etc/bash_completion.d/&lt;/code&gt;.</source>
          <target state="translated">完了スクリプトを &lt;code&gt;/etc/bash_completion.d/&lt;/code&gt; に配置します。</target>
        </trans-unit>
        <trans-unit id="c87618444aa3f4a2d24058d5bce42f8c904a8c5d" translate="yes" xml:space="preserve">
          <source>Place the completion script in your &lt;code&gt;/path/to/zsh/completion&lt;/code&gt; (typically &lt;code&gt;~/.zsh/completion/&lt;/code&gt;):</source>
          <target state="translated">完了スクリプトを &lt;code&gt;/path/to/zsh/completion&lt;/code&gt; （通常 &lt;code&gt;~/.zsh/completion/&lt;/code&gt; ）に配置します。</target>
        </trans-unit>
        <trans-unit id="ed212fa164b940b935ec0a25b32878a0917c7268" translate="yes" xml:space="preserve">
          <source>Placeholder</source>
          <target state="translated">Placeholder</target>
        </trans-unit>
        <trans-unit id="5efa4698cc4a2ecef0e36dba8ffe62770feac0a6" translate="yes" xml:space="preserve">
          <source>Placement constraints</source>
          <target state="translated">配置制約</target>
        </trans-unit>
        <trans-unit id="4e3da24b6b45c64dc492b35972dffce04479c21c" translate="yes" xml:space="preserve">
          <source>Placement preferences</source>
          <target state="translated">配置の好み</target>
        </trans-unit>
        <trans-unit id="e88f819d7eba4eecc1ecf79796677247dfa8c739" translate="yes" xml:space="preserve">
          <source>Placement preferences are ignored for global services.</source>
          <target state="translated">グローバルサービスでは、配置の好みは無視されます。</target>
        </trans-unit>
        <trans-unit id="d053dbea924adbc9bd2bc3f6837f4b9bf55cc7e4" translate="yes" xml:space="preserve">
          <source>Placement preferences are not strictly enforced. If no node has the label you specify in your preference, the service is deployed as though the preference were not set.</source>
          <target state="translated">配置設定は厳密には適用されません。環境設定で指定したラベルを持つノードがない場合、サービスは環境設定が設定されていないかのようにデプロイされます。</target>
        </trans-unit>
        <trans-unit id="86d9b5e20b9a9ad65414fab59b46f1ed02b06ba0" translate="yes" xml:space="preserve">
          <source>Play in a content trust sandbox</source>
          <target state="translated">コンテンツトラストのサンドボックスで遊ぶ</target>
        </trans-unit>
        <trans-unit id="98b1d0fa06c86b8807d0abf7ced317733bc874dc" translate="yes" xml:space="preserve">
          <source>Play in the sandbox</source>
          <target state="translated">砂場で遊ぶ</target>
        </trans-unit>
        <trans-unit id="2026b80b01f24d73ef453daeb710907a374b7d17" translate="yes" xml:space="preserve">
          <source>Please also refer to &lt;a href=&quot;https://github.com/docker/docker/issues/27358&quot;&gt;#27358&lt;/a&gt; for further information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://github.com/docker/docker/issues/27358&quot;&gt;＃27358&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="6da345e1d29d0f82bf6b73f4e7fa6e79c85db885" translate="yes" xml:space="preserve">
          <source>Please note that this feature is still marked as experimental as metrics and metric names could change while this feature is still in experimental. Please provide feedback on what you would like to see collected in the API.</source>
          <target state="translated">この機能がまだ実験段階にある間は、メトリクスやメトリック名が変更される可能性があるため、この機能はまだ実験段階としてマークされていることに注意してください。API で収集してほしいものについてフィードバックを提供してください。</target>
        </trans-unit>
        <trans-unit id="de570bdfa2e520422da550cba38f1d435701c84a" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;../run/index&quot;&gt;run command&lt;/a&gt; section and the &lt;a href=&quot;../../run/index&quot;&gt;Docker run reference&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;../run/index&quot;&gt;runコマンド&lt;/a&gt;セクションと&lt;a href=&quot;../../run/index&quot;&gt;Docker runリファレンス&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="8dc208f8ebe86aa9ee6a37d49d48058be5364bff" translate="yes" xml:space="preserve">
          <source>Plugin</source>
          <target state="translated">Plugin</target>
        </trans-unit>
        <trans-unit id="b71dffcffbffb137808664aae679caa7c5a21536" translate="yes" xml:space="preserve">
          <source>Plugin -&amp;gt; Daemon</source>
          <target state="translated">プラグイン-&amp;gt;デーモン</target>
        </trans-unit>
        <trans-unit id="3e993fb78f6f894c7a2bc0b9bd80d229ec2bb7ec" translate="yes" xml:space="preserve">
          <source>Plugin Config Version 1 of Plugin V2</source>
          <target state="translated">プラグインV2のプラグインコンフィグバージョン1</target>
        </trans-unit>
        <trans-unit id="c6bcefd1b4d77ea43f800d4350893db442b559f2" translate="yes" xml:space="preserve">
          <source>Plugin ID</source>
          <target state="translated">プラグインID</target>
        </trans-unit>
        <trans-unit id="50b08f5da49b98e81ee6b91d554e02d6b92b7c81" translate="yes" xml:space="preserve">
          <source>Plugin activation</source>
          <target state="translated">プラグインの有効化</target>
        </trans-unit>
        <trans-unit id="cc8dad0046d72c53deb228f14a0ed8112e94a381" translate="yes" xml:space="preserve">
          <source>Plugin configs describe the various constituents of a docker plugin. Plugin configs can be serialized to JSON format with the following media types:</source>
          <target state="translated">プラグイン設定は、docker プラグインの様々な構成要素を記述します。プラグイン設定は、以下のメディアタイプでJSON形式にシリアライズすることができます。</target>
        </trans-unit>
        <trans-unit id="7639154da8dfdc3de5768f4b00981ccba60aeca5" translate="yes" xml:space="preserve">
          <source>Plugin description</source>
          <target state="translated">プラグインの説明</target>
        </trans-unit>
        <trans-unit id="94f75e286909cfd972aaa8dfe165655a724e0824" translate="yes" xml:space="preserve">
          <source>Plugin discovery</source>
          <target state="translated">プラグインの発見</target>
        </trans-unit>
        <trans-unit id="8dc90cdf79ef04ddef300b3fdb54c67ce30416b2" translate="yes" xml:space="preserve">
          <source>Plugin lifecycle</source>
          <target state="translated">プラグインのライフサイクル</target>
        </trans-unit>
        <trans-unit id="b229694d8e767055af222791318a9c6fc5fbffbf" translate="yes" xml:space="preserve">
          <source>Plugin name</source>
          <target state="translated">プラグイン名</target>
        </trans-unit>
        <trans-unit id="eb433013e222af7cf463f48487a54c69acdf3c41" translate="yes" xml:space="preserve">
          <source>Plugin retries</source>
          <target state="translated">プラグインの再試行</target>
        </trans-unit>
        <trans-unit id="ab2e26dd8b8868a3969cb3321e0c983c0d9d67d4" translate="yes" xml:space="preserve">
          <source>Plugins</source>
          <target state="translated">Plugins</target>
        </trans-unit>
        <trans-unit id="cfa6d1a53ba3a4ef942e9f062e2d93196e38199a" translate="yes" xml:space="preserve">
          <source>Plugins are &lt;em&gt;not&lt;/em&gt; activated automatically at Docker daemon startup. Rather, they are activated only lazily, or on-demand, when they are needed.</source>
          <target state="translated">プラグインは、Dockerデーモンの起動時に自動的にアクティブ化され&lt;em&gt;ません&lt;/em&gt;。むしろ、それらは必要なときに、遅延的に、またはオンデマンドでのみアクティブ化されます。</target>
        </trans-unit>
        <trans-unit id="91e22543ab196a98d092894b784203373c899f94" translate="yes" xml:space="preserve">
          <source>Plugins are activated via the following &amp;ldquo;handshake&amp;rdquo; API call.</source>
          <target state="translated">プラグインは、次の「ハンドシェイク」API呼び出しによってアクティブ化されます。</target>
        </trans-unit>
        <trans-unit id="e64feb815d435a8b3fdfce1bfa403114253b344f" translate="yes" xml:space="preserve">
          <source>Plugins are distributed as Docker images and can be hosted on Docker Hub or on a private registry.</source>
          <target state="translated">プラグインはDockerイメージとして配布され、Docker Hubやプライベートレジストリでホストすることができます。</target>
        </trans-unit>
        <trans-unit id="4d9f04bf98bed0a130c171c94a05bf9204e0039e" translate="yes" xml:space="preserve">
          <source>Plugins can run inside or outside containers. Currently running them outside containers is recommended.</source>
          <target state="translated">プラグインはコンテナ内でもコンテナ外でも動作させることができます。現在はコンテナの外側での実行を推奨しています。</target>
        </trans-unit>
        <trans-unit id="37fbd85ad573061dc266b5276458b28cb095f239" translate="yes" xml:space="preserve">
          <source>Plugins extend Docker&amp;rsquo;s functionality. They come in specific types. For example, a &lt;a href=&quot;../plugins_volume/index&quot;&gt;volume plugin&lt;/a&gt; might enable Docker volumes to persist across multiple Docker hosts and a &lt;a href=&quot;../plugins_network/index&quot;&gt;network plugin&lt;/a&gt; might provide network plumbing.</source>
          <target state="translated">プラグインはDockerの機能を拡張します。彼らは特定の種類があります。たとえば、&lt;a href=&quot;../plugins_volume/index&quot;&gt;ボリュームプラグインを使用&lt;/a&gt;すると、Dockerボリュームを複数のDockerホスト間で存続させることができ、&lt;a href=&quot;../plugins_network/index&quot;&gt;ネットワークプラグイン&lt;/a&gt;はネットワークプラミングを提供できます。</target>
        </trans-unit>
        <trans-unit id="edf908cfee3def6a053e85cab7d58420a089a602" translate="yes" xml:space="preserve">
          <source>Plugins have human-readable names, which are short, lowercase strings. For example, &lt;code&gt;flocker&lt;/code&gt; or &lt;code&gt;weave&lt;/code&gt;.</source>
          <target state="translated">プラグインには、人間が読める名前があり、短い小文字の文字列です。たとえば、 &lt;code&gt;flocker&lt;/code&gt; または &lt;code&gt;weave&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7887064441a8eb8da08d39e163f5e591e6d30806" translate="yes" xml:space="preserve">
          <source>Plugins helpers</source>
          <target state="translated">プラグインヘルパー</target>
        </trans-unit>
        <trans-unit id="e5b16233f1bd3a5a1ba5044d76f708ca87b6ff47" translate="yes" xml:space="preserve">
          <source>Plugins may also be socket activated by &lt;code&gt;systemd&lt;/code&gt;. The official &lt;a href=&quot;https://github.com/docker/go-plugins-helpers&quot;&gt;Plugins helpers&lt;/a&gt; natively supports socket activation. In order for a plugin to be socket activated it needs a &lt;code&gt;service&lt;/code&gt; file and a &lt;code&gt;socket&lt;/code&gt; file.</source>
          <target state="translated">プラグインは &lt;code&gt;systemd&lt;/code&gt; によってソケットでアクティブ化することもできます。公式の&lt;a href=&quot;https://github.com/docker/go-plugins-helpers&quot;&gt;プラグインヘルパー&lt;/a&gt;は、ソケットのアクティブ化をネイティブでサポートしています。プラグインをソケットでアクティブ化するには、 &lt;code&gt;service&lt;/code&gt; ファイルと &lt;code&gt;socket&lt;/code&gt; ファイルが必要です。</target>
        </trans-unit>
        <trans-unit id="2a6d516295bc1d09b9f89131b5aa5107571bc6c2" translate="yes" xml:space="preserve">
          <source>Plugins should be started before Docker, and stopped after Docker. For example, when packaging a plugin for a platform which supports &lt;code&gt;systemd&lt;/code&gt;, you might use &lt;a href=&quot;http://www.freedesktop.org/software/systemd/man/systemd.unit.html#Before=&quot;&gt;&lt;code&gt;systemd&lt;/code&gt; dependencies&lt;/a&gt; to manage startup and shutdown order.</source>
          <target state="translated">プラグインはDockerの前に開始し、Dockerの後に停止する必要があります。たとえば、 &lt;code&gt;systemd&lt;/code&gt; をサポートするプラットフォーム用のプラグインをパッケージ化する場合、&lt;a href=&quot;http://www.freedesktop.org/software/systemd/man/systemd.unit.html#Before=&quot;&gt; &lt;code&gt;systemd&lt;/code&gt; の依存関係&lt;/a&gt;を使用して起動とシャットダウンの順序を管理できます。</target>
        </trans-unit>
        <trans-unit id="8a3c48324dceaa3b1e3bc17ede1f8b530564394f" translate="yes" xml:space="preserve">
          <source>Plugins should be started before Docker, and stopped after Docker. For example, when packaging a plugin for a platform which supports &lt;code&gt;systemd&lt;/code&gt;, you might use &lt;a href=&quot;https://www.freedesktop.org/software/systemd/man/systemd.unit.html#Before=&quot;&gt;&lt;code&gt;systemd&lt;/code&gt; dependencies&lt;/a&gt; to manage startup and shutdown order.</source>
          <target state="translated">プラグインはDockerの前に開始し、Dockerの後に停止する必要があります。たとえば、 &lt;code&gt;systemd&lt;/code&gt; をサポートするプラットフォームのプラグインをパッケージ化する場合、&lt;a href=&quot;https://www.freedesktop.org/software/systemd/man/systemd.unit.html#Before=&quot;&gt; &lt;code&gt;systemd&lt;/code&gt; の依存関係&lt;/a&gt;を使用して起動とシャットダウンの順序を管理できます。</target>
        </trans-unit>
        <trans-unit id="44f4d53d6503e7da5e8024b606059822dc1b85d6" translate="yes" xml:space="preserve">
          <source>Plugins with UNIX domain socket files must run on the same docker host, whereas plugins with spec or json files can run on a different host if a remote URL is specified.</source>
          <target state="translated">UNIXドメインのソケットファイルを持つプラグインは同じdockerホスト上で実行する必要がありますが、specファイルやjsonファイルを持つプラグインはリモートURLが指定されている場合は別のホスト上で実行することができます。</target>
        </trans-unit>
        <trans-unit id="7907580d9da808085c46fb9046413bc3bd1592af" translate="yes" xml:space="preserve">
          <source>Point the Machine CLI at a running, managed host, and you can run &lt;code&gt;docker&lt;/code&gt; commands directly on that host. For example, run &lt;code&gt;docker-machine env default&lt;/code&gt; to point to a host called &lt;code&gt;default&lt;/code&gt;, follow on-screen instructions to complete &lt;code&gt;env&lt;/code&gt; setup, and run &lt;code&gt;docker ps&lt;/code&gt;, &lt;code&gt;docker run hello-world&lt;/code&gt;, and so forth.</source>
          <target state="translated">Machine CLIを実行中の管理対象ホストに &lt;code&gt;docker&lt;/code&gt; 、そのホストでdockerコマンドを直接実行できます。例えば、実行 &lt;code&gt;docker-machine env default&lt;/code&gt; ポイントに呼ばれるホストに &lt;code&gt;default&lt;/code&gt; 、完全に、画面上の指示に従っ &lt;code&gt;env&lt;/code&gt; 設定、および実行 &lt;code&gt;docker ps&lt;/code&gt; 、 &lt;code&gt;docker run hello-world&lt;/code&gt; 等々 、と。</target>
        </trans-unit>
        <trans-unit id="bb9cf1418089b3356038fdd24fcbdc9d1a7c42a5" translate="yes" xml:space="preserve">
          <source>Policy</source>
          <target state="translated">Policy</target>
        </trans-unit>
        <trans-unit id="fe035157cda20b361ce30613e29b5d6f1a46b5fc" translate="yes" xml:space="preserve">
          <source>Port</source>
          <target state="translated">Port</target>
        </trans-unit>
        <trans-unit id="e2834b914ae6ad9da4d7f7d6b96e5839728c2c90" translate="yes" xml:space="preserve">
          <source>Port 4789 UDP for the container ingress network.</source>
          <target state="translated">コンテナイングレスネットワーク用のポート 4789 UDP。</target>
        </trans-unit>
        <trans-unit id="40e9d60b3088e83ac2856cc8cf5b694380e2f72e" translate="yes" xml:space="preserve">
          <source>Port 7946 TCP/UDP for container network discovery.</source>
          <target state="translated">コンテナネットワークディスカバリー用のポート 7946 TCP/UDP。</target>
        </trans-unit>
        <trans-unit id="75c7965c32690d1bbfe98557d3bcecab4c5db601" translate="yes" xml:space="preserve">
          <source>Port &lt;code&gt;4789&lt;/code&gt; UDP for the container ingress network.</source>
          <target state="translated">コンテナー入力ネットワーク用のポート &lt;code&gt;4789&lt;/code&gt; UDP。</target>
        </trans-unit>
        <trans-unit id="b13d947ccc8cb121f51dad844c2a458b5870bbbc" translate="yes" xml:space="preserve">
          <source>Port &lt;code&gt;7946&lt;/code&gt; TCP/UDP for container network discovery.</source>
          <target state="translated">コンテナネットワーク検出用のポート &lt;code&gt;7946&lt;/code&gt; TCP / UDP。</target>
        </trans-unit>
        <trans-unit id="df48a1572fba3282821e0031b5821bd8317ccb52" translate="yes" xml:space="preserve">
          <source>Port &lt;code&gt;9323&lt;/code&gt; is the &lt;a href=&quot;https://github.com/prometheus/prometheus/wiki/Default-port-allocations&quot;&gt;default port associated with Docker metrics&lt;/a&gt; to avoid collisions with other prometheus exporters and services.</source>
          <target state="translated">ポート &lt;code&gt;9323&lt;/code&gt; は、他のPrometheusエクスポーターやサービスとの衝突を回避するための&lt;a href=&quot;https://github.com/prometheus/prometheus/wiki/Default-port-allocations&quot;&gt;Dockerメトリック&lt;/a&gt;に関連付けられたデフォルトのポートです。</target>
        </trans-unit>
        <trans-unit id="2af2113d430bfe2537bd44d9b2908e9d1397cf9f" translate="yes" xml:space="preserve">
          <source>Port number to use for data path traffic (1024 - 49151). If no value is set or is set to 0, the default port (4789) is used.</source>
          <target state="translated">データパスのトラフィックに使用するポート番号(1024~49151)。値が設定されていない場合、または0に設定されている場合は、デフォルトのポート(4789)が使用されます。</target>
        </trans-unit>
        <trans-unit id="e54f772a9b2f49ef3c6d13b9ad60e8fb609d5c46" translate="yes" xml:space="preserve">
          <source>Portable: You can build locally, deploy to the cloud, and run anywhere.</source>
          <target state="translated">ポータブル。ローカルで構築し、クラウドにデプロイし、どこでも実行できます。</target>
        </trans-unit>
        <trans-unit id="c4cc1e942dd745a70735346c978a329639378251" translate="yes" xml:space="preserve">
          <source>Ports 2377 and 2376</source>
          <target state="translated">ポート2377と2376</target>
        </trans-unit>
        <trans-unit id="5bea54f3d577287d26cd10c55ebc0c745ed7ae93" translate="yes" xml:space="preserve">
          <source>Ports &lt;code&gt;[]Port&lt;/code&gt;</source>
          <target state="translated">ポート &lt;code&gt;[]Port&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84c5ae0bbd8024e56c45650ccf16082b90ee0d8b" translate="yes" xml:space="preserve">
          <source>Portworx Volume Plugin</source>
          <target state="translated">Portworxボリュームプラグイン</target>
        </trans-unit>
        <trans-unit id="126d733d8446c249f670f205a1980b5b1d7aec26" translate="yes" xml:space="preserve">
          <source>Possible attacks given the credentials compromised:</source>
          <target state="translated">危殆化した資格情報から攻撃の可能性がある</target>
        </trans-unit>
        <trans-unit id="7280aa9b126e519bb5acdcab7417841a30bb930a" translate="yes" xml:space="preserve">
          <source>Possible values are:</source>
          <target state="translated">可能な値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="577b0162b58dc91263eefd50cff6bbf2ea494ba1" translate="yes" xml:space="preserve">
          <source>Pre-create check</source>
          <target state="translated">事前に作成したチェック</target>
        </trans-unit>
        <trans-unit id="58028731b427df98000072cc5c8a3e07e39a2515" translate="yes" xml:space="preserve">
          <source>Pre-release builds allow you to try out new features before they are released, but may be less stable.</source>
          <target state="translated">プレリリースビルドでは、リリース前に新機能を試すことができますが、安定性は低いかもしれません。</target>
        </trans-unit>
        <trans-unit id="6cae006bc50359ea57934aa69d89479751d42acf" translate="yes" xml:space="preserve">
          <source>Pre-releases built from the &amp;ldquo;master&amp;rdquo; branch are also available for download at &lt;a href=&quot;https://dl.bintray.com/docker-compose/master/&quot;&gt;https://dl.bintray.com/docker-compose/master/&lt;/a&gt;.</source>
          <target state="translated">「master」ブランチからビルドされたプレリリースは、&lt;a href=&quot;https://dl.bintray.com/docker-compose/master/&quot;&gt;https：//dl.bintray.com/docker-compose/master/&lt;/a&gt;からダウンロードすることもできます。</target>
        </trans-unit>
        <trans-unit id="03f8e591992a2ce8e066e9197885123ad874f6fa" translate="yes" xml:space="preserve">
          <source>Predefined ARGs</source>
          <target state="translated">定義済みの ARG</target>
        </trans-unit>
        <trans-unit id="3d1d1d8fc2786ebd1ac066593436b63974765e7e" translate="yes" xml:space="preserve">
          <source>Prefix the User-Agent in Linode API calls with some &amp;lsquo;product/version&amp;rsquo;</source>
          <target state="translated">Linode API呼び出しでユーザーエージェントの前に「製品/バージョン」を付けます</target>
        </trans-unit>
        <trans-unit id="f56944df6198ec662e7bc049b12413296e192475" translate="yes" xml:space="preserve">
          <source>Prepare your Docker environment</source>
          <target state="translated">Docker環境の準備</target>
        </trans-unit>
        <trans-unit id="913e15af4af11782e0856b203b2d34948bce7c44" translate="yes" xml:space="preserve">
          <source>Prerequisite information</source>
          <target state="translated">前提条件</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="44ad950f753dfba196aa135c51a16fc97ed5570a" translate="yes" xml:space="preserve">
          <source>Preserve volume data when containers are created</source>
          <target state="translated">コンテナ作成時にボリュームデータを保持</target>
        </trans-unit>
        <trans-unit id="fe798b6700e1007667487ac7cd69a37e777e2d5b" translate="yes" xml:space="preserve">
          <source>Pretty-print configs using a Go template</source>
          <target state="translated">囲碁テンプレートを使用したプリティプリントの設定</target>
        </trans-unit>
        <trans-unit id="8a522da4427f8e00da6d3b0f859d8cbf253db181" translate="yes" xml:space="preserve">
          <source>Pretty-print containers using a Go template</source>
          <target state="translated">碁のテンプレートを使ったプリティプリントコンテナ</target>
        </trans-unit>
        <trans-unit id="754a0902bc7bfb77dc579c622f479242a9281bef" translate="yes" xml:space="preserve">
          <source>Pretty-print contexts using a Go template</source>
          <target state="translated">Go テンプレートを使用したプリティプリントコンテキスト</target>
        </trans-unit>
        <trans-unit id="6e030ca67191e4611f980befa4f91854bb21e109" translate="yes" xml:space="preserve">
          <source>Pretty-print images using a Go template</source>
          <target state="translated">囲碁テンプレートを使ったプリティプリント画像</target>
        </trans-unit>
        <trans-unit id="ab7a8b2db7fe44ae0d32e44bf7df4225c716c9e4" translate="yes" xml:space="preserve">
          <source>Pretty-print licenses using a Go template</source>
          <target state="translated">Goテンプレートを使用したプリティプリントライセンス</target>
        </trans-unit>
        <trans-unit id="428344a5b3e079e1554c7db65fd568a27060577e" translate="yes" xml:space="preserve">
          <source>Pretty-print networks using a Go template</source>
          <target state="translated">碁のテンプレートを使ったプリティープリントネットワーク</target>
        </trans-unit>
        <trans-unit id="cbde1b5d55657ff086b8e9a45016a41a38fa2098" translate="yes" xml:space="preserve">
          <source>Pretty-print nodes using a Go template</source>
          <target state="translated">Goテンプレートを使用したプリティプリントノード</target>
        </trans-unit>
        <trans-unit id="949d8c3219e0429db671c5264e59dcbdc3ef6936" translate="yes" xml:space="preserve">
          <source>Pretty-print plugins using a Go template</source>
          <target state="translated">囲碁テンプレートを使ったプリティプリントプラグイン</target>
        </trans-unit>
        <trans-unit id="a6b4b602d685d020e770bf7497c2022220878338" translate="yes" xml:space="preserve">
          <source>Pretty-print search using a Go template</source>
          <target state="translated">碁のテンプレートを使ったプリティープリント検索</target>
        </trans-unit>
        <trans-unit id="49772036e49194eb1b8046fdbf5a39d95a1d861f" translate="yes" xml:space="preserve">
          <source>Pretty-print secrets using a Go template</source>
          <target state="translated">囲碁テンプレートを使ったプリティプリントの秘密</target>
        </trans-unit>
        <trans-unit id="666c884f24f78b50337a35ebc219eaf5babe03a0" translate="yes" xml:space="preserve">
          <source>Pretty-print services using a Go template</source>
          <target state="translated">囲碁テンプレートを使ったプリティプリントサービス</target>
        </trans-unit>
        <trans-unit id="86bb359f69cde38cf55d5604e8139e26d825966f" translate="yes" xml:space="preserve">
          <source>Pretty-print stacks using a Go template</source>
          <target state="translated">碁のテンプレートを使ったプリティプリントスタック</target>
        </trans-unit>
        <trans-unit id="f61b3ff93ba02dd0b478ac5555b4027eae730370" translate="yes" xml:space="preserve">
          <source>Pretty-print tasks using a Go template</source>
          <target state="translated">Goテンプレートを使ったプリティープリントタスク</target>
        </trans-unit>
        <trans-unit id="68c1487e3726fb54c1efe85f328b307126784e87" translate="yes" xml:space="preserve">
          <source>Pretty-print updates using a Go template</source>
          <target state="translated">碁のテンプレートを使ったプリティプリントの更新</target>
        </trans-unit>
        <trans-unit id="39223d19105deef8dd168755351e5eb4bb60ec66" translate="yes" xml:space="preserve">
          <source>Pretty-print volumes using a Go template</source>
          <target state="translated">碁のテンプレートを使ったプリティプリントの巻</target>
        </trans-unit>
        <trans-unit id="0595de42b5c72136b2bb1096defe3bc30dca18a1" translate="yes" xml:space="preserve">
          <source>Prevent container from enabling BSD emulation. Not inherently dangerous, but poorly tested, potential for a lot of kernel vulns.</source>
          <target state="translated">コンテナが BSD エミュレーションを有効にすることを防ぎます。本質的には危険ではありませんが、テストが不十分で、多くのカーネルバルンの可能性があります。</target>
        </trans-unit>
        <trans-unit id="97c6554bcee4610c2972001e75ed770b574c77f8" translate="yes" xml:space="preserve">
          <source>Prevent containers from modifying kernel I/O privilege levels. Already gated by &lt;code&gt;CAP_SYS_RAWIO&lt;/code&gt;.</source>
          <target state="translated">コンテナーがカーネルI / O特権レベルを変更できないようにします。すでに &lt;code&gt;CAP_SYS_RAWIO&lt;/code&gt; によってゲートされています。</target>
        </trans-unit>
        <trans-unit id="19416d1135af45b9c308e99573158a832792620d" translate="yes" xml:space="preserve">
          <source>Prevent containers from using the kernel keyring, which is not namespaced.</source>
          <target state="translated">コンテナがカーネルキーリングを使用しないようにします。</target>
        </trans-unit>
        <trans-unit id="3c2f51e62a8f9c187996e5f620033a19527a6d03" translate="yes" xml:space="preserve">
          <source>Prevent truncating output</source>
          <target state="translated">出力の切り捨て防止</target>
        </trans-unit>
        <trans-unit id="a84d01d5b275ea9d0030dfd274fdcd6c82e4d7af" translate="yes" xml:space="preserve">
          <source>Print sizes and dates in human readable format</source>
          <target state="translated">印刷サイズと日付を人間が読める形式で表示</target>
        </trans-unit>
        <trans-unit id="3f59f5b92107ad3a1f427ddd0d0049b0d2218ede" translate="yes" xml:space="preserve">
          <source>Print the information in a human friendly format</source>
          <target state="translated">人に優しいフォーマットで印刷する</target>
        </trans-unit>
        <trans-unit id="26e1fc5b8021bc711f4ebdb20ac0fcd5671898be" translate="yes" xml:space="preserve">
          <source>Print usage</source>
          <target state="translated">印刷使用量</target>
        </trans-unit>
        <trans-unit id="cbbe6bb7beb995f2142dca21518c41d5f6f8aa63" translate="yes" xml:space="preserve">
          <source>Prints machine configuration details.</source>
          <target state="translated">マシン構成の詳細を印刷します。</target>
        </trans-unit>
        <trans-unit id="feec73470d0734a79004e622c117295120daf19d" translate="yes" xml:space="preserve">
          <source>Prints the public port for a port binding.</source>
          <target state="translated">ポートバインディングのパブリックポートを印刷します。</target>
        </trans-unit>
        <trans-unit id="c6df5f0cf30d9ff7bc94e0c7ffb7fd4035fb69bc" translate="yes" xml:space="preserve">
          <source>Prior to Docker Engine 1.11, this feature was only in the experimental branch.</source>
          <target state="translated">Docker Engine 1.11以前は、この機能は実験ブランチにしかありませんでした。</target>
        </trans-unit>
        <trans-unit id="2e27f70e5aaa10827ce1e5c80a0cb82a423669a3" translate="yes" xml:space="preserve">
          <source>Prioritize your build cache for automatic pruning</source>
          <target state="translated">ビルドキャッシュに優先順位をつけて自動剪定を行います。</target>
        </trans-unit>
        <trans-unit id="faae17d8a26a29ab73e0fc35e24381d009eaacdb" translate="yes" xml:space="preserve">
          <source>Privileged user requirement</source>
          <target state="translated">特権ユーザー要件</target>
        </trans-unit>
        <trans-unit id="907f6c92f4018615ebbe5892e2dda9e906f8f1a3" translate="yes" xml:space="preserve">
          <source>Produce a bundle</source>
          <target state="translated">束を作る</target>
        </trans-unit>
        <trans-unit id="8d8b92039adbb55588c1a3f3a5866620fbb0a49d" translate="yes" xml:space="preserve">
          <source>Produce a very basic Nginx configuration that serves static files over HTTPS. The TLS certificate and key are stored as Docker secrets so that they can be rotated easily.</source>
          <target state="translated">HTTPSで静的ファイルを提供する非常に基本的なNginxの設定を作成します。TLS証明書と鍵はDockerの秘密情報として保存されているので、簡単に回転させることができます。</target>
        </trans-unit>
        <trans-unit id="7499a8d4c7fb43b25db15b5952a60e426782df78" translate="yes" xml:space="preserve">
          <source>Produces a tarred repository to the standard output stream. Contains all parent layers, and all tags + versions, or specified &lt;code&gt;repo:tag&lt;/code&gt;, for each argument provided.</source>
          <target state="translated">標準出力ストリームにtarされたリポジトリを作成します。提供された各引数について、すべての親レイヤー、すべてのタグ+バージョン、または指定された &lt;code&gt;repo:tag&lt;/code&gt; を含みます。</target>
        </trans-unit>
        <trans-unit id="1220642cea0d0c90bbd1df159757c28f2cd50248" translate="yes" xml:space="preserve">
          <source>Progress bars are shown during docker push, which show the uncompressed size. The actual amount of data that&amp;rsquo;s pushed will be compressed before sending, so the uploaded size will not be reflected by the progress bar.</source>
          <target state="translated">ドッカーのプッシュ中にプログレスバーが表示され、圧縮されていないサイズを示します。プッシュされる実際のデータ量は送信前に圧縮されるため、アップロードされたサイズはプログレスバーに反映されません。</target>
        </trans-unit>
        <trans-unit id="41992b8e36073f5197a8edb1164977d2ba1bed29" translate="yes" xml:space="preserve">
          <source>Promote one or more nodes to manager in the swarm</source>
          <target state="translated">スウォーム内の1つ以上のノードを管理者に昇格させる</target>
        </trans-unit>
        <trans-unit id="e56c12679afc8f6a8bfc60298813d1a14cd77a65" translate="yes" xml:space="preserve">
          <source>Promote or demote a node</source>
          <target state="translated">ノードを昇格または降格させる</target>
        </trans-unit>
        <trans-unit id="c6710aebbc524e06fef830bd8fc0568ece59cf02" translate="yes" xml:space="preserve">
          <source>Promotes a node to manager. This command can only be executed on a manager node.</source>
          <target state="translated">ノードをマネージャに昇格させます。このコマンドはマネージャノードでのみ実行できます。</target>
        </trans-unit>
        <trans-unit id="407839201484d395b708b2a873b1d747d5e849ca" translate="yes" xml:space="preserve">
          <source>Protect the Docker daemon socket</source>
          <target state="translated">Docker デーモンソケットの保護</target>
        </trans-unit>
        <trans-unit id="1ed77c3f7ffc41a33eadccef5727dc7c97079235" translate="yes" xml:space="preserve">
          <source>Protocol</source>
          <target state="translated">Protocol</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
