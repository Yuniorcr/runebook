<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="electron">
    <body>
      <group id="electron">
        <trans-unit id="c6d90801a4c3e50e051cf903b0d224aa85bfface" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For the reverse (access the renderer process from the main process), you can use &lt;a href=&quot;web-contents#contentsexecutejavascriptcode-usergesture&quot;&gt;webContents.executeJavaScript&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;逆の場合（メインプロセスからレンダラープロセスにアクセスする）は、&lt;a href=&quot;web-contents#contentsexecutejavascriptcode-usergesture&quot;&gt;webContents.executeJavaScript&lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="34b42ebc5836c06e7cf6f0e79dafed5136fa594e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For the reverse (access the renderer process from the main process), you can use &lt;a href=&quot;web-contents#contentsexecutejavascriptcode-usergesture-callback&quot;&gt;webContents.executeJavascript&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;逆の場合（メインプロセスからレンダラープロセスにアクセスする場合）は、&lt;a href=&quot;web-contents#contentsexecutejavascriptcode-usergesture-callback&quot;&gt;webContents.executeJavascript&lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="655b648941e4bdc79b433fe51c7682b1de166121" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If a &lt;code&gt;JumpListCategory&lt;/code&gt; object has neither the &lt;code&gt;type&lt;/code&gt; nor the &lt;code&gt;name&lt;/code&gt; property set then its &lt;code&gt;type&lt;/code&gt; is assumed to be &lt;code&gt;tasks&lt;/code&gt;. If the &lt;code&gt;name&lt;/code&gt; property is set but the &lt;code&gt;type&lt;/code&gt; property is omitted then the &lt;code&gt;type&lt;/code&gt; is assumed to be &lt;code&gt;custom&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;JumpListCategory&lt;/code&gt; オブジェクトに &lt;code&gt;type&lt;/code&gt; プロパティも &lt;code&gt;name&lt;/code&gt; プロパティも設定されていない場合、その &lt;code&gt;type&lt;/code&gt; は &lt;code&gt;tasks&lt;/code&gt; であると見なされます。場合は &lt;code&gt;name&lt;/code&gt; プロパティが設定されているが、 &lt;code&gt;type&lt;/code&gt; 、プロパティが省略されている &lt;code&gt;type&lt;/code&gt; あると想定される &lt;code&gt;custom&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b39368e5eb3def58d9f3cde714ebd7cc80c0bbe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If application quit was initiated by &lt;code&gt;autoUpdater.quitAndInstall()&lt;/code&gt; then &lt;code&gt;before-quit&lt;/code&gt; is emitted &lt;em&gt;after&lt;/em&gt; emitting &lt;code&gt;close&lt;/code&gt; event on all windows and closing them.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;アプリケーションが終了している場合で開始された &lt;code&gt;autoUpdater.quitAndInstall()&lt;/code&gt; その後、 &lt;code&gt;before-quit&lt;/code&gt; 放出され&lt;em&gt;た後、&lt;/em&gt;発光 &lt;code&gt;close&lt;/code&gt; すべてのウィンドウでイベントをし、それらを閉じます。</target>
        </trans-unit>
        <trans-unit id="bc4b158f0af9ee7fe0be236e186159d91c4c800b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If application quit was initiated by &lt;code&gt;autoUpdater.quitAndInstall()&lt;/code&gt;, then &lt;code&gt;before-quit&lt;/code&gt; is emitted &lt;em&gt;after&lt;/em&gt; emitting &lt;code&gt;close&lt;/code&gt; event on all windows and closing them.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;アプリケーションが終了している場合で開始された &lt;code&gt;autoUpdater.quitAndInstall()&lt;/code&gt; 、その後、 &lt;code&gt;before-quit&lt;/code&gt; 放出され&lt;em&gt;た後、&lt;/em&gt;発光 &lt;code&gt;close&lt;/code&gt; すべてのウィンドウでイベントをし、それらを閉じます。</target>
        </trans-unit>
        <trans-unit id="19bbdb45c35c22baf5cc2c714e93f41a4fbe3699" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If the application is quit without calling this API after the &lt;code&gt;update-downloaded&lt;/code&gt; event has been emitted, the application will still be replaced by the updated one on the next run.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;update-downloaded&lt;/code&gt; イベントが発行された後、このAPIを呼び出さずにアプリケーションを終了した場合、アプリケーションは次の実行時に更新されたものに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="f346f3205b35493497f82b3128df8b0636d26790" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If the menu bar is auto-hide, users can still bring up the menu bar by pressing the single &lt;code&gt;Alt&lt;/code&gt; key.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;メニューバーが自動非表示の場合でも、ユーザーは1つの &lt;code&gt;Alt&lt;/code&gt; キーを押すことでメニューバーを表示できます。</target>
        </trans-unit>
        <trans-unit id="be771d8e4ffdf040500a29bca288a8bee8c610fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If the second instance is started by a different user than the first, the &lt;code&gt;argv&lt;/code&gt; array will not include the arguments.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; 2番目のインスタンスが最初のインスタンスとは異なるユーザーによって開始された場合、 &lt;code&gt;argv&lt;/code&gt; 配列には引数が含まれません。</target>
        </trans-unit>
        <trans-unit id="5dec456b4f336ad5b04c46395127d72ec05fe1e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you need send additional/updated &lt;code&gt;extra&lt;/code&gt; parameters after your first call &lt;code&gt;start&lt;/code&gt; you can call &lt;code&gt;addExtraParameter&lt;/code&gt; on macOS or call &lt;code&gt;start&lt;/code&gt; again with the new/updated &lt;code&gt;extra&lt;/code&gt; parameters on Linux and Windows.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;最初の呼び出しの &lt;code&gt;start&lt;/code&gt; 後に追加/更新された &lt;code&gt;extra&lt;/code&gt; パラメーターを送信する必要がある場合は、macOSで &lt;code&gt;addExtraParameter&lt;/code&gt; を呼び出すか、LinuxおよびWindowsで新しい/更新された &lt;code&gt;extra&lt;/code&gt; パラメーターで &lt;code&gt;start&lt;/code&gt; を再度呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="6a3b7f3bc3d698746d244dd8580f2ae408a89c2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you need to send additional/updated &lt;code&gt;extra&lt;/code&gt; parameters after your first call &lt;code&gt;start&lt;/code&gt; you can call &lt;code&gt;addExtraParameter&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;最初の呼び出し &lt;code&gt;start&lt;/code&gt; 後に追加/更新された &lt;code&gt;extra&lt;/code&gt; パラメーターを送信する必要がある場合は、 &lt;code&gt;addExtraParameter&lt;/code&gt; を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="d55afe609ed72c775cca6a238280aced7ea71358" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you'd like to customize the Jump List even more use &lt;code&gt;app.setJumpList(categories)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;ジャンプリストをさらにカスタマイズする場合は、代わりに &lt;code&gt;app.setJumpList(categories)&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="f354f19dd049805054de4e12cfaca3c15fb4f498" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In Chrome, passing &lt;code&gt;-1&lt;/code&gt; as a tab ID signifies the &quot;currently active tab&quot;. Since Electron has no such concept, passing &lt;code&gt;-1&lt;/code&gt; as a tab ID is not supported and will raise an error.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Chromeでは、タブIDとして &lt;code&gt;-1&lt;/code&gt; を渡すと、「現在アクティブなタブ」を意味します。Electronにはそのような概念がないため、タブIDとして &lt;code&gt;-1&lt;/code&gt; を渡すことはサポートされておらず、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="2277a0592fbaa9e136335dcbd089ce5d5418a99c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In a Windows Store environment (when packaged as an &lt;code&gt;appx&lt;/code&gt;) this API will return &lt;code&gt;true&lt;/code&gt; for all calls but the registry key it sets won't be accessible by other applications. In order to register your Windows Store application as a default protocol handler you must &lt;a href=&quot;https://docs.microsoft.com/en-us/uwp/schemas/appxpackage/uapmanifestschema/element-uap-protocol&quot;&gt;declare the protocol in your manifest&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Windowsストア環境（ &lt;code&gt;appx&lt;/code&gt; としてパッケージ化されている場合）では、このAPIはすべての呼び出しに対して &lt;code&gt;true&lt;/code&gt; を返しますが、設定されたレジストリキーは他のアプリケーションからアクセスできません。Windowsストアアプリケーションをデフォルトのプロトコルハンドラーとして登録するに&lt;a href=&quot;https://docs.microsoft.com/en-us/uwp/schemas/appxpackage/uapmanifestschema/element-uap-protocol&quot;&gt;は、マニフェストでプロトコルを宣言&lt;/a&gt;する必要があります。</target>
        </trans-unit>
        <trans-unit id="2c9678baa7711adcc4637fdf7e04c809336fa6e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In the renderer / DevTools, &lt;code&gt;window.screen&lt;/code&gt; is a reserved DOM property, so writing &lt;code&gt;let { screen } = require('electron')&lt;/code&gt; will not work.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;レンダラー/ DevToolsでは、 &lt;code&gt;window.screen&lt;/code&gt; は予約済みのDOMプロパティであるため、 &lt;code&gt;let { screen } = require('electron')&lt;/code&gt; と書くことはできません。</target>
        </trans-unit>
        <trans-unit id="8f43e1b27801fcbf052b79d55e3056376189bc4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In the renderer / DevTools, &lt;code&gt;window.screen&lt;/code&gt; is a reserved DOM property, so writing &lt;code&gt;let {screen} = require('electron')&lt;/code&gt; will not work.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;レンダラー/ DevToolsでは、 &lt;code&gt;window.screen&lt;/code&gt; は予約済みのDOMプロパティであるため、 &lt;code&gt;let {screen} = require('electron')&lt;/code&gt; と記述しても機能しません。</target>
        </trans-unit>
        <trans-unit id="f3196e411e4c99b4748ac0da099f738bdb4f9a61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It is not strictly necessary to call this function to apply an update, as a successfully downloaded update will always be applied the next time the application starts.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;正常にダウンロードされた更新は、次回アプリケーションの起動時に常に適用されるため、更新を適用するためにこの関数を呼び出す必要は厳密にはありません。</target>
        </trans-unit>
        <trans-unit id="0dd3df76b402bff7f75adec7fa1fe7fddf817d33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It is not strictly necessary to handle this event. A successfully downloaded update will still be applied the next time the application starts.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このイベントを処理する必要は厳密にはありません。正常にダウンロードされた更新プログラムは、次にアプリケーションを起動したときに引き続き適用されます。</target>
        </trans-unit>
        <trans-unit id="15389f7663e335ea6475a96e10e4c2af20ea569d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It returns the actual operating system version instead of kernel version on macOS unlike &lt;code&gt;os.release()&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;os.release()&lt;/code&gt; とは異なり、macOSではカーネルバージョンではなく実際のオペレーティングシステムバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="fb5fa9d370d9f491454379697cc48d27a42a6c94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Loading extensions into in-memory (non-persistent) sessions is not supported and will throw an error.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;拡張機能をメモリ内（非永続）セッションにロードすることはサポートされておらず、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="bef5cf2741a650474d426fd8b3897c1f0a2c425b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Make sure that chrome version used by Electron is greater than or equal to the &lt;code&gt;min_chrome_version&lt;/code&gt; value of Chrome's widevine cdm component. The value can be found in &lt;code&gt;manifest.json&lt;/code&gt; under &lt;code&gt;WidevineCdm&lt;/code&gt; directory.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Electronで使用されるChrome &lt;code&gt;min_chrome_version&lt;/code&gt; が、Chromeのワイドバインcdmコンポーネントのmin_chrome_version値以上であることを確認してください。値は、 &lt;code&gt;WidevineCdm&lt;/code&gt; ディレクトリの下の &lt;code&gt;manifest.json&lt;/code&gt; にあります。</target>
        </trans-unit>
        <trans-unit id="81626924009baa99e4ca3737341fc137a7de9218" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Most apps on Windows don't support pasting bookmarks into them so you can use &lt;code&gt;clipboard.write&lt;/code&gt; to write both a bookmark and fallback text to the clipboard.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Windowsのほとんどのアプリはブックマークの貼り付けをサポートしていないため、 &lt;code&gt;clipboard.write&lt;/code&gt; を使用してブックマークとフォールバックテキストの両方をクリップボードに書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="e2ba2b9c20e49b9829aac528820c11c55d21a163" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On Windows and Linux an open dialog can not be both a file selector and a directory selector, so if you set &lt;code&gt;properties&lt;/code&gt; to &lt;code&gt;['openFile', 'openDirectory']&lt;/code&gt; on these platforms, a directory selector will be shown.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; WindowsおよびLinuxでは、開くダイアログをファイルセレクターとディレクトリセレクターの両方にすることはできません。そのため、これらのプラットフォームで &lt;code&gt;properties&lt;/code&gt; を &lt;code&gt;['openFile', 'openDirectory']&lt;/code&gt; に設定すると、ディレクトリセレクターが表示されます。</target>
        </trans-unit>
        <trans-unit id="bb8dd8ff920be6491a5996f832c5edf0b006e3ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On Windows you have to call it after the &lt;code&gt;ready&lt;/code&gt; events gets emitted.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Windowsでは、 &lt;code&gt;ready&lt;/code&gt; イベントが発行された後に呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="43b2335b202f3fbb7085d776969df24092331a92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On Windows, this event will not be emitted if the app is closed due to a shutdown/restart of the system or a user logout.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Windowsでは、システムのシャットダウン/再起動またはユーザーのログアウトのためにアプリが閉じている場合、このイベントは発行されません。</target>
        </trans-unit>
        <trans-unit id="ec5ce86c18f22d92ffcd0f9560bc558be6802f4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On Windows, you have to call it after the &lt;code&gt;ready&lt;/code&gt; events gets emitted.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Windowsでは、 &lt;code&gt;ready&lt;/code&gt; イベントが発行された後に呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="e954e8f7bfde35bec00d0131f934569088c0afe8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On linux values that are longer than 127 bytes will be chunked into multiple keys, each 127 bytes in length. E.g. &lt;code&gt;addExtraParameter('foo', 'a'.repeat(130))&lt;/code&gt; will result in two chunked keys &lt;code&gt;foo__1&lt;/code&gt; and &lt;code&gt;foo__2&lt;/code&gt;, the first will contain the first 127 bytes and the second will contain the remaining 3 bytes. On your crash reporting backend you should stitch together keys in this format.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Linuxでは、127バイトより長い値は、それぞれ127バイトの長さの複数のキーにチャンクされます。たとえば、 &lt;code&gt;addExtraParameter('foo', 'a'.repeat(130))&lt;/code&gt; は、2つのチャンクキー &lt;code&gt;foo__1&lt;/code&gt; と &lt;code&gt;foo__2&lt;/code&gt; になり、最初のキーには最初の127バイトが含まれ、2番目のキーには残りの3バイトが含まれます。クラッシュレポートバックエンドでは、この形式でキーをつなぎ合わせる必要があります。</target>
        </trans-unit>
        <trans-unit id="cd3d52d1b082fee4dcd80bedf8461cd8c3fe8430" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On macOS 10.15 Catalina in order for this API to return the correct value when in the &quot;automatic&quot; dark mode setting you must either have &lt;code&gt;NSRequiresAquaSystemAppearance=false&lt;/code&gt; in your &lt;code&gt;Info.plist&lt;/code&gt; or be on Electron &lt;code&gt;&amp;gt;=7.0.0&lt;/code&gt;. See the &lt;a href=&quot;../tutorial/mojave-dark-mode-guide&quot;&gt;dark mode guide&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; macOS 10.15 Catalinaでは、「自動」ダークモード設定でこのAPIが正しい値を返すためには、 &lt;code&gt;Info.plist&lt;/code&gt; に &lt;code&gt;NSRequiresAquaSystemAppearance=false&lt;/code&gt; があるか、Electron &lt;code&gt;&amp;gt;=7.0.0&lt;/code&gt; である必要があります。詳細については、&lt;a href=&quot;../tutorial/mojave-dark-mode-guide&quot;&gt;ダークモードガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8c3fc43dfb48bddcb888d69c43216c769d4f52d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On macOS 10.15 Catalina in order for this API to return the correct value when in the &quot;automatic&quot; dark mode setting you must either have &lt;code&gt;NSRequiresAquaSystemAppearance=false&lt;/code&gt; in your &lt;code&gt;Info.plist&lt;/code&gt; or be on Electron &lt;code&gt;&amp;gt;=7.0.0&lt;/code&gt;. See the &lt;a href=&quot;tutorial/mojave-dark-mode-guide&quot;&gt;dark mode guide&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; macOS 10.15 Catalinaでは、「自動」ダークモード設定でこのAPIが正しい値を返すためには、 &lt;code&gt;Info.plist&lt;/code&gt; に &lt;code&gt;NSRequiresAquaSystemAppearance=false&lt;/code&gt; があるか、Electron &lt;code&gt;&amp;gt;=7.0.0&lt;/code&gt; である必要があります。詳細については、&lt;a href=&quot;tutorial/mojave-dark-mode-guide&quot;&gt;ダークモードガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="0a1f4051519502de92b8f25a9b6c4660b2a17117" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On macOS and Windows 10 this word will be removed from the OS custom dictionary as well</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; macOSおよびWindows 10では、この単語はOSカスタム辞書からも削除されます</target>
        </trans-unit>
        <trans-unit id="cfff73e9391743d52842cc100f28ea89d7ec863e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On macOS and Windows 10 this word will be written to the OS custom dictionary as well</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; macOSおよびWindows 10では、この単語はOSカスタム辞書にも書き込まれます</target>
        </trans-unit>
        <trans-unit id="7903984241116724ea07d4bd087b405aaa12dca3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On macOS the OS spellchecker is used and has its own list of languages. This API is a no-op on macOS.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; macOSでは、OSスペルチェッカーが使用され、独自の言語リストがあります。このAPIはmacOSでは動作しません。</target>
        </trans-unit>
        <trans-unit id="c9a93dedbdecf62c4ccb38a193c1992d38dd699f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On macOS the OS spellchecker is used and therefore we do not download any dictionary files. This API is a no-op on macOS.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; macOSではOSスペルチェッカーが使用されるため、辞書ファイルはダウンロードされません。このAPIはmacOSでは動作しません。</target>
        </trans-unit>
        <trans-unit id="73cf65bfe80ec7048eb7244ccd1f1a3409c92502" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On macOS the OS spellchecker is used and will detect your language automatically. This API is a no-op on macOS.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; macOSでは、OSスペルチェッカーが使用され、言語が自動的に検出されます。このAPIはmacOSでは動作しません。</target>
        </trans-unit>
        <trans-unit id="ccd5f449a6bf70ca6276d3de1a583e4b7d6e9c92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On macOS, Electron uses a new &lt;code&gt;crashpad&lt;/code&gt; client for crash collection and reporting. If you want to enable crash reporting, initializing &lt;code&gt;crashpad&lt;/code&gt; from the main process using &lt;code&gt;crashReporter.start&lt;/code&gt; is required regardless of which process you want to collect crashes from. Once initialized this way, the crashpad handler collects crashes from all processes. You still have to call &lt;code&gt;crashReporter.start&lt;/code&gt; from the renderer or child process, otherwise crashes from them will get reported without &lt;code&gt;companyName&lt;/code&gt;, &lt;code&gt;productName&lt;/code&gt; or any of the &lt;code&gt;extra&lt;/code&gt; information.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; macOSでは、Electronはクラッシュ収集とレポートに新しいクラッシュ &lt;code&gt;crashpad&lt;/code&gt; クライアントを使用します。クラッシュレポートを有効にする場合は、クラッシュを収集するプロセスに関係なく、 &lt;code&gt;crashReporter.start&lt;/code&gt; を使用してメインプロセスからクラッシュ &lt;code&gt;crashpad&lt;/code&gt; を初期化する必要があります。この方法で初期化されると、crashpadハンドラーはすべてのプロセスからクラッシュを収集します。それでもレンダラーまたは子プロセスから &lt;code&gt;crashReporter.start&lt;/code&gt; を呼び出す必要があります。そうしないと、それらからのクラッシュは &lt;code&gt;companyName&lt;/code&gt; 、 &lt;code&gt;productName&lt;/code&gt; 、または &lt;code&gt;extra&lt;/code&gt; 情報なしで報告されます。</target>
        </trans-unit>
        <trans-unit id="3c15472ff40adfa1a329bd16522f616b4c76eabc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On macOS, using the asynchronous version is recommended to avoid issues when expanding and collapsing the dialog.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; macOSでは、ダイアログを展開および折りたたむときの問題を回避するために、非同期バージョンを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d228b331bd581009849e0809742d2f7b733868af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On macOS, you can only register protocols that have been added to your app's &lt;code&gt;info.plist&lt;/code&gt;, which can not be modified at runtime. You can however change the file with a simple text editor or script during build time. Please refer to &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/TP40009249-102207-TPXREF115&quot;&gt;Apple's documentation&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; macOSでは、アプリの &lt;code&gt;info.plist&lt;/code&gt; に追加されたプロトコルのみを登録できます。これは実行時に変更できません。ただし、ビルド時に単純なテキストエディタまたはスクリプトを使用してファイルを変更できます。詳細については、&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/TP40009249-102207-TPXREF115&quot;&gt;Appleのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3aa7db8f8357d3426005c1f79f0a045cdafe1db5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On macOS, you can only register protocols that have been added to your app's &lt;code&gt;info.plist&lt;/code&gt;, which cannot be modified at runtime. However, you can change the file during build time via &lt;a href=&quot;https://www.electronforge.io/&quot;&gt;Electron Forge&lt;/a&gt;, &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;Electron Packager&lt;/a&gt;, or by editing &lt;code&gt;info.plist&lt;/code&gt; with a text editor. Please refer to &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/TP40009249-102207-TPXREF115&quot;&gt;Apple's documentation&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; macOSでは、アプリの &lt;code&gt;info.plist&lt;/code&gt; に追加されたプロトコルのみを登録でき、実行時に変更することはできません。ただし、ビルド時に&lt;a href=&quot;https://www.electronforge.io/&quot;&gt;Electron Forge&lt;/a&gt;、&lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;Electron Packager&lt;/a&gt;を使用するか、テキストエディターで &lt;code&gt;info.plist&lt;/code&gt; を編集することにより、ファイルを変更できます。詳細については、&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/TP40009249-102207-TPXREF115&quot;&gt;Appleのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6c7ab55a8c74d8007fcee6e5f9cf2d5679d4a7b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On macOS, you can use this method to check if the app has been registered as the default protocol handler for a protocol. You can also verify this by checking &lt;code&gt;~/Library/Preferences/com.apple.LaunchServices.plist&lt;/code&gt; on the macOS machine. Please refer to &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Carbon/Reference/LaunchServicesReference/#//apple_ref/c/func/LSCopyDefaultHandlerForURLScheme&quot;&gt;Apple's documentation&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; macOSでは、このメソッドを使用して、アプリがプロトコルのデフォルトのプロトコルハンドラーとして登録されているかどうかを確認できます。これは、macOSマシンで &lt;code&gt;~/Library/Preferences/com.apple.LaunchServices.plist&lt;/code&gt; を確認することでも確認できます。詳細については、&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Carbon/Reference/LaunchServicesReference/#//apple_ref/c/func/LSCopyDefaultHandlerForURLScheme&quot;&gt;Appleのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="39814adf1ef4942eac5446e42c1b8bbabcec1860" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; On macOS, you need to ensure that your application has the permission to display notifications for this property to take effect.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; macOSでは、このプロパティを有効にするための通知を表示する権限がアプリケーションにあることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="91b484ef430c838eb5f36f01968207850c850f6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Only &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;enumerable properties&lt;/a&gt; which are present when the remote object is first referenced are accessible via remote.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;リモートオブジェクトが最初に参照されたときに存在する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;列挙可能なプロパティに&lt;/a&gt;のみ、リモートからアクセスできます。</target>
        </trans-unit>
        <trans-unit id="2fa01d130b615e72f227531f8abfad2d5a7b2357" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Parameters have limits on the length of the keys and values. Key names must be no longer than 39 bytes, and values must be no longer than 20320 bytes. Keys with names longer than the maximum will be silently ignored. Key values longer than the maximum length will be truncated.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;パラメーターには、キーと値の長さに制限があります。キー名は39バイト以下、値は20320バイト以下である必要があります。名前が最大値より長いキーは、黙って無視されます。最大長より長いキー値は切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="4081b48da87f15f30ccebc9aa19b28f2e2e23bf1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Parameters passed in &lt;code&gt;extra&lt;/code&gt;, &lt;code&gt;globalExtra&lt;/code&gt; or set with &lt;code&gt;addExtraParameter&lt;/code&gt; have limits on the length of the keys and values. Key names must be at most 39 bytes long, and values must be no longer than 127 bytes. Keys with names longer than the maximum will be silently ignored. Key values longer than the maximum length will be truncated.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;extra&lt;/code&gt; 、 &lt;code&gt;globalExtra&lt;/code&gt; で渡されるパラメーター、またはaddExtraParameterで設定される &lt;code&gt;addExtraParameter&lt;/code&gt; は、キーと値の長さに制限があります。キー名の長さは最大39バイトで、値は127バイト以下である必要があります。名前が最大値より長いキーは、黙って無視されます。最大長より長いキー値は切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="06e5900d9c689549b9b23afb278bdaad6cd39cd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Passing unsupported command line switches to Electron when it is not running in &lt;code&gt;ELECTRON_RUN_AS_NODE&lt;/code&gt; will have no effect.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;ELECTRON_RUN_AS_NODE&lt;/code&gt; で実行されていないときに、サポートされていないコマンドラインスイッチをElectronに渡しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="9248985995730fffd977287c925e5f0313fe2a9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Rendering accessibility tree can significantly affect the performance of your app. It should not be enabled by default.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;アクセシビリティツリーのレンダリングは、アプリのパフォーマンスに大きな影響を与える可能性があります。デフォルトでは有効にしないでください。</target>
        </trans-unit>
        <trans-unit id="f7ffd4e35c76415179831ea05c54c2b81576691b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Sending a synchronous message will block the whole renderer process, unless you know what you are doing you should never use it.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;同期メッセージを送信すると、レンダラープロセス全体がブロックされます。</target>
        </trans-unit>
        <trans-unit id="0b198f27325832017d8a6e74fb967567d700cfa3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Since this is an HTML5 API it is only available in the renderer process. If you want to show Notifications in the main process please check out the &lt;a href=&quot;../api/notification&quot;&gt;Notification&lt;/a&gt; module.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;これはHTML5 APIであるため、レンダラープロセスでのみ使用できます。メインプロセスで通知を表示する場合は、&lt;a href=&quot;../api/notification&quot;&gt;通知&lt;/a&gt;モジュールを確認してください。</target>
        </trans-unit>
        <trans-unit id="aef80fc22d79321caa49abad849c818f0e6f9c18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Some events are only available on specific operating systems and are labeled as such.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;一部のイベントは特定のオペレーティングシステムでのみ利用可能であり、そのようにラベル付けされています。</target>
        </trans-unit>
        <trans-unit id="ede0fa86a949bf55349c3dfc662df9077d73d684" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Some methods are only available on specific operating systems and are labeled as such.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;一部のメソッドは特定のオペレーティングシステムでのみ使用可能であり、そのようにラベル付けされています。</target>
        </trans-unit>
        <trans-unit id="3a6b78f5b16b49e47c0ba8f9ba18c719837c4a6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Submitting an app to Mac App Store requires enrolling &lt;a href=&quot;https://developer.apple.com/support/compare-memberships/&quot;&gt;Apple Developer Program&lt;/a&gt;, which costs money.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;アプリをMac App Storeに送信するには、&lt;a href=&quot;https://developer.apple.com/support/compare-memberships/&quot;&gt;Apple Developer Programを&lt;/a&gt;登録する必要があり、費用がかかります。</target>
        </trans-unit>
        <trans-unit id="8c95574d528740e8f5e6884d08d3bfb382a6bfee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Submitting an app to Mac App Store requires enrolling in the &lt;a href=&quot;https://developer.apple.com/support/compare-memberships/&quot;&gt;Apple Developer Program&lt;/a&gt;, which costs money.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;アプリをMac App Storeに送信するには、&lt;a href=&quot;https://developer.apple.com/support/compare-memberships/&quot;&gt;Apple DeveloperProgramに&lt;/a&gt;登録する必要があります。これには費用がかかります。</target>
        </trans-unit>
        <trans-unit id="aa8f0793edc6283361ee059ea9cd6c8685af5a3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Template image is only supported on macOS.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;テンプレートイメージはmacOSでのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="19762b74e0a3cbcdb696a727b53c298f65857473" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt; API cannot be called before the ready event of the app module is emitted.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt; のアプリモジュールのreadyイベントが放出される前に、APIを呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="a03273207ebfe6cc4006bdf22e09f227467ece53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The BrowserView API is currently experimental and may change or be removed in future Electron releases.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; BrowserView APIは現在実験段階であり、将来のElectronリリースで変更または削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="57e288c146cf25c8f64fb35bb9a63409ddfe8251" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The TouchBar API is currently experimental and may change or be removed in future Electron releases.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; TouchBar APIは現在実験段階であり、将来のElectronリリースで変更または削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="1f148fb1e4601995f40503db219f2744c770ec09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The default menu will be created automatically if the app does not set one. It contains standard items such as &lt;code&gt;File&lt;/code&gt;, &lt;code&gt;Edit&lt;/code&gt;, &lt;code&gt;View&lt;/code&gt;, &lt;code&gt;Window&lt;/code&gt; and &lt;code&gt;Help&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;アプリでデフォルトメニューが設定されていない場合、デフォルトメニューが自動的に作成されます。これには、 &lt;code&gt;File&lt;/code&gt; 、 &lt;code&gt;Edit&lt;/code&gt; 、 &lt;code&gt;View&lt;/code&gt; 、 &lt;code&gt;Window&lt;/code&gt; 、 &lt;code&gt;Help&lt;/code&gt; などの標準アイテムが含まれています。</target>
        </trans-unit>
        <trans-unit id="e2766a3f6fcfeafea5114b8a84ed86bef7153fd3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The default value of &lt;code&gt;enableRemoteModule&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; starting from Electron 10. For prior versions, you need to explicitly disable the &lt;code&gt;remote&lt;/code&gt; module by the means above.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;enableRemoteModule&lt;/code&gt; のデフォルト値はElectron 10以降は &lt;code&gt;false&lt;/code&gt; です。以前のバージョンでは、上記の方法で &lt;code&gt;remote&lt;/code&gt; モジュールを明示的に無効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="78b0f7fa9e5d2497260c2c5829b6df1369dfb183" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The file name is not always the same as the actual one saved in local disk. If user changes the file name in a prompted download saving dialog, the actual name of saved file will be different.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;ファイル名は、ローカルディスクに保存されている実際のファイル名と常に同じとは限りません。ユーザーがプロンプトされたダウンロード保存ダイアログでファイル名を変更した場合、保存されたファイルの実際の名前は異なります。</target>
        </trans-unit>
        <trans-unit id="3decee40f16d796f4de9152b826a91cd9757766e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The following methods are useful specifically to resume a &lt;code&gt;cancelled&lt;/code&gt; item when session is restarted.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;以下のメソッドは、セッションが再開 &lt;code&gt;cancelled&lt;/code&gt; ときにキャンセルされたアイテムを再開するのに特に役立ちます。</target>
        </trans-unit>
        <trans-unit id="d49cedf819f4c14afa6b847237c6d7fdd8866a43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The major version of Chrome browser has to be the same with the Chrome version used by Electron, otherwise the plugin will not work even though &lt;code&gt;navigator.plugins&lt;/code&gt; would show it has been loaded.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Chromeブラウザーのメジャーバージョンは、Electronが使用するChromeバージョンと同じである必要があります。そうでない場合、 &lt;code&gt;navigator.plugins&lt;/code&gt; が読み込まれていると表示されていても、プラグインは機能しません。</target>
        </trans-unit>
        <trans-unit id="8ce5f2adbf2489f12d72ec2eb1384db6c0ef9e5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The remote module can be disabled for security reasons in the following contexts:</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;リモートモジュールは、セキュリティ上の理由から、次の状況で無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="f027114a09850c7022057990b0be4d8df54fd794" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The returned &lt;code&gt;Menu&lt;/code&gt; instance doesn't support dynamic addition or removal of menu items. &lt;a href=&quot;#instance-properties&quot;&gt;Instance properties&lt;/a&gt; can still be dynamically modified.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;返された &lt;code&gt;Menu&lt;/code&gt; インスタンスは、メニュー項目の動的な追加または削除をサポートしていません。&lt;a href=&quot;#instance-properties&quot;&gt;インスタンスプロパティ&lt;/a&gt;は引き続き動的に変更できます。</target>
        </trans-unit>
        <trans-unit id="f387d5c9ce001806db0d7da2bd477dcc93fd694f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The shortcut is global; it will work even if the app does not have the keyboard focus. You should not use this module until the &lt;code&gt;ready&lt;/code&gt; event of the app module is emitted.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;ショートカットはグローバルです。アプリにキーボードフォーカスがない場合でも機能します。アプリモジュールの &lt;code&gt;ready&lt;/code&gt; イベントが発行されるまで、このモジュールを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="d31ae0dbb00bda927808ecb3654e14574f20863c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The specified &lt;code&gt;preload&lt;/code&gt; script option will appear as &lt;code&gt;preloadURL&lt;/code&gt; (not &lt;code&gt;preload&lt;/code&gt;) in the &lt;code&gt;webPreferences&lt;/code&gt; object emitted with this event.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;指定された &lt;code&gt;preload&lt;/code&gt; スクリプトオプションは、このイベントで &lt;code&gt;webPreferences&lt;/code&gt; されたwebPreferencesオブジェクトに &lt;code&gt;preloadURL&lt;/code&gt; （ &lt;code&gt;preload&lt;/code&gt; ではなく）として表示されます。</target>
        </trans-unit>
        <trans-unit id="6af1913a8786e4688b59ff43a0cce9f92eaa0f0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The specified &lt;code&gt;preload&lt;/code&gt; script option will be appear as &lt;code&gt;preloadURL&lt;/code&gt; (not &lt;code&gt;preload&lt;/code&gt;) in the &lt;code&gt;webPreferences&lt;/code&gt; object emitted with this event.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;指定された &lt;code&gt;preload&lt;/code&gt; スクリプトオプションは、このイベントで &lt;code&gt;webPreferences&lt;/code&gt; されるwebPreferencesオブジェクトに &lt;code&gt;preloadURL&lt;/code&gt; （ &lt;code&gt;preload&lt;/code&gt; ではなく）として表示されます。</target>
        </trans-unit>
        <trans-unit id="fe88b18ade28a461cc0369fb91904034ab7c6318" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The title of the web page can be different from the title of the native window.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Webページのタイトルは、ネイティブウィンドウのタイトルとは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="828c9a9b878e6d2f914fe0039bb6ff191867da7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The title of web page can be different from the title of the native window.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Webページのタイトルは、ネイティブウィンドウのタイトルと異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="61721a38b65c41ebc37fc057b1a09deb222f3f55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The webview element must be loaded before using the methods.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;メソッドを使用する前に、webview要素をロードする必要があります。</target>
        </trans-unit>
        <trans-unit id="4b835cf72d8f513425c1fa384b286ed83e0a3d93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This API always returns false on Windows.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このAPIは、Windowsでは常にfalseを返します。</target>
        </trans-unit>
        <trans-unit id="6654da67c245799998fc4f25cd4962ee804a1ec5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This API can only be called from the main process.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このAPIは、メインプロセスからのみ呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="61808c075174ce10b302b2913efa55011495fa67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This API cannot be called before the &lt;code&gt;ready&lt;/code&gt; event of the &lt;code&gt;app&lt;/code&gt; module is emitted.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;app&lt;/code&gt; モジュールの &lt;code&gt;ready&lt;/code&gt; イベントが発行されるまで、このAPIを呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="117546691c0e3724237a5c0e5645a3b81cd2cd4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This API does nothing on Windows.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このAPIはWindowsでは機能しません。</target>
        </trans-unit>
        <trans-unit id="7d25237c01865f198139aad7b0337bab9e30d311" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This API has to be called after the &lt;code&gt;ready&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt; module.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このAPIは、 &lt;code&gt;app&lt;/code&gt; モジュールの &lt;code&gt;ready&lt;/code&gt; イベントの後に呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="d5c447b26a7684b1c00e18094fa3b511dbbea9de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This does not perform any security checks that relate to a page's origin, unlike &lt;a href=&quot;api/web-contents#contentsdownloadurlurl&quot;&gt;&lt;code&gt;webContents.downloadURL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;これは、&lt;a href=&quot;api/web-contents#contentsdownloadurlurl&quot;&gt; &lt;code&gt;webContents.downloadURL&lt;/code&gt; &lt;/a&gt;とは異なり、ページの起点に関連するセキュリティチェックを実行しません。</target>
        </trans-unit>
        <trans-unit id="aee85eee5b9b4110ffc45226156b637be6d3b580" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This does not perform any security checks that relate to a page's origin, unlike &lt;a href=&quot;web-contents#contentsdownloadurlurl&quot;&gt;&lt;code&gt;webContents.downloadURL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;これは、&lt;a href=&quot;web-contents#contentsdownloadurlurl&quot;&gt; &lt;code&gt;webContents.downloadURL&lt;/code&gt; &lt;/a&gt;とは異なり、ページの起点に関連するセキュリティチェックを実行しません。</target>
        </trans-unit>
        <trans-unit id="15ae33c02f58fb81203f6518324824d598273013" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This function overrides the name used internally by Electron; it does not affect the name that the OS uses.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;この関数は、Electronによって内部的に使用される名前をオーバーライドします。OSが使用する名前には影響しません。</target>
        </trans-unit>
        <trans-unit id="6e50bfc00d67ee1f4d428cbeb6f41f1e7303beec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This information is only usable after the &lt;code&gt;gpu-info-update&lt;/code&gt; event is emitted.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;この情報は、 &lt;code&gt;gpu-info-update&lt;/code&gt; イベントが発行された後にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="54649f58d5a10bbbd4bfe2ab2d76e9b2b7b27992" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This method can only be used before the &lt;code&gt;ready&lt;/code&gt; event of the &lt;code&gt;app&lt;/code&gt; module gets emitted and can be called only once.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このメソッドは、 &lt;code&gt;app&lt;/code&gt; モジュールの &lt;code&gt;ready&lt;/code&gt; イベントが発行される前にのみ使用でき、1回だけ呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="c1a46ef9f4f20c6b148d9ca1fbb5bab709305631" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This method can only be used before the &lt;code&gt;ready&lt;/code&gt; event of the &lt;code&gt;app&lt;/code&gt; module gets emitted.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このメソッドは、 &lt;code&gt;app&lt;/code&gt; モジュールの &lt;code&gt;ready&lt;/code&gt; イベントが発行される前にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="9e53a8bc29965cc3fb979c4ab700210b64ec22fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This method is deprecated, use &lt;code&gt;app.getPath('crashDumps')&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このメソッドは非推奨です。代わりに &lt;code&gt;app.getPath('crashDumps')&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="3b9edbe03c841ad313fceffe89b4f646d8d350fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This method is deprecated. Instead, use &lt;a href=&quot;api/session#sesgetallextensions&quot;&gt;&lt;code&gt;ses.getAllExtensions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このメソッドは非推奨です。代わりに、&lt;a href=&quot;api/session#sesgetallextensions&quot;&gt; &lt;code&gt;ses.getAllExtensions()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="68a412497d37fb77c6e049c25e238f99ddb6a491" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This method is deprecated. Instead, use &lt;a href=&quot;api/session#sesloadextensionpath&quot;&gt;&lt;code&gt;ses.loadExtension(path)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このメソッドは非推奨です。代わりに、&lt;a href=&quot;api/session#sesloadextensionpath&quot;&gt; &lt;code&gt;ses.loadExtension(path)&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="31022f26dc671c83bfa314527208ef730c20e374" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This method is deprecated. Instead, use &lt;a href=&quot;api/session#sesremoveextensionextensionid&quot;&gt;&lt;code&gt;ses.removeExtension(extension_id)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このメソッドは非推奨です。代わりに、&lt;a href=&quot;api/session#sesremoveextensionextensionid&quot;&gt; &lt;code&gt;ses.removeExtension(extension_id)&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="33c756f75952bbaa5da1e3c8b423d5ca7b50a259" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This method is deprecated. Instead, use &lt;a href=&quot;session#sesgetallextensions&quot;&gt;&lt;code&gt;ses.getAllExtensions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このメソッドは非推奨です。代わりに、&lt;a href=&quot;session#sesgetallextensions&quot;&gt; &lt;code&gt;ses.getAllExtensions()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="bdc997833949a131181ac643744e17e21aa7ed93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This method is deprecated. Instead, use &lt;a href=&quot;session#sesloadextensionpath&quot;&gt;&lt;code&gt;ses.loadExtension(path)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このメソッドは非推奨です。代わりに、&lt;a href=&quot;session#sesloadextensionpath&quot;&gt; &lt;code&gt;ses.loadExtension(path)&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="19867789f6a5488cc66ade67aaf753967648aed0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This method is deprecated. Instead, use &lt;a href=&quot;session#sesremoveextensionextensionid&quot;&gt;&lt;code&gt;ses.removeExtension(extension_id)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このメソッドは非推奨です。代わりに、&lt;a href=&quot;session#sesremoveextensionextensionid&quot;&gt; &lt;code&gt;ses.removeExtension(extension_id)&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="d4514b35b6a6d557664661c43461a801a3f23ccd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This option will appear as &lt;code&gt;preloadURL&lt;/code&gt; (not &lt;code&gt;preload&lt;/code&gt;) in the &lt;code&gt;webPreferences&lt;/code&gt; specified to the &lt;code&gt;will-attach-webview&lt;/code&gt; event.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このオプションは、 &lt;code&gt;will-attach-webview&lt;/code&gt; イベントに指定された &lt;code&gt;webPreferences&lt;/code&gt; に &lt;code&gt;preloadURL&lt;/code&gt; （ &lt;code&gt;preload&lt;/code&gt; ではなく）として表示されます。</target>
        </trans-unit>
        <trans-unit id="5a54708a7e75fb4aee46f3097cb9db9bca332891" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This option will be appear as &lt;code&gt;preloadURL&lt;/code&gt; (not &lt;code&gt;preload&lt;/code&gt;) in the &lt;code&gt;webPreferences&lt;/code&gt; specified to the &lt;code&gt;will-attach-webview&lt;/code&gt; event.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このオプションは、 &lt;code&gt;will-attach-webview&lt;/code&gt; イベントに指定された &lt;code&gt;webPreferences&lt;/code&gt; で &lt;code&gt;preloadURL&lt;/code&gt; （ &lt;code&gt;preload&lt;/code&gt; ではなく）として表示されます。</target>
        </trans-unit>
        <trans-unit id="198aab62950d0a652ac52d024b38e4629c9c112f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This will not affect &lt;code&gt;process.argv&lt;/code&gt;, and is mainly used by developers to control some low-level Chromium behaviors.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;これは &lt;code&gt;process.argv&lt;/code&gt; には影響せず、主に開発者が一部の低レベルのChromium動作を制御するために使用します。</target>
        </trans-unit>
        <trans-unit id="5fbb8ab77c9b8051de1e214588a6706f4c698cf2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This will not affect &lt;code&gt;process.argv&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;これは &lt;code&gt;process.argv&lt;/code&gt; には影響しません。</target>
        </trans-unit>
        <trans-unit id="ea1669b4e4eff2f296bfa29af1c416ec28401b23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This will not affect &lt;code&gt;process.argv&lt;/code&gt;. The intended usage of this function is to control Chromium's behavior.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;これは &lt;code&gt;process.argv&lt;/code&gt; には影響しません。この関数の使用目的は、Chromiumの動作を制御することです。</target>
        </trans-unit>
        <trans-unit id="162b1ef2a928ae0fef6ed437a2c59e649152fa08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Though only the &lt;code&gt;widevinecdmadapter&lt;/code&gt; binary is passed to Electron, the &lt;code&gt;widevinecdm&lt;/code&gt; binary has to be put aside it.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;のみものの &lt;code&gt;widevinecdmadapter&lt;/code&gt; のバイナリが電子に渡され、 &lt;code&gt;widevinecdm&lt;/code&gt; のバイナリは、それを脇に置く必要があります。</target>
        </trans-unit>
        <trans-unit id="ddce70a2d2a39a0164b415edc0e60e668cd04afd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; To collect crash reports from child process in Windows, you need to add this extra code as well. This will start the process that will monitor and send the crash reports. Replace &lt;code&gt;submitURL&lt;/code&gt;, &lt;code&gt;productName&lt;/code&gt; and &lt;code&gt;crashesDirectory&lt;/code&gt; with appropriate values.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Windowsで子プロセスからクラッシュレポートを収集するには、この追加コードも追加する必要があります。これにより、クラッシュレポートを監視して送信するプロセスが開始されます。 &lt;code&gt;submitURL&lt;/code&gt; 、 &lt;code&gt;productName&lt;/code&gt; および &lt;code&gt;crashesDirectory&lt;/code&gt; を適切な値に置き換えます。</target>
        </trans-unit>
        <trans-unit id="1fbf08f2cf992d0988df4f5f7cf96d78f0bbd3f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; To enable resumable downloads the server you are downloading from must support range requests and provide both &lt;code&gt;Last-Modified&lt;/code&gt; and &lt;code&gt;ETag&lt;/code&gt; header values. Otherwise &lt;code&gt;resume()&lt;/code&gt; will dismiss previously received bytes and restart the download from the beginning.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;再開可能なダウンロードを有効にするには、ダウンロード元のサーバーが範囲リクエストをサポートし、 &lt;code&gt;Last-Modified&lt;/code&gt; と &lt;code&gt;ETag&lt;/code&gt; ヘッダー値の両方を提供する必要があります。そうでない場合、 &lt;code&gt;resume()&lt;/code&gt; は以前に受信したバイトを閉じ、ダウンロードを最初から再開します。</target>
        </trans-unit>
        <trans-unit id="a00ddf35eb449bb14138bed0d52c42fabef583fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Unity launcher requires the existence of a &lt;code&gt;.desktop&lt;/code&gt; file to work, for more information please read &lt;a href=&quot;../tutorial/desktop-environment-integration#unity-launcher&quot;&gt;Desktop Environment Integration&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Unityランチャーが機能するには、 &lt;code&gt;.desktop&lt;/code&gt; ファイルが存在する必要があります。詳細については、&lt;a href=&quot;../tutorial/desktop-environment-integration#unity-launcher&quot;&gt;デスクトップ環境の統合を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="52b9c323f4ef5f9b4a0b9d7123f5463f34d1450c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Unity launcher requires the existence of a &lt;code&gt;.desktop&lt;/code&gt; file to work, for more information please read &lt;a href=&quot;../tutorial/desktop-environment-integration#unity-launcher-shortcuts-linux&quot;&gt;Desktop Environment Integration&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Unityランチャーが機能するには、 &lt;code&gt;.desktop&lt;/code&gt; ファイルが存在する必要があります。詳しくは、&lt;a href=&quot;../tutorial/desktop-environment-integration#unity-launcher-shortcuts-linux&quot;&gt;デスクトップ環境の統合&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="2bb02f1de209d64efa6b12e72a6bcd5dc02cc40e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Unity launcher requires the existence of a &lt;code&gt;.desktop&lt;/code&gt; file to work, for more information please read &lt;a href=&quot;tutorial/desktop-environment-integration#unity-launcher&quot;&gt;Desktop Environment Integration&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Unityランチャーが機能するには、 &lt;code&gt;.desktop&lt;/code&gt; ファイルが存在する必要があります。詳細については、&lt;a href=&quot;tutorial/desktop-environment-integration#unity-launcher&quot;&gt;デスクトップ環境の統合を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5cbd6323ba03596ceaea9f227d222c1236a22d80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Users can remove items from custom categories, and Windows will not allow a removed item to be added back into a custom category until &lt;strong&gt;after&lt;/strong&gt; the next successful call to &lt;code&gt;app.setJumpList(categories)&lt;/code&gt;. Any attempt to re-add a removed item to a custom category earlier than that will result in the entire custom category being omitted from the Jump List. The list of removed items can be obtained using &lt;code&gt;app.getJumpListSettings()&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;ユーザーがカスタムカテゴリから項目を削除することができ、およびWindowsは、削除されたアイテムがするまで、カスタムカテゴリに追加し直すことができません&lt;strong&gt;した後&lt;/strong&gt;の次の呼び出しが成功 &lt;code&gt;app.setJumpList(categories)&lt;/code&gt; 。それより前に削除したアイテムをカスタムカテゴリに再度追加しようとすると、カスタムカテゴリ全体がジャンプリストから削除されます。削除されたアイテムのリストは、 &lt;code&gt;app.getJumpListSettings()&lt;/code&gt; を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="625b4399bd20523c465f85767db74cca14a32aba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Users should never store this object because it may become &lt;code&gt;null&lt;/code&gt; when the DevTools has been closed.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; DevToolsが閉じられると &lt;code&gt;null&lt;/code&gt; になる可能性があるため、ユーザーはこのオブジェクトを保存しないで&lt;strong&gt;ください&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="590793570569bb9601f86c78229b8a6e185eb451" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When distributing your packaged app, you have to also ship the &lt;code&gt;locales&lt;/code&gt; folder.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;パッケージ化されたアプリを配布するときは、 &lt;code&gt;locales&lt;/code&gt; フォルダーも出荷する必要があります。</target>
        </trans-unit>
        <trans-unit id="26b284f1f504ebb532d8a4d18ce91d3e18284e2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When the switch is not present or has no value, it returns empty string.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;スイッチが存在しないか値がない場合、空の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="1739dc6e0616d05fa0cea6156c27d9d9d0a14b4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When unable to detect locale country code, it returns empty string.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;ロケールの国コードを検出できない場合は、空の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="b6cc5deb2fe22f2c07dec93f420e63e17cca0d98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; While the &lt;code&gt;shell&lt;/code&gt; module can be used in the renderer process, it will not function in a sandboxed renderer.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;ながら &lt;code&gt;shell&lt;/code&gt; モジュールは、レンダラープロセスで使用することができ、それはサンドボックスレンダラに機能しないであろう。</target>
        </trans-unit>
        <trans-unit id="d11662a87a5e2e16ff5e7e63bd3623f2b1dcffa5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You can test out the crash reporter by generating a crash using &lt;code&gt;process.crash()&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;process.crash()&lt;/code&gt; を使用してクラッシュを生成することにより、クラッシュレポーターをテストできます。</target>
        </trans-unit>
        <trans-unit id="2e60cf5982201f41af615e75dc18f804d94688aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You can use &lt;code&gt;highlightMode&lt;/code&gt; with a &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; by toggling between &lt;code&gt;'never'&lt;/code&gt; and &lt;code&gt;'always'&lt;/code&gt; modes when the window visibility changes.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;ウィンドウの可視性が変化したときに &lt;code&gt;'never'&lt;/code&gt; &lt;code&gt;'always'&lt;/code&gt; モードと「always」モードを切り替えることにより、&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; で&lt;/a&gt; &lt;code&gt;highlightMode&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="22d5ac079e66db6aee70840d2ab3e909ceef118c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You should not use this module until the &lt;code&gt;ready&lt;/code&gt; event of the app module is emitted.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;アプリモジュールの &lt;code&gt;ready&lt;/code&gt; イベントが発行されるまで、このモジュールを使用しないで&lt;strong&gt;ください&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="04452a2f093fa8b9780672f3d9f4e5b17804ee65" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Your application must be signed for automatic updates on macOS. This is a requirement of &lt;code&gt;Squirrel.Mac&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; macOSで自動更新するには、アプリケーションに署名する必要があります。これは &lt;code&gt;Squirrel.Mac&lt;/code&gt; の要件です。</target>
        </trans-unit>
        <trans-unit id="a8562a64e0943813ecd465c8e3f384dce7527665" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; whatever the current state of the window : maximized, minimized or in fullscreen, this function always returns the position and size of the window in normal state. In normal state, getBounds and getNormalBounds returns the same &lt;a href=&quot;api/structures/rectangle&quot;&gt;&lt;code&gt;Rectangle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;ウィンドウの現在の状態（最大化、最小化、または全画面表示）に関係なく、この関数は常に通常の状態のウィンドウの位置とサイズを返します。通常の状態では、getBoundsとgetNormalBoundsは同じ&lt;a href=&quot;api/structures/rectangle&quot;&gt; &lt;code&gt;Rectangle&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="63e94f180e2d04921478d8bc4f7e3c0d8c61445a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; whatever the current state of the window : maximized, minimized or in fullscreen, this function always returns the position and size of the window in normal state. In normal state, getBounds and getNormalBounds returns the same &lt;a href=&quot;structures/rectangle&quot;&gt;&lt;code&gt;Rectangle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;ウィンドウの現在の状態（最大化、最小化、または全画面表示）に関係なく、この関数は常に通常の状態のウィンドウの位置とサイズを返します。通常の状態では、getBoundsとgetNormalBoundsは同じ&lt;a href=&quot;structures/rectangle&quot;&gt; &lt;code&gt;Rectangle&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="a238fb6883263805646f17cf2476024bea5c966c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;acceleratorWorksWhenHidden&lt;/code&gt; is specified as being macOS-only because accelerators always work when items are hidden on Windows and Linux. The option is exposed to users to give them the option to turn it off, as this is possible in native macOS development. This property is only usable on macOS High Sierra 10.13 or newer.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;acceleratorWorksWhenHidden&lt;/code&gt; は、WindowsおよびLinuxでアイテムが非表示になっている場合に常に機能するため、macroOSのみとして指定されています。このオプションは、ネイティブmacOS開発で可能であるため、ユーザーに公開してオフにするオプションを提供します。このプロパティは、macOS High Sierra10.13以降でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="3be9e1c661e37810278fb5dc6087fc6d5ae1d9dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;electron --interactive&lt;/code&gt; is not available on Windows.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;electron --interactive&lt;/code&gt; はWindowsでは使用できません。</target>
        </trans-unit>
        <trans-unit id="7ca68c0542e101334d3a6c1b0e27abc7e48e728e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;prevent-display-sleep&lt;/code&gt; has higher precedence over &lt;code&gt;prevent-app-suspension&lt;/code&gt;. Only the highest precedence type takes effect. In other words, &lt;code&gt;prevent-display-sleep&lt;/code&gt; always takes precedence over &lt;code&gt;prevent-app-suspension&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;prevent-display-sleep&lt;/code&gt; は &lt;code&gt;prevent-app-suspension&lt;/code&gt; よりも優先されます。最も優先順位の高いタイプのみが有効になります。つまり、 &lt;code&gt;prevent-display-sleep&lt;/code&gt; は常に &lt;code&gt;prevent-app-suspension&lt;/code&gt; よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="d7af72b683ce3595448413b3dced42cc576c25e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;relaunchCommand&lt;/code&gt; and &lt;code&gt;relaunchDisplayName&lt;/code&gt; must always be set together. If one of those properties is not set, then neither will be used.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;relaunchCommand&lt;/code&gt; と &lt;code&gt;relaunchDisplayName&lt;/code&gt; は常に一緒に設定する必要があります。これらのプロパティのいずれかが設定されていない場合は、どちらも使用されません。</target>
        </trans-unit>
        <trans-unit id="253d7b7df6dc5763c040cbf94411c06d100c6c4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; Capturing the screen contents requires user consent on macOS 10.15 Catalina or higher, which can detected by &lt;a href=&quot;api/system-preferences#systempreferencesgetmediaaccessstatusmediatype-macos&quot;&gt;&lt;code&gt;systemPreferences.getMediaAccessStatus&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;画面のコンテンツをキャプチャするには、macOS 10.15 Catalina以降でユーザーの同意が必要です。これは、&lt;a href=&quot;api/system-preferences#systempreferencesgetmediaaccessstatusmediatype-macos&quot;&gt; &lt;code&gt;systemPreferences.getMediaAccessStatus&lt;/code&gt; で&lt;/a&gt;検出できます。</target>
        </trans-unit>
        <trans-unit id="358656a177230a89835178c368d02460cff9488f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; Capturing the screen contents requires user consent on macOS 10.15 Catalina or higher, which can detected by &lt;a href=&quot;system-preferences#systempreferencesgetmediaaccessstatusmediatype-macos&quot;&gt;&lt;code&gt;systemPreferences.getMediaAccessStatus&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;画面のコンテンツをキャプチャするには、macOS 10.15 Catalina以降でユーザーの同意が必要です。これは、&lt;a href=&quot;system-preferences#systempreferencesgetmediaaccessstatusmediatype-macos&quot;&gt; &lt;code&gt;systemPreferences.getMediaAccessStatus&lt;/code&gt; で&lt;/a&gt;検出できます。</target>
        </trans-unit>
        <trans-unit id="5cb05d9f70edd7f342d221844cc335e82305a1be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; Child processes created via the &lt;code&gt;child_process&lt;/code&gt; module will not have access to the Electron modules. Therefore, to collect crash reports from them, use &lt;code&gt;process.crashReporter.start&lt;/code&gt; instead. Pass the same options as above along with an additional one called &lt;code&gt;crashesDirectory&lt;/code&gt; that should point to a directory to store the crash reports temporarily. You can test this out by calling &lt;code&gt;process.crash()&lt;/code&gt; to crash the child process.</source>
          <target state="translated">&lt;strong&gt;注記&lt;/strong&gt; &lt;code&gt;child_process&lt;/code&gt; モジュールを介して作成された子プロセスは、Electronモジュールにアクセスできません。したがって、それらからクラッシュレポートを収集するには、代わりに &lt;code&gt;process.crashReporter.start&lt;/code&gt; を使用します。上記と同じオプションを、クラッシュレポートを一時的に保存するディレクトリをポイントする &lt;code&gt;crashesDirectory&lt;/code&gt; と呼ばれる追加オプションと一緒に渡します。これをテストするには、 &lt;code&gt;process.crash()&lt;/code&gt; を呼び出して子プロセスをクラッシュさせます。</target>
        </trans-unit>
        <trans-unit id="49c756832a9ac7746336e41d56c5c136b652d73f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If the &lt;code&gt;main&lt;/code&gt; field is not present in &lt;code&gt;package.json&lt;/code&gt;, Electron will attempt to load an &lt;code&gt;index.js&lt;/code&gt; (as Node.js does). If this was actually a simple Node application, you would add a &lt;code&gt;start&lt;/code&gt; script that instructs &lt;code&gt;node&lt;/code&gt; to execute the current package:</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;： &lt;code&gt;main&lt;/code&gt; フィールドが &lt;code&gt;package.json&lt;/code&gt; に存在しない場合、Electronは（Node.jsと同様に） &lt;code&gt;index.js&lt;/code&gt; をロードしようとします。これが実際には単純なNodeアプリケーションである場合は、現在のパッケージを実行するように &lt;code&gt;node&lt;/code&gt; に指示する &lt;code&gt;start&lt;/code&gt; スクリプトを追加します。</target>
        </trans-unit>
        <trans-unit id="134e05f7d51d1378c46bdb04a967125c7d279717" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: On macOS this event is an alias of &lt;code&gt;move&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：macOSでは、このイベントは &lt;code&gt;move&lt;/code&gt; のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="05ecfed7364e51a0e5e69afce7519ebea7ec7311" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: On macOS this event is just an alias of &lt;code&gt;moved&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：macOSでは、このイベントは単に &lt;code&gt;moved&lt;/code&gt; のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="3aa67b9565e147d2196ef4aa0d1ab3bb646c1a3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Running this requires &lt;a href=&quot;https://git-scm.com&quot;&gt;Git&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：これを実行するには&lt;a href=&quot;https://git-scm.com&quot;&gt;Git&lt;/a&gt;が必要です。</target>
        </trans-unit>
        <trans-unit id="c048de54d5dd677817f4000248c312c30b8a76c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This example is also available as a repository you can &lt;a href=&quot;#trying-this-example&quot;&gt;download and run immediately&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：この例は、&lt;a href=&quot;#trying-this-example&quot;&gt;ダウンロードしてすぐに実行&lt;/a&gt;できるリポジトリとしても利用できます。</target>
        </trans-unit>
        <trans-unit id="ef937726101d6bbf1ea792d981c362dd127505c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Notes:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a3c2479a3679b4a3cdb7e5727a54dc70f570a97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Overlay on taskbar button:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;タスクバーボタンにオーバーレイ：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="774b3470cbb68c20aa3e681a8a6201d39d6d956c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Platform limitations:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;プラットフォームの制限：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="77d6731dc7f67c150d27e317664f80c55e2765e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ProcMon&lt;/strong&gt;: The &lt;a href=&quot;https://technet.microsoft.com/en-us/sysinternals/processmonitor.aspx&quot;&gt;free SysInternals tool&lt;/a&gt; allows you to inspect a processes parameters, file handles, and registry operations.</source>
          <target state="translated">&lt;strong&gt;ProcMon&lt;/strong&gt;：&lt;a href=&quot;https://technet.microsoft.com/en-us/sysinternals/processmonitor.aspx&quot;&gt;無料のSysInternalsツールを&lt;/a&gt;使用すると、プロセスパラメータ、ファイルハンドル、およびレジストリ操作を検査できます。</target>
        </trans-unit>
        <trans-unit id="06d990d2f2ffb216e9ca88797c268c266ea8f4d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Progress bar in taskbar button:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;タスクバーボタンのプログレスバー：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb61cd3286dfa212b367b4099ff4616751d38ef9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Removed:&lt;/strong&gt; An API or feature was removed, and is no longer supported by Electron.</source>
          <target state="translated">&lt;strong&gt;削除：&lt;/strong&gt; APIまたは機能が削除され、Electronではサポートされなくなりました。</target>
        </trans-unit>
        <trans-unit id="9e94f3adeeca51cf71a8c759a0ed1c73c718d159" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Represented file popup menu:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;表示されるファイルポップアップメニュー：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45e53643f7964cdbad36e0808d6004b63bc0b003" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also: &lt;a href=&quot;../tutorial/updates&quot;&gt;A detailed guide about how to implement updates in your application&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;参照：&lt;a href=&quot;../tutorial/updates&quot;&gt;アプリケーションに更新を実装する方法に関する詳細なガイド&lt;/a&gt;。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="585ece82e254994f143ec53df14928d207ba262f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also: &lt;a href=&quot;tutorial/updates&quot;&gt;A detailed guide about how to implement updates in your application&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;参照：&lt;a href=&quot;tutorial/updates&quot;&gt;アプリケーションに更新を実装する方法に関する詳細なガイド&lt;/a&gt;。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66dc62b446a01caef90e2e8b3b114c5b5d3646a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also&lt;/strong&gt;: There's a wealth of information on debugging Chromium, much of which also applies to Electron, on the Chromium developers site: &lt;a href=&quot;https://www.chromium.org/developers/how-tos/debugging-on-windows&quot;&gt;Debugging Chromium on Windows&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;参照&lt;/strong&gt;：Chromiumのデバッグに関する豊富な情報があります。その多くはElectronにも当てはまりますが、Chromium開発者サイト：&lt;a href=&quot;https://www.chromium.org/developers/how-tos/debugging-on-windows&quot;&gt;WindowsでのChromiumのデバッグ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8946825de34da5f50bd1f85b12ef0d8c6f87a172" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sentinel&lt;/strong&gt;: A static known sequence of bytes you can use to locate the fuse wire</source>
          <target state="translated">&lt;strong&gt;Sentinel&lt;/strong&gt;：ヒューズワイヤーを見つけるために使用できる静的な既知のバイトシーケンス</target>
        </trans-unit>
        <trans-unit id="05304dfea183ff8394ab9d4f65bf4548f5e08a58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tasks of Internet Explorer:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Internet Explorerのタスク：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd5b10399279596a2325e2d731148febf00c5eb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Thumbnail toolbar of Windows Media Player:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Windows Media Playerのサムネイルツールバー：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="094b8aacd742f5ee4bce402cc085b749fba5ab85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip:&lt;/strong&gt; If you don't have a MacBook with Touch Bar, you can use &lt;a href=&quot;https://github.com/sindresorhus/touch-bar-simulator&quot;&gt;Touch Bar Simulator&lt;/a&gt; to test Touch Bar usage in your app.</source>
          <target state="translated">&lt;strong&gt;ヒント：&lt;/strong&gt;タッチバー付きのMacBookがない場合は、&lt;a href=&quot;https://github.com/sindresorhus/touch-bar-simulator&quot;&gt;タッチバーシミュレーター&lt;/a&gt;を使用して、アプリでのタッチバーの使用をテストできます。</target>
        </trans-unit>
        <trans-unit id="28e811784e872ccdf56c8573c2af9b97a1bf7c07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To build, run &lt;code&gt;ninja&lt;/code&gt; with the &lt;code&gt;electron&lt;/code&gt; target:&lt;/strong&gt; Nota Bene: This will also take a while and probably heat up your lap.</source>
          <target state="translated">&lt;strong&gt;ビルドするには、 &lt;code&gt;electron&lt;/code&gt; ターゲットで &lt;code&gt;ninja&lt;/code&gt; を実行します&lt;/strong&gt;。NotaBene：これもしばらく時間がかかり、おそらく膝が熱くなります。</target>
        </trans-unit>
        <trans-unit id="ba7ce89614cdb455a264eb08065cba4444ad32e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Visual Studio with C++ Tools&lt;/strong&gt;: The free community editions of Visual Studio 2013 and Visual Studio 2015 both work. Once installed, &lt;a href=&quot;development/setting-up-symbol-server&quot;&gt;configure Visual Studio to use Electron's Symbol server&lt;/a&gt;. It will enable Visual Studio to gain a better understanding of what happens inside Electron, making it easier to present variables in a human-readable format.</source>
          <target state="translated">&lt;strong&gt;C ++ツールを備えたVisualStudio&lt;/strong&gt;：&lt;strong&gt;Visual Studio2013とVisualStudio2015&lt;/strong&gt;の無料のコミュニティエディションはどちらも機能します。インストールしたら、&lt;a href=&quot;development/setting-up-symbol-server&quot;&gt;ElectronのSymbolサーバーを使用するようにVisualStudioを構成します&lt;/a&gt;。これにより、Visual Studioは、Electron内で何が起こっているのかをよりよく理解できるようになり、人間が読める形式で変数を提示しやすくなります。</target>
        </trans-unit>
        <trans-unit id="0aa60034c6629cffef8eef65b5d47b1a31260c45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Visual Studio with C++ Tools&lt;/strong&gt;: The free community editions of Visual Studio 2013 and Visual Studio 2015 both work. Once installed, &lt;a href=&quot;setting-up-symbol-server&quot;&gt;configure Visual Studio to use Electron's Symbol server&lt;/a&gt;. It will enable Visual Studio to gain a better understanding of what happens inside Electron, making it easier to present variables in a human-readable format.</source>
          <target state="translated">&lt;strong&gt;C ++ツールを備えたVisualStudio&lt;/strong&gt;：&lt;strong&gt;Visual Studio2013とVisualStudio2015&lt;/strong&gt;の無料のコミュニティエディションはどちらも機能します。インストールしたら、&lt;a href=&quot;setting-up-symbol-server&quot;&gt;ElectronのSymbolサーバーを使用するようにVisualStudioを構成します&lt;/a&gt;。これにより、Visual Studioは、Electron内で何が起こっているのかをよりよく理解できるようになり、人間が読める形式で変数を提示しやすくなります。</target>
        </trans-unit>
        <trans-unit id="20153654e74c89ac47013ad39b0c4efe2247e274" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Visual Studio with C++ Tools&lt;/strong&gt;: The free community editions of Visual Studio 2013 and Visual Studio 2015 both work. Once installed, &lt;a href=&quot;setting-up-symbol-server&quot;&gt;configure Visual Studio to use GitHub's Electron Symbol server&lt;/a&gt;. It will enable Visual Studio to gain a better understanding of what happens inside Electron, making it easier to present variables in a human-readable format.</source>
          <target state="translated">&lt;strong&gt;Visual Studio with C ++ Tools&lt;/strong&gt;：Visual Studio 2013とVisual Studio 2015の無料のコミュニティエディションはどちらも機能します。インストールしたら、&lt;a href=&quot;setting-up-symbol-server&quot;&gt;GitHubのElectron Symbolサーバーを使用するようにVisual Studioを構成します&lt;/a&gt;。これにより、Visual StudioはElectron内で何が起こっているかをよりよく理解できるようになり、人間が読める形式で変数を提示しやすくなります。</target>
        </trans-unit>
        <trans-unit id="bea3d5285b5578a2cd8f185ec2732ac975bee492" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Xcode&lt;/strong&gt;: In addition to Xcode, also install the Xcode command line tools. They include LLDB, the default debugger in Xcode on Mac OS X. It supports debugging C, Objective-C and C++ on the desktop and iOS devices and simulator.</source>
          <target state="translated">&lt;strong&gt;Xcode&lt;/strong&gt;：Xcodeに加えて、Xcodeコマンドラインツールもインストールします。これには、Mac OS XのXcodeのデフォルトデバッガであるLLDBが含まれています。デスクトップ、iOSデバイス、およびシミュレータでのC、Objective-C、C ++のデバッグをサポートしています。</target>
        </trans-unit>
        <trans-unit id="7590681ef263dd10d69387bee349e4064763ef4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Xcode&lt;/strong&gt;: In addition to Xcode, also install the Xcode command line tools. They include LLDB, the default debugger in Xcode on macOS. It supports debugging C, Objective-C and C++ on the desktop and iOS devices and simulator.</source>
          <target state="translated">&lt;strong&gt;Xcode&lt;/strong&gt;：Xcodeに加えて、Xcodeコマンドラインツールもインストールします。これには、macOS上のXcodeのデフォルトデバッガーであるLLDBが含まれます。デスクトップおよびiOSデバイスとシミュレーターでのC、Objective-C、C ++のデバッグをサポートします。</target>
        </trans-unit>
        <trans-unit id="d7fa653913eda2a98414019e0e5ac080da076ee9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You can find a detailed guide about how to implement updates into your application &lt;a href=&quot;../tutorial/updates&quot;&gt;here&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;アプリケーションに更新を実装する方法についての詳細なガイドは、&lt;a href=&quot;../tutorial/updates&quot;&gt;こちらにあります&lt;/a&gt;。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d024c00e5f1a5e3b6fcc25bda8cfff1a6a19126a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dist&lt;/strong&gt; - Temporary directory created by &lt;code&gt;script/create-dist.py&lt;/code&gt; script when creating a distribution.</source>
          <target state="translated">&lt;strong&gt;DIST&lt;/strong&gt; -によって作成された一時ディレクトリ &lt;code&gt;script/create-dist.py&lt;/code&gt; 分布を作成するときにスクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="0d4ed2a8edb816343ac4b5f2482dc21bbd445bcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;external_binaries&lt;/strong&gt; - Downloaded binaries of third-party frameworks which do not support building with &lt;code&gt;gn&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;external_binaries&lt;/strong&gt; - &lt;code&gt;gn&lt;/code&gt; を使用したビルドをサポートしないサードパーティフレームワークのダウンロードされたバイナリ。</target>
        </trans-unit>
        <trans-unit id="b27ec44242daf57b03cfaaa64e72f81ed336e055" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;external_binaries&lt;/strong&gt; - Downloaded binaries of third-party frameworks which do not support building with &lt;code&gt;gyp&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;external_binaries&lt;/strong&gt; - &lt;code&gt;gyp&lt;/code&gt; でのビルドをサポートしていないサードパーティフレームワークのダウンロードされたバイナリ。</target>
        </trans-unit>
        <trans-unit id="fc90b3ebc54585b3c86179b4845fa0c9e2e5dbb5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;node_modules&lt;/strong&gt; - Third party node modules used for building.</source>
          <target state="translated">&lt;strong&gt;node_modules-ビルドに&lt;/strong&gt;使用されるサードパーティのノードモジュール。</target>
        </trans-unit>
        <trans-unit id="0123424057fc9a9c2d3915175b0659facf78fdf2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;npm&lt;/strong&gt; - Logic for installation of Electron via npm.</source>
          <target state="translated">&lt;strong&gt;npm&lt;/strong&gt; - &lt;strong&gt;npmを&lt;/strong&gt;介してElectronをインストールするためのロジック。</target>
        </trans-unit>
        <trans-unit id="03b208e5cd006576eabafaec4a4fefcad86aa253" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;out&lt;/strong&gt; - Temporary output directory of &lt;code&gt;ninja&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;アウト&lt;/strong&gt; -の一時出力ディレクトリ &lt;code&gt;ninja&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8857628861da66a09130d315cb71b395c8535330" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;script&lt;/strong&gt; - Scripts used for development purpose like building, packaging, testing, etc.</source>
          <target state="translated">&lt;strong&gt;スクリプト&lt;/strong&gt; -など、建物のパッケージング、テストなどの開発の目的のために使用されるスクリプト</target>
        </trans-unit>
        <trans-unit id="fb37404251aa3096f659557d263d8a96af42edd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tools&lt;/strong&gt; - Helper scripts used by GN files.</source>
          <target state="translated">&lt;strong&gt;ツール&lt;/strong&gt;-GNファイルで使用されるヘルパースクリプト。</target>
        </trans-unit>
        <trans-unit id="78b9073a9c0700a42a42b5ae82f82922e4d151f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tools&lt;/strong&gt; - Helper scripts used by gyp files, unlike &lt;code&gt;script&lt;/code&gt;, scripts put here should never be invoked by users directly.</source>
          <target state="translated">&lt;strong&gt;ツール&lt;/strong&gt; - GYPファイルによって使用されるヘルパースクリプトとは異なり、 &lt;code&gt;script&lt;/code&gt; を直接ユーザーによって呼び出されることはありませんが、スクリプトはここに置きます。</target>
        </trans-unit>
        <trans-unit id="5205d3d0496531801161b06b496d731aaab26920" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typings&lt;/strong&gt; - TypeScript typings for Electron's internal code.</source>
          <target state="translated">&lt;strong&gt;タイピング-Electron&lt;/strong&gt;の内部コードのTypeScriptタイピング。</target>
        </trans-unit>
        <trans-unit id="bfac59107fefb20821a8eb31e28951d5b8fbd281" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vendor&lt;/strong&gt; - Source code for some third party dependencies.</source>
          <target state="translated">&lt;strong&gt;ベンダー&lt;/strong&gt;-一部のサードパーティの依存関係のソースコード。</target>
        </trans-unit>
        <trans-unit id="82acb25b8b7271bdf66f278ba156320c67c4c9d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vendor&lt;/strong&gt; - Source code of third party dependencies, we didn't use &lt;code&gt;third_party&lt;/code&gt; as name because it would confuse it with the same directory in Chromium's source code tree.</source>
          <target state="translated">&lt;strong&gt;ベンダー&lt;/strong&gt; -サードパーティの依存関係のソースコードは、私たちが使用していない &lt;code&gt;third_party&lt;/code&gt; 、それはクロムのソースコードツリー内の同じディレクトリと混同してしまうため名前として。</target>
        </trans-unit>
        <trans-unit id="d4dfdc73981fc9047de4c9a4bc9503f3a972a56d" translate="yes" xml:space="preserve">
          <source>A &quot;complete solution to package and build a ready-for-distribution Electron app&quot; that focuses on an integrated experience. &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;&lt;code&gt;electron-builder&lt;/code&gt;&lt;/a&gt; adds one single dependency focused on simplicity and manages all further requirements internally.</source>
          <target state="translated">統合されたエクスペリエンスに焦点を当てた「配布可能なElectronアプリをパッケージ化して構築するための完全なソリューション」。&lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt; &lt;code&gt;electron-builder&lt;/code&gt; &lt;/a&gt;は、単純さに焦点を当てた単一の依存関係を追加し、すべての追加要件を内部で管理します。</target>
        </trans-unit>
        <trans-unit id="5f7888f68877a89fb435dece3e4a640686b74a67" translate="yes" xml:space="preserve">
          <source>A &quot;complete tool for building modern Electron applications&quot;. Electron Forge unifies the existing (and well maintained) build tools for Electron development into a cohesive package so that anyone can jump right in to Electron development.</source>
          <target state="translated">最新のElectronアプリケーションを構築するための完全なツール」です。Electron Forgeは、既存の(よくメンテナンスされた)Electron開発用のビルドツールを統合し、誰でもすぐにElectron開発に取り掛かることができるようにまとまったパッケージにしています。</target>
        </trans-unit>
        <trans-unit id="42ca99c9f07262bac4ff607ebbe0ead2fdecbeed" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/command-line&quot;&gt;&lt;code&gt;CommandLine&lt;/code&gt;&lt;/a&gt; object that allows you to read and manipulate the command line arguments that Chromium uses.</source>
          <target state="translated">Chromiumが使用するコマンドライン引数を読み取って操作できるようにする&lt;a href=&quot;api/command-line&quot;&gt; &lt;code&gt;CommandLine&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="9ee7e80383a29b1dc3a203aa6a2db392212d2137" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/cookies&quot;&gt;&lt;code&gt;Cookies&lt;/code&gt;&lt;/a&gt; object for this session.</source>
          <target state="translated">&lt;a href=&quot;api/cookies&quot;&gt; &lt;code&gt;Cookies&lt;/code&gt; &lt;/a&gt;このセッションのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="11b4978c5df47ed836e60d90e370d6e598c66599" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/debugger&quot;&gt;&lt;code&gt;Debugger&lt;/code&gt;&lt;/a&gt; instance for this webContents.</source>
          <target state="translated">A&lt;a href=&quot;api/debugger&quot;&gt; &lt;code&gt;Debugger&lt;/code&gt; &lt;/a&gt;このwebContentsのインスタンス。</target>
        </trans-unit>
        <trans-unit id="32ffd4c7b46acafd65ae3aaba30f98f020bf1cf7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/dock&quot;&gt;&lt;code&gt;Dock&lt;/code&gt;&lt;/a&gt;&lt;code&gt;| undefined&lt;/code&gt; object that allows you to perform actions on your app icon in the user's dock on macOS.</source>
          <target state="translated">A&lt;a href=&quot;api/dock&quot;&gt; &lt;code&gt;Dock&lt;/code&gt; &lt;/a&gt; &lt;code&gt;| undefined&lt;/code&gt; macOSのユーザードックにあるアプリアイコンでアクションを実行できるようにする未定義のオブジェクト。</target>
        </trans-unit>
        <trans-unit id="372518f237ebe94cee23d45820cbf57edcac3bb8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/message-port-main&quot;&gt;&lt;code&gt;MessagePortMain&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">A &lt;a href=&quot;api/message-port-main&quot;&gt; &lt;code&gt;MessagePortMain&lt;/code&gt; の&lt;/a&gt;プロパティ。</target>
        </trans-unit>
        <trans-unit id="3d454961ae6fe7c0182c9b04d2edbd9f3b7b9017" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/net-log&quot;&gt;&lt;code&gt;NetLog&lt;/code&gt;&lt;/a&gt; object for this session.</source>
          <target state="translated">&lt;a href=&quot;api/net-log&quot;&gt; &lt;code&gt;NetLog&lt;/code&gt; &lt;/a&gt;このセッションのためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="c2a6c0111775b87338979537aa0601b8a062cc64" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/protocol&quot;&gt;&lt;code&gt;Protocol&lt;/code&gt;&lt;/a&gt; object for this session.</source>
          <target state="translated">&lt;a href=&quot;api/protocol&quot;&gt; &lt;code&gt;Protocol&lt;/code&gt; &lt;/a&gt;このセッションのためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="11f637d228a590a0cad482167333b62f82422c5c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/service-workers&quot;&gt;&lt;code&gt;ServiceWorkers&lt;/code&gt;&lt;/a&gt; object for this session.</source>
          <target state="translated">&lt;a href=&quot;api/service-workers&quot;&gt; &lt;code&gt;ServiceWorkers&lt;/code&gt; の&lt;/a&gt;このセッションのためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="e610e23214209a0fcc80ffe45ff7e6a4c21448f2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; used by this webContents.</source>
          <target state="translated">A&lt;a href=&quot;api/session&quot;&gt; &lt;code&gt;Session&lt;/code&gt; &lt;/a&gt;、このwebContentsで使用されます。</target>
        </trans-unit>
        <trans-unit id="9c6295bbb8f215c9ae9d400f688090641ecb79fa" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/structures/notification-action&quot;&gt;&lt;code&gt;NotificationAction[]&lt;/code&gt;&lt;/a&gt; property representing the actions of the notification.</source>
          <target state="translated">&lt;a href=&quot;api/structures/notification-action&quot;&gt; &lt;code&gt;NotificationAction[]&lt;/code&gt; &lt;/a&gt;通知のアクションを表すプロパティ。</target>
        </trans-unit>
        <trans-unit id="979a0a785e17fc8e7f24bd7a807434aa943b14b5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/touch-bar-button&quot;&gt;&lt;code&gt;typeof TouchBarButton&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarButton&lt;/code&gt; class.</source>
          <target state="translated">&lt;a href=&quot;api/touch-bar-button&quot;&gt; &lt;code&gt;typeof TouchBarButton&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarButton&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="5959b15942dcd014b66111ec3693ef2bd226832b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/touch-bar-color-picker&quot;&gt;&lt;code&gt;typeof TouchBarColorPicker&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarColorPicker&lt;/code&gt; class.</source>
          <target state="translated">A &lt;a href=&quot;api/touch-bar-color-picker&quot;&gt; &lt;code&gt;typeof TouchBarColorPicker&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarColorPicker&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="8b3bd72256372474f5edec1b324a83e4d2c07ca4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/touch-bar-group&quot;&gt;&lt;code&gt;typeof TouchBarGroup&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarGroup&lt;/code&gt; class.</source>
          <target state="translated">A &lt;a href=&quot;api/touch-bar-group&quot;&gt; &lt;code&gt;typeof TouchBarGroup&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarGroup&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="717d46a56a7b3240eea2454b6a672901d5d5a46d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/touch-bar-label&quot;&gt;&lt;code&gt;typeof TouchBarLabel&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarLabel&lt;/code&gt; class.</source>
          <target state="translated">&lt;a href=&quot;api/touch-bar-label&quot;&gt; &lt;code&gt;typeof TouchBarLabel&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarLabel&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="8cade74af352dc6b754658e8e0ee1caaa289f5e2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/touch-bar-other-items-proxy&quot;&gt;&lt;code&gt;typeof TouchBarOtherItemsProxy&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarOtherItemsProxy&lt;/code&gt; class.</source>
          <target state="translated">&lt;a href=&quot;api/touch-bar-other-items-proxy&quot;&gt; &lt;code&gt;typeof TouchBarOtherItemsProxy&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarOtherItemsProxy&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="11619521e9b608effbfca036816e97e43bd7ffe7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/touch-bar-popover&quot;&gt;&lt;code&gt;typeof TouchBarPopover&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarPopover&lt;/code&gt; class.</source>
          <target state="translated">A &lt;a href=&quot;api/touch-bar-popover&quot;&gt; &lt;code&gt;typeof TouchBarPopover&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarPopover&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="a9f591d68992e014ae11c9282538e7a47236a291" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/touch-bar-scrubber&quot;&gt;&lt;code&gt;typeof TouchBarScrubber&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarScrubber&lt;/code&gt; class.</source>
          <target state="translated">A &lt;a href=&quot;api/touch-bar-scrubber&quot;&gt; &lt;code&gt;typeof TouchBarScrubber&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarScrubber&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="3a9396d65c88dab781d8c130b7c3bab4699607ff" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/touch-bar-segmented-control&quot;&gt;&lt;code&gt;typeof TouchBarSegmentedControl&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarSegmentedControl&lt;/code&gt; class.</source>
          <target state="translated">A &lt;a href=&quot;api/touch-bar-segmented-control&quot;&gt; &lt;code&gt;typeof TouchBarSegmentedControl&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarSegmentedControl&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="2dc2e31535349370de683a151d0e80daf8586e56" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/touch-bar-slider&quot;&gt;&lt;code&gt;typeof TouchBarSlider&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarSlider&lt;/code&gt; class.</source>
          <target state="translated">A &lt;a href=&quot;api/touch-bar-slider&quot;&gt; &lt;code&gt;typeof TouchBarSlider&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarSlider&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="26c116a170662bae1a536b360596a6c63f2d139f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/touch-bar-spacer&quot;&gt;&lt;code&gt;typeof TouchBarSpacer&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarSpacer&lt;/code&gt; class.</source>
          <target state="translated">A &lt;a href=&quot;api/touch-bar-spacer&quot;&gt; &lt;code&gt;typeof TouchBarSpacer&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarSpacer&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="a1cb0f1d8b83b0e99778c4ae0d2736403e42cf47" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/web-contents&quot;&gt;&lt;code&gt;WebContents&lt;/code&gt;&lt;/a&gt; instance that might own this &lt;code&gt;WebContents&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;WebContents&lt;/code&gt; を所有している可能性のある&lt;a href=&quot;api/web-contents&quot;&gt; &lt;code&gt;WebContents&lt;/code&gt; &lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="cbfd86963b7d7042a333985851973e223cc9a3b6" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/web-contents&quot;&gt;&lt;code&gt;WebContents&lt;/code&gt;&lt;/a&gt; object owned by this view.</source>
          <target state="translated">このビューが所有する&lt;a href=&quot;api/web-contents&quot;&gt; &lt;code&gt;WebContents&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="f4c2dd55de6a2217819eb6f115222f928e02f908" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;api/web-request&quot;&gt;&lt;code&gt;WebRequest&lt;/code&gt;&lt;/a&gt; object for this session.</source>
          <target state="translated">&lt;a href=&quot;api/web-request&quot;&gt; &lt;code&gt;WebRequest&lt;/code&gt; クラス&lt;/a&gt;このセッションのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="b472d513a23593a25aea20c2546afc51f56e26ba" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;command-line&quot;&gt;&lt;code&gt;CommandLine&lt;/code&gt;&lt;/a&gt; object that allows you to read and manipulate the command line arguments that Chromium uses.</source>
          <target state="translated">Chromiumが使用するコマンドライン引数を読み取って操作できるようにする&lt;a href=&quot;command-line&quot;&gt; &lt;code&gt;CommandLine&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="30d18f5cbe543b4b465d61a780668f36048bd104" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;cookies&quot;&gt;&lt;code&gt;Cookies&lt;/code&gt;&lt;/a&gt; object for this session.</source>
          <target state="translated">&lt;a href=&quot;cookies&quot;&gt; &lt;code&gt;Cookies&lt;/code&gt; &lt;/a&gt;このセッションのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="970d74527f38ea0c3372607de3df6c15338767a3" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;cookies&quot;&gt;Cookies&lt;/a&gt; object for this session.</source>
          <target state="translated">&lt;a href=&quot;cookies&quot;&gt;クッキー&lt;/a&gt;このセッションのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="766e85924d97fb3683221da2a29bf5ec336bb02e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;debugger&quot;&gt;&lt;code&gt;Debugger&lt;/code&gt;&lt;/a&gt; instance for this webContents.</source>
          <target state="translated">A&lt;a href=&quot;debugger&quot;&gt; &lt;code&gt;Debugger&lt;/code&gt; &lt;/a&gt;このwebContentsのインスタンス。</target>
        </trans-unit>
        <trans-unit id="0ba2756975a890d3a2bcf20bdb35254848097731" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;debugger&quot;&gt;Debugger&lt;/a&gt; instance for this webContents.</source>
          <target state="translated">A &lt;a href=&quot;debugger&quot;&gt;デバッガ&lt;/a&gt;このwebContentsのインスタンス。</target>
        </trans-unit>
        <trans-unit id="3ded25e63153d57a7b8186a559837846c6206cae" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;dock&quot;&gt;&lt;code&gt;Dock&lt;/code&gt;&lt;/a&gt;&lt;code&gt;| undefined&lt;/code&gt; object that allows you to perform actions on your app icon in the user's dock on macOS.</source>
          <target state="translated">A&lt;a href=&quot;dock&quot;&gt; &lt;code&gt;Dock&lt;/code&gt; &lt;/a&gt; &lt;code&gt;| undefined&lt;/code&gt; macOSのユーザードックにあるアプリアイコンでアクションを実行できるようにする未定義のオブジェクト。</target>
        </trans-unit>
        <trans-unit id="0bfa4c9223eb241ac6360ea7eb815484879d4044" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;message-port-main&quot;&gt;&lt;code&gt;MessagePortMain&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">A &lt;a href=&quot;message-port-main&quot;&gt; &lt;code&gt;MessagePortMain&lt;/code&gt; の&lt;/a&gt;プロパティ。</target>
        </trans-unit>
        <trans-unit id="ebfc6204c18928a331e3e1f3133d3788ded008e7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;net-log&quot;&gt;&lt;code&gt;NetLog&lt;/code&gt;&lt;/a&gt; object for this session.</source>
          <target state="translated">&lt;a href=&quot;net-log&quot;&gt; &lt;code&gt;NetLog&lt;/code&gt; &lt;/a&gt;このセッションのためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="5c2c30e99a82599235268d90024d7b4fecfbdc90" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;protocol&quot;&gt;&lt;code&gt;Protocol&lt;/code&gt;&lt;/a&gt; object for this session.</source>
          <target state="translated">&lt;a href=&quot;protocol&quot;&gt; &lt;code&gt;Protocol&lt;/code&gt; &lt;/a&gt;このセッションのためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="2303d2d79c9db91f26a09af9524a7cb44e7568ff" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;protocol&quot;&gt;Protocol&lt;/a&gt; object for this session.</source>
          <target state="translated">&lt;a href=&quot;protocol&quot;&gt;プロトコル&lt;/a&gt;このセッションのためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="6040d3b79ee9c8b2feb9e2e7ba66ad9bd249bfea" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;service-workers&quot;&gt;&lt;code&gt;ServiceWorkers&lt;/code&gt;&lt;/a&gt; object for this session.</source>
          <target state="translated">&lt;a href=&quot;service-workers&quot;&gt; &lt;code&gt;ServiceWorkers&lt;/code&gt; の&lt;/a&gt;このセッションのためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="f11a4f9e02cb7ca31ef2f21fd1a08aecbef7d152" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; used by this webContents.</source>
          <target state="translated">A &lt;a href=&quot;session&quot;&gt; &lt;code&gt;Session&lt;/code&gt; &lt;/a&gt;、このwebContentsで使用されます。</target>
        </trans-unit>
        <trans-unit id="2cec62e4f8e3151946c6babd880e84ca9ca321b7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;structures/notification-action&quot;&gt;&lt;code&gt;NotificationAction[]&lt;/code&gt;&lt;/a&gt; property representing the actions of the notification.</source>
          <target state="translated">&lt;a href=&quot;structures/notification-action&quot;&gt; &lt;code&gt;NotificationAction[]&lt;/code&gt; &lt;/a&gt;通知のアクションを表すプロパティ。</target>
        </trans-unit>
        <trans-unit id="def1df891e29c4d8aa070e62acb4c165d982029d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;touch-bar-button&quot;&gt;&lt;code&gt;typeof TouchBarButton&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarButton&lt;/code&gt; class.</source>
          <target state="translated">&lt;a href=&quot;touch-bar-button&quot;&gt; &lt;code&gt;typeof TouchBarButton&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarButton&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="613244e4a8eb8aff396a47d43fd28f66cd3aac10" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;touch-bar-color-picker&quot;&gt;&lt;code&gt;typeof TouchBarColorPicker&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarColorPicker&lt;/code&gt; class.</source>
          <target state="translated">A &lt;a href=&quot;touch-bar-color-picker&quot;&gt; &lt;code&gt;typeof TouchBarColorPicker&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarColorPicker&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="b3e538515dab0b150c4442d8a2770e93eb04c49e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;touch-bar-group&quot;&gt;&lt;code&gt;typeof TouchBarGroup&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarGroup&lt;/code&gt; class.</source>
          <target state="translated">A &lt;a href=&quot;touch-bar-group&quot;&gt; &lt;code&gt;typeof TouchBarGroup&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarGroup&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="7078e1ada5fe4a7819961006492fd948ee4126d7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;touch-bar-label&quot;&gt;&lt;code&gt;typeof TouchBarLabel&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarLabel&lt;/code&gt; class.</source>
          <target state="translated">&lt;a href=&quot;touch-bar-label&quot;&gt; &lt;code&gt;typeof TouchBarLabel&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarLabel&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="7c9182a91d6e5c3b186b0b1881b2a5bb1c8795e3" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;touch-bar-other-items-proxy&quot;&gt;&lt;code&gt;typeof TouchBarOtherItemsProxy&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarOtherItemsProxy&lt;/code&gt; class.</source>
          <target state="translated">&lt;a href=&quot;touch-bar-other-items-proxy&quot;&gt; &lt;code&gt;typeof TouchBarOtherItemsProxy&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarOtherItemsProxy&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="3e6939adb5da3a9a177f5a47de37c1f4cda6a414" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;touch-bar-popover&quot;&gt;&lt;code&gt;typeof TouchBarPopover&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarPopover&lt;/code&gt; class.</source>
          <target state="translated">A &lt;a href=&quot;touch-bar-popover&quot;&gt; &lt;code&gt;typeof TouchBarPopover&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarPopover&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="4224815eb4de06320129762a52d912aaa8cdcf6a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;touch-bar-scrubber&quot;&gt;&lt;code&gt;typeof TouchBarScrubber&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarScrubber&lt;/code&gt; class.</source>
          <target state="translated">A &lt;a href=&quot;touch-bar-scrubber&quot;&gt; &lt;code&gt;typeof TouchBarScrubber&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarScrubber&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="1f9bbd301efca75f6122c1c2df255da94142bcef" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;touch-bar-segmented-control&quot;&gt;&lt;code&gt;typeof TouchBarSegmentedControl&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarSegmentedControl&lt;/code&gt; class.</source>
          <target state="translated">A &lt;a href=&quot;touch-bar-segmented-control&quot;&gt; &lt;code&gt;typeof TouchBarSegmentedControl&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarSegmentedControl&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="e53ee31d2d18d06913ea1f5e43704a65bffbc3e2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;touch-bar-slider&quot;&gt;&lt;code&gt;typeof TouchBarSlider&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarSlider&lt;/code&gt; class.</source>
          <target state="translated">A &lt;a href=&quot;touch-bar-slider&quot;&gt; &lt;code&gt;typeof TouchBarSlider&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarSlider&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="9bd8d2250c5a2f68d6daa3d9fd0c5aecc5c8d336" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;touch-bar-spacer&quot;&gt;&lt;code&gt;typeof TouchBarSpacer&lt;/code&gt;&lt;/a&gt; reference to the &lt;code&gt;TouchBarSpacer&lt;/code&gt; class.</source>
          <target state="translated">A &lt;a href=&quot;touch-bar-spacer&quot;&gt; &lt;code&gt;typeof TouchBarSpacer&lt;/code&gt; &lt;/a&gt;参照 &lt;code&gt;TouchBarSpacer&lt;/code&gt; のクラス。</target>
        </trans-unit>
        <trans-unit id="d5f703aeeb3a2959363bcb6be47725a2102ff843" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;web-contents&quot;&gt;&lt;code&gt;WebContents&lt;/code&gt;&lt;/a&gt; instance that might own this &lt;code&gt;WebContents&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;WebContents&lt;/code&gt; を所有する可能性のある&lt;a href=&quot;web-contents&quot;&gt; &lt;code&gt;WebContents&lt;/code&gt; &lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="4b4ecc2aa15c224a53164a5771f2bd1bfcf5d9a0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;web-contents&quot;&gt;&lt;code&gt;WebContents&lt;/code&gt;&lt;/a&gt; object owned by this view.</source>
          <target state="translated">このビューが所有する&lt;a href=&quot;web-contents&quot;&gt; &lt;code&gt;WebContents&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="6cb0abbd4ab3c6a5a98dea72634707e127f88acc" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;web-request&quot;&gt;&lt;code&gt;WebRequest&lt;/code&gt;&lt;/a&gt; object for this session.</source>
          <target state="translated">&lt;a href=&quot;web-request&quot;&gt; &lt;code&gt;WebRequest&lt;/code&gt; クラス&lt;/a&gt;このセッションのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="ef01eea92ccc70e8971e00bccf43df9357d662c2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;web-request&quot;&gt;WebRequest&lt;/a&gt; object for this session.</source>
          <target state="translated">&lt;a href=&quot;web-request&quot;&gt;WebRequestクラス&lt;/a&gt;このセッションのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="447ad6ea45c538226844c98d83f694e524c5bb74" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Accelerator&lt;/code&gt; (optional) indicating the item's accelerator, if set.</source>
          <target state="translated">A &lt;code&gt;Accelerator&lt;/code&gt; （オプション）設定されている場合、アイテムの促進を示します。</target>
        </trans-unit>
        <trans-unit id="f8898ea4e883a69cdf3c965338e461667d6c3d70" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; for if the OS / Chromium currently has a dark mode enabled or is being instructed to show a dark-style UI. If you want to modify this value you should use &lt;code&gt;themeSource&lt;/code&gt; below.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; OS /クロム場合については、現在、暗いモードが有効になっているか、暗いスタイルのUIを表示するように指示されています。この値を変更する場合は、以下の &lt;code&gt;themeSource&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ad50a3820c192d84fac76635234772ff6f22bec7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; for if the OS / Chromium currently has an inverted color scheme or is being instructed to use an inverted color scheme.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; OS /クロムは現在、反転カラースキームを持っていたり、反転カラースキームを使用するように指示されている場合のために。</target>
        </trans-unit>
        <trans-unit id="f3743bbe090f87e57c41367d2eaf81d1b12ca89b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; for if the OS / Chromium currently has high-contrast mode enabled or is being instructed to show a high-contrast UI.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; OS /クロム場合については、現在、高コントラストモードが有効になっているか、コントラストの高いUIを表示するように指示されています。</target>
        </trans-unit>
        <trans-unit id="6f345bef23185c20013ae3bbe87c7e30cbb186a9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; for the experimental option for enabling NodeJS support in sub-frames such as iframes inside the &lt;code&gt;webview&lt;/code&gt;. All your preloads will load for every iframe, you can use &lt;code&gt;process.isMainFrame&lt;/code&gt; to determine if you are in the main frame or not. This option is disabled by default in the guest page.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; NodeJSを可能にするための実験オプションには、内部インラインフレームとしてサブフレームにおける支持 &lt;code&gt;webview&lt;/code&gt; 。すべてのプリロードはiframeごとに読み込まれます。process.isMainFrameを使用し &lt;code&gt;process.isMainFrame&lt;/code&gt; 、メインフレームにいるかどうかを判断できます。このオプションは、ゲストページではデフォルトで無効になっています。</target>
        </trans-unit>
        <trans-unit id="aaabe2b3bbda68902c29e5beecf314b52d7802b8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; indicating if the accelerator should be registered with the system or just displayed.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; アクセラレータがシステムに登録したり、単に表示する必要があるかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="2c0ddaf65c3cb47f156371a2acd6904ca229bb26" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; indicating whether the item is checked, this property can be dynamically changed.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; 項目がチェックされているかどうかを示す、このプロパティを動的に変更することができます。</target>
        </trans-unit>
        <trans-unit id="14aa46e2b72e32f93471bf297ea5d988a5a1738f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; indicating whether the item is enabled, this property can be dynamically changed.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; 項目が有効になっているかどうかを示す、このプロパティを動的に変更することができます。</target>
        </trans-unit>
        <trans-unit id="d1f9a85e3673a5017961d1bfe2ec6846c3900405" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; indicating whether the item is visible, this property can be dynamically changed.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; 項目が表示されるかどうかを示す、このプロパティを動的に変更することができます。</target>
        </trans-unit>
        <trans-unit id="a806683824476116f809072c4c659c243a3f6f6e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property representing whether the notification has a reply action.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; 通知が返信アクションを持っているかどうかを表すプロパティ。</target>
        </trans-unit>
        <trans-unit id="f798a6e392a456c11e2a8743b57cb0a800451064" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property representing whether the notification is silent.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; 通知が沈黙しているかどうかを表すプロパティ。</target>
        </trans-unit>
        <trans-unit id="085feba6e3fce11b3aea6664a1e0bc4a75a43607" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines Whether the window can be moved by user.</source>
          <target state="translated">ユーザーがウィンドウを移動できるかどうかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="84a3b616ba59576d4c87463a97dba4faa0163cbd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines whether or not this WebContents will throttle animations and timers when the page becomes backgrounded. This also affects the Page Visibility API.</source>
          <target state="translated">ページがバックグラウンドになったときに、このWebContentsがアニメーションとタイマーを調整するかどうかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。これは、Page VisibilityAPIにも影響します。</target>
        </trans-unit>
        <trans-unit id="a6be1594d95cea3855f6f9167a11e916704679b3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines whether the image is considered a &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsimage/1520017-template&quot;&gt;template image&lt;/a&gt;.</source>
          <target state="translated">画像を&lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsimage/1520017-template&quot;&gt;テンプレート画像&lt;/a&gt;と見なすかどうかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="d6f57c8c0069fc6b7316260da2e45c9ddd2cc9e4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines whether the maximize/zoom window button toggles fullscreen mode or maximizes the window.</source>
          <target state="translated">ウィンドウの最大化/ズームボタンがフルスクリーンモードを切り替えるか、ウィンドウを最大化するかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="2b5348548df08c9d45d166111d1c1ef308decf41" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines whether the menu bar should be visible.</source>
          <target state="translated">メニューバーを表示するかどうかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="3259376cc2e72b0d601ac4adc03c75fb875fd4d4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines whether the window can be manually closed by user.</source>
          <target state="translated">ユーザーがウィンドウを手動で閉じることができるかどうかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="e60387a234811bf690b48cdb3f8be682d069fd5c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines whether the window can be manually maximized by user.</source>
          <target state="translated">ユーザーがウィンドウを手動で最大化できるかどうかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="9c16deb523c13dea483217312eb85bf67b55bde6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines whether the window can be manually minimized by user.</source>
          <target state="translated">ユーザーがウィンドウを手動で最小化できるかどうかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="d694730ab554eab8fa5261849d64d85877248aa5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines whether the window can be manually resized by user.</source>
          <target state="translated">ユーザーがウィンドウのサイズを手動で変更できるかどうかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="696fc44e8ac891a1e3b2b6965a698022b80be3df" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines whether the window has a shadow.</source>
          <target state="translated">ウィンドウに影があるかどうかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="11eb47a5d95c75d2e8a6b307c4acfcd0d4476b89" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines whether the window is excluded from the application&amp;rsquo;s Windows menu. &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="translated">ウィンドウをアプリケーションのWindowsメニューから除外するかどうかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。デフォルトでは &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c71d4d9db6f045f61ee472c9d3009dd6fb350578" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines whether the window is in fullscreen mode.</source>
          <target state="translated">ウィンドウがフルスクリーンモードであるかどうかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="136728aca7706a15bb3caacc718bf3635ba07854" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines whether the window is in kiosk mode.</source>
          <target state="translated">ウィンドウがキオスクモードであるかどうかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="edc12c65e3664d4255fdee6a8a16a00c6767451d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines whether the window is in simple (pre-Lion) fullscreen mode.</source>
          <target state="translated">ウィンドウが単純な（ライオン以前の）フルスクリーンモードであるかどうかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="8eea312dcb44a4197111382ccdf378ffc293944e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines whether the window is visible on all workspaces.</source>
          <target state="translated">ウィンドウがすべてのワークスペースに表示されるかどうかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="54274c8c94f545dda15f10aa48d649af66912f33" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines whether the window menu bar should hide itself automatically. Once set, the menu bar will only show when users press the single &lt;code&gt;Alt&lt;/code&gt; key.</source>
          <target state="translated">ウィンドウメニューバーが自動的に非表示になるかどうかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。一度設定すると、メニューバーはユーザーが単一の &lt;code&gt;Alt&lt;/code&gt; キーを押したときにのみ表示されます。</target>
        </trans-unit>
        <trans-unit id="e3644b45a7045bca186f4a043bc8430acefac264" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that determines whether this page is muted.</source>
          <target state="translated">このページをミュートするかどうかを決定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="5c77c4dc1fe89aaf729bb6f60d2d457403ba8a71" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that indicates whether network logs are currently being recorded.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; ネットワークのログが現在記録されているかどうかを示すプロパティ。</target>
        </trans-unit>
        <trans-unit id="83cbce7d07d736ab302f6da311d3c3c45cbb9926" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that returns &lt;code&gt;true&lt;/code&gt; if the app is packaged, &lt;code&gt;false&lt;/code&gt; otherwise. For many apps, this property can be used to distinguish development and production environments.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; を返すという性質 &lt;code&gt;true&lt;/code&gt; アプリは、パッケージ化されている場合 &lt;code&gt;false&lt;/code&gt; そう。多くのアプリでは、このプロパティを使用して開発環境と本番環境を区別できます。</target>
        </trans-unit>
        <trans-unit id="e4c26d3b73a54aa824006a5dd5254f36278c7e7a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that specifies whether the window&amp;rsquo;s document has been edited.</source>
          <target state="translated">ウィンドウのドキュメントが編集されているかどうかを指定する &lt;code&gt;Boolean&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="a10faa8225df7dfba2098d9c7c4b59f9b9614622" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; property that's &lt;code&gt;true&lt;/code&gt; if Chrome's accessibility support is enabled, &lt;code&gt;false&lt;/code&gt; otherwise. This property will be &lt;code&gt;true&lt;/code&gt; if the use of assistive technologies, such as screen readers, has been detected. Setting this property to &lt;code&gt;true&lt;/code&gt; manually enables Chrome's accessibility support, allowing developers to expose accessibility switch to users in application settings.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; のプロパティ &lt;code&gt;true&lt;/code&gt; Chromeのアクセシビリティのサポートが、有効になっている場合 &lt;code&gt;false&lt;/code&gt; そう。このプロパティは、スクリーンリーダーなどの支援技術の使用が検出された場合に &lt;code&gt;true&lt;/code&gt; 。このプロパティをに設定する &lt;code&gt;true&lt;/code&gt; 手動でtrueにすると、Chromeのユーザー補助サポートが有効になり、デベロッパーはアプリケーション設定でユーザー補助スイッチをユーザーに公開できます。</target>
        </trans-unit>
        <trans-unit id="544a957297e116ba93588725d45df038c7480781" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; representing whether the button is in an enabled state.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; ボタンが有効な状態にあるかどうかを表します。</target>
        </trans-unit>
        <trans-unit id="f5d79f2ddae2fbe243b46d2edb0b3d90fe7a6c94" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; representing whether this scrubber is continuous or not. Updating this value immediately updates the control in the touch bar.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; このスクラバーは、連続的であるかどうかを表します。この値を更新すると、タッチバーのコントロールがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="1b2a1e9caae63805e0d832239651fb3275364e0e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; representing whether to show the left / right selection arrows in this scrubber. Updating this value immediately updates the control in the touch bar.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; このスクラバーで左/右選択矢印を表示するかどうかを表します。この値を更新すると、タッチバーのコントロールがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="d8288433bb7ce7a947f241fd5c813169e3486c92" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; specifying whether the request will use HTTP chunked transfer encoding or not. Defaults to false. The property is readable and writable, however it can be set only before the first write operation as the HTTP headers are not yet put on the wire. Trying to set the &lt;code&gt;chunkedEncoding&lt;/code&gt; property after the first write will throw an error.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; 、要求がHTTPチャンク転送エンコードか使用するかどうかを指定します。デフォルトはfalseです。このプロパティは読み取りと書き込みが可能ですが、HTTPヘッダーがまだネットワーク上にないため、最初の書き込み操作の前にのみ設定できます。最初の書き込み後に &lt;code&gt;chunkedEncoding&lt;/code&gt; プロパティを設定しようとすると、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="fbcf057e7fe4b1103ea7c5805473bf3073840128" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; that controls ASAR support inside your application. Setting this to &lt;code&gt;true&lt;/code&gt; will disable the support for &lt;code&gt;asar&lt;/code&gt; archives in Node's built-in modules.</source>
          <target state="translated">アプリケーション内のASARサポートを制御する &lt;code&gt;Boolean&lt;/code&gt; 。これを &lt;code&gt;true&lt;/code&gt; に設定すると、Nodeの組み込みモジュールでの &lt;code&gt;asar&lt;/code&gt; アーカイブのサポートが無効になります。</target>
        </trans-unit>
        <trans-unit id="cd23548678f1596d472cf2b5a7a5211e82278a4c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; that controls whether or not deprecation warnings are printed to &lt;code&gt;stderr&lt;/code&gt;. Setting this to &lt;code&gt;true&lt;/code&gt; will silence deprecation warnings. This property is used instead of the &lt;code&gt;--no-deprecation&lt;/code&gt; command line flag.</source>
          <target state="translated">非推奨の警告を &lt;code&gt;stderr&lt;/code&gt; に出力するかどうかを制御する &lt;code&gt;Boolean&lt;/code&gt; 。これを &lt;code&gt;true&lt;/code&gt; に設定すると、非推奨の警告が表示されなくなります。このプロパティは、 &lt;code&gt;--no-deprecation&lt;/code&gt; コマンドラインフラグの代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="2736cf809f33306d6b9cc722cce318fc68541232" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; that controls whether or not deprecation warnings will be thrown as exceptions. Setting this to &lt;code&gt;true&lt;/code&gt; will throw errors for deprecations. This property is used instead of the &lt;code&gt;--throw-deprecation&lt;/code&gt; command line flag.</source>
          <target state="translated">非推奨の警告を例外としてスローするかどうかを制御する &lt;code&gt;Boolean&lt;/code&gt; 。これを &lt;code&gt;true&lt;/code&gt; に設定すると、非推奨のエラーがスローされます。このプロパティは、 &lt;code&gt;--throw-deprecation&lt;/code&gt; コマンドラインフラグの代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="66cea04cb64896c85b8669835169eb7214e7650e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; that controls whether or not deprecations printed to &lt;code&gt;stderr&lt;/code&gt; include their stack trace. Setting this to &lt;code&gt;true&lt;/code&gt; will print stack traces for deprecations. This property is instead of the &lt;code&gt;--trace-deprecation&lt;/code&gt; command line flag.</source>
          <target state="translated">&lt;code&gt;stderr&lt;/code&gt; に出力される非推奨にスタックトレースが含まれるかどうかを制御する &lt;code&gt;Boolean&lt;/code&gt; 。これを &lt;code&gt;true&lt;/code&gt; に設定すると、非推奨のスタックトレースが出力されます。このプロパティは、 &lt;code&gt;--trace-deprecation&lt;/code&gt; コマンドラインフラグの代わりです。</target>
        </trans-unit>
        <trans-unit id="b36a2e5014eb35e5bd7b7d6a916ffc4e0cf654aa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; that controls whether or not process warnings printed to &lt;code&gt;stderr&lt;/code&gt; include their stack trace. Setting this to &lt;code&gt;true&lt;/code&gt; will print stack traces for process warnings (including deprecations). This property is instead of the &lt;code&gt;--trace-warnings&lt;/code&gt; command line flag.</source>
          <target state="translated">&lt;code&gt;stderr&lt;/code&gt; に出力されるプロセス警告にスタックトレースを含めるかどうかを制御する &lt;code&gt;Boolean&lt;/code&gt; 。これを &lt;code&gt;true&lt;/code&gt; に設定すると、プロセスの警告（非推奨を含む）のスタックトレースが出力されます。このプロパティは、 &lt;code&gt;--trace-warnings&lt;/code&gt; コマンドラインフラグの代わりです。</target>
        </trans-unit>
        <trans-unit id="7b3017216d766b45b90c5f3584dcc76584751eb8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; that is set to true after the child window gets closed.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; 子ウィンドウが閉じます後にtrueに設定されています。</target>
        </trans-unit>
        <trans-unit id="23f773f093639a3002557b9eb3e11ec2b2876c80" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; which when &lt;code&gt;true&lt;/code&gt; disables the overrides that Electron has in place to ensure renderer processes are restarted on every navigation. The current default value for this property is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; &lt;code&gt;true&lt;/code&gt; エレクトロンがレンダラプロセスを確保するための場所に持っていることを禁止しオーバーライドは、すべてのナビゲーションで再起動されます。このプロパティの現在のデフォルト値は &lt;code&gt;true&lt;/code&gt; ですです。</target>
        </trans-unit>
        <trans-unit id="2453b4a1166a063fb9358801630ce809a33c37bc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt; which when &lt;code&gt;true&lt;/code&gt; indicates that the app is currently running under the &lt;a href=&quot;https://en.wikipedia.org/wiki/Rosetta_(software)&quot;&gt;Rosetta Translator Environment&lt;/a&gt;.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; &lt;code&gt;true&lt;/code&gt; アプリは、現在の下で実行されていることを示し&lt;a href=&quot;https://en.wikipedia.org/wiki/Rosetta_(software)&quot;&gt;ロゼッタ翻訳環境&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69c2246a72800d2fbe60f1c4631c3c190e0fc768" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; when the current renderer context is the &quot;main&quot; renderer frame. If you want the ID of the current frame you should use &lt;code&gt;webFrame.routingId&lt;/code&gt;.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; 、 &lt;code&gt;true&lt;/code&gt; 現在のレンダラコンテキストは、「メイン」レンダラフレームです。現在のフレームのIDが必要な場合は、 &lt;code&gt;webFrame.routingId&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d10f5c2368538e8920f44c68e8a6f5b860020799" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt;. For Mac App Store build, this property is &lt;code&gt;true&lt;/code&gt;, for other builds it is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; 。Mac App Storeビルドの場合、このプロパティは &lt;code&gt;true&lt;/code&gt; ですが、他のビルドの場合は &lt;code&gt;undefined&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="33e24ad0512a7c81a82d966693888fe586886774" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt;. If the app is running as a Windows Store app (appx), this property is &lt;code&gt;true&lt;/code&gt;, for otherwise it is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; 。アプリがWindowsストアアプリ（appx）として実行されている場合、このプロパティは &lt;code&gt;true&lt;/code&gt; です。それ以外の場合は &lt;code&gt;undefined&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3e1fbbb8a645c7301a176f2983cb01cecd07494a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt;. When app is started by being passed as parameter to the default app, this property is &lt;code&gt;true&lt;/code&gt; in the main process, otherwise it is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; 。デフォルトのアプリにパラメーターとして渡されてアプリが起動された場合、このプロパティはメインプロセスで &lt;code&gt;true&lt;/code&gt; になり、それ以外の場合は &lt;code&gt;undefined&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="f5536d76a480a0dc54ff3678a7887953baef7d9c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt;. When the renderer process is sandboxed, this property is &lt;code&gt;true&lt;/code&gt;, otherwise it is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; 。レンダラープロセスがサンドボックス化されている場合、このプロパティは &lt;code&gt;true&lt;/code&gt; です。それ以外の場合は、 &lt;code&gt;undefined&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="937cb3fd80d5c823343e072e716c7414a5c86991" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt;. When this attribute is &lt;code&gt;false&lt;/code&gt; the guest page in &lt;code&gt;webview&lt;/code&gt; will not have access to the &lt;a href=&quot;api/remote&quot;&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/a&gt; module. The remote module is available by default.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; 。この属性が &lt;code&gt;false&lt;/code&gt; の場合、 &lt;code&gt;webview&lt;/code&gt; のゲストページは&lt;a href=&quot;api/remote&quot;&gt; &lt;code&gt;remote&lt;/code&gt; &lt;/a&gt;モジュールにアクセスできません。リモートモジュールはデフォルトで使用可能です。</target>
        </trans-unit>
        <trans-unit id="872685388b665939ae5430570d1f512a98cfcdb0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt;. When this attribute is &lt;code&gt;false&lt;/code&gt; the guest page in &lt;code&gt;webview&lt;/code&gt; will not have access to the &lt;a href=&quot;remote&quot;&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/a&gt; module. The remote module is available by default.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; 。この属性が &lt;code&gt;false&lt;/code&gt; の場合、 &lt;code&gt;webview&lt;/code&gt; のゲストページは&lt;a href=&quot;remote&quot;&gt; &lt;code&gt;remote&lt;/code&gt; &lt;/a&gt;モジュールにアクセスできません。リモートモジュールはデフォルトで使用可能です。</target>
        </trans-unit>
        <trans-unit id="cd8410c544682d9369d434be1f686bd2048f2153" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt;. When this attribute is present the guest page in &lt;code&gt;webview&lt;/code&gt; will be able to use browser plugins. Plugins are disabled by default.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; 。この属性が存在する場合、 &lt;code&gt;webview&lt;/code&gt; のゲストページはブラウザプラグインを使用できるようになります。プラグインはデフォルトで無効になっています。</target>
        </trans-unit>
        <trans-unit id="cf0ae455e49d0cf5e3f251ef218b77cf321152fb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt;. When this attribute is present the guest page in &lt;code&gt;webview&lt;/code&gt; will have node integration and can use node APIs like &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;process&lt;/code&gt; to access low level system resources. Node integration is disabled by default in the guest page.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; 。この属性が存在する場合、 &lt;code&gt;webview&lt;/code&gt; のゲストページにはノード統合があり、 &lt;code&gt;require&lt;/code&gt; や &lt;code&gt;process&lt;/code&gt; などのノードAPIを使用できますを使用して低レベルのシステムリソースにアクセスできます。ゲストページでは、ノード統合はデフォルトで無効になっています。</target>
        </trans-unit>
        <trans-unit id="9d09cd358efd3a80206a937f97a60f5d7c9d0370" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt;. When this attribute is present the guest page will be allowed to open new windows. Popups are disabled by default.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; 。この属性が存在する場合、ゲストページは新しいウィンドウを開くことができます。ポップアップはデフォルトで無効になっています。</target>
        </trans-unit>
        <trans-unit id="53fcf5e4f5e0a0638a75713bb63ea4ecd1847e8b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Boolean&lt;/code&gt;. When this attribute is present the guest page will have web security disabled. Web security is enabled by default.</source>
          <target state="translated">A &lt;code&gt;Boolean&lt;/code&gt; 。この属性が存在する場合、ゲストページではWebセキュリティが無効になります。Webセキュリティはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="ed242c45c146e971b999a33e5036f8194f04b1cd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BrowserView&lt;/code&gt; can be used to embed additional web content into a &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;. It is like a child window, except that it is positioned relative to its owning window. It is meant to be an alternative to the &lt;code&gt;webview&lt;/code&gt; tag.</source>
          <target state="translated">A &lt;code&gt;BrowserView&lt;/code&gt; に埋め込む追加のウェブコンテンツに使用することができます&lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;。子ウィンドウに似ていますが、所有するウィンドウに対して相対的に配置される点が異なります。これは、 &lt;code&gt;webview&lt;/code&gt; タグの代替となることを目的としています。</target>
        </trans-unit>
        <trans-unit id="c6560b1e6968eb5eb2b92c739b176a32d08b85a2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BrowserView&lt;/code&gt; can be used to embed additional web content into a &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;. It is like a child window, except that it is positioned relative to its owning window. It is meant to be an alternative to the &lt;code&gt;webview&lt;/code&gt; tag.</source>
          <target state="translated">A &lt;code&gt;BrowserView&lt;/code&gt; に埋め込む追加のウェブコンテンツに使用することができます&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;。所有するウィンドウに相対的に配置されることを除いて、子ウィンドウに似ています。これは、 &lt;code&gt;webview&lt;/code&gt; タグの代わりになるものです。</target>
        </trans-unit>
        <trans-unit id="01fbcba425c850beec9672106faa73aa4d5f5485" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Function&lt;/code&gt; that is fired when the MenuItem receives a click event.</source>
          <target state="translated">MenuItemがクリックイベントを受け取ったときに発生する &lt;code&gt;Function&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0051ed6bc0cd3965c1d05031e04ecc1f31512100" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Function&lt;/code&gt; that is fired when the MenuItem receives a click event. It can be called with &lt;code&gt;menuItem.click(event, focusedWindow, focusedWebContents)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; のMenuItemがクリックイベントを受信したときに発生します。 &lt;code&gt;menuItem.click(event, focusedWindow, focusedWebContents)&lt;/code&gt; ことができます。</target>
        </trans-unit>
        <trans-unit id="67e3a30b9fb76ab4c75a1f647ad447877e8dd4f7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Integer&lt;/code&gt; property representing the unique ID of the window. Each ID is unique among all &lt;code&gt;BrowserWindow&lt;/code&gt; instances of the entire Electron application.</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; ウィンドウのユニークなIDを表すプロパティ。各IDは、すべての &lt;code&gt;BrowserWindow&lt;/code&gt; の中で一意です、Electronアプリケーション全体のインスタンスです。</target>
        </trans-unit>
        <trans-unit id="15f3f1550b98d61cf57afb316d14df2265dcf739" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Integer&lt;/code&gt; representing the unique ID of the view.</source>
          <target state="translated">A &lt;code&gt;Integer&lt;/code&gt; ビューの固有のIDを示します。</target>
        </trans-unit>
        <trans-unit id="9ad7f6c829ac5852e8463f9fdae14ae0fcdd5201" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Integer&lt;/code&gt; representing the unique ID of the window.</source>
          <target state="translated">A &lt;code&gt;Integer&lt;/code&gt; ウィンドウの固有のIDを示します。</target>
        </trans-unit>
        <trans-unit id="4f0384fcb2634fa444629eec71ece069b7e5a169" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Integer&lt;/code&gt; representing the unique ID of this WebContents.</source>
          <target state="translated">A &lt;code&gt;Integer&lt;/code&gt; このWebContentsの固有のIDを示します。</target>
        </trans-unit>
        <trans-unit id="5587851fa7064bfde04d6429b9ad6b692988bda3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Integer&lt;/code&gt; representing the unique ID of this WebContents. Each ID is unique among all &lt;code&gt;WebContents&lt;/code&gt; instances of the entire Electron application.</source>
          <target state="translated">A &lt;code&gt;Integer&lt;/code&gt; このWebContentsの固有のIDを示します。各IDは、Electronアプリケーション全体のすべての &lt;code&gt;WebContents&lt;/code&gt; インスタンス間で一意です。</target>
        </trans-unit>
        <trans-unit id="4b5d7c5fb6d0d9d1d0c7bb96e3fc1eaaf6f4467c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Menu | null&lt;/code&gt; property that returns &lt;a href=&quot;api/menu&quot;&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/a&gt; if one has been set and &lt;code&gt;null&lt;/code&gt; otherwise. Users can pass a &lt;a href=&quot;api/menu&quot;&gt;Menu&lt;/a&gt; to set this property.</source>
          <target state="translated">&lt;code&gt;Menu | null&lt;/code&gt; プロパティが返されている&lt;a href=&quot;api/menu&quot;&gt; &lt;code&gt;Menu&lt;/code&gt; &lt;/a&gt;1がセットされている場合 &lt;code&gt;null&lt;/code&gt; そう。ユーザーは&lt;a href=&quot;api/menu&quot;&gt;メニュー&lt;/a&gt;を渡してこのプロパティを設定できます。</target>
        </trans-unit>
        <trans-unit id="39b7b33046071a4acb9cf5da034d127bbf261174" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Menu | null&lt;/code&gt; property that returns &lt;a href=&quot;menu&quot;&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/a&gt; if one has been set and &lt;code&gt;null&lt;/code&gt; otherwise. Users can pass a &lt;a href=&quot;menu&quot;&gt;Menu&lt;/a&gt; to set this property.</source>
          <target state="translated">&lt;code&gt;Menu | null&lt;/code&gt; プロパティが返されている&lt;a href=&quot;menu&quot;&gt; &lt;code&gt;Menu&lt;/code&gt; &lt;/a&gt;1がセットされている場合 &lt;code&gt;null&lt;/code&gt; そう。ユーザーは&lt;a href=&quot;menu&quot;&gt;メニュー&lt;/a&gt;を渡してこのプロパティを設定できます。</target>
        </trans-unit>
        <trans-unit id="b8f405424fb2def93278f11782febf8275f3c70d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Menu&lt;/code&gt; (optional) containing the menu item's submenu, if present.</source>
          <target state="translated">&lt;code&gt;Menu&lt;/code&gt; （オプション）存在する場合、メニュー項目のサブメニューを含みます。</target>
        </trans-unit>
        <trans-unit id="f92006488d11feb9920a5df1be2d3a1cea7281a2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Menu&lt;/code&gt; that the item is a part of.</source>
          <target state="translated">&lt;code&gt;Menu&lt;/code&gt; 項目がの一部です。</target>
        </trans-unit>
        <trans-unit id="8a1f5d6c4d3a3c6f66051e23ff2a45a4a73e984e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MenuItem[]&lt;/code&gt; array containing the menu's items.</source>
          <target state="translated">&lt;code&gt;MenuItem[]&lt;/code&gt; メニューの項目を含む配列。</target>
        </trans-unit>
        <trans-unit id="a2c0ee974b7e5312ec3fe00ded338421425a526f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NativeImage | String&lt;/code&gt; (optional) indicating the item's icon, if set.</source>
          <target state="translated">A &lt;code&gt;NativeImage | String&lt;/code&gt; 設定されている場合、アイテムのアイコンを示す（オプション）。</target>
        </trans-unit>
        <trans-unit id="1c30a833744f289507d8004331cf3db5c414f10a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NativeImage&lt;/code&gt; representing the button's current icon. Changing this value immediately updates the button in the touch bar.</source>
          <target state="translated">A &lt;code&gt;NativeImage&lt;/code&gt; ボタンの現在のアイコンを表します。この値を変更すると、タッチバーのボタンがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="58b374498e55f4bf34b07d6ce9c2ae42d5ef96cd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NativeImage&lt;/code&gt; representing the popover's current button icon. Changing this value immediately updates the popover in the touch bar.</source>
          <target state="translated">A &lt;code&gt;NativeImage&lt;/code&gt; ポップオーバーの現在のボタンのアイコンを表します。この値を変更すると、タッチバーのポップオーバーがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="90b96776b9442a2543714ad0934394ad57d504e9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NodeJS.Process&lt;/code&gt; object. The &lt;code&gt;process&lt;/code&gt; object in the main process. This is the same as &lt;code&gt;remote.getGlobal('process')&lt;/code&gt; but is cached.</source>
          <target state="translated">&lt;code&gt;NodeJS.Process&lt;/code&gt; のオブジェクト。メインプロセスの &lt;code&gt;process&lt;/code&gt; オブジェクト。これは &lt;code&gt;remote.getGlobal('process')&lt;/code&gt; と同じですが、キャッシュされます。</target>
        </trans-unit>
        <trans-unit id="459adfd3276d67e6639d52441520e8dc59924933" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Number&lt;/code&gt; indicating an item's sequential unique id.</source>
          <target state="translated">A &lt;code&gt;Number&lt;/code&gt; アイテムのシーケンシャルなユニークなIDを示します。</target>
        </trans-unit>
        <trans-unit id="d83a82cb4665556e3178d4449771dbebc407e150" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Number&lt;/code&gt; property that determines the zoom factor for this web contents.</source>
          <target state="translated">このWebコンテンツのズーム率を決定する &lt;code&gt;Number&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="c0e0b7206fa7834c979f204bba34a2f72cdb61f5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Number&lt;/code&gt; property that determines the zoom level for this web contents.</source>
          <target state="translated">このWebコンテンツのズームレベルを決定する &lt;code&gt;Number&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="a1efc4e1f9ef80d43e508922140666a5ddc8ad6d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Number&lt;/code&gt; representing the slider's current maximum value. Changing this value immediately updates the slider in the touch bar.</source>
          <target state="translated">A &lt;code&gt;Number&lt;/code&gt; 、スライダーの現在の最大値を表します。この値を変更すると、タッチバーのスライダーがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="2b162924b484745f9c4a1b70526864cd23d4e57a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Number&lt;/code&gt; representing the slider's current minimum value. Changing this value immediately updates the slider in the touch bar.</source>
          <target state="translated">A &lt;code&gt;Number&lt;/code&gt; 、スライダーの現在の最小値を表します。この値を変更すると、タッチバーのスライダーがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="48d8dded136d549bde9ee283bfbc94f9874f2b7a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Number&lt;/code&gt; representing the slider's current value. Changing this value immediately updates the slider in the touch bar.</source>
          <target state="translated">A &lt;code&gt;Number&lt;/code&gt; 、スライダーの現在の値を表します。この値を変更すると、タッチバーのスライダーがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="7bfb76e525c3f8d10ed5d7fa13b69146158b4014" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Record&amp;lt;string, string | string[]&amp;gt;&lt;/code&gt; representing the HTTP response headers. The &lt;code&gt;headers&lt;/code&gt; object is formatted as follows:</source>
          <target state="translated">A &lt;code&gt;Record&amp;lt;string, string | string[]&amp;gt;&lt;/code&gt; HTTP応答ヘッダーを表すstring []&amp;gt;。 &lt;code&gt;headers&lt;/code&gt; 次のようにオブジェクトがフォーマットされています。</target>
        </trans-unit>
        <trans-unit id="db2893374f72cccfbd4c0b26873709854dc03bba" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ScrubberItem[]&lt;/code&gt; array representing the items in this scrubber. Updating this value immediately updates the control in the touch bar. Updating deep properties inside this array &lt;strong&gt;does not update the touch bar&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;ScrubberItem[]&lt;/code&gt; このスクラバーのアイテムを表す配列。この値を更新すると、タッチバーのコントロールがすぐに更新されます。この配列内のディーププロパティを&lt;strong&gt;更新しても、タッチバーは更新されません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="d732fd4d2832017e96baf4d864b4d4fca73379b4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SegmentedControlSegment[]&lt;/code&gt; array representing the segments in this control. Updating this value immediately updates the control in the touch bar. Updating deep properties inside this array &lt;strong&gt;does not update the touch bar&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;SegmentedControlSegment[]&lt;/code&gt; この制御でセグメントを表す配列。この値を更新すると、タッチバーのコントロールがすぐに更新されます。この配列内のディーププロパティを&lt;strong&gt;更新しても、タッチバーは更新されません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="a3cdc670d6384d18de5c1f9cd9c1ac09dc21cfd4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Session&lt;/code&gt; object, the default session object of the app.</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; オブジェクト、アプリのデフォルトのセッションオブジェクト。</target>
        </trans-unit>
        <trans-unit id="026e2f8626dd9e8d611eef688686e8b419d39fd4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; (optional) indicating the item's role, if set. Can be &lt;code&gt;undo&lt;/code&gt;, &lt;code&gt;redo&lt;/code&gt;, &lt;code&gt;cut&lt;/code&gt;, &lt;code&gt;copy&lt;/code&gt;, &lt;code&gt;paste&lt;/code&gt;, &lt;code&gt;pasteAndMatchStyle&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;selectAll&lt;/code&gt;, &lt;code&gt;reload&lt;/code&gt;, &lt;code&gt;forceReload&lt;/code&gt;, &lt;code&gt;toggleDevTools&lt;/code&gt;, &lt;code&gt;resetZoom&lt;/code&gt;, &lt;code&gt;zoomIn&lt;/code&gt;, &lt;code&gt;zoomOut&lt;/code&gt;, &lt;code&gt;togglefullscreen&lt;/code&gt;, &lt;code&gt;window&lt;/code&gt;, &lt;code&gt;minimize&lt;/code&gt;, &lt;code&gt;close&lt;/code&gt;, &lt;code&gt;help&lt;/code&gt;, &lt;code&gt;about&lt;/code&gt;, &lt;code&gt;services&lt;/code&gt;, &lt;code&gt;hide&lt;/code&gt;, &lt;code&gt;hideOthers&lt;/code&gt;, &lt;code&gt;unhide&lt;/code&gt;, &lt;code&gt;quit&lt;/code&gt;, &lt;code&gt;startSpeaking&lt;/code&gt;, &lt;code&gt;stopSpeaking&lt;/code&gt;, &lt;code&gt;zoom&lt;/code&gt;, &lt;code&gt;front&lt;/code&gt;, &lt;code&gt;appMenu&lt;/code&gt;, &lt;code&gt;fileMenu&lt;/code&gt;, &lt;code&gt;editMenu&lt;/code&gt;, &lt;code&gt;viewMenu&lt;/code&gt;, &lt;code&gt;recentDocuments&lt;/code&gt;, &lt;code&gt;toggleTabBar&lt;/code&gt;, &lt;code&gt;selectNextTab&lt;/code&gt;, &lt;code&gt;selectPreviousTab&lt;/code&gt;, &lt;code&gt;mergeAllWindows&lt;/code&gt;, &lt;code&gt;clearRecentDocuments&lt;/code&gt;, &lt;code&gt;moveTabToNewWindow&lt;/code&gt; or &lt;code&gt;windowMenu&lt;/code&gt;</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; （オプション）設定した場合、アイテムの役割を示しています。することができ &lt;code&gt;undo&lt;/code&gt; 、 &lt;code&gt;redo&lt;/code&gt; 、 &lt;code&gt;cut&lt;/code&gt; 、 &lt;code&gt;copy&lt;/code&gt; 、 &lt;code&gt;paste&lt;/code&gt; 、 &lt;code&gt;pasteAndMatchStyle&lt;/code&gt; 、 &lt;code&gt;delete&lt;/code&gt; 、 &lt;code&gt;selectAll&lt;/code&gt; 、 &lt;code&gt;reload&lt;/code&gt; 、 &lt;code&gt;forceReload&lt;/code&gt; 、 &lt;code&gt;toggleDevTools&lt;/code&gt; 、 &lt;code&gt;resetZoom&lt;/code&gt; 、 &lt;code&gt;zoomIn&lt;/code&gt; 、 &lt;code&gt;zoomOut&lt;/code&gt; 、 &lt;code&gt;togglefullscreen&lt;/code&gt; 、 &lt;code&gt;window&lt;/code&gt; 、 &lt;code&gt;minimize&lt;/code&gt; 、 &lt;code&gt;close&lt;/code&gt; 、 &lt;code&gt;help&lt;/code&gt; 、 &lt;code&gt;about&lt;/code&gt; 、 &lt;code&gt;services&lt;/code&gt; 、 &lt;code&gt;hide&lt;/code&gt; 、 &lt;code&gt;hideOthers&lt;/code&gt; 、 &lt;code&gt;unhide&lt;/code&gt; 、 &lt;code&gt;quit&lt;/code&gt; 、 &lt;code&gt;startSpeaking&lt;/code&gt; 、 &lt;code&gt;stopSpeaking&lt;/code&gt; 、 &lt;code&gt;zoom&lt;/code&gt; 、 &lt;code&gt;front&lt;/code&gt; 、 &lt;code&gt;appMenu&lt;/code&gt; 、 &lt;code&gt;fileMenu&lt;/code&gt; 、 &lt;code&gt;editMenu&lt;/code&gt; 、 &lt;code&gt;viewMenu&lt;/code&gt; 、 &lt;code&gt;recentDocuments&lt;/code&gt; 、 &lt;code&gt;toggleTabBar&lt;/code&gt; 、 &lt;code&gt;selectNextTab&lt;/code&gt; 、 &lt;code&gt;selectPreviousTab&lt;/code&gt; 、 &lt;code&gt;mergeAllWindows&lt;/code&gt; 、 &lt;code&gt;clearRecentDocuments&lt;/code&gt; 、 &lt;code&gt;moveTabToNewWindow&lt;/code&gt; 又は &lt;code&gt;windowMenu&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57cfa5ebfac2e654553dccc41b69abee236f24ff" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; - Can be &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt; or &lt;code&gt;overlay&lt;/code&gt;. Defaults to &lt;code&gt;overlay&lt;/code&gt;.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; -することができます &lt;code&gt;left&lt;/code&gt; 、 &lt;code&gt;right&lt;/code&gt; または &lt;code&gt;overlay&lt;/code&gt; 。デフォルトは &lt;code&gt;overlay&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="37587cdff8ee6eeefb775202833a1c3820b954b7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; hex code representing the button's current background color. Changing this value immediately updates the button in the touch bar.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; ボタンの現在の背景色を表す進コード。この値を変更すると、タッチバーのボタンがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="36248cfa71d8493db2f8386a8a563ca6ce257ddc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; hex code representing the color picker's currently selected color. Changing this value immediately updates the color picker in the touch bar.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; カラーピッカーの現在選択されている色を表す進コード。この値を変更すると、タッチバーのカラーピッカーがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="2fe09879fce33a29306eebad771fc78d973b3250" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; hex code representing the label's current text color. Changing this value immediately updates the label in the touch bar.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; ラベルの現在のテキストの色を表す進コード。この値を変更すると、タッチバーのラベルがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="3949a10bda68e43143a72c92b2380a04dbeda771" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; indicating the HTTP protocol version number. Typical values are '1.0' or '1.1'. Additionally &lt;code&gt;httpVersionMajor&lt;/code&gt; and &lt;code&gt;httpVersionMinor&lt;/code&gt; are two Integer-valued readable properties that return respectively the HTTP major and minor version numbers.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; HTTPプロトコルのバージョン番号を示します。一般的な値は「1.0」または「1.1」です。さらに、 &lt;code&gt;httpVersionMajor&lt;/code&gt; と &lt;code&gt;httpVersionMinor&lt;/code&gt; は、HTTPメジャーバージョン番号とマイナーバージョン番号をそれぞれ返す2つの整数値の読み取り可能なプロパティです。</target>
        </trans-unit>
        <trans-unit id="5620ecc1bda14d089de1320dda4e4c81e5f0f01a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; indicating the item's hover text.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; 項目のホバーテキストを示しています。</target>
        </trans-unit>
        <trans-unit id="583bc515f18ab934ff456ee3191e6682a2e83b2e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; indicating the item's sublabel.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; 項目のサブラベルを示します。</target>
        </trans-unit>
        <trans-unit id="ef09768bf40b24d05353b67cdc0ca94f99b09b07" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; indicating the item's unique id, this property can be dynamically changed.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; アイテムの一意のIDを示し、このプロパティを動的に変更することができます。</target>
        </trans-unit>
        <trans-unit id="1aa205bdcffa0bef0c21b579ece1e98de799b989" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; indicating the item's visible label.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; 項目の表示ラベルを示します。</target>
        </trans-unit>
        <trans-unit id="bf348c6164e4b2e6d765fd733ff1a76ae6546c4f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; indicating the type of the item. Can be &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;separator&lt;/code&gt;, &lt;code&gt;submenu&lt;/code&gt;, &lt;code&gt;checkbox&lt;/code&gt; or &lt;code&gt;radio&lt;/code&gt;.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; アイテムの種類を示します。 &lt;code&gt;normal&lt;/code&gt; 、 &lt;code&gt;separator&lt;/code&gt; 、 &lt;code&gt;submenu&lt;/code&gt; 、 &lt;code&gt;checkbox&lt;/code&gt; または &lt;code&gt;radio&lt;/code&gt; ことができます。</target>
        </trans-unit>
        <trans-unit id="ffb0408afc2c493af10268c7eb6681d474b0275d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property representing the body of the notification.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; 通知の本体を表すプロパティ。</target>
        </trans-unit>
        <trans-unit id="f0f4131025fca10d056e06d1bee12f8ac309974b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property representing the close button text of the notification.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 通知の閉じるボタンのテキストを表すプロパティ。</target>
        </trans-unit>
        <trans-unit id="c4849600a4ae54cf89a89140a32593d618b9e540" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property representing the reply placeholder of the notification.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 通知の返信プレースホルダを表すプロパティ。</target>
        </trans-unit>
        <trans-unit id="682a2ddaaa5cc7fb3e7e92c0be96de862a81b032" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property representing the sound of the notification.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 通知の音を表すプロパティ。</target>
        </trans-unit>
        <trans-unit id="8de3a1619370601f11397c905c8fbb2527afcc63" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property representing the subtitle of the notification.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 通知の字幕を表すプロパティ。</target>
        </trans-unit>
        <trans-unit id="59c46260b9b7d95e8e5b7b098e5e2f6719bd46b2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property representing the title of the notification.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 通知のタイトルを表すプロパティ。</target>
        </trans-unit>
        <trans-unit id="140ad3aebf924a4008e9e74700384c4a3291d097" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property representing the type of timeout duration for the notification. Can be 'default' or 'never'.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 通知のタイムアウト時間のタイプを表すプロパティ。'default'または 'never'にすることができます。</target>
        </trans-unit>
        <trans-unit id="3055e16b8a6d516637aaf19b9fe4db8c50e70e2f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property representing the urgency level of the notification. Can be 'normal', 'critical', or 'low'.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 通知の緊急度を表すプロパティ。「通常」、「クリティカル」、または「低」にすることができます。</target>
        </trans-unit>
        <trans-unit id="e3e372262d7516affedd20054ecf5102fccc6ea0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property that can be &lt;code&gt;dark&lt;/code&gt;, &lt;code&gt;light&lt;/code&gt; or &lt;code&gt;unknown&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; ことができ財産 &lt;code&gt;dark&lt;/code&gt; 、 &lt;code&gt;light&lt;/code&gt; または &lt;code&gt;unknown&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fdb8a5c1c1d6431cf2034dac1228501eaed9a5f3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property that can be &lt;code&gt;dark&lt;/code&gt;, &lt;code&gt;light&lt;/code&gt; or &lt;code&gt;unknown&lt;/code&gt;. It determines the macOS appearance setting for your application. This maps to values in: &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsapplication/2967170-appearance?language=objc&quot;&gt;NSApplication.appearance&lt;/a&gt;. Setting this will override the system default as well as the value of &lt;code&gt;getEffectiveAppearance&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; ことができ財産 &lt;code&gt;dark&lt;/code&gt; 、 &lt;code&gt;light&lt;/code&gt; または &lt;code&gt;unknown&lt;/code&gt; 。アプリケーションのmacOSの外観設定を決定します。これは、&lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsapplication/2967170-appearance?language=objc&quot;&gt;NSApplication.appearanceの&lt;/a&gt;値にマップされます。これを設定すると、システムのデフォルトと &lt;code&gt;getEffectiveAppearance&lt;/code&gt; の値が上書きされます。</target>
        </trans-unit>
        <trans-unit id="a83d77b9b22899d2c653fd47180c066513c13d08" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property that can be &lt;code&gt;system&lt;/code&gt;, &lt;code&gt;light&lt;/code&gt; or &lt;code&gt;dark&lt;/code&gt;. It is used to override and supersede the value that Chromium has chosen to use internally.</source>
          <target state="translated">&lt;code&gt;system&lt;/code&gt; 、 &lt;code&gt;light&lt;/code&gt; 、または &lt;code&gt;dark&lt;/code&gt; の &lt;code&gt;String&lt;/code&gt; プロパティ。これは、Chromiumが内部で使用するために選択した値をオーバーライドおよび置き換えるために使用されます。</target>
        </trans-unit>
        <trans-unit id="fc93ebd144aeb9b2fbec0739211022bfde9e48a0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property that defines an alternative title provided only to accessibility tools such as screen readers. This string is not directly visible to users.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; のみ、スクリーンリーダーなどのアクセシビリティツールに提供別のタイトルを定義するプロパティ。この文字列は、ユーザーには直接表示されません。</target>
        </trans-unit>
        <trans-unit id="1355c9dddaa8797f599ae539f83b83d0747b67b3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property that determines the pathname of the file the window represents, and the icon of the file will show in window's title bar.</source>
          <target state="translated">ウィンドウが表すファイルのパス名を決定する &lt;code&gt;String&lt;/code&gt; プロパティ。ファイルのアイコンは、ウィンドウのタイトルバーに表示されます。</target>
        </trans-unit>
        <trans-unit id="506f65df956c4b1d220a40699ecde41e8b6206f3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property that determines the save file path of the download item.</source>
          <target state="translated">ダウンロードアイテムの保存ファイルパスを決定する &lt;code&gt;String&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="f9e718893ddbf69d568e70dfcd23501fee23a708" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property that determines the title of the native window.</source>
          <target state="translated">ネイティブウィンドウのタイトルを決定する &lt;code&gt;String&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="5a7b5d776e99875f2315115a9b45c1aee8195964" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property that determines the user agent for this web page.</source>
          <target state="translated">このWebページのユーザーエージェントを決定する &lt;code&gt;String&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="95801c80e0bd078f8601d8b22a741fedef996851" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; property that indicates the current application's name, which is the name in the application's &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 型のアプリケーションの中の名前である現在のアプリケーションの名前、を示すプロパティ &lt;code&gt;package.json&lt;/code&gt; のファイルを。</target>
        </trans-unit>
        <trans-unit id="27bc2bdbf806fb05eb3b64f8d62986114190db45" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing Chrome's version string.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; Chromeのバージョン文字列を表します。</target>
        </trans-unit>
        <trans-unit id="2a8aa31bf36f33313707d62b2488583beeadccbe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing Electron's version string.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; エレクトロンのバージョン文字列を表します。</target>
        </trans-unit>
        <trans-unit id="802115ab9598e69eba639d96b935bcabe1220fec" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the HTTP status message.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; HTTPステータスメッセージを表します。</target>
        </trans-unit>
        <trans-unit id="df0e716f2abb9ed3c4462cfae93c31968121196c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the button's current text. Changing this value immediately updates the button in the touch bar.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; ボタンの現在のテキストを表します。この値を変更すると、タッチバーのボタンがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="f17b16c5a71debbe80f5f2ab0e0cda807c88adf1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the controls current segment style. Updating this value immediately updates the control in the touch bar.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; コントロール現在のセグメントのスタイルを表します。この値を更新すると、タッチバーのコントロールがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="202a8ba310066d9ed68f89671a1001898f2b7a7f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the current process's type, can be &lt;code&gt;&quot;browser&quot;&lt;/code&gt; (i.e. main process) or &lt;code&gt;&quot;renderer&quot;&lt;/code&gt;.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; 現在のプロセスのタイプを表すが、することができ &lt;code&gt;&quot;browser&quot;&lt;/code&gt; （すなわちメインプロセス）または &lt;code&gt;&quot;renderer&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4008620276b32b41298687275d470baafcdea11d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the current process's type, can be:</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 現在のプロセスのタイプを表すが、することができます：</target>
        </trans-unit>
        <trans-unit id="758a77a07d3d6a20b11ca12d1da3e0c1b3861257" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the current selection mode of the control. Can be &lt;code&gt;single&lt;/code&gt;, &lt;code&gt;multiple&lt;/code&gt; or &lt;code&gt;buttons&lt;/code&gt;.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; コントロールの現在の選択モードを表します。 &lt;code&gt;single&lt;/code&gt; 、 &lt;code&gt;multiple&lt;/code&gt; または &lt;code&gt;buttons&lt;/code&gt; にすることができます。</target>
        </trans-unit>
        <trans-unit id="de0f3ceafb17377d4b1d884d97e07268a1bc48f6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the description of the button to be read by a screen reader. Will only be read by screen readers if no label is set.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; スクリーンリーダーによって読み取られるボタンの説明を表します。ラベルが設定されていない場合にのみ、スクリーンリーダーで読み取られます。</target>
        </trans-unit>
        <trans-unit id="0cab128c3e959e7cd73154242b6a0a15c0c23530" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the description of the label to be read by a screen reader.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; スクリーンリーダーによって読み取られるラベルの説明を表します。</target>
        </trans-unit>
        <trans-unit id="5a437aac8319eda43c4ff64320564d7f0c952210" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the label's current text. Changing this value immediately updates the label in the touch bar.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; ラベルの現在のテキストを表します。この値を変更すると、タッチバーのラベルがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="bd3c17a269958c1f175ceb7dd2bf85dc51ff26c5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the menu items visible label.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; メニュー項目表示ラベルを表します。</target>
        </trans-unit>
        <trans-unit id="92d20667148fe308c56847cafb75fcf73cfc40b9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the mode of this scrubber. Updating this value immediately updates the control in the touch bar. Possible values:</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; このスクラバーのモードを示します。この値を更新すると、タッチバーのコントロールがすぐに更新されます。可能な値：</target>
        </trans-unit>
        <trans-unit id="2d5717e1542bfc08b79524e06c25fdc7c11dba1c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the path to the resources directory.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; リソースディレクトリへのパスを表します。</target>
        </trans-unit>
        <trans-unit id="203a7b0b9477537ba75344db53a8bdfc954d40f7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the popover's current button text. Changing this value immediately updates the popover in the touch bar.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; ポップオーバーの現在のボタンのテキストを表します。この値を変更すると、タッチバーのポップオーバーがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="10cdc47307d3c78612644c0cdeeeb686d9300d2a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the size of the spacer. Can be &lt;code&gt;small&lt;/code&gt;, &lt;code&gt;large&lt;/code&gt; or &lt;code&gt;flexible&lt;/code&gt;.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; のスペーサのサイズを表します。 &lt;code&gt;small&lt;/code&gt; 、 &lt;code&gt;large&lt;/code&gt; または &lt;code&gt;flexible&lt;/code&gt; ことができます。</target>
        </trans-unit>
        <trans-unit id="7815c314e3ef471f0180f175f4a57d8a37c0a879" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the slider's current text. Changing this value immediately updates the slider in the touch bar.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; 、スライダーの現在のテキストを表します。この値を変更すると、タッチバーのスライダーがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="aad706d173c8806da48d237bc4e8518de636f553" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the style that selected items in the scrubber should have. This style is overlayed on top of the scrubber item instead of being placed behind it. Updating this value immediately updates the control in the touch bar. Possible values:</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; スクラバー内の選択されたアイテムが持つべきスタイルを表します。このスタイルは、スクラバーアイテムの背後に配置されるのではなく、その上にオーバーレイされます。この値を更新すると、タッチバーのコントロールがすぐに更新されます。可能な値：</target>
        </trans-unit>
        <trans-unit id="79b5aad568cb215134ea9122e1b58a097a67b580" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the style that selected items in the scrubber should have. Updating this value immediately updates the control in the touch bar. Possible values:</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; スクラバー内の選択されたアイテムが持つべきスタイルを表します。この値を更新すると、タッチバーのコントロールがすぐに更新されます。可能な値：</target>
        </trans-unit>
        <trans-unit id="54d4d3feedc81974cac02a7d82ab7f1293d2e43e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the visible URL. Writing to this attribute initiates top-level navigation.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; 目に見えるURLを表します。この属性に書き込むと、トップレベルのナビゲーションが開始されます。</target>
        </trans-unit>
        <trans-unit id="e00b8b701e6e0323461df061eec3f8f5a4fbe7d9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; that sets the referrer URL for the guest page.</source>
          <target state="translated">ゲストページのリファラーURLを設定する &lt;code&gt;String&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b7d5bd1a42f379b35b237747464cd215a6532f0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; that sets the session used by the page. If &lt;code&gt;partition&lt;/code&gt; starts with &lt;code&gt;persist:&lt;/code&gt;, the page will use a persistent session available to all pages in the app with the same &lt;code&gt;partition&lt;/code&gt;. if there is no &lt;code&gt;persist:&lt;/code&gt; prefix, the page will use an in-memory session. By assigning the same &lt;code&gt;partition&lt;/code&gt;, multiple pages can share the same session. If the &lt;code&gt;partition&lt;/code&gt; is unset then default session of the app will be used.</source>
          <target state="translated">ページで使用されるセッションを設定する &lt;code&gt;String&lt;/code&gt; 。 &lt;code&gt;partition&lt;/code&gt; が &lt;code&gt;persist:&lt;/code&gt; で始まる場合、ページは、同じ &lt;code&gt;partition&lt;/code&gt; 持つアプリ内のすべてのページで使用できる永続セッションを使用します。 &lt;code&gt;persist:&lt;/code&gt; プレフィックスがない場合、ページはメモリ内セッションを使用します。同じ &lt;code&gt;partition&lt;/code&gt; 割り当てることにより、複数のページが同じセッションを共有できます。 &lt;code&gt;partition&lt;/code&gt; が設定されていない場合、アプリのデフォルトセッションが使用されます。</target>
        </trans-unit>
        <trans-unit id="25caa15b133af9156652c7ef78c3ecac3c47f6b4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; that sets the user agent for the guest page before the page is navigated to. Once the page is loaded, use the &lt;code&gt;setUserAgent&lt;/code&gt; method to change the user agent.</source>
          <target state="translated">ページに移動する前に、ゲストページのユーザーエージェントを設定する &lt;code&gt;String&lt;/code&gt; 。ページが読み込まれたら、 &lt;code&gt;setUserAgent&lt;/code&gt; メソッドを使用してユーザーエージェントを変更します。</target>
        </trans-unit>
        <trans-unit id="bf7bd9e78891a832ac9a6a21fe76f79b0618f25e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; that specifies a script that will be loaded before other scripts run in the guest page. The protocol of script's URL must be either &lt;code&gt;file:&lt;/code&gt; or &lt;code&gt;asar:&lt;/code&gt;, because it will be loaded by &lt;code&gt;require&lt;/code&gt; in guest page under the hood.</source>
          <target state="translated">A &lt;code&gt;String&lt;/code&gt; 他のスクリプトがゲストページで実行する前にロードされるスクリプトを指定します。スクリプトのURLのプロトコルは、 &lt;code&gt;file:&lt;/code&gt; または &lt;code&gt;asar:&lt;/code&gt; のいずれかである必要があります。これは、内部のゲストページで &lt;code&gt;require&lt;/code&gt; によってロードされるためです。</target>
        </trans-unit>
        <trans-unit id="4ad522d1da69b5f76e8588fed0e4c10b77952283" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; which is a comma separated list of strings which specifies the web preferences to be set on the webview. The full list of supported preference strings can be found in &lt;a href=&quot;api/browser-window#new-browserwindowoptions&quot;&gt;BrowserWindow&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; カンマでWebViewの上で設定するウェブの好みを指定する文字列のリストを分離しました。サポートされている設定文字列の完全なリストは、&lt;a href=&quot;api/browser-window#new-browserwindowoptions&quot;&gt;BrowserWindowにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="f586b5c0b585f03d749da9298cc82badef432683" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; which is a comma separated list of strings which specifies the web preferences to be set on the webview. The full list of supported preference strings can be found in &lt;a href=&quot;browser-window#new-browserwindowoptions&quot;&gt;BrowserWindow&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; カンマでWebViewの上で設定するウェブの好みを指定する文字列のリストを分離しました。サポートされている設定文字列の完全なリストは、&lt;a href=&quot;browser-window#new-browserwindowoptions&quot;&gt;BrowserWindowにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="73e48c390fe20e7cb0704390fcf8db3e074cd644" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; which is a list of strings which specifies the blink features to be disabled separated by &lt;code&gt;,&lt;/code&gt;. The full list of supported feature strings can be found in the &lt;a href=&quot;https://cs.chromium.org/chromium/src/third_party/blink/renderer/platform/runtime_enabled_features.json5?l=70&quot;&gt;RuntimeEnabledFeatures.json5&lt;/a&gt; file.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 点滅を指定する文字列のリストで区切っ無効にする特徴 &lt;code&gt;,&lt;/code&gt; 。サポートされている機能文字列の完全なリストは、&lt;a href=&quot;https://cs.chromium.org/chromium/src/third_party/blink/renderer/platform/runtime_enabled_features.json5?l=70&quot;&gt;RuntimeEnabledFeatures.json5&lt;/a&gt;ファイルにあります。</target>
        </trans-unit>
        <trans-unit id="c15c22a0e5afc9d949a861636cdcea51134ec949" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; which is a list of strings which specifies the blink features to be enabled separated by &lt;code&gt;,&lt;/code&gt;. The full list of supported feature strings can be found in the &lt;a href=&quot;https://cs.chromium.org/chromium/src/third_party/blink/renderer/platform/runtime_enabled_features.json5?l=70&quot;&gt;RuntimeEnabledFeatures.json5&lt;/a&gt; file.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 点滅を指定する文字列のリストで区切っ有効にする特徴 &lt;code&gt;,&lt;/code&gt; 。サポートされている機能文字列の完全なリストは、&lt;a href=&quot;https://cs.chromium.org/chromium/src/third_party/blink/renderer/platform/runtime_enabled_features.json5?l=70&quot;&gt;RuntimeEnabledFeatures.json5&lt;/a&gt;ファイルにあります。</target>
        </trans-unit>
        <trans-unit id="f15defcf23fb8fea0518f022bf99e96931c4fadb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; which is the user agent string Electron will use as a global fallback.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 電子がグローバルフォールバックとして使用するユーザーエージェント文字列です。</target>
        </trans-unit>
        <trans-unit id="46a7547b418771ed79645776348a9161b296a757" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String[]&lt;/code&gt; array representing the color picker's available colors to select. Changing this value immediately updates the color picker in the touch bar.</source>
          <target state="translated">&lt;code&gt;String[]&lt;/code&gt; を選択するカラーピッカーの使用可能な色を表す配列。この値を変更すると、タッチバーのカラーピッカーがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="758933bc381dfea5986fa09f5ddc5d3f30e06172" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String[]&lt;/code&gt; array which consists of all the known available spell checker languages. Providing a language code to the &lt;code&gt;setSpellCheckerLanaguages&lt;/code&gt; API that isn't in this array will result in an error.</source>
          <target state="translated">&lt;code&gt;String[]&lt;/code&gt; すべての既知の利用可能なスペルチェッカ言語から成るアレイ。この配列にない言語コードを &lt;code&gt;setSpellCheckerLanaguages&lt;/code&gt; APIに提供すると、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="af08e98c7bc4874350b3cd60262fbb041012ba06" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TouchBarItem&lt;/code&gt; that will replace the &quot;esc&quot; button on the touch bar when set. Setting to &lt;code&gt;null&lt;/code&gt; restores the default &quot;esc&quot; button. Changing this value immediately updates the escape item in the touch bar.</source>
          <target state="translated">A &lt;code&gt;TouchBarItem&lt;/code&gt; セットタッチバーに「ESC」ボタンを置き換えます。 &lt;code&gt;null&lt;/code&gt; に設定すると、デフォルトの「esc」ボタンが復元されます。この値を変更すると、タッチバーのエスケープアイテムがすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="725671b8dda96c752ffd0c33b3da7f079869dc39" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebContents | null&lt;/code&gt; property that represents the of DevTools &lt;code&gt;WebContents&lt;/code&gt; associated with a given &lt;code&gt;WebContents&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WebContents | null&lt;/code&gt; デベロッパーツール用の表すプロパティ &lt;code&gt;WebContents&lt;/code&gt; 所与関連付けられ &lt;code&gt;WebContents&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="f7164bcfe3147e7df97a79c41513ae8e1854d250" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebContents&lt;/code&gt; object this window owns. All web page related events and operations will be done via it.</source>
          <target state="translated">このウィンドウが所有する &lt;code&gt;WebContents&lt;/code&gt; オブジェクト。Webページに関連するすべてのイベントと操作は、それを介して行われます。</target>
        </trans-unit>
        <trans-unit id="cb72e19642139d3b5710682a4724e9091da48820" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebContents&lt;/code&gt; of DevTools for this &lt;code&gt;WebContents&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;WebContents&lt;/code&gt; のDevToolsの &lt;code&gt;WebContents&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b5863f54d267ed4d55dcca285283e0972f24bc2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebFrame | null&lt;/code&gt; representing next sibling frame, the property would be &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;webFrame&lt;/code&gt; is the last frame in its parent or if the next sibling is not in the current renderer process.</source>
          <target state="translated">A &lt;code&gt;WebFrame | null&lt;/code&gt; は次の兄弟フレームを表し、 &lt;code&gt;webFrame&lt;/code&gt; がその親の最後のフレームである場合、または次の兄弟が現在のレンダラープロセスにない場合、プロパティは &lt;code&gt;null&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="8fd0ea8dd1aae891cd7a0e58ace48009d0ee5387" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebFrame | null&lt;/code&gt; representing parent frame of &lt;code&gt;webFrame&lt;/code&gt;, the property would be &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;webFrame&lt;/code&gt; is top or parent is not in the current renderer process.</source>
          <target state="translated">A &lt;code&gt;WebFrame | null&lt;/code&gt; は &lt;code&gt;webFrame&lt;/code&gt; の親フレームを表し、 &lt;code&gt;webFrame&lt;/code&gt; が最上位であるか、親が現在のレンダラープロセスにない場合、プロパティは &lt;code&gt;null&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="9c517b2071d2f75bdb5acffcaccec64babdc3ac3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebFrame | null&lt;/code&gt; representing the first child frame of &lt;code&gt;webFrame&lt;/code&gt;, the property would be &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;webFrame&lt;/code&gt; has no children or if first child is not in the current renderer process.</source>
          <target state="translated">A &lt;code&gt;WebFrame | null&lt;/code&gt; の最初の子フレーム表す &lt;code&gt;webFrame&lt;/code&gt; は、プロパティは次のようになり &lt;code&gt;null&lt;/code&gt; の場合 &lt;code&gt;webFrame&lt;/code&gt; は子を持たないか、最初の子は、現在のレンダラープロセスにない場合。</target>
        </trans-unit>
        <trans-unit id="084ba4ca29de4920c94e7a232af75a1107de622b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebFrame | null&lt;/code&gt; representing the frame which opened &lt;code&gt;webFrame&lt;/code&gt;, the property would be &lt;code&gt;null&lt;/code&gt; if there's no opener or opener is not in the current renderer process.</source>
          <target state="translated">A &lt;code&gt;WebFrame | null&lt;/code&gt; は、 &lt;code&gt;webFrame&lt;/code&gt; を開いたフレームを表します。オープナーがない場合、またはオープナーが現在のレンダラープロセスにない場合、プロパティは &lt;code&gt;null&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="d73b3fdd461b4428652f1ad7acf3ac1eeb28d06a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebFrame | null&lt;/code&gt; representing top frame in frame hierarchy to which &lt;code&gt;webFrame&lt;/code&gt; belongs, the property would be &lt;code&gt;null&lt;/code&gt; if top frame is not in the current renderer process.</source>
          <target state="translated">A &lt;code&gt;WebFrame | null&lt;/code&gt; は、 &lt;code&gt;webFrame&lt;/code&gt; が属するフレーム階層の最上位フレームを表します。最上位フレームが現在のレンダラープロセスにない場合、プロパティは &lt;code&gt;null&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="0f6c10e7a89aee42d24a951af616eca078c42f66" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;checkbox&lt;/code&gt; menu item will toggle the &lt;code&gt;checked&lt;/code&gt; property on and off when selected.</source>
          <target state="translated">&lt;code&gt;checkbox&lt;/code&gt; メニュー項目が切り替わります &lt;code&gt;checked&lt;/code&gt; の上、選択したときにオフプロパティを。</target>
        </trans-unit>
        <trans-unit id="78342492537325ef5fdcad3fe3e37d8a9543cf7a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;radio&lt;/code&gt; menu item will turn on its &lt;code&gt;checked&lt;/code&gt; property when clicked, and will turn off that property for all adjacent items in the same menu.</source>
          <target state="translated">&lt;code&gt;radio&lt;/code&gt; メニュー項目は、そのオンにします &lt;code&gt;checked&lt;/code&gt; 、クリックすると財産、そして同じメニュー内のすべての隣接する項目について、そのプロパティをオフにします。</target>
        </trans-unit>
        <trans-unit id="f3214bc1bf50683d35da5d8950e47cf58af92b72" translate="yes" xml:space="preserve">
          <source>A Content Security Policy (CSP) is an additional layer of protection against cross-site-scripting attacks and data injection attacks. We recommend that they be enabled by any website you load inside Electron.</source>
          <target state="translated">コンテンツセキュリティポリシー(CSP)は、クロスサイトスクリプティング攻撃やデータインジェクション攻撃から保護するための追加レイヤです。当社では、Electron内部で読み込まれるすべてのウェブサイトでCSPを有効にすることを推奨しています。</target>
        </trans-unit>
        <trans-unit id="f674b9ec084ae8420194749ae79af34a84439d9d" translate="yes" xml:space="preserve">
          <source>A Good Editor</source>
          <target state="translated">良い編集者</target>
        </trans-unit>
        <trans-unit id="51eb57ee64726f892b9abdbddbffc77834efaae6" translate="yes" xml:space="preserve">
          <source>A WebView created in a renderer process that does not have Node.js integration enabled will not be able to enable integration itself. However, a WebView will always create an independent renderer process with its own &lt;code&gt;webPreferences&lt;/code&gt;.</source>
          <target state="translated">Node.js統合が有効になっていないレンダラープロセスで作成されたWebViewは、統合自体を有効にすることができません。ただし、WebViewは常に独自の &lt;code&gt;webPreferences&lt;/code&gt; を持つ独立したレンダラープロセスを作成します。</target>
        </trans-unit>
        <trans-unit id="81ecdce2811776d4f813023718cdc0ab38906965" translate="yes" xml:space="preserve">
          <source>A boilerplate is only a starting point - a canvas, so to speak - from which you build your application. They usually come in the form of a repository you can clone and customize to your heart's content.</source>
          <target state="translated">ボイラープレートは、アプリケーションを構築するための出発点、いわばキャンバスにすぎません。ボイラープレートは通常、リポジトリの形で提供され、クローンを作成したり、心ゆくまでカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="74508e936ea66dac9c96be6a594dcc1aa6f156cc" translate="yes" xml:space="preserve">
          <source>A bug fix comes into master that can be backported to the release branch. The patch is applied, and a new beta is published as &lt;code&gt;2.0.0-beta.2&lt;/code&gt;.</source>
          <target state="translated">マスターにはバグ修正が含まれており、リリースブランチにバックポートできます。パッチが適用され、新しいベータ版が &lt;code&gt;2.0.0-beta.2&lt;/code&gt; として公開されます。</target>
        </trans-unit>
        <trans-unit id="c2d159f4b2a3795beed2cb82e919156f545a6b9e" translate="yes" xml:space="preserve">
          <source>A collection of resources for learning about Chromium and tracking its development</source>
          <target state="translated">Chromiumについて学び、開発を追跡するためのリソース集</target>
        </trans-unit>
        <trans-unit id="0a0784378429c5d61f06dbd366aac623c775a561" translate="yes" xml:space="preserve">
          <source>A collection of resources for learning and using V8</source>
          <target state="translated">V8の学習と活用のためのリソース集</target>
        </trans-unit>
        <trans-unit id="e905bb791253049135679adec5246697a2f5de0f" translate="yes" xml:space="preserve">
          <source>A comma-separated list of &lt;code&gt;rules&lt;/code&gt; that control how hostnames are mapped.</source>
          <target state="translated">ホスト名のマッピング方法を制御する &lt;code&gt;rules&lt;/code&gt; コンマ区切りリスト。</target>
        </trans-unit>
        <trans-unit id="1ae7152ba0635a85c71b5fff6ddf797e07542714" translate="yes" xml:space="preserve">
          <source>A comma-separated list of servers for which delegation of user credentials is required. Without &lt;code&gt;*&lt;/code&gt; prefix the URL has to match exactly.</source>
          <target state="translated">ユーザー資格情報の委任が必要なサーバーのコンマ区切りのリスト。 &lt;code&gt;*&lt;/code&gt; プレフィックスがない場合、URLは完全に一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="f273e144cd8c374aa63ab350f92c28ea33585102" translate="yes" xml:space="preserve">
          <source>A comma-separated list of servers for which delegation of user credentials is required. Without &lt;code&gt;*&lt;/code&gt; prefix the url has to match exactly.</source>
          <target state="translated">ユーザー資格情報の委任が必要なサーバーのコンマ区切りリスト。 &lt;code&gt;*&lt;/code&gt; 接頭辞がない場合、URLは正確に一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="03b56789e5190e45007372e38ac19811a48d8a1d" translate="yes" xml:space="preserve">
          <source>A comma-separated list of servers for which integrated authentication is enabled.</source>
          <target state="translated">統合認証が有効になっているサーバーのコンマ区切りのリスト。</target>
        </trans-unit>
        <trans-unit id="f28c7132aca4f38870ac4617d0e3188c2b59cf02" translate="yes" xml:space="preserve">
          <source>A command line tool on the other hand continues to support you throughout the development and release. They are more helpful and supportive but enforce guidelines on how your code should be structured and built. &lt;em&gt;Especially for beginners, using a command line tool is likely to be helpful&lt;/em&gt;.</source>
          <target state="translated">一方、コマンドラインツールは、開発およびリリース全体を通じて引き続きサポートします。それらはより有用でサポート的ですが、コードの構造と構築方法に関するガイドラインを適用します。&lt;em&gt;特に初心者にとっては、コマンドラインツールを使用すると便利&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="a48e29786e7ac1310e14bc3be1c1dd7b3d2794de" translate="yes" xml:space="preserve">
          <source>A commit that has the text &lt;code&gt;BREAKING CHANGE:&lt;/code&gt; at the beginning of its optional body or footer section introduces a breaking API change (correlating with Major in semantic versioning). A breaking change can be part of commits of any type. e.g., a &lt;code&gt;fix:&lt;/code&gt;, &lt;code&gt;feat:&lt;/code&gt; &amp;amp; &lt;code&gt;chore:&lt;/code&gt; types would all be valid, in addition to any other type.</source>
          <target state="translated">テキスト &lt;code&gt;BREAKING CHANGE:&lt;/code&gt; を含むコミットは、オプションのボディまたはフッターセクションの先頭に、APIの互換性を壊す変更を導入します（セマンティックバージョニングのMajorに関連）。重大な変更は、あらゆるタイプのコミットの一部である可能性があります。たとえば、 &lt;code&gt;fix:&lt;/code&gt; 、 &lt;code&gt;feat:&lt;/code&gt; ＆ &lt;code&gt;chore:&lt;/code&gt; タイプは、他のタイプに加えて、すべて有効です。</target>
        </trans-unit>
        <trans-unit id="02512a1f6cd15ab6d57ad0ed5dd8c3986480c628" translate="yes" xml:space="preserve">
          <source>A common attack pattern is that the attacker convinces your app's users to interact with the app in such a way that it navigates to one of the attacker's pages. This is usually done via links, plugins, or other user-generated content.</source>
          <target state="translated">一般的な攻撃パターンは、攻撃者のページの1つに移動するように、攻撃者がアプリのユーザーを説得してアプリとのやりとりをさせることです。これは通常、リンク、プラグイン、またはその他のユーザーが作成したコンテンツを介して行われます。</target>
        </trans-unit>
        <trans-unit id="7bd78042a7cd51ab11e9c78a98d8068fe715f749" translate="yes" xml:space="preserve">
          <source>A cross-site-scripting (XSS) attack is more dangerous if an attacker can jump out of the renderer process and execute code on the user's computer. Cross-site-scripting attacks are fairly common - and while an issue, their power is usually limited to messing with the website that they are executed on. Disabling Node.js integration helps prevent an XSS from being escalated into a so-called &quot;Remote Code Execution&quot; (RCE) attack.</source>
          <target state="translated">クロスサイトスクリプティング(XSS)攻撃は、攻撃者がレンダラープロセスから飛び出してユーザーのコンピュータ上でコードを実行することができれば、より危険です。クロスサイトスクリプティング攻撃はかなり一般的な攻撃であり、問題ではありますが、その威力は通常、実行されたウェブサイトを混乱させることに限定されます。Node.js の統合を無効にすることで、XSS がいわゆる「リモートコード実行」(RCE)攻撃にエスカレートするのを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="58cd43ca539797ed3241ab1c4c0ff60543e4c673" translate="yes" xml:space="preserve">
          <source>A detailed look at our versioning policy and implementation.</source>
          <target state="translated">バージョニングの方針と実装について詳しく見ていきます。</target>
        </trans-unit>
        <trans-unit id="a80476fc980ae25e152e6360295dddd9f0b9a100" translate="yes" xml:space="preserve">
          <source>A few examples of how various semver ranges will pick up new releases:</source>
          <target state="translated">様々なセンバーレンジが新作をピックアップする例をいくつかご紹介します。</target>
        </trans-unit>
        <trans-unit id="67bac242eeb2864e2932023ef8e421cfb3b7fd67" translate="yes" xml:space="preserve">
          <source>A frameless window is a window that has no &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Chrome&quot;&gt;chrome&lt;/a&gt;, the parts of the window, like toolbars, that are not a part of the web page. These are options on the &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">フレームレスウィンドウは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Chrome&quot;&gt;クロム&lt;/a&gt;を含まないウィンドウであり、ツールバーのように、Webページの一部ではないウィンドウの部分です。これらは、&lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;クラスのオプションです。</target>
        </trans-unit>
        <trans-unit id="f0c3e2fcbb3df445ce7bdfaf69e25787cfdbfd51" translate="yes" xml:space="preserve">
          <source>A frameless window is a window that has no &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Chrome&quot;&gt;chrome&lt;/a&gt;, the parts of the window, like toolbars, that are not a part of the web page. These are options on the &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">フレームレス・ウィンドウには持っていないウィンドウである&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Chrome&quot;&gt;クロム&lt;/a&gt;、ウェブページの一部ではないツールバーのような窓の部分を、。これらは、&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;クラスのオプションです。</target>
        </trans-unit>
        <trans-unit id="8db549195c46bee1021ecc09e1979ac774bb161c" translate="yes" xml:space="preserve">
          <source>A good commit message should describe what changed and why. The Electron project uses &lt;a href=&quot;https://conventionalcommits.org/&quot;&gt;semantic commit messages&lt;/a&gt; to streamline the release process.</source>
          <target state="translated">良いコミットメッセージは、何が変わったのか、そしてその理由を説明するべきです。Electronプロジェクトは、&lt;a href=&quot;https://conventionalcommits.org/&quot;&gt;セマンティックコミットメッセージ&lt;/a&gt;を使用してリリースプロセスを合理化します。</target>
        </trans-unit>
        <trans-unit id="af7efdf2301b5f6dc3ccead48612b9ad9d6738ae" translate="yes" xml:space="preserve">
          <source>A list of strings which specifies the blink features to be disabled separated by &lt;code&gt;,&lt;/code&gt;. The full list of supported feature strings can be found in the &lt;a href=&quot;https://cs.chromium.org/chromium/src/third_party/WebKit/Source/platform/RuntimeEnabledFeatures.json5?l=62&quot;&gt;RuntimeEnabledFeatures.json5&lt;/a&gt; file.</source>
          <target state="translated">点滅を指定する文字列のリストを区切っ無効にする特徴 &lt;code&gt;,&lt;/code&gt; 。サポートされている機能文字列の完全なリストは、&lt;a href=&quot;https://cs.chromium.org/chromium/src/third_party/WebKit/Source/platform/RuntimeEnabledFeatures.json5?l=62&quot;&gt;RuntimeEnabledFeatures.json5&lt;/a&gt;ファイルにあります。</target>
        </trans-unit>
        <trans-unit id="a8c7e7b231eb83c776c80e5762bf023a3f974e8f" translate="yes" xml:space="preserve">
          <source>A list of strings which specifies the blink features to be enabled separated by &lt;code&gt;,&lt;/code&gt;. The full list of supported feature strings can be found in the &lt;a href=&quot;https://cs.chromium.org/chromium/src/third_party/WebKit/Source/platform/RuntimeEnabledFeatures.json5?l=62&quot;&gt;RuntimeEnabledFeatures.json5&lt;/a&gt; file.</source>
          <target state="translated">点滅を指定する文字列のリストを区切っ有効にする特徴 &lt;code&gt;,&lt;/code&gt; 。サポートされている機能文字列の完全なリストは、&lt;a href=&quot;https://cs.chromium.org/chromium/src/third_party/WebKit/Source/platform/RuntimeEnabledFeatures.json5?l=62&quot;&gt;RuntimeEnabledFeatures.json5&lt;/a&gt;ファイルにあります。</target>
        </trans-unit>
        <trans-unit id="aaa651f8dc5084d52c4ad45634e862e46e9bb39d" translate="yes" xml:space="preserve">
          <source>A list of strings which specifies the web preferences to be set on the webview, separated by &lt;code&gt;,&lt;/code&gt;. The full list of supported preference strings can be found in &lt;a href=&quot;browser-window#new-browserwindowoptions&quot;&gt;BrowserWindow&lt;/a&gt;.</source>
          <target state="translated">、で区切られた &lt;code&gt;,&lt;/code&gt; Webビューで設定されるWebプリファレンスを指定する文字列のリスト。サポートされている設定文字列の完全なリストは、&lt;a href=&quot;browser-window#new-browserwindowoptions&quot;&gt;BrowserWindowにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="4b517277d5b84d7bbe14e26e54bbfe26c7a6c23e" translate="yes" xml:space="preserve">
          <source>A major update came with version &lt;code&gt;v1.0.0&lt;/code&gt;. If you're not yet using this version, you should &lt;a href=&quot;https://electronjs.org/blog/electron-1-0&quot;&gt;read more about the &lt;code&gt;v1.0.0&lt;/code&gt; changes&lt;/a&gt;.</source>
          <target state="translated">メジャーアップデートはバージョン &lt;code&gt;v1.0.0&lt;/code&gt; に付属しています。このバージョンをまだ使用していない場合は&lt;a href=&quot;https://electronjs.org/blog/electron-1-0&quot;&gt;、 &lt;code&gt;v1.0.0&lt;/code&gt; の変更点について詳しく読む&lt;/a&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="a1aabc7f37118035ef94fb1eb70d98c9349c16c4" translate="yes" xml:space="preserve">
          <source>A modal window is a child window that disables parent window, to create a modal window, you have to set both &lt;code&gt;parent&lt;/code&gt; and &lt;code&gt;modal&lt;/code&gt; options:</source>
          <target state="translated">モーダルウィンドウは、親ウィンドウを無効にする子ウィンドウです。モーダルウィンドウを作成するには、 &lt;code&gt;parent&lt;/code&gt; オプションと &lt;code&gt;modal&lt;/code&gt; オプションの両方を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="85063faf4e7224ac000600b7b05ad1b285d33730" translate="yes" xml:space="preserve">
          <source>A new release branch is created that includes the latest set of features. It is published as &lt;code&gt;2.0.0-beta.1&lt;/code&gt;.</source>
          <target state="translated">最新の機能セットを含む新しいリリースブランチが作成されます。 &lt;code&gt;2.0.0-beta.1&lt;/code&gt; として公開されています。</target>
        </trans-unit>
        <trans-unit id="bd7d2820ee81966bc63e072c50168e6ae4964bc9" translate="yes" xml:space="preserve">
          <source>A note about &lt;code&gt;win_delay_load_hook&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;win_delay_load_hook&lt;/code&gt; に関するメモ</target>
        </trans-unit>
        <trans-unit id="09f5acc6907a290c72474780c39d6d1814cad09f" translate="yes" xml:space="preserve">
          <source>A note on pulling/pushing</source>
          <target state="translated">引く・押すの注意点</target>
        </trans-unit>
        <trans-unit id="7b8726db643800a81abc4c87e4c7907f25898a96" translate="yes" xml:space="preserve">
          <source>A preload script can accidentally leak privileged APIs to untrusted code, unless &lt;a href=&quot;../tutorial/security#3-enable-context-isolation-for-remote-content&quot;&gt;&lt;code&gt;contextIsolation&lt;/code&gt;&lt;/a&gt; is also enabled.</source>
          <target state="translated">&lt;a href=&quot;../tutorial/security#3-enable-context-isolation-for-remote-content&quot;&gt; &lt;code&gt;contextIsolation&lt;/code&gt; &lt;/a&gt;も有効になっていない限り、プリロードスクリプトは、特権APIを信頼できないコードに誤ってリークする可能性があります。</target>
        </trans-unit>
        <trans-unit id="f5aa93482f46bdd7a13831e47c4a3179847c517d" translate="yes" xml:space="preserve">
          <source>A preload script can accidentally leak privileged APIs to untrusted code, unless &lt;a href=&quot;tutorial/security#3-enable-context-isolation-for-remote-content&quot;&gt;&lt;code&gt;contextIsolation&lt;/code&gt;&lt;/a&gt; is also enabled.</source>
          <target state="translated">&lt;a href=&quot;tutorial/security#3-enable-context-isolation-for-remote-content&quot;&gt; &lt;code&gt;contextIsolation&lt;/code&gt; &lt;/a&gt;も有効になっていない限り、プリロードスクリプトは、特権APIを信頼できないコードに誤ってリークする可能性があります。</target>
        </trans-unit>
        <trans-unit id="9a85ab640f9b8a8bccc2df15b2853e9eeabf0c79" translate="yes" xml:space="preserve">
          <source>A preload script can accidentally leak privileged APIs to untrusted code.</source>
          <target state="translated">プリロードスクリプトは、信頼されていないコードに特権APIを誤って漏らす可能性があります。</target>
        </trans-unit>
        <trans-unit id="4dbcb3074201e1caf2440f469767199e78260694" translate="yes" xml:space="preserve">
          <source>A process is an instance of a computer program that is being executed. Electron apps that make use of the &lt;a href=&quot;#main-process&quot;&gt;main&lt;/a&gt; and one or many &lt;a href=&quot;#renderer-process&quot;&gt;renderer&lt;/a&gt; process are actually running several programs simultaneously.</source>
          <target state="translated">プロセスは、実行中のコンピュータプログラムのインスタンスです。&lt;a href=&quot;#main-process&quot;&gt;メイン&lt;/a&gt;と1つ以上の&lt;a href=&quot;#renderer-process&quot;&gt;レンダラー&lt;/a&gt;プロセスを利用するElectronアプリは、実際には複数のプログラムを同時に実行しています。</target>
        </trans-unit>
        <trans-unit id="db95d9368db3564c573bef245c78ce64974a5f6e" translate="yes" xml:space="preserve">
          <source>A progress bar enables a window to provide progress information to the user without the need of switching to the window itself.</source>
          <target state="translated">プログレスバーを使用すると、ウィンドウ自体に切り替えることなく、ユーザーに進捗情報を提供することができます。</target>
        </trans-unit>
        <trans-unit id="256212f099e179f71fa02e8c606a2f50b3966998" translate="yes" xml:space="preserve">
          <source>A protocol is registered to a specific Electron &lt;a href=&quot;api/session&quot;&gt;&lt;code&gt;session&lt;/code&gt;&lt;/a&gt; object. If you don't specify a session, then your &lt;code&gt;protocol&lt;/code&gt; will be applied to the default session that Electron uses. However, if you define a &lt;code&gt;partition&lt;/code&gt; or &lt;code&gt;session&lt;/code&gt; on your &lt;code&gt;browserWindow&lt;/code&gt;'s &lt;code&gt;webPreferences&lt;/code&gt;, then that window will use a different session and your custom protocol will not work if you just use &lt;code&gt;electron.protocol.XXX&lt;/code&gt;.</source>
          <target state="translated">プロトコルは特定のElectron&lt;a href=&quot;api/session&quot;&gt; &lt;code&gt;session&lt;/code&gt; &lt;/a&gt;オブジェクトに登録されます。セッションを指定しない場合、 &lt;code&gt;protocol&lt;/code&gt; はElectronが使用するデフォルトのセッションに適用されます。しかし、あなたが定義した場合 &lt;code&gt;partition&lt;/code&gt; または &lt;code&gt;session&lt;/code&gt; あなたの &lt;code&gt;browserWindow&lt;/code&gt; の &lt;code&gt;webPreferences&lt;/code&gt; をあなただけを使用する場合、ウィンドウは別のセッションを使用すると、カスタムプロトコルが動作しないこと、その後、 &lt;code&gt;electron.protocol.XXX&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="1ba988362efcfbc8d3b373fede81804006b94f22" translate="yes" xml:space="preserve">
          <source>A protocol is registered to a specific Electron &lt;a href=&quot;session&quot;&gt;&lt;code&gt;session&lt;/code&gt;&lt;/a&gt; object. If you don't specify a session, then your &lt;code&gt;protocol&lt;/code&gt; will be applied to the default session that Electron uses. However, if you define a &lt;code&gt;partition&lt;/code&gt; or &lt;code&gt;session&lt;/code&gt; on your &lt;code&gt;browserWindow&lt;/code&gt;'s &lt;code&gt;webPreferences&lt;/code&gt;, then that window will use a different session and your custom protocol will not work if you just use &lt;code&gt;electron.protocol.XXX&lt;/code&gt;.</source>
          <target state="translated">プロトコルは特定のElectron&lt;a href=&quot;session&quot;&gt; &lt;code&gt;session&lt;/code&gt; &lt;/a&gt;オブジェクトに登録されます。セッションを指定しない場合、 &lt;code&gt;protocol&lt;/code&gt; はElectronが使用するデフォルトのセッションに適用されます。しかし、あなたが定義した場合 &lt;code&gt;partition&lt;/code&gt; または &lt;code&gt;session&lt;/code&gt; あなたの &lt;code&gt;browserWindow&lt;/code&gt; の &lt;code&gt;webPreferences&lt;/code&gt; をあなただけを使用する場合、ウィンドウは別のセッションを使用すると、カスタムプロトコルが動作しないこと、その後、 &lt;code&gt;electron.protocol.XXX&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="ac067782a486369971224a42762a5f045d3b06b8" translate="yes" xml:space="preserve">
          <source>A sandboxed renderer doesn't have a Node.js environment running and doesn't expose Node.js JavaScript APIs to client code. The only exception is the preload script, which has access to a subset of the Electron renderer API.</source>
          <target state="translated">サンドボックス化されたレンダラーはNode.js環境を実行しておらず、クライアントコードにNode.js JavaScript APIを公開していません。唯一の例外はプリロード スクリプトで、Electron レンダラ API のサブセットにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="9b85d12915af5983a7f4b448634b400d763b2575" translate="yes" xml:space="preserve">
          <source>A sandboxed renderer doesn't have a node.js environment running and doesn't expose node.js JavaScript APIs to client code. The only exception is the preload script, which has access to a subset of the electron renderer API.</source>
          <target state="translated">サンドボックス化されたレンダラーはnode.js環境を実行しておらず、node.js JavaScript APIをクライアントコードに公開していません。唯一の例外はプリロード スクリプトで、電子レンダラー API のサブセットにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="a4c6ee33fac4637fa3484e9e7908001ceb7e9f1d" translate="yes" xml:space="preserve">
          <source>A security issue exists whenever you receive code from a remote destination and execute it locally. As an example, consider a remote website being displayed inside a &lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;. If an attacker somehow manages to change said content (either by attacking the source directly, or by sitting between your app and the actual destination), they will be able to execute native code on the user's machine.</source>
          <target state="translated">リモートの宛先からコードを受け取ってローカルで実行すると、セキュリティの問題が発生します。例として、&lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;内に表示されているリモートWebサイトについて考えてみます。攻撃者がなんらかの方法でコンテンツを変更した場合（ソースを直接攻撃するか、アプリと実際の宛先の間に座って）、ユーザーのマシンでネイティブコードを実行することができます。</target>
        </trans-unit>
        <trans-unit id="5d487536242cb0aa1d8bae1c5bdf3bfaec96f896" translate="yes" xml:space="preserve">
          <source>A security issue exists whenever you receive code from an untrusted source (e.g. a remote server) and execute it locally. As an example, consider a remote website being displayed inside a default &lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;. If an attacker somehow manages to change said content (either by attacking the source directly, or by sitting between your app and the actual destination), they will be able to execute native code on the user's machine.</source>
          <target state="translated">信頼できないソース（リモートサーバーなど）からコードを受信して​​ローカルで実行すると、セキュリティの問題が発生します。例として、デフォルトの&lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;内に表示されているリモートWebサイトについて考えてみます。攻撃者がなんらかの方法で（ソースを直接攻撃するか、アプリと実際の宛先の間に座って）上記のコンテンツを変更した場合、攻撃者はユーザーのマシンでネイティブコードを実行できるようになります。</target>
        </trans-unit>
        <trans-unit id="7d7cff130f76054e7cdaabfd440e6f18cfa40bfc" translate="yes" xml:space="preserve">
          <source>A security issue exists whenever you receive code from an untrusted source (e.g. a remote server) and execute it locally. As an example, consider a remote website being displayed inside a default &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;. If an attacker somehow manages to change said content (either by attacking the source directly, or by sitting between your app and the actual destination), they will be able to execute native code on the user's machine.</source>
          <target state="translated">信頼できないソース（リモートサーバーなど）からコードを受信して​​ローカルで実行すると、セキュリティの問題が発生します。例として、デフォルトの&lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;内に表示されているリモートWebサイトについて考えてみます。攻撃者がなんらかの方法で（ソースを直接攻撃するか、アプリと実際の宛先の間に座って）上記のコンテンツを変更した場合、攻撃者はユーザーのマシンでネイティブコードを実行できるようになります。</target>
        </trans-unit>
        <trans-unit id="7bde5d05caf698b31f0339ae82debe269795b9d5" translate="yes" xml:space="preserve">
          <source>A shared library that includes the &lt;a href=&quot;https://www.chromium.org/developers/content-module&quot;&gt;Chromium Content module&lt;/a&gt; and all its dependencies (e.g., Blink, &lt;a href=&quot;#v8&quot;&gt;V8&lt;/a&gt;, etc.). Also referred to as &quot;libcc&quot;.</source>
          <target state="translated">&lt;a href=&quot;https://www.chromium.org/developers/content-module&quot;&gt;Chromium Contentモジュール&lt;/a&gt;とそのすべての依存関係（Blink、&lt;a href=&quot;#v8&quot;&gt;V8&lt;/a&gt;など）を含む共有ライブラリ。「libcc」とも呼ばれます。</target>
        </trans-unit>
        <trans-unit id="ff10f01a2fcb6aa85eefe8000c2f0c481c781e5c" translate="yes" xml:space="preserve">
          <source>A standard scheme adheres to what RFC 3986 calls &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3&quot;&gt;generic URI syntax&lt;/a&gt;. For example &lt;code&gt;http&lt;/code&gt; and &lt;code&gt;https&lt;/code&gt; are standard schemes, while &lt;code&gt;file&lt;/code&gt; is not.</source>
          <target state="translated">標準スキームは、RFC 3986が&lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3&quot;&gt;汎用URI構文&lt;/a&gt;と呼ぶものに準拠しています。たとえば、 &lt;code&gt;http&lt;/code&gt; と &lt;code&gt;https&lt;/code&gt; は標準スキーム &lt;code&gt;file&lt;/code&gt; が、ファイルはそうではありません。</target>
        </trans-unit>
        <trans-unit id="f0d71b00e7055e1e09fc0d3325b2393d3f06f892" translate="yes" xml:space="preserve">
          <source>A typical example is Google Fonts. Many developers make use of Google's impressive collection of free fonts, which comes with a content delivery network. The pitch is straightforward: Include a few lines of CSS and Google will take care of the rest.</source>
          <target state="translated">その典型的な例がGoogle Fontsです。多くの開発者は、コンテンツ配信ネットワークに付属しているGoogleの印象的なフリーフォントのコレクションを活用しています。ピッチは簡単です。数行のCSSを入れれば、あとはGoogleが面倒を見てくれます。</target>
        </trans-unit>
        <trans-unit id="e2ab0c82e587954f512697920b8785268c8a7b57" translate="yes" xml:space="preserve">
          <source>A user activity can be continued only in an app that has the same developer Team ID as the activity's source app and that supports the activity's type. Supported activity types are specified in the app's &lt;code&gt;Info.plist&lt;/code&gt; under the &lt;code&gt;NSUserActivityTypes&lt;/code&gt; key.</source>
          <target state="translated">ユーザーアクティビティは、アクティビティのソースアプリと同じ開発者チームIDを持ち、アクティビティのタイプをサポートするアプリでのみ継続できます。サポートされているアクティビティタイプは、アプリの &lt;code&gt;Info.plist&lt;/code&gt; の &lt;code&gt;NSUserActivityTypes&lt;/code&gt; キーの下に指定されています。</target>
        </trans-unit>
        <trans-unit id="8fbb7c678404f3339ab257421735c28e0c2c984e" translate="yes" xml:space="preserve">
          <source>A value that links the webview to a specific webContents. When a webview first loads a new webContents is created and this attribute is set to its instance identifier. Setting this attribute on a new or existing webview connects it to the existing webContents that currently renders in a different webview.</source>
          <target state="translated">ウェブビューを特定の webContents にリンクする値です。ウェブビューが最初にロードされると新しい webContents が作成され、この属性はそのインスタンス識別子に設定されます。新規または既存のウェブビューにこの属性を設定すると、現在別のウェブビューでレンダリングしている既存のウェブコンテンツにリンクします。</target>
        </trans-unit>
        <trans-unit id="d8587a63b9d3b631bc035ef13fa6bb30a444a96b" translate="yes" xml:space="preserve">
          <source>A window in Electron is for instance created using the &lt;code&gt;BrowserWindow&lt;/code&gt; class. It is only available in the main process.</source>
          <target state="translated">Electronのウィンドウは、たとえば &lt;code&gt;BrowserWindow&lt;/code&gt; クラスを使用して作成されます。メインプロセスでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="a69e15c7e736ec56f257f235e48c0b3a5773581b" translate="yes" xml:space="preserve">
          <source>AES - &lt;a href=&quot;https://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf&quot;&gt;NIST SP 800-38A&lt;/a&gt;, &lt;a href=&quot;https://csrc.nist.gov/publications/nistpubs/800-38D/SP-800-38D.pdf&quot;&gt;NIST SP 800-38D&lt;/a&gt;, &lt;a href=&quot;https://www.ietf.org/rfc/rfc3394.txt&quot;&gt;RFC 3394&lt;/a&gt;</source>
          <target state="translated">AES- &lt;a href=&quot;https://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf&quot;&gt;NIST SP 800-38A&lt;/a&gt;、&lt;a href=&quot;https://csrc.nist.gov/publications/nistpubs/800-38D/SP-800-38D.pdf&quot;&gt;NIST SP 800-38D&lt;/a&gt;、&lt;a href=&quot;https://www.ietf.org/rfc/rfc3394.txt&quot;&gt;RFC 3394&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="c07293db1a28742922a27ebdb70840bd7e3d4738" translate="yes" xml:space="preserve">
          <source>API Changed: &lt;code&gt;contentTracing.getTraceBufferUsage()&lt;/code&gt; is now a promise</source>
          <target state="translated">APIが変更されました： &lt;code&gt;contentTracing.getTraceBufferUsage()&lt;/code&gt; が約束になりました</target>
        </trans-unit>
        <trans-unit id="06a9d465c8fc7e603b6f28034b6ea9e6828c35fd" translate="yes" xml:space="preserve">
          <source>API Changed: &lt;code&gt;electron.screen&lt;/code&gt; in the renderer process should be accessed via &lt;code&gt;remote&lt;/code&gt;</source>
          <target state="translated">APIが変更されました：レンダラープロセスの &lt;code&gt;electron.screen&lt;/code&gt; は &lt;code&gt;remote&lt;/code&gt; 経由でアクセスする必要があります</target>
        </trans-unit>
        <trans-unit id="ec3395a111be89b8f169945bfbcd9808e337f7e2" translate="yes" xml:space="preserve">
          <source>API Changed: &lt;code&gt;powerMonitor.querySystemIdleState&lt;/code&gt; is now &lt;code&gt;powerMonitor.getSystemIdleState&lt;/code&gt;</source>
          <target state="translated">APIが変更されました： &lt;code&gt;powerMonitor.querySystemIdleState&lt;/code&gt; が &lt;code&gt;powerMonitor.getSystemIdleState&lt;/code&gt; になりました</target>
        </trans-unit>
        <trans-unit id="6ecb2b3d88ca39cb52efd5419bdc1ea2f5a1e0a3" translate="yes" xml:space="preserve">
          <source>API Changed: &lt;code&gt;powerMonitor.querySystemIdleTime&lt;/code&gt; is now &lt;code&gt;powerMonitor.getSystemIdleTime&lt;/code&gt;</source>
          <target state="translated">APIが変更されました： &lt;code&gt;powerMonitor.querySystemIdleTime&lt;/code&gt; が &lt;code&gt;powerMonitor.getSystemIdleTime&lt;/code&gt; になりました</target>
        </trans-unit>
        <trans-unit id="e418591659609bedef716cd47872518c7e6f5029" translate="yes" xml:space="preserve">
          <source>API Changed: &lt;code&gt;require()&lt;/code&gt;ing node builtins in sandboxed renderers no longer implicitly loads the &lt;code&gt;remote&lt;/code&gt; version</source>
          <target state="translated">APIの変更：サンドボックスレンダラーに組み込まれている &lt;code&gt;require()&lt;/code&gt; ノードが &lt;code&gt;remote&lt;/code&gt; バージョンを暗黙的にロードしなくなりました</target>
        </trans-unit>
        <trans-unit id="f7377e85a074cd6763851ba16bbcc540dfa0ad09" translate="yes" xml:space="preserve">
          <source>API Changed: &lt;code&gt;session.clearAuthCache()&lt;/code&gt; no longer accepts options</source>
          <target state="translated">APIが変更されました： &lt;code&gt;session.clearAuthCache()&lt;/code&gt; はオプションを受け入れなくなりました</target>
        </trans-unit>
        <trans-unit id="48c3f71068c12d8d9b0446a67397a8e53c72a336" translate="yes" xml:space="preserve">
          <source>API Changed: &lt;code&gt;shell.openItem&lt;/code&gt; is now &lt;code&gt;shell.openPath&lt;/code&gt;</source>
          <target state="translated">APIが変更されました： &lt;code&gt;shell.openItem&lt;/code&gt; が &lt;code&gt;shell.openPath&lt;/code&gt; になりました</target>
        </trans-unit>
        <trans-unit id="19f6fab3badda8b9d9c872da88967271a42a9bcb" translate="yes" xml:space="preserve">
          <source>API Changed: &lt;code&gt;webFrame.setIsolatedWorldInfo&lt;/code&gt; replaces separate methods</source>
          <target state="translated">APIが変更されました： &lt;code&gt;webFrame.setIsolatedWorldInfo&lt;/code&gt; が個別のメソッドを置き換えます</target>
        </trans-unit>
        <trans-unit id="f4aa88ef82bfdb6ca2f25e469358d78e4a048ce0" translate="yes" xml:space="preserve">
          <source>API Changed: &lt;code&gt;webFrame.setSpellCheckProvider&lt;/code&gt; now takes an asynchronous callback</source>
          <target state="translated">APIが変更されました： &lt;code&gt;webFrame.setSpellCheckProvider&lt;/code&gt; が非同期コールバックを受け取るようになりました</target>
        </trans-unit>
        <trans-unit id="07cf82341d04c09c444550f183bbf11007f7db80" translate="yes" xml:space="preserve">
          <source>API Changed: &lt;code&gt;win.setMenu(null)&lt;/code&gt; is now &lt;code&gt;win.removeMenu()&lt;/code&gt;</source>
          <target state="translated">APIが変更されました： &lt;code&gt;win.setMenu(null)&lt;/code&gt; が &lt;code&gt;win.removeMenu()&lt;/code&gt; になりました</target>
        </trans-unit>
        <trans-unit id="c9b1fcfd2e6af3a924651487bab294e13b551725" translate="yes" xml:space="preserve">
          <source>API Changed: Registering privileged schemes must now be done before app ready</source>
          <target state="translated">APIが変更されました。特権スキームの登録は、アプリの準備が整う前に行わなければならないようになりました。</target>
        </trans-unit>
        <trans-unit id="983fb3d856cf06fcfb9be5d78952ec3fb5d81862" translate="yes" xml:space="preserve">
          <source>API Functions</source>
          <target state="translated">API関数</target>
        </trans-unit>
        <trans-unit id="00e6476b8e5d4a3355a04e22e10270dd7eecb11e" translate="yes" xml:space="preserve">
          <source>API Objects</source>
          <target state="translated">API オブジェクト</target>
        </trans-unit>
        <trans-unit id="b276f94cd8d0e74a21de6e5939b8c10ca9a975d6" translate="yes" xml:space="preserve">
          <source>API Reference</source>
          <target state="translated">API リファレンス</target>
        </trans-unit>
        <trans-unit id="151f482d1bd6531ef7d0824375cded28cbe6a903" translate="yes" xml:space="preserve">
          <source>API References</source>
          <target state="translated">API リファレンス</target>
        </trans-unit>
        <trans-unit id="50baff5790e37a308a4c3015ca9a89fd912f42ab" translate="yes" xml:space="preserve">
          <source>API Structures</source>
          <target state="translated">API構造</target>
        </trans-unit>
        <trans-unit id="18e1e0bef275aae137f49649daca52a870fb57aa" translate="yes" xml:space="preserve">
          <source>API classes or classes that are part of modules must be listed under a &lt;code&gt;## Class: TheClassName&lt;/code&gt; chapter.</source>
          <target state="translated">APIクラスまたはモジュールの一部であるクラスは、 &lt;code&gt;## Class: TheClassName&lt;/code&gt; 章にリストされている必要があります。</target>
        </trans-unit>
        <trans-unit id="9be128006a3cbbb330f5fb749e68e44c28e92d59" translate="yes" xml:space="preserve">
          <source>API references</source>
          <target state="translated">API リファレンス</target>
        </trans-unit>
        <trans-unit id="6beea8c03e4563ce3a98089561b5d0d387dd6d8b" translate="yes" xml:space="preserve">
          <source>API: Objects</source>
          <target state="translated">APIを使用しています。オブジェクト</target>
        </trans-unit>
        <trans-unit id="4ca0a1dafaea5e84f002eb1c3a7a92dd033b7a8c" translate="yes" xml:space="preserve">
          <source>APIs</source>
          <target state="translated">APIs</target>
        </trans-unit>
        <trans-unit id="e090627e9e6536e02ee30ffc3b757b024d70e367" translate="yes" xml:space="preserve">
          <source>APIs that requires extra unpacking are:</source>
          <target state="translated">余計なアンパックが必要なAPIは</target>
        </trans-unit>
        <trans-unit id="70a8b1a8d6ea99f47267995c91145323b5b43035" translate="yes" xml:space="preserve">
          <source>ASAR</source>
          <target state="translated">ASAR</target>
        </trans-unit>
        <trans-unit id="529898b443a57a26d85020fd99b4f87c18b2db61" translate="yes" xml:space="preserve">
          <source>ASAR stands for Atom Shell Archive Format. An &lt;a href=&quot;https://github.com/electron/asar&quot;&gt;asar&lt;/a&gt; archive is a simple &lt;code&gt;tar&lt;/code&gt;-like format that concatenates files into a single file. Electron can read arbitrary files from it without unpacking the whole file.</source>
          <target state="translated">ASARはAtom Shell Archive Formatの略です。&lt;a href=&quot;https://github.com/electron/asar&quot;&gt;ASAR&lt;/a&gt;アーカイブはシンプルである &lt;code&gt;tar&lt;/code&gt; 単一のファイルに連結しファイルという形式様。Electronは、ファイル全体を解凍することなく、任意のファイルを読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="fcf2f39d622209a6443c8b46cce67680140e6496" translate="yes" xml:space="preserve">
          <source>About Electron</source>
          <target state="translated">エレクトロンについて</target>
        </trans-unit>
        <trans-unit id="64efaef9ebab1c3693ce74bea11592326993ed25" translate="yes" xml:space="preserve">
          <source>Accelerator</source>
          <target state="translated">Accelerator</target>
        </trans-unit>
        <trans-unit id="c8db5f02c9a9e840f6b6668014e88cb13de67146" translate="yes" xml:space="preserve">
          <source>Accelerators are Strings that can contain multiple modifiers and a single key code, combined by the &lt;code&gt;+&lt;/code&gt; character, and are used to define keyboard shortcuts throughout your application.</source>
          <target state="translated">アクセラレータは、複数の修飾子と1つのキーコードを &lt;code&gt;+&lt;/code&gt; 文字で組み合わせて含めることができる文字列であり、アプリケーション全体でキーボードショートカットを定義するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b48b5de97781c64b2acd929b21c5c5a2df90a6ba" translate="yes" xml:space="preserve">
          <source>Accelerators are Strings that can contain multiple modifiers and key codes, combined by the &lt;code&gt;+&lt;/code&gt; character, and are used to define keyboard shortcuts throughout your application.</source>
          <target state="translated">アクセラレータは、 &lt;code&gt;+&lt;/code&gt; 文字で結合された複数の修飾子とキーコードを含むことができる文字列であり、アプリケーション全体でキーボードショートカットを定義するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2f81a22de0af5e9eab19326e19693f86ce612518" translate="yes" xml:space="preserve">
          <source>Access</source>
          <target state="translated">Access</target>
        </trans-unit>
        <trans-unit id="66c00b2de8e8a7a2ffc661e31c43f70781d1e15c" translate="yes" xml:space="preserve">
          <source>Access information about media sources that can be used to capture audio and video from the desktop using the &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt; &lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt; &lt;/a&gt; API を使用して、デスクトップからオーディオとビデオをキャプチャするために使用できるメディアソースに関する情報にアクセスします。</target>
        </trans-unit>
        <trans-unit id="09170aecfd3aafba38cff9e27d1845ea8b5759b6" translate="yes" xml:space="preserve">
          <source>Access information about media sources that can be used to capture audio and video from the desktop using the navigator.mediaDevices.getUserMedia API.</source>
          <target state="translated">navigator.mediaDevices.getUserMedia APIを使用して、デスクトップからオーディオやビデオをキャプチャするために使用できるメディアソースの情報にアクセスします。</target>
        </trans-unit>
        <trans-unit id="d660049bc1f2f54fc0e3f4ace6fa5eb205f2f1e0" translate="yes" xml:space="preserve">
          <source>Accessibility</source>
          <target state="translated">Accessibility</target>
        </trans-unit>
        <trans-unit id="58a10e2d4f47e5812f559d8593e5574ab71c656e" translate="yes" xml:space="preserve">
          <source>Accessibility concerns in Electron applications are similar to those of websites because they're both ultimately HTML. With Electron apps, however, you can't use the online resources for accessibility audits because your app doesn't have a URL to point the auditor to.</source>
          <target state="translated">Electronアプリケーションにおけるアクセシビリティの問題は、最終的にはHTMLであるため、Webサイトの問題と似ています。しかし、Electronアプリケーションでは、アクセシビリティ監査のためのオンラインリソースを使用することはできません。</target>
        </trans-unit>
        <trans-unit id="d5f7692ec519e39808f60b5cd18bbc101169eadc" translate="yes" xml:space="preserve">
          <source>Accessing built-in modules in the main process</source>
          <target state="translated">メインプロセスでの組み込みモジュールへのアクセス</target>
        </trans-unit>
        <trans-unit id="34074e23c812ae316f04ffea424f2ae5983b79d2" translate="yes" xml:space="preserve">
          <source>Acronym for Apple's Mac App Store. For details on submitting your app to the MAS, see the &lt;a href=&quot;tutorial/mac-app-store-submission-guide&quot;&gt;Mac App Store Submission Guide&lt;/a&gt;.</source>
          <target state="translated">AppleのMac App Storeの頭字語。アプリをMASに送信する方法の詳細については、&lt;a href=&quot;tutorial/mac-app-store-submission-guide&quot;&gt;Mac App Store Submission Guideを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b35abdb27129dd9ac6bb59b4153638ab56727161" translate="yes" xml:space="preserve">
          <source>Action Type</source>
          <target state="translated">アクションタイプ</target>
        </trans-unit>
        <trans-unit id="d1ded97f7f6aa68fb0cf093f75856129317f3b2c" translate="yes" xml:space="preserve">
          <source>Activate inspector on &lt;code&gt;host:port&lt;/code&gt;. Default is &lt;code&gt;127.0.0.1:9229&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;host:port&lt;/code&gt; でインスペクターをアクティブにします。デフォルトは &lt;code&gt;127.0.0.1:9229&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fd4803a34d2f524bb7d47517e9b600d7eb8682db" translate="yes" xml:space="preserve">
          <source>Activate inspector on host:port and break at start of user script. Default host:port is 127.0.0.1:9229.</source>
          <target state="translated">host:portでインスペクタを起動し、ユーザスクリプトの開始時にブレークします。デフォルトのhost:portは127.0.0.0.1:9229です。</target>
        </trans-unit>
        <trans-unit id="4a48a4e2e1b64d3997a1413d30926cb72db13a19" translate="yes" xml:space="preserve">
          <source>Activation policy types:</source>
          <target state="translated">アクティベーションポリシーの種類。</target>
        </trans-unit>
        <trans-unit id="f7c6afbf70bfab6b4963daee39aa6240f3d9fc79" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;plugins&lt;/code&gt; attribute to &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;plugins&lt;/code&gt; 属性を &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; タグに追加します。</target>
        </trans-unit>
        <trans-unit id="948f717826f2ffdefeafb6c77d74bb2bcd7b8047" translate="yes" xml:space="preserve">
          <source>Add Electron Switch</source>
          <target state="translated">エレクトロンスイッチを追加</target>
        </trans-unit>
        <trans-unit id="820daa8465af8ddf423ed909c16cbd030e7ff1e4" translate="yes" xml:space="preserve">
          <source>Add a thumbnail toolbar with a specified set of buttons to the thumbnail image of a window in a taskbar button layout. Returns a &lt;code&gt;Boolean&lt;/code&gt; object indicates whether the thumbnail has been added successfully.</source>
          <target state="translated">タスクバーボタンレイアウトのウィンドウのサムネイル画像に、指定したボタンセットのサムネイルツールバーを追加します。サムネイルが正常に追加されたかどうかを示す &lt;code&gt;Boolean&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="a2a892df1e55a27aaded9beb98242b1383969085" translate="yes" xml:space="preserve">
          <source>Add an image representation for a specific scale factor. This can be used to explicitly add different scale factor representations to an image. This can be called on empty images.</source>
          <target state="translated">特定のスケールファクターの画像表現を追加します。これを使用して、画像に異なるスケールファクターの表現を明示的に追加することができます。これは空の画像に対して呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="ee8e8205e0e132bf7f77662a971b3afec1b61201" translate="yes" xml:space="preserve">
          <source>Add an item to recent documents</source>
          <target state="translated">最近のドキュメントに項目を追加する</target>
        </trans-unit>
        <trans-unit id="374335464a6c88b4170e163b21848c8c48e7332d" translate="yes" xml:space="preserve">
          <source>Add electron's crashpad fork as a remote</source>
          <target state="translated">電子のクラッシュパッドフォークをリモートとして追加</target>
        </trans-unit>
        <trans-unit id="878da32733ea4d80742b63ef1ff6ee87bbd2f463" translate="yes" xml:space="preserve">
          <source>Add icons and context menus to the system's notification area.</source>
          <target state="translated">システムの通知領域にアイコンとコンテキストメニューを追加します。</target>
        </trans-unit>
        <trans-unit id="6569751ca01d23dea668817f10dbe09247ecd0f6" translate="yes" xml:space="preserve">
          <source>Add items to native application menus and context menus.</source>
          <target state="translated">ネイティブアプリケーションメニューやコンテキストメニューに項目を追加します。</target>
        </trans-unit>
        <trans-unit id="ffa30766f97da63df7e21f6a5215baa5e1769feb" translate="yes" xml:space="preserve">
          <source>Add more build flags to disable features in build-time.</source>
          <target state="translated">ビルド時に機能を無効にするビルドフラグを追加しました。</target>
        </trans-unit>
        <trans-unit id="cf3a27e7ea7b642cac86897a0fc7ad4f588deb95" translate="yes" xml:space="preserve">
          <source>Add the Recent Documents list to the application menu</source>
          <target state="translated">アプリケーションメニューに「最近使用したドキュメント」リストを追加する</target>
        </trans-unit>
        <trans-unit id="06ffc083635e0eb6fa71d02f293ad2dc58dd0955" translate="yes" xml:space="preserve">
          <source>Add the following lines to the &lt;code&gt;index.html&lt;/code&gt; file:</source>
          <target state="translated">次の行を &lt;code&gt;index.html&lt;/code&gt; ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="673715c9c85202188bc4b869ad4a7357c217ac2c" translate="yes" xml:space="preserve">
          <source>Add the new image to the Appveyor Cloud settings or modify an existing image to point to the new VHD.</source>
          <target state="translated">Appveyor Cloudの設定に新しいイメージを追加するか、既存のイメージを変更して新しいVHDを指すようにします。</target>
        </trans-unit>
        <trans-unit id="834ed9e60f012ab947d071542d22ed530085bbca" translate="yes" xml:space="preserve">
          <source>Add the patch file to the index:</source>
          <target state="translated">インデックスにパッチファイルを追加します。</target>
        </trans-unit>
        <trans-unit id="04788697397dd5c10808c9a5161fdc83a8ddd8c0" translate="yes" xml:space="preserve">
          <source>Add the patched code to the index &lt;em&gt;without&lt;/em&gt; committing:</source>
          <target state="translated">コミット&lt;em&gt;せず&lt;/em&gt;に、パッチを適用したコードをインデックスに追加します。</target>
        </trans-unit>
        <trans-unit id="b83ad279ef36b8de5f736408044e907217911c6f" translate="yes" xml:space="preserve">
          <source>Add the specified defaults to your application's &lt;code&gt;NSUserDefaults&lt;/code&gt;.</source>
          <target state="translated">指定したデフォルトをアプリケーションの &lt;code&gt;NSUserDefaults&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="ab33e70585aadcf81513a695287a7e83e78b4a72" translate="yes" xml:space="preserve">
          <source>Adding Features to Your App</source>
          <target state="translated">アプリに機能を追加する</target>
        </trans-unit>
        <trans-unit id="3670dc05970a1bd58a3b16b50684ae93513685b2" translate="yes" xml:space="preserve">
          <source>Adding Unpacked Files to &lt;code&gt;asar&lt;/code&gt; Archives</source>
          <target state="translated">&lt;code&gt;asar&lt;/code&gt; ファイルをasarアーカイブに追加する</target>
        </trans-unit>
        <trans-unit id="a7abbd095c2278638d0f18e9d811f3891bd5fb9f" translate="yes" xml:space="preserve">
          <source>Adding Unpacked Files to asar Archives</source>
          <target state="translated">asarアーカイブに解凍したファイルを追加する</target>
        </trans-unit>
        <trans-unit id="14f64f7749f6950354ee84b4b927642b15a5d466" translate="yes" xml:space="preserve">
          <source>Adding a new patch</source>
          <target state="translated">新しいパッチの追加</target>
        </trans-unit>
        <trans-unit id="137fec6b66361027c0a68047d6fbfea2eef9bd24" translate="yes" xml:space="preserve">
          <source>Additional Entitlements</source>
          <target state="translated">追加のエンタイトルメント</target>
        </trans-unit>
        <trans-unit id="911a0b354b810ade1b41221cd419095a4767144e" translate="yes" xml:space="preserve">
          <source>Additional information</source>
          <target state="translated">追加情報</target>
        </trans-unit>
        <trans-unit id="b74bde1c4b4ac4754feaeec3f280baff4a0c85ff" translate="yes" xml:space="preserve">
          <source>Additionally, it's possible for preload scripts to accidentally leak modules to a sandboxed renderer. Leaking &lt;code&gt;remote&lt;/code&gt; arms malicious code with a multitude of main process modules with which to perform an attack.</source>
          <target state="translated">さらに、プリロードスクリプトが誤ってモジュールをサンドボックス化されたレンダラーにリークする可能性があります。漏洩 &lt;code&gt;remote&lt;/code&gt; 攻撃を実行するメイン処理モジュールの多数有するアーム悪意のあるコード。</target>
        </trans-unit>
        <trans-unit id="9d6744f1b683b8de74b4c19bff8c596b11ddbaed" translate="yes" xml:space="preserve">
          <source>Additionally, on macOS, the visibility state also tracks the window occlusion state. If the window is occluded (i.e. fully covered) by another window, the visibility state will be &lt;code&gt;hidden&lt;/code&gt;. On other platforms, the visibility state will be &lt;code&gt;hidden&lt;/code&gt; only when the window is minimized or explicitly hidden with &lt;code&gt;win.hide()&lt;/code&gt;.</source>
          <target state="translated">さらに、macOSでは、可視状態もウィンドウのオクルージョン状態を追跡します。ウィンドウが別のウィンドウに &lt;code&gt;hidden&lt;/code&gt; いる（完全に覆われている）場合、可視状態は非表示になります。他のプラットフォームでは、ウィンドウが最小化さ &lt;code&gt;hidden&lt;/code&gt; いる場合、または &lt;code&gt;win.hide()&lt;/code&gt; で明示的に非表示にされている場合にのみ、可視状態が非表示になります。</target>
        </trans-unit>
        <trans-unit id="18cf176c046aad9b31ccad6de495aeeebb8f0a58" translate="yes" xml:space="preserve">
          <source>Additionally, setting the &lt;code&gt;Connection&lt;/code&gt; header to the value &lt;code&gt;upgrade&lt;/code&gt; is also disallowed.</source>
          <target state="translated">さらに、 &lt;code&gt;Connection&lt;/code&gt; ヘッダーを値の &lt;code&gt;upgrade&lt;/code&gt; に設定することも許可されていません。</target>
        </trans-unit>
        <trans-unit id="6a82014fb898f736ca40eb08858c25c17e208164" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;path&lt;/code&gt; to the recent documents list.</source>
          <target state="translated">最近のドキュメントリストに &lt;code&gt;path&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="324e5bbb82bf386763f827ee3efd5ddee27853c4" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;tasks&lt;/code&gt; to the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378460(v=vs.85).aspx#tasks&quot;&gt;Tasks&lt;/a&gt; category of the Jump List on Windows.</source>
          <target state="translated">Windowsのジャンプリストの&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378460(v=vs.85).aspx#tasks&quot;&gt;[タスク]&lt;/a&gt;カテゴリに &lt;code&gt;tasks&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="9a52f46436507532343932a1f2a4c12f8465eda3" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;tasks&lt;/code&gt; to the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378460(v=vs.85).aspx#tasks&quot;&gt;Tasks&lt;/a&gt; category of the JumpList on Windows.</source>
          <target state="translated">WindowsのJumpListの&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378460(v=vs.85).aspx#tasks&quot;&gt;Tasks&lt;/a&gt;カテゴリに &lt;code&gt;tasks&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="8661ba694b85aeb4d44ba97979591fc4f053b801" translate="yes" xml:space="preserve">
          <source>Adds Chrome extension located at &lt;code&gt;path&lt;/code&gt;, and returns extension's name.</source>
          <target state="translated">位置追加Chrome機能拡張 &lt;code&gt;path&lt;/code&gt; 、および拡張機能の名前を返します。</target>
        </trans-unit>
        <trans-unit id="902e3912f68f403688b93c146732942d184a2624" translate="yes" xml:space="preserve">
          <source>Adds DevTools extension located at &lt;code&gt;path&lt;/code&gt;, and returns extension's name.</source>
          <target state="translated">位置追加デベロッパーツールの拡張 &lt;code&gt;path&lt;/code&gt; 、および拡張機能の名前を返します。</target>
        </trans-unit>
        <trans-unit id="f8701c0a4e9270ff74b7ce680eef58691bcf2d35" translate="yes" xml:space="preserve">
          <source>Adds a chunk of data to the request body. The first write operation may cause the request headers to be issued on the wire. After the first write operation, it is not allowed to add or remove a custom header.</source>
          <target state="translated">データのチャンクをリクエストボディに追加します。最初の書き込み操作により、リクエストヘッダが有線で発行されることがあります。最初の書き込み操作の後、カスタムヘッダを追加したり削除したりすることはできません。</target>
        </trans-unit>
        <trans-unit id="bbd01302e42bbab6b2da4d66693069e9db01d42e" translate="yes" xml:space="preserve">
          <source>Adds a handler for an &lt;code&gt;invoke&lt;/code&gt;able IPC. This handler will be called whenever a renderer calls &lt;code&gt;ipcRenderer.invoke(channel, ...args)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;invoke&lt;/code&gt; なIPCのハンドラーを追加します。このハンドラーは、レンダラーが &lt;code&gt;ipcRenderer.invoke(channel, ...args)&lt;/code&gt; 呼び出すたびに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c6a92af8f0d3c8b8cae743afb2864899680a4181" translate="yes" xml:space="preserve">
          <source>Adds a one time &lt;code&gt;listener&lt;/code&gt; function for the event. This &lt;code&gt;listener&lt;/code&gt; is invoked only the next time a message is sent to &lt;code&gt;channel&lt;/code&gt;, after which it is removed.</source>
          <target state="translated">イベントに1回限りの &lt;code&gt;listener&lt;/code&gt; 関数を追加します。この &lt;code&gt;listener&lt;/code&gt; は、次にメッセージが &lt;code&gt;channel&lt;/code&gt; に送信されたときにのみ呼び出され、その後で削除されます。</target>
        </trans-unit>
        <trans-unit id="bc6198d9faba289f1e74a045ac87b3fdade6df4e" translate="yes" xml:space="preserve">
          <source>Adds a vibrancy effect to the browser window. Passing &lt;code&gt;null&lt;/code&gt; or an empty string will remove the vibrancy effect on the window.</source>
          <target state="translated">ブラウザウィンドウに鮮やかな効果を追加します。 &lt;code&gt;null&lt;/code&gt; または空の文字列を渡すと、ウィンドウのバイブレーション効果が削除されます。</target>
        </trans-unit>
        <trans-unit id="b749ab261a2398b02e2dab844eb8149e5b63a89d" translate="yes" xml:space="preserve">
          <source>Adds a window as a tab on this window, after the tab for the window instance.</source>
          <target state="translated">ウィンドウインスタンスのタブの後に、このウィンドウのタブとしてウィンドウを追加します。</target>
        </trans-unit>
        <trans-unit id="b8bfceb78055bc94c469d7bd47fdefb8dd8fa2ab" translate="yes" xml:space="preserve">
          <source>Adds an extra HTTP header. The header name will be issued as-is without lowercasing. It can be called only before first write. Calling this method after the first write will throw an error. If the passed value is not a &lt;code&gt;String&lt;/code&gt;, its &lt;code&gt;toString()&lt;/code&gt; method will be called to obtain the final value.</source>
          <target state="translated">HTTPヘッダーを追加します。ヘッダー名は小文字なしでそのまま発行されます。最初の書き込みの前にのみ呼び出すことができます。最初の書き込み後にこのメソッドを呼び出すと、エラーがスローされます。渡された値が &lt;code&gt;String&lt;/code&gt; でない場合、その &lt;code&gt;toString()&lt;/code&gt; メソッドが呼び出されて最終値が取得されます。</target>
        </trans-unit>
        <trans-unit id="b8cd316275eb1a4d50f23f64db09483932318787" translate="yes" xml:space="preserve">
          <source>Adds an extra HTTP header. The header name will issued as it is without lowercasing. It can be called only before first write. Calling this method after the first write will throw an error. If the passed value is not a &lt;code&gt;String&lt;/code&gt;, its &lt;code&gt;toString()&lt;/code&gt; method will be called to obtain the final value.</source>
          <target state="translated">追加のHTTPヘッダーを追加します。ヘッダー名は小文字なしでそのまま発行されます。最初の書き込みの前にのみ呼び出すことができます。最初の書き込み後にこのメソッドを呼び出すと、エラーがスローされます。渡された値が &lt;code&gt;String&lt;/code&gt; でない場合、その &lt;code&gt;toString()&lt;/code&gt; メソッドが呼び出され、最終的な値が取得されます。</target>
        </trans-unit>
        <trans-unit id="86196729674362740f63cc4c31199a5fc9a12351" translate="yes" xml:space="preserve">
          <source>Adds scripts that will be executed on ALL web contents that are associated with this session just before normal &lt;code&gt;preload&lt;/code&gt; scripts run.</source>
          <target state="translated">通常の &lt;code&gt;preload&lt;/code&gt; スクリプトが実行される直前に、このセッションに関連付けられているすべてのWebコンテンツで実行されるスクリプトを追加します。</target>
        </trans-unit>
        <trans-unit id="d9017b4661fc051a41505eb0ff14a7c8795cd113" translate="yes" xml:space="preserve">
          <source>Adds the specified path to DevTools workspace. Must be used after DevTools creation:</source>
          <target state="translated">指定したパスを DevTools ワークスペースに追加します。DevTools作成後に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="fbae89f253b361380c5267e1f6024edf4e51e60a" translate="yes" xml:space="preserve">
          <source>Admitting feature-flagged changes, that do not otherwise alter existing code paths, at most points in the beta cycle is okay. Users can explicitly enable those flags in their apps.</source>
          <target state="translated">ベータサイクルのほとんどの時点で、既存のコードパスを変更することなく、機能にフラグが付いた変更を認めることは問題ありません。ユーザーはアプリ内で明示的にフラグを有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="ce38a14cc47c692a0ccb0b16f36a92ff367ac53b" translate="yes" xml:space="preserve">
          <source>Admitting features of any sort after Week 3 in the beta cycle is 👎 without a very good reason.</source>
          <target state="translated">ベータサイクルの3週目以降の特徴を認めるのは、よっぽどの理由がないと👎。</target>
        </trans-unit>
        <trans-unit id="c38351c9c34a243924d79693267e4313bf4b7ecd" translate="yes" xml:space="preserve">
          <source>Admitting non-breaking-API changes before Week 3 in the beta cycle is okay, even if those changes have the potential to cause moderate side-effects</source>
          <target state="translated">ベータサイクルの第3週目までに非侵害API変更を認めることは、その変更が中等度の副作用を引き起こす可能性がある場合でも問題ありません。</target>
        </trans-unit>
        <trans-unit id="4d064726954a17487f94e931f5b157b733ec22ed" translate="yes" xml:space="preserve">
          <source>Advanced</source>
          <target state="translated">Advanced</target>
        </trans-unit>
        <trans-unit id="94a0490cf82243ec4f6158415fa60ea4640753cc" translate="yes" xml:space="preserve">
          <source>Advanced Notifications</source>
          <target state="translated">高度な通知</target>
        </trans-unit>
        <trans-unit id="99b0021e8fdff5ec6edaa329da8ecb296223d390" translate="yes" xml:space="preserve">
          <source>Advanced topics</source>
          <target state="translated">高度なトピック</target>
        </trans-unit>
        <trans-unit id="2c7500581f9b7d5c12f50dcd84909d7ec1642b7b" translate="yes" xml:space="preserve">
          <source>Advanced users of Electron can enable experimental Chromium features using the &lt;code&gt;experimentalFeatures&lt;/code&gt; and &lt;code&gt;experimentalCanvasFeatures&lt;/code&gt; properties.</source>
          <target state="translated">Electronの上級ユーザーは、 &lt;code&gt;experimentalFeatures&lt;/code&gt; および &lt;code&gt;experimentalCanvasFeatures&lt;/code&gt; プロパティを使用して、実験的なChromium機能を有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="fed662a60c5967cc122e9bc13b3045207508a832" translate="yes" xml:space="preserve">
          <source>Advanced users of Electron can enable experimental Chromium features using the &lt;code&gt;experimentalFeatures&lt;/code&gt; property.</source>
          <target state="translated">Electronの上級ユーザーは、 &lt;code&gt;experimentalFeatures&lt;/code&gt; プロパティを使用して実験的なChromium機能を有効にできます。</target>
        </trans-unit>
        <trans-unit id="40604522f2257ffe29e86f4f4812290ed9c290b1" translate="yes" xml:space="preserve">
          <source>Afrikaans</source>
          <target state="translated">Afrikaans</target>
        </trans-unit>
        <trans-unit id="7ada54e0b39ac5d2c3cce2c23ae471d0debd2d79" translate="yes" xml:space="preserve">
          <source>After building is done, you can find &lt;code&gt;Electron.app&lt;/code&gt; under &lt;code&gt;out/D&lt;/code&gt;.</source>
          <target state="translated">ビルドが完了すると、 &lt;code&gt;out/D&lt;/code&gt; の下に &lt;code&gt;Electron.app&lt;/code&gt; が見つかります。</target>
        </trans-unit>
        <trans-unit id="a14eec986ffa84c1f0e35d48c2fc609533d80376" translate="yes" xml:space="preserve">
          <source>After building is done, you can find &lt;code&gt;electron.exe&lt;/code&gt; under &lt;code&gt;out\D&lt;/code&gt; (debug target) or under &lt;code&gt;out\R&lt;/code&gt; (release target).</source>
          <target state="translated">ビルドが完了すると、 &lt;code&gt;out\D&lt;/code&gt; （デバッグターゲット）または &lt;code&gt;out\R&lt;/code&gt; （リリースターゲット）の下に &lt;code&gt;electron.exe&lt;/code&gt; が見つかります。</target>
        </trans-unit>
        <trans-unit id="40c6c78f967ed36c5b59b65da87a6fca3ebc154f" translate="yes" xml:space="preserve">
          <source>After building is done, you can find the &lt;code&gt;electron&lt;/code&gt; debug binary under &lt;code&gt;out/D&lt;/code&gt;.</source>
          <target state="translated">ビルドが完了すると、 &lt;code&gt;out/D&lt;/code&gt; の下に &lt;code&gt;electron&lt;/code&gt; デバッグバイナリが見つかります。</target>
        </trans-unit>
        <trans-unit id="d89a749caba99422011f1a3f5ba0404c490a178d" translate="yes" xml:space="preserve">
          <source>After bundling your app into Electron, you will want to rebrand Electron before distributing it to users.</source>
          <target state="translated">アプリをElectronにバンドルした後、ユーザーに配布する前にElectronのブランド名を変更することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c4c684fc9ddfc6f96315c350a4136f4f589a5c52" translate="yes" xml:space="preserve">
          <source>After completing all of the above, open your cross-compilation command prompt and run &lt;code&gt;set npm_config_arch=arm64&lt;/code&gt;. Then use &lt;code&gt;npm install&lt;/code&gt; to build your project as normal. As with cross-compiling x86 modules, you may need to remove &lt;code&gt;node_modules&lt;/code&gt; to force recompilation of native modules if they were previously compiled for another architecture.</source>
          <target state="translated">上記のすべてを完了したら、クロスコンパイルコマンドプロンプトを開き、 &lt;code&gt;set npm_config_arch=arm64&lt;/code&gt; を実行します。次に、 &lt;code&gt;npm install&lt;/code&gt; を使用して、通常どおりプロジェクトをビルドします。x86モジュールのクロスコンパイルと同様に、ネイティブモジュールが以前に別のアーキテクチャ用にコンパイルされていた場合は、 &lt;code&gt;node_modules&lt;/code&gt; を削除してネイティブモジュールを強制的に再コンパイルする必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="23fc41d06517812e09946d34b27945c79d822c5d" translate="yes" xml:space="preserve">
          <source>After finishing the preparation work, you can package your app by following &lt;a href=&quot;application-distribution&quot;&gt;Application Distribution&lt;/a&gt;, and then proceed to signing your app.</source>
          <target state="translated">準備作業が完了したら、&lt;a href=&quot;application-distribution&quot;&gt;アプリケーションの配布&lt;/a&gt;に従ってアプリをパッケージ化し、アプリの署名に進むことができます。</target>
        </trans-unit>
        <trans-unit id="a023dbf624af0c2405019f3bab5c89bcd4643f2f" translate="yes" xml:space="preserve">
          <source>After finishing the preparation work, you can package your app by following &lt;a href=&quot;tutorial/application-distribution&quot;&gt;Application Distribution&lt;/a&gt;, and then proceed to signing your app.</source>
          <target state="translated">準備作業が完了したら、&lt;a href=&quot;tutorial/application-distribution&quot;&gt;アプリケーション配布&lt;/a&gt;に従ってアプリをパッケージ化し、アプリへの署名に進むことができます。</target>
        </trans-unit>
        <trans-unit id="faf8afd2b53ebbbff307262d47e01f655fda598c" translate="yes" xml:space="preserve">
          <source>After getting the library files, you should pass the path to the file with &lt;code&gt;--widevine-cdm-path&lt;/code&gt; command line switch, and the library's version with &lt;code&gt;--widevine-cdm-version&lt;/code&gt; switch. The command line switches have to be passed before the &lt;code&gt;ready&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt; module gets emitted.</source>
          <target state="translated">ライブラリファイルを取得したら、 &lt;code&gt;--widevine-cdm-path&lt;/code&gt; コマンドラインスイッチを使用してファイルへのパスを渡し、 &lt;code&gt;--widevine-cdm-version&lt;/code&gt; スイッチを使用してライブラリのバージョンを渡す必要があります。 &lt;code&gt;app&lt;/code&gt; モジュールの &lt;code&gt;ready&lt;/code&gt; イベントが発行される前に、コマンドラインスイッチを渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="f5122a5b327328dfd949b63f4e75b2cfad4b57a9" translate="yes" xml:space="preserve">
          <source>After getting the plugin files, you should pass the &lt;code&gt;widevinecdmadapter&lt;/code&gt;'s path to Electron with &lt;code&gt;--widevine-cdm-path&lt;/code&gt; command line switch, and the plugin's version with &lt;code&gt;--widevine-cdm-version&lt;/code&gt; switch.</source>
          <target state="translated">プラグインファイルを取得した後、あなたが渡す必要があり &lt;code&gt;widevinecdmadapter&lt;/code&gt; さんと電子へのパス &lt;code&gt;--widevine-cdm-path&lt;/code&gt; コマンドラインスイッチ、および持つプラグインのバージョン &lt;code&gt;--widevine-cdm-version&lt;/code&gt; スイッチを。</target>
        </trans-unit>
        <trans-unit id="cf8e57db60d19c0828979609d71356561b4f3750" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, click on the title with &lt;code&gt;Command&lt;/code&gt; or &lt;code&gt;Control&lt;/code&gt; key pressed. You should see a popup with the file you just defined:</source>
          <target state="translated">Electronアプリケーションを起動した後、 &lt;code&gt;Command&lt;/code&gt; キーまたは &lt;code&gt;Control&lt;/code&gt; キーを押しながらタイトルをクリックします。定義したファイルを含むポップアップが表示されます。</target>
        </trans-unit>
        <trans-unit id="99710d96da3dedd7653ced13c4f9e12b3d26712a" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, if you open the terminal that you ran your Electron application from and press &lt;code&gt;Ctrl+I&lt;/code&gt; key combination, you will see that this key combination was successfully intercepted.</source>
          <target state="translated">Electronアプリケーションを起動した後、Electronアプリケーションを実行した端末を開き、 &lt;code&gt;Ctrl+I&lt;/code&gt; キーの組み合わせを押すと、このキーの組み合わせが正常に傍受されたことがわかります。</target>
        </trans-unit>
        <trans-unit id="a643132a09724a001a7f1fe289272490c4448ee0" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, if you press the defined key combination then open the terminal that you ran your Electron application from, you will see that Electron loves global shortcuts!</source>
          <target state="translated">Electronアプリケーションを起動した後、定義されたキーの組み合わせを押して、Electronアプリケーションを起動した端末を開くと、Electronがグローバルショートカットが大好きであることがわかります。</target>
        </trans-unit>
        <trans-unit id="1b74279d2d50ec900606abee9f62ab2773f49887" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, right click the application icon. You should see the custom menu you just defined:</source>
          <target state="translated">Electronアプリケーションを起動したら、アプリケーションアイコンを右クリックします。先ほど定義したカスタムメニューが表示されるはずです。</target>
        </trans-unit>
        <trans-unit id="16400319f8ca042e1a960d397ccf78b95ce2d4bd" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, right click the application icon. You should see the item you just added. In this guide, the item is a Markdown file located in the root of the project:</source>
          <target state="translated">Electronアプリケーションを起動したら、アプリケーションアイコンを右クリックします。先ほど追加したアイテムが表示されるはずです。このガイドでは、アイテムはプロジェクトのルートにあるMarkdownファイルです。</target>
        </trans-unit>
        <trans-unit id="16ba42cd55f269ac68c6a5e6161f6d524cb32993" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, try dragging and dropping the item from the BroswerWindow onto your desktop. In this guide, the item is a Markdown file located in the root of the project:</source>
          <target state="translated">Electronアプリケーションを起動した後、BroswerWindowのアイテムをデスクトップにドラッグ&amp;ドロップしてみてください。このガイドでは、アイテムはプロジェクトのルートにあるMarkdownファイルです。</target>
        </trans-unit>
        <trans-unit id="1bcf33e34b4107119ec20a1ae842e66d2d2d9738" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, you can change modes or reset the theme to system default by clicking corresponding buttons:</source>
          <target state="translated">Electronアプリケーションを起動した後、対応するボタンをクリックしてモードを変更したり、テーマをシステムデフォルトにリセットしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="619fa48460af1b0ac3efe5856b03d3f41f43caca" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, you should see the application menu along with the local shortcut you just defined:</source>
          <target state="translated">Electronアプリケーションを起動すると、先ほど定義したローカルショートカットとともにアプリケーションメニューが表示されます。</target>
        </trans-unit>
        <trans-unit id="1b899c9af911e66dde420963df004cb3782311bf" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, you should see the bar in the dock (macOS) or taskbar (Windows, Unity), indicating the progress percentage you just defined.</source>
          <target state="translated">Electronアプリケーションを起動すると、ドック(macOS)またはタスクバー(Windows、Unity)にバーが表示され、定義した進捗率が表示されます。</target>
        </trans-unit>
        <trans-unit id="a56e12031d806966c4843cc2ad3464c7ad1e0772" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, you should see the notification in the Console:</source>
          <target state="translated">Electronアプリケーションを起動すると、Consoleに通知が表示されます。</target>
        </trans-unit>
        <trans-unit id="cb16424630e23623fef602de9d82be72ccc66be7" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, you should see the notification:</source>
          <target state="translated">Electronアプリケーションを起動すると、通知が表示されます。</target>
        </trans-unit>
        <trans-unit id="6d78214901e72a116c75023b49c310122c4d913c" translate="yes" xml:space="preserve">
          <source>After re-uploading all distributions, publish again to upload the checksum file:</source>
          <target state="translated">すべてのディストリビューションを再アップロードした後、再度公開してチェックサムファイルをアップロードします。</target>
        </trans-unit>
        <trans-unit id="3d4eb4aea62759f5fc4603bd084f43bdfb67858e" translate="yes" xml:space="preserve">
          <source>After running the command, you will notice that a folder named &lt;code&gt;app.asar.unpacked&lt;/code&gt; was created together with the &lt;code&gt;app.asar&lt;/code&gt; file. It contains the unpacked files and should be shipped together with the &lt;code&gt;app.asar&lt;/code&gt; archive.</source>
          <target state="translated">コマンドを実行すると、 &lt;code&gt;app.asar&lt;/code&gt; .unpackedという名前の &lt;code&gt;app.asar.unpacked&lt;/code&gt; がapp.asarファイルとともに作成されていることがわかります。解凍されたファイルが含まれており、 &lt;code&gt;app.asar&lt;/code&gt; アーカイブと一緒に出荷されます。</target>
        </trans-unit>
        <trans-unit id="92f96f68e44a5806fd39a7d059f3ea95e3af35c1" translate="yes" xml:space="preserve">
          <source>After signing your app, you can use Application Loader to upload it to iTunes Connect for processing, making sure you have &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/CreatingiTunesConnectRecord.html&quot;&gt;created a record&lt;/a&gt; before uploading.</source>
          <target state="translated">アプリに署名した後、Application Loaderを使用してiTunes Connectにアップロードし、処理することができます。アップロードする前に&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/CreatingiTunesConnectRecord.html&quot;&gt;レコード&lt;/a&gt;を作成したことを確認してください。</target>
        </trans-unit>
        <trans-unit id="a293a4ec8e8b6a8a8de2a318e931864f3de3600a" translate="yes" xml:space="preserve">
          <source>After these steps, you can &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/SubmittingTheApp.html&quot;&gt;submit your app for review&lt;/a&gt;.</source>
          <target state="translated">これらの手順が&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/SubmittingTheApp.html&quot;&gt;完了したら、レビューのためにアプリを送信&lt;/a&gt;できます。</target>
        </trans-unit>
        <trans-unit id="4d1b4d449657d66a91609e011016b478d31cc850" translate="yes" xml:space="preserve">
          <source>After this, you can grant additional permissions for specific hosts. For example, if you are opening a BrowserWindow pointed at &lt;code&gt;https://example.com/&lt;/code&gt;, you can give that website exactly the abilities it needs, but no more.</source>
          <target state="translated">この後、特定のホストに追加のアクセス許可を付与できます。たとえば、 &lt;code&gt;https://example.com/&lt;/code&gt; //example.com/を指すBrowserWindowを開いている場合、そのWebサイトに必要な機能を正確に与えることができますが、それ以上はできません。</target>
        </trans-unit>
        <trans-unit id="c9c128d48c812c617b1832ef5ebec35e14a36822" translate="yes" xml:space="preserve">
          <source>After this, you can grant additional permissions for specific hosts. For example, if you are opening a BrowserWindow pointed at `&lt;a href=&quot;https://my-website.com/%22&quot;&gt;https://my-website.com/&quot;&lt;/a&gt;, you can give that website exactly the abilities it needs, but no more.</source>
          <target state="translated">この後、特定のホストに追加の権限を付与できます。たとえば、 ` &lt;a href=&quot;https://my-website.com/%22&quot;&gt;https://my-website.com/&quot;を&lt;/a&gt;指すBrowserWindowを開いている場合、そのWebサイトに必要な機能だけを提供できますが、それ以上は提供できません。</target>
        </trans-unit>
        <trans-unit id="fa14335e51b3aae82783690bd2dff34895454791" translate="yes" xml:space="preserve">
          <source>After you upgrade Electron, you usually need to rebuild the modules.</source>
          <target state="translated">Electronをアップグレードした後、通常はモジュールを再構築する必要があります。</target>
        </trans-unit>
        <trans-unit id="bd9009b541e96034bf4057607c597ff27dc1054c" translate="yes" xml:space="preserve">
          <source>Again, this list merely minimizes the risk, it does not remove it. If your goal is to display a website, a browser will be a more secure option.</source>
          <target state="translated">繰り返しになりますが、このリストは単にリスクを最小化するだけで、それを取り除くものではありません。あなたの目標がウェブサイトを表示することであれば、ブラウザはより安全なオプションになります。</target>
        </trans-unit>
        <trans-unit id="d71c45b3d8a817df46d53626270c2cc92e52793f" translate="yes" xml:space="preserve">
          <source>Albanian</source>
          <target state="translated">Albanian</target>
        </trans-unit>
        <trans-unit id="1cad6c4e7939ad17b2e596e6eb702cf9a26ca7e4" translate="yes" xml:space="preserve">
          <source>Aliased to &lt;code&gt;--debug-brk=[host:]port&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--debug-brk=[host:]port&lt;/code&gt; にエイリアスされます。</target>
        </trans-unit>
        <trans-unit id="c52f758dd28e3487756dc69b7a55f5382926a13d" translate="yes" xml:space="preserve">
          <source>Aliased to &lt;code&gt;--debug-port=[host:]port&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--debug-port=[host:]port&lt;/code&gt; にエイリアスされます。</target>
        </trans-unit>
        <trans-unit id="c8e352b3aba92c76e7bb94481be59de8da77729e" translate="yes" xml:space="preserve">
          <source>Aliased to &lt;code&gt;--debug[=[host:]port&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--debug[=[host:]port&lt;/code&gt; エイリアスされます。</target>
        </trans-unit>
        <trans-unit id="3759ad71533de07252d2f31954bd6adcfd5b7aad" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;js&lt;/code&gt; and &lt;code&gt;javascript&lt;/code&gt; code blocks are linted with &lt;a href=&quot;https://www.npmjs.com/package/standard-markdown&quot;&gt;standard-markdown&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;js&lt;/code&gt; および &lt;code&gt;javascript&lt;/code&gt; コードブロックは、&lt;a href=&quot;https://www.npmjs.com/package/standard-markdown&quot;&gt;standard-&lt;/a&gt; markdownでリントされます。</target>
        </trans-unit>
        <trans-unit id="f104641d0b8e1d36589f7e39b38c4e5533feeb7f" translate="yes" xml:space="preserve">
          <source>All Electron APIs are assigned a process type. Many of them can only be used from the main process, some of them only from a renderer process, some from both. The documentation for each individual API will state which process it can be used from.</source>
          <target state="translated">すべてのElectron APIにはプロセスタイプが割り当てられています。多くのAPIはメインプロセスからのみ使用でき、レンダラープロセスからのみ使用できるものもあれば、両方から使用できるものもあります。各APIのドキュメントには、どのプロセスから使用できるかが記載されています。</target>
        </trans-unit>
        <trans-unit id="bec6530249ad86eda3027442b01363ea01131989" translate="yes" xml:space="preserve">
          <source>All above methods remain non-deprecated when called from the main process.</source>
          <target state="translated">上記のすべてのメソッドは、メインプロセスから呼び出された場合には、非デプリケートのままになります。</target>
        </trans-unit>
        <trans-unit id="b227ec526de00ad1c4c8781d2a9067d829e005c9" translate="yes" xml:space="preserve">
          <source>All built-in modules of Node.js are supported in Web Workers, and &lt;code&gt;asar&lt;/code&gt; archives can still be read with Node.js APIs. However none of Electron's built-in modules can be used in a multi-threaded environment.</source>
          <target state="translated">Node.jsのすべての組み込みモジュールはWebワーカーでサポートされており、 &lt;code&gt;asar&lt;/code&gt; アーカイブはNode.js APIで引き続き読み取ることができます。ただし、エレクトロンの組み込みモジュールは、マルチスレッド環境では使用できません。</target>
        </trans-unit>
        <trans-unit id="4556a9ee4a97247f5f0005ee12e44b0b41ac8f06" translate="yes" xml:space="preserve">
          <source>All dates are our goals but there may be reasons for adjusting the stable deadline, such as security bugs.</source>
          <target state="translated">全ての日程が目標ですが、セキュリティ上のバグなど安定した期限を調整する理由があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="38cd61ee1480f09e6dc8a99109498853a996641a" translate="yes" xml:space="preserve">
          <source>All features of this API are supported.</source>
          <target state="translated">本APIのすべての機能がサポートされています。</target>
        </trans-unit>
        <trans-unit id="6928bed84aeb5d2e819b4be11bdd09337427e352" translate="yes" xml:space="preserve">
          <source>All header names are lowercased.</source>
          <target state="translated">すべてのヘッダ名は小文字になっています。</target>
        </trans-unit>
        <trans-unit id="36e05c6c19acac23719b4361b8f1b8422c9451d2" translate="yes" xml:space="preserve">
          <source>All level one properties of the &lt;code&gt;extra&lt;/code&gt; object in the &lt;code&gt;crashReporter&lt;/code&gt;&lt;code&gt;options&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;crashReporter&lt;/code&gt; &lt;code&gt;options&lt;/code&gt; オブジェクト内の &lt;code&gt;extra&lt;/code&gt; オブジェクトのすべてのレベル1プロパティ。</target>
        </trans-unit>
        <trans-unit id="6521806502b63e2e46fca4d2d94212d3baf81182" translate="yes" xml:space="preserve">
          <source>All methods that have a return value must start their description with &quot;Returns &lt;code&gt;[TYPE]&lt;/code&gt; - Return description&quot;</source>
          <target state="translated">戻り値を持つすべてのメソッドは、説明を「Returns &lt;code&gt;[TYPE]&lt;/code&gt; -Returndescription」で始める必要があります。</target>
        </trans-unit>
        <trans-unit id="1443536b274e69afd6d6111ced964b2b00f9137b" translate="yes" xml:space="preserve">
          <source>All mouse events happened in this window will be passed to the window below this window, but if this window has focus, it will still receive keyboard events.</source>
          <target state="translated">このウィンドウで発生したすべてのマウスイベントは、このウィンドウの下のウィンドウに渡されますが、このウィンドウにフォーカスがある場合は、キーボードイベントを受け取ることになります。</target>
        </trans-unit>
        <trans-unit id="fcb20fc0a346d4d4683301d9c6a6b8fdc7cac868" translate="yes" xml:space="preserve">
          <source>All new major and minor releases lines begin with a &lt;code&gt;-beta.N&lt;/code&gt; tag for &lt;code&gt;N &amp;gt;= 1&lt;/code&gt;. At that point, the feature set is &lt;strong&gt;locked&lt;/strong&gt;. That release line admits no further features, and focuses only on security and stability. e.g. &lt;code&gt;2.0.0-beta.1&lt;/code&gt;.</source>
          <target state="translated">新しいメジャーリリースとマイナーリリースのすべての行は、 &lt;code&gt;N &amp;gt;= 1&lt;/code&gt; &lt;code&gt;-beta.N&lt;/code&gt; タグで始まります。その時点で、機能セットは&lt;strong&gt;ロックされてい&lt;/strong&gt;ます。そのリリースラインはそれ以上の機能を認めておらず、セキュリティと安定性にのみ焦点を当てています。例： &lt;code&gt;2.0.0-beta.1&lt;/code&gt; 。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec75062b15d704dd0564687e9465e9b2024ce92b" translate="yes" xml:space="preserve">
          <source>All new major and minor releases lines begin with a beta series indicated by semver prerelease tags of &lt;code&gt;beta.N&lt;/code&gt;, e.g. &lt;code&gt;2.0.0-beta.1&lt;/code&gt;. After the first beta, subsequent beta releases must meet all of the following conditions:</source>
          <target state="translated">ベータシリーズはのsemverプレリリースタグで示されると、すべての新しいメジャーとマイナーリリースラインが始まる &lt;code&gt;beta.N&lt;/code&gt; 、例えば &lt;code&gt;2.0.0-beta.1&lt;/code&gt; 。最初のベータ版の後、後続のベータ版リリースは次のすべての条件を満たす必要があります。</target>
        </trans-unit>
        <trans-unit id="2fcdc40e74abd1bb0f666bebac40aa513f512287" translate="yes" xml:space="preserve">
          <source>All of &lt;a href=&quot;https://nodejs.org/api/&quot;&gt;Node.js's built-in modules&lt;/a&gt; are available in Electron and third-party node modules also fully supported as well (including the &lt;a href=&quot;../tutorial/using-native-node-modules&quot;&gt;native modules&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;https://nodejs.org/api/&quot;&gt;Node.jsの&lt;/a&gt;すべての組み込みモジュールは、Electronで利用でき、サードパーティのノードモジュールも完全にサポートされています（&lt;a href=&quot;../tutorial/using-native-node-modules&quot;&gt;ネイティブモジュール&lt;/a&gt;を含む）。</target>
        </trans-unit>
        <trans-unit id="5305b50ae610bb32c964326d35192dfc0d17f5d8" translate="yes" xml:space="preserve">
          <source>All of &lt;a href=&quot;https://nodejs.org/api/&quot;&gt;Node.js's built-in modules&lt;/a&gt; are available in Electron and third-party node modules also fully supported as well (including the &lt;a href=&quot;tutorial/using-native-node-modules&quot;&gt;native modules&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;https://nodejs.org/api/&quot;&gt;Node.jsの&lt;/a&gt;すべての組み込みモジュールはElectronで利用可能であり、サードパーティのノードモジュールも完全にサポートされています（&lt;a href=&quot;tutorial/using-native-node-modules&quot;&gt;ネイティブモジュール&lt;/a&gt;を含む）。</target>
        </trans-unit>
        <trans-unit id="9e05068eb327d173a9ff2e1b0a54ded3c5094167" translate="yes" xml:space="preserve">
          <source>All of Chromium's prebuilt binaries (&lt;code&gt;libchromiumcontent&lt;/code&gt;) are downloaded when running the bootstrap script. By default both static libraries and shared libraries will be downloaded and the final size should be between 800MB and 2GB depending on the platform.</source>
          <target state="translated">ブートストラップスクリプトを実行すると、Chromiumのすべてのビルド済みバイナリ（ &lt;code&gt;libchromiumcontent&lt;/code&gt; ）がダウンロードされます。デフォルトでは、静的ライブラリと共有ライブラリの両方がダウンロードされ、最終的なサイズはプラットフォームに応じて800MB〜2GBになります。</target>
        </trans-unit>
        <trans-unit id="7bd74dd54af7b4105317b31e93cd3c69b613302e" translate="yes" xml:space="preserve">
          <source>All patches to upstream projects in Electron are contained in the &lt;code&gt;patches/&lt;/code&gt; directory. Each subdirectory of &lt;code&gt;patches/&lt;/code&gt; contains several patch files, along with a &lt;code&gt;.patches&lt;/code&gt; file which lists the order in which the patches should be applied. Think of these files as making up a series of git commits that are applied on top of the upstream project after we check it out.</source>
          <target state="translated">Electronのアップストリームプロジェクトへのすべてのパッチは、 &lt;code&gt;patches/&lt;/code&gt; ディレクトリに含まれています。 &lt;code&gt;.patches&lt;/code&gt; &lt;code&gt;patches/&lt;/code&gt; 各サブディレクトリには、パッチを適用する順序をリストした.patchesファイルとともに、いくつかのパッチファイルが含まれています。これらのファイルは、チェックアウト後にアップストリームプロジェクトの上に適用される一連のgitコミットを構成するものと考えてください。</target>
        </trans-unit>
        <trans-unit id="c01457a9429a28579ea1097b429ed3dffa9a9276" translate="yes" xml:space="preserve">
          <source>All pull requests require approval from a &lt;a href=&quot;https://github.com/electron/electron/blob/master/.github/CODEOWNERS&quot;&gt;Code Owner&lt;/a&gt; of the area you modified in order to land. Whenever a maintainer reviews a pull request they may request changes. These may be small, such as fixing a typo, or may involve substantive changes. Such requests are intended to be helpful, but at times may come across as abrupt or unhelpful, especially if they do not include concrete suggestions on &lt;em&gt;how&lt;/em&gt; to change them.</source>
          <target state="translated">すべてのプルリクエストは、着陸するために変更したエリアの&lt;a href=&quot;https://github.com/electron/electron/blob/master/.github/CODEOWNERS&quot;&gt;コード所有者&lt;/a&gt;からの承認が必要です。メンテナがプルリクエストを確認するときはいつでも、変更をリクエストできます。これらは、タイプミスの修正などの小さなものである場合もあれば、実質的な変更を伴う場合もあります。このようなリクエストは役立つことを目的としていますが、特に変更&lt;em&gt;方法&lt;/em&gt;に関する具体的な提案が含まれていない場合は、突然または役に立たないことがあります。</target>
        </trans-unit>
        <trans-unit id="5f103f99c6bbe4edc2c70d098552b8a1b8b64942" translate="yes" xml:space="preserve">
          <source>All pull requests require approval from a &lt;a href=&quot;https://github.com/orgs/electron/teams/code-owners&quot;&gt;Code Owner&lt;/a&gt; of the area you modified in order to land. Whenever a maintainer reviews a pull request they may request changes. These may be small, such as fixing a typo, or may involve substantive changes. Such requests are intended to be helpful, but at times may come across as abrupt or unhelpful, especially if they do not include concrete suggestions on &lt;em&gt;how&lt;/em&gt; to change them.</source>
          <target state="translated">すべてのプルリクエストは、着陸するために変更したエリアの&lt;a href=&quot;https://github.com/orgs/electron/teams/code-owners&quot;&gt;コードオーナーの&lt;/a&gt;承認を必要とします。メンテナがプルリクエストをレビューするときはいつでも、彼らは変更をリクエストするかもしれません。これらは、タイプミスを修正するなど、小さい場合もあれば、実質的な変更を伴う場合もあります。このようなリクエストは役立つことを目的としていますが、特に変更&lt;em&gt;方法&lt;/em&gt;に関する具体的な提案が含まれていない場合は、突然または役に立たない場合があります。</target>
        </trans-unit>
        <trans-unit id="d92d2a76a6c52c24bc20d8a759628a20e603e819" translate="yes" xml:space="preserve">
          <source>All reactions between the embedder frame and &lt;code&gt;webview&lt;/code&gt; are asynchronous.</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; フレームとWebビュー間のすべての反応は非同期です。</target>
        </trans-unit>
        <trans-unit id="bdce740d38c3c07bba5fc86501e5077cc7f14e63" translate="yes" xml:space="preserve">
          <source>All supported release lines will accept external pull requests to backport fixes previously merged to &lt;code&gt;master&lt;/code&gt;, though this may be on a case-by-case basis for some older supported lines. All contested decisions around release line backports will be resolved by the &lt;a href=&quot;https://github.com/electron/governance/tree/master/wg-releases&quot;&gt;Releases Working Group&lt;/a&gt; as an agenda item at their weekly meeting the week the backport PR is raised.</source>
          <target state="translated">サポートされているすべてのリリースラインは、以前に &lt;code&gt;master&lt;/code&gt; にマージされた修正をバックポートするための外部プルリクエストを受け入れますが、これは一部の古いサポートされているラインではケースバイケースである可能性があります。リリースラインのバックポートに関して争われているすべての決定は、&lt;a href=&quot;https://github.com/electron/governance/tree/master/wg-releases&quot;&gt;リリースワーキンググループ&lt;/a&gt;によって、バックポートのPRが提起された週の毎週の会議の議題として解決されます。</target>
        </trans-unit>
        <trans-unit id="61a389aa8b69cfc4aab11012cb1846030d99286a" translate="yes" xml:space="preserve">
          <source>All the required information to generate a context menu is provided in the &lt;a href=&quot;../api/web-contents#event-context-menu&quot;&gt;&lt;code&gt;context-menu&lt;/code&gt;&lt;/a&gt; event on each &lt;code&gt;webContents&lt;/code&gt; instance. A small example of how to make a context menu with this information is provided below.</source>
          <target state="translated">コンテキストメニューを生成するために必要なすべての情報は、各 &lt;code&gt;webContents&lt;/code&gt; インスタンスの&lt;a href=&quot;../api/web-contents#event-context-menu&quot;&gt; &lt;code&gt;context-menu&lt;/code&gt; &lt;/a&gt;イベントで提供されます。この情報を使用してコンテキストメニューを作成する方法の簡単な例を以下に示します。</target>
        </trans-unit>
        <trans-unit id="8d9d5a980d5ecfb45526caf2468bd2a5c0286fee" translate="yes" xml:space="preserve">
          <source>All the required information to generate a context menu is provided in the &lt;a href=&quot;api/web-contents#event-context-menu&quot;&gt;&lt;code&gt;context-menu&lt;/code&gt;&lt;/a&gt; event on each &lt;code&gt;webContents&lt;/code&gt; instance. A small example of how to make a context menu with this information is provided below.</source>
          <target state="translated">コンテキストメニューを生成するために必要なすべての情報は、各 &lt;code&gt;webContents&lt;/code&gt; インスタンスの&lt;a href=&quot;api/web-contents#event-context-menu&quot;&gt; &lt;code&gt;context-menu&lt;/code&gt; &lt;/a&gt;イベントで提供されます。この情報を使用してコンテキストメニューを作成する方法の簡単な例を以下に示します。</target>
        </trans-unit>
        <trans-unit id="12cfc929ee428b893a4858c2bbab08bcfadedcf2" translate="yes" xml:space="preserve">
          <source>All three cases are covered by the same API - the &lt;a href=&quot;../api/browser-window#winsetprogressbarprogress-options&quot;&gt;&lt;code&gt;setProgressBar()&lt;/code&gt;&lt;/a&gt; method available on an instance of &lt;code&gt;BrowserWindow&lt;/code&gt;. To indicate your progress, call this method with a number between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;. For example, if you have a long-running task that is currently at 63% towards completion, you would call it as &lt;code&gt;setProgressBar(0.63)&lt;/code&gt;.</source>
          <target state="translated">3つのケースはすべて、同じAPI &lt;a href=&quot;../api/browser-window#winsetprogressbarprogress-options&quot;&gt; &lt;code&gt;setProgressBar()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; のインスタンスで使用可能なsetProgressBar（）メソッド）でカバーされています。あなたの進行状況を示すために、間の数で、このメソッドを呼び出して &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;1&lt;/code&gt; 。たとえば、現在完了に向けて63％になっている長時間実行タスクがある場合、それを &lt;code&gt;setProgressBar(0.63)&lt;/code&gt; と呼びます。</target>
        </trans-unit>
        <trans-unit id="5d61a103f99a79eacea0a4b0adf1ff255b968b82" translate="yes" xml:space="preserve">
          <source>All three cases are covered by the same API - the &lt;a href=&quot;api/browser-window#winsetprogressbarprogress-options&quot;&gt;&lt;code&gt;setProgressBar()&lt;/code&gt;&lt;/a&gt; method available on an instance of &lt;code&gt;BrowserWindow&lt;/code&gt;. To indicate your progress, call this method with a number between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;. For example, if you have a long-running task that is currently at 63% towards completion, you would call it as &lt;code&gt;setProgressBar(0.63)&lt;/code&gt;.</source>
          <target state="translated">3つのケースはすべて、同じAPI &lt;a href=&quot;api/browser-window#winsetprogressbarprogress-options&quot;&gt; &lt;code&gt;setProgressBar()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; のインスタンスで使用可能なsetProgressBar（）メソッド）でカバーされています。あなたの進行状況を示すために、間の数で、このメソッドを呼び出して &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;1&lt;/code&gt; 。たとえば、現在完了に向けて63％になっている長時間実行タスクがある場合、それを &lt;code&gt;setProgressBar(0.63)&lt;/code&gt; と呼びます。</target>
        </trans-unit>
        <trans-unit id="5c9e73b2af8730b73810277c255aba0b91b1e6b9" translate="yes" xml:space="preserve">
          <source>All three cases are covered by the same API - the &lt;code&gt;setProgressBar()&lt;/code&gt; method available on instances of &lt;code&gt;BrowserWindows&lt;/code&gt;. Call it with a number between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; to indicate your progress. If you have a long-running task that's currently at 63% towards completion, you'd call it with &lt;code&gt;setProgressBar(0.63)&lt;/code&gt;.</source>
          <target state="translated">3つのケースはすべて、同じAPI &lt;code&gt;setProgressBar()&lt;/code&gt; &lt;code&gt;BrowserWindows&lt;/code&gt; のインスタンスで使用可能なsetProgressBar（）メソッド）でカバーされています。進行状況を示すために、 &lt;code&gt;0&lt;/code&gt; から &lt;code&gt;1&lt;/code&gt; までの数値で呼び出します。現在、完了までに63％の長時間実行タスクがある場合は、 &lt;code&gt;setProgressBar(0.63)&lt;/code&gt; を使用して呼び出します。</target>
        </trans-unit>
        <trans-unit id="4d5a2ab15b33348f2c2afd3d6428028a2208a52c" translate="yes" xml:space="preserve">
          <source>All three operating systems provide means for applications to send notifications to the user. Electron conveniently allows developers to send notifications with the &lt;a href=&quot;https://notifications.spec.whatwg.org/&quot;&gt;HTML5 Notification API&lt;/a&gt;, using the currently running operating system's native notification APIs to display it.</source>
          <target state="translated">3つのオペレーティングシステムはすべて、アプリケーションがユーザーに通知を送信する手段を提供します。Electronを使用すると、開発者は、現在実行中のオペレーティングシステムのネイティブ通知APIを使用して、&lt;a href=&quot;https://notifications.spec.whatwg.org/&quot;&gt;HTML5通知API&lt;/a&gt;で通知を送信し、それを表示できます。</target>
        </trans-unit>
        <trans-unit id="2b392b2c76eb1f16ed0c9ddc9506c2c619a808a0" translate="yes" xml:space="preserve">
          <source>All three operating systems provide means for applications to send notifications to the user. The technique of showing notifications is different for the Main and Renderer processes.</source>
          <target state="translated">3つのオペレーティングシステムはすべて、アプリケーションがユーザーに通知を送信するための手段を提供しています。通知を表示する技術は、メインプロセスとレンダラプロセスで異なります。</target>
        </trans-unit>
        <trans-unit id="b400c91503b6fee795bf4105a53d0d4617d8d213" translate="yes" xml:space="preserve">
          <source>All windows will be closed immediately without asking the user, and the &lt;code&gt;before-quit&lt;/code&gt; and &lt;code&gt;will-quit&lt;/code&gt; events will not be emitted.</source>
          <target state="translated">すべてのウィンドウには、ユーザーを求めることなく、すぐに閉じられます、そして &lt;code&gt;before-quit&lt;/code&gt; と &lt;code&gt;will-quit&lt;/code&gt; イベントが放出されることはありません。</target>
        </trans-unit>
        <trans-unit id="04e4f7c3f87e90e72b1f55f7c791e633fc39a3db" translate="yes" xml:space="preserve">
          <source>All windows will be closed immediately without asking user and the &lt;code&gt;before-quit&lt;/code&gt; and &lt;code&gt;will-quit&lt;/code&gt; events will not be emitted.</source>
          <target state="translated">すべてのウィンドウには、ユーザーを求めることなく、すぐに閉鎖され、 &lt;code&gt;before-quit&lt;/code&gt; して &lt;code&gt;will-quit&lt;/code&gt; イベントが放出されることはありません。</target>
        </trans-unit>
        <trans-unit id="958d462c644da503f29f9570332bf7a6ae308fa5" translate="yes" xml:space="preserve">
          <source>All words in the page's title must be capitalized, except for conjunctions like &quot;of&quot; and &quot;and&quot; .</source>
          <target state="translated">ページのタイトルに含まれる単語は、「of」や「and」のような接続詞を除き、すべて大文字でなければなりません。</target>
        </trans-unit>
        <trans-unit id="9be596fd2b743e398c492fbe926ea753f854c314" translate="yes" xml:space="preserve">
          <source>Allows resuming &lt;code&gt;cancelled&lt;/code&gt; or &lt;code&gt;interrupted&lt;/code&gt; downloads from previous &lt;code&gt;Session&lt;/code&gt;. The API will generate a &lt;a href=&quot;api/download-item&quot;&gt;DownloadItem&lt;/a&gt; that can be accessed with the &lt;a href=&quot;#event-will-download&quot;&gt;will-download&lt;/a&gt; event. The &lt;a href=&quot;api/download-item&quot;&gt;DownloadItem&lt;/a&gt; will not have any &lt;code&gt;WebContents&lt;/code&gt; associated with it and the initial state will be &lt;code&gt;interrupted&lt;/code&gt;. The download will start only when the &lt;code&gt;resume&lt;/code&gt; API is called on the &lt;a href=&quot;api/download-item&quot;&gt;DownloadItem&lt;/a&gt;.</source>
          <target state="translated">前の &lt;code&gt;Session&lt;/code&gt; から &lt;code&gt;cancelled&lt;/code&gt; または &lt;code&gt;interrupted&lt;/code&gt; ダウンロードを再開できます。APIは、&lt;a href=&quot;#event-will-download&quot;&gt;will-download&lt;/a&gt;イベントでアクセスできる&lt;a href=&quot;api/download-item&quot;&gt;DownloadItem&lt;/a&gt;を生成します。&lt;a href=&quot;api/download-item&quot;&gt;DownloadItemは、&lt;/a&gt;任意の必要はありません &lt;code&gt;WebContents&lt;/code&gt; 、それに関連付けられているが、初期状態になります &lt;code&gt;interrupted&lt;/code&gt; 。ダウンロードは、&lt;a href=&quot;api/download-item&quot;&gt;DownloadItemで&lt;/a&gt; &lt;code&gt;resume&lt;/code&gt; APIが呼び出されたときにのみ開始されます。</target>
        </trans-unit>
        <trans-unit id="99ff7a6d34291f7dfd34538299c2044110426952" translate="yes" xml:space="preserve">
          <source>Allows resuming &lt;code&gt;cancelled&lt;/code&gt; or &lt;code&gt;interrupted&lt;/code&gt; downloads from previous &lt;code&gt;Session&lt;/code&gt;. The API will generate a &lt;a href=&quot;download-item&quot;&gt;DownloadItem&lt;/a&gt; that can be accessed with the &lt;a href=&quot;#event-will-download&quot;&gt;will-download&lt;/a&gt; event. The &lt;a href=&quot;download-item&quot;&gt;DownloadItem&lt;/a&gt; will not have any &lt;code&gt;WebContents&lt;/code&gt; associated with it and the initial state will be &lt;code&gt;interrupted&lt;/code&gt;. The download will start only when the &lt;code&gt;resume&lt;/code&gt; API is called on the &lt;a href=&quot;download-item&quot;&gt;DownloadItem&lt;/a&gt;.</source>
          <target state="translated">前の &lt;code&gt;Session&lt;/code&gt; から &lt;code&gt;cancelled&lt;/code&gt; または &lt;code&gt;interrupted&lt;/code&gt; ダウンロードを再開できます。APIは、&lt;a href=&quot;#event-will-download&quot;&gt;will-download&lt;/a&gt;イベントでアクセスできる&lt;a href=&quot;download-item&quot;&gt;DownloadItem&lt;/a&gt;を生成します。&lt;a href=&quot;download-item&quot;&gt;DownloadItemは、&lt;/a&gt;任意の必要はありません &lt;code&gt;WebContents&lt;/code&gt; 、それに関連付けられているが、初期状態になります &lt;code&gt;interrupted&lt;/code&gt; 。&lt;a href=&quot;download-item&quot;&gt;DownloadItemで&lt;/a&gt; &lt;code&gt;resume&lt;/code&gt; APIが呼び出されたときにのみ、ダウンロードが開始されます。</target>
        </trans-unit>
        <trans-unit id="85e266837977f2a150a2af212b5734ad35ab82f3" translate="yes" xml:space="preserve">
          <source>Also make sure that errors are &lt;a href=&quot;../api/auto-updater#event-error&quot;&gt;being handled&lt;/a&gt;. Here's an example for logging them to &lt;code&gt;stderr&lt;/code&gt;:</source>
          <target state="translated">また、エラーが&lt;a href=&quot;../api/auto-updater#event-error&quot;&gt;処理されている&lt;/a&gt;ことを確認してください。それらを &lt;code&gt;stderr&lt;/code&gt; にロギングする例を以下に示します。</target>
        </trans-unit>
        <trans-unit id="21edea844db25360196b6393c5b5a771a7d0ae0b" translate="yes" xml:space="preserve">
          <source>Also make sure that errors are &lt;a href=&quot;api/auto-updater#event-error&quot;&gt;being handled&lt;/a&gt;. Here's an example for logging them to &lt;code&gt;stderr&lt;/code&gt;:</source>
          <target state="translated">また、エラーが&lt;a href=&quot;api/auto-updater#event-error&quot;&gt;処理されている&lt;/a&gt;ことを確認してください。それらを &lt;code&gt;stderr&lt;/code&gt; に記録する例を次に示します。</target>
        </trans-unit>
        <trans-unit id="e13b36707a48689947a7c7f9875c8f1646984a00" translate="yes" xml:space="preserve">
          <source>Also note that native modules may have intermediate files produced which should not be included (as they would also need to be signed). If you use &lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt;electron-packager&lt;/a&gt; before version 8.1.0, add &lt;code&gt;--ignore=.+\.o$&lt;/code&gt; to your build step to ignore these files. Versions 8.1.0 and later ignores those files by default.</source>
          <target state="translated">また、ネイティブモジュールには、インクルードされるべきではない中間ファイルが生成される可能性があることにも注意してください（これらも署名する必要があるため）。バージョン8.1.0より前の&lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt;electron-packager&lt;/a&gt;を使用している場合は、ビルドステップに &lt;code&gt;--ignore=.+\.o$&lt;/code&gt; を追加して、これらのファイルを無視します。バージョン8.1.0以降では、これらのファイルはデフォルトで無視されます。</target>
        </trans-unit>
        <trans-unit id="e4edd8cb7d5b9efb421c4aa4c0f83d0f21a5e90f" translate="yes" xml:space="preserve">
          <source>Also note that native modules may have intermediate files produced which should not be included (as they would also need to be signed). If you use &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;electron-packager&lt;/a&gt; before version 8.1.0, add &lt;code&gt;--ignore=.+\.o$&lt;/code&gt; to your build step to ignore these files. Versions 8.1.0 and later ignore those files by default.</source>
          <target state="translated">また、ネイティブモジュールでは、含まれてはならない中間ファイルが生成される場合があることに注意してください（署名も必要になるため）。バージョン8.1.0より前の&lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;electron-packager&lt;/a&gt;を使用する場合は、ビルドステップに &lt;code&gt;--ignore=.+\.o$&lt;/code&gt; を追加して、これらのファイルを無視します。バージョン8.1.0以降では、デフォルトでこれらのファイルは無視されます。</target>
        </trans-unit>
        <trans-unit id="03958a876e543617a0084f384c505477292b795c" translate="yes" xml:space="preserve">
          <source>Also on Windows and Linux, you can use a &lt;code&gt;&amp;amp;&lt;/code&gt; in the top-level item name to indicate which letter should get a generated accelerator. For example, using &lt;code&gt;&amp;amp;File&lt;/code&gt; for the file menu would result in a generated &lt;code&gt;Alt-F&lt;/code&gt; accelerator that opens the associated menu. The indicated character in the button label gets an underline. The &lt;code&gt;&amp;amp;&lt;/code&gt; character is not displayed on the button label.</source>
          <target state="translated">また、WindowsおよびLinuxでは、最上位のアイテム名に &lt;code&gt;&amp;amp;&lt;/code&gt; を使用して、生成されたアクセラレータを取得する文字を指定できます。たとえば、ファイルメニューに &lt;code&gt;&amp;amp;File&lt;/code&gt; を使用すると、関連するメニューを開く &lt;code&gt;Alt-F&lt;/code&gt; アクセラレータが生成されます。ボタンラベルに示されている文字には下線が付きます。 &lt;code&gt;&amp;amp;&lt;/code&gt; 文字は、ボタンのラベルに表示されません。</target>
        </trans-unit>
        <trans-unit id="5b278fef9a440a6b7e1574433d8f76ee3cebdf56" translate="yes" xml:space="preserve">
          <source>Also, due to the usage of app sandboxing, the resources which can be accessed by the app are strictly limited; you can read &lt;a href=&quot;https://developer.apple.com/app-sandboxing/&quot;&gt;App Sandboxing&lt;/a&gt; for more information.</source>
          <target state="translated">また、アプリのサンドボックスを使用しているため、アプリがアクセスできるリソースは厳しく制限されています。詳細については、&lt;a href=&quot;https://developer.apple.com/app-sandboxing/&quot;&gt;アプリサンドボックス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a12e6ace5357d3d25c75da28f17a8bde0cf765eb" translate="yes" xml:space="preserve">
          <source>Also, on Windows, you'll need to set the environment variable &lt;code&gt;DEPOT_TOOLS_WIN_TOOLCHAIN=0&lt;/code&gt;. To do so, open &lt;code&gt;Control Panel&lt;/code&gt; &amp;rarr; &lt;code&gt;System and Security&lt;/code&gt; &amp;rarr; &lt;code&gt;System&lt;/code&gt; &amp;rarr; &lt;code&gt;Advanced system settings&lt;/code&gt; and add a system variable &lt;code&gt;DEPOT_TOOLS_WIN_TOOLCHAIN&lt;/code&gt; with value &lt;code&gt;0&lt;/code&gt;. This tells &lt;code&gt;depot_tools&lt;/code&gt; to use your locally installed version of Visual Studio (by default, &lt;code&gt;depot_tools&lt;/code&gt; will try to download a Google-internal version that only Googlers have access to).</source>
          <target state="translated">また、Windowsでは、環境変数 &lt;code&gt;DEPOT_TOOLS_WIN_TOOLCHAIN=0&lt;/code&gt; を設定する必要があります。これを行うには、開く &lt;code&gt;Control Panel&lt;/code&gt; &amp;rarr; &lt;code&gt;System and Security&lt;/code&gt; &amp;rarr; &lt;code&gt;System&lt;/code&gt; &amp;rarr; &lt;code&gt;Advanced system settings&lt;/code&gt; 、システム変数の追加 &lt;code&gt;DEPOT_TOOLS_WIN_TOOLCHAIN&lt;/code&gt; を値で &lt;code&gt;0&lt;/code&gt; 。これにより、ローカルにインストールされたバージョンのVisual Studioを使用するように &lt;code&gt;depot_tools&lt;/code&gt; に指示されます（デフォルトでは、 &lt;code&gt;depot_tools&lt;/code&gt; はGoogle社員のみがアクセスできるGoogle内部バージョンをダウンロードしようとします）。</target>
        </trans-unit>
        <trans-unit id="2b3a8bb1e51bdb06fe84c68588fb063e246b969d" translate="yes" xml:space="preserve">
          <source>Also, when naming the copy, use a name that indicates what the new image will contain (if that has changed) and date stamp.</source>
          <target state="translated">また、コピーの名前を付ける際には、新しい画像に何が含まれるか(変更されている場合)と日付スタンプを示す名前を使用してください。</target>
        </trans-unit>
        <trans-unit id="8551811aaf90eef079ad04d8840a6a20c5f389ed" translate="yes" xml:space="preserve">
          <source>Alternatively, if you're building your &lt;code&gt;snap&lt;/code&gt; with &lt;code&gt;strict&lt;/code&gt; confinement, you can use the &lt;code&gt;desktop-launch&lt;/code&gt; command:</source>
          <target state="translated">または、 &lt;code&gt;strict&lt;/code&gt; 制限で &lt;code&gt;snap&lt;/code&gt; を構築する場合は、 &lt;code&gt;desktop-launch&lt;/code&gt; コマンドを使用できます。</target>
        </trans-unit>
        <trans-unit id="a8f4fb5edf49872d23ed7ee64c0609c2e94cd268" translate="yes" xml:space="preserve">
          <source>Alternatively, pass an argument to run with your Electron binary that points to your app's folder. This eliminates the need to copy-paste your app into Electron's resource directory.</source>
          <target state="translated">または、アプリケーションのフォルダを指すElectronバイナリで実行するための引数を渡します。これにより、アプリをElectronのリソースディレクトリにコピーペーストする必要がなくなります。</target>
        </trans-unit>
        <trans-unit id="1e26e62e7be1483432f4c52207d368a8d6c40e3d" translate="yes" xml:space="preserve">
          <source>Alternatively, pass an argument to run with your electron binary that points to your app's folder. This eliminates the need to copy-paste your app into Electron's resource directory.</source>
          <target state="translated">または、アプリのフォルダを指す電子バイナリで実行するための引数を渡します。これにより、アプリをElectronのリソースディレクトリにコピーペーストする必要がなくなります。</target>
        </trans-unit>
        <trans-unit id="5fca5fecae6dcfec110cc27954f782281b8cfb2b" translate="yes" xml:space="preserve">
          <source>Alternatively, the command line argument &lt;code&gt;--enable-logging&lt;/code&gt; can be passed. More information is available in the &lt;a href=&quot;../api/command-line-switches#--enable-logging&quot;&gt;command line switches documentation&lt;/a&gt;.</source>
          <target state="translated">または、コマンドライン引数 &lt;code&gt;--enable-logging&lt;/code&gt; を渡すこともできます。詳細については、&lt;a href=&quot;../api/command-line-switches#--enable-logging&quot;&gt;コマンドラインスイッチのドキュメントを参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="82abed8a09f10513a1f704938401205a60750b1c" translate="yes" xml:space="preserve">
          <source>Alternatively, the command line argument &lt;code&gt;--enable-logging&lt;/code&gt; can be passed. More information is available in the &lt;a href=&quot;api/command-line-switches#--enable-logging&quot;&gt;command line switches documentation&lt;/a&gt;.</source>
          <target state="translated">または、コマンドライン引数 &lt;code&gt;--enable-logging&lt;/code&gt; を渡すこともできます。詳細については、&lt;a href=&quot;api/command-line-switches#--enable-logging&quot;&gt;コマンドラインスイッチのドキュメントを参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5fd883b6b649a770514535cbd2d4b48d8202ae9e" translate="yes" xml:space="preserve">
          <source>Alternatively, you can override the local cache. &lt;code&gt;@electron/get&lt;/code&gt; will cache downloaded binaries in a local directory to not stress your network. You can use that cache folder to provide custom builds of Electron or to avoid making contact with the network at all.</source>
          <target state="translated">または、ローカルキャッシュを上書きすることもできます。 &lt;code&gt;@electron/get&lt;/code&gt; は、ダウンロードしたバイナリをローカルディレクトリにキャッシュして、ネットワークにストレスを与えないようにします。そのキャッシュフォルダを使用して、Electronのカスタムビルドを提供したり、ネットワークとの接触をまったく回避したりできます。</target>
        </trans-unit>
        <trans-unit id="999884f872bbb35369f4083e397f030ae4429581" translate="yes" xml:space="preserve">
          <source>Alternatively, you can override the local cache. &lt;code&gt;electron-download&lt;/code&gt; will cache downloaded binaries in a local directory to not stress your network. You can use that cache folder to provide custom builds of Electron or to avoid making contact with the network at all.</source>
          <target state="translated">または、ローカルキャッシュを上書きできます。 &lt;code&gt;electron-download&lt;/code&gt; は、ダウンロードしたバイナリをローカルディレクトリにキャッシュして、ネットワークに負荷をかけないようにします。そのキャッシュフォルダーを使用して、Electronのカスタムビルドを提供したり、ネットワークとの接触をまったく回避したりできます。</target>
        </trans-unit>
        <trans-unit id="dac34ad0d88986a6b416812fdad22a5218c5bc71" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use mocha's &lt;code&gt;grep&lt;/code&gt; option to only run tests matching the given regular expression pattern:</source>
          <target state="translated">または、mochaの &lt;code&gt;grep&lt;/code&gt; オプションを使用して、指定された正規表現パターンに一致するテストのみを実行できます。</target>
        </trans-unit>
        <trans-unit id="bf26fa5135e1ced31b3095aa717e224cf91418e0" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the IPC primitives that are provided by Electron. To share data between the main and renderer processes, you can use the &lt;a href=&quot;api/ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt; modules. To communicate directly between web pages, you can send a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt; from one to the other, possibly via the main process using &lt;a href=&quot;api/ipc-renderer#ipcrendererpostmessagechannel-message-transfer&quot;&gt;&lt;code&gt;ipcRenderer.postMessage()&lt;/code&gt;&lt;/a&gt;. Subsequent communication over message ports is direct and does not detour through the main process.</source>
          <target state="translated">または、Electronが提供するIPCプリミティブを使用することもできます。メインとレンダラプロセス間でデータを共有するには、使用することができます&lt;a href=&quot;api/ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;api/ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt;モジュールを。Webページ間で直接通信するには、おそらく&lt;a href=&quot;api/ipc-renderer#ipcrendererpostmessagechannel-message-transfer&quot;&gt; &lt;code&gt;ipcRenderer.postMessage()&lt;/code&gt; &lt;/a&gt;を使用したメインプロセスを介して、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt;を一方から他方に送信できます。メッセージポートを介した後続の通信は直接であり、メインプロセスを迂回しません。</target>
        </trans-unit>
        <trans-unit id="1426ac5e9f2ee937bdd850a5b3c32bdeb76d62af" translate="yes" xml:space="preserve">
          <source>Alternatives on macOS</source>
          <target state="translated">macOSでの代替品</target>
        </trans-unit>
        <trans-unit id="f0c9364e4c7d45b41518beda923319dc17e4062b" translate="yes" xml:space="preserve">
          <source>Although the spellchecker itself does not send any typings, words or user input to Google services the hunspell dictionary files are downloaded from a Google CDN by default. If you want to avoid this you can provide an alternative URL to download the dictionaries from.</source>
          <target state="translated">spellchecker自体は入力や単語、ユーザー入力をGoogleサービスに送信することはありませんが、hunspell辞書ファイルはデフォルトでGoogle CDNからダウンロードされます。これを避けたい場合は、別のURLから辞書をダウンロードすることができます。</target>
        </trans-unit>
        <trans-unit id="13bf461c74324e0ccb378e9aad8ace8fb01a7d0f" translate="yes" xml:space="preserve">
          <source>Amharic</source>
          <target state="translated">Amharic</target>
        </trans-unit>
        <trans-unit id="a9646b533d95d73ecf65cf886268c16f1916c405" translate="yes" xml:space="preserve">
          <source>Amongst others, please shop around to find one that suits your needs, Google is your friend :)</source>
          <target state="translated">他の人の中で、あなたのニーズに合ったものを見つけるために周りに買い物をしてください、Googleはあなたの友人です :)</target>
        </trans-unit>
        <trans-unit id="0d5b948dc809f2e81a6646faaa04bbe7687d23f7" translate="yes" xml:space="preserve">
          <source>Amongst others, please shop around to find one that suits your needs, Google is your friend 😄</source>
          <target state="translated">中でも、自分に合ったものを見つけられるように、お店を回ってくださいね〜😄 Googleはお友達ですからね</target>
        </trans-unit>
        <trans-unit id="241262941b03222019102e3bae4cb36af2f73958" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://github.com/electron/asar&quot;&gt;asar&lt;/a&gt; archive is a simple tar-like format that concatenates files into a single file. Electron can read arbitrary files from it without unpacking the whole file.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/asar&quot;&gt;ASARの&lt;/a&gt;アーカイブは、単一のファイルに簡単なタール状形式そのファイルを連結しています。Electronは、ファイル全体を解凍することなく、任意のファイルを読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="7c495827a36c50c8199477141bd38cc8f6367724" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IncomingMessage&lt;/code&gt; instance has the following readable properties:</source>
          <target state="translated">アン &lt;code&gt;IncomingMessage&lt;/code&gt; のインスタンス、次の読み出し可能なプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="2fa0e1649b3201d23c500e2d1b1123acfe50fa83" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Integer&lt;/code&gt; indicating the HTTP protocol major version number.</source>
          <target state="translated">AN &lt;code&gt;Integer&lt;/code&gt; HTTPプロトコルメジャーバージョン番号を示します。</target>
        </trans-unit>
        <trans-unit id="8b792e8ca253d8a55a3403d8805964e856ee8506" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Integer&lt;/code&gt; indicating the HTTP protocol minor version number.</source>
          <target state="translated">アン &lt;code&gt;Integer&lt;/code&gt; HTTPプロトコルのマイナーバージョン番号を示します。</target>
        </trans-unit>
        <trans-unit id="b8afad54d3b0f900e2298dbafe8eb7771092c9a1" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Integer&lt;/code&gt; indicating the HTTP response status code.</source>
          <target state="translated">AN &lt;code&gt;Integer&lt;/code&gt; HTTPレスポンスステータスコードを示します。</target>
        </trans-unit>
        <trans-unit id="e51cc730c2b6784aaf85ddac820b6f458f8fd4a5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Integer&lt;/code&gt; property that returns the badge count for current app. Setting the count to &lt;code&gt;0&lt;/code&gt; will hide the badge.</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; 現在のアプリケーションのためのバッジの数を返すプロパティ。カウントを &lt;code&gt;0&lt;/code&gt; に設定すると、バッジが非表示になります。</target>
        </trans-unit>
        <trans-unit id="4999586eba9ee1883d57e47fd10e953b3eb9358d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Integer&lt;/code&gt; property that sets the frame rate of the web contents to the specified number. Only values between 1 and 60 are accepted.</source>
          <target state="translated">Webコンテンツのフレームレートを指定された数値に設定する &lt;code&gt;Integer&lt;/code&gt; プロパティ。1〜60の値のみが受け入れられます。</target>
        </trans-unit>
        <trans-unit id="cc1699a6a5beb9f594d56a584e1458f7a40a0c79" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Integer&lt;/code&gt; representing the currently selected segment. Changing this value immediately updates the control in the touch bar. User interaction with the touch bar will update this value automatically.</source>
          <target state="translated">AN &lt;code&gt;Integer&lt;/code&gt; 現在選択されているセグメントを表します。この値を変更すると、タッチバーのコントロールがすぐに更新されます。ユーザーがタッチバーを操作すると、この値が自動的に更新されます。</target>
        </trans-unit>
        <trans-unit id="f594f9ad644189119b2ca529658f94e7a47ce197" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Integer&lt;/code&gt; representing the unique frame id in the current renderer process. Distinct WebFrame instances that refer to the same underlying frame will have the same &lt;code&gt;routingId&lt;/code&gt;.</source>
          <target state="translated">AN &lt;code&gt;Integer&lt;/code&gt; 現在のレンダラプロセスにおける固有のフレームIDを表します。同じ基になるフレームを参照する別個のWebFrameインスタンスは、同じ &lt;code&gt;routingId&lt;/code&gt; を持ちます。</target>
        </trans-unit>
        <trans-unit id="3ebd7a143c277afd653d8bf76558d5b32672ca18" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Object&lt;/code&gt; representing the response HTTP headers. The &lt;code&gt;headers&lt;/code&gt; object is formatted as follows:</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 応答HTTPヘッダーを表します。 &lt;code&gt;headers&lt;/code&gt; 次のようにオブジェクトがフォーマットされています。</target>
        </trans-unit>
        <trans-unit id="d5cde8eeb7216d2b1ff73e1c6a40e52bffa68205" translate="yes" xml:space="preserve">
          <source>An Apple Disk Image is a packaging format used by macOS. DMG files are commonly used for distributing application &quot;installers&quot;. &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;electron-builder&lt;/a&gt; supports &lt;code&gt;dmg&lt;/code&gt; as a build target.</source>
          <target state="translated">Apple Disk Imageは、macOSで使用されるパッケージ形式です。DMGファイルは一般に、アプリケーションの「インストーラー」を配布するために使用されます。&lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;electron-builder&lt;/a&gt;は、ビルドターゲットとして &lt;code&gt;dmg&lt;/code&gt; をサポートしています。</target>
        </trans-unit>
        <trans-unit id="297c67e77d1dbd6d9dc4308303aac94439c52bd8" translate="yes" xml:space="preserve">
          <source>An IPC system for communicating intra- or inter-process, and that's important because Chrome is keen on being able to split its work into separate processes or not, depending on memory pressures etc.</source>
          <target state="translated">プロセス内またはプロセス間で通信するための IPC システムで、Chrome はメモリの圧力などに応じて、作業を別のプロセスに分けることができるかどうかを重視しているため、これは重要なことです。</target>
        </trans-unit>
        <trans-unit id="21b18e13fa500130080a5c31825571bd36617f9d" translate="yes" xml:space="preserve">
          <source>An alternate transport for Chrome's remote debugging protocol.</source>
          <target state="translated">Chrome のリモート デバッグ プロトコルの代替トランスポート。</target>
        </trans-unit>
        <trans-unit id="05beb2abfd438756a288739255c6e36593e65e77" translate="yes" xml:space="preserve">
          <source>An app can make customizations to sandboxed renderers using a preload script. Here's an example:</source>
          <target state="translated">アプリは、プリロード スクリプトを使用して、サンドボックス化されたレンダラーにカスタマイズを加えることができます。ここに例を示します。</target>
        </trans-unit>
        <trans-unit id="fcb01e30a815db73859a0232c30b61cd57627815" translate="yes" xml:space="preserve">
          <source>An app developed with &lt;code&gt;1.8.1&lt;/code&gt; cannot take the &lt;code&gt;1.8.3&lt;/code&gt; bug fix without either absorbing the &lt;code&gt;1.8.2&lt;/code&gt; feature, or by backporting the fix and maintaining a new release line.</source>
          <target state="translated">&lt;code&gt;1.8.1&lt;/code&gt; で開発されたアプリは、 &lt;code&gt;1.8.2&lt;/code&gt; の機能を吸収せずに、または修正をバックポートして新しいリリースラインを維持することなく、 &lt;code&gt;1.8.3&lt;/code&gt; のバグ修正を行うことはできません。</target>
        </trans-unit>
        <trans-unit id="4c914b07abecc2f290522fe40f1b246962bdd05c" translate="yes" xml:space="preserve">
          <source>An application built with an older version of Electron, Chromium, and Node.js is an easier target than an application that is using more recent versions of those components. Generally speaking, security issues and exploits for older versions of Chromium and Node.js are more widely available.</source>
          <target state="translated">古いバージョンのElectron、Chromium、Node.jsを使用して構築されたアプリケーションは、これらのコンポーネントの最新バージョンを使用しているアプリケーションよりも容易に標的にされます。一般的に、古いバージョンの Chromium や Node.js のセキュリティ問題やエクスプロイトは、より広く利用できるようになっています。</target>
        </trans-unit>
        <trans-unit id="b7a9d187f243bd64f552e0e923dc4f460b98cde3" translate="yes" xml:space="preserve">
          <source>An example TraceConfig that roughly matches what Chrome DevTools records:</source>
          <target state="translated">Chrome DevTools の記録とほぼ一致する TraceConfig の例。</target>
        </trans-unit>
        <trans-unit id="4501baf842bcaef9335a520edf13561437b0ac4f" translate="yes" xml:space="preserve">
          <source>An example lifecycle in pictures:</source>
          <target state="translated">写真で見るライフサイクルの例。</target>
        </trans-unit>
        <trans-unit id="2c69e86fcc7f2460516831c5a5f409ac20aeb053" translate="yes" xml:space="preserve">
          <source>An example of &lt;code&gt;webContents.printToPDF&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;webContents.printToPDF&lt;/code&gt; の例：</target>
        </trans-unit>
        <trans-unit id="19dbcbc68c54808717b921a7fc276c6348e93a4c" translate="yes" xml:space="preserve">
          <source>An example of a complex API object is shown below:</source>
          <target state="translated">複雑なAPIオブジェクトの例を以下に示します。</target>
        </trans-unit>
        <trans-unit id="372f9205e9f04a68affd6f8fa9db703c0af87185" translate="yes" xml:space="preserve">
          <source>An example of activating the window of primary instance when a second instance starts:</source>
          <target state="translated">セカンドインスタンスの起動時にプライマリインスタンスのウィンドウをアクティブにする例。</target>
        </trans-unit>
        <trans-unit id="125d52e07df76f5828edc9392e28e867df507f7c" translate="yes" xml:space="preserve">
          <source>An example of adding &lt;code&gt;User-Agent&lt;/code&gt; header for requests:</source>
          <target state="translated">リクエストに &lt;code&gt;User-Agent&lt;/code&gt; ヘッダーを追加する例：</target>
        </trans-unit>
        <trans-unit id="01ae8975423781882fad85b5cd3335ac33cea46a" translate="yes" xml:space="preserve">
          <source>An example of creating a window that fills the whole screen:</source>
          <target state="translated">画面全体を埋め尽くすようなウィンドウを作成した例。</target>
        </trans-unit>
        <trans-unit id="e715e021203f94c4bbd0567aed48b3427ad66a6d" translate="yes" xml:space="preserve">
          <source>An example of creating the application menu in the main process with the simple template API:</source>
          <target state="translated">シンプルなテンプレートAPIを使って、メインプロセスでアプリケーションメニューを作成した例。</target>
        </trans-unit>
        <trans-unit id="72ff06ffd59f035229979366dea9a37bb77d8721" translate="yes" xml:space="preserve">
          <source>An example of exposing an API to a renderer from an isolated preload script is given below:</source>
          <target state="translated">分離されたプリロード スクリプトからレンダラーに API を公開する例を以下に示します。</target>
        </trans-unit>
        <trans-unit id="6aac3e50a32db7afb8704094e6e2b859e5be8e90" translate="yes" xml:space="preserve">
          <source>An example of implementing a protocol that has the same effect as the &lt;code&gt;file://&lt;/code&gt; protocol:</source>
          <target state="translated">&lt;code&gt;file://&lt;/code&gt; プロトコルと同じ効果を持つプロトコルを実装する例：</target>
        </trans-unit>
        <trans-unit id="3b4b31cb190784d43ab408165c9cb72423338b4d" translate="yes" xml:space="preserve">
          <source>An example of installing &lt;code&gt;electron-rebuild&lt;/code&gt; and then rebuild modules with it:</source>
          <target state="translated">&lt;code&gt;electron-rebuild&lt;/code&gt; をインストールし、それを使用してモジュールを再構築する例：</target>
        </trans-unit>
        <trans-unit id="560b8f8ffdd6564b2b8aa249d4f01037951941d0" translate="yes" xml:space="preserve">
          <source>An example of installing all dependencies for Electron:</source>
          <target state="translated">Electronのすべての依存関係をインストールする例です。</target>
        </trans-unit>
        <trans-unit id="09a96482269da1747fb5ff526de5c3977a781e44" translate="yes" xml:space="preserve">
          <source>An example of opening a URL in the user's default browser:</source>
          <target state="translated">ユーザーのデフォルトブラウザでURLを開く例。</target>
        </trans-unit>
        <trans-unit id="5d35149702adf819df351b6a5b6926d5dd5362ac" translate="yes" xml:space="preserve">
          <source>An example of registering a privileged scheme, that bypasses Content Security Policy:</source>
          <target state="translated">コンテンツセキュリティポリシーを回避した特権スキームの登録例。</target>
        </trans-unit>
        <trans-unit id="7afd15f0e62f9c208d8e59272bdef3c58a4c382f" translate="yes" xml:space="preserve">
          <source>An example of restarting current instance immediately and adding a new command line argument to the new instance:</source>
          <target state="translated">現在のインスタンスを即座に再起動し、新しいインスタンスにコマンドライン引数を追加した例。</target>
        </trans-unit>
        <trans-unit id="a0effeac7279ec45ec56b2d0cf408ee4c27dd4ee" translate="yes" xml:space="preserve">
          <source>An example of sending and handling messages between the render and main processes:</source>
          <target state="translated">レンダーとメインプロセスの間でメッセージを送信して処理する例。</target>
        </trans-unit>
        <trans-unit id="d988386c9675ffed97d049072d2eb5001c143243" translate="yes" xml:space="preserve">
          <source>An example of sending messages from the main process to the renderer process:</source>
          <target state="translated">メインプロセスからレンダラープロセスにメッセージを送信する例。</target>
        </trans-unit>
        <trans-unit id="89904be07412bfe338e623beb0e5ff290413d8b9" translate="yes" xml:space="preserve">
          <source>An example of showing a dialog to select multiple files and directories:</source>
          <target state="translated">複数のファイルやディレクトリを選択するためのダイアログの表示例です。</target>
        </trans-unit>
        <trans-unit id="169b71bdf0ad723282e77c70cc24b504dc14e91c" translate="yes" xml:space="preserve">
          <source>An example of showing a dialog to select multiple files:</source>
          <target state="translated">複数のファイルを選択するためのダイアログを表示する例。</target>
        </trans-unit>
        <trans-unit id="af4c1c177456a2ada28aa202e0200ae18a139ed4" translate="yes" xml:space="preserve">
          <source>An example of showing devtools in a &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; タグでdevtoolsを表示する例：</target>
        </trans-unit>
        <trans-unit id="ae6ad7021328d4ea26e125bf2b8e3ecf625b80db" translate="yes" xml:space="preserve">
          <source>An example of showing devtools in a &lt;code&gt;BrowserWindow&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;BrowserWindow&lt;/code&gt; に devtoolsを表示する例：</target>
        </trans-unit>
        <trans-unit id="f2648260b19ddc78388add9f7e639951f0ff7cfc" translate="yes" xml:space="preserve">
          <source>An example of using &lt;a href=&quot;https://github.com/atom/node-spellchecker&quot;&gt;node-spellchecker&lt;/a&gt; as provider:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/atom/node-spellchecker&quot;&gt;node-spellchecker&lt;/a&gt;をプロバイダーとして使用する例：</target>
        </trans-unit>
        <trans-unit id="c7889c92ea7981983efd38f08f90c73ce6f1771a" translate="yes" xml:space="preserve">
          <source>An example of using it to determine if you should create a transparent window or not (transparent windows won't work correctly when DWM composition is disabled):</source>
          <target state="translated">透過ウィンドウを作成すべきかどうかを判断するために使用する例(DWM合成を無効にすると透過ウィンドウは正しく動作しません)。</target>
        </trans-unit>
        <trans-unit id="491d0cfa31b70a51e8652b15ea666d92424ec66d" translate="yes" xml:space="preserve">
          <source>An example of zooming current page to 200%.</source>
          <target state="translated">現在のページを200%に拡大した例。</target>
        </trans-unit>
        <trans-unit id="b832d173c15f259b6c6dc5a166eb81bb1230a01e" translate="yes" xml:space="preserve">
          <source>An exception will be thrown when any error happens.</source>
          <target state="translated">エラーが発生した場合は例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="189b9782252e963660bb174fa18750fc43c05826" translate="yes" xml:space="preserve">
          <source>And more!</source>
          <target state="translated">さらに!</target>
        </trans-unit>
        <trans-unit id="50999aab1e4b469f324348b2d8a375542226f1b7" translate="yes" xml:space="preserve">
          <source>And note that if you have made the whole window draggable, you must also mark buttons as non-draggable, otherwise it would be impossible for users to click on them:</source>
          <target state="translated">また、ウィンドウ全体をドラッグ可能にしている場合は、ボタンもドラッグ不可としてマークしなければなりません。</target>
        </trans-unit>
        <trans-unit id="19f0c1968cfab81099646aa90e38339bd9ec003c" translate="yes" xml:space="preserve">
          <source>And then sign your app with the following script:</source>
          <target state="translated">そして、以下のスクリプトでアプリにサインをします。</target>
        </trans-unit>
        <trans-unit id="4a458c5b952396afd3475927a38fe4f0c9065eb6" translate="yes" xml:space="preserve">
          <source>And to cross-compile for &lt;code&gt;arm&lt;/code&gt; or &lt;code&gt;ia32&lt;/code&gt; targets, you should pass the &lt;code&gt;--target_arch&lt;/code&gt; parameter to the &lt;code&gt;bootstrap.py&lt;/code&gt; script:</source>
          <target state="translated">また、 &lt;code&gt;arm&lt;/code&gt; または &lt;code&gt;ia32&lt;/code&gt; ターゲット用にクロスコンパイルするには、 &lt;code&gt;--target_arch&lt;/code&gt; パラメーターを &lt;code&gt;bootstrap.py&lt;/code&gt; スクリプトに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="70c6e4c458977a4896fe6994e9d00c9b74fe99dd" translate="yes" xml:space="preserve">
          <source>And to cross-compile for &lt;code&gt;arm&lt;/code&gt; or &lt;code&gt;ia32&lt;/code&gt; targets, you should pass the &lt;code&gt;target_cpu&lt;/code&gt; parameter to &lt;code&gt;gn gen&lt;/code&gt;:</source>
          <target state="translated">そして、のクロスコンパイルに &lt;code&gt;arm&lt;/code&gt; や &lt;code&gt;ia32&lt;/code&gt; 目標、あなたが渡す必要があり &lt;code&gt;target_cpu&lt;/code&gt; ためのパラメータ &lt;code&gt;gn gen&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="79e81a114f31beafb762175e71a724cde56adec2" translate="yes" xml:space="preserve">
          <source>And you can use &lt;a href=&quot;../api/app#appclearrecentdocuments-macos-windows&quot;&gt;app.clearRecentDocuments&lt;/a&gt; API to empty the recent documents list:</source>
          <target state="translated">また、&lt;a href=&quot;../api/app#appclearrecentdocuments-macos-windows&quot;&gt;app.clearRecentDocuments&lt;/a&gt; APIを使用して、最近のドキュメントリストを空にすることができます。</target>
        </trans-unit>
        <trans-unit id="bd4d5fe9996570e9cb0447d70870f02f92ec3ce1" translate="yes" xml:space="preserve">
          <source>AngularJS Batarang</source>
          <target state="translated">AngularJSの概要</target>
        </trans-unit>
        <trans-unit id="e32ae794843db92975b381f1e4df3975dd8ecb91" translate="yes" xml:space="preserve">
          <source>Another difference is that sandboxed renderers don't modify any of the default JavaScript APIs. Consequently, some APIs such as &lt;code&gt;window.open&lt;/code&gt; will work as they do in Chromium (i.e. they do not return a &lt;a href=&quot;api/browser-window-proxy&quot;&gt;&lt;code&gt;BrowserWindowProxy&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">もう1つの違いは、サンドボックス化されたレンダラーはデフォルトのJavaScriptAPIを変更しないことです。したがって、 &lt;code&gt;window.open&lt;/code&gt; などの一部のAPIは、Chromiumと同じように機能します（つまり、&lt;a href=&quot;api/browser-window-proxy&quot;&gt; &lt;code&gt;BrowserWindowProxy&lt;/code&gt; を&lt;/a&gt;返しません）。</target>
        </trans-unit>
        <trans-unit id="3b415762bc5be54246695f9630034afefb91b77e" translate="yes" xml:space="preserve">
          <source>Another difference is that sandboxed renderers don't modify any of the default JavaScript APIs. Consequently, some APIs such as &lt;code&gt;window.open&lt;/code&gt; will work as they do in Chromium (i.e. they do not return a &lt;a href=&quot;browser-window-proxy&quot;&gt;&lt;code&gt;BrowserWindowProxy&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">もう1つの違いは、サンドボックス化されたレンダラーはデフォルトのJavaScriptAPIを変更しないことです。したがって、 &lt;code&gt;window.open&lt;/code&gt; などの一部のAPIは、Chromiumと同じように機能します（つまり、&lt;a href=&quot;browser-window-proxy&quot;&gt; &lt;code&gt;BrowserWindowProxy&lt;/code&gt; を&lt;/a&gt;返しません）。</target>
        </trans-unit>
        <trans-unit id="32e8f8aadd3f386128465bd35865f7e34f9e8dcf" translate="yes" xml:space="preserve">
          <source>Another difference is that sandboxed renderers don't modify any of the default JavaScript APIs. Consequently, some APIs such as &lt;code&gt;window.open&lt;/code&gt; will work as they do in chromium (i.e. they do not return a &lt;a href=&quot;browser-window-proxy&quot;&gt;&lt;code&gt;BrowserWindowProxy&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">もう1つの違いは、サンドボックスレンダラーがデフォルトのJavaScript APIを変更しないことです。その結果、 &lt;code&gt;window.open&lt;/code&gt; などの一部のAPI は、chromiumと同じように機能します（つまり、&lt;a href=&quot;browser-window-proxy&quot;&gt; &lt;code&gt;BrowserWindowProxy&lt;/code&gt; を&lt;/a&gt;返しません）。</target>
        </trans-unit>
        <trans-unit id="3b6744420ebaee898d839a22d803f6aceb000f6a" translate="yes" xml:space="preserve">
          <source>Another example of creating a window in the external display:</source>
          <target state="translated">外部表示でウィンドウを作成する別の例。</target>
        </trans-unit>
        <trans-unit id="d185a2e61ed2a615d162c4d0d6cf3f1bf3f0acf8" translate="yes" xml:space="preserve">
          <source>Another factor is that the Node project patches its version of V8. As mentioned above, Electron builds everything with a single copy of V8, so Node's V8 patches must be ported to that copy.</source>
          <target state="translated">もう一つの要因は、Node プロジェクトがそのバージョンの V8 にパッチを当てていることです。前述したように、Electron はすべてのものを V8 の単一のコピーでビルドしているので、Node の V8 パッチはそのコピーに移植されなければなりません。</target>
        </trans-unit>
        <trans-unit id="a9fee0469f836ee93931ac0d72e5bb650943154d" translate="yes" xml:space="preserve">
          <source>Another important limitation is that the compiled AppX package still contains a win32 executable - and will therefore not run on Xbox, HoloLens, or Phones.</source>
          <target state="translated">もう一つの重要な制限は、コンパイルされたAppXパッケージにはwin32の実行ファイルが含まれており、Xbox、HoloLens、または電話では実行されません。</target>
        </trans-unit>
        <trans-unit id="30a2e168edab70df39e4f117183f9ddbad6a685e" translate="yes" xml:space="preserve">
          <source>Any UI Electron renders on Linux and Windows including context menus, devtools, etc. will use the dark UI.</source>
          <target state="translated">コンテキストメニューやdevtoolsなど、LinuxやWindows上でElectronがレンダリングするすべてのUIは、ダークUIを使用します。</target>
        </trans-unit>
        <trans-unit id="101d2995a869640b579a215c86a8d2508c7ededb" translate="yes" xml:space="preserve">
          <source>Any UI Electron renders on Linux and Windows including context menus, devtools, etc. will use the light UI.</source>
          <target state="translated">コンテキストメニューやdevtoolsなどを含む、LinuxやWindows上でElectronがレンダリングするすべてのUIは、軽快なUIを使用します。</target>
        </trans-unit>
        <trans-unit id="7d87a10ec4847b1db84a1653c320052e897bb78c" translate="yes" xml:space="preserve">
          <source>Any UI the OS renders on macOS including menus, window frames, etc. will use the dark UI.</source>
          <target state="translated">メニューやウィンドウフレームなど、OSがmacOS上でレンダリングするUIはすべてダークUIを使用します。</target>
        </trans-unit>
        <trans-unit id="53a220e443f95f5c46e945f47cc8b31b398f09ef" translate="yes" xml:space="preserve">
          <source>Any UI the OS renders on macOS including menus, window frames, etc. will use the light UI.</source>
          <target state="translated">メニューやウィンドウフレームなど、macOS上でOSがレンダリングするUIはすべてライトなUIを使用します。</target>
        </trans-unit>
        <trans-unit id="9b238fa385e11f259dbfd8a41292735dbcdb04b5" translate="yes" xml:space="preserve">
          <source>Any native Node.js module can be loaded directly in Web Workers, but it is strongly recommended not to do so. Most existing native modules have been written assuming single-threaded environment, using them in Web Workers will lead to crashes and memory corruptions.</source>
          <target state="translated">どんなネイティブのNode.jsモジュールでもWeb Workersで直接読み込むことができますが、そうしないことを強くお勧めします。既存のネイティブモジュールの多くはシングルスレッド環境を想定して書かれているため、Web Workersで使用するとクラッシュやメモリ破損の原因になります。</target>
        </trans-unit>
        <trans-unit id="c715be2d6d860c8f654ef3be37f4c0cd3711d9b6" translate="yes" xml:space="preserve">
          <source>Any pattern containing a forward or backward slash will be tested against the whole pathname and not just the module. E.g. &lt;code&gt;*/foo/bar/*=2&lt;/code&gt; would change the logging level for all code in the source files under a &lt;code&gt;foo/bar&lt;/code&gt; directory.</source>
          <target state="translated">スラッシュまたはバックスラッシュを含むパターンは、モジュールだけでなく、パス名全体に対してテストされます。たとえば、 &lt;code&gt;*/foo/bar/*=2&lt;/code&gt; は、 &lt;code&gt;foo/bar&lt;/code&gt; ディレクトリ下のソースファイル内のすべてのコードのログレベルを変更します。</target>
        </trans-unit>
        <trans-unit id="e197a034e7c739ca8b4617bbabf0545fa192bf53" translate="yes" xml:space="preserve">
          <source>Any pattern containing a forward or backward slash will be tested against the whole pathname and not only the module. E.g. &lt;code&gt;*/foo/bar/*=2&lt;/code&gt; would change the logging level for all code in the source files under a &lt;code&gt;foo/bar&lt;/code&gt; directory.</source>
          <target state="translated">スラッシュまたはバックスラッシュを含むパターンは、モジュールだけでなくパス名全体に対してテストされます。たとえば、 &lt;code&gt;*/foo/bar/*=2&lt;/code&gt; は、 &lt;code&gt;foo/bar&lt;/code&gt; ディレクトリの下のソースファイル内のすべてのコードのログレベルを変更します。</target>
        </trans-unit>
        <trans-unit id="5e5eb79994f9130e9766f363c591b10cb4d12926" translate="yes" xml:space="preserve">
          <source>Any resources not included with your application should be loaded using a secure protocol like &lt;code&gt;HTTPS&lt;/code&gt;. In other words, do not use insecure protocols like &lt;code&gt;HTTP&lt;/code&gt;. Similarly, we recommend the use of &lt;code&gt;WSS&lt;/code&gt; over &lt;code&gt;WS&lt;/code&gt;, &lt;code&gt;FTPS&lt;/code&gt; over &lt;code&gt;FTP&lt;/code&gt;, and so on.</source>
          <target state="translated">アプリケーションに含まれていないリソースは、 &lt;code&gt;HTTPS&lt;/code&gt; などの安全なプロトコルを使用してロードする必要があります。つまり、 &lt;code&gt;HTTP&lt;/code&gt; などの安全でないプロトコルを使用しないでください。同様に、 &lt;code&gt;WSS&lt;/code&gt; over &lt;code&gt;WS&lt;/code&gt; 、 &lt;code&gt;FTPS&lt;/code&gt; over &lt;code&gt;FTP&lt;/code&gt; などの使用をお勧めします。</target>
        </trans-unit>
        <trans-unit id="35a22cc95919300290951b5623b6a21262b39561" translate="yes" xml:space="preserve">
          <source>Anyone can request an API be tagged as experimental in a feature PR, disagreements on the experimental nature of a feature can be discussed in the API WG if they can't be resolved in the PR.</source>
          <target state="translated">機能の実験的な性質に関する意見の相違は、PRで解決できない場合は、API WGで議論することができます。</target>
        </trans-unit>
        <trans-unit id="c8d592e3d4157a31854aa1957745118868d45be2" translate="yes" xml:space="preserve">
          <source>Apart from &lt;code&gt;CC&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt;, you can also set the following environment variables to customise the build configuration:</source>
          <target state="translated">別に &lt;code&gt;CC&lt;/code&gt; と &lt;code&gt;CXX&lt;/code&gt; 、あなたはまた、ビルド構成をカスタマイズするには、以下の環境変数を設定することができます。</target>
        </trans-unit>
        <trans-unit id="47b36593dc4ee860107450ffb100accf758bed24" translate="yes" xml:space="preserve">
          <source>Apart from manually signing your app, you can also choose to use the &lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign&quot;&gt;electron-osx-sign&lt;/a&gt; module to do the job.</source>
          <target state="translated">アプリに手動で署名する以外に、&lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign&quot;&gt;electron-osx-sign&lt;/a&gt;モジュールを使用してジョブを実行することもできます。</target>
        </trans-unit>
        <trans-unit id="bbf1922b8f7f4bc7e075363d3d5c60aa27d5d5c5" translate="yes" xml:space="preserve">
          <source>Apart from packaging your app manually, you can also choose to use third party packaging tools to do the work for you:</source>
          <target state="translated">アプリを手動でパッケージングする以外にも、サードパーティのパッケージング ツールを使用して作業を行うこともできます。</target>
        </trans-unit>
        <trans-unit id="c70ae77c392bfdc65811420076ceef963c018cd8" translate="yes" xml:space="preserve">
          <source>Apart from shipping your app by copying all of its source files, you can also package your app into an &lt;a href=&quot;https://github.com/electron/asar&quot;&gt;asar&lt;/a&gt; archive to avoid exposing your app's source code to users.</source>
          <target state="translated">すべてのソースファイルをコピーしてアプリを出荷することとは別に、アプリを&lt;a href=&quot;https://github.com/electron/asar&quot;&gt;asar&lt;/a&gt;アーカイブにパッケージ化して、アプリのソースコードがユーザーに公開されないようにすることもできます。</target>
        </trans-unit>
        <trans-unit id="23368e571fb55860ff5c5aadcdc49cdab2eaa0ab" translate="yes" xml:space="preserve">
          <source>App can't be opened because it is from an unidentified developer</source>
          <target state="translated">正体不明の開発者からのものなのでアプリが開けない</target>
        </trans-unit>
        <trans-unit id="049600bbda8e065f0e783f451d9b52f928ea6483" translate="yes" xml:space="preserve">
          <source>App has a public GitHub repository</source>
          <target state="translated">アプリにはGitHubリポジトリが公開されています。</target>
        </trans-unit>
        <trans-unit id="677eec5b39cf72b0d4bf033868a741628f69f40b" translate="yes" xml:space="preserve">
          <source>App has it's &lt;code&gt;NSUserNotificationAlertStyle&lt;/code&gt; set to &lt;code&gt;alert&lt;/code&gt; in the &lt;code&gt;Info.plist&lt;/code&gt;.</source>
          <target state="translated">アプリの &lt;code&gt;NSUserNotificationAlertStyle&lt;/code&gt; が &lt;code&gt;Info.plist&lt;/code&gt; で &lt;code&gt;alert&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="56a94d43f7c47ddae1702557ca2ae2db5049d31f" translate="yes" xml:space="preserve">
          <source>App indicator will only be shown when it has a context menu.</source>
          <target state="translated">アプリのインジケーターは、コンテキストメニューがある場合のみ表示されます。</target>
        </trans-unit>
        <trans-unit id="f7548ab4fa57148b2b490d34fdebc240cdbbe1b2" translate="yes" xml:space="preserve">
          <source>App is signed</source>
          <target state="translated">アプリは署名されています</target>
        </trans-unit>
        <trans-unit id="c8ab9bb92eef1be2798f4b485ce4dd54ffb6ae10" translate="yes" xml:space="preserve">
          <source>App runs on macOS or Windows</source>
          <target state="translated">アプリはmacOSまたはWindowsで動作します。</target>
        </trans-unit>
        <trans-unit id="7a5e3bb03d06453c65b1113c4e3cf6ff8e619ec3" translate="yes" xml:space="preserve">
          <source>AppVeyor</source>
          <target state="translated">AppVeyor</target>
        </trans-unit>
        <trans-unit id="d4a2cc0e8588af6a9f7c5e795dac04ec45c7f407" translate="yes" xml:space="preserve">
          <source>AppVeyor runs on Windows, supporting Selenium, Chromium, Electron and similar tools out of the box - no configuration is required.</source>
          <target state="translated">AppVeyorはWindows上で動作し、Selenium、Chromium、Electron、および同様のツールをサポートしています。</target>
        </trans-unit>
        <trans-unit id="d572f3b502cde5b0370ac7b117f58144724b447a" translate="yes" xml:space="preserve">
          <source>Append a switch (with optional &lt;code&gt;value&lt;/code&gt;) to Chromium's command line.</source>
          <target state="translated">Chromiumのコマンドラインにスイッチ（ &lt;code&gt;value&lt;/code&gt; はオプション）を追加します。</target>
        </trans-unit>
        <trans-unit id="c881a723c4e927caa040da2f67b853e976c4d240" translate="yes" xml:space="preserve">
          <source>Append an argument to Chromium's command line. The argument will be quoted correctly.</source>
          <target state="translated">Chromiumのコマンドラインに引数を追加します。引数は正しく引用されます。</target>
        </trans-unit>
        <trans-unit id="71aba89c3baa273d9407c20dc3155bdfba41ac26" translate="yes" xml:space="preserve">
          <source>Append an argument to Chromium's command line. The argument will be quoted correctly. Switches will precede arguments regardless of appending order.</source>
          <target state="translated">Chromiumのコマンドラインに引数を追加します。引数は正しく引用されます。スイッチは、追加の順番に関係なく引数の前に置かれます。</target>
        </trans-unit>
        <trans-unit id="1aa644c462a859483af3889fedf9c8171e738195" translate="yes" xml:space="preserve">
          <source>Appends the &lt;code&gt;menuItem&lt;/code&gt; to the menu.</source>
          <target state="translated">&lt;code&gt;menuItem&lt;/code&gt; をメニューに追加します。</target>
        </trans-unit>
        <trans-unit id="c5a95319cc007d37f03d190f9a9af5f029ad6167" translate="yes" xml:space="preserve">
          <source>Application Architecture</source>
          <target state="translated">アプリケーションアーキテクチャ</target>
        </trans-unit>
        <trans-unit id="5d9f85d50bde94d452fab7d65cb069ddbf80f302" translate="yes" xml:space="preserve">
          <source>Application Debugging</source>
          <target state="translated">アプリケーションのデバッグ</target>
        </trans-unit>
        <trans-unit id="2518e8ec91dc1ba1cfd7e4589f5b4a8cfb115277" translate="yes" xml:space="preserve">
          <source>Application Distribution</source>
          <target state="translated">アプリケーション配布</target>
        </trans-unit>
        <trans-unit id="57b2e86a74ef58c3e485f277c5d3ff5e1c4e3776" translate="yes" xml:space="preserve">
          <source>Application Packaging</source>
          <target state="translated">アプリケーションパッケージ</target>
        </trans-unit>
        <trans-unit id="5f04ef1a414dccc3e91c12156f71f83bbad8d73a" translate="yes" xml:space="preserve">
          <source>Application Progress</source>
          <target state="translated">アプリケーションの進行状況</target>
        </trans-unit>
        <trans-unit id="b1fb92ce49bfdc66b691a4febcac0bbe43b53838" translate="yes" xml:space="preserve">
          <source>Application architecture</source>
          <target state="translated">アプリケーションアーキテクチャ</target>
        </trans-unit>
        <trans-unit id="98458bc2068d3fa4576d39cade59bd6adcc8ad09" translate="yes" xml:space="preserve">
          <source>Applications define tasks based on both the program's features and the key things a user is expected to do with them. Tasks should be context-free, in that the application does not need to be running for them to work. They should also be the statistically most common actions that a normal user would perform in an application, such as compose an email message or open the calendar in a mail program, create a new document in a word processor, launch an application in a certain mode, or launch one of its subcommands. An application should not clutter the menu with advanced features that standard users won't need or one-time actions such as registration. Do not use tasks for promotional items such as upgrades or special offers.</source>
          <target state="translated">アプリケーションは、プログラムの機能とユーザがそれを使って行うことを期待されている重要なことの両方に基づいてタスクを定義します。タスクは、アプリケーションが起動していなくても動作するという意味で、コンテキストフリーでなければなりません。タスクはまた、メールプログラムでメールメッセージを作成したり、カレンダーを開いたり、ワープロで新しい文書を作成したり、特定のモードでアプリケーションを起動したり、サブコマンドを起動したりするような、通常のユーザがアプリケーションで行う統計的に最も一般的なアクションでなければなりません。アプリケーションは、標準ユーザが必要としない高度な機能や、登録のような一回限りのアクションでメニューを乱雑にしてはいけません。アップグレードや特別オファーなどのプロモーションアイテムにタスクを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="6c627943d09c2a5bccbb4d21c7bf6c8dda901cb7" translate="yes" xml:space="preserve">
          <source>Applying Updates</source>
          <target state="translated">アップデートの適用</target>
        </trans-unit>
        <trans-unit id="bcb396573d6555eca2779cb68edf78ba35f04874" translate="yes" xml:space="preserve">
          <source>Approval and Request Changes Workflow</source>
          <target state="translated">承認・依頼変更ワークフロー</target>
        </trans-unit>
        <trans-unit id="edec20a986ce95ea4affb249a152453cb57ff3e5" translate="yes" xml:space="preserve">
          <source>Apps will not be aware of DNS changes.</source>
          <target state="translated">アプリはDNSの変更を認識しません。</target>
        </trans-unit>
        <trans-unit id="af4f4762f9bd3f0f4a10caf5b6e63dc4ce543724" translate="yes" xml:space="preserve">
          <source>Arabic</source>
          <target state="translated">Arabic</target>
        </trans-unit>
        <trans-unit id="98051046a74532d91687416e2304c21659e63daf" translate="yes" xml:space="preserve">
          <source>Architecture-specific code</source>
          <target state="translated">アーキテクチャ固有のコード</target>
        </trans-unit>
        <trans-unit id="50354e2a524e055650f1d24c28e47393f8259563" translate="yes" xml:space="preserve">
          <source>Archives Are Read-only</source>
          <target state="translated">アーカイブは読み取り専用</target>
        </trans-unit>
        <trans-unit id="1a0d21145500640fd3f6136eeba595bfe934d364" translate="yes" xml:space="preserve">
          <source>Armenian</source>
          <target state="translated">Armenian</target>
        </trans-unit>
        <trans-unit id="31df4a74b61e86322dd8522bf6aa4c535cac65c0" translate="yes" xml:space="preserve">
          <source>As a future consideration, we may introduce one or both of the following:</source>
          <target state="translated">今後の検討事項として、以下のいずれかまたは両方を導入することがあります。</target>
        </trans-unit>
        <trans-unit id="8f7e678a2bd033a41f21ac3ef0457a8b52a1b028" translate="yes" xml:space="preserve">
          <source>As a next step, enable &lt;code&gt;Network Throttling&lt;/code&gt;. Find the drop-down that currently reads &lt;code&gt;Online&lt;/code&gt; and select a slower speed such as &lt;code&gt;Fast 3G&lt;/code&gt;. Reload your renderer and see if there are any resources that your app is unnecessarily waiting for. In many cases, an app will wait for a network request to complete despite not actually needing the involved resource.</source>
          <target state="translated">次のステップとして、 &lt;code&gt;Network Throttling&lt;/code&gt; 有効にします。現在読み込んでいることをドロップダウン検索 &lt;code&gt;Online&lt;/code&gt; そのように遅い速度を選択し &lt;code&gt;Fast 3G&lt;/code&gt; 。レンダラーをリロードして、アプリが不必要に待機しているリソースがあるかどうかを確認します。多くの場合、アプリは、関連するリソースを実際に必要としないにもかかわらず、ネットワークリクエストが完了するのを待ちます。</target>
        </trans-unit>
        <trans-unit id="a5c1a4319f049c7831c5a52393013c06a1ff27bd" translate="yes" xml:space="preserve">
          <source>As a tip, loading resources from the Internet that you might want to change without shipping an application update is a powerful strategy. For advanced control over how resources are being loaded, consider investing in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&quot;&gt;Service Workers&lt;/a&gt;.</source>
          <target state="translated">ヒントとして、アプリケーションの更新を出荷せずに変更したいリソースをインターネットからロードすることは、強力な戦略です。リソースがロードされているかを超える高度な制御のために投資を検討&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&quot;&gt;サービス労働者&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="987796db5ea222bede6b2932e30d8596b75bbe80" translate="yes" xml:space="preserve">
          <source>As a workaround, you can leave various files unpacked using the &lt;code&gt;--unpack&lt;/code&gt; option. In the following example, shared libraries of native Node.js modules will not be packed:</source>
          <target state="translated">回避策として、 &lt;code&gt;--unpack&lt;/code&gt; オプションを使用して、さまざまなファイルをアンパックしたままにすることができます。次の例では、ネイティブNode.jsモジュールの共有ライブラリはパックされません。</target>
        </trans-unit>
        <trans-unit id="d462f273ff97e9ea0531e02620d608d8bff13c47" translate="yes" xml:space="preserve">
          <source>As already pointed out in &quot;&lt;a href=&quot;#2-loading-and-running-code-too-soon&quot;&gt;Loading and running code too soon&lt;/a&gt;&quot;, calling &lt;code&gt;require()&lt;/code&gt; is an expensive operation. If you are able to do so, bundle your application's code into a single file.</source>
          <target state="translated">「&lt;a href=&quot;#2-loading-and-running-code-too-soon&quot;&gt;コードのロードと実行が早すぎる&lt;/a&gt;」ですでに指摘したように、 &lt;code&gt;require()&lt;/code&gt; の呼び出しはコストのかかる操作です。それが可能な場合は、アプリケーションのコードを1つのファイルにバンドルします。</target>
        </trans-unit>
        <trans-unit id="88289bbd95ad1181a13e96ff04b6d3f37ee77245" translate="yes" xml:space="preserve">
          <source>As an example, Electron has built-in support for automatic updates and countless tools that make the creation of installers easier. As an example in favor of NW.js, NW.js supports more &lt;code&gt;Chrome.*&lt;/code&gt; APIs for the development of Chrome Apps.</source>
          <target state="translated">一例として、Electronには、インストーラーの作成を容易にする自動更新と無数のツールのサポートが組み込まれています。NW.jsを支持する例として、NW.jsはChromeアプリの開発用にさらに多くの &lt;code&gt;Chrome.*&lt;/code&gt; APIをサポートしています。</target>
        </trans-unit>
        <trans-unit id="ad191dcd03a644961a274beba130c36bf5cbc3e6" translate="yes" xml:space="preserve">
          <source>As an example, to use the official AWS SDK in your application, you'd first install it as a dependency:</source>
          <target state="translated">例えば、公式のAWS SDKをアプリケーションで使用するには、まず依存関係としてインストールします。</target>
        </trans-unit>
        <trans-unit id="41e1f145fc0b196c35f5f0a83aabd35fc903b60b" translate="yes" xml:space="preserve">
          <source>As an illustration, take a folder with this structure:</source>
          <target state="translated">例として、このような構造のフォルダを取り上げてみましょう。</target>
        </trans-unit>
        <trans-unit id="a55f951abb69a8b6e569b303bbc9133dd4355ae0" translate="yes" xml:space="preserve">
          <source>As far as development is concerned, an Electron application is essentially a Node.js application. The starting point is a &lt;code&gt;package.json&lt;/code&gt; that is identical to that of a Node.js module. A most basic Electron app would have the following folder structure:</source>
          <target state="translated">開発に関する限り、Electronアプリケーションは基本的にNode.jsアプリケーションです。開始点は、Node.jsモジュールと同じ &lt;code&gt;package.json&lt;/code&gt; です。最も基本的なElectronアプリのフォルダー構造は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ead76eba7d5456a960bb6369e8361af497352d17" translate="yes" xml:space="preserve">
          <source>As it was mentioned before, Electron has two types of processes: Main and Renderer.</source>
          <target state="translated">先ほども触れましたが、Electronには2種類のプロセスがあります。MainとRendererです。</target>
        </trans-unit>
        <trans-unit id="a9bf82adea32e120d943fd70c1dbb521eaef916f" translate="yes" xml:space="preserve">
          <source>As of 0.37, you can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;destructuring assignment&lt;/a&gt; to make it easier to use built-in modules.</source>
          <target state="translated">0.37以降では、構造化&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;代入&lt;/a&gt;を使用して、組み込みモジュールをより簡単に使用できます。</target>
        </trans-unit>
        <trans-unit id="a9ce3c6dc881897f4475fd272fae056941fd852d" translate="yes" xml:space="preserve">
          <source>As of &lt;a href=&quot;https://electronjs.org/releases#1.8.1&quot;&gt;&lt;code&gt;Electron v1.8.0 (Chrome v59)&lt;/code&gt;&lt;/a&gt;, the below steps are may only be some of the necessary steps to enable Widevine; any app on or after that version intending to use the Widevine CDM may need to be signed using a license obtained from &lt;a href=&quot;https://www.widevine.com/&quot;&gt;Widevine&lt;/a&gt; itself.</source>
          <target state="translated">以下のように&lt;a href=&quot;https://electronjs.org/releases#1.8.1&quot;&gt; &lt;code&gt;Electron v1.8.0 (Chrome v59)&lt;/code&gt; &lt;/a&gt;、ステップ以下であることのみWidevineを可能にするために必要なステップの一部であってもよいです。Widevine CDMを使用する予定のそのバージョン以降のアプリは、&lt;a href=&quot;https://www.widevine.com/&quot;&gt;Widevine&lt;/a&gt;自体から取得したライセンスを使用して署名する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="6f8e7f7dd3ba9f487e1af2be1ac763080253f6b9" translate="yes" xml:space="preserve">
          <source>As of Electron 7, that &lt;code&gt;FileList&lt;/code&gt; is now list of all files contained within the folder, similarly to Chrome, Firefox, and Edge (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory&quot;&gt;link to MDN docs&lt;/a&gt;).</source>
          <target state="translated">Electron 7以降、その &lt;code&gt;FileList&lt;/code&gt; は、Chrome、Firefox、およびEdge（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory&quot;&gt;MDNドキュメントへのリンク&lt;/a&gt;）と同様に、フォルダー内に含まれるすべてのファイルのリストになりました。</target>
        </trans-unit>
        <trans-unit id="dac6fa8d9048bd9396e63bb60d690225971d4672" translate="yes" xml:space="preserve">
          <source>As of Electron 9 we do not allow loading of non-context-aware native modules in the renderer process. This is to improve security, performance and maintainability of Electron as a project.</source>
          <target state="translated">Electron 9では、レンダラープロセスでコンテキストを認識しないネイティブモジュールのロードを許可していません。これは、プロジェクトとしてのElectronのセキュリティ、パフォーマンス、保守性を向上させるためです。</target>
        </trans-unit>
        <trans-unit id="9c260c0579ac41e6b6f34d13b2e031da798cf4af" translate="yes" xml:space="preserve">
          <source>As of version 2.0 Electron &lt;a href=&quot;https://semver.org&quot;&gt;follows &lt;code&gt;semver&lt;/code&gt;&lt;/a&gt;. For most applications, and using any recent version of npm, running &lt;code&gt;$ npm install electron&lt;/code&gt; will do the right thing.</source>
          <target state="translated">バージョン2.0以降、Electron &lt;a href=&quot;https://semver.org&quot;&gt;は &lt;code&gt;semver&lt;/code&gt; に準拠してい&lt;/a&gt;ます。ほとんどのアプリケーションで、最新バージョンのnpmを使用している場合、 &lt;code&gt;$ npm install electron&lt;/code&gt; を実行すると正しく動作します。</target>
        </trans-unit>
        <trans-unit id="ccd1db6cd664cb3c1e3b112542a4071141c3a3c3" translate="yes" xml:space="preserve">
          <source>As of version 2.0.0, Electron follows &lt;a href=&quot;#semver&quot;&gt;semver&lt;/a&gt;. The following command will install the most recent stable build of Electron:</source>
          <target state="translated">バージョン2.0.0以降、Electronは&lt;a href=&quot;#semver&quot;&gt;semverに準拠してい&lt;/a&gt;ます。次のコマンドは、Electronの最新の安定したビルドをインストールします。</target>
        </trans-unit>
        <trans-unit id="cf6c44eb3baadf25695819f96f8bcbc0ed771134" translate="yes" xml:space="preserve">
          <source>As of writing this article, the popular choices include &lt;a href=&quot;https://webpack.js.org/&quot;&gt;Webpack&lt;/a&gt;, &lt;a href=&quot;https://parceljs.org/&quot;&gt;Parcel&lt;/a&gt;, and &lt;a href=&quot;https://rollupjs.org/&quot;&gt;rollup.js&lt;/a&gt;.</source>
          <target state="translated">この記事を書いている時点で、人気のある選択肢には&lt;a href=&quot;https://webpack.js.org/&quot;&gt;Webpack&lt;/a&gt;、&lt;a href=&quot;https://parceljs.org/&quot;&gt;Parcel&lt;/a&gt;、&lt;a href=&quot;https://rollupjs.org/&quot;&gt;rollup.jsがあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="2e0b47edfcc255f426f162848aa58454f38cae35" translate="yes" xml:space="preserve">
          <source>As quoted from &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-flashwindow#remarks&quot;&gt;MSDN&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-flashwindow#remarks&quot;&gt;MSDN&lt;/a&gt;から引用したように：</target>
        </trans-unit>
        <trans-unit id="b15c8b35834a30255b4f0207919585a6b23442a3" translate="yes" xml:space="preserve">
          <source>As quoted from &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/shell/taskbar-extensions#icon-overlays&quot;&gt;MSDN&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/shell/taskbar-extensions#icon-overlays&quot;&gt;MSDN&lt;/a&gt;から引用したように：</target>
        </trans-unit>
        <trans-unit id="2373bedd6ae9d89093cbceb22aa6eb4c011ef184" translate="yes" xml:space="preserve">
          <source>As quoted from &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/shell/taskbar-extensions#thumbnail-toolbars&quot;&gt;MSDN&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/shell/taskbar-extensions#thumbnail-toolbars&quot;&gt;MSDN&lt;/a&gt;から引用したように：</target>
        </trans-unit>
        <trans-unit id="746a25e036872a9298fd01752d5e5d3f9f535f45" translate="yes" xml:space="preserve">
          <source>As soon as a release branch is cut for a major, master must be bumped to the next major. I.e. &lt;code&gt;master&lt;/code&gt; is always versioned as the next theoretical release branch</source>
          <target state="translated">メジャーのリリースブランチがカットされるとすぐに、マスターは次のメジャーにバンプされる必要があります。IEの &lt;code&gt;master&lt;/code&gt; 常に次の理論的なリリースブランチとしてバージョン管理されています</target>
        </trans-unit>
        <trans-unit id="c0b75b9c69af019e80a796f012273099dd4f1e84" translate="yes" xml:space="preserve">
          <source>As stated above, some Node APIs will unpack the file to the filesystem when called. Apart from the performance issues, various anti-virus scanners might be triggered by this behavior.</source>
          <target state="translated">上で述べたように、いくつかのNode APIは、呼び出されたときにファイルシステムにファイルを解凍します。パフォーマンスの問題とは別に、様々なアンチウィルススキャナがこの動作によって引き起こされるかもしれません。</target>
        </trans-unit>
        <trans-unit id="5ba271114b142c3a7f71f006ad86669ca292d8e1" translate="yes" xml:space="preserve">
          <source>As the final step, check for updates. The example below will check every minute:</source>
          <target state="translated">最後のステップとして、更新があるかどうかをチェックします。下の例では、1分ごとにチェックします。</target>
        </trans-unit>
        <trans-unit id="655733ff58abb05d63aaa4d562a8e14a40eba740" translate="yes" xml:space="preserve">
          <source>As we work to perform these updates, we seek to create the least disruptive amount of change at any given time, so as many changes as possible will be introduced in a backward compatible manner and deprecated after enough time has passed to give users a chance to upgrade their API calls.</source>
          <target state="translated">そのため、可能な限り多くの変更が下位互換性のある方法で導入され、ユーザーが API 呼び出しをアップグレードする機会を十分に得た後に非推奨となります。</target>
        </trans-unit>
        <trans-unit id="3bfa4dc961d82587292820671241f9ca60adf598" translate="yes" xml:space="preserve">
          <source>As web developers, we usually enjoy the strong security net of the browser - the risks associated with the code we write are relatively small. Our websites are granted limited powers in a sandbox, and we trust that our users enjoy a browser built by a large team of engineers that is able to quickly respond to newly discovered security threats.</source>
          <target state="translated">ウェブ開発者として、私たちは通常、ブラウザの強力なセキュリティネットを享受しています。私たちのウェブサイトはサンドボックスの中で限られた権限を与えられており、新たに発見されたセキュリティ上の脅威に迅速に対応することができるエンジニアの大規模なチームによって構築されたブラウザをユーザーが享受できることを信頼しています。</target>
        </trans-unit>
        <trans-unit id="cf9e09d354a1871e27a510af458a14ab4d0acf27" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;code&gt;snapcraft.yaml&lt;/code&gt; instructs the system to launch a file called &lt;code&gt;electron-launch&lt;/code&gt;. In this example, it passes information on to the app's binary:</source>
          <target state="translated">ご覧のように、 &lt;code&gt;snapcraft.yaml&lt;/code&gt; はシステムに &lt;code&gt;electron-launch&lt;/code&gt; というファイルを起動するように指示します。この例では、アプリのバイナリに情報を渡します。</target>
        </trans-unit>
        <trans-unit id="f27c970d945c01cdb95b48535cf74d70a0763d0a" translate="yes" xml:space="preserve">
          <source>As you can see, the renderer callback's synchronous return value was not as expected, and didn't match the return value of an identical callback that lives in the main process.</source>
          <target state="translated">ご覧のように、レンダラー コールバックの同期戻り値は期待通りではなく、メイン プロセスに存在する同一のコールバックの戻り値と一致しませんでした。</target>
        </trans-unit>
        <trans-unit id="3548e0b6c01c9c5d2d8f56a762e842c836555b17" translate="yes" xml:space="preserve">
          <source>As you can see, users get two options: Move the app straight to the trash or cancel running it. You don't want your users to see that dialog.</source>
          <target state="translated">ご覧のように、ユーザーは2つのオプションを得ます。アプリをそのままゴミ箱に移動するか、アプリの実行をキャンセルするかです。このダイアログをユーザーに見せたくないでしょう。</target>
        </trans-unit>
        <trans-unit id="b017617e28fa9752f51a25e9b89a805226e8657e" translate="yes" xml:space="preserve">
          <source>As you might already be able to guess, this has important security implications if you ever attempt to load remote content. You can find more information and guidance on loading remote content in our &lt;a href=&quot;security&quot;&gt;security documentation&lt;/a&gt;.</source>
          <target state="translated">すでに推測できるかもしれませんが、リモートコンテンツを読み込もうとすると、セキュリティ上の重要な影響があります。リモートコンテンツの読み込みに関する詳細とガイダンスは、&lt;a href=&quot;security&quot;&gt;セキュリティドキュメントに記載さ&lt;/a&gt;れています。</target>
        </trans-unit>
        <trans-unit id="dfe32ba36b6db876022e02fc4037495703779aeb" translate="yes" xml:space="preserve">
          <source>Aside: Communication Between Processes</source>
          <target state="translated">アサイド プロセス間のコミュニケーション</target>
        </trans-unit>
        <trans-unit id="8648c548b76e7fe47f6990f972e4d15747443a00" translate="yes" xml:space="preserve">
          <source>Ask for help if you're not sure how to fix them</source>
          <target state="translated">直し方がわからないときは助けを求める</target>
        </trans-unit>
        <trans-unit id="825e2ae311d70a24ea230e616a07eccd8c443a38" translate="yes" xml:space="preserve">
          <source>Asking for General Help</source>
          <target state="translated">一般的なヘルプを求める</target>
        </trans-unit>
        <trans-unit id="b978123b473c6f63b4d64b7089f262c245e7d91b" translate="yes" xml:space="preserve">
          <source>Asks the server whether there is an update. You must call &lt;code&gt;setFeedURL&lt;/code&gt; before using this API.</source>
          <target state="translated">更新があるかどうかをサーバーに問い合わせます。このAPIを使用する前に、 &lt;code&gt;setFeedURL&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="5fdec7b1203a91af46c75c768e3315a0443dec4b" translate="yes" xml:space="preserve">
          <source>Assertion failed: ((handle))-&amp;gt;activecnt &amp;gt;= 0</source>
          <target state="translated">アサーションが失敗しました：（（handle））-&amp;gt; activecnt&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="54e20f198ffcab84cd3b670a5985b7c48eba2fb4" translate="yes" xml:space="preserve">
          <source>Assigning &lt;code&gt;src&lt;/code&gt; its own value will reload the current page.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; に独自の値を割り当てると、現在のページが再読み込みされます。</target>
        </trans-unit>
        <trans-unit id="0a4f3577cd4bb7c83746ab7f3ea12b0c3fb241d4" translate="yes" xml:space="preserve">
          <source>Assistive Technology</source>
          <target state="translated">支援技術</target>
        </trans-unit>
        <trans-unit id="89c782c42b440e73bfec11bc97dc49e5ffa94ebf" translate="yes" xml:space="preserve">
          <source>Assuming you have &lt;code&gt;electron&lt;/code&gt; or &lt;code&gt;electron-prebuilt&lt;/code&gt; installed as a local project dependency:</source>
          <target state="translated">ローカルプロジェクト依存関係として &lt;code&gt;electron&lt;/code&gt; または &lt;code&gt;electron-prebuilt&lt;/code&gt; がインストールされていると仮定します。</target>
        </trans-unit>
        <trans-unit id="c8fb20a8de0e77b0344aace90e4ec7c3f06839f6" translate="yes" xml:space="preserve">
          <source>Assuming you have &lt;code&gt;electron&lt;/code&gt; or &lt;code&gt;electron-prebuilt&lt;/code&gt; installed globally:</source>
          <target state="translated">&lt;code&gt;electron&lt;/code&gt; または &lt;code&gt;electron-prebuilt&lt;/code&gt; がグローバルにインストールされていると想定します。</target>
        </trans-unit>
        <trans-unit id="d04749f1bbffe665533d63ba3916c5ac74ef55d7" translate="yes" xml:space="preserve">
          <source>Assuming you have a working Electron application from the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, add the following line to the &lt;code&gt;index.html&lt;/code&gt; file before the closing &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">&lt;a href=&quot;quick-start&quot;&gt;クイックスタートガイドの&lt;/a&gt;Electronアプリケーションが機能していると仮定して、 &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; を閉じる前に &lt;code&gt;index.html&lt;/code&gt; ファイルに次の行を追加します。</target>
        </trans-unit>
        <trans-unit id="04bc0e2316bdb33bb81ac32a98ce9c2f117c756b" translate="yes" xml:space="preserve">
          <source>Assuming you have a working Electron application from the &lt;a href=&quot;tutorial/quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, add the following line to the &lt;code&gt;index.html&lt;/code&gt; file before the closing &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">&lt;a href=&quot;tutorial/quick-start&quot;&gt;クイックスタートガイドの&lt;/a&gt;Electronアプリケーションが機能していると仮定して、 &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; を閉じる前に &lt;code&gt;index.html&lt;/code&gt; ファイルに次の行を追加します。</target>
        </trans-unit>
        <trans-unit id="a693bc36bd9e296cfd4be90e42ecca418aa80d3c" translate="yes" xml:space="preserve">
          <source>At least 25GB disk space and 8GB RAM.</source>
          <target state="translated">最低でも25GBのディスク容量と8GBのRAM。</target>
        </trans-unit>
        <trans-unit id="d8a95f87b86a4822877c30ab74a791efff3ca3b4" translate="yes" xml:space="preserve">
          <source>At least Node 4 (to check, run &lt;code&gt;node -v&lt;/code&gt;)</source>
          <target state="translated">少なくともノード4（チェックするには、 &lt;code&gt;node -v&lt;/code&gt; を実行します）</target>
        </trans-unit>
        <trans-unit id="98e4493514bc27c38e38d35f1af38ce659b82c2e" translate="yes" xml:space="preserve">
          <source>At the same time, preload scripts still have access to the &lt;code&gt;document&lt;/code&gt; and &lt;code&gt;window&lt;/code&gt; objects. In other words, you're getting a decent return on a likely very small investment.</source>
          <target state="translated">同時に、プリロードスクリプトは引き続き &lt;code&gt;document&lt;/code&gt; および &lt;code&gt;window&lt;/code&gt; オブジェクトにアクセスできます。言い換えれば、あなたはおそらく非常に小さな投資でまともな利益を得ています。</target>
        </trans-unit>
        <trans-unit id="121515b69e07ab07962bfd19db93ff6a83266c8c" translate="yes" xml:space="preserve">
          <source>At this point, you'll need to install &lt;code&gt;electron&lt;/code&gt; itself. The recommended way of doing so is to install it as a development dependency in your app, which allows you to work on multiple apps with different Electron versions. To do so, run the following command from your app's directory:</source>
          <target state="translated">この時点で、 &lt;code&gt;electron&lt;/code&gt; 自体をインストールする必要があります。そうすることをお勧めする方法は、アプリに開発依存関係としてインストールすることです。これにより、異なるElectronバージョンの複数のアプリで作業できます。これを行うには、アプリのディレクトリから次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="41dded417052424bdcf3c39f6c8664147fae6806" translate="yes" xml:space="preserve">
          <source>Atom</source>
          <target state="translated">Atom</target>
        </trans-unit>
        <trans-unit id="3d30809420aad6882daab65fb87d3dc037ba696d" translate="yes" xml:space="preserve">
          <source>Attaches the debugger to the &lt;code&gt;webContents&lt;/code&gt;.</source>
          <target state="translated">デバッガーを &lt;code&gt;webContents&lt;/code&gt; に接続します。</target>
        </trans-unit>
        <trans-unit id="81c9830488b56613dc51c43df39e992b2bd18c70" translate="yes" xml:space="preserve">
          <source>Attaching</source>
          <target state="translated">Attaching</target>
        </trans-unit>
        <trans-unit id="d59a1c784014996bf71043302c79a8932a9dd011" translate="yes" xml:space="preserve">
          <source>Attaching to and Debugging Electron</source>
          <target state="translated">電子への接続とデバッグ</target>
        </trans-unit>
        <trans-unit id="c02f1b2e8b05ca04d5b3bc15fcb22448b930e49e" translate="yes" xml:space="preserve">
          <source>Attempts to free memory that is no longer being used (like images from a previous navigation).</source>
          <target state="translated">使用されなくなったメモリを解放しようとします(以前のナビゲーションの画像など)。</target>
        </trans-unit>
        <trans-unit id="daec8ad48ba7572de1000735593c64d20460c944" translate="yes" xml:space="preserve">
          <source>Automated Testing with a Custom Driver</source>
          <target state="translated">カスタムドライバによる自動テスト</target>
        </trans-unit>
        <trans-unit id="ea6acf84f71ab8531b7cc95ce24694ca867fbf19" translate="yes" xml:space="preserve">
          <source>Automatic management of system proxy configuration, support of the wpad protocol and proxy pac configuration files.</source>
          <target state="translated">システムプロキシ設定の自動管理、wpad プロトコルとプロキシ pac 設定ファイルのサポート。</target>
        </trans-unit>
        <trans-unit id="71d6856cbeed3d9b8b852f3ad1b2a03051957e56" translate="yes" xml:space="preserve">
          <source>Automatic tunneling of HTTPS requests.</source>
          <target state="translated">HTTPS リクエストの自動トンネリング。</target>
        </trans-unit>
        <trans-unit id="74c401d09421f29deef996b528044972be956881" translate="yes" xml:space="preserve">
          <source>Automatically tested</source>
          <target state="translated">自動的にテストされる</target>
        </trans-unit>
        <trans-unit id="7da4ce13a2f3fbb8e22934abcbd3754550168043" translate="yes" xml:space="preserve">
          <source>Automatically update the native interfaces</source>
          <target state="translated">ネイティブインターフェースを自動的に更新</target>
        </trans-unit>
        <trans-unit id="0aaa6c2805a4003d001fcc85d498ac07bcf097e0" translate="yes" xml:space="preserve">
          <source>Automatically update your own interfaces</source>
          <target state="translated">独自のインターフェースを自動的に更新</target>
        </trans-unit>
        <trans-unit id="527de779bd39bb5579a224b9d2656d01769dcea4" translate="yes" xml:space="preserve">
          <source>Available APIs</source>
          <target state="translated">利用可能なAPI</target>
        </trans-unit>
        <trans-unit id="7bc70cf15916af21dbddd169d09b66d21fc01528" translate="yes" xml:space="preserve">
          <source>Available key codes</source>
          <target state="translated">利用可能なキーコード</target>
        </trans-unit>
        <trans-unit id="8036ec78ca75218a35881d7cd9e2c046e70a18a6" translate="yes" xml:space="preserve">
          <source>Available modifiers</source>
          <target state="translated">利用可能な修飾子</target>
        </trans-unit>
        <trans-unit id="7abc88d3addb10256d4ba424599d4db514e6bb02" translate="yes" xml:space="preserve">
          <source>Avoid fetching rarely changing resources from the internet if they could easily be bundled with your application.</source>
          <target state="translated">アプリケーションに簡単にバンドルされている場合は、ほとんど変化のないリソースをインターネットから取得しないようにしてください。</target>
        </trans-unit>
        <trans-unit id="9fefb28d5c9a502849abaf2b38532a593c2449ed" translate="yes" xml:space="preserve">
          <source>Avoid platform-dependent code:</source>
          <target state="translated">プラットフォームに依存したコードは避けましょう。</target>
        </trans-unit>
        <trans-unit id="68852895e0570a356c8af13b8388d1678a58501f" translate="yes" xml:space="preserve">
          <source>Azerbaijani</source>
          <target state="translated">Azerbaijani</target>
        </trans-unit>
        <trans-unit id="c93f3724f4b1e2dd366664c5ca7c87722fe941ec" translate="yes" xml:space="preserve">
          <source>Backbone Debugger</source>
          <target state="translated">バックボーンデバッガ</target>
        </trans-unit>
        <trans-unit id="27dcce424ffcd474e48acce835a11f61b8f7e1a9" translate="yes" xml:space="preserve">
          <source>Background and Requirements</source>
          <target state="translated">背景と要件</target>
        </trans-unit>
        <trans-unit id="30eb7d38820aba659de86c6866db55c95e748c6e" translate="yes" xml:space="preserve">
          <source>Backport Node's V8 patches to our copy of V8</source>
          <target state="translated">Node の V8 パッチを私たちのコピーである V8 にバックポートします。</target>
        </trans-unit>
        <trans-unit id="bb6f955aacbe511f0166d8a199d4db6ed90499a5" translate="yes" xml:space="preserve">
          <source>Backtrace</source>
          <target state="translated">Backtrace</target>
        </trans-unit>
        <trans-unit id="c87df04a6212fd94333fb48d7e78e47251cb9af4" translate="yes" xml:space="preserve">
          <source>Basque</source>
          <target state="translated">Basque</target>
        </trans-unit>
        <trans-unit id="4be2627f30ae49b7a9b0910b1561da08a30aebce" translate="yes" xml:space="preserve">
          <source>Because parameters, errors and return values are &lt;strong&gt;copied&lt;/strong&gt; when they are sent over the bridge, there are only certain types that can be used. At a high level, if the type you want to use can be serialized and deserialized into the same object it will work. A table of type support has been included below for completeness:</source>
          <target state="translated">パラメータ、エラー、および戻り値は、ブリッジを介して送信&lt;strong&gt;さ&lt;/strong&gt;れるときに&lt;strong&gt;コピーさ&lt;/strong&gt;れるため、使用できるのは特定のタイプのみです。大まかに言えば、使用するタイプを同じオブジェクトにシリアル化および逆シリアル化できる場合、それは機能します。完全を期すために、タイプサポートの表が以下に含まれています。</target>
        </trans-unit>
        <trans-unit id="45aa427b68c23a9206911e4ded0718521dc98bee" translate="yes" xml:space="preserve">
          <source>Because the requests made by Auto Update aren't under your direct control, you may find situations that are difficult to handle (such as if the update server is behind authentication). The &lt;code&gt;url&lt;/code&gt; field does support files, which means that with some effort, you can sidestep the server-communication aspect of the process. &lt;a href=&quot;https://github.com/electron/electron/issues/5020#issuecomment-477636990&quot;&gt;Here's an example of how this could work&lt;/a&gt;.</source>
          <target state="translated">自動更新によって行われた要求は直接制御されないため、処理が難しい状況が発生する可能性があります（更新サーバーが認証の背後にある場合など）。 &lt;code&gt;url&lt;/code&gt; フィールドには、いくつかの努力で、あなたがプロセスのサーバ通信様相を回避することができることを意味サポートファイルを、行います。&lt;a href=&quot;https://github.com/electron/electron/issues/5020#issuecomment-477636990&quot;&gt;これがどのように機能するかの例を次に示し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="4ff2cc445fe6850259e799ac6f7c260161793164" translate="yes" xml:space="preserve">
          <source>Before Node 10</source>
          <target state="translated">ノード10の前</target>
        </trans-unit>
        <trans-unit id="78f3072557e9cc20b557fd84b95a0029b13421dd" translate="yes" xml:space="preserve">
          <source>Before a &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;&amp;lt;WebView&amp;gt;&lt;/code&gt;&lt;/a&gt; tag is attached, Electron will fire the &lt;code&gt;will-attach-webview&lt;/code&gt; event on the hosting &lt;code&gt;webContents&lt;/code&gt;. Use the event to prevent the creation of WebViews with possibly insecure options.</source>
          <target state="translated">&lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;&amp;lt;WebView&amp;gt;&lt;/code&gt; &lt;/a&gt;タグが添付される前に、Electronはホストしている &lt;code&gt;webContents&lt;/code&gt; で &lt;code&gt;will-attach-webview&lt;/code&gt; イベントを発生させます。イベントを使用して、安全でない可能性のあるオプションでWebViewが作成されるのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="eb767147b1d38f8c2173893b47b5ca15910b95bf" translate="yes" xml:space="preserve">
          <source>Before a &lt;a href=&quot;../api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt; tag is attached, Electron will fire the &lt;code&gt;will-attach-webview&lt;/code&gt; event on the hosting &lt;code&gt;webContents&lt;/code&gt;. Use the event to prevent the creation of &lt;code&gt;webViews&lt;/code&gt; with possibly insecure options.</source>
          <target state="translated">&lt;a href=&quot;../api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt;タグが添付される前に、Electronはホスティング &lt;code&gt;webContents&lt;/code&gt; で &lt;code&gt;will-attach-webview&lt;/code&gt; イベントを発生させます。このイベントを使用して、安全でない可能性のあるオプションを &lt;code&gt;webViews&lt;/code&gt; が作成されないようにします。</target>
        </trans-unit>
        <trans-unit id="e23581386e393145c56ca61c344ca69d89a9ee90" translate="yes" xml:space="preserve">
          <source>Before a &lt;a href=&quot;api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt; tag is attached, Electron will fire the &lt;code&gt;will-attach-webview&lt;/code&gt; event on the hosting &lt;code&gt;webContents&lt;/code&gt;. Use the event to prevent the creation of &lt;code&gt;webViews&lt;/code&gt; with possibly insecure options.</source>
          <target state="translated">&lt;a href=&quot;api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt;タグが添付される前に、Electronはホスティング &lt;code&gt;webContents&lt;/code&gt; で &lt;code&gt;will-attach-webview&lt;/code&gt; イベントを発生させます。このイベントを使用して、安全でない可能性のあるオプションを &lt;code&gt;webViews&lt;/code&gt; が作成されないようにします。</target>
        </trans-unit>
        <trans-unit id="88386a43a16cac4f89fdea8745097dbf608185e7" translate="yes" xml:space="preserve">
          <source>Before a pull request can be merged, it &lt;strong&gt;must&lt;/strong&gt; have a pull request title with a semantic prefix.</source>
          <target state="translated">プルリクエストをマージする前に、セマンティックプレフィックスが付いたプルリクエストのタイトルが&lt;strong&gt;必要&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="c14231b3f1e242aed7e3ef713737e867875aef20" translate="yes" xml:space="preserve">
          <source>Before a pull request can be merged, it should include at least one semantic commit message, though it's not necessary for all commits in the pull request to be semantic. Alternatively, you can &lt;strong&gt;update your pull request title&lt;/strong&gt; to start with a semantic prefix.</source>
          <target state="translated">プルリクエストをマージする前に、プルリクエストのすべてのコミットがセマンティックである必要はありませんが、少なくとも1つのセマンティックコミットメッセージを含める必要があります。あるいは、セマンティックプレフィックスで始まる&lt;strong&gt;ようにプルリクエストのタイトル&lt;/strong&gt;を&lt;strong&gt;更新&lt;/strong&gt;でき&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="81eda7a2c90317467cf45f3de485cca0c89a2a28" translate="yes" xml:space="preserve">
          <source>Before adding a Node.js module to your application, examine said module. How many dependencies does that module include? What kind of resources does it need to simply be called in a &lt;code&gt;require()&lt;/code&gt; statement? You might find that the module with the most downloads on the NPM package registry or the most stars on GitHub is not in fact the leanest or smallest one available.</source>
          <target state="translated">Node.jsモジュールをアプリケーションに追加する前に、そのモジュールを調べてください。そのモジュールにはいくつの依存関係が含まれていますか？ &lt;code&gt;require()&lt;/code&gt; ステートメントで単純に呼び出す必要があるのはどのような種類のリソースですか？NPMパッケージレジストリでダウンロード数が最も多いモジュール、またはGitHubでスターが最も多いモジュールは、実際には利用可能な最もスリムまたは最小のモジュールではない場合があります。</target>
        </trans-unit>
        <trans-unit id="2684e603afc7c80ff573e243a04b2a37479fdfeb" translate="yes" xml:space="preserve">
          <source>Before proceeding with Electron you need to install &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js&lt;/a&gt;. We recommend that you install either the latest &lt;code&gt;LTS&lt;/code&gt; or &lt;code&gt;Current&lt;/code&gt; version available.</source>
          <target state="translated">Electronに進む前に、&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js&lt;/a&gt;をインストールする必要があります。利用可能な最新の &lt;code&gt;LTS&lt;/code&gt; または &lt;code&gt;Current&lt;/code&gt; バージョンのいずれかをインストールすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ed15b77aede767c1b301b0885eb6b8ae9687ff51" translate="yes" xml:space="preserve">
          <source>Before publishing to npm, you'll need to log into npm as Electron. Optionally, you may find &lt;a href=&quot;https://www.npmjs.com/package/npmrc&quot;&gt;npmrc&lt;/a&gt; to be a useful way to keep Electron's profile side-by-side with your own:</source>
          <target state="translated">npmに公開する前に、Electronとしてnpmにログインする必要があります。オプションで、&lt;a href=&quot;https://www.npmjs.com/package/npmrc&quot;&gt;npmrc&lt;/a&gt;は、Electronのプロファイルを独自のプロファイルと並べておくのに役立つ方法であることがわかります。</target>
        </trans-unit>
        <trans-unit id="ad03ef75d0df93ed26522801a179baa4ce38c0ff" translate="yes" xml:space="preserve">
          <source>Before running the CLI for the first time, you will have to setup the &quot;Windows Desktop App Converter&quot;. This will take a few minutes, but don't worry - you only have to do this once. Download and Desktop App Converter from &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/uwp/porting/desktop-to-uwp-run-desktop-app-converter&quot;&gt;here&lt;/a&gt;. You will receive two files: &lt;code&gt;DesktopAppConverter.zip&lt;/code&gt; and &lt;code&gt;BaseImage-14316.wim&lt;/code&gt;.</source>
          <target state="translated">初めてCLIを実行する前に、「Windowsデスクトップアプリコンバーター」をセットアップする必要があります。これには数分かかりますが、心配する必要はありません。これを行うのは一度だけです。&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/uwp/porting/desktop-to-uwp-run-desktop-app-converter&quot;&gt;こちら&lt;/a&gt;からデスクトップアプリコンバーターをダウンロードしてください。 &lt;code&gt;DesktopAppConverter.zip&lt;/code&gt; と &lt;code&gt;BaseImage-14316.wim&lt;/code&gt; の 2つのファイルを受け取ります。</target>
        </trans-unit>
        <trans-unit id="925916c686f05378c56f064c6fdb9dc8f0ab3a77" translate="yes" xml:space="preserve">
          <source>Before signing Windows builds, you must do the following:</source>
          <target state="translated">Windows ビルドに署名する前に、以下の作業を行う必要があります。</target>
        </trans-unit>
        <trans-unit id="af769cb7ca76764d746b06c177751bd0650781ab" translate="yes" xml:space="preserve">
          <source>Before signing macOS builds, you must do the following:</source>
          <target state="translated">macOSビルドに署名する前に、以下の作業を行う必要があります。</target>
        </trans-unit>
        <trans-unit id="04f57da1fb4c4fcb1e873d624e2f96955d212c17" translate="yes" xml:space="preserve">
          <source>Before signing your app, you need to know the Team ID of your account. To locate your Team ID, Sign in to &lt;a href=&quot;https://developer.apple.com/account/&quot;&gt;Apple Developer Center&lt;/a&gt;, and click Membership in the sidebar. Your Team ID appears in the Membership Information section under the team name.</source>
          <target state="translated">アプリに署名する前に、アカウントのチームIDを知っておく必要があります。チームIDを見つけるには、&lt;a href=&quot;https://developer.apple.com/account/&quot;&gt;Apple Developer Centerに&lt;/a&gt;サインインし、サイドバーの[メンバーシップ]をクリックします。チームIDは、メンバーシップ情報セクションのチーム名の下に表示されます。</target>
        </trans-unit>
        <trans-unit id="06d31aaad4ad6ca8d9a4754ed2454962c4c268b4" translate="yes" xml:space="preserve">
          <source>Before submitting your changes in a pull request, always run the full test suite. To run the tests:</source>
          <target state="translated">プルリクエストで変更内容を提出する前に、必ず完全なテストスイートを実行してください。テストを実行するには</target>
        </trans-unit>
        <trans-unit id="4bc1addd1ab423fa4789adccdc27c27f32a3e381" translate="yes" xml:space="preserve">
          <source>Before we can dive into Electron's APIs, we need to discuss the two process types available in Electron. They are fundamentally different and important to understand.</source>
          <target state="translated">ElectronのAPIに飛び込む前に、Electronで利用できる2つのプロセスタイプについて説明する必要があります。この2つのプロセスタイプは根本的に異なり、理解することが重要です。</target>
        </trans-unit>
        <trans-unit id="146605ea31df8384dfce11222459f79cedeff2f6" translate="yes" xml:space="preserve">
          <source>Begin subscribing for presentation events and captured frames, the &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(frameBuffer, dirtyRect)&lt;/code&gt; when there is a presentation event.</source>
          <target state="translated">プレゼンテーションイベントとキャプチャされたフレームの加入を開始し、 &lt;code&gt;callback&lt;/code&gt; 伴って呼び出される &lt;code&gt;callback(frameBuffer, dirtyRect)&lt;/code&gt; プレゼンテーションイベントがあります。</target>
        </trans-unit>
        <trans-unit id="a017af5e80e204ee4aab5d932bd6c88511cf049f" translate="yes" xml:space="preserve">
          <source>Begin subscribing for presentation events and captured frames, the &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(image, dirtyRect)&lt;/code&gt; when there is a presentation event.</source>
          <target state="translated">プレゼンテーションイベントとキャプチャされたフレームの加入を開始し、 &lt;code&gt;callback&lt;/code&gt; 伴って呼び出される &lt;code&gt;callback(image, dirtyRect)&lt;/code&gt; プレゼンテーションイベントがあります。</target>
        </trans-unit>
        <trans-unit id="b7187dcdcfaaad22b625e1ea1a41d96dcbf3ee8b" translate="yes" xml:space="preserve">
          <source>Behavior Changed: &lt;code&gt;nodeIntegration&lt;/code&gt; in child windows opened via &lt;code&gt;nativeWindowOpen&lt;/code&gt;</source>
          <target state="translated">動作が変更されました： &lt;code&gt;nodeIntegration&lt;/code&gt; を介して開かれた子ウィンドウの &lt;code&gt;nativeWindowOpen&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab27fb92c895062410f00c2c7c051540a2fe1de4" translate="yes" xml:space="preserve">
          <source>Behavior Changed: &lt;code&gt;webkitdirectory&lt;/code&gt; attribute for &lt;code&gt;&amp;lt;input type=&quot;file&quot;/&amp;gt;&lt;/code&gt; now lists directory contents</source>
          <target state="translated">動作が変更されました： &lt;code&gt;&amp;lt;input type=&quot;file&quot;/&amp;gt;&lt;/code&gt; &lt;code&gt;webkitdirectory&lt;/code&gt; 属性にディレクトリの内容が表示されるようになりました</target>
        </trans-unit>
        <trans-unit id="25c99f464f4221440812e390194b8b050f77dbc1" translate="yes" xml:space="preserve">
          <source>Behavior Changed: Sending non-JS objects over IPC now throws an exception</source>
          <target state="translated">挙動の変更:非JSオブジェクトをIPC経由で送信すると例外が発生するようになりました。</target>
        </trans-unit>
        <trans-unit id="d96aad14a60d3b757c585819ae276d3cc83274d1" translate="yes" xml:space="preserve">
          <source>Behavior Changed: Values sent over IPC are now serialized with Structured Clone Algorithm</source>
          <target state="translated">挙動が変更されました。IPC を介して送信された値は、構造化クローンアルゴリズムを使用してシリアライズされるようになりました。</target>
        </trans-unit>
        <trans-unit id="33f14c14004f97a29a6cc78548e85ee933dc89ed" translate="yes" xml:space="preserve">
          <source>Being based on Chromium, Electron requires a display driver to function. If Chromium can't find a display driver, Electron will fail to launch - and therefore not executing any of your tests, regardless of how you are running them. Testing Electron-based apps on Travis, Circle, Jenkins or similar Systems requires therefore a little bit of configuration. In essence, we need to use a virtual display driver.</source>
          <target state="translated">Chromiumをベースにしているため、Electronは機能するためにディスプレイドライバを必要とします。Chromiumがディスプレイドライバを見つけられない場合、Electronは起動に失敗します。そのため、Travis、Circle、Jenkinsなどのシステム上でElectronベースのアプリをテストするには、少しの設定が必要です。本質的には、仮想ディスプレイドライバを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2c7205595032bf70cf7a8260e25275d136c5ea00" translate="yes" xml:space="preserve">
          <source>Belarusian</source>
          <target state="translated">Belarusian</target>
        </trans-unit>
        <trans-unit id="77c8a3ffa876685a6624d57de24b92252306b0e8" translate="yes" xml:space="preserve">
          <source>Below are milestones in Electron's history.</source>
          <target state="translated">エレクトロンの歴史の中でのマイルストーンをご紹介します。</target>
        </trans-unit>
        <trans-unit id="47bc19d9eead7cd43863e72b19ea42b9781ad523" translate="yes" xml:space="preserve">
          <source>Below is a table explicitly mapping types of changes to their corresponding category of semver (e.g. Major, Minor, Patch).</source>
          <target state="translated">以下の表は、変更の種類と対応するセムバーのカテゴリ(例:メジャー、マイナー、パッチ)を明示的に対応付けたものです。</target>
        </trans-unit>
        <trans-unit id="df20885c8b353cbb6d314abd608559414e6cad80" translate="yes" xml:space="preserve">
          <source>Below is an example of a simple slot machine touch bar game with a button and some labels.</source>
          <target state="translated">以下は、ボタンといくつかのラベルを備えたシンプルなスロットマシンのタッチバーゲームの例です。</target>
        </trans-unit>
        <trans-unit id="08456e29c96ec1da0575093d1d911225ac6f826a" translate="yes" xml:space="preserve">
          <source>Below is an example of creating a menu dynamically in a web page (render process) by using the &lt;a href=&quot;api/remote&quot;&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/a&gt; module, and showing it when the user right clicks the page:</source>
          <target state="translated">以下は、&lt;a href=&quot;api/remote&quot;&gt; &lt;code&gt;remote&lt;/code&gt; &lt;/a&gt;モジュールを使用してWebページ（レンダリングプロセス）でメニューを動的に作成し、ユーザーがページを右クリックしたときに表示する例です。</target>
        </trans-unit>
        <trans-unit id="b5109d196ee48a9a9ef9758e435787aa3c2e57f0" translate="yes" xml:space="preserve">
          <source>Below is an example of creating a menu dynamically in a web page (render process) by using the &lt;a href=&quot;remote&quot;&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/a&gt; module, and showing it when the user right clicks the page:</source>
          <target state="translated">以下は、&lt;a href=&quot;remote&quot;&gt; &lt;code&gt;remote&lt;/code&gt; &lt;/a&gt;モジュールを使用してWebページ（レンダリングプロセス）でメニューを動的に作成し、ユーザーがページを右クリックしたときにメニューを表示する例です。</target>
        </trans-unit>
        <trans-unit id="f4465f784b2c04298788d3ed89b3076749452fcb" translate="yes" xml:space="preserve">
          <source>Below is an example of some of the additional options that may be set which may be different on each platform.</source>
          <target state="translated">以下に、プラットフォームごとに異なる可能性のある追加オプションを設定した例を示します。</target>
        </trans-unit>
        <trans-unit id="c8d1499fa70b3bf2e172266d876f94493830dc1d" translate="yes" xml:space="preserve">
          <source>Below the method is more detailed information on each of the arguments. The type of argument is notated by either the common types:</source>
          <target state="translated">メソッドの下には、各引数の詳細な情報があります。引数の型は、共通の型のいずれかで表記されます。</target>
        </trans-unit>
        <trans-unit id="198e9c0851a2cebe3440bd1cafd71b98e2d83392" translate="yes" xml:space="preserve">
          <source>Bengali</source>
          <target state="translated">Bengali</target>
        </trans-unit>
        <trans-unit id="1a64a539329669d22ab528af0f26784b48ba945c" translate="yes" xml:space="preserve">
          <source>Beta Releases and Bug Fixes</source>
          <target state="translated">ベータリリースとバグフィックス</target>
        </trans-unit>
        <trans-unit id="3c684d47d516e1c9c5afbdb2d9583d0a8defb9ad" translate="yes" xml:space="preserve">
          <source>Beta releases</source>
          <target state="translated">ベータリリース</target>
        </trans-unit>
        <trans-unit id="e043f93cdc1c8131a7afac8b95e46ea537d48613" translate="yes" xml:space="preserve">
          <source>Beta version change</source>
          <target state="translated">ベータ版の変更</target>
        </trans-unit>
        <trans-unit id="3acc244c8b77017fec8748a27cc74dfe9a794cff" translate="yes" xml:space="preserve">
          <source>Bihari</source>
          <target state="translated">Bihari</target>
        </trans-unit>
        <trans-unit id="26c87a44dbc3760c31488c9592cdd2d6729dd6ad" translate="yes" xml:space="preserve">
          <source>Blink is the name of the rendering engine behind Chromium. As with &lt;code&gt;experimentalFeatures&lt;/code&gt;, the &lt;code&gt;enableBlinkFeatures&lt;/code&gt; property allows developers to enable features that have been disabled by default.</source>
          <target state="translated">点滅は、Chromiumの背後にあるレンダリングエンジンの名前です。同様に &lt;code&gt;experimentalFeatures&lt;/code&gt; 、 &lt;code&gt;enableBlinkFeatures&lt;/code&gt; のプロパティを使用すると、開発者は、デフォルトでは無効になっている機能を有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="261b5efc5d3087ebb7a36e4fd992305a710a84cf" translate="yes" xml:space="preserve">
          <source>Block the system from entering low-power (sleep) mode.</source>
          <target state="translated">システムが低電力(スリープ)モードに入るのをブロックします。</target>
        </trans-unit>
        <trans-unit id="3c3d554f868a215afb320740293a62279ac25562" translate="yes" xml:space="preserve">
          <source>Blocking the main process</source>
          <target state="translated">主な工程のブロック</target>
        </trans-unit>
        <trans-unit id="e0e3ff639d9f6ae001486616b3edd9f38baec4d3" translate="yes" xml:space="preserve">
          <source>Blocking the renderer process</source>
          <target state="translated">レンダラープロセスをブロックする</target>
        </trans-unit>
        <trans-unit id="0b9d2b2362bc33581ba11fddcb0cf0590ebd3a7a" translate="yes" xml:space="preserve">
          <source>Blog</source>
          <target state="translated">Blog</target>
        </trans-unit>
        <trans-unit id="7c52ef314be6ccf843ccebe4dcc7d2303a132ad3" translate="yes" xml:space="preserve">
          <source>Blowfish - &lt;a href=&quot;https://www.schneier.com/cryptography/blowfish/&quot;&gt;https://www.schneier.com/cryptography/blowfish/&lt;/a&gt;</source>
          <target state="translated">ブローフィッシュ-https &lt;a href=&quot;https://www.schneier.com/cryptography/blowfish/&quot;&gt;://www.schneier.com/cryptography/blowfish/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c2abbd64ce2b596d241312e216d17be429160b5" translate="yes" xml:space="preserve">
          <source>BluetoothDevice</source>
          <target state="translated">BluetoothDevice</target>
        </trans-unit>
        <trans-unit id="b1b4a1505eb970667bee48b6139e6327d9ddf4cb" translate="yes" xml:space="preserve">
          <source>BluetoothDevice Object</source>
          <target state="translated">BluetoothDevice オブジェクト</target>
        </trans-unit>
        <trans-unit id="8ef910285d569f2b95a95ddd84e19e88471916fd" translate="yes" xml:space="preserve">
          <source>Boilerplate vs CLI</source>
          <target state="translated">ボイラープレートとCLI</target>
        </trans-unit>
        <trans-unit id="faf97d2b0ddcedafea04942e725afa3b3b5103c9" translate="yes" xml:space="preserve">
          <source>Boilerplates and CLIs</source>
          <target state="translated">ボイラープレートとCLI</target>
        </trans-unit>
        <trans-unit id="5f70c4b77c5189dbe8768575ccd9deed5001eeb2" translate="yes" xml:space="preserve">
          <source>Bookmarks array</source>
          <target state="translated">ブックマークの配列</target>
        </trans-unit>
        <trans-unit id="09273e0b3502cd35874b01a3ba91c106f87a667f" translate="yes" xml:space="preserve">
          <source>Bootstrapping</source>
          <target state="translated">Bootstrapping</target>
        </trans-unit>
        <trans-unit id="71d67418f341f2ca177be8a385287d08b2297a90" translate="yes" xml:space="preserve">
          <source>Bosnian</source>
          <target state="translated">Bosnian</target>
        </trans-unit>
        <trans-unit id="6c95ec9a03f3c42254e437b69d4f3a1ff084f5d4" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;ia32&lt;/code&gt; (&lt;code&gt;x86&lt;/code&gt;) and &lt;code&gt;x64&lt;/code&gt; (&lt;code&gt;amd64&lt;/code&gt;) binaries are provided for Windows. &lt;a href=&quot;tutorial/windows-arm&quot;&gt;Electron 6.0.8 and later add native support for Windows on Arm (&lt;code&gt;arm64&lt;/code&gt;) devices&lt;/a&gt;. Running apps packaged with previous versions is possible using the ia32 binary.</source>
          <target state="translated">&lt;code&gt;ia32&lt;/code&gt; （ &lt;code&gt;x86&lt;/code&gt; ）と &lt;code&gt;x64&lt;/code&gt; （ &lt;code&gt;amd64&lt;/code&gt; ）の両方のバイナリがWindows用に提供されています。&lt;a href=&quot;tutorial/windows-arm&quot;&gt;Electron 6.0.8以降では、Windows on Arm（ &lt;code&gt;arm64&lt;/code&gt; ）デバイスのネイティブサポートが追加されています&lt;/a&gt;。以前のバージョンでパッケージ化されたアプリの実行は、ia32バイナリを使用して可能です。</target>
        </trans-unit>
        <trans-unit id="c2d89587b7d4219c67ddeb9a448c403a137170a1" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;ia32&lt;/code&gt; (&lt;code&gt;x86&lt;/code&gt;) and &lt;code&gt;x64&lt;/code&gt; (&lt;code&gt;amd64&lt;/code&gt;) binaries are provided for Windows. &lt;a href=&quot;windows-arm&quot;&gt;Electron 6.0.8 and later add native support for Windows on Arm (&lt;code&gt;arm64&lt;/code&gt;) devices&lt;/a&gt;. Running apps packaged with previous versions is possible using the ia32 binary.</source>
          <target state="translated">&lt;code&gt;ia32&lt;/code&gt; （ &lt;code&gt;x86&lt;/code&gt; ）と &lt;code&gt;x64&lt;/code&gt; （ &lt;code&gt;amd64&lt;/code&gt; ）の両方のバイナリがWindows用に提供されています。&lt;a href=&quot;windows-arm&quot;&gt;Electron 6.0.8以降では、Windows on Arm（ &lt;code&gt;arm64&lt;/code&gt; ）デバイスのネイティブサポートが追加されています&lt;/a&gt;。以前のバージョンでパッケージ化されたアプリの実行は、ia32バイナリを使用して可能です。</target>
        </trans-unit>
        <trans-unit id="6bd3f193cefa90f1db70c15b6967bd6e1a41be51" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;ia32&lt;/code&gt; (&lt;code&gt;x86&lt;/code&gt;) and &lt;code&gt;x64&lt;/code&gt; (&lt;code&gt;amd64&lt;/code&gt;) binaries are provided for Windows. Running Electron apps on Windows for ARM devices is possible by using the ia32 binary.</source>
          <target state="translated">&lt;code&gt;ia32&lt;/code&gt; （ &lt;code&gt;x86&lt;/code&gt; ）と &lt;code&gt;x64&lt;/code&gt; （ &lt;code&gt;amd64&lt;/code&gt; ）の両方のバイナリがWindows用に提供されています。ARMデバイス用のWindowsでElectronアプリを実行するには、ia32バイナリを使用します。</target>
        </trans-unit>
        <trans-unit id="510e5d169b89ac5ba13d857aa54251d81b6edf83" translate="yes" xml:space="preserve">
          <source>Both Chromium and Node.js are impressive feats of engineering built by thousands of talented developers. Given their popularity, their security is carefully tested and analyzed by equally skilled security researchers. Many of those researchers &lt;a href=&quot;https://en.wikipedia.org/wiki/Responsible_disclosure&quot;&gt;disclose vulnerabilities responsibly&lt;/a&gt;, which generally means that researchers will give Chromium and Node.js some time to fix issues before publishing them. Your application will be more secure if it is running a recent version of Electron (and thus, Chromium and Node.js) for which potential security issues are not as widely known.</source>
          <target state="translated">ChromiumとNode.jsはどちらも、何千人もの才能ある開発者によって構築されたエンジニアリングの素晴らしい偉業です。それらの人気を考えると、それらのセキュリティは、同様に熟練したセキュリティ研究者によって注意深くテストおよび分析されます。これらの研究者の多くは&lt;a href=&quot;https://en.wikipedia.org/wiki/Responsible_disclosure&quot;&gt;責任を持って脆弱性を開示します&lt;/a&gt;。これは通常、研究者がChromiumとNode.jsに問題を公開する前に修正する時間を与えることを意味します。潜在的なセキュリティ問題がそれほど広く知られていない最新バージョンのElectron（したがって、ChromiumとNode.js）を実行している場合、アプリケーションはより安全になります。</target>
        </trans-unit>
        <trans-unit id="be4af2c353e15de29e8d93efea67b7388d43af34" translate="yes" xml:space="preserve">
          <source>Both of these tools are using the &lt;a href=&quot;https://github.com/GoogleChrome/accessibility-developer-tools&quot;&gt;Accessibility Developer Tools&lt;/a&gt; library built by Google for Chrome. You can learn more about the accessibility audit rules this library uses on that &lt;a href=&quot;https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules&quot;&gt;repository's wiki&lt;/a&gt;.</source>
          <target state="translated">これらのツールはどちらも、Google for Chromeによって構築された&lt;a href=&quot;https://github.com/GoogleChrome/accessibility-developer-tools&quot;&gt;Accessibility Developer Tools&lt;/a&gt;ライブラリを使用しています。このライブラリがその&lt;a href=&quot;https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules&quot;&gt;リポジトリのwikiで&lt;/a&gt;使用するアクセシビリティ監査ルールについて詳しく知ることができます。</target>
        </trans-unit>
        <trans-unit id="e9a1686778b35bbf4d4479bb987972a7fb446309" translate="yes" xml:space="preserve">
          <source>Both should build with no errors</source>
          <target state="translated">どちらもエラーなくビルドできるはずです。</target>
        </trans-unit>
        <trans-unit id="6b57344c80164ea02b63411ffe0ca16b0ba2cf06" translate="yes" xml:space="preserve">
          <source>Bounces the Downloads stack if the filePath is inside the Downloads folder.</source>
          <target state="translated">filePathがDownloadsフォルダ内にある場合、ダウンロードスタックをバウンスします。</target>
        </trans-unit>
        <trans-unit id="012355f5fc27c228945f8ac40c18e401aa26b67f" translate="yes" xml:space="preserve">
          <source>Breaking API Changes</source>
          <target state="translated">API の変更点を壊す</target>
        </trans-unit>
        <trans-unit id="168d8f07f55f7ed5aeb2e7c7250ac3448ffc7a03" translate="yes" xml:space="preserve">
          <source>Breaking API Changes (2.0)</source>
          <target state="translated">API の変更点を壊す (2.0)</target>
        </trans-unit>
        <trans-unit id="b16b2712638fee5d9fa2178501637e9b9272885f" translate="yes" xml:space="preserve">
          <source>Breaking API Changes (3.0)</source>
          <target state="translated">API の変更を壊す (3.0)</target>
        </trans-unit>
        <trans-unit id="8f6f50fe6a684e36f2680d1b1f0d995148104f1b" translate="yes" xml:space="preserve">
          <source>Breaking Changes</source>
          <target state="translated">ブレイキング・チェンジ</target>
        </trans-unit>
        <trans-unit id="01268e3bafd15a9b7617bf39df4b527cd76e6d8f" translate="yes" xml:space="preserve">
          <source>Breaking changes will be documented here, and deprecation warnings added to JS code where possible, at least &lt;a href=&quot;tutorial/electron-versioning#semver&quot;&gt;one major version&lt;/a&gt; before the change is made.</source>
          <target state="translated">&lt;a href=&quot;tutorial/electron-versioning#semver&quot;&gt;重大な&lt;/a&gt;変更はここに文書化され、変更が行われる前に少なくとも1つのメジャーバージョンで、可能な場合は非推奨の警告がJSコードに追加されます。</target>
        </trans-unit>
        <trans-unit id="cba591491d5beed4ba456b85b3bad4f1631094ea" translate="yes" xml:space="preserve">
          <source>Breton</source>
          <target state="translated">Breton</target>
        </trans-unit>
        <trans-unit id="6d19de09ba9d7749aec9c3648f36bca01c34240c" translate="yes" xml:space="preserve">
          <source>Brew some tea -- this may run for 30m or more.</source>
          <target state="translated">お茶を淹れる--これは30m以上走るかもしれない。</target>
        </trans-unit>
        <trans-unit id="c6fa28de9a14975b2c138ab9a406952d917d32a3" translate="yes" xml:space="preserve">
          <source>Brightray</source>
          <target state="translated">Brightray</target>
        </trans-unit>
        <trans-unit id="fc1a3ab849a525c1e10fcf025153d2e74047ba86" translate="yes" xml:space="preserve">
          <source>Brightray &lt;a href=&quot;https://github.com/electron-archive/brightray&quot;&gt;was&lt;/a&gt; a static library that made &lt;a href=&quot;#libchromiumcontent&quot;&gt;libchromiumcontent&lt;/a&gt; easier to use in applications. It is now deprecated and has been merged into Electron's codebase.</source>
          <target state="translated">Brightray &lt;a href=&quot;https://github.com/electron-archive/brightray&quot;&gt;は&lt;/a&gt;、アプリケーションで&lt;a href=&quot;#libchromiumcontent&quot;&gt;libchromiumcontentを&lt;/a&gt;使いやすくする静的ライブラリでした。現在は非推奨であり、Electronのコードベースにマージされています。</target>
        </trans-unit>
        <trans-unit id="8104b6cb4a86e53382b6cb3eeed05d66722548da" translate="yes" xml:space="preserve">
          <source>BrowserView</source>
          <target state="translated">BrowserView</target>
        </trans-unit>
        <trans-unit id="1d99d2f17a276b3ed6e3dd944ba35652373aebad" translate="yes" xml:space="preserve">
          <source>BrowserView()</source>
          <target state="translated">BrowserView()</target>
        </trans-unit>
        <trans-unit id="89205aa8324f923cea39254101a0b72e5fef92d8" translate="yes" xml:space="preserve">
          <source>BrowserViews</source>
          <target state="translated">BrowserViews</target>
        </trans-unit>
        <trans-unit id="71e1b99e946bc877e27e4bd82365f34ec3ab89f6" translate="yes" xml:space="preserve">
          <source>BrowserWindow</source>
          <target state="translated">BrowserWindow</target>
        </trans-unit>
        <trans-unit id="7603222d969d1b4d324286d0736713890e2e258f" translate="yes" xml:space="preserve">
          <source>BrowserWindow()</source>
          <target state="translated">BrowserWindow()</target>
        </trans-unit>
        <trans-unit id="0da57026bfae6f9e27e4573147b07c889cd2e951" translate="yes" xml:space="preserve">
          <source>BrowserWindowProxy</source>
          <target state="translated">BrowserWindowProxy</target>
        </trans-unit>
        <trans-unit id="35e61163a106af7a7045553426323d740f924747" translate="yes" xml:space="preserve">
          <source>Bug fixes and features should always come with tests. A &lt;a href=&quot;https://electronjs.org/docs/development/testing&quot;&gt;testing guide&lt;/a&gt; has been provided to make the process easier. Looking at other tests to see how they should be structured can also help.</source>
          <target state="translated">バグ修正と機能には常にテストが付属している必要があります。&lt;a href=&quot;https://electronjs.org/docs/development/testing&quot;&gt;テストガイドは、&lt;/a&gt;簡単にプロセスを作るために提供されています。他のテストを調べて、それらをどのように構成する必要があるかを確認することも役立ちます。</target>
        </trans-unit>
        <trans-unit id="18c1fa591b452c8d17b84bb91885920e14de3534" translate="yes" xml:space="preserve">
          <source>Bug fixes and features should always come with tests. A &lt;a href=&quot;testing&quot;&gt;testing guide&lt;/a&gt; has been provided to make the process easier. Looking at other tests to see how they should be structured can also help.</source>
          <target state="translated">バグの修正と機能には、常にテストが付属しています。&lt;a href=&quot;testing&quot;&gt;テストガイドは、&lt;/a&gt;簡単にプロセスを作るために提供されています。他のテストを見て、それらがどのように構成されるべきかを確認することも役立ちます。</target>
        </trans-unit>
        <trans-unit id="c2840ff145e20063d0960a433f0360c9e691485c" translate="yes" xml:space="preserve">
          <source>Bug fixes, regression fixes, and security patches can be admitted. Upon doing so, a new beta is released incrementing &lt;code&gt;N&lt;/code&gt;. e.g. &lt;code&gt;2.0.0-beta.2&lt;/code&gt;</source>
          <target state="translated">バグ修正、リグレッション修正、およびセキュリティパッチを許可できます。そうすることで、新しいベータがリリースされ、 &lt;code&gt;N&lt;/code&gt; が増加します。例： &lt;code&gt;2.0.0-beta.2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="558212cd299167a8f2dd310fd08530072aa7b37b" translate="yes" xml:space="preserve">
          <source>BugSplat</source>
          <target state="translated">BugSplat</target>
        </trans-unit>
        <trans-unit id="ce009fb57b439023d1a8feebe307ab4e851c2b10" translate="yes" xml:space="preserve">
          <source>Build Debug Electron with Debug libchromiumcontent</source>
          <target state="translated">デバッグ libchromiumcontent で Debug Electron をビルドする</target>
        </trans-unit>
        <trans-unit id="53637a316944a583c0e3ee3a30bb2ef0700fa1c3" translate="yes" xml:space="preserve">
          <source>Build Debug Electron with Release libchromiumcontent</source>
          <target state="translated">libchromiumcontentをリリースしてDebug Electronをビルドする</target>
        </trans-unit>
        <trans-unit id="063269248b07c74ca30cccad5c53724b2a7739ab" translate="yes" xml:space="preserve">
          <source>Build Electron.</source>
          <target state="translated">ビルド・エレクトロン</target>
        </trans-unit>
        <trans-unit id="d7a32a929cb4983c90c7618b02a0ddabe3681174" translate="yes" xml:space="preserve">
          <source>Build Instructions</source>
          <target state="translated">ビルドインストラクション</target>
        </trans-unit>
        <trans-unit id="72db67bcf73430a0810f7c243c27feeea417dba2" translate="yes" xml:space="preserve">
          <source>Build Instructions (Linux)</source>
          <target state="translated">ビルド手順書(Linux)</target>
        </trans-unit>
        <trans-unit id="bcc21053b45d486064d346a6ec856f6116f258f8" translate="yes" xml:space="preserve">
          <source>Build Instructions (Windows)</source>
          <target state="translated">ビルド手順書(Windows</target>
        </trans-unit>
        <trans-unit id="fdcc4e38ad590649eb4ed2665f66e12534e59055" translate="yes" xml:space="preserve">
          <source>Build Instructions (experimental GN build)</source>
          <target state="translated">ビルド手順書 (実験的GNビルド)</target>
        </trans-unit>
        <trans-unit id="dac9234fc3e48836ba6c1583ff4151f851fc17df" translate="yes" xml:space="preserve">
          <source>Build Instructions (macOS)</source>
          <target state="translated">ビルド手順 (macOS)</target>
        </trans-unit>
        <trans-unit id="b1f4e9a0c67d14f243003fc2683f3dc8bef6fc18" translate="yes" xml:space="preserve">
          <source>Build Scripts Hang Until Keypress</source>
          <target state="translated">ビルドスクリプトがキーを押すまでハングする</target>
        </trans-unit>
        <trans-unit id="add8e3220c66670d534a56cdd1b86b2eb8870394" translate="yes" xml:space="preserve">
          <source>Build System Overview</source>
          <target state="translated">ビルドシステムの概要</target>
        </trans-unit>
        <trans-unit id="bd46d68cd5835795a43e8b361a64d0a5c505fe47" translate="yes" xml:space="preserve">
          <source>Build Tools</source>
          <target state="translated">ビルドツール</target>
        </trans-unit>
        <trans-unit id="25a76846370a1a1a3908de6435689ad544b970af" translate="yes" xml:space="preserve">
          <source>Build Type</source>
          <target state="translated">造りのタイプ</target>
        </trans-unit>
        <trans-unit id="90d30b22aa9fc58d858400ce64afb6dda1667245" translate="yes" xml:space="preserve">
          <source>Build both &lt;code&gt;Release&lt;/code&gt; and &lt;code&gt;Debug&lt;/code&gt; targets:</source>
          <target state="translated">&lt;code&gt;Release&lt;/code&gt; ターゲットと &lt;code&gt;Debug&lt;/code&gt; ターゲットの両方をビルドします。</target>
        </trans-unit>
        <trans-unit id="d4a642dce0f4919a5431cdc1d46afc1a730730b4" translate="yes" xml:space="preserve">
          <source>Build both Release and Debug targets:</source>
          <target state="translated">リリースターゲットとデバッグターゲットの両方をビルドします。</target>
        </trans-unit>
        <trans-unit id="6f75aec30a2e78fca7bd4e7b1935c6e4a4d4bf09" translate="yes" xml:space="preserve">
          <source>Build steps and dependencies differ slightly depending on your operating system. See these detailed guides on building Electron locally:</source>
          <target state="translated">ビルドの手順や依存関係はオペレーティングシステムによって若干異なります。ローカルでのElectronのビルドについては、以下の詳細なガイドを参照してください。</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">Building</target>
        </trans-unit>
        <trans-unit id="029d356d4741d1e0ec0c762c4df9ed3b3ffd6520" translate="yes" xml:space="preserve">
          <source>Building &lt;code&gt;libchromiumcontent&lt;/code&gt; locally</source>
          <target state="translated">ローカルでの &lt;code&gt;libchromiumcontent&lt;/code&gt; の構築</target>
        </trans-unit>
        <trans-unit id="1a188721d023c91215b63a81ad3150e2e188780e" translate="yes" xml:space="preserve">
          <source>Building Electron</source>
          <target state="translated">ビルディング電子</target>
        </trans-unit>
        <trans-unit id="a3400774b0327c6db8692dc22e1d83b38560e5d5" translate="yes" xml:space="preserve">
          <source>Building Electron is done entirely with command-line scripts and cannot be done with Visual Studio. You can develop Electron with any editor but support for building with Visual Studio will come in the future.</source>
          <target state="translated">Electronのビルドはすべてコマンドラインスクリプトで行われ、Visual Studioではできません。Electronはどのエディタでも開発できますが、Visual Studioでのビルドは将来的にサポートされる予定です。</target>
        </trans-unit>
        <trans-unit id="1e9fb1b246bf30ef1b714dc27aaa5ed5ccae2be3" translate="yes" xml:space="preserve">
          <source>Building Electron with compilers other than &lt;code&gt;clang&lt;/code&gt; is not supported.</source>
          <target state="translated">&lt;code&gt;clang&lt;/code&gt; 以外のコンパイラを使用したElectronのビルドはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="d214e704224433d26f89aa63ba6d0caa8eb23c4e" translate="yes" xml:space="preserve">
          <source>Building libchromiumcontent requires a powerful machine and takes a long time (though incremental rebuilding the shared library component is fast). With an 8-core/16-thread Ryzen 1700 CPU clocked at 3ghz, fast SSD and 32GB of RAM, it should take about 40 minutes. It is not recommended to build with less than 16GB of RAM.</source>
          <target state="translated">libchromiumcontent のビルドには強力なマシンが必要で、長い時間がかかります (共有ライブラリコンポーネントのインクリメンタルリビルドは速いですが)。8コア/16スレッドのRyzen 1700 CPU、3GHzクロック、高速なSSD、32GBのRAMでは、約40分かかるはずです。16GB未満のRAMでビルドすることはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="463c7b751329c0c56ac3dd18dda6677767fc33c8" translate="yes" xml:space="preserve">
          <source>Building node:</source>
          <target state="translated">ノードを構築します。</target>
        </trans-unit>
        <trans-unit id="f2f7d4fa557f3fed6ad1053b7a047478101aeaef" translate="yes" xml:space="preserve">
          <source>Building on Linux</source>
          <target state="translated">Linux上でのビルド</target>
        </trans-unit>
        <trans-unit id="49b7debfb067ab3317a8f0b0d39d315446c647e1" translate="yes" xml:space="preserve">
          <source>Building on MacOS</source>
          <target state="translated">MacOS上でのビルド</target>
        </trans-unit>
        <trans-unit id="1584552650516d23c724e3791b74ab40bed5950d" translate="yes" xml:space="preserve">
          <source>Building on Windows</source>
          <target state="translated">Windows上での構築</target>
        </trans-unit>
        <trans-unit id="3b3f9f735796c97ebe09d8cabae2287556fb60d5" translate="yes" xml:space="preserve">
          <source>Building on macOS</source>
          <target state="translated">macOS上でのビルド</target>
        </trans-unit>
        <trans-unit id="f4bfe9c6f1d28cca2e44120e1b183616f2898a1d" translate="yes" xml:space="preserve">
          <source>Building with Goma</source>
          <target state="translated">ゴマを使った建物</target>
        </trans-unit>
        <trans-unit id="3ea5e3408ea8301ccd2bd3c95ebe2ca5b4c0f8cc" translate="yes" xml:space="preserve">
          <source>Builds are code-signed</source>
          <target state="translated">ビルドは暗号化されています</target>
        </trans-unit>
        <trans-unit id="df0fc4707258eb7d910b85b7f7b75c684d379f16" translate="yes" xml:space="preserve">
          <source>Builds are published to GitHub Releases</source>
          <target state="translated">ビルドはGitHub Releasesに公開されています。</target>
        </trans-unit>
        <trans-unit id="bc214c2f80fbdfd602cbc231920a3c44631fa8bd" translate="yes" xml:space="preserve">
          <source>Built in Electron Modules (such as &lt;code&gt;ipc&lt;/code&gt;, &lt;code&gt;app&lt;/code&gt;)</source>
          <target state="translated">組み込みの電子モジュール（ &lt;code&gt;ipc&lt;/code&gt; 、 &lt;code&gt;app&lt;/code&gt; など）</target>
        </trans-unit>
        <trans-unit id="6b4aff4a61d1b9d1dbd303a4a38055867f3e95db" translate="yes" xml:space="preserve">
          <source>Built in Node Modules (such as &lt;code&gt;path&lt;/code&gt;)</source>
          <target state="translated">組み込みノードモジュール（ &lt;code&gt;path&lt;/code&gt; など）</target>
        </trans-unit>
        <trans-unit id="cebed7688a5babc3ef7b5a3e8aa43667d482a257" translate="yes" xml:space="preserve">
          <source>Bulgarian</source>
          <target state="translated">Bulgarian</target>
        </trans-unit>
        <trans-unit id="5e8da9b6d1dd5417bc481aa5716c72294ecb9f50" translate="yes" xml:space="preserve">
          <source>Bundle your code</source>
          <target state="translated">コードをバンドルする</target>
        </trans-unit>
        <trans-unit id="72a21b08484b79af7d4e3e4645f7d438234925fe" translate="yes" xml:space="preserve">
          <source>But if you want to keep the abilities of using Node.js and Electron APIs, you have to rename the symbols in the page before including other libraries:</source>
          <target state="translated">しかし、Node.jsやElectron APIを使う能力を維持したいのであれば、他のライブラリを入れる前にページ内のシンボルの名前を変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="ff096db618d4083afc69edcf6ce292542803f0c6" translate="yes" xml:space="preserve">
          <source>But remember the callback is referenced by the main process until you explicitly uninstall it. If you do not, each time you reload your window the callback will be installed again, leaking one callback for each restart.</source>
          <target state="translated">しかし、明示的にアンインストールするまでは、コールバックはメインプロセスから参照されることを覚えておいてください。そうしないと、ウィンドウをリロードするたびにコールバックがインストールされ、再起動するたびにコールバックが1つずつ漏れてしまいます。</target>
        </trans-unit>
        <trans-unit id="caad5a1e00db7deaac448b433c96d138fb770b4a" translate="yes" xml:space="preserve">
          <source>But there are also fundamental differences between the two projects that make Electron a completely separate product from NW.js:</source>
          <target state="translated">しかし、ElectronをNW.jsとは完全に別物にしてしまう根本的な違いもあります。</target>
        </trans-unit>
        <trans-unit id="4e0d050ef492bd9db135aa537d58b5c789d89d60" translate="yes" xml:space="preserve">
          <source>Button support on macOS</source>
          <target state="translated">macOSでのボタンサポート</target>
        </trans-unit>
        <trans-unit id="7097fd2a82d62d79f805da1fe78933be73ca729b" translate="yes" xml:space="preserve">
          <source>By default Electron is built with prebuilt &lt;a href=&quot;https://clang.llvm.org/get_started.html&quot;&gt;&lt;code&gt;clang&lt;/code&gt;&lt;/a&gt; binaries provided by the Chromium project. If for some reason you want to build with the &lt;code&gt;clang&lt;/code&gt; installed in your system, you can call &lt;code&gt;bootstrap.py&lt;/code&gt; with &lt;code&gt;--clang_dir=&amp;lt;path&amp;gt;&lt;/code&gt; switch. By passing it the build script will assume the &lt;code&gt;clang&lt;/code&gt; binaries reside in &lt;code&gt;&amp;lt;path&amp;gt;/bin/&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、ElectronはChromiumプロジェクトが提供するビルド済みの&lt;a href=&quot;https://clang.llvm.org/get_started.html&quot;&gt; &lt;code&gt;clang&lt;/code&gt; &lt;/a&gt;バイナリを使用してビルドされています。何らかの理由でシステムにインストールされた &lt;code&gt;clang&lt;/code&gt; を使用してビルドする場合は、 &lt;code&gt;--clang_dir=&amp;lt;path&amp;gt;&lt;/code&gt; スイッチを指定して &lt;code&gt;bootstrap.py&lt;/code&gt; を呼び出すことができます。これを渡すと、ビルドスクリプトは &lt;code&gt;clang&lt;/code&gt; バイナリが &lt;code&gt;&amp;lt;path&amp;gt;/bin/&lt;/code&gt; と想定します。</target>
        </trans-unit>
        <trans-unit id="7c90757fabb90a9b778af9a3fd4b20533a26c919" translate="yes" xml:space="preserve">
          <source>By default Electron is built with prebuilt &lt;a href=&quot;https://clang.llvm.org/get_started.html&quot;&gt;&lt;code&gt;clang&lt;/code&gt;&lt;/a&gt; binaries provided by the Chromium project. If for some reason you want to build with the &lt;code&gt;clang&lt;/code&gt; installed in your system, you can specify the &lt;code&gt;clang_base_path&lt;/code&gt; argument in the GN args.</source>
          <target state="translated">デフォルトでは、ElectronはChromiumプロジェクトによって提供されるビルド済みの&lt;a href=&quot;https://clang.llvm.org/get_started.html&quot;&gt; &lt;code&gt;clang&lt;/code&gt; &lt;/a&gt;バイナリでビルドされます。何らかの理由でシステムに &lt;code&gt;clang&lt;/code&gt; をインストールしてビルドする場合は、GN引数に &lt;code&gt;clang_base_path&lt;/code&gt; 引数を指定できます。</target>
        </trans-unit>
        <trans-unit id="cac5b2129f5823dc18e255456b71a44e5158120a" translate="yes" xml:space="preserve">
          <source>By default Electron manages the devtools by creating an internal &lt;code&gt;WebContents&lt;/code&gt; with native view, which developers have very limited control of. With the &lt;code&gt;setDevToolsWebContents&lt;/code&gt; method, developers can use any &lt;code&gt;WebContents&lt;/code&gt; to show the devtools in it, including &lt;code&gt;BrowserWindow&lt;/code&gt;, &lt;code&gt;BrowserView&lt;/code&gt; and &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">デフォルトでは、Electronは、開発者が制御できる制御が非常に限られているネイティブビューの内部 &lt;code&gt;WebContents&lt;/code&gt; を作成することにより、devtoolsを管理します。 &lt;code&gt;setDevToolsWebContents&lt;/code&gt; の方法、開発者は、任意の使用することができます &lt;code&gt;WebContents&lt;/code&gt; を含むことでデベロッパーツール、表示するために &lt;code&gt;BrowserWindow&lt;/code&gt; 、 &lt;code&gt;BrowserView&lt;/code&gt; と &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; タグを。</target>
        </trans-unit>
        <trans-unit id="96c716d6a8d876d38cdcaa950e133d3f3b63795b" translate="yes" xml:space="preserve">
          <source>By default Electron will download hunspell dictionaries from the Chromium CDN. If you want to override this behavior you can use this API to point the dictionary downloader at your own hosted version of the hunspell dictionaries. We publish a &lt;code&gt;hunspell_dictionaries.zip&lt;/code&gt; file with each release which contains the files you need to host here, the file server must be &lt;strong&gt;case insensitive&lt;/strong&gt; you must upload each file twice, once with the case it has in the ZIP file and once with the filename as all lower case.</source>
          <target state="translated">デフォルトでは、ElectronはChromiumCDNからhunspell辞書をダウンロードします。この動作をオーバーライドする場合は、このAPIを使用して、辞書ダウンローダーを独自にホストしているバージョンのhunspell辞書にポイントできます。ここでホストする必要のあるファイルを含む各リリースで &lt;code&gt;hunspell_dictionaries.zip&lt;/code&gt; ファイルを公​​開します。ファイルサーバーは&lt;strong&gt;大文字と小文字&lt;/strong&gt;を&lt;strong&gt;区別し&lt;/strong&gt;ない必要があります。各ファイルを2回アップロードする必要があります。1回はZIPファイルにある場合、もう1回はファイル名としてすべて小文字。</target>
        </trans-unit>
        <trans-unit id="de27edf5a4d091261158a9adca2828e69992166d" translate="yes" xml:space="preserve">
          <source>By default a new &lt;code&gt;BrowserWindow&lt;/code&gt; will be created for the &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;url&lt;/code&gt; に対して新しい &lt;code&gt;BrowserWindow&lt;/code&gt; が作成されます。</target>
        </trans-unit>
        <trans-unit id="f57906575d3eb0334c6047697d42d14d28e69c58" translate="yes" xml:space="preserve">
          <source>By default inspector websocket url is available in stderr and under /json/list endpoint on http://host:port/json/list.</source>
          <target state="translated">デフォルトでは、インスペクタのwebsocketのURLは標準エラーで、http://host:port/json/list の/json/listエンドポイントの下にあります。</target>
        </trans-unit>
        <trans-unit id="587a430f2d5bcfd83fe0de15afe679db9a81ff75" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;scheme&lt;/code&gt; is treated like &lt;code&gt;http:&lt;/code&gt;, which is parsed differently from protocols that follow the &quot;generic URI syntax&quot; like &lt;code&gt;file:&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;scheme&lt;/code&gt; は &lt;code&gt;http:&lt;/code&gt; のように扱われます。これは、 &lt;code&gt;file:&lt;/code&gt; のような「一般的なURI構文」に従うプロトコルとは異なる方法で解析されます。</target>
        </trans-unit>
        <trans-unit id="ea2105bda037c93ea2b0a0fc7ce53440ef249587" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;scheme&lt;/code&gt; is treated like &lt;code&gt;http:&lt;/code&gt;, which is parsed differently than protocols that follow the &quot;generic URI syntax&quot; like &lt;code&gt;file:&lt;/code&gt;, so you probably want to call &lt;code&gt;protocol.registerStandardSchemes&lt;/code&gt; to have your scheme treated as a standard scheme.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;scheme&lt;/code&gt; は &lt;code&gt;http:&lt;/code&gt; のように扱われます。これは、 &lt;code&gt;file:&lt;/code&gt; のような「汎用URI構文」に従うプロトコルとは異なる方法で解析されるため、プロトコルを標準スキームとして扱うために &lt;code&gt;protocol.registerStandardSchemes&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="bd45c9f8b980fb9f26a362d12580425f3455ee53" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;webview&lt;/code&gt; tag is disabled in Electron &amp;gt;= 5. You need to enable the tag by setting the &lt;code&gt;webviewTag&lt;/code&gt; webPreferences option when constructing your &lt;code&gt;BrowserWindow&lt;/code&gt;. For more information see the &lt;a href=&quot;api/browser-window&quot;&gt;BrowserWindow constructor docs&lt;/a&gt;.</source>
          <target state="translated">デフォルトで &lt;code&gt;webview&lt;/code&gt; タグが電子&amp;gt; = 5で無効になっているあなたは、設定することで、タグを有効にする必要があり &lt;code&gt;webviewTag&lt;/code&gt; あなたの構築時にwebPreferencesオプションを &lt;code&gt;BrowserWindow&lt;/code&gt; を。詳細については、&lt;a href=&quot;api/browser-window&quot;&gt;BrowserWindowコンストラクターのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a41c95c2c21d4cd5f3c7ca8df40debf15da2d4f8" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;webview&lt;/code&gt; tag is disabled in Electron &amp;gt;= 5. You need to enable the tag by setting the &lt;code&gt;webviewTag&lt;/code&gt; webPreferences option when constructing your &lt;code&gt;BrowserWindow&lt;/code&gt;. For more information see the &lt;a href=&quot;browser-window&quot;&gt;BrowserWindow constructor docs&lt;/a&gt;.</source>
          <target state="translated">デフォルトで &lt;code&gt;webview&lt;/code&gt; タグが電子&amp;gt; = 5で無効になっているあなたは、設定することで、タグを有効にする必要があり &lt;code&gt;webviewTag&lt;/code&gt; あなたの構築時にwebPreferencesオプションを &lt;code&gt;BrowserWindow&lt;/code&gt; を。詳細については、&lt;a href=&quot;browser-window&quot;&gt;BrowserWindowコンストラクターのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="edca7c6481430ce7acc15073e33b880e74e1bfd3" translate="yes" xml:space="preserve">
          <source>By default the HTTP request will reuse the current session. If you want the request to have a different session you should set &lt;code&gt;session&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、HTTPリクエストは現在のセッションを再利用します。リクエストに別のセッションを持たせたい場合は、 &lt;code&gt;session&lt;/code&gt; を &lt;code&gt;null&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="60bb08791619667db0c408750cf1458d8822615c" translate="yes" xml:space="preserve">
          <source>By default the new instance will use the same working directory and command line arguments with current instance. When &lt;code&gt;args&lt;/code&gt; is specified, the &lt;code&gt;args&lt;/code&gt; will be passed as command line arguments instead. When &lt;code&gt;execPath&lt;/code&gt; is specified, the &lt;code&gt;execPath&lt;/code&gt; will be executed for relaunch instead of current app.</source>
          <target state="translated">デフォルトでは、新しいインスタンスは現在のインスタンスと同じ作業ディレクトリとコマンドライン引数を使用します。ときに &lt;code&gt;args&lt;/code&gt; 指定され、 &lt;code&gt;args&lt;/code&gt; が代わりにコマンドライン引数として渡されます。場合 &lt;code&gt;execPath&lt;/code&gt; が指定されている、 &lt;code&gt;execPath&lt;/code&gt; は代わりに、現在のアプリのリニューアルのために実行されます。</target>
        </trans-unit>
        <trans-unit id="5407114fa34fee9b122b0e601adc4ad721c434c7" translate="yes" xml:space="preserve">
          <source>By default the spellchecker will enable the language matching the current OS locale.</source>
          <target state="translated">デフォルトでは、スペルチェッカーは現在のOSのロケールにマッチする言語を有効にします。</target>
        </trans-unit>
        <trans-unit id="40beb77cbdb48291d0543f9cf28bcd0932d25745" translate="yes" xml:space="preserve">
          <source>By default this API will return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、このAPIは &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ff45e73ebf4cfd1db10ea07a681cdedb033e4f17" translate="yes" xml:space="preserve">
          <source>By default web storage apis (localStorage, sessionStorage, webSQL, indexedDB, cookies) are disabled for non standard schemes. So in general if you want to register a custom protocol to replace the &lt;code&gt;http&lt;/code&gt; protocol, you have to register it as a standard scheme.</source>
          <target state="translated">デフォルトでは、非標準スキームではWebストレージAPI（localStorage、sessionStorage、webSQL、indexedDB、cookies）が無効になっています。したがって、一般に、 &lt;code&gt;http&lt;/code&gt; プロトコルを置き換えるためにカスタムプロトコルを登録する場合は、標準スキームとして登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="e6ba43155d32a233fe31755ffc82f2a2ad4a72ed" translate="yes" xml:space="preserve">
          <source>By default web storage apis (localStorage, sessionStorage, webSQL, indexedDB, cookies) are disabled for non standard schemes. So in general if you want to register a custom protocol to replace the &lt;code&gt;http&lt;/code&gt; protocol, you have to register it as a standard scheme:</source>
          <target state="translated">デフォルトでは、非標準のスキームではWebストレージAPI（localStorage、sessionStorage、webSQL、indexedDB、Cookie）は無効になっています。したがって、一般に、カスタムプロトコルを登録して &lt;code&gt;http&lt;/code&gt; プロトコルを置き換える場合は、それを標準スキームとして登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="bf49fe230febabe5d94c3e78b52a4787206bfe38" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ELECTRON_CUSTOM_DIR&lt;/code&gt; is set to &lt;code&gt;v$VERSION&lt;/code&gt;. To change the format, use the &lt;code&gt;{{ version }}&lt;/code&gt; placeholder. For example, &lt;code&gt;version-{{ version }}&lt;/code&gt; resolves to &lt;code&gt;version-5.0.0&lt;/code&gt;, &lt;code&gt;{{ version }}&lt;/code&gt; resolves to &lt;code&gt;5.0.0&lt;/code&gt;, and &lt;code&gt;v{{ version }}&lt;/code&gt; is equivalent to the default. As a more concrete example, to use the China non-CDN mirror:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;ELECTRON_CUSTOM_DIR&lt;/code&gt; は &lt;code&gt;v$VERSION&lt;/code&gt; 設定されています。形式を変更するには、 &lt;code&gt;{{ version }}&lt;/code&gt; プレースホルダーを使用します。たとえば、 &lt;code&gt;version-{{ version }}&lt;/code&gt; は &lt;code&gt;version-5.0.0&lt;/code&gt; に解決され、 &lt;code&gt;{{ version }}&lt;/code&gt; は &lt;code&gt;5.0.0&lt;/code&gt; に解決され、 &lt;code&gt;v{{ version }}&lt;/code&gt; はデフォルトと同等です。より具体的な例として、中国の非CDNミラーを使用するには：</target>
        </trans-unit>
        <trans-unit id="b4e5b67ec26843b6e5f64ffc1ab8e332c695c6ee" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;libchromiumcontent&lt;/code&gt; is downloaded from Amazon Web Services. If the &lt;code&gt;LIBCHROMIUMCONTENT_MIRROR&lt;/code&gt; environment variable is set, the bootstrap script will download from it. &lt;a href=&quot;https://github.com/hokein/libchromiumcontent-qiniu-mirror&quot;&gt;&lt;code&gt;libchromiumcontent-qiniu-mirror&lt;/code&gt;&lt;/a&gt; is a mirror for &lt;code&gt;libchromiumcontent&lt;/code&gt;. If you have trouble in accessing AWS, you can switch the download address to it via &lt;code&gt;export LIBCHROMIUMCONTENT_MIRROR=http://7xk3d2.dl1.z0.glb.clouddn.com/&lt;/code&gt;</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;libchromiumcontent&lt;/code&gt; はAmazon Web Servicesからダウンロードされます。場合 &lt;code&gt;LIBCHROMIUMCONTENT_MIRROR&lt;/code&gt; の環境変数が設定され、ブートストラップスクリプトはそれからダウンロードします。&lt;a href=&quot;https://github.com/hokein/libchromiumcontent-qiniu-mirror&quot;&gt; &lt;code&gt;libchromiumcontent-qiniu-mirror&lt;/code&gt; &lt;/a&gt;のためのミラーである &lt;code&gt;libchromiumcontent&lt;/code&gt; 。AWSへのアクセスに問題がある場合は、 &lt;code&gt;export LIBCHROMIUMCONTENT_MIRROR=http://7xk3d2.dl1.z0.glb.clouddn.com/&lt;/code&gt; を使用して、ダウンロードアドレスをAWSに切り替えることができます。</target>
        </trans-unit>
        <trans-unit id="5556b55648e7d552a8b732a327f3e8a141a1bf06" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;node-gyp&lt;/code&gt; unpacks Electron's node headers and downloads the x86 and x64 versions of &lt;code&gt;node.lib&lt;/code&gt; into &lt;code&gt;%APPDATA%\..\Local\node-gyp\Cache&lt;/code&gt;, but it does not download the arm64 version (&lt;a href=&quot;https://github.com/nodejs/node-gyp/pull/1875&quot;&gt;a fix for this is in development&lt;/a&gt;.) To fix this:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;node-gyp&lt;/code&gt; 電子のノード・ヘッダおよびダウンロードx86およびxのx64バージョンのアンパック &lt;code&gt;node.lib&lt;/code&gt; に &lt;code&gt;%APPDATA%\..\Local\node-gyp\Cache&lt;/code&gt; が、それはarm64のバージョンをダウンロードしません（&lt;a href=&quot;https://github.com/nodejs/node-gyp/pull/1875&quot;&gt;このための修正をは開発中&lt;/a&gt;です。）これを修正するには：</target>
        </trans-unit>
        <trans-unit id="04f2befcfe6732f3c3af49fc996331e1153f12e0" translate="yes" xml:space="preserve">
          <source>By default, Chromium disables 3D APIs (e.g. WebGL) until restart on a per domain basis if the GPU processes crashes too frequently. This function disables that behavior.</source>
          <target state="translated">デフォルトでは、GPUプロセスが頻繁にクラッシュすると、Chromiumはドメイン単位で再起動するまで3D API(WebGLなど)を無効にします。この機能はその動作を無効化します。</target>
        </trans-unit>
        <trans-unit id="53b8e2a623aa4e87f66fa5abcaee0309e55850da" translate="yes" xml:space="preserve">
          <source>By default, Chromium disables 3D APIs (e.g. WebGL) until restart on a per domain basis if the GPU processes crashes too frequently. This function disables that behaviour.</source>
          <target state="translated">デフォルトでは、GPUプロセスが頻繁にクラッシュすると、Chromiumはドメイン単位で再起動するまで3D API(WebGLなど)を無効にします。この機能はその動作を無効にします。</target>
        </trans-unit>
        <trans-unit id="34f30dd60e231723a06791f6517abbf0f7de6da1" translate="yes" xml:space="preserve">
          <source>By default, Electron will automatically approve all permission requests unless the developer has manually configured a custom handler. While a solid default, security-conscious developers might want to assume the very opposite.</source>
          <target state="translated">デフォルトでは、開発者がカスタムハンドラを手動で設定しない限り、Electronはすべての権限要求を自動的に承認します。デフォルトはしっかりとしていますが、セキュリティを重視する開発者はその逆を想定した方が良いかもしれません。</target>
        </trans-unit>
        <trans-unit id="8c5c8cf8a254953d45737bb04f1868979a5a4e2b" translate="yes" xml:space="preserve">
          <source>By default, Electron will not allow websites loaded over &lt;code&gt;HTTPS&lt;/code&gt; to load and execute scripts, CSS, or plugins from insecure sources (&lt;code&gt;HTTP&lt;/code&gt;). Setting the property &lt;code&gt;allowRunningInsecureContent&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; disables that protection.</source>
          <target state="translated">デフォルトでは、エレクトロンは &lt;code&gt;HTTPS&lt;/code&gt; 経由でロードされたWebサイトが安全でないソース（ &lt;code&gt;HTTP&lt;/code&gt; ）からスクリプト、CSS、またはプラグインをロードして実行することを許可しません。プロパティ &lt;code&gt;allowRunningInsecureContent&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、その保護が無効になります。</target>
        </trans-unit>
        <trans-unit id="65f1f239f0f550fbf0278d120266db9415d7767d" translate="yes" xml:space="preserve">
          <source>By default, a newly generated Google API key may not be allowed to make geocoding requests. To enable geocoding requests, visit &lt;a href=&quot;https://console.developers.google.com/apis/api/geolocation/overview&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、新しく生成されたGoogle APIキーはジオコーディングリクエストを行うことができない場合があります。ジオコーディングリクエストを有効にするには、&lt;a href=&quot;https://console.developers.google.com/apis/api/geolocation/overview&quot;&gt;このページ&lt;/a&gt;にアクセスしてください。</target>
        </trans-unit>
        <trans-unit id="2cf1e62a08908a0978bb3b57c53bca75bd06aa38" translate="yes" xml:space="preserve">
          <source>By default, a newly generated Google API key may not be allowed to make geolocation requests. To enable the geolocation webservice for your project, enable it through the &lt;a href=&quot;https://console.cloud.google.com/apis/library&quot;&gt;API library&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、新しく生成されたGoogleAPIキーはジオロケーションリクエストを行うことを許可されない場合があります。プロジェクトでジオロケーションWebサービスを有効にするには、&lt;a href=&quot;https://console.cloud.google.com/apis/library&quot;&gt;APIライブラリを使用&lt;/a&gt;して有効にします。</target>
        </trans-unit>
        <trans-unit id="f2834667dade5c41a47d6c4b3caed6b8893edf08" translate="yes" xml:space="preserve">
          <source>By default, an empty &lt;code&gt;options&lt;/code&gt; will be regarded as:</source>
          <target state="translated">デフォルトでは、空の &lt;code&gt;options&lt;/code&gt; は次のように見なされます。</target>
        </trans-unit>
        <trans-unit id="94bbc84282bd18312c91d0c1fe6e76e9498dda90" translate="yes" xml:space="preserve">
          <source>By default, if an app of the same name as the one being moved exists in the Applications directory and is &lt;em&gt;not&lt;/em&gt; running, the existing app will be trashed and the active app moved into its place. If it &lt;em&gt;is&lt;/em&gt; running, the pre-existing running app will assume focus and the previously active app will quit itself. This behavior can be changed by providing the optional conflict handler, where the boolean returned by the handler determines whether or not the move conflict is resolved with default behavior. i.e. returning &lt;code&gt;false&lt;/code&gt; will ensure no further action is taken, returning &lt;code&gt;true&lt;/code&gt; will result in the default behavior and the method continuing.</source>
          <target state="translated">デフォルトでは、移動するアプリと同じ名前のアプリがアプリケーションディレクトリに存在し、実行されて&lt;em&gt;いない&lt;/em&gt;場合、既存のアプリは破棄され、アクティブなアプリがその場所に移動されます。それは場合は&lt;em&gt;されて&lt;/em&gt;実行されている、既存の実行中のアプリがフォーカスを想定し、以前にアクティブなアプリが自身を終了します。この動作は、オプションの競合ハンドラーを提供することで変更できます。ハンドラーによって返されるブール値によって、移動の競合がデフォルトの動作で解決されるかどうかが決まります。つまり、 &lt;code&gt;false&lt;/code&gt; を返すと、それ以上のアクションは実行されなくなり、 &lt;code&gt;true&lt;/code&gt; を返すと、デフォルトの動作になり、メソッドが続行されます。</target>
        </trans-unit>
        <trans-unit id="22133e6fda9bf59c88969ededbefa121012b3e78" translate="yes" xml:space="preserve">
          <source>By default, items will be inserted in the order they exist in the template unless one of the specified positioning keywords is used.</source>
          <target state="translated">デフォルトでは、指定された位置決めキーワードのいずれかが使用されない限り、項目はテンプレート内に存在する順序で挿入されます。</target>
        </trans-unit>
        <trans-unit id="4d0df8ba9eae5a501866a2ab238f059856b094b2" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;npm start&lt;/code&gt; command will run the main script with Node.js. To run the script with Electron, you need to change it as such:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;npm start&lt;/code&gt; コマンドはNode.jsを使用してメインスクリプトを実行します。Electronでスクリプトを実行するには、次のようにスクリプトを変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="fa796e8dd366ac241a58243e69a0b12d5849f835" translate="yes" xml:space="preserve">
          <source>By default, the frameless window is non-draggable. Apps need to specify &lt;code&gt;-webkit-app-region: drag&lt;/code&gt; in CSS to tell Electron which regions are draggable (like the OS's standard titlebar), and apps can also use &lt;code&gt;-webkit-app-region: no-drag&lt;/code&gt; to exclude the non-draggable area from the draggable region. Note that only rectangular shapes are currently supported.</source>
          <target state="translated">デフォルトでは、フレームのないウィンドウはドラッグできません。アプリでは、CSSで &lt;code&gt;-webkit-app-region: drag&lt;/code&gt; を指定して、ドラッグ可能な領域（OSの標準のタイトルバーなど）をElectronに通知する必要があります。また、アプリで &lt;code&gt;-webkit-app-region: no-drag&lt;/code&gt; を使用して、ドラッグできないものを除外することもできます。ドラッグ可能な領域の領域。現在、長方形のみがサポートされていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b5249d8fda4da39e61e39b89d96725eea6041b08" translate="yes" xml:space="preserve">
          <source>By default, the new instance will use the same working directory and command line arguments with current instance. When &lt;code&gt;args&lt;/code&gt; is specified, the &lt;code&gt;args&lt;/code&gt; will be passed as command line arguments instead. When &lt;code&gt;execPath&lt;/code&gt; is specified, the &lt;code&gt;execPath&lt;/code&gt; will be executed for relaunch instead of current app.</source>
          <target state="translated">デフォルトでは、新しいインスタンスは現在のインスタンスと同じ作業ディレクトリとコマンドライン引数を使用します。ときに &lt;code&gt;args&lt;/code&gt; 指定され、 &lt;code&gt;args&lt;/code&gt; が代わりにコマンドライン引数として渡されます。 &lt;code&gt;execPath&lt;/code&gt; が指定されている場合、現在のアプリの代わりに &lt;code&gt;execPath&lt;/code&gt; が実行されて再起動されます。</target>
        </trans-unit>
        <trans-unit id="8a398a90b8dc32361ec0926b13dfb2175b745513" translate="yes" xml:space="preserve">
          <source>By default, this module will check for updates at app startup, then every ten minutes. When an update is found, it will automatically be downloaded in the background. When the download completes, a dialog is displayed allowing the user to restart the app.</source>
          <target state="translated">デフォルトでは、このモジュールはアプリの起動時にアップデートをチェックし、その後は10分ごとにチェックします。アップデートが見つかると、自動的にバックグラウンドでダウンロードされます。ダウンロードが完了すると、ユーザーがアプリを再起動できるようにダイアログが表示されます。</target>
        </trans-unit>
        <trans-unit id="76df237a7e3f0cecbffcdd01e0bb7eafa5d97dc9" translate="yes" xml:space="preserve">
          <source>By default, web pages' cookies and caches will be stored under the &lt;code&gt;userData&lt;/code&gt; directory. If you want to change this location, you have to override the &lt;code&gt;userData&lt;/code&gt; path before the &lt;code&gt;ready&lt;/code&gt; event of the &lt;code&gt;app&lt;/code&gt; module is emitted.</source>
          <target state="translated">デフォルトでは、WebページのCookieとキャッシュは &lt;code&gt;userData&lt;/code&gt; ディレクトリに保存されます。この場所を変更 &lt;code&gt;ready&lt;/code&gt; 場合は、 &lt;code&gt;app&lt;/code&gt; モジュールのreadyイベントが &lt;code&gt;userData&lt;/code&gt; れる前にuserDataパスをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="5822f4d7e3f6d1d8b184684781711b4e7b602e33" translate="yes" xml:space="preserve">
          <source>By helping to resolve the issue: This can be done by demonstrating that the issue is not a bug or is fixed; but more often, by opening a pull request that changes the source in &lt;code&gt;electron/electron&lt;/code&gt; in a concrete and reviewable manner.</source>
          <target state="translated">問題の解決を支援することによって：これは、問題がバグではないか、修正されていることを示すことで実行できます。しかし、より頻繁には、 &lt;code&gt;electron/electron&lt;/code&gt; ソースを具体的かつレビュー可能な方法で変更するプルリクエストを開くことによって。</target>
        </trans-unit>
        <trans-unit id="6afebbaccbd30c57e0f1bdfb24260324f89fcdf9" translate="yes" xml:space="preserve">
          <source>By helping to triage the issue: You can do this either by providing assistive details (a reproducible test case that demonstrates a bug) or by providing suggestions to address the issue.</source>
          <target state="translated">問題のトリアージを支援することで。これは、支援的な詳細情報(バグを実証する再現可能なテストケース)を提供するか、または問題に対処するための提案を提供することによって行うことができます。</target>
        </trans-unit>
        <trans-unit id="4e65467f0aeb2464094fbea049e0e2ff9337961d" translate="yes" xml:space="preserve">
          <source>By opening the issue for discussion: If you believe that you have found a new bug in Electron, you should report it by creating a new issue in the &lt;a href=&quot;https://github.com/electron/electron/issues&quot;&gt;&lt;code&gt;electron/electron&lt;/code&gt; issue tracker&lt;/a&gt;.</source>
          <target state="translated">ディスカッションのために問題を開く：Electronで新しいバグを見つけたと思われる場合は、&lt;a href=&quot;https://github.com/electron/electron/issues&quot;&gt; &lt;code&gt;electron/electron&lt;/code&gt; ic IssueTrackerで&lt;/a&gt;新しい問題を作成して報告する必要があります。</target>
        </trans-unit>
        <trans-unit id="1a1cf6f6c05333baa8fbb2dd5096a5d19ad9137d" translate="yes" xml:space="preserve">
          <source>By opening the issue for discussion: If you believe that you have found a new bug in Electron, you should report it by creating a new issue in the &lt;code&gt;electron/electron&lt;/code&gt; issue tracker.</source>
          <target state="translated">ディスカッションのために問題を開く：Electronで新しいバグを発見したと思われる場合は、 &lt;code&gt;electron/electron&lt;/code&gt; の問題トラッカーで新しい問題を作成して報告してください。</target>
        </trans-unit>
        <trans-unit id="04f88fab0760bd1a25be17debf3fffbad4b7e77a" translate="yes" xml:space="preserve">
          <source>By setting a few environment variables, you can use &lt;code&gt;npm&lt;/code&gt; to install modules directly.</source>
          <target state="translated">いくつかの環境変数を設定することにより、 &lt;code&gt;npm&lt;/code&gt; を使用してモジュールを直接インストールできます。</target>
        </trans-unit>
        <trans-unit id="618cf25cae044efc880ba0a359464fc6125a37ef" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;transparent&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;, you can also make the frameless window transparent:</source>
          <target state="translated">&lt;code&gt;transparent&lt;/code&gt; オプションを &lt;code&gt;true&lt;/code&gt; に設定することにより、フレームレスウィンドウを透明にすることもできます。</target>
        </trans-unit>
        <trans-unit id="e83cf8ab97dff334534065d01746bc15b14270c8" translate="yes" xml:space="preserve">
          <source>By the way, it is almost identical to how you would normally use the &lt;a href=&quot;https://nodejs.org/api/http.html&quot;&gt;HTTP&lt;/a&gt;/&lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS&lt;/a&gt; modules of Node.js</source>
          <target state="translated">ちなみに、Node.jsの&lt;a href=&quot;https://nodejs.org/api/http.html&quot;&gt;HTTP&lt;/a&gt; / &lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS&lt;/a&gt;モジュールを通常使用する方法とほぼ同じです。</target>
        </trans-unit>
        <trans-unit id="cac27adea8687f32ea7bd657723ad814ed33314f" translate="yes" xml:space="preserve">
          <source>By using &lt;a href=&quot;../api/app#appsetaccessibilitysupportenabledenabled-macos-windows&quot;&gt;&lt;code&gt;app.setAccessibilitySupportEnabled(enabled)&lt;/code&gt;&lt;/a&gt;, you can expose accessibility switch to users in the application preferences. User's system assistive utilities have priority over this setting and will override it.</source>
          <target state="translated">&lt;a href=&quot;../api/app#appsetaccessibilitysupportenabledenabled-macos-windows&quot;&gt; &lt;code&gt;app.setAccessibilitySupportEnabled(enabled)&lt;/code&gt; &lt;/a&gt;を使用することで、アプリケーション設定でユーザー補助スイッチをユーザーに公開できます。ユーザーのシステム支援ユーティリティはこの設定よりも優先され、それを上書きします。</target>
        </trans-unit>
        <trans-unit id="13ed50f8facdcd8f0c54537930b7490e2a9ec7be" translate="yes" xml:space="preserve">
          <source>By using &lt;code&gt;parent&lt;/code&gt; option, you can create child windows:</source>
          <target state="translated">&lt;code&gt;parent&lt;/code&gt; オプションを使用すると、子ウィンドウを作成できます。</target>
        </trans-unit>
        <trans-unit id="c371e1e6491c26daac9e069463d97ac9ccc81ad1" translate="yes" xml:space="preserve">
          <source>By using the &lt;a href=&quot;../api/app#appsetaccessibilitysupportenabledenabled-macos-windows&quot;&gt;&lt;code&gt;app.setAccessibilitySupportEnabled(enabled)&lt;/code&gt;&lt;/a&gt; API, you can manually expose Chrome's accessibility tree to users in the application preferences. Note that the user's system assistive utilities have priority over this setting and will override it.</source>
          <target state="translated">使用することにより&lt;a href=&quot;../api/app#appsetaccessibilitysupportenabledenabled-macos-windows&quot;&gt; &lt;code&gt;app.setAccessibilitySupportEnabled(enabled)&lt;/code&gt; &lt;/a&gt; APIを、手動でアプリケーションの環境設定のユーザーにChromeのアクセシビリティツリーを公開することができます。ユーザーのシステム支援ユーティリティはこの設定よりも優先され、上書きされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="922e55adcc51064bab58eea6c73a1d6142c9e7b4" translate="yes" xml:space="preserve">
          <source>By using the &lt;a href=&quot;api/app#appsetaccessibilitysupportenabledenabled-macos-windows&quot;&gt;&lt;code&gt;app.setAccessibilitySupportEnabled(enabled)&lt;/code&gt;&lt;/a&gt; API, you can manually expose Chrome's accessibility tree to users in the application preferences. Note that the user's system assistive utilities have priority over this setting and will override it.</source>
          <target state="translated">使用することにより&lt;a href=&quot;api/app#appsetaccessibilitysupportenabledenabled-macos-windows&quot;&gt; &lt;code&gt;app.setAccessibilitySupportEnabled(enabled)&lt;/code&gt; &lt;/a&gt; APIを、手動でアプリケーションの環境設定のユーザーにChromeのアクセシビリティツリーを公開することができます。ユーザーのシステム支援ユーティリティはこの設定よりも優先され、上書きされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d075bfd68abd066449363309e5a47d21af4915fd" translate="yes" xml:space="preserve">
          <source>By using the &lt;a href=&quot;https://github.com/nodejs/node-v0.x-archive/commit/756b622&quot;&gt;multi-context&lt;/a&gt; feature of Node, Electron doesn't introduce a new JavaScript context in web pages.</source>
          <target state="translated">ノードの&lt;a href=&quot;https://github.com/nodejs/node-v0.x-archive/commit/756b622&quot;&gt;マルチコンテキスト&lt;/a&gt;機能を使用することにより、エレクトロンはWebページに新しいJavaScriptコンテキストを導入しません。</target>
        </trans-unit>
        <trans-unit id="c13aa44c1b175a66599295c5c1ea22a086b4506e" translate="yes" xml:space="preserve">
          <source>By using this API, important information such as password and other sensitive information can be prevented from being intercepted by other processes.</source>
          <target state="translated">このAPIを利用することで、パスワードなどの重要な情報や機密情報を他の処理で傍受されることを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="13b61b8514348bce1a30759f258aaea2b487cf9f" translate="yes" xml:space="preserve">
          <source>C++ and Python</source>
          <target state="translated">C++とPython</target>
        </trans-unit>
        <trans-unit id="b96bc59a3968498d7a107e6c1751b50333568306" translate="yes" xml:space="preserve">
          <source>CAST - &lt;a href=&quot;https://tools.ietf.org/html/rfc2144&quot;&gt;RFC 2144&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2612&quot;&gt;RFC 2612&lt;/a&gt;</source>
          <target state="translated">CAST- &lt;a href=&quot;https://tools.ietf.org/html/rfc2144&quot;&gt;RFC 2144&lt;/a&gt;、&lt;a href=&quot;https://tools.ietf.org/html/rfc2612&quot;&gt;RFC 2612&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0e707a4f1192d6394fbc9d9860db24ef564cf03" translate="yes" xml:space="preserve">
          <source>CI starts automatically when you open a pull request, but only &lt;a href=&quot;https://github.com/orgs/electron/teams/releasers/members&quot;&gt;Releasers&lt;/a&gt; can restart a CI run. If you believe CI is giving a false negative, ask a Releaser to restart the tests.</source>
          <target state="translated">プルリクエストを開くとCIが自動的に起動しますが、CIの実行を再開できるのは&lt;a href=&quot;https://github.com/orgs/electron/teams/releasers/members&quot;&gt;リリース担当者&lt;/a&gt;だけです。CIが偽陰性を示していると思われる場合は、リリース担当者にテストを再開するよう依頼してください。</target>
        </trans-unit>
        <trans-unit id="bc28ec7b89a554b7184cd54fe1689d211fe3b7b2" translate="yes" xml:space="preserve">
          <source>CI starts automatically when you open a pull request, but only core maintainers can restart a CI run. If you believe CI is giving a false negative, ask a maintainer to restart the tests.</source>
          <target state="translated">プルリクエストを開くと自動的にCIが開始されますが、CIの実行を再開できるのはコアメンテナだけです。CI が偽陰性を与えていると思う場合は、メンテナにテストの再起動を依頼してください。</target>
        </trans-unit>
        <trans-unit id="2027a2c6700352f183229a9c934c4b586b8494a3" translate="yes" xml:space="preserve">
          <source>CPUUsage</source>
          <target state="translated">CPUUsage</target>
        </trans-unit>
        <trans-unit id="04f7d903e57f26e99fbc729c5966bcff09e34627" translate="yes" xml:space="preserve">
          <source>CPUUsage Object</source>
          <target state="translated">CPU使用目的語</target>
        </trans-unit>
        <trans-unit id="50712f7ea0e9a5641483f7a60c06c11712404f8a" translate="yes" xml:space="preserve">
          <source>CRT</source>
          <target state="translated">CRT</target>
        </trans-unit>
        <trans-unit id="83e9a2a287c60cdbe54bfaf8575ccf2eb6f8d3d4" translate="yes" xml:space="preserve">
          <source>CSP HTTP Header</source>
          <target state="translated">CSP HTTPヘッダ</target>
        </trans-unit>
        <trans-unit id="cdcb21d50f9a7d5c495c8130d03d355e1edb10d6" translate="yes" xml:space="preserve">
          <source>CSP Meta Tag</source>
          <target state="translated">CSPメタタグ</target>
        </trans-unit>
        <trans-unit id="7e366c6488c90c6badd877d079aa421795db335f" translate="yes" xml:space="preserve">
          <source>CSP allows the server serving content to restrict and control the resources Electron can load for that given web page. &lt;code&gt;https://example.com&lt;/code&gt; should be allowed to load scripts from the origins you defined while scripts from &lt;code&gt;https://evil.attacker.com&lt;/code&gt; should not be allowed to run. Defining a CSP is an easy way to improve your application's security.</source>
          <target state="translated">CSPを使用すると、コンテンツを提供するサーバーは、Electronがその特定のWebページにロードできるリソースを制限および制御できます。 &lt;code&gt;https://example.com&lt;/code&gt; は、定義したオリジンからのスクリプトのロードを許可する必要がありますが、 &lt;code&gt;https://evil.attacker.com&lt;/code&gt; //evil.attacker.comからのスクリプトの実行は許可しないでください。CSPを定義することは、アプリケーションのセキュリティを向上させる簡単な方法です。</target>
        </trans-unit>
        <trans-unit id="6dce32dfff11b15fe082c892cc92eac210d62e60" translate="yes" xml:space="preserve">
          <source>CSP allows the server serving content to restrict and control the resources Electron can load for that given web page. &lt;code&gt;https://your-page.com&lt;/code&gt; should be allowed to load scripts from the origins you defined while scripts from &lt;code&gt;https://evil.attacker.com&lt;/code&gt; should not be allowed to run. Defining a CSP is an easy way to improve your application's security.</source>
          <target state="translated">CSPにより、コンテンツを提供するサーバーは、Electronが特定のWebページに対してロードできるリソースを制限および制御できます。 &lt;code&gt;https://your-page.com&lt;/code&gt; は、定義したオリジンからのスクリプトのロードを許可する必要がありますが、 &lt;code&gt;https://evil.attacker.com&lt;/code&gt; //evil.attacker.comからのスクリプトは実行を許可しないでください。CSPの定義は、アプリケーションのセキュリティを向上させる簡単な方法です。</target>
        </trans-unit>
        <trans-unit id="3693d34e2d971a82342cede8bfbb95fc5f5983bc" translate="yes" xml:space="preserve">
          <source>CSP's preferred delivery mechanism is an HTTP header, however it is not possible to use this method when loading a resource using the &lt;code&gt;file://&lt;/code&gt; protocol. It can be useful in some cases, such as using the &lt;code&gt;file://&lt;/code&gt; protocol, to set a policy on a page directly in the markup using a &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">CSPの推奨される配信メカニズムはHTTPヘッダーですが、 &lt;code&gt;file://&lt;/code&gt; プロトコルを使用してリソースをロードするときにこのメソッドを使用することはできません。 &lt;code&gt;file://&lt;/code&gt; プロトコルを使用する場合など、 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; タグを使用してマークアップ内のページに直接ポリシーを設定すると便利な場合があります。</target>
        </trans-unit>
        <trans-unit id="b7b96b06e8ae201740549af8b2e493398a979f13" translate="yes" xml:space="preserve">
          <source>CSP's preferred delivery mechanism is an HTTP header. It can be useful, however, to set a policy on a page directly in the markup using a &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">CSPの優先配信メカニズムはHTTPヘッダーです。ただし、 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; タグを使用して、マークアップ内のページにポリシーを直接設定すると便利です。</target>
        </trans-unit>
        <trans-unit id="20ec6039f7415b008ace95988f2d20ee666f1b82" translate="yes" xml:space="preserve">
          <source>CSS Styling Notes</source>
          <target state="translated">CSS スタイリングの注意事項</target>
        </trans-unit>
        <trans-unit id="50338b3b242845e21a0ace9ae9684283d945fb52" translate="yes" xml:space="preserve">
          <source>Cache</source>
          <target state="translated">Cache</target>
        </trans-unit>
        <trans-unit id="6bed3edafc751f5e9a9df468f2bb33f243df1d76" translate="yes" xml:space="preserve">
          <source>Calculate system idle time in seconds.</source>
          <target state="translated">システムのアイドル時間を秒単位で計算します。</target>
        </trans-unit>
        <trans-unit id="e3256634065b51492172c28617295e847944f77e" translate="yes" xml:space="preserve">
          <source>Calculate the system idle state. &lt;code&gt;idleThreshold&lt;/code&gt; is the amount of time (in seconds) before considered idle. &lt;code&gt;locked&lt;/code&gt; is available on supported systems only.</source>
          <target state="translated">システムのアイドル状態を計算します。 &lt;code&gt;idleThreshold&lt;/code&gt; は、アイドル状態と見なされるまでの時間（秒単位）です。 &lt;code&gt;locked&lt;/code&gt; は、サポートされているシステムでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="1cd435b412c05cb38838722550256b01ce2fe212" translate="yes" xml:space="preserve">
          <source>Callback is invoked with the session's current cache size.</source>
          <target state="translated">コールバックは、セッションの現在のキャッシュサイズで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="01b497b8367fc6bafb5d7eeac148c7f74271b4a4" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;app.setAppLogsPath()&lt;/code&gt; without a &lt;code&gt;path&lt;/code&gt; parameter will result in this directory being set to &lt;code&gt;~/Library/Logs/YourAppName&lt;/code&gt; on &lt;em&gt;macOS&lt;/em&gt;, and inside the &lt;code&gt;userData&lt;/code&gt; directory on &lt;em&gt;Linux&lt;/em&gt; and &lt;em&gt;Windows&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; パラメータを指定せずに &lt;code&gt;app.setAppLogsPath()&lt;/code&gt; を呼び出すと、このディレクトリは&lt;em&gt;macOSでは&lt;/em&gt; &lt;code&gt;~/Library/Logs/YourAppName&lt;/code&gt; に設定され、&lt;em&gt;Linux&lt;/em&gt;および&lt;em&gt;Windowsでは&lt;/em&gt; &lt;code&gt;userData&lt;/code&gt; ディレクトリ内に設定され&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3bf97a86a63ed095fd3350186e3c5ea8f8b287e9" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; does &lt;strong&gt;NOT&lt;/strong&gt; have any effect.</source>
          <target state="translated">&lt;code&gt;event.preventDefault()&lt;/code&gt; を呼び出しても効果はあり&lt;strong&gt;ません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="6ccf9dcbbcdfb1e5e377be160f38ae63559c54d6" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will cancel the download and &lt;code&gt;item&lt;/code&gt; will not be available from next tick of the process.</source>
          <target state="translated">&lt;code&gt;event.preventDefault()&lt;/code&gt; を呼び出すとダウンロードがキャンセルされ、 &lt;code&gt;item&lt;/code&gt; はプロセスの次のティックから利用できなくなります。</target>
        </trans-unit>
        <trans-unit id="608b33df37e4d4d3fe0d281941b14b121675b6d7" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will ignore the &lt;code&gt;beforeunload&lt;/code&gt; event handler and allow the page to be unloaded.</source>
          <target state="translated">&lt;code&gt;event.preventDefault()&lt;/code&gt; を呼び出すと、 &lt;code&gt;beforeunload&lt;/code&gt; イベントハンドラーが無視され、ページがアンロードされます。</target>
        </trans-unit>
        <trans-unit id="02e90584a9ebd7582ed746e6971f39e5cd3ff4f8" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent Electron from automatically creating a new &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;. If you call &lt;code&gt;event.preventDefault()&lt;/code&gt; and manually create a new &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; then you must set &lt;code&gt;event.newGuest&lt;/code&gt; to reference the new &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; instance, failing to do so may result in unexpected behavior. For example:</source>
          <target state="translated">&lt;code&gt;event.preventDefault()&lt;/code&gt; を呼び出すと、Electronが新しい&lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; を&lt;/a&gt;自動的に作成できなくなります。 &lt;code&gt;event.preventDefault()&lt;/code&gt; を呼び出して、新しい&lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;を手動で作成する場合は、 &lt;code&gt;event.newGuest&lt;/code&gt; を設定して新しい&lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;インスタンスを参照する必要があります。そうしないと、予期しない動作が発生する可能性があります。例えば：</target>
        </trans-unit>
        <trans-unit id="06a6fc44f08b115a34cc42d4f23bc74dcfa8d040" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent Electron from automatically creating a new &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;. If you call &lt;code&gt;event.preventDefault()&lt;/code&gt; and manually create a new &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; then you must set &lt;code&gt;event.newGuest&lt;/code&gt; to reference the new &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; instance, failing to do so may result in unexpected behavior. For example:</source>
          <target state="translated">&lt;code&gt;event.preventDefault()&lt;/code&gt; を呼び出すと、Electronが新しい&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; を&lt;/a&gt;自動的に作成できなくなります。 &lt;code&gt;event.preventDefault()&lt;/code&gt; を呼び出して手動で新しい&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; を&lt;/a&gt;作成する場合、 &lt;code&gt;event.newGuest&lt;/code&gt; を設定して新しい&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;インスタンスを参照する必要があります。そうしないと、予期しない動作が発生する可能性があります。例えば：</target>
        </trans-unit>
        <trans-unit id="85b2f69fa97e59e10e3bf96902ec575aef2909cc" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the menu from being displayed.</source>
          <target state="translated">&lt;code&gt;event.preventDefault()&lt;/code&gt; を呼び出すと、メニューが表示されなくなります。</target>
        </trans-unit>
        <trans-unit id="79b3972f226acc3d828ddaaece2ace694a0d1ec9" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the navigation (not just the redirect).</source>
          <target state="translated">&lt;code&gt;event.preventDefault()&lt;/code&gt; を呼び出すと、（リダイレクトだけでなく）ナビゲーションができなくなります。</target>
        </trans-unit>
        <trans-unit id="b564540387ed37724cf001caf2860886af42fdb6" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the navigation.</source>
          <target state="translated">&lt;code&gt;event.preventDefault()&lt;/code&gt; を呼び出すと、ナビゲーションが妨げられます。</target>
        </trans-unit>
        <trans-unit id="28a3eba69582a515aa7662b289e554e59d378c8d" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;reload()&lt;/code&gt; immediately after calling this method will force the reload to occur in a new process. This should be used when this process is unstable or unusable, for instance in order to recover from the &lt;code&gt;unresponsive&lt;/code&gt; event.</source>
          <target state="translated">呼び出し &lt;code&gt;reload()&lt;/code&gt; すぐに新しいプロセスで発生するリロードを強制します。このメソッドを呼び出した後に。これは、このプロセスが不安定または使用できない場合、たとえば、 &lt;code&gt;unresponsive&lt;/code&gt; イベントから回復するために使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="caf9c42d26eab6803e0882cba6bc05510a28978d" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;setCertificateVerifyProc(null)&lt;/code&gt; will revert back to default certificate verify proc.</source>
          <target state="translated">&lt;code&gt;setCertificateVerifyProc(null)&lt;/code&gt; を呼び出すと、デフォルトの証明書検証プロシージャに戻ります。</target>
        </trans-unit>
        <trans-unit id="0fbb3cc18cc8cba95bc7c6ff43fd3506c838d083" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;window.print()&lt;/code&gt; in web page is equivalent to calling &lt;code&gt;webContents.print({silent: false, printBackground: false, deviceName: ''})&lt;/code&gt;.</source>
          <target state="translated">呼び出し &lt;code&gt;window.print()&lt;/code&gt; 、Webページには、呼び出すことと同じです &lt;code&gt;webContents.print({silent: false, printBackground: false, deviceName: ''})&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4445b44fdffdcfe345a8ea0e5dfe80e15ca695c7" translate="yes" xml:space="preserve">
          <source>Calling the following &lt;code&gt;crashReporter&lt;/code&gt; methods from the renderer process is deprecated:</source>
          <target state="translated">レンダラープロセスから次の &lt;code&gt;crashReporter&lt;/code&gt; メソッドを呼び出すことは非推奨です。</target>
        </trans-unit>
        <trans-unit id="25630404c2ebfb9025dd2b80ded7fb8c98015b1c" translate="yes" xml:space="preserve">
          <source>Cambodian</source>
          <target state="translated">Cambodian</target>
        </trans-unit>
        <trans-unit id="f658821818d37230428de783e72627f03c7f5caf" translate="yes" xml:space="preserve">
          <source>Cancel the bounce of &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; のバウンスをキャンセルします。</target>
        </trans-unit>
        <trans-unit id="b0c5eb29993346f4a133ac20e0805e05b35d51e9" translate="yes" xml:space="preserve">
          <source>Cancels an ongoing HTTP transaction. If the request has already emitted the &lt;code&gt;close&lt;/code&gt; event, the abort operation will have no effect. Otherwise an ongoing event will emit &lt;code&gt;abort&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; events. Additionally, if there is an ongoing response object,it will emit the &lt;code&gt;aborted&lt;/code&gt; event.</source>
          <target state="translated">進行中のHTTPトランザクションをキャンセルします。リクエストがすでに &lt;code&gt;close&lt;/code&gt; イベントを発行している場合、中止操作は効果がありません。それ以外の場合、進行中のイベントは &lt;code&gt;abort&lt;/code&gt; および &lt;code&gt;close&lt;/code&gt; イベントを発行します。さらに、進行中の応答オブジェクトがある場合、それは &lt;code&gt;aborted&lt;/code&gt; イベントを発行します。</target>
        </trans-unit>
        <trans-unit id="0416c11d306eee7c68286990dbe4ca885146ccb6" translate="yes" xml:space="preserve">
          <source>Cancels the download operation.</source>
          <target state="translated">ダウンロード操作をキャンセルします。</target>
        </trans-unit>
        <trans-unit id="b5bf8067cfe9fae06ca54aa5e92ec9269a2b4baa" translate="yes" xml:space="preserve">
          <source>Candidates</source>
          <target state="translated">Candidates</target>
        </trans-unit>
        <trans-unit id="6eca99031e095cbb34e01937d491d94b1c270e8f" translate="yes" xml:space="preserve">
          <source>Captures a snapshot of the &lt;code&gt;webview&lt;/code&gt;'s page. Same as &lt;code&gt;webContents.capturePage([rect, ]callback)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; のページのスナップショットをキャプチャします。 &lt;code&gt;webContents.capturePage([rect, ]callback)&lt;/code&gt; 同じです。</target>
        </trans-unit>
        <trans-unit id="cd17d5ec63077d417c5915709e9d490228549163" translate="yes" xml:space="preserve">
          <source>Captures a snapshot of the page within &lt;code&gt;rect&lt;/code&gt;. Omitting &lt;code&gt;rect&lt;/code&gt; will capture the whole visible page.</source>
          <target state="translated">&lt;code&gt;rect&lt;/code&gt; 内のページのスナップショットをキャプチャします。 &lt;code&gt;rect&lt;/code&gt; を省略すると、表示されているページ全体がキャプチャされます。</target>
        </trans-unit>
        <trans-unit id="392699b786f5b66ad025a000b2a69cf8ef0d8363" translate="yes" xml:space="preserve">
          <source>Captures a snapshot of the page within &lt;code&gt;rect&lt;/code&gt;. Upon completion &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(image)&lt;/code&gt;. The &lt;code&gt;image&lt;/code&gt; is an instance of &lt;a href=&quot;native-image&quot;&gt;NativeImage&lt;/a&gt; that stores data of the snapshot. Omitting &lt;code&gt;rect&lt;/code&gt; will capture the whole visible page.</source>
          <target state="translated">&lt;code&gt;rect&lt;/code&gt; 内のページのスナップショットをキャプチャします。完了時に &lt;code&gt;callback&lt;/code&gt; して呼び出される &lt;code&gt;callback(image)&lt;/code&gt; 。 &lt;code&gt;image&lt;/code&gt; のインスタンスである&lt;a href=&quot;native-image&quot;&gt;NativeImage&lt;/a&gt;スナップショットのデータを格納します。 &lt;code&gt;rect&lt;/code&gt; を省略すると、表示されているページ全体がキャプチャされます。</target>
        </trans-unit>
        <trans-unit id="4f807cbc0708a50707fe7e01d411cf2e130c4dc2" translate="yes" xml:space="preserve">
          <source>Carelessly including modules</source>
          <target state="translated">無造作にモジュールを含む</target>
        </trans-unit>
        <trans-unit id="2c5e77fc08a7d5537c9c2807353393f67c068cbe" translate="yes" xml:space="preserve">
          <source>Catalan</source>
          <target state="translated">Catalan</target>
        </trans-unit>
        <trans-unit id="ff992f5c1344ba781624e7680cc16282b396cb17" translate="yes" xml:space="preserve">
          <source>Causes the main thread of the current process crash.</source>
          <target state="translated">現在のプロセスのメインスレッドがクラッシュします。</target>
        </trans-unit>
        <trans-unit id="50ba2332a72e34af309e34aa8ba442a4d2a81813" translate="yes" xml:space="preserve">
          <source>Causes the main thread of the current process hang.</source>
          <target state="translated">現在のプロセスのメインスレッドがハングします。</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="aeaf8b569d9e949fc815aa22c5097ce559e475bb" translate="yes" xml:space="preserve">
          <source>Cerebral Debugger</source>
          <target state="translated">大脳デバッガ</target>
        </trans-unit>
        <trans-unit id="581ebb13fbb5d74fb60cd472a034d756da5cc102" translate="yes" xml:space="preserve">
          <source>Certain Electron behaviors are controlled by environment variables because they are initialized earlier than the command line flags and the app's code.</source>
          <target state="translated">特定のElectronの動作は、コマンドラインフラグやアプリのコードよりも早く初期化されるため、環境変数によって制御されます。</target>
        </trans-unit>
        <trans-unit id="9cc12c4a693f644a891baf70a55c4bab05cb777c" translate="yes" xml:space="preserve">
          <source>Certain accessibility features may not work.</source>
          <target state="translated">一部のアクセシビリティ機能が動作しない場合があります。</target>
        </trans-unit>
        <trans-unit id="72531c32fcb0a3c99da4e74166f280b78d501bde" translate="yes" xml:space="preserve">
          <source>Certain headers are restricted from being set by apps. These headers are listed below. More information on restricted headers can be found in &lt;a href=&quot;https://source.chromium.org/chromium/chromium/src/+/master:services/network/public/cpp/header_util.cc;drc=1562cab3f1eda927938f8f4a5a91991fefde66d3;bpv=1;bpt=1;l=22&quot;&gt;Chromium's header utils&lt;/a&gt;.</source>
          <target state="translated">特定のヘッダーは、アプリによる設定が制限されています。これらのヘッダーを以下に示します。制限付きヘッダーの詳細については、&lt;a href=&quot;https://source.chromium.org/chromium/chromium/src/+/master:services/network/public/cpp/header_util.cc;drc=1562cab3f1eda927938f8f4a5a91991fefde66d3;bpv=1;bpt=1;l=22&quot;&gt;Chromiumのheaderutilsを参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="38a3698b2c23c0e8359856ff3c28a4b0f8b5d1b5" translate="yes" xml:space="preserve">
          <source>Certain kinds of applications that manipulate files might want to support the operating system's native file drag &amp;amp; drop feature. Dragging files into web content is common and supported by many websites. Electron additionally supports dragging files and content out from web content into the operating system's world.</source>
          <target state="translated">ファイルを操作する特定の種類のアプリケーションは、オペレーティングシステムのネイティブファイルドラッグアンドドロップ機能をサポートする必要がある場合があります。ファイルをWebコンテンツにドラッグすることは一般的であり、多くのWebサイトでサポートされています。Electronは、ファイルとコンテンツをWebコンテンツからオペレーティングシステムの世界にドラッグすることもサポートしています。</target>
        </trans-unit>
        <trans-unit id="10de46b3b341b6f837cf6d72972b9bf2b3f6e491" translate="yes" xml:space="preserve">
          <source>Certificate</source>
          <target state="translated">Certificate</target>
        </trans-unit>
        <trans-unit id="ba0b998ec4ee590a1525fb9ce924b5c6c3d689ee" translate="yes" xml:space="preserve">
          <source>Certificate Object</source>
          <target state="translated">証明書オブジェクト</target>
        </trans-unit>
        <trans-unit id="e857b6685de9bb4567658584dd3d2d3840faa282" translate="yes" xml:space="preserve">
          <source>CertificatePrincipal</source>
          <target state="translated">CertificatePrincipal</target>
        </trans-unit>
        <trans-unit id="84bdb1d3faecd7cef66929f76ae928b19890d1f4" translate="yes" xml:space="preserve">
          <source>CertificatePrincipal Object</source>
          <target state="translated">CertificatePrincipal オブジェクト</target>
        </trans-unit>
        <trans-unit id="d3effad16594a8d754fb16c45b1dc5eefc676c43" translate="yes" xml:space="preserve">
          <source>Chances are that your app could be a little leaner, faster, and generally less resource-hungry if you attempt these steps.</source>
          <target state="translated">これらの手順を試してみると、アプリは少し無駄がなく、より速く、一般的にはリソースを消費しにくくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="211d580ac2544b142d40d3ad9e23ed4b4bbecc36" translate="yes" xml:space="preserve">
          <source>Change the &lt;em&gt;Target&lt;/em&gt; field to read &lt;code&gt;vcvarsamd64_arm64.bat&lt;/code&gt; at the end instead of &lt;code&gt;vcvarsamd64_x86.bat&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;ターゲット&lt;/em&gt;フィールドを変更して、最後に &lt;code&gt;vcvarsamd64_x86.bat&lt;/code&gt; ではなく &lt;code&gt;vcvarsamd64_arm64.bat&lt;/code&gt; を読み取ります。</target>
        </trans-unit>
        <trans-unit id="32f17190d0613794b441eaba2cd849d775c70df8" translate="yes" xml:space="preserve">
          <source>Change the CFBundleIdentifier</source>
          <target state="translated">CFBundleIdentifier の変更</target>
        </trans-unit>
        <trans-unit id="fd0e40eafa0f9b760c80828ad941133706383c4a" translate="yes" xml:space="preserve">
          <source>Changes the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;Application User Model ID&lt;/a&gt; to &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;アプリケーションユーザーモデルID&lt;/a&gt;を &lt;code&gt;id&lt;/code&gt; に変更します。</target>
        </trans-unit>
        <trans-unit id="7192443b2703fd72e1d80fe455404d52a3b2ece8" translate="yes" xml:space="preserve">
          <source>Changes the attachment point for sheets on macOS. By default, sheets are attached just below the window frame, but you may want to display them beneath a HTML-rendered toolbar. For example:</source>
          <target state="translated">macOSでのシートの貼り付け位置を変更します。デフォルトでは、シートはウィンドウフレームのすぐ下に貼り付けられますが、HTMLレンダリングされたツールバーの下にシートを表示させたい場合があります。例えば</target>
        </trans-unit>
        <trans-unit id="e00a43e5c98149d17616727aefd5bf10508c744a" translate="yes" xml:space="preserve">
          <source>Changes the title of native window to &lt;code&gt;title&lt;/code&gt;.</source>
          <target state="translated">ネイティブウィンドウのタイトル変更 &lt;code&gt;title&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef5c53d0bdeb734237010809e6dbb1dd0fc33bae" translate="yes" xml:space="preserve">
          <source>Changes the zoom factor to the specified factor. Zoom factor is zoom percent divided by 100, so 300% = 3.0.</source>
          <target state="translated">ズーム倍率を指定した倍率に変更します。ズーム率はズーム率を100で割ったもので、300%=3.0となります。</target>
        </trans-unit>
        <trans-unit id="14850ce55f6d0b97e4b3bd48728cc077a1b88ebe" translate="yes" xml:space="preserve">
          <source>Changes the zoom level to the specified level. The original size is 0 and each increment above or below represents zooming 20% larger or smaller to default limits of 300% and 50% of original size, respectively.</source>
          <target state="translated">ズームレベルを指定したレベルに変更します。元のサイズは 0 で、上下の各増分は、それぞれ元のサイズの 300% と 50% のデフォルトの限界まで 20% 拡大または縮小したことを表します。</target>
        </trans-unit>
        <trans-unit id="cd03fab79caf1e647e1267283b60a0a14e953946" translate="yes" xml:space="preserve">
          <source>Changes the zoom level to the specified level. The original size is 0 and each increment above or below represents zooming 20% larger or smaller to default limits of 300% and 50% of original size, respectively. The formula for this is &lt;code&gt;scale := 1.2 ^ level&lt;/code&gt;.</source>
          <target state="translated">ズームレベルを指定したレベルに変更します。元のサイズは0で、上または下の各増分は、元のサイズのデフォルトの制限である300％および50％にそれぞれ20％大きくまたは小さくズームすることを表します。この式は、 &lt;code&gt;scale := 1.2 ^ level&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="45d82a5c3a699427f986d8e08907e357733f7ab7" translate="yes" xml:space="preserve">
          <source>Changes whether the window can be focused.</source>
          <target state="translated">ウィンドウにフォーカスを合わせることができるかどうかを変更します。</target>
        </trans-unit>
        <trans-unit id="2f74e6ebc41fbce39cd16dbd7b5a6b854ed42978" translate="yes" xml:space="preserve">
          <source>Changes window icon.</source>
          <target state="translated">ウィンドウアイコンを変更します。</target>
        </trans-unit>
        <trans-unit id="e32d9c8aad7f5e71429d9678a089fbdb9c81e2d6" translate="yes" xml:space="preserve">
          <source>Chapters in the same page must have &lt;code&gt;##&lt;/code&gt;-level titles.</source>
          <target state="translated">同じページの章には、 &lt;code&gt;##&lt;/code&gt; レベルのタイトルが必要です。</target>
        </trans-unit>
        <trans-unit id="4ca39192d8d6878e7b7039f57abb93acc55f2057" translate="yes" xml:space="preserve">
          <source>Check out a new branch for the update</source>
          <target state="translated">アップデートのための新しいブランチをチェック</target>
        </trans-unit>
        <trans-unit id="182619eb360224a72f2e5882c8c12327823c7d1b" translate="yes" xml:space="preserve">
          <source>Check out the branch with the revision checksum:</source>
          <target state="translated">リビジョンチェックサムでブランチをチェックします。</target>
        </trans-unit>
        <trans-unit id="f780614f31fda8fc36f0816ed90f55399821f7c7" translate="yes" xml:space="preserve">
          <source>Check out the docs for &lt;a href=&quot;../api/session#sessetspellcheckerdictionarydownloadurlurl&quot;&gt;&lt;code&gt;session.setSpellCheckerDictionaryDownloadURL&lt;/code&gt;&lt;/a&gt; for more information on where to get the dictionary files from and how you need to host them.</source>
          <target state="translated">辞書ファイルの取得元とホスト方法の詳細については、&lt;a href=&quot;../api/session#sessetspellcheckerdictionarydownloadurlurl&quot;&gt; &lt;code&gt;session.setSpellCheckerDictionaryDownloadURL&lt;/code&gt; &lt;/a&gt;のドキュメントを確認してください。</target>
        </trans-unit>
        <trans-unit id="319c01dad036deb62eee3cfc4cadc68a64241226" translate="yes" xml:space="preserve">
          <source>Check out the docs for &lt;a href=&quot;api/session#sessetspellcheckerdictionarydownloadurlurl&quot;&gt;&lt;code&gt;session.setSpellCheckerDictionaryDownloadURL&lt;/code&gt;&lt;/a&gt; for more information on where to get the dictionary files from and how you need to host them.</source>
          <target state="translated">辞書ファイルの取得元とホスト方法の詳細については、&lt;a href=&quot;api/session#sessetspellcheckerdictionarydownloadurlurl&quot;&gt; &lt;code&gt;session.setSpellCheckerDictionaryDownloadURL&lt;/code&gt; &lt;/a&gt;のドキュメントを確認してください。</target>
        </trans-unit>
        <trans-unit id="75171393df728b53dcbcb23f97d59af1f77a786f" translate="yes" xml:space="preserve">
          <source>Check release tag and select the range of commits we need to re-apply</source>
          <target state="translated">リリースタグをチェックして、再適用するコミットの範囲を選択します。</target>
        </trans-unit>
        <trans-unit id="5683268cb936dd4a55ee665f313482760bd60190" translate="yes" xml:space="preserve">
          <source>Check the &lt;em&gt;Size requirements&lt;/em&gt; section in &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dn742485(v=vs.85).aspx&quot;&gt;this article&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dn742485(v=vs.85).aspx&quot;&gt;この記事の&lt;/a&gt;&lt;em&gt;サイズ要件&lt;/em&gt;セクションを確認してください。</target>
        </trans-unit>
        <trans-unit id="a8e78ecd4ddbd2d07b0d406ba4b7180188ca6bd3" translate="yes" xml:space="preserve">
          <source>Check the build prerequisites for your platform before proceeding</source>
          <target state="translated">先に進む前に、お使いのプラットフォームのビルド前提条件を確認してください。</target>
        </trans-unit>
        <trans-unit id="61b29464698841563ca7472285fe6b4635494641" translate="yes" xml:space="preserve">
          <source>Checklist</source>
          <target state="translated">Checklist</target>
        </trans-unit>
        <trans-unit id="39a3652e60c32034bcb7aafe742c047e5cf4112a" translate="yes" xml:space="preserve">
          <source>Checklist: Security Recommendations</source>
          <target state="translated">チェックリスト セキュリティに関する推奨事項</target>
        </trans-unit>
        <trans-unit id="b3a64a28999ab83dd2fadf5268178d21a443b216" translate="yes" xml:space="preserve">
          <source>Checkout Chromium if you haven't already:</source>
          <target state="translated">まだの方はChromiumをチェックしてみてください。</target>
        </trans-unit>
        <trans-unit id="9dbcf2f1165fcfbe3e167ded11918e8eaab0d401" translate="yes" xml:space="preserve">
          <source>Checkout both &lt;code&gt;vY.Y.Y&lt;/code&gt; &amp;amp; &lt;code&gt;v.X.X.X&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;vY.Y.Y&lt;/code&gt; と &lt;code&gt;v.X.X.X&lt;/code&gt; 両方をチェックアウト</target>
        </trans-unit>
        <trans-unit id="cea6e890ce501a3facfa61dc612bcf58b0141a89" translate="yes" xml:space="preserve">
          <source>Checks if any ServiceWorker is registered and returns a boolean as response to &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">ServiceWorkerが登録されているかどうかを確認し、 &lt;code&gt;callback&lt;/code&gt; への応答としてブール値を返します。</target>
        </trans-unit>
        <trans-unit id="405e98a7480935cf207238f823df474d9ce05b2f" translate="yes" xml:space="preserve">
          <source>Cherry-pick commit range:</source>
          <target state="translated">チェリーピックのコミット範囲。</target>
        </trans-unit>
        <trans-unit id="f051668d95b585a378592c1c999017d249388c51" translate="yes" xml:space="preserve">
          <source>Child processes typically cache trace data and only rarely flush and send trace data back to the main process. This helps to minimize the runtime overhead of tracing since sending trace data over IPC can be an expensive operation. So, to end tracing, Chromium asynchronously asks all child processes to flush any pending trace data.</source>
          <target state="translated">子プロセスは通常、トレースデータをキャッシュし、トレースデータをフラッシュしてメインプロセスに送り返すことはほとんどありません。これは、IPC経由でトレースデータを送信するのは高価な操作になるので、トレースの実行時のオーバーヘッドを最小限に抑えるのに役立ちます。そこで、トレースを終了するために、Chromiumは非同期的にすべての子プロセスに、保留中のトレースデータをフラッシュするように要求します。</target>
        </trans-unit>
        <trans-unit id="c139e6eb8130b236949da051d03045ab495cb117" translate="yes" xml:space="preserve">
          <source>Child processes typically cache trace data and only rarely flush and send trace data back to the main process. This helps to minimize the runtime overhead of tracing since sending trace data over IPC can be an expensive operation. So, to end tracing, we must asynchronously ask all child processes to flush any pending trace data.</source>
          <target state="translated">子プロセスは通常、トレースデータをキャッシュし、トレースデータをフラッシュしてメインプロセスに送り返すことはほとんどありません。これは、IPC経由でトレースデータを送信することは高価な操作になる可能性があるため、トレースの実行時のオーバーヘッドを最小限に抑えるのに役立ちます。そのため、トレースを終了するには、すべての子プロセスに非同期に、保留中のトレースデータをフラッシュするように依頼しなければなりません。</target>
        </trans-unit>
        <trans-unit id="2c23d1c2815c1a2b9a10b09cf84830fcfbcb6a39" translate="yes" xml:space="preserve">
          <source>Child processes typically cache trace data and only rarely flush and send trace data back to the main process. This is because it may be an expensive operation to send the trace data over IPC and we would like to avoid unneeded runtime overhead from tracing. So, to end tracing, we must asynchronously ask all child processes to flush any pending trace data.</source>
          <target state="translated">子プロセスは通常、トレースデータをキャッシュし、トレースデータをフラッシュしてメインプロセスに送り返すことはほとんどありません。これは、IPC経由でトレースデータを送信するのは高価な操作になる可能性があり、トレースによる不要なランタイムオーバーヘッドを避けたいからです。そこで、トレースを終了させるためには、すべての子プロセスに非同期的に、保留中のトレースデータをフラッシュするように依頼しなければなりません。</target>
        </trans-unit>
        <trans-unit id="29d8d5092286fd5ae669fca2f22aacec524eed3c" translate="yes" xml:space="preserve">
          <source>Child windows opened with the &lt;code&gt;nativeWindowOpen&lt;/code&gt; option will always have Node.js integration disabled, unless &lt;code&gt;nodeIntegrationInSubFrames&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nativeWindowOpen&lt;/code&gt; オプションで開かれた子ウィンドウでは、 &lt;code&gt;nodeIntegrationInSubFrames&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; でない限り、常にNode.js統合が無効になります。</target>
        </trans-unit>
        <trans-unit id="15dc18865567bcc98554a72a8036e1b64a8b85d5" translate="yes" xml:space="preserve">
          <source>Chinese</source>
          <target state="translated">Chinese</target>
        </trans-unit>
        <trans-unit id="78bba35bec315c2f41be72ec6cbfc623c3a8a9d0" translate="yes" xml:space="preserve">
          <source>Chinese (Simplified)</source>
          <target state="translated">ちゅうごくご</target>
        </trans-unit>
        <trans-unit id="db2dff441f0d902d148f848ce8398a02c04d162c" translate="yes" xml:space="preserve">
          <source>Chinese (Traditional)</source>
          <target state="translated">中国語</target>
        </trans-unit>
        <trans-unit id="e6dd63b4b16ba86ecce2c7349853efcb87d8c77d" translate="yes" xml:space="preserve">
          <source>Choose a version number from &lt;a href=&quot;https://omahaproxy.appspot.com/&quot;&gt;OmahaProxy&lt;/a&gt; and update the &lt;code&gt;VERSION&lt;/code&gt; file with it</source>
          <target state="translated">&lt;a href=&quot;https://omahaproxy.appspot.com/&quot;&gt;OmahaProxy&lt;/a&gt;からバージョン番号を選択し、 &lt;code&gt;VERSION&lt;/code&gt; ファイルをそれで更新します</target>
        </trans-unit>
        <trans-unit id="1eaa07be32eb59a746b0653573b6e99aca3c9038" translate="yes" xml:space="preserve">
          <source>Choosing an Editor</source>
          <target state="translated">エディタの選択</target>
        </trans-unit>
        <trans-unit id="218e75c7a912404b048fff0747e40108873b6334" translate="yes" xml:space="preserve">
          <source>Chrome</source>
          <target state="translated">Chrome</target>
        </trans-unit>
        <trans-unit id="baa7897215e357214fdc378d809b90f3d430608c" translate="yes" xml:space="preserve">
          <source>Chrome 59 (and later) includes support for Verified Media Path (VMP). VMP provides a method to verify the authenticity of a device platform. For browser deployments, this will provide an additional signal to determine if a browser-based implementation is reliable and secure.</source>
          <target state="translated">Chrome 59(以降)には、Verified Media Path(VMP)のサポートが含まれています。VMP は、デバイス プラットフォームの真正性を検証する方法を提供します。ブラウザの実装では、これにより、ブラウザベースの実装が信頼性が高く安全であるかどうかを判断するための追加のシグナルが提供されます。</target>
        </trans-unit>
        <trans-unit id="91b8551c4a3e5bdffc9c77360320226e1762f98d" translate="yes" xml:space="preserve">
          <source>Chrome Developer Tools has a &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/&quot;&gt;special binding&lt;/a&gt; available at JavaScript runtime that allows interacting with pages and instrumenting them.</source>
          <target state="translated">Chromeデベロッパーツールには、JavaScriptランタイムで利用できる&lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/&quot;&gt;特別なバインディングが&lt;/a&gt;あり、ページを操作してインストルメント化できます。</target>
        </trans-unit>
        <trans-unit id="788bd4f4f3ad1a35b24cf7334a5f2aeba7c9f9e0" translate="yes" xml:space="preserve">
          <source>Chrome Developer Tools has a &lt;a href=&quot;https://developer.chrome.com/devtools/docs/debugger-protocol&quot;&gt;special binding&lt;/a&gt; available at JavaScript runtime that allows interacting with pages and instrumenting them.</source>
          <target state="translated">Chromeデベロッパーツールには、JavaScriptランタイムで利用できる&lt;a href=&quot;https://developer.chrome.com/devtools/docs/debugger-protocol&quot;&gt;特別なバインディングが&lt;/a&gt;あり、ページとのやり取りとそれらのインスツルメンテーションを可能にします。</target>
        </trans-unit>
        <trans-unit id="dd23a3ca9570ea4beadd7fb59c8157437b6323e0" translate="yes" xml:space="preserve">
          <source>Chrome Extension Support</source>
          <target state="translated">クローム拡張機能のサポート</target>
        </trans-unit>
        <trans-unit id="28d3daec32e1c2f459d1a684db401a47ff792d0f" translate="yes" xml:space="preserve">
          <source>Chrome Extensions Support</source>
          <target state="translated">Chrome 拡張機能のサポート</target>
        </trans-unit>
        <trans-unit id="607eaac54dfb10acc85a4cde72f23c3ff7340e46" translate="yes" xml:space="preserve">
          <source>Chrome Release Schedule</source>
          <target state="translated">Chromeのリリーススケジュール</target>
        </trans-unit>
        <trans-unit id="22242faf4b7afc2ac2dcf5e59f86fc45c0c8e89b" translate="yes" xml:space="preserve">
          <source>Chromium Development</source>
          <target state="translated">クロム開発</target>
        </trans-unit>
        <trans-unit id="04c16cc2d1fa5febca0b55e51cfecb1f45fce286" translate="yes" xml:space="preserve">
          <source>Chromium Issue Tracker</source>
          <target state="translated">Chromium 問題追跡</target>
        </trans-unit>
        <trans-unit id="4d4df82f436010fbf96d49ac0485f6622e336c21" translate="yes" xml:space="preserve">
          <source>Chromium Security Issues and Upgrades</source>
          <target state="translated">Chromium のセキュリティ問題とアップグレード</target>
        </trans-unit>
        <trans-unit id="7e335ea5a9f38301e7af69aba413216f64c15532" translate="yes" xml:space="preserve">
          <source>Chromium development with Electron</source>
          <target state="translated">エレクトロンによるクロム現像</target>
        </trans-unit>
        <trans-unit id="9c1e68eb8f237d9e38f5a357e502d7a198457f48" translate="yes" xml:space="preserve">
          <source>Chromium does not provide &lt;code&gt;residentSet&lt;/code&gt; value for macOS. This is because macOS performs in-memory compression of pages that haven't been recently used. As a result the resident set size value is not what one would expect. &lt;code&gt;private&lt;/code&gt; memory is more representative of the actual pre-compression memory usage of the process on macOS.</source>
          <target state="translated">ChromiumはmacOSの &lt;code&gt;residentSet&lt;/code&gt; 値を提供しません。これは、macOSが最近使用されていないページのメモリ内圧縮を実行するためです。結果として、常駐セットのサイズ値は、予想されるものではありません。 &lt;code&gt;private&lt;/code&gt; メモリは、macOSでのプロセスの実際の圧縮前メモリ使用量をよりよく表しています。</target>
        </trans-unit>
        <trans-unit id="a63070852351699db72ebb1819ead2269b9a49a8" translate="yes" xml:space="preserve">
          <source>Chromium git cache</source>
          <target state="translated">Chromium git キャッシュ</target>
        </trans-unit>
        <trans-unit id="df04781e85a290de368d10e6070921bdae1f831d" translate="yes" xml:space="preserve">
          <source>Chromium has removed support for Flash, and so we must follow suit. See Chromium's &lt;a href=&quot;https://www.chromium.org/flash-roadmap&quot;&gt;Flash Roadmap&lt;/a&gt; for more details.</source>
          <target state="translated">ChromiumはFlashのサポートを削除したため、それに従わなければなりません。詳細については、Chromiumの&lt;a href=&quot;https://www.chromium.org/flash-roadmap&quot;&gt;フラッシュロードマップ&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2d172c7bbe9e1ee3b548a48377a07449e3d6d502" translate="yes" xml:space="preserve">
          <source>Chromium has removed support for changing the layout zoom level limits, and it is beyond Electron's capacity to maintain it. The function was deprecated in Electron 8.x, and has been removed in Electron 9.x. The layout zoom level limits are now fixed at a minimum of 0.25 and a maximum of 5.0, as defined &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/938b37a6d2886bf8335fc7db792f1eb46c65b2ae/third_party/blink/common/page/page_zoom.cc#11&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Chromiumは、レイアウトのズームレベル制限を変更するためのサポートを削除しました。これは、Electronがそれを維持する能力を超えています。この機能はElectron8.xで非推奨になり、Electron9.xで削除されました。&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/938b37a6d2886bf8335fc7db792f1eb46c65b2ae/third_party/blink/common/page/page_zoom.cc#11&quot;&gt;ここで&lt;/a&gt;定義されているように、レイアウトのズームレベルの制限が最小0.25から最大5.0に修正されました。</target>
        </trans-unit>
        <trans-unit id="9d92cbaef60a8ba7e2959561b99b46b8d3bda8b5" translate="yes" xml:space="preserve">
          <source>Chromium has removed support for changing the layout zoom level limits, and it is beyond Electron's capacity to maintain it. The function will emit a warning in Electron 8.x, and cease to exist in Electron 9.x. The layout zoom level limits are now fixed at a minimum of 0.25 and a maximum of 5.0, as defined &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/938b37a6d2886bf8335fc7db792f1eb46c65b2ae/third_party/blink/common/page/page_zoom.cc#11&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Chromiumは、レイアウトのズームレベル制限を変更するためのサポートを削除しました。これは、Electronがそれを維持する能力を超えています。この関数は、Electron 8.xで警告を発し、Electron9.xでは存在しなくなります。&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/938b37a6d2886bf8335fc7db792f1eb46c65b2ae/third_party/blink/common/page/page_zoom.cc#11&quot;&gt;ここで&lt;/a&gt;定義されているように、レイアウトのズームレベルの制限が最小0.25から最大5.0に修正されました。</target>
        </trans-unit>
        <trans-unit id="05c98d780dac4b1bbd27ed2e1810948dc35b332c" translate="yes" xml:space="preserve">
          <source>Chromium logs can be enabled via the &lt;code&gt;ELECTRON_ENABLE_LOGGING&lt;/code&gt; environment variable. For more information, see the &lt;a href=&quot;../api/environment-variables#electron_enable_logging&quot;&gt;environment variables documentation&lt;/a&gt;.</source>
          <target state="translated">Chromiumログは、 &lt;code&gt;ELECTRON_ENABLE_LOGGING&lt;/code&gt; 環境変数を介して有効にできます。詳細については、&lt;a href=&quot;../api/environment-variables#electron_enable_logging&quot;&gt;環境変数のドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="910d1179bd3cdd614a3b80d2642be8fd383a5f88" translate="yes" xml:space="preserve">
          <source>Chromium logs can be enabled via the &lt;code&gt;ELECTRON_ENABLE_LOGGING&lt;/code&gt; environment variable. For more information, see the &lt;a href=&quot;api/environment-variables#electron_enable_logging&quot;&gt;environment variables documentation&lt;/a&gt;.</source>
          <target state="translated">Chromiumログは、 &lt;code&gt;ELECTRON_ENABLE_LOGGING&lt;/code&gt; 環境変数を介して有効にできます。詳細については、&lt;a href=&quot;api/environment-variables#electron_enable_logging&quot;&gt;環境変数のドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
