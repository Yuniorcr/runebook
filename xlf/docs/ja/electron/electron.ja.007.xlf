<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="electron">
    <body>
      <group id="electron">
        <trans-unit id="fcce774f23fbaca8f3887f08ad334551913898e8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - User operating system's locale two-letter &lt;a href=&quot;https://www.iso.org/iso-3166-country-codes.html&quot;&gt;ISO 3166&lt;/a&gt; country code. The value is taken from native OS APIs.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 返します-ユーザーオペレーティングシステムのロケール2文字の&lt;a href=&quot;https://www.iso.org/iso-3166-country-codes.html&quot;&gt;ISO3166&lt;/a&gt;国コード。値はネイティブOSAPIから取得されます。</target>
        </trans-unit>
        <trans-unit id="1427ace8a39974fb409ddbf580855d6ed5de400c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - Window id in the format of DesktopCapturerSource's id. For example &quot;window🔢0&quot;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 返します-DesktopCapturerSourceのIDの形式のウィンドウID。たとえば、「window🔢0」。</target>
        </trans-unit>
        <trans-unit id="9fd853c670cef4a9a0e9f6f785fcaed86bf9a131" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - the path to the receipt.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 返します-領収書へのパス。</target>
        </trans-unit>
        <trans-unit id="fcd77d6e2dccd55399e681fbd1d42daa496028d4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - the title displayed next to the tray icon in the status bar</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 返します-ステータスバーのトレイアイコンの横に表示されるタイトル</target>
        </trans-unit>
        <trans-unit id="690e6b5c9bcb41b65514f5a5205d775b9cea6d44" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - the type of the webContent. Can be &lt;code&gt;backgroundPage&lt;/code&gt;, &lt;code&gt;window&lt;/code&gt;, &lt;code&gt;browserView&lt;/code&gt;, &lt;code&gt;remote&lt;/code&gt;, &lt;code&gt;webview&lt;/code&gt; or &lt;code&gt;offscreen&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 返します-webContentのタイプ。することができ &lt;code&gt;backgroundPage&lt;/code&gt; 、 &lt;code&gt;window&lt;/code&gt; 、 &lt;code&gt;browserView&lt;/code&gt; 、 &lt;code&gt;remote&lt;/code&gt; 、 &lt;code&gt;webview&lt;/code&gt; か、 &lt;code&gt;offscreen&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47366350971bcafa4d1986109c4d4daeb8469537" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; | &lt;code&gt;null&lt;/code&gt; - Can be &lt;code&gt;dark&lt;/code&gt;, &lt;code&gt;light&lt;/code&gt; or &lt;code&gt;unknown&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 返します| &lt;code&gt;null&lt;/code&gt; は-ことができます &lt;code&gt;dark&lt;/code&gt; 、 &lt;code&gt;light&lt;/code&gt; または &lt;code&gt;unknown&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31694c0110b171ba5391158b3f43cd58ede0fc72" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt;, the path of the file chosen by the user, if a callback is provided it returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">ユーザーが選択したファイルのパスである &lt;code&gt;String&lt;/code&gt; を返します。コールバックが提供されている場合は、 &lt;code&gt;undefined&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f0db62cb2c4f123b8d855f8c9b70e6ceff6773ed" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt;, the path to the receipt.</source>
          <target state="translated">レシートへのパスである &lt;code&gt;String&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="64c55769f42f3ea72b72bc77d247e87b2d211e46" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[] | undefined&lt;/code&gt;, the file paths chosen by the user; if the dialog is cancelled it returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String[] | undefined&lt;/code&gt; 返します| 未定義、ユーザーが選択したファイルパス。ダイアログがキャンセルされると、 &lt;code&gt;undefined&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="0c698f9bdd9b00da1b60c25cc4f37e15ce5e688e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt; - An array of language codes the spellchecker is enabled for. If this list is empty the spellchecker will fallback to using &lt;code&gt;en-US&lt;/code&gt;. By default on launch if this setting is an empty list Electron will try to populate this setting with the current OS locale. This setting is persisted across restarts.</source>
          <target state="translated">&lt;code&gt;String[]&lt;/code&gt; 返します-スペルチェッカーが有効になっている言語コードの配列。このリストが空の場合、スペルチェッカーは &lt;code&gt;en-US&lt;/code&gt; の使用にフォールバックします。デフォルトでは、この設定が空のリストの場合、起動時にElectronはこの設定に現在のOSロケールを入力しようとします。この設定は、再起動後も保持されます。</target>
        </trans-unit>
        <trans-unit id="a1e73221f969b7cae7ec948cf3ba4ee9d5bbf996" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt; - An array of supported formats for the clipboard &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">戻り値 &lt;code&gt;String[]&lt;/code&gt; -クリップボードのためにサポートされる形式の配列 &lt;code&gt;type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d161b268fa2d05e046f64f96ddd9e045f649a02" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt; - The complete URL chain of the item including any redirects.</source>
          <target state="translated">&lt;code&gt;String[]&lt;/code&gt; 返します-リダイレクトを含むアイテムの完全なURLチェーン。</target>
        </trans-unit>
        <trans-unit id="f9e13a4ef5289d5b06e288b829cf2d5ed471f74b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt; - The complete url chain of the item including any redirects.</source>
          <target state="translated">戻り値 &lt;code&gt;String[]&lt;/code&gt; -任意のリダイレクトなどの項目の完全なURLチェーン。</target>
        </trans-unit>
        <trans-unit id="923e64e60ef25f4e78822b1cd693b0873fa2d0b8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt; an array of paths to preload scripts that have been registered.</source>
          <target state="translated">&lt;code&gt;String[]&lt;/code&gt; 登録されているプリロードスクリプトへのパスの配列を返します。</target>
        </trans-unit>
        <trans-unit id="bae73c2c98331612dc6c366ce51f6f8429956a79" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt;, an array of file paths chosen by the user, if the callback is provided it returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">ユーザーが選択したファイルパスの配列である &lt;code&gt;String[]&lt;/code&gt; 返します。コールバックが提供されている場合は、 &lt;code&gt;undefined&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1a6c7a586b56f17a276ba312c2721c92e1c77ba9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebContents&lt;/code&gt; - A WebContents instance with the given ID.</source>
          <target state="translated">&lt;code&gt;WebContents&lt;/code&gt; -指定されたIDのWebContentsインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="a68d5585df401c31a588c98855e8e5fafec74456" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebContents&lt;/code&gt; - The web contents that is focused in this application, otherwise returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WebContents&lt;/code&gt; を返します-このアプリケーションでフォーカスされているWebコンテンツ。それ以外の場合は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0c2bd07476b13cc89053e1c18dcf742542b3eef1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebContents[]&lt;/code&gt; - An array of all &lt;code&gt;WebContents&lt;/code&gt; instances. This will contain web contents for all windows, webviews, opened devtools, and devtools extension background pages.</source>
          <target state="translated">戻り値の &lt;code&gt;WebContents[]&lt;/code&gt; -すべての配列 &lt;code&gt;WebContents&lt;/code&gt; のインスタンス。これには、すべてのウィンドウ、Webビュー、開いているdevtools、およびdevtools拡張機能のバックグラウンドページのWebコンテンツが含まれます。</target>
        </trans-unit>
        <trans-unit id="3f229913b884753774a062b58026e7645a874e2a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebFrame&lt;/code&gt; - A child of &lt;code&gt;webFrame&lt;/code&gt; with the supplied &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; would be returned if there's no such frame or if the frame is not in the current renderer process.</source>
          <target state="translated">&lt;code&gt;WebFrame&lt;/code&gt; を返します-指定された &lt;code&gt;name&lt;/code&gt; &lt;code&gt;webFrame&lt;/code&gt; の子であり、そのようなフレームがない場合、またはフレームが現在のレンダラープロセスにない場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="dd7ed78d9f66a109ecc133e6dd711ddd8bd57f04" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebFrame&lt;/code&gt; - The frame element in &lt;code&gt;webFrame's&lt;/code&gt; document selected by &lt;code&gt;selector&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; would be returned if &lt;code&gt;selector&lt;/code&gt; does not select a frame or if the frame is not in the current renderer process.</source>
          <target state="translated">&lt;code&gt;WebFrame&lt;/code&gt; を返します- &lt;code&gt;selector&lt;/code&gt; によって選択された &lt;code&gt;webFrame's&lt;/code&gt; ドキュメント内のフレーム要素。 &lt;code&gt;selector&lt;/code&gt; がフレームを選択しない場合、またはフレームが現在のレンダラープロセスにない場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="dd26e72f2db5d53de93a6bd68bc5ec583a840025" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebFrame&lt;/code&gt; - that has the supplied &lt;code&gt;routingId&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; if not found.</source>
          <target state="translated">&lt;code&gt;WebFrame&lt;/code&gt; を返します-指定された &lt;code&gt;routingId&lt;/code&gt; があり、見つからない場合は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1902ac569a2312f8815b290037988cdb744757be" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The global variable of &lt;code&gt;name&lt;/code&gt; (e.g. &lt;code&gt;global[name]&lt;/code&gt;) in the main process.</source>
          <target state="translated">戻り値 &lt;code&gt;any&lt;/code&gt; -のグローバル変数 &lt;code&gt;name&lt;/code&gt; （例： &lt;code&gt;global[name]&lt;/code&gt; メインプロセスで）。</target>
        </trans-unit>
        <trans-unit id="d8401e8866b40f51fbb6d7e2633e6ecafe4c3465" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The object returned by &lt;code&gt;require(module)&lt;/code&gt; in the main process. Modules specified by their relative path will resolve relative to the entrypoint of the main process.</source>
          <target state="translated">戻り値 &lt;code&gt;any&lt;/code&gt; -によって返されたオブジェクト &lt;code&gt;require(module)&lt;/code&gt; のメインプロセスで。相対パスで指定されたモジュールは、メインプロセスのエントリポイントに対して相対的に解決されます。</target>
        </trans-unit>
        <trans-unit id="c522e66dfd87ddf28ee211d7e7036eadfb473e12" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The value of &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;NSUserDefaults&lt;/code&gt;.</source>
          <target state="translated">戻り値 &lt;code&gt;any&lt;/code&gt; -の値 &lt;code&gt;key&lt;/code&gt; で &lt;code&gt;NSUserDefaults&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5e5a88f4417c1e0d0af3bc1659070da4a5ca98b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The value sent back by the &lt;a href=&quot;ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="translated">戻り値は、 &lt;code&gt;any&lt;/code&gt; -値によって送り返さ&lt;a href=&quot;ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; の&lt;/a&gt;ハンドラ。</target>
        </trans-unit>
        <trans-unit id="2ee052be19e00638713aaaa08413c76413615780" translate="yes" xml:space="preserve">
          <source>Returns all uploaded crash reports. Each report contains the date and uploaded ID.</source>
          <target state="translated">アップロードされたすべてのクラッシュレポートを返します。各レポートには日付とアップロードされた ID が含まれています。</target>
        </trans-unit>
        <trans-unit id="2b5ec4cbb83869df3cc77a808f126fcd0460ed29" translate="yes" xml:space="preserve">
          <source>Returns an Object containing &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt; keys representing the bookmark in the clipboard. The &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt; values will be empty strings when the bookmark is unavailable.</source>
          <target state="translated">クリップボードのブックマークを表す &lt;code&gt;title&lt;/code&gt; と &lt;code&gt;url&lt;/code&gt; キーを含むオブジェクトを返します。 &lt;code&gt;title&lt;/code&gt; と &lt;code&gt;url&lt;/code&gt; のブックマークが利用できないときの値は空の文字列になります。</target>
        </trans-unit>
        <trans-unit id="e581a2f5b9be500264cea39b4d29a52d661ab229" translate="yes" xml:space="preserve">
          <source>Returns an object describing usage information of Blink's internal memory caches.</source>
          <target state="translated">Blink の内部メモリキャッシュの使用情報を記述したオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="f23bd54100e425b9c76fe9a1f52022c20ae112ef" translate="yes" xml:space="preserve">
          <source>Returns an object giving memory usage statistics about the current process. Note that all statistics are reported in Kilobytes.</source>
          <target state="translated">現在のプロセスに関するメモリ使用量の統計情報を表すオブジェクトを返します。すべての統計情報はキロバイト単位で報告されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5555fe7e76fa4758ee82e8a3b2aecbd071d1c59e" translate="yes" xml:space="preserve">
          <source>Returns an object giving memory usage statistics about the current process. Note that all statistics are reported in Kilobytes. This api should be called after app ready.</source>
          <target state="translated">現在のプロセスに関するメモリ使用量の統計情報を表すオブジェクトを返します。すべての統計情報はキロバイト単位で報告されることに注意してください。この API は、アプリの準備ができた後に呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="f27c5643d974431418e69f225c656a0234dd61c8" translate="yes" xml:space="preserve">
          <source>Returns an object giving memory usage statistics about the entire system. Note that all statistics are reported in Kilobytes.</source>
          <target state="translated">システム全体のメモリ使用量の統計情報を表すオブジェクトを返します。すべての統計情報はキロバイト単位で報告されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="faffa56f4d5ded8f1be6a1f043b636ace6f0979c" translate="yes" xml:space="preserve">
          <source>Returns an object with Blink memory information. It can be useful for debugging rendering / DOM related memory issues. Note that all values are reported in Kilobytes.</source>
          <target state="translated">Blink のメモリ情報を持つオブジェクトを返します。レンダリングや DOM 関連のメモリ問題をデバッグするのに便利です。すべての値はキロバイト単位で報告されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1716c562e6d0ce145e0896ed65b8e5ec9a285980" translate="yes" xml:space="preserve">
          <source>Returns an object with V8 heap statistics. Note that all statistics are reported in Kilobytes.</source>
          <target state="translated">V8 ヒープの統計情報を持つオブジェクトを返します。すべての統計情報はキロバイト単位で報告されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2e6d4fb250da9a64435f411dee0088bf69c8cbdf" translate="yes" xml:space="preserve">
          <source>Returns an object with system animation settings.</source>
          <target state="translated">システムアニメーションの設定を持つオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="f24c3d414ca822febe2ca5596b976a4747321df5" translate="yes" xml:space="preserve">
          <source>Returns focus to the taskbar notification area. Notification area icons should use this message when they have completed their UI operation. For example, if the icon displays a shortcut menu, but the user presses ESC to cancel it, use &lt;code&gt;tray.focus()&lt;/code&gt; to return focus to the notification area.</source>
          <target state="translated">Returns focus to the taskbar notification area. Notification area icons should use this message when they have completed their UI operation. For example, if the icon displays a shortcut menu, but the user presses ESC to cancel it, use &lt;code&gt;tray.focus()&lt;/code&gt; to return focus to the notification area.</target>
        </trans-unit>
        <trans-unit id="c04c21aa70d07e500d22d4a632aaf59822d3cde1" translate="yes" xml:space="preserve">
          <source>Returns one of several standard system colors that automatically adapt to vibrancy and changes in accessibility settings like 'Increase contrast' and 'Reduce transparency'. See &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/color#system-colors&quot;&gt;Apple Documentation&lt;/a&gt; for more details.</source>
          <target state="translated">Returns one of several standard system colors that automatically adapt to vibrancy and changes in accessibility settings like 'Increase contrast' and 'Reduce transparency'. See &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/color#system-colors&quot;&gt;Apple Documentation&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="e8057890e22b9f8b67929c5723eef8eca4e93b25" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;webContents&lt;/code&gt; that sent the message, you can call &lt;code&gt;event.sender.send&lt;/code&gt; to reply to the asynchronous message, see &lt;a href=&quot;web-contents#webcontentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; for more information.</source>
          <target state="translated">返し &lt;code&gt;webContents&lt;/code&gt; メッセージを送信し、あなたが呼び出すことができます &lt;code&gt;event.sender.send&lt;/code&gt; を参照、非同期メッセージに返信する&lt;a href=&quot;web-contents#webcontentssendchannel-arg1-arg2-&quot;&gt;webContents.sendの&lt;/a&gt;詳細については。</target>
        </trans-unit>
        <trans-unit id="c6880d91bc5cf27aec068ed67155ffa4d3e91110" translate="yes" xml:space="preserve">
          <source>Returns the date and ID of the last crash report. If no crash reports have been sent or the crash reporter has not been started, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">最後のクラッシュレポートの日付とIDを返します。クラッシュレポートが送信されていないか、クラッシュレポーターが開始されていない場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="dd62aafd5389b26af713319edd688cc48b484f0e" translate="yes" xml:space="preserve">
          <source>Returns the macOS appearance setting that is currently applied to your application, maps to &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsapplication/2967171-effectiveappearance?language=objc&quot;&gt;NSApplication.effectiveAppearance&lt;/a&gt;</source>
          <target state="translated">Returns the macOS appearance setting that is currently applied to your application, maps to &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsapplication/2967171-effectiveappearance?language=objc&quot;&gt;NSApplication.effectiveAppearance&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6da92a267240aa12670fc2f0602964c5acbaa063" translate="yes" xml:space="preserve">
          <source>Returns the visible URL. Writing to this attribute initiates top-level navigation.</source>
          <target state="translated">表示されているURLを返します。この属性に書き込むと、トップレベルのナビゲーションが開始されます。</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="47dcc27d6e87ece8baebe7e3877a261a5467093d" translate="yes" xml:space="preserve">
          <source>Roles</source>
          <target state="translated">Roles</target>
        </trans-unit>
        <trans-unit id="aadecd5653a198be5411a0643f9e5b01ef6f2d10" translate="yes" xml:space="preserve">
          <source>Roles allow menu items to have predefined behaviors.</source>
          <target state="translated">ロールは、メニュー項目が事前に定義された動作を持つことを可能にします。</target>
        </trans-unit>
        <trans-unit id="cfd5233f6c25112a7ae3ff91e4acc195f899f25f" translate="yes" xml:space="preserve">
          <source>Romanian</source>
          <target state="translated">Romanian</target>
        </trans-unit>
        <trans-unit id="40929586610053a634b9e4f61c5b20f26870e295" translate="yes" xml:space="preserve">
          <source>Romansh</source>
          <target state="translated">Romansh</target>
        </trans-unit>
        <trans-unit id="b8a5fd736772c4a313c4de796bec65f8ab2effb0" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git add your_changed_file.cc&lt;/code&gt;, and commit your change.</source>
          <target state="translated">実行は &lt;code&gt;git add your_changed_file.cc&lt;/code&gt; 、および変更をコミットします。</target>
        </trans-unit>
        <trans-unit id="5e3f8f0f74f3021861b7f6085e5662f13aa5f041" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git add your_changed_file.cc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git add your_changed_file.cc&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="fdbeb0a5cc782bcd533b4b0a06f1b19fe2ee18f6" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git-clang-format&lt;/code&gt;, and you will probably see modifications in &lt;code&gt;your_changed_file.cc&lt;/code&gt;, these modifications are generated from &lt;code&gt;clang-format&lt;/code&gt;.</source>
          <target state="translated">ラン &lt;code&gt;git-clang-format&lt;/code&gt; 、およびあなたはおそらくで変更が表示されます &lt;code&gt;your_changed_file.cc&lt;/code&gt; は、これらの変更はから生成されて &lt;code&gt;clang-format&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="54fd61aadef86ab86cacf949507596c868138e42" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;gn gen&lt;/code&gt; with the --ide=xcode argument.</source>
          <target state="translated">Run &lt;code&gt;gn gen&lt;/code&gt; with the --ide=xcode argument.</target>
        </trans-unit>
        <trans-unit id="b47d63fed4fd82e91407d1c5b1f60dbed9cec7ab" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;npm run prepare-release -- --notesOnly&lt;/code&gt; to view auto generated release notes. The notes generated should help you determine if this is a major, minor, patch, or beta version change. Read the &lt;a href=&quot;../tutorial/electron-versioning#semver&quot;&gt;Version Change Rules&lt;/a&gt; for more information.</source>
          <target state="translated">ファイル名を指定して実行 &lt;code&gt;npm run prepare-release -- --notesOnly&lt;/code&gt; ビューの自動生成されたリリースノートに。生成されたメモは、これがメジャー、マイナー、パッチ、またはベータバージョンの変更であるかどうかを判断するのに役立ちます。詳細については、&lt;a href=&quot;../tutorial/electron-versioning#semver&quot;&gt;バージョン変更ルール&lt;/a&gt;をお読みください。</target>
        </trans-unit>
        <trans-unit id="3ec56dd036ed12028c3a4befb8d157c78271cd84" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;script/update&lt;/code&gt; to get the latest libcc</source>
          <target state="translated">&lt;code&gt;script/update&lt;/code&gt; を実行して最新のlibccを取得します</target>
        </trans-unit>
        <trans-unit id="ecc04fc73bd9e28cc2dbb2e34bc699872e727cb1" translate="yes" xml:space="preserve">
          <source>Run the build when all patches can be applied without errors</source>
          <target state="translated">すべてのパッチがエラーなく適用できる場合にビルドを実行する</target>
        </trans-unit>
        <trans-unit id="f81da03623f4678b1d0a88cb300ef073313365b4" translate="yes" xml:space="preserve">
          <source>Run the example inside Electron: &lt;code&gt;./node_modules/.bin/electron touchbar.js&lt;/code&gt;</source>
          <target state="translated">Electron内で例を実行します &lt;code&gt;./node_modules/.bin/electron touchbar.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03eea6fe68d08c23ee051601b792e86069c57548" translate="yes" xml:space="preserve">
          <source>Run the prepare-release script</source>
          <target state="translated">リリース準備スクリプトの実行</target>
        </trans-unit>
        <trans-unit id="f4f5eadb085530c0a2c8afe8a1bc775ad08cccca" translate="yes" xml:space="preserve">
          <source>Run the update script with the --xcode argument.</source>
          <target state="translated">--xcode 引数を指定して更新スクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="54f7b6c38adcb213f6377d5a2ecd48cfd8f83be4" translate="yes" xml:space="preserve">
          <source>Run your application</source>
          <target state="translated">アプリケーションの実行</target>
        </trans-unit>
        <trans-unit id="fb8a1b5cd9e545a0e99ce044671aa84c2328b9f2" translate="yes" xml:space="preserve">
          <source>Running Your App</source>
          <target state="translated">アプリの実行</target>
        </trans-unit>
        <trans-unit id="2ce1fe4a10500dae85aef09840368cfcd8ecbdc6" translate="yes" xml:space="preserve">
          <source>Running the above example</source>
          <target state="translated">上記の例を実行する</target>
        </trans-unit>
        <trans-unit id="74ad93cbebf587ac46ab0ef1e3f24139ddd3f535" translate="yes" xml:space="preserve">
          <source>Russian</source>
          <target state="translated">Russian</target>
        </trans-unit>
        <trans-unit id="7c2ec64b2c38d12b505b5fd75ee288dceedd8a1b" translate="yes" xml:space="preserve">
          <source>SHA - &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf&quot;&gt;FIPS 180-4&lt;/a&gt;</source>
          <target state="translated">SHA- &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf&quot;&gt;FIPS 180-4&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f97af335d962e8e1f24974a7b7e6da05813a2321" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;web-contents#contentsloadurlurl-options&quot;&gt;&lt;code&gt;webContents.loadURL(url[, options])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Same as &lt;a href=&quot;web-contents#contentsloadurlurl-options&quot;&gt; &lt;code&gt;webContents.loadURL(url[, options])&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9546a799e70aa601e431551d80f31b5bfd8b9df8" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;protocol.registerStreamProtocol&lt;/code&gt;, except that it replaces an existing protocol handler.</source>
          <target state="translated">既存のプロトコルハンドラーを置き換えることを除いて、 &lt;code&gt;protocol.registerStreamProtocol&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="6dfdbade7002a2d69f55f64ad452636f5c27b3d0" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;subscribeNotification&lt;/code&gt;, but uses &lt;code&gt;NSNotificationCenter&lt;/code&gt; for local defaults. This is necessary for events such as &lt;code&gt;NSUserDefaultsDidChangeNotification&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;subscribeNotification&lt;/code&gt; と同じですが、ローカルのデフォルトに &lt;code&gt;NSNotificationCenter&lt;/code&gt; を使用します。これは &lt;code&gt;NSUserDefaultsDidChangeNotification&lt;/code&gt; などのイベントに必要です。</target>
        </trans-unit>
        <trans-unit id="f9c16143f6bdee978c163fa8df919af5a91fffb0" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;subscribeNotification&lt;/code&gt;, but uses &lt;code&gt;NSWorkspace.sharedWorkspace.notificationCenter&lt;/code&gt;. This is necessary for events such as &lt;code&gt;NSWorkspaceDidActivateApplicationNotification&lt;/code&gt;.</source>
          <target state="translated">Same as &lt;code&gt;subscribeNotification&lt;/code&gt; , but uses &lt;code&gt;NSWorkspace.sharedWorkspace.notificationCenter&lt;/code&gt; . This is necessary for events such as &lt;code&gt;NSWorkspaceDidActivateApplicationNotification&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcd0d52364d10f3bc81d47694637bdfd654e86fc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;unsubscribeNotification&lt;/code&gt;, but removes the subscriber from &lt;code&gt;NSNotificationCenter&lt;/code&gt;.</source>
          <target state="translated">同じ &lt;code&gt;unsubscribeNotification&lt;/code&gt; 、しかしから加入者を削除し &lt;code&gt;NSNotificationCenter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1017fee5dd83c92cc97127db8ababee095ba268e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;unsubscribeNotification&lt;/code&gt;, but removes the subscriber from &lt;code&gt;NSWorkspace.sharedWorkspace.notificationCenter&lt;/code&gt;.</source>
          <target state="translated">Same as &lt;code&gt;unsubscribeNotification&lt;/code&gt; , but removes the subscriber from &lt;code&gt;NSWorkspace.sharedWorkspace.notificationCenter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26f78a3edab8bc49aa9671cccc476cba80b28d93" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.capturePage([rect, ]callback)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webContents.capturePage([rect, ]callback)&lt;/code&gt; 同じです。</target>
        </trans-unit>
        <trans-unit id="636f1e73cded8b523350006257f0bb65497d6eea" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.loadFile&lt;/code&gt;, &lt;code&gt;filePath&lt;/code&gt; should be a path to an HTML file relative to the root of your application. See the &lt;code&gt;webContents&lt;/code&gt; docs for more information.</source>
          <target state="translated">&lt;code&gt;webContents.loadFile&lt;/code&gt; と同じように、 &lt;code&gt;filePath&lt;/code&gt; はアプリケーションのルートを基準にしたHTMLファイルへのパスである必要があります。詳細については、 &lt;code&gt;webContents&lt;/code&gt; のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="0190a18aa72702f8b45e07e46046dbb9c99de065" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.loadURL(url[, options])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webContents.loadURL(url[, options])&lt;/code&gt; 同じです。</target>
        </trans-unit>
        <trans-unit id="82b95b7d5f77471ef8f73b6ed8179b6cf1dedd03" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.reload&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webContents.reload&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="129890bda53ef7ad60257818882912fbe53db967" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.showDefinitionForSelection()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webContents.showDefinitionForSelection()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="0a771c36be05d64f376a7d57849bb33ee0c53884" translate="yes" xml:space="preserve">
          <source>Sandbox</source>
          <target state="translated">Sandbox</target>
        </trans-unit>
        <trans-unit id="2cc0724359a61b01f6c24fc544e7ae4f41c3c9b2" translate="yes" xml:space="preserve">
          <source>Save the above file to your computer as &lt;code&gt;touchbar.js&lt;/code&gt;</source>
          <target state="translated">上記のファイルを &lt;code&gt;touchbar.js&lt;/code&gt; としてコンピューターに保存します。</target>
        </trans-unit>
        <trans-unit id="2c959d69ea6f6fb685ee79d3bafa0d911a7d6283" translate="yes" xml:space="preserve">
          <source>Save the file</source>
          <target state="translated">ファイルを保存する</target>
        </trans-unit>
        <trans-unit id="58df2ed823cdd4690f8dacf52369ef08b8917119" translate="yes" xml:space="preserve">
          <source>Schedules a full repaint of the window this web contents is in.</source>
          <target state="translated">このWebコンテンツのウィンドウの完全な再塗装をスケジュールします。</target>
        </trans-unit>
        <trans-unit id="e80af8419edd6924a4eb2492086ded3cee61c310" translate="yes" xml:space="preserve">
          <source>Scots Gaelic</source>
          <target state="translated">スコットランドゲール語</target>
        </trans-unit>
        <trans-unit id="c974ef3c19333dbdbb56bbcbef1485df0f486a65" translate="yes" xml:space="preserve">
          <source>Scripts put here should never be invoked by users directly, unlike those in &lt;code&gt;script&lt;/code&gt;.</source>
          <target state="translated">Scripts put here should never be invoked by users directly, unlike those in &lt;code&gt;script&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26b25ac9ab334d5c9ee9e642ca52b0327da6ec72" translate="yes" xml:space="preserve">
          <source>ScrubberItem</source>
          <target state="translated">ScrubberItem</target>
        </trans-unit>
        <trans-unit id="c1ec744a093e0c733e3fb2cec799ce791643a673" translate="yes" xml:space="preserve">
          <source>ScrubberItem Object</source>
          <target state="translated">ScrubberItem オブジェクト</target>
        </trans-unit>
        <trans-unit id="329e5602e2833d8f93a85c833b53d05b708870d0" translate="yes" xml:space="preserve">
          <source>Second, the callbacks passed to the main process will persist until the main process garbage-collects them.</source>
          <target state="translated">第二に、メインプロセスに渡されたコールバックは、メインプロセスがそれらをガベージコレクションするまで持続します。</target>
        </trans-unit>
        <trans-unit id="4758bf3cf3612cd75e13622feee413991c1858ca" translate="yes" xml:space="preserve">
          <source>Secure schemes do not trigger mixed content warnings. For example, &lt;code&gt;https&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; are secure schemes because they cannot be corrupted by active network attackers.</source>
          <target state="translated">安全なスキームは、混合コンテンツの警告をトリガーしません。たとえば、 &lt;code&gt;https&lt;/code&gt; と &lt;code&gt;data&lt;/code&gt; は、アクティブなネットワーク攻撃者によって破損できないため、安全なスキームです。</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="c1affc9c83b3714d09711172b7a83267645eb627" translate="yes" xml:space="preserve">
          <source>Security Checklist</source>
          <target state="translated">セキュリティチェックリスト</target>
        </trans-unit>
        <trans-unit id="c5c54edc3776b9e491c604ba90c4e5634bd68450" translate="yes" xml:space="preserve">
          <source>Security Is Everyone's Responsibility</source>
          <target state="translated">セキュリティはみんなの責任</target>
        </trans-unit>
        <trans-unit id="23c4cfbbeab885f5c9f74d1d9f315d17e5af7bbd" translate="yes" xml:space="preserve">
          <source>Security, Native Capabilities, and Your Responsibility</source>
          <target state="translated">セキュリティ、ネイティブの能力、そしてあなたの責任</target>
        </trans-unit>
        <trans-unit id="b337d2b031288424e8609b7ccaa81827eaa7e818" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;build-instructions-gn&quot;&gt;Build Instructions: GN&lt;/a&gt;</source>
          <target state="translated">See &lt;a href=&quot;build-instructions-gn&quot;&gt;Build Instructions: GN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9833dcb00345ddae5cbd773addffd50c815f9400" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;build-system-overview#tests&quot;&gt;Build System Overview: Tests&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;build-system-overview#tests&quot;&gt;ビルドシステムの概要：テストを&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="a58813d3c3b3053b8fb6a1701995d091905cb0d3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;coding-style&quot;&gt;coding style&lt;/a&gt; for more information about best practice when modifying code in different parts of the project.</source>
          <target state="translated">プロジェクトのさまざまな部分でコードを変更する際のベストプラクティスの詳細については、&lt;a href=&quot;coding-style&quot;&gt;コーディングスタイル&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a05ce16ce3715b5f1b58051e476bd537c72d85c8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;development/readme&quot;&gt;development/README.md&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;development/readme&quot;&gt;development / README.mdを&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="ddd9d944c30a5c1d51bfbb7163984f9be3412502" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/windows_build_instructions.md#visual-studio&quot;&gt;the Chromium build documentation&lt;/a&gt; for more details on which Visual Studio components are required.</source>
          <target state="translated">See &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/windows_build_instructions.md#visual-studio&quot;&gt;the Chromium build documentation&lt;/a&gt; for more details on which Visual Studio components are required.</target>
        </trans-unit>
        <trans-unit id="73d7c8150c6ce0f7a93108b05f8e9a1539cd2800" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/mojo/README.md&quot;&gt;https://chromium.googlesource.com/chromium/src/+/master/mojo/README.md&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/mojo/README.md&quot;&gt;https://chromium.googlesource.com/chromium/src/+/master/mojo/README.md&lt;/a&gt;をご覧ください</target>
        </trans-unit>
        <trans-unit id="4b2cc1d5f3de0bc2fee791afea5fb8f6ee059a4d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://conventionalcommits.org&quot;&gt;conventionalcommits.org&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://conventionalcommits.org&quot;&gt;conventionalcommits.org&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4d7e78e69da4d6ca38519778dbe7a77cdcacc58c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.apple.com/library/archive/technotes/tn2150/_index.html&quot;&gt;Apple's documentation&lt;/a&gt; for more details.</source>
          <target state="translated">See &lt;a href=&quot;https://developer.apple.com/library/archive/technotes/tn2150/_index.html&quot;&gt;Apple's documentation&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="471d1cd5b955e35dded8b38f177f2ce53b2f1b01" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://electronjs.org/docs/development/coding-style&quot;&gt;coding style&lt;/a&gt; for more information about best practice when modifying code in different parts of the project.</source>
          <target state="translated">See &lt;a href=&quot;https://electronjs.org/docs/development/coding-style&quot;&gt;coding style&lt;/a&gt; for more information about best practice when modifying code in different parts of the project.</target>
        </trans-unit>
        <trans-unit id="786e1a910c97d8bcd3715e7119510bcb9601d755" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/nodejs/node-gyp/blob/e2401e1395bef1d3c8acec268b42dc5fb71c4a38/src/win_delay_load_hook.cc&quot;&gt;&lt;code&gt;node-gyp&lt;/code&gt;&lt;/a&gt; for an example delay-load hook if you're implementing your own.</source>
          <target state="translated">See &lt;a href=&quot;https://github.com/nodejs/node-gyp/blob/e2401e1395bef1d3c8acec268b42dc5fb71c4a38/src/win_delay_load_hook.cc&quot;&gt; &lt;code&gt;node-gyp&lt;/code&gt; &lt;/a&gt; for an example delay-load hook if you're implementing your own.</target>
        </trans-unit>
        <trans-unit id="e684b0d18691b980d96ed18ab327fdd2feb3a0be" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://stackoverflow.com/help/mcve&quot;&gt;How to create a Minimal, Complete, and Verifiable example&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/help/mcve&quot;&gt;最小限の完全な検証可能な例を作成する方法を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8c4f265560eac0b3787a1e24cba35d9ea6f7875c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;Chromium's accessibility docs&lt;/a&gt; for more details. Disabled by default.</source>
          <target state="translated">See &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;Chromium's accessibility docs&lt;/a&gt; for more details. Disabled by default.</target>
        </trans-unit>
        <trans-unit id="4a5d970c5ffccec8438145b41fc06a7764563dda" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.chromium.org/flash-roadmap&quot;&gt;Chromium's Flash Roadmap&lt;/a&gt; for more details.</source>
          <target state="translated">See &lt;a href=&quot;https://www.chromium.org/flash-roadmap&quot;&gt;Chromium's Flash Roadmap&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="ecd3b3463460c3f2e1881313a2e4f8363afe741d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ipc-main&quot;&gt;ipcMain&lt;/a&gt; for code examples.</source>
          <target state="translated">コード例については、&lt;a href=&quot;ipc-main&quot;&gt;ipcMain&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="736407e10a23c2fc73aff20a0f1192ef6e57d6ae" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;menu&quot;&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/a&gt; for examples.</source>
          <target state="translated">例については、&lt;a href=&quot;menu&quot;&gt; &lt;code&gt;Menu&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="dffc89e4cb43c122a0e7f1cec023eed2ef4220d4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;recent-documents&quot;&gt;Recent Documents documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;recent-documents&quot;&gt;最近のドキュメントのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0d7fd10b14d2e1a7a21087fc165dfa2018ff0174" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;upgrading-node&quot;&gt;Upgrading Node&lt;/a&gt; for instructions on this.</source>
          <target state="translated">この手順については、&lt;a href=&quot;upgrading-node&quot;&gt;ノードのアップグレードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="85d0afa43609910152eee14c8ad3286150838366" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;web-contents#contentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; for examples.</source>
          <target state="translated">例については、&lt;a href=&quot;web-contents#contentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6407870d4db9de792cbc358274b27cc4bfd1b84b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;web-contents#contentssendchannel-args&quot;&gt;webContents.send&lt;/a&gt; for examples.</source>
          <target state="translated">See &lt;a href=&quot;web-contents#contentssendchannel-args&quot;&gt;webContents.send&lt;/a&gt; for examples.</target>
        </trans-unit>
        <trans-unit id="dcfe31bd9dbfddfa95546d8b0d8d5a19fa9f8e6b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;web-contents#contentssendinputeventevent&quot;&gt;webContents.sendInputEvent&lt;/a&gt; for detailed description of &lt;code&gt;event&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; オブジェクトの詳細な説明については、&lt;a href=&quot;web-contents#contentssendinputeventevent&quot;&gt;webContents.sendInputEvent&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="475c1fde0160f1547325ed43c76c4ae4d0da5649" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;web-contents#contentssendinputeventinputevent&quot;&gt;webContents.sendInputEvent&lt;/a&gt; for detailed description of &lt;code&gt;event&lt;/code&gt; object.</source>
          <target state="translated">See &lt;a href=&quot;web-contents#contentssendinputeventinputevent&quot;&gt;webContents.sendInputEvent&lt;/a&gt; for detailed description of &lt;code&gt;event&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="a60f91137d5a6d66ef6c9ea948cd3be4313f04e9" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;gn help gen&lt;/code&gt; for more information on generating IDE projects with GN.</source>
          <target state="translated">See &lt;code&gt;gn help gen&lt;/code&gt; for more information on generating IDE projects with GN.</target>
        </trans-unit>
        <trans-unit id="337be7104bf5a3851c42003b32034e4f98ea2f7b" translate="yes" xml:space="preserve">
          <source>See all of the current parameters being passed to the crash reporter.</source>
          <target state="translated">現在クラッシュレポーターに渡されているすべてのパラメータを表示します。</target>
        </trans-unit>
        <trans-unit id="e29007005b40bf1fc4ec2d10c7139e89b8170472" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;chromium-development&quot;&gt;Chromium Development&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;chromium-development&quot;&gt;Chromium開発&lt;/a&gt;も参照</target>
        </trans-unit>
        <trans-unit id="58ef5af520d1a7d088abd3d02633745691f5398b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;tutorial/using-native-node-modules&quot;&gt;Using Native Node Modules&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tutorial/using-native-node-modules&quot;&gt;ネイティブノードモジュールの使用&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="3ab749aa774f584827785b49b4d1861c7f37386f" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;v8-development&quot;&gt;V8 Development&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;v8-development&quot;&gt;V8開発&lt;/a&gt;も参照</target>
        </trans-unit>
        <trans-unit id="eb76eeea4869bec20abc0606e7a8d45239249d90" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#main-process&quot;&gt;main process&lt;/a&gt;, &lt;a href=&quot;#renderer-process&quot;&gt;renderer process&lt;/a&gt;</source>
          <target state="translated">次も参照：「&lt;a href=&quot;#main-process&quot;&gt;メインプロセス」&lt;/a&gt;、「&lt;a href=&quot;#renderer-process&quot;&gt;レンダラープロセス」&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5527483ee74ea81aba9bc6afa79cb258a4afdd57" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#process&quot;&gt;process&lt;/a&gt;, &lt;a href=&quot;#main-process&quot;&gt;main process&lt;/a&gt;</source>
          <target state="translated">次も参照：「&lt;a href=&quot;#process&quot;&gt;プロセス」&lt;/a&gt;、「&lt;a href=&quot;#main-process&quot;&gt;メインプロセス」&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ffe6b1b4c07ca59d0a31a452b02200bd7fe3440a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#process&quot;&gt;process&lt;/a&gt;, &lt;a href=&quot;#renderer-process&quot;&gt;renderer process&lt;/a&gt;</source>
          <target state="translated">次も参照：「&lt;a href=&quot;#process&quot;&gt;プロセス」&lt;/a&gt;、「&lt;a href=&quot;#renderer-process&quot;&gt;レンダラープロセス」&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07f3407502f02ad6d9324dfe027804f8e0c61929" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../api/browser-window#winsetprogressbarprogress&quot;&gt;API documentation for more options and modes&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../api/browser-window#winsetprogressbarprogress&quot;&gt;その他のオプションとモード&lt;/a&gt;については、APIドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="68f6d0025286d603059924a0fa682194d50b870b" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../api/browser-window#winsetprogressbarprogress-options&quot;&gt;API documentation for more options and modes&lt;/a&gt;.</source>
          <target state="translated">See the &lt;a href=&quot;../api/browser-window#winsetprogressbarprogress-options&quot;&gt;API documentation for more options and modes&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="922af4639f13ee2e081e9da7e55f5a4e48b82809" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;build-instructions-osx#prerequisites&quot;&gt;macOS&lt;/a&gt; or &lt;a href=&quot;build-instructions-linux#prerequisites&quot;&gt;Linux&lt;/a&gt; build instructions for the requirements for your platform. In addition, you'll need to install &lt;a href=&quot;http://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_setting_up&quot;&gt;&lt;code&gt;depot_tools&lt;/code&gt;&lt;/a&gt;, the toolset used for fetching Chromium and its dependencies.</source>
          <target state="translated">プラットフォームの要件については、&lt;a href=&quot;build-instructions-osx#prerequisites&quot;&gt;macOS&lt;/a&gt;または&lt;a href=&quot;build-instructions-linux#prerequisites&quot;&gt;Linuxの&lt;/a&gt;ビルド手順を参照してください。さらに、Chromiumとその依存関係を取得するために使用されるツールセットである&lt;a href=&quot;http://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_setting_up&quot;&gt; &lt;code&gt;depot_tools&lt;/code&gt; &lt;/a&gt;をインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="a72f6b3fee71b5ee27e43e4c277da90b203d6211" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;electron-versioning&quot;&gt;Electron versioning doc&lt;/a&gt; for info on how to manage Electron versions in your apps.</source>
          <target state="translated">アプリでElectronのバージョンを管理する方法については、&lt;a href=&quot;electron-versioning&quot;&gt;Electronのバージョニングドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="75d1df3201ba8ff332a54dd5604ceb7856b1f323" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nssound&quot;&gt;&lt;code&gt;NSSound&lt;/code&gt;&lt;/a&gt; docs for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://developer.apple.com/documentation/appkit/nssound&quot;&gt; &lt;code&gt;NSSound&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="b363dc9dae171616eaac7df6d3b3dd2dcbaa69c8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html#//apple_ref/doc/uid/TP40011195-CH4-SW9&quot;&gt;Enabling Network Access documentation&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html#//apple_ref/doc/uid/TP40011195-CH4-SW9&quot;&gt;ネットワークアクセス&lt;/a&gt;の有効化のドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="e14f95642ba46acbb1edbb2a5d74ce0062156ead" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/EventOverview/EventArchitecture/EventArchitecture.html#//apple_ref/doc/uid/10000060i-CH3-SW7&quot;&gt;macOS Cocoa Event Handling Guide&lt;/a&gt; for more information on macOS' native actions.</source>
          <target state="translated">macOSのネイティブアクションの詳細については、&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/EventOverview/EventArchitecture/EventArchitecture.html#//apple_ref/doc/uid/10000060i-CH3-SW7&quot;&gt;macOS Cocoaイベント処理ガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7ee477ba47414c448dc2b5680377bdbb4cb080b9" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html#//apple_ref/doc/uid/TP40011195-CH4-SW6&quot;&gt;Enabling User-Selected File Access documentation&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html#//apple_ref/doc/uid/TP40011195-CH4-SW6&quot;&gt;ユーザーが選択したファイルアクセスの有効化のドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="8af3f81ab6e9c039c559ab3c7ac5f466983267db" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles#Adding_shortcuts_to_a_launcher&quot;&gt;Unity Launcher documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles#Adding_shortcuts_to_a_launcher&quot;&gt;Unity Launcherのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e751e583ba867e212b34eb4bd8e9020730a2b27c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://nodejs.org/api/cli.html&quot;&gt;Node documentation&lt;/a&gt; or run &lt;code&gt;node --help&lt;/code&gt; in your terminal for a list of available flags. Additionally, run &lt;code&gt;node --v8-options&lt;/code&gt; to see a list of flags that specifically refer to Node's V8 JavaScript engine.</source>
          <target state="translated">使用可能なフラグのリストについては、&lt;a href=&quot;https://nodejs.org/api/cli.html&quot;&gt;ノードのドキュメントを&lt;/a&gt;参照するか、ターミナルで &lt;code&gt;node --help&lt;/code&gt; を実行してください。さらに、 &lt;code&gt;node --v8-options&lt;/code&gt; を実行して、NodeのV8 JavaScriptエンジンを具体的に参照するフラグのリストを表示します。</target>
        </trans-unit>
        <trans-unit id="0f53dbc03ca0e077f93d5d591db6a2023aed3150" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;mac-app-store-submission-guide&quot;&gt;Mac App Store Guide&lt;/a&gt;.</source>
          <target state="translated">See the &lt;a href=&quot;mac-app-store-submission-guide&quot;&gt;Mac App Store Guide&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e892ae8b32202c13cdeb96f7a5865a50aa322aea" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;native-file-drag-drop&quot;&gt;Native File Drag &amp;amp; Drop documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;native-file-drag-drop&quot;&gt;ネイティブファイルのドラッグアンドドロップのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b1281c35eacd3ba14e8868188e2d0a04cb5e310b" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;notifications&quot;&gt;Notifications documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;notifications&quot;&gt;通知のドキュメントを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="9f8669d8d2974ee35575500f8482370ab20c1913" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;progress-bar&quot;&gt;Progress Bar documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;progress-bar&quot;&gt;進行状況バーのドキュメントを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="0324004b1500cf9129273ae604a6e8a0a77d7ef4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;represented-file&quot;&gt;Represented File documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;represented-file&quot;&gt;表現ファイルのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8f864e177f43b7cb234d77b7df618bc99d7b82ba" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;web-contents&quot;&gt;&lt;code&gt;webContents&lt;/code&gt; documentation&lt;/a&gt; for its methods and events.</source>
          <target state="translated">メソッドとイベントについては、&lt;a href=&quot;web-contents&quot;&gt; &lt;code&gt;webContents&lt;/code&gt; のドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ae91d406fcbd618d12f5c235dc3e56d9b698056e" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;windows-store-guide&quot;&gt;Windows Store Guide&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;windows-store-guide&quot;&gt;Windowsストアガイドを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1bafc92b2fb3801c38280ab51a2ed75b463b4c57" translate="yes" xml:space="preserve">
          <source>See the GN reference for allowable values of &lt;a href=&quot;https://gn.googlesource.com/gn/+/master/docs/reference.md#built_in-predefined-variables-target_os_the-desired-operating-system-for-the-build-possible-values&quot;&gt;&lt;code&gt;target_os&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://gn.googlesource.com/gn/+/master/docs/reference.md#built_in-predefined-variables-target_cpu_the-desired-cpu-architecture-for-the-build-possible-values&quot;&gt;&lt;code&gt;target_cpu&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">See the GN reference for allowable values of &lt;a href=&quot;https://gn.googlesource.com/gn/+/master/docs/reference.md#built_in-predefined-variables-target_os_the-desired-operating-system-for-the-build-possible-values&quot;&gt; &lt;code&gt;target_os&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;https://gn.googlesource.com/gn/+/master/docs/reference.md#built_in-predefined-variables-target_cpu_the-desired-cpu-architecture-for-the-build-possible-values&quot;&gt; &lt;code&gt;target_cpu&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="70457ac5b9ba95528640a6b9ef6a955b285ea1da" translate="yes" xml:space="preserve">
          <source>See the description of the &lt;code&gt;window-all-closed&lt;/code&gt; event for the differences between the &lt;code&gt;will-quit&lt;/code&gt; and &lt;code&gt;window-all-closed&lt;/code&gt; events.</source>
          <target state="translated">説明を参照してください &lt;code&gt;window-all-closed&lt;/code&gt; 間の違いのためにイベントを &lt;code&gt;will-quit&lt;/code&gt; と &lt;code&gt;window-all-closed&lt;/code&gt; イベント。</target>
        </trans-unit>
        <trans-unit id="71695eaa30fa4f50190447174f2b56a0ea8f143a" translate="yes" xml:space="preserve">
          <source>SegmentedControlSegment</source>
          <target state="translated">SegmentedControlSegment</target>
        </trans-unit>
        <trans-unit id="4394ae9f946ada7d5b66bd57512f2b0ffffcc7f4" translate="yes" xml:space="preserve">
          <source>SegmentedControlSegment Object</source>
          <target state="translated">SegmentedControlSegment オブジェクト</target>
        </trans-unit>
        <trans-unit id="82daf787f597afb408780cadbba7d97c48185665" translate="yes" xml:space="preserve">
          <source>Select &lt;em&gt;Japanese Supplemental Fonts&lt;/em&gt; and click &lt;em&gt;Install&lt;/em&gt;.</source>
          <target state="translated">Select &lt;em&gt;Japanese Supplemental Fonts&lt;/em&gt; and click &lt;em&gt;Install&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="4208d8084338685df1c0978e4dd221efe2d57392" translate="yes" xml:space="preserve">
          <source>Selects the next tab when native tabs are enabled and there are other tabs in the window.</source>
          <target state="translated">ネイティブタブが有効で、ウィンドウ内に他のタブがある場合に、次のタブを選択します。</target>
        </trans-unit>
        <trans-unit id="a1f51b697f96978cd01f1977f3790edf482286e7" translate="yes" xml:space="preserve">
          <source>Selects the previous tab when native tabs are enabled and there are other tabs in the window.</source>
          <target state="translated">ネイティブタブが有効で、ウィンドウ内に他のタブがある場合に、前のタブを選択します。</target>
        </trans-unit>
        <trans-unit id="72ac6f4346e1855115a073803fab5a0d300cceeb" translate="yes" xml:space="preserve">
          <source>Semantic Commits</source>
          <target state="translated">セマンティックコミット</target>
        </trans-unit>
        <trans-unit id="1cb1b3bc1e2b6809211c45cfc2e520d9dc52d504" translate="yes" xml:space="preserve">
          <source>Send a message to the main process asynchronously via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.</source>
          <target state="translated">メインプロセスに &lt;code&gt;channel&lt;/code&gt; を介して非同期でメッセージを送信します。任意の引数を送信することもできます。引数は内部でJSONでシリアル化されるため、関数やプロトタイプチェーンは含まれません。</target>
        </trans-unit>
        <trans-unit id="7398add735120c8a300b1754e7b3ef793c612ca8" translate="yes" xml:space="preserve">
          <source>Send a message to the main process synchronously via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; を介してメインプロセスに同期的にメッセージを送信します。任意の引数を送信することもできます。引数は内部でJSONでシリアル化されるため、関数やプロトタイプチェーンは含まれません。</target>
        </trans-unit>
        <trans-unit id="f397258c65b3b2cd8dbe8d214f93af327c78e1a2" translate="yes" xml:space="preserve">
          <source>Send a message to the main process via &lt;code&gt;channel&lt;/code&gt; and expect a result asynchronously. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</source>
          <target state="translated">Send a message to the main process via &lt;code&gt;channel&lt;/code&gt; and expect a result asynchronously. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</target>
        </trans-unit>
        <trans-unit id="f4b4c77f6429e3003367e70a199e3dc8146f9930" translate="yes" xml:space="preserve">
          <source>Send a message to the main process via &lt;code&gt;channel&lt;/code&gt; and expect a result synchronously. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</source>
          <target state="translated">Send a message to the main process via &lt;code&gt;channel&lt;/code&gt; and expect a result synchronously. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</target>
        </trans-unit>
        <trans-unit id="09aae689836ac2a3417e0a9201cba4a5fc179370" translate="yes" xml:space="preserve">
          <source>Send a message to the main process, optionally transferring ownership of zero or more &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">Send a message to the main process, optionally transferring ownership of zero or more &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt; objects.</target>
        </trans-unit>
        <trans-unit id="c1ce8d11e65905c617492dd4f43f2f16263544d3" translate="yes" xml:space="preserve">
          <source>Send a message to the renderer process, optionally transferring ownership of zero or more [&lt;code&gt;MessagePortMain&lt;/code&gt;][] objects.</source>
          <target state="translated">Send a message to the renderer process, optionally transferring ownership of zero or more [ &lt;code&gt;MessagePortMain&lt;/code&gt; ][] objects.</target>
        </trans-unit>
        <trans-unit id="c0cbf5df09d2d268e4f30db80f4b94d088ae309e" translate="yes" xml:space="preserve">
          <source>Send an asynchronous message to a specific frame in a renderer process via &lt;code&gt;channel&lt;/code&gt;, along with arguments. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt;&lt;code&gt;postMessage&lt;/code&gt;&lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</source>
          <target state="translated">Send an asynchronous message to a specific frame in a renderer process via &lt;code&gt;channel&lt;/code&gt; , along with arguments. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt; &lt;code&gt;postMessage&lt;/code&gt; &lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</target>
        </trans-unit>
        <trans-unit id="3e29a5fc7e4c5a211355753ef9eef4b1b3d04a1e" translate="yes" xml:space="preserve">
          <source>Send an asynchronous message to renderer process via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.</source>
          <target state="translated">非同期メッセージを &lt;code&gt;channel&lt;/code&gt; 経由でレンダラープロセスに送信します。任意の引数を送信することもできます。引数は内部でJSONでシリアル化されるため、関数やプロトタイプチェーンは含まれません。</target>
        </trans-unit>
        <trans-unit id="7fb72802b0104119949d9f29b532cb6e097c6286" translate="yes" xml:space="preserve">
          <source>Send an asynchronous message to renderer process via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. The renderer process can handle the message by listening to the &lt;code&gt;channel&lt;/code&gt; event with the &lt;a href=&quot;ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">非同期メッセージを &lt;code&gt;channel&lt;/code&gt; 経由でレンダラープロセスに送信します。任意の引数を送信することもできます。レンダラープロセスは、&lt;a href=&quot;ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt;モジュールで &lt;code&gt;channel&lt;/code&gt; イベントをリッスンしてメッセージを処理できます。</target>
        </trans-unit>
        <trans-unit id="4754ed022ee011180d0ff4a299ce7803a1b95e27" translate="yes" xml:space="preserve">
          <source>Send an asynchronous message to the main process via &lt;code&gt;channel&lt;/code&gt;, along with arguments. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</source>
          <target state="translated">Send an asynchronous message to the main process via &lt;code&gt;channel&lt;/code&gt; , along with arguments. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</target>
        </trans-unit>
        <trans-unit id="b745e43012d47507af0af126531559aff735c4ce" translate="yes" xml:space="preserve">
          <source>Send an asynchronous message to the renderer process via &lt;code&gt;channel&lt;/code&gt;, along with arguments. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt;&lt;code&gt;postMessage&lt;/code&gt;&lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</source>
          <target state="translated">Send an asynchronous message to the renderer process via &lt;code&gt;channel&lt;/code&gt; , along with arguments. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt; &lt;code&gt;postMessage&lt;/code&gt; &lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</target>
        </trans-unit>
        <trans-unit id="921d99cf1d942e986d0ed0e985fc309e73536b31" translate="yes" xml:space="preserve">
          <source>Send given command to the debugging target.</source>
          <target state="translated">与えられたコマンドをデバッグターゲットに送信します。</target>
        </trans-unit>
        <trans-unit id="f0662ea4ce2ba05b7f07ad1199c4b10caa58025d" translate="yes" xml:space="preserve">
          <source>Sending Messages</source>
          <target state="translated">メッセージの送信</target>
        </trans-unit>
        <trans-unit id="56e7e87751462dc731390f6073cc81598c56f604" translate="yes" xml:space="preserve">
          <source>Sends a message to a window with &lt;code&gt;webContentsId&lt;/code&gt; via &lt;code&gt;channel&lt;/code&gt;.</source>
          <target state="translated">Sends a message to a window with &lt;code&gt;webContentsId&lt;/code&gt; via &lt;code&gt;channel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08d2829e520d5866a20eed4c2a57a504779d223f" translate="yes" xml:space="preserve">
          <source>Sends a message to a window with &lt;code&gt;windowid&lt;/code&gt; via &lt;code&gt;channel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; を介して &lt;code&gt;windowid&lt;/code&gt; のあるウィンドウにメッセージを送信します。</target>
        </trans-unit>
        <trans-unit id="b27c31ff5ce037a37f2b25c4b494e32bfda85239" translate="yes" xml:space="preserve">
          <source>Sends a message to the child window with the specified origin or &lt;code&gt;*&lt;/code&gt; for no origin preference.</source>
          <target state="translated">指定された起点、または起点設定がない場合は &lt;code&gt;*&lt;/code&gt; でメッセージを子ウィンドウに送信します。</target>
        </trans-unit>
        <trans-unit id="719b8fdd50b4650b966a5dd46c6c08f9d1623a9c" translate="yes" xml:space="preserve">
          <source>Sends a message to the parent window with the specified origin or &lt;code&gt;*&lt;/code&gt; for no origin preference.</source>
          <target state="translated">指定された起点、または起点設定がない場合は &lt;code&gt;*&lt;/code&gt; でメッセージを親ウィンドウに送信します。</target>
        </trans-unit>
        <trans-unit id="7a3b9453a9588f935f3b836cdd322a7738117100" translate="yes" xml:space="preserve">
          <source>Sends a request to get all cookies matching &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(error, cookies)&lt;/code&gt; on complete.</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; に一致するすべてのcookieを取得するリクエストを送信します。 &lt;code&gt;callback&lt;/code&gt; は、完了すると &lt;code&gt;callback(error, cookies)&lt;/code&gt; で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c12654c257bd1fb3bf1543e823c77b7a7ad751c7" translate="yes" xml:space="preserve">
          <source>Sends a request to get all cookies matching &lt;code&gt;filter&lt;/code&gt;, and resolves a promise with the response.</source>
          <target state="translated">Sends a request to get all cookies matching &lt;code&gt;filter&lt;/code&gt; , and resolves a promise with the response.</target>
        </trans-unit>
        <trans-unit id="d3ce1f777ecc3e7a8a13bbb32eb04f0541d80eee" translate="yes" xml:space="preserve">
          <source>Sends a request to get current zoom factor, the &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(zoomFactor)&lt;/code&gt;.</source>
          <target state="translated">現在のズーム倍率を取得するリクエストを送信し、 &lt;code&gt;callback&lt;/code&gt; 伴って呼び出される &lt;code&gt;callback(zoomFactor)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c2c4588d04b3b811a73cf7f809fde89008cf374" translate="yes" xml:space="preserve">
          <source>Sends a request to get current zoom level, the &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(zoomLevel)&lt;/code&gt;.</source>
          <target state="translated">現在のズームレベルを取得するリクエストを送信し、 &lt;code&gt;callback&lt;/code&gt; 伴って呼び出される &lt;code&gt;callback(zoomLevel)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d9b8e7c7636eb24670712f8a2b8d94e29c24623" translate="yes" xml:space="preserve">
          <source>Sends an input &lt;code&gt;event&lt;/code&gt; to the page.</source>
          <target state="translated">入力 &lt;code&gt;event&lt;/code&gt; をページに送信します。</target>
        </trans-unit>
        <trans-unit id="84c5cda6527732e60e0c4dc69e60c71e5fdce3db" translate="yes" xml:space="preserve">
          <source>Sends an input &lt;code&gt;event&lt;/code&gt; to the page. &lt;strong&gt;Note:&lt;/strong&gt; The &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; containing the contents needs to be focused for &lt;code&gt;sendInputEvent()&lt;/code&gt; to work.</source>
          <target state="translated">入力 &lt;code&gt;event&lt;/code&gt; をページに送信します。&lt;strong&gt;注：&lt;/strong&gt;&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;内容を含むがために集中する必要が &lt;code&gt;sendInputEvent()&lt;/code&gt; 仕事へ。</target>
        </trans-unit>
        <trans-unit id="c5cfbdf37308003d0b30614f7029c3869dcfa23a" translate="yes" xml:space="preserve">
          <source>Sends the &lt;code&gt;action&lt;/code&gt; to the first responder of application. This is used for emulating default macOS menu behaviors. Usually you would just use the &lt;a href=&quot;menu-item#roles&quot;&gt;&lt;code&gt;role&lt;/code&gt;&lt;/a&gt; property of a &lt;a href=&quot;menu-item&quot;&gt;&lt;code&gt;MenuItem&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アプリケーションの最初のレスポンダに &lt;code&gt;action&lt;/code&gt; を送信します。これは、デフォルトのmacOSメニュー動作をエミュレートするために使用されます。通常は、&lt;a href=&quot;menu-item&quot;&gt; &lt;code&gt;MenuItem&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;menu-item#roles&quot;&gt; &lt;code&gt;role&lt;/code&gt; &lt;/a&gt;プロパティを使用するだけです。</target>
        </trans-unit>
        <trans-unit id="720320cf3e3e7ec9e0e5d6aebbc02e4b141a3ca8" translate="yes" xml:space="preserve">
          <source>Sends the &lt;code&gt;action&lt;/code&gt; to the first responder of application. This is used for emulating default macOS menu behaviors. Usually you would use the &lt;a href=&quot;menu-item#roles&quot;&gt;&lt;code&gt;role&lt;/code&gt;&lt;/a&gt; property of a &lt;a href=&quot;menu-item&quot;&gt;&lt;code&gt;MenuItem&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Sends the &lt;code&gt;action&lt;/code&gt; to the first responder of application. This is used for emulating default macOS menu behaviors. Usually you would use the &lt;a href=&quot;menu-item#roles&quot;&gt; &lt;code&gt;role&lt;/code&gt; &lt;/a&gt; property of a &lt;a href=&quot;menu-item&quot;&gt; &lt;code&gt;MenuItem&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d92d32aa796cabbd87cf999a10e42b89f9c87024" translate="yes" xml:space="preserve">
          <source>Sends the last chunk of the request data. Subsequent write or end operations will not be allowed. The &lt;code&gt;finish&lt;/code&gt; event is emitted just after the end operation.</source>
          <target state="translated">要求データの最後のチャンクを送信します。後続の書き込みまたは終了操作は許可されません。 &lt;code&gt;finish&lt;/code&gt; イベントは、ちょうど終了操作の後に放出されます。</target>
        </trans-unit>
        <trans-unit id="17f228be7faef7815f5475737e55f8ffbdd2b4b6" translate="yes" xml:space="preserve">
          <source>Sentry</source>
          <target state="translated">Sentry</target>
        </trans-unit>
        <trans-unit id="a75ee8482a2c82952f1802a71a9ee0d0e4f4ff43" translate="yes" xml:space="preserve">
          <source>Serbian</source>
          <target state="translated">Serbian</target>
        </trans-unit>
        <trans-unit id="427973e4372d64bc21861e671a9618503e480670" translate="yes" xml:space="preserve">
          <source>Serbo-Croatian</source>
          <target state="translated">Serbo-Croatian</target>
        </trans-unit>
        <trans-unit id="d5a176a262fec08138c0ed9861403e484856c797" translate="yes" xml:space="preserve">
          <source>ServiceWorkerInfo Object</source>
          <target state="translated">ServiceWorkerInfo オブジェクト</target>
        </trans-unit>
        <trans-unit id="0a82444e5cf00073b6a0f03f62b33904edfb9b08" translate="yes" xml:space="preserve">
          <source>ServiceWorkers</source>
          <target state="translated">ServiceWorkers</target>
        </trans-unit>
        <trans-unit id="cc48b6b6f41313fcbf7e6d28144f8119b84edc00" translate="yes" xml:space="preserve">
          <source>Sesotho</source>
          <target state="translated">Sesotho</target>
        </trans-unit>
        <trans-unit id="615b44ac8bf6fbdb390f334c49d76f2b76637dea" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;CLANG_REVISION&lt;/code&gt; in &lt;code&gt;script/update-clang.sh&lt;/code&gt; to match the version Chromium is using.</source>
          <target state="translated">セット &lt;code&gt;CLANG_REVISION&lt;/code&gt; での &lt;code&gt;script/update-clang.sh&lt;/code&gt; クロムを使用しているバージョンと一致します。</target>
        </trans-unit>
        <trans-unit id="04dfd57492f4ad8bf029c8b1d42379508575b183" translate="yes" xml:space="preserve">
          <source>Set By Electron</source>
          <target state="translated">エレクトロンによるセット</target>
        </trans-unit>
        <trans-unit id="87b775ea6e988edfb5d895216c1a7c32c4c89b62" translate="yes" xml:space="preserve">
          <source>Set a custom locale.</source>
          <target state="translated">カスタムロケールを設定します。</target>
        </trans-unit>
        <trans-unit id="1f3db5b07d319956462a15d9e9697158fbc77f20" translate="yes" xml:space="preserve">
          <source>Set a custom position for the traffic light buttons. Can only be used with &lt;code&gt;titleBarStyle&lt;/code&gt; set to &lt;code&gt;hidden&lt;/code&gt;.</source>
          <target state="translated">Set a custom position for the traffic light buttons. Can only be used with &lt;code&gt;titleBarStyle&lt;/code&gt; set to &lt;code&gt;hidden&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5128a8604845811e183a473b5cb6e43f97294354" translate="yes" xml:space="preserve">
          <source>Set an extra parameter to be sent with the crash report. The values specified here will be sent in addition to any values set via the &lt;code&gt;extra&lt;/code&gt; option when &lt;code&gt;start&lt;/code&gt; was called.</source>
          <target state="translated">Set an extra parameter to be sent with the crash report. The values specified here will be sent in addition to any values set via the &lt;code&gt;extra&lt;/code&gt; option when &lt;code&gt;start&lt;/code&gt; was called.</target>
        </trans-unit>
        <trans-unit id="e48b662602383e1a650c7f01c1eb6efd6f6008d8" translate="yes" xml:space="preserve">
          <source>Set an extra parameter to be sent with the crash report. The values specified here will be sent in addition to any values set via the &lt;code&gt;extra&lt;/code&gt; option when &lt;code&gt;start&lt;/code&gt; was called. This API is only available on macOS, if you need to add/update extra parameters on Linux and Windows after your first call to &lt;code&gt;start&lt;/code&gt; you can call &lt;code&gt;start&lt;/code&gt; again with the updated &lt;code&gt;extra&lt;/code&gt; options.</source>
          <target state="translated">クラッシュレポートと共に送信される追加のパラメーターを設定します。ここで指定された値は、 &lt;code&gt;start&lt;/code&gt; が呼び出されたときに &lt;code&gt;extra&lt;/code&gt; オプションで設定された値に加えて送信されます。このAPIはmacOSでのみ使用できます。最初の呼び出しを &lt;code&gt;start&lt;/code&gt; 後でLinuxおよびWindowsで追加のパラメーターを追加/更新する必要がある場合は、更新された &lt;code&gt;extra&lt;/code&gt; オプションを使用して &lt;code&gt;start&lt;/code&gt; を再度呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="02839a2f233f11d3f8cc0847ac0196c5644bb103" translate="yes" xml:space="preserve">
          <source>Set guest page muted.</source>
          <target state="translated">ゲストページをミュートに設定します。</target>
        </trans-unit>
        <trans-unit id="cd0e769eb096f3a6f326481bc15a4201393bc940" translate="yes" xml:space="preserve">
          <source>Set some breakpoints in &lt;code&gt;main.js&lt;/code&gt;, and start debugging in the &lt;a href=&quot;https://code.visualstudio.com/docs/editor/debugging&quot;&gt;Debug View&lt;/a&gt;. You should be able to hit the breakpoints.</source>
          <target state="translated">&lt;code&gt;main.js&lt;/code&gt; にいくつかのブレークポイントを設定し、&lt;a href=&quot;https://code.visualstudio.com/docs/editor/debugging&quot;&gt;デバッグビューで&lt;/a&gt;デバッグを開始します。ブレークポイントに到達できるはずです。</target>
        </trans-unit>
        <trans-unit id="5b471c6934637140581395be23de584b9edaf293" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;MinimumSDKVersion&lt;/code&gt; to &lt;code&gt;10.10&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MinimumSDKVersion&lt;/code&gt; を &lt;code&gt;10.10&lt;/code&gt; に設定します</target>
        </trans-unit>
        <trans-unit id="023214961465040a8590a9dde37cc696c8b9883d" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;Secure Keyboard Entry&lt;/code&gt; is enabled in your application.</source>
          <target state="translated">Set the &lt;code&gt;Secure Keyboard Entry&lt;/code&gt; is enabled in your application.</target>
        </trans-unit>
        <trans-unit id="b0e0b8994305f21061e7f2767cbd70675748e08b" translate="yes" xml:space="preserve">
          <source>Set the about panel options. This will override the values defined in the app's &lt;code&gt;.plist&lt;/code&gt; file on macOS. See the &lt;a href=&quot;https://developer.apple.com/reference/appkit/nsapplication/1428479-orderfrontstandardaboutpanelwith?language=objc&quot;&gt;Apple docs&lt;/a&gt; for more details. On Linux, values must be set in order to be shown; there are no defaults.</source>
          <target state="translated">Set the about panel options. This will override the values defined in the app's &lt;code&gt;.plist&lt;/code&gt; file on macOS. See the &lt;a href=&quot;https://developer.apple.com/reference/appkit/nsapplication/1428479-orderfrontstandardaboutpanelwith?language=objc&quot;&gt;Apple docs&lt;/a&gt; for more details. On Linux, values must be set in order to be shown; there are no defaults.</target>
        </trans-unit>
        <trans-unit id="92cf2be8dfdc293ae7fa03b35e87fb813c43bbf2" translate="yes" xml:space="preserve">
          <source>Set the about panel options. This will override the values defined in the app's &lt;code&gt;.plist&lt;/code&gt; file. See the &lt;a href=&quot;https://developer.apple.com/reference/appkit/nsapplication/1428479-orderfrontstandardaboutpanelwith?language=objc&quot;&gt;Apple docs&lt;/a&gt; for more details.</source>
          <target state="translated">パネルに関するオプションを設定します。これにより、アプリの &lt;code&gt;.plist&lt;/code&gt; ファイルで定義された値が上書きされます。詳細については、&lt;a href=&quot;https://developer.apple.com/reference/appkit/nsapplication/1428479-orderfrontstandardaboutpanelwith?language=objc&quot;&gt;Appleのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1ec7d7721ce717d1561dc072f65cf16a915a88ba" translate="yes" xml:space="preserve">
          <source>Set the app's login item settings.</source>
          <target state="translated">アプリのログイン項目の設定を行います。</target>
        </trans-unit>
        <trans-unit id="6e0a08b6fcf27bd16fc47e3ef22595040af25803" translate="yes" xml:space="preserve">
          <source>Set the content security policy of the isolated world.</source>
          <target state="translated">隔離された世界のコンテンツセキュリティポリシーを設定します。</target>
        </trans-unit>
        <trans-unit id="bd569f6a9da9e1c91aeb48048ab5d92a09399a6f" translate="yes" xml:space="preserve">
          <source>Set the following Environment Variables:</source>
          <target state="translated">以下の環境変数を設定します。</target>
        </trans-unit>
        <trans-unit id="b2cc131d67a290a6d88094b91656eebfcc131d4f" translate="yes" xml:space="preserve">
          <source>Set the name of the isolated world. Useful in devtools.</source>
          <target state="translated">孤立した世界の名前を設定します。devtoolsで便利。</target>
        </trans-unit>
        <trans-unit id="9194cdfaef43f6c163697328915dd5a8291cc957" translate="yes" xml:space="preserve">
          <source>Set the security origin of the isolated world.</source>
          <target state="translated">孤立した世界のセキュリティの原点を設定します。</target>
        </trans-unit>
        <trans-unit id="c0da13dd98a6090c45fad6fddc0a7e8ccdd855b6" translate="yes" xml:space="preserve">
          <source>Set the security origin, content security policy and name of the isolated world. Note: If the &lt;code&gt;csp&lt;/code&gt; is specified, then the &lt;code&gt;securityOrigin&lt;/code&gt; also has to be specified.</source>
          <target state="translated">Set the security origin, content security policy and name of the isolated world. Note: If the &lt;code&gt;csp&lt;/code&gt; is specified, then the &lt;code&gt;securityOrigin&lt;/code&gt; also has to be specified.</target>
        </trans-unit>
        <trans-unit id="9b1ca9457899c08b346660869529f5a371273cf0" translate="yes" xml:space="preserve">
          <source>Set the size of the page. This is only supported for &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; guest contents.</source>
          <target state="translated">ページのサイズを設定します。これは、 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; ゲストコンテンツでのみサポートされます。</target>
        </trans-unit>
        <trans-unit id="37d7ce4e47234a85eae28084564125e4452d17a4" translate="yes" xml:space="preserve">
          <source>Set the trash implementation on Linux. Default is &lt;code&gt;gio&lt;/code&gt;.</source>
          <target state="translated">Set the trash implementation on Linux. Default is &lt;code&gt;gio&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b71a3de4c9539412238109eeef9747c83cba89aa" translate="yes" xml:space="preserve">
          <source>Set the value of &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;NSUserDefaults&lt;/code&gt;.</source>
          <target state="translated">値を設定し &lt;code&gt;key&lt;/code&gt; で &lt;code&gt;NSUserDefaults&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="46619168d5abf2b87e0a02117f598273b464f4d8" translate="yes" xml:space="preserve">
          <source>Set this string as &lt;code&gt;_NT_SYMBOL_PATH&lt;/code&gt; in the environment, using the Windbg menus, or by typing the &lt;code&gt;.sympath&lt;/code&gt; command. If you would like to get symbols from Microsoft's symbol server as well, you should list that first:</source>
          <target state="translated">この文字列は、Windbgメニューを使用するか、 &lt;code&gt;.sympath&lt;/code&gt; コマンドを入力して、環境内で &lt;code&gt;_NT_SYMBOL_PATH&lt;/code&gt; として設定します。Microsoftのシンボルサーバーからもシンボルを取得したい場合は、最初にリストする必要があります。</target>
        </trans-unit>
        <trans-unit id="990794dde4fce604b77700bf70eb7956e7fc2854" translate="yes" xml:space="preserve">
          <source>Set this to the value to be returned in a synchronous message.</source>
          <target state="translated">同期メッセージで返す値を設定します。</target>
        </trans-unit>
        <trans-unit id="ef6b0bd3002b4278f8e7ed967cb48b05b6f52f2d" translate="yes" xml:space="preserve">
          <source>Set thumbnail toolbar</source>
          <target state="translated">サムネイルツールバーの設定</target>
        </trans-unit>
        <trans-unit id="c7ace77327a9b6b0eb1cd6c6fbad48e596d4c5e1" translate="yes" xml:space="preserve">
          <source>Set user tasks</source>
          <target state="translated">ユーザータスクの設定</target>
        </trans-unit>
        <trans-unit id="3e8dc4c5eabfddf9a7c13af8083300ff171e8192" translate="yes" xml:space="preserve">
          <source>Set your tokens and environment variables</source>
          <target state="translated">トークンと環境変数の設定</target>
        </trans-unit>
        <trans-unit id="fcabe3320d4d2fe8250e6fd9149fd060d6a02215" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;menu&lt;/code&gt; as the application menu on macOS. On Windows and Linux, the &lt;code&gt;menu&lt;/code&gt; will be set as each window's top menu.</source>
          <target state="translated">メニューをmacOSのアプリケーション &lt;code&gt;menu&lt;/code&gt; として設定します。WindowsおよびLinuxでは、 &lt;code&gt;menu&lt;/code&gt; は各ウィンドウのトップメニューとして設定されます。</target>
        </trans-unit>
        <trans-unit id="44ee768780ac31f433d81cfa60398b836e99b866" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;parent&lt;/code&gt; as current window's parent window, passing &lt;code&gt;null&lt;/code&gt; will turn current window into a top-level window.</source>
          <target state="translated">&lt;code&gt;parent&lt;/code&gt; を現在のウィンドウの親ウィンドウとして設定し &lt;code&gt;null&lt;/code&gt; を渡すと、現在のウィンドウがトップレベルウィンドウに変わります。</target>
        </trans-unit>
        <trans-unit id="e53cc5934631e24bf519cbb45bc8d436a1baa394" translate="yes" xml:space="preserve">
          <source>Sets a 16 x 16 pixel overlay onto the current taskbar icon, usually used to convey some sort of application status or to passively notify the user.</source>
          <target state="translated">現在のタスクバーアイコンに 16 x 16 ピクセルのオーバーレイを設定します。通常、アプリケーションの状態を伝えたり、ユーザーに受動的に通知するために使用されます。</target>
        </trans-unit>
        <trans-unit id="69b3972da4258b12b92f71f96e53814c40885eb9" translate="yes" xml:space="preserve">
          <source>Sets a cookie with &lt;code&gt;details&lt;/code&gt;, &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(error)&lt;/code&gt; on complete.</source>
          <target state="translated">&lt;code&gt;details&lt;/code&gt; でCookieを設定し &lt;code&gt;callback&lt;/code&gt; は、完了時に &lt;code&gt;callback(error)&lt;/code&gt; で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f862d426154664ca0ec7dcc3834ad9fab1792f1b" translate="yes" xml:space="preserve">
          <source>Sets a cookie with &lt;code&gt;details&lt;/code&gt;.</source>
          <target state="translated">Sets a cookie with &lt;code&gt;details&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d73f3ad6b7dcc615503667fa14af3e92b810d62a" translate="yes" xml:space="preserve">
          <source>Sets a provider for spell checking in input fields and text areas.</source>
          <target state="translated">入力フィールドとテキストエリアでスペルチェックを行うプロバイダを設定します。</target>
        </trans-unit>
        <trans-unit id="ff1039c3d538d298053860a1181740831c87486f" translate="yes" xml:space="preserve">
          <source>Sets download saving directory. By default, the download directory will be the &lt;code&gt;Downloads&lt;/code&gt; under the respective app folder.</source>
          <target state="translated">ダウンロード保存ディレクトリを設定します。デフォルトでは、ダウンロードディレクトリはそれぞれのアプリフォルダーの下の &lt;code&gt;Downloads&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="f98d19a9dc8d0c5cb0dbbcd59a507c293e17a90b" translate="yes" xml:space="preserve">
          <source>Sets or creates a directory your app's logs which can then be manipulated with &lt;code&gt;app.getPath()&lt;/code&gt; or &lt;code&gt;app.setPath(pathName, newPath)&lt;/code&gt;.</source>
          <target state="translated">Sets or creates a directory your app's logs which can then be manipulated with &lt;code&gt;app.getPath()&lt;/code&gt; or &lt;code&gt;app.setPath(pathName, newPath)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d53db72c06f060c7bdb6fb5f0a84889913b252f8" translate="yes" xml:space="preserve">
          <source>Sets or removes a custom Jump List for the application, and returns one of the following strings:</source>
          <target state="translated">アプリケーションのカスタム ジャンプ リストを設定または削除し、以下の文字列のいずれかを返します。</target>
        </trans-unit>
        <trans-unit id="a82dd772291cfd7bec76d72317acf8bc124765ba" translate="yes" xml:space="preserve">
          <source>Sets progress value in progress bar. Valid range is [0, 1.0].</source>
          <target state="translated">プログレスバーの進捗値を設定します。有効な範囲は[0,1.0]です。</target>
        </trans-unit>
        <trans-unit id="290783aef4e7c376c84c825743a28d792faad7b5" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;image&lt;/code&gt; associated with this dock icon.</source>
          <target state="translated">このドックアイコンに関連付けられた &lt;code&gt;image&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="251fc90db70cb7037b10cbe3f92c3f4b138d7122" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;image&lt;/code&gt; associated with this tray icon when pressed on macOS.</source>
          <target state="translated">macOSで押されたときにこのトレイアイコンに関連付けられた &lt;code&gt;image&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="50e0143fe4c1102c9bf0e8e010a67500e7b42631" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;image&lt;/code&gt; associated with this tray icon.</source>
          <target state="translated">このトレイアイコンに関連付けられた &lt;code&gt;image&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="6905ec900101f6e4a3f2037a93b01422b34ddb71" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;item&lt;/code&gt; as dragging item for current drag-drop operation, &lt;code&gt;file&lt;/code&gt; is the absolute path of the file to be dragged, and &lt;code&gt;icon&lt;/code&gt; is the image showing under the cursor when dragging.</source>
          <target state="translated">アイテムを現在のドラッグアンドドロップ操作のドラッグ &lt;code&gt;item&lt;/code&gt; として設定します。fileはドラッグする &lt;code&gt;file&lt;/code&gt; の絶対パス、 &lt;code&gt;icon&lt;/code&gt; はドラッグ時にカーソルの下に表示されるイメージです。</target>
        </trans-unit>
        <trans-unit id="23f9d7b3d7555797eb9ab914db969433a4ad54d8" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;menu&lt;/code&gt; as the window's menu bar, setting it to &lt;code&gt;null&lt;/code&gt; will remove the menu bar.</source>
          <target state="translated">設定 &lt;code&gt;menu&lt;/code&gt; に設定すると、ウィンドウのメニューバーなどを &lt;code&gt;null&lt;/code&gt; メニューバーを削除します。</target>
        </trans-unit>
        <trans-unit id="16da981967d5be5af5148d9c2df7dc8d02ab9e58" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;menu&lt;/code&gt; as the window's menu bar.</source>
          <target state="translated">Sets the &lt;code&gt;menu&lt;/code&gt; as the window's menu bar.</target>
        </trans-unit>
        <trans-unit id="7c137b86904d3e1181cfb7ce1cb4e0f286f7e116" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;path&lt;/code&gt; of the pepper flash plugin.</source>
          <target state="translated">pepper flashプラグインの &lt;code&gt;path&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="279ab3b4dac0ea37dba9e40f9865562ac862180e" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;url&lt;/code&gt; and initialize the auto updater.</source>
          <target state="translated">設定し &lt;code&gt;url&lt;/code&gt; 、オートアップデータを初期化します。</target>
        </trans-unit>
        <trans-unit id="411613b1ec44176c1d91a8f311a52c06789cbab1" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;version&lt;/code&gt; of the pepper flash plugin.</source>
          <target state="translated">pepper flashプラグインの &lt;code&gt;version&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="c84124d8cbb5433c803fb60bb724e59abaad1907" translate="yes" xml:space="preserve">
          <source>Sets the activation policy for a given app.</source>
          <target state="translated">特定のアプリのアクティベーションポリシーを設定します。</target>
        </trans-unit>
        <trans-unit id="37cf75b7af620d3a285010f92c6898611f0beab5" translate="yes" xml:space="preserve">
          <source>Sets the appearance setting for your application, this should override the system default and override the value of &lt;code&gt;getEffectiveAppearance&lt;/code&gt;.</source>
          <target state="translated">Sets the appearance setting for your application, this should override the system default and override the value of &lt;code&gt;getEffectiveAppearance&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="478045962ca72fedb01b6d52b1c224ce8054eb20" translate="yes" xml:space="preserve">
          <source>Sets the application's &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Carbon/Conceptual/customizing_docktile/concepts/dockconcepts.html#//apple_ref/doc/uid/TP30000986-CH2-TPXREF103&quot;&gt;dock menu&lt;/a&gt;.</source>
          <target state="translated">アプリケーションの&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Carbon/Conceptual/customizing_docktile/concepts/dockconcepts.html#//apple_ref/doc/uid/TP30000986-CH2-TPXREF103&quot;&gt;ドックメニューを&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="153223e250240ad5f3c1f3665714c88e8ef3e18b" translate="yes" xml:space="preserve">
          <source>Sets the background color of the window. See &lt;a href=&quot;#setting-backgroundcolor&quot;&gt;Setting &lt;code&gt;backgroundColor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Sets the background color of the window. See &lt;a href=&quot;#setting-backgroundcolor&quot;&gt;Setting &lt;code&gt;backgroundColor&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6a17957d2f10c933c37aa11da3b5570f08602910" translate="yes" xml:space="preserve">
          <source>Sets the certificate verify proc for &lt;code&gt;session&lt;/code&gt;, the &lt;code&gt;proc&lt;/code&gt; will be called with &lt;code&gt;proc(request, callback)&lt;/code&gt; whenever a server certificate verification is requested. Calling &lt;code&gt;callback(0)&lt;/code&gt; accepts the certificate, calling &lt;code&gt;callback(-2)&lt;/code&gt; rejects it.</source>
          <target state="translated">証明書のためにprocのを確認設定し &lt;code&gt;session&lt;/code&gt; 、 &lt;code&gt;proc&lt;/code&gt; がで呼び出されます &lt;code&gt;proc(request, callback)&lt;/code&gt; サーバ証明書の検証が要求されるたびに。呼び出し &lt;code&gt;callback(0)&lt;/code&gt; 呼び出す、証明書を受け入れ &lt;code&gt;callback(-2)&lt;/code&gt; それを拒絶します。</target>
        </trans-unit>
        <trans-unit id="7e8e6665350130532caaa387575f5aeeb432cdb4" translate="yes" xml:space="preserve">
          <source>Sets the context menu for this icon.</source>
          <target state="translated">このアイコンのコンテキストメニューを設定します。</target>
        </trans-unit>
        <trans-unit id="47060fc887d88d145b8ae1672076595718bcf2a9" translate="yes" xml:space="preserve">
          <source>Sets the counter badge for current app. Setting the count to &lt;code&gt;0&lt;/code&gt; will hide the badge.</source>
          <target state="translated">現在のアプリのカウンターバッジを設定します。カウントを &lt;code&gt;0&lt;/code&gt; に設定すると、バッジが非表示になります。</target>
        </trans-unit>
        <trans-unit id="6271e7321caf00a8c9eb2468dece20f95f526834" translate="yes" xml:space="preserve">
          <source>Sets the current executable as the default handler for a protocol (aka URI scheme). It allows you to integrate your app deeper into the operating system. Once registered, all links with &lt;code&gt;your-protocol://&lt;/code&gt; will be opened with the current executable. The whole link, including protocol, will be passed to your application as a parameter.</source>
          <target state="translated">Sets the current executable as the default handler for a protocol (aka URI scheme). It allows you to integrate your app deeper into the operating system. Once registered, all links with &lt;code&gt;your-protocol://&lt;/code&gt; will be opened with the current executable. The whole link, including protocol, will be passed to your application as a parameter.</target>
        </trans-unit>
        <trans-unit id="b22db1f55140252f5b6f27842096a7127c3235d4" translate="yes" xml:space="preserve">
          <source>Sets the file descriptor soft limit to &lt;code&gt;maxDescriptors&lt;/code&gt; or the OS hard limit, whichever is lower for the current process.</source>
          <target state="translated">ファイル記述子のソフト制限を &lt;code&gt;maxDescriptors&lt;/code&gt; またはOSのハード制限のうち、現在のプロセスのいずれか低い方に設定します。</target>
        </trans-unit>
        <trans-unit id="900a5d9da274ab73249fae83ad367e1fa8ca94ba" translate="yes" xml:space="preserve">
          <source>Sets the handler which can be used to respond to permission checks for the &lt;code&gt;session&lt;/code&gt;. Returning &lt;code&gt;true&lt;/code&gt; will allow the permission and &lt;code&gt;false&lt;/code&gt; will reject it. To clear the handler, call &lt;code&gt;setPermissionCheckHandler(null)&lt;/code&gt;.</source>
          <target state="translated">Sets the handler which can be used to respond to permission checks for the &lt;code&gt;session&lt;/code&gt; . Returning &lt;code&gt;true&lt;/code&gt; will allow the permission and &lt;code&gt;false&lt;/code&gt; will reject it. To clear the handler, call &lt;code&gt;setPermissionCheckHandler(null)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84e76ee6dd09d76ffebb057cee2549f82c568b6e" translate="yes" xml:space="preserve">
          <source>Sets the handler which can be used to respond to permission requests for the &lt;code&gt;session&lt;/code&gt;. Calling &lt;code&gt;callback(true)&lt;/code&gt; will allow the permission and &lt;code&gt;callback(false)&lt;/code&gt; will reject it. To clear the handler, call &lt;code&gt;setPermissionRequestHandler(null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; 許可要求に応答するために使用できるハンドラーを設定します。 &lt;code&gt;callback(true)&lt;/code&gt; を呼び出すと許可が許可され、 &lt;code&gt;callback(false)&lt;/code&gt; はそれを拒否します。ハンドラーをクリアするには、 &lt;code&gt;setPermissionRequestHandler(null)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="160238f1004dace71015337d0fa49ada48136e08" translate="yes" xml:space="preserve">
          <source>Sets the hover text for this tray icon.</source>
          <target state="translated">このトレイアイコンのホバーテキストを設定します。</target>
        </trans-unit>
        <trans-unit id="f620ce244e19e7037a80498c69e715898a04054c" translate="yes" xml:space="preserve">
          <source>Sets the maximum and minimum layout-based (i.e. non-visual) zoom level.</source>
          <target state="translated">レイアウトベースの(非視覚的な)ズームレベルの最大値と最小値を設定します。</target>
        </trans-unit>
        <trans-unit id="1e70c9ccdb495c7ec470dc0b177457079b9a31e3" translate="yes" xml:space="preserve">
          <source>Sets the maximum and minimum pinch-to-zoom level.</source>
          <target state="translated">ピンチ・ツー・ズームの最大値と最小値を設定します。</target>
        </trans-unit>
        <trans-unit id="4acaadb2ba73fce19695ad12402e5934ae8b4bbe" translate="yes" xml:space="preserve">
          <source>Sets the maximum size of window to &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;.</source>
          <target state="translated">ウィンドウの最大サイズを &lt;code&gt;width&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="ec44967d4662b91c9b3f114ee8dbd993031b1517" translate="yes" xml:space="preserve">
          <source>Sets the minimum size of window to &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;.</source>
          <target state="translated">ウィンドウの最小サイズを &lt;code&gt;width&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="02185a3b76590596fc0a2b0e9e046e9d1cbf98bc" translate="yes" xml:space="preserve">
          <source>Sets the opacity of the window. On Linux does nothing.</source>
          <target state="translated">ウィンドウの不透明度を設定します。Linuxでは何もしません。</target>
        </trans-unit>
        <trans-unit id="1f14fa47e6ec17687bc4b88373f03565626dfab9" translate="yes" xml:space="preserve">
          <source>Sets the opacity of the window. On Linux, does nothing. Out of bound number values are clamped to the [0, 1] range.</source>
          <target state="translated">ウィンドウの不透明度を設定します。Linuxでは何もしません。境界外の数値は、[0,1]の範囲にクランプされます。</target>
        </trans-unit>
        <trans-unit id="313ceac0d243f0e16e786feb89bf3622601d9cdd" translate="yes" xml:space="preserve">
          <source>Sets the option to ignore double click events. Ignoring these events allows you to detect every individual click of the tray icon.</source>
          <target state="translated">ダブルクリックイベントを無視するオプションを設定します。これらのイベントを無視することで、トレイアイコンの個々のクリックを検出することができます。</target>
        </trans-unit>
        <trans-unit id="2d3956e4e5ad14d58c86116c39a15d30905b01aa" translate="yes" xml:space="preserve">
          <source>Sets the pathname of the file the window represents, and the icon of the file will show in window's title bar.</source>
          <target state="translated">ウィンドウが表すファイルのパス名を設定し、そのファイルのアイコンをウィンドウのタイトルバーに表示します。</target>
        </trans-unit>
        <trans-unit id="c281609f460bb0635f2bc8f3787ceb433cbb6792" translate="yes" xml:space="preserve">
          <source>Sets the properties for the window's taskbar button.</source>
          <target state="translated">ウィンドウのタスクバーボタンのプロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="7c8c58c282aea9b22e2a024b2110f2eabc609253" translate="yes" xml:space="preserve">
          <source>Sets the proxy settings.</source>
          <target state="translated">プロキシの設定を行います。</target>
        </trans-unit>
        <trans-unit id="51e0ad3eb7d3f90dd1e90c0d2a66935e2de393e2" translate="yes" xml:space="preserve">
          <source>Sets the referrer URL for the guest page.</source>
          <target state="translated">ゲストページのリファラー URL を設定します。</target>
        </trans-unit>
        <trans-unit id="4ff8beeb28b4cc380af16ab92799d2eaa44aa341" translate="yes" xml:space="preserve">
          <source>Sets the region of the window to show as the thumbnail image displayed when hovering over the window in the taskbar. You can reset the thumbnail to be the entire window by specifying an empty region: &lt;code&gt;{ x: 0, y: 0, width: 0, height: 0 }&lt;/code&gt;.</source>
          <target state="translated">Sets the region of the window to show as the thumbnail image displayed when hovering over the window in the taskbar. You can reset the thumbnail to be the entire window by specifying an empty region: &lt;code&gt;{ x: 0, y: 0, width: 0, height: 0 }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba636a58b5e807db3627d3269957da72f7b802b3" translate="yes" xml:space="preserve">
          <source>Sets the region of the window to show as the thumbnail image displayed when hovering over the window in the taskbar. You can reset the thumbnail to be the entire window by specifying an empty region: &lt;code&gt;{x: 0, y: 0, width: 0, height: 0}&lt;/code&gt;.</source>
          <target state="translated">タスクバーのウィンドウにカーソルを合わせたときに表示されるサムネイル画像として表示するウィンドウの領域を設定します。空の領域を指定することにより、サムネイルをウィンドウ全体にリセットできます： &lt;code&gt;{x: 0, y: 0, width: 0, height: 0}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="222d29f00c5b8fe41a83a99e0a4aaab642809d3a" translate="yes" xml:space="preserve">
          <source>Sets the session used by the page. If &lt;code&gt;partition&lt;/code&gt; starts with &lt;code&gt;persist:&lt;/code&gt;, the page will use a persistent session available to all pages in the app with the same &lt;code&gt;partition&lt;/code&gt;. if there is no &lt;code&gt;persist:&lt;/code&gt; prefix, the page will use an in-memory session. By assigning the same &lt;code&gt;partition&lt;/code&gt;, multiple pages can share the same session. If the &lt;code&gt;partition&lt;/code&gt; is unset then default session of the app will be used.</source>
          <target state="translated">ページで使用されるセッションを設定します。 &lt;code&gt;partition&lt;/code&gt; が &lt;code&gt;persist:&lt;/code&gt; で始まる場合、ページは同じ &lt;code&gt;partition&lt;/code&gt; 持つアプリ内のすべてのページで利用可能な永続的なセッションを使用します。 &lt;code&gt;persist:&lt;/code&gt; プレフィックスがない場合、ページはメモリ内セッションを使用します。同じ &lt;code&gt;partition&lt;/code&gt; 割り当てることにより、複数のページで同じセッションを共有できます。 &lt;code&gt;partition&lt;/code&gt; が設定されていない場合、アプリのデフォルトセッションが使用されます。</target>
        </trans-unit>
        <trans-unit id="aa4871ac41dc8e0cc5d8a79634f3e4c8c2225c26" translate="yes" xml:space="preserve">
          <source>Sets the string to be displayed in the dock&amp;rsquo;s badging area.</source>
          <target state="translated">ドックのバッジ領域に表示される文字列を設定します。</target>
        </trans-unit>
        <trans-unit id="4ed70b5602ed50380f332352a448a5d46ca14626" translate="yes" xml:space="preserve">
          <source>Sets the title displayed aside of the tray icon in the status bar (Support ANSI colors).</source>
          <target state="translated">ステータスバーのトレイアイコンの脇に表示されるタイトルを設定します。</target>
        </trans-unit>
        <trans-unit id="2845a504b739ec8844b7861ca4d0479975fa2ba4" translate="yes" xml:space="preserve">
          <source>Sets the title displayed next to the tray icon in the status bar (Support ANSI colors).</source>
          <target state="translated">ステータスバーのトレイアイコンの横に表示されるタイトルを設定します。</target>
        </trans-unit>
        <trans-unit id="ad1d0ca05bd8b312ef122cdef7c9c56ba92bfd82" translate="yes" xml:space="preserve">
          <source>Sets the toolTip that is displayed when hovering over the window thumbnail in the taskbar.</source>
          <target state="translated">タスクバーのウィンドウのサムネイルにカーソルを置いたときに表示されるtoolTipを設定します。</target>
        </trans-unit>
        <trans-unit id="f1fed9386060f627fae88f6fd5ff6df70a290474" translate="yes" xml:space="preserve">
          <source>Sets the touchBar layout for the current window. Specifying &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; clears the touch bar. This method only has an effect if the machine has a touch bar and is running on macOS 10.12.1+.</source>
          <target state="translated">現在のウィンドウのtouchBarレイアウトを設定します。 &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;undefined&lt;/code&gt; を指定すると、タッチバーがクリアされます。この方法は、マシンにタッチバーがあり、macOS 10.12.1以降で実行されている場合にのみ効果があります。</target>
        </trans-unit>
        <trans-unit id="dd49171152fe57bd3038e165f32fc1c7c0d42709" translate="yes" xml:space="preserve">
          <source>Sets the user agent for the guest page before the page is navigated to. Once the page is loaded, use the &lt;code&gt;setUserAgent&lt;/code&gt; method to change the user agent.</source>
          <target state="translated">ページに移動する前に、ゲストページのユーザーエージェントを設定します。ページが読み込まれたら、 &lt;code&gt;setUserAgent&lt;/code&gt; メソッドを使用してユーザーエージェントを変更します。</target>
        </trans-unit>
        <trans-unit id="81370e69987ebdde392e760a63b1068c9e8874db" translate="yes" xml:space="preserve">
          <source>Sets when the tray's icon background becomes highlighted (in blue).</source>
          <target state="translated">トレイのアイコンの背景が強調表示されるときに設定します(青色)。</target>
        </trans-unit>
        <trans-unit id="fc658c9234d2127d992372efec1e104afb6c25d5" translate="yes" xml:space="preserve">
          <source>Sets whether the maximize/zoom window button toggles fullscreen mode or maximizes the window.</source>
          <target state="translated">ウィンドウの最大化/ズームボタンでフルスクリーンモードを切り替えるか、ウィンドウを最大化するかを設定します。</target>
        </trans-unit>
        <trans-unit id="60cbb16f01710677c4aca8ab228fc78a8b5a4f30" translate="yes" xml:space="preserve">
          <source>Sets whether the menu bar should be visible. If the menu bar is auto-hide, users can still bring up the menu bar by pressing the single &lt;code&gt;Alt&lt;/code&gt; key.</source>
          <target state="translated">メニューバーを表示するかどうかを設定します。メニューバーが自動非表示の場合でも、ユーザーは単一の &lt;code&gt;Alt&lt;/code&gt; キーを押すことでメニューバーを表示できます。</target>
        </trans-unit>
        <trans-unit id="29572ab350834fc7ed97067a2571ca0cf5d07264" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually closed by user. On Linux does nothing.</source>
          <target state="translated">ユーザーが手動でウィンドウを閉じることができるかどうかを設定します。Linuxでは何もしません。</target>
        </trans-unit>
        <trans-unit id="937a60be613e0a567f310ec31e8702820020bfc2" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually maximized by user. On Linux does nothing.</source>
          <target state="translated">ユーザーが手動でウィンドウを最大化できるかどうかを設定します。Linuxでは何もしません。</target>
        </trans-unit>
        <trans-unit id="1e08d12f4202c84cf190f1e4b2b3f89a182a8e3c" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually minimized by user. On Linux does nothing.</source>
          <target state="translated">ユーザーが手動でウィンドウを最小化できるかどうかを設定します。Linuxでは何もしません。</target>
        </trans-unit>
        <trans-unit id="dbe36a7ed49fa2de8da71b4def169f5aa632ac22" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually resized by the user.</source>
          <target state="translated">ユーザーが手動でウィンドウのサイズを変更できるかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="bc46361f979c4d9608eacf60c091b8f13224a076" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually resized by user.</source>
          <target state="translated">ユーザーが手動でウィンドウのサイズを変更できるかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="0ee42db3c183bd619c91435b2e71bbd6c1476421" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be moved by user. On Linux does nothing.</source>
          <target state="translated">ユーザーがウィンドウを移動できるかどうかを設定します。Linuxでは何もしません。</target>
        </trans-unit>
        <trans-unit id="660351dc0ff01662151be83ecefa7781c7d7ea1e" translate="yes" xml:space="preserve">
          <source>Sets whether the window menu bar should hide itself automatically. Once set the menu bar will only show when users press the single &lt;code&gt;Alt&lt;/code&gt; key.</source>
          <target state="translated">ウィンドウメニューバーを自動的に非表示にするかどうかを設定します。一度設定すると、メニューバーは、ユーザーが単一の &lt;code&gt;Alt&lt;/code&gt; キーを押したときにのみ表示されます。</target>
        </trans-unit>
        <trans-unit id="abdc140d5edc99f9aeb4494edf72d927570abbf0" translate="yes" xml:space="preserve">
          <source>Sets whether the window should be in fullscreen mode.</source>
          <target state="translated">ウィンドウをフルスクリーンモードにするかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="5cacce487fa9cb3032791e9ea0c0822f8d560079" translate="yes" xml:space="preserve">
          <source>Sets whether the window should be visible on all workspaces.</source>
          <target state="translated">すべてのワークスペースでウィンドウを表示するかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="283bb96a2f76d8f6cf7a27e92ae862f911df9eda" translate="yes" xml:space="preserve">
          <source>Sets whether the window should have a shadow.</source>
          <target state="translated">ウィンドウに影を付けるかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="313834a95379cc46f912f8547ebec8f8298ef2a0" translate="yes" xml:space="preserve">
          <source>Sets whether the window should have a shadow. On Windows and Linux does nothing.</source>
          <target state="translated">ウィンドウに影を付けるかどうかを設定します。WindowsとLinuxでは何もしません。</target>
        </trans-unit>
        <trans-unit id="5383b5cfd52722f50fe448048159329ed6ee4604" translate="yes" xml:space="preserve">
          <source>Sets whether the window should show always on top of other windows. After setting this, the window is still a normal window, not a toolbox window which can not be focused on.</source>
          <target state="translated">ウィンドウを常に他のウィンドウの上に表示するかどうかを設定します。これを設定した後も、ウィンドウは通常のウィンドウのままで、フォーカスを合わせることができないツールボックスウィンドウではありません。</target>
        </trans-unit>
        <trans-unit id="0fbb68c5df5729cd832acf6ef950bcb9035f7f4b" translate="yes" xml:space="preserve">
          <source>Sets whether the window traffic light buttons should be visible.</source>
          <target state="translated">ウィンドウのトラフィックライトボタンを表示するかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="cbb1d7c6f064d9ffaa5f9b140d9b2b956a8a19c3" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;backgroundColor&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;backgroundColor&lt;/code&gt; の設定</target>
        </trans-unit>
        <trans-unit id="f9ce609889da174d9c83ea3624c698222b364eb0" translate="yes" xml:space="preserve">
          <source>Setting Breakpoints</source>
          <target state="translated">ブレークポイントの設定</target>
        </trans-unit>
        <trans-unit id="e5547a55fab0d40b3cabc33cae036e7f42cdb37b" translate="yes" xml:space="preserve">
          <source>Setting Menu for Specific Browser Window (&lt;em&gt;Linux&lt;/em&gt;&lt;em&gt;Windows&lt;/em&gt;)</source>
          <target state="translated">特定のブラウザウィンドウの設定メニュー（&lt;em&gt;Linux &lt;/em&gt;&lt;em&gt;Windows&lt;/em&gt;）</target>
        </trans-unit>
        <trans-unit id="1458460daaa5e87b409b5cb4d401b501e226605c" translate="yes" xml:space="preserve">
          <source>Setting Up Symbol Server in Debugger</source>
          <target state="translated">デバッガでシンボルサーバを設定する</target>
        </trans-unit>
        <trans-unit id="41b5f3fc41a2cfb714a7b27958ac0ae504c731da" translate="yes" xml:space="preserve">
          <source>Setting a window shape determines the area within the window where the system permits drawing and user interaction. Outside of the given region, no pixels will be drawn and no mouse events will be registered. Mouse events outside of the region will not be received by that window, but will fall through to whatever is behind the window.</source>
          <target state="translated">ウィンドウの形状を設定することで、システムが描画とユーザーのインタラクションを許可するウィンドウ内の領域を決定します。指定された領域外では、ピクセルは描画されず、マウスイベントも登録されません。領域外のマウスイベントはそのウィンドウでは受信されず、ウィンドウの後ろにあるものに落ちていきます。</target>
        </trans-unit>
        <trans-unit id="e39f7090f23f74e7e9b0ab5052ee54a40828e151" translate="yes" xml:space="preserve">
          <source>Setting the WebRTC IP handling policy allows you to control which IPs are exposed via WebRTC. See &lt;a href=&quot;https://browserleaks.com/webrtc&quot;&gt;BrowserLeaks&lt;/a&gt; for more details.</source>
          <target state="translated">WebRTC IP処理ポリシーを設定すると、WebRTCを介して公開されるIPを制御できます。詳細については、&lt;a href=&quot;https://browserleaks.com/webrtc&quot;&gt;BrowserLeaks&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6a16a26548511f2ea4c60638d6f0db75cbec1a57" translate="yes" xml:space="preserve">
          <source>Setting the parameter to negative values (e.g. &lt;code&gt;-1&lt;/code&gt;) will remove the progress bar, whereas setting it to values greater than &lt;code&gt;1&lt;/code&gt; (e.g. &lt;code&gt;2&lt;/code&gt;) will switch the progress bar to indeterminate mode (Windows-only -- it will clamp to 100% otherwise). In this mode, a progress bar remains active but does not show an actual percentage. Use this mode for situations when you do not know how long an operation will take to complete.</source>
          <target state="translated">Setting the parameter to negative values (e.g. &lt;code&gt;-1&lt;/code&gt; ) will remove the progress bar, whereas setting it to values greater than &lt;code&gt;1&lt;/code&gt; (e.g. &lt;code&gt;2&lt;/code&gt; ) will switch the progress bar to indeterminate mode (Windows-only -- it will clamp to 100% otherwise). In this mode, a progress bar remains active but does not show an actual percentage. Use this mode for situations when you do not know how long an operation will take to complete.</target>
        </trans-unit>
        <trans-unit id="0eeaecc3151e72805fa15b69d0bf5149e1ecba04" translate="yes" xml:space="preserve">
          <source>Setting up Linux</source>
          <target state="translated">Linuxの設定</target>
        </trans-unit>
        <trans-unit id="3873588638e10cb327083b50714e7c9f69300587" translate="yes" xml:space="preserve">
          <source>Setting up Spectron</source>
          <target state="translated">スペクトロンの設定</target>
        </trans-unit>
        <trans-unit id="ce37e0462dd2f82f7b7712227358924a5aa8bccd" translate="yes" xml:space="preserve">
          <source>Setting up Windows</source>
          <target state="translated">Windowsの設定</target>
        </trans-unit>
        <trans-unit id="9557ea808723c270d45f5c1d9a28bb3fdc5243cc" translate="yes" xml:space="preserve">
          <source>Setting up macOS</source>
          <target state="translated">macOSの設定</target>
        </trans-unit>
        <trans-unit id="b2d64e208a0addb02888d3a43464174bc36ae42c" translate="yes" xml:space="preserve">
          <source>Setting up the Development Environment</source>
          <target state="translated">開発環境の設定</target>
        </trans-unit>
        <trans-unit id="98df5eaf203ea0391ba3d707bade5ca7a307ef60" translate="yes" xml:space="preserve">
          <source>Setting up the git cache</source>
          <target state="translated">git キャッシュの設定</target>
        </trans-unit>
        <trans-unit id="b983dabe1b76125ab113e4ddaca190ed5fa68275" translate="yes" xml:space="preserve">
          <source>Setting up with WebDriverJs</source>
          <target state="translated">WebDriverJsでの設定</target>
        </trans-unit>
        <trans-unit id="5350d8c2b080582c6bfb05a60d35c93a21a16e3c" translate="yes" xml:space="preserve">
          <source>Setting up with WebdriverIO</source>
          <target state="translated">WebdriverIOでの設定</target>
        </trans-unit>
        <trans-unit id="d4047b9ccffcd56a081d5fb456adc03f94256ada" translate="yes" xml:space="preserve">
          <source>Setting up your local environment</source>
          <target state="translated">お住まいの地域の環境を整える</target>
        </trans-unit>
        <trans-unit id="98db8c38d1423321439281cc68e21811170d4264" translate="yes" xml:space="preserve">
          <source>SharedWorkerInfo Object</source>
          <target state="translated">SharedWorkerInfo オブジェクト</target>
        </trans-unit>
        <trans-unit id="12c8adfd89b4147e520a97c517754e432c2128af" translate="yes" xml:space="preserve">
          <source>Sharing ideas with other Electron app developers</source>
          <target state="translated">他のElectronアプリ開発者とのアイデアの共有</target>
        </trans-unit>
        <trans-unit id="98bc4f21bc027ce02ed4dc98be7a5eaae91c9333" translate="yes" xml:space="preserve">
          <source>Sharing the git cache between multiple machines</source>
          <target state="translated">複数のマシン間での git キャッシュの共有</target>
        </trans-unit>
        <trans-unit id="3a97f965c7c56f962fd374f807c93dd0df8b340b" translate="yes" xml:space="preserve">
          <source>Sheets</source>
          <target state="translated">Sheets</target>
        </trans-unit>
        <trans-unit id="3651bbb553d18cbe4ba1801164562c35f9895b41" translate="yes" xml:space="preserve">
          <source>Shell's &lt;a href=&quot;../api/shell#shellopenexternalurl-options&quot;&gt;&lt;code&gt;openExternal&lt;/code&gt;&lt;/a&gt; allows opening a given protocol URI with the desktop's native utilities. On macOS, for instance, this function is similar to the &lt;code&gt;open&lt;/code&gt; terminal command utility and will open the specific application based on the URI and filetype association.</source>
          <target state="translated">Shell's &lt;a href=&quot;../api/shell#shellopenexternalurl-options&quot;&gt; &lt;code&gt;openExternal&lt;/code&gt; &lt;/a&gt; allows opening a given protocol URI with the desktop's native utilities. On macOS, for instance, this function is similar to the &lt;code&gt;open&lt;/code&gt; terminal command utility and will open the specific application based on the URI and filetype association.</target>
        </trans-unit>
        <trans-unit id="5b84cc8c584f215d33c18b24ad0b89c6c23c5367" translate="yes" xml:space="preserve">
          <source>Shona</source>
          <target state="translated">Shona</target>
        </trans-unit>
        <trans-unit id="7b0d9e595041021fed77c0a4fa8fe16ad22cc27f" translate="yes" xml:space="preserve">
          <source>ShortcutDetails</source>
          <target state="translated">ShortcutDetails</target>
        </trans-unit>
        <trans-unit id="fafa49dd90a16dcbb088bf3792b8b7016d458e25" translate="yes" xml:space="preserve">
          <source>ShortcutDetails Object</source>
          <target state="translated">ShortcutDetails オブジェクト</target>
        </trans-unit>
        <trans-unit id="06417898f90eaf159edbf6f7673bee719a0bb860" translate="yes" xml:space="preserve">
          <source>Shortcuts are registered with the &lt;a href=&quot;global-shortcut&quot;&gt;&lt;code&gt;globalShortcut&lt;/code&gt;&lt;/a&gt; module using the &lt;a href=&quot;global-shortcut#globalshortcutregisteraccelerator-callback&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method, i.e.</source>
          <target state="translated">ショートカットは、&lt;a href=&quot;global-shortcut#globalshortcutregisteraccelerator-callback&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt;メソッドを使用して&lt;a href=&quot;global-shortcut&quot;&gt; &lt;code&gt;globalShortcut&lt;/code&gt; &lt;/a&gt;モジュールに登録されます。</target>
        </trans-unit>
        <trans-unit id="c505ab90b458ef9940a43737388d3c6b217987e8" translate="yes" xml:space="preserve">
          <source>Shortcuts within a BrowserWindow</source>
          <target state="translated">BrowserWindow内のショートカット</target>
        </trans-unit>
        <trans-unit id="1d6ad25deeb747ba9579ed546e0b463973229de1" translate="yes" xml:space="preserve">
          <source>Show notifications in the Main process</source>
          <target state="translated">メインプロセスに通知を表示する</target>
        </trans-unit>
        <trans-unit id="cb5643e020e9df09391fe3b0c3e335423c933176" translate="yes" xml:space="preserve">
          <source>Show notifications in the Renderer process</source>
          <target state="translated">レンダラプロセスで通知を表示する</target>
        </trans-unit>
        <trans-unit id="c2677c848251a6293076b01d343c6e7d28986268" translate="yes" xml:space="preserve">
          <source>Show the app's about panel options. These options can be overridden with &lt;code&gt;app.setAboutPanelOptions(options)&lt;/code&gt;.</source>
          <target state="translated">Show the app's about panel options. These options can be overridden with &lt;code&gt;app.setAboutPanelOptions(options)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3eada8d8b3747bc389420c924b29ba54c328d989" translate="yes" xml:space="preserve">
          <source>Show the given file in a file manager. If possible, select the file.</source>
          <target state="translated">与えられたファイルをファイルマネージャに表示します。可能であれば、ファイルを選択します。</target>
        </trans-unit>
        <trans-unit id="f4a786371a4d501a31919869f7598052d4fa1ad5" translate="yes" xml:space="preserve">
          <source>Show the platform's native emoji picker.</source>
          <target state="translated">プラットフォームのネイティブ絵文字ピッカーを表示します。</target>
        </trans-unit>
        <trans-unit id="d1238c5b9cb1e67edf1451c77e1ffa426aa90a88" translate="yes" xml:space="preserve">
          <source>Showing window gracefully</source>
          <target state="translated">窓を優雅に見せる</target>
        </trans-unit>
        <trans-unit id="2a1589b672dccd58b3071a2fe6c8b5c2df35af1c" translate="yes" xml:space="preserve">
          <source>Shows a message box, it will block the process until the message box is closed.</source>
          <target state="translated">メッセージボックスを表示し、メッセージボックスが閉じるまで処理をブロックします。</target>
        </trans-unit>
        <trans-unit id="a17a2ec8a1ae841cdfb4e1b4532e1caaf251acbf" translate="yes" xml:space="preserve">
          <source>Shows a message box, it will block the process until the message box is closed. It returns the index of the clicked button.</source>
          <target state="translated">メッセージボックスを表示し、メッセージボックスが閉じるまで処理をブロックします。クリックされたボタンのインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="18022873b70dca3d65700645d4513ec2ec6dd203" translate="yes" xml:space="preserve">
          <source>Shows and gives focus to the window.</source>
          <target state="translated">ウィンドウを表示したり、フォーカスを与えたりします。</target>
        </trans-unit>
        <trans-unit id="53db27871a1d17480387a6a11639bd53e76f37fc" translate="yes" xml:space="preserve">
          <source>Shows application windows after they were hidden. Does not automatically focus them.</source>
          <target state="translated">非表示にした後のアプリケーションウィンドウを表示します。自動的にフォーカスされることはありません。</target>
        </trans-unit>
        <trans-unit id="701512b17e97a60c66e7b50b9cf18aa6e0b6c4f1" translate="yes" xml:space="preserve">
          <source>Shows pop-up dictionary that searches the selected word on the page.</source>
          <target state="translated">選択した単語をページ上で検索するポップアップ辞書を表示します。</target>
        </trans-unit>
        <trans-unit id="0d822acb95b0144cb7dc2d75727253f5d1253ed8" translate="yes" xml:space="preserve">
          <source>Shows the Windows's crash dialog when Electron crashes.</source>
          <target state="translated">ElectronがクラッシュしたときのWindowsのクラッシュダイアログを表示します。</target>
        </trans-unit>
        <trans-unit id="20700e2dcfc17906d5966c2f94b2be9b5f55f286" translate="yes" xml:space="preserve">
          <source>Shows the dock icon.</source>
          <target state="translated">ドックアイコンを表示します。</target>
        </trans-unit>
        <trans-unit id="64240689492efc7a3210cdedd1dd2c7fcabf32cb" translate="yes" xml:space="preserve">
          <source>Shows the window but doesn't focus on it.</source>
          <target state="translated">ウィンドウを表示しますが、ピントが合いません。</target>
        </trans-unit>
        <trans-unit id="b6fa7b4bd103aa87ee11e6fde910511f6a97fdb0" translate="yes" xml:space="preserve">
          <source>Sign Native Modules</source>
          <target state="translated">サインネイティブモジュール</target>
        </trans-unit>
        <trans-unit id="9fc8fc0641ff7b8ede4aec2f3a27d76dd5410bd4" translate="yes" xml:space="preserve">
          <source>Sign Your App</source>
          <target state="translated">アプリにサインする</target>
        </trans-unit>
        <trans-unit id="9a2e67c7fe9a847ce6aeed5cb8db78e637bfb054" translate="yes" xml:space="preserve">
          <source>Signing &amp;amp; notarizing macOS builds</source>
          <target state="translated">Signing &amp;amp; notarizing macOS builds</target>
        </trans-unit>
        <trans-unit id="28f4ea0e1d26a0a9cac047ea787dd3e6d05fb0e7" translate="yes" xml:space="preserve">
          <source>Signing Windows builds</source>
          <target state="translated">Windows ビルドへの署名</target>
        </trans-unit>
        <trans-unit id="b02542c655ad3f4ac13c43496f81624184b1225a" translate="yes" xml:space="preserve">
          <source>Signing macOS builds</source>
          <target state="translated">macOS ビルドへの署名</target>
        </trans-unit>
        <trans-unit id="625506f52394201963a85ee6b051eb84ae0bb69d" translate="yes" xml:space="preserve">
          <source>Similarly for &lt;code&gt;arm64&lt;/code&gt;, install the following:</source>
          <target state="translated">同様に &lt;code&gt;arm64&lt;/code&gt; の場合は、以下をインストールします。</target>
        </trans-unit>
        <trans-unit id="e62bd7a2e139406201417e8042dd2531204a1a6c" translate="yes" xml:space="preserve">
          <source>Simple fullscreen mode emulates the native fullscreen behavior found in versions of Mac OS X prior to Lion (10.7).</source>
          <target state="translated">シンプルなフルスクリーンモードは、Lion(10.7)より前のバージョンのMac OS Xで見られるネイティブのフルスクリーン動作をエミュレートします。</target>
        </trans-unit>
        <trans-unit id="fab832f1416e8168e7f27efd58b02243c43e5220" translate="yes" xml:space="preserve">
          <source>Simple fullscreen mode emulates the native fullscreen behavior found in versions of macOS prior to Lion (10.7).</source>
          <target state="translated">シンプルなフルスクリーンモードは、Lion (10.7)以前のバージョンのmacOSで見られるネイティブのフルスクリーン動作をエミュレートします。</target>
        </trans-unit>
        <trans-unit id="d9a6b83c3b6ad377db7b779cfeb5db94db21543f" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; live in the DOM, they can be created by a script running on your website even if Node.js integration is otherwise disabled.</source>
          <target state="translated">Since &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; live in the DOM, they can be created by a script running on your website even if Node.js integration is otherwise disabled.</target>
        </trans-unit>
        <trans-unit id="87ee5667fa508301eb8f820026607f3bc3836541" translate="yes" xml:space="preserve">
          <source>Since Chromium is quite a large project, the final linking stage can take quite a few minutes, which makes it hard for development. In order to solve this, Chromium introduced the &quot;component build&quot;, which builds each component as a separate shared library, making linking very quick but sacrificing file size and performance.</source>
          <target state="translated">Chromiumはかなり大規模なプロジェクトなので、最終的なリンクの段階でかなりの時間がかかってしまい、開発が大変になってしまいます。これを解決するために、Chromiumでは、各コンポーネントを別の共有ライブラリとしてビルドする「コンポーネントビルド」を導入しました。</target>
        </trans-unit>
        <trans-unit id="38a740772f4d4236a58ab5d03ec4e6a78dcdcb86" translate="yes" xml:space="preserve">
          <source>Since Electron 8, stabilization branches are always &lt;strong&gt;major&lt;/strong&gt; version lines, and named against the following template &lt;code&gt;$MAJOR-x-y&lt;/code&gt; e.g. &lt;code&gt;8-x-y&lt;/code&gt;. Prior to that we used &lt;strong&gt;minor&lt;/strong&gt; version lines and named them as &lt;code&gt;$MAJOR-$MINOR-x&lt;/code&gt; e.g. &lt;code&gt;2-0-x&lt;/code&gt;</source>
          <target state="translated">Since Electron 8, stabilization branches are always &lt;strong&gt;major&lt;/strong&gt; version lines, and named against the following template &lt;code&gt;$MAJOR-x-y&lt;/code&gt; e.g. &lt;code&gt;8-x-y&lt;/code&gt; . Prior to that we used &lt;strong&gt;minor&lt;/strong&gt; version lines and named them as &lt;code&gt;$MAJOR-$MINOR-x&lt;/code&gt; e.g. &lt;code&gt;2-0-x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8047395872e46168268025bd69d79822303df699" translate="yes" xml:space="preserve">
          <source>Since Electron uses Chromium for displaying web pages, Chromium's multi-process architecture is also used. Each web page in Electron runs in its own process, which is called &lt;strong&gt;the renderer process&lt;/strong&gt;.</source>
          <target state="translated">ElectronはWebページの表示にChromiumを使用するため、Chromiumのマルチプロセスアーキテクチャも使用されます。Electronの各Webページは&lt;strong&gt;、レンダラープロセス&lt;/strong&gt;と呼ばれる独自のプロセスで実行され&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="7ff151b3d48273ded92d11ad24b2acd36b4ba43d" translate="yes" xml:space="preserve">
          <source>Since WebViews live in the DOM, they can be created by a script running on your website even if Node.js integration is otherwise disabled.</source>
          <target state="translated">WebViews は DOM 内に存在するので、Node.js の統合が無効になっている場合でも、Web サイト上で実行されているスクリプトによって作成することができます。</target>
        </trans-unit>
        <trans-unit id="e883cedd6ae7d3835b72d23c11561a7f8d63913e" translate="yes" xml:space="preserve">
          <source>Since a major feature in Electron is the ability to run Node.js in the renderer process (making it easier to develop desktop applications using web technologies), the sandbox is disabled by electron. This is because most Node.js APIs require system access. &lt;code&gt;require()&lt;/code&gt; for example, is not possible without file system permissions, which are not available in a sandboxed environment.</source>
          <target state="translated">Since a major feature in Electron is the ability to run Node.js in the renderer process (making it easier to develop desktop applications using web technologies), the sandbox is disabled by electron. This is because most Node.js APIs require system access. &lt;code&gt;require()&lt;/code&gt; for example, is not possible without file system permissions, which are not available in a sandboxed environment.</target>
        </trans-unit>
        <trans-unit id="2fa6d77f608edec50cafb0a6541c0208b155cc8b" translate="yes" xml:space="preserve">
          <source>Since a major feature in electron is the ability to run node.js in the renderer process (making it easier to develop desktop applications using web technologies), the sandbox is disabled by electron. This is because most node.js APIs require system access. &lt;code&gt;require()&lt;/code&gt; for example, is not possible without file system permissions, which are not available in a sandboxed environment.</source>
          <target state="translated">electronの主な機能は、レンダラープロセスでnode.jsを実行する機能（Webテクノロジーを使用したデスクトップアプリケーションの開発を容易にする）であるため、サンドボックスはelectronによって無効化されます。これは、ほとんどのnode.js APIがシステムアクセスを必要とするためです。たとえば &lt;code&gt;require()&lt;/code&gt; は、サンドボックス環境では使用できないファイルシステム権限がないと不可能です。</target>
        </trans-unit>
        <trans-unit id="d9383966ac5db425b8c83aa1299a2f850cf72704" translate="yes" xml:space="preserve">
          <source>Since communication between the processes is possible, a renderer process can call upon the main process to perform tasks. Electron comes with a module called &lt;code&gt;remote&lt;/code&gt; that exposes APIs usually only available on the main process. In order to create a &lt;code&gt;BrowserWindow&lt;/code&gt; from a renderer process, we'd use the remote as a middle-man:</source>
          <target state="translated">プロセス間の通信が可能なため、レンダラープロセスはメインプロセスを呼び出してタスクを実行できます。Electronには、通常メインプロセスでのみ使用可能なAPIを公開する &lt;code&gt;remote&lt;/code&gt; と呼ばれるモジュールが付属しています。レンダラープロセスから &lt;code&gt;BrowserWindow&lt;/code&gt; を作成するには、リモートを仲介者として使用します。</target>
        </trans-unit>
        <trans-unit id="bb6016e102a3d31f26779b11b6070daae4564dd4" translate="yes" xml:space="preserve">
          <source>Since many cases return &lt;code&gt;true&lt;/code&gt;, you should treat with care situations of getting false positives, as we cannot always assume that &lt;code&gt;true&lt;/code&gt; value means that Electron can access the Internet. For example, in cases when the computer is running a virtualization software that has virtual Ethernet adapters in &quot;always connected&quot; state. Therefore, if you want to determine the Internet access status of Electron, you should develop additional means for this check.</source>
          <target state="translated">Since many cases return &lt;code&gt;true&lt;/code&gt; , you should treat with care situations of getting false positives, as we cannot always assume that &lt;code&gt;true&lt;/code&gt; value means that Electron can access the Internet. For example, in cases when the computer is running a virtualization software that has virtual Ethernet adapters in &quot;always connected&quot; state. Therefore, if you want to determine the Internet access status of Electron, you should develop additional means for this check.</target>
        </trans-unit>
        <trans-unit id="c31559d62f258a908e80f13ee96c49a0297706ff" translate="yes" xml:space="preserve">
          <source>Since rendering untrusted content in electron is still uncharted territory, the APIs exposed to the sandbox preload script should be considered more unstable than the rest of electron APIs, and may have breaking changes to fix security issues.</source>
          <target state="translated">Electron で信頼されないコンテンツをレンダリングすることはまだ未知の領域なので、サンドボックスのプリロードスクリプトで公開されている API は、他の electron API よりも不安定であると考えるべきで、セキュリティの問題を修正するための変更点があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="4ebf894ce3fc4564f248b7389b55e4a853f73a6f" translate="yes" xml:space="preserve">
          <source>Since v0.34.0, Electron allows submitting packaged apps to the Mac App Store (MAS). This guide provides information on: how to submit your app and the limitations of the MAS build.</source>
          <target state="translated">v0.34.0以降、Electronはパッケージ化されたアプリケーションをMac App Store(MAS)に提出できるようになりました。このガイドでは、アプリの提出方法とMASビルドの制限について説明します。</target>
        </trans-unit>
        <trans-unit id="e0330c530209f2358f617c569b6bbdce28505654" translate="yes" xml:space="preserve">
          <source>Sindhi</source>
          <target state="translated">Sindhi</target>
        </trans-unit>
        <trans-unit id="6d5508fa76121a44df1c719d90ac812896b52caf" translate="yes" xml:space="preserve">
          <source>Sinhalese</source>
          <target state="translated">Sinhalese</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="0852eb086cfb0b72e55069ef131253e3c1fa0079" translate="yes" xml:space="preserve">
          <source>Size Object</source>
          <target state="translated">サイズ オブジェクト</target>
        </trans-unit>
        <trans-unit id="f67901a02b5910bf3770ab71fe26b4f69f0c8973" translate="yes" xml:space="preserve">
          <source>Skip binary download</source>
          <target state="translated">バイナリのダウンロードをスキップ</target>
        </trans-unit>
        <trans-unit id="d6a8b06eb4898f96a2fc6d5d10dfc35b13982cb6" translate="yes" xml:space="preserve">
          <source>Slovak</source>
          <target state="translated">Slovak</target>
        </trans-unit>
        <trans-unit id="0cd368bf67c2a1142f1a3890e53e4127424e77a4" translate="yes" xml:space="preserve">
          <source>Slovenian</source>
          <target state="translated">Slovenian</target>
        </trans-unit>
        <trans-unit id="9a2625f98c9a48c32c7ca4ab61100678556c7288" translate="yes" xml:space="preserve">
          <source>Small icon</source>
          <target state="translated">小さなアイコン</target>
        </trans-unit>
        <trans-unit id="ade99a9999f491266743ef60204af9fec999a307" translate="yes" xml:space="preserve">
          <source>Snapcraft</source>
          <target state="translated">Snapcraft</target>
        </trans-unit>
        <trans-unit id="85cd2418343c4f3225f8cab6909ac25c19269930" translate="yes" xml:space="preserve">
          <source>Snapcraft Guide (Ubuntu Software Center &amp;amp; More)</source>
          <target state="translated">Snapcraftガイド（Ubuntuソフトウェアセンターなど）</target>
        </trans-unit>
        <trans-unit id="9942c10fdc570b8e644c4ec7a84cbcbfcd9f04f2" translate="yes" xml:space="preserve">
          <source>Snapcraft is capable of taking an existing &lt;code&gt;.deb&lt;/code&gt; file and turning it into a &lt;code&gt;.snap&lt;/code&gt; file. The creation of a snap is configured using a &lt;code&gt;snapcraft.yaml&lt;/code&gt; file that describes the sources, dependencies, description, and other core building blocks.</source>
          <target state="translated">Snapcraftは、既存の &lt;code&gt;.deb&lt;/code&gt; ファイルを取得して &lt;code&gt;.snap&lt;/code&gt; ファイルに変換することができます。スナップの作成は、ソース、依存関係、説明、およびその他のコアビルディングブロックを記述する &lt;code&gt;snapcraft.yaml&lt;/code&gt; ファイルを使用して構成されます。</target>
        </trans-unit>
        <trans-unit id="e9d1604f0abb6338328027ef31d51bd7dfbbc088" translate="yes" xml:space="preserve">
          <source>So in short, the primary steps are:</source>
          <target state="translated">要するに、主なステップは</target>
        </trans-unit>
        <trans-unit id="a820034cbd5ccddfef01182767e7324ee1f57353" translate="yes" xml:space="preserve">
          <source>So the behavior of &lt;code&gt;webview&lt;/code&gt; is very similar to a cross-domain &lt;code&gt;iframe&lt;/code&gt;, as examples:</source>
          <target state="translated">So the behavior of &lt;code&gt;webview&lt;/code&gt; is very similar to a cross-domain &lt;code&gt;iframe&lt;/code&gt; , as examples:</target>
        </trans-unit>
        <trans-unit id="e7e1e849d411ce49b41e741ab29d15d999687748" translate="yes" xml:space="preserve">
          <source>So, in order to pull, you'd run the following commands:</source>
          <target state="translated">つまり、引っ張るためには、以下のコマンドを実行することになります。</target>
        </trans-unit>
        <trans-unit id="688a580feb7e7f568eb9f58a542d2ad9f51f2cfb" translate="yes" xml:space="preserve">
          <source>Software output device</source>
          <target state="translated">ソフトウェア出力装置</target>
        </trans-unit>
        <trans-unit id="2ed94ff47ed12a08088bd82b2b23088a5ac4cffc" translate="yes" xml:space="preserve">
          <source>Somali</source>
          <target state="translated">Somali</target>
        </trans-unit>
        <trans-unit id="54cb427cf311e299dc022158e6543a8093761d79" translate="yes" xml:space="preserve">
          <source>Some bug in V8 engine may allow malicious code to access the renderer preload APIs, effectively granting full access to the system through the &lt;code&gt;remote&lt;/code&gt; module.</source>
          <target state="translated">V8エンジンの一部のバグにより、悪意のあるコードがレンダラーのプリロードAPIにアクセスできるようになり、 &lt;code&gt;remote&lt;/code&gt; モジュールを介したシステムへのフルアクセスが事実上許可されます。</target>
        </trans-unit>
        <trans-unit id="63dcba2f0260d8128d5adb5e9d2cd560a3295b32" translate="yes" xml:space="preserve">
          <source>Some bug in the V8 engine may allow malicious code to access the renderer preload APIs, effectively granting full access to the system through the &lt;code&gt;remote&lt;/code&gt; module. Therefore, it is highly recommended to &lt;a href=&quot;../tutorial/security#15-disable-the-remote-module&quot;&gt;disable the &lt;code&gt;remote&lt;/code&gt; module&lt;/a&gt;. If disabling is not feasible, you should selectively &lt;a href=&quot;../tutorial/security#16-filter-the-remote-module&quot;&gt;filter the &lt;code&gt;remote&lt;/code&gt; module&lt;/a&gt;.</source>
          <target state="translated">Some bug in the V8 engine may allow malicious code to access the renderer preload APIs, effectively granting full access to the system through the &lt;code&gt;remote&lt;/code&gt; module. Therefore, it is highly recommended to &lt;a href=&quot;../tutorial/security#15-disable-the-remote-module&quot;&gt;disable the &lt;code&gt;remote&lt;/code&gt; module&lt;/a&gt;. If disabling is not feasible, you should selectively &lt;a href=&quot;../tutorial/security#16-filter-the-remote-module&quot;&gt;filter the &lt;code&gt;remote&lt;/code&gt; module&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="47628a96f6e8e830dce46609d2b995a38ad53ee6" translate="yes" xml:space="preserve">
          <source>Some compilation and linking errors are caused by missing source/object files in the libcc &lt;code&gt;dist&lt;/code&gt;</source>
          <target state="translated">一部のコンパイルおよびリンクエラーは、libcc &lt;code&gt;dist&lt;/code&gt; 内のソース/オブジェクトファイルの欠落が原因で発生します</target>
        </trans-unit>
        <trans-unit id="3c1bd0d2e336c9baf36a58dec20e1e18e977f601" translate="yes" xml:space="preserve">
          <source>Some examples of valid &lt;code&gt;urls&lt;/code&gt;:</source>
          <target state="translated">Some examples of valid &lt;code&gt;urls&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="197b70ba6a8008b4cd8284d70ac6ac4cdabb89a3" translate="yes" xml:space="preserve">
          <source>Some popular &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt;s are:</source>
          <target state="translated">一般的 &lt;code&gt;key&lt;/code&gt; と &lt;code&gt;type&lt;/code&gt; は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="160355eafd3a1c24dae1200939a602dd652ebcbb" translate="yes" xml:space="preserve">
          <source>Some security features in Chrome (such as Safe Browsing and Certificate Transparency) require a centralized authority and dedicated servers, both of which run counter to the goals of the Electron project. As such, we disable those features in Electron, at the cost of the associated security they would otherwise bring.</source>
          <target state="translated">Chrome の一部のセキュリティ機能(セーフブラウジングや証明書の透過性など)では、中央集権者と専用サーバーを必要としますが、どちらも Electron プロジェクトの目標に反しています。そのため、Electron のこれらの機能は無効にしていますが、それ以外の場合は関連するセキュリティを犠牲にしています。</target>
        </trans-unit>
        <trans-unit id="ac082c3b118f25c7c46518a6006640a0c6d1ae06" translate="yes" xml:space="preserve">
          <source>Some tests which rely on precise pixel measurements may not work correctly on devices with Hi-DPI screen settings due to floating point precision errors. To run these tests correctly, make sure the device is set to 100% scaling.</source>
          <target state="translated">正確なピクセル測定に依存するテストの中には、浮動小数点精度エラーにより、Hi-DPI 画面設定のデバイスで正しく動作しないものがあります。これらのテストを正しく実行するには、デバイスが100%スケーリングに設定されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="7b37110e5b01350732eac4676af2611966b9ccef" translate="yes" xml:space="preserve">
          <source>Source Code</source>
          <target state="translated">ソースコード</target>
        </trans-unit>
        <trans-unit id="de95723a62c1fc0a018a2398690f4e65f039455b" translate="yes" xml:space="preserve">
          <source>Source Code Directory Structure</source>
          <target state="translated">ソースコードディレクトリ構造</target>
        </trans-unit>
        <trans-unit id="8df7f1b361b2af42d36011e00d22c0f9891ec0b0" translate="yes" xml:space="preserve">
          <source>Spanish</source>
          <target state="translated">Spanish</target>
        </trans-unit>
        <trans-unit id="6ae3588f0de424b70dc66d7ba808c0edd567776a" translate="yes" xml:space="preserve">
          <source>Spanish (Latin America)</source>
          <target state="translated">スペイン語</target>
        </trans-unit>
        <trans-unit id="56d037d37822e39476678b209a88b12b5368d1cb" translate="yes" xml:space="preserve">
          <source>Specifically, the above means:</source>
          <target state="translated">具体的には、上記のような意味です。</target>
        </trans-unit>
        <trans-unit id="5ccc6278f24a22a631ba4a5e5cc7f1577c6185b9" translate="yes" xml:space="preserve">
          <source>Specifies a script that will be loaded before other scripts run in the guest page. The protocol of script's URL must be either &lt;code&gt;file:&lt;/code&gt; or &lt;code&gt;asar:&lt;/code&gt;, because it will be loaded by &lt;code&gt;require&lt;/code&gt; in guest page under the hood.</source>
          <target state="translated">ゲストページで他のスクリプトが実行される前に読み込まれるスクリプトを指定します。スクリプトのURLのプロトコルは &lt;code&gt;file:&lt;/code&gt; または &lt;code&gt;asar:&lt;/code&gt; のいずれかである必要があります。内部のゲストページの &lt;code&gt;require&lt;/code&gt; によって読み込まれるためです。</target>
        </trans-unit>
        <trans-unit id="c7be3814d051f68aac332b816a65dc938c0320e0" translate="yes" xml:space="preserve">
          <source>Specifies the flags passed to the Node JS engine. It has to be passed when starting Electron if you want to enable the &lt;code&gt;flags&lt;/code&gt; in the main process.</source>
          <target state="translated">Node JSエンジンに渡されるフラグを指定します。メインプロセスで &lt;code&gt;flags&lt;/code&gt; を有効にする場合は、Electronの起動時に渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="c74f74dba1179cb4536444d27537cabff9e5439a" translate="yes" xml:space="preserve">
          <source>Specifies whether the window&amp;rsquo;s document has been edited, and the icon in title bar will become gray when set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">ウィンドウのドキュメントが編集されているかどうかを指定し &lt;code&gt;true&lt;/code&gt; に設定すると、タイトルバーのアイコンが灰色になります。</target>
        </trans-unit>
        <trans-unit id="9f63e8cd6cf9cc8066c5e76619ab91b82e2b04f2" translate="yes" xml:space="preserve">
          <source>Specify an option with the value of &lt;code&gt;false&lt;/code&gt; to omit it from the registration. An example of registering a privileged scheme, without bypassing Content Security Policy:</source>
          <target state="translated">オプションを &lt;code&gt;false&lt;/code&gt; の値で指定して、登録から除外します。コンテンツセキュリティポリシーをバイパスせずに特権スキームを登録する例：</target>
        </trans-unit>
        <trans-unit id="5bd1abd3d894b4f807a4e89a97452fdac984d9b7" translate="yes" xml:space="preserve">
          <source>Spectron</source>
          <target state="translated">Spectron</target>
        </trans-unit>
        <trans-unit id="a34deccc95835c3b936d8ac1d8457617b72f9efa" translate="yes" xml:space="preserve">
          <source>SpellChecker</source>
          <target state="translated">SpellChecker</target>
        </trans-unit>
        <trans-unit id="c3d3af07d6e79183a7c87b53cbd8537d0c48ccb5" translate="yes" xml:space="preserve">
          <source>Squirrel</source>
          <target state="translated">Squirrel</target>
        </trans-unit>
        <trans-unit id="74798804bf02ba616248416fdead7670f76672e4" translate="yes" xml:space="preserve">
          <source>Squirrel is an open-source framework that enables Electron apps to update automatically as new versions are released. See the &lt;a href=&quot;api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; API for info about getting started with Squirrel.</source>
          <target state="translated">Squirrelは、新しいバージョンがリリースされたときにElectronアプリが自動的に更新できるようにするオープンソースのフレームワークです。Squirrelの開始&lt;a href=&quot;api/auto-updater&quot;&gt;方法&lt;/a&gt;については、autoUpdater APIをご覧ください。</target>
        </trans-unit>
        <trans-unit id="4210cee5eab0b745b002c7f95add76c38ff996e9" translate="yes" xml:space="preserve">
          <source>Stabilization Branches</source>
          <target state="translated">安定化ブランチ</target>
        </trans-unit>
        <trans-unit id="9f238fde84c8102be7f84a560d0639cae0152ae8" translate="yes" xml:space="preserve">
          <source>Stabilization branches are always either &lt;strong&gt;major&lt;/strong&gt; or &lt;strong&gt;minor&lt;/strong&gt; version lines, and named against the following template &lt;code&gt;$MAJOR-$MINOR-x&lt;/code&gt; e.g. &lt;code&gt;2-0-x&lt;/code&gt;.</source>
          <target state="translated">安定化ブランチは常に&lt;strong&gt;メジャー&lt;/strong&gt;または&lt;strong&gt;マイナー&lt;/strong&gt;バージョンの行であり、次のテンプレート &lt;code&gt;$MAJOR-$MINOR-x&lt;/code&gt; に対して名前が付けられます（例： &lt;code&gt;2-0-x&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="2d99181c503126531951a1d63aacafde75a53b4a" translate="yes" xml:space="preserve">
          <source>Stabilization branches are branches that run parallel to master, taking in only cherry-picked commits that are related to security or stability. These branches are never merged back to master.</source>
          <target state="translated">安定化ブランチはマスターと並行して実行されるブランチで、セキュリティや安定性に関連するコミットのみを取り込んでいます。これらのブランチは決して master にマージされることはありません。</target>
        </trans-unit>
        <trans-unit id="b84e82591dfd7e3bdc6c7cd680590a9f03472b79" translate="yes" xml:space="preserve">
          <source>Standard Menu Item Actions</source>
          <target state="translated">標準メニュー項目の操作</target>
        </trans-unit>
        <trans-unit id="a9a8dccaccbf655647957c75601b588b7da64cf5" translate="yes" xml:space="preserve">
          <source>Standard Menus</source>
          <target state="translated">標準メニュー</target>
        </trans-unit>
        <trans-unit id="0fe7ef894dfcfa21afb675ce9867d0ef3fbfb3d6" translate="yes" xml:space="preserve">
          <source>Start accessing a security scoped resource. With this method Electron applications that are packaged for the Mac App Store may reach outside their sandbox to access files chosen by the user. See &lt;a href=&quot;https://developer.apple.com/library/content/documentation/Security/Conceptual/AppSandboxDesignGuide/AppSandboxInDepth/AppSandboxInDepth.html#//apple_ref/doc/uid/TP40011183-CH3-SW16&quot;&gt;Apple's documentation&lt;/a&gt; for a description of how this system works.</source>
          <target state="translated">Start accessing a security scoped resource. With this method Electron applications that are packaged for the Mac App Store may reach outside their sandbox to access files chosen by the user. See &lt;a href=&quot;https://developer.apple.com/library/content/documentation/Security/Conceptual/AppSandboxDesignGuide/AppSandboxInDepth/AppSandboxInDepth.html#//apple_ref/doc/uid/TP40011183-CH3-SW16&quot;&gt;Apple's documentation&lt;/a&gt; for a description of how this system works.</target>
        </trans-unit>
        <trans-unit id="51644d168a94193f3c9c83deeefc4bacb9498973" translate="yes" xml:space="preserve">
          <source>Start accessing a security scoped resource. With this method electron applications that are packaged for the Mac App Store may reach outside their sandbox to access files chosen by the user. See &lt;a href=&quot;https://developer.apple.com/library/content/documentation/Security/Conceptual/AppSandboxDesignGuide/AppSandboxInDepth/AppSandboxInDepth.html#//apple_ref/doc/uid/TP40011183-CH3-SW16&quot;&gt;Apple's documentation&lt;/a&gt; for a description of how this system works.</source>
          <target state="translated">セキュリティスコープのリソースへのアクセスを開始します。この方法では、Mac App Store用にパッケージ化されたelectronアプリケーションは、サンドボックスの外部に到達して、ユーザーが選択したファイルにアクセスする可能性があります。このシステムがどのように機能するかについては、&lt;a href=&quot;https://developer.apple.com/library/content/documentation/Security/Conceptual/AppSandboxDesignGuide/AppSandboxInDepth/AppSandboxInDepth.html#//apple_ref/doc/uid/TP40011183-CH3-SW16&quot;&gt;Appleのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3a7b0c3a0ad3617ee8b08891c922bdf861d9315d" translate="yes" xml:space="preserve">
          <source>Start monitoring on all processes.</source>
          <target state="translated">すべてのプロセスの監視を開始します。</target>
        </trans-unit>
        <trans-unit id="e99639e9715c1d41ab81462c45be1945467eb2b7" translate="yes" xml:space="preserve">
          <source>Start recording on all processes.</source>
          <target state="translated">すべてのプロセスの記録を開始します。</target>
        </trans-unit>
        <trans-unit id="277d6d5d2e4b1320dddb032ae4ff08d7a4222897" translate="yes" xml:space="preserve">
          <source>Starting with a working application from the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, add the following lines to the &lt;code&gt;index.html&lt;/code&gt; file:</source>
          <target state="translated">Starting with a working application from the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, add the following lines to the &lt;code&gt;index.html&lt;/code&gt; file:</target>
        </trans-unit>
        <trans-unit id="6ac79c8c38ef99d86e2985519e8de82acbc6723c" translate="yes" xml:space="preserve">
          <source>Starting with a working application from the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, add the following lines to the &lt;code&gt;main.js&lt;/code&gt; file:</source>
          <target state="translated">Starting with a working application from the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, add the following lines to the &lt;code&gt;main.js&lt;/code&gt; file:</target>
        </trans-unit>
        <trans-unit id="69724ee1335af8174d07efd5a76b041f2398e3a4" translate="yes" xml:space="preserve">
          <source>Starting with a working application from the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, update the &lt;code&gt;main.js&lt;/code&gt; file with the following lines:</source>
          <target state="translated">Starting with a working application from the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, update the &lt;code&gt;main.js&lt;/code&gt; file with the following lines:</target>
        </trans-unit>
        <trans-unit id="1793221da64d52d98c86212e1cd147064d099076" translate="yes" xml:space="preserve">
          <source>Starts a request to find all matches for the &lt;code&gt;text&lt;/code&gt; in the web page. The result of the request can be obtained by subscribing to &lt;a href=&quot;web-contents#event-found-in-page&quot;&gt;&lt;code&gt;found-in-page&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">Webページ内の &lt;code&gt;text&lt;/code&gt; すべての一致を検索する要求を開始します。リクエストの結果は、&lt;a href=&quot;web-contents#event-found-in-page&quot;&gt; &lt;code&gt;found-in-page&lt;/code&gt; &lt;/a&gt;イベントをサブスクライブすることで取得できます。</target>
        </trans-unit>
        <trans-unit id="1ceb5a8300c14b98f9fe0d3cb7de4378c0ee4a60" translate="yes" xml:space="preserve">
          <source>Starts a request to find all matches for the &lt;code&gt;text&lt;/code&gt; in the web page. The result of the request can be obtained by subscribing to &lt;a href=&quot;webview-tag#event-found-in-page&quot;&gt;&lt;code&gt;found-in-page&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">Webページ内の &lt;code&gt;text&lt;/code&gt; すべての一致を検索する要求を開始します。リクエストの結果は、&lt;a href=&quot;webview-tag#event-found-in-page&quot;&gt; &lt;code&gt;found-in-page&lt;/code&gt; &lt;/a&gt;イベントをサブスクライブすることで取得できます。</target>
        </trans-unit>
        <trans-unit id="7c428be943bbb7b09e973865c7fa9bd465358ae3" translate="yes" xml:space="preserve">
          <source>Starts gathering information about all available desktop media sources, and calls &lt;code&gt;callback(error, sources)&lt;/code&gt; when finished.</source>
          <target state="translated">利用可能なすべてのデスクトップメディアソースに関する情報の収集を開始し、終了時に &lt;code&gt;callback(error, sources)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="06cbf86e2cce84ea76ae7498035d501154d9a3e3" translate="yes" xml:space="preserve">
          <source>Starts inspecting element at position (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) of guest page.</source>
          <target state="translated">ゲストページの位置（ &lt;code&gt;x&lt;/code&gt; 、 &lt;code&gt;y&lt;/code&gt; ）から要素の検査を開始します。</target>
        </trans-unit>
        <trans-unit id="7045988b61bc2eb7342e6f56e6add38559fb2a9b" translate="yes" xml:space="preserve">
          <source>Starts inspecting element at position (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;).</source>
          <target state="translated">位置（ &lt;code&gt;x&lt;/code&gt; 、 &lt;code&gt;y&lt;/code&gt; ）で要素の検査を開始します。</target>
        </trans-unit>
        <trans-unit id="5493530eca13ae2d998698f12402dfdcb7d4b70c" translate="yes" xml:space="preserve">
          <source>Starts or stops flashing the window to attract user's attention.</source>
          <target state="translated">ユーザーの注意を引くためにウィンドウの点滅を開始または停止します。</target>
        </trans-unit>
        <trans-unit id="bd117d5ab0c408102a03aa5a1f39f24267c613ce" translate="yes" xml:space="preserve">
          <source>Starts preventing the system from entering lower-power mode. Returns an integer identifying the power save blocker.</source>
          <target state="translated">システムが低消費電力モードに入るのを防止することを開始します。パワーセーブブロッカーを識別する整数を返します。</target>
        </trans-unit>
        <trans-unit id="722a15ab9252afbe8e0bd511ed9500f99c648da6" translate="yes" xml:space="preserve">
          <source>Starts the process as a normal Node.js process.</source>
          <target state="translated">通常のNode.jsプロセスとして処理を開始します。</target>
        </trans-unit>
        <trans-unit id="6a5813201a4580fe5f1fbb25f1a522d4d505bf2d" translate="yes" xml:space="preserve">
          <source>Static Methods</source>
          <target state="translated">静的メソッド</target>
        </trans-unit>
        <trans-unit id="5dd52f62e1be6f918ab77a38268c4534241ce617" translate="yes" xml:space="preserve">
          <source>Static Properties</source>
          <target state="translated">静的なプロパティ</target>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="7de39102e71973f2b4c9e9fb6dac682aecd8cf94" translate="yes" xml:space="preserve">
          <source>Step 10: Discuss and Update</source>
          <target state="translated">ステップ10.議論と更新</target>
        </trans-unit>
        <trans-unit id="662dfae726354bffc7db9630caa7bd67eefc9a6d" translate="yes" xml:space="preserve">
          <source>Step 10: Discuss and update</source>
          <target state="translated">ステップ10.議論と更新</target>
        </trans-unit>
        <trans-unit id="afd1675ce941a091f16700e236a4f78ec2dfad55" translate="yes" xml:space="preserve">
          <source>Step 11: Landing</source>
          <target state="translated">ステップ11:着地</target>
        </trans-unit>
        <trans-unit id="5c0c04d59fe67648ed6e5d289dc90cbf696906cc" translate="yes" xml:space="preserve">
          <source>Step 1: Create Sample Snapcraft Project</source>
          <target state="translated">ステップ1:サンプルSnapcraftプロジェクトの作成</target>
        </trans-unit>
        <trans-unit id="7bd30c8936103523f83b34c764b38a96178d6db7" translate="yes" xml:space="preserve">
          <source>Step 1: Create a Debian Package</source>
          <target state="translated">ステップ 1:Debian パッケージの作成</target>
        </trans-unit>
        <trans-unit id="3a5f7dd7276dbf8791d45ab909b29b602b9f844a" translate="yes" xml:space="preserve">
          <source>Step 1: Fork</source>
          <target state="translated">ステップ1:フォーク</target>
        </trans-unit>
        <trans-unit id="982ffe830b3039cc7f4b8415778987e3a8f473de" translate="yes" xml:space="preserve">
          <source>Step 1: Package Your Electron Application</source>
          <target state="translated">ステップ1:電子応用のパッケージ化</target>
        </trans-unit>
        <trans-unit id="d20ecf8d0baedcfa6da1a547723fa5bd4a4921de" translate="yes" xml:space="preserve">
          <source>Step 2: Build</source>
          <target state="translated">ステップ2:ビルド</target>
        </trans-unit>
        <trans-unit id="3f2297c771e8d2fc64a3dace21432cce1a1ee2e7" translate="yes" xml:space="preserve">
          <source>Step 2: Build the snap</source>
          <target state="translated">ステップ2:スナップを構築する</target>
        </trans-unit>
        <trans-unit id="af62df57b1ca6089276e10a762c159ae1f59afb8" translate="yes" xml:space="preserve">
          <source>Step 2: Create a snapcraft.yaml</source>
          <target state="translated">ステップ2:snapcraft.yamlを作成する</target>
        </trans-unit>
        <trans-unit id="275558b46203433d5c44c48e86d11c0678b226ab" translate="yes" xml:space="preserve">
          <source>Step 2: Running &lt;code&gt;electron-installer-snap&lt;/code&gt;</source>
          <target state="translated">ステップ2： &lt;code&gt;electron-installer-snap&lt;/code&gt; を実行する</target>
        </trans-unit>
        <trans-unit id="79d25bf9fb6ae3bee37a7daa1e63e2520d3a2b1c" translate="yes" xml:space="preserve">
          <source>Step 2: Running electron-windows-store</source>
          <target state="translated">ステップ2:電子ウィンドウズストアの実行</target>
        </trans-unit>
        <trans-unit id="085c619408ba85f500cca4078bc6993a1943481e" translate="yes" xml:space="preserve">
          <source>Step 3: Branch</source>
          <target state="translated">ステップ3:ブランチ</target>
        </trans-unit>
        <trans-unit id="e57280030da29bd0d7c32e660f54191416d12063" translate="yes" xml:space="preserve">
          <source>Step 3: Install the snap</source>
          <target state="translated">ステップ3:スナップをインストールする</target>
        </trans-unit>
        <trans-unit id="42f536cd108752a5d4c14dab76fc220c2a52be56" translate="yes" xml:space="preserve">
          <source>Step 3: Using the AppX Package</source>
          <target state="translated">ステップ3:AppXパッケージの使用</target>
        </trans-unit>
        <trans-unit id="f888c34ad31ebff32c41387dd24f54772ed28504" translate="yes" xml:space="preserve">
          <source>Step 4: Code</source>
          <target state="translated">ステップ4:コード</target>
        </trans-unit>
        <trans-unit id="6f24c0026071960cc96dcd1afdf23a54da9327a7" translate="yes" xml:space="preserve">
          <source>Step 4: Run the snap</source>
          <target state="translated">ステップ4:スナップの実行</target>
        </trans-unit>
        <trans-unit id="18a14b62cdfef7caa365404c01690312608f3716" translate="yes" xml:space="preserve">
          <source>Step 5: Commit</source>
          <target state="translated">ステップ5:コミット</target>
        </trans-unit>
        <trans-unit id="b01ca2567556356c334a1cbf9d37ca9fd395d35b" translate="yes" xml:space="preserve">
          <source>Step 6: Rebase</source>
          <target state="translated">ステップ6:リベース</target>
        </trans-unit>
        <trans-unit id="6d84ee8f1e7b86aadc817929a98f58c069a4f673" translate="yes" xml:space="preserve">
          <source>Step 7: Test</source>
          <target state="translated">ステップ7:テスト</target>
        </trans-unit>
        <trans-unit id="dba4c9ae1373ba83140e40fb09eb37be3b0e1c0c" translate="yes" xml:space="preserve">
          <source>Step 8: Push</source>
          <target state="translated">ステップ8:プッシュ</target>
        </trans-unit>
        <trans-unit id="9ee5a72675fb5ec976da7fa298ce7bfb67ad3ff1" translate="yes" xml:space="preserve">
          <source>Step 9: Opening the Pull Request</source>
          <target state="translated">ステップ9:プルリクエストを開く</target>
        </trans-unit>
        <trans-unit id="b86f2f9e7039c672bc135fae708eb87036251ae9" translate="yes" xml:space="preserve">
          <source>Steps to package your app into an &lt;code&gt;asar&lt;/code&gt; archive:</source>
          <target state="translated">アプリを &lt;code&gt;asar&lt;/code&gt; アーカイブにパッケージ化する手順：</target>
        </trans-unit>
        <trans-unit id="8370e7640e1265b2ff1387c489b345506060c60c" translate="yes" xml:space="preserve">
          <source>Stop monitoring on all processes.</source>
          <target state="translated">全プロセスの監視を停止します。</target>
        </trans-unit>
        <trans-unit id="78f3f1419fba05c1946bad423e2a2c661e189e16" translate="yes" xml:space="preserve">
          <source>Stop recording on all processes.</source>
          <target state="translated">全プロセスの録画を停止します。</target>
        </trans-unit>
        <trans-unit id="9cba0d3e2c5b605f39289352fffcc0b5368f3e36" translate="yes" xml:space="preserve">
          <source>Stops any &lt;code&gt;findInPage&lt;/code&gt; request for the &lt;code&gt;webContents&lt;/code&gt; with the provided &lt;code&gt;action&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;action&lt;/code&gt; &lt;code&gt;webContents&lt;/code&gt; の &lt;code&gt;findInPage&lt;/code&gt; リクエストを停止します。</target>
        </trans-unit>
        <trans-unit id="5e5eeb16588d48c3b8a2d024259209772e5fb650" translate="yes" xml:space="preserve">
          <source>Stops any &lt;code&gt;findInPage&lt;/code&gt; request for the &lt;code&gt;webview&lt;/code&gt; with the provided &lt;code&gt;action&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;action&lt;/code&gt; &lt;code&gt;webview&lt;/code&gt; &lt;code&gt;findInPage&lt;/code&gt; リクエストを停止します。</target>
        </trans-unit>
        <trans-unit id="a60f8e2575f729879818c2189915ae2373b00b1f" translate="yes" xml:space="preserve">
          <source>Stops any pending navigation.</source>
          <target state="translated">保留中のナビゲーションを停止します。</target>
        </trans-unit>
        <trans-unit id="d2c0432f252cabdf881a5b1de7d21307e3108eac" translate="yes" xml:space="preserve">
          <source>Stops the specified power save blocker.</source>
          <target state="translated">指定したパワーセーブブロッカーを停止します。</target>
        </trans-unit>
        <trans-unit id="cd7ac16ecf07dffbfa1314c6d4fc11224228b1e6" translate="yes" xml:space="preserve">
          <source>StreamProtocolResponse</source>
          <target state="translated">StreamProtocolResponse</target>
        </trans-unit>
        <trans-unit id="0b932126a37351eca28af5c545c6050320fbafe4" translate="yes" xml:space="preserve">
          <source>StreamProtocolResponse Object</source>
          <target state="translated">StreamProtocolResponse オブジェクト</target>
        </trans-unit>
        <trans-unit id="07986ba3f490221acef1d2c2b54da37f801672d6" translate="yes" xml:space="preserve">
          <source>Strict use of semver</source>
          <target state="translated">センバーの厳格な使用</target>
        </trans-unit>
        <trans-unit id="b28ce922b3d6733942016c7204231819c4d13493" translate="yes" xml:space="preserve">
          <source>Structure of Other Directories</source>
          <target state="translated">他のディレクトリの構造</target>
        </trans-unit>
        <trans-unit id="f0a6dc559018a4e099b96d3ed7b5f1b03af5b24a" translate="yes" xml:space="preserve">
          <source>Structure of Source Code</source>
          <target state="translated">ソースコードの構造</target>
        </trans-unit>
        <trans-unit id="350249dc861326c36324904d5ec3f8b02aa70371" translate="yes" xml:space="preserve">
          <source>Sub-pixel anti-aliasing needs a non-transparent background of the layer containing the font glyphs. (See &lt;a href=&quot;https://github.com/electron/electron/issues/6344#issuecomment-420371918&quot;&gt;this issue&lt;/a&gt; for more info).</source>
          <target state="translated">Sub-pixel anti-aliasing needs a non-transparent background of the layer containing the font glyphs. (See &lt;a href=&quot;https://github.com/electron/electron/issues/6344#issuecomment-420371918&quot;&gt;this issue&lt;/a&gt; for more info).</target>
        </trans-unit>
        <trans-unit id="e917b4ec2b1055f6900c394da62ccec5d1d3b323" translate="yes" xml:space="preserve">
          <source>Submit Your App for Review</source>
          <target state="translated">アプリを審査に出す</target>
        </trans-unit>
        <trans-unit id="1309deaf0ef292c659a9167472c5ab66acd093f6" translate="yes" xml:space="preserve">
          <source>Submit crash reports to a remote server.</source>
          <target state="translated">クラッシュレポートをリモートサーバーに送信します。</target>
        </trans-unit>
        <trans-unit id="cdc8d7c68289726905ca8577af8767a794cde90e" translate="yes" xml:space="preserve">
          <source>Submitting a Bug Report</source>
          <target state="translated">バグレポートの提出</target>
        </trans-unit>
        <trans-unit id="63fa5aa992cb17b44abb684ac147fdb7bae81d44" translate="yes" xml:space="preserve">
          <source>Subscribes to native notifications of macOS, &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(event, userInfo)&lt;/code&gt; when the corresponding &lt;code&gt;event&lt;/code&gt; happens. The &lt;code&gt;userInfo&lt;/code&gt; is an Object that contains the user information dictionary sent along with the notification.</source>
          <target state="translated">MacOSのネイティブの通知をサブスクライブは、 &lt;code&gt;callback&lt;/code&gt; 伴って呼び出される &lt;code&gt;callback(event, userInfo)&lt;/code&gt; に対応する &lt;code&gt;event&lt;/code&gt; 発生します。 &lt;code&gt;userInfo&lt;/code&gt; 通知とともに送信されたユーザ情報辞書を含むオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="c9f5fe0a3143a600b7fbf3d786ec2b6244324487" translate="yes" xml:space="preserve">
          <source>Subscribes to native notifications of macOS, &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(event, userInfo)&lt;/code&gt; when the corresponding &lt;code&gt;event&lt;/code&gt; happens. The &lt;code&gt;userInfo&lt;/code&gt; is an Object that contains the user information dictionary sent along with the notification. The &lt;code&gt;object&lt;/code&gt; is the sender of the notification, and only supports &lt;code&gt;NSString&lt;/code&gt; values for now.</source>
          <target state="translated">Subscribes to native notifications of macOS, &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(event, userInfo)&lt;/code&gt; when the corresponding &lt;code&gt;event&lt;/code&gt; happens. The &lt;code&gt;userInfo&lt;/code&gt; is an Object that contains the user information dictionary sent along with the notification. The &lt;code&gt;object&lt;/code&gt; is the sender of the notification, and only supports &lt;code&gt;NSString&lt;/code&gt; values for now.</target>
        </trans-unit>
        <trans-unit id="42a8f651d79fd005eeac0612df6442b983a01184" translate="yes" xml:space="preserve">
          <source>Success</source>
          <target state="translated">Success</target>
        </trans-unit>
        <trans-unit id="14bb55d7d7430a4e707657bbba24d20d9e03a1c8" translate="yes" xml:space="preserve">
          <source>Sundanese</source>
          <target state="translated">Sundanese</target>
        </trans-unit>
        <trans-unit id="f32d5a3b17e614297417cc279a7ec1cd02274d65" translate="yes" xml:space="preserve">
          <source>Support</source>
          <target state="translated">Support</target>
        </trans-unit>
        <trans-unit id="0bbfba9b9ff08cee1fcec9f293c4eb19430339a8" translate="yes" xml:space="preserve">
          <source>Support for authenticating proxies using basic, digest, NTLM, Kerberos or negotiate authentication schemes.</source>
          <target state="translated">ベーシック、ダイジェスト、NTLM、Kerberos、またはネゴシエート認証スキームを使用したプロキシの認証をサポート。</target>
        </trans-unit>
        <trans-unit id="70da0ceff673ee93c735fb842e02d74844dd618b" translate="yes" xml:space="preserve">
          <source>Support for traffic monitoring proxies: Fiddler-like proxies used for access control and monitoring.</source>
          <target state="translated">トラフィック監視用のプロキシをサポート。アクセス制御や監視に使用されるフィドラーのようなプロキシ。</target>
        </trans-unit>
        <trans-unit id="43e4b99d8f796a6596b3536c4a983b7cb9155b68" translate="yes" xml:space="preserve">
          <source>Supported Chrome Command Line Switches</source>
          <target state="translated">サポートされているChromeコマンドラインスイッチ</target>
        </trans-unit>
        <trans-unit id="2ddc48d5168c769f54e951161dec8b1b65fca3cc" translate="yes" xml:space="preserve">
          <source>Supported Command Line Switches</source>
          <target state="translated">サポートされているコマンドラインスイッチ</target>
        </trans-unit>
        <trans-unit id="ee5b1ee6bc8a9f095e69f419328c6a4405e7c8ac" translate="yes" xml:space="preserve">
          <source>Supported DevTools Extensions</source>
          <target state="translated">サポートされているDevTools拡張機能</target>
        </trans-unit>
        <trans-unit id="2c4dac57669722579d0059c86b886c8076e5f699" translate="yes" xml:space="preserve">
          <source>Supported Formats</source>
          <target state="translated">サポートされているフォーマット</target>
        </trans-unit>
        <trans-unit id="1a182e900ad0b28f084dbe30c2f1ab8dc81f123a" translate="yes" xml:space="preserve">
          <source>Supported Platforms</source>
          <target state="translated">対応プラットフォーム</target>
        </trans-unit>
        <trans-unit id="27688c5327abb2b73ea437b43fa29c356a128ee7" translate="yes" xml:space="preserve">
          <source>Supported Versions</source>
          <target state="translated">サポートされているバージョン</target>
        </trans-unit>
        <trans-unit id="4d07764fc1204ad402a2687ddda6ae939e80fec9" translate="yes" xml:space="preserve">
          <source>Swahili</source>
          <target state="translated">Swahili</target>
        </trans-unit>
        <trans-unit id="04a422d38c95415cece1ac86e1ad2a1030048c03" translate="yes" xml:space="preserve">
          <source>Swedish</source>
          <target state="translated">Swedish</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="57536136efa291cb99584f051a0e6e8328a62928" translate="yes" xml:space="preserve">
          <source>Tag Attributes</source>
          <target state="translated">タグ属性</target>
        </trans-unit>
        <trans-unit id="e301d53adc28f8dfd9375071aa503322cf99bba4" translate="yes" xml:space="preserve">
          <source>Tajik</source>
          <target state="translated">Tajik</target>
        </trans-unit>
        <trans-unit id="59a7aeb9331caf95c1af3d7651e026eeebe7c5b7" translate="yes" xml:space="preserve">
          <source>Takes a V8 heap snapshot and saves it to &lt;code&gt;filePath&lt;/code&gt;.</source>
          <target state="translated">Takes a V8 heap snapshot and saves it to &lt;code&gt;filePath&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86c2b6275f076b31c4be9812e835dab2a6f07ccf" translate="yes" xml:space="preserve">
          <source>Tamil</source>
          <target state="translated">Tamil</target>
        </trans-unit>
        <trans-unit id="61ad50a9b9189cc3cf1874568e35e7901ff4c982" translate="yes" xml:space="preserve">
          <source>Target</source>
          <target state="translated">Target</target>
        </trans-unit>
        <trans-unit id="cea42d26ebd4929ac343e1a6d381b343d198a94f" translate="yes" xml:space="preserve">
          <source>Target Names</source>
          <target state="translated">対象者名</target>
        </trans-unit>
        <trans-unit id="7bb0ddf9221c03b806b03c209e8366000124aa15" translate="yes" xml:space="preserve">
          <source>Task</source>
          <target state="translated">Task</target>
        </trans-unit>
        <trans-unit id="df740b79240b1ed7d5039a52848bff953794ae64" translate="yes" xml:space="preserve">
          <source>Task Object</source>
          <target state="translated">タスクオブジェクト</target>
        </trans-unit>
        <trans-unit id="586e90006bbbcd684ab54ec3ea76e4098393f572" translate="yes" xml:space="preserve">
          <source>Tatar</source>
          <target state="translated">Tatar</target>
        </trans-unit>
        <trans-unit id="985c76ae48843915ad1aa42325634790c0c46fc4" translate="yes" xml:space="preserve">
          <source>Technical Differences Between Electron and NW.js</source>
          <target state="translated">ElectronとNW.jsの技術的な違い</target>
        </trans-unit>
        <trans-unit id="d14dd0f1027c9118f0a2c6414bff0d3fbb7c8297" translate="yes" xml:space="preserve">
          <source>Technical Differences Between Electron and NW.js (formerly node-webkit)</source>
          <target state="translated">ElectronとNW.js(旧node-webkit)の技術的な違い</target>
        </trans-unit>
        <trans-unit id="ea6c03461dc3a543514f149ca6bb793d0a9e158a" translate="yes" xml:space="preserve">
          <source>Telugu</source>
          <target state="translated">Telugu</target>
        </trans-unit>
        <trans-unit id="7de91f3e9d75a52bb4c67b291e19d61e60d41099" translate="yes" xml:space="preserve">
          <source>Template Image</source>
          <target state="translated">テンプレート画像</target>
        </trans-unit>
        <trans-unit id="a405502f51e0bcd09ad6c9996568e9af0030f8c4" translate="yes" xml:space="preserve">
          <source>Template images consist of black and an alpha channel. Template images are not intended to be used as standalone images and are usually mixed with other content to create the desired final appearance.</source>
          <target state="translated">テンプレート画像は、黒とアルファチャンネルで構成されています。テンプレート画像は単体の画像として使用することは意図されておらず、通常は他のコンテンツと混合して最終的な外観を作成します。</target>
        </trans-unit>
        <trans-unit id="61f4c40bafaf925c90d8aec2fb8fe82177a28538" translate="yes" xml:space="preserve">
          <source>Template images consist of black and clear colors (and an alpha channel). Template images are not intended to be used as standalone images and are usually mixed with other content to create the desired final appearance.</source>
          <target state="translated">テンプレート画像は、黒とクリアカラー(およびアルファチャンネル)で構成されています。テンプレート画像は単体の画像として使用することは意図されておらず、通常は他のコンテンツと混合して最終的な外観を作成します。</target>
        </trans-unit>
        <trans-unit id="7d0db7be1461de15be97b4fcf849f0ce026908fa" translate="yes" xml:space="preserve">
          <source>Template:</source>
          <target state="translated">Template:</target>
        </trans-unit>
        <trans-unit id="f597cdd5c3c89fe269776fca18c862a026294b15" translate="yes" xml:space="preserve">
          <source>Terse responses that provide neither additional context nor supporting detail are not helpful or professional. To many, such responses are annoying and unfriendly.</source>
          <target state="translated">追加の文脈も裏付けとなる詳細も提供しないような簡潔な回答は、参考にならないし、専門的でもありません。多くの人にとって、このような回答は迷惑であり、不親切なものです。</target>
        </trans-unit>
        <trans-unit id="74b3791a94489341394b02e06d475b9a10d864b3" translate="yes" xml:space="preserve">
          <source>Test functionality using:</source>
          <target state="translated">を使用して機能をテストします。</target>
        </trans-unit>
        <trans-unit id="0fcdbe88dfea7bef908cb935c5e6a5a7cc750c5d" translate="yes" xml:space="preserve">
          <source>Test your changes conform to the project coding style using:</source>
          <target state="translated">を使用して、変更がプロジェクトのコーディングスタイルに適合しているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Testing</target>
        </trans-unit>
        <trans-unit id="1eeec028d1344e5b6f8fe3343dd31c611fe9a372" translate="yes" xml:space="preserve">
          <source>Testing Widevine CDM</source>
          <target state="translated">ワイドバインCDMのテスト</target>
        </trans-unit>
        <trans-unit id="66bb682e02caf9ddc029a0c2316d21b9d64ccfae" translate="yes" xml:space="preserve">
          <source>Testing and Debugging</source>
          <target state="translated">テストとデバッグ</target>
        </trans-unit>
        <trans-unit id="7b87088e3905b59b59b4a799f15c55321f33e99c" translate="yes" xml:space="preserve">
          <source>Testing on Headless CI Systems (Travis CI, Jenkins)</source>
          <target state="translated">ヘッドレスCIシステムのテスト(Travis CI、Jenkins</target>
        </trans-unit>
        <trans-unit id="b199b027369ad4d90d0312908b79cd8855d69615" translate="yes" xml:space="preserve">
          <source>Testing on Headless CI Systems (Travis, Jenkins)</source>
          <target state="translated">ヘッドレスCIシステムのテスト (Travis,Jenkins)</target>
        </trans-unit>
        <trans-unit id="d635b87fdeccca32b2a369977eafcc765afa7f92" translate="yes" xml:space="preserve">
          <source>Testing on Windows 10 devices</source>
          <target state="translated">Windows 10デバイスでのテスト</target>
        </trans-unit>
        <trans-unit id="39fdec1194d94212b871a28b2aa04a73cd40fce1" translate="yes" xml:space="preserve">
          <source>Tests</source>
          <target state="translated">Tests</target>
        </trans-unit>
        <trans-unit id="a722e0bd49de206034a1eab35e631a36cab05fe7" translate="yes" xml:space="preserve">
          <source>Tests that include native modules (e.g. &lt;code&gt;runas&lt;/code&gt;) can't be executed with the debug build (see &lt;a href=&quot;https://github.com/electron/electron/issues/2558&quot;&gt;#2558&lt;/a&gt; for details), but they will work with the release build.</source>
          <target state="translated">ネイティブモジュール（ &lt;code&gt;runas&lt;/code&gt; など）を含むテストは、デバッグビルド（詳細は&lt;a href=&quot;https://github.com/electron/electron/issues/2558&quot;&gt;＃2558&lt;/a&gt;を参照）では実行できませんが、リリースビルドでは動作します。</target>
        </trans-unit>
        <trans-unit id="3f57c1784bd97f2d870b0ed9e38ca45dff50c643" translate="yes" xml:space="preserve">
          <source>Text selection</source>
          <target state="translated">テキスト選択</target>
        </trans-unit>
        <trans-unit id="c32767e0541fe7038ff8d87e7b8aed17f49474f8" translate="yes" xml:space="preserve">
          <source>Thai</source>
          <target state="translated">Thai</target>
        </trans-unit>
        <trans-unit id="fbb60eaf6f45c9af5307617f93cfba5afc963630" translate="yes" xml:space="preserve">
          <source>That level of modularity and extendability ensures that all developers working with Electron, both big and small in team-size, are never restricted in what they can or cannot do at any time during their development lifecycle. However, for many developers, one of the community-driven boilerplates or command line tools might make it dramatically easier to compile, package, and release an app.</source>
          <target state="translated">このレベルのモジュール性と拡張性により、チーム規模の大小を問わず、Electronを使用しているすべての開発者は、開発ライフサイクルの中でいつでもできることやできないことを制限されることはありません。しかし、多くの開発者にとっては、コミュニティ主導のボイラープレートやコマンドラインツールを使用することで、アプリのコンパイル、パッケージ化、リリースが劇的に容易になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="fd22760d2471b9fe162b9358078abedcb3b5b880" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/web-contents#event-before-input-event&quot;&gt;&lt;code&gt;before-input-event&lt;/code&gt;&lt;/a&gt; event is emitted before dispatching &lt;code&gt;keydown&lt;/code&gt; and &lt;code&gt;keyup&lt;/code&gt; events in the page. It can be used to catch and handle custom shortcuts that are not visible in the menu.</source>
          <target state="translated">&lt;a href=&quot;../api/web-contents#event-before-input-event&quot;&gt; &lt;code&gt;before-input-event&lt;/code&gt; &lt;/a&gt;のイベントがディスパッチする前に放出される &lt;code&gt;keydown&lt;/code&gt; と &lt;code&gt;keyup&lt;/code&gt; ページでイベントを。メニューに表示されないカスタムショートカットをキャッチして処理するために使用できます。</target>
        </trans-unit>
        <trans-unit id="546f43fddeffeeda41d593ce9fea7c08e6acc480" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API&quot;&gt;Page Visibility API&lt;/a&gt; works as follows:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API&quot;&gt;ページの可視性のAPIは、&lt;/a&gt;次のように動作します：</target>
        </trans-unit>
        <trans-unit id="50be31a1aec1cf6ff184e304cbd59137cf9d97d1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/browser-window.md#winsetmenumenu-linux-windows&quot;&gt;&lt;code&gt;setMenu&lt;/code&gt; method&lt;/a&gt; of browser windows can set the menu of certain browser windows.</source>
          <target state="translated">ブラウザウィンドウの&lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/browser-window.md#winsetmenumenu-linux-windows&quot;&gt; &lt;code&gt;setMenu&lt;/code&gt; メソッド&lt;/a&gt;は、特定のブラウザウィンドウのメニューを設定できます。</target>
        </trans-unit>
        <trans-unit id="c18a39ea0a59ab8d6b7ac00ca6274e07ff4e3710" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/mapbox/node-pre-gyp&quot;&gt;&lt;code&gt;node-pre-gyp&lt;/code&gt; tool&lt;/a&gt; provides a way to deploy native Node modules with prebuilt binaries, and many popular modules are using it.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mapbox/node-pre-gyp&quot;&gt; &lt;code&gt;node-pre-gyp&lt;/code&gt; ツールは、&lt;/a&gt;ビルド済みのバイナリをネイティブのノードモジュールをデプロイする方法を提供し、多くの一般のモジュールは、それを使用しています。</target>
        </trans-unit>
        <trans-unit id="4285f06f330851132a1bb653b9f3ed2e10705d5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/sindresorhus/awesome-electron#boilerplates&quot;&gt;&quot;Awesome Electron&quot; list&lt;/a&gt; contains more tools and boilerplates to choose from. If you find the length of the list intimidating, don't forget that adding tools as you go along is a valid approach, too.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sindresorhus/awesome-electron#boilerplates&quot;&gt;「素晴らしいエレクトロン」リストは、&lt;/a&gt;から選択する多くのツールやボイラープレートが含まれています。リストの長さが怖い場合は、ツールを追加することも有効な方法であることを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="26d4924ea4b8c06c6a5af32fe6dcfdc2d9472e9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-x&lt;/code&gt; flag should be used with any required module that is already exposed in the preload scope, and tells browserify to use the enclosing &lt;code&gt;require&lt;/code&gt; function for it. &lt;code&gt;--insert-global-vars&lt;/code&gt; will ensure that &lt;code&gt;process&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt; and &lt;code&gt;setImmediate&lt;/code&gt; are also taken from the enclosing scope(normally browserify injects code for those).</source>
          <target state="translated">&lt;code&gt;-x&lt;/code&gt; フラグは、既に予圧範囲内に露出され、必要なモジュールを使用し、封入を使用するbrowserify指示されなければならない &lt;code&gt;require&lt;/code&gt; それのために機能。 &lt;code&gt;--insert-global-vars&lt;/code&gt; は、 &lt;code&gt;process&lt;/code&gt; 、 &lt;code&gt;Buffer&lt;/code&gt; 、および &lt;code&gt;setImmediate&lt;/code&gt; も外側のスコープから取得されるようにします（通常、browserifyはこれらのコードを挿入します）。</target>
        </trans-unit>
        <trans-unit id="07787c413e40de525905bace4028a285133a7977" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserWindow&lt;/code&gt; class has the following static methods:</source>
          <target state="translated">&lt;code&gt;BrowserWindow&lt;/code&gt; のクラスには、次の静的メソッドがあります。</target>
        </trans-unit>
        <trans-unit id="5fb74cf64078c3266f27fdc27672e6d77567d9c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserWindowProxy&lt;/code&gt; object has the following instance methods:</source>
          <target state="translated">&lt;code&gt;BrowserWindowProxy&lt;/code&gt; のオブジェクトは、以下のインスタンスメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="d2e8026a49cfe035502c70155d7822608b823c7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserWindowProxy&lt;/code&gt; object has the following instance properties:</source>
          <target state="translated">&lt;code&gt;BrowserWindowProxy&lt;/code&gt; のオブジェクトは、以下のインスタンスのプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="378c32718c3701cfe2b78f42dbf353799ed3e872" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserWindowProxy&lt;/code&gt; object is returned from &lt;code&gt;window.open&lt;/code&gt; and provides limited functionality with the child window.</source>
          <target state="translated">&lt;code&gt;BrowserWindowProxy&lt;/code&gt; のオブジェクトから返され &lt;code&gt;window.open&lt;/code&gt; と子ウィンドウに制限された機能を提供します。</target>
        </trans-unit>
        <trans-unit id="e205851e02ff44e952b5b6432b8733e0d512cc1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Display&lt;/code&gt; object represents a physical display connected to the system. A fake &lt;code&gt;Display&lt;/code&gt; may exist on a headless system, or a &lt;code&gt;Display&lt;/code&gt; may correspond to a remote, virtual display.</source>
          <target state="translated">&lt;code&gt;Display&lt;/code&gt; オブジェクトは、システムに接続された物理的なディスプレイを表します。偽の &lt;code&gt;Display&lt;/code&gt; がヘッドレスシステムに存在する場合や、 &lt;code&gt;Display&lt;/code&gt; がリモートの仮想ディスプレイに対応する場合があります。</target>
        </trans-unit>
        <trans-unit id="36111e3a5ab27ddad11383f671b1db57b263f884" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HOME=~/.electron-gyp&lt;/code&gt; changes where to find development headers. The &lt;code&gt;--target=1.2.3&lt;/code&gt; is version of Electron. The &lt;code&gt;--dist-url=...&lt;/code&gt; specifies where to download the headers. The &lt;code&gt;--arch=x64&lt;/code&gt; says the module is built for 64bit system.</source>
          <target state="translated">&lt;code&gt;HOME=~/.electron-gyp&lt;/code&gt; 変更はどこ開発用ヘッダを検索します。 &lt;code&gt;--target=1.2.3&lt;/code&gt; は、電子のバージョンです。 &lt;code&gt;--dist-url=...&lt;/code&gt; 指定しますヘッダーをダウンロードします。 &lt;code&gt;--arch=x64&lt;/code&gt; のは、モジュールが64ビットシステム用に構築されていると言います。</target>
        </trans-unit>
        <trans-unit id="a562dad6885d8f09e573b780469c9ba517fcae85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Menu&lt;/code&gt; class has the following static methods:</source>
          <target state="translated">&lt;code&gt;Menu&lt;/code&gt; クラスには、次の静的メソッドがあります。</target>
        </trans-unit>
        <trans-unit id="9514231a4bc92a133c52dca0d2e94a52bdd7b4cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Menu&lt;/code&gt; class is only available in the main process, but you can also use it in the render process via the &lt;a href=&quot;remote&quot;&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;code&gt;Menu&lt;/code&gt; クラスには、メインプロセスでのみ使用可能ですが、あなたはまた、経由レンダリングプロセスで使用することができ&lt;a href=&quot;remote&quot;&gt; &lt;code&gt;remote&lt;/code&gt; &lt;/a&gt;モジュール。</target>
        </trans-unit>
        <trans-unit id="90637a5eccddf5840df8977ac78bf5a858511ee0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Notification&lt;/code&gt; class has the following static methods:</source>
          <target state="translated">&lt;code&gt;Notification&lt;/code&gt; クラスには、次の静的メソッドがあります。</target>
        </trans-unit>
        <trans-unit id="95804347995e70d453f68b137daf116055a4d34c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stats&lt;/code&gt; object returned by &lt;code&gt;fs.stat&lt;/code&gt; and its friends on files in &lt;code&gt;asar&lt;/code&gt; archives is generated by guessing, because those files do not exist on the filesystem. So you should not trust the &lt;code&gt;Stats&lt;/code&gt; object except for getting file size and checking file type.</source>
          <target state="translated">&lt;code&gt;Stats&lt;/code&gt; によって返されたオブジェクト &lt;code&gt;fs.stat&lt;/code&gt; 内のファイルに、その友人 &lt;code&gt;asar&lt;/code&gt; アーカイブは、これらのファイルは、ファイルシステム上に存在しないため、推測によって生成されます。そのため、ファイルサイズの取得とファイルタイプの確認以外は、 &lt;code&gt;Stats&lt;/code&gt; オブジェクトを信頼しないでください。</target>
        </trans-unit>
        <trans-unit id="095dd42a57b5876b1a6eb4597c1c2e6d0fd7fe76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Super&lt;/code&gt; key is mapped to the &lt;code&gt;Windows&lt;/code&gt; key on Windows and Linux and &lt;code&gt;Cmd&lt;/code&gt; on macOS.</source>
          <target state="translated">&lt;code&gt;Super&lt;/code&gt; キーはにマッピングされ &lt;code&gt;Windows&lt;/code&gt; WindowsとLinuxとのキー &lt;code&gt;Cmd&lt;/code&gt; を MacOSの上。</target>
        </trans-unit>
        <trans-unit id="548888cfaa24b5e46bb879ba09c005e135f4e50f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tray&lt;/code&gt; class has the following methods:</source>
          <target state="translated">&lt;code&gt;Tray&lt;/code&gt; クラスには、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="4b63c9111b71a3a4ecd76b489350d61f921c316d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tray&lt;/code&gt; module emits the following events:</source>
          <target state="translated">&lt;code&gt;Tray&lt;/code&gt; モジュールは、以下のイベントを発します。</target>
        </trans-unit>
        <trans-unit id="e325507aab2b1b98a40c1975f6b48e46ad21507b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebFrame&lt;/code&gt; class has the following instance methods:</source>
          <target state="translated">&lt;code&gt;WebFrame&lt;/code&gt; のクラスは、次のインスタンスメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="49db5017dbb7fcd31b41d7c2bbd8e4e2ef8bd894" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;acceptLanguages&lt;/code&gt; must a comma separated ordered list of language codes, for example &lt;code&gt;&quot;en-US,fr,de,ko,zh-CN,ja&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;acceptLanguages&lt;/code&gt; はコンマは、例えば、言語コードのリストを命じ分離しなければならない &lt;code&gt;&quot;en-US,fr,de,ko,zh-CN,ja&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b15a23f3e4538bb79d20fd17bb0e7e16fa3b3f59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; object emits the following events:</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; オブジェクトは、次のイベントを発します。</target>
        </trans-unit>
        <trans-unit id="002fdff755f07b750c740ea76c9ad4d8538566c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; object has the following methods:</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; オブジェクトは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="bb1acceddcd94f2f7ba1e55e4b2100588ac1d786" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autoUpdater&lt;/code&gt; object emits the following events:</source>
          <target state="translated">&lt;code&gt;autoUpdater&lt;/code&gt; オブジェクトは、次のイベントを発します。</target>
        </trans-unit>
        <trans-unit id="3b4e5e4aebb061efee47a8a13fcf6a4b5cc16b96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autoUpdater&lt;/code&gt; object has the following methods:</source>
          <target state="translated">&lt;code&gt;autoUpdater&lt;/code&gt; オブジェクトは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="e3a18bd191c6bb3e87e89299d68faf09f0ac3a17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blur&lt;/code&gt; filter only applies to the web page, so there is no way to apply blur effect to the content below the window (i.e. other applications open on the user's system).</source>
          <target state="translated">&lt;code&gt;blur&lt;/code&gt; フィルタは、Webページに適用されるので、ウィンドウ下のコンテンツ（すなわち、他のアプリケーションがユーザーのシステムで開く）にぼかし効果を適用する方法はありません。</target>
        </trans-unit>
        <trans-unit id="d5a6d10ecd8dd7dc1ee5198b82589f3f4b3508b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bounds&lt;/code&gt; of this BrowserView instance as &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; としてのこのBrowserViewインスタンスの &lt;code&gt;bounds&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2355778305a7074fcec2fb4ec88d449e5a1e40b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bounds&lt;/code&gt; of this tray icon as &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">このトレイアイコンの &lt;code&gt;bounds&lt;/code&gt; は &lt;code&gt;Object&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e9dbc7cd3bcff2b75b0f1d3596349050baee4036" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;browserWindow&lt;/code&gt; argument allows the dialog to attach itself to a parent window, making it modal.</source>
          <target state="translated">&lt;code&gt;browserWindow&lt;/code&gt; の引数は、それがモーダルなって、ダイアログが親ウィンドウに自分自身を添付することができます。</target>
        </trans-unit>
        <trans-unit id="3369a84ed10197048ea3f4fe195088057dd78754" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;browserWindow&lt;/code&gt; argument allows the dialog to attach itself to a parent window, making it modal. If &lt;code&gt;browserWindow&lt;/code&gt; is not shown dialog will not be attached to it. In such case it will be displayed as an independent window.</source>
          <target state="translated">&lt;code&gt;browserWindow&lt;/code&gt; の引数は、それがモーダルなって、ダイアログが親ウィンドウに自分自身を添付することができます。場合 &lt;code&gt;browserWindow&lt;/code&gt; が示されていないダイアログがそれに接続されることはありません。このような場合、独立したウィンドウとして表示されます。</target>
        </trans-unit>
        <trans-unit id="63a7588ba2bc1f88e743b453cf4a04f1f17b9355" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;browserWindow&lt;/code&gt; argument is ignored since it is not possible to make this confirmation dialog modal.</source>
          <target state="translated">&lt;code&gt;browserWindow&lt;/code&gt; の引数は、この確認ダイアログをモーダルを作成することはできませんので、無視されます。</target>
        </trans-unit>
        <trans-unit id="5396c28a26b135b4e02d8c03a179881499cbc516" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;buttons&lt;/code&gt; is an array of &lt;code&gt;Button&lt;/code&gt; objects:</source>
          <target state="translated">&lt;code&gt;buttons&lt;/code&gt; の配列である &lt;code&gt;Button&lt;/code&gt; オブジェクト：</target>
        </trans-unit>
        <trans-unit id="a85420db83103b60313c540377497e810fdfe12c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; function is expected to be called back with user credentials:</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 関数は、ユーザーの資格情報を使用してコールバックされることが予想されます。</target>
        </trans-unit>
        <trans-unit id="4888e52bf5abfeec5e29e4ad79aa00b61428d4b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; has to be called with a &lt;code&gt;response&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; で呼び出されなければなら &lt;code&gt;response&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="d0ea095cd807318dc09f88cb0623c0b9f76a5c12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; has to be called with an &lt;code&gt;response&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; で呼び出されなければなら &lt;code&gt;response&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="722e658697e82305d3fc4ad9883c4ea54a96e299" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; is guaranteed to be executed after the &lt;code&gt;ready&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt; gets emitted.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 後に実行されることが保証されて &lt;code&gt;ready&lt;/code&gt; のイベント &lt;code&gt;app&lt;/code&gt; 放出されます。</target>
        </trans-unit>
        <trans-unit id="a00dd859c40cd9cb490ab9fe3f58740b20b89324" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(error, data)&lt;/code&gt; on completion. The &lt;code&gt;data&lt;/code&gt; is a &lt;code&gt;Buffer&lt;/code&gt; that contains the generated PDF data.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; で呼び出される &lt;code&gt;callback(error, data)&lt;/code&gt; 完了時に。 &lt;code&gt;data&lt;/code&gt; ある &lt;code&gt;Buffer&lt;/code&gt; 生成されたPDFデータが含まれています。</target>
        </trans-unit>
        <trans-unit id="356f68b035169a45ce9d444a247220b106430430" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; will be called with a boolean that indicates whether there is already a handler for &lt;code&gt;scheme&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; すでにのハンドラがあるかどうかを示すbooleanで呼び出される &lt;code&gt;scheme&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe244816958e1ab626feaede5fa1d3dbe5730b37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;child&lt;/code&gt; window will always show on top of the &lt;code&gt;top&lt;/code&gt; window.</source>
          <target state="translated">&lt;code&gt;child&lt;/code&gt; ウィンドウは、常に上部に表示されます &lt;code&gt;top&lt;/code&gt; 画面。</target>
        </trans-unit>
        <trans-unit id="7a2313446db8e81753e97957c071d74a94bd65f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clipboard&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;clipboard&lt;/code&gt; モジュールは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="bb07e41210d7fff1788acac73dfb010bb237c483" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contentTracing&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;contentTracing&lt;/code&gt; モジュールは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="93991c1e8a60fa256116cc32be4c8bda608260fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crashReporter&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;crashReporter&lt;/code&gt; のモジュールは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="241b7d90fa34196856ed435b3363c3b6a90d07c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data&lt;/code&gt; event is the usual method of transferring response data into applicative code.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; イベントは、応用的コードに応答データを転送する通常の方法です。</target>
        </trans-unit>
        <trans-unit id="403f5086c41f36c4fef65505be759177ba388421" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;desktop&lt;/code&gt; type places the window at the desktop background window level (&lt;code&gt;kCGDesktopWindowLevel - 1&lt;/code&gt;). Note that desktop window will not receive focus, keyboard or mouse events, but you can use &lt;code&gt;globalShortcut&lt;/code&gt; to receive input sparingly.</source>
          <target state="translated">&lt;code&gt;desktop&lt;/code&gt; タイプは、デスクトップの背景のウィンドウレベル（でウィンドウを配置 &lt;code&gt;kCGDesktopWindowLevel - 1&lt;/code&gt; ）。デスクトップウィンドウはフォーカス、キーボード、またはマウスイベントを受け取りませんが、 &lt;code&gt;globalShortcut&lt;/code&gt; を使用して入力を控えめに受け取ることができます。</target>
        </trans-unit>
        <trans-unit id="c91ffc57c958c7d8acdb45b0a7b46f1817c75746" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;desktopCapturer&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;desktopCapturer&lt;/code&gt; のモジュールは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="5c86af2d3eca32ea6c29be53122248ebc912a2db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;devToolsWebContents&lt;/code&gt; must not have done any navigation, and it should not be used for other purposes after the call.</source>
          <target state="translated">&lt;code&gt;devToolsWebContents&lt;/code&gt; は、任意のナビゲーションを行っているしてはならない、それはコールの後、他の目的のために使用すべきではありません。</target>
        </trans-unit>
        <trans-unit id="936fe58c56fb05911024b85cff388024ba3116ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dialog&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;dialog&lt;/code&gt; モジュールは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="4095e62c7ce99006c409a16aa80713cfe7c69501" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dirtyRect&lt;/code&gt; is an object with &lt;code&gt;x, y, width, height&lt;/code&gt; properties that describes which part of the page was repainted. If &lt;code&gt;onlyDirty&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;frameBuffer&lt;/code&gt; will only contain the repainted area. &lt;code&gt;onlyDirty&lt;/code&gt; defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dirtyRect&lt;/code&gt; を持つオブジェクトである &lt;code&gt;x, y, width, height&lt;/code&gt; 、ページのどの部分を再描画した説明プロパティ。場合 &lt;code&gt;onlyDirty&lt;/code&gt; がに設定されている &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;frameBuffer&lt;/code&gt; のみ再描画エリアが含まれます。 &lt;code&gt;onlyDirty&lt;/code&gt; のデフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c5707b2df74c96454b74f8fd72d18b93f28eca83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dirtyRect&lt;/code&gt; is an object with &lt;code&gt;x, y, width, height&lt;/code&gt; properties that describes which part of the page was repainted. If &lt;code&gt;onlyDirty&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;image&lt;/code&gt; will only contain the repainted area. &lt;code&gt;onlyDirty&lt;/code&gt; defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dirtyRect&lt;/code&gt; を持つオブジェクトである &lt;code&gt;x, y, width, height&lt;/code&gt; 、ページのどの部分を再描画した説明プロパティ。場合 &lt;code&gt;onlyDirty&lt;/code&gt; がに設定されている &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;image&lt;/code&gt; のみ再描画エリアが含まれます。 &lt;code&gt;onlyDirty&lt;/code&gt; のデフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="05f576a2a158a83cd7ce5968c7932e1f336b7007" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;downloadItem&lt;/code&gt; object has the following methods:</source>
          <target state="translated">&lt;code&gt;downloadItem&lt;/code&gt; のオブジェクトは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="ed6c50abf3a121448cce42cd5e2c77e7b44b0029" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;electron&lt;/code&gt; module exposes features in namespaces. As examples, the lifecycle of the application is managed through &lt;code&gt;electron.app&lt;/code&gt;, windows can be created using the &lt;code&gt;electron.BrowserWindow&lt;/code&gt; class. A simple &lt;code&gt;main.js&lt;/code&gt; file might wait for the application to be ready and open a window:</source>
          <target state="translated">&lt;code&gt;electron&lt;/code&gt; モジュールが公開する名前空間でいただけます。例として、アプリケーションのライフサイクルは &lt;code&gt;electron.app&lt;/code&gt; によって管理され、ウィンドウは &lt;code&gt;electron.BrowserWindow&lt;/code&gt; クラスを使用して作成できます。単純な &lt;code&gt;main.js&lt;/code&gt; ファイルは、アプリケーションの準備が整い、ウィンドウを開くのを待つ場合があります。</target>
        </trans-unit>
        <trans-unit id="9e713198ae5aa3d7860ac6a3ebb58bc755e36869" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;eval()&lt;/code&gt; method has precisely one mission: To evaluate a series of characters as JavaScript and execute it. It is a required method whenever you need to evaluate code that is not known ahead of time. While legitimate use cases exist, like any other code generators, &lt;code&gt;eval()&lt;/code&gt; is difficult to harden.</source>
          <target state="translated">&lt;code&gt;eval()&lt;/code&gt; JavaScriptなどの一連の文字を評価し、それを実行するには、次の方法では正確に1つの使命を持っています。これは、事前に知られていないコードを評価する必要がある場合は常に必要な方法です。他のコードジェネレーターと同様に、正当なユースケースが存在しますが、 &lt;code&gt;eval()&lt;/code&gt; を強化することは困難です。</target>
        </trans-unit>
        <trans-unit id="019cd8312f1a5fda260bfd332d18f88cd5919fe5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;event&lt;/code&gt; object passed to the &lt;code&gt;callback&lt;/code&gt; has the following methods:</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; に渡されたオブジェクト &lt;code&gt;callback&lt;/code&gt; 次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="1484f670254f7728dcc21a8bf78f8824b5ccef06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;event&lt;/code&gt; that is passed as the first argument to the handler is the same as that passed to a regular event listener. It includes information about which WebContents is the source of the invoke request.</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; ハンドラの最初の引数として渡され、通常のイベントリスナーに渡されたものと同じです。これには、どのWebContentsが呼び出し要求のソースであるかに関する情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="e24c53e04a1e278fe4236904cb31e9fccf0e561f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extensions&lt;/code&gt; array should contain extensions without wildcards or dots (e.g. &lt;code&gt;'png'&lt;/code&gt; is good but &lt;code&gt;'.png'&lt;/code&gt; and &lt;code&gt;'*.png'&lt;/code&gt; are bad). To show all files, use the &lt;code&gt;'*'&lt;/code&gt; wildcard (no other wildcard is supported).</source>
          <target state="translated">&lt;code&gt;extensions&lt;/code&gt; アレイは、ワイルドカードまたはドットなしの拡張機能が含まれている必要があり（例えば &lt;code&gt;'png'&lt;/code&gt; は良いが、ある &lt;code&gt;'.png'&lt;/code&gt; や &lt;code&gt;'*.png'&lt;/code&gt; 悪いです）。すべてのファイルを表示するには、 &lt;code&gt;'*'&lt;/code&gt; ワイルドカードを使用します（他のワイルドカードはサポートされていません）。</target>
        </trans-unit>
        <trans-unit id="f3d501c675b0d84ae308df640a7d8d0a5378ef74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;features&lt;/code&gt; string follows the format of standard browser, but each feature has to be a field of &lt;code&gt;BrowserWindow&lt;/code&gt;'s options.</source>
          <target state="translated">&lt;code&gt;features&lt;/code&gt; 文字列は、標準的なブラウザのフォーマットに従うが、それぞれの特徴は、の分野でなければなら &lt;code&gt;BrowserWindow&lt;/code&gt; のオプション。</target>
        </trans-unit>
        <trans-unit id="0e06ba78b18a7e834f14843666d6044886313491" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;features&lt;/code&gt; string follows the format of standard browser, but each feature has to be a field of &lt;code&gt;BrowserWindow&lt;/code&gt;'s options. These are the features you can set via &lt;code&gt;features&lt;/code&gt; string: &lt;code&gt;zoomFactor&lt;/code&gt;, &lt;code&gt;nodeIntegration&lt;/code&gt;, &lt;code&gt;preload&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;contextIsolation&lt;/code&gt;, &lt;code&gt;webviewTag&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;features&lt;/code&gt; 文字列は、標準的なブラウザのフォーマットに従うが、それぞれの特徴は、の分野でなければなら &lt;code&gt;BrowserWindow&lt;/code&gt; のオプション。これらは、機能文字列を介し &lt;code&gt;features&lt;/code&gt; 設定できる機能です： &lt;code&gt;zoomFactor&lt;/code&gt; 、 &lt;code&gt;nodeIntegration&lt;/code&gt; 、 &lt;code&gt;preload&lt;/code&gt; 、 &lt;code&gt;javascript&lt;/code&gt; 、 &lt;code&gt;contextIsolation&lt;/code&gt; 、 &lt;code&gt;webviewTag&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94ffd4d3baf2d1de08f14cfdc6edb75368339278" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; object has a &lt;code&gt;urls&lt;/code&gt; property which is an Array of URL patterns that will be used to filter out the requests that do not match the URL patterns. If the &lt;code&gt;filter&lt;/code&gt; is omitted then all requests will be matched.</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; オブジェクトが持ってい &lt;code&gt;urls&lt;/code&gt; URLパターンに一致しない要求をフィルタリングするために使用されるURLパターンの配列である性質を。場合は &lt;code&gt;filter&lt;/code&gt; 省略されたすべての要求がマッチします。</target>
        </trans-unit>
        <trans-unit id="bfee38503c0250eb4e4343bcbcc1335f4e55bda4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filters&lt;/code&gt; specifies an array of file types that can be displayed or selected when you want to limit the user to a specific type. For example:</source>
          <target state="translated">&lt;code&gt;filters&lt;/code&gt; 使用すると、特定の種類にユーザーを制限したいときに表示または選択可能なファイルタイプの配列を指定します。例えば：</target>
        </trans-unit>
        <trans-unit id="2a171949c0c23f49efff8c99983f73afc8dcbb4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filters&lt;/code&gt; specifies an array of file types that can be displayed, see &lt;code&gt;dialog.showOpenDialog&lt;/code&gt; for an example.</source>
          <target state="translated">&lt;code&gt;filters&lt;/code&gt; 、表示可能なファイルタイプの配列を指定し、参照 &lt;code&gt;dialog.showOpenDialog&lt;/code&gt; を例えば。</target>
        </trans-unit>
        <trans-unit id="1111c9edc37ca4ec0da599ababcc1c555f969fba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flags&lt;/code&gt; is an array that can include following &lt;code&gt;String&lt;/code&gt;s:</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; 以下を含むことができる配列である &lt;code&gt;String&lt;/code&gt; S：</target>
        </trans-unit>
        <trans-unit id="1efcf6d7d014bb9491f1998332ceaecd85bc09ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;frameBuffer&lt;/code&gt; is a &lt;code&gt;Buffer&lt;/code&gt; that contains raw pixel data. On most machines, the pixel data is effectively stored in 32bit BGRA format, but the actual representation depends on the endianness of the processor (most modern processors are little-endian, on machines with big-endian processors the data is in 32bit ARGB format).</source>
          <target state="translated">&lt;code&gt;frameBuffer&lt;/code&gt; ある &lt;code&gt;Buffer&lt;/code&gt; 生のピクセルデータを含みます。ほとんどのマシンでは、ピクセルデータは32ビットBGRA形式で効果的に保存されますが、実際の表現はプロセッサのエンディアンに依存します（最新のほとんどのプロセッサはリトルエンディアンで、ビッグエンディアンプロセッサを搭載したマシンでは、データは32ビットARGB形式です） 。</target>
        </trans-unit>
        <trans-unit id="9fcc494ee17ffd205cbbac07d73e00106aaa27c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;globalShortcut&lt;/code&gt; module can register/unregister a global keyboard shortcut with the operating system so that you can customize the operations for various shortcuts.</source>
          <target state="translated">&lt;code&gt;globalShortcut&lt;/code&gt; のさまざまなショートカットの操作をカスタマイズできるように、モジュールは、オペレーティングシステムとグローバルなキーボードショートカット登録/登録解除することができます。</target>
        </trans-unit>
        <trans-unit id="e81a564399a9942cb864d440b50ddece338d8694" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;globalShortcut&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;globalShortcut&lt;/code&gt; のモジュールは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="6e46ae7cad787cdb21735231e0621ab5e4b87b0e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hslShift&lt;/code&gt; is applied to the image with the following rules</source>
          <target state="translated">&lt;code&gt;hslShift&lt;/code&gt; は、以下の規則を用いて画像に適用されます</target>
        </trans-unit>
        <trans-unit id="ecc6e74f03e91f68a0be2a946efbf193daaabedb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hslShift&lt;/code&gt; is applied to the image with the following rules:</source>
          <target state="translated">&lt;code&gt;hslShift&lt;/code&gt; は、以下の規則を用いて画像に適用されます。</target>
        </trans-unit>
        <trans-unit id="011be400a53eb4b292815de9c842d46cdff7274b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; of the subscriber is returned, which can be used to unsubscribe the &lt;code&gt;event&lt;/code&gt;.</source>
          <target state="translated">サブスクライバーの &lt;code&gt;id&lt;/code&gt; が返されます。これを使用して、 &lt;code&gt;event&lt;/code&gt; サブスクライブを解除できます。</target>
        </trans-unit>
        <trans-unit id="61643242f052f9128e83be2805169e23dabef88b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;image&lt;/code&gt; is an instance of &lt;a href=&quot;native-image&quot;&gt;NativeImage&lt;/a&gt; that stores the captured frame.</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; のインスタンスである&lt;a href=&quot;native-image&quot;&gt;NativeImage&lt;/a&gt;撮像されたフレームを格納します。</target>
        </trans-unit>
        <trans-unit id="2fc3adee636a52c8789e208afca9c876a4f682fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inAppPurchase&lt;/code&gt; module emits the following events:</source>
          <target state="translated">&lt;code&gt;inAppPurchase&lt;/code&gt; のモジュールは、以下のイベントを発します。</target>
        </trans-unit>
        <trans-unit id="f56c660b8b8c9904524895909d5a74c1b2fbb582" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inAppPurchase&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;inAppPurchase&lt;/code&gt; のモジュールは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="ab1ca8815860d303d79a089caeff3d0180d98ef6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index.html&lt;/code&gt; page looks as follows:</source>
          <target state="translated">&lt;code&gt;index.html&lt;/code&gt; を次のようにページのルックス</target>
        </trans-unit>
        <trans-unit id="1fb362b5518a8a407a6aad6446c86825b49e86e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcMain&lt;/code&gt; module has the following method to listen for events:</source>
          <target state="translated">&lt;code&gt;ipcMain&lt;/code&gt; のモジュールは、イベントをリッスンするには、次の方法があります。</target>
        </trans-unit>
        <trans-unit id="799cb22abf53ac18f7e35a78926152d8f3c3520d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcMain&lt;/code&gt; module is an &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;Event Emitter&lt;/a&gt;. When used in the main process, it handles asynchronous and synchronous messages sent from a renderer process (web page). Messages sent from a renderer will be emitted to this module.</source>
          <target state="translated">&lt;code&gt;ipcMain&lt;/code&gt; のモジュールは、ある&lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;イベント・エミッター&lt;/a&gt;。メインプロセスで使用される場合、レンダラープロセス（Webページ）から送信される非同期メッセージと同期メッセージを処理します。レンダラーから送信されたメッセージは、このモジュールに送信されます。</target>
        </trans-unit>
        <trans-unit id="b7799500275679df5ddea761fe0657908f30a1ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcMain&lt;/code&gt; module is an instance of the &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter&lt;/a&gt; class. When used in the main process, it handles asynchronous and synchronous messages sent from a renderer process (web page). Messages sent from a renderer will be emitted to this module.</source>
          <target state="translated">&lt;code&gt;ipcMain&lt;/code&gt; のモジュールのインスタンスである&lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;持つEventEmitterの&lt;/a&gt;クラス。メインプロセスで使用すると、レンダラープロセス（Webページ）から送信された非同期メッセージと同期メッセージを処理します。レンダラーから送信されたメッセージは、このモジュールに送信されます。</target>
        </trans-unit>
        <trans-unit id="8265e24d240bfe6a3dfe63b6b278908fe5d9519a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcRenderer&lt;/code&gt; module has the following method to listen for events and send messages:</source>
          <target state="translated">&lt;code&gt;ipcRenderer&lt;/code&gt; のモジュールは、イベントと送信メッセージを受信するには、次の方法があります。</target>
        </trans-unit>
        <trans-unit id="6a04ee93438711fecc8dc44f744c3e356c0065bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcRenderer&lt;/code&gt; module is an &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter&lt;/a&gt;. It provides a few methods so you can send synchronous and asynchronous messages from the render process (web page) to the main process. You can also receive replies from the main process.</source>
          <target state="translated">&lt;code&gt;ipcRenderer&lt;/code&gt; のモジュールがある&lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;持つEventEmitter&lt;/a&gt;。レンダリングプロセス（Webページ）からメインプロセスに同期および非同期メッセージを送信できるように、いくつかのメソッドが用意されています。メインプロセスから返信を受け取ることもできます。</target>
        </trans-unit>
        <trans-unit id="0c51c2ec9e808b95e61dd514549310ac0facf95f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcRenderer&lt;/code&gt; module is an instance of the &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter&lt;/a&gt; class. It provides a few methods so you can send synchronous and asynchronous messages from the render process (web page) to the main process. You can also receive replies from the main process.</source>
          <target state="translated">&lt;code&gt;ipcRenderer&lt;/code&gt; のモジュールのインスタンスである&lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;持つEventEmitterの&lt;/a&gt;クラス。レンダリングプロセス（Webページ）からメインプロセスに同期メッセージと非同期メッセージを送信できるように、いくつかのメソッドが提供されています。また、メインプロセスから返信を受け取ることもできます。</target>
        </trans-unit>
        <trans-unit id="300264d1e0671551832d554597a0bc97a0d28e8c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; and &lt;code&gt;accelerator&lt;/code&gt; values are optional when using a &lt;code&gt;role&lt;/code&gt; and will default to appropriate values for each platform.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; や &lt;code&gt;accelerator&lt;/code&gt; 使用した場合の値はオプションで &lt;code&gt;role&lt;/code&gt; し、各プラットフォームの値を適切にデフォルト設定されます。</target>
        </trans-unit>
        <trans-unit id="af38248cb8f69543f813cdf21b3e807251021ee5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;landscape&lt;/code&gt; will be ignored if &lt;code&gt;@page&lt;/code&gt; CSS at-rule is used in the web page.</source>
          <target state="translated">&lt;code&gt;landscape&lt;/code&gt; あれば無視されます &lt;code&gt;@page&lt;/code&gt; で、ルールCSSをWebページで使用されています。</target>
        </trans-unit>
        <trans-unit id="dbf959665216876f492e4618b1a0129bb27d0817" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; just before a request is going to be sent to the server, modifications of previous &lt;code&gt;onBeforeSendHeaders&lt;/code&gt; response are visible by the time this listener is fired.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; で呼び出されます &lt;code&gt;listener(details)&lt;/code&gt; 要求がサーバに送信されようとしている直前に、以前の修正 &lt;code&gt;onBeforeSendHeaders&lt;/code&gt; が応答このリスナーが起動された時点で表示されます。</target>
        </trans-unit>
        <trans-unit id="9215c04064a4ed2450d3abb28463a9e692fda80d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when a request is completed.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; で呼び出される &lt;code&gt;listener(details)&lt;/code&gt; 要求が完了したとき。</target>
        </trans-unit>
        <trans-unit id="5518520eb40cc63810d6c31a0f90284102462216" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when a server initiated redirect is about to occur.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; で呼び出される &lt;code&gt;listener(details)&lt;/code&gt; サーバが開始リダイレクトが発生しようとしているとき。</target>
        </trans-unit>
        <trans-unit id="be75ee692d0f3eca2c167129b260d4ce5a1fe1a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when an error occurs.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; で呼び出される &lt;code&gt;listener(details)&lt;/code&gt; エラーが発生したとき。</target>
        </trans-unit>
        <trans-unit id="f164f04e3efe8be2764610b61e71394fe5d505d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when first byte of the response body is received. For HTTP requests, this means that the status line and response headers are available.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; で呼び出される &lt;code&gt;listener(details)&lt;/code&gt; レスポンスボディの最初のバイトを受信したとき。HTTP要求の場合、これはステータス行と応答ヘッダーが利用可能であることを意味します。</target>
        </trans-unit>
        <trans-unit id="ba486b1778a17fa02402e64a5245797eeb7c813d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details, callback)&lt;/code&gt; before sending an HTTP request, once the request headers are available. This may occur after a TCP connection is made to the server, but before any http data is sent.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; で呼び出される &lt;code&gt;listener(details, callback)&lt;/code&gt; リクエストヘッダが用意されていたら、HTTPリクエストを送信する前に。これは、サーバーへのTCP接続が行われた後、httpデータが送信される前に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="5c0db93f48b5d14a434faf475fdbe51cc74f2ac6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details, callback)&lt;/code&gt; when HTTP response headers of a request have been received.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; で呼び出される &lt;code&gt;listener(details, callback)&lt;/code&gt; 要求のHTTP応答ヘッダーが受信された場合。</target>
        </trans-unit>
        <trans-unit id="c9f8325f73304e0b2fc67501df6524daf1b7ae9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details, callback)&lt;/code&gt; when a request is about to occur.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; で呼び出される &lt;code&gt;listener(details, callback)&lt;/code&gt; 要求が発生しようとしているとき。</target>
        </trans-unit>
        <trans-unit id="40e21ff6cd4033f75abd16fef09a34ef9cbb8db5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;main.js&lt;/code&gt; should create windows and handle all the system events your application might encounter. A more complete version of the above example might open developer tools, handle the window being closed, or re-create windows on macOS if the user clicks on the app's icon in the dock.</source>
          <target state="translated">&lt;code&gt;main.js&lt;/code&gt; は、ウィンドウを作成し、アプリケーションが発生する可能性のあるすべてのシステムイベントを処理する必要があります。上記の例のより完全なバージョンでは、ユーザーがドック内のアプリのアイコンをクリックした場合、開発者ツールを開いたり、閉じられているウィンドウを処理したり、macOSでウィンドウを再作成したりできます。</target>
        </trans-unit>
        <trans-unit id="e156f3425bc64cf234216f3a4ad15f1262e55180" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;master&lt;/code&gt; branch is versionless; only stabilization branches contain version information</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; ブランチはバージョンなしです。安定化ブランチのみにバージョン情報が含まれています</target>
        </trans-unit>
        <trans-unit id="cd69d2937edbb31950318c4602ffe9667bf7641d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;master&lt;/code&gt; branch will always contain &lt;code&gt;0.0.0-dev&lt;/code&gt; in its &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; ブランチは常に含まれています &lt;code&gt;0.0.0-dev&lt;/code&gt; のが、その中で &lt;code&gt;package.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c58ca172263a9ff47ab2ca4db3374a477fed359e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;master&lt;/code&gt; branch will always contain the next major version &lt;code&gt;X.0.0-nightly.DATE&lt;/code&gt; in its &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; ブランチは、常に次のメジャーバージョンが含まれます &lt;code&gt;X.0.0-nightly.DATE&lt;/code&gt; その中 &lt;code&gt;package.json&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="6d44a4be769d34f100f7fffaa317dd46cca03d7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;menu&lt;/code&gt; class has the following static methods:</source>
          <target state="translated">&lt;code&gt;menu&lt;/code&gt; クラスには、次の静的メソッドがあります。</target>
        </trans-unit>
        <trans-unit id="92922bc283ff2b5f563f918d93e631fae8ea780e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;menu&lt;/code&gt; object has the following instance methods:</source>
          <target state="translated">&lt;code&gt;menu&lt;/code&gt; オブジェクトは、以下のインスタンスメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="f6d9d983763e23320f63c15ebadcfd58353d5512" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; argument is not used, as the OS provides its own confirmation dialog.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; OSは、独自の確認ダイアログを提供して引数が、使用されていません。</target>
        </trans-unit>
        <trans-unit id="0d8e2ef655fd474b07350ac6c7ca3a95b52fd785" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nativeImage&lt;/code&gt; module has the following methods, all of which return an instance of the &lt;code&gt;NativeImage&lt;/code&gt; class:</source>
          <target state="translated">&lt;code&gt;nativeImage&lt;/code&gt; のモジュールのインスタンスを返すすべては、以下の方法、有する &lt;code&gt;NativeImage&lt;/code&gt; のクラス：</target>
        </trans-unit>
        <trans-unit id="8a8f247e521de82779087b97aca5bc14a37f22c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;navigator.onLine&lt;/code&gt; attribute returns:</source>
          <target state="translated">&lt;code&gt;navigator.onLine&lt;/code&gt; の属性を返します：</target>
        </trans-unit>
        <trans-unit id="a528025aee2b6d56eef29e9a2494554d6c37e589" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;net&lt;/code&gt; API can be used only after the application emits the &lt;code&gt;ready&lt;/code&gt; event. Trying to use the module before the &lt;code&gt;ready&lt;/code&gt; event will throw an error.</source>
          <target state="translated">&lt;code&gt;net&lt;/code&gt; アプリケーションが発した後にのみAPIを使用することができます &lt;code&gt;ready&lt;/code&gt; イベントを。 &lt;code&gt;ready&lt;/code&gt; イベントの前にモジュールを使用しようとすると、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="10e9fc6061228c1537b0f0d93df762eb2393612c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;net&lt;/code&gt; module API has been specifically designed to mimic, as closely as possible, the familiar Node.js API. The API components including classes, methods, properties and event names are similar to those commonly used in Node.js.</source>
          <target state="translated">&lt;code&gt;net&lt;/code&gt; モジュールのAPIは、具体的には、可能な限り厳密に、模倣に馴染みのNode.jsのAPIを設計されています。クラス、メソッド、プロパティ、イベント名などのAPIコンポーネントは、Node.jsで一般的に使用されるものと似ています。</target>
        </trans-unit>
        <trans-unit id="e4e31f2daa5204b7f21cf12768d4fdc274b416c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;net&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;net&lt;/code&gt; モジュールは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="b747748bc902166a3602c80be0b1f6495180c577" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;net&lt;/code&gt; module is a client-side API for issuing HTTP(S) requests. It is similar to the &lt;a href=&quot;https://nodejs.org/api/http.html&quot;&gt;HTTP&lt;/a&gt; and &lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS&lt;/a&gt; modules of Node.js but uses Chromium's native networking library instead of the Node.js implementation, offering better support for web proxies.</source>
          <target state="translated">&lt;code&gt;net&lt;/code&gt; モジュールは、HTTP（S）要求を発行するクライアント側のAPIです。Node.jsの&lt;a href=&quot;https://nodejs.org/api/http.html&quot;&gt;HTTP&lt;/a&gt;および&lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS&lt;/a&gt;モジュールに似ていますが、Node.js実装の代わりにChromiumのネイティブネットワークライブラリを使用しており、ウェブプロキシのサポートが向上しています。</target>
        </trans-unit>
        <trans-unit id="cb922a08b94d3505f969ca109b706e874110a130" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nodeIntegrationInWorker&lt;/code&gt; can be used independent of &lt;code&gt;nodeIntegration&lt;/code&gt;, but &lt;code&gt;sandbox&lt;/code&gt; must not be set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nodeIntegrationInWorker&lt;/code&gt; はの使用独立することができ &lt;code&gt;nodeIntegration&lt;/code&gt; が、 &lt;code&gt;sandbox&lt;/code&gt; に設定することはできません &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c47a049c4a4dae52e5e376f202bbf8e2c90ea416" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;plist&lt;/code&gt; file referenced here needs the following macOS-specific entitlements to assure the Apple security mechanisms that your app is doing these things without meaning any harm:</source>
          <target state="translated">&lt;code&gt;plist&lt;/code&gt; ここで参照されるファイルは、アプリケーションが任意の害を意味せずにこれらの事をやっているアップルのセキュリティメカニズムを確保するために、次のMacOS固有の資格が必要です。</target>
        </trans-unit>
        <trans-unit id="b6581436836cfa57252c1cca1308513606ec18ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;position&lt;/code&gt; attribute of &lt;code&gt;MenuItem&lt;/code&gt; has the form &lt;code&gt;[placement]=[id]&lt;/code&gt;, where &lt;code&gt;placement&lt;/code&gt; is one of &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;after&lt;/code&gt;, or &lt;code&gt;endof&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; is the unique ID of an existing item in the menu:</source>
          <target state="translated">&lt;code&gt;MenuItem&lt;/code&gt; の &lt;code&gt;position&lt;/code&gt; 属性の形式は &lt;code&gt;[placement]=[id]&lt;/code&gt; です。ここで、 &lt;code&gt;placement&lt;/code&gt; は &lt;code&gt;before&lt;/code&gt; 、 &lt;code&gt;after&lt;/code&gt; 、または &lt;code&gt;endof&lt;/code&gt; のいずれかであり、 &lt;code&gt;id&lt;/code&gt; はメニュー内の既存のアイテムの一意のIDです。</target>
        </trans-unit>
        <trans-unit id="35cc56a47175cc5030b31c1cf856950911375160" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;position&lt;/code&gt; is only available on Windows, and it is (0, 0) by default.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; Windows上でのみ利用可能であり、それはデフォルトで（0、0）です。</target>
        </trans-unit>
        <trans-unit id="6b0d3989f4c443dde3dd1eab4ce1bf29d8645057" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;powerMonitor&lt;/code&gt; module emits the following events:</source>
          <target state="translated">&lt;code&gt;powerMonitor&lt;/code&gt; モジュールは、以下のイベントを発します。</target>
        </trans-unit>
        <trans-unit id="018a688e37f639c9e3bb1353e6652d6c722bb8b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;powerMonitor&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;powerMonitor&lt;/code&gt; モジュールは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="d1d8528431e6e2308391f888af7a45db060216b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;powerSaveBlocker&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;powerSaveBlocker&lt;/code&gt; のモジュールは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="358dd2d79dff7a34bd03fa85e1fe7c4751948f15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prepare-release&lt;/code&gt; script will trigger the builds via API calls. To monitor the build progress, see the following pages:</source>
          <target state="translated">&lt;code&gt;prepare-release&lt;/code&gt; トリガされるスクリプトは、API呼び出しを経由して構築します。ビルドの進行状況を監視するには、次のページを参照してください。</target>
        </trans-unit>
        <trans-unit id="bb25017d09d12310bf78c3b0b503ec32d098fa15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;process&lt;/code&gt; object has the following methods:</source>
          <target state="translated">&lt;code&gt;process&lt;/code&gt; オブジェクトは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="e0b2e6e59ddf7a1cdc951ec5bbde5679ce338514" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;process&lt;/code&gt; object in the main process. This is the same as &lt;code&gt;remote.getGlobal('process')&lt;/code&gt; but is cached.</source>
          <target state="translated">メインプロセスの &lt;code&gt;process&lt;/code&gt; オブジェクト。これは &lt;code&gt;remote.getGlobal('process')&lt;/code&gt; と同じですが、キャッシュされます。</target>
        </trans-unit>
        <trans-unit id="c114dda8df33944bf9644233ca4e48b6741e79dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;protocol&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;protocol&lt;/code&gt; モジュールは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="4f260ad95c2c467078099895f94289821e51b3cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provider&lt;/code&gt; must be an object that has a &lt;code&gt;spellCheck&lt;/code&gt; method that accepts an array of individual words for spellchecking. The &lt;code&gt;spellCheck&lt;/code&gt; function runs asynchronously and calls the &lt;code&gt;callback&lt;/code&gt; function with an array of misspelt words when complete.</source>
          <target state="translated">&lt;code&gt;provider&lt;/code&gt; 持っているオブジェクトでなければならない &lt;code&gt;spellCheck&lt;/code&gt; スペルチェックのための個々の単語の配列を受け入れる方法。 &lt;code&gt;spellCheck&lt;/code&gt; 機能は非同期に実行され、呼び出し、 &lt;code&gt;callback&lt;/code&gt; の完全なスペルミスの単語の配列と機能を。</target>
        </trans-unit>
        <trans-unit id="dd616142c9b1da65c3cad2b3338fafedd2935f8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provider&lt;/code&gt; must be an object that has a &lt;code&gt;spellCheck&lt;/code&gt; method that returns whether the word passed is correctly spelled.</source>
          <target state="translated">&lt;code&gt;provider&lt;/code&gt; 持っているオブジェクトでなければなりません &lt;code&gt;spellCheck&lt;/code&gt; 渡さ単語のスペルが正しいかどうかを返すという方法を。</target>
        </trans-unit>
        <trans-unit id="1fd33f21d8a009f756ed1aac013d5fd3de5b45b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxyBypassRules&lt;/code&gt; is a comma separated list of rules described below:</source>
          <target state="translated">&lt;code&gt;proxyBypassRules&lt;/code&gt; は、ルールのリストをコンマで分離されて以下に説明します。</target>
        </trans-unit>
        <trans-unit id="58404a68412b49fd1cbbe75d295d8fc17f95948c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxyRules&lt;/code&gt; has to follow the rules below:</source>
          <target state="translated">&lt;code&gt;proxyRules&lt;/code&gt; は、以下の規則に従うことがあります。</target>
        </trans-unit>
        <trans-unit id="84bbd26f2ff6ec1962ac441f908309e1bc7a83db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remote&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;remote&lt;/code&gt; モジュールは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="1298a808b09704a87ed114a571e897e21d45a884" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remote&lt;/code&gt; module provides a simple way to do inter-process communication (IPC) between the renderer process (web page) and the main process.</source>
          <target state="translated">&lt;code&gt;remote&lt;/code&gt; モジュールは、レンダリングプロセス（ウェブページ）とメインプロセス間のプロセス間通信（IPC）を行うための簡単な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="ac7cd5aa12f3dee0c0a6677217d780d040d2a73f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remote&lt;/code&gt; module provides a way for the renderer processes to access APIs normally only available in the main process. Using it, a renderer can invoke methods of a main process object without explicitly sending inter-process messages. If your desktop application does not run untrusted content, this can be a useful way to have your renderer processes access and work with modules that are only available to the main process, such as GUI-related modules (dialogs, menus, etc.).</source>
          <target state="translated">&lt;code&gt;remote&lt;/code&gt; モジュールは、メインプロセスに通常のみ利用可能なアクセスAPIへレンダラープロセスのための方法を提供します。これを使用すると、レンダラーは、プロセス間メッセージを明示的に送信せずに、メインプロセスオブジェクトのメソッドを呼び出すことができます。デスクトップアプリケーションが信頼できないコンテンツを実行しない場合、これは、レンダラープロセスに、GUI関連モジュール（ダイアログ、メニューなど）などのメインプロセスでのみ使用可能なモジュールにアクセスして操作させるための便利な方法です。</target>
        </trans-unit>
        <trans-unit id="46d7df063ac5a3584ba0b77532f9778df1196547" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;repl&lt;/code&gt; module provides a REPL implementation that can be accessed using:</source>
          <target state="translated">&lt;code&gt;repl&lt;/code&gt; モジュールを使用してアクセスすることができるREPLの実装を提供します。</target>
        </trans-unit>
        <trans-unit id="e36ba45cd5d963c9a70566790479735504ca487a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;role&lt;/code&gt; property can have following values:</source>
          <target state="translated">&lt;code&gt;role&lt;/code&gt; プロパティは次の値を持つことができます。</target>
        </trans-unit>
        <trans-unit id="7c6608156889a4fa5318ff0313d856b3b6dc07c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;screen&lt;/code&gt; module emits the following events:</source>
          <target state="translated">&lt;code&gt;screen&lt;/code&gt; モジュールは、以下のイベントを発します。</target>
        </trans-unit>
        <trans-unit id="dc991c240048cdabdab92374361368ae85195ed1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;screen&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;screen&lt;/code&gt; モジュールは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="bbeb11871421b95c101bb5d6fb82d63e08970826" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; module can be used to create new &lt;code&gt;Session&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; モジュールは、新規作成するために使用することができる &lt;code&gt;Session&lt;/code&gt; オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="3481326c81f1d35bcca80a22390f482c4aebc224" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; モジュールは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="539734ec469f572dbdf5e703b654a370f3a5f521" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; module has the following properties:</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; モジュールは、次のプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="a2d0b0b61e564f6da294fad88765bd81248d6c52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shell&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;shell&lt;/code&gt; モジュールは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="d03d8fed6535206b4075d9c69e2a5ea3da4d9cde" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shell&lt;/code&gt; module provides functions related to desktop integration.</source>
          <target state="translated">&lt;code&gt;shell&lt;/code&gt; モジュールは、デスクトップの統合に関連した機能を提供します。</target>
        </trans-unit>
        <trans-unit id="302311f6e8c7212f24d35cc403438b58e3fd818e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; attribute can also accept data URLs, such as &lt;code&gt;data:text/plain,Hello, world!&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 属性ものようなデータのURL、受け入れることができ &lt;code&gt;data:text/plain,Hello, world!&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c038f24be666c6c8decc27728f86fa426f53c877" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;state&lt;/code&gt; can be one of following:</source>
          <target state="translated">&lt;code&gt;state&lt;/code&gt; 次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="9b3563ff6b4bb91671c2c2f2985fa055d8348c11" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;systemPreferences&lt;/code&gt; object emits the following events:</source>
          <target state="translated">&lt;code&gt;systemPreferences&lt;/code&gt; オブジェクトは、次のイベントを発します。</target>
        </trans-unit>
        <trans-unit id="50fe0225c880579bccc99b1e28f378d94787ba86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;textured&lt;/code&gt; type adds metal gradient appearance (&lt;code&gt;NSTexturedBackgroundWindowMask&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;textured&lt;/code&gt; タイプは、金属勾配外観（追加 &lt;code&gt;NSTexturedBackgroundWindowMask&lt;/code&gt; を）。</target>
        </trans-unit>
        <trans-unit id="80683066099d2b02bb828424b5205a6d8c073610" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uploadData&lt;/code&gt; is an array of &lt;code&gt;UploadData&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;uploadData&lt;/code&gt; は、の配列である &lt;code&gt;UploadData&lt;/code&gt; のオブジェクト。</target>
        </trans-unit>
        <trans-unit id="dccd2aa264a7a22e9e34024147d6e051dda98a5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; can be a remote address (e.g. &lt;code&gt;http://&lt;/code&gt;) or a path to a local HTML file using the &lt;code&gt;file://&lt;/code&gt; protocol.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; はリモートアドレス（例えばすることができ &lt;code&gt;http://&lt;/code&gt; または使用してローカルのHTMLファイルへのパス） &lt;code&gt;file://&lt;/code&gt; プロトコルを。</target>
        </trans-unit>
        <trans-unit id="a5d42dc1f925cb0dd172848fbd14de0098b1958c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; corresponds to the navigation entry requesting the client certificate and &lt;code&gt;callback&lt;/code&gt; can be called with an entry filtered from the list. Using &lt;code&gt;event.preventDefault()&lt;/code&gt; prevents the application from using the first certificate from the store.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; クライアント証明書と要求したナビゲーションのエントリに対応する &lt;code&gt;callback&lt;/code&gt; 、リストからフィルタのエントリで呼び出すことができます。 &lt;code&gt;event.preventDefault()&lt;/code&gt; を使用すると、アプリケーションがストアの最初の証明書を使用できなくなります。</target>
        </trans-unit>
        <trans-unit id="ead3e68794e45920d2721fa26bd426ca485a37fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webFrame&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;webFrame&lt;/code&gt; のモジュールは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="70bbea7daceb37cfdc1db49b4bc8447c74d9d422" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webview&lt;/code&gt; tag has the following attributes:</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; タグは次の属性があります。</target>
        </trans-unit>
        <trans-unit id="65a6f3875f9cda232f4f5eb3c5363c8e2778dfce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webview&lt;/code&gt; tag has the following methods:</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; タグは、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="32e6c35353f89ebf1e8c8929c59dafe0b5c55dc9" translate="yes" xml:space="preserve">
          <source>The API components (including classes, methods, properties and event names) are similar to those used in Node.js.</source>
          <target state="translated">APIのコンポーネント(クラス、メソッド、プロパティ、イベント名など)は、Node.jsで使用されているものと似ています。</target>
        </trans-unit>
        <trans-unit id="0a7eb9f238397f1aa98cdc508b599a5e9be67999" translate="yes" xml:space="preserve">
          <source>The API is based on the &lt;a href=&quot;https://developer.chrome.com/extensions/permissions&quot;&gt;Chromium permissions API&lt;/a&gt; and implements the same types of permissions.</source>
          <target state="translated">APIは&lt;a href=&quot;https://developer.chrome.com/extensions/permissions&quot;&gt;Chromium権限APIに&lt;/a&gt;基づいており、同じタイプの権限を実装します。</target>
        </trans-unit>
        <trans-unit id="bf3b1592ea369c6aee1bcc228913fb6a081059b1" translate="yes" xml:space="preserve">
          <source>The API is only available in session's &lt;code&gt;will-download&lt;/code&gt; callback function. If user doesn't set the save path via the API, Electron will use the original routine to determine the save path(Usually prompts a save dialog).</source>
          <target state="translated">APIは、セッションの &lt;code&gt;will-download&lt;/code&gt; コールバック関数でのみ使用できます。ユーザーがAPI経由で保存パスを設定しない場合、Electronは元のルーチンを使用して保存パスを決定します（通常、保存ダイアログが表示されます）。</target>
        </trans-unit>
        <trans-unit id="51b160a8a181f0a625c24b9264c033a6defad374" translate="yes" xml:space="preserve">
          <source>The API is only available in session's &lt;code&gt;will-download&lt;/code&gt; callback function. If user doesn't set the save path via the API, Electron will use the original routine to determine the save path; this usually prompts a save dialog.</source>
          <target state="translated">APIは、セッションの &lt;code&gt;will-download&lt;/code&gt; コールバック関数でのみ使用できます。ユーザーがAPIを介して保存パスを設定しない場合、Electronは元のルーチンを使用して保存パスを決定します。これは通常、保存ダイアログを表示します。</target>
        </trans-unit>
        <trans-unit id="5c098cc4ca7b56b4cf0ed6b18ec7ce38c3b5c4ee" translate="yes" xml:space="preserve">
          <source>The API uses the Windows Registry and &lt;code&gt;LSCopyDefaultHandlerForURLScheme&lt;/code&gt; internally.</source>
          <target state="translated">APIは、Windowsレジストリと &lt;code&gt;LSCopyDefaultHandlerForURLScheme&lt;/code&gt; を内部的に使用します。</target>
        </trans-unit>
        <trans-unit id="5115a3dd44401c8431877c98d697deb529a51250" translate="yes" xml:space="preserve">
          <source>The API uses the Windows Registry and &lt;code&gt;LSSetDefaultHandlerForURLScheme&lt;/code&gt; internally.</source>
          <target state="translated">APIは、Windowsレジストリと &lt;code&gt;LSSetDefaultHandlerForURLScheme&lt;/code&gt; を内部的に使用します。</target>
        </trans-unit>
        <trans-unit id="75917ee7ddf41b2b07e7b99872a198b129538a14" translate="yes" xml:space="preserve">
          <source>The API uses the Windows Registry and LSCopyDefaultHandlerForURLScheme internally.</source>
          <target state="translated">API は Windows レジストリと LSCopyDefaultHandlerForURLScheme を内部的に使用します。</target>
        </trans-unit>
        <trans-unit id="3ec55df529521dd3ab286f51777a4f69e7c047b5" translate="yes" xml:space="preserve">
          <source>The API uses the Windows Registry and LSSetDefaultHandlerForURLScheme internally.</source>
          <target state="translated">APIはWindowsレジストリとLSSetDefaultHandlerForURLSchemeを内部的に使用します。</target>
        </trans-unit>
        <trans-unit id="6bcad7f559199b16f00560b8d1f569927742f9ea" translate="yes" xml:space="preserve">
          <source>The ASAR format was created primarily to improve performance on Windows... TODO</source>
          <target state="translated">ASARフォーマットは、主にWindows上でのパフォーマンスを向上させるために作成されました...TODO</target>
        </trans-unit>
        <trans-unit id="679cc05bca3e1e8fd7b8d049e0a3d3d37f22503c" translate="yes" xml:space="preserve">
          <source>The C Run-time Library (CRT) is the part of the C++ Standard Library that incorporates the ISO C99 standard library. The Visual C++ libraries that implement the CRT support native code development, and both mixed native and managed code, and pure managed code for .NET development.</source>
          <target state="translated">C ランタイム・ライブラリ(CRT)は、ISO C99 標準ライブラリを組み込んだ C++標準ライブラリの一部です。CRT を実装する Visual C++ライブラリは、ネイティブ コード開発、ネイティブ コードとマネージド コードの混在、および .NET 開発用の純粋なマネージド コードをサポートしています。</target>
        </trans-unit>
        <trans-unit id="a6ab9ef9b58e1d430a986bb1158e6a2dd7ba3b55" translate="yes" xml:space="preserve">
          <source>The C++ code uses a lot of Chromium's abstractions and types, so it's recommended to get acquainted with them. A good place to start is Chromium's &lt;a href=&quot;https://www.chromium.org/developers/coding-style/important-abstractions-and-data-structures&quot;&gt;Important Abstractions and Data Structures&lt;/a&gt; document. The document mentions some special types, scoped types (that automatically release their memory when going out of scope), logging mechanisms etc.</source>
          <target state="translated">C ++コードは、Chromiumの多くの抽象化と型を使用するため、それらを理解することをお勧めします。まず始めに、Chromiumの&lt;a href=&quot;https://www.chromium.org/developers/coding-style/important-abstractions-and-data-structures&quot;&gt;重要な抽象化とデータ構造の&lt;/a&gt;ドキュメントをご覧ください。このドキュメントでは、いくつかの特別なタイプ、スコープタイプ（スコープから外れたときに自動的にメモリを解放する）、ロギングメカニズムなどについて言及しています。</target>
        </trans-unit>
        <trans-unit id="7d900f892d2734b5afc607fbf947c8bb0f3c75b5" translate="yes" xml:space="preserve">
          <source>The Chrome version of Electron is usually bumped within one or two weeks after a new stable Chrome version gets released. This estimate is not guaranteed and depends on the amount of work involved with upgrading.</source>
          <target state="translated">Electron の Chrome バージョンは通常、新しい安定版の Chrome バージョンがリリースされてから 1~2 週間以内にアップグレードされます。この見積もりは保証されたものではなく、アップグレードにかかる作業量によって異なります。</target>
        </trans-unit>
        <trans-unit id="11af2b2cbe42d313dcc02c8ba66bab4ba1e5ac86" translate="yes" xml:space="preserve">
          <source>The DOM's File interface provides abstraction around native files in order to let users work on native files directly with the HTML5 file API. Electron has added a &lt;code&gt;path&lt;/code&gt; attribute to the &lt;code&gt;File&lt;/code&gt; interface which exposes the file's real path on filesystem.</source>
          <target state="translated">DOMのFileインターフェースは、ユーザーがHTML5ファイルAPIを使用してネイティブファイルを直接操作できるようにするために、ネイティブファイルを抽象化します。Electronは、ファイルシステムにファイルの実際のパスを公開する &lt;code&gt;path&lt;/code&gt; 属性を &lt;code&gt;File&lt;/code&gt; インターフェースに追加しました。</target>
        </trans-unit>
        <trans-unit id="67424874b1092e40e703a68f4543158d74245d8a" translate="yes" xml:space="preserve">
          <source>The DevTools in an Electron browser window can only debug JavaScript that's executed in that window (i.e. the web pages). To debug JavaScript that's executed in the main process you will need to use an external debugger and launch Electron with the &lt;code&gt;--inspect&lt;/code&gt; or &lt;code&gt;--inspect-brk&lt;/code&gt; switch.</source>
          <target state="translated">ElectronブラウザーウィンドウのDevToolsは、そのウィンドウ（つまり、Webページ）で実行されるJavaScriptのみをデバッグできます。メインプロセスで実行されるJavaScriptをデバッグするには、外部デバッガーを使用して、 &lt;code&gt;--inspect&lt;/code&gt; または &lt;code&gt;--inspect-brk&lt;/code&gt; スイッチを指定してElectronを起動する必要があります。</target>
        </trans-unit>
        <trans-unit id="c7697146094d0f2f337708d521985c083814a05c" translate="yes" xml:space="preserve">
          <source>The Dialog is opened from Electron's main thread. If you want to use the dialog object from a renderer process, remember to access it using the remote:</source>
          <target state="translated">ダイアログはElectronのメインスレッドから開かれます。レンダラプロセスからダイアログオブジェクトを使用したい場合は、リモートを使用してアクセスすることを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="3408643c2b39f150bb6c8426902e0f24c6f93f45" translate="yes" xml:space="preserve">
          <source>The Electron account's credentials are kept by GitHub. &quot;Electron - NPM&quot; for the URL &quot;&lt;a href=&quot;https://www.npmjs.com/login%22&quot;&gt;https://www.npmjs.com/login&quot;&lt;/a&gt;.</source>
          <target state="translated">Electronアカウントの認証情報はGitHubによって保持されます。URL「&lt;a href=&quot;https://www.npmjs.com/login%22&quot;&gt;https://www.npmjs.com/login」の&lt;/a&gt;「Electron-NPM 」。</target>
        </trans-unit>
        <trans-unit id="e683e1d7d3da98dfd59ff9337dfba925c2851a8b" translate="yes" xml:space="preserve">
          <source>The Electron repository has a few vendored dependencies, found in the &lt;a href=&quot;https://github.com/electron/electron/tree/master/vendor&quot;&gt;/vendor&lt;/a&gt; directory. Occasionally you might see a message like this when running &lt;code&gt;git status&lt;/code&gt;:</source>
          <target state="translated">Electronリポジトリーには、&lt;a href=&quot;https://github.com/electron/electron/tree/master/vendor&quot;&gt;/ vendor&lt;/a&gt;ディレクトリーにあるいくつかのベンダー依存関係があります。 &lt;code&gt;git status&lt;/code&gt; を実行すると、次のようなメッセージが表示されることがあります。</target>
        </trans-unit>
        <trans-unit id="4fd18c9facfb49d25f46c4259f16160145216b5e" translate="yes" xml:space="preserve">
          <source>The Electron team maintains &lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;update.electronjs.org&lt;/a&gt;, a free and open-source webservice that Electron apps can use to self-update. The service is designed for Electron apps that meet the following criteria:</source>
          <target state="translated">Electronチームは&lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;update.electronjs.orgを&lt;/a&gt;管理しています。これは、Electronアプリが自己更新に使用できる無料のオープンソースWebサービスです。このサービスは、次の基準を満たすElectronアプリ向けに設計されています。</target>
        </trans-unit>
        <trans-unit id="57b487e5d6191dabefc2fe5517600847519d1b93" translate="yes" xml:space="preserve">
          <source>The Main process &lt;strong&gt;creates&lt;/strong&gt; web pages by creating &lt;code&gt;BrowserWindow&lt;/code&gt; instances. Each &lt;code&gt;BrowserWindow&lt;/code&gt; instance runs the web page in its Renderer process. When a &lt;code&gt;BrowserWindow&lt;/code&gt; instance is destroyed, the corresponding Renderer process gets terminated as well.</source>
          <target state="translated">メインプロセス&lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;BrowserWindow&lt;/code&gt; インスタンスを作成すること&lt;strong&gt;によって&lt;/strong&gt;Webページを作成します。各 &lt;code&gt;BrowserWindow&lt;/code&gt; インスタンスは、レンダラープロセスでWebページを実行します。場合 &lt;code&gt;BrowserWindow&lt;/code&gt; のインスタンスが破棄され、対応するレンダラプロセスはよくとして終了します。</target>
        </trans-unit>
        <trans-unit id="bea52e762d5084bb4360d97a51bf839a688f6226" translate="yes" xml:space="preserve">
          <source>The Main process &lt;strong&gt;manages&lt;/strong&gt; all web pages and their corresponding Renderer processes.</source>
          <target state="translated">メインプロセス&lt;strong&gt;は、&lt;/strong&gt;すべてのWebページとそれに対応するレンダラープロセスを&lt;strong&gt;管理&lt;/strong&gt;します。</target>
        </trans-unit>
        <trans-unit id="88820826bbbc3baa83a6828e19bc35fd6b3eb2e9" translate="yes" xml:space="preserve">
          <source>The Python version we are using now is Python 2.7.</source>
          <target state="translated">今使っているPythonのバージョンはPython 2.7です。</target>
        </trans-unit>
        <trans-unit id="aa4702936a4a6e6cb17b855e5fbdefc72c8b85f7" translate="yes" xml:space="preserve">
          <source>The Renderer process &lt;strong&gt;communicates&lt;/strong&gt; with the Main process via IPC to perform GUI operations in a web page. Calling native GUI-related APIs from the Renderer process directly is restricted due to security concerns and potential resource leakage.</source>
          <target state="translated">レンダラープロセスは、IPCを介してメインプロセスと&lt;strong&gt;通信&lt;/strong&gt;し、WebページでGUI操作を実行します。レンダラープロセスからネイティブGUI関連のAPIを直接呼び出すことは、セキュリティ上の懸念と潜在的なリソースリークのために制限されています。</target>
        </trans-unit>
        <trans-unit id="1059b3881721d5935a0e4d2972517ff6dc25c6eb" translate="yes" xml:space="preserve">
          <source>The Renderer process &lt;strong&gt;manages&lt;/strong&gt; only the corresponding web page. A crash in one Renderer process does not affect other Renderer processes.</source>
          <target state="translated">レンダラープロセス&lt;strong&gt;は&lt;/strong&gt;、対応するWebページのみを&lt;strong&gt;管理し&lt;/strong&gt;ます。1つのレンダラープロセスでクラッシュしても、他のレンダラープロセスには影響しません。</target>
        </trans-unit>
        <trans-unit id="6d29b6de8910a0a4758fa438d9f857027455146a" translate="yes" xml:space="preserve">
          <source>The SDK Debugging Tools must also be installed. If the Windows 10 SDK was installed via the Visual Studio installer, then they can be installed by going to: &lt;code&gt;Control Panel&lt;/code&gt; &amp;rarr; &lt;code&gt;Programs&lt;/code&gt; &amp;rarr; &lt;code&gt;Programs and Features&lt;/code&gt; &amp;rarr; Select the &quot;Windows Software Development Kit&quot; &amp;rarr; &lt;code&gt;Change&lt;/code&gt; &amp;rarr; &lt;code&gt;Change&lt;/code&gt; &amp;rarr; Check &quot;Debugging Tools For Windows&quot; &amp;rarr; &lt;code&gt;Change&lt;/code&gt;. Or, you can download the standalone SDK installer and use it to install the Debugging Tools.</source>
          <target state="translated">SDK DebuggingToolsもインストールする必要があります。Windowsの10 SDKは、Visual Studioのインストーラ経由でインストールした場合、それらはに行くことによってインストールすることができます。 &lt;code&gt;Control Panel&lt;/code&gt; &amp;rarr; &lt;code&gt;Programs&lt;/code&gt; &amp;rarr; &lt;code&gt;Programs and Features&lt;/code&gt; 「Windowsソフトウェア開発キット」&amp;rarr;選択&amp;rarr; &lt;code&gt;Change&lt;/code&gt; &amp;rarr; &lt;code&gt;Change&lt;/code&gt; &amp;rarr;チェックは、「Windowsのデバッグツール&quot;&amp;rarr; &lt;code&gt;Change&lt;/code&gt; 。または、スタンドアロンのSDKインストーラーをダウンロードし、それを使用してデバッグツールをインストールすることもできます。</target>
        </trans-unit>
        <trans-unit id="91f690d466597ab142abf88aeb48da2b29abd23b" translate="yes" xml:space="preserve">
          <source>The Unity DE also has a similar feature that allows you to specify the progress bar in the launcher.</source>
          <target state="translated">Unity DEにも同様の機能があり、ランチャーでプログレスバーを指定することができます。</target>
        </trans-unit>
        <trans-unit id="d37923186c114f05a55a85afbb9ce8bd82d595e5" translate="yes" xml:space="preserve">
          <source>The Windbg symbol path is configured with a string value delimited with asterisk characters. To use only the Electron symbol server, add the following entry to your symbol path (&lt;strong&gt;Note:&lt;/strong&gt; you can replace &lt;code&gt;c:\code\symbols&lt;/code&gt; with any writable directory on your computer, if you'd prefer a different location for downloaded symbols):</source>
          <target state="translated">Windbgシンボルパスは、アスタリスク文字で区切られた文字列値で構成されます。Electronシンボルサーバーのみを使用するには、次のエントリをシンボルパスに追加します（&lt;strong&gt;注：&lt;/strong&gt;ダウンロードしたシンボルに別の場所を使用する場合は、 &lt;code&gt;c:\code\symbols&lt;/code&gt; をコンピューター上の書き込み可能なディレクトリに置き換えることができます）。</target>
        </trans-unit>
        <trans-unit id="11e20ac73f33051ef798fc830d5c811160f5dc31" translate="yes" xml:space="preserve">
          <source>The Windows 10 SDK, &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk&quot;&gt;downloadable here&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk&quot;&gt;ここ&lt;/a&gt;からダウンロードできる Windows 10 SDK</target>
        </trans-unit>
        <trans-unit id="d63aaf17dd0e9724fa33d001acc75d71aeadef14" translate="yes" xml:space="preserve">
          <source>The above configuration will download from URLs such as &lt;code&gt;https://npm.taobao.org/mirrors/electron/8.0.0/electron-v8.0.0-linux-x64.zip&lt;/code&gt;.</source>
          <target state="translated">上記の構成は、 &lt;code&gt;https://npm.taobao.org/mirrors/electron/8.0.0/electron-v8.0.0-linux-x64.zip&lt;/code&gt; //npm.taobao.org/mirrors/electron/8.0.0/electron-v8.0.0-linux-x64.zipなどのURLからダウンロードされます。</target>
        </trans-unit>
        <trans-unit id="e2b1285d4772ecec63e27725c792888155a3349f" translate="yes" xml:space="preserve">
          <source>The above would only run spec modules matching &lt;code&gt;menu&lt;/code&gt;, which is useful for anyone who's working on tests that would otherwise be at the very end of the testing cycle.</source>
          <target state="translated">上記は、 &lt;code&gt;menu&lt;/code&gt; に一致するspecモジュールのみを実行します。これは、テストサイクルの最後にあるテストに取り組んでいる人にとって便利です。</target>
        </trans-unit>
        <trans-unit id="c625b7623672f8fd22e91c0510e4c7196a733295" translate="yes" xml:space="preserve">
          <source>The app will immediately be paused, since Electron sets the app's name on launch:</source>
          <target state="translated">起動時にElectronがアプリ名を設定するので、すぐに一時停止します。</target>
        </trans-unit>
        <trans-unit id="fb3a3538bbcaba9543e6108eb12d6e3226594901" translate="yes" xml:space="preserve">
          <source>The architecture of Pepper Flash plugin has to match Electron's one. On Windows, a common error is to use 32bit version of Flash plugin against 64bit version of Electron.</source>
          <target state="translated">Pepper FlashプラグインのアーキテクチャはElectronのものと一致している必要があります。Windowsでは、32bit版のFlashプラグインを64bit版のElectronと比較して使用するとよくあるエラーです。</target>
        </trans-unit>
        <trans-unit id="a0371f8e990439f7a02a892607be6c6c1aa14ca1" translate="yes" xml:space="preserve">
          <source>The architecture of the module has to match Electron's architecture (ia32 or x64).</source>
          <target state="translated">モジュールのアーキテクチャはElectronのアーキテクチャ(ia32またはx64)と一致している必要があります。</target>
        </trans-unit>
        <trans-unit id="f58f3f45afd47bdf977f9729c58d77c8908ea3c8" translate="yes" xml:space="preserve">
          <source>The archives can not be modified so all Node APIs that can modify files will not work with &lt;code&gt;asar&lt;/code&gt; archives.</source>
          <target state="translated">アーカイブは変更できないため、ファイルを変更できるすべてのノードAPIは &lt;code&gt;asar&lt;/code&gt; アーカイブでは機能しません。</target>
        </trans-unit>
        <trans-unit id="6d0ec88bd7c20a58431566e3b83f8a873e57290a" translate="yes" xml:space="preserve">
          <source>The basic rule is: if a module is &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphical_user_interface&quot;&gt;GUI&lt;/a&gt; or low-level system related, then it should be only available in the main process. You need to be familiar with the concept of &lt;a href=&quot;../tutorial/application-architecture#main-and-renderer-processes&quot;&gt;main process vs. renderer process&lt;/a&gt; scripts to be able to use those modules.</source>
          <target state="translated">基本的なルールは次のとおりです。モジュールが&lt;a href=&quot;https://en.wikipedia.org/wiki/Graphical_user_interface&quot;&gt;GUI&lt;/a&gt;または低レベルのシステムに関連している場合、メインプロセスでのみ使用可能である必要があります。これらのモジュールを使用できるようにするには、&lt;a href=&quot;../tutorial/application-architecture#main-and-renderer-processes&quot;&gt;メインプロセスとレンダラープロセス&lt;/a&gt;スクリプトの概念に精通している必要があります。</target>
        </trans-unit>
        <trans-unit id="32a060018e068697b5647ac80282c2a9d09c40be" translate="yes" xml:space="preserve">
          <source>The basic rule is: if a module is &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphical_user_interface&quot;&gt;GUI&lt;/a&gt; or low-level system related, then it should be only available in the main process. You need to be familiar with the concept of &lt;a href=&quot;../tutorial/quick-start#main-process&quot;&gt;main process vs. renderer process&lt;/a&gt; scripts to be able to use those modules.</source>
          <target state="translated">基本的なルールは次のとおりです。モジュールが&lt;a href=&quot;https://en.wikipedia.org/wiki/Graphical_user_interface&quot;&gt;GUI&lt;/a&gt;または低レベルのシステムに関連している場合、そのモジュールはメインプロセスでのみ使用可能でなければなりません。これらのモジュールを使用できるようにするには、&lt;a href=&quot;../tutorial/quick-start#main-process&quot;&gt;メインプロセスとレンダラープロセスの&lt;/a&gt;スクリプトの概念に精通している必要があります。</target>
        </trans-unit>
        <trans-unit id="ebdd3e402b9b0ecb9ed69476766e0f23e9710e04" translate="yes" xml:space="preserve">
          <source>The beta is considered &lt;em&gt;generally stable&lt;/em&gt; and it is published again as a non-beta under &lt;code&gt;2.0.0&lt;/code&gt;.</source>
          <target state="translated">ベータ版は&lt;em&gt;一般に安定している&lt;/em&gt;と見なされ、 &lt;code&gt;2.0.0&lt;/code&gt; 未満の非ベータ版として再度公開されています。</target>
        </trans-unit>
        <trans-unit id="3a40a3921de74217cab0e0ecf818211585ec95e3" translate="yes" xml:space="preserve">
          <source>The bootstrap script will download all necessary build dependencies and create the build project files. Notice that we're using &lt;a href=&quot;https://ninja-build.org/&quot;&gt;ninja&lt;/a&gt; to build Electron so there is no Xcode project generated.</source>
          <target state="translated">ブートストラップスクリプトは、必要なすべてのビルド依存関係をダウンロードし、ビルドプロジェクトファイルを作成します。&lt;a href=&quot;https://ninja-build.org/&quot;&gt;忍者&lt;/a&gt;を使用してElectronをビルドしているため、Xcodeプロジェクトが生成されていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="e25ed6372fd4ca19b4760e84e58fbda285fd4119" translate="yes" xml:space="preserve">
          <source>The bootstrap script will download all necessary build dependencies and create the build project files. Notice that we're using &lt;code&gt;ninja&lt;/code&gt; to build Electron so there is no Visual Studio project generated.</source>
          <target state="translated">ブートストラップスクリプトは、必要なすべてのビルド依存関係をダウンロードし、ビルドプロジェクトファイルを作成します。 &lt;code&gt;ninja&lt;/code&gt; を使用してElectronをビルドしているため、Visual Studioプロジェクトが生成されていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="c95202c1d36a2764e88f2ccd6ce4d585cf9750b7" translate="yes" xml:space="preserve">
          <source>The bootstrap script will download all necessary build dependencies and create the build project files. You must have Python 2.7.x for the script to succeed. Downloading certain files can take a long time. Notice that we are using &lt;code&gt;ninja&lt;/code&gt; to build Electron so there is no &lt;code&gt;Makefile&lt;/code&gt; generated.</source>
          <target state="translated">ブートストラップスクリプトは、必要なすべてのビルド依存関係をダウンロードし、ビルドプロジェクトファイルを作成します。スクリプトを正常に実行するには、Python 2.7.xが必要です。特定のファイルのダウンロードには時間がかかる場合があります。 &lt;code&gt;ninja&lt;/code&gt; を使用してElectronをビルドしているため、 &lt;code&gt;Makefile&lt;/code&gt; が生成されていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="79d1572aa8488a3529ae6511d651a6a0d1000c3f" translate="yes" xml:space="preserve">
          <source>The built executable will be under &lt;code&gt;./out/Default&lt;/code&gt;:</source>
          <target state="translated">ビルドされた実行ファイルは &lt;code&gt;./out/Default&lt;/code&gt; の下にあります：</target>
        </trans-unit>
        <trans-unit id="a6cb2a27a970581ab7946cde065c0466ec6554b8" translate="yes" xml:space="preserve">
          <source>The built executable will be under &lt;code&gt;./out/Testing&lt;/code&gt;:</source>
          <target state="translated">ビルドされた実行可能ファイルは &lt;code&gt;./out/Testing&lt;/code&gt; の下にあります：</target>
        </trans-unit>
        <trans-unit id="598266361820f688cf675a07c0e9f387d0eecf4a" translate="yes" xml:space="preserve">
          <source>The built in spellchecker does not automatically detect what language a user is typing in. In order for the spell checker to correctly check their words you must call this API with an array of language codes. You can get the list of supported language codes with the &lt;code&gt;ses.availableSpellCheckerLanguages&lt;/code&gt; property.</source>
          <target state="translated">組み込みのスペルチェッカーは、ユーザーが入力している言語を自動的に検出しません。スペルチェッカーが単語を正しくチェックするには、言語コードの配列を使用してこのAPIを呼び出す必要があります。サポートされている言語コードのリストは、 &lt;code&gt;ses.availableSpellCheckerLanguages&lt;/code&gt; プロパティで取得できます。</target>
        </trans-unit>
        <trans-unit id="87a6ded8f0d9ef25e412395b22c18a38e3309740" translate="yes" xml:space="preserve">
          <source>The built-in modules in the main process are added as getters in the &lt;code&gt;remote&lt;/code&gt; module, so you can use them directly like the &lt;code&gt;electron&lt;/code&gt; module.</source>
          <target state="translated">メインプロセスの組み込みモジュールは、 &lt;code&gt;remote&lt;/code&gt; モジュールのゲッターとして追加されるため、 &lt;code&gt;electron&lt;/code&gt; モジュールのように直接使用できます。</target>
        </trans-unit>
        <trans-unit id="cacf868ee4dce7e4fc278f0df03ca45ef1cc5b24" translate="yes" xml:space="preserve">
          <source>The cache contains the version's official zip file as well as a checksum, stored as a text file. A typical cache might look like this:</source>
          <target state="translated">キャッシュにはバージョンの公式zipファイルとテキストファイルとして保存されたチェックサムが含まれています。典型的なキャッシュは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="25c501724978cd336dfcf0d55d363261c3ca0f35" translate="yes" xml:space="preserve">
          <source>The change is backwards API-compatible (deprecations are allowed)</source>
          <target state="translated">変更はAPIの下位互換性があります(deprecationは許可されています)</target>
        </trans-unit>
        <trans-unit id="f51a009848cb9c36003dd0ae212c94ec2fba5fde" translate="yes" xml:space="preserve">
          <source>The code above instructs the Renderer process to handle the &lt;code&gt;ondragstart&lt;/code&gt; event and forward the information to the Main process.</source>
          <target state="translated">上記のコードは、 &lt;code&gt;ondragstart&lt;/code&gt; イベントを処理し、情報をメインプロセスに転送するようにレンダラープロセスに指示します。</target>
        </trans-unit>
        <trans-unit id="4635ce3be0aef8aff745b8c96e66bf18b41fb7aa" translate="yes" xml:space="preserve">
          <source>The command line switches have to be passed before the &lt;code&gt;ready&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt; module gets emitted, and the page that uses this plugin must have plugin enabled.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; モジュールの &lt;code&gt;ready&lt;/code&gt; イベントが発行される前にコマンドラインスイッチを渡す必要があり、このプラグインを使用するページではプラグインを有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="d447e4429cdae2957670a885b9867d736f88aecc" translate="yes" xml:space="preserve">
          <source>The commands should print the versions of Node.js and npm accordingly. If both commands succeeded, you are ready to install Electron.</source>
          <target state="translated">コマンドはNode.jsとnpmのバージョンをそれに応じて表示する必要があります。両方のコマンドが成功すれば、Electronをインストールする準備ができました。</target>
        </trans-unit>
        <trans-unit id="134fdd8b1623d6cfa9ec45c73d315385fd6f9c7c" translate="yes" xml:space="preserve">
          <source>The communication between processes is possible via Inter-Process Communication (IPC) modules: &lt;a href=&quot;../api/ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロセス間の通信は、プロセス間通信（IPC）モジュール（&lt;a href=&quot;../api/ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../api/ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt;）を介して可能です。</target>
        </trans-unit>
        <trans-unit id="bb547774a63521a187ad3bb21ddd86419474ac03" translate="yes" xml:space="preserve">
          <source>The crash reporter will send the following data to the &lt;code&gt;submitURL&lt;/code&gt; as a &lt;code&gt;multipart/form-data&lt;/code&gt;&lt;code&gt;POST&lt;/code&gt;:</source>
          <target state="translated">クラッシュレポーターは、以下のデータを &lt;code&gt;multipart/form-data&lt;/code&gt; &lt;code&gt;POST&lt;/code&gt; として &lt;code&gt;submitURL&lt;/code&gt; に送信します。</target>
        </trans-unit>
        <trans-unit id="0f40ef1f6e4ccf3e4bfe888ec95e68c123a4ab11" translate="yes" xml:space="preserve">
          <source>The creation of the &lt;code&gt;BrowserWindow&lt;/code&gt; is customizable via &lt;code&gt;WebContents&lt;/code&gt;'s &lt;code&gt;new-window&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;BrowserWindow&lt;/code&gt; の作成は、 &lt;code&gt;WebContents&lt;/code&gt; の &lt;code&gt;new-window&lt;/code&gt; イベントを介してカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="a84166f19e3821524c95b826a488cfad4a943b88" translate="yes" xml:space="preserve">
          <source>The current absolute position of the mouse pointer.</source>
          <target state="translated">マウスポインタの現在の絶対位置。</target>
        </trans-unit>
        <trans-unit id="ec3240c3c12bbda24aa64960666921821da1f01c" translate="yes" xml:space="preserve">
          <source>The custom dock is commonly used to add shortcuts to tasks the user wouldn't want to open the whole app window for.</source>
          <target state="translated">カスタムドックは、ユーザーがアプリのウィンドウ全体を開きたくないタスクにショートカットを追加するために一般的に使用されます。</target>
        </trans-unit>
        <trans-unit id="e8cb86baaffbfe782d928d94296401cd40b1132c" translate="yes" xml:space="preserve">
          <source>The default behavior is to cancel all authentications, to override this you should prevent the default behavior with &lt;code&gt;event.preventDefault()&lt;/code&gt; and call &lt;code&gt;callback(username, password)&lt;/code&gt; with the credentials.</source>
          <target state="translated">デフォルトの動作はすべての認証をキャンセルすることです。これをオーバーライドするには、 &lt;code&gt;event.preventDefault()&lt;/code&gt; でデフォルトの動作を防ぎ、資格情報を &lt;code&gt;callback(username, password)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="b75871fa9bfdbc54c35ad5db52ced97823eab23a" translate="yes" xml:space="preserve">
          <source>The default behavior is to cancel all authentications. To override this you should prevent the default behavior with &lt;code&gt;event.preventDefault()&lt;/code&gt; and call &lt;code&gt;callback(username, password)&lt;/code&gt; with the credentials.</source>
          <target state="translated">デフォルトの動作では、すべての認証がキャンセルされます。これをオーバーライドするには、 &lt;code&gt;event.preventDefault()&lt;/code&gt; でデフォルトの動作を防ぎ、資格情報を &lt;code&gt;callback(username, password)&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="eed37c59390ece33f402535de65017db6959cb55" translate="yes" xml:space="preserve">
          <source>The default building configuration is targeted for major desktop Linux distributions. To build for a specific distribution or device, the following information may help you.</source>
          <target state="translated">デフォルトのビルド構成は、主要なデスクトップ Linux ディストリビューションを対象としています。特定のディストリビューションやデバイス向けにビルドするには、以下の情報が参考になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="331fb167956d5035ab3148b2b46a77bc82e1c23c" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;getBitmap()&lt;/code&gt; and &lt;code&gt;toBitmap()&lt;/code&gt; is that &lt;code&gt;getBitmap()&lt;/code&gt; does not copy the bitmap data, so you have to use the returned Buffer immediately in current event loop tick; otherwise the data might be changed or destroyed.</source>
          <target state="translated">&lt;code&gt;getBitmap()&lt;/code&gt; と &lt;code&gt;toBitmap()&lt;/code&gt; の違いは、 &lt;code&gt;getBitmap()&lt;/code&gt; はビットマップデータをコピーしないため、現在のイベントループティックで返されたバッファをすぐに使用する必要があることです。そうしないと、データが変更または破壊される可能性があります。</target>
        </trans-unit>
        <trans-unit id="a836089b20b522142ba336af0ffba1b7ea6756df" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;getBitmap()&lt;/code&gt; and &lt;code&gt;toBitmap()&lt;/code&gt; is, &lt;code&gt;getBitmap()&lt;/code&gt; does not copy the bitmap data, so you have to use the returned Buffer immediately in current event loop tick, otherwise the data might be changed or destroyed.</source>
          <target state="translated">&lt;code&gt;getBitmap()&lt;/code&gt; と &lt;code&gt;toBitmap()&lt;/code&gt; の違いは、 &lt;code&gt;getBitmap()&lt;/code&gt; はビットマップデータをコピーしないため、返されたバッファを現在のイベントループティックですぐに使用する必要があります。そうしないと、データが変更または破棄される可能性があります。</target>
        </trans-unit>
        <trans-unit id="52c95c59a318bcc0a489e2e73af3fb45277888fc" translate="yes" xml:space="preserve">
          <source>The documentation for the &lt;code&gt;event&lt;/code&gt; object passed to &lt;code&gt;handle&lt;/code&gt; callbacks can be found in the &lt;a href=&quot;structures/ipc-main-invoke-event&quot;&gt;&lt;code&gt;ipc-main-invoke-event&lt;/code&gt;&lt;/a&gt; structure docs.</source>
          <target state="translated">コールバックを &lt;code&gt;handle&lt;/code&gt; するために渡される &lt;code&gt;event&lt;/code&gt; オブジェクトのドキュメントは、&lt;a href=&quot;structures/ipc-main-invoke-event&quot;&gt; &lt;code&gt;ipc-main-invoke-event&lt;/code&gt; &lt;/a&gt;構造体のドキュメントにあります。</target>
        </trans-unit>
        <trans-unit id="8e06eb72b8e4d917b1b164aaf75a5c5872a25d21" translate="yes" xml:space="preserve">
          <source>The documentation for the &lt;code&gt;event&lt;/code&gt; object passed to the &lt;code&gt;callback&lt;/code&gt; can be found in the &lt;a href=&quot;structures/ipc-main-event&quot;&gt;&lt;code&gt;ipc-main-event&lt;/code&gt;&lt;/a&gt; structure docs.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 渡される &lt;code&gt;event&lt;/code&gt; オブジェクトのドキュメントは、&lt;a href=&quot;structures/ipc-main-event&quot;&gt; &lt;code&gt;ipc-main-event&lt;/code&gt; &lt;/a&gt;構造体のドキュメントにあります。</target>
        </trans-unit>
        <trans-unit id="d753bef893258da0067d563d2d8c784ecd8921b0" translate="yes" xml:space="preserve">
          <source>The documentation for the &lt;code&gt;event&lt;/code&gt; object passed to the &lt;code&gt;callback&lt;/code&gt; can be found in the &lt;a href=&quot;structures/ipc-renderer-event&quot;&gt;&lt;code&gt;ipc-renderer-event&lt;/code&gt;&lt;/a&gt; structure docs.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 渡される &lt;code&gt;event&lt;/code&gt; オブジェクトのドキュメントは、&lt;a href=&quot;structures/ipc-renderer-event&quot;&gt; &lt;code&gt;ipc-renderer-event&lt;/code&gt; &lt;/a&gt;構造体のドキュメントにあります。</target>
        </trans-unit>
        <trans-unit id="9293338eb4ef937a2029304cfc21c780ed35545b" translate="yes" xml:space="preserve">
          <source>The easiest way to use this service is by installing &lt;a href=&quot;https://github.com/electron/update-electron-app&quot;&gt;update-electron-app&lt;/a&gt;, a Node.js module preconfigured for use with update.electronjs.org.</source>
          <target state="translated">このサービスを使用する最も簡単な方法は、update.electronjs.orgで使用するように事前構成されたNode.jsモジュールである&lt;a href=&quot;https://github.com/electron/update-electron-app&quot;&gt;update-electron-appを&lt;/a&gt;インストールすることです。</target>
        </trans-unit>
        <trans-unit id="dda3190ee27210a14e094a564f79f15c93d5f611" translate="yes" xml:space="preserve">
          <source>The effect is visible only on (some?) LCD screens. Even if you don't see a difference, some of your users may. It is best to always set the background this way, unless you have reasons not to do so.</source>
          <target state="translated">液晶画面でのみ(一部?違いがわからなくても、一部のユーザーには違いがあるかもしれません。やむを得ない理由がない限り、常にこのように背景を設定するのがベストです。</target>
        </trans-unit>
        <trans-unit id="997fdba9aaf6c9e3ee2623f275fe905f840f1d10" translate="yes" xml:space="preserve">
          <source>The electron.lib has to be copied as node.lib.</source>
          <target state="translated">electron.libはnode.libとしてコピーする必要があります。</target>
        </trans-unit>
        <trans-unit id="4e0a6a32dd6f0c1918523c114e06c2c6ed8cb2e1" translate="yes" xml:space="preserve">
          <source>The environment variables have to be set when executing the &lt;code&gt;bootstrap.py&lt;/code&gt; script, it won't work in the &lt;code&gt;build.py&lt;/code&gt; script.</source>
          <target state="translated">&lt;code&gt;bootstrap.py&lt;/code&gt; スクリプトを実行するときに環境変数を設定する必要があります。環境変数は &lt;code&gt;build.py&lt;/code&gt; スクリプトでは機能しません。</target>
        </trans-unit>
        <trans-unit id="1775a2ba70be76e5cd9f2d2b5d87922c0e21f488" translate="yes" xml:space="preserve">
          <source>The existing webview will see the &lt;code&gt;destroy&lt;/code&gt; event and will then create a new webContents when a new url is loaded.</source>
          <target state="translated">既存のwebviewは &lt;code&gt;destroy&lt;/code&gt; イベントを確認し、新しいURLが読み込まれると新しいwebContentsを作成します。</target>
        </trans-unit>
        <trans-unit id="5cf05c0d2832c3fd7650a25ac5b1bc027989d1a3" translate="yes" xml:space="preserve">
          <source>The extension will be remembered so you only need to call this API once per extension. If you try to add an extension that has already been loaded, this method will not return and instead log a warning to the console.</source>
          <target state="translated">拡張子は記憶されるので、この API を呼び出す必要があるのは拡張子ごとに一度だけです。既にロード済みの拡張モジュールを追加しようとした場合、このメソッドは返されず、代わりにコンソールに警告を記録します。</target>
        </trans-unit>
        <trans-unit id="45cd3e807c7fd694f209776f14d4d85d8e1c31c1" translate="yes" xml:space="preserve">
          <source>The extension will be remembered so you only need to call this API once, this API is not for programming use. If you try to add an extension that has already been loaded, this method will not return and instead log a warning to the console.</source>
          <target state="translated">拡張機能は記憶されるので、この API を呼び出す必要があるのは一度だけで、この API はプログラミング用ではありません。既に読み込まれている拡張モジュールを追加しようとした場合、このメソッドは返されず、代わりにコンソールに警告が記録されます。</target>
        </trans-unit>
        <trans-unit id="2eeb1f3a0e8e8243477bc575c6c648a89ab60707" translate="yes" xml:space="preserve">
          <source>The factor must be greater than 0.0.</source>
          <target state="translated">係数は0.0より大きくなければなりません。</target>
        </trans-unit>
        <trans-unit id="807d917e174965f29f52692cbaf299ca8879915e" translate="yes" xml:space="preserve">
          <source>The files in &lt;code&gt;/chromium_src&lt;/code&gt; tend to be pieces of Chromium that aren't part of the content layer. For example to implement Pepper API, we need some wiring similar to what official Chrome does. We could have built the relevant sources as a part of &lt;a href=&quot;../glossary#libchromiumcontent&quot;&gt;libcc&lt;/a&gt; but most often we don't require all the features (some tend to be proprietary, analytics stuff) so we took parts of the code. These could have easily been patches in libcc, but at the time when these were written the goal of libcc was to maintain very minimal patches and chromium_src changes tend to be big ones. Also, note that these patches can never be upstreamed unlike other libcc patches we maintain now.</source>
          <target state="translated">&lt;code&gt;/chromium_src&lt;/code&gt; 内のファイルは、コンテンツレイヤーの一部ではないChromiumの断片になる傾向があります。たとえば、Pepper APIを実装するには、公式のChromeと同様の配線が必要です。&lt;a href=&quot;../glossary#libchromiumcontent&quot;&gt;libccの&lt;/a&gt;一部として関連するソースを構築することもできますが、ほとんどの場合、すべての機能が必要なわけではないため（一部は独自仕様の分析機能であることが多い）、コードの一部を取得しました。これらは簡単にlibccのパッチである可能性がありますが、これらが書かれた時点でlibccの目標は非常に最小限のパッチを維持することであり、chromium_srcの変更は大きなものになる傾向があります。また、現在維持している他のlibccパッチとは異なり、これらのパッチは決してアップストリームにできないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="457233dd3e65c7e4b1a26409a273fd1b1bafea77" translate="yes" xml:space="preserve">
          <source>The first 3 options are trace recording modes and hence mutually exclusive. If more than one trace recording modes appear in the &lt;code&gt;traceOptions&lt;/code&gt; string, the last one takes precedence. If none of the trace recording modes are specified, recording mode is &lt;code&gt;record-until-full&lt;/code&gt;.</source>
          <target state="translated">最初の3つのオプションはトレース記録モードであるため、相互に排他的です。 &lt;code&gt;traceOptions&lt;/code&gt; 文字列に複数のトレース記録モードが含まれている場合は、最後のモードが優先されます。トレース記録モードが指定されていない場合、記録モードは &lt;code&gt;record-until-full&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0efe33d64ae8fc2ca88edad27924431ab14a57de" translate="yes" xml:space="preserve">
          <source>The first line should:</source>
          <target state="translated">最初の一行目はそうでなければなりません。</target>
        </trans-unit>
        <trans-unit id="2b24538741e2c956585d562cdd1ad703db214882" translate="yes" xml:space="preserve">
          <source>The first step is to go to the &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;Releases&lt;/a&gt; page and delete the corrupted binaries with the &lt;code&gt;SHASUMS256.txt&lt;/code&gt; checksum file.</source>
          <target state="translated">最初の手順は、&lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;リリース&lt;/a&gt;ページに移動し、 &lt;code&gt;SHASUMS256.txt&lt;/code&gt; チェックサムファイルを使用して破損したバイナリを削除することです。</target>
        </trans-unit>
        <trans-unit id="ea705348744c1e2044a8ff0b7c88333243bb1d26" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;gn&lt;/code&gt; files contain the main rules for building Electron:</source>
          <target state="translated">次の &lt;code&gt;gn&lt;/code&gt; ファイルには、Electronを構築するための主なルールが含まれています。</target>
        </trans-unit>
        <trans-unit id="023ff6527fd05f275d8fd868ecdc324dfea1fb52" translate="yes" xml:space="preserve">
          <source>The following CSP will allow Electron to execute scripts from the current website and from &lt;code&gt;apis.example.com&lt;/code&gt;.</source>
          <target state="translated">次のCSPにより、Electronは現在のWebサイトおよび &lt;code&gt;apis.example.com&lt;/code&gt; からスクリプトを実行できます。</target>
        </trans-unit>
        <trans-unit id="96ee1eed9747359cdb30aeeed257bcc687dedd46" translate="yes" xml:space="preserve">
          <source>The following CSP will allow Electron to execute scripts from the current website and from &lt;code&gt;apis.mydomain.com&lt;/code&gt;.</source>
          <target state="translated">次のCSPを使用すると、Electronは現在のWebサイトおよび &lt;code&gt;apis.mydomain.com&lt;/code&gt; からスクリプトを実行できます。</target>
        </trans-unit>
        <trans-unit id="863e74b210263b70d8d1d74644d55dd0fcefdbcc" translate="yes" xml:space="preserve">
          <source>The following DOM events are available to the &lt;code&gt;webview&lt;/code&gt; tag:</source>
          <target state="translated">次のDOMイベントは、 &lt;code&gt;webview&lt;/code&gt; タグで使用できます。</target>
        </trans-unit>
        <trans-unit id="df37400e0e4edd92f2e41f2950f14191d09725df" translate="yes" xml:space="preserve">
          <source>The following accelerators will not be registered successfully on macOS 10.14 Mojave unless the app has been authorized as a &lt;a href=&quot;https://developer.apple.com/library/archive/documentation/Accessibility/Conceptual/AccessibilityMacOSX/OSXAXTestingApps.html&quot;&gt;trusted accessibility client&lt;/a&gt;:</source>
          <target state="translated">次のアクセラレータは、アプリが&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/Accessibility/Conceptual/AccessibilityMacOSX/OSXAXTestingApps.html&quot;&gt;信頼できるユーザー補助クライアント&lt;/a&gt;として承認されていない限り、macOS 10.14Mojaveに正常に登録されません。</target>
        </trans-unit>
        <trans-unit id="13f9c4bc3e3eee333a74f8c923abc52e950ddc87" translate="yes" xml:space="preserve">
          <source>The following additional roles are available on &lt;em&gt;macOS&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;macOSでは&lt;/em&gt;、次の追加の役割を利用できます。</target>
        </trans-unit>
        <trans-unit id="7bc69551418702826c72247738e5cea0edb1fbc9" translate="yes" xml:space="preserve">
          <source>The following app commands are explicitly supported on Linux:</source>
          <target state="translated">Linuxでは以下のアプリコマンドが明示的にサポートされています。</target>
        </trans-unit>
        <trans-unit id="9a09f0d83e28e06e6787fa41ade0a2c2935f1e9d" translate="yes" xml:space="preserve">
          <source>The following colors are only available on macOS 10.14: &lt;code&gt;find-highlight&lt;/code&gt;, &lt;code&gt;selected-content-background&lt;/code&gt;, &lt;code&gt;separator&lt;/code&gt;, &lt;code&gt;unemphasized-selected-content-background&lt;/code&gt;, &lt;code&gt;unemphasized-selected-text-background&lt;/code&gt;, and &lt;code&gt;unemphasized-selected-text&lt;/code&gt;.</source>
          <target state="translated">次の色は &lt;code&gt;unemphasized-selected-content-background&lt;/code&gt; のみ使用できます： &lt;code&gt;find-highlight&lt;/code&gt; 、 &lt;code&gt;selected-content-background&lt;/code&gt; 、 &lt;code&gt;separator&lt;/code&gt; 、unemphasized-selected-content-background、 &lt;code&gt;unemphasized-selected-text-background&lt;/code&gt; 、および &lt;code&gt;unemphasized-selected-text&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2973ab61031b504aa1fcecc8e49986ff3a8af8f" translate="yes" xml:space="preserve">
          <source>The following environment variables are intended primarily for development and debugging purposes.</source>
          <target state="translated">以下の環境変数は、主に開発とデバッグを目的としたものです。</target>
        </trans-unit>
        <trans-unit id="5ac3260cead16a78938f601530def24b4ea4ac92" translate="yes" xml:space="preserve">
          <source>The following environment variables are intended primarily for use at runtime in packaged Electron applications.</source>
          <target state="translated">以下の環境変数は、主にパッケージ化されたElectronアプリケーションの実行時に使用することを意図しています。</target>
        </trans-unit>
        <trans-unit id="6d46353d4da755261f02826cc4e562d2285a35e8" translate="yes" xml:space="preserve">
          <source>The following events are available on instances of &lt;code&gt;Cookies&lt;/code&gt;:</source>
          <target state="translated">次のイベントは、 &lt;code&gt;Cookies&lt;/code&gt; インスタンスで使用できます。</target>
        </trans-unit>
        <trans-unit id="54c9e2a9a0a73dc882520d10b2ca079a0beef36f" translate="yes" xml:space="preserve">
          <source>The following events are available on instances of &lt;code&gt;Session&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; のインスタンスでは、次のイベントを使用できます。</target>
        </trans-unit>
        <trans-unit id="b034f553ec80ef9a74ec658af3ef9d311b4f26ea" translate="yes" xml:space="preserve">
          <source>The following example code forwards all log messages to the embedder's console without regard for log level or other properties.</source>
          <target state="translated">次のコード例は、ログレベルやその他のプロパティに関係なく、すべてのログメッセージをエンベッダーのコンソールに転送します。</target>
        </trans-unit>
        <trans-unit id="412f6394578caf90d6f08e305bc45dd7a499eb0c" translate="yes" xml:space="preserve">
          <source>The following example code navigates the &lt;code&gt;webview&lt;/code&gt; to &lt;code&gt;about:blank&lt;/code&gt; when the guest attempts to close itself.</source>
          <target state="translated">次のコード例は、ゲストが自分自身を &lt;code&gt;webview&lt;/code&gt; うとすると、webviewを &lt;code&gt;about:blank&lt;/code&gt; に移動します。</target>
        </trans-unit>
        <trans-unit id="e297c13288b5494f48c892304c4685e142c2f359" translate="yes" xml:space="preserve">
          <source>The following example code opens the new url in system's default browser.</source>
          <target state="translated">以下のコード例は、システムのデフォルトブラウザで新しいURLを開きます。</target>
        </trans-unit>
        <trans-unit id="96c5cfe0246d651a35fd511efd2ba0f3ed22db5f" translate="yes" xml:space="preserve">
          <source>The following example shows how to capture video from a desktop window whose title is &lt;code&gt;Electron&lt;/code&gt;:</source>
          <target state="translated">次の例は、タイトルが &lt;code&gt;Electron&lt;/code&gt; であるデスクトップウィンドウからビデオをキャプチャする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="4a5e64570d57b68bcc11e2010a4253a965aa1f32" translate="yes" xml:space="preserve">
          <source>The following example shows how to quit the application when the last window is closed:</source>
          <target state="translated">次の例では、最後のウィンドウが閉じたときにアプリケーションを終了する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="3f6a87feccae153d14a8090ee5f48f12c447861c" translate="yes" xml:space="preserve">
          <source>The following example shows how to write a string to the clipboard:</source>
          <target state="translated">以下の例では、クリップボードに文字列を書き込む方法を示しています。</target>
        </trans-unit>
        <trans-unit id="81c6031b5e2c96305bec9706b7c67d3750fcd099" translate="yes" xml:space="preserve">
          <source>The following is a non-exhaustive list of why you may consider using the &lt;code&gt;net&lt;/code&gt; module instead of the native Node.js modules:</source>
          <target state="translated">以下は、ネイティブのNode.jsモジュールの代わりに &lt;code&gt;net&lt;/code&gt; モジュールの使用を検討する理由の非網羅的なリストです。</target>
        </trans-unit>
        <trans-unit id="b6487e58f7fd63ed2be0c3a2a9c726a501b79eb1" translate="yes" xml:space="preserve">
          <source>The following is an example of automatically submitting a crash report to a remote server:</source>
          <target state="translated">以下は、クラッシュレポートをリモートサーバーに自動送信する例です。</target>
        </trans-unit>
        <trans-unit id="ed35c617dd5e1d878a05756727a2a2847b63e131" translate="yes" xml:space="preserve">
          <source>The following is an example of setting up Electron to automatically submit crash reports to a remote server:</source>
          <target state="translated">以下は、Electronがリモートサーバにクラッシュレポートを自動的に送信するように設定した例です。</target>
        </trans-unit>
        <trans-unit id="e2460efd3b194a8bb68bf2b7e9f8cab9d619bfca" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of &lt;code&gt;Cookies&lt;/code&gt;:</source>
          <target state="translated">次のメソッドは &lt;code&gt;Cookies&lt;/code&gt; インスタンスで使用できます。</target>
        </trans-unit>
        <trans-unit id="f4edeb192e26fd5b685c6ec571fa25126485efea" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of &lt;code&gt;Session&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; のインスタンスでは、次のメソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="41bcf5a62a573a8cc5fb83b2b0ca3023bc5643f8" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of &lt;code&gt;WebRequest&lt;/code&gt;:</source>
          <target state="translated">次のメソッドは、 &lt;code&gt;WebRequest&lt;/code&gt; のインスタンスで使用できます。</target>
        </trans-unit>
        <trans-unit id="86154d83bccd7a4b57c68d8cd6f90d9c971f95d4" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of the &lt;code&gt;NativeImage&lt;/code&gt; class:</source>
          <target state="translated">次のメソッドは、 &lt;code&gt;NativeImage&lt;/code&gt; クラスのインスタンスで使用できます。</target>
        </trans-unit>
        <trans-unit id="9a3b5c7545a0293b6358e101905e854c70f4102a" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;MenuItem&lt;/code&gt;:</source>
          <target state="translated">次のプロパティは、 &lt;code&gt;MenuItem&lt;/code&gt; のインスタンスで使用できます。</target>
        </trans-unit>
        <trans-unit id="d8656a694792848f68ade1e927e17424b474569c" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;Session&lt;/code&gt;:</source>
          <target state="translated">次のプロパティは、 &lt;code&gt;Session&lt;/code&gt; のインスタンスで使用できます。</target>
        </trans-unit>
        <trans-unit id="def49f62a446c81186a380e2a1dce3115758979c" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBar&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBar&lt;/code&gt; のインスタンスでは、次のプロパティを使用できます。</target>
        </trans-unit>
        <trans-unit id="bb57d90554803861a88a2753b989f061a9f5dc27" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarButton&lt;/code&gt;:</source>
          <target state="translated">次のプロパティは、 &lt;code&gt;TouchBarButton&lt;/code&gt; のインスタンスで使用できます。</target>
        </trans-unit>
        <trans-unit id="b20f464fbc40e27073060beed56e38762bf2ec5f" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarColorPicker&lt;/code&gt;:</source>
          <target state="translated">次のプロパティは、 &lt;code&gt;TouchBarColorPicker&lt;/code&gt; のインスタンスで使用できます。</target>
        </trans-unit>
        <trans-unit id="3ace2633b47d31b77187bb2daeb06860f123cc84" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarLabel&lt;/code&gt;:</source>
          <target state="translated">次のプロパティは &lt;code&gt;TouchBarLabel&lt;/code&gt; のインスタンスで使用できます。</target>
        </trans-unit>
        <trans-unit id="db9bb37fb754d6983049c81473d1ed7ee83c0529" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarPopover&lt;/code&gt;:</source>
          <target state="translated">次のプロパティは、 &lt;code&gt;TouchBarPopover&lt;/code&gt; のインスタンスで使用できます。</target>
        </trans-unit>
        <trans-unit id="0ae481cb3e6e682837041ef8635daf8423012551" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarScrubber&lt;/code&gt;:</source>
          <target state="translated">次のプロパティは、 &lt;code&gt;TouchBarScrubber&lt;/code&gt; のインスタンスで使用できます。</target>
        </trans-unit>
        <trans-unit id="cf2c708351aaff2edf23f053e2722905afcda326" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarSegmentedControl&lt;/code&gt;:</source>
          <target state="translated">次のプロパティは、 &lt;code&gt;TouchBarSegmentedControl&lt;/code&gt; のインスタンスで使用できます。</target>
        </trans-unit>
        <trans-unit id="195378df2cd4e2ad758131138b1fef6f60754314" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarSlider&lt;/code&gt;:</source>
          <target state="translated">次のプロパティは、 &lt;code&gt;TouchBarSlider&lt;/code&gt; のインスタンスで使用できます。</target>
        </trans-unit>
        <trans-unit id="b8f2837251e74096fabd92fa5d58e494f58da0b8" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarSpacer&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBarSpacer&lt;/code&gt; のインスタンスでは、次のプロパティを使用できます。</target>
        </trans-unit>
        <trans-unit id="66529044801589f67c9319b12f81a0025eb3daa7" translate="yes" xml:space="preserve">
          <source>The following steps introduce a simple way to submit your app to Mac App Store. However, these steps do not ensure your app will be approved by Apple; you still need to read Apple's &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/AppDistributionGuide/SubmittingYourApp/SubmittingYourApp.html&quot;&gt;Submitting Your App&lt;/a&gt; guide on how to meet the Mac App Store requirements.</source>
          <target state="translated">次の手順では、アプリをMac App Storeに送信する簡単な方法を紹介します。ただし、これらの手順はアプリがAppleによって承認されることを保証するものではありません。Mac App Storeの要件を満たす方法については、Appleの&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/AppDistributionGuide/SubmittingYourApp/SubmittingYourApp.html&quot;&gt;「アプリ&lt;/a&gt;の提出」ガイドを読む必要があります。</target>
        </trans-unit>
        <trans-unit id="c79a51e76233d92ca454ccfeda126b39f4a140f2" translate="yes" xml:space="preserve">
          <source>The following suffixes for DPI are also supported:</source>
          <target state="translated">また、DPIには以下のような接尾辞もサポートされています。</target>
        </trans-unit>
        <trans-unit id="e8b3395a0b0733443245d920453f6829eb410bbd" translate="yes" xml:space="preserve">
          <source>The font looks blurry, what is this and what can I do?</source>
          <target state="translated">フォントがぼやけて見えるのですが、これは何なのか、どうしたらいいのでしょうか?</target>
        </trans-unit>
        <trans-unit id="971519fecca901e42a8246a4851dc194f2d7b30f" translate="yes" xml:space="preserve">
          <source>The icon in title bar will become gray when set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; に設定すると、タイトルバーのアイコンが灰色になります。</target>
        </trans-unit>
        <trans-unit id="893c7bb1e6d91b53055e3852294044b7cb67b593" translate="yes" xml:space="preserve">
          <source>The installer generated with Squirrel will create a shortcut icon with an &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;Application User Model ID&lt;/a&gt; in the format of &lt;code&gt;com.squirrel.PACKAGE_ID.YOUR_EXE_WITHOUT_DOT_EXE&lt;/code&gt;, examples are &lt;code&gt;com.squirrel.slack.Slack&lt;/code&gt; and &lt;code&gt;com.squirrel.code.Code&lt;/code&gt;. You have to use the same ID for your app with &lt;code&gt;app.setAppUserModelId&lt;/code&gt; API, otherwise Windows will not be able to pin your app properly in task bar.</source>
          <target state="translated">Squirrelで生成されたインストーラーは、 &lt;code&gt;com.squirrel.PACKAGE_ID.YOUR_EXE_WITHOUT_DOT_EXE&lt;/code&gt; の形式で&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;アプリケーションユーザーモデルIDの&lt;/a&gt;ショートカットアイコンを作成します。例は、 &lt;code&gt;com.squirrel.slack.Slack&lt;/code&gt; および &lt;code&gt;com.squirrel.code.Code&lt;/code&gt; です。 &lt;code&gt;app.setAppUserModelId&lt;/code&gt; APIでアプリに同じIDを使用する必要があります。そうしないと、Windowsがアプリをタスクバーに正しく固定できません。</target>
        </trans-unit>
        <trans-unit id="b4ea8834d37e552763a32d1d8bee90913cb5821c" translate="yes" xml:space="preserve">
          <source>The intention is for these overrides to become disabled by default and then at some point in the future this property will be removed. This property impacts which native modules you can use in the renderer process. For more information on the direction Electron is going with renderer process restarts and usage of native modules in the renderer process please check out this &lt;a href=&quot;https://github.com/electron/electron/issues/18397&quot;&gt;Tracking Issue&lt;/a&gt;.</source>
          <target state="translated">これらのオーバーライドはデフォルトで無効になり、将来のある時点でこのプロパティは削除される予定です。このプロパティは、レンダラープロセスで使用できるネイティブモジュールに影響を与えます。Electronがレンダラープロセスの再起動で進む方向と、レンダラープロセスでのネイティブモジュールの使用法の詳細については、この&lt;a href=&quot;https://github.com/electron/electron/issues/18397&quot;&gt;追跡の問題&lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="d39cdcde4207d3e93a4c98c4194d69b5632abc65" translate="yes" xml:space="preserve">
          <source>The latest stable release unilaterally receives all fixes from &lt;code&gt;master&lt;/code&gt;, and the version prior to that receives the vast majority of those fixes as time and bandwidth warrants. The oldest supported release line will receive only security fixes directly.</source>
          <target state="translated">最新の安定版リリースは一方的に &lt;code&gt;master&lt;/code&gt; からすべての修正を受け取り、それ以前のバージョンは時間と帯域幅が許す限りそれらの修正の大部分を受け取ります。サポートされている最も古いリリースラインは、セキュリティ修正のみを直接受け取ります。</target>
        </trans-unit>
        <trans-unit id="0c4a69d2c066a08bb1cfa106b9557f1532d54dcb" translate="yes" xml:space="preserve">
          <source>The latest three &lt;em&gt;stable&lt;/em&gt; major versions are supported by the Electron team. For example, if the latest release is 6.1.x, then the 5.0.x as well as the 4.2.x series are supported. We only support the latest minor release for each stable release series. This means that in the case of a security fix 6.1.x will receive the fix, but we will not release a new version of 6.0.x.</source>
          <target state="translated">最新の3つの&lt;em&gt;安定した&lt;/em&gt;メジャーバージョンは、Electronチームによってサポートされています。たとえば、最新リリースが6.1.xの場合、5.0.xおよび4.2.xシリーズがサポートされます。各安定版リリースシリーズの最新のマイナーリリースのみをサポートします。これは、セキュリティ修正の場合、6.1.xは修正を受け取りますが、6.0.xの新しいバージョンはリリースしないことを意味します。</target>
        </trans-unit>
        <trans-unit id="d90ed43ccd133ad2a69189c543d458bb4158ae61" translate="yes" xml:space="preserve">
          <source>The latest three release branches are supported by the Electron team. For example, if the latest release is 2.0.x, then the 2-0-x series is supported, as are the two previous release series 1-7-x and 1-8-x.</source>
          <target state="translated">最新の3つのリリースブランチがサポートされています。例えば、最新のリリースが 2.0.x の場合、2-0-x シリーズがサポートされており、以前の 2 つのリリースシリーズ 1-7-x と 1-8-x もサポートされています。</target>
        </trans-unit>
        <trans-unit id="873a6e801edc60a1c32293c8a502234ca368cf39" translate="yes" xml:space="preserve">
          <source>The main process creates web pages by creating &lt;code&gt;BrowserWindow&lt;/code&gt; instances. Each &lt;code&gt;BrowserWindow&lt;/code&gt; instance runs the web page in its own renderer process. When a &lt;code&gt;BrowserWindow&lt;/code&gt; instance is destroyed, the corresponding renderer process is also terminated.</source>
          <target state="translated">メインプロセスでは、 &lt;code&gt;BrowserWindow&lt;/code&gt; インスタンスを作成してWebページを作成します。各 &lt;code&gt;BrowserWindow&lt;/code&gt; インスタンスは、独自のレンダラープロセスでWebページを実行します。場合 &lt;code&gt;BrowserWindow&lt;/code&gt; のインスタンスが破棄され、対応するレンダラ処理も終了します。</target>
        </trans-unit>
        <trans-unit id="3e57d2e2088d6bf8c5aa05e4f6662ae76ff4fa5e" translate="yes" xml:space="preserve">
          <source>The main process handles it by listening for &lt;code&gt;channel&lt;/code&gt; with &lt;a href=&quot;ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; module, and replies by setting &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="translated">メインプロセスをリッスンすることによりハンドルを &lt;code&gt;channel&lt;/code&gt; と&lt;a href=&quot;ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; を&lt;/a&gt;設定することにより、モジュール、および応答 &lt;code&gt;event.returnValue&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="099f6cac6dff60632e157c5d20a0c768e8532de9" translate="yes" xml:space="preserve">
          <source>The main process handles it by listening for &lt;code&gt;channel&lt;/code&gt; with &lt;a href=&quot;ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">メインプロセスは、&lt;a href=&quot;ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; &lt;/a&gt;モジュールで &lt;code&gt;channel&lt;/code&gt; をリッスンして処理します。</target>
        </trans-unit>
        <trans-unit id="48c1c4cf5d15a0f40a3ea8c4a44ce5f2f7485207" translate="yes" xml:space="preserve">
          <source>The main process handles it by listening for &lt;code&gt;channel&lt;/code&gt; with the &lt;a href=&quot;ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">メインプロセスは、&lt;a href=&quot;ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; &lt;/a&gt;モジュールで &lt;code&gt;channel&lt;/code&gt; をリッスンすることによってそれを処理します。</target>
        </trans-unit>
        <trans-unit id="8609c822b7c373ca2706e01a9ff9173dcf0b4260" translate="yes" xml:space="preserve">
          <source>The main process manages all web pages and their corresponding renderer processes. Each renderer process is isolated and only cares about the web page running in it.</source>
          <target state="translated">メインプロセスは、すべてのウェブページとそれに対応するレンダラープロセスを管理します。各レンダラープロセスは分離されており、その中で実行されているウェブページだけを気にします。</target>
        </trans-unit>
        <trans-unit id="11d23cd92e3578986785fa874e0009a06841da0b" translate="yes" xml:space="preserve">
          <source>The main process script is just like a normal Node.js script:</source>
          <target state="translated">メインの処理スクリプトは通常のNode.jsスクリプトと同じような感じです。</target>
        </trans-unit>
        <trans-unit id="965080a5c3cf16ac8bc8dc34615d308efa32bbcb" translate="yes" xml:space="preserve">
          <source>The main process script is like a normal Node.js script:</source>
          <target state="translated">メインの処理スクリプトは、通常のNode.jsスクリプトのような感じです。</target>
        </trans-unit>
        <trans-unit id="3fb1dec32f4194c50565b55cc4ce1ce1b55b86db" translate="yes" xml:space="preserve">
          <source>The main process should listen for &lt;code&gt;channel&lt;/code&gt; with &lt;a href=&quot;ipc-main#ipcmainhandlechannel-listener&quot;&gt;&lt;code&gt;ipcMain.handle()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メインプロセスは、&lt;a href=&quot;ipc-main#ipcmainhandlechannel-listener&quot;&gt; &lt;code&gt;ipcMain.handle()&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;channel&lt;/code&gt; をリッスンする必要があります。</target>
        </trans-unit>
        <trans-unit id="30517931a8f87b0311fae62c14d68aeb359fd488" translate="yes" xml:space="preserve">
          <source>The main process, commonly a file named &lt;code&gt;main.js&lt;/code&gt;, is the entry point to every Electron app. It controls the life of the app, from open to close. It also manages native elements such as the Menu, Menu Bar, Dock, Tray, etc. The main process is responsible for creating each new renderer process in the app. The full Node API is built in.</source>
          <target state="translated">メインプロセス、通常は &lt;code&gt;main.js&lt;/code&gt; という名前のファイルは、すべてのElectronアプリへのエントリポイントです。オープンからクローズまで、アプリのライフを制御します。また、メニュー、メニューバー、ドック、トレイなどのネイティブ要素も管理します。メインプロセスは、アプリで新しいレンダラープロセスをそれぞれ作成します。完全なNode APIが組み込まれています。</target>
        </trans-unit>
        <trans-unit id="58ee7427b3e1f3e8703b212718bd4baf7ceab18b" translate="yes" xml:space="preserve">
          <source>The main script may look as follows:</source>
          <target state="translated">メインスクリプトは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="4d1e177ca0104f10bcaf25e55ec1377a3d7bbce4" translate="yes" xml:space="preserve">
          <source>The main script specifies the entry point of your Electron application (in our case, the &lt;code&gt;main.js&lt;/code&gt; file) that will run the Main process. Typically, the script that runs in the Main process controls the lifecycle of the application, displays the graphical user interface and its elements, performs native operating system interactions, and creates Renderer processes within web pages. An Electron application can have only one Main process.</source>
          <target state="translated">メインスクリプトは、メインプロセスを実行するElectronアプリケーションのエントリポイント（この場合は &lt;code&gt;main.js&lt;/code&gt; ファイル）を指定します。通常、メインプロセスで実行されるスクリプトは、アプリケーションのライフサイクルを制御し、グラフィカルユーザーインターフェイスとその要素を表示し、ネイティブオペレーティングシステムの相互作用を実行し、Webページ内にレンダラープロセスを作成します。 Electronアプリケーションは、メインプロセスを1つだけ持つことができます。</target>
        </trans-unit>
        <trans-unit id="656d491b53b6fa159180b404effa2b3a421b4d47" translate="yes" xml:space="preserve">
          <source>The method underlying this event is built to handle older macOS-style trackpad swiping, where the content on the screen doesn't move with the swipe. Most macOS trackpads are not configured to allow this kind of swiping anymore, so in order for it to emit properly the 'Swipe between pages' preference in &lt;code&gt;System Preferences &amp;gt; Trackpad &amp;gt; More Gestures&lt;/code&gt; must be set to 'Swipe with two or three fingers'.</source>
          <target state="translated">このイベントの基礎となるメソッドは、画面上のコンテンツがスワイプで移動しない、古いmacOSスタイルのトラックパッドスワイプを処理するように構築されています。ほとんどのmacOSトラックパッドは、この種のスワイプを許可するように構成されていないため、 &lt;code&gt;System Preferences &amp;gt; Trackpad &amp;gt; More Gestures&lt;/code&gt; 「ページ間をスワイプ」設定を適切に送信するには、「2本または3本の指でスワイプ」に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="1e5bb90d65721405e2b6798587777de6453c9216" translate="yes" xml:space="preserve">
          <source>The method will also not return if the extension's manifest is missing or incomplete.</source>
          <target state="translated">また、このメソッドは、拡張機能のマニフェストが見つからない場合や不完全な場合にも戻りません。</target>
        </trans-unit>
        <trans-unit id="f2409a2b03328abce25bd4692a534d2ff7fe7e8e" translate="yes" xml:space="preserve">
          <source>The methods of &lt;code&gt;WebRequest&lt;/code&gt; accept an optional &lt;code&gt;filter&lt;/code&gt; and a &lt;code&gt;listener&lt;/code&gt;. The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when the API's event has happened. The &lt;code&gt;details&lt;/code&gt; object describes the request.</source>
          <target state="translated">&lt;code&gt;WebRequest&lt;/code&gt; のメソッドは、オプションの &lt;code&gt;filter&lt;/code&gt; と &lt;code&gt;listener&lt;/code&gt; 受け入れます。 &lt;code&gt;listener&lt;/code&gt; で呼び出される &lt;code&gt;listener(details)&lt;/code&gt; APIのイベントが発生したとき。 &lt;code&gt;details&lt;/code&gt; オブジェクトは、要求を記述する。</target>
        </trans-unit>
        <trans-unit id="1263854ac164eefd7b257aa2b5a4652d6be04b02" translate="yes" xml:space="preserve">
          <source>The methods of &lt;code&gt;WebRequest&lt;/code&gt; accept an optional &lt;code&gt;filter&lt;/code&gt; and a &lt;code&gt;listener&lt;/code&gt;. The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when the API's event has happened. The &lt;code&gt;details&lt;/code&gt; object describes the request. Passing &lt;code&gt;null&lt;/code&gt; as &lt;code&gt;listener&lt;/code&gt; will unsubscribe from the event.</source>
          <target state="translated">&lt;code&gt;WebRequest&lt;/code&gt; のメソッドは、オプションの &lt;code&gt;filter&lt;/code&gt; と &lt;code&gt;listener&lt;/code&gt; 受け入れます。 &lt;code&gt;listener&lt;/code&gt; で呼び出される &lt;code&gt;listener(details)&lt;/code&gt; APIのイベントが発生したとき。 &lt;code&gt;details&lt;/code&gt; オブジェクトは、要求を記述する。 &lt;code&gt;listener&lt;/code&gt; として &lt;code&gt;null&lt;/code&gt; を渡すと、イベントのサブスクリプションが解除されます。</target>
        </trans-unit>
        <trans-unit id="02dfe6ee6ff7ce4a1b723feacfd9b47eeb84e18e" translate="yes" xml:space="preserve">
          <source>The module works like &lt;a href=&quot;https://github.com/electron/windows-installer&quot;&gt;&lt;code&gt;electron-winstaller&lt;/code&gt;&lt;/a&gt; and similar modules in that its scope is limited to building snap packages. You can install it with:</source>
          <target state="translated">モジュールは、スコープがスナップパッケージのビルドに限定されている点で、&lt;a href=&quot;https://github.com/electron/windows-installer&quot;&gt; &lt;code&gt;electron-winstaller&lt;/code&gt; &lt;/a&gt;および類似のモジュールと同様に機能します。あなたはそれをインストールすることができます：</target>
        </trans-unit>
        <trans-unit id="cb8604cf10f9ac649333a12bb463d49c84a13cf9" translate="yes" xml:space="preserve">
          <source>The most common case is to use template images for a menu bar icon so it can adapt to both light and dark menu bars.</source>
          <target state="translated">最も一般的なケースは、メニューバーのアイコンにテンプレート画像を使用することで、明るいメニューバーと暗いメニューバーの両方に適応することができます。</target>
        </trans-unit>
        <trans-unit id="51a8c48f05d72209d4388ba3ac467808885912ee" translate="yes" xml:space="preserve">
          <source>The most common case is to use template images for a menu bar icon, so it can adapt to both light and dark menu bars.</source>
          <target state="translated">メニューバーのアイコンにテンプレート画像を使用するのが一般的なケースなので、明るいメニューバーにも暗いメニューバーにも適応できます。</target>
        </trans-unit>
        <trans-unit id="1b94e875d0b85466a93df9fb0fac2134d2b4034a" translate="yes" xml:space="preserve">
          <source>The most comprehensive tool to debug individual renderer processes is the Chromium Developer Toolset. It is available for all renderer processes, including instances of &lt;code&gt;BrowserWindow&lt;/code&gt;, &lt;code&gt;BrowserView&lt;/code&gt;, and &lt;code&gt;WebView&lt;/code&gt;. You can open them programmatically by calling the &lt;code&gt;openDevTools()&lt;/code&gt; API on the &lt;code&gt;webContents&lt;/code&gt; of the instance:</source>
          <target state="translated">個々のレンダラープロセスをデバッグするための最も包括的なツールは、Chromium Developer Toolsetです。 &lt;code&gt;BrowserWindow&lt;/code&gt; 、 &lt;code&gt;BrowserView&lt;/code&gt; 、および &lt;code&gt;WebView&lt;/code&gt; のインスタンスを含むすべてのレンダラープロセスで使用できます。インスタンスの &lt;code&gt;webContents&lt;/code&gt; で &lt;code&gt;openDevTools()&lt;/code&gt; APIを呼び出すことにより、プログラムでそれらを開くことができます。</target>
        </trans-unit>
        <trans-unit id="9279298928bc0dfa7b7dabeac0471502dfbbce67" translate="yes" xml:space="preserve">
          <source>The name of the extension is returned by &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt;, and you can pass the name of the extension to the &lt;code&gt;BrowserWindow.removeDevToolsExtension&lt;/code&gt; API to unload it.</source>
          <target state="translated">拡張機能の名前は &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt; によって返され、拡張機能の名前を &lt;code&gt;BrowserWindow.removeDevToolsExtension&lt;/code&gt; APIに渡してアンロードできます。</target>
        </trans-unit>
        <trans-unit id="30a79e8d6966a4a2414fe7b9771b3c9f123cf632" translate="yes" xml:space="preserve">
          <source>The native Node modules are supported by Electron, but since Electron is very likely to use a different V8 version from the Node binary installed in your system, you have to manually specify the location of Electron's headers when building native modules.</source>
          <target state="translated">ネイティブなNodeモジュールはElectronによってサポートされていますが、ElectronはシステムにインストールされているNodeバイナリとは異なるV8バージョンを使用する可能性が高いため、ネイティブモジュールをビルドする際にはElectronのヘッダの位置を手動で指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="b7946f3aee148212b0466cff97ef58316736f962" translate="yes" xml:space="preserve">
          <source>The native type of the handle is &lt;code&gt;HWND&lt;/code&gt; on Windows, &lt;code&gt;NSView*&lt;/code&gt; on macOS, and &lt;code&gt;Window&lt;/code&gt; (&lt;code&gt;unsigned long&lt;/code&gt;) on Linux.</source>
          <target state="translated">ハンドルのネイティブタイプは、Windowsでは &lt;code&gt;HWND&lt;/code&gt; 、macOSでは &lt;code&gt;NSView*&lt;/code&gt; 、Linuxでは &lt;code&gt;Window&lt;/code&gt; （ &lt;code&gt;unsigned long&lt;/code&gt; ）です。</target>
        </trans-unit>
        <trans-unit id="71f5e2f019afcb5feb85a1c99c89b1e3ad5dffb2" translate="yes" xml:space="preserve">
          <source>The newly created &lt;code&gt;BrowserWindow&lt;/code&gt; will inherit the parent window's options by default. To override inherited options you can set them in the &lt;code&gt;features&lt;/code&gt; string.</source>
          <target state="translated">新しく作成された &lt;code&gt;BrowserWindow&lt;/code&gt; は、デフォルトで親ウィンドウのオプションを継承します。継承されたオプションを上書きするには、 &lt;code&gt;features&lt;/code&gt; 文字列で設定できます。</target>
        </trans-unit>
        <trans-unit id="2a89274ff334223332ddb2c643ba3507a28917fb" translate="yes" xml:space="preserve">
          <source>The number of buttons in thumbnail toolbar should be no greater than 7 due to the limited room. Once you setup the thumbnail toolbar, the toolbar cannot be removed due to the platform's limitation. But you can call the API with an empty array to clean the buttons.</source>
          <target state="translated">サムネイルツールバーのボタン数は、スペースが限られているため、7個以下にしてください。一度サムネイルツールバーを設定すると、プラットフォームの制限によりツールバーを削除することはできません。しかし、空の配列でAPIを呼び出してボタンをきれいにすることはできます。</target>
        </trans-unit>
        <trans-unit id="de0ba21eddc684508461b5df5939dc591c49c462" translate="yes" xml:space="preserve">
          <source>The number represented by &lt;code&gt;status&lt;/code&gt; means different things on different platforms: on Windows its potential values can be found &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/printdocs/printer-info-2&quot;&gt;here&lt;/a&gt;, and on Linux and macOS they can be found &lt;a href=&quot;https://www.cups.org/doc/cupspm.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;status&lt;/code&gt; 表される数値は、プラットフォームごとに異なることを意味します。Windowsでは、その潜在的な値は&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/printdocs/printer-info-2&quot;&gt;ここ&lt;/a&gt;にあり、LinuxおよびmacOSでは&lt;a href=&quot;https://www.cups.org/doc/cupspm.html&quot;&gt;ここにあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="125ea8def83a481dab8fbddf8d5749a2b90d5cbe" translate="yes" xml:space="preserve">
          <source>The official symbol server URL for Electron is &lt;a href=&quot;https://electron-symbols.githubapp.com&quot;&gt;https://electron-symbols.githubapp.com&lt;/a&gt;. You cannot visit this URL directly, you must add it to the symbol path of your debugging tool. In the examples below, a local cache directory is used to avoid repeatedly fetching the PDB from the server. Replace &lt;code&gt;c:\code\symbols&lt;/code&gt; with an appropriate cache directory on your machine.</source>
          <target state="translated">Electronの公式のシンボルサーバーURLは&lt;a href=&quot;https://electron-symbols.githubapp.com&quot;&gt;https://electron-symbols.githubapp.com&lt;/a&gt;です。このURLに直接アクセスすることはできません。デバッグツールのシンボルパスに追加する必要があります。以下の例では、ローカルキャッシュディレクトリを使用して、サーバーからPDBが繰り返しフェッチされないようにしています。 &lt;code&gt;c:\code\symbols&lt;/code&gt; をマシンの適切なキャッシュディレクトリに置き換えます。</target>
        </trans-unit>
        <trans-unit id="3a5320d97c189eed97f6f2ddb3bcdb6d0662888c" translate="yes" xml:space="preserve">
          <source>The official symbol server URL for Electron is &lt;a href=&quot;https://symbols.electronjs.org.&quot;&gt;https://symbols.electronjs.org.&lt;/a&gt; You cannot visit this URL directly, you must add it to the symbol path of your debugging tool. In the examples below, a local cache directory is used to avoid repeatedly fetching the PDB from the server. Replace &lt;code&gt;c:\code\symbols&lt;/code&gt; with an appropriate cache directory on your machine.</source>
          <target state="translated">Electronの公式シンボルサーバーURLは&lt;a href=&quot;https://symbols.electronjs.org.&quot;&gt;https://symbols.electronjs.orgです。&lt;/a&gt;このURLに直接アクセスすることはできません。デバッグツールのシンボルパスに追加する必要があります。以下の例では、ローカルキャッシュディレクトリを使用して、サーバーからPDBを繰り返しフェッチしないようにしています。 &lt;code&gt;c:\code\symbols&lt;/code&gt; をマシン上の適切なキャッシュディレクトリに置き換えます。</target>
        </trans-unit>
        <trans-unit id="008325aba6751725e103a92cb088a5a8c8c92af9" translate="yes" xml:space="preserve">
          <source>The old &quot;Quick Start&quot; document that used to live here has been split up into two documents:</source>
          <target state="translated">ここに住んでいた昔の「クイックスタート」のドキュメントは、2つのドキュメントに分かれています。</target>
        </trans-unit>
        <trans-unit id="fa8cd0d5e0019201e7bd835902c5ff0cd1f02674" translate="yes" xml:space="preserve">
          <source>The only way to load a native module safely for now, is to make sure the app loads no native modules after the Web Workers get started.</source>
          <target state="translated">今のところ安全にネイティブモジュールをロードする唯一の方法は、Web Workerが起動した後にアプリがネイティブモジュールをロードしないようにすることです。</target>
        </trans-unit>
        <trans-unit id="b67b22bb4613c10e8ca9cfb0ddb5f758eef8e0d3" translate="yes" xml:space="preserve">
          <source>The original size is 0 and each increment above or below represents zooming 20% larger or smaller to default limits of 300% and 50% of original size, respectively. The formula for this is &lt;code&gt;scale := 1.2 ^ level&lt;/code&gt;.</source>
          <target state="translated">元のサイズは0で、上下の各増分は、元のサイズのデフォルトの制限である300％と50％にそれぞれ20％大きくまたは小さくズームすることを表します。この式は、 &lt;code&gt;scale := 1.2 ^ level&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bf9949f4fb2156fb17fc40e74580436ede2d40f5" translate="yes" xml:space="preserve">
          <source>The other building steps are exactly the same.</source>
          <target state="translated">他の建物のステップは全く同じです。</target>
        </trans-unit>
        <trans-unit id="81ea8998cc56ab5955043c21441988d75cde142b" translate="yes" xml:space="preserve">
          <source>The output should look roughly like this:</source>
          <target state="translated">出力は大体こんな感じになるはずです。</target>
        </trans-unit>
        <trans-unit id="e161ecf856105089a99c6b53bfa26e65e3c5ce6d" translate="yes" xml:space="preserve">
          <source>The possible values and behaviors of the &lt;code&gt;type&lt;/code&gt; option are platform dependent. Possible values are:</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; オプションの可能な値と動作は、プラットフォームによって異なります。可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1238273cd66721667847a8ea46f8156223d79358" translate="yes" xml:space="preserve">
          <source>The prebuilt &lt;code&gt;ia32&lt;/code&gt; (&lt;code&gt;i686&lt;/code&gt;) and &lt;code&gt;x64&lt;/code&gt; (&lt;code&gt;amd64&lt;/code&gt;) binaries of Electron are built on Ubuntu 12.04, the &lt;code&gt;armv7l&lt;/code&gt; binary is built against ARM v7 with hard-float ABI and NEON for Debian Wheezy.</source>
          <target state="translated">Electron のビルド済み &lt;code&gt;ia32&lt;/code&gt; （ &lt;code&gt;i686&lt;/code&gt; ）および &lt;code&gt;x64&lt;/code&gt; （ &lt;code&gt;amd64&lt;/code&gt; ）バイナリは、Ubuntu 12.04でビルドされ、 &lt;code&gt;armv7l&lt;/code&gt; バイナリは、Debian WheezyのハードフロートABIおよびNEONを備えたARM v7に対してビルドされます。</target>
        </trans-unit>
        <trans-unit id="f433e72a66d43641e662af7724c0c5f47ea2d57a" translate="yes" xml:space="preserve">
          <source>The prebuilt binaries of Electron are built on Ubuntu 18.04.</source>
          <target state="translated">Electronのビルド済みバイナリはUbuntu 18.04上に構築されています。</target>
        </trans-unit>
        <trans-unit id="52fda51a1d9ac2659bf2b70b55985917d8187fc2" translate="yes" xml:space="preserve">
          <source>The preferred way for Unity to instruct your application on what to do is using parameters. You can find them in your application in the global variable &lt;code&gt;process.argv&lt;/code&gt;.</source>
          <target state="translated">Unityがアプリケーションに何をすべきかを指示するための好ましい方法は、パラメーターを使用することです。それらは、アプリケーションのグローバル変数 &lt;code&gt;process.argv&lt;/code&gt; にあります。</target>
        </trans-unit>
        <trans-unit id="5ef64d4fac03a4c17764aa2247db372466529a0b" translate="yes" xml:space="preserve">
          <source>The preload script can indirectly access all APIs from the main process through the &lt;code&gt;remote&lt;/code&gt; and &lt;code&gt;ipcRenderer&lt;/code&gt; modules.</source>
          <target state="translated">プリロードスクリプトは、メインプロセスから &lt;code&gt;remote&lt;/code&gt; モジュールと &lt;code&gt;ipcRenderer&lt;/code&gt; モジュールを介してすべてのAPIに間接的にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="b70e88b19e2f46234ac6fbb5e859622ac9fd34e6" translate="yes" xml:space="preserve">
          <source>The preload script can indirectly access all APIs from the main process through the &lt;code&gt;remote&lt;/code&gt; and &lt;code&gt;ipcRenderer&lt;/code&gt; modules. This is how &lt;code&gt;fs&lt;/code&gt; (used above) and other modules are implemented: They are proxies to remote counterparts in the main process.</source>
          <target state="translated">プリロードスクリプトは、 &lt;code&gt;remote&lt;/code&gt; モジュールと &lt;code&gt;ipcRenderer&lt;/code&gt; モジュールを介して、メインプロセスからすべてのAPIに間接的にアクセスできます。これが &lt;code&gt;fs&lt;/code&gt; （上記で使用）とその他のモジュールの実装方法です。これらは、メインプロセスのリモートの相手のプロキシです。</target>
        </trans-unit>
        <trans-unit id="2f78e0c6f474005db369426975ffe7a44b2b1fc0" translate="yes" xml:space="preserve">
          <source>The preload script must be contained in a single script, but it is possible to have complex preload code composed with multiple modules by using a tool like browserify, as explained below. In fact, browserify is already used by electron to provide a node-like environment to the preload script.</source>
          <target state="translated">プリロードスクリプトは1つのスクリプトに含まれている必要がありますが、以下で説明するように、browserifyのようなツールを使用することで、複数のモジュールで構成された複雑なプリロードコードを持つことが可能です。実際には、すでにElectronではbrowserifyを利用して、プリロードスクリプトにノード的な環境を提供しています。</target>
        </trans-unit>
        <trans-unit id="3b30e464563c2da90a17cf852169063642dfe93f" translate="yes" xml:space="preserve">
          <source>The preload script must be contained in a single script, but it is possible to have complex preload code composed with multiple modules by using a tool like webpack or browserify. An example of using browserify is below.</source>
          <target state="translated">プリロードスクリプトは1つのスクリプトに含まれている必要がありますが、webpackやbrowserifyのようなツールを使用することで、複数のモジュールで構成された複雑なプリロードコードを作成することが可能です。browserifyの使用例を以下に示します。</target>
        </trans-unit>
        <trans-unit id="c0de20e0722e9e32fadbeb6c3d6bc00e6d698502" translate="yes" xml:space="preserve">
          <source>The prepare release script will do the following: 1. Check if a release is already in process and if so it will halt. 2. Create a release branch. 3. Bump the version number in several files. See &lt;a href=&quot;https://github.com/electron/electron/commit/78ec1b8f89b3886b856377a1756a51617bc33f5a&quot;&gt;this bump commit&lt;/a&gt; for an example. 4. Create a draft release on GitHub with auto-generated release notes. 5. Push the release branch. 6. Call the APIs to run the release builds.</source>
          <target state="translated">リリース準備スクリプトは次のことを行います。1.リリースがすでに処理中であるかどうかを確認し、処理中である場合は停止します。2.リリースブランチを作成します。3.バージョン番号をいくつかのファイルにバンプします。例については、&lt;a href=&quot;https://github.com/electron/electron/commit/78ec1b8f89b3886b856377a1756a51617bc33f5a&quot;&gt;このバンプコミット&lt;/a&gt;を参照してください。4.自動生成されたリリースノートを使用して、GitHubでドラフトリリースを作成します。5.リリースブランチをプッシュします。6. APIを呼び出して、リリースビルドを実行します。</target>
        </trans-unit>
        <trans-unit id="f58a8b975b36977ca2a1bde930770d09c3751eb7" translate="yes" xml:space="preserve">
          <source>The process is as follows:</source>
          <target state="translated">その流れは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="325a37750152543c028c0dff462aed925ab2175d" translate="yes" xml:space="preserve">
          <source>The property is only available in session's &lt;code&gt;will-download&lt;/code&gt; callback function. If user doesn't set the save path via the property, Electron will use the original routine to determine the save path; this usually prompts a save dialog.</source>
          <target state="translated">このプロパティは、セッションの &lt;code&gt;will-download&lt;/code&gt; コールバック関数でのみ使用できます。ユーザーがプロパティを介して保存パスを設定しない場合、Electronは元のルーチンを使用して保存パスを決定します。これは通常、保存ダイアログを表示します。</target>
        </trans-unit>
        <trans-unit id="4c16399b3abfc9798f8cf1c54ca267905ac305a5" translate="yes" xml:space="preserve">
          <source>The proxy has limited standard functionality implemented to be compatible with traditional web pages. For full control of the new window you should create a &lt;code&gt;BrowserWindow&lt;/code&gt; directly.</source>
          <target state="translated">プロキシには、従来のWebページと互換性があるように実装された標準機能が制限されています。新しいウィンドウを完全に制御するには、 &lt;code&gt;BrowserWindow&lt;/code&gt; を直接作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="6ed14764967dcc3afa5cf06693453c5de6781001" translate="yes" xml:space="preserve">
          <source>The renderer process can handle the message by listening to &lt;code&gt;channel&lt;/code&gt; with the &lt;a href=&quot;ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">レンダラープロセスは、&lt;a href=&quot;ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt;モジュールで &lt;code&gt;channel&lt;/code&gt; をリッスンしてメッセージを処理できます。</target>
        </trans-unit>
        <trans-unit id="6357d30e30adeab3af7b2ad8bc2f9d5463155c10" translate="yes" xml:space="preserve">
          <source>The renderer process is a browser window in your app. Unlike the main process, there can be multiple of these and each is run in a separate process. They can also be hidden.</source>
          <target state="translated">レンダラープロセスとは、アプリ内のブラウザウィンドウのことです。メイン プロセスとは異なり、複数のプロセスがあり、それぞれが別のプロセスで実行されます。また、非表示にすることもできます。</target>
        </trans-unit>
        <trans-unit id="2981d6faaf1e0d9461c1a14f3f83abf43711910d" translate="yes" xml:space="preserve">
          <source>The renderer process is no different than a normal web page, except for the extra ability to use node modules:</source>
          <target state="translated">レンダラのプロセスは、ノードモジュールを使用するという特別な機能を除いては、通常のウェブページと何ら変わりません。</target>
        </trans-unit>
        <trans-unit id="18cb258290471e07e5419bb6084466ad2d4c6d44" translate="yes" xml:space="preserve">
          <source>The return value of this method indicates whether or not this instance of your application successfully obtained the lock. If it failed to obtain the lock, you can assume that another instance of your application is already running with the lock and exit immediately.</source>
          <target state="translated">このメソッドの戻り値は、アプリケーションのこのインスタンスが正常にロックを取得したかどうかを示します。ロックの取得に失敗した場合は、アプリケーションの別のインスタンスがすでにロックを持って実行されていると仮定して、直ちに終了します。</target>
        </trans-unit>
        <trans-unit id="060a98827d81456db3d844f3631a6ef323b8751f" translate="yes" xml:space="preserve">
          <source>The risk to meeting our stability timeline must be low.</source>
          <target state="translated">安定のタイムラインを満たすためのリスクは低いはずです。</target>
        </trans-unit>
        <trans-unit id="276a0fb055f387caa3a6309b20a6d89174096aac" translate="yes" xml:space="preserve">
          <source>The simplest and the fastest way to distribute your newly created app is using &lt;a href=&quot;https://www.electronforge.io&quot;&gt;Electron Forge&lt;/a&gt;.</source>
          <target state="translated">新しく作成したアプリを配布する最も簡単で最速の方法は、&lt;a href=&quot;https://www.electronforge.io&quot;&gt;ElectronForge&lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="fee4c15168b7bd8906486990b32196cc673c0da4" translate="yes" xml:space="preserve">
          <source>The source code of Electron is separated into a few parts, mostly following Chromium on the separation conventions.</source>
          <target state="translated">Electronのソースコードはいくつかの部分に分離されています。</target>
        </trans-unit>
        <trans-unit id="4a11b559f814a1c283145da0379f6db69b8584d1" translate="yes" xml:space="preserve">
          <source>The string follows the same format as the features string in &lt;code&gt;window.open&lt;/code&gt;. A name by itself is given a &lt;code&gt;true&lt;/code&gt; boolean value. A preference can be set to another value by including an &lt;code&gt;=&lt;/code&gt;, followed by the value. Special values &lt;code&gt;yes&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; are interpreted as &lt;code&gt;true&lt;/code&gt;, while &lt;code&gt;no&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; are interpreted as &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">文字列は &lt;code&gt;window.open&lt;/code&gt; の features文字列と同じ形式に従います。名前自体には &lt;code&gt;true&lt;/code&gt; ブール値が与えられます。 &lt;code&gt;=&lt;/code&gt; とそれに続く値を含めることで、設定を別の値に設定できます。特別な値 &lt;code&gt;yes&lt;/code&gt; および &lt;code&gt;1&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; と解釈され、 &lt;code&gt;no&lt;/code&gt; および &lt;code&gt;0&lt;/code&gt; は &lt;code&gt;false&lt;/code&gt; と解釈されます。</target>
        </trans-unit>
        <trans-unit id="aaf00317265afc530080d71d6dca62e5c84a8698" translate="yes" xml:space="preserve">
          <source>The structure of a renamed app would be like:</source>
          <target state="translated">リネームされたアプリの構造はこんな感じでしょう。</target>
        </trans-unit>
        <trans-unit id="cc7693ce1e285d2c415bac1b5c914d37430aa520" translate="yes" xml:space="preserve">
          <source>The trace option will first be reset to the default option (&lt;code&gt;record_mode&lt;/code&gt; set to &lt;code&gt;record-until-full&lt;/code&gt;, &lt;code&gt;enable_sampling&lt;/code&gt; and &lt;code&gt;enable_systrace&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;) before options parsed from &lt;code&gt;traceOptions&lt;/code&gt; are applied on it.</source>
          <target state="translated">&lt;code&gt;traceOptions&lt;/code&gt; から解析されたオプションが適用される前に、トレースオプションは最初にデフォルトオプションにリセットされます（ &lt;code&gt;record_mode&lt;/code&gt; が &lt;code&gt;record-until-full&lt;/code&gt; に設定され、 &lt;code&gt;enable_sampling&lt;/code&gt; および &lt;code&gt;enable_systrace&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; に設定されます）。</target>
        </trans-unit>
        <trans-unit id="4f1af3873fd08be12d0ac8b382cad1cdf4f1c9db" translate="yes" xml:space="preserve">
          <source>The transferred &lt;code&gt;MessagePort&lt;/code&gt; objects will be available in the main process as &lt;a href=&quot;message-port-main&quot;&gt;&lt;code&gt;MessagePortMain&lt;/code&gt;&lt;/a&gt; objects by accessing the &lt;code&gt;ports&lt;/code&gt; property of the emitted event.</source>
          <target state="translated">転送された &lt;code&gt;MessagePort&lt;/code&gt; オブジェクトは、&lt;a href=&quot;message-port-main&quot;&gt; &lt;code&gt;MessagePortMain&lt;/code&gt; &lt;/a&gt;されたイベントの &lt;code&gt;ports&lt;/code&gt; プロパティにアクセスすることにより、MessagePortMainオブジェクトとしてメインプロセスで使用できます。</target>
        </trans-unit>
        <trans-unit id="d4c24f47482fc123fcac874f77e2c0762d367212" translate="yes" xml:space="preserve">
          <source>The transferred &lt;code&gt;MessagePortMain&lt;/code&gt; objects will be available in the renderer process by accessing the &lt;code&gt;ports&lt;/code&gt; property of the emitted event. When they arrive in the renderer, they will be native DOM &lt;code&gt;MessagePort&lt;/code&gt; objects.</source>
          <target state="translated">転送された &lt;code&gt;MessagePortMain&lt;/code&gt; オブジェクトは、発行されたイベントの &lt;code&gt;ports&lt;/code&gt; プロパティにアクセスすることにより、レンダラープロセスで使用できます。それらがレンダラーに到着すると、ネイティブ &lt;code&gt;MessagePort&lt;/code&gt; オブジェクトになります。</target>
        </trans-unit>
        <trans-unit id="6aebac9da6bd250ae1889e17eabd700eb379b422" translate="yes" xml:space="preserve">
          <source>The two most important pieces of information needed to evaluate the report are a description of the bug and a simple test case to recreate it. It easier to fix a bug if it can be reproduced.</source>
          <target state="translated">報告書を評価するために必要な最も重要な情報は、バグの説明とそれを再現するための簡単なテストケースの2つです。再現できれば、バグを修正しやすくなります。</target>
        </trans-unit>
        <trans-unit id="5e624be9746c71671b51f7854a519ac5b3682e7c" translate="yes" xml:space="preserve">
          <source>The two most important pieces of information needed to evaluate the report are a description of the bug and a simple test case to recreate it. It is easier to fix a bug if it can be reproduced.</source>
          <target state="translated">報告書を評価するために必要な最も重要な情報は、バグの説明とそれを再現するための簡単なテストケースの2つです。再現できれば、バグを修正しやすくなります。</target>
        </trans-unit>
        <trans-unit id="a449aea3f35918b88ea1e6b94d950e512a220b9e" translate="yes" xml:space="preserve">
          <source>The usage is similar to the other &lt;code&gt;register{Any}Protocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;code&gt;Readable&lt;/code&gt; object or an object that has the &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;statusCode&lt;/code&gt;, and &lt;code&gt;headers&lt;/code&gt; properties.</source>
          <target state="translated">使用法は他の &lt;code&gt;register{Any}Protocol&lt;/code&gt; と似ていますが、 &lt;code&gt;Readable&lt;/code&gt; オブジェクトまたは &lt;code&gt;data&lt;/code&gt; 、 &lt;code&gt;statusCode&lt;/code&gt; 、および &lt;code&gt;headers&lt;/code&gt; プロパティを持つオブジェクトのいずれかで &lt;code&gt;callback&lt;/code&gt; を呼び出す必要がある点が異なります。</target>
        </trans-unit>
        <trans-unit id="9812fb60be5cc4cec7a4283a492d96ea38c7d135" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;a href=&quot;app#event-certificate-error&quot;&gt;the &lt;code&gt;certificate-error&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用方法は同じである&lt;a href=&quot;app#event-certificate-error&quot;&gt; &lt;code&gt;certificate-error&lt;/code&gt; &lt;/a&gt;のイベント &lt;code&gt;app&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18eabd0a931c3b6ea20fb4f5ade4b250dc83120d" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;a href=&quot;app#event-login&quot;&gt;the &lt;code&gt;login&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用方法は同じである&lt;a href=&quot;app#event-login&quot;&gt; &lt;code&gt;login&lt;/code&gt; &lt;/a&gt;のイベント &lt;code&gt;app&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b250244d415c277c40e8184450593465b1879846" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;a href=&quot;app#event-select-client-certificate&quot;&gt;the &lt;code&gt;select-client-certificate&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用方法は同じである&lt;a href=&quot;app#event-select-client-certificate&quot;&gt; &lt;code&gt;select-client-certificate&lt;/code&gt; &lt;/a&gt;のイベント &lt;code&gt;app&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ace9b5626e9a6055f530d59320c339f2a079923b" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with a &lt;code&gt;redirectRequest&lt;/code&gt; object that has the &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;referrer&lt;/code&gt;, &lt;code&gt;uploadData&lt;/code&gt; and &lt;code&gt;session&lt;/code&gt; properties.</source>
          <target state="translated">使用方法は同じである &lt;code&gt;registerFileProtocol&lt;/code&gt; ことを除いて、 &lt;code&gt;callback&lt;/code&gt; と呼ばれるべき &lt;code&gt;redirectRequest&lt;/code&gt; 持つオブジェクト &lt;code&gt;url&lt;/code&gt; 、 &lt;code&gt;method&lt;/code&gt; 、 &lt;code&gt;referrer&lt;/code&gt; 、 &lt;code&gt;uploadData&lt;/code&gt; および &lt;code&gt;session&lt;/code&gt; 特性。</target>
        </trans-unit>
        <trans-unit id="c354deec33e2861b78b407e0fb6f5660f9895b9c" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with an object that has the &lt;code&gt;url&lt;/code&gt; property.</source>
          <target state="translated">使用法は &lt;code&gt;registerFileProtocol&lt;/code&gt; と同じですが、 &lt;code&gt;callback&lt;/code&gt; は &lt;code&gt;url&lt;/code&gt; プロパティを持つオブジェクトで呼び出す必要がある点が異なります。</target>
        </trans-unit>
        <trans-unit id="73cd03309bce27e45f46724e30c057b7c9a0c160" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_class_stream_readable&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; object or an object that has the &lt;code&gt;data&lt;/code&gt; property.</source>
          <target state="translated">使用法は &lt;code&gt;registerFileProtocol&lt;/code&gt; と同じですが、 &lt;code&gt;callback&lt;/code&gt; は&lt;a href=&quot;https://nodejs.org/api/stream.html#stream_class_stream_readable&quot;&gt; &lt;code&gt;ReadableStream&lt;/code&gt; &lt;/a&gt;オブジェクトまたは &lt;code&gt;data&lt;/code&gt; プロパティを持つオブジェクトのいずれかで呼び出す必要がある点が異なります。</target>
        </trans-unit>
        <trans-unit id="87744ebc0a31f212643d2989eac5b715628df5ea" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;code&gt;Buffer&lt;/code&gt; object or an object that has the &lt;code&gt;data&lt;/code&gt; property.</source>
          <target state="translated">使用法は &lt;code&gt;registerFileProtocol&lt;/code&gt; と同じですが、 &lt;code&gt;callback&lt;/code&gt; は &lt;code&gt;Buffer&lt;/code&gt; オブジェクトまたは &lt;code&gt;data&lt;/code&gt; プロパティを持つオブジェクトのいずれかで呼び出す必要がある点が異なります。</target>
        </trans-unit>
        <trans-unit id="0aaf6840393ba02debae0d4c1295f27cd0ce66e0" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;code&gt;Buffer&lt;/code&gt; object or an object that has the &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;mimeType&lt;/code&gt;, and &lt;code&gt;charset&lt;/code&gt; properties.</source>
          <target state="translated">使用法は &lt;code&gt;registerFileProtocol&lt;/code&gt; と同じですが、 &lt;code&gt;callback&lt;/code&gt; は、 &lt;code&gt;Buffer&lt;/code&gt; オブジェクトか、 &lt;code&gt;data&lt;/code&gt; 、 &lt;code&gt;mimeType&lt;/code&gt; 、および &lt;code&gt;charset&lt;/code&gt; プロパティを持つオブジェクトのいずれかで呼び出される必要がある点が異なります。</target>
        </trans-unit>
        <trans-unit id="e32822d385bb4791bd20a3983be7890c2d12ab75" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;code&gt;String&lt;/code&gt; or an object that has the &lt;code&gt;data&lt;/code&gt; property.</source>
          <target state="translated">使用法は &lt;code&gt;registerFileProtocol&lt;/code&gt; と同じですが、 &lt;code&gt;callback&lt;/code&gt; は &lt;code&gt;String&lt;/code&gt; または &lt;code&gt;data&lt;/code&gt; プロパティを持つオブジェクトのいずれかで呼び出す必要がある点が異なります。</target>
        </trans-unit>
        <trans-unit id="03748049d6ae04e4d12dbb56a6a1247729c2d706" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;code&gt;String&lt;/code&gt; or an object that has the &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;mimeType&lt;/code&gt;, and &lt;code&gt;charset&lt;/code&gt; properties.</source>
          <target state="translated">使用法は &lt;code&gt;registerFileProtocol&lt;/code&gt; と同じですが、 &lt;code&gt;callback&lt;/code&gt; は、 &lt;code&gt;String&lt;/code&gt; または &lt;code&gt;data&lt;/code&gt; 、 &lt;code&gt;mimeType&lt;/code&gt; 、および &lt;code&gt;charset&lt;/code&gt; プロパティを持つオブジェクトのいずれかで呼び出す必要があることを除きます。</target>
        </trans-unit>
        <trans-unit id="7189e6a417d94da2937de6349a31b69e3c021fee" translate="yes" xml:space="preserve">
          <source>The usage of &lt;code&gt;selenium-webdriver&lt;/code&gt; with Electron is the same with upstream, except that you have to manually specify how to connect chrome driver and where to find Electron's binary:</source>
          <target state="translated">Electron での &lt;code&gt;selenium-webdriver&lt;/code&gt; の使用方法は、アップストリームと同じですが、chromeドライバーの接続方法とElectronのバイナリの場所を手動で指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="4acbb045832bbb7de008cac348c1d6a07239b61c" translate="yes" xml:space="preserve">
          <source>The user tasks will still show even after your application closes, so the icon and program path specified for a task should exist until your application is uninstalled.</source>
          <target state="translated">アプリケーションが終了した後もユーザータスクは表示されるので、タスクに指定されたアイコンとプログラムパスはアプリケーションがアンインストールされるまで存在していなければなりません。</target>
        </trans-unit>
        <trans-unit id="e9b99637f2515a34e3bbf90ecfdac697c2461d7d" translate="yes" xml:space="preserve">
          <source>The vast majority of Node.js modules are &lt;em&gt;not&lt;/em&gt; native. Only 400 out of the ~650.000 modules are native. However, if you do need native modules, please consult &lt;a href=&quot;using-native-node-modules&quot;&gt;this guide on how to recompile them for Electron&lt;/a&gt;.</source>
          <target state="translated">Node.jsモジュールの大部分はネイティブではあり&lt;em&gt;ません&lt;/em&gt;。〜650.000モジュールのうち400のみがネイティブです。ただし、ネイティブモジュールが必要な場合は&lt;a href=&quot;using-native-node-modules&quot;&gt;、Electron用に再コンパイルする方法&lt;/a&gt;についてこのガイドを参照してください。</target>
        </trans-unit>
        <trans-unit id="0fd8026d813ea905232959978e568e2de6501e83" translate="yes" xml:space="preserve">
          <source>The version update process is detailed explicitly in our &lt;a href=&quot;electron-versioning&quot;&gt;Versioning Doc&lt;/a&gt;.</source>
          <target state="translated">バージョン更新プロセスの詳細は、&lt;a href=&quot;electron-versioning&quot;&gt;バージョン管理ドキュメントに&lt;/a&gt;明示されています。</target>
        </trans-unit>
        <trans-unit id="0fca882e172462489277d043917c2c2af6fc1608" translate="yes" xml:space="preserve">
          <source>The workflow to format your changed code:</source>
          <target state="translated">変更したコードをフォーマットするためのワークフローです。</target>
        </trans-unit>
        <trans-unit id="4985f62db91e0a32e175c47bf1e920ee7ed7296a" translate="yes" xml:space="preserve">
          <source>The zoom factor is the zoom percent divided by 100, so 300% = 3.0.</source>
          <target state="translated">ズームファクターは、ズームパーセントを100で割ったものなので、300%=3.0となります。</target>
        </trans-unit>
        <trans-unit id="2669c327c063205625472ade42ce230661b243b9" translate="yes" xml:space="preserve">
          <source>Then execute &lt;code&gt;Electron.app&lt;/code&gt; (or &lt;code&gt;electron&lt;/code&gt; on Linux, &lt;code&gt;electron.exe&lt;/code&gt; on Windows), and Electron will start as your app. The &lt;code&gt;electron&lt;/code&gt; directory will then be your distribution to deliver to final users.</source>
          <target state="translated">次に実行 &lt;code&gt;Electron.app&lt;/code&gt; （または &lt;code&gt;electron&lt;/code&gt; 、Linux上 &lt;code&gt;electron.exe&lt;/code&gt; Windows上）、および電子アプリとして起動します。 &lt;code&gt;electron&lt;/code&gt; ディレクトリは、最終的なユーザーに提供するために配布されます。</target>
        </trans-unit>
        <trans-unit id="9fd24e6b8c7964a9f85124ee0cb90aa5f8b951f4" translate="yes" xml:space="preserve">
          <source>Then file a bug at Electron's issues list, and describe which part of the extension is not working as expected.</source>
          <target state="translated">その後、Electron の問題リストにバグを残し、拡張子のどの部分が期待通りに動作していないのかを記述してください。</target>
        </trans-unit>
        <trans-unit id="ea169d72ec8fb9e58317d4d8c139e8146a8d2349" translate="yes" xml:space="preserve">
          <source>Then manually create distributions for each platform and upload them:</source>
          <target state="translated">そして、各プラットフォーム用のディストリビューションを手動で作成してアップロードします。</target>
        </trans-unit>
        <trans-unit id="71075abbb4d96721b9fee736eb07204752987288" translate="yes" xml:space="preserve">
          <source>Then, assuming that the Xcode 6.4 DMG has been mounted at &lt;code&gt;/Volumes/Xcode&lt;/code&gt; and that your Xcode 8.2.1 install is at &lt;code&gt;/Applications/Xcode.app&lt;/code&gt;, run:</source>
          <target state="translated">次に、Xcode 6.4 DMGが &lt;code&gt;/Volumes/Xcode&lt;/code&gt; にマウントされていて、Xcode 8.2.1インストールが &lt;code&gt;/Applications/Xcode.app&lt;/code&gt; にあると仮定して、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="17f260b69ef590512ec04d500bb15b4db31d97ba" translate="yes" xml:space="preserve">
          <source>Then, create a virtual Xvfb screen and export an environment variable called DISPLAY that points to it. Chromium in Electron will automatically look for &lt;code&gt;$DISPLAY&lt;/code&gt;, so no further configuration of your app is required. This step can be automated with Ana&amp;iuml;s Betts' &lt;a href=&quot;https://github.com/anaisbetts/xvfb-maybe&quot;&gt;xvfb-maybe&lt;/a&gt;: Prepend your test commands with &lt;code&gt;xvfb-maybe&lt;/code&gt; and the little tool will automatically configure Xvfb, if required by the current system. On Windows or macOS, it will do nothing.</source>
          <target state="translated">次に、仮想Xvfb画面を作成し、それを指すDISPLAYという環境変数をエクスポートします。 ElectronのChromiumは自動的に &lt;code&gt;$DISPLAY&lt;/code&gt; 検索するため、アプリをさらに構成する必要はありません。このステップは、&lt;a href=&quot;https://github.com/anaisbetts/xvfb-maybe&quot;&gt;Ana&amp;iuml;sBettsのxvfbを使用して&lt;/a&gt;自動化できます-多分：テストコマンドの前に &lt;code&gt;xvfb-maybe&lt;/code&gt; を追加すると、現在のシステムで必要な場合、小さなツールがXvfbを自動的に構成します。 WindowsまたはmacOSでは、何もしません。</target>
        </trans-unit>
        <trans-unit id="2b200704d3fdd92791b2627d608e135073603845" translate="yes" xml:space="preserve">
          <source>Then, create a virtual xvfb screen and export an environment variable called DISPLAY that points to it. Chromium in Electron will automatically look for &lt;code&gt;$DISPLAY&lt;/code&gt;, so no further configuration of your app is required. This step can be automated with Paul Betts's &lt;a href=&quot;https://github.com/paulcbetts/xvfb-maybe&quot;&gt;xvfb-maybe&lt;/a&gt;: Prepend your test commands with &lt;code&gt;xvfb-maybe&lt;/code&gt; and the little tool will automatically configure xvfb, if required by the current system. On Windows or macOS, it will do nothing.</source>
          <target state="translated">次に、仮想xvfb画面を作成し、それを指すDISPLAYという環境変数をエクスポートします。ElectronのChromiumは自動的に &lt;code&gt;$DISPLAY&lt;/code&gt; 探すので、アプリをさらに構成する必要はありません。このステップは、Paul Bettsの&lt;a href=&quot;https://github.com/paulcbetts/xvfb-maybe&quot;&gt;xvfb-maybe&lt;/a&gt;を使用して自動化できます。テストコマンドの前に &lt;code&gt;xvfb-maybe&lt;/code&gt; を追加すると、現在のシステムで必要な場合、小さなツールがxvfbを自動的に構成します。WindowsまたはmacOSでは、何も実行されません。</target>
        </trans-unit>
        <trans-unit id="55bf9c6f8ac8ab1bf6778b2f1394facf290c2989" translate="yes" xml:space="preserve">
          <source>Then, go and install the &lt;code&gt;electron-windows-store&lt;/code&gt; CLI:</source>
          <target state="translated">次に、 &lt;code&gt;electron-windows-store&lt;/code&gt; CLI に移動してインストールします。</target>
        </trans-unit>
        <trans-unit id="72eb15729a4805941d065f88ea8bbb5580ab8d49" translate="yes" xml:space="preserve">
          <source>Then, in the main process, augment the event with a path to the file that is being dragged and an icon.</source>
          <target state="translated">次に、メイン処理では、ドラッグしているファイルのパスとアイコンでイベントを拡張します。</target>
        </trans-unit>
        <trans-unit id="f4a1638ecbe326cf45f914f93c15a4be6dfe94c3" translate="yes" xml:space="preserve">
          <source>Then, in your Electron app, require and use the module as if you were building a Node.js application:</source>
          <target state="translated">そして、Electronアプリの中で、Node.jsアプリケーションを構築しているかのように、モジュールを要求して使用します。</target>
        </trans-unit>
        <trans-unit id="b67b8ffae2dec5a6bf15577c384acab9c3035a9e" translate="yes" xml:space="preserve">
          <source>Then, in your Electron application, require the module:</source>
          <target state="translated">次に、Electronアプリケーションでは、モジュールを必要とします。</target>
        </trans-unit>
        <trans-unit id="acfbc37bb35b8dc64a08678926284923f14178bb" translate="yes" xml:space="preserve">
          <source>Then, in your test suite, you can use your test-driver as follows:</source>
          <target state="translated">そして、テストスイートでは、以下のようにテストドライバを使用します。</target>
        </trans-unit>
        <trans-unit id="64075cebafe989152ef2fc4e1a534bec9aaa1ec0" translate="yes" xml:space="preserve">
          <source>Then, open up Visual Studio. Electron is not built with Visual Studio and hence does not contain a project file - you can however open up the source code files &quot;As File&quot;, meaning that Visual Studio will open them up by themselves. You can still set breakpoints - Visual Studio will automatically figure out that the source code matches the code running in the attached process and break accordingly.</source>
          <target state="translated">次に、Visual Studioを開きます。ElectronはVisual Studioでビルドされていないため、プロジェクト・ファイルは含まれていませんが、ソース・コード・ファイルを「ファイルとして」開くことができます。ブレークポイントを設定することもできます。Visual Studioは、ソースコードが添付のプロセスで実行されているコードと一致しているかどうかを自動的に判断し、それに応じてブレークします。</target>
        </trans-unit>
        <trans-unit id="152c8ff56637023c5f144e0e8dc5699f53302f41" translate="yes" xml:space="preserve">
          <source>Then, run Electron with &lt;code&gt;electron/spec&lt;/code&gt; as the argument:</source>
          <target state="translated">次に、 &lt;code&gt;electron/spec&lt;/code&gt; を引数としてElectronを実行します。</target>
        </trans-unit>
        <trans-unit id="972c4a60ba2c597025cda850862a151cdd4dc6af" translate="yes" xml:space="preserve">
          <source>Then, run the installation of the Desktop App Converter, passing in the location of the Windows base Image (downloaded as &lt;code&gt;BaseImage-14316.wim&lt;/code&gt;), by calling &lt;code&gt;.\DesktopAppConverter.ps1 -Setup -BaseImage .\BaseImage-14316.wim&lt;/code&gt;.</source>
          <target state="translated">次に、 &lt;code&gt;.\DesktopAppConverter.ps1 -Setup -BaseImage .\BaseImage-14316.wim&lt;/code&gt; 呼び出して、Windowsベースイメージ（ &lt;code&gt;BaseImage-14316.wim&lt;/code&gt; としてダウンロード）の場所を渡して、デスクトップアプリコンバーターのインストールを実行します。</target>
        </trans-unit>
        <trans-unit id="bb5cf5c469151c5f14d54bfb8a272e43396cc203" translate="yes" xml:space="preserve">
          <source>Then, start Electron:</source>
          <target state="translated">そして、エレクトロンを起動します。</target>
        </trans-unit>
        <trans-unit id="45ddb09189f3d7087a7050982078022d3abfa53b" translate="yes" xml:space="preserve">
          <source>Then, you need to prepare three entitlements files.</source>
          <target state="translated">そして、エンタイトルメントファイルを3つ用意する必要があります。</target>
        </trans-unit>
        <trans-unit id="9c4e9d318559cb234d0162bb4b4d4b0fd556a59b" translate="yes" xml:space="preserve">
          <source>Then, you'll need to configure your in-app purchases in iTunes Connect, and include details such as name, pricing, and description that highlights the features and functionality of your in-app purchase.</source>
          <target state="translated">その後、iTunes Connectでアプリ内課金を設定し、アプリ内課金の機能や特徴を強調する名前、価格、説明などの詳細を含める必要があります。</target>
        </trans-unit>
        <trans-unit id="192ebec0df374f64d0b3dc1a9afedd99cf52b5e4" translate="yes" xml:space="preserve">
          <source>There are Node APIs that can execute binaries like &lt;code&gt;child_process.exec&lt;/code&gt;, &lt;code&gt;child_process.spawn&lt;/code&gt; and &lt;code&gt;child_process.execFile&lt;/code&gt;, but only &lt;code&gt;execFile&lt;/code&gt; is supported to execute binaries inside &lt;code&gt;asar&lt;/code&gt; archive.</source>
          <target state="translated">&lt;code&gt;child_process.exec&lt;/code&gt; 、 &lt;code&gt;child_process.spawn&lt;/code&gt; 、および &lt;code&gt;child_process.execFile&lt;/code&gt; などのバイナリを実行できるノードAPIがありますが、 &lt;code&gt;asar&lt;/code&gt; アーカイブ内でバイナリを実行するためにサポートされているのは &lt;code&gt;execFile&lt;/code&gt; のみです。</target>
        </trans-unit>
        <trans-unit id="e1c9a4723ba431993a248218effc57c06ba7510c" translate="yes" xml:space="preserve">
          <source>There are a handful of &lt;code&gt;*_TOKEN&lt;/code&gt; environment variables needed by the release scripts. Once you've generated these per-user tokens, you may want to keep them in a local file that you can &lt;code&gt;source&lt;/code&gt; when starting a release.</source>
          <target state="translated">リリーススクリプトに必要な &lt;code&gt;*_TOKEN&lt;/code&gt; 環境変数がいくつかあります。あなたはこれらのユーザごとのトークンを生成したら、あなたができることをローカルファイルにそれらを保存しておきたいことがあり &lt;code&gt;source&lt;/code&gt; のリリースを開始するとき。</target>
        </trans-unit>
        <trans-unit id="5c977ee526b253faabfc2e1542328fbc400b282b" translate="yes" xml:space="preserve">
          <source>There are a number of more advanced mechanisms for managing commits using &lt;code&gt;git rebase&lt;/code&gt; that can be used, but are beyond the scope of this guide.</source>
          <target state="translated">&lt;code&gt;git rebase&lt;/code&gt; を使用してコミットを管理するためのより高度なメカニズムがいくつかありますが、このガイドの範囲を超えています。</target>
        </trans-unit>
        <trans-unit id="9a9ef43ccd8caf2e708ab5074e4e0abb3c1ab637" translate="yes" xml:space="preserve">
          <source>There are a number of tools for signing your packaged app:</source>
          <target state="translated">パッケージ化されたアプリに署名するためのツールはいくつかあります。</target>
        </trans-unit>
        <trans-unit id="004aab477cea089e16c90111f185db2c7a87f6e9" translate="yes" xml:space="preserve">
          <source>There are questions that are asked quite often. Check this out before creating an issue:</source>
          <target state="translated">かなり頻繁に聞かれる質問があります。問題を作成する前にチェックしておきましょう。</target>
        </trans-unit>
        <trans-unit id="be1bdaab0da3f14ef03597a90453c56457e443e0" translate="yes" xml:space="preserve">
          <source>There are several different ways to install native modules:</source>
          <target state="translated">ネイティブモジュールをインストールする方法はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="f3594ebce627515e92051d5777e5ec1d0dd0b473" translate="yes" xml:space="preserve">
          <source>There are several major changes from our 1.x strategy outlined below. Each change is intended to satisfy the needs and priorities of developers/maintainers and app developers.</source>
          <target state="translated">以下に概説する1.x戦略からのいくつかの大きな変更点があります。それぞれの変更は、開発者/メンテナやアプリ開発者のニーズと優先順位を満たすことを目的としています。</target>
        </trans-unit>
        <trans-unit id="6a9ff1589bd15784761ca923818d0727ca501089" translate="yes" xml:space="preserve">
          <source>There are several ways to update an Electron application. The easiest and officially supported one is taking advantage of the built-in &lt;a href=&quot;https://github.com/Squirrel&quot;&gt;Squirrel&lt;/a&gt; framework and Electron's &lt;a href=&quot;../api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; module.</source>
          <target state="translated">Electronアプリケーションを更新するには、いくつかの方法があります。最も簡単で公式にサポートされているのは、組み込みの&lt;a href=&quot;https://github.com/Squirrel&quot;&gt;Squirrel&lt;/a&gt;フレームワークとElectronの&lt;a href=&quot;../api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt;モジュールを利用することです。</target>
        </trans-unit>
        <trans-unit id="de8a36bc5c6e7059274d4fd4661f84f4dc105cfb" translate="yes" xml:space="preserve">
          <source>There are three ways to create a &lt;code&gt;.snap&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;.snap&lt;/code&gt; ファイルを作成するには、3つの方法があります。</target>
        </trans-unit>
        <trans-unit id="0d95bb8a7dee45320eb44fe7853039108a4a1741" translate="yes" xml:space="preserve">
          <source>There is a second script, &lt;code&gt;script/patch.py&lt;/code&gt; that may be useful. Read &lt;code&gt;./script/patch.py -h&lt;/code&gt; for more information.</source>
          <target state="translated">役立つ可能性がある2番目のスクリプト &lt;code&gt;script/patch.py&lt;/code&gt; があります。読む &lt;code&gt;./script/patch.py -h&lt;/code&gt; 詳細については、を。</target>
        </trans-unit>
        <trans-unit id="a8ee2e2a678feae54ac5c2aa26213901010f7d5c" translate="yes" xml:space="preserve">
          <source>There is not a lot of Python in this repository, but it too is governed by coding style rules. &lt;code&gt;npm run lint-py&lt;/code&gt; will check all Python, using &lt;code&gt;pylint&lt;/code&gt; to do so.</source>
          <target state="translated">このリポジトリには多くのPythonはありませんが、コーディングスタイルルールによって管理されています。 &lt;code&gt;npm run lint-py&lt;/code&gt; は、 &lt;code&gt;pylint&lt;/code&gt; を使用してすべてのPythonをチェックします。</target>
        </trans-unit>
        <trans-unit id="f1bb9ca43ae7748f326896a6ab75ed4d14280b8e" translate="yes" xml:space="preserve">
          <source>There is one important caveat: Native Node.js modules (that is, modules that require compilation of native code before they can be used) will need to be compiled to be used with Electron.</source>
          <target state="translated">一つ重要な注意点があります。それは、ネイティブNode.jsモジュール(つまり、ネイティブコードをコンパイルしてから使用する必要があるモジュール)をElectronで使用するにはコンパイルが必要です。</target>
        </trans-unit>
        <trans-unit id="b0bd2b272dfa5053fccdd984e4187c6a3d7ac780" translate="yes" xml:space="preserve">
          <source>There is only one Chromium, whereas there are many thousands of apps built on Electron, all of which behave slightly differently. Accounting for those differences can yield a huge possibility space, and make it challenging to ensure the security of the platform in unusual use cases.</source>
          <target state="translated">Chromiumは1つしかありませんが、Electron上には何千ものアプリが存在し、それぞれのアプリの動作が微妙に異なっています。これらの違いを考慮に入れることで、大きな可能性が生まれる可能性があり、通常とは異なるユースケースでのプラットフォームのセキュリティを確保することが難しくなります。</target>
        </trans-unit>
        <trans-unit id="9a0e9dc372e0c40d38d2958352a0d648c5040d89" translate="yes" xml:space="preserve">
          <source>There may be instances where you want to respond to these events in the main process as well. The main process however does not have a &lt;code&gt;navigator&lt;/code&gt; object and thus cannot detect these events directly. Using Electron's inter-process communication utilities, the events can be forwarded to the main process and handled as needed, as shown in the following example.</source>
          <target state="translated">メインプロセスでもこれらのイベントに応答したい場合があります。ただし、メインプロセスには &lt;code&gt;navigator&lt;/code&gt; オブジェクトがないため、これらのイベントを直接検出できません。Electronのプロセス間通信ユーティリティを使用すると、次の例に示すように、イベントをメインプロセスに転送し、必要に応じて処理できます。</target>
        </trans-unit>
        <trans-unit id="0b31b2b1a36a2dcc19bb4b18ad6ce9ec661dac6b" translate="yes" xml:space="preserve">
          <source>There may be situations when you want to respond to online/offline events in the Main process as well. The Main process, however, does not have a &lt;code&gt;navigator&lt;/code&gt; object and cannot detect these events directly. In this case, you need to forward the events to the Main process using Electron's inter-process communication (IPC) utilities.</source>
          <target state="translated">メインプロセスでもオンライン/オフラインイベントに応答したい場合があります。ただし、メインプロセスには &lt;code&gt;navigator&lt;/code&gt; オブジェクトがなく、これらのイベントを直接検出することはできません。この場合、Electronのプロセス間通信（IPC）ユーティリティを使用して、イベントをメインプロセスに転送する必要があります。</target>
        </trans-unit>
        <trans-unit id="c76908a4e62bf35d62ab8daa6831ef2e371fa76d" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a chance we need to change our build configuration to match the build flags that node wants in &lt;code&gt;node/common.gypi&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;node/common.gypi&lt;/code&gt; でノードが必要とするビルドフラグに一致するようにビルド構成を変更する必要がある可能性があります</target>
        </trans-unit>
        <trans-unit id="4b0624f0c2d738520fefdcf3df7e9a83cea2bac5" translate="yes" xml:space="preserve">
          <source>There's an alternative way to specify a chromeless window. Instead of setting &lt;code&gt;frame&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; which disables both the titlebar and window controls, you may want to have the title bar hidden and your content extend to the full window size, yet still preserve the window controls (&quot;traffic lights&quot;) for standard window actions. You can do so by specifying the &lt;code&gt;titleBarStyle&lt;/code&gt; option:</source>
          <target state="translated">クロムレスウィンドウを指定する別の方法があります。 &lt;code&gt;frame&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定してタイトルバーとウィンドウコントロールの両方を無効にする代わりに、タイトルバーを非表示にして、コンテンツをウィンドウサイズ全体に拡張し、標準のウィンドウアクション用にウィンドウコントロール（「信号機」）を保持することができます。 。これを行うには、 &lt;code&gt;titleBarStyle&lt;/code&gt; オプションを指定します。</target>
        </trans-unit>
        <trans-unit id="9d6027584eb7ad264155776e956f099186c67b37" translate="yes" xml:space="preserve">
          <source>These are the style guidelines for coding in Electron.</source>
          <target state="translated">これらは、Electronでのコーディングのためのスタイルガイドラインです。</target>
        </trans-unit>
        <trans-unit id="b7d5fb044e65547b9059dc8dcca315472066a56d" translate="yes" xml:space="preserve">
          <source>These features bring those auditing tools to your Electron app. You can choose to add audits to your tests with Spectron or use them within DevTools with Devtron. Read on for a summary of the tools.</source>
          <target state="translated">これらの機能により、これらの監査ツールがElectronアプリケーションに導入されます。Spectronを使用してテストに監査を追加するか、Devtronを使用してDevTools内で監査を使用するかを選択できます。ツールの概要については、こちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="fd2128f3e70339d724cc007edf289f70837ab2c9" translate="yes" xml:space="preserve">
          <source>These flags are disabled owing to the fact that Electron uses BoringSSL instead of OpenSSL when building Node.js' &lt;code&gt;crypto&lt;/code&gt; module, and so will not work as designed.</source>
          <target state="translated">これらのフラグは、ElectronがNode.jsの &lt;code&gt;crypto&lt;/code&gt; モジュールを構築するときにOpenSSLではなくBoringSSLを使用するために無効になり、設計どおりに機能しません。</target>
        </trans-unit>
        <trans-unit id="e0d8c7951f5bc627a70a99d0271644e93dc97b85" translate="yes" xml:space="preserve">
          <source>These guides are intended for people working on the Electron project itself. For guides on Electron app development, see &lt;a href=&quot;../readme#guides-and-tutorials&quot;&gt;/docs/README.md&lt;/a&gt;.</source>
          <target state="translated">これらのガイドは、Electronプロジェクト自体に取り組む人々を対象としています。Electronアプリ開発のガイドについては、&lt;a href=&quot;../readme#guides-and-tutorials&quot;&gt;/docs/README.mdを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="37c441683da7e488d5912c3b7aea3e8a75035f9f" translate="yes" xml:space="preserve">
          <source>These individual tutorials expand on topics discussed in the guide above.</source>
          <target state="translated">これらの個別のチュートリアルは、上記のガイドで説明したトピックを拡張したものです。</target>
        </trans-unit>
        <trans-unit id="db666ef559d2fa34de4bff16e1c88aed612ebb1e" translate="yes" xml:space="preserve">
          <source>These mappings apply to the endpoint host in a net request (the TCP connect and host resolver in a direct connection, and the &lt;code&gt;CONNECT&lt;/code&gt; in an HTTP proxy connection, and the endpoint host in a &lt;code&gt;SOCKS&lt;/code&gt; proxy connection).</source>
          <target state="translated">これらのマッピングは、ネット要求のエンドポイントホスト（直接接続のTCP接続とホストリゾルバー、HTTPプロキシ接続の &lt;code&gt;CONNECT&lt;/code&gt; 、および &lt;code&gt;SOCKS&lt;/code&gt; プロキシ接続のエンドポイントホスト）に適用されます。</target>
        </trans-unit>
        <trans-unit id="5959f576697cc4d5a5e88b90052ec389f612923a" translate="yes" xml:space="preserve">
          <source>These methods can be accessed from the &lt;code&gt;webContents&lt;/code&gt; module:</source>
          <target state="translated">これらのメソッドには、 &lt;code&gt;webContents&lt;/code&gt; モジュールからアクセスできます。</target>
        </trans-unit>
        <trans-unit id="630557d884064039ed6c85e2f5ccbb60cf40eb54" translate="yes" xml:space="preserve">
          <source>These new features bring those auditing tools to your Electron app. You can choose to add audits to your tests with Spectron or use them within DevTools with Devtron. Read on for a summary of the tools.</source>
          <target state="translated">これらの新機能により、これらの監査ツールがElectronアプリケーションに導入されました。Spectronを使用してテストに監査を追加するか、Devtronを使用してDevTools内で監査を使用するかを選択できます。ツールの概要については、こちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="d50011daa060d619340c176124cf64eb2f14b2ad" translate="yes" xml:space="preserve">
          <source>These steps are to help app developers learn when a branch they're using becomes unsupported, but without being excessively intrusive to end users.</source>
          <target state="translated">これらのステップは、使用しているブランチがサポートされていない場合に、エンドユーザーに過度に迷惑をかけることなく、アプリ開発者が学習できるようにするためのものです。</target>
        </trans-unit>
        <trans-unit id="6939e39778ca1f214b49200414bf0041255de666" translate="yes" xml:space="preserve">
          <source>These tools will take care of all the steps you need to take to end up with a distributable Electron applications, such as packaging your application, rebranding the executable, setting the right icons and optionally creating installers.</source>
          <target state="translated">これらのツールは、アプリケーションのパッケージング、実行ファイルのリブランディング、適切なアイコンの設定、オプションでインストーラの作成など、Electronアプリケーションを配布可能な状態にするために必要なすべてのステップを処理します。</target>
        </trans-unit>
        <trans-unit id="fa7a3b8057245a9a53616fa5a39e6151d07de38f" translate="yes" xml:space="preserve">
          <source>They backport a small amount of things as needed</source>
          <target state="translated">彼らは必要に応じて少量のものを逆輸入します。</target>
        </trans-unit>
        <trans-unit id="d9ab6ef4734e8487306b0dcfa5fcac840dc24915" translate="yes" xml:space="preserve">
          <source>This API allows the user to set custom options for the save dialog that opens for the download item by default. The API is only available in session's &lt;code&gt;will-download&lt;/code&gt; callback function.</source>
          <target state="translated">このAPIを使用すると、ユーザーは、デフォルトでダウンロードアイテムに対して開く保存ダイアログのカスタムオプションを設定できます。APIは、セッションの &lt;code&gt;will-download&lt;/code&gt; コールバック関数でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="925561daf4358b3834107004f7ee8e98e9571064" translate="yes" xml:space="preserve">
          <source>This API can be called safely before the &lt;code&gt;ready&lt;/code&gt; event the &lt;code&gt;app&lt;/code&gt; module emits, it is usually used to report errors in early stage of startup. If called before the app &lt;code&gt;ready&lt;/code&gt;event on Linux, the message will be emitted to stderr, and no GUI dialog will appear.</source>
          <target state="translated">このAPIは、 &lt;code&gt;app&lt;/code&gt; モジュールが発行する &lt;code&gt;ready&lt;/code&gt; イベントの前に安全に呼び出すことができます。通常、起動の初期段階でエラーを報告するために使用されます。Linuxのapp &lt;code&gt;ready&lt;/code&gt; イベントの前に呼び出された場合、メッセージはstderrに送信され、GUIダイアログは表示されません。</target>
        </trans-unit>
        <trans-unit id="2402b140cb533396d2bbc56ab34f5b0b2e678306" translate="yes" xml:space="preserve">
          <source>This API does not support loading packed (.crx) extensions.</source>
          <target state="translated">このAPIは、パックされた(.crx)拡張機能の読み込みをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="ccce43948a3464a22a6b4489bf6c58e6939da711" translate="yes" xml:space="preserve">
          <source>This API is only available on macOS 10.14 Mojave or newer.</source>
          <target state="translated">このAPIはmacOS 10.14 Mojave以降でのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="5401090fcbe4d15f1aaf9a83475bad4f5adaeb4c" translate="yes" xml:space="preserve">
          <source>This API itself will not protect your user data; rather, it is a mechanism to allow you to do so. Native apps will need to set &lt;a href=&quot;https://developer.apple.com/documentation/security/secaccesscontrolcreateflags?language=objc&quot;&gt;Access Control Constants&lt;/a&gt; like &lt;a href=&quot;https://developer.apple.com/documentation/security/secaccesscontrolcreateflags/ksecaccesscontroluserpresence?language=objc&quot;&gt;&lt;code&gt;kSecAccessControlUserPresence&lt;/code&gt;&lt;/a&gt; on their keychain entry so that reading it would auto-prompt for Touch ID biometric consent. This could be done with &lt;a href=&quot;https://github.com/atom/node-keytar&quot;&gt;&lt;code&gt;node-keytar&lt;/code&gt;&lt;/a&gt;, such that one would store an encryption key with &lt;code&gt;node-keytar&lt;/code&gt; and only fetch it if &lt;code&gt;promptTouchID()&lt;/code&gt; resolves.</source>
          <target state="translated">このAPI自体はユーザーデータを保護しません。むしろ、それはあなたがそうすることを可能にするメカニズムです。ネイティブアプリは、キーチェーンエントリに&lt;a href=&quot;https://developer.apple.com/documentation/security/secaccesscontrolcreateflags/ksecaccesscontroluserpresence?language=objc&quot;&gt; &lt;code&gt;kSecAccessControlUserPresence&lt;/code&gt; &lt;/a&gt;などの&lt;a href=&quot;https://developer.apple.com/documentation/security/secaccesscontrolcreateflags?language=objc&quot;&gt;アクセス制御定数&lt;/a&gt;を設定して、それを読み取るとTouchIDの生体認証の同意を自動的に求めるようにする必要があります。これは、&lt;a href=&quot;https://github.com/atom/node-keytar&quot;&gt; &lt;code&gt;node-keytar&lt;/code&gt; を使用&lt;/a&gt;して実行できます。たとえば、 &lt;code&gt;node-keytar&lt;/code&gt; &lt;code&gt;promptTouchID()&lt;/code&gt; 使用して暗号化キーを格納し、promptTouchID（）が解決された場合にのみそれをフェッチします。</target>
        </trans-unit>
        <trans-unit id="6f39198b0fa0d282f88937fb4cc331794e79a4d2" translate="yes" xml:space="preserve">
          <source>This API must be called after the &lt;code&gt;ready&lt;/code&gt; event is emitted.</source>
          <target state="translated">このAPIは、 &lt;code&gt;ready&lt;/code&gt; イベントが発行された後に呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="340c45f7f9a661e9ecd6ebb65818f8f2c652ab5b" translate="yes" xml:space="preserve">
          <source>This allows you to determine ahead of time whether or not Windows will silently throw the notification away.</source>
          <target state="translated">これにより、Windowsが通知を黙って捨てるかどうかを事前に判断することができます。</target>
        </trans-unit>
        <trans-unit id="3b7e21637e7c965f48eb977557f27a7eb53b3d40" translate="yes" xml:space="preserve">
          <source>This also affects the Page Visibility API.</source>
          <target state="translated">これはPage Visibility APIにも影響します。</target>
        </trans-unit>
        <trans-unit id="b6a4200d449e3b3057da0734f19cfb37176483d7" translate="yes" xml:space="preserve">
          <source>This bug is a &quot;feature&quot; of Windows' command prompt. It happens when clicking inside the prompt window with &lt;code&gt;QuickEdit&lt;/code&gt; enabled and is intended to allow selecting and copying output text easily. Since each accidental click will pause the build process, you might want to disable this feature in the command prompt properties.</source>
          <target state="translated">このバグは、Windowsのコマンドプロンプトの「機能」です。これは、 &lt;code&gt;QuickEdit&lt;/code&gt; 有効になっているプロンプトウィンドウ内をクリックすると発生し、出力テキストを簡単に選択してコピーできるようにすることを目的としています。誤ってクリックするたびにビルドプロセスが一時停止するため、コマンドプロンプトのプロパティでこの機能を無効にすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7f46f0abdadcedbe72ac0adb70eeb03055c2be70" translate="yes" xml:space="preserve">
          <source>This can be done manually by visiting OmahaProxy in a browser, or automatically:</source>
          <target state="translated">これは、ブラウザでOmahaProxyにアクセスして手動で行うこともできますし、自動的に行うこともできます。</target>
        </trans-unit>
        <trans-unit id="470ea6e43dab4d99846613ea1d79d2843778af70" translate="yes" xml:space="preserve">
          <source>This can be set quickly in powershell (ran as administrator):</source>
          <target state="translated">これは powershell (管理者として実行)ですぐに設定できます。</target>
        </trans-unit>
        <trans-unit id="e19abaa13d0dba98679bd7418a20016c22238a79" translate="yes" xml:space="preserve">
          <source>This can be used in combination with &lt;a href=&quot;web-contents#contentssetsizeoptions&quot;&gt;&lt;code&gt;webContents.setSize&lt;/code&gt;&lt;/a&gt; to manually resize the webview contents in reaction to a window size change. This can make resizing faster compared to relying on the webview element bounds to automatically resize the contents.</source>
          <target state="translated">これを&lt;a href=&quot;web-contents#contentssetsizeoptions&quot;&gt; &lt;code&gt;webContents.setSize&lt;/code&gt; &lt;/a&gt;と組み合わせて使用​​すると、ウィンドウサイズの変更に応じて、webviewコンテンツのサイズを手動で変更できます。これにより、コンテンツのサイズを自動的に変更するためにwebview要素の境界に依存する場合に比べて、サイズ変更が速くなります。</target>
        </trans-unit>
        <trans-unit id="dbe1af3b7fc7582107cc5d1b42a1f06116c01e40" translate="yes" xml:space="preserve">
          <source>This can happen during build, when Debugging Tools for Windows has been installed with Windows Driver Kit. Uninstall Windows Driver Kit and install Debugging Tools with steps described above.</source>
          <target state="translated">Windows Driver Kit と一緒に Debugging Tools for Windows がインストールされている場合、ビルド中に発生することがあります。Windows Driver Kitをアンインストールし、上記の手順でDebugging Toolsをインストールしてください。</target>
        </trans-unit>
        <trans-unit id="cd6adbf27331cd50211951125f78609fbec2754f" translate="yes" xml:space="preserve">
          <source>This can sometimes be unnecessary, e.g. in a CI environment, when testing another component.</source>
          <target state="translated">これは、CI環境で別のコンポーネントをテストするときなどに不要になることがあります。</target>
        </trans-unit>
        <trans-unit id="92d95071d9f0757b88558f8b1d59a4ba138589a4" translate="yes" xml:space="preserve">
          <source>This can take a significant amount of time depending on build machine as it has to build all of the libchromium source.</source>
          <target state="translated">libchromiumソースをすべてビルドしなければならないため、ビルドマシンにもよりますが、かなりの時間がかかります。</target>
        </trans-unit>
        <trans-unit id="9ff35d4856557718c3a973fc186ad965641af82d" translate="yes" xml:space="preserve">
          <source>This cannot be called when &lt;code&gt;titleBarStyle&lt;/code&gt; is set to &lt;code&gt;customButtonsOnHover&lt;/code&gt;.</source>
          <target state="translated">ときに呼び出すことはできません &lt;code&gt;titleBarStyle&lt;/code&gt; がに設定されている &lt;code&gt;customButtonsOnHover&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85a949ce4a405bc3ce050a428eb09e1fccb5184d" translate="yes" xml:space="preserve">
          <source>This document describes the process for releasing a new version of Electron.</source>
          <target state="translated">このドキュメントでは、Electronの新しいバージョンをリリースするためのプロセスについて説明します。</target>
        </trans-unit>
        <trans-unit id="2b08ebef74426ddb6ada26f318d5041f72ce60d2" translate="yes" xml:space="preserve">
          <source>This document outlines the process for manually loading an extension. You may also try &lt;a href=&quot;https://github.com/GPMDP/electron-devtools-installer&quot;&gt;electron-devtools-installer&lt;/a&gt;, a third-party tool that downloads extensions directly from the Chrome WebStore.</source>
          <target state="translated">このドキュメントでは、拡張機能を手動で読み込むプロセスの概要を説明します。Chromeウェブストアから直接拡張機能をダウンロードするサードパーティ製ツール&lt;a href=&quot;https://github.com/GPMDP/electron-devtools-installer&quot;&gt;electron-devtools-installerを&lt;/a&gt;試すこともできます。</target>
        </trans-unit>
        <trans-unit id="dd9bda8f3bea4fa30568a20bc89b0c284f32afe4" translate="yes" xml:space="preserve">
          <source>This doesn't affect existing &lt;code&gt;WebContents&lt;/code&gt;, and each &lt;code&gt;WebContents&lt;/code&gt; can use &lt;code&gt;webContents.setUserAgent&lt;/code&gt; to override the session-wide user agent.</source>
          <target state="translated">これは既存の &lt;code&gt;WebContents&lt;/code&gt; には影響せず、各 &lt;code&gt;WebContents&lt;/code&gt; は &lt;code&gt;webContents.setUserAgent&lt;/code&gt; を使用してセッション全体のユーザーエージェントをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="305bb661633e2bd54b8cde837bb1530865ff1b43" translate="yes" xml:space="preserve">
          <source>This doesn't mean Electron is a JavaScript binding to graphical user interface (GUI) libraries. Instead, Electron uses web pages as its GUI, so you could also see it as a minimal Chromium browser, controlled by JavaScript.</source>
          <target state="translated">これは、ElectronがJavaScriptのグラフィカルユーザーインターフェース(GUI)ライブラリへのバインディングを意味するものではありません。その代わり、ElectronはGUIとしてWebページを使用しているので、JavaScriptで制御される最小のChromiumブラウザとして見ることもできます。</target>
        </trans-unit>
        <trans-unit id="27dcdff876f06b48e0909172d36571d4132749c8" translate="yes" xml:space="preserve">
          <source>This ensures that your working branch has the latest changes from &lt;code&gt;electron/electron&lt;/code&gt; master.</source>
          <target state="translated">これにより、作業ブランチに &lt;code&gt;electron/electron&lt;/code&gt; マスターからの最新の変更が確実に適用されます。</target>
        </trans-unit>
        <trans-unit id="735aff75680f019b5b2eef8d283ba1c664d12844" translate="yes" xml:space="preserve">
          <source>This environment variable will not work if the &lt;code&gt;crashReporter&lt;/code&gt; is started.</source>
          <target state="translated">&lt;code&gt;crashReporter&lt;/code&gt; が起動している場合、この環境変数は機能しません。</target>
        </trans-unit>
        <trans-unit id="c53962e4beb1ce1eb5a88e924f00d58d0735bdc2" translate="yes" xml:space="preserve">
          <source>This event can be used to configure &lt;code&gt;webPreferences&lt;/code&gt; for the &lt;code&gt;webContents&lt;/code&gt; of a &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; before it's loaded, and provides the ability to set settings that can't be set via &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; attributes.</source>
          <target state="translated">このイベントには、configureに使用することができます &lt;code&gt;webPreferences&lt;/code&gt; ため &lt;code&gt;webContents&lt;/code&gt; の &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; それがロードされる前に、を介して設定することはできませんセット設定する機能を提供 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; の属性を。</target>
        </trans-unit>
        <trans-unit id="41906b2e4c0450c0c3063aeee9df7cc4ec746748" translate="yes" xml:space="preserve">
          <source>This event cannot be prevented, if you want to prevent redirects you should checkout out the &lt;code&gt;will-redirect&lt;/code&gt; event above.</source>
          <target state="translated">このイベントを防ぐことはできません。リダイレクトを防ぎたい場合は、上記の &lt;code&gt;will-redirect&lt;/code&gt; イベントをチェックアウトする必要があります。</target>
        </trans-unit>
        <trans-unit id="6bc76560bddb9d70b3ca30a5a355ba8b21fda8f7" translate="yes" xml:space="preserve">
          <source>This event is emitted after a user calls &lt;code&gt;quitAndInstall()&lt;/code&gt;.</source>
          <target state="translated">このイベントは、ユーザーが &lt;code&gt;quitAndInstall()&lt;/code&gt; を呼び出した後に発行されます。</target>
        </trans-unit>
        <trans-unit id="70c04a1a73e4503c5b82edc3f66cd4701b39a5de" translate="yes" xml:space="preserve">
          <source>This event is guaranteed to be emitted after the &lt;code&gt;ready&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt; gets emitted.</source>
          <target state="translated">このイベントは、 &lt;code&gt;app&lt;/code&gt; の &lt;code&gt;ready&lt;/code&gt; イベントが発行された後に発行されることが保証されています。</target>
        </trans-unit>
        <trans-unit id="0dcc17c4aef24a3104fdff9f4011974b0c8831ae" translate="yes" xml:space="preserve">
          <source>This event is like &lt;code&gt;did-fail-load&lt;/code&gt; but emitted when the load was cancelled (e.g. &lt;code&gt;window.stop()&lt;/code&gt; was invoked).</source>
          <target state="translated">このイベントは &lt;code&gt;did-fail-load&lt;/code&gt; に似ていますが、ロードがキャンセルされたときに &lt;code&gt;window.stop()&lt;/code&gt; されます（たとえば、window.stop（）が呼び出された）。</target>
        </trans-unit>
        <trans-unit id="534c78030b6fb5c4bb033d9366092911a59d6437" translate="yes" xml:space="preserve">
          <source>This event is like &lt;code&gt;did-finish-load&lt;/code&gt; but emitted when the load failed or was cancelled, e.g. &lt;code&gt;window.stop()&lt;/code&gt; is invoked. The full list of error codes and their meaning is available &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">このイベントは、 &lt;code&gt;did-finish-load&lt;/code&gt; に似ていますが、ロードが失敗またはキャンセルされたときに発生します。たとえば、 &lt;code&gt;window.stop()&lt;/code&gt; が呼び出されます。エラーコードとその意味の完全なリストは、&lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;こちらから&lt;/a&gt;入手できます。</target>
        </trans-unit>
        <trans-unit id="c72781b8974049a02755f7581656d7b25400e2c7" translate="yes" xml:space="preserve">
          <source>This event is like &lt;code&gt;did-finish-load&lt;/code&gt; but emitted when the load failed. The full list of error codes and their meaning is available &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">このイベントは &lt;code&gt;did-finish-load&lt;/code&gt; に似ていますが、ロードが失敗したときに発行されます。エラーコードとその意味の完全なリストは、&lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;こちらから&lt;/a&gt;入手できます。</target>
        </trans-unit>
        <trans-unit id="ebc14d8e2cd1b5d75f2d9ca245ca5574d93e3694" translate="yes" xml:space="preserve">
          <source>This event is like &lt;code&gt;did-finish-load&lt;/code&gt;, but fired when the load failed or was cancelled, e.g. &lt;code&gt;window.stop()&lt;/code&gt; is invoked.</source>
          <target state="translated">このイベントは &lt;code&gt;did-finish-load&lt;/code&gt; に似ていますが、ロードが失敗したかキャンセルされたときに発生します。たとえば、 &lt;code&gt;window.stop()&lt;/code&gt; が呼び出されました。</target>
        </trans-unit>
        <trans-unit id="16cd81301f3901898ca383be2a9937686fea4f1b" translate="yes" xml:space="preserve">
          <source>This event is not emitted for in-page navigations, such as clicking anchor links or updating the &lt;code&gt;window.location.hash&lt;/code&gt;. Use &lt;code&gt;did-navigate-in-page&lt;/code&gt; event for this purpose.</source>
          <target state="translated">このイベントは、アンカーリンクのクリックや &lt;code&gt;window.location.hash&lt;/code&gt; の更新など、ページ内ナビゲーションでは発生しません。このために &lt;code&gt;did-navigate-in-page&lt;/code&gt; イベントを使用します。</target>
        </trans-unit>
        <trans-unit id="43532412863a913d8fd70d6050dfc6b00fea2882" translate="yes" xml:space="preserve">
          <source>This event is not guaranteed to be emitted in all cases where the notification is closed.</source>
          <target state="translated">このイベントは、通知が閉じられているすべてのケースで発生することを保証するものではありません。</target>
        </trans-unit>
        <trans-unit id="daef2593fd9388d64158392d015f2a866d5cba6f" translate="yes" xml:space="preserve">
          <source>This event is usually emitted after the &lt;code&gt;did-finish-load&lt;/code&gt; event, but for pages with many remote resources, it may be emitted before the &lt;code&gt;did-finish-load&lt;/code&gt; event.</source>
          <target state="translated">このイベントは通常、 &lt;code&gt;did-finish-load&lt;/code&gt; イベントの後に発行されますが、リモートリソースが多いページでは、 &lt;code&gt;did-finish-load&lt;/code&gt; イベントの前に発行される場合があります。</target>
        </trans-unit>
        <trans-unit id="38ab97caaab13790598e628158d115924d8e2ab7" translate="yes" xml:space="preserve">
          <source>This event will be emitted after &lt;code&gt;did-start-navigation&lt;/code&gt; and always before the &lt;code&gt;did-redirect-navigation&lt;/code&gt; event for the same navigation.</source>
          <target state="translated">このイベントは、 &lt;code&gt;did-start-navigation&lt;/code&gt; の後、常に同じナビゲーションの &lt;code&gt;did-redirect-navigation&lt;/code&gt; イベントの前に発行されます。</target>
        </trans-unit>
        <trans-unit id="cf65ac6c2ed2c392b3301215269f6f680440c2f0" translate="yes" xml:space="preserve">
          <source>This event will be emitted inside the primary instance of your application when a second instance has been executed and calls &lt;code&gt;app.requestSingleInstanceLock()&lt;/code&gt;.</source>
          <target state="translated">このイベントは、2番目のインスタンスが実行され、 &lt;code&gt;app.requestSingleInstanceLock()&lt;/code&gt; を呼び出すと、アプリケーションのプライマリインスタンス内で発行されます。</target>
        </trans-unit>
        <trans-unit id="adc211e73307119fcd816d42f8b4a9ab15005889" translate="yes" xml:space="preserve">
          <source>This event will not emit when the navigation is started programmatically with APIs like &lt;code&gt;&amp;lt;webview&amp;gt;.loadURL&lt;/code&gt; and &lt;code&gt;&amp;lt;webview&amp;gt;.back&lt;/code&gt;.</source>
          <target state="translated">このイベントは、ナビゲーションが &lt;code&gt;&amp;lt;webview&amp;gt;.loadURL&lt;/code&gt; や &lt;code&gt;&amp;lt;webview&amp;gt;.back&lt;/code&gt; などのAPIを使用してプログラムで開始された場合には発生しません。</target>
        </trans-unit>
        <trans-unit id="ba25365ba095998aa9f6d8616d04d7760dce95d3" translate="yes" xml:space="preserve">
          <source>This event will not emit when the navigation is started programmatically with APIs like &lt;code&gt;webContents.loadURL&lt;/code&gt; and &lt;code&gt;webContents.back&lt;/code&gt;.</source>
          <target state="translated">このイベントは、ナビゲーションが &lt;code&gt;webContents.loadURL&lt;/code&gt; や &lt;code&gt;webContents.back&lt;/code&gt; などのAPIを使用してプログラムで開始された場合は発生しません。</target>
        </trans-unit>
        <trans-unit id="525b90f00912dd424f3358c279badc2539a3f98d" translate="yes" xml:space="preserve">
          <source>This feature allows you to configure local and global keyboard shortcuts for your Electron application.</source>
          <target state="translated">この機能により、Electronアプリケーションのローカルおよびグローバルキーボードショートカットを設定することができます。</target>
        </trans-unit>
        <trans-unit id="2ce3421f7d7f0f139f1c0fc738d83adefc9eead4" translate="yes" xml:space="preserve">
          <source>This flag is global to all renderer processes, if you only want to disable throttling in one window, you can take the hack of &lt;a href=&quot;https://github.com/atom/atom/pull/9485/files&quot;&gt;playing silent audio&lt;/a&gt;.</source>
          <target state="translated">このフラグはすべてのレンダラープロセスに共通です。1つのウィンドウでスロットルのみを無効にする場合は、&lt;a href=&quot;https://github.com/atom/atom/pull/9485/files&quot;&gt;無音オーディオ&lt;/a&gt;を再生するハックを利用できます。</target>
        </trans-unit>
        <trans-unit id="59739245235d20d9bd2627de64d6feb1f1353c69" translate="yes" xml:space="preserve">
          <source>This guide explains how to integrate your application into those desktop environments with Electron APIs.</source>
          <target state="translated">このガイドでは、Electron APIを使用してアプリケーションをデスクトップ環境に統合する方法を説明します。</target>
        </trans-unit>
        <trans-unit id="2ae7cd976045436112f7fa0b340e654a51d5286c" translate="yes" xml:space="preserve">
          <source>This guide provides information on how to package your Electron application for any Snapcraft environment, including the Ubuntu Software Center.</source>
          <target state="translated">このガイドでは、Ubuntu Software Centerを含むSnapcraft環境向けにElectronアプリケーションをパッケージ化する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="122f36d1230fa874c547ba466f15a7fac7906c60" translate="yes" xml:space="preserve">
          <source>This happens when the variable which is used to store the tray gets garbage collected.</source>
          <target state="translated">これは、トレイを格納するために使用されている変数がガベージコレクションされたときに発生します。</target>
        </trans-unit>
        <trans-unit id="bd12afa1587b8243c8bdd506b686e1935e49b3f7" translate="yes" xml:space="preserve">
          <source>This happens when the variable which is used to store the window/tray gets garbage collected.</source>
          <target state="translated">これは、ウィンドウ/トレイを格納するために使用される変数がガベージコレクションされたときに発生します。</target>
        </trans-unit>
        <trans-unit id="53ddae2e4ad6d22bd6d864ba578a7a1b81d8dd78" translate="yes" xml:space="preserve">
          <source>This is an overview of the steps needed to upgrade Chromium in Electron.</source>
          <target state="translated">ElectronでChromiumをアップグレードするために必要な手順を紹介します。</target>
        </trans-unit>
        <trans-unit id="48fd1ce46ca3f75a8fcf1a2738bb79a6e11234ae" translate="yes" xml:space="preserve">
          <source>This is because &lt;code&gt;exec&lt;/code&gt; and &lt;code&gt;spawn&lt;/code&gt; accept &lt;code&gt;command&lt;/code&gt; instead of &lt;code&gt;file&lt;/code&gt; as input, and &lt;code&gt;command&lt;/code&gt;s are executed under shell. There is no reliable way to determine whether a command uses a file in asar archive, and even if we do, we can not be sure whether we can replace the path in command without side effects.</source>
          <target state="translated">これは、 &lt;code&gt;exec&lt;/code&gt; および &lt;code&gt;spawn&lt;/code&gt; が入力として &lt;code&gt;file&lt;/code&gt; の代わりに &lt;code&gt;command&lt;/code&gt; を受け入れ、 &lt;code&gt;command&lt;/code&gt; がシェルの下で実行されるためです。コマンドがasarアーカイブ内のファイルを使用するかどうかを判断する信頼できる方法はありません。使用しても、副作用なしにコマンドのパスを置き換えることができるかどうかはわかりません。</target>
        </trans-unit>
        <trans-unit id="c91f0b5809499b2aac2c817187db2006a90e9d9c" translate="yes" xml:space="preserve">
          <source>This is because you have the &lt;a href=&quot;https://www.npmjs.com/package/electron&quot;&gt;npm &lt;code&gt;electron&lt;/code&gt; module&lt;/a&gt; installed either locally or globally, which overrides Electron's built-in module.</source>
          <target state="translated">これは、ローカルまたはグローバルに&lt;a href=&quot;https://www.npmjs.com/package/electron&quot;&gt;npm &lt;code&gt;electron&lt;/code&gt; モジュールが&lt;/a&gt;インストールされているためです。これにより、Electronの組み込みモジュールがオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="5a3986c71d0e4c78e6cd21bb0ce8b7a2f2efbb87" translate="yes" xml:space="preserve">
          <source>This is caused by a bug when using Cygwin Python and Win32 Node together. The solution is to use the Win32 Python to execute the bootstrap script (assuming you have installed Python under &lt;code&gt;C:\Python27&lt;/code&gt;):</source>
          <target state="translated">これは、Cygwin PythonとWin32ノードを一緒に使用する際のバグが原因です。解決策は、Win32 Pythonを使用してブートストラップスクリプトを実行することです（Pythonを &lt;code&gt;C:\Python27&lt;/code&gt; 下にインストールしたと想定）。</target>
        </trans-unit>
        <trans-unit id="8b27aed9ee162e49847966b3b51b71c4860ae778" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following code:</source>
          <target state="translated">これは以下のコードと同等です。</target>
        </trans-unit>
        <trans-unit id="3fe1df8532e63229df92d06cf43d9987ae371204" translate="yes" xml:space="preserve">
          <source>This is needed because the first patch has Node commit checksums that we don't want</source>
          <target state="translated">これは、最初のパッチではNodeのコミットチェックサムが必要ないために必要です。</target>
        </trans-unit>
        <trans-unit id="e8aca70cc5480516ee291e9bca8a4cd91b7eaa92" translate="yes" xml:space="preserve">
          <source>This is needed because upstream Node keeps its V8 files in a subdirectory</source>
          <target state="translated">これは、アップストリームノードが V8 ファイルをサブディレクトリに保持しているために必要です。</target>
        </trans-unit>
        <trans-unit id="91aef02790b0da10b0da3faa252a645dace7a8f0" translate="yes" xml:space="preserve">
          <source>This is not bulletproof, but at the least, you should follow these steps to improve the security of your application.</source>
          <target state="translated">これは防弾ではありませんが、最低限、これらの手順を踏んでアプリケーションのセキュリティを向上させる必要があります。</target>
        </trans-unit>
        <trans-unit id="60511cadfa0774991a3378ebc6d71c9622419d57" translate="yes" xml:space="preserve">
          <source>This is the user agent that will be used when no user agent is set at the &lt;code&gt;webContents&lt;/code&gt; or &lt;code&gt;session&lt;/code&gt; level. It is useful for ensuring that your entire app has the same user agent. Set to a custom value as early as possible in your app's initialization to ensure that your overridden value is used.</source>
          <target state="translated">これは、 &lt;code&gt;webContents&lt;/code&gt; または &lt;code&gt;session&lt;/code&gt; レベルでユーザーエージェントが設定されていない場合に使用されるユーザーエージェントです。アプリ全体に同じユーザーエージェントがあることを確認するのに役立ちます。オーバーライドされた値が確実に使用されるように、アプリの初期化のできるだけ早い段階でカスタム値に設定します。</target>
        </trans-unit>
        <trans-unit id="6eb6b6464df6140e25cae9feeee33f0637c70d2f" translate="yes" xml:space="preserve">
          <source>This is the web page you want to display once the application is initialized. This web page represents the Renderer process. You can create multiple browser windows, where each window uses its own independent Renderer. Each window can optionally be granted with full access to Node.js API through the &lt;code&gt;nodeIntegration&lt;/code&gt; preference.</source>
          <target state="translated">これは、アプリケーションが初期化されたときに表示するWebページです。このWebページは、レンダラープロセスを表しています。複数のブラウザウィンドウを作成できます。各ウィンドウは、独自の独立したレンダラーを使用します。オプションで、各ウィンドウに &lt;code&gt;nodeIntegration&lt;/code&gt; プリファレンスを介してNode.jsAPIへのフルアクセスを許可できます。</target>
        </trans-unit>
        <trans-unit id="9d503ac5c21d388b20a1d855b2f3fc6328cf37a6" translate="yes" xml:space="preserve">
          <source>This is usually emitted when the window has been resized manually. On macOS, resizing the window with &lt;code&gt;setBounds&lt;/code&gt;/&lt;code&gt;setSize&lt;/code&gt; and setting the &lt;code&gt;animate&lt;/code&gt; parameter to &lt;code&gt;true&lt;/code&gt; will also emit this event once resizing has finished.</source>
          <target state="translated">これは通常、ウィンドウのサイズが手動で変更されたときに発生します。macOSでは、 &lt;code&gt;setBounds&lt;/code&gt; / &lt;code&gt;setSize&lt;/code&gt; を使用してウィンドウのサイズを変更し、 &lt;code&gt;animate&lt;/code&gt; パラメーターを &lt;code&gt;true&lt;/code&gt; に設定すると、サイズ変更が完了するとこのイベントも発行されます。</target>
        </trans-unit>
        <trans-unit id="6ce540b607105f2ab510762e21fa5b7df27b2a8c" translate="yes" xml:space="preserve">
          <source>This list is managed by the OS. On Windows you can visit the list from the task bar, and on macOS you can visit it from dock menu.</source>
          <target state="translated">このリストはOSによって管理されています。Windowsではタスクバーから、macOSではドックメニューから見ることができます。</target>
        </trans-unit>
        <trans-unit id="5ac828a9f6321051dc2115a8ae134347cd9028e8" translate="yes" xml:space="preserve">
          <source>This list is managed by the OS. On Windows, you can visit the list from the task bar, and on macOS, you can visit it from dock menu.</source>
          <target state="translated">このリストはOSによって管理されています。Windowsではタスクバーから、macOSではドックメニューからリストを見ることができます。</target>
        </trans-unit>
        <trans-unit id="21b8fbf53205cd07ff1caf5968650d4e51e33e22" translate="yes" xml:space="preserve">
          <source>This makes the web page click-through when over &lt;code&gt;el&lt;/code&gt;, and returns to normal outside it.</source>
          <target state="translated">これにより、 &lt;code&gt;el&lt;/code&gt; を超えるとWebページがクリックスルーし、外部では通常の状態に戻ります。</target>
        </trans-unit>
        <trans-unit id="b38119f44b494dd0bb6f6f9163b806e1c7ab1524" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;[-1, 0, 1]&lt;/code&gt; will make the image completely white and &lt;code&gt;[-1, 1, 0]&lt;/code&gt; will make the image completely black.</source>
          <target state="translated">つまり、 &lt;code&gt;[-1, 0, 1]&lt;/code&gt; は画像を完全に白にし、 &lt;code&gt;[-1, 1, 0]&lt;/code&gt; は画像を完全に黒にします。</target>
        </trans-unit>
        <trans-unit id="67a355799483968abe863664dade8bc4d946b24a" translate="yes" xml:space="preserve">
          <source>This method can only be called before app is ready.</source>
          <target state="translated">このメソッドは、アプリの準備が整う前にのみ呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="f90ad39418944444e5ae54b4ab541a29f5479860" translate="yes" xml:space="preserve">
          <source>This method checks if the current executable as the default handler for a protocol (aka URI scheme). If so, it will remove the app as the default handler.</source>
          <target state="translated">このメソッドは、現在の実行ファイルがプロトコル(別名URIスキーム)のデフォルトハンドラとして使用されているかどうかをチェックします。もしそうであれば、デフォルトハンドラとしてのアプリを削除します。</target>
        </trans-unit>
        <trans-unit id="3c819fac6bfe7e98002d421c14d1dc5a3975abd6" translate="yes" xml:space="preserve">
          <source>This method checks if the current executable is the default handler for a protocol (aka URI scheme). If so, it will return true. Otherwise, it will return false.</source>
          <target state="translated">このメソッドは、現在の実行ファイルがプロトコル(別名URIスキーム)のデフォルトハンドラであるかどうかをチェックします。そうであれば、trueを返します。そうでなければ、falseを返します。</target>
        </trans-unit>
        <trans-unit id="77a9284738b6a5154a2e369ad66253b0849a1915" translate="yes" xml:space="preserve">
          <source>This method guarantees that all &lt;code&gt;beforeunload&lt;/code&gt; and &lt;code&gt;unload&lt;/code&gt; event handlers are correctly executed. It is possible that a window cancels the quitting by returning &lt;code&gt;false&lt;/code&gt; in the &lt;code&gt;beforeunload&lt;/code&gt; event handler.</source>
          <target state="translated">このメソッドは、すべての &lt;code&gt;beforeunload&lt;/code&gt; および &lt;code&gt;unload&lt;/code&gt; イベントハンドラーが正しく実行されることを保証します。 &lt;code&gt;beforeunload&lt;/code&gt; イベントハンドラーで &lt;code&gt;false&lt;/code&gt; を返すことにより、ウィンドウが終了をキャンセルする可能性があります。</target>
        </trans-unit>
        <trans-unit id="ecd46eba6601163296f629d7617bddef184d9505" translate="yes" xml:space="preserve">
          <source>This method makes your application a Single Instance Application - instead of allowing multiple instances of your app to run, this will ensure that only a single instance of your app is running, and other instances signal this instance and exit.</source>
          <target state="translated">このメソッドは、アプリケーションをシングル インスタンス アプリケーションにします-アプリの複数のインスタンスの実行を許可する代わりに、アプリの単一のインスタンスのみが実行され、他のインスタンスがこのインスタンスにシグナルを送って終了することを保証します。</target>
        </trans-unit>
        <trans-unit id="28d1fe6936a7648fea4c7be0eb7a172011a79b28" translate="yes" xml:space="preserve">
          <source>This method must be called before using any other &lt;code&gt;crashReporter&lt;/code&gt; APIs. Once initialized this way, the crashpad handler collects crashes from all subsequently created processes. The crash reporter cannot be disabled once started.</source>
          <target state="translated">このメソッドは、他の &lt;code&gt;crashReporter&lt;/code&gt; APIを使用する前に呼び出す必要があります。この方法で初期化されると、クラッシュパッドハンドラーは、その後に作成されるすべてのプロセスからクラッシュを収集します。一度起動すると、クラッシュレポーターを無効にすることはできません。</target>
        </trans-unit>
        <trans-unit id="128082992770bd52e00e31ab2c7ee17b1d861f36" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;false&lt;/code&gt; if your process is the primary instance of the application and your app should continue loading. And returns &lt;code&gt;true&lt;/code&gt; if your process has sent its parameters to another instance, and you should immediately quit.</source>
          <target state="translated">このメソッドは、プロセスがアプリケーションのプライマリインスタンスであり、アプリの読み込みを続行する必要がある場合は &lt;code&gt;false&lt;/code&gt; を返します。また、プロセスがパラメーターを別のインスタンスに送信した場合は &lt;code&gt;true&lt;/code&gt; を返し、すぐに終了する必要があります。</target>
        </trans-unit>
        <trans-unit id="739e544be60345b642bd939f658c0911c645a403" translate="yes" xml:space="preserve">
          <source>This method returns a promise that contains the application name, icon and path of the default handler for the protocol (aka URI scheme) of a URL.</source>
          <target state="translated">このメソッドは、アプリケーション名、アイコン、URLのプロトコル(別名URIスキーム)のデフォルトハンドラのパスを含むプロミスを返します。</target>
        </trans-unit>
        <trans-unit id="02e5aa4e173f76b7b923d304c52337cd65ccb52d" translate="yes" xml:space="preserve">
          <source>This method returns the application name of the default handler for the protocol (aka URI scheme) of a URL.</source>
          <target state="translated">このメソッドは、URLのプロトコル(別名URIスキーム)のデフォルトハンドラのアプリケーション名を返します。</target>
        </trans-unit>
        <trans-unit id="38bce716c3b70043c7809602e7a0b3a6910b15fb" translate="yes" xml:space="preserve">
          <source>This method returns whether or not this instance of your app is currently holding the single instance lock. You can request the lock with &lt;code&gt;app.requestSingleInstanceLock()&lt;/code&gt; and release with &lt;code&gt;app.releaseSingleInstanceLock()&lt;/code&gt;</source>
          <target state="translated">このメソッドは、アプリのこのインスタンスが現在シングルインスタンスロックを保持しているかどうかを返します。あなたがロックを要求することができます &lt;code&gt;app.requestSingleInstanceLock()&lt;/code&gt; とでリリース &lt;code&gt;app.releaseSingleInstanceLock()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="576d1f0fde5bf163523a7bf4784d972829571325" translate="yes" xml:space="preserve">
          <source>This method sets the current executable as the default handler for a protocol (aka URI scheme). It allows you to integrate your app deeper into the operating system. Once registered, all links with &lt;code&gt;your-protocol://&lt;/code&gt; will be opened with the current executable. The whole link, including protocol, will be passed to your application as a parameter.</source>
          <target state="translated">このメソッドは、現在の実行可能ファイルをプロトコル（別名URIスキーム）のデフォルトハンドラーとして設定します。アプリをオペレーティングシステムに深く統合できます。登録すると、 &lt;code&gt;your-protocol://&lt;/code&gt; を含むすべてのリンクが現在の実行可能ファイルで開かれます。プロトコルを含むリンク全体がパラメーターとしてアプリケーションに渡されます。</target>
        </trans-unit>
        <trans-unit id="4b250ac5d376a8e5bd8322b3a7917c044ec3dc32" translate="yes" xml:space="preserve">
          <source>This method should be called as early as possible in app startup, preferably before &lt;code&gt;app.on('ready')&lt;/code&gt;. If the crash reporter is not initialized at the time a renderer process is created, then that renderer process will not be monitored by the crash reporter.</source>
          <target state="translated">このメソッドは、アプリの起動のできるだけ早い段階で、できれば &lt;code&gt;app.on('ready')&lt;/code&gt; の前に呼び出す必要があります。レンダラープロセスの作成時にクラッシュレポーターが初期化されていない場合、そのレンダラープロセスはクラッシュレポーターによって監視されません。</target>
        </trans-unit>
        <trans-unit id="5cb007eed7b323075dee5fe0dabfee8ade3ddaa3" translate="yes" xml:space="preserve">
          <source>This method uses synchronous IPC when called from the renderer process. The cached value is reread from the find pasteboard whenever the application is activated.</source>
          <target state="translated">このメソッドは、レンダラープロセスから呼び出されたときに同期IPCを使用します。キャッシュされた値は、アプリケーションがアクティブになるたびに find pasteboard から再読込されます。</target>
        </trans-unit>
        <trans-unit id="f9deb1c010bb57a2f83079f4adf693cecd6efe36" translate="yes" xml:space="preserve">
          <source>This method will raise an exception if the extension could not be loaded. If there are warnings when installing the extension (e.g. if the extension requests an API that Electron does not support) then they will be logged to the console.</source>
          <target state="translated">このメソッドは、拡張機能をロードできなかった場合に例外を発生させます。拡張機能のインストール時に警告が発生した場合 (拡張機能が Electron がサポートしていない API を要求した場合など)、その警告はコンソールに記録されます。</target>
        </trans-unit>
        <trans-unit id="e1635376cd173bd570494637f07d70e9a8bc4e7d" translate="yes" xml:space="preserve">
          <source>This mode uses a software output device for rendering in the CPU, so the frame generation is much faster, thus this mode is preferred over the GPU accelerated one.</source>
          <target state="translated">このモードは、CPUでレンダリングするためのソフトウェア出力デバイスを使用するため、フレーム生成がはるかに高速であるため、このモードはGPUアクセラレーションされたものよりも優先されます。</target>
        </trans-unit>
        <trans-unit id="de978956fa33fc15f57e87473cea48fddee89eb0" translate="yes" xml:space="preserve">
          <source>This module cannot be used until the &lt;code&gt;ready&lt;/code&gt; event of the &lt;code&gt;app&lt;/code&gt; module is emitted.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;app&lt;/code&gt; モジュールの &lt;code&gt;ready&lt;/code&gt; イベントが発行されるまで使用できません。</target>
        </trans-unit>
        <trans-unit id="94190404689a379b97619e82a180839a7032b318" translate="yes" xml:space="preserve">
          <source>This module does not include a web interface so you need to open &lt;code&gt;chrome://tracing/&lt;/code&gt; in a Chrome browser and load the generated file to view the result.</source>
          <target state="translated">このモジュールにはWebインターフェイスが含まれていないため、結果を表示するには、Chromeブラウザーで &lt;code&gt;chrome://tracing/&lt;/code&gt; を開き、生成されたファイルを読み込む必要があります。</target>
        </trans-unit>
        <trans-unit id="ef1a68aa3ef7b8318d46de5f281c4c83362c01ca" translate="yes" xml:space="preserve">
          <source>This module does not include a web interface. To view recorded traces, use &lt;a href=&quot;https://chromium.googlesource.com/catapult/+/HEAD/tracing/README.md&quot;&gt;trace viewer&lt;/a&gt;, available at &lt;code&gt;chrome://tracing&lt;/code&gt; in Chrome.</source>
          <target state="translated">このモジュールには、Webインターフェイスは含まれていません。記録されたトレースを表示 &lt;code&gt;chrome://tracing&lt;/code&gt; は、Chromeのchrome：// tracingで入手できる&lt;a href=&quot;https://chromium.googlesource.com/catapult/+/HEAD/tracing/README.md&quot;&gt;トレースビューア&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="8f151969ca83729d41c12755b271e4baa545fb6b" translate="yes" xml:space="preserve">
          <source>This only affects developers, if you are building Electron for rebranding you are not affected.</source>
          <target state="translated">これは開発者のみが影響を受けますが、リブランディングのためにElectronを構築している場合は影響を受けません。</target>
        </trans-unit>
        <trans-unit id="56607a829de2a1f19d7e738a52d963a4fbb9ddcd" translate="yes" xml:space="preserve">
          <source>This only creates a REPL for the main process. You can use the Console tab of the Dev Tools to get a REPL for the renderer processes.</source>
          <target state="translated">これは、メインプロセス用の REPL を作成するだけです。レンダラプロセスの REPL を取得するには、Dev Tools の Console タブを使用します。</target>
        </trans-unit>
        <trans-unit id="375038a02af1d24b74b5f70b87659606996caf92" translate="yes" xml:space="preserve">
          <source>This option can also be set on &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tags as well:</source>
          <target state="translated">このオプションは、 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; タグにも設定できます。</target>
        </trans-unit>
        <trans-unit id="79c050b71c61bcff34ea9522fff3873a756c2ae0" translate="yes" xml:space="preserve">
          <source>This page defines some terminology that is commonly used in Electron development.</source>
          <target state="translated">このページでは、エレクトロン開発でよく使われる用語を定義しています。</target>
        </trans-unit>
        <trans-unit id="746af70f2203e84c056f0f571559f6bf6c2b478b" translate="yes" xml:space="preserve">
          <source>This property can be dynamically changed.</source>
          <target state="translated">このプロパティは動的に変更することができます。</target>
        </trans-unit>
        <trans-unit id="b0eaaf72584266e99bdbd6814c744ec69df4ffd2" translate="yes" xml:space="preserve">
          <source>This property is only available on macOS 10.14 Mojave or newer.</source>
          <target state="translated">この物件はmacOS 10.14 Mojave以降でのみご利用いただけます。</target>
        </trans-unit>
        <trans-unit id="22c5e6a1bdbeb5e09af34f1a0b46ccebd975fbc6" translate="yes" xml:space="preserve">
          <source>This repository comes with linting rules for both JavaScript and C++ &amp;ndash; as well as unit and integration tests. To learn more about Electron's coding style, please see the &lt;a href=&quot;coding-style&quot;&gt;coding-style&lt;/a&gt; document.</source>
          <target state="translated">このリポジトリには、JavaScriptとC ++の両方のリンティングルール、および単体テストと統合テストが付属しています。Electronのコーディングスタイルの詳細については、&lt;a href=&quot;coding-style&quot;&gt;コーディングスタイルの&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="ab2ffd8b47da3913e31fa804ea93f7b5a7a4a6f5" translate="yes" xml:space="preserve">
          <source>This script will cause a very large Electron executable to be placed in the directory &lt;code&gt;out/R&lt;/code&gt;. The file size is in excess of 1.3 gigabytes. This happens because the Release target binary contains debugging symbols. To reduce the file size, run the &lt;code&gt;create-dist.py&lt;/code&gt; script:</source>
          <target state="translated">このスクリプトにより、非常に大きなElectron実行可能ファイルがディレクトリ &lt;code&gt;out/R&lt;/code&gt; に配置されます。ファイルサイズが1.3ギガバイトを超えています。これは、リリースターゲットバイナリにデバッグシンボルが含まれているために発生します。ファイルサイズを小さくするには、 &lt;code&gt;create-dist.py&lt;/code&gt; スクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="bd9fba91487aa44db4a6c689033bee8ef72f3272" translate="yes" xml:space="preserve">
          <source>This section guides you through the basics of how Electron works under the hood. It aims at strengthening knowledge about Electron and the application created earlier in the Quickstart section.</source>
          <target state="translated">このセクションでは、Electronがどのように機能するかの基本を説明します。このセクションでは、Electronとクイックスタートセクションで作成したアプリケーションについての知識を強化することを目的としています。</target>
        </trans-unit>
        <trans-unit id="71693d265198cdad88d7bca56b4f1a7f4d1fb418" translate="yes" xml:space="preserve">
          <source>This switch can not be used in &lt;code&gt;app.commandLine.appendSwitch&lt;/code&gt; since it is parsed earlier than user's app is loaded, but you can set the &lt;code&gt;ELECTRON_ENABLE_LOGGING&lt;/code&gt; environment variable to achieve the same effect.</source>
          <target state="translated">このスイッチは、ユーザーのアプリが読み込まれる前に解析されるため、 &lt;code&gt;app.commandLine.appendSwitch&lt;/code&gt; では使用できませんが、 &lt;code&gt;ELECTRON_ENABLE_LOGGING&lt;/code&gt; 環境変数を設定して同じ効果を得ることができます。</target>
        </trans-unit>
        <trans-unit id="bbba81275e266bde8685801ca839dd4f9c6b0a34" translate="yes" xml:space="preserve">
          <source>This switch only works when &lt;code&gt;--enable-logging&lt;/code&gt; is also passed.</source>
          <target state="translated">このスイッチは、 &lt;code&gt;--enable-logging&lt;/code&gt; も渡された場合にのみ機能します。</target>
        </trans-unit>
        <trans-unit id="6846735df161128a67c0582a4de46319858cb9a8" translate="yes" xml:space="preserve">
          <source>This term originated in the Unix community, where &quot;userland&quot; or &quot;userspace&quot; referred to programs that run outside of the operating system kernel. More recently, the term has been popularized in the Node and npm community to distinguish between the features available in &quot;Node core&quot; versus packages published to the npm registry by the much larger &quot;user&quot; community.</source>
          <target state="translated">この用語は Unix コミュニティで使われていたもので、&quot;userland&quot; や &quot;userspace&quot; はオペレーティングシステムのカーネルの外で動作するプログラムを指していました。最近では、「Node core」で利用できる機能と、より大きな「ユーザ」コミュニティから npm レジストリに公開されているパッケージを区別するために、Node や npm コミュニティでこの用語が広まってきました。</target>
        </trans-unit>
        <trans-unit id="b99439216edb1f47887775ea8c02567931505db8" translate="yes" xml:space="preserve">
          <source>This toolbar is the familiar standard toolbar common control. It has a maximum of seven buttons. Each button's ID, image, tooltip, and state are defined in a structure, which is then passed to the taskbar. The application can show, enable, disable, or hide buttons from the thumbnail toolbar as required by its current state.</source>
          <target state="translated">おなじみの標準ツールバー共通コントロールです。最大7つのボタンを持っています。各ボタンのID、画像、ツールチップ、状態は構造体で定義され、タスクバーに渡されます。アプリケーションは、現在の状態によって必要とされるように、サムネイルツールバーからボタンを表示、有効、無効、または非表示にすることができます。</target>
        </trans-unit>
        <trans-unit id="4769d7198e20dcd89a06f4700b75dcfc03c6133b" translate="yes" xml:space="preserve">
          <source>This user consent was not required on macOS 10.13 High Sierra or lower so this method will always return &lt;code&gt;granted&lt;/code&gt;. macOS 10.14 Mojave or higher requires consent for &lt;code&gt;microphone&lt;/code&gt; and &lt;code&gt;camera&lt;/code&gt; access. macOS 10.15 Catalina or higher requires consent for &lt;code&gt;screen&lt;/code&gt; access.</source>
          <target state="translated">このユーザーの同意は、macOS 10.13 High Sierra以下では必要なかったため、このメソッドは常に &lt;code&gt;granted&lt;/code&gt; た状態で返されます。macOS 10.14 Mojave以降では、 &lt;code&gt;microphone&lt;/code&gt; と &lt;code&gt;camera&lt;/code&gt; へのアクセスについて同意が必要です。macOS 10.15 Catalina以降では、 &lt;code&gt;screen&lt;/code&gt; へのアクセスに同意が必要です。</target>
        </trans-unit>
        <trans-unit id="536226b701611389ed2a58db8bec3dc3ea5e66e7" translate="yes" xml:space="preserve">
          <source>This user consent was not required until macOS 10.14 Mojave, so this method will always return &lt;code&gt;true&lt;/code&gt; if your system is running 10.13 High Sierra or lower.</source>
          <target state="translated">このユーザーの同意はmacOS10.14 Mojaveまで必要なかったため、システムが10.13 High Sierra以下を実行している場合、このメソッドは常に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="67799efe884534d21c75845d127954a9bb9dfbe7" translate="yes" xml:space="preserve">
          <source>This value can only be modified before the first navigation, since the session of an active renderer process cannot change. Subsequent attempts to modify the value will fail with a DOM exception.</source>
          <target state="translated">アクティブなレンダラープロセスのセッションは変更できないため、この値は最初のナビゲーションの前にのみ変更できます。それ以降、値を変更しようとすると DOM の例外で失敗します。</target>
        </trans-unit>
        <trans-unit id="61e64b0ff9adbf4c454caa9353b1d0dd27c8cce5" translate="yes" xml:space="preserve">
          <source>This value is set to false by default.</source>
          <target state="translated">この値はデフォルトではfalseに設定されています。</target>
        </trans-unit>
        <trans-unit id="b985083dc6dd4174cf709dc0058ae23f4fe4c0e9" translate="yes" xml:space="preserve">
          <source>This variable is set to the value of &lt;code&gt;XDG_CURRENT_DESKTOP&lt;/code&gt; that your application originally launched with. Electron sometimes modifies the value of &lt;code&gt;XDG_CURRENT_DESKTOP&lt;/code&gt; to affect other logic within Chromium so if you want access to the &lt;em&gt;original&lt;/em&gt; value you should look up this environment variable instead.</source>
          <target state="translated">この変数は、アプリケーションが最初に起動された &lt;code&gt;XDG_CURRENT_DESKTOP&lt;/code&gt; の値に設定されます。Electronは、 &lt;code&gt;XDG_CURRENT_DESKTOP&lt;/code&gt; の値を変更して、Chromium内の他のロジックに影響を与えることがあるため、&lt;em&gt;元の&lt;/em&gt;値にアクセスする場合は、代わりにこの環境変数を検索する必要があります。</target>
        </trans-unit>
        <trans-unit id="fbaa6d5fd03f0d67460b559ac4734d32b43188b8" translate="yes" xml:space="preserve">
          <source>This will allow you to detect ahead of time whether or not the notification will be displayed.</source>
          <target state="translated">これにより、通知が表示されるかどうかを事前に検出することができます。</target>
        </trans-unit>
        <trans-unit id="310772b745c9bd2e5897c31686b366f0ca7a83fe" translate="yes" xml:space="preserve">
          <source>This will be time-consuming</source>
          <target state="translated">これは時間がかかる</target>
        </trans-unit>
        <trans-unit id="4ee48038aa020d935bb7ab14bd9b9501be0b6b5c" translate="yes" xml:space="preserve">
          <source>This will build all of what was previously 'libchromiumcontent' (i.e. the &lt;code&gt;content/&lt;/code&gt; directory of &lt;code&gt;chromium&lt;/code&gt; and its dependencies, incl. WebKit and V8), so it will take a while.</source>
          <target state="translated">これにより、以前は「libchromiumcontent」であったものがすべて構築されます（つまり、 &lt;code&gt;chromium&lt;/code&gt; の &lt;code&gt;content/&lt;/code&gt; ディレクトリとその依存関係（WebKitとV8を含む））になるため、しばらく時間がかかります。</target>
        </trans-unit>
        <trans-unit id="c1d164648fb645df77aacd2d3406870e9f6529fe" translate="yes" xml:space="preserve">
          <source>This will build debug electron with debug version of libchromiumcontent.</source>
          <target state="translated">デバッグ版のlibchromiumcontentを使ってデバッグ電子をビルドします。</target>
        </trans-unit>
        <trans-unit id="a5ad23d8e2c4bcda5ace9dc6a50d0d65568cc890" translate="yes" xml:space="preserve">
          <source>This will download and build libchromiumcontent locally, similarly to the &lt;code&gt;--build_release_libcc&lt;/code&gt;, but it will create a shared library build of libchromiumcontent and won't strip any symbols, making it ideal for debugging.</source>
          <target state="translated">これは--build_release_libccと同様にlibchromiumcontentをローカルにダウンロードしてビルドしますが、 &lt;code&gt;--build_release_libcc&lt;/code&gt; の共有ライブラリビルドを作成し、シンボルを削除しないため、デバッグに最適です。</target>
        </trans-unit>
        <trans-unit id="49e2296dbebe48f43f37289b354787ff74589354" translate="yes" xml:space="preserve">
          <source>This will fail when the app is signed for distribution in the Mac App Store. Subscribe to &lt;a href=&quot;https://github.com/electron/electron/issues/9005&quot;&gt;#9005&lt;/a&gt; for updates.</source>
          <target state="translated">アプリがMac App Storeで配布するように署名されている場合、これは失敗します。アップデートについては&lt;a href=&quot;https://github.com/electron/electron/issues/9005&quot;&gt;＃9005&lt;/a&gt;を購読してください。</target>
        </trans-unit>
        <trans-unit id="0ba277587ca5928eb7c3cb8648bc22f46a3781ce" translate="yes" xml:space="preserve">
          <source>This will generate a build directory &lt;code&gt;out/Testing&lt;/code&gt; under &lt;code&gt;src/&lt;/code&gt; with the testing build configuration. You can replace &lt;code&gt;Testing&lt;/code&gt; with another name, but it should be a subdirectory of &lt;code&gt;out&lt;/code&gt;. Also you shouldn't have to run &lt;code&gt;gn gen&lt;/code&gt; again&amp;mdash;if you want to change the build arguments, you can run &lt;code&gt;gn args out/Testing&lt;/code&gt; to bring up an editor.</source>
          <target state="translated">これにより、テストビルド構成で &lt;code&gt;src/&lt;/code&gt; 下にビルドディレクトリ &lt;code&gt;out/Testing&lt;/code&gt; が生成されます。 &lt;code&gt;Testing&lt;/code&gt; を別の名前に置き換えることができますが、それは &lt;code&gt;out&lt;/code&gt; のサブディレクトリである必要があります。また、 &lt;code&gt;gn gen&lt;/code&gt; を再度実行する必要はありません。ビルド引数を変更する場合は、 &lt;code&gt;gn args out/Testing&lt;/code&gt; を実行してエディターを起動できます。</target>
        </trans-unit>
        <trans-unit id="541c07fe9ee230201344ad82fc5f36ad622cf514" translate="yes" xml:space="preserve">
          <source>This will generate all the ninja files needed for the build. You shouldn't have to run &lt;code&gt;gn gen&lt;/code&gt; again&amp;mdash;if you want to change the build arguments you can run &lt;code&gt;gn args out/Default&lt;/code&gt; to bring up an editor.</source>
          <target state="translated">これにより、ビルドに必要なすべての忍者ファイルが生成されます。 &lt;code&gt;gn gen&lt;/code&gt; を再度実行する必要はありません。ビルド引数を変更する場合は、 &lt;code&gt;gn args out/Default&lt;/code&gt; を実行してエディターを起動できます。</target>
        </trans-unit>
        <trans-unit id="4fa3cd87f75d431b597009f84ee68601a4738e6f" translate="yes" xml:space="preserve">
          <source>This will generate the electron.ninja.xcworkspace. You will have to open this workspace to set breakpoints and inspect.</source>
          <target state="translated">これでelectron.ninja.xcworkspaceが生成されます。このワークスペースを開いてブレークポイントを設定したり、検査したりする必要があります。</target>
        </trans-unit>
        <trans-unit id="ec4cf475c98a6af3a04432e0f82fd5ad81b34a5c" translate="yes" xml:space="preserve">
          <source>This will generate the electron.ninjs.xcworkspace. You will have to open this workspace to set breakpoints and inspect.</source>
          <target state="translated">これでelectron.ninjs.xcworkspaceが生成されます。このワークスペースを開いてブレークポイントを設定し、検査する必要があります。</target>
        </trans-unit>
        <trans-unit id="02eb50512f6212b38a5f022b6eb6b5e324c5192f" translate="yes" xml:space="preserve">
          <source>This will generate:</source>
          <target state="translated">これで生成されます。</target>
        </trans-unit>
        <trans-unit id="e83d3d3598b2797efd7ec8e1d91124cd1b7f8f97" translate="yes" xml:space="preserve">
          <source>This will make a window maintain an aspect ratio. The extra size allows a developer to have space, specified in pixels, not included within the aspect ratio calculations. This API already takes into account the difference between a window's size and its content size.</source>
          <target state="translated">これにより、ウィンドウはアスペクト比を維持するようになります。余分なサイズを指定することで、開発者はピクセル単位で指定されたスペースをアスペクト比の計算に含まれないようにすることができます。この API は、ウィンドウのサイズとコンテンツのサイズの違いをすでに考慮しています。</target>
        </trans-unit>
        <trans-unit id="ce6ae84ac82058b3c68d240475e22e7867870592" translate="yes" xml:space="preserve">
          <source>This will put a working distribution with much smaller file sizes in the &lt;code&gt;dist&lt;/code&gt; directory. After running the &lt;code&gt;create-dist.py&lt;/code&gt; script, you may want to remove the 1.3+ gigabyte binary which is still in &lt;code&gt;out/R&lt;/code&gt;.</source>
          <target state="translated">これにより、ファイルサイズがはるかに小さい動作するディストリビューションが &lt;code&gt;dist&lt;/code&gt; ディレクトリに配置されます。 &lt;code&gt;create-dist.py&lt;/code&gt; スクリプトを実行した後、まだ &lt;code&gt;out/R&lt;/code&gt; にある1.3+ギガバイトのバイナリを削除することができます。</target>
        </trans-unit>
        <trans-unit id="06f1fff384311d54372d57e586748b6d220f83ac" translate="yes" xml:space="preserve">
          <source>This would normally be controlled by user preferences. This has no effect if called before &lt;code&gt;start&lt;/code&gt; is called.</source>
          <target state="translated">これは通常、ユーザー設定によって制御されます。 &lt;code&gt;start&lt;/code&gt; が呼び出される前に呼び出された場合、これは効果がありません。</target>
        </trans-unit>
        <trans-unit id="5d3775183e8f21e56320e67e89e50fc4420ccf2b" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;asar&lt;/code&gt; archives are treated as directories, there are no actual directories in the filesystem, so you can never set the working directory to directories in &lt;code&gt;asar&lt;/code&gt; archives. Passing them as the &lt;code&gt;cwd&lt;/code&gt; option of some APIs will also cause errors.</source>
          <target state="translated">けれども &lt;code&gt;asar&lt;/code&gt; アーカイブはディレクトリとして扱われますが、中にディレクトリに作業ディレクトリを設定することはできませんので、実際のディレクトリは、ファイルシステムではありません &lt;code&gt;asar&lt;/code&gt; アーカイブ。一部のAPIの &lt;code&gt;cwd&lt;/code&gt; オプションとしてそれらを渡すと、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="c25fb617132c60aa22b5ad88639757fd795725db" translate="yes" xml:space="preserve">
          <source>Three ways to install native modules:</source>
          <target state="translated">ネイティブモジュールをインストールする3つの方法</target>
        </trans-unit>
        <trans-unit id="018226bcc54ac78679d7e8cd478163dcf8940f27" translate="yes" xml:space="preserve">
          <source>ThumbarButton</source>
          <target state="translated">ThumbarButton</target>
        </trans-unit>
        <trans-unit id="a45fe261e1bd8ea4b2384009627cf81239d42ffe" translate="yes" xml:space="preserve">
          <source>ThumbarButton Object</source>
          <target state="translated">ThumbarButton オブジェクト</target>
        </trans-unit>
        <trans-unit id="68534756f2a43c9ca088bf006a84307cf3d82b08" translate="yes" xml:space="preserve">
          <source>Thumbnail Toolbars</source>
          <target state="translated">サムネイルツールバー</target>
        </trans-unit>
        <trans-unit id="671d7b141c957f28935c045970c0c111c71dfb47" translate="yes" xml:space="preserve">
          <source>Tigrinya</source>
          <target state="translated">Tigrinya</target>
        </trans-unit>
        <trans-unit id="2d93bfa0c66a344a9d453793e2a3b275bbe5a889" translate="yes" xml:space="preserve">
          <source>Tip: You can test the new version number before running &lt;code&gt;prepare-release&lt;/code&gt; with a dry run of the &lt;code&gt;bump-version&lt;/code&gt; script with the same major/minor/patch/beta arguments, e.g.:</source>
          <target state="translated">ヒント：同じメジャー/マイナー/パッチ/ベータ引数を使用して、 &lt;code&gt;bump-version&lt;/code&gt; スクリプトの予行演習で &lt;code&gt;prepare-release&lt;/code&gt; を実行する前に、新しいバージョン番号をテストできます。例：</target>
        </trans-unit>
        <trans-unit id="a1a55c0d1792b8d6468a37f479b18279fa043440" translate="yes" xml:space="preserve">
          <source>Tips for fixing compilation errors</source>
          <target state="translated">コンパイルエラーを修正するためのヒント</target>
        </trans-unit>
        <trans-unit id="547184d2eb07d1e52c4d74ab23282f7c9977fe1d" translate="yes" xml:space="preserve">
          <source>Tips:</source>
          <target state="translated">Tips:</target>
        </trans-unit>
        <trans-unit id="3eb9cdd5b4908db688ad55e676b92ffa39fa1a7b" translate="yes" xml:space="preserve">
          <source>To achieve this goal, set the background in the constructor for &lt;a href=&quot;api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt;:</source>
          <target state="translated">この目標を達成するには、&lt;a href=&quot;api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt;のコンストラクターで背景を設定します。</target>
        </trans-unit>
        <trans-unit id="51ccfd339eac71e6278eab9692f5352cf183f4aa" translate="yes" xml:space="preserve">
          <source>To add a file to recent documents, you can use the &lt;a href=&quot;../api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocument&lt;/a&gt; API:</source>
          <target state="translated">最近のドキュメントにファイルを追加するには、&lt;a href=&quot;../api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocument&lt;/a&gt; APIを使用できます。</target>
        </trans-unit>
        <trans-unit id="1c586312664efb5ece0af624ddc50e9b0c5ca982" translate="yes" xml:space="preserve">
          <source>To add a file to recent documents, you need to use the &lt;a href=&quot;../api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocument&lt;/a&gt; API.</source>
          <target state="translated">最近のドキュメントにファイルを追加するには、&lt;a href=&quot;../api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocumentAPI&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="60bded7d3eba5a2c88ff071b450dd8171a4237a4" translate="yes" xml:space="preserve">
          <source>To automate the detection of misconfigurations and insecure patterns, it is possible to use &lt;a href=&quot;https://github.com/doyensec/electronegativity&quot;&gt;electronegativity&lt;/a&gt;. For additional details on potential weaknesses and implementation bugs when developing applications using Electron, please refer to this &lt;a href=&quot;https://doyensec.com/resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security-wp.pdf&quot;&gt;guide for developers and auditors&lt;/a&gt;</source>
          <target state="translated">構成ミスや安全でないパターンの検出を自動化するために、&lt;a href=&quot;https://github.com/doyensec/electronegativity&quot;&gt;電気陰性度&lt;/a&gt;を使用することができます。Electronを使用してアプリケーションを開発する際の潜在的な弱点と実装のバグの詳細については&lt;a href=&quot;https://doyensec.com/resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security-wp.pdf&quot;&gt;、開発者と監査人向けの&lt;/a&gt;このガイドを参照してください。</target>
        </trans-unit>
        <trans-unit id="a9664d5f84ea2545060bbee8ef877fd89e837721" translate="yes" xml:space="preserve">
          <source>To automatically format a file according to Electron C++ code style, run &lt;code&gt;clang-format -i path/to/electron/file.cc&lt;/code&gt;. It should work on macOS/Linux/Windows.</source>
          <target state="translated">Electron C ++コードスタイルに従ってファイルを自動的にフォーマットするには、 &lt;code&gt;clang-format -i path/to/electron/file.cc&lt;/code&gt; を実行します。macOS / Linux / Windowsで動作するはずです。</target>
        </trans-unit>
        <trans-unit id="fbdd9e0e1f5169f11845d03f9a4b24b8851b4328" translate="yes" xml:space="preserve">
          <source>To avoid this problem, ensure you clean up any references to renderer callbacks passed to the main process. This involves cleaning up event handlers, or ensuring the main process is explicitly told to dereference callbacks that came from a renderer process that is exiting.</source>
          <target state="translated">この問題を回避するには、メインプロセスに渡されたレンダラー コールバックへの参照をクリーンアップする必要があります。これには、イベント ハンドラをクリーンアップするか、またはメイン プロセスが、終了するレンダラー プロセスからのコールバックを参照解除するように明示的に指示されていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="f729edcee19e3b35f18f931c0af6f8268c97b5d4" translate="yes" xml:space="preserve">
          <source>To avoid using the prebuilt binaries of &lt;code&gt;libchromiumcontent&lt;/code&gt;, you can build &lt;code&gt;libchromiumcontent&lt;/code&gt; locally. To do so, follow these steps:</source>
          <target state="translated">&lt;code&gt;libchromiumcontent&lt;/code&gt; のビルド済みバイナリの使用を回避するために、ローカルで &lt;code&gt;libchromiumcontent&lt;/code&gt; をビルドできます。これを行うには、次の手順に従います。</target>
        </trans-unit>
        <trans-unit id="19976a15788c70fd26ec283fb2a6d554b40bc217" translate="yes" xml:space="preserve">
          <source>To build Electron with compilers like &lt;code&gt;g++&lt;/code&gt;, you first need to disable &lt;code&gt;clang&lt;/code&gt; with &lt;code&gt;--disable_clang&lt;/code&gt; switch first, and then set &lt;code&gt;CC&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; environment variables to the ones you want.</source>
          <target state="translated">以下のようなコンパイラで電子を構築するために、 &lt;code&gt;g++&lt;/code&gt; 無効にするには、まず必要 &lt;code&gt;clang&lt;/code&gt; と &lt;code&gt;--disable_clang&lt;/code&gt; 第1のスイッチと、その後、設定 &lt;code&gt;CC&lt;/code&gt; と &lt;code&gt;CXX&lt;/code&gt; のあなたが欲しいものに環境変数を。</target>
        </trans-unit>
        <trans-unit id="d6cd83725cfa73ae4725497beceb7d033c9cce9b" translate="yes" xml:space="preserve">
          <source>To build for the 32bit target, you need to pass &lt;code&gt;--target_arch=ia32&lt;/code&gt; when running the bootstrap script:</source>
          <target state="translated">32ビットターゲット用にビルドするには、ブートストラップスクリプトの実行時に &lt;code&gt;--target_arch=ia32&lt;/code&gt; を渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="3ce927211b7434e6f4913045507992599779f930" translate="yes" xml:space="preserve">
          <source>To build for the 32bit target, you need to pass &lt;code&gt;target_cpu = &quot;x86&quot;&lt;/code&gt; as a GN arg. You can build the 32bit target alongside the 64bit target by using a different output directory for GN, e.g. &lt;code&gt;out/Release-x86&lt;/code&gt;, with different arguments.</source>
          <target state="translated">32ビットターゲット用にビルドするには、 &lt;code&gt;target_cpu = &quot;x86&quot;&lt;/code&gt; をGN引数として渡す必要があります。GNの別の出力ディレクトリ（ &lt;code&gt;out/Release-x86&lt;/code&gt; など）をさまざまな引数で使用することにより、64ビットターゲットと一緒に32ビットターゲットを構築できます。</target>
        </trans-unit>
        <trans-unit id="821a75b76ea57d2ebf97a34d857fed4df2cade15" translate="yes" xml:space="preserve">
          <source>To build, run &lt;code&gt;ninja&lt;/code&gt; with the &lt;code&gt;electron:electron_app&lt;/code&gt; target:</source>
          <target state="translated">ビルドするには、 &lt;code&gt;electron:electron_app&lt;/code&gt; ターゲットで &lt;code&gt;ninja&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="b7686e79d73850d8f8a2318d278bdb52057eef79" translate="yes" xml:space="preserve">
          <source>To call the Main process from the Renderer, use the IPC module:</source>
          <target state="translated">RendererからMainプロセスを呼び出すには、IPCモジュールを使用します。</target>
        </trans-unit>
        <trans-unit id="eb59b218f28d7b858bdf2ed54eeac06e692808d8" translate="yes" xml:space="preserve">
          <source>To capture both audio and video from the entire desktop the constraints passed to &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt;&lt;/a&gt; must include &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt;, for both &lt;code&gt;audio&lt;/code&gt; and &lt;code&gt;video&lt;/code&gt;, but should not include a &lt;code&gt;chromeMediaSourceId&lt;/code&gt; constraint.</source>
          <target state="translated">渡された制約デスクトップ全体からオーディオとビデオの両方をキャプチャするには&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt; &lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt; が&lt;/a&gt;含まれている必要があり &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt; 、両方のための &lt;code&gt;audio&lt;/code&gt; および &lt;code&gt;video&lt;/code&gt; 、しかし含めるべきではありません &lt;code&gt;chromeMediaSourceId&lt;/code&gt; の制約を。</target>
        </trans-unit>
        <trans-unit id="ad024e97cbf72e17d0494dc407b356d3cd2d6654" translate="yes" xml:space="preserve">
          <source>To capture video from a source provided by &lt;code&gt;desktopCapturer&lt;/code&gt; the constraints passed to &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt;&lt;/a&gt; must include &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt;, and &lt;code&gt;audio: false&lt;/code&gt;.</source>
          <target state="translated">キャプチャによって提供されるソースからの映像に &lt;code&gt;desktopCapturer&lt;/code&gt; に渡された制約&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt; &lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt; が&lt;/a&gt;含まれている必要があります &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt; 、そして &lt;code&gt;audio: false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4940cd6896449350d0e22ff6a037fc2012f95be" translate="yes" xml:space="preserve">
          <source>To check if a DevTools extension is installed you can run the following:</source>
          <target state="translated">DevTools拡張機能がインストールされているかどうかを確認するには、以下のように実行します。</target>
        </trans-unit>
        <trans-unit id="a4b0244100e839dce97df084a927399cebf56784" translate="yes" xml:space="preserve">
          <source>To check out how a simple Electron app is built, see &lt;a href=&quot;first-app&quot;&gt;Writing Your First Electron App&lt;/a&gt;</source>
          <target state="translated">簡単なElectronアプリの作成方法を確認するには、&lt;a href=&quot;first-app&quot;&gt;最初のElectronアプリの作成を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3035d11dba22f59c2a05ae50e84cbd4beacd68c3" translate="yes" xml:space="preserve">
          <source>To check out how an Electron app that uses a background task to send toast notifications and live tiles, &lt;a href=&quot;https://github.com/felixrieseberg/electron-uwp-background&quot;&gt;check out the Microsoft-provided sample&lt;/a&gt;.</source>
          <target state="translated">バックグラウンドタスクを使用してトースト通知とライブタイルを送信するElectronアプリの方法を&lt;a href=&quot;https://github.com/felixrieseberg/electron-uwp-background&quot;&gt;確認するには、Microsoft提供のサンプルを確認してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="16073334d646ccfac2edf89e53cff76005d5a9e7" translate="yes" xml:space="preserve">
          <source>To check out the process architecture, see &lt;a href=&quot;application-architecture#main-and-renderer-processes&quot;&gt;Main and Renderer Processes&lt;/a&gt;.</source>
          <target state="translated">プロセスアーキテクチャを確認するには、&lt;a href=&quot;application-architecture#main-and-renderer-processes&quot;&gt;メインプロセスとレンダラープロセスを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b208f3dbdc3043098fdd288737ea5b6c37c7c27c" translate="yes" xml:space="preserve">
          <source>To check that Node.js was installed correctly, type the following commands in your terminal client:</source>
          <target state="translated">Node.jsが正しくインストールされていることを確認するには、ターミナルクライアントで以下のコマンドを入力します。</target>
        </trans-unit>
        <trans-unit id="47fa821b0f83e7586fb85804250c66d0d13ab94c" translate="yes" xml:space="preserve">
          <source>To clean only &lt;code&gt;out&lt;/code&gt; and &lt;code&gt;dist&lt;/code&gt; directories:</source>
          <target state="translated">だけきれいに &lt;code&gt;out&lt;/code&gt; と &lt;code&gt;dist&lt;/code&gt; のディレクトリ：</target>
        </trans-unit>
        <trans-unit id="c3a8e3b3ba3c693c9aa963abbc63ed4672f90e2b" translate="yes" xml:space="preserve">
          <source>To clean the build files:</source>
          <target state="translated">ビルドファイルをクリーンアップするために</target>
        </trans-unit>
        <trans-unit id="fd19315b5d8b4d48df4ffad2c2078c0ed5d6c4c8" translate="yes" xml:space="preserve">
          <source>To clean thumbnail toolbar buttons, just call &lt;code&gt;BrowserWindow.setThumbarButtons&lt;/code&gt; with an empty array:</source>
          <target state="translated">サムネイルツールバーボタンを消去するには、空の配列で &lt;code&gt;BrowserWindow.setThumbarButtons&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="535c3ee8e8e2739219eb5319c8cac023145fc1bb" translate="yes" xml:space="preserve">
          <source>To clean your tasks list, call &lt;code&gt;app.setUserTasks&lt;/code&gt; with an empty array:</source>
          <target state="translated">タスクリストをクリーン &lt;code&gt;app.setUserTasks&lt;/code&gt; するには、空の配列でapp.setUserTasksを呼び出します。</target>
        </trans-unit>
        <trans-unit id="477e7940dca6fb43c124fbb4278e94e6a9111dbe" translate="yes" xml:space="preserve">
          <source>To clear the list of recent documents, you need to use &lt;a href=&quot;../api/app#appclearrecentdocuments-macos-windows&quot;&gt;app.clearRecentDocuments&lt;/a&gt; API in the &lt;code&gt;main.js&lt;/code&gt; file:</source>
          <target state="translated">最近のドキュメントのリストをクリアするには、 &lt;code&gt;main.js&lt;/code&gt; ファイルで&lt;a href=&quot;../api/app#appclearrecentdocuments-macos-windows&quot;&gt;app.clearRecentDocumentsAPI&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ccc514de8c7e5544405f7742ae2de3dacf5465d2" translate="yes" xml:space="preserve">
          <source>To clear thumbnail toolbar buttons, you need to call &lt;code&gt;BrowserWindow.setThumbarButtons&lt;/code&gt; with an empty array in the &lt;code&gt;main.js&lt;/code&gt; file.</source>
          <target state="translated">サムネイルツールバーボタンをクリアするには、 &lt;code&gt;main.js&lt;/code&gt; ファイルの空の配列を使用して &lt;code&gt;BrowserWindow.setThumbarButtons&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="bb41e470531e466ff0ed751deb72dffdd4695cc6" translate="yes" xml:space="preserve">
          <source>To clear your tasks list, you need to call &lt;code&gt;app.setUserTasks&lt;/code&gt; with an empty array in the &lt;code&gt;main.js&lt;/code&gt; file.</source>
          <target state="translated">あなたのタスクリストをクリアするには、呼び出す必要があり &lt;code&gt;app.setUserTasks&lt;/code&gt; を中に空の配列を &lt;code&gt;main.js&lt;/code&gt; ファイル。</target>
        </trans-unit>
        <trans-unit id="2134ea0ff07c37dd63e847fbf7d7cc6b27be05cb" translate="yes" xml:space="preserve">
          <source>To compile any existing Electron app, ensure that you have the following requirements:</source>
          <target state="translated">既存のElectronアプリをコンパイルするには、以下の要件を満たしていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="7e9223540bb1e87d1c72912e683b55dd11b45f0d" translate="yes" xml:space="preserve">
          <source>To compile for a platform that isn't the same as the one you're building on, set the &lt;code&gt;target_cpu&lt;/code&gt; and &lt;code&gt;target_os&lt;/code&gt; GN arguments. For example, to compile an x86 target from an x64 host, specify &lt;code&gt;target_cpu = &quot;x86&quot;&lt;/code&gt; in &lt;code&gt;gn args&lt;/code&gt;.</source>
          <target state="translated">構築しているプラ​​ットフォームと同じではないプラットフォーム用にコンパイルするには、 &lt;code&gt;target_cpu&lt;/code&gt; および &lt;code&gt;target_os&lt;/code&gt; GN引数を設定します。例えば、x64のホストからのx86ターゲットをコンパイルするように指定 &lt;code&gt;target_cpu = &quot;x86&quot;&lt;/code&gt; 中に &lt;code&gt;gn args&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5bce627812dc49b506ea519eb6a820ca4f848f8" translate="yes" xml:space="preserve">
          <source>To compile native Node modules against a custom build of Electron that doesn't match a public release, instruct &lt;code&gt;npm&lt;/code&gt; to use the version of Node you have bundled with your custom build.</source>
          <target state="translated">パブリックリリースと一致しないElectronのカスタムビルドに対してネイティブノードモジュールをコンパイルするには、カスタムビルドにバンドルされているノードのバージョンを使用するように &lt;code&gt;npm&lt;/code&gt; に指示します。</target>
        </trans-unit>
        <trans-unit id="27fca113c2f5999647cb968a39fe14a8e790988d" translate="yes" xml:space="preserve">
          <source>To configure a global keyboard shortcut, you need to use the &lt;a href=&quot;../api/global-shortcut&quot;&gt;globalShortcut&lt;/a&gt; module to detect keyboard events even when the application does not have keyboard focus.</source>
          <target state="translated">グローバルキーボードショートカットを構成するには、アプリケーションにキーボードフォーカスがない場合でも、&lt;a href=&quot;../api/global-shortcut&quot;&gt;globalShortcut&lt;/a&gt;モジュールを使用してキーボードイベントを検出する必要があります。</target>
        </trans-unit>
        <trans-unit id="63f5bfc5a2539668bb939b4f8f57fd9c22e1c355" translate="yes" xml:space="preserve">
          <source>To configure display scaling:</source>
          <target state="translated">ディスプレイのスケーリングを設定します。</target>
        </trans-unit>
        <trans-unit id="ef5ea456f6758585b278e513aefa5cb807b4ef93" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;Session&lt;/code&gt; with &lt;code&gt;options&lt;/code&gt;, you have to ensure the &lt;code&gt;Session&lt;/code&gt; with the &lt;code&gt;partition&lt;/code&gt; has never been used before. There is no way to change the &lt;code&gt;options&lt;/code&gt; of an existing &lt;code&gt;Session&lt;/code&gt; object.</source>
          <target state="translated">作成するには &lt;code&gt;Session&lt;/code&gt; で &lt;code&gt;options&lt;/code&gt; 、あなたは確認する必要があり &lt;code&gt;Session&lt;/code&gt; して &lt;code&gt;partition&lt;/code&gt; 前に使用されていません。既存の &lt;code&gt;Session&lt;/code&gt; オブジェクトの &lt;code&gt;options&lt;/code&gt; を変更する方法はありません。</target>
        </trans-unit>
        <trans-unit id="edb532d22f5908482440f8346cec7745e9149b67" translate="yes" xml:space="preserve">
          <source>To create a browserify bundle and use it as a preload script, something like the following should be used:</source>
          <target state="translated">browserifyバンドルを作成し、それをプリロードスクリプトとして使用するには、以下のようなものを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d4504a0a533285a94c124801a9670c64f2a2e1d6" translate="yes" xml:space="preserve">
          <source>To create a click-through window, i.e. making the window ignore all mouse events, you can call the &lt;a href=&quot;browser-window#winsetignoremouseeventsignore&quot;&gt;win.setIgnoreMouseEvents(ignore)&lt;/a&gt; API:</source>
          <target state="translated">クリックスルーウィンドウを作成するには、つまりウィンドウですべてのマウスイベントを無視するには、&lt;a href=&quot;browser-window#winsetignoremouseeventsignore&quot;&gt;win.setIgnoreMouseEvents（ignore）&lt;/a&gt; APIを呼び出します。</target>
        </trans-unit>
        <trans-unit id="8b880bc0edc8f8e99eb3746bcafb2671729f2d76" translate="yes" xml:space="preserve">
          <source>To create a click-through window, i.e. making the window ignore all mouse events, you can call the &lt;a href=&quot;browser-window#winsetignoremouseeventsignore-options&quot;&gt;win.setIgnoreMouseEvents(ignore)&lt;/a&gt; API:</source>
          <target state="translated">クリックスルーウィンドウを作成する、つまりウィンドウにすべてのマウスイベントを無視させるには、&lt;a href=&quot;browser-window#winsetignoremouseeventsignore-options&quot;&gt;win.setIgnoreMouseEvents（ignore）&lt;/a&gt; APIを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="176943a2a565e35770f15d67eca72e8250c98195" translate="yes" xml:space="preserve">
          <source>To create a custom driver, we'll use Node.js' &lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_process&lt;/a&gt; API. The test suite will spawn the Electron process, then establish a simple messaging protocol:</source>
          <target state="translated">カスタムドライバーを作成するには、Node.jsの&lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_processAPIを&lt;/a&gt;使用します。テストスイートはElectronプロセスを生成し、簡単なメッセージングプロトコルを確立します。</target>
        </trans-unit>
        <trans-unit id="772c951591704df38eae61542fd514f0fae11027" translate="yes" xml:space="preserve">
          <source>To create a custom driver, we'll use nodejs' &lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_process&lt;/a&gt; API. The test suite will spawn the Electron process, then establish a simple messaging protocol:</source>
          <target state="translated">カスタムドライバーを作成するには、nodejsの&lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_process&lt;/a&gt; APIを使用します。テストスイートは、Electronプロセスを生成し、単純なメッセージングプロトコルを確立します。</target>
        </trans-unit>
        <trans-unit id="14fa77793c887f131ecab2b39703d63c2fb21efd" translate="yes" xml:space="preserve">
          <source>To create a frameless window, you need to set &lt;code&gt;frame&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in &lt;a href=&quot;browser-window&quot;&gt;BrowserWindow&lt;/a&gt;'s &lt;code&gt;options&lt;/code&gt;:</source>
          <target state="translated">フレームレスウィンドウを作成するには、&lt;a href=&quot;browser-window&quot;&gt;BrowserWindow&lt;/a&gt;の &lt;code&gt;options&lt;/code&gt; で &lt;code&gt;frame&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="4cf386399c6a736554547f2ae38eba052a608d96" translate="yes" xml:space="preserve">
          <source>To create a sandboxed window, pass &lt;code&gt;sandbox: true&lt;/code&gt; to &lt;code&gt;webPreferences&lt;/code&gt;:</source>
          <target state="translated">サンドボックス化されたウィンドウを作成するには、 &lt;code&gt;sandbox: true&lt;/code&gt; を &lt;code&gt;webPreferences&lt;/code&gt; ：に渡します。</target>
        </trans-unit>
        <trans-unit id="1a722dcf46a3cbeaf79a09b4d16ddc687f912186" translate="yes" xml:space="preserve">
          <source>To create a sandboxed window, simply pass &lt;code&gt;sandbox: true&lt;/code&gt; to &lt;code&gt;webPreferences&lt;/code&gt;:</source>
          <target state="translated">サンドボックス化されたウィンドウを作成するには、単純に &lt;code&gt;sandbox: true&lt;/code&gt; を &lt;code&gt;webPreferences&lt;/code&gt; に渡します。</target>
        </trans-unit>
        <trans-unit id="48c5105eef2b37906ef4104ae87b2fc10469145a" translate="yes" xml:space="preserve">
          <source>To create a shortcut, you need to provide &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Exec&lt;/code&gt; properties for the entry you want to add to the shortcut menu. Unity will execute the command defined in the &lt;code&gt;Exec&lt;/code&gt; field after the user clicked the shortcut menu item. An example of the &lt;code&gt;.desktop&lt;/code&gt; file may look as follows:</source>
          <target state="translated">ショートカットを作成するには、ショートカットメニューに追加するエントリの &lt;code&gt;Name&lt;/code&gt; プロパティと &lt;code&gt;Exec&lt;/code&gt; プロパティを指定する必要があります。Unityは、ユーザがショートカットメニュー項目をクリックした後、 &lt;code&gt;Exec&lt;/code&gt; フィールドで定義されたコマンドを実行します。 &lt;code&gt;.desktop&lt;/code&gt; ファイルの例は次のようになります。</target>
        </trans-unit>
        <trans-unit id="7168a31db235db73d7406740d08f55b04b316abe" translate="yes" xml:space="preserve">
          <source>To create a window without chrome, or a transparent window in arbitrary shape, you can use the &lt;a href=&quot;frameless-window&quot;&gt;Frameless Window&lt;/a&gt; API.</source>
          <target state="translated">クロムなしのウィンドウ、または任意の形状の透明ウィンドウを作成するには、&lt;a href=&quot;frameless-window&quot;&gt;フレームレスウィンドウ&lt;/a&gt; APIを使用できます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
