<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="electron">
    <body>
      <group id="electron">
        <trans-unit id="329f1b3458e5654003587ba829f6203f03eae44d" translate="yes" xml:space="preserve">
          <source>There are however fundamental differences between the two projects that make Electron a completely separate product from NW.js.</source>
          <target state="translated">しかし、この2つのプロジェクトには根本的な違いがあり、ElectronはNW.jsとは完全に別物となっています。</target>
        </trans-unit>
        <trans-unit id="ad08bdb5eb867f6f6d0e34b09e8ccaccad6477c4" translate="yes" xml:space="preserve">
          <source>There are numerous JavaScript bundlers out there and we know better than to anger the community by recommending one tool over another. We do however recommend that you use a bundler that is able to handle Electron's unique environment that needs to handle both Node.js and browser environments.</source>
          <target state="translated">世の中には数多くの JavaScript バンドルラーが存在しますが、私たちは、あるツールを別のツールよりも推奨することでコミュニティを怒らせてはいけないと考えています。しかし、私たちは、Node.jsとブラウザ環境の両方を扱う必要があるElectronのユニークな環境に対応できるバンドルラーを使うことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="daab325a6ad493b1e0ed384084d9ec64b56745d1" translate="yes" xml:space="preserve">
          <source>There are numerous differences in the amount of supported features. Electron has a bigger community, more production apps using it, and &lt;a href=&quot;https://www.npmjs.com/search?q=electron&quot;&gt;a large amount of userland modules available on npm&lt;/a&gt;.</source>
          <target state="translated">サポートされる機能の量には多くの違いがあります。Electronには、より大きなコミュニティ、それを使用するより多くの本番アプリ、および&lt;a href=&quot;https://www.npmjs.com/search?q=electron&quot;&gt;npmで利用可能な大量のユーザーランドモジュールがあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="004aab477cea089e16c90111f185db2c7a87f6e9" translate="yes" xml:space="preserve">
          <source>There are questions that are asked quite often. Check this out before creating an issue:</source>
          <target state="translated">かなり頻繁に聞かれる質問があります。問題を作成する前にチェックしておきましょう。</target>
        </trans-unit>
        <trans-unit id="be1bdaab0da3f14ef03597a90453c56457e443e0" translate="yes" xml:space="preserve">
          <source>There are several different ways to install native modules:</source>
          <target state="translated">ネイティブモジュールをインストールする方法はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="f3594ebce627515e92051d5777e5ec1d0dd0b473" translate="yes" xml:space="preserve">
          <source>There are several major changes from our 1.x strategy outlined below. Each change is intended to satisfy the needs and priorities of developers/maintainers and app developers.</source>
          <target state="translated">以下に概説する1.x戦略からのいくつかの大きな変更点があります。それぞれの変更は、開発者/メンテナやアプリ開発者のニーズと優先順位を満たすことを目的としています。</target>
        </trans-unit>
        <trans-unit id="6a9ff1589bd15784761ca923818d0727ca501089" translate="yes" xml:space="preserve">
          <source>There are several ways to update an Electron application. The easiest and officially supported one is taking advantage of the built-in &lt;a href=&quot;https://github.com/Squirrel&quot;&gt;Squirrel&lt;/a&gt; framework and Electron's &lt;a href=&quot;../api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; module.</source>
          <target state="translated">Electronアプリケーションを更新するには、いくつかの方法があります。最も簡単で公式にサポートされているのは、組み込みの&lt;a href=&quot;https://github.com/Squirrel&quot;&gt;Squirrel&lt;/a&gt;フレームワークとElectronの&lt;a href=&quot;../api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt;モジュールを利用することです。</target>
        </trans-unit>
        <trans-unit id="1243fa7e8438e871f179890a16545848371e675e" translate="yes" xml:space="preserve">
          <source>There are several ways to update an Electron application. The easiest and officially supported one is taking advantage of the built-in &lt;a href=&quot;https://github.com/Squirrel&quot;&gt;Squirrel&lt;/a&gt; framework and Electron's &lt;a href=&quot;api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; module.</source>
          <target state="translated">Electronアプリケーションを更新する方法はいくつかあります。最も簡単で公式にサポートされているのは、組み込みの&lt;a href=&quot;https://github.com/Squirrel&quot;&gt;Squirrel&lt;/a&gt;フレームワークとElectronの&lt;a href=&quot;api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt;モジュールを利用することです。</target>
        </trans-unit>
        <trans-unit id="de8a36bc5c6e7059274d4fd4661f84f4dc105cfb" translate="yes" xml:space="preserve">
          <source>There are three ways to create a &lt;code&gt;.snap&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;.snap&lt;/code&gt; ファイルを作成するには、3つの方法があります。</target>
        </trans-unit>
        <trans-unit id="0d95bb8a7dee45320eb44fe7853039108a4a1741" translate="yes" xml:space="preserve">
          <source>There is a second script, &lt;code&gt;script/patch.py&lt;/code&gt; that may be useful. Read &lt;code&gt;./script/patch.py -h&lt;/code&gt; for more information.</source>
          <target state="translated">役立つ可能性がある2番目のスクリプト &lt;code&gt;script/patch.py&lt;/code&gt; があります。読む &lt;code&gt;./script/patch.py -h&lt;/code&gt; 詳細については、を。</target>
        </trans-unit>
        <trans-unit id="a8ee2e2a678feae54ac5c2aa26213901010f7d5c" translate="yes" xml:space="preserve">
          <source>There is not a lot of Python in this repository, but it too is governed by coding style rules. &lt;code&gt;npm run lint-py&lt;/code&gt; will check all Python, using &lt;code&gt;pylint&lt;/code&gt; to do so.</source>
          <target state="translated">このリポジトリには多くのPythonはありませんが、コーディングスタイルルールによって管理されています。 &lt;code&gt;npm run lint-py&lt;/code&gt; は、 &lt;code&gt;pylint&lt;/code&gt; を使用してすべてのPythonをチェックします。</target>
        </trans-unit>
        <trans-unit id="f1bb9ca43ae7748f326896a6ab75ed4d14280b8e" translate="yes" xml:space="preserve">
          <source>There is one important caveat: Native Node.js modules (that is, modules that require compilation of native code before they can be used) will need to be compiled to be used with Electron.</source>
          <target state="translated">一つ重要な注意点があります。それは、ネイティブNode.jsモジュール(つまり、ネイティブコードをコンパイルしてから使用する必要があるモジュール)をElectronで使用するにはコンパイルが必要です。</target>
        </trans-unit>
        <trans-unit id="b0bd2b272dfa5053fccdd984e4187c6a3d7ac780" translate="yes" xml:space="preserve">
          <source>There is only one Chromium, whereas there are many thousands of apps built on Electron, all of which behave slightly differently. Accounting for those differences can yield a huge possibility space, and make it challenging to ensure the security of the platform in unusual use cases.</source>
          <target state="translated">Chromiumは1つしかありませんが、Electron上には何千ものアプリが存在し、それぞれのアプリの動作が微妙に異なっています。これらの違いを考慮に入れることで、大きな可能性が生まれる可能性があり、通常とは異なるユースケースでのプラットフォームのセキュリティを確保することが難しくなります。</target>
        </trans-unit>
        <trans-unit id="9a0e9dc372e0c40d38d2958352a0d648c5040d89" translate="yes" xml:space="preserve">
          <source>There may be instances where you want to respond to these events in the main process as well. The main process however does not have a &lt;code&gt;navigator&lt;/code&gt; object and thus cannot detect these events directly. Using Electron's inter-process communication utilities, the events can be forwarded to the main process and handled as needed, as shown in the following example.</source>
          <target state="translated">メインプロセスでもこれらのイベントに応答したい場合があります。ただし、メインプロセスには &lt;code&gt;navigator&lt;/code&gt; オブジェクトがないため、これらのイベントを直接検出できません。Electronのプロセス間通信ユーティリティを使用すると、次の例に示すように、イベントをメインプロセスに転送し、必要に応じて処理できます。</target>
        </trans-unit>
        <trans-unit id="0b31b2b1a36a2dcc19bb4b18ad6ce9ec661dac6b" translate="yes" xml:space="preserve">
          <source>There may be situations when you want to respond to online/offline events in the Main process as well. The Main process, however, does not have a &lt;code&gt;navigator&lt;/code&gt; object and cannot detect these events directly. In this case, you need to forward the events to the Main process using Electron's inter-process communication (IPC) utilities.</source>
          <target state="translated">メインプロセスでもオンライン/オフラインイベントに応答したい場合があります。ただし、メインプロセスには &lt;code&gt;navigator&lt;/code&gt; オブジェクトがなく、これらのイベントを直接検出することはできません。この場合、Electronのプロセス間通信（IPC）ユーティリティを使用して、イベントをメインプロセスに転送する必要があります。</target>
        </trans-unit>
        <trans-unit id="c76908a4e62bf35d62ab8daa6831ef2e371fa76d" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a chance we need to change our build configuration to match the build flags that node wants in &lt;code&gt;node/common.gypi&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;node/common.gypi&lt;/code&gt; でノードが必要とするビルドフラグに一致するようにビルド構成を変更する必要がある可能性があります</target>
        </trans-unit>
        <trans-unit id="4b0624f0c2d738520fefdcf3df7e9a83cea2bac5" translate="yes" xml:space="preserve">
          <source>There's an alternative way to specify a chromeless window. Instead of setting &lt;code&gt;frame&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; which disables both the titlebar and window controls, you may want to have the title bar hidden and your content extend to the full window size, yet still preserve the window controls (&quot;traffic lights&quot;) for standard window actions. You can do so by specifying the &lt;code&gt;titleBarStyle&lt;/code&gt; option:</source>
          <target state="translated">クロムレスウィンドウを指定する別の方法があります。 &lt;code&gt;frame&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定してタイトルバーとウィンドウコントロールの両方を無効にする代わりに、タイトルバーを非表示にして、コンテンツをウィンドウサイズ全体に拡張し、標準のウィンドウアクション用にウィンドウコントロール（「信号機」）を保持することができます。 。これを行うには、 &lt;code&gt;titleBarStyle&lt;/code&gt; オプションを指定します。</target>
        </trans-unit>
        <trans-unit id="0ef3f0f83bb8cfbb28cb6dcf1d9c9e5d34f976bb" translate="yes" xml:space="preserve">
          <source>These are the guidelines for writing Electron documentation.</source>
          <target state="translated">これらは、Electronのドキュメントを書くためのガイドラインです。</target>
        </trans-unit>
        <trans-unit id="9d6027584eb7ad264155776e956f099186c67b37" translate="yes" xml:space="preserve">
          <source>These are the style guidelines for coding in Electron.</source>
          <target state="translated">これらは、Electronでのコーディングのためのスタイルガイドラインです。</target>
        </trans-unit>
        <trans-unit id="b7d5fb044e65547b9059dc8dcca315472066a56d" translate="yes" xml:space="preserve">
          <source>These features bring those auditing tools to your Electron app. You can choose to add audits to your tests with Spectron or use them within DevTools with Devtron. Read on for a summary of the tools.</source>
          <target state="translated">これらの機能により、これらの監査ツールがElectronアプリケーションに導入されます。Spectronを使用してテストに監査を追加するか、Devtronを使用してDevTools内で監査を使用するかを選択できます。ツールの概要については、こちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="fd2128f3e70339d724cc007edf289f70837ab2c9" translate="yes" xml:space="preserve">
          <source>These flags are disabled owing to the fact that Electron uses BoringSSL instead of OpenSSL when building Node.js' &lt;code&gt;crypto&lt;/code&gt; module, and so will not work as designed.</source>
          <target state="translated">これらのフラグは、ElectronがNode.jsの &lt;code&gt;crypto&lt;/code&gt; モジュールを構築するときにOpenSSLではなくBoringSSLを使用するために無効になり、設計どおりに機能しません。</target>
        </trans-unit>
        <trans-unit id="e0d8c7951f5bc627a70a99d0271644e93dc97b85" translate="yes" xml:space="preserve">
          <source>These guides are intended for people working on the Electron project itself. For guides on Electron app development, see &lt;a href=&quot;../readme#guides-and-tutorials&quot;&gt;/docs/README.md&lt;/a&gt;.</source>
          <target state="translated">これらのガイドは、Electronプロジェクト自体に取り組む人々を対象としています。Electronアプリ開発のガイドについては、&lt;a href=&quot;../readme#guides-and-tutorials&quot;&gt;/docs/README.mdを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0d3108b4bf017db862027e0deae0b1a07984ba16" translate="yes" xml:space="preserve">
          <source>These guides are intended for people working on the Electron project itself. For guides on Electron app development, see &lt;a href=&quot;readme#guides-and-tutorials&quot;&gt;/docs/README.md&lt;/a&gt;.</source>
          <target state="translated">これらのガイドは、Electronプロジェクト自体に取り組んでいる人々を対象としています。Electronアプリ開発のガイドについては、&lt;a href=&quot;readme#guides-and-tutorials&quot;&gt;/ docs /README.mdを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="37c441683da7e488d5912c3b7aea3e8a75035f9f" translate="yes" xml:space="preserve">
          <source>These individual tutorials expand on topics discussed in the guide above.</source>
          <target state="translated">これらの個別のチュートリアルは、上記のガイドで説明したトピックを拡張したものです。</target>
        </trans-unit>
        <trans-unit id="db666ef559d2fa34de4bff16e1c88aed612ebb1e" translate="yes" xml:space="preserve">
          <source>These mappings apply to the endpoint host in a net request (the TCP connect and host resolver in a direct connection, and the &lt;code&gt;CONNECT&lt;/code&gt; in an HTTP proxy connection, and the endpoint host in a &lt;code&gt;SOCKS&lt;/code&gt; proxy connection).</source>
          <target state="translated">これらのマッピングは、ネット要求のエンドポイントホスト（直接接続のTCP接続とホストリゾルバー、HTTPプロキシ接続の &lt;code&gt;CONNECT&lt;/code&gt; 、および &lt;code&gt;SOCKS&lt;/code&gt; プロキシ接続のエンドポイントホスト）に適用されます。</target>
        </trans-unit>
        <trans-unit id="5959f576697cc4d5a5e88b90052ec389f612923a" translate="yes" xml:space="preserve">
          <source>These methods can be accessed from the &lt;code&gt;webContents&lt;/code&gt; module:</source>
          <target state="translated">これらのメソッドには、 &lt;code&gt;webContents&lt;/code&gt; モジュールからアクセスできます。</target>
        </trans-unit>
        <trans-unit id="630557d884064039ed6c85e2f5ccbb60cf40eb54" translate="yes" xml:space="preserve">
          <source>These new features bring those auditing tools to your Electron app. You can choose to add audits to your tests with Spectron or use them within DevTools with Devtron. Read on for a summary of the tools.</source>
          <target state="translated">これらの新機能により、これらの監査ツールがElectronアプリケーションに導入されました。Spectronを使用してテストに監査を追加するか、Devtronを使用してDevTools内で監査を使用するかを選択できます。ツールの概要については、こちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="d50011daa060d619340c176124cf64eb2f14b2ad" translate="yes" xml:space="preserve">
          <source>These steps are to help app developers learn when a branch they're using becomes unsupported, but without being excessively intrusive to end users.</source>
          <target state="translated">これらのステップは、使用しているブランチがサポートされていない場合に、エンドユーザーに過度に迷惑をかけることなく、アプリ開発者が学習できるようにするためのものです。</target>
        </trans-unit>
        <trans-unit id="6939e39778ca1f214b49200414bf0041255de666" translate="yes" xml:space="preserve">
          <source>These tools will take care of all the steps you need to take to end up with a distributable Electron applications, such as packaging your application, rebranding the executable, setting the right icons and optionally creating installers.</source>
          <target state="translated">これらのツールは、アプリケーションのパッケージング、実行ファイルのリブランディング、適切なアイコンの設定、オプションでインストーラの作成など、Electronアプリケーションを配布可能な状態にするために必要なすべてのステップを処理します。</target>
        </trans-unit>
        <trans-unit id="fa7a3b8057245a9a53616fa5a39e6151d07de38f" translate="yes" xml:space="preserve">
          <source>They backport a small amount of things as needed</source>
          <target state="translated">彼らは必要に応じて少量のものを逆輸入します。</target>
        </trans-unit>
        <trans-unit id="2af9e4d561565d39f2dc7fde06124c3762b7daf9" translate="yes" xml:space="preserve">
          <source>They should be called only from the main process.</source>
          <target state="translated">それらはメインプロセスからのみ呼び出されるべきである。</target>
        </trans-unit>
        <trans-unit id="d9ab6ef4734e8487306b0dcfa5fcac840dc24915" translate="yes" xml:space="preserve">
          <source>This API allows the user to set custom options for the save dialog that opens for the download item by default. The API is only available in session's &lt;code&gt;will-download&lt;/code&gt; callback function.</source>
          <target state="translated">このAPIを使用すると、ユーザーは、デフォルトでダウンロードアイテムに対して開く保存ダイアログのカスタムオプションを設定できます。APIは、セッションの &lt;code&gt;will-download&lt;/code&gt; コールバック関数でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="925561daf4358b3834107004f7ee8e98e9571064" translate="yes" xml:space="preserve">
          <source>This API can be called safely before the &lt;code&gt;ready&lt;/code&gt; event the &lt;code&gt;app&lt;/code&gt; module emits, it is usually used to report errors in early stage of startup. If called before the app &lt;code&gt;ready&lt;/code&gt;event on Linux, the message will be emitted to stderr, and no GUI dialog will appear.</source>
          <target state="translated">このAPIは、 &lt;code&gt;app&lt;/code&gt; モジュールが発行する &lt;code&gt;ready&lt;/code&gt; イベントの前に安全に呼び出すことができます。通常、起動の初期段階でエラーを報告するために使用されます。Linuxのapp &lt;code&gt;ready&lt;/code&gt; イベントの前に呼び出された場合、メッセージはstderrに送信され、GUIダイアログは表示されません。</target>
        </trans-unit>
        <trans-unit id="2402b140cb533396d2bbc56ab34f5b0b2e678306" translate="yes" xml:space="preserve">
          <source>This API does not support loading packed (.crx) extensions.</source>
          <target state="translated">このAPIは、パックされた(.crx)拡張機能の読み込みをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="3c529d1c9cab6bf80d5b59619ec9fc0c3d353e55" translate="yes" xml:space="preserve">
          <source>This API is deprecated and users should use &lt;code&gt;protocol.isProtocolRegistered&lt;/code&gt; and &lt;code&gt;protocol.isProtocolIntercepted&lt;/code&gt; instead.</source>
          <target state="translated">このAPIは非推奨であり、ユーザーは代わりに &lt;code&gt;protocol.isProtocolRegistered&lt;/code&gt; と &lt;code&gt;protocol.isProtocolIntercepted&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="71f803218a1d5d291dc1b96a5e9df5dc5d8a73e2" translate="yes" xml:space="preserve">
          <source>This API is implemented using the &lt;code&gt;remote&lt;/code&gt; module, which has both performance and security implications. Therefore its usage should be explicit.</source>
          <target state="translated">このAPIは、パフォーマンスとセキュリティの両方に影響する &lt;code&gt;remote&lt;/code&gt; モジュールを使用して実装されます。したがって、その使用法は明示的である必要があります。</target>
        </trans-unit>
        <trans-unit id="ccce43948a3464a22a6b4489bf6c58e6939da711" translate="yes" xml:space="preserve">
          <source>This API is only available on macOS 10.14 Mojave or newer.</source>
          <target state="translated">このAPIはmacOS 10.14 Mojave以降でのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="5401090fcbe4d15f1aaf9a83475bad4f5adaeb4c" translate="yes" xml:space="preserve">
          <source>This API itself will not protect your user data; rather, it is a mechanism to allow you to do so. Native apps will need to set &lt;a href=&quot;https://developer.apple.com/documentation/security/secaccesscontrolcreateflags?language=objc&quot;&gt;Access Control Constants&lt;/a&gt; like &lt;a href=&quot;https://developer.apple.com/documentation/security/secaccesscontrolcreateflags/ksecaccesscontroluserpresence?language=objc&quot;&gt;&lt;code&gt;kSecAccessControlUserPresence&lt;/code&gt;&lt;/a&gt; on their keychain entry so that reading it would auto-prompt for Touch ID biometric consent. This could be done with &lt;a href=&quot;https://github.com/atom/node-keytar&quot;&gt;&lt;code&gt;node-keytar&lt;/code&gt;&lt;/a&gt;, such that one would store an encryption key with &lt;code&gt;node-keytar&lt;/code&gt; and only fetch it if &lt;code&gt;promptTouchID()&lt;/code&gt; resolves.</source>
          <target state="translated">このAPI自体はユーザーデータを保護しません。むしろ、それはあなたがそうすることを可能にするメカニズムです。ネイティブアプリは、キーチェーンエントリに&lt;a href=&quot;https://developer.apple.com/documentation/security/secaccesscontrolcreateflags/ksecaccesscontroluserpresence?language=objc&quot;&gt; &lt;code&gt;kSecAccessControlUserPresence&lt;/code&gt; &lt;/a&gt;などの&lt;a href=&quot;https://developer.apple.com/documentation/security/secaccesscontrolcreateflags?language=objc&quot;&gt;アクセス制御定数&lt;/a&gt;を設定して、それを読み取るとTouchIDの生体認証の同意を自動的に求めるようにする必要があります。これは、&lt;a href=&quot;https://github.com/atom/node-keytar&quot;&gt; &lt;code&gt;node-keytar&lt;/code&gt; を使用&lt;/a&gt;して実行できます。たとえば、 &lt;code&gt;node-keytar&lt;/code&gt; &lt;code&gt;promptTouchID()&lt;/code&gt; 使用して暗号化キーを格納し、promptTouchID（）が解決された場合にのみそれをフェッチします。</target>
        </trans-unit>
        <trans-unit id="6f39198b0fa0d282f88937fb4cc331794e79a4d2" translate="yes" xml:space="preserve">
          <source>This API must be called after the &lt;code&gt;ready&lt;/code&gt; event is emitted.</source>
          <target state="translated">このAPIは、 &lt;code&gt;ready&lt;/code&gt; イベントが発行された後に呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="6ec73ae12bfc5ede319746c97b2c04f4bda600f4" translate="yes" xml:space="preserve">
          <source>This API, which was deprecated in Electron 8.0, is now removed.</source>
          <target state="translated">Electron 8.0で非推奨とされていたこのAPIは削除されました。</target>
        </trans-unit>
        <trans-unit id="340c45f7f9a661e9ecd6ebb65818f8f2c652ab5b" translate="yes" xml:space="preserve">
          <source>This allows you to determine ahead of time whether or not Windows will silently throw the notification away.</source>
          <target state="translated">これにより、Windowsが通知を黙って捨てるかどうかを事前に判断することができます。</target>
        </trans-unit>
        <trans-unit id="3b7e21637e7c965f48eb977557f27a7eb53b3d40" translate="yes" xml:space="preserve">
          <source>This also affects the Page Visibility API.</source>
          <target state="translated">これはPage Visibility APIにも影響します。</target>
        </trans-unit>
        <trans-unit id="b6a4200d449e3b3057da0734f19cfb37176483d7" translate="yes" xml:space="preserve">
          <source>This bug is a &quot;feature&quot; of Windows' command prompt. It happens when clicking inside the prompt window with &lt;code&gt;QuickEdit&lt;/code&gt; enabled and is intended to allow selecting and copying output text easily. Since each accidental click will pause the build process, you might want to disable this feature in the command prompt properties.</source>
          <target state="translated">このバグは、Windowsのコマンドプロンプトの「機能」です。これは、 &lt;code&gt;QuickEdit&lt;/code&gt; 有効になっているプロンプトウィンドウ内をクリックすると発生し、出力テキストを簡単に選択してコピーできるようにすることを目的としています。誤ってクリックするたびにビルドプロセスが一時停止するため、コマンドプロンプトのプロパティでこの機能を無効にすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7f46f0abdadcedbe72ac0adb70eeb03055c2be70" translate="yes" xml:space="preserve">
          <source>This can be done manually by visiting OmahaProxy in a browser, or automatically:</source>
          <target state="translated">これは、ブラウザでOmahaProxyにアクセスして手動で行うこともできますし、自動的に行うこともできます。</target>
        </trans-unit>
        <trans-unit id="470ea6e43dab4d99846613ea1d79d2843778af70" translate="yes" xml:space="preserve">
          <source>This can be set quickly in powershell (ran as administrator):</source>
          <target state="translated">これは powershell (管理者として実行)ですぐに設定できます。</target>
        </trans-unit>
        <trans-unit id="e19abaa13d0dba98679bd7418a20016c22238a79" translate="yes" xml:space="preserve">
          <source>This can be used in combination with &lt;a href=&quot;web-contents#contentssetsizeoptions&quot;&gt;&lt;code&gt;webContents.setSize&lt;/code&gt;&lt;/a&gt; to manually resize the webview contents in reaction to a window size change. This can make resizing faster compared to relying on the webview element bounds to automatically resize the contents.</source>
          <target state="translated">これを&lt;a href=&quot;web-contents#contentssetsizeoptions&quot;&gt; &lt;code&gt;webContents.setSize&lt;/code&gt; &lt;/a&gt;と組み合わせて使用​​すると、ウィンドウサイズの変更に応じて、webviewコンテンツのサイズを手動で変更できます。これにより、コンテンツのサイズを自動的に変更するためにwebview要素の境界に依存する場合に比べて、サイズ変更が速くなります。</target>
        </trans-unit>
        <trans-unit id="dbe1af3b7fc7582107cc5d1b42a1f06116c01e40" translate="yes" xml:space="preserve">
          <source>This can happen during build, when Debugging Tools for Windows has been installed with Windows Driver Kit. Uninstall Windows Driver Kit and install Debugging Tools with steps described above.</source>
          <target state="translated">Windows Driver Kit と一緒に Debugging Tools for Windows がインストールされている場合、ビルド中に発生することがあります。Windows Driver Kitをアンインストールし、上記の手順でDebugging Toolsをインストールしてください。</target>
        </trans-unit>
        <trans-unit id="cd6adbf27331cd50211951125f78609fbec2754f" translate="yes" xml:space="preserve">
          <source>This can sometimes be unnecessary, e.g. in a CI environment, when testing another component.</source>
          <target state="translated">これは、CI環境で別のコンポーネントをテストするときなどに不要になることがあります。</target>
        </trans-unit>
        <trans-unit id="92d95071d9f0757b88558f8b1d59a4ba138589a4" translate="yes" xml:space="preserve">
          <source>This can take a significant amount of time depending on build machine as it has to build all of the libchromium source.</source>
          <target state="translated">libchromiumソースをすべてビルドしなければならないため、ビルドマシンにもよりますが、かなりの時間がかかります。</target>
        </trans-unit>
        <trans-unit id="9ff35d4856557718c3a973fc186ad965641af82d" translate="yes" xml:space="preserve">
          <source>This cannot be called when &lt;code&gt;titleBarStyle&lt;/code&gt; is set to &lt;code&gt;customButtonsOnHover&lt;/code&gt;.</source>
          <target state="translated">ときに呼び出すことはできません &lt;code&gt;titleBarStyle&lt;/code&gt; がに設定されている &lt;code&gt;customButtonsOnHover&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d48a5b7971571cec838785e96b3a7db7f89a3176" translate="yes" xml:space="preserve">
          <source>This document and its child documents will be updated to reflect the latest status of our API changes.</source>
          <target state="translated">このドキュメントとその子ドキュメントは、当社のAPI変更の最新状況を反映するために更新されます。</target>
        </trans-unit>
        <trans-unit id="85a949ce4a405bc3ce050a428eb09e1fccb5184d" translate="yes" xml:space="preserve">
          <source>This document describes the process for releasing a new version of Electron.</source>
          <target state="translated">このドキュメントでは、Electronの新しいバージョンをリリースするためのプロセスについて説明します。</target>
        </trans-unit>
        <trans-unit id="2b08ebef74426ddb6ada26f318d5041f72ce60d2" translate="yes" xml:space="preserve">
          <source>This document outlines the process for manually loading an extension. You may also try &lt;a href=&quot;https://github.com/GPMDP/electron-devtools-installer&quot;&gt;electron-devtools-installer&lt;/a&gt;, a third-party tool that downloads extensions directly from the Chrome WebStore.</source>
          <target state="translated">このドキュメントでは、拡張機能を手動で読み込むプロセスの概要を説明します。Chromeウェブストアから直接拡張機能をダウンロードするサードパーティ製ツール&lt;a href=&quot;https://github.com/GPMDP/electron-devtools-installer&quot;&gt;electron-devtools-installerを&lt;/a&gt;試すこともできます。</target>
        </trans-unit>
        <trans-unit id="1eca9d2a46807bf5aa40feb415b04fabc79e0911" translate="yes" xml:space="preserve">
          <source>This document uses the following convention to categorize breaking changes:</source>
          <target state="translated">このドキュメントでは、以下の規約を使用して、破損した変更を分類しています。</target>
        </trans-unit>
        <trans-unit id="dd9bda8f3bea4fa30568a20bc89b0c284f32afe4" translate="yes" xml:space="preserve">
          <source>This doesn't affect existing &lt;code&gt;WebContents&lt;/code&gt;, and each &lt;code&gt;WebContents&lt;/code&gt; can use &lt;code&gt;webContents.setUserAgent&lt;/code&gt; to override the session-wide user agent.</source>
          <target state="translated">これは既存の &lt;code&gt;WebContents&lt;/code&gt; には影響せず、各 &lt;code&gt;WebContents&lt;/code&gt; は &lt;code&gt;webContents.setUserAgent&lt;/code&gt; を使用してセッション全体のユーザーエージェントをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="305bb661633e2bd54b8cde837bb1530865ff1b43" translate="yes" xml:space="preserve">
          <source>This doesn't mean Electron is a JavaScript binding to graphical user interface (GUI) libraries. Instead, Electron uses web pages as its GUI, so you could also see it as a minimal Chromium browser, controlled by JavaScript.</source>
          <target state="translated">これは、ElectronがJavaScriptのグラフィカルユーザーインターフェース(GUI)ライブラリへのバインディングを意味するものではありません。その代わり、ElectronはGUIとしてWebページを使用しているので、JavaScriptで制御される最小のChromiumブラウザとして見ることもできます。</target>
        </trans-unit>
        <trans-unit id="27dcdff876f06b48e0909172d36571d4132749c8" translate="yes" xml:space="preserve">
          <source>This ensures that your working branch has the latest changes from &lt;code&gt;electron/electron&lt;/code&gt; master.</source>
          <target state="translated">これにより、作業ブランチに &lt;code&gt;electron/electron&lt;/code&gt; マスターからの最新の変更が確実に適用されます。</target>
        </trans-unit>
        <trans-unit id="735aff75680f019b5b2eef8d283ba1c664d12844" translate="yes" xml:space="preserve">
          <source>This environment variable will not work if the &lt;code&gt;crashReporter&lt;/code&gt; is started.</source>
          <target state="translated">&lt;code&gt;crashReporter&lt;/code&gt; が起動している場合、この環境変数は機能しません。</target>
        </trans-unit>
        <trans-unit id="c53962e4beb1ce1eb5a88e924f00d58d0735bdc2" translate="yes" xml:space="preserve">
          <source>This event can be used to configure &lt;code&gt;webPreferences&lt;/code&gt; for the &lt;code&gt;webContents&lt;/code&gt; of a &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; before it's loaded, and provides the ability to set settings that can't be set via &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; attributes.</source>
          <target state="translated">このイベントには、configureに使用することができます &lt;code&gt;webPreferences&lt;/code&gt; ため &lt;code&gt;webContents&lt;/code&gt; の &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; それがロードされる前に、を介して設定することはできませんセット設定する機能を提供 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; の属性を。</target>
        </trans-unit>
        <trans-unit id="41906b2e4c0450c0c3063aeee9df7cc4ec746748" translate="yes" xml:space="preserve">
          <source>This event cannot be prevented, if you want to prevent redirects you should checkout out the &lt;code&gt;will-redirect&lt;/code&gt; event above.</source>
          <target state="translated">このイベントを防ぐことはできません。リダイレクトを防ぎたい場合は、上記の &lt;code&gt;will-redirect&lt;/code&gt; イベントをチェックアウトする必要があります。</target>
        </trans-unit>
        <trans-unit id="6bc76560bddb9d70b3ca30a5a355ba8b21fda8f7" translate="yes" xml:space="preserve">
          <source>This event is emitted after a user calls &lt;code&gt;quitAndInstall()&lt;/code&gt;.</source>
          <target state="translated">このイベントは、ユーザーが &lt;code&gt;quitAndInstall()&lt;/code&gt; を呼び出した後に発行されます。</target>
        </trans-unit>
        <trans-unit id="70c04a1a73e4503c5b82edc3f66cd4701b39a5de" translate="yes" xml:space="preserve">
          <source>This event is guaranteed to be emitted after the &lt;code&gt;ready&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt; gets emitted.</source>
          <target state="translated">このイベントは、 &lt;code&gt;app&lt;/code&gt; の &lt;code&gt;ready&lt;/code&gt; イベントが発行された後に発行されることが保証されています。</target>
        </trans-unit>
        <trans-unit id="0dcc17c4aef24a3104fdff9f4011974b0c8831ae" translate="yes" xml:space="preserve">
          <source>This event is like &lt;code&gt;did-fail-load&lt;/code&gt; but emitted when the load was cancelled (e.g. &lt;code&gt;window.stop()&lt;/code&gt; was invoked).</source>
          <target state="translated">このイベントは &lt;code&gt;did-fail-load&lt;/code&gt; に似ていますが、ロードがキャンセルされたときに &lt;code&gt;window.stop()&lt;/code&gt; されます（たとえば、window.stop（）が呼び出された）。</target>
        </trans-unit>
        <trans-unit id="534c78030b6fb5c4bb033d9366092911a59d6437" translate="yes" xml:space="preserve">
          <source>This event is like &lt;code&gt;did-finish-load&lt;/code&gt; but emitted when the load failed or was cancelled, e.g. &lt;code&gt;window.stop()&lt;/code&gt; is invoked. The full list of error codes and their meaning is available &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">このイベントは、 &lt;code&gt;did-finish-load&lt;/code&gt; に似ていますが、ロードが失敗またはキャンセルされたときに発生します。たとえば、 &lt;code&gt;window.stop()&lt;/code&gt; が呼び出されます。エラーコードとその意味の完全なリストは、&lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;こちらから&lt;/a&gt;入手できます。</target>
        </trans-unit>
        <trans-unit id="c72781b8974049a02755f7581656d7b25400e2c7" translate="yes" xml:space="preserve">
          <source>This event is like &lt;code&gt;did-finish-load&lt;/code&gt; but emitted when the load failed. The full list of error codes and their meaning is available &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">このイベントは &lt;code&gt;did-finish-load&lt;/code&gt; に似ていますが、ロードが失敗したときに発行されます。エラーコードとその意味の完全なリストは、&lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;こちらから&lt;/a&gt;入手できます。</target>
        </trans-unit>
        <trans-unit id="ebc14d8e2cd1b5d75f2d9ca245ca5574d93e3694" translate="yes" xml:space="preserve">
          <source>This event is like &lt;code&gt;did-finish-load&lt;/code&gt;, but fired when the load failed or was cancelled, e.g. &lt;code&gt;window.stop()&lt;/code&gt; is invoked.</source>
          <target state="translated">このイベントは &lt;code&gt;did-finish-load&lt;/code&gt; に似ていますが、ロードが失敗したかキャンセルされたときに発生します。たとえば、 &lt;code&gt;window.stop()&lt;/code&gt; が呼び出されました。</target>
        </trans-unit>
        <trans-unit id="16cd81301f3901898ca383be2a9937686fea4f1b" translate="yes" xml:space="preserve">
          <source>This event is not emitted for in-page navigations, such as clicking anchor links or updating the &lt;code&gt;window.location.hash&lt;/code&gt;. Use &lt;code&gt;did-navigate-in-page&lt;/code&gt; event for this purpose.</source>
          <target state="translated">このイベントは、アンカーリンクのクリックや &lt;code&gt;window.location.hash&lt;/code&gt; の更新など、ページ内ナビゲーションでは発生しません。このために &lt;code&gt;did-navigate-in-page&lt;/code&gt; イベントを使用します。</target>
        </trans-unit>
        <trans-unit id="43532412863a913d8fd70d6050dfc6b00fea2882" translate="yes" xml:space="preserve">
          <source>This event is not guaranteed to be emitted in all cases where the notification is closed.</source>
          <target state="translated">このイベントは、通知が閉じられているすべてのケースで発生することを保証するものではありません。</target>
        </trans-unit>
        <trans-unit id="daef2593fd9388d64158392d015f2a866d5cba6f" translate="yes" xml:space="preserve">
          <source>This event is usually emitted after the &lt;code&gt;did-finish-load&lt;/code&gt; event, but for pages with many remote resources, it may be emitted before the &lt;code&gt;did-finish-load&lt;/code&gt; event.</source>
          <target state="translated">このイベントは通常、 &lt;code&gt;did-finish-load&lt;/code&gt; イベントの後に発行されますが、リモートリソースが多いページでは、 &lt;code&gt;did-finish-load&lt;/code&gt; イベントの前に発行される場合があります。</target>
        </trans-unit>
        <trans-unit id="38ab97caaab13790598e628158d115924d8e2ab7" translate="yes" xml:space="preserve">
          <source>This event will be emitted after &lt;code&gt;did-start-navigation&lt;/code&gt; and always before the &lt;code&gt;did-redirect-navigation&lt;/code&gt; event for the same navigation.</source>
          <target state="translated">このイベントは、 &lt;code&gt;did-start-navigation&lt;/code&gt; の後、常に同じナビゲーションの &lt;code&gt;did-redirect-navigation&lt;/code&gt; イベントの前に発行されます。</target>
        </trans-unit>
        <trans-unit id="cf65ac6c2ed2c392b3301215269f6f680440c2f0" translate="yes" xml:space="preserve">
          <source>This event will be emitted inside the primary instance of your application when a second instance has been executed and calls &lt;code&gt;app.requestSingleInstanceLock()&lt;/code&gt;.</source>
          <target state="translated">このイベントは、2番目のインスタンスが実行され、 &lt;code&gt;app.requestSingleInstanceLock()&lt;/code&gt; を呼び出すと、アプリケーションのプライマリインスタンス内で発行されます。</target>
        </trans-unit>
        <trans-unit id="adc211e73307119fcd816d42f8b4a9ab15005889" translate="yes" xml:space="preserve">
          <source>This event will not emit when the navigation is started programmatically with APIs like &lt;code&gt;&amp;lt;webview&amp;gt;.loadURL&lt;/code&gt; and &lt;code&gt;&amp;lt;webview&amp;gt;.back&lt;/code&gt;.</source>
          <target state="translated">このイベントは、ナビゲーションが &lt;code&gt;&amp;lt;webview&amp;gt;.loadURL&lt;/code&gt; や &lt;code&gt;&amp;lt;webview&amp;gt;.back&lt;/code&gt; などのAPIを使用してプログラムで開始された場合には発生しません。</target>
        </trans-unit>
        <trans-unit id="ba25365ba095998aa9f6d8616d04d7760dce95d3" translate="yes" xml:space="preserve">
          <source>This event will not emit when the navigation is started programmatically with APIs like &lt;code&gt;webContents.loadURL&lt;/code&gt; and &lt;code&gt;webContents.back&lt;/code&gt;.</source>
          <target state="translated">このイベントは、ナビゲーションが &lt;code&gt;webContents.loadURL&lt;/code&gt; や &lt;code&gt;webContents.back&lt;/code&gt; などのAPIを使用してプログラムで開始された場合は発生しません。</target>
        </trans-unit>
        <trans-unit id="525b90f00912dd424f3358c279badc2539a3f98d" translate="yes" xml:space="preserve">
          <source>This feature allows you to configure local and global keyboard shortcuts for your Electron application.</source>
          <target state="translated">この機能により、Electronアプリケーションのローカルおよびグローバルキーボードショートカットを設定することができます。</target>
        </trans-unit>
        <trans-unit id="2ce3421f7d7f0f139f1c0fc738d83adefc9eead4" translate="yes" xml:space="preserve">
          <source>This flag is global to all renderer processes, if you only want to disable throttling in one window, you can take the hack of &lt;a href=&quot;https://github.com/atom/atom/pull/9485/files&quot;&gt;playing silent audio&lt;/a&gt;.</source>
          <target state="translated">このフラグはすべてのレンダラープロセスに共通です。1つのウィンドウでスロットルのみを無効にする場合は、&lt;a href=&quot;https://github.com/atom/atom/pull/9485/files&quot;&gt;無音オーディオ&lt;/a&gt;を再生するハックを利用できます。</target>
        </trans-unit>
        <trans-unit id="59739245235d20d9bd2627de64d6feb1f1353c69" translate="yes" xml:space="preserve">
          <source>This guide explains how to integrate your application into those desktop environments with Electron APIs.</source>
          <target state="translated">このガイドでは、Electron APIを使用してアプリケーションをデスクトップ環境に統合する方法を説明します。</target>
        </trans-unit>
        <trans-unit id="ad84ff3b9616eb014f26b6ec18673000ba80c051" translate="yes" xml:space="preserve">
          <source>This guide goes over how to set up VSCode debugging for both your own Electron project as well as the native Electron codebase.</source>
          <target state="translated">このガイドでは、独自のElectronプロジェクトとネイティブのElectronコードベースの両方のVSCodeデバッグを設定する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="2ae7cd976045436112f7fa0b340e654a51d5286c" translate="yes" xml:space="preserve">
          <source>This guide provides information on how to package your Electron application for any Snapcraft environment, including the Ubuntu Software Center.</source>
          <target state="translated">このガイドでは、Ubuntu Software Centerを含むSnapcraft環境向けにElectronアプリケーションをパッケージ化する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="122f36d1230fa874c547ba466f15a7fac7906c60" translate="yes" xml:space="preserve">
          <source>This happens when the variable which is used to store the tray gets garbage collected.</source>
          <target state="translated">これは、トレイを格納するために使用されている変数がガベージコレクションされたときに発生します。</target>
        </trans-unit>
        <trans-unit id="bd12afa1587b8243c8bdd506b686e1935e49b3f7" translate="yes" xml:space="preserve">
          <source>This happens when the variable which is used to store the window/tray gets garbage collected.</source>
          <target state="translated">これは、ウィンドウ/トレイを格納するために使用される変数がガベージコレクションされたときに発生します。</target>
        </trans-unit>
        <trans-unit id="090dad24206e677cf8b595f373c722e7ad11cf36" translate="yes" xml:space="preserve">
          <source>This includes:</source>
          <target state="translated">これが含まれています。</target>
        </trans-unit>
        <trans-unit id="53ddae2e4ad6d22bd6d864ba578a7a1b81d8dd78" translate="yes" xml:space="preserve">
          <source>This is an overview of the steps needed to upgrade Chromium in Electron.</source>
          <target state="translated">ElectronでChromiumをアップグレードするために必要な手順を紹介します。</target>
        </trans-unit>
        <trans-unit id="48fd1ce46ca3f75a8fcf1a2738bb79a6e11234ae" translate="yes" xml:space="preserve">
          <source>This is because &lt;code&gt;exec&lt;/code&gt; and &lt;code&gt;spawn&lt;/code&gt; accept &lt;code&gt;command&lt;/code&gt; instead of &lt;code&gt;file&lt;/code&gt; as input, and &lt;code&gt;command&lt;/code&gt;s are executed under shell. There is no reliable way to determine whether a command uses a file in asar archive, and even if we do, we can not be sure whether we can replace the path in command without side effects.</source>
          <target state="translated">これは、 &lt;code&gt;exec&lt;/code&gt; および &lt;code&gt;spawn&lt;/code&gt; が入力として &lt;code&gt;file&lt;/code&gt; の代わりに &lt;code&gt;command&lt;/code&gt; を受け入れ、 &lt;code&gt;command&lt;/code&gt; がシェルの下で実行されるためです。コマンドがasarアーカイブ内のファイルを使用するかどうかを判断する信頼できる方法はありません。使用しても、副作用なしにコマンドのパスを置き換えることができるかどうかはわかりません。</target>
        </trans-unit>
        <trans-unit id="c91f0b5809499b2aac2c817187db2006a90e9d9c" translate="yes" xml:space="preserve">
          <source>This is because you have the &lt;a href=&quot;https://www.npmjs.com/package/electron&quot;&gt;npm &lt;code&gt;electron&lt;/code&gt; module&lt;/a&gt; installed either locally or globally, which overrides Electron's built-in module.</source>
          <target state="translated">これは、ローカルまたはグローバルに&lt;a href=&quot;https://www.npmjs.com/package/electron&quot;&gt;npm &lt;code&gt;electron&lt;/code&gt; モジュールが&lt;/a&gt;インストールされているためです。これにより、Electronの組み込みモジュールがオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="5a3986c71d0e4c78e6cd21bb0ce8b7a2f2efbb87" translate="yes" xml:space="preserve">
          <source>This is caused by a bug when using Cygwin Python and Win32 Node together. The solution is to use the Win32 Python to execute the bootstrap script (assuming you have installed Python under &lt;code&gt;C:\Python27&lt;/code&gt;):</source>
          <target state="translated">これは、Cygwin PythonとWin32ノードを一緒に使用する際のバグが原因です。解決策は、Win32 Pythonを使用してブートストラップスクリプトを実行することです（Pythonを &lt;code&gt;C:\Python27&lt;/code&gt; 下にインストールしたと想定）。</target>
        </trans-unit>
        <trans-unit id="8b27aed9ee162e49847966b3b51b71c4860ae778" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following code:</source>
          <target state="translated">これは以下のコードと同等です。</target>
        </trans-unit>
        <trans-unit id="3fe1df8532e63229df92d06cf43d9987ae371204" translate="yes" xml:space="preserve">
          <source>This is needed because the first patch has Node commit checksums that we don't want</source>
          <target state="translated">これは、最初のパッチではNodeのコミットチェックサムが必要ないために必要です。</target>
        </trans-unit>
        <trans-unit id="e8aca70cc5480516ee291e9bca8a4cd91b7eaa92" translate="yes" xml:space="preserve">
          <source>This is needed because upstream Node keeps its V8 files in a subdirectory</source>
          <target state="translated">これは、アップストリームノードが V8 ファイルをサブディレクトリに保持しているために必要です。</target>
        </trans-unit>
        <trans-unit id="91aef02790b0da10b0da3faa252a645dace7a8f0" translate="yes" xml:space="preserve">
          <source>This is not bulletproof, but at the least, you should follow these steps to improve the security of your application.</source>
          <target state="translated">これは防弾ではありませんが、最低限、これらの手順を踏んでアプリケーションのセキュリティを向上させる必要があります。</target>
        </trans-unit>
        <trans-unit id="54c3472d0175293fd7823639dea364b2691ddfa5" translate="yes" xml:space="preserve">
          <source>This is the URL specified as &lt;code&gt;disturl&lt;/code&gt; in a &lt;code&gt;.npmrc&lt;/code&gt; file or as the &lt;code&gt;--dist-url&lt;/code&gt; command line flag when building native Node modules.</source>
          <target state="translated">これは、URLとして指定され &lt;code&gt;disturl&lt;/code&gt; に &lt;code&gt;.npmrc&lt;/code&gt; ファイルまたはとして &lt;code&gt;--dist-url&lt;/code&gt; ネイティブノードモジュールを構築するときに、コマンドラインフラグ。</target>
        </trans-unit>
        <trans-unit id="f3ada38d3db56942812acd5c4a0d6d6e37ebe834" translate="yes" xml:space="preserve">
          <source>This is the URL specified as &lt;code&gt;disturl&lt;/code&gt; in a &lt;code&gt;.npmrc&lt;/code&gt; file or as the &lt;code&gt;--dist-url&lt;/code&gt; command line flag when building native Node modules. Both will be supported for the foreseeable future but it is recommended that you switch.</source>
          <target state="translated">これは、URLとして指定され &lt;code&gt;disturl&lt;/code&gt; に &lt;code&gt;.npmrc&lt;/code&gt; ファイルまたはとして &lt;code&gt;--dist-url&lt;/code&gt; ネイティブノードモジュールを構築するときに、コマンドラインフラグ。どちらも当面はサポートされますが、切り替えることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="60511cadfa0774991a3378ebc6d71c9622419d57" translate="yes" xml:space="preserve">
          <source>This is the user agent that will be used when no user agent is set at the &lt;code&gt;webContents&lt;/code&gt; or &lt;code&gt;session&lt;/code&gt; level. It is useful for ensuring that your entire app has the same user agent. Set to a custom value as early as possible in your app's initialization to ensure that your overridden value is used.</source>
          <target state="translated">これは、 &lt;code&gt;webContents&lt;/code&gt; または &lt;code&gt;session&lt;/code&gt; レベルでユーザーエージェントが設定されていない場合に使用されるユーザーエージェントです。アプリ全体に同じユーザーエージェントがあることを確認するのに役立ちます。オーバーライドされた値が確実に使用されるように、アプリの初期化のできるだけ早い段階でカスタム値に設定します。</target>
        </trans-unit>
        <trans-unit id="6eb6b6464df6140e25cae9feeee33f0637c70d2f" translate="yes" xml:space="preserve">
          <source>This is the web page you want to display once the application is initialized. This web page represents the Renderer process. You can create multiple browser windows, where each window uses its own independent Renderer. Each window can optionally be granted with full access to Node.js API through the &lt;code&gt;nodeIntegration&lt;/code&gt; preference.</source>
          <target state="translated">これは、アプリケーションが初期化されたときに表示するWebページです。このWebページは、レンダラープロセスを表しています。複数のブラウザウィンドウを作成できます。各ウィンドウは、独自の独立したレンダラーを使用します。オプションで、各ウィンドウに &lt;code&gt;nodeIntegration&lt;/code&gt; プリファレンスを介してNode.jsAPIへのフルアクセスを許可できます。</target>
        </trans-unit>
        <trans-unit id="9d503ac5c21d388b20a1d855b2f3fc6328cf37a6" translate="yes" xml:space="preserve">
          <source>This is usually emitted when the window has been resized manually. On macOS, resizing the window with &lt;code&gt;setBounds&lt;/code&gt;/&lt;code&gt;setSize&lt;/code&gt; and setting the &lt;code&gt;animate&lt;/code&gt; parameter to &lt;code&gt;true&lt;/code&gt; will also emit this event once resizing has finished.</source>
          <target state="translated">これは通常、ウィンドウのサイズが手動で変更されたときに発生します。macOSでは、 &lt;code&gt;setBounds&lt;/code&gt; / &lt;code&gt;setSize&lt;/code&gt; を使用してウィンドウのサイズを変更し、 &lt;code&gt;animate&lt;/code&gt; パラメーターを &lt;code&gt;true&lt;/code&gt; に設定すると、サイズ変更が完了するとこのイベントも発行されます。</target>
        </trans-unit>
        <trans-unit id="6ce540b607105f2ab510762e21fa5b7df27b2a8c" translate="yes" xml:space="preserve">
          <source>This list is managed by the OS. On Windows you can visit the list from the task bar, and on macOS you can visit it from dock menu.</source>
          <target state="translated">このリストはOSによって管理されています。Windowsではタスクバーから、macOSではドックメニューから見ることができます。</target>
        </trans-unit>
        <trans-unit id="5ac828a9f6321051dc2115a8ae134347cd9028e8" translate="yes" xml:space="preserve">
          <source>This list is managed by the OS. On Windows, you can visit the list from the task bar, and on macOS, you can visit it from dock menu.</source>
          <target state="translated">このリストはOSによって管理されています。Windowsではタスクバーから、macOSではドックメニューからリストを見ることができます。</target>
        </trans-unit>
        <trans-unit id="f69ea8009dd547e24998978ad42da52663e01793" translate="yes" xml:space="preserve">
          <source>This list is provided for your convenience &amp;ndash; and is, much like our &lt;a href=&quot;security&quot;&gt;security checklist&lt;/a&gt; &amp;ndash; not meant to exhaustive. It is probably possible to build a slow Electron app that follows all the steps outlined below. Electron is a powerful development platform that enables you, the developer, to do more or less whatever you want. All that freedom means that performance is largely your responsibility.</source>
          <target state="translated">このリストは、お客様の便宜のために提供されており、&lt;a href=&quot;security&quot;&gt;セキュリティチェックリストと&lt;/a&gt;同様に、網羅的なものではありません。以下に概説するすべての手順に従う低速のElectronアプリを構築することはおそらく可能です。Electronは強力な開発プラットフォームであり、開発者は多かれ少なかれやりたいことができます。そのすべての自由は、パフォーマンスが主にあなたの責任であることを意味します。</target>
        </trans-unit>
        <trans-unit id="c2760976c801ec4c4b14597333f99619dfdb17cb" translate="yes" xml:space="preserve">
          <source>This list is provided for your convenience &amp;ndash; and is, much like our &lt;a href=&quot;tutorial/security&quot;&gt;security checklist&lt;/a&gt; &amp;ndash; not meant to exhaustive. It is probably possible to build a slow Electron app that follows all the steps outlined below. Electron is a powerful development platform that enables you, the developer, to do more or less whatever you want. All that freedom means that performance is largely your responsibility.</source>
          <target state="translated">このリストは、お客様の便宜のために提供されており、&lt;a href=&quot;tutorial/security&quot;&gt;セキュリティチェックリストと&lt;/a&gt;同様に、網羅的なものではありません。以下に概説するすべての手順に従う低速のElectronアプリを構築することはおそらく可能です。Electronは強力な開発プラットフォームであり、開発者は多かれ少なかれやりたいことができます。そのすべての自由は、パフォーマンスが主にあなたの責任であることを意味します。</target>
        </trans-unit>
        <trans-unit id="21b8fbf53205cd07ff1caf5968650d4e51e33e22" translate="yes" xml:space="preserve">
          <source>This makes the web page click-through when over &lt;code&gt;el&lt;/code&gt;, and returns to normal outside it.</source>
          <target state="translated">これにより、 &lt;code&gt;el&lt;/code&gt; を超えるとWebページがクリックスルーし、外部では通常の状態に戻ります。</target>
        </trans-unit>
        <trans-unit id="b38119f44b494dd0bb6f6f9163b806e1c7ab1524" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;[-1, 0, 1]&lt;/code&gt; will make the image completely white and &lt;code&gt;[-1, 1, 0]&lt;/code&gt; will make the image completely black.</source>
          <target state="translated">つまり、 &lt;code&gt;[-1, 0, 1]&lt;/code&gt; は画像を完全に白にし、 &lt;code&gt;[-1, 1, 0]&lt;/code&gt; は画像を完全に黒にします。</target>
        </trans-unit>
        <trans-unit id="4bf6f2234c7f48df1b61dea3dc70f88d5b88cd5a" translate="yes" xml:space="preserve">
          <source>This means that the &lt;code&gt;window&lt;/code&gt; object that your preload script has access to is actually a &lt;strong&gt;different&lt;/strong&gt; object than the website would have access to. For example, if you set &lt;code&gt;window.hello = 'wave'&lt;/code&gt; in your preload script and context isolation is enabled &lt;code&gt;window.hello&lt;/code&gt; will be undefined if the website tries to access it.</source>
          <target state="translated">これは、プリロードスクリプトがアクセスできる &lt;code&gt;window&lt;/code&gt; オブジェクトが、実際にはWebサイトがアクセスできるオブジェクトとは&lt;strong&gt;異なる&lt;/strong&gt;ことを意味します。たとえば、プリロードスクリプトで &lt;code&gt;window.hello = 'wave'&lt;/code&gt; を設定し、コンテキスト分離が有効になっている場合、Webサイトがアクセスしようとすると &lt;code&gt;window.hello&lt;/code&gt; は未定義になります。</target>
        </trans-unit>
        <trans-unit id="67a355799483968abe863664dade8bc4d946b24a" translate="yes" xml:space="preserve">
          <source>This method can only be called before app is ready.</source>
          <target state="translated">このメソッドは、アプリの準備が整う前にのみ呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="f90ad39418944444e5ae54b4ab541a29f5479860" translate="yes" xml:space="preserve">
          <source>This method checks if the current executable as the default handler for a protocol (aka URI scheme). If so, it will remove the app as the default handler.</source>
          <target state="translated">このメソッドは、現在の実行ファイルがプロトコル(別名URIスキーム)のデフォルトハンドラとして使用されているかどうかをチェックします。もしそうであれば、デフォルトハンドラとしてのアプリを削除します。</target>
        </trans-unit>
        <trans-unit id="3c819fac6bfe7e98002d421c14d1dc5a3975abd6" translate="yes" xml:space="preserve">
          <source>This method checks if the current executable is the default handler for a protocol (aka URI scheme). If so, it will return true. Otherwise, it will return false.</source>
          <target state="translated">このメソッドは、現在の実行ファイルがプロトコル(別名URIスキーム)のデフォルトハンドラであるかどうかをチェックします。そうであれば、trueを返します。そうでなければ、falseを返します。</target>
        </trans-unit>
        <trans-unit id="77a9284738b6a5154a2e369ad66253b0849a1915" translate="yes" xml:space="preserve">
          <source>This method guarantees that all &lt;code&gt;beforeunload&lt;/code&gt; and &lt;code&gt;unload&lt;/code&gt; event handlers are correctly executed. It is possible that a window cancels the quitting by returning &lt;code&gt;false&lt;/code&gt; in the &lt;code&gt;beforeunload&lt;/code&gt; event handler.</source>
          <target state="translated">このメソッドは、すべての &lt;code&gt;beforeunload&lt;/code&gt; および &lt;code&gt;unload&lt;/code&gt; イベントハンドラーが正しく実行されることを保証します。 &lt;code&gt;beforeunload&lt;/code&gt; イベントハンドラーで &lt;code&gt;false&lt;/code&gt; を返すことにより、ウィンドウが終了をキャンセルする可能性があります。</target>
        </trans-unit>
        <trans-unit id="ecd46eba6601163296f629d7617bddef184d9505" translate="yes" xml:space="preserve">
          <source>This method makes your application a Single Instance Application - instead of allowing multiple instances of your app to run, this will ensure that only a single instance of your app is running, and other instances signal this instance and exit.</source>
          <target state="translated">このメソッドは、アプリケーションをシングル インスタンス アプリケーションにします-アプリの複数のインスタンスの実行を許可する代わりに、アプリの単一のインスタンスのみが実行され、他のインスタンスがこのインスタンスにシグナルを送って終了することを保証します。</target>
        </trans-unit>
        <trans-unit id="28d1fe6936a7648fea4c7be0eb7a172011a79b28" translate="yes" xml:space="preserve">
          <source>This method must be called before using any other &lt;code&gt;crashReporter&lt;/code&gt; APIs. Once initialized this way, the crashpad handler collects crashes from all subsequently created processes. The crash reporter cannot be disabled once started.</source>
          <target state="translated">このメソッドは、他の &lt;code&gt;crashReporter&lt;/code&gt; APIを使用する前に呼び出す必要があります。この方法で初期化されると、クラッシュパッドハンドラーは、その後に作成されるすべてのプロセスからクラッシュを収集します。一度起動すると、クラッシュレポーターを無効にすることはできません。</target>
        </trans-unit>
        <trans-unit id="128082992770bd52e00e31ab2c7ee17b1d861f36" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;false&lt;/code&gt; if your process is the primary instance of the application and your app should continue loading. And returns &lt;code&gt;true&lt;/code&gt; if your process has sent its parameters to another instance, and you should immediately quit.</source>
          <target state="translated">このメソッドは、プロセスがアプリケーションのプライマリインスタンスであり、アプリの読み込みを続行する必要がある場合は &lt;code&gt;false&lt;/code&gt; を返します。また、プロセスがパラメーターを別のインスタンスに送信した場合は &lt;code&gt;true&lt;/code&gt; を返し、すぐに終了する必要があります。</target>
        </trans-unit>
        <trans-unit id="739e544be60345b642bd939f658c0911c645a403" translate="yes" xml:space="preserve">
          <source>This method returns a promise that contains the application name, icon and path of the default handler for the protocol (aka URI scheme) of a URL.</source>
          <target state="translated">このメソッドは、アプリケーション名、アイコン、URLのプロトコル(別名URIスキーム)のデフォルトハンドラのパスを含むプロミスを返します。</target>
        </trans-unit>
        <trans-unit id="02e5aa4e173f76b7b923d304c52337cd65ccb52d" translate="yes" xml:space="preserve">
          <source>This method returns the application name of the default handler for the protocol (aka URI scheme) of a URL.</source>
          <target state="translated">このメソッドは、URLのプロトコル(別名URIスキーム)のデフォルトハンドラのアプリケーション名を返します。</target>
        </trans-unit>
        <trans-unit id="38bce716c3b70043c7809602e7a0b3a6910b15fb" translate="yes" xml:space="preserve">
          <source>This method returns whether or not this instance of your app is currently holding the single instance lock. You can request the lock with &lt;code&gt;app.requestSingleInstanceLock()&lt;/code&gt; and release with &lt;code&gt;app.releaseSingleInstanceLock()&lt;/code&gt;</source>
          <target state="translated">このメソッドは、アプリのこのインスタンスが現在シングルインスタンスロックを保持しているかどうかを返します。あなたがロックを要求することができます &lt;code&gt;app.requestSingleInstanceLock()&lt;/code&gt; とでリリース &lt;code&gt;app.releaseSingleInstanceLock()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="576d1f0fde5bf163523a7bf4784d972829571325" translate="yes" xml:space="preserve">
          <source>This method sets the current executable as the default handler for a protocol (aka URI scheme). It allows you to integrate your app deeper into the operating system. Once registered, all links with &lt;code&gt;your-protocol://&lt;/code&gt; will be opened with the current executable. The whole link, including protocol, will be passed to your application as a parameter.</source>
          <target state="translated">このメソッドは、現在の実行可能ファイルをプロトコル（別名URIスキーム）のデフォルトハンドラーとして設定します。アプリをオペレーティングシステムに深く統合できます。登録すると、 &lt;code&gt;your-protocol://&lt;/code&gt; を含むすべてのリンクが現在の実行可能ファイルで開かれます。プロトコルを含むリンク全体がパラメーターとしてアプリケーションに渡されます。</target>
        </trans-unit>
        <trans-unit id="4b250ac5d376a8e5bd8322b3a7917c044ec3dc32" translate="yes" xml:space="preserve">
          <source>This method should be called as early as possible in app startup, preferably before &lt;code&gt;app.on('ready')&lt;/code&gt;. If the crash reporter is not initialized at the time a renderer process is created, then that renderer process will not be monitored by the crash reporter.</source>
          <target state="translated">このメソッドは、アプリの起動のできるだけ早い段階で、できれば &lt;code&gt;app.on('ready')&lt;/code&gt; の前に呼び出す必要があります。レンダラープロセスの作成時にクラッシュレポーターが初期化されていない場合、そのレンダラープロセスはクラッシュレポーターによって監視されません。</target>
        </trans-unit>
        <trans-unit id="5cb007eed7b323075dee5fe0dabfee8ade3ddaa3" translate="yes" xml:space="preserve">
          <source>This method uses synchronous IPC when called from the renderer process. The cached value is reread from the find pasteboard whenever the application is activated.</source>
          <target state="translated">このメソッドは、レンダラープロセスから呼び出されたときに同期IPCを使用します。キャッシュされた値は、アプリケーションがアクティブになるたびに find pasteboard から再読込されます。</target>
        </trans-unit>
        <trans-unit id="f9deb1c010bb57a2f83079f4adf693cecd6efe36" translate="yes" xml:space="preserve">
          <source>This method will raise an exception if the extension could not be loaded. If there are warnings when installing the extension (e.g. if the extension requests an API that Electron does not support) then they will be logged to the console.</source>
          <target state="translated">このメソッドは、拡張機能をロードできなかった場合に例外を発生させます。拡張機能のインストール時に警告が発生した場合 (拡張機能が Electron がサポートしていない API を要求した場合など)、その警告はコンソールに記録されます。</target>
        </trans-unit>
        <trans-unit id="8fb639efa945821052125f6c3839ec8d2cc9bd26" translate="yes" xml:space="preserve">
          <source>This might seem obvious, but many applications tend to do a large amount of work immediately after the app has launched - like checking for updates, downloading content used in a later flow, or performing heavy disk I/O operations.</source>
          <target state="translated">当たり前のことのように思えるかもしれませんが、多くのアプリケーションでは、アップデートのチェック、後のフローで使用するコンテンツのダウンロード、重いディスク I/O 操作の実行など、アプリの起動直後に大量の作業を行う傾向があります。</target>
        </trans-unit>
        <trans-unit id="e1635376cd173bd570494637f07d70e9a8bc4e7d" translate="yes" xml:space="preserve">
          <source>This mode uses a software output device for rendering in the CPU, so the frame generation is much faster, thus this mode is preferred over the GPU accelerated one.</source>
          <target state="translated">このモードは、CPUでレンダリングするためのソフトウェア出力デバイスを使用するため、フレーム生成がはるかに高速であるため、このモードはGPUアクセラレーションされたものよりも優先されます。</target>
        </trans-unit>
        <trans-unit id="de978956fa33fc15f57e87473cea48fddee89eb0" translate="yes" xml:space="preserve">
          <source>This module cannot be used until the &lt;code&gt;ready&lt;/code&gt; event of the &lt;code&gt;app&lt;/code&gt; module is emitted.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;app&lt;/code&gt; モジュールの &lt;code&gt;ready&lt;/code&gt; イベントが発行されるまで使用できません。</target>
        </trans-unit>
        <trans-unit id="94190404689a379b97619e82a180839a7032b318" translate="yes" xml:space="preserve">
          <source>This module does not include a web interface so you need to open &lt;code&gt;chrome://tracing/&lt;/code&gt; in a Chrome browser and load the generated file to view the result.</source>
          <target state="translated">このモジュールにはWebインターフェイスが含まれていないため、結果を表示するには、Chromeブラウザーで &lt;code&gt;chrome://tracing/&lt;/code&gt; を開き、生成されたファイルを読み込む必要があります。</target>
        </trans-unit>
        <trans-unit id="ef1a68aa3ef7b8318d46de5f281c4c83362c01ca" translate="yes" xml:space="preserve">
          <source>This module does not include a web interface. To view recorded traces, use &lt;a href=&quot;https://chromium.googlesource.com/catapult/+/HEAD/tracing/README.md&quot;&gt;trace viewer&lt;/a&gt;, available at &lt;code&gt;chrome://tracing&lt;/code&gt; in Chrome.</source>
          <target state="translated">このモジュールには、Webインターフェイスは含まれていません。記録されたトレースを表示 &lt;code&gt;chrome://tracing&lt;/code&gt; は、Chromeのchrome：// tracingで入手できる&lt;a href=&quot;https://chromium.googlesource.com/catapult/+/HEAD/tracing/README.md&quot;&gt;トレースビューア&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="8f151969ca83729d41c12755b271e4baa545fb6b" translate="yes" xml:space="preserve">
          <source>This only affects developers, if you are building Electron for rebranding you are not affected.</source>
          <target state="translated">これは開発者のみが影響を受けますが、リブランディングのためにElectronを構築している場合は影響を受けません。</target>
        </trans-unit>
        <trans-unit id="56607a829de2a1f19d7e738a52d963a4fbb9ddcd" translate="yes" xml:space="preserve">
          <source>This only creates a REPL for the main process. You can use the Console tab of the Dev Tools to get a REPL for the renderer processes.</source>
          <target state="translated">これは、メインプロセス用の REPL を作成するだけです。レンダラプロセスの REPL を取得するには、Dev Tools の Console タブを使用します。</target>
        </trans-unit>
        <trans-unit id="375038a02af1d24b74b5f70b87659606996caf92" translate="yes" xml:space="preserve">
          <source>This option can also be set on &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tags as well:</source>
          <target state="translated">このオプションは、 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; タグにも設定できます。</target>
        </trans-unit>
        <trans-unit id="79c050b71c61bcff34ea9522fff3873a756c2ae0" translate="yes" xml:space="preserve">
          <source>This page defines some terminology that is commonly used in Electron development.</source>
          <target state="translated">このページでは、エレクトロン開発でよく使われる用語を定義しています。</target>
        </trans-unit>
        <trans-unit id="746af70f2203e84c056f0f571559f6bf6c2b478b" translate="yes" xml:space="preserve">
          <source>This property can be dynamically changed.</source>
          <target state="translated">このプロパティは動的に変更することができます。</target>
        </trans-unit>
        <trans-unit id="b0eaaf72584266e99bdbd6814c744ec69df4ffd2" translate="yes" xml:space="preserve">
          <source>This property is only available on macOS 10.14 Mojave or newer.</source>
          <target state="translated">この物件はmacOS 10.14 Mojave以降でのみご利用いただけます。</target>
        </trans-unit>
        <trans-unit id="cfc94307017ba96a6ad072a7991ba9375dbce7f1" translate="yes" xml:space="preserve">
          <source>This property was removed in Chromium 77, and as such is no longer available.</source>
          <target state="translated">この物件はクロム77で撤去されたため、現在は使用できなくなっています。</target>
        </trans-unit>
        <trans-unit id="22c5e6a1bdbeb5e09af34f1a0b46ccebd975fbc6" translate="yes" xml:space="preserve">
          <source>This repository comes with linting rules for both JavaScript and C++ &amp;ndash; as well as unit and integration tests. To learn more about Electron's coding style, please see the &lt;a href=&quot;coding-style&quot;&gt;coding-style&lt;/a&gt; document.</source>
          <target state="translated">このリポジトリには、JavaScriptとC ++の両方のリンティングルール、および単体テストと統合テストが付属しています。Electronのコーディングスタイルの詳細については、&lt;a href=&quot;coding-style&quot;&gt;コーディングスタイルの&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="df5c8c828f7c129755675f748c950d877bf5054f" translate="yes" xml:space="preserve">
          <source>This repository comes with linting rules for both JavaScript and C++ &amp;ndash; as well as unit and integration tests. To learn more about Electron's coding style, please see the &lt;a href=&quot;development/coding-style&quot;&gt;coding-style&lt;/a&gt; document.</source>
          <target state="translated">このリポジトリには、JavaScriptとC ++の両方のリンティングルール、およびユニットテストと統合テストが付属しています。Electronのコーディングスタイルの詳細については、&lt;a href=&quot;development/coding-style&quot;&gt;コーディングスタイルの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="ab2ffd8b47da3913e31fa804ea93f7b5a7a4a6f5" translate="yes" xml:space="preserve">
          <source>This script will cause a very large Electron executable to be placed in the directory &lt;code&gt;out/R&lt;/code&gt;. The file size is in excess of 1.3 gigabytes. This happens because the Release target binary contains debugging symbols. To reduce the file size, run the &lt;code&gt;create-dist.py&lt;/code&gt; script:</source>
          <target state="translated">このスクリプトにより、非常に大きなElectron実行可能ファイルがディレクトリ &lt;code&gt;out/R&lt;/code&gt; に配置されます。ファイルサイズが1.3ギガバイトを超えています。これは、リリースターゲットバイナリにデバッグシンボルが含まれているために発生します。ファイルサイズを小さくするには、 &lt;code&gt;create-dist.py&lt;/code&gt; スクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="bd9fba91487aa44db4a6c689033bee8ef72f3272" translate="yes" xml:space="preserve">
          <source>This section guides you through the basics of how Electron works under the hood. It aims at strengthening knowledge about Electron and the application created earlier in the Quickstart section.</source>
          <target state="translated">このセクションでは、Electronがどのように機能するかの基本を説明します。このセクションでは、Electronとクイックスタートセクションで作成したアプリケーションについての知識を強化することを目的としています。</target>
        </trans-unit>
        <trans-unit id="71693d265198cdad88d7bca56b4f1a7f4d1fb418" translate="yes" xml:space="preserve">
          <source>This switch can not be used in &lt;code&gt;app.commandLine.appendSwitch&lt;/code&gt; since it is parsed earlier than user's app is loaded, but you can set the &lt;code&gt;ELECTRON_ENABLE_LOGGING&lt;/code&gt; environment variable to achieve the same effect.</source>
          <target state="translated">このスイッチは、ユーザーのアプリが読み込まれる前に解析されるため、 &lt;code&gt;app.commandLine.appendSwitch&lt;/code&gt; では使用できませんが、 &lt;code&gt;ELECTRON_ENABLE_LOGGING&lt;/code&gt; 環境変数を設定して同じ効果を得ることができます。</target>
        </trans-unit>
        <trans-unit id="bbba81275e266bde8685801ca839dd4f9c6b0a34" translate="yes" xml:space="preserve">
          <source>This switch only works when &lt;code&gt;--enable-logging&lt;/code&gt; is also passed.</source>
          <target state="translated">このスイッチは、 &lt;code&gt;--enable-logging&lt;/code&gt; も渡された場合にのみ機能します。</target>
        </trans-unit>
        <trans-unit id="6846735df161128a67c0582a4de46319858cb9a8" translate="yes" xml:space="preserve">
          <source>This term originated in the Unix community, where &quot;userland&quot; or &quot;userspace&quot; referred to programs that run outside of the operating system kernel. More recently, the term has been popularized in the Node and npm community to distinguish between the features available in &quot;Node core&quot; versus packages published to the npm registry by the much larger &quot;user&quot; community.</source>
          <target state="translated">この用語は Unix コミュニティで使われていたもので、&quot;userland&quot; や &quot;userspace&quot; はオペレーティングシステムのカーネルの外で動作するプログラムを指していました。最近では、「Node core」で利用できる機能と、より大きな「ユーザ」コミュニティから npm レジストリに公開されているパッケージを区別するために、Node や npm コミュニティでこの用語が広まってきました。</target>
        </trans-unit>
        <trans-unit id="b99439216edb1f47887775ea8c02567931505db8" translate="yes" xml:space="preserve">
          <source>This toolbar is the familiar standard toolbar common control. It has a maximum of seven buttons. Each button's ID, image, tooltip, and state are defined in a structure, which is then passed to the taskbar. The application can show, enable, disable, or hide buttons from the thumbnail toolbar as required by its current state.</source>
          <target state="translated">おなじみの標準ツールバー共通コントロールです。最大7つのボタンを持っています。各ボタンのID、画像、ツールチップ、状態は構造体で定義され、タスクバーに渡されます。アプリケーションは、現在の状態によって必要とされるように、サムネイルツールバーからボタンを表示、有効、無効、または非表示にすることができます。</target>
        </trans-unit>
        <trans-unit id="4769d7198e20dcd89a06f4700b75dcfc03c6133b" translate="yes" xml:space="preserve">
          <source>This user consent was not required on macOS 10.13 High Sierra or lower so this method will always return &lt;code&gt;granted&lt;/code&gt;. macOS 10.14 Mojave or higher requires consent for &lt;code&gt;microphone&lt;/code&gt; and &lt;code&gt;camera&lt;/code&gt; access. macOS 10.15 Catalina or higher requires consent for &lt;code&gt;screen&lt;/code&gt; access.</source>
          <target state="translated">このユーザーの同意は、macOS 10.13 High Sierra以下では必要なかったため、このメソッドは常に &lt;code&gt;granted&lt;/code&gt; た状態で返されます。macOS 10.14 Mojave以降では、 &lt;code&gt;microphone&lt;/code&gt; と &lt;code&gt;camera&lt;/code&gt; へのアクセスについて同意が必要です。macOS 10.15 Catalina以降では、 &lt;code&gt;screen&lt;/code&gt; へのアクセスに同意が必要です。</target>
        </trans-unit>
        <trans-unit id="536226b701611389ed2a58db8bec3dc3ea5e66e7" translate="yes" xml:space="preserve">
          <source>This user consent was not required until macOS 10.14 Mojave, so this method will always return &lt;code&gt;true&lt;/code&gt; if your system is running 10.13 High Sierra or lower.</source>
          <target state="translated">このユーザーの同意はmacOS10.14 Mojaveまで必要なかったため、システムが10.13 High Sierra以下を実行している場合、このメソッドは常に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="67799efe884534d21c75845d127954a9bb9dfbe7" translate="yes" xml:space="preserve">
          <source>This value can only be modified before the first navigation, since the session of an active renderer process cannot change. Subsequent attempts to modify the value will fail with a DOM exception.</source>
          <target state="translated">アクティブなレンダラープロセスのセッションは変更できないため、この値は最初のナビゲーションの前にのみ変更できます。それ以降、値を変更しようとすると DOM の例外で失敗します。</target>
        </trans-unit>
        <trans-unit id="61e64b0ff9adbf4c454caa9353b1d0dd27c8cce5" translate="yes" xml:space="preserve">
          <source>This value is set to false by default.</source>
          <target state="translated">この値はデフォルトではfalseに設定されています。</target>
        </trans-unit>
        <trans-unit id="b985083dc6dd4174cf709dc0058ae23f4fe4c0e9" translate="yes" xml:space="preserve">
          <source>This variable is set to the value of &lt;code&gt;XDG_CURRENT_DESKTOP&lt;/code&gt; that your application originally launched with. Electron sometimes modifies the value of &lt;code&gt;XDG_CURRENT_DESKTOP&lt;/code&gt; to affect other logic within Chromium so if you want access to the &lt;em&gt;original&lt;/em&gt; value you should look up this environment variable instead.</source>
          <target state="translated">この変数は、アプリケーションが最初に起動された &lt;code&gt;XDG_CURRENT_DESKTOP&lt;/code&gt; の値に設定されます。Electronは、 &lt;code&gt;XDG_CURRENT_DESKTOP&lt;/code&gt; の値を変更して、Chromium内の他のロジックに影響を与えることがあるため、&lt;em&gt;元の&lt;/em&gt;値にアクセスする場合は、代わりにこの環境変数を検索する必要があります。</target>
        </trans-unit>
        <trans-unit id="fbaa6d5fd03f0d67460b559ac4734d32b43188b8" translate="yes" xml:space="preserve">
          <source>This will allow you to detect ahead of time whether or not the notification will be displayed.</source>
          <target state="translated">これにより、通知が表示されるかどうかを事前に検出することができます。</target>
        </trans-unit>
        <trans-unit id="310772b745c9bd2e5897c31686b366f0ca7a83fe" translate="yes" xml:space="preserve">
          <source>This will be time-consuming</source>
          <target state="translated">これは時間がかかる</target>
        </trans-unit>
        <trans-unit id="4ee48038aa020d935bb7ab14bd9b9501be0b6b5c" translate="yes" xml:space="preserve">
          <source>This will build all of what was previously 'libchromiumcontent' (i.e. the &lt;code&gt;content/&lt;/code&gt; directory of &lt;code&gt;chromium&lt;/code&gt; and its dependencies, incl. WebKit and V8), so it will take a while.</source>
          <target state="translated">これにより、以前は「libchromiumcontent」であったものがすべて構築されます（つまり、 &lt;code&gt;chromium&lt;/code&gt; の &lt;code&gt;content/&lt;/code&gt; ディレクトリとその依存関係（WebKitとV8を含む））になるため、しばらく時間がかかります。</target>
        </trans-unit>
        <trans-unit id="c1d164648fb645df77aacd2d3406870e9f6529fe" translate="yes" xml:space="preserve">
          <source>This will build debug electron with debug version of libchromiumcontent.</source>
          <target state="translated">デバッグ版のlibchromiumcontentを使ってデバッグ電子をビルドします。</target>
        </trans-unit>
        <trans-unit id="a5ad23d8e2c4bcda5ace9dc6a50d0d65568cc890" translate="yes" xml:space="preserve">
          <source>This will download and build libchromiumcontent locally, similarly to the &lt;code&gt;--build_release_libcc&lt;/code&gt;, but it will create a shared library build of libchromiumcontent and won't strip any symbols, making it ideal for debugging.</source>
          <target state="translated">これは--build_release_libccと同様にlibchromiumcontentをローカルにダウンロードしてビルドしますが、 &lt;code&gt;--build_release_libcc&lt;/code&gt; の共有ライブラリビルドを作成し、シンボルを削除しないため、デバッグに最適です。</target>
        </trans-unit>
        <trans-unit id="49e2296dbebe48f43f37289b354787ff74589354" translate="yes" xml:space="preserve">
          <source>This will fail when the app is signed for distribution in the Mac App Store. Subscribe to &lt;a href=&quot;https://github.com/electron/electron/issues/9005&quot;&gt;#9005&lt;/a&gt; for updates.</source>
          <target state="translated">アプリがMac App Storeで配布するように署名されている場合、これは失敗します。アップデートについては&lt;a href=&quot;https://github.com/electron/electron/issues/9005&quot;&gt;＃9005&lt;/a&gt;を購読してください。</target>
        </trans-unit>
        <trans-unit id="0ba277587ca5928eb7c3cb8648bc22f46a3781ce" translate="yes" xml:space="preserve">
          <source>This will generate a build directory &lt;code&gt;out/Testing&lt;/code&gt; under &lt;code&gt;src/&lt;/code&gt; with the testing build configuration. You can replace &lt;code&gt;Testing&lt;/code&gt; with another name, but it should be a subdirectory of &lt;code&gt;out&lt;/code&gt;. Also you shouldn't have to run &lt;code&gt;gn gen&lt;/code&gt; again&amp;mdash;if you want to change the build arguments, you can run &lt;code&gt;gn args out/Testing&lt;/code&gt; to bring up an editor.</source>
          <target state="translated">これにより、テストビルド構成で &lt;code&gt;src/&lt;/code&gt; 下にビルドディレクトリ &lt;code&gt;out/Testing&lt;/code&gt; が生成されます。 &lt;code&gt;Testing&lt;/code&gt; を別の名前に置き換えることができますが、それは &lt;code&gt;out&lt;/code&gt; のサブディレクトリである必要があります。また、 &lt;code&gt;gn gen&lt;/code&gt; を再度実行する必要はありません。ビルド引数を変更する場合は、 &lt;code&gt;gn args out/Testing&lt;/code&gt; を実行してエディターを起動できます。</target>
        </trans-unit>
        <trans-unit id="541c07fe9ee230201344ad82fc5f36ad622cf514" translate="yes" xml:space="preserve">
          <source>This will generate all the ninja files needed for the build. You shouldn't have to run &lt;code&gt;gn gen&lt;/code&gt; again&amp;mdash;if you want to change the build arguments you can run &lt;code&gt;gn args out/Default&lt;/code&gt; to bring up an editor.</source>
          <target state="translated">これにより、ビルドに必要なすべての忍者ファイルが生成されます。 &lt;code&gt;gn gen&lt;/code&gt; を再度実行する必要はありません。ビルド引数を変更する場合は、 &lt;code&gt;gn args out/Default&lt;/code&gt; を実行してエディターを起動できます。</target>
        </trans-unit>
        <trans-unit id="4fa3cd87f75d431b597009f84ee68601a4738e6f" translate="yes" xml:space="preserve">
          <source>This will generate the electron.ninja.xcworkspace. You will have to open this workspace to set breakpoints and inspect.</source>
          <target state="translated">これでelectron.ninja.xcworkspaceが生成されます。このワークスペースを開いてブレークポイントを設定したり、検査したりする必要があります。</target>
        </trans-unit>
        <trans-unit id="ec4cf475c98a6af3a04432e0f82fd5ad81b34a5c" translate="yes" xml:space="preserve">
          <source>This will generate the electron.ninjs.xcworkspace. You will have to open this workspace to set breakpoints and inspect.</source>
          <target state="translated">これでelectron.ninjs.xcworkspaceが生成されます。このワークスペースを開いてブレークポイントを設定し、検査する必要があります。</target>
        </trans-unit>
        <trans-unit id="02eb50512f6212b38a5f022b6eb6b5e324c5192f" translate="yes" xml:space="preserve">
          <source>This will generate:</source>
          <target state="translated">これで生成されます。</target>
        </trans-unit>
        <trans-unit id="e83d3d3598b2797efd7ec8e1d91124cd1b7f8f97" translate="yes" xml:space="preserve">
          <source>This will make a window maintain an aspect ratio. The extra size allows a developer to have space, specified in pixels, not included within the aspect ratio calculations. This API already takes into account the difference between a window's size and its content size.</source>
          <target state="translated">これにより、ウィンドウはアスペクト比を維持するようになります。余分なサイズを指定することで、開発者はピクセル単位で指定されたスペースをアスペクト比の計算に含まれないようにすることができます。この API は、ウィンドウのサイズとコンテンツのサイズの違いをすでに考慮しています。</target>
        </trans-unit>
        <trans-unit id="ce6ae84ac82058b3c68d240475e22e7867870592" translate="yes" xml:space="preserve">
          <source>This will put a working distribution with much smaller file sizes in the &lt;code&gt;dist&lt;/code&gt; directory. After running the &lt;code&gt;create-dist.py&lt;/code&gt; script, you may want to remove the 1.3+ gigabyte binary which is still in &lt;code&gt;out/R&lt;/code&gt;.</source>
          <target state="translated">これにより、ファイルサイズがはるかに小さい動作するディストリビューションが &lt;code&gt;dist&lt;/code&gt; ディレクトリに配置されます。 &lt;code&gt;create-dist.py&lt;/code&gt; スクリプトを実行した後、まだ &lt;code&gt;out/R&lt;/code&gt; にある1.3+ギガバイトのバイナリを削除することができます。</target>
        </trans-unit>
        <trans-unit id="06f1fff384311d54372d57e586748b6d220f83ac" translate="yes" xml:space="preserve">
          <source>This would normally be controlled by user preferences. This has no effect if called before &lt;code&gt;start&lt;/code&gt; is called.</source>
          <target state="translated">これは通常、ユーザー設定によって制御されます。 &lt;code&gt;start&lt;/code&gt; が呼び出される前に呼び出された場合、これは効果がありません。</target>
        </trans-unit>
        <trans-unit id="5d3775183e8f21e56320e67e89e50fc4420ccf2b" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;asar&lt;/code&gt; archives are treated as directories, there are no actual directories in the filesystem, so you can never set the working directory to directories in &lt;code&gt;asar&lt;/code&gt; archives. Passing them as the &lt;code&gt;cwd&lt;/code&gt; option of some APIs will also cause errors.</source>
          <target state="translated">けれども &lt;code&gt;asar&lt;/code&gt; アーカイブはディレクトリとして扱われますが、中にディレクトリに作業ディレクトリを設定することはできませんので、実際のディレクトリは、ファイルシステムではありません &lt;code&gt;asar&lt;/code&gt; アーカイブ。一部のAPIの &lt;code&gt;cwd&lt;/code&gt; オプションとしてそれらを渡すと、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="c25fb617132c60aa22b5ad88639757fd795725db" translate="yes" xml:space="preserve">
          <source>Three ways to install native modules:</source>
          <target state="translated">ネイティブモジュールをインストールする3つの方法</target>
        </trans-unit>
        <trans-unit id="018226bcc54ac78679d7e8cd478163dcf8940f27" translate="yes" xml:space="preserve">
          <source>ThumbarButton</source>
          <target state="translated">ThumbarButton</target>
        </trans-unit>
        <trans-unit id="a45fe261e1bd8ea4b2384009627cf81239d42ffe" translate="yes" xml:space="preserve">
          <source>ThumbarButton Object</source>
          <target state="translated">ThumbarButton オブジェクト</target>
        </trans-unit>
        <trans-unit id="68534756f2a43c9ca088bf006a84307cf3d82b08" translate="yes" xml:space="preserve">
          <source>Thumbnail Toolbars</source>
          <target state="translated">サムネイルツールバー</target>
        </trans-unit>
        <trans-unit id="671d7b141c957f28935c045970c0c111c71dfb47" translate="yes" xml:space="preserve">
          <source>Tigrinya</source>
          <target state="translated">Tigrinya</target>
        </trans-unit>
        <trans-unit id="11eae5abd19a21b0b726c2e1824d6589497b81e1" translate="yes" xml:space="preserve">
          <source>Time and time again, we have seen that the most successful strategy for building a performant Electron app is to profile the running code, find the most resource-hungry piece of it, and to optimize it. Repeating this seemingly laborious process over and over again will dramatically increase your app's performance. Experience from working with major apps like Visual Studio Code or Slack has shown that this practice is by far the most reliable strategy to improve performance.</source>
          <target state="translated">パフォーマンスの高いElectronアプリを構築するための最も成功した戦略は、実行中のコードをプロファイリングし、その中から最もリソースを消費する部分を見つけ出し、最適化することだということを、何度も何度も確認してきました。一見手間のかかるこのプロセスを何度も繰り返すことで、アプリのパフォーマンスは劇的に向上します。Visual Studio CodeやSlackなどの主要なアプリでの作業経験から、この方法がパフォーマンスを向上させるための最も信頼性の高い戦略であることがわかっています。</target>
        </trans-unit>
        <trans-unit id="2d93bfa0c66a344a9d453793e2a3b275bbe5a889" translate="yes" xml:space="preserve">
          <source>Tip: You can test the new version number before running &lt;code&gt;prepare-release&lt;/code&gt; with a dry run of the &lt;code&gt;bump-version&lt;/code&gt; script with the same major/minor/patch/beta arguments, e.g.:</source>
          <target state="translated">ヒント：同じメジャー/マイナー/パッチ/ベータ引数を使用して、 &lt;code&gt;bump-version&lt;/code&gt; スクリプトの予行演習で &lt;code&gt;prepare-release&lt;/code&gt; を実行する前に、新しいバージョン番号をテストできます。例：</target>
        </trans-unit>
        <trans-unit id="a1a55c0d1792b8d6468a37f479b18279fa043440" translate="yes" xml:space="preserve">
          <source>Tips for fixing compilation errors</source>
          <target state="translated">コンパイルエラーを修正するためのヒント</target>
        </trans-unit>
        <trans-unit id="547184d2eb07d1e52c4d74ab23282f7c9977fe1d" translate="yes" xml:space="preserve">
          <source>Tips:</source>
          <target state="translated">Tips:</target>
        </trans-unit>
        <trans-unit id="a116f7255e19431f1fbf68cdd9f4dce3b66e6b04" translate="yes" xml:space="preserve">
          <source>Titles</source>
          <target state="translated">Titles</target>
        </trans-unit>
        <trans-unit id="3eb9cdd5b4908db688ad55e676b92ffa39fa1a7b" translate="yes" xml:space="preserve">
          <source>To achieve this goal, set the background in the constructor for &lt;a href=&quot;api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt;:</source>
          <target state="translated">この目標を達成するには、&lt;a href=&quot;api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt;のコンストラクターで背景を設定します。</target>
        </trans-unit>
        <trans-unit id="51ccfd339eac71e6278eab9692f5352cf183f4aa" translate="yes" xml:space="preserve">
          <source>To add a file to recent documents, you can use the &lt;a href=&quot;../api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocument&lt;/a&gt; API:</source>
          <target state="translated">最近のドキュメントにファイルを追加するには、&lt;a href=&quot;../api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocument&lt;/a&gt; APIを使用できます。</target>
        </trans-unit>
        <trans-unit id="1c586312664efb5ece0af624ddc50e9b0c5ca982" translate="yes" xml:space="preserve">
          <source>To add a file to recent documents, you need to use the &lt;a href=&quot;../api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocument&lt;/a&gt; API.</source>
          <target state="translated">最近のドキュメントにファイルを追加するには、&lt;a href=&quot;../api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocumentAPI&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="8af4beaa9d84bda527933ff65e33d9dc9423e763" translate="yes" xml:space="preserve">
          <source>To add a file to recent documents, you need to use the &lt;a href=&quot;api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocument&lt;/a&gt; API.</source>
          <target state="translated">最近のドキュメントにファイルを追加するには、&lt;a href=&quot;api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocumentAPI&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="a187498b241949f135efade54e2d79532e0d2f04" translate="yes" xml:space="preserve">
          <source>To add listeners and handlers, add the following lines to the &lt;code&gt;renderer.js&lt;/code&gt; file:</source>
          <target state="translated">リスナーとハンドラーを追加するには、 &lt;code&gt;renderer.js&lt;/code&gt; ファイルに次の行を追加します。</target>
        </trans-unit>
        <trans-unit id="60bded7d3eba5a2c88ff071b450dd8171a4237a4" translate="yes" xml:space="preserve">
          <source>To automate the detection of misconfigurations and insecure patterns, it is possible to use &lt;a href=&quot;https://github.com/doyensec/electronegativity&quot;&gt;electronegativity&lt;/a&gt;. For additional details on potential weaknesses and implementation bugs when developing applications using Electron, please refer to this &lt;a href=&quot;https://doyensec.com/resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security-wp.pdf&quot;&gt;guide for developers and auditors&lt;/a&gt;</source>
          <target state="translated">構成ミスや安全でないパターンの検出を自動化するために、&lt;a href=&quot;https://github.com/doyensec/electronegativity&quot;&gt;電気陰性度&lt;/a&gt;を使用することができます。Electronを使用してアプリケーションを開発する際の潜在的な弱点と実装のバグの詳細については&lt;a href=&quot;https://doyensec.com/resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security-wp.pdf&quot;&gt;、開発者と監査人向けの&lt;/a&gt;このガイドを参照してください。</target>
        </trans-unit>
        <trans-unit id="a9664d5f84ea2545060bbee8ef877fd89e837721" translate="yes" xml:space="preserve">
          <source>To automatically format a file according to Electron C++ code style, run &lt;code&gt;clang-format -i path/to/electron/file.cc&lt;/code&gt;. It should work on macOS/Linux/Windows.</source>
          <target state="translated">Electron C ++コードスタイルに従ってファイルを自動的にフォーマットするには、 &lt;code&gt;clang-format -i path/to/electron/file.cc&lt;/code&gt; を実行します。macOS / Linux / Windowsで動作するはずです。</target>
        </trans-unit>
        <trans-unit id="fbdd9e0e1f5169f11845d03f9a4b24b8851b4328" translate="yes" xml:space="preserve">
          <source>To avoid this problem, ensure you clean up any references to renderer callbacks passed to the main process. This involves cleaning up event handlers, or ensuring the main process is explicitly told to dereference callbacks that came from a renderer process that is exiting.</source>
          <target state="translated">この問題を回避するには、メインプロセスに渡されたレンダラー コールバックへの参照をクリーンアップする必要があります。これには、イベント ハンドラをクリーンアップするか、またはメイン プロセスが、終了するレンダラー プロセスからのコールバックを参照解除するように明示的に指示されていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="f729edcee19e3b35f18f931c0af6f8268c97b5d4" translate="yes" xml:space="preserve">
          <source>To avoid using the prebuilt binaries of &lt;code&gt;libchromiumcontent&lt;/code&gt;, you can build &lt;code&gt;libchromiumcontent&lt;/code&gt; locally. To do so, follow these steps:</source>
          <target state="translated">&lt;code&gt;libchromiumcontent&lt;/code&gt; のビルド済みバイナリの使用を回避するために、ローカルで &lt;code&gt;libchromiumcontent&lt;/code&gt; をビルドできます。これを行うには、次の手順に従います。</target>
        </trans-unit>
        <trans-unit id="19976a15788c70fd26ec283fb2a6d554b40bc217" translate="yes" xml:space="preserve">
          <source>To build Electron with compilers like &lt;code&gt;g++&lt;/code&gt;, you first need to disable &lt;code&gt;clang&lt;/code&gt; with &lt;code&gt;--disable_clang&lt;/code&gt; switch first, and then set &lt;code&gt;CC&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; environment variables to the ones you want.</source>
          <target state="translated">以下のようなコンパイラで電子を構築するために、 &lt;code&gt;g++&lt;/code&gt; 無効にするには、まず必要 &lt;code&gt;clang&lt;/code&gt; と &lt;code&gt;--disable_clang&lt;/code&gt; 第1のスイッチと、その後、設定 &lt;code&gt;CC&lt;/code&gt; と &lt;code&gt;CXX&lt;/code&gt; のあなたが欲しいものに環境変数を。</target>
        </trans-unit>
        <trans-unit id="d6cd83725cfa73ae4725497beceb7d033c9cce9b" translate="yes" xml:space="preserve">
          <source>To build for the 32bit target, you need to pass &lt;code&gt;--target_arch=ia32&lt;/code&gt; when running the bootstrap script:</source>
          <target state="translated">32ビットターゲット用にビルドするには、ブートストラップスクリプトの実行時に &lt;code&gt;--target_arch=ia32&lt;/code&gt; を渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="3ce927211b7434e6f4913045507992599779f930" translate="yes" xml:space="preserve">
          <source>To build for the 32bit target, you need to pass &lt;code&gt;target_cpu = &quot;x86&quot;&lt;/code&gt; as a GN arg. You can build the 32bit target alongside the 64bit target by using a different output directory for GN, e.g. &lt;code&gt;out/Release-x86&lt;/code&gt;, with different arguments.</source>
          <target state="translated">32ビットターゲット用にビルドするには、 &lt;code&gt;target_cpu = &quot;x86&quot;&lt;/code&gt; をGN引数として渡す必要があります。GNの別の出力ディレクトリ（ &lt;code&gt;out/Release-x86&lt;/code&gt; など）をさまざまな引数で使用することにより、64ビットターゲットと一緒に32ビットターゲットを構築できます。</target>
        </trans-unit>
        <trans-unit id="821a75b76ea57d2ebf97a34d857fed4df2cade15" translate="yes" xml:space="preserve">
          <source>To build, run &lt;code&gt;ninja&lt;/code&gt; with the &lt;code&gt;electron:electron_app&lt;/code&gt; target:</source>
          <target state="translated">ビルドするには、 &lt;code&gt;electron:electron_app&lt;/code&gt; ターゲットで &lt;code&gt;ninja&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="b7686e79d73850d8f8a2318d278bdb52057eef79" translate="yes" xml:space="preserve">
          <source>To call the Main process from the Renderer, use the IPC module:</source>
          <target state="translated">RendererからMainプロセスを呼び出すには、IPCモジュールを使用します。</target>
        </trans-unit>
        <trans-unit id="eb59b218f28d7b858bdf2ed54eeac06e692808d8" translate="yes" xml:space="preserve">
          <source>To capture both audio and video from the entire desktop the constraints passed to &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt;&lt;/a&gt; must include &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt;, for both &lt;code&gt;audio&lt;/code&gt; and &lt;code&gt;video&lt;/code&gt;, but should not include a &lt;code&gt;chromeMediaSourceId&lt;/code&gt; constraint.</source>
          <target state="translated">渡された制約デスクトップ全体からオーディオとビデオの両方をキャプチャするには&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt; &lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt; が&lt;/a&gt;含まれている必要があり &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt; 、両方のための &lt;code&gt;audio&lt;/code&gt; および &lt;code&gt;video&lt;/code&gt; 、しかし含めるべきではありません &lt;code&gt;chromeMediaSourceId&lt;/code&gt; の制約を。</target>
        </trans-unit>
        <trans-unit id="ad024e97cbf72e17d0494dc407b356d3cd2d6654" translate="yes" xml:space="preserve">
          <source>To capture video from a source provided by &lt;code&gt;desktopCapturer&lt;/code&gt; the constraints passed to &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt;&lt;/a&gt; must include &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt;, and &lt;code&gt;audio: false&lt;/code&gt;.</source>
          <target state="translated">キャプチャによって提供されるソースからの映像に &lt;code&gt;desktopCapturer&lt;/code&gt; に渡された制約&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt; &lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt; が&lt;/a&gt;含まれている必要があります &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt; 、そして &lt;code&gt;audio: false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4940cd6896449350d0e22ff6a037fc2012f95be" translate="yes" xml:space="preserve">
          <source>To check if a DevTools extension is installed you can run the following:</source>
          <target state="translated">DevTools拡張機能がインストールされているかどうかを確認するには、以下のように実行します。</target>
        </trans-unit>
        <trans-unit id="a4b0244100e839dce97df084a927399cebf56784" translate="yes" xml:space="preserve">
          <source>To check out how a simple Electron app is built, see &lt;a href=&quot;first-app&quot;&gt;Writing Your First Electron App&lt;/a&gt;</source>
          <target state="translated">簡単なElectronアプリの作成方法を確認するには、&lt;a href=&quot;first-app&quot;&gt;最初のElectronアプリの作成を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3035d11dba22f59c2a05ae50e84cbd4beacd68c3" translate="yes" xml:space="preserve">
          <source>To check out how an Electron app that uses a background task to send toast notifications and live tiles, &lt;a href=&quot;https://github.com/felixrieseberg/electron-uwp-background&quot;&gt;check out the Microsoft-provided sample&lt;/a&gt;.</source>
          <target state="translated">バックグラウンドタスクを使用してトースト通知とライブタイルを送信するElectronアプリの方法を&lt;a href=&quot;https://github.com/felixrieseberg/electron-uwp-background&quot;&gt;確認するには、Microsoft提供のサンプルを確認してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="16073334d646ccfac2edf89e53cff76005d5a9e7" translate="yes" xml:space="preserve">
          <source>To check out the process architecture, see &lt;a href=&quot;application-architecture#main-and-renderer-processes&quot;&gt;Main and Renderer Processes&lt;/a&gt;.</source>
          <target state="translated">プロセスアーキテクチャを確認するには、&lt;a href=&quot;application-architecture#main-and-renderer-processes&quot;&gt;メインプロセスとレンダラープロセスを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b208f3dbdc3043098fdd288737ea5b6c37c7c27c" translate="yes" xml:space="preserve">
          <source>To check that Node.js was installed correctly, type the following commands in your terminal client:</source>
          <target state="translated">Node.jsが正しくインストールされていることを確認するには、ターミナルクライアントで以下のコマンドを入力します。</target>
        </trans-unit>
        <trans-unit id="47fa821b0f83e7586fb85804250c66d0d13ab94c" translate="yes" xml:space="preserve">
          <source>To clean only &lt;code&gt;out&lt;/code&gt; and &lt;code&gt;dist&lt;/code&gt; directories:</source>
          <target state="translated">だけきれいに &lt;code&gt;out&lt;/code&gt; と &lt;code&gt;dist&lt;/code&gt; のディレクトリ：</target>
        </trans-unit>
        <trans-unit id="c3a8e3b3ba3c693c9aa963abbc63ed4672f90e2b" translate="yes" xml:space="preserve">
          <source>To clean the build files:</source>
          <target state="translated">ビルドファイルをクリーンアップするために</target>
        </trans-unit>
        <trans-unit id="fd19315b5d8b4d48df4ffad2c2078c0ed5d6c4c8" translate="yes" xml:space="preserve">
          <source>To clean thumbnail toolbar buttons, just call &lt;code&gt;BrowserWindow.setThumbarButtons&lt;/code&gt; with an empty array:</source>
          <target state="translated">サムネイルツールバーボタンを消去するには、空の配列で &lt;code&gt;BrowserWindow.setThumbarButtons&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="535c3ee8e8e2739219eb5319c8cac023145fc1bb" translate="yes" xml:space="preserve">
          <source>To clean your tasks list, call &lt;code&gt;app.setUserTasks&lt;/code&gt; with an empty array:</source>
          <target state="translated">タスクリストをクリーン &lt;code&gt;app.setUserTasks&lt;/code&gt; するには、空の配列でapp.setUserTasksを呼び出します。</target>
        </trans-unit>
        <trans-unit id="477e7940dca6fb43c124fbb4278e94e6a9111dbe" translate="yes" xml:space="preserve">
          <source>To clear the list of recent documents, you need to use &lt;a href=&quot;../api/app#appclearrecentdocuments-macos-windows&quot;&gt;app.clearRecentDocuments&lt;/a&gt; API in the &lt;code&gt;main.js&lt;/code&gt; file:</source>
          <target state="translated">最近のドキュメントのリストをクリアするには、 &lt;code&gt;main.js&lt;/code&gt; ファイルで&lt;a href=&quot;../api/app#appclearrecentdocuments-macos-windows&quot;&gt;app.clearRecentDocumentsAPI&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="161e23c281aee75d36fd0808ffb2d229d156ec03" translate="yes" xml:space="preserve">
          <source>To clear the list of recent documents, you need to use &lt;a href=&quot;api/app#appclearrecentdocuments-macos-windows&quot;&gt;app.clearRecentDocuments&lt;/a&gt; API in the &lt;code&gt;main.js&lt;/code&gt; file:</source>
          <target state="translated">最近のドキュメントのリストをクリアするには、 &lt;code&gt;main.js&lt;/code&gt; ファイルで&lt;a href=&quot;api/app#appclearrecentdocuments-macos-windows&quot;&gt;app.clearRecentDocumentsAPI&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ccc514de8c7e5544405f7742ae2de3dacf5465d2" translate="yes" xml:space="preserve">
          <source>To clear thumbnail toolbar buttons, you need to call &lt;code&gt;BrowserWindow.setThumbarButtons&lt;/code&gt; with an empty array in the &lt;code&gt;main.js&lt;/code&gt; file.</source>
          <target state="translated">サムネイルツールバーボタンをクリアするには、 &lt;code&gt;main.js&lt;/code&gt; ファイルの空の配列を使用して &lt;code&gt;BrowserWindow.setThumbarButtons&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="bb41e470531e466ff0ed751deb72dffdd4695cc6" translate="yes" xml:space="preserve">
          <source>To clear your tasks list, you need to call &lt;code&gt;app.setUserTasks&lt;/code&gt; with an empty array in the &lt;code&gt;main.js&lt;/code&gt; file.</source>
          <target state="translated">あなたのタスクリストをクリアするには、呼び出す必要があり &lt;code&gt;app.setUserTasks&lt;/code&gt; を中に空の配列を &lt;code&gt;main.js&lt;/code&gt; ファイル。</target>
        </trans-unit>
        <trans-unit id="2134ea0ff07c37dd63e847fbf7d7cc6b27be05cb" translate="yes" xml:space="preserve">
          <source>To compile any existing Electron app, ensure that you have the following requirements:</source>
          <target state="translated">既存のElectronアプリをコンパイルするには、以下の要件を満たしていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="7e9223540bb1e87d1c72912e683b55dd11b45f0d" translate="yes" xml:space="preserve">
          <source>To compile for a platform that isn't the same as the one you're building on, set the &lt;code&gt;target_cpu&lt;/code&gt; and &lt;code&gt;target_os&lt;/code&gt; GN arguments. For example, to compile an x86 target from an x64 host, specify &lt;code&gt;target_cpu = &quot;x86&quot;&lt;/code&gt; in &lt;code&gt;gn args&lt;/code&gt;.</source>
          <target state="translated">構築しているプラ​​ットフォームと同じではないプラットフォーム用にコンパイルするには、 &lt;code&gt;target_cpu&lt;/code&gt; および &lt;code&gt;target_os&lt;/code&gt; GN引数を設定します。例えば、x64のホストからのx86ターゲットをコンパイルするように指定 &lt;code&gt;target_cpu = &quot;x86&quot;&lt;/code&gt; 中に &lt;code&gt;gn args&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5bce627812dc49b506ea519eb6a820ca4f848f8" translate="yes" xml:space="preserve">
          <source>To compile native Node modules against a custom build of Electron that doesn't match a public release, instruct &lt;code&gt;npm&lt;/code&gt; to use the version of Node you have bundled with your custom build.</source>
          <target state="translated">パブリックリリースと一致しないElectronのカスタムビルドに対してネイティブノードモジュールをコンパイルするには、カスタムビルドにバンドルされているノードのバージョンを使用するように &lt;code&gt;npm&lt;/code&gt; に指示します。</target>
        </trans-unit>
        <trans-unit id="27fca113c2f5999647cb968a39fe14a8e790988d" translate="yes" xml:space="preserve">
          <source>To configure a global keyboard shortcut, you need to use the &lt;a href=&quot;../api/global-shortcut&quot;&gt;globalShortcut&lt;/a&gt; module to detect keyboard events even when the application does not have keyboard focus.</source>
          <target state="translated">グローバルキーボードショートカットを構成するには、アプリケーションにキーボードフォーカスがない場合でも、&lt;a href=&quot;../api/global-shortcut&quot;&gt;globalShortcut&lt;/a&gt;モジュールを使用してキーボードイベントを検出する必要があります。</target>
        </trans-unit>
        <trans-unit id="b3c2e8e454256165b531737df4ddcc275fac81ee" translate="yes" xml:space="preserve">
          <source>To configure a global keyboard shortcut, you need to use the &lt;a href=&quot;api/global-shortcut&quot;&gt;globalShortcut&lt;/a&gt; module to detect keyboard events even when the application does not have keyboard focus.</source>
          <target state="translated">グローバルキーボードショートカットを構成するには、アプリケーションにキーボードフォーカスがない場合でも、&lt;a href=&quot;api/global-shortcut&quot;&gt;globalShortcut&lt;/a&gt;モジュールを使用してキーボードイベントを検出する必要があります。</target>
        </trans-unit>
        <trans-unit id="63f5bfc5a2539668bb939b4f8f57fd9c22e1c355" translate="yes" xml:space="preserve">
          <source>To configure display scaling:</source>
          <target state="translated">ディスプレイのスケーリングを設定します。</target>
        </trans-unit>
        <trans-unit id="ef5ea456f6758585b278e513aefa5cb807b4ef93" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;Session&lt;/code&gt; with &lt;code&gt;options&lt;/code&gt;, you have to ensure the &lt;code&gt;Session&lt;/code&gt; with the &lt;code&gt;partition&lt;/code&gt; has never been used before. There is no way to change the &lt;code&gt;options&lt;/code&gt; of an existing &lt;code&gt;Session&lt;/code&gt; object.</source>
          <target state="translated">作成するには &lt;code&gt;Session&lt;/code&gt; で &lt;code&gt;options&lt;/code&gt; 、あなたは確認する必要があり &lt;code&gt;Session&lt;/code&gt; して &lt;code&gt;partition&lt;/code&gt; 前に使用されていません。既存の &lt;code&gt;Session&lt;/code&gt; オブジェクトの &lt;code&gt;options&lt;/code&gt; を変更する方法はありません。</target>
        </trans-unit>
        <trans-unit id="edb532d22f5908482440f8346cec7745e9149b67" translate="yes" xml:space="preserve">
          <source>To create a browserify bundle and use it as a preload script, something like the following should be used:</source>
          <target state="translated">browserifyバンドルを作成し、それをプリロードスクリプトとして使用するには、以下のようなものを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d42528346bd8b4e186070f09e3e0e8630964b395" translate="yes" xml:space="preserve">
          <source>To create a click-through window, i.e. making the window ignore all mouse events, you can call the &lt;a href=&quot;api/browser-window#winsetignoremouseeventsignore-options&quot;&gt;win.setIgnoreMouseEvents(ignore)&lt;/a&gt; API:</source>
          <target state="translated">クリックスルーウィンドウを作成する、つまりウィンドウにすべてのマウスイベントを無視させるには、&lt;a href=&quot;api/browser-window#winsetignoremouseeventsignore-options&quot;&gt;win.setIgnoreMouseEvents（ignore）&lt;/a&gt; APIを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="d4504a0a533285a94c124801a9670c64f2a2e1d6" translate="yes" xml:space="preserve">
          <source>To create a click-through window, i.e. making the window ignore all mouse events, you can call the &lt;a href=&quot;browser-window#winsetignoremouseeventsignore&quot;&gt;win.setIgnoreMouseEvents(ignore)&lt;/a&gt; API:</source>
          <target state="translated">クリックスルーウィンドウを作成するには、つまりウィンドウですべてのマウスイベントを無視するには、&lt;a href=&quot;browser-window#winsetignoremouseeventsignore&quot;&gt;win.setIgnoreMouseEvents（ignore）&lt;/a&gt; APIを呼び出します。</target>
        </trans-unit>
        <trans-unit id="8b880bc0edc8f8e99eb3746bcafb2671729f2d76" translate="yes" xml:space="preserve">
          <source>To create a click-through window, i.e. making the window ignore all mouse events, you can call the &lt;a href=&quot;browser-window#winsetignoremouseeventsignore-options&quot;&gt;win.setIgnoreMouseEvents(ignore)&lt;/a&gt; API:</source>
          <target state="translated">クリックスルーウィンドウを作成する、つまりウィンドウにすべてのマウスイベントを無視させるには、&lt;a href=&quot;browser-window#winsetignoremouseeventsignore-options&quot;&gt;win.setIgnoreMouseEvents（ignore）&lt;/a&gt; APIを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="176943a2a565e35770f15d67eca72e8250c98195" translate="yes" xml:space="preserve">
          <source>To create a custom driver, we'll use Node.js' &lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_process&lt;/a&gt; API. The test suite will spawn the Electron process, then establish a simple messaging protocol:</source>
          <target state="translated">カスタムドライバーを作成するには、Node.jsの&lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_processAPIを&lt;/a&gt;使用します。テストスイートはElectronプロセスを生成し、簡単なメッセージングプロトコルを確立します。</target>
        </trans-unit>
        <trans-unit id="772c951591704df38eae61542fd514f0fae11027" translate="yes" xml:space="preserve">
          <source>To create a custom driver, we'll use nodejs' &lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_process&lt;/a&gt; API. The test suite will spawn the Electron process, then establish a simple messaging protocol:</source>
          <target state="translated">カスタムドライバーを作成するには、nodejsの&lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_process&lt;/a&gt; APIを使用します。テストスイートは、Electronプロセスを生成し、単純なメッセージングプロトコルを確立します。</target>
        </trans-unit>
        <trans-unit id="50f26f703d796c1406742b70968ec9d8b38195a7" translate="yes" xml:space="preserve">
          <source>To create a frameless window, you need to set &lt;code&gt;frame&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in &lt;a href=&quot;api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt;'s &lt;code&gt;options&lt;/code&gt;:</source>
          <target state="translated">フレームレスウィンドウを作成するには、&lt;a href=&quot;api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt;の &lt;code&gt;options&lt;/code&gt; で &lt;code&gt;frame&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="14fa77793c887f131ecab2b39703d63c2fb21efd" translate="yes" xml:space="preserve">
          <source>To create a frameless window, you need to set &lt;code&gt;frame&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in &lt;a href=&quot;browser-window&quot;&gt;BrowserWindow&lt;/a&gt;'s &lt;code&gt;options&lt;/code&gt;:</source>
          <target state="translated">フレームレスウィンドウを作成するには、&lt;a href=&quot;browser-window&quot;&gt;BrowserWindow&lt;/a&gt;の &lt;code&gt;options&lt;/code&gt; で &lt;code&gt;frame&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="4cf386399c6a736554547f2ae38eba052a608d96" translate="yes" xml:space="preserve">
          <source>To create a sandboxed window, pass &lt;code&gt;sandbox: true&lt;/code&gt; to &lt;code&gt;webPreferences&lt;/code&gt;:</source>
          <target state="translated">サンドボックス化されたウィンドウを作成するには、 &lt;code&gt;sandbox: true&lt;/code&gt; を &lt;code&gt;webPreferences&lt;/code&gt; ：に渡します。</target>
        </trans-unit>
        <trans-unit id="1a722dcf46a3cbeaf79a09b4d16ddc687f912186" translate="yes" xml:space="preserve">
          <source>To create a sandboxed window, simply pass &lt;code&gt;sandbox: true&lt;/code&gt; to &lt;code&gt;webPreferences&lt;/code&gt;:</source>
          <target state="translated">サンドボックス化されたウィンドウを作成するには、単純に &lt;code&gt;sandbox: true&lt;/code&gt; を &lt;code&gt;webPreferences&lt;/code&gt; に渡します。</target>
        </trans-unit>
        <trans-unit id="48c5105eef2b37906ef4104ae87b2fc10469145a" translate="yes" xml:space="preserve">
          <source>To create a shortcut, you need to provide &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Exec&lt;/code&gt; properties for the entry you want to add to the shortcut menu. Unity will execute the command defined in the &lt;code&gt;Exec&lt;/code&gt; field after the user clicked the shortcut menu item. An example of the &lt;code&gt;.desktop&lt;/code&gt; file may look as follows:</source>
          <target state="translated">ショートカットを作成するには、ショートカットメニューに追加するエントリの &lt;code&gt;Name&lt;/code&gt; プロパティと &lt;code&gt;Exec&lt;/code&gt; プロパティを指定する必要があります。Unityは、ユーザがショートカットメニュー項目をクリックした後、 &lt;code&gt;Exec&lt;/code&gt; フィールドで定義されたコマンドを実行します。 &lt;code&gt;.desktop&lt;/code&gt; ファイルの例は次のようになります。</target>
        </trans-unit>
        <trans-unit id="b51857f3d5af218adeed0217c94ee519b60016d1" translate="yes" xml:space="preserve">
          <source>To create a window without chrome, or a transparent window in arbitrary shape, you can use the &lt;a href=&quot;api/frameless-window&quot;&gt;Frameless Window&lt;/a&gt; API.</source>
          <target state="translated">クロムのないウィンドウ、または任意の形状の透明なウィンドウを作成するには、&lt;a href=&quot;api/frameless-window&quot;&gt;Frameless WindowAPI&lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="7168a31db235db73d7406740d08f55b04b316abe" translate="yes" xml:space="preserve">
          <source>To create a window without chrome, or a transparent window in arbitrary shape, you can use the &lt;a href=&quot;frameless-window&quot;&gt;Frameless Window&lt;/a&gt; API.</source>
          <target state="translated">クロムなしのウィンドウ、または任意の形状の透明ウィンドウを作成するには、&lt;a href=&quot;frameless-window&quot;&gt;フレームレスウィンドウ&lt;/a&gt; APIを使用できます。</target>
        </trans-unit>
        <trans-unit id="062b91382d89b8527ab63813aab832b5d260ca7c" translate="yes" xml:space="preserve">
          <source>To create a window, call the &lt;code&gt;BrowserWindow&lt;/code&gt; class, which is only available in the Main process:</source>
          <target state="translated">ウィンドウを作成するには、 &lt;code&gt;BrowserWindow&lt;/code&gt; クラスを呼び出します。これは、メインプロセスでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="faa62213e724034885a6596113bf983a535149bc" translate="yes" xml:space="preserve">
          <source>To cross-compile for Windows on Arm, &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/refs/heads/master/docs/windows_build_instructions.md#Visual-Studio&quot;&gt;follow Chromium's guide&lt;/a&gt; to get the necessary dependencies, SDK and libraries, then build with &lt;code&gt;ELECTRON_BUILDING_WOA=1&lt;/code&gt; in your environment before running &lt;code&gt;gclient sync&lt;/code&gt;.</source>
          <target state="translated">Windows on Arm用にクロスコンパイルするには、&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/refs/heads/master/docs/windows_build_instructions.md#Visual-Studio&quot;&gt;Chromiumのガイドに従って&lt;/a&gt;必要な依存関係、SDK、ライブラリを取得し、 &lt;code&gt;gclient sync&lt;/code&gt; を実行する前に、環境で &lt;code&gt;ELECTRON_BUILDING_WOA=1&lt;/code&gt; を使用してビルドします。</target>
        </trans-unit>
        <trans-unit id="2f5e21c0065cc1231645772a60b9ffb4db284f60" translate="yes" xml:space="preserve">
          <source>To detect whether or not you're allowed to send a notification, use the userland module &lt;a href=&quot;https://github.com/felixrieseberg/electron-notification-state&quot;&gt;electron-notification-state&lt;/a&gt;.</source>
          <target state="translated">通知の送信が許可されているかどうかを検出するには、ユーザーランドモジュール&lt;a href=&quot;https://github.com/felixrieseberg/electron-notification-state&quot;&gt;electron-notification-stateを使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="18993c3ec7650af89951a8eb01d2c6f69ddbc0ad" translate="yes" xml:space="preserve">
          <source>To distribute your app with Electron, you need to download Electron's &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;prebuilt binaries&lt;/a&gt;. Next, the folder containing your app should be named &lt;code&gt;app&lt;/code&gt; and placed in Electron's resources directory as shown in the following examples. Note that the location of Electron's prebuilt binaries is indicated with &lt;code&gt;electron/&lt;/code&gt; in the examples below.</source>
          <target state="translated">Electronでアプリを配布するには、Electronの&lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;ビルド済みバイナリ&lt;/a&gt;をダウンロードする必要があります。次に、あなたのアプリケーションを含むフォルダは、指定されなければならない &lt;code&gt;app&lt;/code&gt; 、以下の例に示すように、電子のリソースディレクトリに置きます。以下の例では、Electronのビルド済みバイナリの場所が &lt;code&gt;electron/&lt;/code&gt; で示されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="162ace7362a9dd1ab360184ea62f6a3b125c37ef" translate="yes" xml:space="preserve">
          <source>To distribute your app with Electron, you need to package and rebrand it. The easiest way to do this is to use one of the following third party packaging tools:</source>
          <target state="translated">アプリをElectronで配布するには、パッケージ化してリブランディングする必要があります。これを行う最も簡単な方法は、次のサードパーティ製パッケージングツールのいずれかを使用することです。</target>
        </trans-unit>
        <trans-unit id="7f5c2511eb5e2692a8e70be365b110b5b21b368c" translate="yes" xml:space="preserve">
          <source>To do a source level single step in the currently selected thread, execute &lt;code&gt;step&lt;/code&gt; (or &lt;code&gt;s&lt;/code&gt;). This would take you into &lt;code&gt;name_override_.empty()&lt;/code&gt;. To proceed and do a step over, run &lt;code&gt;next&lt;/code&gt; (or &lt;code&gt;n&lt;/code&gt;).</source>
          <target state="translated">現在選択されているスレッドでソースレベルのシングルステップを実行するには、 &lt;code&gt;step&lt;/code&gt; （または &lt;code&gt;s&lt;/code&gt; ）を実行します。これにより、 &lt;code&gt;name_override_.empty()&lt;/code&gt; に移動します。先に進み、ステップオーバーするには、 &lt;code&gt;next&lt;/code&gt; 実行します（または &lt;code&gt;n&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d4384a7b694374ec145e813a06a8f8fab6f19b6a" translate="yes" xml:space="preserve">
          <source>To do so, open up the developer tools. Navigate to the &lt;code&gt;Network&lt;/code&gt; tab and check the &lt;code&gt;Disable cache&lt;/code&gt; option. Then, reload your renderer. Unless your app prohibits such reloads, you can usually trigger a reload by hitting &lt;code&gt;Cmd + R&lt;/code&gt; or &lt;code&gt;Ctrl + R&lt;/code&gt; with the developer tools in focus.</source>
          <target state="translated">これを行うには、開発者ツールを開きます。[ &lt;code&gt;Network&lt;/code&gt; ]タブに移動し、[ &lt;code&gt;Disable cache&lt;/code&gt; ]オプションをオンにします。次に、レンダラーをリロードします。アプリでこのようなリロードが禁止されていない限り、通常、開発者ツールにフォーカスを置いて &lt;code&gt;Cmd + R&lt;/code&gt; または &lt;code&gt;Ctrl + R&lt;/code&gt; を押すことでリロードをトリガーできます。</target>
        </trans-unit>
        <trans-unit id="94fa16b9d0f4ea3ec28a1d741fb3059be08b5f5e" translate="yes" xml:space="preserve">
          <source>To embed a web page in your app, add the &lt;code&gt;webview&lt;/code&gt; tag to your app's embedder page (this is the app page that will display the guest content). In its simplest form, the &lt;code&gt;webview&lt;/code&gt; tag includes the &lt;code&gt;src&lt;/code&gt; of the web page and css styles that control the appearance of the &lt;code&gt;webview&lt;/code&gt; container:</source>
          <target state="translated">アプリにWebページを埋め込むには、アプリの埋め込みページ（これはゲストコンテンツを表示するアプリページです）に &lt;code&gt;webview&lt;/code&gt; タグを追加します。最も単純な形式の &lt;code&gt;webview&lt;/code&gt; タグには、Webページの &lt;code&gt;src&lt;/code&gt; と、 &lt;code&gt;webview&lt;/code&gt; コンテナの外観を制御するcssスタイルが含まれます。</target>
        </trans-unit>
        <trans-unit id="74afbad1cd98c17c4f61f99669eab36512f313cb" translate="yes" xml:space="preserve">
          <source>To enable OS-enforced sandbox on &lt;code&gt;BrowserWindow&lt;/code&gt; or &lt;code&gt;webview&lt;/code&gt; process with &lt;code&gt;sandbox:true&lt;/code&gt; without causing entire app to be in sandbox, &lt;code&gt;--enable-mixed-sandbox&lt;/code&gt; command-line argument must be passed to electron. This option is currently only supported on macOS and Windows.</source>
          <target state="translated">アプリ全体を &lt;code&gt;sandbox:true&lt;/code&gt; 入れずに、 &lt;code&gt;BrowserWindow&lt;/code&gt; またはSandbox：trueを使用した &lt;code&gt;webview&lt;/code&gt; プロセスでOS強制サンドボックスを有効にするには、-enable &lt;code&gt;--enable-mixed-sandbox&lt;/code&gt; コマンドライン引数をelectronに渡す必要があります。このオプションは現在、macOSとWindowsでのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="7d10111789110c128904cbac5eea80100c463835" translate="yes" xml:space="preserve">
          <source>To enable this mode GPU acceleration has to be disabled by calling the &lt;a href=&quot;../api/app#appdisablehardwareacceleration&quot;&gt;&lt;code&gt;app.disableHardwareAcceleration()&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">このモードを有効にするには、&lt;a href=&quot;../api/app#appdisablehardwareacceleration&quot;&gt; &lt;code&gt;app.disableHardwareAcceleration()&lt;/code&gt; &lt;/a&gt; APIを呼び出してGPUアクセラレーションを無効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="da76afea9d33d567b593a66f876aeea04c28d7a5" translate="yes" xml:space="preserve">
          <source>To enable this mode GPU acceleration has to be disabled by calling the &lt;a href=&quot;api/app#appdisablehardwareacceleration&quot;&gt;&lt;code&gt;app.disableHardwareAcceleration()&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">このモードを有効にするには、&lt;a href=&quot;api/app#appdisablehardwareacceleration&quot;&gt; &lt;code&gt;app.disableHardwareAcceleration()&lt;/code&gt; &lt;/a&gt; APIを呼び出してGPUアクセラレーションを無効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="376c1f437e3036fdacff2322ea68521dd84c3a14" translate="yes" xml:space="preserve">
          <source>To enable video playback with this new restriction, &lt;a href=&quot;https://castlabs.com/open-source/downstream/&quot;&gt;castLabs&lt;/a&gt; has created a &lt;a href=&quot;https://github.com/castlabs/electron-releases&quot;&gt;fork&lt;/a&gt; that has implemented the necessary changes to enable Widevine to be played in an Electron application if one has obtained the necessary licenses from widevine.</source>
          <target state="translated">この新しい制限でビデオ再生を有効にするために、&lt;a href=&quot;https://castlabs.com/open-source/downstream/&quot;&gt;castLabs&lt;/a&gt;は、必要な変更を実装した&lt;a href=&quot;https://github.com/castlabs/electron-releases&quot;&gt;フォーク&lt;/a&gt;を作成し、Widevineから必要なライセンスを取得した場合にWidevineをElectronアプリケーションで再生できるようにしました。</target>
        </trans-unit>
        <trans-unit id="eb5bafd8fcceb25769e49c0e2f881eddea2335a3" translate="yes" xml:space="preserve">
          <source>To ensure that file URLs are properly formatted, it is recommended to use Node's &lt;a href=&quot;https://nodejs.org/api/url.html#url_url_format_urlobject&quot;&gt;&lt;code&gt;url.format&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">ファイルのURLが適切にフォーマットされていることを確認するには、Nodeの&lt;a href=&quot;https://nodejs.org/api/url.html#url_url_format_urlobject&quot;&gt; &lt;code&gt;url.format&lt;/code&gt; &lt;/a&gt;メソッドを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="db09d3bac654dc1b140e3a8525ebc081f1aca261" translate="yes" xml:space="preserve">
          <source>To ensure that your C++ is in compliance with the Electron coding style, run &lt;code&gt;npm run lint-cpp&lt;/code&gt;, which runs a &lt;code&gt;cpplint&lt;/code&gt; script. We recommend that you use &lt;code&gt;clang-format&lt;/code&gt; and prepared &lt;a href=&quot;clang-format&quot;&gt;a short tutorial&lt;/a&gt;.</source>
          <target state="translated">C ++がElectronコーディングスタイルに準拠していることを確認するには、 &lt;code&gt;cpplint&lt;/code&gt; スクリプトを実行する &lt;code&gt;npm run lint-cpp&lt;/code&gt; を実行します。 &lt;code&gt;clang-format&lt;/code&gt; を使用し&lt;a href=&quot;clang-format&quot;&gt;、短いチュートリアル&lt;/a&gt;を用意することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="2d8c8013cd5a3c87cce83b20e821993501562853" translate="yes" xml:space="preserve">
          <source>To ensure that your C++ is in compliance with the Electron coding style, run &lt;code&gt;npm run lint-cpp&lt;/code&gt;, which runs a &lt;code&gt;cpplint&lt;/code&gt; script. We recommend that you use &lt;code&gt;clang-format&lt;/code&gt; and prepared &lt;a href=&quot;development/clang-format&quot;&gt;a short tutorial&lt;/a&gt;.</source>
          <target state="translated">C ++がElectronコーディングスタイルに準拠していることを確認するには、 &lt;code&gt;cpplint&lt;/code&gt; スクリプトを実行するnpm runlint &lt;code&gt;npm run lint-cpp&lt;/code&gt; を実行します。 &lt;code&gt;clang-format&lt;/code&gt; を使用して&lt;a href=&quot;development/clang-format&quot;&gt;、短いチュートリアル&lt;/a&gt;を準備することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f76a95ae71cef0d386309c3b00dd01a15c7be53c" translate="yes" xml:space="preserve">
          <source>To ensure that your JavaScript is in compliance with the Electron coding style, run &lt;code&gt;npm run lint-js&lt;/code&gt;, which will run &lt;code&gt;standard&lt;/code&gt; against both Electron itself as well as the unit tests. If you are using an editor with a plugin/addon system, you might want to use one of the many &lt;a href=&quot;https://standardjs.com/#are-there-text-editor-plugins&quot;&gt;StandardJS addons&lt;/a&gt; to be informed of coding style violations before you ever commit them.</source>
          <target state="translated">JavaScriptがElectronコーディングスタイルに準拠していることを確認するには、 &lt;code&gt;npm run lint-js&lt;/code&gt; を実行します。これにより、Electron自体とユニットテストの両方に対して &lt;code&gt;standard&lt;/code&gt; で実行されます。プラグイン/アドオンシステムでエディターを使用している場合は、多くの&lt;a href=&quot;https://standardjs.com/#are-there-text-editor-plugins&quot;&gt;StandardJSアドオンの&lt;/a&gt;いずれかを使用して、コーディングスタイル違反をコミットする前に通知することができます。</target>
        </trans-unit>
        <trans-unit id="1f3e67e920081f7bc356db1f791eb16dfb792e39" translate="yes" xml:space="preserve">
          <source>To finish debugging at this point, run &lt;code&gt;process continue&lt;/code&gt;. You can also continue until a certain line is hit in this thread (&lt;code&gt;thread until 100&lt;/code&gt;). This command will run the thread in the current frame till it reaches line 100 in this frame or stops if it leaves the current frame.</source>
          <target state="translated">この時点でデバッグを終了するには、 &lt;code&gt;process continue&lt;/code&gt; を実行します。このスレッドで特定の行がヒットするまで続行することもできます（ &lt;code&gt;thread until 100&lt;/code&gt; ）。このコマンドは、現在のフレームのスレッドがこのフレームの100行に達するまで実行するか、現在のフレームを離れると停止します。</target>
        </trans-unit>
        <trans-unit id="db20ed2d7ab5ce6c9ab8108e55b92cdfc30f46ae" translate="yes" xml:space="preserve">
          <source>To flash the BrowserWindow taskbar button, you can use the &lt;a href=&quot;../api/browser-window#winflashframeflag&quot;&gt;BrowserWindow.flashFrame&lt;/a&gt; API:</source>
          <target state="translated">BrowserWindowタスクバーボタンを点滅させるには、&lt;a href=&quot;../api/browser-window#winflashframeflag&quot;&gt;BrowserWindow.flashFrame&lt;/a&gt; APIを使用できます。</target>
        </trans-unit>
        <trans-unit id="b1791f0d0992ff76e4410b34fbde26e609a3bd73" translate="yes" xml:space="preserve">
          <source>To flash the BrowserWindow taskbar button, you need to use the &lt;a href=&quot;../api/browser-window#winflashframeflag&quot;&gt;BrowserWindow.flashFrame&lt;/a&gt; API.</source>
          <target state="translated">BrowserWindowタスクバーボタンをフラッシュするには、&lt;a href=&quot;../api/browser-window#winflashframeflag&quot;&gt;BrowserWindow.flashFrameAPI&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d6bbc481de7271502240a0044d18ae668aa5888a" translate="yes" xml:space="preserve">
          <source>To flash the BrowserWindow taskbar button, you need to use the &lt;a href=&quot;api/browser-window#winflashframeflag&quot;&gt;BrowserWindow.flashFrame&lt;/a&gt; API.</source>
          <target state="translated">BrowserWindowタスクバーボタンをフラッシュするには、&lt;a href=&quot;api/browser-window#winflashframeflag&quot;&gt;BrowserWindow.flashFrameAPI&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="f34d8007c087fdfa0c2b44b75f27bddfe014f8d9" translate="yes" xml:space="preserve">
          <source>To flip a fuse you find its position in the fuse wire and change it to &quot;0&quot; or &quot;1&quot; depending on the state you'd like.</source>
          <target state="translated">ヒューズを反転させるには、ヒューズ線の位置を見つけて、状態に応じて「0」または「1」に変更します。</target>
        </trans-unit>
        <trans-unit id="c07abd3bb41bb6ca01026b17e45a131a420f2c6c" translate="yes" xml:space="preserve">
          <source>To generate a Visual Studio project, you can pass the &lt;code&gt;--ide=vs2017&lt;/code&gt; parameter to &lt;code&gt;gn gen&lt;/code&gt;:</source>
          <target state="translated">Visual Studioのプロジェクトを生成するには、渡すことができ &lt;code&gt;--ide=vs2017&lt;/code&gt; パラメータに &lt;code&gt;gn gen&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9f9efd08eb76de8870458a9009c7e1a3dfc78bf4" translate="yes" xml:space="preserve">
          <source>To generate a Visual Studio project, you can pass the &lt;code&gt;--msvs&lt;/code&gt; parameter:</source>
          <target state="translated">Visual Studioプロジェクトを生成するには、 &lt;code&gt;--msvs&lt;/code&gt; パラメーターを渡します。</target>
        </trans-unit>
        <trans-unit id="228e463f67c58bcbf5312b15b52c0b0dd1979bdd" translate="yes" xml:space="preserve">
          <source>To generate the AppX package, the &lt;code&gt;electron-windows-store&lt;/code&gt; CLI uses a template that should work for most Electron apps. However, if you are using a custom installer, or should you experience any trouble with the generated package, you can attempt to create a package using compilation with a Windows Container - in that mode, the CLI will install and run your application in blank Windows Container to determine what modifications your application is exactly doing to the operating system.</source>
          <target state="translated">AppXパッケージを生成するために、 &lt;code&gt;electron-windows-store&lt;/code&gt; CLIは、ほとんどのElectronアプリで機能するテンプレートを使用します。ただし、カスタムインストーラーを使用している場合、または生成されたパッケージで問題が発生した場合は、Windowsコンテナーでのコンパイルを使用してパッケージを作成することができます。そのモードでは、CLIはアプリケーションを空白のWindowsにインストールして実行しますアプリケーションがオペレーティングシステムに対して正確に行っている変更を特定するコンテナ。</target>
        </trans-unit>
        <trans-unit id="38c1633192c5aa4b32359dbf5d5c9f9d8d5d72f6" translate="yes" xml:space="preserve">
          <source>To handle the &lt;code&gt;request&lt;/code&gt;, the &lt;code&gt;callback&lt;/code&gt; should be called with either the file's path or an object that has a &lt;code&gt;path&lt;/code&gt; property, e.g. &lt;code&gt;callback(filePath)&lt;/code&gt; or &lt;code&gt;callback({ path: filePath })&lt;/code&gt;. The &lt;code&gt;filePath&lt;/code&gt; must be an absolute path.</source>
          <target state="translated">処理するため &lt;code&gt;request&lt;/code&gt; 、 &lt;code&gt;callback&lt;/code&gt; ファイルのパスまたは持つオブジェクトのいずれかで呼び出さなければならない &lt;code&gt;path&lt;/code&gt; 、例えば、プロパティ &lt;code&gt;callback(filePath)&lt;/code&gt; または &lt;code&gt;callback({ path: filePath })&lt;/code&gt; 。 &lt;code&gt;filePath&lt;/code&gt; には、絶対パスでなければなりません。</target>
        </trans-unit>
        <trans-unit id="90f2a2f292c4289650381baf50f3d8c14da42c1c" translate="yes" xml:space="preserve">
          <source>To handle the &lt;code&gt;request&lt;/code&gt;, the &lt;code&gt;callback&lt;/code&gt; should be called with either the file's path or an object that has a &lt;code&gt;path&lt;/code&gt; property, e.g. &lt;code&gt;callback(filePath)&lt;/code&gt; or &lt;code&gt;callback({path: filePath})&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt; を処理するには、 &lt;code&gt;callback&lt;/code&gt; は、ファイルのパスまたは &lt;code&gt;path&lt;/code&gt; プロパティを持つオブジェクト &lt;code&gt;callback(filePath)&lt;/code&gt; 例：callback（filePath）または &lt;code&gt;callback({path: filePath})&lt;/code&gt; 必要があります。</target>
        </trans-unit>
        <trans-unit id="c1ef937f8c114ec0dbc1bf615805fca67f516bf2" translate="yes" xml:space="preserve">
          <source>To have your custom protocol work in combination with a custom session, you need to register it to that session explicitly.</source>
          <target state="translated">カスタムプロトコルをカスタムセッションと組み合わせて動作させるには、そのセッションに明示的に登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="60aa3969a2505f5ec82cd53b1ca7a9f2cb28cc94" translate="yes" xml:space="preserve">
          <source>To help manage these patch sets, we provide two tools: &lt;code&gt;git-import-patches&lt;/code&gt; and &lt;code&gt;git-export-patches&lt;/code&gt;. &lt;code&gt;git-import-patches&lt;/code&gt; imports a set of patch files into a git repository by applying each patch in the correct order and creating a commit for each one. &lt;code&gt;git-export-patches&lt;/code&gt; does the reverse; it exports a series of git commits in a repository into a set of files in a directory and an accompanying &lt;code&gt;.patches&lt;/code&gt; file.</source>
          <target state="translated">これらのパッチセットの管理を支援するために、 &lt;code&gt;git-import-patches&lt;/code&gt; と &lt;code&gt;git-export-patches&lt;/code&gt; の2つのツールを提供しています。 &lt;code&gt;git-import-patches&lt;/code&gt; は、各パッチを正しい順序で適用し、各パッチのコミットを作成することにより、パッチファイルのセットをgitリポジトリにインポートします。 &lt;code&gt;git-export-patches&lt;/code&gt; はその逆を行います。リポジトリ内の一連の &lt;code&gt;.patches&lt;/code&gt; 、ディレクトリ内の一連のファイルとそれに付随する.patchesファイルにエクスポートします。</target>
        </trans-unit>
        <trans-unit id="9f1b99f67d6fac27f5ef7c783b9b5636dfad85e8" translate="yes" xml:space="preserve">
          <source>To implement this feature in your app, you need to call &lt;code&gt;webContents.startDrag(item)&lt;/code&gt; API in response to the &lt;code&gt;ondragstart&lt;/code&gt; event.</source>
          <target state="translated">この機能をアプリに実装するには、 &lt;code&gt;ondragstart&lt;/code&gt; イベントに応答してwebContents.startDrag &lt;code&gt;webContents.startDrag(item)&lt;/code&gt; API を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="4b6dca3fa9056c6956e42192fd99cff54a88535a" translate="yes" xml:space="preserve">
          <source>To implement this feature in your app, you need to call the &lt;a href=&quot;../api/web-contents#contentsstartdragitem&quot;&gt;&lt;code&gt;webContents.startDrag(item)&lt;/code&gt;&lt;/a&gt; API in response to the &lt;code&gt;ondragstart&lt;/code&gt; event.</source>
          <target state="translated">この機能をアプリに実装するには、 &lt;code&gt;ondragstart&lt;/code&gt; イベントに応答してwebContents.startDrag &lt;a href=&quot;../api/web-contents#contentsstartdragitem&quot;&gt; &lt;code&gt;webContents.startDrag(item)&lt;/code&gt; &lt;/a&gt; APIを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="0afb8b6e99de8341818769897169a0df7fe3aafc" translate="yes" xml:space="preserve">
          <source>To implement this feature in your app, you need to call the &lt;a href=&quot;api/web-contents#contentsstartdragitem&quot;&gt;&lt;code&gt;webContents.startDrag(item)&lt;/code&gt;&lt;/a&gt; API in response to the &lt;code&gt;ondragstart&lt;/code&gt; event.</source>
          <target state="translated">この機能をアプリに実装するには、 &lt;code&gt;ondragstart&lt;/code&gt; イベントに応答してwebContents.startDrag &lt;a href=&quot;api/web-contents#contentsstartdragitem&quot;&gt; &lt;code&gt;webContents.startDrag(item)&lt;/code&gt; &lt;/a&gt; APIを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="885f246a2ca0776749403df61b7950e914ac171c" translate="yes" xml:space="preserve">
          <source>To install prebuilt Electron binaries, use &lt;a href=&quot;https://docs.npmjs.com&quot;&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt;. The preferred method is to install Electron as a development dependency in your app:</source>
          <target state="translated">ビルド済みのElectronバイナリをインストールするには、&lt;a href=&quot;https://docs.npmjs.com&quot;&gt; &lt;code&gt;npm&lt;/code&gt; を&lt;/a&gt;使用します。推奨される方法は、アプリの開発依存関係としてElectronをインストールすることです。</target>
        </trans-unit>
        <trans-unit id="617f463448947957d7e0c24029af171ad482daeb" translate="yes" xml:space="preserve">
          <source>To keep your development environment organized, create local branches to hold your work. These should be branched directly off of the &lt;code&gt;master&lt;/code&gt; branch.</source>
          <target state="translated">開発環境を整理しておくには、作業を保持するローカルブランチを作成します。これらは、 &lt;code&gt;master&lt;/code&gt; ブランチから直接分岐する必要があります。</target>
        </trans-unit>
        <trans-unit id="ed15e68b5d5ddb1a5eac675c1fa1b7728f73a211" translate="yes" xml:space="preserve">
          <source>To learn more about Electron, check out the &lt;a href=&quot;../index&quot;&gt;official guides&lt;/a&gt;.</source>
          <target state="translated">Electronの詳細については、&lt;a href=&quot;../index&quot;&gt;公式ガイド&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="5eb56f09c3545396b2b393c036db839a1eb319a5" translate="yes" xml:space="preserve">
          <source>To learn more about how to profile your app's code, familiarize yourself with the Chrome Developer Tools. For advanced analysis looking at multiple processes at once, consider the &lt;a href=&quot;https://www.chromium.org/developers/how-tos/trace-event-profiling-tool&quot;&gt;Chrome Tracing&lt;/a&gt; tool.</source>
          <target state="translated">アプリのコードをプロファイリングする方法の詳細については、Chromeデベロッパーツールをよく理解してください。複数のプロセスを一度に調べる高度な分析については、&lt;a href=&quot;https://www.chromium.org/developers/how-tos/trace-event-profiling-tool&quot;&gt;Chromeトレース&lt;/a&gt;ツールを検討してください。</target>
        </trans-unit>
        <trans-unit id="04001b7ea1807aaa75db17fdc8adb329cd137bff" translate="yes" xml:space="preserve">
          <source>To load an extension in Electron, you need to download it in Chrome browser, locate its filesystem path, and then load it by calling the &lt;code&gt;BrowserWindow.addDevToolsExtension(extension)&lt;/code&gt; API.</source>
          <target state="translated">Electronに拡張機能をロードするには、Chromeブラウザーで拡張機能をダウンロードし、そのファイルシステムパスを見つけて、 &lt;code&gt;BrowserWindow.addDevToolsExtension(extension)&lt;/code&gt; APIを呼び出して拡張機能をロードする必要があります。</target>
        </trans-unit>
        <trans-unit id="b11e1cccba51582071babe69bdb83ad084720bf0" translate="yes" xml:space="preserve">
          <source>To make changes to an existing pull request, make the changes to your local branch, add a new commit with those changes, and push those to your fork. GitHub will automatically update the pull request.</source>
          <target state="translated">既存のプルリクエストに変更を加えるには、ローカルブランチに変更を加え、その変更を反映させた新しいコミットを追加してフォークにプッシュします。GitHub は自動的にプルリクエストを更新します。</target>
        </trans-unit>
        <trans-unit id="6cc374466c77bb64066e086d7846917a973bb54a" translate="yes" xml:space="preserve">
          <source>To make the whole window draggable, you can add &lt;code&gt;-webkit-app-region: drag&lt;/code&gt; as &lt;code&gt;body&lt;/code&gt;'s style:</source>
          <target state="translated">ウィンドウ全体をドラッグ可能にするには、 &lt;code&gt;-webkit-app-region: drag&lt;/code&gt; を &lt;code&gt;body&lt;/code&gt; のスタイルとして追加します。</target>
        </trans-unit>
        <trans-unit id="5a22faf7d03a74e4f98b51a02b353bd6dbd352d6" translate="yes" xml:space="preserve">
          <source>To make things worse, since the context of previously installed callbacks has been released, exceptions will be raised in the main process when the &lt;code&gt;close&lt;/code&gt; event is emitted.</source>
          <target state="translated">さらに悪いことに、以前にインストールされたコールバックのコンテキストが解放されているため、 &lt;code&gt;close&lt;/code&gt; イベントが発生したときにメインプロセスで例外が発生します。</target>
        </trans-unit>
        <trans-unit id="6be6d28efdc52ad1117beb553fe9d81ab0a3642b" translate="yes" xml:space="preserve">
          <source>To mark an image as a template image, its filename should end with the word &lt;code&gt;Template&lt;/code&gt;. For example:</source>
          <target state="translated">画像をテンプレート画像としてマークするには、ファイル名の最後に &lt;code&gt;Template&lt;/code&gt; という単語を付ける必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="eaaedd2e34a09c107bb5a45d9574cc60a4ab158c" translate="yes" xml:space="preserve">
          <source>To mitigate &lt;a href=&quot;https://github.com/joyent/node/issues/6960&quot;&gt;issues&lt;/a&gt; around long path names on Windows, slightly speed up &lt;code&gt;require&lt;/code&gt; and conceal your source code from cursory inspection, you can choose to package your app into an &lt;a href=&quot;https://github.com/electron/asar&quot;&gt;asar&lt;/a&gt; archive with little changes to your source code.</source>
          <target state="translated">Windowsでの長いパス名&lt;a href=&quot;https://github.com/joyent/node/issues/6960&quot;&gt;に関する問題&lt;/a&gt;を軽減し、 &lt;code&gt;require&lt;/code&gt; をわずかに高速化して、&lt;a href=&quot;https://github.com/electron/asar&quot;&gt;大まかな&lt;/a&gt;検査からソースコードを隠すには、ソースコードをほとんど変更せずに、アプリをasarアーカイブにパッケージ化することを選択できます。</target>
        </trans-unit>
        <trans-unit id="e59976da07624b27321e633f5ef547712edea416" translate="yes" xml:space="preserve">
          <source>To only prevent the menu shortcuts, use &lt;a href=&quot;#contentssetignoremenushortcutsignore&quot;&gt;&lt;code&gt;setIgnoreMenuShortcuts&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">メニューショートカットのみを防ぐには、&lt;a href=&quot;#contentssetignoremenushortcutsignore&quot;&gt; &lt;code&gt;setIgnoreMenuShortcuts&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="3ae2ef97ad246fd568ca95450776bb3ef862015f" translate="yes" xml:space="preserve">
          <source>To only prevent the menu shortcuts, use &lt;a href=&quot;#contentssetignoremenushortcutsignore-experimental&quot;&gt;&lt;code&gt;setIgnoreMenuShortcuts&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">メニューショートカットのみを防止するには、&lt;a href=&quot;#contentssetignoremenushortcutsignore-experimental&quot;&gt; &lt;code&gt;setIgnoreMenuShortcuts&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="90f0083b5eda825f3490ee81c9de396b40b89071" translate="yes" xml:space="preserve">
          <source>To package the electron build as a distributable zip file:</source>
          <target state="translated">電子ビルドを配布可能なzipファイルとしてパッケージ化する。</target>
        </trans-unit>
        <trans-unit id="22c6a4877344517ec16ea540f865b8729592c937" translate="yes" xml:space="preserve">
          <source>To prevent the binary from being downloaded when you install all npm dependencies you can set the environment variable &lt;code&gt;ELECTRON_SKIP_BINARY_DOWNLOAD&lt;/code&gt;. E.g.:</source>
          <target state="translated">すべてのnpm依存関係をインストールするときにバイナリがダウンロードされないようにするには、環境変数 &lt;code&gt;ELECTRON_SKIP_BINARY_DOWNLOAD&lt;/code&gt; を設定します。例えば：</target>
        </trans-unit>
        <trans-unit id="bb20ff96df7bb87cf4b64d4d68fe70198411e33d" translate="yes" xml:space="preserve">
          <source>To reply to a synchronous message, you need to set &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="translated">同期メッセージに返信するには、 &lt;code&gt;event.returnValue&lt;/code&gt; を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="52731de70ab505398e042288f82d22b4b62ea53a" translate="yes" xml:space="preserve">
          <source>To run &lt;code&gt;standard&lt;/code&gt; with parameters, run &lt;code&gt;npm run lint-js --&lt;/code&gt; followed by arguments you want passed to &lt;code&gt;standard&lt;/code&gt;.</source>
          <target state="translated">パラメータを指定して &lt;code&gt;standard&lt;/code&gt; を実行するには、 &lt;code&gt;npm run lint-js --&lt;/code&gt; し、 &lt;code&gt;standard&lt;/code&gt; 渡す引数を続けます。</target>
        </trans-unit>
        <trans-unit id="759b704e28bdbd278a96a850f7b1ef8b04b41207" translate="yes" xml:space="preserve">
          <source>To run all unit tests, run &lt;code&gt;npm run test&lt;/code&gt;. The unit tests are an Electron app (surprise!) that can be found in the &lt;code&gt;spec&lt;/code&gt; folder. Note that it has its own &lt;code&gt;package.json&lt;/code&gt; and that its dependencies are therefore not defined in the top-level &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">すべての単体テストを実行するには、 &lt;code&gt;npm run test&lt;/code&gt; を実行します。単体テストは、 &lt;code&gt;spec&lt;/code&gt; フォルダーにあるElectronアプリ（サプライズ！）です。独自の &lt;code&gt;package.json&lt;/code&gt; があるため、その依存関係は最上位の &lt;code&gt;package.json&lt;/code&gt; で定義されていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="138c6055d6c73471cf79da84bcdfdc892a907248" translate="yes" xml:space="preserve">
          <source>To run only specific tests matching a pattern, run &lt;code&gt;npm run test -- -g=PATTERN&lt;/code&gt;, replacing the &lt;code&gt;PATTERN&lt;/code&gt; with a regex that matches the tests you would like to run. As an example: If you want to run only IPC tests, you would run &lt;code&gt;npm run test -- -g ipc&lt;/code&gt;.</source>
          <target state="translated">パターンに一致する特定のテストのみを実行するには、 &lt;code&gt;npm run test -- -g=PATTERN&lt;/code&gt; 、 &lt;code&gt;PATTERN&lt;/code&gt; を実行するテストに一致する正規表現に置き換えます。例として：IPCテストのみを実行する場合は、 &lt;code&gt;npm run test -- -g ipc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51c2435e3a7822307d7e10d8f692cde7f20b73b0" translate="yes" xml:space="preserve">
          <source>To run the example above, you'll need to (assuming you've got a terminal open in the directory you want to run the example):</source>
          <target state="translated">上記の例を実行するには、以下のようにする必要があります(例を実行したいディレクトリでターミナルを開いていると仮定します)。</target>
        </trans-unit>
        <trans-unit id="f7e7584aabec056898642b189b3afbce2cecca5d" translate="yes" xml:space="preserve">
          <source>To run the tests with the release build use:</source>
          <target state="translated">リリースビルドでテストを実行するには、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="8009b90e66db98d88c6daae363a11a712812a402" translate="yes" xml:space="preserve">
          <source>To run the tests, you'll first need to build the test modules against the same version of Node.js that was built as part of the build process. To generate build headers for the modules to compile against, run the following under &lt;code&gt;src/&lt;/code&gt; directory.</source>
          <target state="translated">テストを実行するには、最初に、ビルドプロセスの一部としてビルドされたのと同じバージョンのNode.jsに対してテストモジュールをビルドする必要があります。コンパイルするモジュールのビルドヘッダーを生成するには、 &lt;code&gt;src/&lt;/code&gt; ディレクトリで次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="b9dee6267b4a11d6b3b7ee07a577aa652d682335" translate="yes" xml:space="preserve">
          <source>To run the tests, you'll first need to build the test modules against the same version of node.js that was built as part of the build process.</source>
          <target state="translated">テストを実行するには、まず、ビルドプロセスの一部としてビルドされたnode.jsと同じバージョンのnode.jsに対してテストモジュールをビルドする必要があります。</target>
        </trans-unit>
        <trans-unit id="9b2887a93e64f649eae19b06ff8afea5e0f6b6c6" translate="yes" xml:space="preserve">
          <source>To run your app, read &lt;a href=&quot;../tutorial/first-app#running-your-app&quot;&gt;Run your app&lt;/a&gt;.</source>
          <target state="translated">アプリを実行するには、「アプリの&lt;a href=&quot;../tutorial/first-app#running-your-app&quot;&gt;実行」をお&lt;/a&gt;読みください。</target>
        </trans-unit>
        <trans-unit id="e2b8a31f4c674a8c0e51ed5573bf71e8567479c1" translate="yes" xml:space="preserve">
          <source>To run your app, read &lt;a href=&quot;../tutorial/quick-start#run-your-app&quot;&gt;Run your app&lt;/a&gt;.</source>
          <target state="translated">アプリを実行するには、アプリの&lt;a href=&quot;../tutorial/quick-start#run-your-app&quot;&gt;実行をご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f968f92b95e355e02a1dd7820829d42539dc4405" translate="yes" xml:space="preserve">
          <source>To run your app, read &lt;a href=&quot;tutorial/first-app#running-your-app&quot;&gt;Run your app&lt;/a&gt;.</source>
          <target state="translated">アプリを実行するには、「アプリの&lt;a href=&quot;tutorial/first-app#running-your-app&quot;&gt;実行」をお&lt;/a&gt;読みください。</target>
        </trans-unit>
        <trans-unit id="b32975b2ce04661890aef18c5a9ab35defb6fe1f" translate="yes" xml:space="preserve">
          <source>To see all of this in action, check out Electron Fiddle's source code, &lt;a href=&quot;https://github.com/electron/fiddle/blob/master/forge.config.js&quot;&gt;especially its &lt;code&gt;electron-forge&lt;/code&gt; configuration file&lt;/a&gt;.</source>
          <target state="translated">これらすべての動作を確認するには、Electron Fiddleのソースコード、&lt;a href=&quot;https://github.com/electron/fiddle/blob/master/forge.config.js&quot;&gt;特にその &lt;code&gt;electron-forge&lt;/code&gt; 構成ファイルを&lt;/a&gt;確認してください。</target>
        </trans-unit>
        <trans-unit id="8ae3943df93a2edc6b67c5200e4420f36f33a41c" translate="yes" xml:space="preserve">
          <source>To see the list of available build configuration options, run &lt;code&gt;gn args out/Testing --list&lt;/code&gt;.</source>
          <target state="translated">使用可能なビルド構成オプションのリストを表示するには、 &lt;code&gt;gn args out/Testing --list&lt;/code&gt; 実行します。</target>
        </trans-unit>
        <trans-unit id="37bbe8e5228dc6749fde0cae6154f716f4567ba1" translate="yes" xml:space="preserve">
          <source>To see the version of Chromium, V8, and Node in every version of Electron, visit &lt;a href=&quot;https://atom.io/download/electron/index.json&quot;&gt;atom.io/download/electron/index.json&lt;/a&gt;.</source>
          <target state="translated">ElectronのすべてのバージョンのChromium、V8、Nodeのバージョンを確認するには、&lt;a href=&quot;https://atom.io/download/electron/index.json&quot;&gt;atom.io / download / electron / index.json&lt;/a&gt;にアクセスしてください。</target>
        </trans-unit>
        <trans-unit id="2bd233e19f7025a06604bec2f15d79b3937fd257" translate="yes" xml:space="preserve">
          <source>To send an asynchronous message back to the sender, you can use &lt;code&gt;event.reply(...)&lt;/code&gt;. This helper method will automatically handle messages coming from frames that aren't the main frame (e.g. iframes) whereas &lt;code&gt;event.sender.send(...)&lt;/code&gt; will always send to the main frame.</source>
          <target state="translated">非同期メッセージを送信者に送り返すには、 &lt;code&gt;event.reply(...)&lt;/code&gt; を使用できます。このヘルパーメソッドは、メインフレームではないフレーム（iframeなど）からのメッセージを自動的に処理しますが、 &lt;code&gt;event.sender.send(...)&lt;/code&gt; は常にメインフレームに送信します。</target>
        </trans-unit>
        <trans-unit id="78326a0e3e662b5b7da6627f6ebd436d69be9d63" translate="yes" xml:space="preserve">
          <source>To send an asynchronous message back to the sender, you can use &lt;code&gt;event.sender.send(...)&lt;/code&gt;.</source>
          <target state="translated">非同期メッセージを送信者に送り返すには、 &lt;code&gt;event.sender.send(...)&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="8386e2428fd6948c966d737cf05cf49544a7f4c7" translate="yes" xml:space="preserve">
          <source>To set the locale, you'll want to use a command line switch at app startup, which may be found &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/chrome-command-line-switches.md&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">ロケールを設定するには、アプリの起動時にコマンドラインスイッチを使用する必要があり&lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/chrome-command-line-switches.md&quot;&gt;ます&lt;/a&gt;。これはここにあります。</target>
        </trans-unit>
        <trans-unit id="707fae82070ef95245ee34a49781b3d477250ac1" translate="yes" xml:space="preserve">
          <source>To set the locale, you'll want to use a command line switch at app startup, which may be found &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/command-line-switches.md&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">ロケールを設定するには、アプリの起動時にコマンドラインスイッチを使用する必要があり&lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/command-line-switches.md&quot;&gt;ます&lt;/a&gt;。これはここにあります。</target>
        </trans-unit>
        <trans-unit id="44732a0693526243610a24679af596ed0afe6e89" translate="yes" xml:space="preserve">
          <source>To set the overlay icon for a window, you can use the &lt;a href=&quot;../api/browser-window#winsetoverlayiconoverlay-description-windows&quot;&gt;BrowserWindow.setOverlayIcon&lt;/a&gt; API:</source>
          <target state="translated">ウィンドウのオーバーレイアイコンを設定するには、&lt;a href=&quot;../api/browser-window#winsetoverlayiconoverlay-description-windows&quot;&gt;BrowserWindow.setOverlayIcon&lt;/a&gt; APIを使用できます。</target>
        </trans-unit>
        <trans-unit id="f8a1bbc2b74aa5b679f3954780a9c90c88c34e6c" translate="yes" xml:space="preserve">
          <source>To set the overlay icon for a window, you need to use the &lt;a href=&quot;../api/browser-window#winsetoverlayiconoverlay-description-windows&quot;&gt;BrowserWindow.setOverlayIcon&lt;/a&gt; API.</source>
          <target state="translated">ウィンドウのオーバーレイアイコンを設定するには、&lt;a href=&quot;../api/browser-window#winsetoverlayiconoverlay-description-windows&quot;&gt;BrowserWindow.setOverlayIconAPI&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="1340d6882dfdf3b3b05299450c3543fcee177e66" translate="yes" xml:space="preserve">
          <source>To set the overlay icon for a window, you need to use the &lt;a href=&quot;api/browser-window#winsetoverlayiconoverlay-description-windows&quot;&gt;BrowserWindow.setOverlayIcon&lt;/a&gt; API.</source>
          <target state="translated">ウィンドウのオーバーレイアイコンを設定するには、&lt;a href=&quot;api/browser-window#winsetoverlayiconoverlay-description-windows&quot;&gt;BrowserWindow.setOverlayIconAPI&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="43de2852433ec9717112fe92c661c36b0b6c183a" translate="yes" xml:space="preserve">
          <source>To set the represented file of window, you can use the &lt;a href=&quot;../api/browser-window#winsetrepresentedfilenamefilename-macos&quot;&gt;BrowserWindow.setRepresentedFilename&lt;/a&gt; and &lt;a href=&quot;../api/browser-window#winsetdocumenteditededited-macos&quot;&gt;BrowserWindow.setDocumentEdited&lt;/a&gt; APIs.</source>
          <target state="translated">ウィンドウの表示ファイルを設定するには、&lt;a href=&quot;../api/browser-window#winsetrepresentedfilenamefilename-macos&quot;&gt;BrowserWindow.setRepresentedFilename&lt;/a&gt;および&lt;a href=&quot;../api/browser-window#winsetdocumenteditededited-macos&quot;&gt;BrowserWindow.setDocumentEditedAPIを&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="9d3134410f655117fd543faac8e5d4e1d1535eb4" translate="yes" xml:space="preserve">
          <source>To set the represented file of window, you can use the &lt;a href=&quot;../api/browser-window#winsetrepresentedfilenamefilename-macos&quot;&gt;BrowserWindow.setRepresentedFilename&lt;/a&gt; and &lt;a href=&quot;../api/browser-window#winsetdocumenteditededited-macos&quot;&gt;BrowserWindow.setDocumentEdited&lt;/a&gt; APIs:</source>
          <target state="translated">ウィンドウの表示ファイルを設定するには、&lt;a href=&quot;../api/browser-window#winsetrepresentedfilenamefilename-macos&quot;&gt;BrowserWindow.setRepresentedFilename&lt;/a&gt;および&lt;a href=&quot;../api/browser-window#winsetdocumenteditededited-macos&quot;&gt;BrowserWindow.setDocumentEdited&lt;/a&gt; APIを使用できます。</target>
        </trans-unit>
        <trans-unit id="76d84b3dc02f0d0c7ac3e55aa55edd864e41bd99" translate="yes" xml:space="preserve">
          <source>To set the represented file of window, you can use the &lt;a href=&quot;api/browser-window#winsetrepresentedfilenamefilename-macos&quot;&gt;BrowserWindow.setRepresentedFilename&lt;/a&gt; and &lt;a href=&quot;api/browser-window#winsetdocumenteditededited-macos&quot;&gt;BrowserWindow.setDocumentEdited&lt;/a&gt; APIs.</source>
          <target state="translated">ウィンドウの表示ファイルを設定するには、&lt;a href=&quot;api/browser-window#winsetrepresentedfilenamefilename-macos&quot;&gt;BrowserWindow.setRepresentedFilename&lt;/a&gt;および&lt;a href=&quot;api/browser-window#winsetdocumenteditededited-macos&quot;&gt;BrowserWindow.setDocumentEditedAPIを&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="53abbd93da29f60e22ddf799c60a02716a35fd22" translate="yes" xml:space="preserve">
          <source>To set thumbnail toolbar in your application, you need to use &lt;a href=&quot;../api/browser-window#winsetthumbarbuttonsbuttons-windows&quot;&gt;BrowserWindow.setThumbarButtons&lt;/a&gt;</source>
          <target state="translated">アプリケーションでサムネイルツールバーを設定するには、&lt;a href=&quot;../api/browser-window#winsetthumbarbuttonsbuttons-windows&quot;&gt;BrowserWindow.setThumbarButtons&lt;/a&gt;を使用する必要があります</target>
        </trans-unit>
        <trans-unit id="d9e61fc82fd97ad899cc6e55e7fa87939ae06702" translate="yes" xml:space="preserve">
          <source>To set thumbnail toolbar in your application, you need to use &lt;a href=&quot;api/browser-window#winsetthumbarbuttonsbuttons-windows&quot;&gt;BrowserWindow.setThumbarButtons&lt;/a&gt;</source>
          <target state="translated">アプリケーションでサムネイルツールバーを設定するには、&lt;a href=&quot;api/browser-window#winsetthumbarbuttonsbuttons-windows&quot;&gt;BrowserWindow.setThumbarButtons&lt;/a&gt;を使用する必要があります</target>
        </trans-unit>
        <trans-unit id="0df5d95b16857776caec66f1453ba88b6aea30e8" translate="yes" xml:space="preserve">
          <source>To set user tasks for your application, you can use &lt;a href=&quot;../api/app#appsetusertaskstasks-windows&quot;&gt;app.setUserTasks&lt;/a&gt; API.</source>
          <target state="translated">アプリケーションのユーザータスクを設定するには、&lt;a href=&quot;../api/app#appsetusertaskstasks-windows&quot;&gt;app.setUserTasksAPI&lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="2e7b89714cfd1f9e95379e400b5c9a51b1d0399a" translate="yes" xml:space="preserve">
          <source>To set user tasks for your application, you can use &lt;a href=&quot;../api/app#appsetusertaskstasks-windows&quot;&gt;app.setUserTasks&lt;/a&gt; API:</source>
          <target state="translated">アプリケーションのユーザータスクを設定するには、&lt;a href=&quot;../api/app#appsetusertaskstasks-windows&quot;&gt;app.setUserTasks&lt;/a&gt; API を使用できます。</target>
        </trans-unit>
        <trans-unit id="e5406376f2af9e6a995cae90e6e9a4263420d867" translate="yes" xml:space="preserve">
          <source>To set user tasks for your application, you can use &lt;a href=&quot;api/app#appsetusertaskstasks-windows&quot;&gt;app.setUserTasks&lt;/a&gt; API.</source>
          <target state="translated">アプリケーションのユーザータスクを設定するには、&lt;a href=&quot;api/app#appsetusertaskstasks-windows&quot;&gt;app.setUserTasksAPI&lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="a81bd770c7f6f6cdbd653536bb6464061030de2e" translate="yes" xml:space="preserve">
          <source>To set your custom dock menu, you can use the &lt;code&gt;app.dock.setMenu&lt;/code&gt; API, which is only available on macOS:</source>
          <target state="translated">カスタムドックメニューを設定するには、macOSでのみ利用可能な &lt;code&gt;app.dock.setMenu&lt;/code&gt; APIを使用できます。</target>
        </trans-unit>
        <trans-unit id="dc8c6162f39eccd9e0a2c6c7b4af7f42bc6101f3" translate="yes" xml:space="preserve">
          <source>To set your custom dock menu, you need to use the &lt;a href=&quot;../api/dock#docksetmenumenu-macos&quot;&gt;&lt;code&gt;app.dock.setMenu&lt;/code&gt;&lt;/a&gt; API, which is only available on macOS.</source>
          <target state="translated">カスタムドックメニューを設定するには、macOSでのみ使用可能な&lt;a href=&quot;../api/dock#docksetmenumenu-macos&quot;&gt; &lt;code&gt;app.dock.setMenu&lt;/code&gt; API&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="0d7abf3477aa502dfde99503c16908b293c13123" translate="yes" xml:space="preserve">
          <source>To set your custom dock menu, you need to use the &lt;a href=&quot;api/dock#docksetmenumenu-macos&quot;&gt;&lt;code&gt;app.dock.setMenu&lt;/code&gt;&lt;/a&gt; API, which is only available on macOS.</source>
          <target state="translated">カスタムドックメニューを設定するには、macOSでのみ使用可能な&lt;a href=&quot;api/dock#docksetmenumenu-macos&quot;&gt; &lt;code&gt;app.dock.setMenu&lt;/code&gt; API&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="8a666dc29720fb7935c3be8fe07a209272af61f3" translate="yes" xml:space="preserve">
          <source>To share data between web pages (the renderer processes) the simplest way is to use HTML5 APIs which are already available in browsers. Good candidates are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Storage&quot;&gt;Storage API&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage&quot;&gt;&lt;code&gt;localStorage&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage&quot;&gt;&lt;code&gt;sessionStorage&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API&quot;&gt;IndexedDB&lt;/a&gt;.</source>
          <target state="translated">Webページ（レンダラープロセス）間でデータを共有する最も簡単な方法は、ブラウザーで既に利用可能なHTML5 APIを使用することです。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage&quot;&gt; &lt;code&gt;localStorage&lt;/code&gt; &lt;/a&gt;な候補は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Storage&quot;&gt;Storage API&lt;/a&gt;、localStorage、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage&quot;&gt; &lt;code&gt;sessionStorage&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API&quot;&gt;IndexedDB&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="3d881d9cecc44abbf952278e2ff0f958d75a17eb" translate="yes" xml:space="preserve">
          <source>To show notifications in the Main process, you need to use the &lt;a href=&quot;../api/notification&quot;&gt;Notification&lt;/a&gt; module.</source>
          <target state="translated">メインプロセスで通知を表示するには、&lt;a href=&quot;../api/notification&quot;&gt;通知&lt;/a&gt;モジュールを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2294b6f2f82d890554a7c1faf453bfcadb3c5ee0" translate="yes" xml:space="preserve">
          <source>To show notifications in the Main process, you need to use the &lt;a href=&quot;api/notification&quot;&gt;Notification&lt;/a&gt; module.</source>
          <target state="translated">メインプロセスで通知を表示するには、&lt;a href=&quot;api/notification&quot;&gt;通知&lt;/a&gt;モジュールを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="80978885a5cca2faa70b28de96dc12416111ed37" translate="yes" xml:space="preserve">
          <source>To show the arguments and local variables for the current frame, run &lt;code&gt;frame variable&lt;/code&gt; (or &lt;code&gt;fr v&lt;/code&gt;), which will show you that the app is currently setting the name to &quot;Electron&quot;.</source>
          <target state="translated">現在のフレームの引数とローカル変数を表示するには、 &lt;code&gt;frame variable&lt;/code&gt; （または &lt;code&gt;fr v&lt;/code&gt; ）を実行します。これにより、アプリが現在名前を「電子」に設定していることが示されます。</target>
        </trans-unit>
        <trans-unit id="fddaf77e7ce491807b3aa2c1d85652d19b49d5f1" translate="yes" xml:space="preserve">
          <source>To solve this, you can turn off node integration in Electron:</source>
          <target state="translated">これを解決するには、Electronのノード統合をオフにします。</target>
        </trans-unit>
        <trans-unit id="db94cc8aa1602bd9aa33ff256eb11de62cfa9705" translate="yes" xml:space="preserve">
          <source>To speed up subsequent builds, you can use &lt;a href=&quot;https://github.com/mozilla/sccache&quot;&gt;sccache&lt;/a&gt;. Add the GN arg &lt;code&gt;cc_wrapper = &quot;sccache&quot;&lt;/code&gt; by running &lt;code&gt;gn args out/Testing&lt;/code&gt; to bring up an editor and adding a line to the end of the file.</source>
          <target state="translated">後続のビルドを高速化するには、&lt;a href=&quot;https://github.com/mozilla/sccache&quot;&gt;sccache&lt;/a&gt;を使用できます。 &lt;code&gt;gn args out/Testing&lt;/code&gt; を実行してエディターを起動し、ファイルの最後に行を追加して、GN arg &lt;code&gt;cc_wrapper = &quot;sccache&quot;&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="018ce00287de800e1bc7a9996bf6fa900c0870b1" translate="yes" xml:space="preserve">
          <source>To speed up subsequent builds, you can use &lt;a href=&quot;https://github.com/mozilla/sccache&quot;&gt;sccache&lt;/a&gt;. Add the GN arg &lt;code&gt;cc_wrapper=&quot;sccache&quot;&lt;/code&gt; by running &lt;code&gt;gn args out/Default&lt;/code&gt; to bring up an editor.</source>
          <target state="translated">後続のビルドを高速化するには、&lt;a href=&quot;https://github.com/mozilla/sccache&quot;&gt;sccache&lt;/a&gt;を使用できます。 &lt;code&gt;gn args out/Default&lt;/code&gt; を実行してGN arg &lt;code&gt;cc_wrapper=&quot;sccache&quot;&lt;/code&gt; を追加し、エディターを起動します。</target>
        </trans-unit>
        <trans-unit id="236acba2594374972c395b112e7bcb5d45e8802c" translate="yes" xml:space="preserve">
          <source>To start a debugging session, open up PowerShell/CMD and execute your debug build of Electron, using the application to open as a parameter.</source>
          <target state="translated">デバッグセッションを開始するには、PowerShell/CMDを開き、パラメータとして開くアプリケーションを使用してElectronのデバッグビルドを実行します。</target>
        </trans-unit>
        <trans-unit id="5544da53f4bc06710edf2e9e252890e3639c3316" translate="yes" xml:space="preserve">
          <source>To start a debugging session, open up Terminal and start &lt;code&gt;lldb&lt;/code&gt;, passing a debug build of Electron as a parameter.</source>
          <target state="translated">デバッグセッションを開始するには、ターミナルを開いて &lt;code&gt;lldb&lt;/code&gt; を起動し、Electronのデバッグビルドをパラメーターとして渡します。</target>
        </trans-unit>
        <trans-unit id="e747539b0630d30d1c58db33b2368f5127045eae" translate="yes" xml:space="preserve">
          <source>To start a debugging session, open up Terminal and start &lt;code&gt;lldb&lt;/code&gt;, passing a non-release build of Electron as a parameter.</source>
          <target state="translated">デバッグセッションを開始するには、ターミナルを開いて &lt;code&gt;lldb&lt;/code&gt; を起動し、Electronの非リリースビルドをパラメーターとして渡します。</target>
        </trans-unit>
        <trans-unit id="0eb63a04be761f3e87cc275edfda130d469b1440" translate="yes" xml:space="preserve">
          <source>To start the process, ensure that you fulfill the requirements for signing and notarizing your app:</source>
          <target state="translated">プロセスを開始するには、アプリに署名して公証するための要件を満たしていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="625de64eef7edca92d3a8deb4d77c60a951c81e5" translate="yes" xml:space="preserve">
          <source>To submit a bug report:</source>
          <target state="translated">バグレポートを提出するには</target>
        </trans-unit>
        <trans-unit id="78ffac4244e08269a135e721e89ed63e507c1497" translate="yes" xml:space="preserve">
          <source>To submit your app to the Mac App Store, you first must get a certificate from Apple. You can follow these &lt;a href=&quot;https://github.com/nwjs/nw.js/wiki/Mac-App-Store-%28MAS%29-Submission-Guideline#first-steps&quot;&gt;existing guides&lt;/a&gt; on web.</source>
          <target state="translated">アプリをMac App Storeに送信するには、まずAppleから証明書を取得する必要があります。これらの&lt;a href=&quot;https://github.com/nwjs/nw.js/wiki/Mac-App-Store-%28MAS%29-Submission-Guideline#first-steps&quot;&gt;既存のガイド&lt;/a&gt;をウェブでフォローできます。</target>
        </trans-unit>
        <trans-unit id="e4d200a68b265bf8731b41f173a65599adfffaf2" translate="yes" xml:space="preserve">
          <source>To test In-App Purchase in development with Electron you'll have to change the &lt;code&gt;CFBundleIdentifier&lt;/code&gt; in &lt;code&gt;node_modules/electron/dist/Electron.app/Contents/Info.plist&lt;/code&gt;. You have to replace &lt;code&gt;com.github.electron&lt;/code&gt; by the bundle identifier of the application you created with iTunes Connect.</source>
          <target state="translated">Electronで開発中のアプリ内購入をテストするには、 &lt;code&gt;node_modules/electron/dist/Electron.app/Contents/Info.plist&lt;/code&gt; の &lt;code&gt;CFBundleIdentifier&lt;/code&gt; を変更する必要があります。 &lt;code&gt;com.github.electron&lt;/code&gt; は、iTunes Connectで作成したアプリケーションのバンドルID に置き換える必要があります。</target>
        </trans-unit>
        <trans-unit id="f0200b2cf9828f35bb99fcf4bce14c1a27a03302" translate="yes" xml:space="preserve">
          <source>To test your app, use a Windows on Arm device running Windows 10 (version 1903 or later). Make sure that you copy your application over to the target device - Chromium's sandbox will not work correctly when loading your application assets from a network location.</source>
          <target state="translated">アプリをテストするには、Windows 10(バージョン1903以降)を実行しているWindows on Armデバイスを使用します。アプリケーションをターゲットデバイスにコピーしたことを確認してください-ネットワーク上の場所からアプリケーション資産をロードすると、Chromium のサンドボックスが正しく動作しません。</target>
        </trans-unit>
        <trans-unit id="51b0c5981c1aa5f79fb7a3fb544da1122e2b5376" translate="yes" xml:space="preserve">
          <source>To test your application without rebuilding Electron, &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/tutorial/application-distribution.md&quot;&gt;place&lt;/a&gt; your app source into Electron's resource directory.</source>
          <target state="translated">電子を再構築せずにアプリケーションをテストするには、&lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/tutorial/application-distribution.md&quot;&gt;配置&lt;/a&gt;エレクトロンのリソースディレクトリにアプリのソースを。</target>
        </trans-unit>
        <trans-unit id="df4472e1028687ef284600836e0e0e5f604e7e9d" translate="yes" xml:space="preserve">
          <source>To update an existing project to use the latest stable version:</source>
          <target state="translated">既存のプロジェクトを更新して、最新の安定版を使用する場合。</target>
        </trans-unit>
        <trans-unit id="14946c79bea6612f29f09cac40fff40ee35a7f20" translate="yes" xml:space="preserve">
          <source>To update these vendored dependencies, run the following command:</source>
          <target state="translated">これらのベンダ依存関係を更新するには、以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="7b33399d6a3a53a5596de14648855fea8eb538ae" translate="yes" xml:space="preserve">
          <source>To use a Node.js module, you first need to install it as a dependency:</source>
          <target state="translated">Node.jsモジュールを使用するには、まず依存関係としてインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="14d273c2dd2c5afa0c5a3e83f844df016da311d8" translate="yes" xml:space="preserve">
          <source>To use an &lt;code&gt;asar&lt;/code&gt; archive to replace the &lt;code&gt;app&lt;/code&gt; folder, you need to rename the archive to &lt;code&gt;app.asar&lt;/code&gt;, and put it under Electron's resources directory like below, and Electron will then try to read the archive and start from it.</source>
          <target state="translated">&lt;code&gt;asar&lt;/code&gt; アーカイブを使用して &lt;code&gt;app&lt;/code&gt; フォルダーを置き換えるには、アーカイブの名前を &lt;code&gt;app.asar&lt;/code&gt; に変更し、以下のようにElectronのリソースディレクトリの下に置く必要があります。そうすると、Electronはアーカイブを読み取って、そこから開始します。</target>
        </trans-unit>
        <trans-unit id="03c772527450b0386733b6257997ac8c564f6771" translate="yes" xml:space="preserve">
          <source>To use this feature on Windows, your application has to be registered as a handler of the file type of the document, otherwise the file won't appear in JumpList even after you have added it. You can find everything on registering your application in &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/cc144104(VS.85).aspx&quot;&gt;Application Registration&lt;/a&gt;.</source>
          <target state="translated">Windowsでこの機能を使用するには、アプリケーションをドキュメントのファイルタイプのハンドラーとして登録する必要があります。そうしないと、ファイルを追加した後でもファイルがJumpListに表示されません。&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/cc144104(VS.85).aspx&quot;&gt;アプリケーションの登録&lt;/a&gt;に関するすべては、アプリケーション登録にあります。</target>
        </trans-unit>
        <trans-unit id="a764db62a5aed8e8a91f5505b0f4e66ae5610ea1" translate="yes" xml:space="preserve">
          <source>To verify whether the plugin works, you can use following ways:</source>
          <target state="translated">プラグインが動作するかどうかを確認するには、以下の方法があります。</target>
        </trans-unit>
        <trans-unit id="d6bdbe606f5d198cccc294fd940237813e099447" translate="yes" xml:space="preserve">
          <source>To verify whether widevine works, you can use following ways:</source>
          <target state="translated">widevineが動作するかどうかを確認するには、以下の方法があります。</target>
        </trans-unit>
        <trans-unit id="138ee3b70ac9c2ba41cda1b38a449d69c9ab29fb" translate="yes" xml:space="preserve">
          <source>To verify whether you are using the correct built-in module, you can print the path of the &lt;code&gt;electron&lt;/code&gt; module:</source>
          <target state="translated">正しい組み込みモジュールを使用しているかどうかを確認するには、 &lt;code&gt;electron&lt;/code&gt; モジュールのパスを出力します。</target>
        </trans-unit>
        <trans-unit id="9e482f53de830d6be7d4d2e636bf876b8286c63b" translate="yes" xml:space="preserve">
          <source>To work around this Electron uses a &lt;code&gt;gyp&lt;/code&gt; variable &lt;code&gt;libchromiumcontent_component&lt;/code&gt; to control which link settings to use and only generates one target when running &lt;code&gt;gyp&lt;/code&gt;.</source>
          <target state="translated">この電子を回避するには使用しています &lt;code&gt;gyp&lt;/code&gt; 変数 &lt;code&gt;libchromiumcontent_component&lt;/code&gt; リンクの設定は、使用するコントロールにすると、実行している場合にのみつのターゲットを生成 &lt;code&gt;gyp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb526b8d3ad35764a32346d65c25890a44d1af38" translate="yes" xml:space="preserve">
          <source>To work with Electron's &lt;code&gt;autoUpdater&lt;/code&gt; on Windows, which uses &lt;a href=&quot;https://github.com/Squirrel/Squirrel.Windows&quot;&gt;Squirrel&lt;/a&gt;, you'll want to set the launch path to Update.exe, and pass arguments that specify your application name. For example:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Squirrel/Squirrel.Windows&quot;&gt;Squirrel&lt;/a&gt;を使用するWindows でElectronの &lt;code&gt;autoUpdater&lt;/code&gt; を使用するには、起動パスをUpdate.exeに設定し、アプリケーション名を指定する引数を渡します。例えば：</target>
        </trans-unit>
        <trans-unit id="3af816e16b0457a9e1d11e58102711f0cb3ed2e3" translate="yes" xml:space="preserve">
          <source>To write automated tests for your Electron app, you will need a way to &quot;drive&quot; your application. &lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt; is a commonly-used solution which lets you emulate user actions via &lt;a href=&quot;http://webdriver.io/&quot;&gt;WebDriver&lt;/a&gt;. However, it's also possible to write your own custom driver using node's builtin IPC-over-STDIO. The benefit of a custom driver is that it tends to require less overhead than Spectron, and lets you expose custom methods to your test suite.</source>
          <target state="translated">Electronアプリの自動テストを作成するには、アプリケーションを「駆動」する方法が必要です。&lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt;は、&lt;a href=&quot;http://webdriver.io/&quot;&gt;WebDriver&lt;/a&gt;を介してユーザーアクションをエミュレートできる、一般的に使用されるソリューションです。ただし、ノードの組み込みIPC-over-STDIOを使用して独自のカスタムドライバーを作成することもできます。カスタムドライバーの利点は、Spectronよりもオーバーヘッドが少なくなる傾向があり、カスタムメソッドをテストスイートに公開できることです。</target>
        </trans-unit>
        <trans-unit id="eb3acee33f73782cfebaf8d5494698943ac82839" translate="yes" xml:space="preserve">
          <source>To write automated tests for your Electron app, you will need a way to &quot;drive&quot; your application. &lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt; is a commonly-used solution which lets you emulate user actions via &lt;a href=&quot;https://webdriver.io/&quot;&gt;WebDriver&lt;/a&gt;. However, it's also possible to write your own custom driver using node's builtin IPC-over-STDIO. The benefit of a custom driver is that it tends to require less overhead than Spectron, and lets you expose custom methods to your test suite.</source>
          <target state="translated">Electronアプリの自動テストを作成するには、アプリケーションを「駆動」する方法が必要になります。&lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt;は、&lt;a href=&quot;https://webdriver.io/&quot;&gt;WebDriver&lt;/a&gt;を介してユーザーアクションをエミュレートできる一般的に使用されるソリューションです。ただし、ノードの組み込みIPC-over-STDIOを使用して独自のカスタムドライバーを作成することもできます。カスタムドライバーの利点は、Spectronよりもオーバーヘッドが少なくて済む傾向があり、カスタムメソッドをテストスイートに公開できることです。</target>
        </trans-unit>
        <trans-unit id="dc15e82b571ba36cf12acd814afab9275855f8d3" translate="yes" xml:space="preserve">
          <source>Together with the broader Linux community, Canonical aims to fix many of the common software installation problems with the &lt;a href=&quot;https://snapcraft.io/&quot;&gt;&lt;code&gt;snapcraft&lt;/code&gt;&lt;/a&gt; project. Snaps are containerized software packages that include required dependencies, auto-update, and work on all major Linux distributions without system modification.</source>
          <target state="translated">Canonicalは、より広範なLinuxコミュニティと共に、&lt;a href=&quot;https://snapcraft.io/&quot;&gt; &lt;code&gt;snapcraft&lt;/code&gt; &lt;/a&gt;プロジェクトでよくあるソフトウェアインストールの問題の多くを修正することを目指しています。スナップはコンテナ化されたソフトウェアパッケージで、必要な依存関係、自動更新が含まれ、システムを変更せずにすべての主要なLinuxディストリビューションで機能します。</target>
        </trans-unit>
        <trans-unit id="4c3393e6946ce208ee91b3c6282944582d53deeb" translate="yes" xml:space="preserve">
          <source>Toggles the developer tools.</source>
          <target state="translated">開発者ツールを切り替えます。</target>
        </trans-unit>
        <trans-unit id="a184a355d96f3b5bb82bdf2bbbe311db60f45275" translate="yes" xml:space="preserve">
          <source>Toggles the visibility of the tab bar if native tabs are enabled and there is only one tab in the current window.</source>
          <target state="translated">ネイティブ タブが有効で、現在のウィンドウにタブが 1 つしかない場合に、タブ バーの表示をトグルします。</target>
        </trans-unit>
        <trans-unit id="e8a1234b8442f09d8965e48d93a16e10fa398baa" translate="yes" xml:space="preserve">
          <source>Tonga</source>
          <target state="translated">Tonga</target>
        </trans-unit>
        <trans-unit id="335493d3f301fe647db78cb561ecdbed66562d95" translate="yes" xml:space="preserve">
          <source>TouchBar</source>
          <target state="translated">TouchBar</target>
        </trans-unit>
        <trans-unit id="0c4d11d98521b9e3a04335843746d0c845e00434" translate="yes" xml:space="preserve">
          <source>TouchBar()</source>
          <target state="translated">TouchBar()</target>
        </trans-unit>
        <trans-unit id="7fa38b05de66f7910a21f4d906f8cc628d90ca28" translate="yes" xml:space="preserve">
          <source>TouchBarButton</source>
          <target state="translated">TouchBarButton</target>
        </trans-unit>
        <trans-unit id="5d516c8d5062d745ca89aca0c0636feef4256e4b" translate="yes" xml:space="preserve">
          <source>TouchBarButton()</source>
          <target state="translated">TouchBarButton()</target>
        </trans-unit>
        <trans-unit id="1e658ca652dc7cf8d1afe67e288e1e431f489a2f" translate="yes" xml:space="preserve">
          <source>TouchBarColorPicker</source>
          <target state="translated">TouchBarColorPicker</target>
        </trans-unit>
        <trans-unit id="e587f05813f29d0ca1a6a67532fecb6dbbaf3045" translate="yes" xml:space="preserve">
          <source>TouchBarColorPicker()</source>
          <target state="translated">TouchBarColorPicker()</target>
        </trans-unit>
        <trans-unit id="8476ad84a3e7647a69a2fa04d2bc2ad0052a7ed6" translate="yes" xml:space="preserve">
          <source>TouchBarGroup</source>
          <target state="translated">TouchBarGroup</target>
        </trans-unit>
        <trans-unit id="8961a19c9732fe688c3b2f08aa96d3e03edbd681" translate="yes" xml:space="preserve">
          <source>TouchBarGroup()</source>
          <target state="translated">TouchBarGroup()</target>
        </trans-unit>
        <trans-unit id="b631ced2bb7a5365f1f90282dea656ec9bdff7a0" translate="yes" xml:space="preserve">
          <source>TouchBarLabel</source>
          <target state="translated">TouchBarLabel</target>
        </trans-unit>
        <trans-unit id="814e42ac235ef886129864e36a49942ec38f3533" translate="yes" xml:space="preserve">
          <source>TouchBarLabel()</source>
          <target state="translated">TouchBarLabel()</target>
        </trans-unit>
        <trans-unit id="96e7a0a02fd3a7b0d25f91ca529bcf5f1a61e028" translate="yes" xml:space="preserve">
          <source>TouchBarOtherItemsProxy</source>
          <target state="translated">TouchBarOtherItemsProxy</target>
        </trans-unit>
        <trans-unit id="1bca3a8cee81209e72702787d88ea1e66521c841" translate="yes" xml:space="preserve">
          <source>TouchBarPopover</source>
          <target state="translated">TouchBarPopover</target>
        </trans-unit>
        <trans-unit id="598a9cdce168be93d906672cf1fee3cd73c9deaa" translate="yes" xml:space="preserve">
          <source>TouchBarPopover()</source>
          <target state="translated">TouchBarPopover()</target>
        </trans-unit>
        <trans-unit id="f2b4219fdb173d37ed9db9bca90085af07318678" translate="yes" xml:space="preserve">
          <source>TouchBarScrubber</source>
          <target state="translated">TouchBarScrubber</target>
        </trans-unit>
        <trans-unit id="ff948832d63cabad8d30a79ac9c548eadb0c1e75" translate="yes" xml:space="preserve">
          <source>TouchBarScrubber()</source>
          <target state="translated">TouchBarScrubber()</target>
        </trans-unit>
        <trans-unit id="aff517aa05d9f47530930183c664e196cc47fb54" translate="yes" xml:space="preserve">
          <source>TouchBarSegmentedControl</source>
          <target state="translated">TouchBarSegmentedControl</target>
        </trans-unit>
        <trans-unit id="22244bd6bc51e3847b14dfd1ff0a38985f8b668b" translate="yes" xml:space="preserve">
          <source>TouchBarSegmentedControl()</source>
          <target state="translated">TouchBarSegmentedControl()</target>
        </trans-unit>
        <trans-unit id="c34377065533da82b98a6571f52025902f468e9c" translate="yes" xml:space="preserve">
          <source>TouchBarSlider</source>
          <target state="translated">TouchBarSlider</target>
        </trans-unit>
        <trans-unit id="c85c4423f99b612b06975db964729d81f8317287" translate="yes" xml:space="preserve">
          <source>TouchBarSlider()</source>
          <target state="translated">TouchBarSlider()</target>
        </trans-unit>
        <trans-unit id="8052a0f622f7e225bb7d929f9c958baca8cc113f" translate="yes" xml:space="preserve">
          <source>TouchBarSpacer</source>
          <target state="translated">TouchBarSpacer</target>
        </trans-unit>
        <trans-unit id="80679ee9452522f3ef41acd219ae925fc972bca0" translate="yes" xml:space="preserve">
          <source>TouchBarSpacer()</source>
          <target state="translated">TouchBarSpacer()</target>
        </trans-unit>
        <trans-unit id="8eb94eb9fb79247bd9f2c92528c7479c3a46b880" translate="yes" xml:space="preserve">
          <source>Trace data will be written into &lt;code&gt;resultFilePath&lt;/code&gt; if it is not empty or into a temporary file. The actual file path will be passed to &lt;code&gt;callback&lt;/code&gt; if it's not &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">トレースデータは、空でない場合、または一時ファイルに、 &lt;code&gt;resultFilePath&lt;/code&gt; に書き込まれます。実際のファイルパスが &lt;code&gt;null&lt;/code&gt; でない場合、 &lt;code&gt;callback&lt;/code&gt; に渡されます。</target>
        </trans-unit>
        <trans-unit id="ff4593d1dac1c0e1b04e17867cc922f1b7388c20" translate="yes" xml:space="preserve">
          <source>Trace data will be written into &lt;code&gt;resultFilePath&lt;/code&gt;. If &lt;code&gt;resultFilePath&lt;/code&gt; is empty or not provided, trace data will be written to a temporary file, and the path will be returned in the promise.</source>
          <target state="translated">トレースデータは &lt;code&gt;resultFilePath&lt;/code&gt; に書き込まれます。場合 &lt;code&gt;resultFilePath&lt;/code&gt; が提供空かない、トレースデータを一時ファイルに書き込まれます、そしてパスが約束に返されます。</target>
        </trans-unit>
        <trans-unit id="189e764bd7a0ba516fa9ffe449a83061f22344f4" translate="yes" xml:space="preserve">
          <source>TraceCategoriesAndOptions Object</source>
          <target state="translated">TraceCategoriesAndOptions オブジェクト</target>
        </trans-unit>
        <trans-unit id="036552ddc0d70ae1f7546f8d3e30783891d06d2e" translate="yes" xml:space="preserve">
          <source>TraceConfig Object</source>
          <target state="translated">TraceConfig オブジェクト</target>
        </trans-unit>
        <trans-unit id="1a7b7c1b33d161f45804730c70b75175dccd9883" translate="yes" xml:space="preserve">
          <source>Transaction</source>
          <target state="translated">Transaction</target>
        </trans-unit>
        <trans-unit id="b6df58ae2c955171f3f63369c3b409ac3f47437a" translate="yes" xml:space="preserve">
          <source>Transaction Object</source>
          <target state="translated">トランザクションオブジェクト</target>
        </trans-unit>
        <trans-unit id="f5d6ceea00cdeff51f69c7425677184ed82a318a" translate="yes" xml:space="preserve">
          <source>Transparent window</source>
          <target state="translated">透明な窓</target>
        </trans-unit>
        <trans-unit id="013bb54709f260923e589ffdb661091d24b41c15" translate="yes" xml:space="preserve">
          <source>Transparent windows are not resizable. Setting &lt;code&gt;resizable&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; may make a transparent window stop working on some platforms.</source>
          <target state="translated">透明なウィンドウはサイズ変更できません。 &lt;code&gt;resizable&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、一部のプラットフォームで透明ウィンドウが機能しなくなる場合があります。</target>
        </trans-unit>
        <trans-unit id="89e581f1b56f0e9ddaa6c57b46dc7d03c4f48a4d" translate="yes" xml:space="preserve">
          <source>Travis CI</source>
          <target state="translated">トラビスCI</target>
        </trans-unit>
        <trans-unit id="633356038eb15022ba73cebe34cd1ee789910ae8" translate="yes" xml:space="preserve">
          <source>Tray</source>
          <target state="translated">Tray</target>
        </trans-unit>
        <trans-unit id="c6bc3a7fadd316ee0e8df47780da2a2e741b2bb4" translate="yes" xml:space="preserve">
          <source>Tray()</source>
          <target state="translated">Tray()</target>
        </trans-unit>
        <trans-unit id="d53787fafd500e2de1869c47328c7f1cdd8c4a56" translate="yes" xml:space="preserve">
          <source>Treating an &lt;code&gt;asar&lt;/code&gt; Archive as a Normal File</source>
          <target state="translated">&lt;code&gt;asar&lt;/code&gt; アーカイブを通常のファイルとして扱う</target>
        </trans-unit>
        <trans-unit id="4049d8199d0e8910ecca4bf26fac606638c4745c" translate="yes" xml:space="preserve">
          <source>Triaging a Bug Report</source>
          <target state="translated">バグレポートのトリアージ</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="7c9932fde75af54cd79618211ea08d9352211b82" translate="yes" xml:space="preserve">
          <source>Troubleshooting: Symbols will not load</source>
          <target state="translated">トラブルシューティング。シンボルが読み込まれない</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">True</target>
        </trans-unit>
        <trans-unit id="647772087bb3ffaddf12a39b19b1f3af65cc4f4a" translate="yes" xml:space="preserve">
          <source>Try not to be discouraged. If you feel that a review is unfair, say so or seek the input of another project contributor. Often such comments are the result of a reviewer having taken insufficient time to review and are not ill-intended. Such difficulties can often be resolved with a bit of patience. That said, reviewers should be expected to provide helpful feeback.</source>
          <target state="translated">落胆しないようにしてください。レビューが不公平だと感じたら、そう言うか、他のプロジェクトの貢献者に意見を求めてください。多くの場合、そのようなコメントはレビュアーがレビューに十分な時間を割けなかった結果であり、悪意があるわけではありません。このような問題は、少しの忍耐で解決できることが多いです。つまり、レビュアーには、有益なフィードバックを提供することが期待されるべきです。</target>
        </trans-unit>
        <trans-unit id="4400e493105bf43a3c960cdaf95219eb3c6135be" translate="yes" xml:space="preserve">
          <source>Try not to be discouraged. If you feel that a review is unfair, say so or seek the input of another project contributor. Often such comments are the result of a reviewer having taken insufficient time to review and are not ill-intended. Such difficulties can often be resolved with a bit of patience. That said, reviewers should be expected to provide helpful feedback.</source>
          <target state="translated">落胆しないようにしてください。レビューが不公平だと感じたら、そう言うか、他のプロジェクトの貢献者に意見を求めてください。多くの場合、そのようなコメントはレビュアーがレビューに十分な時間を割けなかった結果であり、悪意があるわけではありません。このような問題は、少しの忍耐で解決できることが多いです。とはいえ、レビュアーは有益なフィードバックを提供することが期待されています。</target>
        </trans-unit>
        <trans-unit id="2bb8b36fac23fa3979988a718963e7852b71e041" translate="yes" xml:space="preserve">
          <source>Try reinstalling 32bit Node.js.</source>
          <target state="translated">32bitのNode.jsを再インストールしてみてください。</target>
        </trans-unit>
        <trans-unit id="081d8985ad85020ad71cd9b3a5927e8da7533a1c" translate="yes" xml:space="preserve">
          <source>Try to build Debug version first: &lt;code&gt;$ ./script/build.py -c D&lt;/code&gt;</source>
          <target state="translated">最初にデバッグバージョンをビルドしてみてください： &lt;code&gt;$ ./script/build.py -c D&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e57e130472b51c44c72a400c7d3be435ac9b4df8" translate="yes" xml:space="preserve">
          <source>Try to close all windows. The &lt;code&gt;before-quit&lt;/code&gt; event will be emitted first. If all windows are successfully closed, the &lt;code&gt;will-quit&lt;/code&gt; event will be emitted and by default the application will terminate.</source>
          <target state="translated">すべてのウィンドウを閉じてみてください。 &lt;code&gt;before-quit&lt;/code&gt; イベントが最初に放出されます。すべてのウィンドウが正常に閉じられると、 &lt;code&gt;will-quit&lt;/code&gt; イベントが発生し、デフォルトでアプリケーションが終了します。</target>
        </trans-unit>
        <trans-unit id="256563822009fe94811c222969c5e2c6a749538d" translate="yes" xml:space="preserve">
          <source>Try to close the window. This has the same effect as a user manually clicking the close button of the window. The web page may cancel the close though. See the &lt;a href=&quot;#event-close&quot;&gt;close event&lt;/a&gt;.</source>
          <target state="translated">ウィンドウを閉じてみてください。これは、ユーザーがウィンドウの閉じるボタンを手動でクリックするのと同じ効果があります。ただし、ウェブページによってクローズがキャンセルされる場合があります。&lt;a href=&quot;#event-close&quot;&gt;closeイベントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="dbb76ebdc564c9078996dc8c525a72a33d356bb8" translate="yes" xml:space="preserve">
          <source>Try to identify complex errors as soon as possible.</source>
          <target state="translated">複雑なエラーをできるだけ早く特定するようにしましょう。</target>
        </trans-unit>
        <trans-unit id="776cb86bacdaaa25efc1728d1eea429b5f47a6aa" translate="yes" xml:space="preserve">
          <source>Trying this Example</source>
          <target state="translated">この例を試す</target>
        </trans-unit>
        <trans-unit id="ab650a1a4b8fdf3a4053ce8d277d335dd82e5447" translate="yes" xml:space="preserve">
          <source>Turkish</source>
          <target state="translated">Turkish</target>
        </trans-unit>
        <trans-unit id="24a49d0317fbd7a414f3e95189f38e30cc5010a7" translate="yes" xml:space="preserve">
          <source>Turkmen</source>
          <target state="translated">Turkmen</target>
        </trans-unit>
        <trans-unit id="bd15c40e964cd2e04e618ee34c723a4dae5d9d4e" translate="yes" xml:space="preserve">
          <source>Turning this Node application into an Electron application is quite simple - we merely replace the &lt;code&gt;node&lt;/code&gt; runtime with the &lt;code&gt;electron&lt;/code&gt; runtime.</source>
          <target state="translated">このノードアプリケーションを電子アプリケーションに変換するのは非常に簡単です。 &lt;code&gt;node&lt;/code&gt; ランタイムを &lt;code&gt;electron&lt;/code&gt; ランタイムに置き換えるだけです。</target>
        </trans-unit>
        <trans-unit id="f3b5da9c85bc9c8f8d4c6eb947b8c953c70538df" translate="yes" xml:space="preserve">
          <source>Twi</source>
          <target state="translated">Twi</target>
        </trans-unit>
        <trans-unit id="5c157813d6a9d562b35e6141a001d6b665a3e7ae" translate="yes" xml:space="preserve">
          <source>Two modes of rendering can be used and only the dirty area is passed in the &lt;code&gt;'paint'&lt;/code&gt; event to be more efficient. The rendering can be stopped, continued and the frame rate can be set. The specified frame rate is a top limit value, when there is nothing happening on a webpage, no frames are generated. The maximum frame rate is 60, because above that there is no benefit, only performance loss.</source>
          <target state="translated">2つのレンダリングモードを使用でき、ダーティエリアのみがより効率的になるように &lt;code&gt;'paint'&lt;/code&gt; イベントで渡されます。レンダリングを停止して続行し、フレームレートを設定できます。指定されたフレームレートは上限値です。Webページで何も発生していない場合、フレームは生成されません。最大のフレームレートは60です。これを超えると、利点はなく、パフォーマンスの低下のみです。</target>
        </trans-unit>
        <trans-unit id="a50e1c16f6c549a02f6bf8bbd72bb525bb1933b3" translate="yes" xml:space="preserve">
          <source>Two-Phase Project Generation</source>
          <target state="translated">二相プロジェクト生成</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="c92613bc1eaaa6bc7c638d86b441dfc1c68a6421" translate="yes" xml:space="preserve">
          <source>Type the following commands in Windbg to print why symbols are not loading:</source>
          <target state="translated">シンボルがロードされていない理由を表示するには、Windbg に以下のコマンドを入力します。</target>
        </trans-unit>
        <trans-unit id="509b7e5ada7baea26206520cbb4be241d1ec641e" translate="yes" xml:space="preserve">
          <source>Typed Arrays (such as &lt;code&gt;Uint8Array&lt;/code&gt;, &lt;code&gt;Uint16Array&lt;/code&gt;, &lt;code&gt;Uint32Array&lt;/code&gt; and so on) will be transferred as such, instead of being converted to Node.js &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">型付き配列（ &lt;code&gt;Uint8Array&lt;/code&gt; 、 &lt;code&gt;Uint16Array&lt;/code&gt; 、 &lt;code&gt;Uint32Array&lt;/code&gt; など）は、Node.js &lt;code&gt;Buffer&lt;/code&gt; に変換されるのではなく、そのまま転送されます。</target>
        </trans-unit>
        <trans-unit id="803b118cfb81a531ff535afb012118cd3a5133f1" translate="yes" xml:space="preserve">
          <source>Types of Breaking Changes</source>
          <target state="translated">ブレイキングチェンジの種類</target>
        </trans-unit>
        <trans-unit id="e7a6dd07f95b4c6f7c4b347a13e6040d694421b6" translate="yes" xml:space="preserve">
          <source>Typically, a window is flashed to inform the user that the window requires attention but that it does not currently have the keyboard focus.</source>
          <target state="translated">通常、ウィンドウが点滅して、ウィンドウには注意が必要だが、現在はキーボードフォーカスがないことをユーザーに知らせます。</target>
        </trans-unit>
        <trans-unit id="f702986ce89b08277340029f967e398eff5a13e4" translate="yes" xml:space="preserve">
          <source>Typically, you create a desktop application for an operating system (OS) using each operating system's specific native application frameworks. Electron makes it possible to write your application once using technologies that you already know.</source>
          <target state="translated">一般的には、OS(オペレーティング・システム)用のデスクトップ・アプリケーションを作成する際には、各OS固有のネイティブ・アプリケーション・フレームワークを使用します。Electronでは、すでに知っている技術を使って、一度でアプリケーションを作成することができます。</target>
        </trans-unit>
        <trans-unit id="c939d742cd76ccd1b0cf7085be495fe793f85b85" translate="yes" xml:space="preserve">
          <source>Ubuntu 12.04 and newer</source>
          <target state="translated">Ubuntu 12.04以降</target>
        </trans-unit>
        <trans-unit id="dfeb6378e4eaf7efe811d862650fd7d819e16d0f" translate="yes" xml:space="preserve">
          <source>Ubuntu 14.04 and newer</source>
          <target state="translated">Ubuntu 14.04以降</target>
        </trans-unit>
        <trans-unit id="4468dbbd88ac1de887a792a10dfd24d7c9748b5f" translate="yes" xml:space="preserve">
          <source>Uighur</source>
          <target state="translated">Uighur</target>
        </trans-unit>
        <trans-unit id="515451058797b204e188dd70f8d20f32dacca327" translate="yes" xml:space="preserve">
          <source>Ukrainian</source>
          <target state="translated">Ukrainian</target>
        </trans-unit>
        <trans-unit id="90eda1ffe8c2bb94c4f6823e592a424f7cca5549" translate="yes" xml:space="preserve">
          <source>Uncheck the &lt;code&gt;prerelease&lt;/code&gt; checkbox if you're publishing a stable release; leave it checked for beta releases.</source>
          <target state="translated">安定版リリースを公開する場合は、 &lt;code&gt;prerelease&lt;/code&gt; チェックボックスをオフにします。ベータリリースについてはチェックしたままにしておきます。</target>
        </trans-unit>
        <trans-unit id="73e0c2b86d9125103bbe82a69fcb0c2879380e80" translate="yes" xml:space="preserve">
          <source>Under &lt;em&gt;Scale and layout&lt;/em&gt;, make sure that the device is set to 100%.</source>
          <target state="translated">[&lt;em&gt;スケールとレイアウト]&lt;/em&gt;で、デバイスが100％に設定されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="1d9350a1281eb5e0c8e86eddd456139893c903bb" translate="yes" xml:space="preserve">
          <source>Under macOS Catalina our former Tray implementation breaks. Apple's native substitute doesn't support changing the highlighting behavior.</source>
          <target state="translated">macOS Catalinaでは、以前のTrayの実装が壊れてしまいました。Appleのネイティブ代用品はハイライトの動作を変更することをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="50f4e4367731738bb8f1d0502cd03a534b0a423c" translate="yes" xml:space="preserve">
          <source>Under no circumstances should you block this process and the UI thread with long-running operations. Blocking the UI thread means that your entire app will freeze until the main process is ready to continue processing.</source>
          <target state="translated">いかなる場合でも、このプロセスと UI スレッドを長時間実行する操作でブロックする必要はありません。UIスレッドをブロックすると、メインプロセスが処理を継続する準備が整うまでアプリ全体がフリーズします。</target>
        </trans-unit>
        <trans-unit id="75d540f4551f2003b4bc89ba987d18f4a0fe4402" translate="yes" xml:space="preserve">
          <source>Under the hood &lt;code&gt;webview&lt;/code&gt; is implemented with &lt;a href=&quot;https://www.chromium.org/developers/design-documents/oop-iframes&quot;&gt;Out-of-Process iframes (OOPIFs)&lt;/a&gt;. The &lt;code&gt;webview&lt;/code&gt; tag is essentially a custom element using shadow DOM to wrap an &lt;code&gt;iframe&lt;/code&gt; element inside it.</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; は、Webビューは&lt;a href=&quot;https://www.chromium.org/developers/design-documents/oop-iframes&quot;&gt;Out-of-Process iframe（OOPIF）で&lt;/a&gt;実装されています。 &lt;code&gt;webview&lt;/code&gt; タグは、基本的にラップするために、シャドウDOMを使用して、カスタム要素である &lt;code&gt;iframe&lt;/code&gt; その中に要素を。</target>
        </trans-unit>
        <trans-unit id="4a74d6474b779c67451ed4d7e2cfbae97f637ab4" translate="yes" xml:space="preserve">
          <source>Under the hood calling &lt;code&gt;autoUpdater.quitAndInstall()&lt;/code&gt; will close all application windows first, and automatically call &lt;code&gt;app.quit()&lt;/code&gt; after all windows have been closed.</source>
          <target state="translated">呼び出しボンネットの下 &lt;code&gt;autoUpdater.quitAndInstall()&lt;/code&gt; 最初にすべてのアプリケーションウィンドウを閉じて、自動的にコールされます &lt;code&gt;app.quit()&lt;/code&gt; すべてのウィンドウが閉じられた後。</target>
        </trans-unit>
        <trans-unit id="108846efdc37eba245ec3662341e196d3655c210" translate="yes" xml:space="preserve">
          <source>Under the hood this API subscribes to &lt;code&gt;NSDistributedNotificationCenter&lt;/code&gt;, example values of &lt;code&gt;event&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;NSDistributedNotificationCenter&lt;/code&gt; 、このAPIはNSDistributedNotificationCenterにサブスクライブしています。 &lt;code&gt;event&lt;/code&gt; 値の例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="2f068d75221578dcdb4243b950f43fb162c4015a" translate="yes" xml:space="preserve">
          <source>Under the page title must be a one-line description starting with &lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">ページタイトルの下には、 &lt;code&gt;&amp;gt;&lt;/code&gt; で始まる1行の説明が必要です。</target>
        </trans-unit>
        <trans-unit id="28fd4910c04739148e6ad8d1ae923e202e3298b1" translate="yes" xml:space="preserve">
          <source>Unhook the window message.</source>
          <target state="translated">ウィンドウメッセージのフックを解除します。</target>
        </trans-unit>
        <trans-unit id="b40878aaf41e2e78aae513acca8cc9dec321d473" translate="yes" xml:space="preserve">
          <source>Unhooks all of the window messages.</source>
          <target state="translated">すべてのウィンドウメッセージを解除します。</target>
        </trans-unit>
        <trans-unit id="55319d93decd49524c6577ad2944aab8499b8def" translate="yes" xml:space="preserve">
          <source>Unit Tests</source>
          <target state="translated">ユニットテスト</target>
        </trans-unit>
        <trans-unit id="c3b1ac5c155659b69f20177724bff86b1906db38" translate="yes" xml:space="preserve">
          <source>Unity Launcher</source>
          <target state="translated">Unityランチャー</target>
        </trans-unit>
        <trans-unit id="da69b79e01b3821772ba3b0edb40c3e83a7f4075" translate="yes" xml:space="preserve">
          <source>Unity's preferred way of telling your application what to do is to use parameters. You can find these in your app in the global variable &lt;code&gt;process.argv&lt;/code&gt;.</source>
          <target state="translated">Unityが推奨する方法は、パラメーターを使用することです。これらは、グローバル変数 &lt;code&gt;process.argv&lt;/code&gt; のアプリで見つけることができます。</target>
        </trans-unit>
        <trans-unit id="2307dbca6c045be24fb8c7a275e2a0ea94e5143c" translate="yes" xml:space="preserve">
          <source>Unlike Squirrel.Mac, Windows can host updates on S3 or any other static file host. You can read the documents of &lt;a href=&quot;https://github.com/Squirrel/Squirrel.Windows&quot;&gt;Squirrel.Windows&lt;/a&gt; to get more details about how Squirrel.Windows works.</source>
          <target state="translated">Squirrel.Macとは異なり、WindowsはS3またはその他の静的ファイルホストで更新をホストできます。&lt;a href=&quot;https://github.com/Squirrel/Squirrel.Windows&quot;&gt;Squirrel.Windows&lt;/a&gt;のドキュメントを読んで、Squirrel.Windowsの動作の詳細を確認できます。</target>
        </trans-unit>
        <trans-unit id="1200c597f152169e0b75af503d88ca70f8010072" translate="yes" xml:space="preserve">
          <source>Unlike an &lt;code&gt;iframe&lt;/code&gt;, the &lt;code&gt;webview&lt;/code&gt; runs in a separate process than your app. It doesn't have the same permissions as your web page and all interactions between your app and embedded content will be asynchronous. This keeps your app safe from the embedded content. &lt;strong&gt;Note:&lt;/strong&gt; Most methods called on the webview from the host page require a synchronous call to the main process.</source>
          <target state="translated">異なり &lt;code&gt;iframe&lt;/code&gt; 、 &lt;code&gt;webview&lt;/code&gt; あなたのアプリケーションとは別のプロセスで実行されます。ウェブページと同じ権限はなく、アプリと埋め込みコンテンツ間のすべてのやり取りは非同期になります。これにより、アプリが埋め込みコンテンツから保護されます。&lt;strong&gt;注：&lt;/strong&gt;ホストページからWebビューで呼び出されるほとんどのメソッドは、メインプロセスへの同期呼び出しを必要とします。</target>
        </trans-unit>
        <trans-unit id="19f0873ed3db7a1c99ef500734c95e47f28766c2" translate="yes" xml:space="preserve">
          <source>Unlike most projects that use &lt;code&gt;Release&lt;/code&gt; and &lt;code&gt;Debug&lt;/code&gt; as target names, Electron uses &lt;code&gt;R&lt;/code&gt; and &lt;code&gt;D&lt;/code&gt; instead. This is because &lt;code&gt;gyp&lt;/code&gt; randomly crashes if there is only one &lt;code&gt;Release&lt;/code&gt; or &lt;code&gt;Debug&lt;/code&gt; build configuration defined, and Electron only has to generate one target at a time as stated above.</source>
          <target state="translated">ターゲット名として &lt;code&gt;Release&lt;/code&gt; と &lt;code&gt;Debug&lt;/code&gt; を使用するほとんどのプロジェクトとは異なり、エレクトロンは代わりに &lt;code&gt;R&lt;/code&gt; と &lt;code&gt;D&lt;/code&gt; を使用します。これは、 &lt;code&gt;Release&lt;/code&gt; または &lt;code&gt;Debug&lt;/code&gt; ビルド構成が1つしか定義されていない場合に &lt;code&gt;gyp&lt;/code&gt; がランダムにクラッシュし、Electronが上記のように一度に1つのターゲットのみを生成する必要があるためです。</target>
        </trans-unit>
        <trans-unit id="4008cb6ec43b82ad40fbb7adf03f0db639d3a02e" translate="yes" xml:space="preserve">
          <source>Unlike the dock menu in macOS which is a real menu, user tasks in Windows work like application shortcuts such that when user clicks a task, a program will be executed with specified arguments.</source>
          <target state="translated">macOSのドックメニューとは異なり、Windowsのユーザータスクはアプリケーションのショートカットのように動作し、ユーザーがタスクをクリックすると、指定された引数でプログラムが実行されます。</target>
        </trans-unit>
        <trans-unit id="d9e34981d2f2fce3892dc0bb86feff0d855aa798" translate="yes" xml:space="preserve">
          <source>Unlike the dock menu in macOS which is a real menu, user tasks in Windows work like application shortcuts. For example, when a user clicks a task, the program will be executed with specified arguments.</source>
          <target state="translated">macOSのドックメニューが実際のメニューであるのとは異なり、Windowsのユーザータスクはアプリケーションのショートカットのように動作します。例えば、ユーザーがタスクをクリックすると、指定された引数でプログラムが実行されます。</target>
        </trans-unit>
        <trans-unit id="567bb385b1d2763ff6a935ea9cda9d82b68d876b" translate="yes" xml:space="preserve">
          <source>Unloads an extension.</source>
          <target state="translated">拡張機能をアンロードします。</target>
        </trans-unit>
        <trans-unit id="7db0abf33362064713d20a36ff8577b0808f46a7" translate="yes" xml:space="preserve">
          <source>Unmaximizes the window.</source>
          <target state="translated">ウィンドウの最大化を解除します。</target>
        </trans-unit>
        <trans-unit id="9e1c8d33b2fb218a4c98e5abfaac1c1c22046bef" translate="yes" xml:space="preserve">
          <source>Unnecessary or blocking network requests</source>
          <target state="translated">不要またはブロックされたネットワーク要求</target>
        </trans-unit>
        <trans-unit id="82b18a887466ca5f75f3cfa9738ba368f73344fe" translate="yes" xml:space="preserve">
          <source>Unnecessary polyfills</source>
          <target state="translated">不要なポリフィル</target>
        </trans-unit>
        <trans-unit id="44cf60eebc2557dbf1b90656a39b75be20231982" translate="yes" xml:space="preserve">
          <source>Unregisters all of the global shortcuts.</source>
          <target state="translated">すべてのグローバルショートカットの登録を解除します。</target>
        </trans-unit>
        <trans-unit id="e8e31e8e898a3bea8b811ea4163212801fb22340" translate="yes" xml:space="preserve">
          <source>Unregisters any ServiceWorker if present and returns a boolean as response to &lt;code&gt;callback&lt;/code&gt; when the JS promise is fulfilled or false when the JS promise is rejected.</source>
          <target state="translated">ServiceWorkerが存在する場合は登録を解除し、JSプロミスが実行されると &lt;code&gt;callback&lt;/code&gt; への応答としてブール値を返し、JSプロミスが拒否されるとfalse を返します。</target>
        </trans-unit>
        <trans-unit id="326e4726ee69151e636ea8c1d41dcff316e3fbd4" translate="yes" xml:space="preserve">
          <source>Unregisters the custom protocol of &lt;code&gt;scheme&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; のカスタムプロトコルの登録を解除します。</target>
        </trans-unit>
        <trans-unit id="2cd6c69f00f6312aa0612e78f2cd66b8c37b4765" translate="yes" xml:space="preserve">
          <source>Unregisters the global shortcut of &lt;code&gt;accelerator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;accelerator&lt;/code&gt; のグローバルショートカットの登録を解除します。</target>
        </trans-unit>
        <trans-unit id="c41dab5baebbed9be76a98ff3843118b2c6ddb75" translate="yes" xml:space="preserve">
          <source>Unsupported options are:</source>
          <target state="translated">サポートされていないオプションは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="f39d115564bf5ed0f634840937da15cee59d647c" translate="yes" xml:space="preserve">
          <source>Unzip &lt;code&gt;DesktopAppConverter.zip&lt;/code&gt;. From an elevated PowerShell (opened with &quot;run as Administrator&quot;, ensure that your systems execution policy allows us to run everything we intend to run by calling &lt;code&gt;Set-ExecutionPolicy bypass&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DesktopAppConverter.zip&lt;/code&gt; を解凍します。昇格したPowerShell（「管理者として実行」で開いた）から、システム実行ポリシーで &lt;code&gt;Set-ExecutionPolicy bypass&lt;/code&gt; を呼び出して、実行する予定のすべてを実行できることを確認します。</target>
        </trans-unit>
        <trans-unit id="c151b4ffba7904c9686d9d64edf46d911405acb5" translate="yes" xml:space="preserve">
          <source>Update &lt;code&gt;./script/create-dist&lt;/code&gt; in the libcc repo, recreate a &lt;code&gt;dist&lt;/code&gt;, and run Electron bootstrap script once again.</source>
          <target state="translated">libccリポジトリの &lt;code&gt;./script/create-dist&lt;/code&gt; を更新し、 &lt;code&gt;dist&lt;/code&gt; を再作成して、Electronブートストラップスクリプトをもう一度実行します。</target>
        </trans-unit>
        <trans-unit id="6c09f59981de69011a908dd962ad681ee00e70ff" translate="yes" xml:space="preserve">
          <source>Update &lt;code&gt;patches/v8/README.md&lt;/code&gt; with references to all new patches that have been added so that the next person will know which need to be removed.</source>
          <target state="translated">追加されたすべての新しいパッチへの参照を &lt;code&gt;patches/v8/README.md&lt;/code&gt; して、patchs / v8 / README.mdを更新します。これにより、削除する必要があるものが次の人にわかるようになります。</target>
        </trans-unit>
        <trans-unit id="ae874ca79a814080d2848a2f4732d573628b3a7c" translate="yes" xml:space="preserve">
          <source>Update Electron dependencies (crashpad, NodeJS, etc.) if needed</source>
          <target state="translated">必要に応じてElectronの依存関係(crashpad、NodeJSなど)を更新します。</target>
        </trans-unit>
        <trans-unit id="b68d790d085383526e4fe70b927511ff42ac27b8" translate="yes" xml:space="preserve">
          <source>Update Electron docs if necessary</source>
          <target state="translated">必要に応じてElectronドキュメントを更新</target>
        </trans-unit>
        <trans-unit id="7dd802b8ac465ed00335b230a07632379524fb7b" translate="yes" xml:space="preserve">
          <source>Update Electron to build the new crashpad:</source>
          <target state="translated">新しいクラッシュパッドを構築するためにElectronをアップデートします。</target>
        </trans-unit>
        <trans-unit id="1b5704258bfe81d4d5494d284734480bd3b5591c" translate="yes" xml:space="preserve">
          <source>Update Electron to use new version of Node</source>
          <target state="translated">新しいバージョンの Node を使用するために Electron をアップデートします。</target>
        </trans-unit>
        <trans-unit id="89f1cd369f9ccd1b73a732bd0887579b061cd54c" translate="yes" xml:space="preserve">
          <source>Update Electron's Node fork to the desired version</source>
          <target state="translated">Electron's Nodeフォークを希望のバージョンにアップデートします。</target>
        </trans-unit>
        <trans-unit id="c0963902a6d3c64ea4fa4bd6e1ac11cd27f60a0d" translate="yes" xml:space="preserve">
          <source>Update Electron's code</source>
          <target state="translated">エレクトロンのコードを更新</target>
        </trans-unit>
        <trans-unit id="13930880f3d9ee45b0d0378ec577ced08b7eefd7" translate="yes" xml:space="preserve">
          <source>Update Electron's submodule references:</source>
          <target state="translated">Electronのサブモジュールリファレンスを更新しました。</target>
        </trans-unit>
        <trans-unit id="3f6522cb05792f7b06aae5b657ab0cb682d4fbed" translate="yes" xml:space="preserve">
          <source>Update Node.js build configuration</source>
          <target state="translated">Node.jsのビルド設定を更新する</target>
        </trans-unit>
        <trans-unit id="d5ad6642c61f43d206b37b7bb0d629fa79378873" translate="yes" xml:space="preserve">
          <source>Update submodules</source>
          <target state="translated">サブモジュールの更新</target>
        </trans-unit>
        <trans-unit id="62ba0ef5c933a6cc364aaf59d93b982fe5513bbe" translate="yes" xml:space="preserve">
          <source>Update the Chromium snapshot</source>
          <target state="translated">Chromiumのスナップショットを更新する</target>
        </trans-unit>
        <trans-unit id="c76d18079a076ee34ffc62b5b9bd0909da356dce" translate="yes" xml:space="preserve">
          <source>Updates</source>
          <target state="translated">Updates</target>
        </trans-unit>
        <trans-unit id="25b0c759bba28de3882ad3d2f7f55f54607ecc95" translate="yes" xml:space="preserve">
          <source>Updates the current activity if its type matches &lt;code&gt;type&lt;/code&gt;, merging the entries from &lt;code&gt;userInfo&lt;/code&gt; into its current &lt;code&gt;userInfo&lt;/code&gt; dictionary.</source>
          <target state="translated">その型が一致した場合、現在の活動を更新 &lt;code&gt;type&lt;/code&gt; からのエントリマージ、 &lt;code&gt;userInfo&lt;/code&gt; その電流に &lt;code&gt;userInfo&lt;/code&gt; 辞書。</target>
        </trans-unit>
        <trans-unit id="0b75156079e47e4423e694dd8f6ec2bb97a3c0b4" translate="yes" xml:space="preserve">
          <source>Updating Applications</source>
          <target state="translated">アプリケーションの更新</target>
        </trans-unit>
        <trans-unit id="e2efd63db73117b31624864adcdc69ac4565c402" translate="yes" xml:space="preserve">
          <source>Updating Crashpad</source>
          <target state="translated">クラッシュパッドの更新</target>
        </trans-unit>
        <trans-unit id="7df9a4cf600a48f460195272caa546a2cd3708c2" translate="yes" xml:space="preserve">
          <source>Updating Dependencies</source>
          <target state="translated">依存関係の更新</target>
        </trans-unit>
        <trans-unit id="89eb6c30b10f77e0f178e1abb52ebacc430c839c" translate="yes" xml:space="preserve">
          <source>Updating Electron's Node fork</source>
          <target state="translated">Electron の Node fork の更新</target>
        </trans-unit>
        <trans-unit id="9a81a500d5cf03724e731e808fb6bf0500126ae6" translate="yes" xml:space="preserve">
          <source>Updating NodeJS</source>
          <target state="translated">NodeJSの更新</target>
        </trans-unit>
        <trans-unit id="b4e05d2558877418381634b6c035d6e7ab91f135" translate="yes" xml:space="preserve">
          <source>Updating V8 Patches</source>
          <target state="translated">V8パッチの更新</target>
        </trans-unit>
        <trans-unit id="e219d0cda9462c23edda98f7c6e06e508ee9e3d3" translate="yes" xml:space="preserve">
          <source>Updating an Appveyor Azure Image</source>
          <target state="translated">Appveyor Azureイメージの更新</target>
        </trans-unit>
        <trans-unit id="5b6da6490d82a5e59b6d9bce413a362293efd586" translate="yes" xml:space="preserve">
          <source>Upgrade &lt;code&gt;libcc&lt;/code&gt; to a new Chromium version</source>
          <target state="translated">&lt;code&gt;libcc&lt;/code&gt; を新しいChromiumバージョンにアップグレードする</target>
        </trans-unit>
        <trans-unit id="11838ab63da7ddf11e05e03a26a221a4b7451db2" translate="yes" xml:space="preserve">
          <source>Upgrade &lt;code&gt;vendor/node&lt;/code&gt; to the Node release that corresponds to the v8 version used in the new Chromium release. See the v8 versions in Node on</source>
          <target state="translated">&lt;code&gt;vendor/node&lt;/code&gt; を、新しいChromiumリリースで使用されているv8バージョンに対応するノードリリースにアップグレードします。ノードのv8バージョンを参照してください</target>
        </trans-unit>
        <trans-unit id="05bd7b2591991724533bf052488cd85bf42cb58f" translate="yes" xml:space="preserve">
          <source>Upgrade libcc to a new Chromium version</source>
          <target state="translated">libcc を新しい Chromium バージョンにアップグレードする</target>
        </trans-unit>
        <trans-unit id="401981c07c69965b662f4b943801eb3b3786de7c" translate="yes" xml:space="preserve">
          <source>Upgrading Chromium</source>
          <target state="translated">Chromiumのアップグレード</target>
        </trans-unit>
        <trans-unit id="2a6b5d6211f87abb1f0a301f178f0a2c9decb313" translate="yes" xml:space="preserve">
          <source>Upgrading Crashpad</source>
          <target state="translated">クラッシュパッドのアップグレード</target>
        </trans-unit>
        <trans-unit id="75f5342d57d3320fa279fff311b701a8db76064c" translate="yes" xml:space="preserve">
          <source>Upgrading Node</source>
          <target state="translated">ノードのアップグレード</target>
        </trans-unit>
        <trans-unit id="b8c31d9de2a1da25eced5c138fd5d4771343f121" translate="yes" xml:space="preserve">
          <source>Upgrading Node is much easier than upgrading libchromiumcontent, so fewer conflicts arise if one upgrades libchromiumcontent first, then chooses the upstream Node release whose V8 is closest to it.</source>
          <target state="translated">Node のアップグレードは libchromiumcontent のアップグレードよりもはるかに簡単なので、最初に libchromiumcontent をアップグレードしてから、V8 が最も近い上流の Node リリースを選択すれば、コンフリクトの発生が少なくなります。</target>
        </trans-unit>
        <trans-unit id="323496a6a1ef5c05d6b0e68c4648e0b261e4210e" translate="yes" xml:space="preserve">
          <source>Upload Your App</source>
          <target state="translated">アプリのアップロード</target>
        </trans-unit>
        <trans-unit id="98fe8bc8da2c1e87fed3aa60b84765927174ee46" translate="yes" xml:space="preserve">
          <source>UploadBlob</source>
          <target state="translated">UploadBlob</target>
        </trans-unit>
        <trans-unit id="76b13d6d44902a5a929278f84f087880e382c5ef" translate="yes" xml:space="preserve">
          <source>UploadBlob Object</source>
          <target state="translated">UploadBlob オブジェクト</target>
        </trans-unit>
        <trans-unit id="d74e88682c89ce518077d337cf39a060ffddd230" translate="yes" xml:space="preserve">
          <source>UploadData</source>
          <target state="translated">UploadData</target>
        </trans-unit>
        <trans-unit id="0e9463a47f14a5983008e7710af6e62c04d07539" translate="yes" xml:space="preserve">
          <source>UploadData Object</source>
          <target state="translated">アップロードデータオブジェクト</target>
        </trans-unit>
        <trans-unit id="2f1c9ec91d3e0701ec6ef1cf7bc53a282d27a998" translate="yes" xml:space="preserve">
          <source>UploadFile</source>
          <target state="translated">UploadFile</target>
        </trans-unit>
        <trans-unit id="4f98dd3005abae58ee6d31c3d0e4feab9547cf59" translate="yes" xml:space="preserve">
          <source>UploadFile Object</source>
          <target state="translated">アップロードファイルオブジェクト</target>
        </trans-unit>
        <trans-unit id="f5817a5ce7cda946fe5e88d2a50500643581e67d" translate="yes" xml:space="preserve">
          <source>UploadFileSystem</source>
          <target state="translated">UploadFileSystem</target>
        </trans-unit>
        <trans-unit id="dc893f707805494e41d9e7b0b28e165467191444" translate="yes" xml:space="preserve">
          <source>UploadFileSystem Object</source>
          <target state="translated">アップロードファイルシステムオブジェクト</target>
        </trans-unit>
        <trans-unit id="546fb7fdeaa210c2a8fa63cb2e491ac966080b15" translate="yes" xml:space="preserve">
          <source>UploadRawData</source>
          <target state="translated">UploadRawData</target>
        </trans-unit>
        <trans-unit id="a1b0988bef072ac86f158bc4be77b24c31f30223" translate="yes" xml:space="preserve">
          <source>UploadRawData Object</source>
          <target state="translated">UploadRawDataオブジェクト</target>
        </trans-unit>
        <trans-unit id="9da2267d60241d849ca609a3133cb272ba4cf891" translate="yes" xml:space="preserve">
          <source>Upon receiving &lt;code&gt;dark-mode:system&lt;/code&gt;, we reset the &lt;code&gt;themeSource&lt;/code&gt; to &lt;code&gt;system&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dark-mode:system&lt;/code&gt; を受信し &lt;code&gt;themeSource&lt;/code&gt; 、themeSourceを &lt;code&gt;system&lt;/code&gt; にリセットします。</target>
        </trans-unit>
        <trans-unit id="43b7d8f2ad1227631dbcb1c50cfff169ef84f310" translate="yes" xml:space="preserve">
          <source>Upon receiving &lt;code&gt;dark-mode:toggle&lt;/code&gt;, we check if the dark theme is currently active using the &lt;code&gt;nativeTheme.shouldUseDarkColors&lt;/code&gt; property, and set the &lt;code&gt;themeSource&lt;/code&gt; to the opposite theme.</source>
          <target state="translated">&lt;code&gt;dark-mode:toggle&lt;/code&gt; を受信すると、 &lt;code&gt;nativeTheme.shouldUseDarkColors&lt;/code&gt; プロパティを使用してダークテーマが現在アクティブであるかどうかを確認し、 &lt;code&gt;themeSource&lt;/code&gt; を反対のテーマに設定します。</target>
        </trans-unit>
        <trans-unit id="e5d4ffe94244b55b5a56898ef8056e9e12a92b38" translate="yes" xml:space="preserve">
          <source>Upstream uses multiple repos and so merging into a single repo would result in lost history. So we only update when we&amp;rsquo;re planning a node version bump in electron.</source>
          <target state="translated">アップストリームは複数のリポジトリを使用するため、単一のリポジトリにマージすると履歴が失われます。したがって、electronでノードバージョンのバンプを計画している場合にのみ更新します。</target>
        </trans-unit>
        <trans-unit id="d29214004b0c288b4f0b29b4d91cd2fa7e69f56e" translate="yes" xml:space="preserve">
          <source>Uptime / Support</source>
          <target state="translated">アップタイム/サポート</target>
        </trans-unit>
        <trans-unit id="412e31909b8ad1417c4a39495653fdeba58cd034" translate="yes" xml:space="preserve">
          <source>Urdu</source>
          <target state="translated">Urdu</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="5fcb7086f37e1de0131db574fdec7a805f12c629" translate="yes" xml:space="preserve">
          <source>Usage of &lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; 使い方</target>
        </trans-unit>
        <trans-unit id="80679d1385b6a3a4282a1220f6692230948d4fce" translate="yes" xml:space="preserve">
          <source>Use &quot;will&quot; over &quot;would&quot; when describing outcomes.</source>
          <target state="translated">結果を説明する際には、&quot;will &quot;を &quot;would &quot;よりも &quot;will &quot;を使いましょう。</target>
        </trans-unit>
        <trans-unit id="fa370f4e8e0de6e1e7fbcdbfbc3d67cc385ff29c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Alt&lt;/code&gt; instead of &lt;code&gt;Option&lt;/code&gt;. The &lt;code&gt;Option&lt;/code&gt; key only exists on macOS, whereas the &lt;code&gt;Alt&lt;/code&gt; key is available on all platforms.</source>
          <target state="translated">&lt;code&gt;Option&lt;/code&gt; の代わりに &lt;code&gt;Alt&lt;/code&gt; を使用します。 &lt;code&gt;Option&lt;/code&gt; のに対し、キーは、MacOSの上に存在する &lt;code&gt;Alt&lt;/code&gt; キーは、すべてのプラットフォームで使用可能です。</target>
        </trans-unit>
        <trans-unit id="5a65f9bab24c9edf15a551990726d9c5ff5e2cd3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;^2.0.0&lt;/code&gt; to admit non-breaking &lt;em&gt;reasonably stable&lt;/em&gt; feature work as well as security and bug fixes.</source>
          <target state="translated">&lt;code&gt;^2.0.0&lt;/code&gt; を使用して、セキュリティとバグ修正だけでなく、&lt;em&gt;互換性のある合理的に安定した&lt;/em&gt;機能の動作を許可します。</target>
        </trans-unit>
        <trans-unit id="c9c32b5bb5dd5d96b5063f39a37f87383ce65a9d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;os.tmpdir()&lt;/code&gt; rather than &lt;code&gt;/tmp&lt;/code&gt; when you need to reference the temporary directory.</source>
          <target state="translated">一時ディレクトリを参照する必要がある場合は、 &lt;code&gt;/tmp&lt;/code&gt; ではなく &lt;code&gt;os.tmpdir()&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="05a344a2349faf8abd02a177dc93f2e4f5f197c2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;page-break-before: always; &lt;/code&gt; CSS style to force to print to a new page.</source>
          <target state="translated">&lt;code&gt;page-break-before: always; &lt;/code&gt; 使用します：常に; 新しいページに強制的に印刷するCSSスタイル。</target>
        </trans-unit>
        <trans-unit id="ea4ee24e829d2c36fb98dea70ef7c80505aaa1ad" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;page-break-before: always;&lt;/code&gt; CSS style to force to print to a new page.</source>
          <target state="translated">&lt;code&gt;page-break-before: always;&lt;/code&gt; 使用します。新しいページに印刷することを強制するCSSスタイル。</target>
        </trans-unit>
        <trans-unit id="e95a474007f63ba1306492e9005b3448e6411ffb" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;path.join()&lt;/code&gt; to concatenate filenames.</source>
          <target state="translated">&lt;code&gt;path.join()&lt;/code&gt; を使用してファイル名を連結します。</target>
        </trans-unit>
        <trans-unit id="b303818a9ac4d5c86e8c39b16132a859ee44c906" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;ses.setPermissionRequestHandler()&lt;/code&gt; in all sessions that load remote content</source>
          <target state="translated">リモートコンテンツをロードするすべてのセッションで &lt;code&gt;ses.setPermissionRequestHandler()&lt;/code&gt; を使用します</target>
        </trans-unit>
        <trans-unit id="88d09d1df12c4f91efe012a101d7291b0ae6856c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;sh&lt;/code&gt; instead of &lt;code&gt;cmd&lt;/code&gt; in code blocks (due to the syntax highlighter).</source>
          <target state="translated">コードブロックでは、 &lt;code&gt;cmd&lt;/code&gt; の代わりに &lt;code&gt;sh&lt;/code&gt; を使用します（構文ハイライトのため）。</target>
        </trans-unit>
        <trans-unit id="8a201f1a99c4323d52913b75859b37f4eedf4412" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;~2.0.0&lt;/code&gt; to admit only stability or security related fixes to your &lt;code&gt;2.0.0&lt;/code&gt; release.</source>
          <target state="translated">&lt;code&gt;~2.0.0&lt;/code&gt; を使用して、 &lt;code&gt;2.0.0&lt;/code&gt; リリースに安定性またはセキュリティ関連の修正のみを許可します。</target>
        </trans-unit>
        <trans-unit id="da6e1144d6e775f63a4076487bbe9cde2a96d908" translate="yes" xml:space="preserve">
          <source>Use a current version of Electron</source>
          <target state="translated">最新バージョンのElectronを使用してください。</target>
        </trans-unit>
        <trans-unit id="dbe2a43e8de51a7ab22754c6d4267afd8532bf90" translate="yes" xml:space="preserve">
          <source>Use a module from the archive:</source>
          <target state="translated">アーカイブからモジュールを使用します。</target>
        </trans-unit>
        <trans-unit id="656f588a7a3a22bb068046ce88d0875acbde32d9" translate="yes" xml:space="preserve">
          <source>Use a specified proxy server, which overrides the system setting. This switch only affects requests with HTTP protocol, including HTTPS and WebSocket requests. It is also noteworthy that not all proxy servers support HTTPS and WebSocket requests.</source>
          <target state="translated">指定されたプロキシ サーバーを使用します。このスイッチは、HTTPS および WebSocket リクエストを含む HTTP プロトコルを使用したリクエストにのみ影響します。また、すべてのプロキシ サーバーが HTTPS と WebSocket 要求をサポートしているわけではないことにも注目してください。</target>
        </trans-unit>
        <trans-unit id="ebd01df0d8b53cfe1a964d7a2dc34073b3358bac" translate="yes" xml:space="preserve">
          <source>Use a specified proxy server, which overrides the system setting. This switch only affects requests with HTTP protocol, including HTTPS and WebSocket requests. It is also noteworthy that not all proxy servers support HTTPS and WebSocket requests. The proxy URL does not support username and password authentication &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=615947&quot;&gt;per Chromium issue&lt;/a&gt;.</source>
          <target state="translated">システム設定を上書きする、指定されたプロキシサーバーを使用します。このスイッチは、HTTPSやWebSocketリクエストなど、HTTPプロトコルを使用するリクエストにのみ影響します。すべてのプロキシサーバーがHTTPSおよびWebSocketリクエストをサポートしているわけではないことも注目に値します。プロキシURLは、&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=615947&quot;&gt;Chromiumの問題ごとの&lt;/a&gt;ユーザー名とパスワードの認証をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="e445a48e862ae8973820429a2aca736eb09db364" translate="yes" xml:space="preserve">
          <source>Use default destination container name &lt;code&gt;(images)&lt;/code&gt;</source>
          <target state="translated">デフォルトの宛先コンテナ名 &lt;code&gt;(images)&lt;/code&gt; 使用する</target>
        </trans-unit>
        <trans-unit id="b81ef6491b5d8b0cd55ca98952f2e0e9f1a27fdf" translate="yes" xml:space="preserve">
          <source>Use main process modules from the renderer process.</source>
          <target state="translated">レンダラプロセスのメインプロセスモジュールを使用します。</target>
        </trans-unit>
        <trans-unit id="5922e47216e92c6ebc3175c75d300bb77cfa0c3d" translate="yes" xml:space="preserve">
          <source>Use newer ES6/ES2015 syntax where appropriate</source>
          <target state="translated">適切な場合は、新しいES6/ES2015の構文を使用します。</target>
        </trans-unit>
        <trans-unit id="04ca9238d33c5b2c57b311ff5eb34c86f429bc7a" translate="yes" xml:space="preserve">
          <source>Use one of the following command line switches to enable debugging of the main process:</source>
          <target state="translated">以下のコマンドラインスイッチのいずれかを使用して、メインプロセスのデバッグを有効にします。</target>
        </trans-unit>
        <trans-unit id="5437b69dcce2c66498dd51cc7d79954c6bc5e2cc" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;webview&lt;/code&gt; tag to embed 'guest' content (such as web pages) in your Electron app. The guest content is contained within the &lt;code&gt;webview&lt;/code&gt; container. An embedded page within your app controls how the guest content is laid out and rendered.</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; タグを使用して、「ゲスト」コンテンツ（Webページなど）をElectronアプリに埋め込みます。ゲストコンテンツは、 &lt;code&gt;webview&lt;/code&gt; コンテナー内に含まれています。アプリ内の埋め込みページは、ゲストコンテンツのレイアウトとレンダリングの方法を制御します。</target>
        </trans-unit>
        <trans-unit id="bf6b8ed48698115e8b516ef1d3227d99ce0aa0f8" translate="yes" xml:space="preserve">
          <source>Use the HTML5 &lt;code&gt;File&lt;/code&gt; API to work natively with files on the filesystem.</source>
          <target state="translated">HTML5 &lt;code&gt;File&lt;/code&gt; APIを使用して、ファイルシステム上のファイルをネイティブに処理します。</target>
        </trans-unit>
        <trans-unit id="e4815e1fd2bc8cf6057cea7466651c9a70138e2b" translate="yes" xml:space="preserve">
          <source>Use the HTML5 File API to work natively with files on the filesystem.</source>
          <target state="translated">HTML5 File API を使用して、ファイルシステム上のファイルをネイティブに扱うことができます。</target>
        </trans-unit>
        <trans-unit id="7fb51e40357d6396e014f1b294975a06574194a7" translate="yes" xml:space="preserve">
          <source>Use the same formats as the ones suggested above, but add the following note at the beginning of the changelog:</source>
          <target state="translated">上で提案したものと同じフォーマットを使用しますが、変更ログの最初に以下のメモを追加してください。</target>
        </trans-unit>
        <trans-unit id="17f0034b49ee259e5d3785d98d96dc3107c3645d" translate="yes" xml:space="preserve">
          <source>Use the storage account name, key, and URI obtained from Azure to run this script.</source>
          <target state="translated">このスクリプトを実行するには、Azureから取得したストレージアカウント名、キー、URIを使用します。</target>
        </trans-unit>
        <trans-unit id="e5b92985727f851fddce5b71af2aa3680c4e59aa" translate="yes" xml:space="preserve">
          <source>Used as the label for the button</source>
          <target state="translated">ボタンのラベルとして使用します。</target>
        </trans-unit>
        <trans-unit id="e78050d531fd0de66ee35d7aca40593df5de0d0d" translate="yes" xml:space="preserve">
          <source>Useful links</source>
          <target state="translated">お役立ちリンク</target>
        </trans-unit>
        <trans-unit id="3c5d2c3ab9658b5e48d270bf506c6a477fb71f79" translate="yes" xml:space="preserve">
          <source>Uses &lt;a href=&quot;https://en.wikipedia.org/wiki/Quick_Look&quot;&gt;Quick Look&lt;/a&gt; to preview a file at a given path.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Quick_Look&quot;&gt;クイックルック&lt;/a&gt;を使用して、指定されたパスでファイルをプレビューします。</target>
        </trans-unit>
        <trans-unit id="e2cf9d44305925b53227db83d7ce3f49c716053f" translate="yes" xml:space="preserve">
          <source>Uses custom drawn close, and miniaturize buttons that display when hovering in the top left of the window. The fullscreen button is not available due to restrictions of frameless windows as they interface with Apple's macOS window masks. These custom buttons prevent issues with mouse events that occur with the standard window toolbar buttons. This option is only applicable for frameless windows.</source>
          <target state="translated">ウィンドウの左上にホバリングしたときに表示される、カスタム描画されたクローズボタンと小型化ボタンを使用しています。フルスクリーンボタンは、フレームレスウィンドウはAppleのmacOSウィンドウマスクとのインターフェイスであるため、制限があるため使用できません。これらのカスタムボタンは、標準ウィンドウのツールバーボタンで発生するマウスイベントの問題を防ぎます。このオプションはフレームレスウィンドウにのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="5fbecbcc016b7351cba447b20f1c51b039fdcf62" translate="yes" xml:space="preserve">
          <source>Uses custom drawn close, miniaturize, and fullscreen buttons that display when hovering in the top left of the window. These custom buttons prevent issues with mouse events that occur with the standard window toolbar buttons. This option is only applicable for frameless windows.</source>
          <target state="translated">ウィンドウの左上にカーソルを置いたときに表示される、カスタム描画されたクローズボタン、ミニチュア化ボタン、フルスクリーンボタンを使用します。これらのカスタムボタンは、標準ウィンドウのツールバーボタンで発生するマウスイベントの問題を防ぎます。このオプションは、フレームレスウィンドウにのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="13215441a1cfd6bc92002b757895c0da738dea88" translate="yes" xml:space="preserve">
          <source>Uses the &lt;code&gt;devToolsWebContents&lt;/code&gt; as the target &lt;code&gt;WebContents&lt;/code&gt; to show devtools.</source>
          <target state="translated">&lt;code&gt;devToolsWebContents&lt;/code&gt; をターゲット &lt;code&gt;WebContents&lt;/code&gt; として使用して、devtoolsを表示します。</target>
        </trans-unit>
        <trans-unit id="a55c266f9ba0b9f6ac5ccc29ad000dd596d147dd" translate="yes" xml:space="preserve">
          <source>Uses the PAC script at the specified &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;url&lt;/code&gt; でPACスクリプトを使用します。</target>
        </trans-unit>
        <trans-unit id="e2d6c211836ab15b83cd5c809ed6b4de81dd4025" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Quick Start&lt;/code&gt; as example:</source>
          <target state="translated">例として &lt;code&gt;Quick Start&lt;/code&gt; を使用する：</target>
        </trans-unit>
        <trans-unit id="3961607cb8d196c3129c110538b3319b94d7172f" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;asar&lt;/code&gt; Archives</source>
          <target state="translated">&lt;code&gt;asar&lt;/code&gt; アーカイブの使用</target>
        </trans-unit>
        <trans-unit id="7c1d35b3b24ddba15e0248c6817c1956fe4ec8fa" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;autoUpdater&lt;/code&gt; as an example:</source>
          <target state="translated">例として &lt;code&gt;autoUpdater&lt;/code&gt; を使用する：</target>
        </trans-unit>
        <trans-unit id="107611ec34af23798690927bb0ff748621a5c4c9" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;basic&lt;/code&gt; should be preferred if only basic information like &lt;code&gt;vendorId&lt;/code&gt; or &lt;code&gt;driverId&lt;/code&gt; is needed.</source>
          <target state="translated">使い方 &lt;code&gt;basic&lt;/code&gt; のような基本的な情報のみならば好まれるべき &lt;code&gt;vendorId&lt;/code&gt; または &lt;code&gt;driverId&lt;/code&gt; が必要とされています。</target>
        </trans-unit>
        <trans-unit id="4a103b8e4a108788838501fb5b50882b1640c31d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;electron-builder&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;electron-builder&lt;/code&gt; 使用</target>
        </trans-unit>
        <trans-unit id="70ff6fb9cc25e5c5b19579b5ff7ad9e9167f4862" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;electron-installer-snap&lt;/code&gt;</source>
          <target state="translated">使用する &lt;code&gt;electron-installer-snap&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cdf0eebd10d5c8f7957351b1b9f025e9c9b142fc" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;npm&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;npm&lt;/code&gt; の使用</target>
        </trans-unit>
        <trans-unit id="bd0449bdd1cb93af674a23167e59403d36c84a95" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;protocol&lt;/code&gt; with a custom &lt;code&gt;partition&lt;/code&gt; or &lt;code&gt;session&lt;/code&gt;</source>
          <target state="translated">カスタム &lt;code&gt;partition&lt;/code&gt; または &lt;code&gt;session&lt;/code&gt; &lt;code&gt;protocol&lt;/code&gt; を使用する</target>
        </trans-unit>
        <trans-unit id="11ffedb8f2046e2194b6fba548fc37b6cacb8e85" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;ready-to-show&lt;/code&gt; event</source>
          <target state="translated">使用して &lt;code&gt;ready-to-show&lt;/code&gt; イベント</target>
        </trans-unit>
        <trans-unit id="ede7bdc476aff74c239cd5ec3d3b63f9a4c564ef" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;session&lt;/code&gt; as example:</source>
          <target state="translated">例として &lt;code&gt;session&lt;/code&gt; を使用する：</target>
        </trans-unit>
        <trans-unit id="d86fb60786c4938041f439fd51ee82907d4f9227" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;snapcraft&lt;/code&gt; with &lt;code&gt;electron-packager&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;electron-packager&lt;/code&gt; &lt;code&gt;snapcraft&lt;/code&gt; を使用する</target>
        </trans-unit>
        <trans-unit id="9a31c2d15756eee8189fba841917b6a59160f5d9" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;update.electronjs.org&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;update.electronjs.org&lt;/code&gt; の使用</target>
        </trans-unit>
        <trans-unit id="6cd597a88dd477e73afcda04978c767c259ae785" translate="yes" xml:space="preserve">
          <source>Using Chrome's &lt;code&gt;window.open()&lt;/code&gt; implementation</source>
          <target state="translated">Chromeの &lt;code&gt;window.open()&lt;/code&gt; 実装の使用</target>
        </trans-unit>
        <trans-unit id="218af43531f26cc8ecb37ed2f4285b612a913f4c" translate="yes" xml:space="preserve">
          <source>Using Electron APIs</source>
          <target state="translated">エレクトロンAPIの使用</target>
        </trans-unit>
        <trans-unit id="380e3c16eabfb45cf07dc6c7846133e0ce74bc27" translate="yes" xml:space="preserve">
          <source>Using Electron's API</source>
          <target state="translated">エレクトロンのAPIを使用する</target>
        </trans-unit>
        <trans-unit id="3389a4a57bee95ffd2325edf6ba255ad953ce5d6" translate="yes" xml:space="preserve">
          <source>Using Electron's APIs</source>
          <target state="translated">エレクトロンのAPIを使用する</target>
        </trans-unit>
        <trans-unit id="cb8d4c64b129bdacf6f71ce0cc4c9d05235bc761" translate="yes" xml:space="preserve">
          <source>Using Microsoft Remote Desktop, click &lt;code&gt;Connect&lt;/code&gt; to connect to the VM.</source>
          <target state="translated">Microsoftリモートデスクトップを使用して、[ &lt;code&gt;Connect&lt;/code&gt; ]をクリックしてVMに接続します。</target>
        </trans-unit>
        <trans-unit id="80144c41b6e1d82275f2a6018ad34e5cc5ed9302" translate="yes" xml:space="preserve">
          <source>Using Native Node Modules</source>
          <target state="translated">ネイティブノードモジュールの使用</target>
        </trans-unit>
        <trans-unit id="241557f67d77abc5b2e19328723a9fdfc9bccce2" translate="yes" xml:space="preserve">
          <source>Using Native Node.js Modules</source>
          <target state="translated">ネイティブNode.jsモジュールを使う</target>
        </trans-unit>
        <trans-unit id="32863ea99980d27239bdd8f9f2e8b6171c1d8e56" translate="yes" xml:space="preserve">
          <source>Using Node.js APIs</source>
          <target state="translated">Node.jsのAPIを使う</target>
        </trans-unit>
        <trans-unit id="e75ffd4b0f1fce64f3d815caf943d7f92a4fb112" translate="yes" xml:space="preserve">
          <source>Using Pepper Flash Plugin</source>
          <target state="translated">Pepper Flashプラグインの使い方</target>
        </trans-unit>
        <trans-unit id="88233d0edbe109345e2206ea51401086b04ff80c" translate="yes" xml:space="preserve">
          <source>Using ProcMon to Observe a Process</source>
          <target state="translated">プロセスの監視にProcMonを使用する</target>
        </trans-unit>
        <trans-unit id="b6da0be09f19911f96f82e6bba6e5748c3d5011d" translate="yes" xml:space="preserve">
          <source>Using Selenium and WebDriver</source>
          <target state="translated">SeleniumとWebDriverを使う</target>
        </trans-unit>
        <trans-unit id="e5c8d67cb0a7de85e2b5271f3a20df4efcc2223d" translate="yes" xml:space="preserve">
          <source>Using Widevine CDM Plugin</source>
          <target state="translated">Widevine CDM プラグインの使用</target>
        </trans-unit>
        <trans-unit id="d83d68130151db5316319419f089d5ec8ba950cc" translate="yes" xml:space="preserve">
          <source>Using a &lt;em&gt;Command Prompt&lt;/em&gt;, run &lt;code&gt;set npm_config_arch=arm64&lt;/code&gt; before running &lt;code&gt;npm install&lt;/code&gt;/&lt;code&gt;yarn install&lt;/code&gt; as usual.</source>
          <target state="translated">使用して&lt;em&gt;コマンドプロンプト&lt;/em&gt;、実行 &lt;code&gt;set npm_config_arch=arm64&lt;/code&gt; 実行する前に、 &lt;code&gt;npm install&lt;/code&gt; / &lt;code&gt;yarn install&lt;/code&gt; いつものように。</target>
        </trans-unit>
        <trans-unit id="4632ddd3ca12d414acb80b57910cb11da2ffb69e" translate="yes" xml:space="preserve">
          <source>Using a plain &lt;code&gt;return&lt;/code&gt; when returning explicitly at the end of a function.</source>
          <target state="translated">関数の最後で明示的に &lt;code&gt;return&lt;/code&gt; ときにプレーンリターンを使用する。</target>
        </trans-unit>
        <trans-unit id="d05a621726a988ab66487cfa7497d9660e123420" translate="yes" xml:space="preserve">
          <source>Using an Existing Debian Package</source>
          <target state="translated">既存の Debian パッケージを使う</target>
        </trans-unit>
        <trans-unit id="05fbcb8afecf544de9a6a5ae4c3ee295ad0d5da8" translate="yes" xml:space="preserve">
          <source>Using asar Archives</source>
          <target state="translated">asar アーカイブスの使用</target>
        </trans-unit>
        <trans-unit id="f1b639f531d8eb1c93db6ceb20a34d6d5054efb6" translate="yes" xml:space="preserve">
          <source>Using chunked encoding is strongly recommended if you need to send a large request body as data will be streamed in small chunks instead of being internally buffered inside Electron process memory.</source>
          <target state="translated">大きなリクエストボディを送信する必要がある場合は、チャンク化されたエンコーディングを使用することを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="20a7b92a76a1d5beca35448b4c294eb424ce4800" translate="yes" xml:space="preserve">
          <source>Using clang-format on C++ Code</source>
          <target state="translated">C++コードでclang-formatを使う</target>
        </trans-unit>
        <trans-unit id="6b27c1122792c5995e57575567926a9647d9486d" translate="yes" xml:space="preserve">
          <source>Using clang-tidy on C++ Code</source>
          <target state="translated">C++コードでclang-tidyを使う</target>
        </trans-unit>
        <trans-unit id="3354239366f9daddc01b86198e2d06abf741c7bb" translate="yes" xml:space="preserve">
          <source>Using compilers other than &lt;code&gt;clang&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;clang&lt;/code&gt; 以外のコンパイラを使用する</target>
        </trans-unit>
        <trans-unit id="bc5b34142dcee890d4144e062a81d6758b0e7b28" translate="yes" xml:space="preserve">
          <source>Using in the renderer process</source>
          <target state="translated">レンダラープロセスでの使用</target>
        </trans-unit>
        <trans-unit id="da0d67e894580c2f18c034932de36a56cf68e73d" translate="yes" xml:space="preserve">
          <source>Using system &lt;code&gt;clang&lt;/code&gt; instead of downloaded &lt;code&gt;clang&lt;/code&gt; binaries</source>
          <target state="translated">ダウンロードした &lt;code&gt;clang&lt;/code&gt; バイナリの代わりにシステム &lt;code&gt;clang&lt;/code&gt; を使用する</target>
        </trans-unit>
        <trans-unit id="ab265dd8585440d657d4d42c5ccf26f1a98a90bf" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi&quot;&gt;React Developer Tools&lt;/a&gt; as example:</source>
          <target state="translated">例として&lt;a href=&quot;https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi&quot;&gt;React開発者ツール&lt;/a&gt;を使用する：</target>
        </trans-unit>
        <trans-unit id="440754cf65ef083054e104b86398503485de3820" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Session&lt;/code&gt; and &lt;code&gt;Cookies&lt;/code&gt; classes as an example:</source>
          <target state="translated">例として &lt;code&gt;Session&lt;/code&gt; クラスと &lt;code&gt;Cookies&lt;/code&gt; クラスを使用します。</target>
        </trans-unit>
        <trans-unit id="9d4fd55478baf27fe412533b13ef955db9edb013" translate="yes" xml:space="preserve">
          <source>Using the Symbol Server in Windbg</source>
          <target state="translated">Windbgでシンボルサーバを使う</target>
        </trans-unit>
        <trans-unit id="91f78e5a46222b247e2c4aac20d2add43af3c420" translate="yes" xml:space="preserve">
          <source>Using the library</source>
          <target state="translated">ライブラリの利用</target>
        </trans-unit>
        <trans-unit id="2c6fee80fec51c3f50145927fcc092febd06703d" translate="yes" xml:space="preserve">
          <source>Using the plugin</source>
          <target state="translated">プラグインの使用</target>
        </trans-unit>
        <trans-unit id="3a07a1b2325faaf7dfc2301de95138c65e5fedcb" translate="yes" xml:space="preserve">
          <source>Using the symbol server in Visual Studio</source>
          <target state="translated">Visual Studioでシンボルサーバーを使用する</target>
        </trans-unit>
        <trans-unit id="03c6a347785c41c19c7f026559853e35687e14c1" translate="yes" xml:space="preserve">
          <source>Using third-party libraries</source>
          <target state="translated">サードパーティ製ライブラリの使用</target>
        </trans-unit>
        <trans-unit id="e063ea4e54b5534dc34388b43493a468e1a12624" translate="yes" xml:space="preserve">
          <source>Using web APIs</source>
          <target state="translated">ウェブAPIの利用</target>
        </trans-unit>
        <trans-unit id="7136192f8e1f36da42d34aa5c75fa7953a1e0d07" translate="yes" xml:space="preserve">
          <source>Usually the &lt;code&gt;name&lt;/code&gt; field of &lt;code&gt;package.json&lt;/code&gt; is a short lowercase name, according to the npm modules spec. You should usually also specify a &lt;code&gt;productName&lt;/code&gt; field, which is your application's full capitalized name, and which will be preferred over &lt;code&gt;name&lt;/code&gt; by Electron.</source>
          <target state="translated">npmモジュールの仕様によると、通常、 &lt;code&gt;package.json&lt;/code&gt; の &lt;code&gt;name&lt;/code&gt; フィールドは短い小文字の名前です。通常、 &lt;code&gt;productName&lt;/code&gt; フィールドも指定する必要があります。これは、アプリケーションの完全な大文字の名前であり、Electronによって &lt;code&gt;name&lt;/code&gt; も優先されます。</target>
        </trans-unit>
        <trans-unit id="2dd6446c13f54cd5db5e13b156a18ac569137b4e" translate="yes" xml:space="preserve">
          <source>Usually the &lt;code&gt;name&lt;/code&gt; field of &lt;code&gt;package.json&lt;/code&gt; is a short lowercased name, according to the npm modules spec. You should usually also specify a &lt;code&gt;productName&lt;/code&gt; field, which is your application's full capitalized name, and which will be preferred over &lt;code&gt;name&lt;/code&gt; by Electron.</source>
          <target state="translated">通常、npmモジュールの仕様によれば、 &lt;code&gt;package.json&lt;/code&gt; の &lt;code&gt;name&lt;/code&gt; フィールドは小文字の短い名前です。通常、 &lt;code&gt;productName&lt;/code&gt; フィールドも指定する必要があります。これは、アプリケーションの完全な大文字の名前であり、Electronによる &lt;code&gt;name&lt;/code&gt; も優先されます。</target>
        </trans-unit>
        <trans-unit id="66ac5344085cdccec87bc57d05a4793e144ef65f" translate="yes" xml:space="preserve">
          <source>Usually this is not a problem for desktop applications since the code is always trusted, but it makes Electron less secure than Chromium for displaying untrusted web content. For applications that require more security, the &lt;code&gt;sandbox&lt;/code&gt; flag will force Electron to spawn a classic Chromium renderer that is compatible with the sandbox.</source>
          <target state="translated">コードは常に信頼されているため、通常、これはデスクトップアプリケーションでは問題になりませんが、信頼されていないWebコンテンツを表示するためのElectronの安全性はChromiumよりも低くなります。より高いセキュリティが必要なアプリケーションの場合、 &lt;code&gt;sandbox&lt;/code&gt; フラグにより、Electronはサンドボックスと互換性のある従来のChromiumレンダラーを生成します。</target>
        </trans-unit>
        <trans-unit id="1a4ef9adec4a4c7e95b812c830a0ddae553eed88" translate="yes" xml:space="preserve">
          <source>Usually this is not a problem for desktop applications since the code is always trusted, but it makes electron less secure than chromium for displaying untrusted web content. For applications that require more security, the &lt;code&gt;sandbox&lt;/code&gt; flag will force electron to spawn a classic chromium renderer that is compatible with the sandbox.</source>
          <target state="translated">コードは常に信頼されているため、通常、これはデスクトップアプリケーションの問題ではありませんが、信頼されていないWebコンテンツを表示する場合、chromiumよりも安全性が低くなります。より多くのセキュリティを必要とするアプリケーションの場合、 &lt;code&gt;sandbox&lt;/code&gt; フラグにより、エレクトロンはサンドボックスと互換性のあるクラシッククロムレンダラーを生成します。</target>
        </trans-unit>
        <trans-unit id="16bd022f9c9d5223940382bf7326937535b30c13" translate="yes" xml:space="preserve">
          <source>Usually those modules work fine under Electron, but sometimes when Electron uses a newer version of V8 than Node and/or there are ABI changes, bad things may happen. So in general, it is recommended to always build native modules from source code. &lt;code&gt;electron-rebuild&lt;/code&gt; handles this for you automatically.</source>
          <target state="translated">通常、これらのモジュールはElectronで正常に動作しますが、ElectronがNodeよりも新しいバージョンのV8を使用している場合や、ABIが変更されている場合は、問題が発生する可能性があります。したがって、一般的には、常にソースコードからネイティブモジュールを構築することをお勧めします。 &lt;code&gt;electron-rebuild&lt;/code&gt; はこれを自動的に処理します。</target>
        </trans-unit>
        <trans-unit id="cdd34d5471fcb2f1740a490ee1eeb555da666893" translate="yes" xml:space="preserve">
          <source>Usually those modules work fine under Electron, but sometimes when Electron uses a newer version of V8 than Node, and there are ABI changes, bad things may happen. So in general it is recommended to always build native modules from source code.</source>
          <target state="translated">通常、これらのモジュールはElectronでは問題なく動作しますが、ElectronがNodeよりも新しいバージョンのV8を使用していたり、ABIの変更があったりすると、悪いことが起こることがあります。そのため、一般的には常にソースコードからネイティブモジュールをビルドすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="31055adc9f7f0f75d6605d0d6c9669ba34ed7429" translate="yes" xml:space="preserve">
          <source>Usually you would want to use the &lt;code&gt;beforeunload&lt;/code&gt; handler to decide whether the window should be closed, which will also be called when the window is reloaded. In Electron, returning any value other than &lt;code&gt;undefined&lt;/code&gt; would cancel the close. For example:</source>
          <target state="translated">通常、 &lt;code&gt;beforeunload&lt;/code&gt; ハンドラーを使用して、ウィンドウを閉じる必要があるかどうかを決定します。これは、ウィンドウが再ロードされたときにも呼び出されます。Electronでは、 &lt;code&gt;undefined&lt;/code&gt; 以外の値を返すと、クローズがキャンセルされます。例えば：</target>
        </trans-unit>
        <trans-unit id="d67a39a9d54b774a32fdb91e118929cdbe784c0c" translate="yes" xml:space="preserve">
          <source>Uzbek</source>
          <target state="translated">Uzbek</target>
        </trans-unit>
        <trans-unit id="b8b097d0eea0934533ba237923021e6a341048fe" translate="yes" xml:space="preserve">
          <source>V8</source>
          <target state="translated">V8</target>
        </trans-unit>
        <trans-unit id="9921ada03c20d2226f0abaee2bcee4bd86244551" translate="yes" xml:space="preserve">
          <source>V8 Crashes</source>
          <target state="translated">V8のクラッシュ</target>
        </trans-unit>
        <trans-unit id="cacdf0a0a408fb4d8ac0c220414f5a5c6ca6f7e9" translate="yes" xml:space="preserve">
          <source>V8 Development</source>
          <target state="translated">V8開発</target>
        </trans-unit>
        <trans-unit id="9a11eb6b78d40f5731916fd88a4c5761170eb4b8" translate="yes" xml:space="preserve">
          <source>V8 GDB Debugging</source>
          <target state="translated">V8 GDB デバッグ</target>
        </trans-unit>
        <trans-unit id="1ba80c5b41162271dcbecd9ea7b1b8da50123136" translate="yes" xml:space="preserve">
          <source>V8 Interpreter Design</source>
          <target state="translated">V8 インタープリターデザイン</target>
        </trans-unit>
        <trans-unit id="039d88ee1fd277cb43f2af47c899313668b308f4" translate="yes" xml:space="preserve">
          <source>V8 Tracing</source>
          <target state="translated">V8 トレーシング</target>
        </trans-unit>
        <trans-unit id="b1fb6c65d72f96aee773f03297cc68682f14ba92" translate="yes" xml:space="preserve">
          <source>V8 inspector integration allows tools such as Chrome DevTools and IDEs to debug and profile Electron instances. The tools attach to Electron instances via a TCP port and communicate using the &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/&quot;&gt;Chrome DevTools Protocol&lt;/a&gt;.</source>
          <target state="translated">V8インスペクターの統合により、ChromeDevToolsやIDEなどのツールでElectronインスタンスをデバッグおよびプロファイリングできます。ツールはTCPポートを介してElectronインスタンスに接続し、&lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/&quot;&gt;ChromeDevToolsプロトコル&lt;/a&gt;を使用して通信します。</target>
        </trans-unit>
        <trans-unit id="1f8f6a8c1562754d76ab3ec262f4c769dfb50116" translate="yes" xml:space="preserve">
          <source>V8 is Google's open source JavaScript engine. It is written in C++ and is used in Google Chrome. V8 can run standalone, or can be embedded into any C++ application.</source>
          <target state="translated">V8はGoogleのオープンソースJavaScriptエンジンです。C++で書かれており、Google Chromeで使用されています。V8 はスタンドアロンでも動作しますし、任意の C++アプリケーションに組み込むこともできます。</target>
        </trans-unit>
        <trans-unit id="e95afc4ffcaa8ef4c7707538545210d712b4494f" translate="yes" xml:space="preserve">
          <source>V8's version numbers always correspond to those of Google Chrome. Chrome 59 includes V8 5.9, Chrome 58 includes V8 5.8, etc.</source>
          <target state="translated">V8のバージョン番号は常にGoogle Chromeのバージョン番号に対応しています。Chrome 59にはV8 5.9、Chrome 58にはV8 5.8などが含まれています。</target>
        </trans-unit>
        <trans-unit id="b280dc1f4f1b58422609af96e60af9910ffc1aac" translate="yes" xml:space="preserve">
          <source>Variable Scope</source>
          <target state="translated">可変範囲</target>
        </trans-unit>
        <trans-unit id="3e5f43762a8b89ff8b9f18c40b46d4f17c816f60" translate="yes" xml:space="preserve">
          <source>Verify ffmpeg support</source>
          <target state="translated">ffmpeg のサポートを確認する</target>
        </trans-unit>
        <trans-unit id="02869a10b9651cf7811a58c6401e06f2b0d4e701" translate="yes" xml:space="preserve">
          <source>Verifying Widevine CDM support</source>
          <target state="translated">Widevine CDM サポートの検証</target>
        </trans-unit>
        <trans-unit id="9391bb900fb7f602c1fe53a51505bc8a5dbd2f89" translate="yes" xml:space="preserve">
          <source>Verifying the plugin</source>
          <target state="translated">プラグインの検証</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="534eea8b37ce7c9cbaf6455aa8776cd43c916911" translate="yes" xml:space="preserve">
          <source>Version 1.x</source>
          <target state="translated">バージョン1.x</target>
        </trans-unit>
        <trans-unit id="c705d04cd382c1bb8b5c5bcc945dbc82963b3683" translate="yes" xml:space="preserve">
          <source>Version 2.0 and Beyond</source>
          <target state="translated">バージョン2.0以降</target>
        </trans-unit>
        <trans-unit id="5c4ab74468140e87cd48c74f73c29505deaac9a2" translate="yes" xml:space="preserve">
          <source>Versioned &lt;code&gt;master&lt;/code&gt;</source>
          <target state="translated">バージョン管理された &lt;code&gt;master&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2750d3223582565870adf32b96da562927d7229f" translate="yes" xml:space="preserve">
          <source>Versioning</source>
          <target state="translated">Versioning</target>
        </trans-unit>
        <trans-unit id="cd797cf0fe303d32f5502e0cd652eb3709acf2f2" translate="yes" xml:space="preserve">
          <source>Versioning Policy</source>
          <target state="translated">バージョニングポリシー</target>
        </trans-unit>
        <trans-unit id="b1e71a1dfb668e705d02768f62eef610ec51716c" translate="yes" xml:space="preserve">
          <source>Versionless &lt;code&gt;master&lt;/code&gt;</source>
          <target state="translated">バージョンレス &lt;code&gt;master&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99135766b4c7d2886327af34477e1869b4a7b652" translate="yes" xml:space="preserve">
          <source>Video capture may not work for some machines.</source>
          <target state="translated">一部のマシンでは、ビデオキャプチャが動作しない場合があります。</target>
        </trans-unit>
        <trans-unit id="1d6b8a691f0d907efa971075035a145a937381ac" translate="yes" xml:space="preserve">
          <source>Vietnamese</source>
          <target state="translated">Vietnamese</target>
        </trans-unit>
        <trans-unit id="c18f8cdb4e81b5ec75920d909ba1e32198130cbf" translate="yes" xml:space="preserve">
          <source>Vim &amp;amp; Emacs</source>
          <target state="translated">VimとEmacs</target>
        </trans-unit>
        <trans-unit id="609f74bee62265b28b51f94f4a7162f60a877ccf" translate="yes" xml:space="preserve">
          <source>Virtual Network</source>
          <target state="translated">仮想ネットワーク</target>
        </trans-unit>
        <trans-unit id="d09657b376dc17329c2f823990b86b0edfb1e2ee" translate="yes" xml:space="preserve">
          <source>Visit &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;the releases page&lt;/a&gt; and you'll see a new draft release with placeholder release notes.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;リリースページに&lt;/a&gt;アクセスすると、プレースホルダーリリースノートを含む新しいドラフトリリースが表示されます。</target>
        </trans-unit>
        <trans-unit id="7d8d8543574b28522162d433588e7655a97347ae" translate="yes" xml:space="preserve">
          <source>Visual Studio 2017</source>
          <target state="translated">ビジュアルスタジオ2017</target>
        </trans-unit>
        <trans-unit id="a7a8daba6a8b9a6cc6452fa0e06affcb40e0d541" translate="yes" xml:space="preserve">
          <source>Visual Studio 2017 (any edition) is required for cross-compiling native modules. You can download Visual Studio Community 2017 via Microsoft's &lt;a href=&quot;https://visualstudio.microsoft.com/dev-essentials/&quot;&gt;Visual Studio Dev Essentials program&lt;/a&gt;. After installation, you can add the Arm-specific components by running the following from a &lt;em&gt;Command Prompt&lt;/em&gt;:</source>
          <target state="translated">ネイティブモジュールをクロスコンパイルするには、Visual Studio 2017（任意のエディション）が必要です。Visual Studio Community 2017は、Microsoftの&lt;a href=&quot;https://visualstudio.microsoft.com/dev-essentials/&quot;&gt;Visual Studio DevEssentialsプログラム&lt;/a&gt;からダウンロードできます。インストール後、&lt;em&gt;コマンドプロンプト&lt;/em&gt;から次の&lt;em&gt;コマンドを&lt;/em&gt;実行して、Arm固有のコンポーネントを追加できます。</target>
        </trans-unit>
        <trans-unit id="355a81a03bbebad7373a648418aa1f2ae94e22c0" translate="yes" xml:space="preserve">
          <source>Visual Studio 2017 - &lt;a href=&quot;https://www.visualstudio.com/vs/&quot;&gt;download VS 2017 Community Edition for free&lt;/a&gt;</source>
          <target state="translated">Visual Studio 2017- &lt;a href=&quot;https://www.visualstudio.com/vs/&quot;&gt;VS 2017 Community Editionを無料でダウンロード&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1b912200c259ef5c17ce1b13c1be976aa238689" translate="yes" xml:space="preserve">
          <source>Visual Studio 2017 15.7.2 or higher - &lt;a href=&quot;https://www.visualstudio.com/vs/&quot;&gt;download VS 2019 Community Edition for free&lt;/a&gt;</source>
          <target state="translated">Visual Studio 201715.7.2以降-VS2019 &lt;a href=&quot;https://www.visualstudio.com/vs/&quot;&gt;CommunityEditionを無料でダウンロード&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c0b645455c58a521a3f4cc21633cc74c05bcbe3" translate="yes" xml:space="preserve">
          <source>Visual Studio 2019 must be installed.</source>
          <target state="translated">Visual Studio 2019がインストールされている必要があります。</target>
        </trans-unit>
        <trans-unit id="423f1f3d80c4d824ca917e13649a5c584a13ec87" translate="yes" xml:space="preserve">
          <source>Visual Studio Code</source>
          <target state="translated">Visual Studioコード</target>
        </trans-unit>
        <trans-unit id="4567b38578907a7f2985d31309d56d15c45465c6" translate="yes" xml:space="preserve">
          <source>Visual Studio project</source>
          <target state="translated">ビジュアルスタジオプロジェクト</target>
        </trans-unit>
        <trans-unit id="efdd3c0adb18f2edb055d5f16391bf125d2941a9" translate="yes" xml:space="preserve">
          <source>Vue.js devtools</source>
          <target state="translated">Vue.js devtools</target>
        </trans-unit>
        <trans-unit id="e350e4fae7ee25e5f79d481fde95722cdd312f88" translate="yes" xml:space="preserve">
          <source>Wait a very, very long time for the build to complete.</source>
          <target state="translated">ビルドが完成するまで、非常に長い時間を待つ。</target>
        </trans-unit>
        <trans-unit id="2ce18cbc7c5d93f857a356162978d479ba49c6c2" translate="yes" xml:space="preserve">
          <source>Wait for all builds to pass before proceeding.</source>
          <target state="translated">すべてのビルドが通過するのを待ってから次に進みます。</target>
        </trans-unit>
        <trans-unit id="02babf258c5695b3d983c57d3858e4fd692e3741" translate="yes" xml:space="preserve">
          <source>Wait for builds ⏳</source>
          <target state="translated">ビルドを待つ ⏳</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="4d8687e4ebbd53b1c3e7737b3403a1bb9d7b7db3" translate="yes" xml:space="preserve">
          <source>We &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/tutorial/security.md#3-enable-context-isolation-for-remote-content&quot;&gt;recommend having contextIsolation enabled&lt;/a&gt; for the security of your application.</source>
          <target state="translated">アプリケーションのセキュリティのために、&lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/tutorial/security.md#3-enable-context-isolation-for-remote-content&quot;&gt;contextIsolationを有効&lt;/a&gt;にすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="b3e7e880b3050083d9a36eefe140f528826b8830" translate="yes" xml:space="preserve">
          <source>We &lt;a href=&quot;https://medium.com/@nornagon/electrons-remote-module-considered-harmful-70d69500f31&quot;&gt;recommend moving away from the remote module&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://medium.com/@nornagon/electrons-remote-module-considered-harmful-70d69500f31&quot;&gt;リモートモジュールから離れること&lt;/a&gt;をお勧めします。</target>
        </trans-unit>
        <trans-unit id="acfbe72ff8739a63ebe5455964a27ea0f34b5bd2" translate="yes" xml:space="preserve">
          <source>We aim to keep the code coverage of Electron high. We ask that all pull request not only pass all existing tests, but ideally also add new tests to cover changed code and new scenarios. Ensuring that we capture as many code paths and use cases of Electron as possible ensures that we all ship apps with fewer bugs.</source>
          <target state="translated">私たちは、Electronのコードカバレッジを高く保つことを目指しています。すべてのプルリクエストは、既存のすべてのテストに合格するだけでなく、変更されたコードや新しいシナリオをカバーするための新しいテストを追加することが理想的です。可能な限り多くのコードパスとElectronのユースケースを把握することで、より少ないバグでアプリを出荷できるようにしています。</target>
        </trans-unit>
        <trans-unit id="31522845e3f0e36035349ce3908a136db3ff871e" translate="yes" xml:space="preserve">
          <source>We allow for multiple stabilization branches to exist simultaneously, and intend to support at least two in parallel at all times, backporting security fixes as necessary.</source>
          <target state="translated">複数の安定化ブランチが同時に存在することを可能にし、必要に応じてセキュリティ修正をバックポートしながら、常に少なくとも2つのブランチを並行してサポートするつもりです。</target>
        </trans-unit>
        <trans-unit id="ba6c161133f8a39973b89511cdbe490a55019bb1" translate="yes" xml:space="preserve">
          <source>We allow squashing of commits, provided that the squashed message adheres the the above message format.</source>
          <target state="translated">私たちはコミットをつぶすことを許可していますが、つぶされたメッセージが上記のメッセージフォーマットに従うことを条件にしています。</target>
        </trans-unit>
        <trans-unit id="2af7014b51926091273e550e4466aebaf1308f12" translate="yes" xml:space="preserve">
          <source>We allow squashing of commits, provided that the squashed message adheres to the above message format.</source>
          <target state="translated">私たちはコミットをつぶすことを許可していますが、つぶされたメッセージが上記のメッセージフォーマットに従うことを条件にしています。</target>
        </trans-unit>
        <trans-unit id="1ba19082e7c69d9d94ba0b5d9ae04c39985fd191" translate="yes" xml:space="preserve">
          <source>We can now communicate from the test suite to the Electron app using the &lt;code&gt;appProcess&lt;/code&gt; object.</source>
          <target state="translated">これで、 &lt;code&gt;appProcess&lt;/code&gt; オブジェクトを使用して、テストスイートからElectronアプリに通信できます。</target>
        </trans-unit>
        <trans-unit id="a5f1007bf3cfdb1ca23be5b06a02254d97db4f7d" translate="yes" xml:space="preserve">
          <source>We can't push security updates to users directly, so we rely on app vendors to upgrade the version of Electron underlying their app in order for security updates to reach users.</source>
          <target state="translated">そのため、セキュリティアップデートをユーザーに直接伝えることができないため、セキュリティアップデートをユーザーに届けるために、アプリベンダーにアプリのバージョンをアップグレードしてもらっています。</target>
        </trans-unit>
        <trans-unit id="546fc0305bbee2d9f6d77477dd56eb961190843e" translate="yes" xml:space="preserve">
          <source>We do not have the dedicated resources or expertise that Chromium has to apply to the security of its product. We do our best to make use of what we have, to inherit everything we can from Chromium, and to respond quickly to security issues, but Electron cannot be as secure as Chromium without the resources that Chromium is able to dedicate.</source>
          <target state="translated">当社には、Chromiumが製品のセキュリティに適用できるような専用のリソースや専門知識がありません。Chromiumが持っているものを活用し、Chromiumからできることをすべて継承し、セキュリティ問題に迅速に対応するために最善を尽くしていますが、ElectronはChromiumが投入できるリソースがなければ、Chromiumと同等のセキュリティを実現することはできません。</target>
        </trans-unit>
        <trans-unit id="5ed70a6072f9b2619fd32e3dab98357a558f396d" translate="yes" xml:space="preserve">
          <source>We do not provide support for usage of Goma and any issues raised asking for help / having issues will &lt;em&gt;probably&lt;/em&gt; be closed without much reason, we do not have the capacity to handle that kind of support.</source>
          <target state="translated">ゴマの使用についてはサポートを提供しておらず、助けを求めて提起された問題や問題が発生した場合は、理由もなくクローズされる&lt;em&gt;可能性&lt;/em&gt;があります。そのようなサポートを処理する能力はありません。</target>
        </trans-unit>
        <trans-unit id="eedf244f481ddf83bc8dee952576b6f2df6c2388" translate="yes" xml:space="preserve">
          <source>We don&amp;rsquo;t track upstream closely due to logistics:</source>
          <target state="translated">ロジスティクスのため、上流を厳密に追跡していません。</target>
        </trans-unit>
        <trans-unit id="9eb7c11f6a1dfe7dedc1e06ede609e55b4a43cd3" translate="yes" xml:space="preserve">
          <source>We don&amp;rsquo;t want those patches because we&amp;rsquo;re only patching V8.</source>
          <target state="translated">V8にのみパッチを適用しているため、これらのパッチは必要ありません。</target>
        </trans-unit>
        <trans-unit id="646658d3f8feebdbff029418a5e2bad9c9d26fb6" translate="yes" xml:space="preserve">
          <source>We don't want to commit the changes (they're kept in the patchfiles) but need them locally so that they don't show up in subsequent diffs while we iterate through more patches</source>
          <target state="translated">変更をコミットするのではなく (パッチファイルに保存されています)、ローカルで変更を行う必要があるので、パッチの反復処理を行っている間に後続の diff に表示されないようにします。</target>
        </trans-unit>
        <trans-unit id="430877a34faea587705f9ecfc77142d78d587cbd" translate="yes" xml:space="preserve">
          <source>We feel that our current system of updating the Chromium component strikes an appropriate balance between the resources we have available and the needs of the majority of applications built on top of the framework. We definitely are interested in hearing more about specific use cases from the people that build things on top of Electron. Pull requests and contributions supporting this effort are always very welcome.</source>
          <target state="translated">Chromiumコンポーネントを更新する現在のシステムは、利用可能なリソースと、フレームワークの上に構築されたアプリケーションの大部分のニーズとの間で適切なバランスを取っていると感じています。私たちは、Electron の上に構築している人たちからの具体的なユースケースについての意見を聞きたいと思っています。この取り組みをサポートするためのリクエストや貢献はいつでも大歓迎です。</target>
        </trans-unit>
        <trans-unit id="84562fb1da96d50752b29be05b0a716c75343ee9" translate="yes" xml:space="preserve">
          <source>We have automated monitoring of our Goma cluster and cache at &lt;a href=&quot;https://status.notgoma.com&quot;&gt;https://status.notgoma.com&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://status.notgoma.com&quot;&gt;https://status.notgoma.com&lt;/a&gt;でGomaクラスターとキャッシュの自動監視を行っています</target>
        </trans-unit>
        <trans-unit id="29dc7a4495bdae54dfd331baae530291131485b9" translate="yes" xml:space="preserve">
          <source>We might suggest two free popular editors built in Electron: GitHub's &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt; and Microsoft's &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;. Both of them have excellent JavaScript support.</source>
          <target state="translated">Electronに組み込まれている人気の高い2つのエディター、GitHubの&lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt;とMicrosoftの&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Codeをお&lt;/a&gt;勧めします。どちらも優れたJavaScriptサポートを備えています。</target>
        </trans-unit>
        <trans-unit id="9b72a6779df7508e7ee7a2798055b96ac846c658" translate="yes" xml:space="preserve">
          <source>We need to check out the corresponding branch.</source>
          <target state="translated">対応するブランチを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="26a602280f91cf9da8a11382582484956a6e33fc" translate="yes" xml:space="preserve">
          <source>We need to generate a patch file from each patch applied to V8.</source>
          <target state="translated">V8に適用された各パッチからパッチファイルを生成する必要があります。</target>
        </trans-unit>
        <trans-unit id="a27786c29b05a0b39452fdd40f59270fd4ed081f" translate="yes" xml:space="preserve">
          <source>We recommend that you use Node's parser for URLs. Simple string comparisons can sometimes be fooled - a &lt;code&gt;startsWith('https://example.com')&lt;/code&gt; test would let &lt;code&gt;https://example.com.attacker.com&lt;/code&gt; through.</source>
          <target state="translated">URLにはノードのパーサーを使用することをお勧めします。単純な文字列の比較はだまされることがあります &lt;code&gt;startsWith('https://example.com')&lt;/code&gt; テストは &lt;code&gt;https://example.com.attacker.com&lt;/code&gt; を通過させます。</target>
        </trans-unit>
        <trans-unit id="125bb09cd7167954f7cf5fa79d42fbaf1cb28d8f" translate="yes" xml:space="preserve">
          <source>We reconcile flagged code with our versioning strategy as follows:</source>
          <target state="translated">フラグの付いたコードを、以下のようにバージョニング戦略と整合させます。</target>
        </trans-unit>
        <trans-unit id="c543f333dc37656ff3781e800fdc6ac6bbfaa999" translate="yes" xml:space="preserve">
          <source>We seek to increase clarity at all levels of the update and releases process. Starting with &lt;code&gt;2.0.0&lt;/code&gt; we will require pull requests adhere to the &lt;a href=&quot;https://conventionalcommits.org/&quot;&gt;Conventional Commits&lt;/a&gt; spec, which can be summarized as follows:</source>
          <target state="translated">更新とリリースのプロセスのすべてのレベルで明確性を高めるよう努めています。始まる &lt;code&gt;2.0.0&lt;/code&gt; 我々は、プルリクエストが必要になりますに準拠&lt;a href=&quot;https://conventionalcommits.org/&quot;&gt;従来のコミット&lt;/a&gt;は次のように要約することができるスペック：</target>
        </trans-unit>
        <trans-unit id="12aa8f43abfcba17e4501cbd5862c4e76122d87e" translate="yes" xml:space="preserve">
          <source>We sometimes have to wait for the next periodic Node release because it will sync more closely with the version of V8 in the new libcc</source>
          <target state="translated">新しい libcc の V8 のバージョンとより密接に同期するため、次の定期的な Node のリリースを待たなければならないことがあります。</target>
        </trans-unit>
        <trans-unit id="f45062e893abf8c59e8c1ac2ffe7f387bfbfc7c5" translate="yes" xml:space="preserve">
          <source>We strive for weekly beta releases, however we often release more betas than scheduled.</source>
          <target state="translated">私たちは毎週のベータ版リリースに努めていますが、予定よりも多くのベータ版をリリースすることもしばしばあります。</target>
        </trans-unit>
        <trans-unit id="47b2d9b7fb66c7950c32a397de5e65bff3686876" translate="yes" xml:space="preserve">
          <source>We support the following extensions APIs, with some caveats. Other APIs may additionally be supported, but support for any APIs not listed here is provisional and may be removed.</source>
          <target state="translated">以下の拡張APIをサポートしていますが、いくつかの注意点があります。他のAPIも追加でサポートされる可能性がありますが、ここに記載されていないAPIのサポートは暫定的なものであり、削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="b3de9a26accef809c11af3815ccde3a4fba0e61c" translate="yes" xml:space="preserve">
          <source>We update code such that we only use one copy of V8 across all of electron</source>
          <target state="translated">全ての電子にV8のコピーを1つだけ使用するように コードを更新しています</target>
        </trans-unit>
        <trans-unit id="4dc39ffbd50411c5022d371ea9ed1c5a2d8bd2c5" translate="yes" xml:space="preserve">
          <source>We will cover in detail how git branching works, how npm tagging works, what developers should expect to see, and how one can backport changes.</source>
          <target state="translated">git ブランチの仕組み、npm のタグ付けの仕組み、開発者が期待すべきこと、そして変更をバックポートする方法について詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="70b121256f8eda40e443c1d517fb7e3fbc370cef" translate="yes" xml:space="preserve">
          <source>We'll start with a working application from the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt; and add functionality gradually.</source>
          <target state="translated">&lt;a href=&quot;quick-start&quot;&gt;クイックスタートガイドの&lt;/a&gt;動作するアプリケーションから始めて、機能を徐々に追加していきます。</target>
        </trans-unit>
        <trans-unit id="65d5f29d68a3683127bc1365335d4191053dbab6" translate="yes" xml:space="preserve">
          <source>We'll start with a working application from the &lt;a href=&quot;tutorial/quick-start&quot;&gt;Quick Start Guide&lt;/a&gt; and add functionality gradually.</source>
          <target state="translated">&lt;a href=&quot;tutorial/quick-start&quot;&gt;クイックスタートガイドの&lt;/a&gt;動作するアプリケーションから始めて、機能を徐々に追加していきます。</target>
        </trans-unit>
        <trans-unit id="797bb34784baa677feee355c332686112533e248" translate="yes" xml:space="preserve">
          <source>We've made a handy module &lt;code&gt;@electron/fuses&lt;/code&gt; to make flipping these fuses easy. Check out the README of that module for more details on usage and potential error cases.</source>
          <target state="translated">これらのヒューズを簡単に反転できるように、便利なモジュール &lt;code&gt;@electron/fuses&lt;/code&gt; を作成しました。使用法と潜在的なエラーケースの詳細については、そのモジュールのREADMEを確認してください。</target>
        </trans-unit>
        <trans-unit id="6e31f799234b45824edf7f06671f36a424b55c16" translate="yes" xml:space="preserve">
          <source>Web API</source>
          <target state="translated">ウェブエーピーアイ</target>
        </trans-unit>
        <trans-unit id="92fc785aaae1917eb90b8fefe2e08a014003a310" translate="yes" xml:space="preserve">
          <source>Web embeds</source>
          <target state="translated">ウェブ埋め込み</target>
        </trans-unit>
        <trans-unit id="1a3e4d6dacc3cb0210cf8c4d1f10eaa3f0fb02fb" translate="yes" xml:space="preserve">
          <source>Web embeds in Electron</source>
          <target state="translated">エレクトロンのWebエンベッド</target>
        </trans-unit>
        <trans-unit id="74d3ee5c1ec7d5e8f52a16fe90e9b99bc291bbc6" translate="yes" xml:space="preserve">
          <source>WebDriver is an open source tool for automated testing of web apps across many browsers. It provides capabilities for navigating to web pages, user input, JavaScript execution, and more. ChromeDriver is a standalone server which implements WebDriver's wire protocol for Chromium. It is being developed by members of the Chromium and WebDriver teams.</source>
          <target state="translated">WebDriverは、多くのブラウザでWebアプリケーションの自動テストを行うためのオープンソースツールです。WebDriverは、Webページへのナビゲート、ユーザー入力、JavaScriptの実行などの機能を提供します。ChromeDriverは、WebDriverのワイヤプロトコルをChromium用に実装したスタンドアロンサーバーです。ChromiumチームとWebDriverチームのメンバーによって開発されています。</target>
        </trans-unit>
        <trans-unit id="5ba9f4d31ebeb5fe86939db3211c3a197f6cbe9e" translate="yes" xml:space="preserve">
          <source>WebRequest</source>
          <target state="translated">WebRequest</target>
        </trans-unit>
        <trans-unit id="87c7ad10f80d3afad5fcaadcd5f89deaeb8130b8" translate="yes" xml:space="preserve">
          <source>WebSource</source>
          <target state="translated">WebSource</target>
        </trans-unit>
        <trans-unit id="0b5a8a2280d81b0eb2d7b2d08aa2b7af38826788" translate="yes" xml:space="preserve">
          <source>WebSource Object</source>
          <target state="translated">ウェブソースオブジェクト</target>
        </trans-unit>
        <trans-unit id="dd564f49cf69bc23ac4c6cdd969d17dde9d841aa" translate="yes" xml:space="preserve">
          <source>WebView is a custom element (&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;) that will only work inside Electron. They are implemented as an &quot;out-of-process iframe&quot;. This means that all communication with the &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; is done asynchronously using IPC. The &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; element has many custom methods and events, similar to &lt;code&gt;webContents&lt;/code&gt;, that provide you with greater control over the content.</source>
          <target state="translated">WebViewは、Electron内でのみ機能するカスタム要素（ &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; ）です。それらは「アウトプロセスiframe」として実装されます。これは、 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; とのすべての通信がIPCを使用して非同期的に行われることを意味します。 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 要素は次のように多くのカスタムメソッドやイベント、持ってい &lt;code&gt;webContents&lt;/code&gt; コンテンツをより細かく制御を提供し、。</target>
        </trans-unit>
        <trans-unit id="01f7b830174736fb822a9f404e07f0189cf27d3c" translate="yes" xml:space="preserve">
          <source>WebViews</source>
          <target state="translated">WebViews</target>
        </trans-unit>
        <trans-unit id="c112d5c99a8c8abd050532826bbf719da263a542" translate="yes" xml:space="preserve">
          <source>WebViews: Do not use &lt;code&gt;allowpopups&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;allowpopups&lt;/code&gt; ：allowpopupsを使用しないでください</target>
        </trans-unit>
        <trans-unit id="23a10ac39f824a13f17ba217824f40bbce9c0368" translate="yes" xml:space="preserve">
          <source>WebViews: Verify the options and params of all &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tags</source>
          <target state="translated">WebViews：すべての &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; タグのオプションとパラメーターを確認します</target>
        </trans-unit>
        <trans-unit id="82a0373f51a51a611eb8211e50702cdb2b58bc74" translate="yes" xml:space="preserve">
          <source>Well-defined stabilization branches</source>
          <target state="translated">よく定義された安定化ブランチ</target>
        </trans-unit>
        <trans-unit id="e71d224a2fc235cbf569760950b6126725c90016" translate="yes" xml:space="preserve">
          <source>Welsh</source>
          <target state="translated">Welsh</target>
        </trans-unit>
        <trans-unit id="6acef4256ada3cb9ffcdc519a504885b5a8289b5" translate="yes" xml:space="preserve">
          <source>What are fuses?</source>
          <target state="translated">ヒューズとは何ですか?</target>
        </trans-unit>
        <trans-unit id="16ca6116608ca7e24740b3edd624ffad3c69f41e" translate="yes" xml:space="preserve">
          <source>What is going on above?</source>
          <target state="translated">上の方はどうなっているのでしょうか?</target>
        </trans-unit>
        <trans-unit id="89511a76c8cbc174d6fe0018b08443f894e18a4b" translate="yes" xml:space="preserve">
          <source>What is it?</source>
          <target state="translated">それは何ですか?</target>
        </trans-unit>
        <trans-unit id="a5f3f0c94d6855347f2dad2276f976795ddbfef0" translate="yes" xml:space="preserve">
          <source>What should I do if a DevTools Extension is not working?</source>
          <target state="translated">DevTools Extensionが動作しない場合はどうすればよいですか?</target>
        </trans-unit>
        <trans-unit id="c066f772a6aa5ecafa2d0c7507ee487f10d46157" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s important about the second point is that apps using &lt;code&gt;^&lt;/code&gt; should still be able to expect a reasonable level of stability. To accomplish this, semver allows for a &lt;em&gt;pre-release identifier&lt;/em&gt; to indicate a particular version is not yet &lt;em&gt;safe&lt;/em&gt; or &lt;em&gt;stable&lt;/em&gt;.</source>
          <target state="translated">2番目のポイントで重要なのは、 &lt;code&gt;^&lt;/code&gt; を使用するアプリでも、妥当なレベルの安定性を期待できることです。これを実現するために、semverでは&lt;em&gt;プレリリース識別子&lt;/em&gt;を使用して、特定のバージョンがまだ&lt;em&gt;安全&lt;/em&gt;または&lt;em&gt;安定して&lt;/em&gt;いないことを示すことができます。</target>
        </trans-unit>
        <trans-unit id="ace10cc15d258fc4f89fba0951eab3758d341f15" translate="yes" xml:space="preserve">
          <source>Whatever you choose, you will periodically have to bump the version in your &lt;code&gt;package.json&lt;/code&gt; as breaking changes are a fact of Chromium life.</source>
          <target state="translated">何を選択するにしても、 &lt;code&gt;package.json&lt;/code&gt; な変更はChromiumの日常の事実であるため、package.jsonのバージョンを定期的にバンプする必要があります。</target>
        </trans-unit>
        <trans-unit id="b5c9f472f8144133c555ffd35d5a108d9d101d9e" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;app.relaunch&lt;/code&gt; is called for multiple times, multiple instances will be started after current instance exited.</source>
          <target state="translated">とき &lt;code&gt;app.relaunch&lt;/code&gt; が複数回呼び出された現在のインスタンスが終了した後、複数のインスタンスが開始されます。</target>
        </trans-unit>
        <trans-unit id="456f7f444fa36d99a78a498a32530e083c0c1edf" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;callback&lt;/code&gt; is called with nothing, a number, or an object that has an &lt;code&gt;error&lt;/code&gt; property, the &lt;code&gt;request&lt;/code&gt; will fail with the &lt;code&gt;error&lt;/code&gt; number you specified. For the available error numbers you can use, please see the &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;net error list&lt;/a&gt;.</source>
          <target state="translated">ときに &lt;code&gt;callback&lt;/code&gt; 何もない、数、または持つオブジェクトで呼び出され &lt;code&gt;error&lt;/code&gt; プロパティを、 &lt;code&gt;request&lt;/code&gt; で失敗します &lt;code&gt;error&lt;/code&gt; あなたが指定した数。使用できるエラー番号については、&lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;ネットエラーリスト&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="31dff80772f7948cfeb3997ba3f24f7bf5c9a644" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;contents&lt;/code&gt; is a &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag, the &lt;code&gt;mode&lt;/code&gt; would be &lt;code&gt;detach&lt;/code&gt; by default, explicitly passing an empty &lt;code&gt;mode&lt;/code&gt; can force using last used dock state.</source>
          <target state="translated">とき &lt;code&gt;contents&lt;/code&gt; ある &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; タグ、 &lt;code&gt;mode&lt;/code&gt; なり &lt;code&gt;detach&lt;/code&gt; デフォルトでは、明示的に空に渡し &lt;code&gt;mode&lt;/code&gt; 最後に使用ドック状態を使用して強制することができます。</target>
        </trans-unit>
        <trans-unit id="192f5d608481464886caca6b87708a5b8e4599c8" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;contextIsolation&lt;/code&gt; is enabled in your &lt;code&gt;webPreferences&lt;/code&gt;, your &lt;code&gt;preload&lt;/code&gt; scripts run in an &quot;Isolated World&quot;. You can read more about context isolation and what it affects in the &lt;a href=&quot;../tutorial/security#3-enable-context-isolation-for-remote-content&quot;&gt;security&lt;/a&gt; docs.</source>
          <target state="translated">とき &lt;code&gt;contextIsolation&lt;/code&gt; があなたの中で有効になっている &lt;code&gt;webPreferences&lt;/code&gt; 、あなたの &lt;code&gt;preload&lt;/code&gt; スクリプトは、「単離された世界」で実行します。コンテキストの分離とそれが&lt;a href=&quot;../tutorial/security#3-enable-context-isolation-for-remote-content&quot;&gt;セキュリティ&lt;/a&gt;ドキュメントに与える影響について詳しくは、こちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="fa9bad17aece834731e448310f31ba38dc468103" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;contextIsolation&lt;/code&gt; is enabled in your &lt;code&gt;webPreferences&lt;/code&gt;, your &lt;code&gt;preload&lt;/code&gt; scripts run in an &quot;Isolated World&quot;. You can read more about context isolation and what it affects in the &lt;a href=&quot;tutorial/security#3-enable-context-isolation-for-remote-content&quot;&gt;security&lt;/a&gt; docs.</source>
          <target state="translated">とき &lt;code&gt;contextIsolation&lt;/code&gt; があなたの中で有効になっている &lt;code&gt;webPreferences&lt;/code&gt; 、あなたの &lt;code&gt;preload&lt;/code&gt; スクリプトは、「単離された世界」で実行します。コンテキストの分離とそれが&lt;a href=&quot;tutorial/security#3-enable-context-isolation-for-remote-content&quot;&gt;セキュリティ&lt;/a&gt;ドキュメントに与える影響について詳しくは、こちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="3a569732b401f28d6808fd0b7c6786b84077da6d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;critical&lt;/code&gt; is passed, the dock icon will bounce until either the application becomes active or the request is canceled.</source>
          <target state="translated">ときに &lt;code&gt;critical&lt;/code&gt; 渡されるアプリケーションのいずれかがアクティブになるか、要求が取り消されるまで、ドックアイコンがバウンスします。</target>
        </trans-unit>
        <trans-unit id="dd980d90a602eb0751dc1da5ccb8f8adcec09216" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;informational&lt;/code&gt; is passed, the dock icon will bounce for one second. However, the request remains active until either the application becomes active or the request is canceled.</source>
          <target state="translated">ときに &lt;code&gt;informational&lt;/code&gt; 渡され、ドックアイコンは1秒間返送されます。ただし、アプリケーションがアクティブになるか、要求が取り消されるまで、要求はアクティブのままです。</target>
        </trans-unit>
        <trans-unit id="6a60883c8376a324af62e40798e08e78df8bc2e0" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;pacScript&lt;/code&gt; and &lt;code&gt;proxyRules&lt;/code&gt; are provided together, the &lt;code&gt;proxyRules&lt;/code&gt; option is ignored and &lt;code&gt;pacScript&lt;/code&gt; configuration is applied.</source>
          <target state="translated">とき &lt;code&gt;pacScript&lt;/code&gt; と &lt;code&gt;proxyRules&lt;/code&gt; が一緒に提供され、 &lt;code&gt;proxyRules&lt;/code&gt; のオプションは無視され、 &lt;code&gt;pacScript&lt;/code&gt; の設定が適用されます。</target>
        </trans-unit>
        <trans-unit id="9cd810bfc145fbdfd0c173f59183e7e16bf402a3" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;window.open&lt;/code&gt; is called to create a new window in a web page, a new instance of &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; will be created for the &lt;code&gt;url&lt;/code&gt; and a proxy will be returned to &lt;code&gt;window.open&lt;/code&gt; to let the page have limited control over it.</source>
          <target state="translated">とき &lt;code&gt;window.open&lt;/code&gt; は、Webページに新しいウィンドウを作成するために呼び出され、新しいインスタンス&lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; が&lt;/a&gt;作成されます &lt;code&gt;url&lt;/code&gt; とプロキシがために返される &lt;code&gt;window.open&lt;/code&gt; ページはそれ以上の制限された制御を持つようにします。</target>
        </trans-unit>
        <trans-unit id="0365519eaa98ae308b22fed639b44c0ae3cdf23b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;window.open&lt;/code&gt; is called to create a new window in a web page, a new instance of &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; will be created for the &lt;code&gt;url&lt;/code&gt; and a proxy will be returned to &lt;code&gt;window.open&lt;/code&gt; to let the page have limited control over it.</source>
          <target state="translated">とき &lt;code&gt;window.open&lt;/code&gt; は、Webページに新しいウィンドウを作成するために呼び出され、新しいインスタンス&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; が&lt;/a&gt;作成されます &lt;code&gt;url&lt;/code&gt; とプロキシがために返される &lt;code&gt;window.open&lt;/code&gt; ページはそれ以上の制限された制御を持つようにします。</target>
        </trans-unit>
        <trans-unit id="70c8545dfa1769f6a5287bd816204e2c6bc6117b" translate="yes" xml:space="preserve">
          <source>When Electron reads from an ASAR file, log the read offset and file path to the system &lt;code&gt;tmpdir&lt;/code&gt;. The resulting file can be provided to the ASAR module to optimize file ordering.</source>
          <target state="translated">ElectronがASARファイルから読み取るときは、読み取りオフセットとファイルパスをシステムの &lt;code&gt;tmpdir&lt;/code&gt; に記録します。結果のファイルをASARモジュールに提供して、ファイルの順序を最適化できます。</target>
        </trans-unit>
        <trans-unit id="ce87af82f66818e490066ecb1c5b223544df1af9" translate="yes" xml:space="preserve">
          <source>When a Debug build of Electron succeeds, run the tests: &lt;code&gt;$ ./script/test.py&lt;/code&gt; Fix the failing tests.</source>
          <target state="translated">Electronのデバッグビルドが成功したら、テストを実行します。 &lt;code&gt;$ ./script/test.py&lt;/code&gt; 失敗したテストを修正します。</target>
        </trans-unit>
        <trans-unit id="4adabfb0cb0ac9c9488c68a3c922b7abfa2bd000" translate="yes" xml:space="preserve">
          <source>When a custom &lt;code&gt;pageSize&lt;/code&gt; is passed, Chromium attempts to validate platform specific minimum values for &lt;code&gt;width_microns&lt;/code&gt; and &lt;code&gt;height_microns&lt;/code&gt;. Width and height must both be minimum 353 microns but may be higher on some operating systems.</source>
          <target state="translated">カスタム &lt;code&gt;pageSize&lt;/code&gt; が渡されると、Chromiumは &lt;code&gt;width_microns&lt;/code&gt; と &lt;code&gt;height_microns&lt;/code&gt; のプラットフォーム固有の最小値を検証しようとします。幅と高さは両方とも最小353ミクロンである必要がありますが、一部のオペレーティングシステムではそれより高くなる場合があります。</target>
        </trans-unit>
        <trans-unit id="c3ad9d9e5cbef7f19f5304c67b232db6ae404063" translate="yes" xml:space="preserve">
          <source>When a file is requested from the recent documents menu, the &lt;code&gt;open-file&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt; module will be emitted for it.</source>
          <target state="translated">最近のドキュメントメニューからファイルがリクエストされると、 &lt;code&gt;app&lt;/code&gt; モジュールの &lt;code&gt;open-file&lt;/code&gt; イベントがそのファイルに対して発行されます。</target>
        </trans-unit>
        <trans-unit id="a0f3736560e59ceb8f06d17010139b0984a33deb" translate="yes" xml:space="preserve">
          <source>When a given accelerator is already taken by other applications, this call will silently fail. This behavior is intended by operating systems, since they don't want applications to fight for global shortcuts.</source>
          <target state="translated">与えられたアクセラレータが他のアプリケーションに既に取られている場合、この呼び出しは静かに失敗します。この動作はオペレーティングシステムが意図したもので、アプリケーションがグローバルなショートカットを争うことを望まないからです。</target>
        </trans-unit>
        <trans-unit id="4af129cba0d065057218bcafb47913dc6a00ab79" translate="yes" xml:space="preserve">
          <source>When a new version of Node.js gets released, we usually wait for about a month before upgrading the one in Electron. So we can avoid getting affected by bugs introduced in new Node.js versions, which happens very often.</source>
          <target state="translated">Node.jsの新しいバージョンがリリースされると、通常は1ヶ月ほど待ってからElectronのバージョンをアップグレードします。そうすることで、Node.jsの新しいバージョンで導入されたバグの影響を受けないようにすることができます。</target>
        </trans-unit>
        <trans-unit id="e28a9fb3bae4c0f6cfff053af52bf585b5e4e143" translate="yes" xml:space="preserve">
          <source>When a new version of Node.js is released, Electron usually waits about a month before upgrading in order to bring in a more stable version.</source>
          <target state="translated">Node.jsの新しいバージョンがリリースされると、Electronは通常、より安定したバージョンを導入するためにアップグレードするまで約1ヶ月待ちます。</target>
        </trans-unit>
        <trans-unit id="c8e841e1c8e5b0e561ab67a71f25e70ae245ec48" translate="yes" xml:space="preserve">
          <source>When a release branch reaches the end of its support cycle, the series will be deprecated in NPM and a final end-of-support release will be made. This release will add a warning to inform that an unsupported version of Electron is in use.</source>
          <target state="translated">リリースブランチのサポートサイクルが終了すると、そのシリーズはNPMで非推奨となり、最終的なサポート終了リリースが作成されます。このリリースでは、サポートされていないバージョンのElectronが使用されていることを知らせる警告が追加されます。</target>
        </trans-unit>
        <trans-unit id="63c1b5c06b0137db9d7b639a7533a90a1295a092" translate="yes" xml:space="preserve">
          <source>When a user clicks a file from the JumpList, a new instance of your application will be started with the path of the file added as a command line argument.</source>
          <target state="translated">ユーザーがジャンプ リストからファイルをクリックすると、アプリケーションの新しいインスタンスが、コマンド ライン引数として追加されたファイルのパスで開始されます。</target>
        </trans-unit>
        <trans-unit id="150bb10f9dc16c2c06fee885a40307e7b5a20c45" translate="yes" xml:space="preserve">
          <source>When an API is changed or removed in a way that breaks existing functionality, the previous functionality will be supported for a minimum of two major versions when possible before being removed. For example, if a function takes three arguments, and that number is reduced to two in major version 10, the three-argument version would continue to work until, at minimum, major version 12. Past the minimum two-version threshold, we will attempt to support backwards compatibility beyond two versions until the maintainers feel the maintenance burden is too high to continue doing so.</source>
          <target state="translated">既存の機能を壊すような方法でAPIが変更または削除された場合、それまでの機能は可能な限り最低2つのメジャーバージョンでサポートされ、削除されます。例えば、ある関数が3つの引数を取り、メジャーバージョン10でその数が2つに減った場合、3つの引数を持つバージョンは、少なくともメジャーバージョン12まで動作し続けます。最小の2バージョンのしきい値を超えた後は、メンテナがメンテナンスの負担が大きすぎると感じるまで、2つのバージョンを超えて下位互換性をサポートしようとします。</target>
        </trans-unit>
        <trans-unit id="41d5941e736fa3119df382edb72f3d3acd3f67f1" translate="yes" xml:space="preserve">
          <source>When an item is positioned, all un-positioned items are inserted after it until a new item is positioned. So if you want to position a group of menu items in the same location you only need to specify a position for the first item.</source>
          <target state="translated">ある項目が配置されると、新しい項目が配置されるまで、配置されていないすべての項目がその項目の後に挿入されます。そのため、メニュー項目のグループを同じ位置に配置したい場合は、最初の項目の位置だけを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="b0525bb50acf5ae3ee33497ba1fd8c878021f99a" translate="yes" xml:space="preserve">
          <source>When app indicator is used on Linux, the &lt;code&gt;click&lt;/code&gt; event is ignored.</source>
          <target state="translated">Linuxでアプリインジケーターが使用されている場合、 &lt;code&gt;click&lt;/code&gt; イベントは無視されます。</target>
        </trans-unit>
        <trans-unit id="cc16228cfb7c0d45d4e20bd6343b5761737144cf" translate="yes" xml:space="preserve">
          <source>When building a web application for today's Internet, the oldest environments dictate what features you can and cannot use. Even though Electron supports well-performing CSS filters and animations, an older browser might not. Where you could use WebGL, your developers may have chosen a more resource-hungry solution to support older phones.</source>
          <target state="translated">今日のインターネット用のウェブアプリケーションを構築する場合、古い環境では、使用できる機能と使用できない機能が決まっています。Electronが性能の良いCSSフィルタやアニメーションをサポートしていても、古いブラウザでは使えない場合があります。WebGL を使用することができたとしても、開発者は古い携帯電話をサポートするために、よりリソースを消費するソリューションを選択している可能性があります。</target>
        </trans-unit>
        <trans-unit id="fc56e43eb1dc44b391c45c4f3311046e0a06f658" translate="yes" xml:space="preserve">
          <source>When building an Electron app, your users are better served if you download the fonts and include them in your app's bundle.</source>
          <target state="translated">Electronアプリを構築する際には、フォントをダウンロードしてアプリのバンドルに含めると、ユーザーの利便性が向上します。</target>
        </trans-unit>
        <trans-unit id="32c2bca9c19462ede81c7f0c13be5af4e227a9af" translate="yes" xml:space="preserve">
          <source>When building native modules for windows, the &lt;code&gt;win_delay_load_hook&lt;/code&gt; variable in the module's &lt;code&gt;binding.gyp&lt;/code&gt; must be true (which is the default). If this hook is not present, then the native module will fail to load on Windows, with an error message like &lt;code&gt;Cannot find module&lt;/code&gt;. See the &lt;a href=&quot;tutorial/using-native-node-modules&quot;&gt;native module guide&lt;/a&gt; for more.</source>
          <target state="translated">Windows用のネイティブモジュールを構築する場合、モジュールの &lt;code&gt;binding.gyp&lt;/code&gt; の &lt;code&gt;win_delay_load_hook&lt;/code&gt; 変数はtrueである必要があります（これがデフォルトです）。このフックが存在しない場合、ネイティブモジュールはWindowsでのロードに失敗し、「モジュールが &lt;code&gt;Cannot find module&lt;/code&gt; などのエラーメッセージが表示されます。詳細については、&lt;a href=&quot;tutorial/using-native-node-modules&quot;&gt;ネイティブモジュールガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9aeb364bbb13a5d9c76c3a653868a6203155ec29" translate="yes" xml:space="preserve">
          <source>When built like this, you can make changes to files in &lt;code&gt;vendor/libchromiumcontent/src&lt;/code&gt; and rebuild quickly with:</source>
          <target state="translated">このようにビルドすると、 &lt;code&gt;vendor/libchromiumcontent/src&lt;/code&gt; 内のファイルに変更を加え、次のようにすばやく再ビルドできます。</target>
        </trans-unit>
        <trans-unit id="f9879d2296d3f5ecf7f44dbcd4cd33c42b3c41b0" translate="yes" xml:space="preserve">
          <source>When clicking into a &lt;code&gt;webview&lt;/code&gt;, the page focus will move from the embedder frame to &lt;code&gt;webview&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; クリックすると、ページのフォーカスが &lt;code&gt;webview&lt;/code&gt; フレームからWebビューに移動します。</target>
        </trans-unit>
        <trans-unit id="a64ac0d7e934d4b15293f19c72721b7f79ead20d" translate="yes" xml:space="preserve">
          <source>When considering a module, we recommend that you check:</source>
          <target state="translated">モジュールを検討する際には、チェックしてみることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="1c0c8bf1375eec488a3ed31edd42114167313247" translate="yes" xml:space="preserve">
          <source>When creating a new API, it is preferred to use getters and setters instead of jQuery's one-function style. For example, &lt;code&gt;.getText()&lt;/code&gt; and &lt;code&gt;.setText(text)&lt;/code&gt; are preferred to &lt;code&gt;.text([text])&lt;/code&gt;. There is a &lt;a href=&quot;https://github.com/electron/electron/issues/46&quot;&gt;discussion&lt;/a&gt; on this.</source>
          <target state="translated">新しいAPIを作成するときは、jQueryの1関数スタイルではなく、getterとsetterを使用することをお勧めします。たとえば、 &lt;code&gt;.getText()&lt;/code&gt; と &lt;code&gt;.setText(text)&lt;/code&gt; は &lt;code&gt;.text([text])&lt;/code&gt; よりも優先されます。これ&lt;a href=&quot;https://github.com/electron/electron/issues/46&quot;&gt;についての議論&lt;/a&gt;があります。</target>
        </trans-unit>
        <trans-unit id="a93d8abc83939aafd2127f83b0e1112bd00cc72d" translate="yes" xml:space="preserve">
          <source>When defining &lt;code&gt;accessibilityLabel&lt;/code&gt;, ensure you have considered macOS &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsaccessibilitybutton/1524910-accessibilitylabel?language=objc&quot;&gt;best practices&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;accessibilityLabel&lt;/code&gt; ラベルを定義するときは、macOSの&lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsaccessibilitybutton/1524910-accessibilitylabel?language=objc&quot;&gt;ベストプラクティス&lt;/a&gt;を考慮していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="7ca45c8b630c74a7810dc81d9be5eaa28c5fd0c2" translate="yes" xml:space="preserve">
          <source>When developing on linux with gdb, it is recommended to add a gdb index to speed up loading symbols. This doesn't need to be executed on every build, but it is recommended to do it at least once to index most shared libraries:</source>
          <target state="translated">gdb を使って linux で開発する場合、シンボルの読み込みを高速化するために gdb インデックスを追加することをお勧めします。これはすべてのビルドで実行する必要はありませんが、ほとんどの共有ライブラリのインデックスを作成するために少なくとも一度は実行することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="49d048d8fbcec9966cd7416d678774a21cb11ea0" translate="yes" xml:space="preserve">
          <source>When disabling Node.js integration, you can still expose APIs to your website that do consume Node.js modules or features. Preload scripts continue to have access to &lt;code&gt;require&lt;/code&gt; and other Node.js features, allowing developers to expose a custom API to remotely loaded content.</source>
          <target state="translated">Node.js統合を無効にしても、Node.jsモジュールまたは機能を使用するAPIをWebサイトに公開できます。プリロードスクリプトは、 &lt;code&gt;require&lt;/code&gt; やその他のNode.js機能に引き続きアクセスできるため、開発者はリモートでロードされたコンテンツにカスタムAPIを公開できます。</target>
        </trans-unit>
        <trans-unit id="1e879ee9a3aa69880b74c61d82e2c0298daa892d" translate="yes" xml:space="preserve">
          <source>When in doubt, run &lt;code&gt;electron-rebuild&lt;/code&gt; first.</source>
          <target state="translated">疑問がある場合は、最初に &lt;code&gt;electron-rebuild&lt;/code&gt; を実行してください。</target>
        </trans-unit>
        <trans-unit id="42cd45d627f4dfff375e983a2953491047ab0647" translate="yes" xml:space="preserve">
          <source>When in-page navigation happens, the page URL changes but does not cause navigation outside of the page. Examples of this occurring are when anchor links are clicked or when the DOM &lt;code&gt;hashchange&lt;/code&gt; event is triggered.</source>
          <target state="translated">ページ内ナビゲーションが発生すると、ページURLは変更されますが、ページ外へのナビゲーションは発生しません。これが発生する例は、アンカーリンクがクリックされたとき、またはDOM &lt;code&gt;hashchange&lt;/code&gt; イベントがトリガーされたときです。</target>
        </trans-unit>
        <trans-unit id="6cd6c5a62f976c02511cfedcc88830a074fc9650" translate="yes" xml:space="preserve">
          <source>When installing the &lt;code&gt;electron&lt;/code&gt; NPM package, it automatically downloads the electron binary.</source>
          <target state="translated">&lt;code&gt;electron&lt;/code&gt; NPMパッケージをインストールすると、電子バイナリが自動的にダウンロードされます。</target>
        </trans-unit>
        <trans-unit id="c2b81c8283a3b8869917c2f6416d6390b5bd5176" translate="yes" xml:space="preserve">
          <source>When it comes to JavaScript, you may have included toolkit libraries like jQuery for DOM selectors or polyfills like the &lt;code&gt;regenerator-runtime&lt;/code&gt; to support &lt;code&gt;async/await&lt;/code&gt;.</source>
          <target state="translated">JavaScriptに関しては、DOMセレクター用のjQueryのようなツールキットライブラリや、 &lt;code&gt;async/await&lt;/code&gt; をサポートするための &lt;code&gt;regenerator-runtime&lt;/code&gt; のようなポリフィルが含まれている場合があります。</target>
        </trans-unit>
        <trans-unit id="ffa7ec246b02079f9850e4222849f48e347352eb" translate="yes" xml:space="preserve">
          <source>When loading a page in the window directly, users may see the page load incrementally, which is not a good experience for a native app. To make the window display without visual flash, there are two solutions for different situations.</source>
          <target state="translated">ウィンドウに直接ページを読み込む場合、ユーザーはページがインクリメンタルに読み込まれていくのを見ることがありますが、これはネイティブアプリとしては良い体験ではありません。ビジュアルフラッシュなしでウィンドウを表示させるには、状況に応じて2つの解決策があります。</target>
        </trans-unit>
        <trans-unit id="e63e94bff708562a23b4df513db393aea02a750a" translate="yes" xml:space="preserve">
          <source>When opening a new issue in the &lt;a href=&quot;https://github.com/electron/electron/issues/new/choose&quot;&gt;&lt;code&gt;electron/electron&lt;/code&gt; issue tracker&lt;/a&gt;, users will be presented with &lt;a href=&quot;https://github.com/electron/electron/blob/master/.github/ISSUE_TEMPLATE/Bug_report.md&quot;&gt;a template&lt;/a&gt; that should be filled in.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/electron/issues/new/choose&quot;&gt; &lt;code&gt;electron/electron&lt;/code&gt; 課題トラッカー&lt;/a&gt;で新しい課題を開くと、ユーザーには入力する必要の&lt;a href=&quot;https://github.com/electron/electron/blob/master/.github/ISSUE_TEMPLATE/Bug_report.md&quot;&gt;あるテンプレート&lt;/a&gt;が表示されます。</target>
        </trans-unit>
        <trans-unit id="58e2bd77bbfbc230db536d0c9b42b46cedca98de" translate="yes" xml:space="preserve">
          <source>When opening a new issue in the &lt;code&gt;electron/electron&lt;/code&gt; issue tracker, users will be presented with a template that should be filled in.</source>
          <target state="translated">&lt;code&gt;electron/electron&lt;/code&gt; Issue Trackerで新しい課題を開くと、入力する必要のあるテンプレートがユーザーに表示されます。</target>
        </trans-unit>
        <trans-unit id="d63c92a1b4ab30f75510aaef48b73fe1880c77d3" translate="yes" xml:space="preserve">
          <source>When running &lt;code&gt;npm install electron&lt;/code&gt;, some users occasionally encounter installation errors.</source>
          <target state="translated">&lt;code&gt;npm install electron&lt;/code&gt; を実行すると、インストールエラーが発生する場合があります。</target>
        </trans-unit>
        <trans-unit id="31bcd3a5bfe5ffc9234145bae66e8e56e5af9350" translate="yes" xml:space="preserve">
          <source>When running from the &lt;code&gt;electron&lt;/code&gt; package, this variable tells the &lt;code&gt;electron&lt;/code&gt; command to use the specified build of Electron instead of the one downloaded by &lt;code&gt;npm install&lt;/code&gt;. Usage:</source>
          <target state="translated">&lt;code&gt;electron&lt;/code&gt; icパッケージから実行する場合、この変数は、 &lt;code&gt;npm install&lt;/code&gt; によってダウンロードされたものではなく、指定されたElectronのビルドを使用するように &lt;code&gt;electron&lt;/code&gt; コマンドに指示します。使用法：</target>
        </trans-unit>
        <trans-unit id="fdf46f698812ee35f1390fe0d63b21efa8efe315" translate="yes" xml:space="preserve">
          <source>When sending a message, the event name is the &lt;code&gt;channel&lt;/code&gt;.</source>
          <target state="translated">メッセージを送信する場合、イベント名は &lt;code&gt;channel&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="026cd3c409616b7869503b07d15f0286b73a2a63" translate="yes" xml:space="preserve">
          <source>When setting minimum or maximum window size with &lt;code&gt;minWidth&lt;/code&gt;/&lt;code&gt;maxWidth&lt;/code&gt;/ &lt;code&gt;minHeight&lt;/code&gt;/&lt;code&gt;maxHeight&lt;/code&gt;, it only constrains the users. It won't prevent you from passing a size that does not follow size constraints to &lt;code&gt;setBounds&lt;/code&gt;/&lt;code&gt;setSize&lt;/code&gt; or to the constructor of &lt;code&gt;BrowserWindow&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;minWidth&lt;/code&gt; / &lt;code&gt;maxWidth&lt;/code&gt; / &lt;code&gt;minHeight&lt;/code&gt; / &lt;code&gt;maxHeight&lt;/code&gt; で最小または最大ウィンドウサイズを設定すると、ユーザーのみが制約されます。サイズの制約に従わないサイズを &lt;code&gt;setBounds&lt;/code&gt; / &lt;code&gt;setSize&lt;/code&gt; または &lt;code&gt;BrowserWindow&lt;/code&gt; のコンストラクターに渡すことを妨げません。</target>
        </trans-unit>
        <trans-unit id="90d62066c69168073116631a6384e6a720cd0b99" translate="yes" xml:space="preserve">
          <source>When specifying a &lt;code&gt;role&lt;/code&gt; on macOS, &lt;code&gt;label&lt;/code&gt; and &lt;code&gt;accelerator&lt;/code&gt; are the only options that will affect the menu item. All other options will be ignored. Lowercase &lt;code&gt;role&lt;/code&gt;, e.g. &lt;code&gt;toggledevtools&lt;/code&gt;, is still supported.</source>
          <target state="translated">macOSで &lt;code&gt;role&lt;/code&gt; を指定する場合、 &lt;code&gt;label&lt;/code&gt; と &lt;code&gt;accelerator&lt;/code&gt; はメニュー項目に影響する唯一のオプションです。他のすべてのオプションは無視されます。小文字の &lt;code&gt;role&lt;/code&gt; 、たとえば &lt;code&gt;toggledevtools&lt;/code&gt; は引き続きサポートされます。</target>
        </trans-unit>
        <trans-unit id="06ffacf9a55aab2f28f18e900e6aece49fef7167" translate="yes" xml:space="preserve">
          <source>When the API is a property of object, and it is complex enough to be in a separate chapter like &lt;code&gt;win.webContents&lt;/code&gt;, use &lt;code&gt;mixedCase&lt;/code&gt;.</source>
          <target state="translated">APIがオブジェクトのプロパティであり、 &lt;code&gt;win.webContents&lt;/code&gt; のように別の章に入るほど複雑な場合は、mixedCaseを使用し &lt;code&gt;mixedCase&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9c152abebe626c6e46178a5a04ade37b38af515" translate="yes" xml:space="preserve">
          <source>When the accelerator is already taken by other applications, this call will silently fail. This behavior is intended by operating systems, since they don't want applications to fight for global shortcuts.</source>
          <target state="translated">アクセラレータが他のアプリケーションに既に取られている場合、この呼び出しは静かに失敗します。この動作はオペレーティングシステムが意図したもので、アプリケーションがグローバルショートカットを争うことを望まないためです。</target>
        </trans-unit>
        <trans-unit id="1d5838ce082306cd4c8181a6d64abbc773f35d78" translate="yes" xml:space="preserve">
          <source>When the accelerator is already taken by other applications, this call will still return &lt;code&gt;false&lt;/code&gt;. This behavior is intended by operating systems, since they don't want applications to fight for global shortcuts.</source>
          <target state="translated">アクセラレータがすでに他のアプリケーションによって使用されている場合、この呼び出しは引き続き &lt;code&gt;false&lt;/code&gt; を返します。アプリケーションがグローバルショートカットを求めて戦うことを望まないため、この動作はオペレーティングシステムが意図しています。</target>
        </trans-unit>
        <trans-unit id="32d941bd107ec5badbfb17fcf24236ce65d08f30" translate="yes" xml:space="preserve">
          <source>When the build succeeds, create a &lt;code&gt;dist&lt;/code&gt; for Electron</source>
          <target state="translated">ビルドが成功したら、Electronの &lt;code&gt;dist&lt;/code&gt; を作成します</target>
        </trans-unit>
        <trans-unit id="a7c82e0855b7d61f40b4d8e04977013de717f825" translate="yes" xml:space="preserve">
          <source>When the guest page doesn't have node integration this script will still have access to all Node APIs, but global objects injected by Node will be deleted after this script has finished executing.</source>
          <target state="translated">ゲストページにノードの統合がない場合でも、このスクリプトはすべてのNode APIにアクセスできますが、Nodeによって注入されたグローバルオブジェクトは、このスクリプトの実行が終了した後に削除されます。</target>
        </trans-unit>
        <trans-unit id="334e65c0cf0c904209683fd0d549e28f6a7303a7" translate="yes" xml:space="preserve">
          <source>When the module is a set of APIs, like &lt;code&gt;globalShortcut&lt;/code&gt;, use &lt;code&gt;camelCase&lt;/code&gt;.</source>
          <target state="translated">モジュールが &lt;code&gt;globalShortcut&lt;/code&gt; のようなAPIのセットである場合は、 &lt;code&gt;camelCase&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="5448caaac69b12b0b3664bb08a80aedeee75b734" translate="yes" xml:space="preserve">
          <source>When the module itself is a class like &lt;code&gt;BrowserWindow&lt;/code&gt;, use &lt;code&gt;PascalCase&lt;/code&gt;.</source>
          <target state="translated">モジュール自体が &lt;code&gt;BrowserWindow&lt;/code&gt; のようなクラスである場合は、 &lt;code&gt;PascalCase&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="303b7d0b4b980b8a55487fde8e2b22a30171460c" translate="yes" xml:space="preserve">
          <source>When this API is called, the &lt;code&gt;before-quit&lt;/code&gt; event is not emitted before all windows are closed. As a result you should listen to this event if you wish to perform actions before the windows are closed while a process is quitting, as well as listening to &lt;code&gt;before-quit&lt;/code&gt;.</source>
          <target state="translated">このAPIが呼び出されると、 &lt;code&gt;before-quit&lt;/code&gt; 、すべてのウィンドウが閉じられる前にイベントが放出されていません。その結果、あなたは、このイベントに耳を傾けなければならないあなたが窓の前にアクションを実行したい場合、プロセスは終了、などを聴いている間、閉鎖されている &lt;code&gt;before-quit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cab3b6f556851b04e8e55090fa6814c4559ff9da" translate="yes" xml:space="preserve">
          <source>When this attribute is present the &lt;code&gt;webview&lt;/code&gt; container will automatically resize within the bounds specified by the attributes &lt;code&gt;minwidth&lt;/code&gt;, &lt;code&gt;minheight&lt;/code&gt;, &lt;code&gt;maxwidth&lt;/code&gt;, and &lt;code&gt;maxheight&lt;/code&gt;. These constraints do not impact the &lt;code&gt;webview&lt;/code&gt; unless &lt;code&gt;autosize&lt;/code&gt; is enabled. When &lt;code&gt;autosize&lt;/code&gt; is enabled, the &lt;code&gt;webview&lt;/code&gt; container size cannot be less than the minimum values or greater than the maximum.</source>
          <target state="translated">この属性が存在する場合、 &lt;code&gt;webview&lt;/code&gt; コンテナーは、属性 &lt;code&gt;minwidth&lt;/code&gt; 、 &lt;code&gt;minheight&lt;/code&gt; 、 &lt;code&gt;maxwidth&lt;/code&gt; 、および &lt;code&gt;maxheight&lt;/code&gt; で指定された範囲内で自動的にサイズ変更されます。 &lt;code&gt;autosize&lt;/code&gt; が有効になっていない限り、これらの制約は &lt;code&gt;webview&lt;/code&gt; 影響を与えません。ときに &lt;code&gt;autosize&lt;/code&gt; 有効になっている、 &lt;code&gt;webview&lt;/code&gt; コンテナのサイズが少ない最大値より最小値または超えることはできません。</target>
        </trans-unit>
        <trans-unit id="bf3a7cc4a51432de841664595d9f417cfed4c267" translate="yes" xml:space="preserve">
          <source>When this attribute is present the &lt;code&gt;webview&lt;/code&gt; contents will be prevented from resizing when the &lt;code&gt;webview&lt;/code&gt; element itself is resized.</source>
          <target state="translated">この属性が存在する場合、 &lt;code&gt;webview&lt;/code&gt; 要素自体のサイズが変更されても、 &lt;code&gt;webview&lt;/code&gt; コンテンツのサイズは変更されません。</target>
        </trans-unit>
        <trans-unit id="1ccd91f8373c79e62edaf63ffd3e77fd3788a760" translate="yes" xml:space="preserve">
          <source>When this attribute is present the guest page in &lt;code&gt;webview&lt;/code&gt; will be able to use browser plugins. Plugins are disabled by default.</source>
          <target state="translated">この属性が存在する場合、 &lt;code&gt;webview&lt;/code&gt; のゲストページはブラウザプラグインを使用できます。プラグインはデフォルトで無効になっています。</target>
        </trans-unit>
        <trans-unit id="c166798b6dfa01763e657f9e801579c0f5ec5029" translate="yes" xml:space="preserve">
          <source>When this attribute is present the guest page in &lt;code&gt;webview&lt;/code&gt; will have node integration and can use node APIs like &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;process&lt;/code&gt; to access low level system resources. Node integration is disabled by default in the guest page.</source>
          <target state="translated">この属性が存在する場合、 &lt;code&gt;webview&lt;/code&gt; のゲストページにはノード統合があり、 &lt;code&gt;require&lt;/code&gt; や &lt;code&gt;process&lt;/code&gt; などのノードAPI を使用して低レベルのシステムリソースにアクセスできます。ゲストページでは、ノード統合はデフォルトで無効になっています。</target>
        </trans-unit>
        <trans-unit id="4026a0fe5320731820921d09d7c2b0ff4ab4527b" translate="yes" xml:space="preserve">
          <source>When this attribute is present the guest page will be allowed to open new windows. Popups are disabled by default.</source>
          <target state="translated">この属性がある場合、ゲストページは新しいウィンドウを開くことができます。ポップアップはデフォルトでは無効になっています。</target>
        </trans-unit>
        <trans-unit id="9cad98fec18b3def3ea6574146acfad2f35d59ea" translate="yes" xml:space="preserve">
          <source>When this attribute is present the guest page will have web security disabled. Web security is enabled by default.</source>
          <target state="translated">この属性がある場合、ゲストページはウェブセキュリティを無効にします。ウェブセキュリティはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="5e3a763e4da6e655f701a386cd29b34907d71eab" translate="yes" xml:space="preserve">
          <source>When updating an upstream dependency, patches may fail to apply cleanly. Often, the conflict can be resolved automatically by git with a 3-way merge. You can instruct &lt;code&gt;git-import-patches&lt;/code&gt; to use the 3-way merge algorithm by passing the &lt;code&gt;-3&lt;/code&gt; argument:</source>
          <target state="translated">アップストリームの依存関係を更新すると、パッチが正しく適用されない場合があります。多くの場合、競合は3方向マージを使用したgitによって自動的に解決できます。 &lt;code&gt;-3&lt;/code&gt; 引数を渡すことで、3ウェイマージアルゴリズムを使用するように &lt;code&gt;git-import-patches&lt;/code&gt; に指示できます。</target>
        </trans-unit>
        <trans-unit id="4769b73e3b434c09dc674c0419173085f791e37a" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;https://github.com/electron/windows-installer&quot;&gt;electron-winstaller&lt;/a&gt; or &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;electron-forge&lt;/a&gt; make sure you do not try to update your app &lt;a href=&quot;https://github.com/electron/windows-installer#handling-squirrel-events&quot;&gt;the first time it runs&lt;/a&gt; (Also see &lt;a href=&quot;https://github.com/electron/electron/issues/7155&quot;&gt;this issue for more info&lt;/a&gt;). It's also recommended to use &lt;a href=&quot;https://github.com/mongodb-js/electron-squirrel-startup&quot;&gt;electron-squirrel-startup&lt;/a&gt; to get desktop shortcuts for your app.</source>
          <target state="translated">使用する場合は&lt;a href=&quot;https://github.com/electron/windows-installer&quot;&gt;電子winstaller&lt;/a&gt;または&lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;電子鍛造&lt;/a&gt;メイクをしてください、あなたのアプリの更新しようとしない&lt;a href=&quot;https://github.com/electron/windows-installer#handling-squirrel-events&quot;&gt;、それが実行される最初の時間を&lt;/a&gt;（も参照してください&lt;a href=&quot;https://github.com/electron/electron/issues/7155&quot;&gt;詳細は、この問題を&lt;/a&gt;）。また、&lt;a href=&quot;https://github.com/mongodb-js/electron-squirrel-startup&quot;&gt;electron-squirrel-startup&lt;/a&gt;を使用して、アプリのデスクトップショートカットを取得することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="25e74dc82902249d38edb1c6669a843d311a64f1" translate="yes" xml:space="preserve">
          <source>When using Electron's built-in module you might encounter an error like this:</source>
          <target state="translated">Electronの組み込みモジュールを使用していると、このようなエラーが発生することがあります。</target>
        </trans-unit>
        <trans-unit id="141b263ff7dbbf3adb2a9bdd1a4baa976917fec9" translate="yes" xml:space="preserve">
          <source>When will Electron upgrade to latest Chrome?</source>
          <target state="translated">いつになったら最新のChromeにアップグレードしますか?</target>
        </trans-unit>
        <trans-unit id="dd0a018dc449c02b4585c1d3bfc398635f53c2a3" translate="yes" xml:space="preserve">
          <source>When will Electron upgrade to latest Node.js?</source>
          <target state="translated">Electronが最新のNode.jsにアップグレードするのはいつですか?</target>
        </trans-unit>
        <trans-unit id="4c447319f3227cf1e5e637ec676465ec2920e3bd" translate="yes" xml:space="preserve">
          <source>When working with Electron, it is important to understand that Electron is not a web browser. It allows you to build feature-rich desktop applications with familiar web technologies, but your code wields much greater power. JavaScript can access the filesystem, user shell, and more. This allows you to build high quality native applications, but the inherent security risks scale with the additional powers granted to your code.</source>
          <target state="translated">Electronを使用する際には、ElectronはWebブラウザではないことを理解しておくことが重要です。使い慣れたWeb技術を使って機能豊富なデスクトップアプリケーションを構築することができますが、あなたのコードはより大きな力を発揮します。JavaScriptは、ファイルシステムやユーザシェルなどにアクセスすることができます。これにより、高品質なネイティブアプリケーションを構築することができますが、固有のセキュリティリスクは、コードに付与された権限の増加に伴って増大します。</target>
        </trans-unit>
        <trans-unit id="2eb5ab70c6dfeb0dcafdde60897e2fc3320e2a08" translate="yes" xml:space="preserve">
          <source>When you are using Goma you can run &lt;code&gt;ninja&lt;/code&gt; with a substantially higher &lt;code&gt;j&lt;/code&gt; value than would normally be supported by your machine.</source>
          <target state="translated">Gomaを使用している場合は、通常のマシンでサポートされているよりも大幅に高い &lt;code&gt;j&lt;/code&gt; 値で &lt;code&gt;ninja&lt;/code&gt; を実行できます。</target>
        </trans-unit>
        <trans-unit id="902e45cab9a8c0513d3f352d52d5f79c91bb854c" translate="yes" xml:space="preserve">
          <source>Whenever you make changes to Electron source code, you'll need to re-run the build before the tests:</source>
          <target state="translated">Electronのソースコードに変更を加えた場合は、テスト前にビルドを再実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="4c702e1d705c8ea85e0ef2aa93391701be26f8c6" translate="yes" xml:space="preserve">
          <source>Whenever your Electron application is not behaving the way you wanted it to, an array of debugging tools might help you find coding errors, performance bottlenecks, or optimization opportunities.</source>
          <target state="translated">お使いのElectronアプリケーションが思い通りに動作しない場合は、さまざまなデバッグツールを使用することで、コーディングエラーやパフォーマンスのボトルネック、最適化の機会を見つけることができるかもしれません。</target>
        </trans-unit>
        <trans-unit id="e3a8fd6b5869b16ab4c16f99eb234faa9be29347" translate="yes" xml:space="preserve">
          <source>Whether the prebuilt binary can run on a distribution depends on whether the distribution includes the libraries that Electron is linked to on the building platform, so only Ubuntu 12.04 is guaranteed to work, but following platforms are also verified to be able to run the prebuilt binaries of Electron:</source>
          <target state="translated">ディストリビューション上でビルド済みバイナリが動作するかどうかは、ビルドプラットフォーム上でElectronがリンクされているライブラリがディストリビューションに含まれているかどうかに依存しますので、Ubuntu 12.04のみ動作が保証されていますが、以下のプラットフォームでもElectronのビルド済みバイナリが動作することが確認されています。</target>
        </trans-unit>
        <trans-unit id="2fbd4a88e4f3b445bb4173d274de9ca4504c3527" translate="yes" xml:space="preserve">
          <source>Whether the prebuilt binary can run on a distribution depends on whether the distribution includes the libraries that Electron is linked to on the building platform, so only Ubuntu 18.04 is guaranteed to work, but following platforms are also verified to be able to run the prebuilt binaries of Electron:</source>
          <target state="translated">プリビルドバイナリがディストリビューション上で動作するかどうかは、ビルドプラットフォーム上でElectronがリンクされているライブラリがディストリビューションに含まれているかどうかに依存しますので、Ubuntu 18.04のみ動作が保証されていますが、以下のプラットフォームでもElectronのプリビルドバイナリが動作することが確認されています。</target>
        </trans-unit>
        <trans-unit id="dc2ac02146c42e145d4eb347819c79b5c7f26622" translate="yes" xml:space="preserve">
          <source>Which Process Should I Attach to?</source>
          <target state="translated">どのプロセスにアタッチすべきか?</target>
        </trans-unit>
        <trans-unit id="66ecac3884229beaadc7d5408c7db6b87cd8e328" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;clang-tidy&lt;/code&gt; has a &lt;a href=&quot;https://clang.llvm.org/extra/clang-tidy/checks/list.html&quot;&gt;long list&lt;/a&gt; of possible checks, in Electron only a few are enabled by default. At the moment Electron doesn't have a &lt;code&gt;.clang-tidy&lt;/code&gt; config, so &lt;code&gt;clang-tidy&lt;/code&gt; will find the one from Chromium at &lt;code&gt;src/.clang-tidy&lt;/code&gt; and use the checks which Chromium has enabled. You can change which checks are run by using the &lt;code&gt;--checks=&lt;/code&gt; option. This is passed straight through to &lt;code&gt;clang-tidy&lt;/code&gt;, so see its documentation for full details. Wildcards can be used, and checks can be disabled by prefixing a &lt;code&gt;-&lt;/code&gt;. By default any checks listed are added to those in &lt;code&gt;.clang-tidy&lt;/code&gt;, so if you'd like to limit the checks to specific ones you should first exclude all checks then add back what you want, like &lt;code&gt;--checks=-*,performance*&lt;/code&gt;.</source>
          <target state="translated">一方で &lt;code&gt;clang-tidy&lt;/code&gt; 持っている&lt;a href=&quot;https://clang.llvm.org/extra/clang-tidy/checks/list.html&quot;&gt;長いリスト&lt;/a&gt;の可能な小切手のを、電子でわずか数は、デフォルトで有効になっています。現時点では、Electronには &lt;code&gt;.clang-tidy&lt;/code&gt; 構成がないため、 &lt;code&gt;clang-tidy&lt;/code&gt; は &lt;code&gt;src/.clang-tidy&lt;/code&gt; でChromiumから構成を見つけ、Chromiumが有効にしているチェックを使用します。 &lt;code&gt;--checks=&lt;/code&gt; オプションを使用して、実行するチェックを変更できます。これは &lt;code&gt;clang-tidy&lt;/code&gt; に直接渡されるため、詳細についてはドキュメントを参照してください。ワイルドカードを使用でき、 &lt;code&gt;-&lt;/code&gt; を前に付けることでチェックを無効にできます。デフォルトでは、リストされているチェックはすべて &lt;code&gt;.clang-tidy&lt;/code&gt; のチェックに追加されますしたがって、チェックを特定のチェックに制限する場合は、最初にすべてのチェックを除外してから、 &lt;code&gt;--checks=-*,performance*&lt;/code&gt; などの必要なものを追加し直す必要があります。</target>
        </trans-unit>
        <trans-unit id="60cd049505b0481040968f2f9b26c1ad67d79b98" translate="yes" xml:space="preserve">
          <source>While Electron strives to support new versions of Chromium as soon as possible, developers should be aware that upgrading is a serious undertaking - involving hand-editing dozens or even hundreds of files. Given the resources and contributions available today, Electron will often not be on the very latest version of Chromium, lagging behind by either days or weeks.</source>
          <target state="translated">Electronはできるだけ早くChromiumの新バージョンをサポートするよう努力していますが、開発者は、アップグレードは深刻な作業であり、何十、何百ものファイルを手作業で編集する必要があることを認識しておく必要があります。今日のリソースと貢献を考えると、Electronは多くの場合、Chromiumの最新バージョンに対応しておらず、数日から数週間遅れています。</target>
        </trans-unit>
        <trans-unit id="8ca3356dd60fb648f919a9b117f6a56a107588e7" translate="yes" xml:space="preserve">
          <source>While Visual Studio is fantastic for inspecting specific code paths, ProcMon's strength is really in observing everything your application is doing with the operating system - it captures File, Registry, Network, Process, and Profiling details of processes. It attempts to log &lt;strong&gt;all&lt;/strong&gt; events occurring and can be quite overwhelming, but if you seek to understand what and how your application is doing to the operating system, it can be a valuable resource.</source>
          <target state="translated">Visual Studioは特定のコードパスの検査に最適ですが、ProcMonの強みは、アプリケーションがオペレーティングシステムで実行しているすべてを監視することです。ファイル、レジストリ、ネットワーク、プロセス、およびプロセスのプロファイリングの詳細をキャプチャします。発生する&lt;strong&gt;すべての&lt;/strong&gt;イベントをログに記録しようとするため、非常に負荷が大きくなる可能性がありますが、アプリケーションがオペレーティングシステムに対して何をどのように実行しているかを理解しようとすると、貴重なリソースになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="5efae7a4863b54b50a5c7627a3cbf0e1b8dbae26" translate="yes" xml:space="preserve">
          <source>While code and user experience across operating systems are similar, there are subtle differences.</source>
          <target state="translated">OS間でのコードやユーザーエクスペリエンスは似ていますが、微妙な違いがあります。</target>
        </trans-unit>
        <trans-unit id="79fb2f4661c01ef9414891a60aeac19326f0555e" translate="yes" xml:space="preserve">
          <source>While it &lt;em&gt;is possible&lt;/em&gt; to install &lt;code&gt;snapcraft&lt;/code&gt; on macOS using Homebrew, it is not able to build &lt;code&gt;snap&lt;/code&gt; packages and is focused on managing packages in the store.</source>
          <target state="translated">Homebrewを使用してmacOSに &lt;code&gt;snapcraft&lt;/code&gt; をインストールすること&lt;em&gt;は可能ですが&lt;/em&gt;、 &lt;code&gt;snap&lt;/code&gt; パッケージを構築することはできず、ストアでのパッケージの管理に重点を置いています。</target>
        </trans-unit>
        <trans-unit id="220283b3c80d6a0ac4503dc976600ec29eb7e24a" translate="yes" xml:space="preserve">
          <source>While it is possible to distribute unsigned apps, it is not recommended. Both Windows and macOS will, by default, prevent either the download or the execution of unsigned applications. Starting with macOS Catalina (version 10.15), users have to go through multiple manual steps to open unsigned applications.</source>
          <target state="translated">符号なしのアプリを配布することは可能ですが、お勧めできません。WindowsとmacOSの両方とも、デフォルトでは、署名されていないアプリケーションのダウンロードまたは実行のいずれかを防止します。macOSのカタリナ(バージョン10.15)からは、ユーザーは、署名されていないアプリケーションを開くために、複数の手動の手順を経る必要があります。</target>
        </trans-unit>
        <trans-unit id="0d0e9ba968031909bc09b720c66e0f0a84e4b95a" translate="yes" xml:space="preserve">
          <source>While it is possible to distribute unsigned apps, it is not recommended. For example, here's what macOS users see when attempting to start an unsigned app:</source>
          <target state="translated">符号なしアプリを配布することは可能ですが、推奨されていません。例えば、macOSユーザーが署名されていないアプリを起動しようとしたときに表示されるものは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="33a53300019bb7c1f9ff112f558d93e922bdc881" translate="yes" xml:space="preserve">
          <source>While loading the page, the &lt;code&gt;ready-to-show&lt;/code&gt; event will be emitted when the renderer process has rendered the page for the first time if the window has not been shown yet. Showing the window after this event will have no visual flash:</source>
          <target state="translated">ページの読み込み中、ウィンドウがまだ表示されていない場合に、レンダラープロセスが初めてページをレンダリングしたときに、 &lt;code&gt;ready-to-show&lt;/code&gt; イベントが発生します。このイベントの後にウィンドウを表示しても、視覚的なフラッシュはありません。</target>
        </trans-unit>
        <trans-unit id="cd58c44271d1906a0ad7b74ac298f0793f008192" translate="yes" xml:space="preserve">
          <source>While notifications including buttons work with &lt;code&gt;electron-windows-notifications&lt;/code&gt;, handling replies requires the use of &lt;a href=&quot;https://github.com/felixrieseberg/electron-windows-interactive-notifications&quot;&gt;&lt;code&gt;electron-windows-interactive-notifications&lt;/code&gt;&lt;/a&gt;, which helps with registering the required COM components and calling your Electron app with the entered user data.</source>
          <target state="translated">ボタンを含む通知は &lt;code&gt;electron-windows-notifications&lt;/code&gt; で機能しますが、返信を処理するには&lt;a href=&quot;https://github.com/felixrieseberg/electron-windows-interactive-notifications&quot;&gt; &lt;code&gt;electron-windows-interactive-notifications&lt;/code&gt; を&lt;/a&gt;使用する必要があります。これは、必要なCOMコンポーネントの登録と、入力したユーザーデータを使用したElectronアプリの呼び出しに役立ちます。</target>
        </trans-unit>
        <trans-unit id="d26aba7fe0eb35a075a77d317c8091835c77fe8f" translate="yes" xml:space="preserve">
          <source>While still an experimental Electron feature, context isolation adds an additional layer of security. It creates a new JavaScript world for Electron APIs and preload scripts.</source>
          <target state="translated">まだ実験的なElectronの機能ではありますが、コンテキスト分離はセキュリティの追加レイヤーを追加します。これにより、Electron APIやプリロードスクリプトのための新しいJavaScriptの世界が生まれます。</target>
        </trans-unit>
        <trans-unit id="dbc2f797c15375e0eef5d01d3d732fb4c832e77f" translate="yes" xml:space="preserve">
          <source>While we make our best effort to backport Chromium security fixes to older versions of Electron, we do not make a guarantee that every fix will be backported. Your best chance at staying secure is to be on the latest stable version of Electron.</source>
          <target state="translated">当社は、古いバージョンのElectronにChromiumのセキュリティ修正をバックポートするよう最善の努力をしていますが、すべての修正がバックポートされることを保証するものではありません。安全性を確保するためには、最新の安定版のElectronを利用することが最善の方法です。</target>
        </trans-unit>
        <trans-unit id="8c6e1711e71c212e285f46131506f42657de4db4" translate="yes" xml:space="preserve">
          <source>Why &amp;amp; How?</source>
          <target state="translated">なぜ、どのように？</target>
        </trans-unit>
        <trans-unit id="73317a0cc3fca7989cec5756d5c4e02fa2673cee" translate="yes" xml:space="preserve">
          <source>Why am I having trouble installing Electron?</source>
          <target state="translated">なぜElectronのインストールに問題があるのでしょうか?</target>
        </trans-unit>
        <trans-unit id="d77989c1e3c0e0ace735631597dc367ffdfa6f32" translate="yes" xml:space="preserve">
          <source>Why?</source>
          <target state="translated">Why?</target>
        </trans-unit>
        <trans-unit id="c321d4e7b3d7921c4e253b234be1517ab9540f9f" translate="yes" xml:space="preserve">
          <source>Widevine Content Decryption Modules (CDMs) are how streaming services protect content using HTML5 video to web browsers without relying on an NPAPI plugin like Flash or Silverlight. Widevine support is an alternative solution for streaming services that currently rely on Silverlight for playback of DRM-protected video content. It will allow websites to show DRM-protected video content in Firefox without the use of NPAPI plugins. The Widevine CDM runs in an open-source CDM sandbox providing better user security than NPAPI plugins.</source>
          <target state="translated">Widevineコンテンツ復号化モジュール(CDM)は、FlashやSilverlightのようなNPAPIプラグインに頼らずに、ストリーミングサービスがHTML5ビデオを使用してWebブラウザにコンテンツを保護する方法です。Widevine のサポートは、現在、DRM で保護されたビデオ コンテンツの再生に Silverlight に依存しているストリーミング サービスのための代替ソリューションです。これにより、ウェブサイトは、NPAPI プラグインを使用せずに Firefox で DRM で保護されたビデオコンテンツを表示できるようになります。Widevine CDM はオープンソースの CDM サンドボックスで動作し、NPAPI プラグインよりも優れたユーザーセキュリティを提供します。</target>
        </trans-unit>
        <trans-unit id="8b6467b2754332dd4fdeb9613f876aeb16911698" translate="yes" xml:space="preserve">
          <source>Widevine recommends our browser-based integrations (vendors and browser-based applications) add support for VMP.</source>
          <target state="translated">Widevineでは、ブラウザベースの統合(ベンダーやブラウザベースのアプリケーション)にVMPのサポートを追加することを推奨しています。</target>
        </trans-unit>
        <trans-unit id="4f37a25a72973cbeeb64a1d9926a64992946a9ec" translate="yes" xml:space="preserve">
          <source>Will use the proxy server for all hosts except for local addresses (&lt;code&gt;localhost&lt;/code&gt;, &lt;code&gt;127.0.0.1&lt;/code&gt; etc.), &lt;code&gt;google.com&lt;/code&gt; subdomains, hosts that contain the suffix &lt;code&gt;foo.com&lt;/code&gt; and anything at &lt;code&gt;1.2.3.4:5678&lt;/code&gt;.</source>
          <target state="translated">ローカルアドレス（を除くすべてのホストに対してプロキシサーバーを使用します &lt;code&gt;localhost&lt;/code&gt; 、 &lt;code&gt;127.0.0.1&lt;/code&gt; など）、 &lt;code&gt;google.com&lt;/code&gt; のサブドメイン、サフィックス含まホスト &lt;code&gt;foo.com&lt;/code&gt; で、何を &lt;code&gt;1.2.3.4:5678&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="486560c71383e5beb0ed652f6e6b7ff48e996d62" translate="yes" xml:space="preserve">
          <source>Windows &amp;amp; macOS</source>
          <target state="translated">WindowsおよびmacOS</target>
        </trans-unit>
        <trans-unit id="f5c27ab76a1e4c1a15e7286184c8ca31392859d8" translate="yes" xml:space="preserve">
          <source>Windows (C++)</source>
          <target state="translated">Windows (C++)</target>
        </trans-unit>
        <trans-unit id="11d23428f7370cd247a07d2abd4fc5c1fd93d443" translate="yes" xml:space="preserve">
          <source>Windows 10 &quot;Anniversary Update&quot; is able to run win32 &lt;code&gt;.exe&lt;/code&gt; binaries by launching them together with a virtualized filesystem and registry. Both are created during compilation by running app and installer inside a Windows Container, allowing Windows to identify exactly which modifications to the operating system are done during installation. Pairing the executable with a virtual filesystem and a virtual registry allows Windows to enable one-click installation and uninstallation.</source>
          <target state="translated">Windows 10 &quot;Anniversary Update&quot;は、仮想化されたファイルシステムおよびレジストリと一緒にwin32 &lt;code&gt;.exe&lt;/code&gt; バイナリを起動することで実行できます。どちらもコンパイル時にWindowsコンテナー内でアプリとインストーラーを実行することにより作成され、Windowsはインストール中にオペレーティングシステムに対して行われた変更を正確に識別できます。実行可能ファイルを仮想ファイルシステムおよび仮想レジストリとペアにすることで、Windowsでワンクリックのインストールとアンインストールが可能になります。</target>
        </trans-unit>
        <trans-unit id="35d01b24fe876d766b8f2d9bb6c5c6ef1e129d0f" translate="yes" xml:space="preserve">
          <source>Windows 10 / Server 2012 R2 or higher</source>
          <target state="translated">Windows 10/Server 2012 R2以上</target>
        </trans-unit>
        <trans-unit id="6366d0a60cd36482a97adc2ed19d1ac0a2210bb2" translate="yes" xml:space="preserve">
          <source>Windows 10 has a global setting controlling &lt;code&gt;microphone&lt;/code&gt; and &lt;code&gt;camera&lt;/code&gt; access for all win32 applications. It will always return &lt;code&gt;granted&lt;/code&gt; for &lt;code&gt;screen&lt;/code&gt; and for all media types on older versions of Windows.</source>
          <target state="translated">Windows 10には、すべてのwin32アプリケーションの &lt;code&gt;microphone&lt;/code&gt; と &lt;code&gt;camera&lt;/code&gt; へのアクセスを制御するグローバル設定があります。古いバージョンのWindowsでは、 &lt;code&gt;screen&lt;/code&gt; およびすべてのメディアタイプに対して常に &lt;code&gt;granted&lt;/code&gt; れた状態で返されます。</target>
        </trans-unit>
        <trans-unit id="ce10e27d33376de09e28a0db5661e561cad5785e" translate="yes" xml:space="preserve">
          <source>Windows 10 on Arm</source>
          <target state="translated">Windows 10オンアーム</target>
        </trans-unit>
        <trans-unit id="dcc00be0ea36fb06bf2213adeaf0325b514dc0b3" translate="yes" xml:space="preserve">
          <source>Windows 10 with Anniversary Update (released August 2nd, 2016)</source>
          <target state="translated">Windows 10にアニバーサリーアップデートを搭載(2016年8月2日発売</target>
        </trans-unit>
        <trans-unit id="4c58bbff259319d82754c22f70e33d70447de6f9" translate="yes" xml:space="preserve">
          <source>Windows 7 / Server 2008 R2 or higher</source>
          <target state="translated">Windows 7/Server 2008 R2以上</target>
        </trans-unit>
        <trans-unit id="334b7d1afbc109f119b34e20becc19980ff3fd37" translate="yes" xml:space="preserve">
          <source>Windows 7 and later are supported, older operating systems are not supported (and do not work).</source>
          <target state="translated">Windows 7以降は対応していますが、それ以前のOSは対応していません(動作しません)。</target>
        </trans-unit>
        <trans-unit id="1ee5bbc5871d1c906eadda6091017d0fe8bacb21" translate="yes" xml:space="preserve">
          <source>Windows Notes</source>
          <target state="translated">ウィンドウズノート</target>
        </trans-unit>
        <trans-unit id="f865270563697d57f2e59f733d48cc9dbadd5ef1" translate="yes" xml:space="preserve">
          <source>Windows Security doesn't like one of the files in the Chromium source code (see &lt;a href=&quot;https://crbug.com/441184&quot;&gt;https://crbug.com/441184&lt;/a&gt;), so it will constantly delete it, causing &lt;code&gt;gclient sync&lt;/code&gt; issues. You can exclude the source tree from being monitored by Windows Security by &lt;a href=&quot;https://support.microsoft.com/en-us/windows/add-an-exclusion-to-windows-security-811816c0-4dfd-af4a-47e4-c301afe13b26&quot;&gt;following these instructions&lt;/a&gt;.</source>
          <target state="translated">WindowsセキュリティはChromiumソースコード（&lt;a href=&quot;https://crbug.com/441184&quot;&gt;https://crbug.com/441184を&lt;/a&gt;参照）のファイルの1つを好まないため、常にファイルを削除し、 &lt;code&gt;gclient sync&lt;/code&gt; 問題を引き起こします。&lt;a href=&quot;https://support.microsoft.com/en-us/windows/add-an-exclusion-to-windows-security-811816c0-4dfd-af4a-47e4-c301afe13b26&quot;&gt;次の手順に従って&lt;/a&gt;、ソースツリーをWindowsセキュリティによる監視から除外できます。</target>
        </trans-unit>
        <trans-unit id="37f8007d4b7b30af9ebafda2b76b57acc5d7380f" translate="yes" xml:space="preserve">
          <source>Windows Store</source>
          <target state="translated">ウィンドウズストア</target>
        </trans-unit>
        <trans-unit id="3184a9e436f78293d8c305cd2743a957389c776e" translate="yes" xml:space="preserve">
          <source>Windows Store Guide</source>
          <target state="translated">Windowsストアガイド</target>
        </trans-unit>
        <trans-unit id="694b8f12f921d9dcf2911f7573a6e4baaeb5470c" translate="yes" xml:space="preserve">
          <source>Windows Taskbar</source>
          <target state="translated">ウィンドウズタスクバー</target>
        </trans-unit>
        <trans-unit id="e5cf8cfca1d23e9d9843b8c5476d136e2ea234e4" translate="yes" xml:space="preserve">
          <source>Windows allows apps to define a custom context menu that shows up when users right-click the app's icon in the task bar. That context menu is called &lt;code&gt;JumpList&lt;/code&gt;. You specify custom actions in the &lt;code&gt;Tasks&lt;/code&gt; category of JumpList, as quoted from MSDN:</source>
          <target state="translated">Windowsでは、ユーザーがタスクバーでアプリのアイコンを右クリックしたときに表示されるカスタムコンテキストメニューをアプリで定義できます。そのコンテキストメニューは &lt;code&gt;JumpList&lt;/code&gt; と呼ばれます。MSDNから引用されているように、JumpList の &lt;code&gt;Tasks&lt;/code&gt; カテゴリでカスタムアクションを指定します。</target>
        </trans-unit>
        <trans-unit id="ae1a8f17290610745b930cde1c61fe22444792dc" translate="yes" xml:space="preserve">
          <source>Windows allows apps to define a custom context menu that shows up when users right-click the app's icon in the taskbar. That context menu is called &lt;code&gt;JumpList&lt;/code&gt;. You specify custom actions in the &lt;code&gt;Tasks&lt;/code&gt; category of JumpList, as quoted from &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/shell/taskbar-extensions#tasks&quot;&gt;MSDN&lt;/a&gt;:</source>
          <target state="translated">Windowsでは、ユーザーがタスクバーのアプリのアイコンを右クリックしたときに表示されるカスタムコンテキストメニューをアプリで定義できます。そのコンテキストメニューは &lt;code&gt;JumpList&lt;/code&gt; と呼ばれます。&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/shell/taskbar-extensions#tasks&quot;&gt;MSDN&lt;/a&gt;から引用されているように、JumpListの &lt;code&gt;Tasks&lt;/code&gt; カテゴリでカスタムアクションを指定します。</target>
        </trans-unit>
        <trans-unit id="349321ed22626b4b772ef4859b4d372b0da24bff" translate="yes" xml:space="preserve">
          <source>Windows and macOS provide access to a list of recent documents opened by the application via JumpList or dock menu, respectively.</source>
          <target state="translated">WindowsとmacOSでは、アプリケーションで開いた最近のドキュメントのリストに、それぞれJumpListやドックメニューからアクセスできます。</target>
        </trans-unit>
        <trans-unit id="964ea20e0a793238f705e638741fd19d257698f2" translate="yes" xml:space="preserve">
          <source>Windows arm64</source>
          <target state="translated">ウィンドウズアーム64</target>
        </trans-unit>
        <trans-unit id="abe9cf24071dba2d0362915c5a532aa82c00e344" translate="yes" xml:space="preserve">
          <source>Windows console example:</source>
          <target state="translated">Windowsコンソールの例。</target>
        </trans-unit>
        <trans-unit id="734a70675fff03e86e0aa568d3faad3845a4e366" translate="yes" xml:space="preserve">
          <source>Windows on Arm (experimental)</source>
          <target state="translated">Windows on Arm (実験的)</target>
        </trans-unit>
        <trans-unit id="80eca6728491ca1c5717c4542694e2b8d71a494d" translate="yes" xml:space="preserve">
          <source>Windows x64</source>
          <target state="translated">ウィンドウズエックス64</target>
        </trans-unit>
        <trans-unit id="e50be6377e88df26d09f414555afdf325ad726d5" translate="yes" xml:space="preserve">
          <source>Windows x86</source>
          <target state="translated">ウィンドウズエックスオーエル</target>
        </trans-unit>
        <trans-unit id="58c7d8e02f59f93f56f20d7952ddcb5e3903a6ae" translate="yes" xml:space="preserve">
          <source>Windows: &lt;code&gt;$LOCALAPPDATA/electron/Cache&lt;/code&gt; or &lt;code&gt;~/AppData/Local/electron/Cache/&lt;/code&gt;</source>
          <target state="translated">Windows： &lt;code&gt;$LOCALAPPDATA/electron/Cache&lt;/code&gt; または &lt;code&gt;~/AppData/Local/electron/Cache/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c9045a851aaeccbb4db25cb5597826287bc6349d" translate="yes" xml:space="preserve">
          <source>Wisdom and information about how to build performant websites with JavaScript generally applies to Electron apps, too. To a certain extent, resources discussing how to build performant Node.js applications also apply, but be careful to understand that the term &quot;performance&quot; means different things for a Node.js backend than it does for an application running on a client.</source>
          <target state="translated">JavaScriptを使ってパフォーマンスの高いWebサイトを構築する方法に関する知恵と情報は、一般的にElectronアプリケーションにも適用されます。ある程度は、パフォーマンスの高い Node.js アプリケーションを構築する方法について説明しているリソースも適用されますが、「パフォーマンス」という用語は、Node.js バックエンドとクライアント上で実行されているアプリケーションでは異なる意味を持つことを理解するように注意してください。</target>
        </trans-unit>
        <trans-unit id="d30c46581aaed5837dc9d7aea25e22f78b2ab681" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Web_Workers_API/Using_web_workers&quot;&gt;Web Workers&lt;/a&gt;, it is possible to run JavaScript in OS-level threads.</source>
          <target state="translated">で&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Web_Workers_API/Using_web_workers&quot;&gt;ウェブ労働者&lt;/a&gt;、OSレベルスレッドでJavaScriptを実行することが可能です。</target>
        </trans-unit>
        <trans-unit id="1b04d0f7ea5f0264947afed2f0102b0c6ec08ac4" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;sendToHost&lt;/code&gt; method and &lt;code&gt;ipc-message&lt;/code&gt; event you can communicate between guest page and embedder page:</source>
          <target state="translated">&lt;code&gt;sendToHost&lt;/code&gt; の方法および &lt;code&gt;ipc-message&lt;/code&gt; イベントあなたはゲストページと埋め込みページ間で通信することができます。</target>
        </trans-unit>
        <trans-unit id="2ae7a19a4fc440734d96addea8ee6bc4b8a7b8d4" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;sendToHost&lt;/code&gt; method and &lt;code&gt;ipc-message&lt;/code&gt; event you can easily communicate between guest page and embedder page:</source>
          <target state="translated">&lt;code&gt;sendToHost&lt;/code&gt; の方法および &lt;code&gt;ipc-message&lt;/code&gt; イベント、あなたは簡単にゲストページと埋め込みページ間で通信することができます。</target>
        </trans-unit>
        <trans-unit id="88ffe62f17dc37045e37442c6d47e51c4c10429d" translate="yes" xml:space="preserve">
          <source>With Windows 10, the good old win32 executable got a new sibling: The Universal Windows Platform. The new &lt;code&gt;.appx&lt;/code&gt; format does not only enable a number of new powerful APIs like Cortana or Push Notifications, but through the Windows Store, also simplifies installation and updating.</source>
          <target state="translated">Windows 10では、古き良きwin32実行可能ファイルに新しい兄弟、ユニバーサルWindowsプラットフォームが加わりました。新しい &lt;code&gt;.appx&lt;/code&gt; 形式は、Cortanaやプッシュ通知などの多くの新しい強力なAPIを有効にするだけでなく、Windowsストアを介して、インストールと更新を簡素化します。</target>
        </trans-unit>
        <trans-unit id="1f198ce5fa64d37fc22581103154daa50000b2a5" translate="yes" xml:space="preserve">
          <source>With no filenames provided, all C/C++/Objective-C files will be checked. You can provide a list of files to be checked by passing the filenames after the options: &lt;code&gt;npm run lint:clang-tiy --out-dir ../out/Testing shell/browser/api/electron_api_app.cc&lt;/code&gt;</source>
          <target state="translated">ファイル名が指定されていない場合、すべてのC / C ++ / Objective-Cファイルがチェックされます。オプションの後にファイル名を渡すことで、チェックするファイルのリストを提供できます &lt;code&gt;npm run lint:clang-tiy --out-dir ../out/Testing shell/browser/api/electron_api_app.cc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7444a8fa551527403c33779e3eee6e84e6a0784c" translate="yes" xml:space="preserve">
          <source>With special patches in Electron, Node APIs like &lt;code&gt;fs.readFile&lt;/code&gt; and &lt;code&gt;require&lt;/code&gt; treat &lt;code&gt;asar&lt;/code&gt; archives as virtual directories, and the files in it as normal files in the filesystem.</source>
          <target state="translated">電子での特別なパッチでは、ノードのようなAPI &lt;code&gt;fs.readFile&lt;/code&gt; とは、 &lt;code&gt;require&lt;/code&gt; 御馳走 &lt;code&gt;asar&lt;/code&gt; 仮想ディレクトリとしてアーカイブ、ファイルシステム内の通常のファイルとしてその中のファイルを。</target>
        </trans-unit>
        <trans-unit id="e497fcf7dd15398b1f69d8649a00525472eef952" translate="yes" xml:space="preserve">
          <source>With that in mind, be aware that displaying arbitrary content from untrusted sources poses a severe security risk that Electron is not intended to handle. In fact, the most popular Electron apps (Atom, Slack, Visual Studio Code, etc) display primarily local content (or trusted, secure remote content without Node integration) &amp;ndash; if your application executes code from an online source, it is your responsibility to ensure that the code is not malicious.</source>
          <target state="translated">そのことを念頭に置いて、信頼できないソースからの任意のコンテンツを表示することは、Electronが処理することを意図していない深刻なセキュリティリスクをもたらすことに注意してください。実際、最も人気のあるElectronアプリ（Atom、Slack、Visual Studio Codeなど）は、主にローカルコンテンツ（またはNode統合なしの信頼できる安全なリモートコンテンツ）を表示します。アプリケーションがオンラインソースからコードを実行する場合は、コードが悪意のないものであることを確認してください。</target>
        </trans-unit>
        <trans-unit id="5ecd6ffd8a74eeb96b9a6f1e451cdd5fd10b4301" translate="yes" xml:space="preserve">
          <source>Within third-party software</source>
          <target state="translated">サードパーティ製ソフトウェア内</target>
        </trans-unit>
        <trans-unit id="aeae44e8927913bd54121fddc9a850b9af8729d6" translate="yes" xml:space="preserve">
          <source>Work like &lt;code&gt;executeJavaScript&lt;/code&gt; but evaluates &lt;code&gt;scripts&lt;/code&gt; in isolated context.</source>
          <target state="translated">&lt;code&gt;executeJavaScript&lt;/code&gt; のように動作しますが、孤立したコンテキストで &lt;code&gt;scripts&lt;/code&gt; を評価します。</target>
        </trans-unit>
        <trans-unit id="1a79a3d078dd72c4336479de99156512929b127f" translate="yes" xml:space="preserve">
          <source>Workaround</source>
          <target state="translated">Workaround</target>
        </trans-unit>
        <trans-unit id="d7a484140f5f9f7f5427e1f2c44dbfc1d3ad9eea" translate="yes" xml:space="preserve">
          <source>Workflow</source>
          <target state="translated">Workflow</target>
        </trans-unit>
        <trans-unit id="080bff6afac366748a9e8826b023d12e0ae5e58e" translate="yes" xml:space="preserve">
          <source>Working Directory Can Not Be Set to Directories in Archive</source>
          <target state="translated">アーカイブのディレクトリに作業ディレクトリを設定できない</target>
        </trans-unit>
        <trans-unit id="66d8a082d6bb7a5b98ba1d7770c5e2c191355c20" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;executeJavaScript&lt;/code&gt; but evaluates &lt;code&gt;scripts&lt;/code&gt; in an isolated context.</source>
          <target state="translated">&lt;code&gt;executeJavaScript&lt;/code&gt; のように機能しますが、分離されたコンテキストで &lt;code&gt;scripts&lt;/code&gt; を評価します。</target>
        </trans-unit>
        <trans-unit id="47e676a5b14ee4c6fc0d4027d39dc491d72f3a03" translate="yes" xml:space="preserve">
          <source>Would mean that if an app already exists in the user directory, if the user chooses to 'Continue Move' then the function would continue with its default behavior and the existing app will be trashed and the active app moved into its place.</source>
          <target state="translated">これは、アプリがユーザーディレクトリに既に存在している場合、ユーザーが「移動を続ける」を選択した場合、この関数はデフォルトの動作を継続し、既存のアプリは破棄され、アクティブなアプリがその場所に移動されることを意味します。</target>
        </trans-unit>
        <trans-unit id="603f6738b229780f6312d653d2719ca8e90fbad8" translate="yes" xml:space="preserve">
          <source>Would require code like this</source>
          <target state="translated">このようなコードが必要です</target>
        </trans-unit>
        <trans-unit id="20c2b8ab6754d89ed32e1618e5008372357c1a1b" translate="yes" xml:space="preserve">
          <source>Wrap all other lines at 72 columns.</source>
          <target state="translated">他のすべての行を72列で折り返します。</target>
        </trans-unit>
        <trans-unit id="e12e877b8fce199aeedd436214d7a478a8c7e445" translate="yes" xml:space="preserve">
          <source>Write &lt;a href=&quot;https://github.com/remarkjs/remark&quot;&gt;remark&lt;/a&gt; markdown style</source>
          <target state="translated">書き込み&lt;a href=&quot;https://github.com/remarkjs/remark&quot;&gt;発言の&lt;/a&gt;値下げスタイル</target>
        </trans-unit>
        <trans-unit id="a24f7acd965b738562a8925dd3a0056c1559504a" translate="yes" xml:space="preserve">
          <source>Write &lt;a href=&quot;https://github.com/remarkjs/remark&quot;&gt;remark&lt;/a&gt; markdown style.</source>
          <target state="translated">書き込み&lt;a href=&quot;https://github.com/remarkjs/remark&quot;&gt;発言の&lt;/a&gt;値下げスタイル。</target>
        </trans-unit>
        <trans-unit id="41e38d35d5df6312940e93e1bfc0d4d0ffa8f2bb" translate="yes" xml:space="preserve">
          <source>Write &lt;a href=&quot;https://npm.im/standard&quot;&gt;standard&lt;/a&gt; JavaScript style.</source>
          <target state="translated">書く&lt;a href=&quot;https://npm.im/standard&quot;&gt;標準の&lt;/a&gt; JavaScriptのスタイルを。</target>
        </trans-unit>
        <trans-unit id="9d46cafca6386ecc7041846b9ea43c247e89be25" translate="yes" xml:space="preserve">
          <source>Write &lt;a href=&quot;https://www.npmjs.com/package/standard&quot;&gt;standard&lt;/a&gt; JavaScript style.</source>
          <target state="translated">書く&lt;a href=&quot;https://www.npmjs.com/package/standard&quot;&gt;標準の&lt;/a&gt;JavaScriptのスタイルを。</target>
        </trans-unit>
        <trans-unit id="2f670eb8a4342c7b91aebf05882f35d334e474c5" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;data&lt;/code&gt; to the clipboard.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; をクリップボードに書き込みます。</target>
        </trans-unit>
        <trans-unit id="bb65681bbed7ce8048aebc293d0f34459c63cfb4" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;image&lt;/code&gt; to the clipboard.</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; をクリップボードに書き込みます。</target>
        </trans-unit>
        <trans-unit id="da54437162e8a104e186e145268cce134ddc053f" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;markup&lt;/code&gt; to the clipboard.</source>
          <target state="translated">&lt;code&gt;markup&lt;/code&gt; をクリップボードに書き込みます。</target>
        </trans-unit>
        <trans-unit id="7c1ac1cebd66e9e8a3fe752d8ee7b645918c3890" translate="yes" xml:space="preserve">
          <source>Writes any unwritten DOMStorage data to disk.</source>
          <target state="translated">書かれていない DOMStorage データをディスクに書き込みます。</target>
        </trans-unit>
        <trans-unit id="6389daa864759e7d293b20876ac8dd08b550259b" translate="yes" xml:space="preserve">
          <source>Writes any unwritten cookies data to disk.</source>
          <target state="translated">書かれていないクッキーデータをディスクに書き込みます。</target>
        </trans-unit>
        <trans-unit id="75ed034f248f6bd07f37057becf464b71f22dad9" translate="yes" xml:space="preserve">
          <source>Writes the &lt;code&gt;buffer&lt;/code&gt; into the clipboard as &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; を &lt;code&gt;format&lt;/code&gt; としてクリップボードに書き込みます。</target>
        </trans-unit>
        <trans-unit id="6828a9b1f5a570a24ce165ee01f142c478eee997" translate="yes" xml:space="preserve">
          <source>Writes the &lt;code&gt;text&lt;/code&gt; into the clipboard as plain text.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; をプレーンテキストとしてクリップボードに書き込みます。</target>
        </trans-unit>
        <trans-unit id="f51b63799e924afe6a523e048271fa5508686a40" translate="yes" xml:space="preserve">
          <source>Writes the &lt;code&gt;text&lt;/code&gt; into the clipboard in RTF.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; をRTFでクリップボードに書き込みます。</target>
        </trans-unit>
        <trans-unit id="950161d034b760c637aa0c680a0c480f30107e29" translate="yes" xml:space="preserve">
          <source>Writes the &lt;code&gt;text&lt;/code&gt; into the find pasteboard (the pasteboard that holds information about the current state of the active application&amp;rsquo;s find panel) as plain text. This method uses synchronous IPC when called from the renderer process.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; をプレーンテキストとして検索ペーストボード（アクティブなアプリケーションの検索パネルの現在の状態に関する情報を保持するペーストボード）に書き込みます。このメソッドは、レンダラープロセスから呼び出されたときに同期IPCを使用します。</target>
        </trans-unit>
        <trans-unit id="57f6663b6f1101e5c0925b32f8a5ba1afed6d245" translate="yes" xml:space="preserve">
          <source>Writes the &lt;code&gt;text&lt;/code&gt; into the find pasteboard as plain text. This method uses synchronous IPC when called from the renderer process.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; を検索ペーストボードにプレーンテキストとして書き込みます。このメソッドは、レンダラープロセスから呼び出されたときに同期IPCを使用します。</target>
        </trans-unit>
        <trans-unit id="6318b23e1051f00e01c2d781e9bbc7c6e3e90ae4" translate="yes" xml:space="preserve">
          <source>Writes the &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt; into the clipboard as a bookmark.</source>
          <target state="translated">&lt;code&gt;title&lt;/code&gt; と &lt;code&gt;url&lt;/code&gt; をブックマークとしてクリップボードに書き込みます。</target>
        </trans-unit>
        <trans-unit id="2deaea7844ddbbc3c90ece0e68f1369bf008cdd2" translate="yes" xml:space="preserve">
          <source>Writing Your First Electron App</source>
          <target state="translated">初めてのエレクトロンアプリを書く</target>
        </trans-unit>
        <trans-unit id="59e268145b688915c18fc965e3671f3f8eadcb06" translate="yes" xml:space="preserve">
          <source>Writing release notes is a good way to keep yourself busy while the builds are running. For prior art, see existing releases on &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;the releases page&lt;/a&gt;.</source>
          <target state="translated">リリースノートを書くことは、ビルドの実行中に忙しくするのに良い方法です。従来技術については&lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;、リリースページの&lt;/a&gt;既存のリリースを参照してください。</target>
        </trans-unit>
        <trans-unit id="97f5bcf8cd359cdc0cc4a3b9d9329c51f7606976" translate="yes" xml:space="preserve">
          <source>Xhosa</source>
          <target state="translated">Xhosa</target>
        </trans-unit>
        <trans-unit id="bc74f22d5bc3094753074502f1c80e3c7e8133d6" translate="yes" xml:space="preserve">
          <source>Yiddish</source>
          <target state="translated">Yiddish</target>
        </trans-unit>
        <trans-unit id="e5a54e6915f59898be35e8933135accabfa3cb89" translate="yes" xml:space="preserve">
          <source>Yoruba</source>
          <target state="translated">Yoruba</target>
        </trans-unit>
        <trans-unit id="3d5ce1aec3a8b67e66a57f5f772730d0b7c02a18" translate="yes" xml:space="preserve">
          <source>You are required to call this method before using any other &lt;code&gt;crashReporter&lt;/code&gt; APIs and in each process (main/renderer) from which you want to collect crash reports. You can pass different options to &lt;code&gt;crashReporter.start&lt;/code&gt; when calling from different processes.</source>
          <target state="translated">他の &lt;code&gt;crashReporter&lt;/code&gt; API を使用する前、およびクラッシュレポートを収集する各プロセス（メイン/レンダラー）でこのメソッドを呼び出す必要があります。さまざまなプロセスから呼び出すときに、 &lt;code&gt;crashReporter.start&lt;/code&gt; にさまざまなオプションを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="674533baad5ec5f9a47837f0523748a8125fc712" translate="yes" xml:space="preserve">
          <source>You can add a &lt;code&gt;click&lt;/code&gt; function for additional behavior.</source>
          <target state="translated">あなたは追加することができます &lt;code&gt;click&lt;/code&gt; 追加の行動のための機能を。</target>
        </trans-unit>
        <trans-unit id="24a3361f2859ead665330f9d785bfcd1d69a055b" translate="yes" xml:space="preserve">
          <source>You can add menu items to access and clear recent documents by adding the following code snippet to your menu template:</source>
          <target state="translated">メニューテンプレートに以下のコードスニペットを追加することで、最近のドキュメントにアクセスしたりクリアしたりするためのメニュー項目を追加することができます。</target>
        </trans-unit>
        <trans-unit id="d3357188ae14c581ee4dd006500186765e0f75cb" translate="yes" xml:space="preserve">
          <source>You can also access the &lt;code&gt;session&lt;/code&gt; of existing pages by using the &lt;code&gt;session&lt;/code&gt; property of &lt;a href=&quot;api/web-contents&quot;&gt;&lt;code&gt;WebContents&lt;/code&gt;&lt;/a&gt;, or from the &lt;code&gt;session&lt;/code&gt; module.</source>
          <target state="translated">&lt;a href=&quot;api/web-contents&quot;&gt; &lt;code&gt;WebContents&lt;/code&gt; &lt;/a&gt;の &lt;code&gt;session&lt;/code&gt; プロパティを使用するか、 &lt;code&gt;session&lt;/code&gt; モジュールから、既存のページの &lt;code&gt;session&lt;/code&gt; にアクセスすることもできます。</target>
        </trans-unit>
        <trans-unit id="c44857962108e4e2ff11592e9db509c06445e8dc" translate="yes" xml:space="preserve">
          <source>You can also access the &lt;code&gt;session&lt;/code&gt; of existing pages by using the &lt;code&gt;session&lt;/code&gt; property of &lt;a href=&quot;web-contents&quot;&gt;&lt;code&gt;WebContents&lt;/code&gt;&lt;/a&gt;, or from the &lt;code&gt;session&lt;/code&gt; module.</source>
          <target state="translated">&lt;a href=&quot;web-contents&quot;&gt; &lt;code&gt;WebContents&lt;/code&gt; &lt;/a&gt;の &lt;code&gt;session&lt;/code&gt; プロパティを使用するか、 &lt;code&gt;session&lt;/code&gt; モジュールから、既存のページの &lt;code&gt;session&lt;/code&gt; にアクセスすることもできます。</target>
        </trans-unit>
        <trans-unit id="cfbffa74e7457bfbd0aca3ec85b73f8557274618" translate="yes" xml:space="preserve">
          <source>You can also attach other fields to the element of the &lt;code&gt;template&lt;/code&gt; and they will become properties of the constructed menu items.</source>
          <target state="translated">&lt;code&gt;template&lt;/code&gt; の要素に他のフィールドをアタッチすることもでき、それらは作成されたメニュー項目のプロパティになります。</target>
        </trans-unit>
        <trans-unit id="8a7fb193c82dfb87208f9cd6f2fe231ae1cccea2" translate="yes" xml:space="preserve">
          <source>You can also attempt to download Electron directly from &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;electron/electron/releases&lt;/a&gt; if installing via &lt;code&gt;npm&lt;/code&gt; is failing.</source>
          <target state="translated">&lt;code&gt;npm&lt;/code&gt; 経由のインストールが失敗した場合は、&lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;electron / electron / releases&lt;/a&gt;から直接Electronをダウンロードすることもできます。</target>
        </trans-unit>
        <trans-unit id="88d4ff9516463a62640ab86472880e55ac288094" translate="yes" xml:space="preserve">
          <source>You can also build the &lt;code&gt;Debug&lt;/code&gt; target only:</source>
          <target state="translated">&lt;code&gt;Debug&lt;/code&gt; ターゲットのみをビルドすることもできます。</target>
        </trans-unit>
        <trans-unit id="149ab85a3e2236cce5ca9c64d1c1d0c466e10879" translate="yes" xml:space="preserve">
          <source>You can also check out LLDB's fantastic &lt;a href=&quot;http://lldb.llvm.org/tutorial.html&quot;&gt;manual and tutorial&lt;/a&gt;, which will explain more complex debugging scenarios.</source>
          <target state="translated">より複雑なデバッグのシナリオを説明するLLDBの素晴らしい&lt;a href=&quot;http://lldb.llvm.org/tutorial.html&quot;&gt;マニュアルとチュートリアルを&lt;/a&gt;チェックすることもできます。</target>
        </trans-unit>
        <trans-unit id="79127c7a7ae453f124aa49599988730a3cf15b77" translate="yes" xml:space="preserve">
          <source>You can also check out LLDB's fantastic &lt;a href=&quot;https://lldb.llvm.org/tutorial.html&quot;&gt;manual and tutorial&lt;/a&gt;, which will explain more complex debugging scenarios.</source>
          <target state="translated">より複雑なデバッグシナリオを説明するLLDBの素晴らしい&lt;a href=&quot;https://lldb.llvm.org/tutorial.html&quot;&gt;マニュアルとチュートリアルを&lt;/a&gt;確認することもできます。</target>
        </trans-unit>
        <trans-unit id="17f2f41538a8ddd36c42f850f00289e5b2b2e99c" translate="yes" xml:space="preserve">
          <source>You can also choose to install modules like other Node projects, and then rebuild the modules for Electron with the &lt;a href=&quot;https://github.com/paulcbetts/electron-rebuild&quot;&gt;&lt;code&gt;electron-rebuild&lt;/code&gt;&lt;/a&gt; package. This module can get the version of Electron and handle the manual steps of downloading headers and building native modules for your app.</source>
          <target state="translated">他のノードプロジェクトと同様にモジュールをインストールし、&lt;a href=&quot;https://github.com/paulcbetts/electron-rebuild&quot;&gt; &lt;code&gt;electron-rebuild&lt;/code&gt; &lt;/a&gt;モジュールをelectron-rebuildパッケージで再ビルドすることもできます。このモジュールは、Electronのバージョンを取得し、ヘッダーをダウンロードしてアプリのネイティブモジュールを構築する手動の手順を処理できます。</target>
        </trans-unit>
        <trans-unit id="51c0bca819b96d717b0fe1ee63ac132914d7a7b0" translate="yes" xml:space="preserve">
          <source>You can also choose to manually get your app ready for distribution. The steps needed to do this are outlined below.</source>
          <target state="translated">また、アプリを手動で配布の準備をすることもできます。そのために必要な手順を以下に概説します。</target>
        </trans-unit>
        <trans-unit id="33422c2feb0c4f9fe0cdfebdefc26c9611007394" translate="yes" xml:space="preserve">
          <source>You can also display a web page in an &lt;code&gt;asar&lt;/code&gt; archive with &lt;code&gt;BrowserWindow&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;BrowserWindow&lt;/code&gt; を使用して、 &lt;code&gt;asar&lt;/code&gt; アーカイブにWebページを表示することもできます。</target>
        </trans-unit>
        <trans-unit id="eefd7161ff2de241ca7ce2e52097f5c9df3ed4e0" translate="yes" xml:space="preserve">
          <source>You can also install the &lt;code&gt;electron&lt;/code&gt; command globally in your &lt;code&gt;$PATH&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;$PATH&lt;/code&gt; &lt;code&gt;electron&lt;/code&gt; コマンドをグローバルにインストールすることもできます。</target>
        </trans-unit>
        <trans-unit id="607d2aec976ea2d443563d10651fba01f069e854" translate="yes" xml:space="preserve">
          <source>You can also integrate &lt;code&gt;clang-format&lt;/code&gt; directly into your favorite editors. For further guidance on setting up editor integration, see these pages:</source>
          <target state="translated">また、 &lt;code&gt;clang-format&lt;/code&gt; をお気に入りのエディターに直接統合することもできます。エディター統合のセットアップに関する詳細なガイダンスについては、以下のページを参照してください。</target>
        </trans-unit>
        <trans-unit id="352d94a34cea3a3bfcd427896e2f624946ed5945" translate="yes" xml:space="preserve">
          <source>You can also manually toggle these features either within your Electron application or by setting flags in third-party native software.</source>
          <target state="translated">これらの機能は、Electronアプリケーション内で、またはサードパーティ製ネイティブソフトウェアのフラグを設定して手動で切り替えることもできます。</target>
        </trans-unit>
        <trans-unit id="29669981d1e3436e02b3ba7a31b9c5e269cf220e" translate="yes" xml:space="preserve">
          <source>You can also only build the &lt;code&gt;Debug&lt;/code&gt; target:</source>
          <target state="translated">&lt;code&gt;Debug&lt;/code&gt; ターゲットのみをビルドすることもできます。</target>
        </trans-unit>
        <trans-unit id="e5ab297f0f95b207418c4da72e9a1c7bb29f8e43" translate="yes" xml:space="preserve">
          <source>You can also only build the Debug target:</source>
          <target state="translated">また、デバッグターゲットのみのビルドも可能です。</target>
        </trans-unit>
        <trans-unit id="66bb3347a41e1b9fb0a237679910b2dcf1638937" translate="yes" xml:space="preserve">
          <source>You can also override the local cache location by providing a &lt;code&gt;ELECTRON_CACHE&lt;/code&gt; environment variable.</source>
          <target state="translated">&lt;code&gt;ELECTRON_CACHE&lt;/code&gt; 環境変数を指定して、ローカルキャッシュの場所を上書きすることもできます。</target>
        </trans-unit>
        <trans-unit id="35cf77a8616d34eb6709ca16c32d3081d987502c" translate="yes" xml:space="preserve">
          <source>You can also override the local cache location by providing a &lt;code&gt;electron_config_cache&lt;/code&gt; environment variable.</source>
          <target state="translated">また、 &lt;code&gt;electron_config_cache&lt;/code&gt; 環境変数を指定して、ローカルキャッシュの場所を上書きすることもできます。</target>
        </trans-unit>
        <trans-unit id="884422854068014fc2a262dfb559ad2619dfb238" translate="yes" xml:space="preserve">
          <source>You can also read &lt;code&gt;frameId&lt;/code&gt; from all incoming IPC messages in the main process.</source>
          <target state="translated">メインプロセスのすべての着信IPCメッセージから &lt;code&gt;frameId&lt;/code&gt; を読み取ることもできます。</target>
        </trans-unit>
        <trans-unit id="2596ea96c1bbffcf6b0f534d64114e0f0b53f5e8" translate="yes" xml:space="preserve">
          <source>You can also rename the helper app to avoid showing &lt;code&gt;Electron Helper&lt;/code&gt; in the Activity Monitor, but make sure you have renamed the helper app's executable file's name.</source>
          <target state="translated">アクティビティモニターに &lt;code&gt;Electron Helper&lt;/code&gt; が表示されないようにヘルパーアプリの名前を変更することもできますが、ヘルパーアプリの実行可能ファイルの名前を変更したことを確認してください。</target>
        </trans-unit>
        <trans-unit id="6c048862cb42e282a37a98ccecb852f6068161e2" translate="yes" xml:space="preserve">
          <source>You can also set &lt;code&gt;process.noAsar&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to disable the support for &lt;code&gt;asar&lt;/code&gt; in the &lt;code&gt;fs&lt;/code&gt; module:</source>
          <target state="translated">また、 &lt;code&gt;process.noAsar&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定して、 &lt;code&gt;fs&lt;/code&gt; モジュールでの &lt;code&gt;asar&lt;/code&gt; のサポートを無効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="5713d12aa1d67d16d27c3c494578de0a5ce489dc" translate="yes" xml:space="preserve">
          <source>You can also set the edited state for a window so that the file icon can indicate whether the document in this window has been modified.</source>
          <target state="translated">また、ウィンドウの編集状態を設定して、このウィンドウ内の文書が変更されたかどうかをファイルアイコンで表示できるようにすることもできます。</target>
        </trans-unit>
        <trans-unit id="705058ceae701f430b6d084dc8ffde18f7a95db6" translate="yes" xml:space="preserve">
          <source>You can also set the edited state of a window so that the file icon can indicate whether the document in this window has been modified.</source>
          <target state="translated">また、ウィンドウの編集状態を設定して、このウィンドウ内の文書が変更されたかどうかをファイルアイコンで表示できるようにすることもできます。</target>
        </trans-unit>
        <trans-unit id="4b220d91cb59b1b17b78213208160fd6ef180b59" translate="yes" xml:space="preserve">
          <source>You can also try loading the system wide Pepper Flash plugin instead of shipping the plugins yourself, its path can be received by calling &lt;code&gt;app.getPath('pepperFlashSystemPlugin')&lt;/code&gt;.</source>
          <target state="translated">プラグインを自分で出荷する代わりに、システム全体のPepper Flashプラグインをロードすることもできます。そのパスは、 &lt;code&gt;app.getPath('pepperFlashSystemPlugin')&lt;/code&gt; を呼び出すことで受信できます。</target>
        </trans-unit>
        <trans-unit id="7529f85109b29e2b780d777876594cd902fef3a6" translate="yes" xml:space="preserve">
          <source>You can attach the Visual Studio debugger to a running process on a local or remote computer. After the process is running, click Debug / Attach to Process (or press &lt;code&gt;CTRL+ALT+P&lt;/code&gt;) to open the &quot;Attach to Process&quot; dialog box. You can use this capability to debug apps that are running on a local or remote computer, debug multiple processes simultaneously.</source>
          <target state="translated">Visual Studioデバッガーをローカルコンピューターまたはリモートコンピューターで実行中のプロセスにアタッチできます。プロセスの実行後、「デバッグ/プロセスにアタッチ」をクリックして（または &lt;code&gt;CTRL+ALT+P&lt;/code&gt; を押して）、「プロセスにアタッチ」ダイアログボックスを開きます。この機能を使用して、ローカルまたはリモートコンピューターで実行されているアプリをデバッグし、複数のプロセスを同時にデバッグできます。</target>
        </trans-unit>
        <trans-unit id="7902864dabc56fde318435eca68e040f8af02183" translate="yes" xml:space="preserve">
          <source>You can be attached to multiple programs when you are debugging, but only one program is active in the debugger at any time. You can set the active program in the &lt;code&gt;Debug Location&lt;/code&gt; toolbar or the &lt;code&gt;Processes window&lt;/code&gt;.</source>
          <target state="translated">デバッグ中は複数のプログラムにアタッチできますが、デバッガーでは常に1つのプログラムのみがアクティブです。アクティブなプログラムは、[ &lt;code&gt;Debug Location&lt;/code&gt; ツールバーまたは[ &lt;code&gt;Processes window&lt;/code&gt; 設定できます。</target>
        </trans-unit>
        <trans-unit id="a350d3e533f07f965cdb43c668f62f67f0546b01" translate="yes" xml:space="preserve">
          <source>You can call &lt;code&gt;BrowserWindow.getCurrentWindow().setSheetOffset(offset)&lt;/code&gt; to change the offset from the window frame where sheets are attached.</source>
          <target state="translated">&lt;code&gt;BrowserWindow.getCurrentWindow().setSheetOffset(offset)&lt;/code&gt; を呼び出して、シートが添付されているウィンドウフレームからのオフセットを変更できます。</target>
        </trans-unit>
        <trans-unit id="2575e99c4414fab2585f584400e51842f37654a5" translate="yes" xml:space="preserve">
          <source>You can check if Pepper Flash plugin was loaded by inspecting &lt;code&gt;navigator.plugins&lt;/code&gt; in the console of devtools (although you can't know if the plugin's path is correct).</source>
          <target state="translated">ペッパーFlashプラグインを調べることによってロードされたかどうかをチェックすることができ &lt;code&gt;navigator.plugins&lt;/code&gt; を（プラグインのパスが正しいかどうかを知ることはできませんが）デベロッパーツールのコンソールで。</target>
        </trans-unit>
        <trans-unit id="42dc8c0245687efe34adc68c191db5d82c6d60cf" translate="yes" xml:space="preserve">
          <source>You can configure different key combinations based on the user's operating system.</source>
          <target state="translated">ユーザーのオペレーティングシステムに基づいて、異なるキーの組み合わせを設定することができます。</target>
        </trans-unit>
        <trans-unit id="b7878d1b4bdb69bb37382199bb4be7f07987efd6" translate="yes" xml:space="preserve">
          <source>You can create a &lt;code&gt;Session&lt;/code&gt; object in the &lt;code&gt;session&lt;/code&gt; module:</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; モジュールで &lt;code&gt;Session&lt;/code&gt; オブジェクトを作成できます。</target>
        </trans-unit>
        <trans-unit id="691da34d453b6823146e7a41ed89b96511cfbfa2" translate="yes" xml:space="preserve">
          <source>You can create a debug build of electron by following &lt;a href=&quot;build-instructions-osx&quot;&gt;build instructions for macOS&lt;/a&gt;. The bootstrap process will download Release version of libchromiumcontent by default, so you will not be able to step through the chromium source.</source>
          <target state="translated">&lt;a href=&quot;build-instructions-osx&quot;&gt;macOSのビルド手順に従って&lt;/a&gt;、electronのデバッグビルドを作成できます。ブートストラッププロセスは、デフォルトでlibchromiumcontentのリリースバージョンをダウンロードするため、クロムソースをステップ実行できません。</target>
        </trans-unit>
        <trans-unit id="011ca56e578c0cb9379817cb9cfba72791cb064e" translate="yes" xml:space="preserve">
          <source>You can directly add &lt;code&gt;--ppapi-flash-path&lt;/code&gt; and &lt;code&gt;--ppapi-flash-version&lt;/code&gt; to the Electron command line or by using the &lt;code&gt;app.commandLine.appendSwitch&lt;/code&gt; method before the app ready event. Also, turn on &lt;code&gt;plugins&lt;/code&gt; option of &lt;code&gt;BrowserWindow&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--ppapi-flash-path&lt;/code&gt; および &lt;code&gt;--ppapi-flash-version&lt;/code&gt; をElectronコマンドラインに直接追加するか、アプリの準備完了イベントの前に &lt;code&gt;app.commandLine.appendSwitch&lt;/code&gt; メソッドを使用して追加できます。また、 &lt;code&gt;BrowserWindow&lt;/code&gt; の &lt;code&gt;plugins&lt;/code&gt; オプションをオンにします。</target>
        </trans-unit>
        <trans-unit id="123a9d29b448655a909099527181ec5843dba849" translate="yes" xml:space="preserve">
          <source>You can download a RDP (Remote Desktop) file to access the VM.</source>
          <target state="translated">RDP(リモートデスクトップ)ファイルをダウンロードしてVMにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="65b2023e2c0fdab684d49ef119c876e761b7597d" translate="yes" xml:space="preserve">
          <source>You can find more information and documentation in &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;the repository&lt;/a&gt;.</source>
          <target state="translated">詳細とドキュメント&lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;はリポジトリ&lt;/a&gt;にあります。</target>
        </trans-unit>
        <trans-unit id="daf9cdabb7d550c6d54c8e55916cf118b232856b" translate="yes" xml:space="preserve">
          <source>You can find more information and documentation on &lt;a href=&quot;https://electronforge.io/&quot;&gt;electronforge.io&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://electronforge.io/&quot;&gt;electronforge.ioで&lt;/a&gt;詳細情報とドキュメントを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="63cfa6015ced471e2df18b0f6c7a6edfc4691ce8" translate="yes" xml:space="preserve">
          <source>You can force-enable or force-disable these warnings by setting &lt;code&gt;ELECTRON_ENABLE_SECURITY_WARNINGS&lt;/code&gt; or &lt;code&gt;ELECTRON_DISABLE_SECURITY_WARNINGS&lt;/code&gt; on either &lt;code&gt;process.env&lt;/code&gt; or the &lt;code&gt;window&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;ELECTRON_ENABLE_SECURITY_WARNINGS&lt;/code&gt; または &lt;code&gt;ELECTRON_DISABLE_SECURITY_WARNINGS&lt;/code&gt; を &lt;code&gt;process.env&lt;/code&gt; または &lt;code&gt;window&lt;/code&gt; オブジェクトに設定することで、これらの警告を強制的に有効または無効にできます。</target>
        </trans-unit>
        <trans-unit id="953d869f7fcf36171aa40fa071f6fd55f8645d44" translate="yes" xml:space="preserve">
          <source>You can get a code signing certificate from a lot of resellers, popular ones include:</source>
          <target state="translated">あなたは多くの転売屋からコード署名証明書を取得することができ、人気のあるものが含まれています。</target>
        </trans-unit>
        <trans-unit id="4d9c2db936d0fbcccd212c6cc235f439d5776d05" translate="yes" xml:space="preserve">
          <source>You can get a code signing certificate from a lot of resellers. Prices vary, so it may be worth your time to shop around. Popular resellers include:</source>
          <target state="translated">コード署名証明書は、多くの転売屋さんで手に入れることができます。価格は様々なので、時間をかけて買い物をする価値があるかもしれません。人気のある転売屋は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="a7031e39020e97a04c18fa315fca5d2f86392bd5" translate="yes" xml:space="preserve">
          <source>You can install &lt;code&gt;clang-format&lt;/code&gt; and &lt;code&gt;git-clang-format&lt;/code&gt; via &lt;code&gt;npm install -g clang-format&lt;/code&gt;.</source>
          <target state="translated">あなたはインストールでき &lt;code&gt;clang-format&lt;/code&gt; と &lt;code&gt;git-clang-format&lt;/code&gt; 介して、 &lt;code&gt;npm install -g clang-format&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25c54d358ac0f7f630a108746e4da50aeea2bd36" translate="yes" xml:space="preserve">
          <source>You can install modules like other Node projects, and then rebuild the modules for Electron with the &lt;a href=&quot;https://github.com/electron/electron-rebuild&quot;&gt;&lt;code&gt;electron-rebuild&lt;/code&gt;&lt;/a&gt; package. This module can automatically determine the version of Electron and handle the manual steps of downloading headers and rebuilding native modules for your app.</source>
          <target state="translated">他のノードプロジェクトと同様にモジュールをインストールしてから、&lt;a href=&quot;https://github.com/electron/electron-rebuild&quot;&gt; &lt;code&gt;electron-rebuild&lt;/code&gt; &lt;/a&gt;パッケージを使用してElectronのモジュールを再構築できます。このモジュールは、Electronのバージョンを自動的に判別し、ヘッダーをダウンロードしてアプリのネイティブモジュールを再構築する手動の手順を処理できます。</target>
        </trans-unit>
        <trans-unit id="f5b5be3f0cde906eb1b152735f5486323a846995" translate="yes" xml:space="preserve">
          <source>You can load a URL using a &lt;code&gt;POST&lt;/code&gt; request with URL-encoded data by doing the following:</source>
          <target state="translated">次のようにして、URLエンコードされたデータを含む &lt;code&gt;POST&lt;/code&gt; リクエストを使用してURLをロードできます。</target>
        </trans-unit>
        <trans-unit id="dd10d83c1f8b415aa26102575f774d29ad21d7c8" translate="yes" xml:space="preserve">
          <source>You can make the test suite run faster by isolating the specific test or block you're currently working on using Mocha's &lt;a href=&quot;https://mochajs.org/#exclusive-tests&quot;&gt;exclusive tests&lt;/a&gt; feature. Append &lt;code&gt;.only&lt;/code&gt; to any &lt;code&gt;describe&lt;/code&gt; or &lt;code&gt;it&lt;/code&gt; function call:</source>
          <target state="translated">Mochaの&lt;a href=&quot;https://mochajs.org/#exclusive-tests&quot;&gt;専用テスト&lt;/a&gt;機能を使用して、現在取り組んでいる特定のテストまたはブロックを分離することにより、テストスイートをより高速に実行できます。追加は &lt;code&gt;.only&lt;/code&gt; いずれかに &lt;code&gt;describe&lt;/code&gt; か、 &lt;code&gt;it&lt;/code&gt; コール機能します：</target>
        </trans-unit>
        <trans-unit id="c40e436028b76614b34f32db4e107936472ef296" translate="yes" xml:space="preserve">
          <source>You can make use of &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;after&lt;/code&gt;, &lt;code&gt;beforeGroupContaining&lt;/code&gt;, &lt;code&gt;afterGroupContaining&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; to control how the item will be placed when building a menu with &lt;code&gt;Menu.buildFromTemplate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; 、 &lt;code&gt;after&lt;/code&gt; 、 &lt;code&gt;beforeGroupContaining&lt;/code&gt; 、 &lt;code&gt;afterGroupContaining&lt;/code&gt; 、および &lt;code&gt;id&lt;/code&gt; を使用して、Menu.buildFromTemplateを使用してメニューを &lt;code&gt;Menu.buildFromTemplate&lt;/code&gt; するときにアイテムを配置する方法を制御できます。</target>
        </trans-unit>
        <trans-unit id="bd6785b9a3aa2adbe8e3d7b65e17a885374d240d" translate="yes" xml:space="preserve">
          <source>You can make use of &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; to control how the item will be placed when building a menu with &lt;code&gt;Menu.buildFromTemplate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Menu.buildFromTemplate&lt;/code&gt; を使用してメニューを作成するときに、 &lt;code&gt;position&lt;/code&gt; と &lt;code&gt;id&lt;/code&gt; を使用してアイテムの配置方法を制御できます。</target>
        </trans-unit>
        <trans-unit id="8a52d68533d51acdac67e595170dae3e3ce4b371" translate="yes" xml:space="preserve">
          <source>You can not add keyboard, mouse, and scroll event listeners to &lt;code&gt;webview&lt;/code&gt;.</source>
          <target state="translated">キーボード、マウス、およびスクロールイベントリスナーを &lt;code&gt;webview&lt;/code&gt; に追加することはできません。</target>
        </trans-unit>
        <trans-unit id="103d1470c703564b5eac9412b17fd7ba541097af" translate="yes" xml:space="preserve">
          <source>You can not click through the transparent area. We are going to introduce an API to set window shape to solve this, see &lt;a href=&quot;https://github.com/electron/electron/issues/1335&quot;&gt;our issue&lt;/a&gt; for details.</source>
          <target state="translated">透明な領域をクリックすることはできません。これを解決するためにウィンドウの形状を設定するAPIを導入します。詳細については&lt;a href=&quot;https://github.com/electron/electron/issues/1335&quot;&gt;、問題&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b158860688901c7dea3218deba412af5a62643e3" translate="yes" xml:space="preserve">
          <source>You can now &lt;a href=&quot;development/testing#unit-tests&quot;&gt;run the tests&lt;/a&gt;.</source>
          <target state="translated">これ&lt;a href=&quot;development/testing#unit-tests&quot;&gt;で、テストを実行&lt;/a&gt;できます。</target>
        </trans-unit>
        <trans-unit id="e3dfd32605238712584739515d1ad93684c34a67" translate="yes" xml:space="preserve">
          <source>You can now &lt;a href=&quot;testing#unit-tests&quot;&gt;run the tests&lt;/a&gt;.</source>
          <target state="translated">これ&lt;a href=&quot;testing#unit-tests&quot;&gt;で、テストを実行&lt;/a&gt;できます。</target>
        </trans-unit>
        <trans-unit id="43d0fd8d3107a73859ff844de595c6341cdb89c6" translate="yes" xml:space="preserve">
          <source>You can now set breakpoints in any of the indexed files. However, you will not be able to set breakpoints directly in the Chromium source. To set break points in the Chromium source, you can choose Debug &amp;gt; Breakpoints &amp;gt; Create Symbolic Breakpoint and set any function name as the symbol. This will set the breakpoint for all functions with that name, from all the classes if there are more than one. You can also do this step of setting break points prior to attaching the debugger, however, actual breakpoints for symbolic breakpoint functions may not show up until the debugger is attached to the app.</source>
          <target state="translated">インデックス付きファイルのいずれかにブレークポイントを設定できるようになりました。ただし、Chromiumソースに直接ブレークポイントを設定することはできません。Chromiumソースにブレークポイントを設定するには、[デバッグ]&amp;gt; [ブレークポイント]&amp;gt; [シンボリックブレークポイントの作成]を選択し、任意の関数名をシンボルとして設定します。これにより、複数のクラスがある場合は、すべてのクラスから、その名前のすべての関数にブレークポイントが設定されます。デバッガーをアタッチする前にブレークポイントを設定するこの手順を実行することもできますが、シンボリックブレークポイント関数の実際のブレークポイントは、デバッガーがアプリにアタッチされるまで表示されない場合があります。</target>
        </trans-unit>
        <trans-unit id="455952c76ebbeed20b85c8b313c115bc50dd4f3b" translate="yes" xml:space="preserve">
          <source>You can now set breakpoints in any of the indexed files. However, you will not be able to set breakpoints directly in the chromium source. To set break points in the chromium source, you can choose Debug &amp;gt; Breakpoints &amp;gt; Create Symbolic Breakpoint and set any function name as the symbol. This will set the breakpoint for all functions with that name, from all the classes if there are more than one. You can also do this step of setting break points prior to attaching the debugger, however, actual breakpoints for symbolic breakpoint functions may not show up until the debugger is attached to the app.</source>
          <target state="translated">これで、任意のインデックス付きファイルにブレークポイントを設定できます。ただし、クロムソースに直接ブレークポイントを設定することはできません。クロムソースにブレークポイントを設定するには、[デバッグ]&amp;gt; [ブレークポイント]&amp;gt; [シンボリックブレークポイントの作成]を選択し、任意の関数名をシンボルとして設定します。これにより、複数のクラスがある場合、すべてのクラスから、その名前のすべての関数にブレークポイントが設定されます。デバッガーを接続する前にブレークポイントを設定するこのステップを実行することもできますが、デバッガーがアプリに接続されるまで、シンボリックブレークポイント関数の実際のブレークポイントは表示されない場合があります。</target>
        </trans-unit>
        <trans-unit id="1fc7c2f864522acb02faa43c641450d0e0759652" translate="yes" xml:space="preserve">
          <source>You can only override paths of a &lt;code&gt;name&lt;/code&gt; defined in &lt;code&gt;app.getPath&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;app.getPath&lt;/code&gt; で定義された &lt;code&gt;name&lt;/code&gt; パスのみをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="d086be4d872211e17cb63f2493c626e54ea1d4cd" translate="yes" xml:space="preserve">
          <source>You can pair your Electron app up with an invisible UWP background task that gets to make full use of Windows 10 features - like push notifications, Cortana integration, or live tiles.</source>
          <target state="translated">Electronアプリを、プッシュ通知、Cortanaの統合、ライブタイルなどのWindows 10の機能をフルに活用できる、目に見えないUWPのバックグラウンドタスクとペアリングすることができます。</target>
        </trans-unit>
        <trans-unit id="b3d04c06d39d93da4ab532e8e4ff54c4a3da33e6" translate="yes" xml:space="preserve">
          <source>You can pass the name of the extension to the &lt;code&gt;BrowserWindow.removeDevToolsExtension&lt;/code&gt; API to remove it. The name of the extension is returned by &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt; and you can get the names of all installed DevTools Extensions using the &lt;code&gt;BrowserWindow.getDevToolsExtensions&lt;/code&gt; API.</source>
          <target state="translated">拡張機能の名前を &lt;code&gt;BrowserWindow.removeDevToolsExtension&lt;/code&gt; APIに渡して、削除することができます。拡張機能の名前は &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt; によって返され、 &lt;code&gt;BrowserWindow.getDevToolsExtensions&lt;/code&gt; APIを使用してインストールされているすべてのDevTools拡張機能の名前を取得できます。</target>
        </trans-unit>
        <trans-unit id="0632368721c1f00523681b0738f34827edd115e6" translate="yes" xml:space="preserve">
          <source>You can read more about this feature in &lt;a href=&quot;https://github.com/electron/spectron#accessibility-testing&quot;&gt;Spectron's documentation&lt;/a&gt;.</source>
          <target state="translated">この機能の詳細については、&lt;a href=&quot;https://github.com/electron/spectron#accessibility-testing&quot;&gt;Spectronのドキュメントを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="bf308d85faec62c8e94cc9ac1e71cc6d2201044a" translate="yes" xml:space="preserve">
          <source>You can rename &lt;code&gt;Electron.app&lt;/code&gt; to any name you want, and you also have to rename the &lt;code&gt;CFBundleDisplayName&lt;/code&gt;, &lt;code&gt;CFBundleIdentifier&lt;/code&gt; and &lt;code&gt;CFBundleName&lt;/code&gt; fields in the following files:</source>
          <target state="translated">&lt;code&gt;Electron.app&lt;/code&gt; の名前は任意の名前に変更できます。また、次のファイルの &lt;code&gt;CFBundleDisplayName&lt;/code&gt; 、 &lt;code&gt;CFBundleIdentifier&lt;/code&gt; 、および &lt;code&gt;CFBundleName&lt;/code&gt; フィールドの名前も変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="d6b1806c7fcfb8a31a742627f76667887adaa567" translate="yes" xml:space="preserve">
          <source>You can rename &lt;code&gt;electron.exe&lt;/code&gt; to any name you like, and edit its icon and other information with tools like &lt;a href=&quot;https://github.com/atom/rcedit&quot;&gt;rcedit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;electron.exe&lt;/code&gt; の名前を好きな名前に変更し、そのアイコンやその他の情報を&lt;a href=&quot;https://github.com/atom/rcedit&quot;&gt;rcedit&lt;/a&gt;などのツールで編集できます。</target>
        </trans-unit>
        <trans-unit id="c29ecd851db335074b30979d04fcab5cb08b1a6a" translate="yes" xml:space="preserve">
          <source>You can rename &lt;code&gt;electron.exe&lt;/code&gt; to any name you like, and edit its icon and other information with tools like &lt;a href=&quot;https://github.com/electron/rcedit&quot;&gt;rcedit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;electron.exe&lt;/code&gt; 名前を任意の名前に変更したり、&lt;a href=&quot;https://github.com/electron/rcedit&quot;&gt;rcedit&lt;/a&gt;などのツールを使用してアイコンやその他の情報を編集したりできます。</target>
        </trans-unit>
        <trans-unit id="24329729162bddaa082c5ec4d651c23f548f7973" translate="yes" xml:space="preserve">
          <source>You can rename the &lt;code&gt;electron&lt;/code&gt; executable to any name you like.</source>
          <target state="translated">あなたは、名前の変更を行うことができ &lt;code&gt;electron&lt;/code&gt; 好きな名前に実行可能ファイルを。</target>
        </trans-unit>
        <trans-unit id="9e7ea65680c746d3f242af3031a92254e55b9662" translate="yes" xml:space="preserve">
          <source>You can request the following paths by the name:</source>
          <target state="translated">以下のパスを名前でリクエストすることができます。</target>
        </trans-unit>
        <trans-unit id="c3bd22ba5ca9361efa9083963d23ba3b23d9da30" translate="yes" xml:space="preserve">
          <source>You can run &lt;code&gt;npm run lint-docs&lt;/code&gt; to ensure that your documentation changes are formatted correctly.</source>
          <target state="translated">あなたは実行することができます &lt;code&gt;npm run lint-docs&lt;/code&gt; あなたのドキュメントの変更が正しくフォーマットされていることを確認します。</target>
        </trans-unit>
        <trans-unit id="5491684e7362dee10f9d0e3039512fc33ce939bb" translate="yes" xml:space="preserve">
          <source>You can run &lt;code&gt;npm run lint&lt;/code&gt; to show any style issues detected by &lt;code&gt;cpplint&lt;/code&gt; and &lt;code&gt;eslint&lt;/code&gt;.</source>
          <target state="translated">あなたは実行することができ &lt;code&gt;npm run lint&lt;/code&gt; によって検出されたすべてのスタイルの問題を示すために &lt;code&gt;cpplint&lt;/code&gt; と &lt;code&gt;eslint&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="8347d86718a6e83ce1ce125e67a06e785638cc89" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;../api/browser-window#winsetthumbarbuttonsbuttons-windows&quot;&gt;BrowserWindow.setThumbarButtons&lt;/a&gt; to set thumbnail toolbar in your application:</source>
          <target state="translated">&lt;a href=&quot;../api/browser-window#winsetthumbarbuttonsbuttons-windows&quot;&gt;BrowserWindow.setThumbarButtons&lt;/a&gt;を使用して、アプリケーションにサムネイルツールバーを設定できます。</target>
        </trans-unit>
        <trans-unit id="33db9444a53f4fb17238bd1641cc8cdf03e710d3" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;api/app#appcommandlineappendswitchswitch-value&quot;&gt;app.commandLine.appendSwitch&lt;/a&gt; to append them in your app's main script before the &lt;a href=&quot;api/app#event-ready&quot;&gt;ready&lt;/a&gt; event of the &lt;a href=&quot;api/app&quot;&gt;app&lt;/a&gt; module is emitted:</source>
          <target state="translated">あなたは使用することができます&lt;a href=&quot;api/app#appcommandlineappendswitchswitch-value&quot;&gt;app.commandLine.appendSwitchを&lt;/a&gt;前に、アプリケーションのメインスクリプトでそれらを追加する&lt;a href=&quot;api/app#event-ready&quot;&gt;準備ができて&lt;/a&gt;のイベント&lt;a href=&quot;api/app&quot;&gt;アプリの&lt;/a&gt;モジュールが放出されます。</target>
        </trans-unit>
        <trans-unit id="89141f7800cdb4e9413fbbb1549719ad822e5401" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;app#appcommandlineappendswitchswitch-value&quot;&gt;app.commandLine.appendSwitch&lt;/a&gt; to append them in your app's main script before the &lt;a href=&quot;app#event-ready&quot;&gt;ready&lt;/a&gt; event of the &lt;a href=&quot;app&quot;&gt;app&lt;/a&gt; module is emitted:</source>
          <target state="translated">あなたは使用することができます&lt;a href=&quot;app#appcommandlineappendswitchswitch-value&quot;&gt;app.commandLine.appendSwitchを&lt;/a&gt;前に、アプリケーションのメインスクリプトでそれらを追加する&lt;a href=&quot;app#event-ready&quot;&gt;準備ができて&lt;/a&gt;のイベント&lt;a href=&quot;app&quot;&gt;アプリの&lt;/a&gt;モジュールが放出されます。</target>
        </trans-unit>
        <trans-unit id="bcf21cc0d87e5f31370995394a24d4f3274d3678" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;pip&lt;/code&gt; to install it:</source>
          <target state="translated">&lt;code&gt;pip&lt;/code&gt; を使用してインストールできます。</target>
        </trans-unit>
        <trans-unit id="2c9bfef7b6cb014cc46d964754f8eb8d72b0c83c" translate="yes" xml:space="preserve">
          <source>You can use environment variables to override the base URL, the path at which to look for Electron binaries, and the binary filename. The URL used by &lt;code&gt;@electron/get&lt;/code&gt; is composed as follows:</source>
          <target state="translated">環境変数を使用して、ベースURL、Electronバイナリを検索するパス、およびバイナリファイル名を上書きできます。 &lt;code&gt;@electron/get&lt;/code&gt; が使用するURLは次のように構成されています。</target>
        </trans-unit>
        <trans-unit id="0055fa44bdb8d2c19ef65f7e2ff8e4f1d2c2e6b7" translate="yes" xml:space="preserve">
          <source>You can use environment variables to override the base URL, the path at which to look for Electron binaries, and the binary filename. The url used by &lt;code&gt;electron-download&lt;/code&gt; is composed as follows:</source>
          <target state="translated">環境変数を使用して、ベースURL、Electronバイナリを探すパス、およびバイナリファイル名を上書きできます。 &lt;code&gt;electron-download&lt;/code&gt; が使用するURL は、次のように構成されています。</target>
        </trans-unit>
        <trans-unit id="a4c4e60a369679bf8fbad6ee190a02dfc22879a3" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;../api/global-shortcut&quot;&gt;globalShortcut&lt;/a&gt; module to detect keyboard events even when the application does not have keyboard focus.</source>
          <target state="translated">アプリケーションにキーボードフォーカスがない場合でも、&lt;a href=&quot;../api/global-shortcut&quot;&gt;globalShortcut&lt;/a&gt;モジュールを使用してキーボードイベントを検出できます。</target>
        </trans-unit>
        <trans-unit id="7fb299448e01cdbbed2bb67d51243616cbe276c1" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;../api/menu&quot;&gt;Menu&lt;/a&gt; module to configure keyboard shortcuts that will be triggered only when the app is focused. To do so, specify an &lt;a href=&quot;../api/accelerator&quot;&gt;&lt;code&gt;accelerator&lt;/code&gt;&lt;/a&gt; property when creating a &lt;a href=&quot;../api/menu-item&quot;&gt;MenuItem&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../api/menu&quot;&gt;Menu&lt;/a&gt;モジュールを使用して、アプリがフォーカスされている場合にのみトリガーされるキーボードショートカットを構成できます。これを行うには、&lt;a href=&quot;../api/menu-item&quot;&gt;MenuItemを&lt;/a&gt;作成するときに&lt;a href=&quot;../api/accelerator&quot;&gt; &lt;code&gt;accelerator&lt;/code&gt; &lt;/a&gt;プロパティを指定します。</target>
        </trans-unit>
        <trans-unit id="8d3d2831735d237c7fb774d6f0a91c2380cd8109" translate="yes" xml:space="preserve">
          <source>You can use this method in conjunction with &lt;code&gt;POST&lt;/code&gt; requests to get the progress of a file upload or other data transfer.</source>
          <target state="translated">このメソッドを &lt;code&gt;POST&lt;/code&gt; リクエストと組み合わせて使用​​すると、ファイルのアップロードやその他のデータ転送の進行状況を取得できます。</target>
        </trans-unit>
        <trans-unit id="e1b1b44557c75a0a59b0f5b7b6ce15aede983fe9" translate="yes" xml:space="preserve">
          <source>You can use this property to prompt users to download the arm64 version of your application when they are running the x64 version under Rosetta incorrectly.</source>
          <target state="translated">このプロパティを使用すると、x64 バージョンを Rosetta で誤って実行している場合に、アプリケーションの arm64 バージョンをダウンロードするようにユーザーに促すことができます。</target>
        </trans-unit>
        <trans-unit id="9811b52dd0230594469415d465374dd337ddcf2f" translate="yes" xml:space="preserve">
          <source>You can verify Electron's support for multiple &lt;code&gt;ffmpeg&lt;/code&gt; builds by loading the following page. It should work with the default &lt;code&gt;ffmpeg&lt;/code&gt; library distributed with Electron and not work with the &lt;code&gt;ffmpeg&lt;/code&gt; library built without proprietary codecs.</source>
          <target state="translated">Electronの複数の &lt;code&gt;ffmpeg&lt;/code&gt; ビルドのサポートを確認するには、次のページをロードします。Electronで配布されているデフォルトの &lt;code&gt;ffmpeg&lt;/code&gt; ライブラリで動作し、独自のコーデックなしでビルドされた &lt;code&gt;ffmpeg&lt;/code&gt; ライブラリでは動作しません。</target>
        </trans-unit>
        <trans-unit id="0dfae21a241208d0f400d552b5bd94b9b32d51cd" translate="yes" xml:space="preserve">
          <source>You can view the current schema &lt;a href=&quot;https://github.com/electron/electron/blob/master/build/fuses/fuses.json&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/electron/blob/master/build/fuses/fuses.json&quot;&gt;ここで&lt;/a&gt;現在のスキーマを表示できます。</target>
        </trans-unit>
        <trans-unit id="bac08682e05f25c8217a1c42f655deb84abb9ca2" translate="yes" xml:space="preserve">
          <source>You cannot require or use this module until the &lt;code&gt;ready&lt;/code&gt; event of the &lt;code&gt;app&lt;/code&gt; module is emitted.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; モジュールの &lt;code&gt;ready&lt;/code&gt; イベントが発行されるまで、このモジュールを要求または使用することはできません。</target>
        </trans-unit>
        <trans-unit id="e8bf13e8245e751b4802f03b07425b2d09adee85" translate="yes" xml:space="preserve">
          <source>You have to replace &lt;code&gt;TEAM_ID&lt;/code&gt; with your Team ID, and replace &lt;code&gt;your.bundle.id&lt;/code&gt; with the Bundle ID of your app.</source>
          <target state="translated">あなたは交換する必要が &lt;code&gt;TEAM_ID&lt;/code&gt; をあなたのチームのIDで、そして置き換える &lt;code&gt;your.bundle.id&lt;/code&gt; のアプリのバンドルIDと。</target>
        </trans-unit>
        <trans-unit id="737c32725dc2802f148010342181e212a176f4f9" translate="yes" xml:space="preserve">
          <source>You may get this error if you are using Git Bash for building, you should use PowerShell or VS2015 Command Prompt instead.</source>
          <target state="translated">Git Bash を使ってビルドしている場合は、PowerShell や VS2015 のコマンドプロンプトを代わりに使った方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="ec87df6736ceef74f369a1a2b3a325a01f2c94c5" translate="yes" xml:space="preserve">
          <source>You may have already guessed that disabling the &lt;code&gt;webSecurity&lt;/code&gt; property on a renderer process (&lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/browser-view&quot;&gt;&lt;code&gt;BrowserView&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;WebView&lt;/code&gt;&lt;/a&gt;) disables crucial security features.</source>
          <target state="translated">レンダラープロセス（&lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../api/browser-view&quot;&gt; &lt;code&gt;BrowserView&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;WebView&lt;/code&gt; &lt;/a&gt;）で &lt;code&gt;webSecurity&lt;/code&gt; プロパティを無効にすると、重要なセキュリティ機能が無効になることはすでにお気づきかもしれません。</target>
        </trans-unit>
        <trans-unit id="809c68eebcbd658bf5a28ebd0d5609d6607416ed" translate="yes" xml:space="preserve">
          <source>You may have already guessed that disabling the &lt;code&gt;webSecurity&lt;/code&gt; property on a renderer process (&lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/browser-view&quot;&gt;&lt;code&gt;BrowserView&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt;) disables crucial security features.</source>
          <target state="translated">レンダラープロセス（&lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../api/browser-view&quot;&gt; &lt;code&gt;BrowserView&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;../api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt;）で &lt;code&gt;webSecurity&lt;/code&gt; プロパティを無効にすると、重要なセキュリティ機能が無効になることをすでに推測しているかもしれません。</target>
        </trans-unit>
        <trans-unit id="16f5f66d65b6cb4033f9b08a6b2e1dc84acccf58" translate="yes" xml:space="preserve">
          <source>You may have already guessed that disabling the &lt;code&gt;webSecurity&lt;/code&gt; property on a renderer process (&lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;api/browser-view&quot;&gt;&lt;code&gt;BrowserView&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt;) disables crucial security features.</source>
          <target state="translated">レンダラープロセス（&lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;api/browser-view&quot;&gt; &lt;code&gt;BrowserView&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt;）で &lt;code&gt;webSecurity&lt;/code&gt; プロパティを無効にすると、重要なセキュリティ機能が無効になることをすでに推測しているかもしれません。</target>
        </trans-unit>
        <trans-unit id="350523eca5455d9b6069da0060aa3f0cfc950f4e" translate="yes" xml:space="preserve">
          <source>You may have seen permission requests while using Chrome: They pop up whenever the website attempts to use a feature that the user has to manually approve ( like notifications).</source>
          <target state="translated">Chrome を使用していると、許可要求を見たことがあるかもしれません。ユーザーが手動で承認しなければならない機能(通知など)を使用しようとすると、このような要求がポップアップ表示されます。</target>
        </trans-unit>
        <trans-unit id="67d599e133f6b8bb5259d65510c71eed6af6431a" translate="yes" xml:space="preserve">
          <source>You may need to become familiar with &lt;a href=&quot;https://dev.chromium.org/developers/design-documents/multi-process-architecture&quot;&gt;Chromium's multi-process architecture&lt;/a&gt; to understand the source code better.</source>
          <target state="translated">ソースコードをよりよく理解するには、&lt;a href=&quot;https://dev.chromium.org/developers/design-documents/multi-process-architecture&quot;&gt;Chromiumのマルチプロセスアーキテクチャ&lt;/a&gt;に慣れる必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="5b999e657c521cd8a35442ce167793a09ba65bb9" translate="yes" xml:space="preserve">
          <source>You may need to make sure that any symbols for native modules in your app are loaded correctly. To configure this, head to &lt;em&gt;Debug &amp;gt; Options...&lt;/em&gt; in Visual Studio 2017, and add the folders containing your &lt;code&gt;.pdb&lt;/code&gt; symbols under &lt;em&gt;Debugging &amp;gt; Symbols&lt;/em&gt;.</source>
          <target state="translated">アプリ内のネイティブモジュールのシンボルが正しく読み込まれていることを確認する必要がある場合があります。これを構成するには、Visual &lt;em&gt;Studio2017の[デバッグ]&amp;gt; [オプション...]に移動&lt;/em&gt;し、&lt;em&gt;[デバッグ]&amp;gt; [シンボル]の&lt;/em&gt;下に &lt;code&gt;.pdb&lt;/code&gt; シンボルを含むフォルダーを追加します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1ef5b1357a165876e130f5cbd318a1780624f844" translate="yes" xml:space="preserve">
          <source>You need to fork Electron when you have custom C++ code that you have patched directly into Electron, that either cannot be upstreamed, or has been rejected from the official version. As maintainers of Electron, we very much would like to make your scenario work, so please try as hard as you can to get your changes into the official version of Electron, it will be much much easier on you, and we appreciate your help.</source>
          <target state="translated">Electronに直接パッチを当てたカスタムC++コードで、アップストリームできないものや、公式バージョンから拒否されたものがある場合は、Electronをフォークする必要があります。Electronのメンテナとして、私たちはあなたのシナリオを実現したいと考えています。</target>
        </trans-unit>
        <trans-unit id="980a43c32430a8925b108d3ba15ede9a7dea3171" translate="yes" xml:space="preserve">
          <source>You should at least follow these steps to improve the security of your application:</source>
          <target state="translated">アプリケーションのセキュリティを向上させるために、少なくともこれらの手順に従う必要があります。</target>
        </trans-unit>
        <trans-unit id="6eab23de0c0b41bf541250382c2c6b3b81f04a44" translate="yes" xml:space="preserve">
          <source>You should call &lt;code&gt;event.preventDefault()&lt;/code&gt; if you want to handle this event.</source>
          <target state="translated">このイベントを処理する場合は、 &lt;code&gt;event.preventDefault()&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="599d1f287be39d6874932cae03927eeb8cf260f1" translate="yes" xml:space="preserve">
          <source>You should listen for the &lt;code&gt;transactions-updated&lt;/code&gt; event as soon as possible and certainly before you call &lt;code&gt;purchaseProduct&lt;/code&gt;.</source>
          <target state="translated">あなたは、のために耳を傾けなければならない &lt;code&gt;transactions-updated&lt;/code&gt; を呼び出す前に、できるだけ早くと確かにイベント &lt;code&gt;purchaseProduct&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="f73fe8be203af225496bda57b697924fb28c527e" translate="yes" xml:space="preserve">
          <source>You should read the &lt;code&gt;contextBridge&lt;/code&gt; documentation linked above to fully understand its limitations. For instance you can't send custom prototypes or symbols over the bridge.</source>
          <target state="translated">その制限を完全に理解するには、上記のリンク先の &lt;code&gt;contextBridge&lt;/code&gt; のドキュメントを読む必要があります。たとえば、ブリッジを介してカスタムプロトタイプやシンボルを送信することはできません。</target>
        </trans-unit>
        <trans-unit id="f7ce191856aca4e01748d79042799fa5f859e130" translate="yes" xml:space="preserve">
          <source>You should seek to use the &lt;code&gt;steal&lt;/code&gt; option as sparingly as possible.</source>
          <target state="translated">&lt;code&gt;steal&lt;/code&gt; オプションはできるだけ控えめに使用するようにしてください。</target>
        </trans-unit>
        <trans-unit id="7cfafe67fdbe1b85b5f31bd9882e363cbd9092ee" translate="yes" xml:space="preserve">
          <source>You should strive for always using the latest available version of Electron. Whenever a new major version is released, you should attempt to update your app as quickly as possible.</source>
          <target state="translated">常に最新バージョンのElectronを使用するように努力してください。新しいメジャーバージョンがリリースされたら、できるだけ早くアプリをアップデートするようにしてください。</target>
        </trans-unit>
        <trans-unit id="25022ae46a34743a92d7c60a4644bf7dfe66b5ed" translate="yes" xml:space="preserve">
          <source>You should then see a new Electron window and the app running in your touch bar (or touch bar emulator).</source>
          <target state="translated">すると、新しいElectronウィンドウが表示され、タッチバー(またはタッチバーエミュレータ)でアプリが起動していることが確認できます。</target>
        </trans-unit>
        <trans-unit id="7e5d1fe8fbd7545fe8058636f5974778258acd57" translate="yes" xml:space="preserve">
          <source>You will also need the storage account name which is labeled in AppVeyor as the &lt;strong&gt;Disk Storage Account Name&lt;/strong&gt;</source>
          <target state="translated">また、AppVeyorで&lt;strong&gt;ディスクストレージアカウント名&lt;/strong&gt;としてラベル付けされているストレージアカウント名も必要になります。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da08e9506f850a29c2bd777d8a4ebe64fca6db4d" translate="yes" xml:space="preserve">
          <source>You will also need to enable Xcode to build against the 10.10 SDK:</source>
          <target state="translated">また、10.10 SDKに対してビルドするためにXcodeを有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="c7da5dfc499fdd4568591cb556a3c9d4088e34d4" translate="yes" xml:space="preserve">
          <source>You will also need to specify</source>
          <target state="translated">を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="fc75557d757d8937c34a0a6db0321d033fea1ffb" translate="yes" xml:space="preserve">
          <source>You will need it to run tests</source>
          <target state="translated">テストを実行するために必要になります。</target>
        </trans-unit>
        <trans-unit id="eb17188cd12707172ebd4a0d80324f35c7d5472d" translate="yes" xml:space="preserve">
          <source>You will need the credential information available in the AppVeyor build cloud definition.</source>
          <target state="translated">AppVeyorのビルドクラウド定義で利用可能なクレデンシャル情報が必要です。</target>
        </trans-unit>
        <trans-unit id="ed14b4eddbd23d9b3c202300dacf0ad37229a156" translate="yes" xml:space="preserve">
          <source>You will need this URI path to copy into a new image.</source>
          <target state="translated">新しい画像にコピーするには、このURIパスが必要です。</target>
        </trans-unit>
        <trans-unit id="52881f3453659414c29707380e24217ea2c4eba4" translate="yes" xml:space="preserve">
          <source>You will need to use a debugger that supports the V8 inspector protocol.</source>
          <target state="translated">V8 インスペクタプロトコルをサポートするデバッガを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="361946e51d2bc073580e1c501a8c10264494aa8b" translate="yes" xml:space="preserve">
          <source>You will probably get feedback or requests for changes to your pull request. This is a big part of the submission process so don't be discouraged! Some contributors may sign off on the pull request right away. Others may have detailed comments or feedback. This is a necessary part of the process in order to evaluate whether the changes are correct and necessary.</source>
          <target state="translated">おそらく、あなたのプルリクエストに対するフィードバックや変更のリクエストを受けることになるでしょう。これは投稿プロセスの大きな部分ですので、落胆しないでください! 投稿者の中には、プルリクエストにすぐにサインオフしてくれる人もいれば、詳細なコメントやフィードバックをくれる人もいます。また、詳細なコメントやフィードバックをくれる人もいます。これは、変更が正しく必要かどうかを評価するために必要なプロセスの一部です。</target>
        </trans-unit>
        <trans-unit id="fe0b8d7dbf420b22e6e13eb89352e1aa7f79e37b" translate="yes" xml:space="preserve">
          <source>You'll need Electron S3 credentials in order to create and upload an Electron release. Contact a team member for more information.</source>
          <target state="translated">Electronリリースを作成してアップロードするには、Electron S3の資格が必要です。詳細については、チームメンバーにお問い合わせください。</target>
        </trans-unit>
        <trans-unit id="ff5efc1a532b42e68ce8aef581250611cf1cebaa" translate="yes" xml:space="preserve">
          <source>You'll need to install &lt;a href=&quot;https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_setting_up&quot;&gt;&lt;code&gt;depot_tools&lt;/code&gt;&lt;/a&gt;, the toolset used for fetching Chromium and its dependencies.</source>
          <target state="translated">Chromiumとその依存関係をフェッチするために使用されるツールセットである&lt;a href=&quot;https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_setting_up&quot;&gt; &lt;code&gt;depot_tools&lt;/code&gt; &lt;/a&gt;をインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="f12c1c6fb7fd133c2004b9c77db021db8e2a1bcc" translate="yes" xml:space="preserve">
          <source>You're running Linux, so you likely already know how to operate a command line client. Open up your favorite client and confirm that both &lt;code&gt;node&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt; are available globally:</source>
          <target state="translated">Linuxを実行しているので、コマンドラインクライアントの操作方法をすでに知っていると思います。お気に入りのクライアントを開き、 &lt;code&gt;node&lt;/code&gt; と &lt;code&gt;npm&lt;/code&gt; の両方がグローバルに利用できることを確認します。</target>
        </trans-unit>
        <trans-unit id="e0ded77b76a8250eb08d649ea418ad416518dcc2" translate="yes" xml:space="preserve">
          <source>Your Electron application uses the &lt;code&gt;package.json&lt;/code&gt; file as the main entry point (as any other Node.js application). The main script of your application is &lt;code&gt;main.js&lt;/code&gt;, so modify the &lt;code&gt;package.json&lt;/code&gt; file accordingly:</source>
          <target state="translated">Electronアプリケーションは、 &lt;code&gt;package.json&lt;/code&gt; ファイルをメインのエントリポイントとして使用します（他のNode.jsアプリケーションと同様）。アプリケーションのメインスクリプトは &lt;code&gt;main.js&lt;/code&gt; であるため、それに応じて &lt;code&gt;package.json&lt;/code&gt; ファイルを変更します。</target>
        </trans-unit>
        <trans-unit id="94546dc238ccb6f10083e4643fccd3987d506629" translate="yes" xml:space="preserve">
          <source>Your app may crash. See the Resource Access section in &lt;a href=&quot;https://developer.apple.com/documentation/security/hardened_runtime&quot;&gt;Hardened Runtime&lt;/a&gt; for more information and entitlements you may need.</source>
          <target state="translated">アプリがクラッシュする可能性があります。必要な情報と資格については、&lt;a href=&quot;https://developer.apple.com/documentation/security/hardened_runtime&quot;&gt;HardenedRuntimeの&lt;/a&gt;「ResourceAccess」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="cf03b61779d23226860e4d0c72bba57d91839209" translate="yes" xml:space="preserve">
          <source>Your app probably has a lot of JavaScript to run in the renderer process. The trick is to execute operations as quickly as possible without taking away resources needed to keep scrolling smooth, respond to user input, or animations at 60fps.</source>
          <target state="translated">お使いのアプリには、レンダラー プロセスで実行する JavaScript が多く含まれている可能性があります。スムーズなスクロールの維持、ユーザー入力への応答、60fps のアニメーションに必要なリソースを奪うことなく、できるだけ早く操作を実行することがコツです。</target>
        </trans-unit>
        <trans-unit id="0ae600b8c0e61b7862ae057aae4f72fc08fe4c86" translate="yes" xml:space="preserve">
          <source>Your application should then always use &lt;code&gt;shouldUseDarkColors&lt;/code&gt; to determine what CSS to apply.</source>
          <target state="translated">その場合、アプリケーションは常に &lt;code&gt;shouldUseDarkColors&lt;/code&gt; を使用して、適用するCSSを決定する必要があります。</target>
        </trans-unit>
        <trans-unit id="88fe7653f8e637e9adb3f29bbf2d709bf1dd6906" translate="yes" xml:space="preserve">
          <source>Your running Electron app should look as follows:</source>
          <target state="translated">実行中のElectronアプリは以下のようになっているはずです。</target>
        </trans-unit>
        <trans-unit id="ea200453e7bf87e19ab051f834d9327c2f973cff" translate="yes" xml:space="preserve">
          <source>Zulu</source>
          <target state="translated">Zulu</target>
        </trans-unit>
        <trans-unit id="a7f16e4a1780885fa9023c094a82d6d8e0a85918" translate="yes" xml:space="preserve">
          <source>[FIXME] something about a Node debugger in Atom that we (e.g. deepak) use and need to confirm doesn't break with the Node upgrade?</source>
          <target state="translated">[FIXME] Atomのノードデバッガーについて（たとえば、deepak）使用し、ノードのアップグレードで壊れないことを確認する必要があるか。</target>
        </trans-unit>
        <trans-unit id="d1e622507595486ee06db24b1debf11064edd2ba" translate="yes" xml:space="preserve">
          <source>af</source>
          <target state="translated">af</target>
        </trans-unit>
        <trans-unit id="79ffc8beb76bafd8391928a2334fa355c9f171e4" translate="yes" xml:space="preserve">
          <source>alpha releases that have looser stability constraints to betas; for example it would be allowable to admit new features while a stability channel is in &lt;em&gt;alpha&lt;/em&gt;</source>
          <target state="translated">ベータに対する安定性の制約が緩やかなアルファリリース。たとえば、安定性チャネルが&lt;em&gt;アルファ版の&lt;/em&gt;ときに新しい機能を許可することは許可されます&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96e8155732e8324ae26f64d4516eb6fe696ac84f" translate="yes" xml:space="preserve">
          <source>am</source>
          <target state="translated">am</target>
        </trans-unit>
        <trans-unit id="e8d6e733d567c5bec6368afa56c86475e6aaca13" translate="yes" xml:space="preserve">
          <source>and add the &lt;code&gt;renderer.js&lt;/code&gt; file:</source>
          <target state="translated">そして &lt;code&gt;renderer.js&lt;/code&gt; ファイルを追加します：</target>
        </trans-unit>
        <trans-unit id="bb0bda582005e4e96d78b9b07cb0336e1e0376e6" translate="yes" xml:space="preserve">
          <source>and add the following lines to the &lt;code&gt;renderer.js&lt;/code&gt; file:</source>
          <target state="translated">そして、 &lt;code&gt;renderer.js&lt;/code&gt; ファイルに次の行を追加します。</target>
        </trans-unit>
        <trans-unit id="3e751165af2ef382a1528cad1fe270c8f561ff9e" translate="yes" xml:space="preserve">
          <source>and preload.js:</source>
          <target state="translated">とpreload.jsを使っています。</target>
        </trans-unit>
        <trans-unit id="ea6aefc75f681ce5910581960807d4c686c91843" translate="yes" xml:space="preserve">
          <source>and the following behaviors have been changed:</source>
          <target state="translated">と、以下の動作が変更されました。</target>
        </trans-unit>
        <trans-unit id="0156ce456e2e43579f40f0289b2d7f286eb288a8" translate="yes" xml:space="preserve">
          <source>and then check if it is in the following form:</source>
          <target state="translated">になっているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="7d1043473d55bfa90e8530d35801d4e381bc69f0" translate="yes" xml:space="preserve">
          <source>app</source>
          <target state="translated">app</target>
        </trans-unit>
        <trans-unit id="d8526a79dfe7fef194a2f9f328069a7adfb8c712" translate="yes" xml:space="preserve">
          <source>app.getFileIcon(path[, options], callback)</source>
          <target state="translated">app.getFileIcon(path[,options],callback)</target>
        </trans-unit>
        <trans-unit id="23d8e0156062165ca3736e9f1e364d414e1d82d5" translate="yes" xml:space="preserve">
          <source>ar</source>
          <target state="translated">ar</target>
        </trans-unit>
        <trans-unit id="7c35f3e9cde39743aef1bd4868bcde9c7eccd829" translate="yes" xml:space="preserve">
          <source>autoUpdater</source>
          <target state="translated">autoUpdater</target>
        </trans-unit>
        <trans-unit id="90283840d90de49b8e7984bd99b47fee0d4bd50d" translate="yes" xml:space="preserve">
          <source>az</source>
          <target state="translated">az</target>
        </trans-unit>
        <trans-unit id="986b1bc1eb8de89643c50722910f99001c232865" translate="yes" xml:space="preserve">
          <source>be</source>
          <target state="translated">be</target>
        </trans-unit>
        <trans-unit id="d107c0c54600a2d258a0049ae987a2c24eba8c9e" translate="yes" xml:space="preserve">
          <source>be entirely in lowercase with the exception of proper nouns, acronyms, and the words that refer to code, like function/variable names</source>
          <target state="translated">固有名詞、頭字語、関数名や変数名のようなコードを参照する単語を除き、すべて小文字にします。</target>
        </trans-unit>
        <trans-unit id="80f87c8847da6c872ce2fc9fec0a98a73ebc578d" translate="yes" xml:space="preserve">
          <source>bg</source>
          <target state="translated">bg</target>
        </trans-unit>
        <trans-unit id="6de8967f3f33cce72fb2858eaa856fcd7fc8d487" translate="yes" xml:space="preserve">
          <source>bh</source>
          <target state="translated">bh</target>
        </trans-unit>
        <trans-unit id="19f38987eafa5d20a236297a8de89ebf546129a0" translate="yes" xml:space="preserve">
          <source>bn</source>
          <target state="translated">bn</target>
        </trans-unit>
        <trans-unit id="3eb65786145ecb71e9dcbb3a09f06a0b3a6c4d2d" translate="yes" xml:space="preserve">
          <source>br</source>
          <target state="translated">br</target>
        </trans-unit>
        <trans-unit id="f33330b10957c582b7110e1dad156a42adeee683" translate="yes" xml:space="preserve">
          <source>bs</source>
          <target state="translated">bs</target>
        </trans-unit>
        <trans-unit id="b48f527a242126660eb562e27dae3f2700ca9a3b" translate="yes" xml:space="preserve">
          <source>build: Changes that affect the build system</source>
          <target state="translated">ビルドします。ビルドシステムに影響を与える変更</target>
        </trans-unit>
        <trans-unit id="1c42c72cf95aa1b76609b585b34baf6b501d713e" translate="yes" xml:space="preserve">
          <source>ca</source>
          <target state="translated">ca</target>
        </trans-unit>
        <trans-unit id="9a1150698a42dbd8c0f006210f8304192a85fd06" translate="yes" xml:space="preserve">
          <source>cannot create directory at '...': Filename too long</source>
          <target state="translated">にディレクトリを作成できません。ファイル名が長すぎます</target>
        </trans-unit>
        <trans-unit id="686e00d122df428edeff53d29bf1531490b16b95" translate="yes" xml:space="preserve">
          <source>ci: Changes to our CI configuration files and scripts</source>
          <target state="translated">ci:CI 設定ファイルとスクリプトの変更</target>
        </trans-unit>
        <trans-unit id="e2ab8561c5a8f9967e62486c44211c63bcf7d002" translate="yes" xml:space="preserve">
          <source>clipboard</source>
          <target state="translated">clipboard</target>
        </trans-unit>
        <trans-unit id="87dda20416649f2a6a1b03d4e13d48a80b1a357f" translate="yes" xml:space="preserve">
          <source>co</source>
          <target state="translated">co</target>
        </trans-unit>
        <trans-unit id="e0ffe6d533ae589f2dc2ccc5eea920621aa53fa1" translate="yes" xml:space="preserve">
          <source>commit these removals</source>
          <target state="translated">これらの削除をコミットする</target>
        </trans-unit>
        <trans-unit id="e8da7d556b502f8541028ab16637e6261eaab7ba" translate="yes" xml:space="preserve">
          <source>contain a short description of the change (preferably 50 characters or less, and no more than 72 characters)</source>
          <target state="translated">変更内容の簡単な説明を含む(好ましくは50文字以内、72文字以内</target>
        </trans-unit>
        <trans-unit id="c6e8bf1842201de6f642c946baebd04db39926c7" translate="yes" xml:space="preserve">
          <source>contentTracing</source>
          <target state="translated">contentTracing</target>
        </trans-unit>
        <trans-unit id="e207fb0b529defa80d83a2a638203500b3e43a2f" translate="yes" xml:space="preserve">
          <source>contentTracing.getCategories(callback)</source>
          <target state="translated">contentTracing.getCategories(callback)</target>
        </trans-unit>
        <trans-unit id="b1177a88aaa122a06663c845a5c297325703cefb" translate="yes" xml:space="preserve">
          <source>contentTracing.getTraceBufferUsage(callback)</source>
          <target state="translated">contentTracing.getTraceBufferUsage(callback)</target>
        </trans-unit>
        <trans-unit id="da86ef1fee09f8f980c274f71183db735aedc25b" translate="yes" xml:space="preserve">
          <source>contentTracing.startRecording(options, callback)</source>
          <target state="translated">contentTracing.startRecording(options,callback)</target>
        </trans-unit>
        <trans-unit id="04702090728a799b51ea90dd01d824816baf3578" translate="yes" xml:space="preserve">
          <source>contentTracing.stopRecording(resultFilePath, callback)</source>
          <target state="translated">contentTracing.stopRecording(resultFilePath,callback)</target>
        </trans-unit>
        <trans-unit id="5d34e0ab242b0663cfb2ca448072f35785dfdcb5" translate="yes" xml:space="preserve">
          <source>contents.addWorkSpace()</source>
          <target state="translated">contents.addWorkSpace()</target>
        </trans-unit>
        <trans-unit id="8308c5515f0d23f50e0e844c1a9523dae0ba5b0b" translate="yes" xml:space="preserve">
          <source>contents.beginFrameSubscription()</source>
          <target state="translated">contents.beginFrameSubscription()</target>
        </trans-unit>
        <trans-unit id="e1899c0f3cb1326b4956eb52f735faf8a4245178" translate="yes" xml:space="preserve">
          <source>contents.canGoBack()</source>
          <target state="translated">contents.canGoBack()</target>
        </trans-unit>
        <trans-unit id="706e721f2095c4b482944db72adf69f699724fed" translate="yes" xml:space="preserve">
          <source>contents.canGoForward()</source>
          <target state="translated">contents.canGoForward()</target>
        </trans-unit>
        <trans-unit id="4ec1504b48bb5c0000b806baeab86d4ad9956080" translate="yes" xml:space="preserve">
          <source>contents.canGoToOffset()</source>
          <target state="translated">contents.canGoToOffset()</target>
        </trans-unit>
        <trans-unit id="666daf2ff7f3f0df34b0d5f23814ecd233482b0a" translate="yes" xml:space="preserve">
          <source>contents.capturePage()</source>
          <target state="translated">contents.capturePage()</target>
        </trans-unit>
        <trans-unit id="7587d33f8941b65ce49c12983d38925f812649de" translate="yes" xml:space="preserve">
          <source>contents.capturePage([rect, ]callback)</source>
          <target state="translated">contents.capturePage([rect,]コールバック)</target>
        </trans-unit>
        <trans-unit id="23346e43c7b9680a9ba90cf280d1a940744a35e5" translate="yes" xml:space="preserve">
          <source>contents.clearHistory()</source>
          <target state="translated">contents.clearHistory()</target>
        </trans-unit>
        <trans-unit id="8524266890b593106d5deacbb930197ffd101d9d" translate="yes" xml:space="preserve">
          <source>contents.closeDevTools()</source>
          <target state="translated">contents.closeDevTools()</target>
        </trans-unit>
        <trans-unit id="b3ebb734de76776dac43770ff6200c8e5b1b7578" translate="yes" xml:space="preserve">
          <source>contents.copy()</source>
          <target state="translated">contents.copy()</target>
        </trans-unit>
        <trans-unit id="b1e18292a9352c6d0da0a4130dd2e06d1b13b9bc" translate="yes" xml:space="preserve">
          <source>contents.copyImageAt()</source>
          <target state="translated">contents.copyImageAt()</target>
        </trans-unit>
        <trans-unit id="3eab524693a7aca86c96d10a79ddfd3e1a0c0e45" translate="yes" xml:space="preserve">
          <source>contents.cut()</source>
          <target state="translated">contents.cut()</target>
        </trans-unit>
        <trans-unit id="c71574b791e7699dd52221a34c5bce063d1311d3" translate="yes" xml:space="preserve">
          <source>contents.debugger</source>
          <target state="translated">contents.debugger</target>
        </trans-unit>
        <trans-unit id="2d3771c1602bc08d1335faeda63926c4cb7223a2" translate="yes" xml:space="preserve">
          <source>contents.delete()</source>
          <target state="translated">contents.delete()</target>
        </trans-unit>
        <trans-unit id="bf41a35b75f6413c14f7419bd855dac8e7312c78" translate="yes" xml:space="preserve">
          <source>contents.devToolsWebContents</source>
          <target state="translated">contents.devToolsWebContents</target>
        </trans-unit>
        <trans-unit id="944127f66383d12d32699cccf0bb982ab7cae316" translate="yes" xml:space="preserve">
          <source>contents.disableDeviceEmulation()</source>
          <target state="translated">contents.disableDeviceEmulation()</target>
        </trans-unit>
        <trans-unit id="1a27d07570760f582d988280a0a5144475353038" translate="yes" xml:space="preserve">
          <source>contents.downloadURL()</source>
          <target state="translated">contents.downloadURL()</target>
        </trans-unit>
        <trans-unit id="c34c4de57a8a2aac0a45f82d6984c7709f98427f" translate="yes" xml:space="preserve">
          <source>contents.enableDeviceEmulation()</source>
          <target state="translated">contents.enableDeviceEmulation()</target>
        </trans-unit>
        <trans-unit id="8063a4cf8baca58adfd0665d19e2dc9953c7b077" translate="yes" xml:space="preserve">
          <source>contents.endFrameSubscription()</source>
          <target state="translated">contents.endFrameSubscription()</target>
        </trans-unit>
        <trans-unit id="6375425bdf0a950a574bdfdc86dfb5c70e36c71f" translate="yes" xml:space="preserve">
          <source>contents.executeJavaScript()</source>
          <target state="translated">contents.executeJavaScript()</target>
        </trans-unit>
        <trans-unit id="f9d99887421f8b8fe5033f985bd7a05909c8a0d8" translate="yes" xml:space="preserve">
          <source>contents.executeJavaScript(code[, userGesture, callback])</source>
          <target state="translated">contents.executeJavaScript(code[,userGesture,callback)</target>
        </trans-unit>
        <trans-unit id="2c1816b999c0170f9ed8cd4d2b06149162919de2" translate="yes" xml:space="preserve">
          <source>contents.findInPage()</source>
          <target state="translated">contents.findInPage()</target>
        </trans-unit>
        <trans-unit id="ae42566c1f7a2f8e225eb56de15f3cf116d0ce66" translate="yes" xml:space="preserve">
          <source>contents.focus()</source>
          <target state="translated">contents.focus()</target>
        </trans-unit>
        <trans-unit id="bc1e236a0f1b917166ec88b6d6717de8e1a4987f" translate="yes" xml:space="preserve">
          <source>contents.getFrameRate()</source>
          <target state="translated">contents.getFrameRate()</target>
        </trans-unit>
        <trans-unit id="2d3337106dcd094140102bf480c51d02e59293df" translate="yes" xml:space="preserve">
          <source>contents.getOSProcessId()</source>
          <target state="translated">contents.getOSProcessId()</target>
        </trans-unit>
        <trans-unit id="83cfd68594ff24e90e331bdfb02242835c1f5b4c" translate="yes" xml:space="preserve">
          <source>contents.getPrinters()</source>
          <target state="translated">contents.getPrinters()</target>
        </trans-unit>
        <trans-unit id="86d63109b6fd1b73eb2eebb5c1fc06678ac95aa2" translate="yes" xml:space="preserve">
          <source>contents.getTitle()</source>
          <target state="translated">contents.getTitle()</target>
        </trans-unit>
        <trans-unit id="1e867041f04950bdea47bcba2b7855c5083d3128" translate="yes" xml:space="preserve">
          <source>contents.getURL()</source>
          <target state="translated">contents.getURL()</target>
        </trans-unit>
        <trans-unit id="f56534a9a43aac19db2c303a290be444c3b64c77" translate="yes" xml:space="preserve">
          <source>contents.getUserAgent()</source>
          <target state="translated">contents.getUserAgent()</target>
        </trans-unit>
        <trans-unit id="b637d9f2a93c48e9dc8c1759691b421bede8d261" translate="yes" xml:space="preserve">
          <source>contents.getWebRTCIPHandlingPolicy()</source>
          <target state="translated">contents.getWebRTCIPHandlingPolicy()</target>
        </trans-unit>
        <trans-unit id="d11748bb44e05ad77aca5f2e267928801a03dd90" translate="yes" xml:space="preserve">
          <source>contents.getZoomFactor()</source>
          <target state="translated">contents.getZoomFactor()</target>
        </trans-unit>
        <trans-unit id="338f23cb95183ac6315f0107232f4133d27ec6ec" translate="yes" xml:space="preserve">
          <source>contents.getZoomLevel()</source>
          <target state="translated">contents.getZoomLevel()</target>
        </trans-unit>
        <trans-unit id="b71ae4236458ed0eec833f9ec281897b3a5a7a5a" translate="yes" xml:space="preserve">
          <source>contents.goBack()</source>
          <target state="translated">contents.goBack()</target>
        </trans-unit>
        <trans-unit id="e6d794fe68de5ff7a79b9681deef98bfcfe1325f" translate="yes" xml:space="preserve">
          <source>contents.goForward()</source>
          <target state="translated">contents.goForward()</target>
        </trans-unit>
        <trans-unit id="e2f6bf0657a5592b76b687b72fe9e8b04dbd207b" translate="yes" xml:space="preserve">
          <source>contents.goToIndex()</source>
          <target state="translated">contents.goToIndex()</target>
        </trans-unit>
        <trans-unit id="db46192a64951da189460b0859f81f32fc48f591" translate="yes" xml:space="preserve">
          <source>contents.goToOffset()</source>
          <target state="translated">contents.goToOffset()</target>
        </trans-unit>
        <trans-unit id="7e3acba3e9e98e79468d91c954dce088edcd649e" translate="yes" xml:space="preserve">
          <source>contents.hasServiceWorker()</source>
          <target state="translated">contents.hasServiceWorker()</target>
        </trans-unit>
        <trans-unit id="fcbeb4702d13a5c484a3de7ca1b0f074646707d2" translate="yes" xml:space="preserve">
          <source>contents.hostWebContents</source>
          <target state="translated">contents.hostWebContents</target>
        </trans-unit>
        <trans-unit id="37811e7ed82f9143266db0907d9d009b758330c9" translate="yes" xml:space="preserve">
          <source>contents.id</source>
          <target state="translated">contents.id</target>
        </trans-unit>
        <trans-unit id="ec5c48c668850e08653206ee09adfba2948c3b15" translate="yes" xml:space="preserve">
          <source>contents.insertCSS()</source>
          <target state="translated">contents.insertCSS()</target>
        </trans-unit>
        <trans-unit id="34080e44a40509cb4061a55eded32e6e52881af5" translate="yes" xml:space="preserve">
          <source>contents.insertText()</source>
          <target state="translated">contents.insertText()</target>
        </trans-unit>
        <trans-unit id="81ae5edcdd3efd055540b6bf8bc636845d0b998c" translate="yes" xml:space="preserve">
          <source>contents.inspectElement()</source>
          <target state="translated">contents.inspectElement()</target>
        </trans-unit>
        <trans-unit id="51b6c376b85a2c5ef88f36474a001a8f813516cb" translate="yes" xml:space="preserve">
          <source>contents.inspectServiceWorker()</source>
          <target state="translated">contents.inspectServiceWorker()</target>
        </trans-unit>
        <trans-unit id="f2a15a626c65736ca0344ea8e4e09297fcbdc4e8" translate="yes" xml:space="preserve">
          <source>contents.invalidate()</source>
          <target state="translated">contents.invalidate()</target>
        </trans-unit>
        <trans-unit id="80f7f332badc58ac6dd74454864686428eb0017c" translate="yes" xml:space="preserve">
          <source>contents.isAudioMuted()</source>
          <target state="translated">contents.isAudioMuted()</target>
        </trans-unit>
        <trans-unit id="19d94a7e6461355534c08bc14fb3b1ec35be7626" translate="yes" xml:space="preserve">
          <source>contents.isCrashed()</source>
          <target state="translated">contents.isCrashed()</target>
        </trans-unit>
        <trans-unit id="dab5e9622de501c1fd10c2cb0f86482d01e75711" translate="yes" xml:space="preserve">
          <source>contents.isDestroyed()</source>
          <target state="translated">contents.isDestroyed()</target>
        </trans-unit>
        <trans-unit id="96dbb0cf8953a6fc650821361414751ee7929fed" translate="yes" xml:space="preserve">
          <source>contents.isDevToolsFocused()</source>
          <target state="translated">contents.isDevToolsFocused()</target>
        </trans-unit>
        <trans-unit id="3b8c88c2d0665869578e9872731be3c932ded6ac" translate="yes" xml:space="preserve">
          <source>contents.isDevToolsOpened()</source>
          <target state="translated">contents.isDevToolsOpened()</target>
        </trans-unit>
        <trans-unit id="32fee53fd8ae118f772994873fdfb0971e78d898" translate="yes" xml:space="preserve">
          <source>contents.isFocused()</source>
          <target state="translated">contents.isFocused()</target>
        </trans-unit>
        <trans-unit id="795787685cf8cac8beeea5b232d7a2084f6fddeb" translate="yes" xml:space="preserve">
          <source>contents.isLoading()</source>
          <target state="translated">contents.isLoading()</target>
        </trans-unit>
        <trans-unit id="642fe464529ec5c4cca9e1f4b720cc356f49cdf9" translate="yes" xml:space="preserve">
          <source>contents.isLoadingMainFrame()</source>
          <target state="translated">contents.isLoadingMainFrame()</target>
        </trans-unit>
        <trans-unit id="dee8ea12adbe77373351a73e87936bc816ac817f" translate="yes" xml:space="preserve">
          <source>contents.isOffscreen()</source>
          <target state="translated">contents.isOffscreen()</target>
        </trans-unit>
        <trans-unit id="62a9d3ca266bf2afb406773f54d9d8f6c8f1d5b3" translate="yes" xml:space="preserve">
          <source>contents.isPainting()</source>
          <target state="translated">contents.isPainting()</target>
        </trans-unit>
        <trans-unit id="0d56d6662a454291ec57ccf51a78ba7afbc8994e" translate="yes" xml:space="preserve">
          <source>contents.isWaitingForResponse()</source>
          <target state="translated">contents.isWaitingForResponse()</target>
        </trans-unit>
        <trans-unit id="696cfe7a99bd4fa8430ef16a7263236118eba642" translate="yes" xml:space="preserve">
          <source>contents.loadFile()</source>
          <target state="translated">contents.loadFile()</target>
        </trans-unit>
        <trans-unit id="ac74ee46e8e9c66723ffa624dfcd587d48d0ebde" translate="yes" xml:space="preserve">
          <source>contents.loadURL()</source>
          <target state="translated">contents.loadURL()</target>
        </trans-unit>
        <trans-unit id="593ef47136dbbf68040286f5225e333f3437ce23" translate="yes" xml:space="preserve">
          <source>contents.openDevTools()</source>
          <target state="translated">contents.openDevTools()</target>
        </trans-unit>
        <trans-unit id="09c2b75da099f909825615a4e907cc0b7462dfba" translate="yes" xml:space="preserve">
          <source>contents.paste()</source>
          <target state="translated">contents.paste()</target>
        </trans-unit>
        <trans-unit id="4cb96f4c20262a8fff71422c01a2425927d5eeae" translate="yes" xml:space="preserve">
          <source>contents.pasteAndMatchStyle()</source>
          <target state="translated">contents.pasteAndMatchStyle()</target>
        </trans-unit>
        <trans-unit id="81b431b6ec165b46362b0efcdb9334a08fe8a1d1" translate="yes" xml:space="preserve">
          <source>contents.print()</source>
          <target state="translated">contents.print()</target>
        </trans-unit>
        <trans-unit id="d75d7754268a8c53022aba408a84c449fb4d7276" translate="yes" xml:space="preserve">
          <source>contents.printToPDF()</source>
          <target state="translated">contents.printToPDF()</target>
        </trans-unit>
        <trans-unit id="90a43a3b774d0c7fe58ce1d7c086f0f14da3a8e2" translate="yes" xml:space="preserve">
          <source>contents.printToPDF(options, callback)</source>
          <target state="translated">contents.printToPDF(options,callback)</target>
        </trans-unit>
        <trans-unit id="f726117ef3313d5f0d3d6f882a0abf72ea34b419" translate="yes" xml:space="preserve">
          <source>contents.redo()</source>
          <target state="translated">contents.redo()</target>
        </trans-unit>
        <trans-unit id="d3de54fb454916ffd4d59eb7c43b9046eed8834b" translate="yes" xml:space="preserve">
          <source>contents.reload()</source>
          <target state="translated">contents.reload()</target>
        </trans-unit>
        <trans-unit id="0d9e112f61e440b7054ffe9ee9a63c23f898e8c5" translate="yes" xml:space="preserve">
          <source>contents.reloadIgnoringCache()</source>
          <target state="translated">contents.reloadIgnoringCache()</target>
        </trans-unit>
        <trans-unit id="4ddc6b0390982389df4510d6348305519353f840" translate="yes" xml:space="preserve">
          <source>contents.removeWorkSpace()</source>
          <target state="translated">contents.removeWorkSpace()</target>
        </trans-unit>
        <trans-unit id="ed2c20bd48ac72e47bc4a462729e6466619fbbc1" translate="yes" xml:space="preserve">
          <source>contents.replace()</source>
          <target state="translated">contents.replace()</target>
        </trans-unit>
        <trans-unit id="b9d32c5ed34524d834559dddb981e3ad8a0caed1" translate="yes" xml:space="preserve">
          <source>contents.replaceMisspelling()</source>
          <target state="translated">contents.replaceMisspelling()</target>
        </trans-unit>
        <trans-unit id="144079e827242a88ab63bdc86e1d8f400a9ef51a" translate="yes" xml:space="preserve">
          <source>contents.savePage()</source>
          <target state="translated">contents.savePage()</target>
        </trans-unit>
        <trans-unit id="bfb7889fde9602381ba7111a849da8784f48e5ee" translate="yes" xml:space="preserve">
          <source>contents.savePage(fullPath, saveType, callback)</source>
          <target state="translated">contents.savePage(fullPath,saveType,callback)</target>
        </trans-unit>
        <trans-unit id="6242a8a217cf45a1610040fab88aba413aa8840a" translate="yes" xml:space="preserve">
          <source>contents.selectAll()</source>
          <target state="translated">contents.selectAll()</target>
        </trans-unit>
        <trans-unit id="4184e23683c85a27be747fb8449781d29ec0a347" translate="yes" xml:space="preserve">
          <source>contents.send()</source>
          <target state="translated">contents.send()</target>
        </trans-unit>
        <trans-unit id="2f6085f458745d9abb446eb7ac62d2ac1d07d223" translate="yes" xml:space="preserve">
          <source>contents.sendInputEvent()</source>
          <target state="translated">contents.sendInputEvent()</target>
        </trans-unit>
        <trans-unit id="74bc278a47db1a7eb85bb0c508e761ba030ead6c" translate="yes" xml:space="preserve">
          <source>contents.session</source>
          <target state="translated">contents.session</target>
        </trans-unit>
        <trans-unit id="8091443ce7241e2c63a984cae62b84fc0a1cfbe2" translate="yes" xml:space="preserve">
          <source>contents.setAudioMuted()</source>
          <target state="translated">contents.setAudioMuted()</target>
        </trans-unit>
        <trans-unit id="f1675f29345099c17aef4d65d49e8fb87e705825" translate="yes" xml:space="preserve">
          <source>contents.setDevToolsWebContents()</source>
          <target state="translated">contents.setDevToolsWebContents()</target>
        </trans-unit>
        <trans-unit id="e0e78f520cb9f3243d69e7d031e45a2f5c048fb5" translate="yes" xml:space="preserve">
          <source>contents.setFrameRate()</source>
          <target state="translated">contents.setFrameRate()</target>
        </trans-unit>
        <trans-unit id="0cbf69bf3f32cd489c33b6e51f857cda9f577c04" translate="yes" xml:space="preserve">
          <source>contents.setIgnoreMenuShortcuts()</source>
          <target state="translated">contents.setIgnoreMenuShortcuts()</target>
        </trans-unit>
        <trans-unit id="a7826b430234c7ad974fe01e6d501e7469622d1d" translate="yes" xml:space="preserve">
          <source>contents.setLayoutZoomLevelLimits()</source>
          <target state="translated">contents.setLayoutZoomLevelLimits()</target>
        </trans-unit>
        <trans-unit id="5aae337e979ba637399bc7e42569fc8449614869" translate="yes" xml:space="preserve">
          <source>contents.setSize()</source>
          <target state="translated">contents.setSize()</target>
        </trans-unit>
        <trans-unit id="46af4d461d1c3eeeb40b04c95f68ba68dc7d29ec" translate="yes" xml:space="preserve">
          <source>contents.setUserAgent()</source>
          <target state="translated">contents.setUserAgent()</target>
        </trans-unit>
        <trans-unit id="e8ef7559520e48362d1aa4629dc894c311f7214f" translate="yes" xml:space="preserve">
          <source>contents.setVisualZoomLevelLimits()</source>
          <target state="translated">contents.setVisualZoomLevelLimits()</target>
        </trans-unit>
        <trans-unit id="2e5f323b032427ea4b89d40720f8f3004f824232" translate="yes" xml:space="preserve">
          <source>contents.setWebRTCIPHandlingPolicy()</source>
          <target state="translated">contents.setWebRTCIPHandlingPolicy()</target>
        </trans-unit>
        <trans-unit id="575bb2b721f15802546487ef2bb8952ee31cfe24" translate="yes" xml:space="preserve">
          <source>contents.setZoomFactor()</source>
          <target state="translated">contents.setZoomFactor()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
