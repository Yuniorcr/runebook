<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="codeigniter">
    <body>
      <group id="codeigniter">
        <trans-unit id="a2fe7e4bc7a336b577fec6681dc9d70ef670ac97" translate="yes" xml:space="preserve">
          <source>If you need to load multiple config files normally they will be merged into one master config array. Name collisions can occur, however, if you have identically named array indexes in different config files. To avoid collisions you can set the second parameter to TRUE and each config file will be stored in an array index corresponding to the name of the config file. Example:</source>
          <target state="translated">複数のコンフィグファイルをロードする必要がある場合、通常はそれらのコンフィグファイルは一つのマスターコンフィグ配列にマージされます。しかし、異なるコンフィグファイルの中に同じ名前の配列インデックスを持っていると、名前の衝突が起こる可能性があります。衝突を避けるには、2 番目のパラメータを TRUE に設定すると、それぞれのコンフィグファイルがそのコンフィグファイルの名前に対応する配列インデックスに格納されるようになります。例を挙げてみましょう。</target>
        </trans-unit>
        <trans-unit id="eb9a15f65bdf6c17b3557f92901e9f6d821f21cc" translate="yes" xml:space="preserve">
          <source>If you need to manually delete the cache, you can use the &lt;code&gt;delete_cache()&lt;/code&gt; method:</source>
          <target state="translated">キャッシュを手動で削除する必要がある場合は、 &lt;code&gt;delete_cache()&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="9bd304b504999441a98367ba334731f4df601494" translate="yes" xml:space="preserve">
          <source>If you need to output errors, you should use the appropriately named &lt;code&gt;error()&lt;/code&gt; method. This writes light-red text to STDERR, instead of STDOUT, like &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;color()&lt;/code&gt; do. This can be useful if you have scripts watching for errors so they don&amp;rsquo;t have to sift through all of the information, only the actual error messages. You use it exactly as you would the &lt;code&gt;write()&lt;/code&gt; method:</source>
          <target state="translated">If you need to output errors, you should use the appropriately named &lt;code&gt;error()&lt;/code&gt; method. This writes light-red text to STDERR, instead of STDOUT, like &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;color()&lt;/code&gt; do. This can be useful if you have scripts watching for errors so they don&amp;rsquo;t have to sift through all of the information, only the actual error messages. You use it exactly as you would the &lt;code&gt;write()&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="b987361641408e1bb22f8da61414fa3b652cfb07" translate="yes" xml:space="preserve">
          <source>If you need to provide links from two different result sets, you can pass group names to most of the pagination methods to keep the data separate:</source>
          <target state="translated">2つの異なる結果セットからのリンクを提供する必要がある場合は、データを分離しておくために、ほとんどのページ分割メソッドにグループ名を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="818e087ce7bd599c36792af4d338e11b57e30f0a" translate="yes" xml:space="preserve">
          <source>If you need to remove a tempdata value before it expires, you can directly unset it from the &lt;code&gt;$_SESSION&lt;/code&gt; array:</source>
          <target state="translated">期限が切れる前にtempdata値を削除する必要がある場合は、 &lt;code&gt;$_SESSION&lt;/code&gt; 配列から直接設定解除できます。</target>
        </trans-unit>
        <trans-unit id="25c3f941e9a4f20ad9f0678712e1ebacf4cf1b1b" translate="yes" xml:space="preserve">
          <source>If you need to retrieve all error messages for failed fields, you can use the &lt;code&gt;getErrors()&lt;/code&gt; method:</source>
          <target state="translated">If you need to retrieve all error messages for failed fields, you can use the &lt;code&gt;getErrors()&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="6c2a1126f818590cb9db48cbb16882663cc3a09d" translate="yes" xml:space="preserve">
          <source>If you need to run the site on a host other than simply localhost, you&amp;rsquo;ll first need to add the host to your &lt;code&gt;hosts&lt;/code&gt; file. The exact location of the file varies in each of the main operating systems, though all unix-type systems (include OS X) will typically keep the file at &lt;strong&gt;/etc/hosts&lt;/strong&gt;.</source>
          <target state="translated">If you need to run the site on a host other than simply localhost, you&amp;rsquo;ll first need to add the host to your &lt;code&gt;hosts&lt;/code&gt; file. The exact location of the file varies in each of the main operating systems, though all unix-type systems (include OS X) will typically keep the file at &lt;strong&gt;/etc/hosts&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="43c6be9e61a57705dcdda2e66a6cdd1e8eb919b1" translate="yes" xml:space="preserve">
          <source>If you need to send the client an error response you will use the following:</source>
          <target state="translated">クライアントにエラー応答を送信する必要がある場合は、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="8cbd9ccea4d21409bbe32974505e2711b566c026" translate="yes" xml:space="preserve">
          <source>If you need to set a custom error message for a particular field on some particular rule, use the set_rules() method:</source>
          <target state="translated">特定のルール上の特定のフィールドに対してカスタムエラーメッセージを設定する必要がある場合は、 set_rules()メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="4bd2d1ee580d911bcb3c318fd4dc1e4801b66037" translate="yes" xml:space="preserve">
          <source>If you need to specify which page of results to return you can specify the page as the 3rd argument. This can be handy when you have a different manner than the default $_GET varibable to control which page to show.</source>
          <target state="translated">どのページの結果を返すかを指定する必要がある場合は、第三引数にページを指定することができます。これは、デフォルトの $_GET 可変変数とは異なる方法でどのページを表示するかを制御したい場合に便利です。</target>
        </trans-unit>
        <trans-unit id="8065909a2646f75545f04191141bd71a408580f6" translate="yes" xml:space="preserve">
          <source>If you need to truncate to an exact number of characters please see the &lt;a href=&quot;#ellipsize&quot;&gt;&lt;code&gt;ellipsize()&lt;/code&gt;&lt;/a&gt; function below.</source>
          <target state="translated">正確な文字数に切り詰める必要がある場合は、以下の&lt;a href=&quot;#ellipsize&quot;&gt; &lt;code&gt;ellipsize()&lt;/code&gt; &lt;/a&gt;関数を参照してください。</target>
        </trans-unit>
        <trans-unit id="55f9364bad10ef565253ecc04fc18e3350b3e6f7" translate="yes" xml:space="preserve">
          <source>If you need to truncate to an exact number of characters, please see the &lt;a href=&quot;#ellipsize&quot;&gt;&lt;code&gt;ellipsize()&lt;/code&gt;&lt;/a&gt; function below.</source>
          <target state="translated">If you need to truncate to an exact number of characters, please see the &lt;a href=&quot;#ellipsize&quot;&gt; &lt;code&gt;ellipsize()&lt;/code&gt; &lt;/a&gt; function below.</target>
        </trans-unit>
        <trans-unit id="42b659af2fa5348f709202795a6fb189673bd778" translate="yes" xml:space="preserve">
          <source>If you need to use a buffer string instead of a real - physical - file you can use the first parameter as buffer, the third parameter as file name and the fourth parameter as mime-type:</source>
          <target state="translated">実際の物理ファイルの代わりにバッファ文字列を使用する必要がある場合は、最初のパラメータを buffer、3番目のパラメータを file name、4番目のパラメータを mime-type として使用することができます。</target>
        </trans-unit>
        <trans-unit id="de8010c97c21d1bed2936b46ab16bdcaa42cbd34" translate="yes" xml:space="preserve">
          <source>If you need to use a constructor in your class make sure you extend the parent constructor:</source>
          <target state="translated">クラスでコンストラクタを使用する必要がある場合は、必ず親コンストラクタを拡張してください。</target>
        </trans-unit>
        <trans-unit id="b3d97a61ed5c3774a0b6335906be0b23af5666ab" translate="yes" xml:space="preserve">
          <source>If you no longer wish to cache a file you can remove the caching tag and it will no longer be refreshed when it expires.</source>
          <target state="translated">ファイルをキャッシュしたくない場合は、キャッシュタグを削除することができます。</target>
        </trans-unit>
        <trans-unit id="134e205616bb69ff5165fc3c5167da800afda5dd" translate="yes" xml:space="preserve">
          <source>If you now browse to your site without specifying any URI segments you&amp;rsquo;ll see the &amp;ldquo;Hello World&amp;rdquo; message.</source>
          <target state="translated">If you now browse to your site without specifying any URI segments you&amp;rsquo;ll see the &amp;ldquo;Hello World&amp;rdquo; message.</target>
        </trans-unit>
        <trans-unit id="f8212d0501e303cf1f0f2b77f7cbbad3a9075738" translate="yes" xml:space="preserve">
          <source>If you omit the &amp;ldquo;project-root&amp;rdquo; argument, the command will create an &amp;ldquo;appstarter&amp;rdquo; folder, which can be renamed as appropriate.</source>
          <target state="translated">If you omit the &amp;ldquo;project-root&amp;rdquo; argument, the command will create an &amp;ldquo;appstarter&amp;rdquo; folder, which can be renamed as appropriate.</target>
        </trans-unit>
        <trans-unit id="5d3a2c859a22038553651bd7475bb374269e7898" translate="yes" xml:space="preserve">
          <source>If you only need a single header, you can pass the name into the &lt;code&gt;getHeader()&lt;/code&gt; method. This will grab the specified header object in a case-insensitive manner if it exists. If not, then it will return &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">If you only need a single header, you can pass the name into the &lt;code&gt;getHeader()&lt;/code&gt; method. This will grab the specified header object in a case-insensitive manner if it exists. If not, then it will return &lt;code&gt;null&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cca1ffa61ba214cf4b0786ad745eaa5fc614ebc2" translate="yes" xml:space="preserve">
          <source>If you only want to add some extra functionality to your sessions, just extend the base Session class, which is a lot more easier. Read the &lt;a href=&quot;../general/creating_libraries&quot;&gt;Creating Libraries&lt;/a&gt; article to learn how to do that.</source>
          <target state="translated">セッションにいくつかの追加機能を追加するだけの場合は、基本のSessionクラスを拡張するだけです。これははるかに簡単です。その方法については、&lt;a href=&quot;../general/creating_libraries&quot;&gt;ライブラリ&lt;/a&gt;の作成に関する記事をご覧ください。</target>
        </trans-unit>
        <trans-unit id="aaad7f7ef981c539b777c6ce32486cac0849ba54" translate="yes" xml:space="preserve">
          <source>If you pass parameters as the second argument, the &lt;code&gt;key&lt;/code&gt; element will be used as the starting key for this operation if &lt;code&gt;$params&lt;/code&gt; is an array; or the starting key may be passed as a string.</source>
          <target state="translated">If you pass parameters as the second argument, the &lt;code&gt;key&lt;/code&gt; element will be used as the starting key for this operation if &lt;code&gt;$params&lt;/code&gt; is an array; or the starting key may be passed as a string.</target>
        </trans-unit>
        <trans-unit id="2a448e1c47a9a4f8048b48e59da080f45c3216d5" translate="yes" xml:space="preserve">
          <source>If you pass the last parameter the labeled style error messages will be ignored.</source>
          <target state="translated">最後のパラメータを渡すと、ラベル付きスタイルエラーメッセージは無視されます。</target>
        </trans-unit>
        <trans-unit id="227e36e6a06b632b0d1fc05b662de82bf503a8cb" translate="yes" xml:space="preserve">
          <source>If you plan to add third party packages to your project, or want to keep CodeIgniter up to date easily, we recommend the Composer installation.</source>
          <target state="translated">プロジェクトにサードパーティのパッケージを追加する予定がある場合や、CodeIgniterを簡単に最新の状態に保ちたい場合は、Composerのインストールをお勧めします。</target>
        </trans-unit>
        <trans-unit id="515148d0aaf27a46b665cbeddee3a8f6ce8eacc4" translate="yes" xml:space="preserve">
          <source>If you prefer a simpler output, you can use the &lt;code&gt;simpleLinks()&lt;/code&gt; method, which only uses &amp;ldquo;Older&amp;rdquo; and &amp;ldquo;Newer&amp;rdquo; links, instead of the details pagination links:</source>
          <target state="translated">If you prefer a simpler output, you can use the &lt;code&gt;simpleLinks()&lt;/code&gt; method, which only uses &amp;ldquo;Older&amp;rdquo; and &amp;ldquo;Newer&amp;rdquo; links, instead of the details pagination links:</target>
        </trans-unit>
        <trans-unit id="08ac9b855cde329c7b5e8881e8cb7d7f7c7e1d6b" translate="yes" xml:space="preserve">
          <source>If you prefer not to set preferences using the above method, you can instead put them into a config file. Simply create a new file called image_lib.php, add the $config array in that file. Then save the file in &lt;em&gt;config/image_lib.php&lt;/em&gt; and it will be used automatically. You will NOT need to use the &lt;code&gt;$this-&amp;gt;image_lib-&amp;gt;initialize()&lt;/code&gt; method if you save your preferences in a config file.</source>
          <target state="translated">上記の方法を使用してプリファレンスを設定したくない場合は、代わりにそれらを構成ファイルに入れることができます。 image_lib.phpという新しいファイルを作成し、そのファイルに$ config配列を追加するだけです。次に、ファイルを&lt;em&gt;config / image_lib.phpに&lt;/em&gt;保存すると、自動的に使用されます。設定を設定ファイルに保存する場合、 &lt;code&gt;$this-&amp;gt;image_lib-&amp;gt;initialize()&lt;/code&gt; メソッドを使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="ffaf8a740c7e4d36c3e30e43f47dc40f2bdc0261" translate="yes" xml:space="preserve">
          <source>If you prefer not to set preferences using the above method, you can instead put them into a config file. Simply create a new file called pagination.php, add the &lt;code&gt;$config&lt;/code&gt; array in that file. Then save the file in &lt;em&gt;application/config/pagination.php&lt;/em&gt; and it will be used automatically. You will NOT need to use &lt;code&gt;$this-&amp;gt;pagination-&amp;gt;initialize()&lt;/code&gt; if you save your preferences in a config file.</source>
          <target state="translated">上記の方法を使用してプリファレンスを設定したくない場合は、代わりにそれらを構成ファイルに入れることができます。 pagination.phpという新しいファイルを作成し、そのファイルに &lt;code&gt;$config&lt;/code&gt; 配列を追加するだけです。次に、ファイルを&lt;em&gt;application / config / pagination.phpに&lt;/em&gt;保存すると、自動的に使用されます。設定を設定ファイルに保存する場合、 &lt;code&gt;$this-&amp;gt;pagination-&amp;gt;initialize()&lt;/code&gt; を使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="4d1c0b12173661150bbffd1f775fcc2758e4552b" translate="yes" xml:space="preserve">
          <source>If you prefer not to set preferences using the above method, you can instead put them into a config file. Simply create a new file called the email.php, add the $config array in that file. Then save the file at config/email.php and it will be used automatically. You will NOT need to use the &lt;code&gt;$this-&amp;gt;email-&amp;gt;initialize()&lt;/code&gt; method if you save your preferences in a config file.</source>
          <target state="translated">上記の方法を使用してプリファレンスを設定したくない場合は、代わりにそれらを構成ファイルに入れることができます。email.phpという新しいファイルを作成し、そのファイルに$ config配列を追加するだけです。次に、ファイルをconfig / email.phpに保存すると、自動的に使用されます。設定を設定ファイルに保存する場合、 &lt;code&gt;$this-&amp;gt;email-&amp;gt;initialize()&lt;/code&gt; メソッドを使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="7067e66bfed431e2a59e512b56d0c2c88ca8ab67" translate="yes" xml:space="preserve">
          <source>If you prefer not to set preferences using the above method, you can instead put them into a config file. Simply create a new file called the upload.php, add the $config array in that file. Then save the file in: &lt;strong&gt;config/upload.php&lt;/strong&gt; and it will be used automatically. You will NOT need to use the &lt;code&gt;$this-&amp;gt;upload-&amp;gt;initialize()&lt;/code&gt; method if you save your preferences in a config file.</source>
          <target state="translated">上記の方法を使用してプリファレンスを設定したくない場合は、代わりにそれらを構成ファイルに入れることができます。単にupload.phpという新しいファイルを作成し、そのファイルに$ config配列を追加します。次に、ファイルを&lt;strong&gt;config / upload.phpに&lt;/strong&gt;保存すると、自動的に使用されます。設定を設定ファイルに保存する場合、 &lt;code&gt;$this-&amp;gt;upload-&amp;gt;initialize()&lt;/code&gt; メソッドを使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="37cba1875f0173e216c78d2759e9a617bb7d1839" translate="yes" xml:space="preserve">
          <source>If you prefer not to set preferences using the above method, you can instead put them into the config file. Simply open the &lt;strong&gt;app/Config/Email.php&lt;/strong&gt; file, and set your configs in the Email properties. Then save the file and it will be used automatically. You will NOT need to use the &lt;code&gt;$email-&amp;gt;initialize()&lt;/code&gt; method if you set your preferences in the config file.</source>
          <target state="translated">If you prefer not to set preferences using the above method, you can instead put them into the config file. Simply open the &lt;strong&gt;app/Config/Email.php&lt;/strong&gt; file, and set your configs in the Email properties. Then save the file and it will be used automatically. You will NOT need to use the &lt;code&gt;$email-&amp;gt;initialize()&lt;/code&gt; method if you set your preferences in the config file.</target>
        </trans-unit>
        <trans-unit id="32128a0d9004d3e8bb1a9524d97c568e764ed91f" translate="yes" xml:space="preserve">
          <source>If you prefer to set your own class names you can pass its value to the third parameter:</source>
          <target state="translated">独自のクラス名を設定したい場合は、3番目のパラメータにその値を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="f42f51658746cc314f2ffcacfca6e9c57f703b0e" translate="yes" xml:space="preserve">
          <source>If you prefer to show an error message next to each form field, rather than as a list, you can use the &lt;a href=&quot;../helpers/form_helper#form_error&quot;&gt;&lt;code&gt;form_error()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">リストとしてではなく、各フォームフィールドの横にエラーメッセージを表示する場合は、&lt;a href=&quot;../helpers/form_helper#form_error&quot;&gt; &lt;code&gt;form_error()&lt;/code&gt; &lt;/a&gt;関数を使用できます。</target>
        </trans-unit>
        <trans-unit id="9732765708cae5a6297726693216026e6984e781" translate="yes" xml:space="preserve">
          <source>If you prefer you can store your FTP preferences in a config file. Simply create a new file called the ftp.php, add the $config array in that file. Then save the file at &lt;em&gt;application/config/ftp.php&lt;/em&gt; and it will be used automatically.</source>
          <target state="translated">必要に応じて、設定ファイルにFTP設定を保存できます。単にftp.phpという新しいファイルを作成し、そのファイルに$ config配列を追加します。次に、&lt;em&gt;application / config / ftp.phpに&lt;/em&gt;ファイルを保存すると、自動的に使用されます。</target>
        </trans-unit>
        <trans-unit id="ff4f9a9589d3266d08310895d4b53855a3641a6e" translate="yes" xml:space="preserve">
          <source>If you prefer you can use regular expressions to define your routing rules. Any valid regular expression is allowed, as are back-references.</source>
          <target state="translated">お好みであれば、正規表現を使用してルーティングルールを定義することができます。有効な正規表現を使用することができます。</target>
        </trans-unit>
        <trans-unit id="55f60ed7781d8c4a1ef15dba90147cc49b7322bf" translate="yes" xml:space="preserve">
          <source>If you prefer, you can put the unit test class in to strict mode, which will compare the data type as well as the value:</source>
          <target state="translated">お好みであれば、ユニットテストクラスを strict モードにして、値だけでなくデータ型も比較することもできます。</target>
        </trans-unit>
        <trans-unit id="ed23405e5a26d68c078569662245095af10f2037" translate="yes" xml:space="preserve">
          <source>If you prefer, you can set the cookie by passing data using individual parameters:</source>
          <target state="translated">お好みであれば、個々のパラメータを使用してデータを渡すことでクッキーを設定することができます。</target>
        </trans-unit>
        <trans-unit id="64eeb11e73af663f42452bf45da189042c7640f3" translate="yes" xml:space="preserve">
          <source>If you provide a DSN string and it is missing some valid settings (e.g. the database character set), which are present in the rest of the configuration fields, CodeIgniter will append them.</source>
          <target state="translated">DSN文字列を提供した場合、それが有効な設定(例えばデータベースの文字セット)を欠いていて、それが他の設定フィールドに存在する場合、CodeIgniterはそれを追加します。</target>
        </trans-unit>
        <trans-unit id="b522c503dd8efea9a36425c95fff4de2499e1aa0" translate="yes" xml:space="preserve">
          <source>If you provide a string substitution parameter when an array is expected, i.e. for a variable pair, the substitution is done for the opening variable pair tag, but the closing variable pair tag is not rendered properly:</source>
          <target state="translated">配列が期待されているときに文字列置換パラメータを指定した場合、つまり変数ペアの場合、置換は開始変数ペアタグに対して行われますが、終了変数ペアタグは適切にレンダリングされません。</target>
        </trans-unit>
        <trans-unit id="820b1ab2830e4c67ad66a56dfe302c8626ceef0a" translate="yes" xml:space="preserve">
          <source>If you rename the &lt;code&gt;Controllers&lt;/code&gt; directory, though, you will not be able to use the automatic method of routing to controllers, and will need to define all of your routes in the routes file.</source>
          <target state="translated">If you rename the &lt;code&gt;Controllers&lt;/code&gt; directory, though, you will not be able to use the automatic method of routing to controllers, and will need to define all of your routes in the routes file.</target>
        </trans-unit>
        <trans-unit id="38285c43a99c8051dd8f40bd5cbe90d0dc50b3ef" translate="yes" xml:space="preserve">
          <source>If you run the &lt;strong&gt;list&lt;/strong&gt; command, you will see the new command listed under its own &lt;code&gt;demo&lt;/code&gt; group. If you take a close look, you should see how this works fairly easily. The &lt;code&gt;$group&lt;/code&gt; property simply tells it how to organize this command with all of the other commands that exist, telling it what heading to list it under.</source>
          <target state="translated">If you run the &lt;strong&gt;list&lt;/strong&gt; command, you will see the new command listed under its own &lt;code&gt;demo&lt;/code&gt; group. If you take a close look, you should see how this works fairly easily. The &lt;code&gt;$group&lt;/code&gt; property simply tells it how to organize this command with all of the other commands that exist, telling it what heading to list it under.</target>
        </trans-unit>
        <trans-unit id="420a01bcb3dddf411370a78338f338d8d49ea249" translate="yes" xml:space="preserve">
          <source>If you set the parameter to TRUE any attachments will be cleared as well:</source>
          <target state="translated">このパラメータを TRUE に設定すると、すべての添付ファイルがクリアされます。</target>
        </trans-unit>
        <trans-unit id="47a4f82c9d24a5cbe290db0f4e7af53c1de1a667" translate="yes" xml:space="preserve">
          <source>If you set the second parameter to NULL and &lt;code&gt;$filename&lt;/code&gt; is an existing, readable file path, then its content will be read instead.</source>
          <target state="translated">2番目のパラメーターをNULLに設定し、 &lt;code&gt;$filename&lt;/code&gt; が既存の読み取り可能なファイルパスである場合、代わりにその内容が読み取られます。</target>
        </trans-unit>
        <trans-unit id="7fe98453131de91269c01dac282667ac1134b26c" translate="yes" xml:space="preserve">
          <source>If you set the third parameter to boolean TRUE, then the actual file MIME type (based on the filename extension) will be sent, so that if your browser has a handler for that type - it can use it.</source>
          <target state="translated">3 番目のパラメータを TRUE に設定すると、実際のファイル MIME タイプ (ファイル名の拡張子に基づく)が送信されます。</target>
        </trans-unit>
        <trans-unit id="c789c1f6c2e1238e3ed1dc61a1c15d5f60ea2080" translate="yes" xml:space="preserve">
          <source>If you set the value to &lt;code&gt;false&lt;/code&gt;, then it will not follow any redirects at all:</source>
          <target state="translated">If you set the value to &lt;code&gt;false&lt;/code&gt; , then it will not follow any redirects at all:</target>
        </trans-unit>
        <trans-unit id="28584ae787d3c9cd353cf23fc0d739433073d9ff" translate="yes" xml:space="preserve">
          <source>If you still have questions about the framework or your own CodeIgniter code, you can:</source>
          <target state="translated">フレームワークや自分のCodeIgniterのコードについてまだ質問がある場合は、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="b9d314bd31da4b94b15ab549e5d19fb3faf96301" translate="yes" xml:space="preserve">
          <source>If you store your array item in a language file that is not loaded automatically by CI, you&amp;rsquo;ll need to remember to load it in your controller using:</source>
          <target state="translated">CIによって自動的にロードされない言語ファイルに配列項目を保存する場合は、以下を使用してコントローラーにロードすることを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="bc97df695b8eeaae5246dabaf286c99452495314" translate="yes" xml:space="preserve">
          <source>If you submit the form you should simply see the form reload. That&amp;rsquo;s because you haven&amp;rsquo;t set up any validation rules yet.</source>
          <target state="translated">フォームを送信すると、フォームの再読み込みが表示されます。これは、まだ検証ルールを設定していないためです。</target>
        </trans-unit>
        <trans-unit id="48878380f484b23f471a4380ec8bc1aa5b4529c4" translate="yes" xml:space="preserve">
          <source>If you submitted something invalid, or perhaps missed a required item, the form is redisplayed containing your data along with an error message describing the problem.</source>
          <target state="translated">何か無効なものを送信した場合、または必要な項目を見逃した場合、フォームにはあなたのデータが再表示され、問題点を説明するエラーメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="f3b7cdb5dadd7ccefcd07fcf7dbb6f812f858990" translate="yes" xml:space="preserve">
          <source>If you use a &amp;lt;select&amp;gt; menu, this function permits you to display the menu item that was selected.</source>
          <target state="translated">&amp;lt;select&amp;gt;メニューを使用する場合、この関数を使用して、選択されたメニュー項目を表示できます。</target>
        </trans-unit>
        <trans-unit id="652f43665be11137df3e7fe1fd1c0e5c486d4f05" translate="yes" xml:space="preserve">
          <source>If you use an array as the name of a form field, you must supply it as an array to the function. Example:</source>
          <target state="translated">フォームフィールドの名前として配列を使用する場合は、それを配列として関数に与えなければなりません。例</target>
        </trans-unit>
        <trans-unit id="91cd0499b54e75ec773a0bbf59d1dbaedfe650a7" translate="yes" xml:space="preserve">
          <source>If you use an object, the class variables will be turned into array elements.</source>
          <target state="translated">オブジェクトを使用した場合、クラス変数は配列要素に変わります。</target>
        </trans-unit>
        <trans-unit id="967fb1e41e75ad60779208d940bde78b46d0e730" translate="yes" xml:space="preserve">
          <source>If you use any of the form helper functions listed in this page the form values will be prepped automatically, so there is no need to call this function. Use it only if you are creating your own form elements.</source>
          <target state="translated">このページに記載されているフォームヘルパー関数を使用する場合、フォームの値は自動的に準備されるので、この関数を呼び出す必要はありません。独自のフォーム要素を作成する場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="8eda46119ec43813d676aeca28c7ce6aad335d8c" translate="yes" xml:space="preserve">
          <source>If you use any of the form helper functions listed on this page, and you pass values as an associative array, the form values will be automatically escaped, so there is no need to call this function. Use it only if you are creating your own form elements, which you would pass as strings.</source>
          <target state="translated">このページに記載されているフォームヘルパー関数を使用していて、連想配列として値を渡した場合は、 フォームの値は自動的にエスケープされますので、この関数を呼び出す必要はありません。独自のフォーム要素を作成している場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="35afdbf06a196d99eed07b5a412e447072b7f1f1" translate="yes" xml:space="preserve">
          <source>If you use any of the form helper functions listed on this page, the form values will be automatically escaped, so there is no need to call this function. Use it only if you are creating your own form elements.</source>
          <target state="translated">このページに記載されているフォームヘルパー関数を使用した場合、フォームの値は自動的にエスケープされますので、この関数を呼び出す必要はありません。独自のフォーム要素を作成する場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="4667fcbdea6ff8448316f8c95a78055fed83a8f3" translate="yes" xml:space="preserve">
          <source>If you use back-references you must use the dollar syntax rather than the double backslash syntax.</source>
          <target state="translated">後方参照を使用する場合は、ダブルバックスラッシュ構文ではなくドル構文を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7ac2d0293267d9f069f973bef5a5464d42f1add0" translate="yes" xml:space="preserve">
          <source>If you use data types other than strings, or if you have several different data types, you will place each parameter into its own array, with the data type in the second position:</source>
          <target state="translated">文字列以外のデータ型を使用している場合や、複数の異なるデータ型を使用している場合は、データ型を2番目の位置にして、それぞれのパラメータを独自の配列に配置します。</target>
        </trans-unit>
        <trans-unit id="5b892bdcedb48c694bba2ac902882e0b3c747f6e" translate="yes" xml:space="preserve">
          <source>If you use dynamic queries that change based on information in your URI (when using pagination, for example), each instance of the query will produce its own cache file. It&amp;rsquo;s possible, therefore, to end up with many times more cache files than you have queries.</source>
          <target state="translated">URIの情報に基づいて変化する動的クエリを使用する場合（ページネーションを使用する場合など）、クエリの各インスタンスは独自のキャッシュファイルを生成します。したがって、クエリよりも何倍も多くのキャッシュファイルが作成される可能性があります。</target>
        </trans-unit>
        <trans-unit id="6bec09a5c11399ce7442803a10c3045ac7a3bc31" translate="yes" xml:space="preserve">
          <source>If you use multiple function called they will be assembled properly based on whether you are doing an insert or an update:</source>
          <target state="translated">複数の関数を使用している場合は、挿入か更新かに基づいて適切に組み立てることができます。</target>
        </trans-unit>
        <trans-unit id="03545ad795bed87b760e275cdfc2c43e74441099" translate="yes" xml:space="preserve">
          <source>If you use multiple function calls they will be chained together with AND between them:</source>
          <target state="translated">複数の関数呼び出しを使用する場合は、それらはそれらの間の AND で連結されます。</target>
        </trans-unit>
        <trans-unit id="15eb4a501ff63693881aa28ece82b9d2ebd2116e" translate="yes" xml:space="preserve">
          <source>If you use multiple method calls they will be chained together with AND between them:</source>
          <target state="translated">複数のメソッド呼び出しを使用する場合、それらはそれらの間の AND で連結されます。</target>
        </trans-unit>
        <trans-unit id="f7574d6e2ddd3b92d121ce18b2a4b4c4aaf9bfad" translate="yes" xml:space="preserve">
          <source>If you use the &lt;a href=&quot;../helpers/form_helper&quot;&gt;form helper&lt;/a&gt;, then &lt;code&gt;form_open()&lt;/code&gt; will automatically insert a hidden csrf field in your forms. If not, then you can use &lt;code&gt;get_csrf_token_name()&lt;/code&gt; and &lt;code&gt;get_csrf_hash()&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../helpers/form_helper&quot;&gt;フォームヘルパー&lt;/a&gt;を使用する場合、 &lt;code&gt;form_open()&lt;/code&gt; はフォームに非表示のcsrfフィールドを自動的に挿入します。そうでない場合は、 &lt;code&gt;get_csrf_token_name()&lt;/code&gt; および &lt;code&gt;get_csrf_hash()&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="94a1c58aabe259e497b4e34f69962dbe43ba4aff" translate="yes" xml:space="preserve">
          <source>If you use the &lt;a href=&quot;../helpers/form_helper&quot;&gt;form helper&lt;/a&gt;, then &lt;code&gt;form_open()&lt;/code&gt; will automatically insert a hidden csrf field in your forms. If not, then you can use the always available &lt;code&gt;csrf_token()&lt;/code&gt; and &lt;code&gt;csrf_hash()&lt;/code&gt; functions</source>
          <target state="translated">If you use the &lt;a href=&quot;../helpers/form_helper&quot;&gt;form helper&lt;/a&gt;, then &lt;code&gt;form_open()&lt;/code&gt; will automatically insert a hidden csrf field in your forms. If not, then you can use the always available &lt;code&gt;csrf_token()&lt;/code&gt; and &lt;code&gt;csrf_hash()&lt;/code&gt; functions</target>
        </trans-unit>
        <trans-unit id="eb6297f2fae2a879e7d5f69c4bf3dd6e23be452d" translate="yes" xml:space="preserve">
          <source>If you use this feature you must set up your class constructor to expect data:</source>
          <target state="translated">この機能を使用する場合は、データを期待するクラスのコンストラクタを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="258c70f3dbffeabcc308dea5aa28e8c7d703dc86" translate="yes" xml:space="preserve">
          <source>If you used an array notation for the name, the input would look something like:</source>
          <target state="translated">名前に配列表記を使用した場合、入力は次のようになります。</target>
        </trans-unit>
        <trans-unit id="9be5b9e0fe3003791b329054d76c59106d2d15cc" translate="yes" xml:space="preserve">
          <source>If you used the &amp;ldquo;&amp;ndash;no-dev&amp;rdquo; option when you created the project, it would be appropriate to do so here too, i.e. &lt;code&gt;composer update --no-dev&lt;/code&gt;.</source>
          <target state="translated">If you used the &amp;ldquo;&amp;ndash;no-dev&amp;rdquo; option when you created the project, it would be appropriate to do so here too, i.e. &lt;code&gt;composer update --no-dev&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c15a193e2193feb77ccb6cbebe4f4ac7cd2923e2" translate="yes" xml:space="preserve">
          <source>If you visit your site using the URL you did earlier you should see your new view. The URL was similar to this:</source>
          <target state="translated">先ほどのURLを使ってサイトにアクセスすると、新しいビューが表示されるはずです。URLはこんな感じでした。</target>
        </trans-unit>
        <trans-unit id="4d36b0a3bcf698d48ce2b9991a1a3111eccc60a3" translate="yes" xml:space="preserve">
          <source>If you want a specific row returned you can submit the row number as a digit in the first parameter:</source>
          <target state="translated">特定の行を返したい場合は、最初のパラメータに行番号を数字で指定します。</target>
        </trans-unit>
        <trans-unit id="734f90c33fef947cc599e343a48a5440046b3799" translate="yes" xml:space="preserve">
          <source>If you want to add an extra attribute to be added to every link rendered by the pagination class, you can set them as key/value pairs in the &amp;ldquo;attributes&amp;rdquo; config:</source>
          <target state="translated">ページネーションクラスによってレンダリングされるすべてのリンクに追加する追加の属性を追加する場合は、「属性」構成でキー/値のペアとして設定できます。</target>
        </trans-unit>
        <trans-unit id="476f1b6bba495a48ca62d82695c6bcc52950a0fe" translate="yes" xml:space="preserve">
          <source>If you want to add session data one value at a time, &lt;code&gt;set()&lt;/code&gt; also supports this syntax:</source>
          <target state="translated">If you want to add session data one value at a time, &lt;code&gt;set()&lt;/code&gt; also supports this syntax:</target>
        </trans-unit>
        <trans-unit id="ff5edd8b65e8ad536889f906c728cf96637147b9" translate="yes" xml:space="preserve">
          <source>If you want to add userdata one value at a time, &lt;code&gt;set_userdata()&lt;/code&gt; also supports this syntax:</source>
          <target state="translated">userdataの値を1つずつ追加する場合は、 &lt;code&gt;set_userdata()&lt;/code&gt; もこの構文をサポートします。</target>
        </trans-unit>
        <trans-unit id="659b631da8122b7d2788d01a6d37b58758732551" translate="yes" xml:space="preserve">
          <source>If you want to benchmark anything within your controller functions you must set your own start/end points.</source>
          <target state="translated">コントローラの機能の中で何かをベンチマークしたい場合は、独自のスタート/エンドポイントを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="80e860e734d96f9bfb0815518a27a78affa6f4b8" translate="yes" xml:space="preserve">
          <source>If you want to control where the wildcard (%) is placed, you can use an optional third argument. Your options are &amp;lsquo;before&amp;rsquo;, &amp;lsquo;after&amp;rsquo; and &amp;lsquo;both&amp;rsquo; (which is the default).</source>
          <target state="translated">ワイルドカード（％）の配置場所を制御する場合は、オプションの3番目の引数を使用できます。オプションは「前」、「後」、「両方」（デフォルト）です。</target>
        </trans-unit>
        <trans-unit id="7d54a2d3a13881810cf3dc63da813e25fff99e7a" translate="yes" xml:space="preserve">
          <source>If you want to create hidden input fields with extra attributes:</source>
          <target state="translated">余分な属性を持つ非表示の入力フィールドを作成したい場合。</target>
        </trans-unit>
        <trans-unit id="a0dcfb199d823e832d5eb07c5269a001e2afad32" translate="yes" xml:space="preserve">
          <source>If you want to delete all data from a table, you can use the truncate() function, or emptyTable().</source>
          <target state="translated">テーブルからすべてのデータを削除したい場合は、truncate()関数やemptyTable()を使用することができます。</target>
        </trans-unit>
        <trans-unit id="a399a70dd5a4c4eeea8ac23905f8f36b3f812470" translate="yes" xml:space="preserve">
          <source>If you want to delete all data from a table, you can use the truncate() function, or empty_table().</source>
          <target state="translated">テーブルからすべてのデータを削除したい場合は、truncate()関数やempty_table()を使用することができます。</target>
        </trans-unit>
        <trans-unit id="097a3aaa88de4581175345c032e0500ef40e865e" translate="yes" xml:space="preserve">
          <source>If you want to download an existing file from your server you&amp;rsquo;ll need to do the following:</source>
          <target state="translated">サーバーから既存のファイルをダウンロードする場合は、次の手順を実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="d8316fa6d7b91d37d91153a67bb8640df7a285bc" translate="yes" xml:space="preserve">
          <source>If you want to download an existing file from your server you&amp;rsquo;ll need to pass &lt;code&gt;null&lt;/code&gt; explicitly for the second parameter:</source>
          <target state="translated">サーバーから既存のファイルをダウンロードする場合は、2番目のパラメーターに &lt;code&gt;null&lt;/code&gt; を明示的に渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="73fcb063d3ffae27a29cc91996403ee156cde23d" translate="yes" xml:space="preserve">
          <source>If you want to experiment with this feature (on your own risk), simply separate the multiple server paths with commas:</source>
          <target state="translated">この機能を試してみたい場合は(自己責任で)、複数のサーバーパスをカンマで区切るだけです。</target>
        </trans-unit>
        <trans-unit id="0104a304532aedb4f22dad1cd34a2e3b5e77b502" translate="yes" xml:space="preserve">
          <source>If you want to filter HTML attribute values, use &lt;a href=&quot;../general/common_functions#html_escape&quot;&gt;&lt;code&gt;html_escape()&lt;/code&gt;&lt;/a&gt; instead!</source>
          <target state="translated">HTML属性値をフィルタリングする場合は、代わりに&lt;a href=&quot;../general/common_functions#html_escape&quot;&gt; &lt;code&gt;html_escape()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="7ad24c0ff09ef8edcb7747dd1fda78ec189cedef" translate="yes" xml:space="preserve">
          <source>If you want to log an Exception or an Error, you can use the key of &amp;lsquo;exception&amp;rsquo;, and the value being the Exception or Error itself. A string will be generated from that object containing the error message, the file name and line number. You must still provide the exception placeholder in the message:</source>
          <target state="translated">例外またはエラーをログに記録する場合は、「exception」のキーを使用でき、値は例外またはエラー自体です。そのオブジェクトから、エラーメッセージ、ファイル名、行番号を含む文字列が生成されます。メッセージに例外プレースホルダーを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="456308679920034ef56383dd58cf5c7b46e7fe57" translate="yes" xml:space="preserve">
          <source>If you want to mark multiple items as flashdata, simply pass the keys as an array:</source>
          <target state="translated">複数の項目をフラッシュデータとしてマークしたい場合は、キーを配列として渡すだけです。</target>
        </trans-unit>
        <trans-unit id="cf4bc79725d64d9aa5e23ec13a30f72b0387d7d3" translate="yes" xml:space="preserve">
          <source>If you want to retrieve all of the existing userdata, you can simply omit the item key (magic getter only works for properties):</source>
          <target state="translated">既存のuserdataをすべて取得したい場合は、単にアイテムキーを省略することができます(マジックゲッターはプロパティに対してのみ動作します)。</target>
        </trans-unit>
        <trans-unit id="1713813f3663ee9e1b2ce42d2a6e1f678136a65c" translate="yes" xml:space="preserve">
          <source>If you want to retrieve all of the existing userdata, you can simply omit the item key (magic getter only works for single property values):</source>
          <target state="translated">既存のuserdataをすべて取得したい場合は、単にアイテムキーを省略することができます(マジックゲッターは単一のプロパティ値に対してのみ動作します)。</target>
        </trans-unit>
        <trans-unit id="c766def0705d9c4685396ee6cf736878917fae9e" translate="yes" xml:space="preserve">
          <source>If you want to support multiple languages in your application, you would provide folders inside your &lt;strong&gt;application/language/&lt;/strong&gt; directory for each of them, and you would specify the default language in your &lt;strong&gt;application/config/config.php&lt;/strong&gt;.</source>
          <target state="translated">アプリケーションで複数の言語をサポートする場合は、&lt;strong&gt;application / language /&lt;/strong&gt;ディレクトリー内にそれぞれのフォルダーを提供し、&lt;strong&gt;application / config / config.phpで&lt;/strong&gt;デフォルト言語を指定します。</target>
        </trans-unit>
        <trans-unit id="b2531f59a448901f27d5929d43ce6a93e1bf1389" translate="yes" xml:space="preserve">
          <source>If you want to take advantage of the system message translations, they can be added to your project in a similar fashion.</source>
          <target state="translated">システムメッセージの翻訳を利用したい場合は、同様の方法でプロジェクトに追加することができます。</target>
        </trans-unit>
        <trans-unit id="98aabac874b29add34d58f344fb1beccfb53170e" translate="yes" xml:space="preserve">
          <source>If you want to use the pagination structure where prev and next will be links to the previous and next pages based on the current page, just replace the &lt;code&gt;getPrevious()&lt;/code&gt; and &lt;code&gt;getNext()&lt;/code&gt; methods with &lt;code&gt;getPreviousPage()&lt;/code&gt; and &lt;code&gt;getNextPage()&lt;/code&gt;, and the methods &lt;code&gt;hasPrevious()&lt;/code&gt; and &lt;code&gt;hasNext()&lt;/code&gt; by &lt;code&gt;hasPreviousPage()&lt;/code&gt; and &lt;code&gt;hasNextPage()&lt;/code&gt; respectively.</source>
          <target state="translated">prevとnextが現在のページに基づいて前のページと次のページにリンクするページネーション構造を使用する場合は、 &lt;code&gt;getPrevious()&lt;/code&gt; &lt;code&gt;getNext()&lt;/code&gt; メソッドとgetNext（）メソッドを &lt;code&gt;getPreviousPage()&lt;/code&gt; と &lt;code&gt;getNextPage()&lt;/code&gt; 、およびメソッドに置き換えるだけです。 &lt;code&gt;hasPrevious()&lt;/code&gt; と &lt;code&gt;hasNext()&lt;/code&gt; よる &lt;code&gt;hasPreviousPage()&lt;/code&gt; と &lt;code&gt;hasNextPage()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4117f2b10d548375d07dd322bc5bb59e1a5fb6bf" translate="yes" xml:space="preserve">
          <source>If you want to utilize the PUT, DELETE, PATCH or other exotic request methods, they can only be accessed via a special input stream, that can only be read once. This isn&amp;rsquo;t as easy as just reading from e.g. the &lt;code&gt;$_POST&lt;/code&gt; array, because it will always exist and you can try and access multiple variables without caring that you might only have one shot at all of the POST data.</source>
          <target state="translated">PUT、DELETE、PATCH、またはその他のエキゾチックなリクエストメソッドを利用する場合、これらのメソッドには、一度しか読み取ることができない特別な入力ストリームを介してのみアクセスできます。これは、たとえば &lt;code&gt;$_POST&lt;/code&gt; 配列から読み取るだけでは簡単ではありません。これは常に存在し、すべてのPOSTデータで1ショットしかないことを気にせずに複数の変数にアクセスして試すことができるためです。</target>
        </trans-unit>
        <trans-unit id="a7820149ebe1144da192b3e6ad99f607a81093b8" translate="yes" xml:space="preserve">
          <source>If you want to validate more than one array during a single execution, then you should call the &lt;code&gt;reset_validation()&lt;/code&gt; method before setting up rules and validating the new array.</source>
          <target state="translated">1回の実行で複数の配列を検証する場合は、ルールを設定して新しい配列を検証する前に、 &lt;code&gt;reset_validation()&lt;/code&gt; メソッドを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="f2eb9e437baeb226733e2227e9c91eb482bd1652" translate="yes" xml:space="preserve">
          <source>If you want to verify that a session value exists, simply check with &lt;code&gt;isset()&lt;/code&gt;:</source>
          <target state="translated">セッション値が存在することを確認したい場合は、単に &lt;code&gt;isset()&lt;/code&gt; で確認してください：</target>
        </trans-unit>
        <trans-unit id="dfcc05b2163d2472b751d7245b790c06b473d273" translate="yes" xml:space="preserve">
          <source>If you want your benchmark data to be available to the &lt;a href=&quot;../general/profiling&quot;&gt;Profiler&lt;/a&gt; all of your marked points must be set up in pairs, and each mark point name must end with _start and _end. Each pair of points must otherwise be named identically. Example:</source>
          <target state="translated">&lt;a href=&quot;../general/profiling&quot;&gt;プロファイラーで&lt;/a&gt;ベンチマークデータを利用できるようにする場合は、すべてのマークポイントをペアで設定し、各マークポイント名の末尾を_startおよび_endにする必要があります。それ以外の点の各ペアは、同じ名前にする必要があります。例：</target>
        </trans-unit>
        <trans-unit id="625dc3d1c6dea79490c75c4578a8c816555a13d6" translate="yes" xml:space="preserve">
          <source>If you wanted to not list the specific pages (for example, you only want &amp;ldquo;next&amp;rdquo; and &amp;ldquo;previous&amp;rdquo; links), you can suppress their rendering by adding:</source>
          <target state="translated">特定のページをリストしない場合（たとえば、「次へ」と「前へ」のリンクのみが必要な場合）、次の行を追加することで、それらのレンダリングを抑制できます。</target>
        </trans-unit>
        <trans-unit id="f3d952c676bda25724c3273ae9a9da9e109271ff" translate="yes" xml:space="preserve">
          <source>If you will be running your site using a web server (e.g. Apache or Nginx), you will need to modify the permissions for the &lt;code&gt;writable&lt;/code&gt; folder inside your project, so that it is writable by the user or account used by your web server.</source>
          <target state="translated">Webサーバー（ApacheやNginxなど）を使用してサイトを実行する場合は、プロジェクト内の &lt;code&gt;writable&lt;/code&gt; フォルダーのアクセス許可を変更して、Webサーバーで使用されるユーザーまたはアカウントで書き込み可能にする必要があります。</target>
        </trans-unit>
        <trans-unit id="237ff9bf8868e233ad722bd9292b16e07046210e" translate="yes" xml:space="preserve">
          <source>If you wish to change that however, you need to use the &lt;code&gt;initialize()&lt;/code&gt; method. It accepts an associative array of parameters, all of which are optional:</source>
          <target state="translated">ただし、変更したい場合は、 &lt;code&gt;initialize()&lt;/code&gt; メソッドを使用する必要があります。パラメータの連想配列を受け入れます。これらはすべてオプションです。</target>
        </trans-unit>
        <trans-unit id="a1019555098b0ae99d7362f12c90350b94b95381" translate="yes" xml:space="preserve">
          <source>If you wish to increase security by hiding the location of your CodeIgniter files you can rename the system and application folders to something more private. If you do rename them, you must open your main &lt;em&gt;index.php&lt;/em&gt; file and set the &lt;code&gt;$system_path&lt;/code&gt; and &lt;code&gt;$application_folder&lt;/code&gt; variables at the top of the file with the new name you&amp;rsquo;ve chosen.</source>
          <target state="translated">CodeIgniterファイルの場所を非表示にしてセキュリティを強化したい場合は、システムフォルダーとアプリケーションフォルダーの名前をよりプライベートな名前に変更できます。それらの名前を変更する場合は、メインの&lt;em&gt;index.php&lt;/em&gt;ファイルを開き、ファイルの上部にある &lt;code&gt;$system_path&lt;/code&gt; および &lt;code&gt;$application_folder&lt;/code&gt; 変数を、選択した新しい名前で設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="7e38d84240454ae13c1f3b7d004519c548aae94a" translate="yes" xml:space="preserve">
          <source>If you wish to use an associative array in your method parameters you will need to use a struct datatype:</source>
          <target state="translated">メソッドのパラメータで連想配列を使用したい場合は、 データ型の構造体を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="5ab5597db5859ed0975cdc1e15a9b24d5b07792a" translate="yes" xml:space="preserve">
          <source>If you wish to use one of those ciphers, you&amp;rsquo;d have to pass its name in lower-case to the Encryption library.</source>
          <target state="translated">これらの暗号の1つを使用したい場合は、その名前を小文字で暗号化ライブラリに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="950cff6719cef31d34f97bc4dd11dcb6b1673c0d" translate="yes" xml:space="preserve">
          <source>If you would like the Zip archive to maintain the directory structure of the file in it, pass TRUE (boolean) in the second parameter. Example:</source>
          <target state="translated">Zip アーカイブにファイルのディレクトリ構造を維持させたい場合は、2 番目のパラメータに TRUE (boolean)を渡します。例:Zip アーカイブがファイルのディレクトリ構造を維持するようにするには、2 番目のパラメータに TRUE (boolean)を渡します。</target>
        </trans-unit>
        <trans-unit id="e8c3a3948266b4b87be158012eedad7cc86f1a45" translate="yes" xml:space="preserve">
          <source>If you would like the field name to be stored in a language file, please see &lt;a href=&quot;#translating-field-names&quot;&gt;Translating Field Names&lt;/a&gt;.</source>
          <target state="translated">フィールド名を言語ファイルに保存する場合は、&lt;a href=&quot;#translating-field-names&quot;&gt;「フィールド名の翻訳&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="a1c0ed8891a7d397e6bfe0f88dffee1cefebc253" translate="yes" xml:space="preserve">
          <source>If you would like the opening &amp;lt;select&amp;gt; to contain additional data, like an id attribute or JavaScript, you can pass it as a string in the fourth parameter:</source>
          <target state="translated">開始&amp;lt;select&amp;gt;にid属性やJavaScriptなどの追加データを含める場合は、4番目のパラメーターで文字列として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="8d242ae6ff6024b4b03758438c8d1df273e26507" translate="yes" xml:space="preserve">
          <source>If you would like the other pseudo-variables accessible inside the &amp;ldquo;blog_entry&amp;rdquo; scope, then make sure that the &amp;ldquo;cascadeData&amp;rdquo; option is set to true.</source>
          <target state="translated">「blog_entry」スコープ内で他の疑似変数にアクセスできるようにする場合は、「cascadeData」オプションがtrueに設定されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="f3acce1e836dfdd87c96f1645e14ba08ddf58cd6" translate="yes" xml:space="preserve">
          <source>If you would like the simple &amp;ldquo;download &amp;amp; go&amp;rdquo; install that CodeIgniter3 is known for, choose the manual installation.</source>
          <target state="translated">CodeIgniter3で知られている簡単な「ダウンロード＆ゴー」インストールが必要な場合は、手動インストールを選択してください。</target>
        </trans-unit>
        <trans-unit id="fc4734c7855363f70cb354408d9af818a369fcc4" translate="yes" xml:space="preserve">
          <source>If you would like to disable transactions you can do so using &lt;code&gt;$this-&amp;gt;db-&amp;gt;trans_off()&lt;/code&gt;:</source>
          <target state="translated">トランザクションを無効にしたい場合は、 &lt;code&gt;$this-&amp;gt;db-&amp;gt;trans_off()&lt;/code&gt; を使用して無効にできます。</target>
        </trans-unit>
        <trans-unit id="518873f7e2a44b65fb842df5c5588494c767f2e6" translate="yes" xml:space="preserve">
          <source>If you would like to display the total elapsed time from the moment CodeIgniter starts to the moment the final output is sent to the browser, simply place this in one of your view templates:</source>
          <target state="translated">CodeIgniterが起動してから最終的な出力がブラウザに送信されるまでの経過時間を表示したい場合は、ビューテンプレートの1つにこれを配置してください。</target>
        </trans-unit>
        <trans-unit id="9030f9f263edbe47a0dd702d688e200100a7f07b" translate="yes" xml:space="preserve">
          <source>If you would like to dynamically set a config item or change an existing one, you can do so using:</source>
          <target state="translated">設定項目を動的に設定したり、既存の項目を変更したりしたい場合は、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="6c88251b14ccaab711f82cd4d7ddaee5972be156" translate="yes" xml:space="preserve">
          <source>If you would like to implement your libraries in a framework-agnostic method, you can use the &lt;code&gt;CodeIgniter\Log\LoggerAwareTrait&lt;/code&gt; which implements the &lt;code&gt;setLogger()&lt;/code&gt; method for you. Then, when you use your library under different environments for frameworks, your library should still be able to log as it would expect, as long as it can find a PSR3 compatible logger.</source>
          <target state="translated">フレームワークに依存しないメソッドでライブラリを実装する場合は、 &lt;code&gt;setLogger()&lt;/code&gt; メソッドを実装する &lt;code&gt;CodeIgniter\Log\LoggerAwareTrait&lt;/code&gt; を使用できます。次に、フレームワークのさまざまな環境でライブラリを使用する場合でも、PSR3互換のロガーが見つかる限り、ライブラリは期待どおりにログに記録できるはずです。</target>
        </trans-unit>
        <trans-unit id="4e1736cce0f765d7be3fe74ce22748806a1ecfca" translate="yes" xml:space="preserve">
          <source>If you would like to keep your views public it is also possible to move the views folder out of your application folder.</source>
          <target state="translated">ビューを公開しておきたい場合は、アプリケーションフォルダからビューフォルダを移動させることも可能です。</target>
        </trans-unit>
        <trans-unit id="e0ab37ee5733bae955051884d1241e0da7a128de" translate="yes" xml:space="preserve">
          <source>If you would like to leave some testing in place in your scripts, but not have it run unless you need it, you can disable unit testing using:</source>
          <target state="translated">スクリプトの中にテストを残しておきたいが、必要なとき以外は実行しないようにしたい場合は、ユニットテストを無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="4195f63bde5786b2629b16de7c07c2d45060f0d2" translate="yes" xml:space="preserve">
          <source>If you would like to rename your application directory or even move it to a different location on your server, other than your project root, open your main &lt;strong&gt;app/Config/Paths.php&lt;/strong&gt; and set a &lt;em&gt;full server path&lt;/em&gt; in the &lt;code&gt;$appDirectory&lt;/code&gt; variable (at about line 38):</source>
          <target state="translated">アプリケーションディレクトリの名前を変更したり、プロジェクトルート以外のサーバー上の別の場所に移動したりする場合は、メインの&lt;strong&gt;app / Config / Paths.phpを開き&lt;/strong&gt;、 &lt;code&gt;$appDirectory&lt;/code&gt; 変数に&lt;em&gt;完全なサーバーパス&lt;/em&gt;を設定します（ 38行目について）：</target>
        </trans-unit>
        <trans-unit id="eaa74b4ebb57fac8328a220a83300a2b7458f7bf" translate="yes" xml:space="preserve">
          <source>If you would like to rename your application directory you may do so as long as you open your main index.php file and set its name using the &lt;code&gt;$application_folder&lt;/code&gt; variable:</source>
          <target state="translated">アプリケーションディレクトリの名前を変更する場合は、メインのindex.phpファイルを開き、 &lt;code&gt;$application_folder&lt;/code&gt; 変数を使用してその名前を設定する限り、次のようにすることができます。</target>
        </trans-unit>
        <trans-unit id="a7baffd1d4ccf7b0a1cf2ffe35a6c07833e341c0" translate="yes" xml:space="preserve">
          <source>If you would like to run transactions manually you can do so as follows:</source>
          <target state="translated">トランザクションを手動で実行したい場合は、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="a4db5eaf3c2fdd8470ac458a2b80b05d99927884" translate="yes" xml:space="preserve">
          <source>If you would like to set an individual cell&amp;rsquo;s tag attributes, you can use an associative array for that cell. The associative key &lt;strong&gt;data&lt;/strong&gt; defines the cell&amp;rsquo;s data. Any other key =&amp;gt; val pairs are added as key=&amp;rsquo;val&amp;rsquo; attributes to the tag:</source>
          <target state="translated">個々のセルのタグ属性を設定する場合は、そのセルに連想配列を使用できます。連想キー&lt;strong&gt;データ&lt;/strong&gt;は、セルのデータを定義します。その他のキー=&amp;gt; valのペアは、key = 'val'属性としてタグに追加されます。</target>
        </trans-unit>
        <trans-unit id="f9073873a7c68a623028ac620c75822fb529e7ae" translate="yes" xml:space="preserve">
          <source>If you would like to set your own field name simply pass its value to the &lt;code&gt;do_upload()&lt;/code&gt; method:</source>
          <target state="translated">独自のフィールド名を設定する場合は、その値を &lt;code&gt;do_upload()&lt;/code&gt; メソッドに渡すだけです。</target>
        </trans-unit>
        <trans-unit id="e6534beeabd53dec36ce3dd06ec1e7864044a562" translate="yes" xml:space="preserve">
          <source>If you would like to share a common CodeIgniter framework installation, to manage several different applications, simply put all of the directories located inside your application directory into their own (sub)-directory.</source>
          <target state="translated">複数の異なるアプリケーションを管理するために、共通のCodeIgniterフレームワークのインストールを共有したい場合は、アプリケーションディレクトリ内にあるすべてのディレクトリをそれぞれの(サブ)ディレクトリに置くだけです。</target>
        </trans-unit>
        <trans-unit id="3853119e3e8ebb8d3d16c9ef6c48a879593f3f80" translate="yes" xml:space="preserve">
          <source>If you would like to share a common CodeIgniter installation to manage several different applications simply put all of the directories located inside your application directory into their own sub-directory.</source>
          <target state="translated">複数の異なるアプリケーションを管理するために共通のCodeIgniterインストールを共有したい場合は、アプリケーションディレクトリ内にあるすべてのディレクトリをそれぞれのサブディレクトリに置くだけです。</target>
        </trans-unit>
        <trans-unit id="465f42de4a4b16fcd8b60637c4857a3eb921b496" translate="yes" xml:space="preserve">
          <source>If you would like to store the &amp;ldquo;human&amp;rdquo; name you passed to the &lt;code&gt;set_rules()&lt;/code&gt; method in a language file, and therefore make the name able to be translated, here&amp;rsquo;s how:</source>
          <target state="translated">&lt;code&gt;set_rules()&lt;/code&gt; メソッドに渡した「人間の」名前を言語ファイルに保存して、名前を翻訳できるようにするには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="a1d5a0d8d4184a5e23e50f5aed73ded24fa86e6a" translate="yes" xml:space="preserve">
          <source>If you would like to surround the entire pagination with some markup you can do it with these two preferences:</source>
          <target state="translated">ページネーション全体をマークアップで囲みたい場合は、以下の2つの設定で行うことができます。</target>
        </trans-unit>
        <trans-unit id="133d94e8e14e5d641a266326797768717c1e3358" translate="yes" xml:space="preserve">
          <source>If you would like your compressed data organized into sub-directories, simply include the path as part of the filename(s):</source>
          <target state="translated">圧縮されたデータをサブディレクトリに整理したい場合は、ファイル名の一部としてパスを含めるだけです。</target>
        </trans-unit>
        <trans-unit id="ef53c240d9540fcd64c3bd46116d9cd4418e0e82" translate="yes" xml:space="preserve">
          <source>If you would like your form to contain some additional data, like JavaScript, you can pass it as a string in the third parameter:</source>
          <target state="translated">JavaScript のような追加データをフォームに入れたい場合は、3番目のパラメータに文字列として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="e3fc7e59f2d0de30d2125f09641b3ff3ca3a2a65" translate="yes" xml:space="preserve">
          <source>If you would like your model assigned to a different object name you can specify it via the second parameter of the loading method:</source>
          <target state="translated">モデルを別のオブジェクト名に割り当てたい場合は、ロードメソッドの2番目のパラメータで指定することができます。</target>
        </trans-unit>
        <trans-unit id="acf367e32c1d9398436bf5e5e0a0cbf9b3aad06e" translate="yes" xml:space="preserve">
          <source>If you would like your test results formatted differently then the default you can set your own template. Here is an example of a simple template. Note the required pseudo-variables:</source>
          <target state="translated">テスト結果の書式をデフォルトとは異なるものにしたい場合は、独自のテンプレートを設定することができます。以下はシンプルなテンプレートの例です。必要な疑似変数に注意してください。</target>
        </trans-unit>
        <trans-unit id="08166c2205289c459f9e8cf83e973a07cc6dbd76" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to include a field&amp;rsquo;s &amp;ldquo;human&amp;rdquo; name, or the optional parameter some rules allow for (such as max_length), or the value that was validated you can add the &lt;code&gt;{field}&lt;/code&gt;, &lt;code&gt;{param}&lt;/code&gt; and &lt;code&gt;{value}&lt;/code&gt; tags to your message, respectively:</source>
          <target state="translated">フィールドの「人間」名、一部のルールで許可されているオプションのパラメーター（max_lengthなど）、または検証された値を含める場合は、 &lt;code&gt;{field}&lt;/code&gt; 、 &lt;code&gt;{param}&lt;/code&gt; 、および &lt;code&gt;{value}&lt;/code&gt; タグを追加できます。あなたのメッセージにそれぞれ：</target>
        </trans-unit>
        <trans-unit id="bec0c6c23f8722454e99e77b6071d086001fe560" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to include a field&amp;rsquo;s &amp;ldquo;human&amp;rdquo; name, or the optional parameter some rules allow for (such as max_length), you can add the &lt;strong&gt;{field}&lt;/strong&gt; and &lt;strong&gt;{param}&lt;/strong&gt; tags to your message, respectively:</source>
          <target state="translated">フィールドの「人間の」名前、または一部のルールで許可されているオプションのパラメーター（max_lengthなど）を含める場合は、それぞれ&lt;strong&gt;{field &lt;/strong&gt;&lt;strong&gt;}&lt;/strong&gt;タグと&lt;strong&gt;{param}&lt;/strong&gt;タグをメッセージに追加できます。</target>
        </trans-unit>
        <trans-unit id="34787ba12008641ef3818c655d3c3b0b3b221f3d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to manually test whether your server supports MCrypt you can use:</source>
          <target state="translated">サーバーがMCryptをサポートしているかどうかを手動でテストする場合は、次を使用できます。</target>
        </trans-unit>
        <trans-unit id="99ca515f860da6f2b0c24006801222e4a5695008" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to use a custom file name, you can use the third parameter:</source>
          <target state="translated">カスタムファイル名を使用する場合は、3番目のパラメーターを使用できます。</target>
        </trans-unit>
        <trans-unit id="a1a955ccc0e2b1f67f3aa89c1f4b5b1af174015e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d rather not do all of this by hand, you can use the &lt;code&gt;session:migration&lt;/code&gt; command from the cli to generate a migration file for you:</source>
          <target state="translated">これらすべてを手動で実行したくない場合は、CLIから &lt;code&gt;session:migration&lt;/code&gt; コマンドを使用して、移行ファイルを生成できます。</target>
        </trans-unit>
        <trans-unit id="754f881e38a490286062cbd8a8c4b0d1ae436e5d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d rather organize your rules and error messages within the Validation configuration file, you can do that and simply set &lt;code&gt;$validationRules&lt;/code&gt; to the name of the validation rule group you created:</source>
          <target state="translated">検証構成ファイル内でルールとエラーメッセージを整理したい場合は、それを実行して、作成した検証ルールグループの名前に &lt;code&gt;$validationRules&lt;/code&gt; を設定するだけです。</target>
        </trans-unit>
        <trans-unit id="d7517f26bfc6817ba1f97ba625c771ede301db04" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ll be using &lt;code&gt;get_instance()&lt;/code&gt; inside another class, then it would be better if you assign it to a property. This way, you won&amp;rsquo;t need to call &lt;code&gt;get_instance()&lt;/code&gt; in every single method.</source>
          <target state="translated">別のクラス内で &lt;code&gt;get_instance()&lt;/code&gt; を使用する場合は、それをプロパティに割り当てるとよいでしょう。これにより、すべてのメソッドで &lt;code&gt;get_instance()&lt;/code&gt; を呼び出す必要がなくなります。</target>
        </trans-unit>
        <trans-unit id="f992504fdad3cc5a2d01f0c25955ac78a8f90ea7" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re new to CodeIgniter, please read the &lt;a href=&quot;../intro/index&quot;&gt;Getting Started&lt;/a&gt; section of the User Guide to begin learning how to build dynamic PHP applications. Enjoy!</source>
          <target state="translated">CodeIgniterを初めて使用する場合は、ユーザーガイドの「はじめに」セクションを読んで、動的PHPアプリケーションの構築方法を学び&lt;a href=&quot;../intro/index&quot;&gt;始めて&lt;/a&gt;ください。楽しい！</target>
        </trans-unit>
        <trans-unit id="93d0d68444ca91025e9fcc343130c9ca6ca65ba8" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re new to CodeIgniter, please read the &lt;a href=&quot;../overview/getting_started&quot;&gt;Getting Started&lt;/a&gt; section of the User Guide to begin learning how to build dynamic PHP applications. Enjoy!</source>
          <target state="translated">あなたはCodeIgniterのに慣れていない場合は、お読みください&lt;a href=&quot;../overview/getting_started&quot;&gt;はじめに&lt;/a&gt;ダイナミックなPHPアプリケーションを構築する方法を学び始めるためにユーザーガイドのセクションを。楽しい！</target>
        </trans-unit>
        <trans-unit id="843e2b0d2aa1a789d51391da325af8f68c862e87" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not allowed to do that, you can try using a .htaccess file to restrict access to those resources.</source>
          <target state="translated">それが許可されていない場合は、.htaccessファイルを使用して、これらのリソースへのアクセスを制限してみてください。</target>
        </trans-unit>
        <trans-unit id="80ecaf1d1e0c56920fdfb06907ed090443aa0e1b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a hashing algorithm other than BCrypt (which has a limit of 72 characters), you should set a relatively high limit on password lengths in order to mitigate DoS attacks - say, 1024 characters.</source>
          <target state="translated">BCrypt（72文字の制限があります）以外のハッシュアルゴリズムを使用している場合は、DoS攻撃を軽減するために、パスワード長に比較的高い制限（1024文字など）を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="0cad54d521773a11e3efe8a2e08ad85625fd2438" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve done everything properly, you can now set your &lt;em&gt;sess_driver&lt;/em&gt; configuration value to &amp;lsquo;dummy&amp;rsquo; and use your own driver. Congratulations!</source>
          <target state="translated">すべてを適切に行った場合は、&lt;em&gt;sess_driver&lt;/em&gt;構成値を「ダミー」に設定して、独自のドライバーを使用できます。おめでとう！</target>
        </trans-unit>
        <trans-unit id="a9f92ba0b0c1ca33ca6a084c77ca8c88fe43cda6" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve found a critical vulnerability, we&amp;rsquo;d be happy to credit you in our &lt;a href=&quot;../changelogs/index&quot;&gt;ChangeLog&lt;/a&gt;.</source>
          <target state="translated">重大な脆弱性を発見した場合は、&lt;a href=&quot;../changelogs/index&quot;&gt;ChangeLog&lt;/a&gt;にクレジットを表示させていただきます。</target>
        </trans-unit>
        <trans-unit id="b18465453f5c3b9a1d79501b23007618ed590749" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve loaded the &lt;a href=&quot;../libraries/form_validation&quot;&gt;Form Validation Library&lt;/a&gt; and have set a validation rule for the field name in use with this helper, then it will forward the call to the &lt;a href=&quot;../libraries/form_validation&quot;&gt;Form Validation Library&lt;/a&gt;&amp;rsquo;s own &lt;code&gt;set_value()&lt;/code&gt; method. Otherwise, this function looks in &lt;code&gt;$_POST&lt;/code&gt; for the field value.</source>
          <target state="translated">&lt;a href=&quot;../libraries/form_validation&quot;&gt;フォーム検証ライブラリ&lt;/a&gt;をロードし、このヘルパーで使用しているフィールド名の検証ルールを設定している場合、&lt;a href=&quot;../libraries/form_validation&quot;&gt;フォーム検証ライブラリ&lt;/a&gt;の独自の &lt;code&gt;set_value()&lt;/code&gt; メソッドに呼び出しが転送されます。それ以外の場合、この関数は &lt;code&gt;$_POST&lt;/code&gt; でフィールド値を探します。</target>
        </trans-unit>
        <trans-unit id="fffd830be575325d8f707671332dca7a7e0f1a97" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve never used a template engine, pseudo-variable names are enclosed in braces, like this:</source>
          <target state="translated">テンプレートエンジンを使用したことがない場合は、次のように、疑似変数名を中括弧で囲みます。</target>
        </trans-unit>
        <trans-unit id="9414744f8250d8cf280f48076dc730204db3689f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve relocated any of the main directories, you can change the configuration settings inside &lt;code&gt;app/Config/Paths&lt;/code&gt;.</source>
          <target state="translated">メインディレクトリのいずれかを再配置した場合は、 &lt;code&gt;app/Config/Paths&lt;/code&gt; 内の構成設定を変更できます。</target>
        </trans-unit>
        <trans-unit id="3ea512cd7d55f9902f455dd47b742ce88c5bdb5f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve upgraded from a previous version of CodeIgniter and you don&amp;rsquo;t have &amp;lsquo;sess_save_path&amp;rsquo; configured, then the Session library will look for the old &amp;lsquo;sess_table_name&amp;rsquo; setting and use it instead. Please don&amp;rsquo;t rely on this behavior as it will get removed in the future.</source>
          <target state="translated">以前のバージョンのCodeIgniterからアップグレードし、 'sess_save_path'が構成されていない場合、セッションライブラリは古い 'sess_table_name'設定を探し、代わりに使用します。この動作は将来削除されるため、この動作に依存しないでください。</target>
        </trans-unit>
        <trans-unit id="69693de891b2dbfe2306318a518d2b8bbeab567f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve used sessions in PHP before, you should be familiar with PHP&amp;rsquo;s &lt;a href=&quot;http://php.net/manual/en/reserved.variables.session.php&quot;&gt;$_SESSION superglobal&lt;/a&gt; (if not, please read the content on that link).</source>
          <target state="translated">以前にPHPでセッションを使用したことがある場合は、PHPの&lt;a href=&quot;http://php.net/manual/en/reserved.variables.session.php&quot;&gt;$ _SESSIONスーパーグローバルに&lt;/a&gt;精通している必要があります（そうでない場合は、そのリンクのコンテンツをお読みください）。</target>
        </trans-unit>
        <trans-unit id="4c2e1171a8891b6f3e6cf6594c93d6745d1ca35d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve used sessions in PHP before, you should be familiar with PHP&amp;rsquo;s &lt;a href=&quot;https://www.php.net/manual/en/reserved.variables.session.php&quot;&gt;$_SESSION superglobal&lt;/a&gt; (if not, please read the content on that link).</source>
          <target state="translated">以前にPHPでセッションを使用したことがある場合は、PHPの&lt;a href=&quot;https://www.php.net/manual/en/reserved.variables.session.php&quot;&gt;$ _SESSIONスーパーグローバルに&lt;/a&gt;精通している必要があります（そうでない場合は、そのリンクのコンテンツをお読みください）。</target>
        </trans-unit>
        <trans-unit id="7260d18e72f117c11e2107de0d4b6f0a7f9b7a22" translate="yes" xml:space="preserve">
          <source>If your &amp;ldquo;pair&amp;rdquo; data is coming from a database result, which is already a multi-dimensional array, you can simply use the database &lt;code&gt;getResultArray()&lt;/code&gt; method:</source>
          <target state="translated">「ペア」データが、すでに多次元配列であるデータベース結果から取得されている場合は、データベースの &lt;code&gt;getResultArray()&lt;/code&gt; メソッドを使用するだけです。</target>
        </trans-unit>
        <trans-unit id="5127d93f23d2c2e68b97e3ecf33c080485092007" translate="yes" xml:space="preserve">
          <source>If your &amp;ldquo;pair&amp;rdquo; data is coming from a database result, which is already a multi-dimensional array, you can simply use the database &lt;code&gt;result_array()&lt;/code&gt; method:</source>
          <target state="translated">「ペア」データが、すでに多次元配列であるデータベース結果からのものである場合は、データベースの &lt;code&gt;result_array()&lt;/code&gt; メソッドを使用するだけです。</target>
        </trans-unit>
        <trans-unit id="be13215abc4fc7c47e37fea204e8dd731e46068c" translate="yes" xml:space="preserve">
          <source>If your Apache server has &lt;em&gt;mod_rewrite&lt;/em&gt; enabled, you can easily remove this file by using a .htaccess file with some simple rules. Here is an example of such a file, using the &amp;ldquo;negative&amp;rdquo; method in which everything is redirected except the specified items:</source>
          <target state="translated">Apacheサーバーで&lt;em&gt;mod_rewriteが&lt;/em&gt;有効になっている場合は、いくつかの単純なルールを持つ.htaccessファイルを使用して、このファイルを簡単に削除できます。以下は、指定された項目以外のすべてがリダイレクトされる「ネガティブ」メソッドを使用した、そのようなファイルの例です。</target>
        </trans-unit>
        <trans-unit id="605737b908102ae42eb22c6811df1bafb7945104" translate="yes" xml:space="preserve">
          <source>If your PHP installation is configured with &amp;ndash;enable-memory-limit, you can display the amount of memory consumed by the entire system using the following code in one of your view file:</source>
          <target state="translated">PHPインストールが&amp;ndash;enable-memory-limitで設定されている場合、ビューファイルの1つで次のコードを使用して、システム全体で消費されるメモリの量を表示できます。</target>
        </trans-unit>
        <trans-unit id="32b857138ae08efc3f002804caa8f218e4e9433b" translate="yes" xml:space="preserve">
          <source>If your URI contains more than two segments they will be passed to your method as parameters.</source>
          <target state="translated">URI に 2 つ以上のセグメントが含まれている場合、それらはパラメータとしてメソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="c6471fb738bd201e992340d37f513af7eb23e302" translate="yes" xml:space="preserve">
          <source>If your application needs to make changes at run-time, you can access the instance at &lt;code&gt;$response-&amp;gt;CSP&lt;/code&gt;. The class holds a number of methods that map pretty clearly to the appropriate header value that you need to set. Examples are shown below, with different combinations of parameters, though all accept either a directive name or an array of them.:</source>
          <target state="translated">アプリケーションが実行時に変更を加える必要がある場合は、 &lt;code&gt;$response-&amp;gt;CSP&lt;/code&gt; でインスタンスにアクセスできます。このクラスには、設定する必要のある適切なヘッダー値に非常に明確にマップされるいくつかのメソッドがあります。以下に、パラメーターのさまざまな組み合わせを使用した例を示しますが、すべてディレクティブ名またはそれらの配列のいずれかを受け入れます。</target>
        </trans-unit>
        <trans-unit id="bca229f48356af3fa4051f5f8951329103fb9a44" translate="yes" xml:space="preserve">
          <source>If your application returns XML, you can retrieve it through this method.</source>
          <target state="translated">アプリケーションがXMLを返す場合は、このメソッドを使ってXMLを取得することができます。</target>
        </trans-unit>
        <trans-unit id="da8463754daf526d15fc537ed9d5cc0ed6f7b914" translate="yes" xml:space="preserve">
          <source>If your controller contains a method named &lt;code&gt;_output()&lt;/code&gt;, it will &lt;strong&gt;always&lt;/strong&gt; be called by the output class instead of echoing the finalized data directly. The first parameter of the method will contain the finalized output.</source>
          <target state="translated">お使いのコントローラがという名前のメソッドが含まれている場合 &lt;code&gt;_output()&lt;/code&gt; 、それがされます&lt;strong&gt;常に&lt;/strong&gt;代わりに直接ファイナライズデータをエコーの出力クラスによって呼び出されます。メソッドの最初のパラメーターには、最終的な出力が含まれます。</target>
        </trans-unit>
        <trans-unit id="a30c750b8571c8f8cce6d7ff3076ca71187185bc" translate="yes" xml:space="preserve">
          <source>If your controller contains a method named _remap(), it will &lt;strong&gt;always&lt;/strong&gt; get called regardless of what your URI contains. It overrides the normal behavior in which the URI determines which method is called, allowing you to define your own method routing rules.</source>
          <target state="translated">コントローラーに_remap（）という名前のメソッドが含まれている場合、URIの内容に関係なく、&lt;strong&gt;常に&lt;/strong&gt;呼び出されます。これは、URIが呼び出されるメソッドを決定する通常の動作をオーバーライドし、独自のメソッドルーティングルールを定義できるようにします。</target>
        </trans-unit>
        <trans-unit id="c776e74341e586baf876f632d5bd7431ce60e527" translate="yes" xml:space="preserve">
          <source>If your controllers are not explicitly namespaced, there is no need to change this. If you namespace your controllers, then you can change this value to save typing:</source>
          <target state="translated">コントローラが明示的に名前空間を設定していない場合は、これを変更する必要はありません。コントローラの名前空間を設定している場合は、この値を変更することでタイプの手間を省くことができます。</target>
        </trans-unit>
        <trans-unit id="96397e254ad0df13f40e555f18abea4d07169ce7" translate="yes" xml:space="preserve">
          <source>If your data is in a nested associative array, you can use &amp;ldquo;dot array syntax&amp;rdquo; to easily validate your data:</source>
          <target state="translated">データがネストされた連想配列にある場合は、「ドット配列構文」を使用してデータを簡単に検証できます。</target>
        </trans-unit>
        <trans-unit id="8f301f8b88fbd27c0735f448d37dc187af721c4d" translate="yes" xml:space="preserve">
          <source>If your issue report can describe the steps to reproduce the problem, that is great. If you can include a unit test that reproduces the problem, that is even better, as it gives whoever is fixing it a clearer target!</source>
          <target state="translated">問題報告書に問題を再現するための手順が記述されていれば、それは素晴らしいことです。問題を再現するユニットテストを含めることができれば、問題を修正しようとしている人に明確な目標を与えることができるので、さらに良いでしょう!</target>
        </trans-unit>
        <trans-unit id="1bffbd742b3ce7d58f8c2a3f68b8c9ebd1a3a367" translate="yes" xml:space="preserve">
          <source>If your method needs to work with parameters, the function will need a minimum of three parameters: the string to validate, the parameter string, and an array with all of the data that was submitted the form. The $data array is especially handy for rules like &lt;code&gt;require_with&lt;/code&gt; that needs to check the value of another submitted field to base its result on:</source>
          <target state="translated">メソッドがパラメーターを処理する必要がある場合、関数には少なくとも3つのパラメーターが必要です。検証する文字列、パラメーター文字列、およびフォームに送信されたすべてのデータを含む配列です。$ data配列は、結果の基になる別の送信済みフィールドの値をチェックする必要がある &lt;code&gt;require_with&lt;/code&gt; のようなルールに特に便利です。</target>
        </trans-unit>
        <trans-unit id="540259d6ac2989744f3e3ae0818941d532bbec0f" translate="yes" xml:space="preserve">
          <source>If your model is located in a sub-directory, include the relative path from your models directory. For example, if you have a model located at &lt;em&gt;application/models/blog/Queries.php&lt;/em&gt; you&amp;rsquo;ll load it using:</source>
          <target state="translated">モデルがサブディレクトリにある場合は、モデルディレクトリからの相対パスを含めます。たとえば、&lt;em&gt;application / models / blog / Queries.phpに&lt;/em&gt;あるモデルがある場合は、次を使用してロードします。</target>
        </trans-unit>
        <trans-unit id="10458d92d627cb9c37fc4e5fc0f2ff42749acf48" translate="yes" xml:space="preserve">
          <source>If your model is located in a subdirectory, include the relative path from your models directory. For example, if you have a model located at &lt;em&gt;application/models/blog/Queries.php&lt;/em&gt; you&amp;rsquo;ll load it using:</source>
          <target state="translated">モデルがサブディレクトリにある場合は、モデルディレクトリからの相対パスを含めます。たとえば、&lt;em&gt;application / models / blog / Queries.phpに&lt;/em&gt;あるモデルがある場合は、次を使用してロードします。</target>
        </trans-unit>
        <trans-unit id="72fbdd3ff8545072b78a0aabb22fc580f37c5ed7" translate="yes" xml:space="preserve">
          <source>If your only interest in loading the library is to handle CSRF protection, then you will never need to load it, as it runs as a filter and has no manual interaction.</source>
          <target state="translated">ライブラリを読み込むことに興味があるのが CSRF 保護の処理だけならば、フィルタとして動作し、手動での操作がないので、ライブラリを読み込む必要はありません。</target>
        </trans-unit>
        <trans-unit id="54ac820aef945c53ce41dbb61355fc4d2a8451fa" translate="yes" xml:space="preserve">
          <source>If your project folder is not a subfolder of the Apache document root, then your &amp;lt;VirtualHost&amp;gt; element may need a nested &amp;lt;Directory&amp;gt; element to grant the web s erver access to the files.</source>
          <target state="translated">プロジェクトフォルダーがApacheドキュメントルートのサブフォルダーでない場合、Webサーバーにファイルへのアクセスを許可するために&amp;lt;VirtualHost&amp;gt;要素にネストされた&amp;lt;Directory&amp;gt;要素が必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="cb888065fc044ae4b430d92850abfc7cade9bdc9" translate="yes" xml:space="preserve">
          <source>If your server is running an &lt;strong&gt;open_basedir&lt;/strong&gt; restriction this function might not work if you are trying to access a file above the calling script.</source>
          <target state="translated">サーバーが&lt;strong&gt;open_basedir&lt;/strong&gt;制限を実行している場合、呼び出し元のスクリプトの上のファイルにアクセスしようとすると、この関数が機能しない可能性があります。</target>
        </trans-unit>
        <trans-unit id="1355bdf01ed538b70d474868db659578fb8ed085" translate="yes" xml:space="preserve">
          <source>If your server supports rewriting URLs you can easily remove this file with URL rewriting. This is handled differently by different servers, but we will show examples for the two most common web servers here.</source>
          <target state="translated">サーバーがURLの書き換えをサポートしている場合は、URLの書き換えでこのファイルを簡単に削除することができます。これはサーバーによって扱いが異なりますが、ここでは最も一般的な2つのウェブサーバーの例を紹介します。</target>
        </trans-unit>
        <trans-unit id="8d44ff42148e4f5f78278775f5d9a17dc5eadb36" translate="yes" xml:space="preserve">
          <source>If your watermark image is a PNG or GIF image, you may specify a color on the image to be &amp;ldquo;transparent&amp;rdquo;. This setting (along with the next) will allow you to specify that color. This works by specifying the &amp;ldquo;X&amp;rdquo; and &amp;ldquo;Y&amp;rdquo; coordinate pixel (measured from the upper left) within the image that corresponds to a pixel representative of the color you want to be transparent.</source>
          <target state="translated">透かし画像がPNGまたはGIF画像の場合、画像の色を「透明」に指定できます。この設定（および次の設定）では、その色を指定できます。これは、透明にしたい色を表すピクセルに対応する画像内の「左上から測定した」「X」および「Y」座標ピクセルを指定することで機能します。</target>
        </trans-unit>
        <trans-unit id="a3eb09116a62a5c11ef7d5cb741247be844f8690" translate="yes" xml:space="preserve">
          <source>Ignores IV (not recommended).</source>
          <target state="translated">IVを無視します(推奨しません)。</target>
        </trans-unit>
        <trans-unit id="b1bfa9e2a9adb4d0c8c27e860e90dcafc3863dcc" translate="yes" xml:space="preserve">
          <source>Ignoring how contrived this example is, we now have two choices on how to fix the User class. We could modify the class property from &lt;code&gt;$name&lt;/code&gt; to &lt;code&gt;$full_name&lt;/code&gt;, but that would require changes throughout the application. Instead, we can simply map the &lt;code&gt;full_name&lt;/code&gt; column in the database to the &lt;code&gt;$name&lt;/code&gt; property, and be done with the Entity changes:</source>
          <target state="translated">この例がいかに巧妙であるかを無視して、Userクラスを修正する方法について2つの選択肢があります。クラスプロパティを &lt;code&gt;$name&lt;/code&gt; から &lt;code&gt;$full_name&lt;/code&gt; に変更することもできますが、その場合はアプリケーション全体で変更する必要があります。代わりに、データベースの &lt;code&gt;full_name&lt;/code&gt; 列を &lt;code&gt;$name&lt;/code&gt; プロパティにマップするだけで、エンティティの変更を行うことができます。</target>
        </trans-unit>
        <trans-unit id="ea118798c37712477af28e614527a6c99852cdb9" translate="yes" xml:space="preserve">
          <source>Image Cropping</source>
          <target state="translated">画像のトリミング</target>
        </trans-unit>
        <trans-unit id="8aef0079eb36bcf3fdc530d84414f654e9a0ceb8" translate="yes" xml:space="preserve">
          <source>Image Manipulation</source>
          <target state="translated">画像操作</target>
        </trans-unit>
        <trans-unit id="ec803db86dfeb3c86b6104d8898cb8923875b90d" translate="yes" xml:space="preserve">
          <source>Image Manipulation Class</source>
          <target state="translated">画像操作クラス</target>
        </trans-unit>
        <trans-unit id="8b57a1a0c45dd99fa098e83f1b30a25446f20914" translate="yes" xml:space="preserve">
          <source>Image Manipulation Library (cropping, resizing, rotating, etc.). Supports GD, ImageMagick, and NetPBM</source>
          <target state="translated">画像操作ライブラリ(トリミング、リサイズ、回転など)。GD、ImageMagick、NetPBMをサポートしています。</target>
        </trans-unit>
        <trans-unit id="292a0b6145463b2255e4ec81142d63f391fd691e" translate="yes" xml:space="preserve">
          <source>Image Quality</source>
          <target state="translated">画質</target>
        </trans-unit>
        <trans-unit id="2b65debdb9c8bbe257d738e3034b52c09f08fe30" translate="yes" xml:space="preserve">
          <source>Image Resizing</source>
          <target state="translated">画像のリサイズ</target>
        </trans-unit>
        <trans-unit id="a89a6ca544fe79e342fabae69007cd3416e4e444" translate="yes" xml:space="preserve">
          <source>Image Rotating</source>
          <target state="translated">画像の回転</target>
        </trans-unit>
        <trans-unit id="f3061212f4b4130ef1318fe938298f8369ee1ce2" translate="yes" xml:space="preserve">
          <source>Image Watermarking</source>
          <target state="translated">画像の透かし</target>
        </trans-unit>
        <trans-unit id="d500aa949e614f53dfc3610240eee9b9b66b838f" translate="yes" xml:space="preserve">
          <source>Image height</source>
          <target state="translated">画像の高さ</target>
        </trans-unit>
        <trans-unit id="7c76daf0dfc72bea5b9597d61b5160e19d771b6c" translate="yes" xml:space="preserve">
          <source>Image opacity. You may specify the opacity (i.e. transparency) of your watermark image. This allows the watermark to be faint and not completely obscure the details from the original image behind it. A 50% opacity is typical.</source>
          <target state="translated">画像の不透明度。透かし画像の不透明度(透明度)を指定することができます。これにより、透かしが薄くなり、元の画像の詳細が完全に見えなくなることはありません。不透明度は50%が一般的です。</target>
        </trans-unit>
        <trans-unit id="419c4258d9a367670b2895e08ae1a1bcc0a64a45" translate="yes" xml:space="preserve">
          <source>Image processing can require a considerable amount of server memory for some operations. If you are experiencing out of memory errors while processing images you may need to limit their maximum size, and/or adjust PHP memory limits.</source>
          <target state="translated">画像処理では、処理によってはかなりの量のサーバーメモリを必要とすることがあります。画像の処理中にメモリ不足のエラーが発生した場合は、画像の最大サイズを制限したり PHP のメモリ制限を調整したりする必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="89b0ad47f2dee8d719599a4a684b488057902f7b" translate="yes" xml:space="preserve">
          <source>Image type (usually the file name extension without the period)</source>
          <target state="translated">画像の種類(通常はピリオドのないファイル名の拡張子</target>
        </trans-unit>
        <trans-unit id="f2cccb1889beba84b84d77cfadc2a038b545b861" translate="yes" xml:space="preserve">
          <source>Image width</source>
          <target state="translated">画像の幅</target>
        </trans-unit>
        <trans-unit id="706661a2f30b3843130674175f136a9295314c71" translate="yes" xml:space="preserve">
          <source>ImageMagick already saves files in the type indicated by their extension, ignoring &lt;strong&gt;$imageType&lt;/strong&gt;</source>
          <target state="translated">ImageMagickは、&lt;strong&gt;$ imageTypeを&lt;/strong&gt;無視して、拡張子で示されたタイプのファイルをすでに保存しています&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c9b9732f50d4d1753d1bb1cd1c84c51551d9d97" translate="yes" xml:space="preserve">
          <source>ImageMagickHandler #1546</source>
          <target state="translated">ImageMagickHandler #1546</target>
        </trans-unit>
        <trans-unit id="09e871c98fef3b901a775def173e4126aaf73b42" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="translated">Images</target>
        </trans-unit>
        <trans-unit id="aec525d8d982b503f0dfa0a9a666f8285e9a980e" translate="yes" xml:space="preserve">
          <source>Images can be cropped so that only a portion of the original image remains. This is often used when creating thumbnail images that should match a certain size/aspect ratio. This is handled with the &lt;code&gt;crop()&lt;/code&gt; method:</source>
          <target state="translated">元の画像の一部のみが残るように画像をトリミングできます。これは、特定のサイズ/アスペクト比に一致するサムネイル画像を作成するときによく使用されます。これは &lt;code&gt;crop()&lt;/code&gt; メソッドで処理されます。</target>
        </trans-unit>
        <trans-unit id="a509594e8bb3d311f22f89e16b97d019524cf4e4" translate="yes" xml:space="preserve">
          <source>Images can be flipped along either their horizontal or vertical axis:</source>
          <target state="translated">画像は、水平軸または垂直軸に沿って反転させることができます。</target>
        </trans-unit>
        <trans-unit id="c853e0dec36ba7068c174c398fd89526cdfd38d1" translate="yes" xml:space="preserve">
          <source>Images can be resized to fit any dimension you require with the resize() method:</source>
          <target state="translated">画像は、resize()メソッドを使用して、必要な寸法に合わせてサイズを変更することができます。</target>
        </trans-unit>
        <trans-unit id="624c2510eaf338f39990af0a8fa5deb7985a0e9a" translate="yes" xml:space="preserve">
          <source>Images/</source>
          <target state="translated">Images/</target>
        </trans-unit>
        <trans-unit id="4703c47d6606e357ddeaadc93d93b7f7f251b79d" translate="yes" xml:space="preserve">
          <source>Images/Handlers/</source>
          <target state="translated">Images/Handlers/</target>
        </trans-unit>
        <trans-unit id="fa1fc85fea05322206584b302630cf1f6c09b12f" translate="yes" xml:space="preserve">
          <source>Imagine that you&amp;rsquo;ve created a new directory, &lt;code&gt;Blog&lt;/code&gt; in your root directory. This will hold a &lt;strong&gt;blog module&lt;/strong&gt; with controllers, models, etc, and you&amp;rsquo;d like to make some of the classes available as a service. The first step is to create a new file: &lt;code&gt;Blog\Config\Services.php&lt;/code&gt;. The skeleton of the file should be:</source>
          <target state="translated">ルートディレクトリに新しいディレクトリ &lt;code&gt;Blog&lt;/code&gt; を作成したとします。これには、コントローラーやモデルなどを含む&lt;strong&gt;ブログモジュール&lt;/strong&gt;が含まれ、一部のクラスをサービスとして利用できるようにします。最初のステップは、 &lt;code&gt;Blog\Config\Services.php&lt;/code&gt; という新しいファイルを作成することです。ファイルのスケルトンは次のようになります。</target>
        </trans-unit>
        <trans-unit id="4d43a42fe1bb462461303ddc1c42d218f0d8a00b" translate="yes" xml:space="preserve">
          <source>Implement &lt;code&gt;getVarData()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;getVarData()&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="d340bda569af9fa5834cd3957ea15c806571082e" translate="yes" xml:space="preserve">
          <source>Implement the &lt;a href=&quot;http://php.net/sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt;インターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="87175cc1e4fbfb313dc1723ce057e599470613c1" translate="yes" xml:space="preserve">
          <source>Implement the &lt;code&gt;display()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;display()&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="a177fc29756a8a9292d5c9d28ed4ed8a2bfe862e" translate="yes" xml:space="preserve">
          <source>Implement the &lt;code&gt;formatTimelineData()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;formatTimelineData()&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="4b6d6a30150a506f9b79caf45da5aecb76b0018e" translate="yes" xml:space="preserve">
          <source>Important</source>
          <target state="translated">Important</target>
        </trans-unit>
        <trans-unit id="4a6a9bce8761e179f84af1b751b48c360254c4ed" translate="yes" xml:space="preserve">
          <source>Improper configuration of an application architecture can lead to mistakes that might compromise the security of the whole architecture.</source>
          <target state="translated">アプリケーションアーキテクチャの不適切な構成は、アーキテクチャ全体のセキュリティを損なう可能性のあるミスにつながる可能性があります。</target>
        </trans-unit>
        <trans-unit id="20129c2246c1ed1b84e363a8b851cad373a49811" translate="yes" xml:space="preserve">
          <source>Improvements to File class</source>
          <target state="translated">ファイルクラスの改善</target>
        </trans-unit>
        <trans-unit id="c0f2cf44a649d768ab8f096d9bb533353784a7b1" translate="yes" xml:space="preserve">
          <source>In &amp;ldquo;Default line breaks&amp;rdquo;, select &amp;ldquo;Mac OS X and Unix (LF)&amp;rdquo;</source>
          <target state="translated">「デフォルトの改行」で「Mac OS XおよびUnix（LF）」を選択します</target>
        </trans-unit>
        <trans-unit id="9cc3052c8e31b095b860ed66c0d26dddca0afe51" translate="yes" xml:space="preserve">
          <source>In &amp;ldquo;Default text encoding for new documents&amp;rdquo;, select &amp;ldquo;Unicode (UTF-8, no BOM)&amp;rdquo;</source>
          <target state="translated">「新しいドキュメントのデフォルトのテキストエンコーディング」で、「Unicode（UTF-8、BOMなし）」を選択します</target>
        </trans-unit>
        <trans-unit id="f0ca2ccfb8cf66271249d8e083fce7536cfb02c1" translate="yes" xml:space="preserve">
          <source>In &amp;ldquo;File Encoding&amp;rdquo;, select &amp;ldquo;UTF-8 (recommended)&amp;rdquo;</source>
          <target state="translated">「ファイルエンコーディング」で、「UTF-8（推奨）」を選択します。</target>
        </trans-unit>
        <trans-unit id="57d76793ad7e146fc3db3c717f674b5f11fe1ea4" translate="yes" xml:space="preserve">
          <source>In &amp;ldquo;Line Endings&amp;rdquo;, select &amp;ldquo;LF (recommended)&amp;rdquo;</source>
          <target state="translated">[行末]で[LF（推奨）]を選択します</target>
        </trans-unit>
        <trans-unit id="2a1b3e68410280d16d8611f9a69a040c299acadc" translate="yes" xml:space="preserve">
          <source>In 2014, CodeIgniter was acquired by the &lt;a href=&quot;https://www.bcit.ca/&quot;&gt;British Columbia Institute of Technology&lt;/a&gt; and was then officially announced as a community-maintained project.</source>
          <target state="translated">2014年、CodeIgniterは&lt;a href=&quot;https://www.bcit.ca/&quot;&gt;ブリティッシュコロンビア工科大学&lt;/a&gt;に買収され、コミュニティが管理するプロジェクトとして正式に発表されました。</target>
        </trans-unit>
        <trans-unit id="fd4a4b526148fbb265b7701f8eda6995217f83b5" translate="yes" xml:space="preserve">
          <source>In 2019, the CodeIgniter Foundation was formed to provide a perpetual managing group separate from any other entity to help ensure the framework&amp;rsquo;s future.</source>
          <target state="translated">2019年、CodeIgniter Foundationは、フレームワークの将来を確実にするために、他のエンティティとは別の永続的な管理グループを提供するために設立されました。</target>
        </trans-unit>
        <trans-unit id="243f9fb8651dda958de9cff17af6ea8ee3caac12" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;setCreatedAt()&lt;/code&gt; we convert the string we receive from the model into a DateTime object, ensuring that our timezone is UTC so we can easily convert the viewer&amp;rsquo;s current timezone. In &lt;code&gt;getCreatedAt()&lt;/code&gt;, it converts the time to a formatted string in the application&amp;rsquo;s current timezone.</source>
          <target state="translated">で &lt;code&gt;setCreatedAt()&lt;/code&gt; 我々は我々が簡単に視聴者の現在のタイムゾーンに変換することができますので、私たちのタイムゾーンはUTCであることを保証し、DateTimeオブジェクトにモデルから受け取った文字列を変換します。で &lt;code&gt;getCreatedAt()&lt;/code&gt; 、それはアプリケーションの現在のタイムゾーンでフォーマットされた文字列までの時間に変換します。</target>
        </trans-unit>
        <trans-unit id="f684c8232decdbd17dd28ea9f3a00c0207315e37" translate="yes" xml:space="preserve">
          <source>In MySQL &amp;ldquo;DELETE FROM TABLE&amp;rdquo; returns 0 affected rows. The database class has a small hack that allows it to return the correct number of affected rows. By default this hack is enabled but it can be turned off in the database driver file.</source>
          <target state="translated">MySQLでは、「DELETE FROM TABLE」は0の影響を受ける行を返します。データベースクラスには小さなハックがあり、影響を受ける行の正しい数を返すことができます。デフォルトでは、このハックは有効になっていますが、データベースドライバーファイルで無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="962108e33c4d08ebe9a39ac36f92fcc443d49689" translate="yes" xml:space="preserve">
          <source>In Routes</source>
          <target state="translated">ルート</target>
        </trans-unit>
        <trans-unit id="c29ddc0f5aeb20f5aa24eff290adfac214c7c0e7" translate="yes" xml:space="preserve">
          <source>In VueJS you just need to add the following code to the &lt;code&gt;created&lt;/code&gt; function, as long as you are using Axios for this type of request.</source>
          <target state="translated">VueJSでは、このタイプのリクエストにAxiosを使用している限り、 &lt;code&gt;created&lt;/code&gt; 関数に次のコードを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="b0f531d489a0e986d15f1b34de74ca4f0bc6d71b" translate="yes" xml:space="preserve">
          <source>In a route, the array key contains the URI to be matched, while the array value contains the destination it should be re-routed to. In the above example, if the literal word &amp;ldquo;product&amp;rdquo; is found in the first segment of the URL, and a number is found in the second segment, the &amp;ldquo;catalog&amp;rdquo; class and the &amp;ldquo;product_lookup&amp;rdquo; method are instead used.</source>
          <target state="translated">ルートでは、配列キーには一致するURIが含まれ、配列値には再ルーティングされる宛先が含まれます。上記の例では、URLの最初のセグメントに「product」というリテラル単語が見つかり、2番目のセグメントに数字が見つかった場合、代わりに「catalog」クラスと「product_lookup」メソッドが使用されます。</target>
        </trans-unit>
        <trans-unit id="704ccc3064bcd29e4f8c3c18da04b92dfbd12b86" translate="yes" xml:space="preserve">
          <source>In a route, the first parameter contains the URI to be matched, while the second parameter contains the destination it should be re-routed to. In the above example, if the literal word &amp;ldquo;product&amp;rdquo; is found in the first segment of the URL, and a number is found in the second segment, the &amp;ldquo;AppCatalog&amp;rdquo; class and the &amp;ldquo;productLookup&amp;rdquo; method are used instead.</source>
          <target state="translated">ルートでは、最初のパラメーターには照合するURIが含まれ、2番目のパラメーターには再ルーティングする必要のある宛先が含まれます。上記の例では、URLの最初のセグメントにリテラル単語「product」があり、2番目のセグメントに数字がある場合、代わりに「AppCatalog」クラスと「productLookup」メソッドが使用されます。</target>
        </trans-unit>
        <trans-unit id="23d5565b0dee47f213cd13c530912b6bed33a09f" translate="yes" xml:space="preserve">
          <source>In addition to affecting some basic framework behavior (see the next section), you may use this constant in your own development to differentiate between which environment you are running in.</source>
          <target state="translated">いくつかの基本的なフレームワークの動作に影響を与えることに加えて (次のセクションを参照してください)、どの環境で実行しているかを区別するために、この定数を独自の開発で使用することができます。</target>
        </trans-unit>
        <trans-unit id="cc7472980ade494278b4a6ddaf640805439cba3a" translate="yes" xml:space="preserve">
          <source>In addition to all of the methods in the SplFileInfo class, you get some new tools.</source>
          <target state="translated">SplFileInfo クラスのすべてのメソッドに加えて、いくつかの新しいツールが用意されています。</target>
        </trans-unit>
        <trans-unit id="66c63194537884668f6917f7a5960dd1a5ee5eb0" translate="yes" xml:space="preserve">
          <source>In addition to methods, the interface outlines some necessary properties for the target model. Please see the interface code for details.</source>
          <target state="translated">インターフェースでは、メソッドの他に、ターゲットモデルに必要なプロパティの概要を説明しています。詳細はインターフェースのコードを参照してください。</target>
        </trans-unit>
        <trans-unit id="3761e2ca3b839cb70d239bc9508f9e1289694db2" translate="yes" xml:space="preserve">
          <source>In addition to the five indexes above, there are two reserved words: rowid and subtotal. These are used internally by the Cart class, so please do NOT use those words as index names when inserting data into the cart.</source>
          <target state="translated">上記の5つのインデックスに加えて、2つの予約語があります:rowidとsubtotalです。これらはカートクラスによって内部的に使用されますので、カートにデータを挿入する際にはこれらの単語をインデックス名として使用しないでください。</target>
        </trans-unit>
        <trans-unit id="e320cafb5ed418cef180c50c9a02b974a1dbc226" translate="yes" xml:space="preserve">
          <source>In addition to the methods listed here, this class inherits the methods from the &lt;a href=&quot;../incoming/message&quot;&gt;Message Class&lt;/a&gt;.</source>
          <target state="translated">ここにリストされているメソッドに加えて、このクラスは&lt;a href=&quot;../incoming/message&quot;&gt;メッセージクラス&lt;/a&gt;からメソッドを継承します。</target>
        </trans-unit>
        <trans-unit id="bad5d027a53799a6b6360e4d547c1d0f7aac6565" translate="yes" xml:space="preserve">
          <source>In addition to the methods listed here, this class inherits the methods from the &lt;a href=&quot;request&quot;&gt;Request Class&lt;/a&gt; and the &lt;a href=&quot;message&quot;&gt;Message Class&lt;/a&gt;.</source>
          <target state="translated">ここにリストされているメソッドに加えて、このクラスは&lt;a href=&quot;request&quot;&gt;リクエストクラス&lt;/a&gt;と&lt;a href=&quot;message&quot;&gt;メッセージクラス&lt;/a&gt;からメソッドを継承します。</target>
        </trans-unit>
        <trans-unit id="0cdce2c7517f18794217baa55b53a9a4dd209321" translate="yes" xml:space="preserve">
          <source>In addition to the standard HTTP methods, this also supports two special cases: &amp;lsquo;cli&amp;rsquo;, and &amp;lsquo;ajax&amp;rsquo;. The names are self-explanatory here, but &amp;lsquo;cli&amp;rsquo; would apply to all requests that were run from the command line, while &amp;lsquo;ajax&amp;rsquo; would apply to every AJAX request.</source>
          <target state="translated">標準のHTTPメソッドに加えて、これは2つの特殊なケース「cli」と「ajax」もサポートします。ここでは名前は一目瞭然ですが、「cli」はコマンドラインから実行されたすべてのリクエストに適用され、「ajax」はすべてのAJAXリクエストに適用されます。</target>
        </trans-unit>
        <trans-unit id="3ebd861390a18e15d7200dc640c3d2c033e21c49" translate="yes" xml:space="preserve">
          <source>In addition to the two methods listed below, the following methods also can take a class name to return the results as: &lt;code&gt;first_row()&lt;/code&gt;, &lt;code&gt;last_row()&lt;/code&gt;, &lt;code&gt;next_row()&lt;/code&gt;, and &lt;code&gt;previous_row()&lt;/code&gt;.</source>
          <target state="translated">以下に示す2つのメソッドに加えて、次のメソッドもクラス名を取得して、結果を次のように返すことが &lt;code&gt;first_row()&lt;/code&gt; ：first_row（）、 &lt;code&gt;last_row()&lt;/code&gt; 、 &lt;code&gt;next_row()&lt;/code&gt; 、および &lt;code&gt;previous_row()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac03976b248db6e3474e2da5722c81be4e4e9b18" translate="yes" xml:space="preserve">
          <source>In addition to the two methods listed below, the following methods also can take a class name to return the results as: &lt;code&gt;getFirstRow()&lt;/code&gt;, &lt;code&gt;getLastRow()&lt;/code&gt;, &lt;code&gt;getNextRow()&lt;/code&gt;, and &lt;code&gt;getPreviousRow()&lt;/code&gt;.</source>
          <target state="translated">以下にリストされている2つのメソッドに加えて、次のメソッドもクラス名を使用して結果を返すことができます： &lt;code&gt;getFirstRow()&lt;/code&gt; 、 &lt;code&gt;getLastRow()&lt;/code&gt; 、 &lt;code&gt;getNextRow()&lt;/code&gt; 、および &lt;code&gt;getPreviousRow()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="efa26453f983040032715d3e90d10fde0a383180" translate="yes" xml:space="preserve">
          <source>In addition to the validation method like the ones we used above, you can also prep your data in various ways. For example, you can set up rules like this:</source>
          <target state="translated">上記で使用したような検証方法の他にも、様々な方法でデータを下準備することができます。例えば、以下のようなルールを設定することができます。</target>
        </trans-unit>
        <trans-unit id="4019c6dbe168f066a85fe120c1d9ec46a412ada5" translate="yes" xml:space="preserve">
          <source>In addition to the values above, the cookie and native drivers apply the following configuration values shared by the &lt;a href=&quot;../incoming/incomingrequest&quot;&gt;IncomingRequest&lt;/a&gt; and &lt;a href=&quot;security&quot;&gt;Security&lt;/a&gt; classes:</source>
          <target state="translated">上記の値に加えて、cookieおよびネイティブドライバーは、&lt;a href=&quot;../incoming/incomingrequest&quot;&gt;IncomingRequest&lt;/a&gt;クラスと&lt;a href=&quot;security&quot;&gt;Security&lt;/a&gt;クラスによって共有される次の構成値を適用します。</target>
        </trans-unit>
        <trans-unit id="cce36f290f2f80779b6f11e892337d45dad93ea9" translate="yes" xml:space="preserve">
          <source>In addition to the values above, the cookie and native drivers apply the following configuration values shared by the &lt;a href=&quot;input&quot;&gt;Input&lt;/a&gt; and &lt;a href=&quot;security&quot;&gt;Security&lt;/a&gt; classes:</source>
          <target state="translated">上記の値に加えて、Cookieとネイティブドライバーは、&lt;a href=&quot;input&quot;&gt;Input&lt;/a&gt;クラスと&lt;a href=&quot;security&quot;&gt;Security&lt;/a&gt;クラスで共有される次の構成値を適用します。</target>
        </trans-unit>
        <trans-unit id="d53a42e495b299edb060c099748d842afab3aa7a" translate="yes" xml:space="preserve">
          <source>In addition to these methods, &lt;code&gt;CIUnitTestCase&lt;/code&gt; also comes with a convenience property for parameter-free methods you want run during set up and tear down:</source>
          <target state="translated">これらのメソッドに加えて、 &lt;code&gt;CIUnitTestCase&lt;/code&gt; には、セットアップおよび破棄中に実行するパラメーターのないメソッドの便利なプロパティも付属しています。</target>
        </trans-unit>
        <trans-unit id="38fefee120e92b970f067930f726f64a154ae5a4" translate="yes" xml:space="preserve">
          <source>In addition to these two primary methods, the prepared query object also has the following methods:</source>
          <target state="translated">これら2つの主要なメソッドに加えて、準備されたクエリオブジェクトには以下のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="7e19ed18d6f0299bf94b3b3b7a5599ee8ae14852" translate="yes" xml:space="preserve">
          <source>In addition to these, a number of methods exist to provide additional information about the date:</source>
          <target state="translated">これらに加えて、日付に関する追加情報を提供するための方法がいくつか存在する。</target>
        </trans-unit>
        <trans-unit id="f75b00bd884f3b6639ffcb8308e9a23a3a291341" translate="yes" xml:space="preserve">
          <source>In addition to this, CodeIgniter has some helpful error pages when you hit exceptions or other errors in your program. Open up &lt;code&gt;app/Controllers/Home.php&lt;/code&gt; and change some line to generate an error (removing a semi-colon or brace should do the trick!). You will be greeted by a screen looking something like this:</source>
          <target state="translated">これに加えて、CodeIgniterには、プログラムで例外やその他のエラーが発生したときに役立つエラーページがいくつかあります。開き &lt;code&gt;app/Controllers/Home.php&lt;/code&gt; と、エラーを発生させるためにいくつかの行を変更（セミコロンやブレースを除去することはトリックを行う必要があります！）。次のような画面が表示されます。</target>
        </trans-unit>
        <trans-unit id="5595b5e6fdfae8ac89bd7693f93585e540f15575" translate="yes" xml:space="preserve">
          <source>In addition, CodeIgniter also provides 2 special types of session data that are further explained below: flashdata and tempdata.</source>
          <target state="translated">さらに、CodeIgniterは、以下で説明する2つの特別なタイプのセッションデータも提供しています:flashdataとtempdataです。</target>
        </trans-unit>
        <trans-unit id="cf130286b501e1fc5c31444c2209331a248d64d2" translate="yes" xml:space="preserve">
          <source>In addition, if performance is your only concern, you may want to look into using &lt;a href=&quot;http://eddmann.com/posts/storing-php-sessions-file-caches-in-memory-using-tmpfs/&quot;&gt;tmpfs&lt;/a&gt;, (warning: external resource), which can make your sessions blazing fast.</source>
          <target state="translated">さらに、パフォーマンスが唯一の関心事である場合は、&lt;a href=&quot;http://eddmann.com/posts/storing-php-sessions-file-caches-in-memory-using-tmpfs/&quot;&gt;tmpfs&lt;/a&gt;（警告：外部リソース）の使用を検討することをお勧めします。これにより、セッションが高速になります。</target>
        </trans-unit>
        <trans-unit id="809e025c22298ab8ebc37620d40b6f6b2d010175" translate="yes" xml:space="preserve">
          <source>In addition, if performance is your only concern, you may want to look into using &lt;a href=&quot;https://eddmann.com/posts/storing-php-sessions-file-caches-in-memory-using-tmpfs/&quot;&gt;tmpfs&lt;/a&gt;, (warning: external resource), which can make your sessions blazing fast.</source>
          <target state="translated">さらに、パフォーマンスが唯一の懸念事項である場合は、&lt;a href=&quot;https://eddmann.com/posts/storing-php-sessions-file-caches-in-memory-using-tmpfs/&quot;&gt;tmpfs&lt;/a&gt;（警告：外部リソース）の使用を検討することをお勧めします。これにより、セッションが高速になります。</target>
        </trans-unit>
        <trans-unit id="0cd4424b57219982530599c4ac33b1edb43c002e" translate="yes" xml:space="preserve">
          <source>In addition, the Response class allows you to work the HTTP cache layer for the best performance.</source>
          <target state="translated">また、レスポンスクラスでは、最高のパフォーマンスを得るためにHTTPキャッシュ層を動作させることができます。</target>
        </trans-unit>
        <trans-unit id="3c4a0173e428d1272515b49ae6cc5374ae9d8e05" translate="yes" xml:space="preserve">
          <source>In addition, the benchmark is always started the moment the framework is invoked, and ended by the output class right before sending the final view to the browser, enabling a very accurate timing of the entire system execution to be shown.</source>
          <target state="translated">また、ベンチマークは常にフレームワークが起動された瞬間に開始され、最終的なビューをブラウザに送信する直前に出力クラスで終了するため、システム全体の実行タイミングを非常に正確に示すことができます。</target>
        </trans-unit>
        <trans-unit id="976258b6459ae608db494c89052ace41d0a34a3b" translate="yes" xml:space="preserve">
          <source>In addition, there are a few utility methods for retrieving information from either $_GET or $_POST, while maintaining the ability to control the order you look for it:</source>
          <target state="translated">さらに、$_GET や $_POST のいずれかから情報を取得するためのいくつかのユーティリティーな方法がありますが、 探す順番を制御する機能は維持しています。</target>
        </trans-unit>
        <trans-unit id="492d9b60c64fae1231e3ed88021404d646be8025" translate="yes" xml:space="preserve">
          <source>In addition, you can walk forward/backwards/first/last through your results using these variations:</source>
          <target state="translated">さらに、これらのバリエーションを使用して、結果を前/後ろ/最初/最後まで歩くことができます。</target>
        </trans-unit>
        <trans-unit id="b581e2eb41cdb5b05f7d50002b98150358299d77" translate="yes" xml:space="preserve">
          <source>In addition, you may also create and use &lt;a href=&quot;#custom-drivers&quot;&gt;Custom Drivers&lt;/a&gt;, if the ones provided by default don&amp;rsquo;t satisfy your use case.</source>
          <target state="translated">さらに、デフォルトで提供されている&lt;a href=&quot;#custom-drivers&quot;&gt;ドライバーが&lt;/a&gt;ユースケースを満たさない場合は、カスタムドライバーを作成して使用することもできます。</target>
        </trans-unit>
        <trans-unit id="d435caf85fcb27014eb1e46896fe8e49788d5653" translate="yes" xml:space="preserve">
          <source>In addition, you may create your own, custom session drivers based on other kinds of storage, while still taking advantage of the features of the Session class.</source>
          <target state="translated">さらに、セッションクラスの機能を利用しながら、他の種類のストレージをベースにした独自のカスタムセッションドライバを作成することができます。</target>
        </trans-unit>
        <trans-unit id="532908ebbd6330cc2f83b99d01a4a7b64ed2e7ad" translate="yes" xml:space="preserve">
          <source>In all the above, the latest version of a repository can be downloaded by selecting the &amp;ldquo;releases&amp;rdquo; link in the secondary navbar inside the &amp;ldquo;Code&amp;rdquo; tab of its Github repository page. The current (in development) version of each can be cloned or downloaded by selecting the &amp;ldquo;Clone or download&amp;rdquo; dropdown button on the right-hand side if the repository homepage.</source>
          <target state="translated">上記のすべてにおいて、リポジトリの最新バージョンは、Githubリポジトリページの[コード]タブ内のセカンダリナビゲーションバーにある[リリース]リンクを選択することでダウンロードできます。それぞれの現在の（開発中の）バージョンは、リポジトリのホームページの場合、右側にある[クローンまたはダウンロード]ドロップダウンボタンを選択することで、クローンまたはダウンロードできます。</target>
        </trans-unit>
        <trans-unit id="d80702da00124ddf66c3564cb6aec690f943b188" translate="yes" xml:space="preserve">
          <source>In case it isn&amp;rsquo;t clear from the above table, Blowfish, CAST5 and RC4 support variable length keys. That is, any number in the shown ranges is valid, although in bit terms that only happens in 8-bit increments.</source>
          <target state="translated">上記の表から明らかでない場合、Blowfish、CAST5、およびRC4は可変長キーをサポートします。つまり、ビットの用語では8ビットの増分でのみ発生しますが、表示されている範囲の任意の数値が有効です。</target>
        </trans-unit>
        <trans-unit id="59cab91003f2c78c0d0f27fa2989153bf01e214e" translate="yes" xml:space="preserve">
          <source>In controller:</source>
          <target state="translated">コントローラーで</target>
        </trans-unit>
        <trans-unit id="48a472865bf7d6f47ad20f5fffa2b50a0c217653" translate="yes" xml:space="preserve">
          <source>In each environment, place the &lt;strong&gt;.env&lt;/strong&gt; file in the project&amp;rsquo;s root folder. For most setups, this will be the same level as the &lt;code&gt;system&lt;/code&gt; and &lt;code&gt;app&lt;/code&gt; directories.</source>
          <target state="translated">各環境で、&lt;strong&gt;.env&lt;/strong&gt;ファイルをプロジェクトのルートフォルダーに配置します。ほとんどのセットアップでは、これは &lt;code&gt;system&lt;/code&gt; および &lt;code&gt;app&lt;/code&gt; ディレクトリと同じレベルになります。</target>
        </trans-unit>
        <trans-unit id="7cdef9bc65e0abce9e8f473c52a9d1ff6df2fc1e" translate="yes" xml:space="preserve">
          <source>In general, code should be commented prolifically. It not only helps describe the flow and intent of the code for less experienced programmers, but can prove invaluable when returning to your own code months down the line. There is not a required format for comments, but the following are recommended.</source>
          <target state="translated">一般的に、コードには積極的にコメントをつけるべきです。コメントは、経験の浅いプログラマーにとってコードの流れや意図を説明するのに役立つだけでなく、数ヶ月後に自分のコードに戻ってきたときに、非常に貴重なものであることを証明することができます。コメントに必須の形式はありませんが、以下のような形式を推奨します。</target>
        </trans-unit>
        <trans-unit id="242fbb9100d35947f33d496e3c0c9f0e7989fe7e" translate="yes" xml:space="preserve">
          <source>In general, parenthesis and brackets should not use any additional spaces. The exception is that a space should always follow PHP control structures that accept arguments with parenthesis (declare, do-while, elseif, for, foreach, if, switch, while), to help distinguish them from functions and increase readability.</source>
          <target state="translated">一般的に、括弧や括弧にはスペースを追加してはいけません。例外は、括弧付きの引数を受け入れる PHP の制御構造 (declare,do-while,elseif,for,foreach,if,switch,while)には常にスペースを使用しなければならないということです。</target>
        </trans-unit>
        <trans-unit id="50634ddda5b00bfcf9b594992add4923966bcd86" translate="yes" xml:space="preserve">
          <source>In many databases it is advisable to protect table and field names - for example with backticks in MySQL. &lt;strong&gt;Query Builder queries are automatically protected&lt;/strong&gt;, however if you need to manually protect an identifier you can use:</source>
          <target state="translated">多くのデータベースでは、テーブルとフィールド名を保護することをお勧めします-たとえば、MySQLのバックティックを使用します。&lt;strong&gt;クエリビルダークエリは自動的に保護さ&lt;/strong&gt;れますが、識別子を手動で保護する必要がある場合は、次を使用できます。</target>
        </trans-unit>
        <trans-unit id="f9958aed62eb8668d5f92744eb8b866144d7b279" translate="yes" xml:space="preserve">
          <source>In many databases, it is advisable to protect table and field names - for example with backticks in MySQL. &lt;strong&gt;Query Builder queries are automatically protected&lt;/strong&gt;, but if you need to manually protect an identifier you can use:</source>
          <target state="translated">多くのデータベースでは、たとえばMySQLのバッククォートを使用して、テーブル名とフィールド名を保護することをお勧めします。&lt;strong&gt;クエリビルダーのクエリは自動的に保護さ&lt;/strong&gt;れますが、識別子を手動で保護する必要がある場合は、次のものを使用できます。</target>
        </trans-unit>
        <trans-unit id="b7ac6ab4a9b024810e0a850d70775f07d6ff3686" translate="yes" xml:space="preserve">
          <source>In most cases, you will be using the Pager library in order to paginate results that you retrieve from the database. When using the &lt;a href=&quot;../models/model&quot;&gt;Model&lt;/a&gt; class, you can use its built-in &lt;code&gt;paginate()&lt;/code&gt; method to automatically retrieve the current batch of results, as well as set up the Pager library so it&amp;rsquo;s ready to use in your controllers. It even reads the current page it should display from the current URL via a &lt;code&gt;page=X&lt;/code&gt; query variable.</source>
          <target state="translated">ほとんどの場合、データベースから取得した結果をページ分割するために、Pagerライブラリを使用します。使用するときは&lt;a href=&quot;../models/model&quot;&gt;モデル&lt;/a&gt;クラスを、あなたは、内蔵で使用できる &lt;code&gt;paginate()&lt;/code&gt; それはあなたのコントローラで使用する準備ができていますので、自動的にポケットベルライブラリまで現在の結果のバッチだけでなく、セットを取得する方法を。また、 &lt;code&gt;page=X&lt;/code&gt; クエリ変数を介して、現在のURLから表示する必要のある現在のページを読み取ります。</target>
        </trans-unit>
        <trans-unit id="e1ccba208c10cbaa2e0af77ad689cf36dbc9550b" translate="yes" xml:space="preserve">
          <source>In nearly all cases, updating the cart will be something the user does via the &amp;ldquo;view cart&amp;rdquo; page, so as a developer, it is unlikely that you will ever have to concern yourself with the &amp;ldquo;row ID&amp;rdquo;, other than making sure your &amp;ldquo;view cart&amp;rdquo; page contains this information in a hidden form field, and making sure it gets passed to the &lt;code&gt;update()&lt;/code&gt; method when the update form is submitted. Please examine the construction of the &amp;ldquo;view cart&amp;rdquo; page above for more information.</source>
          <target state="translated">ほとんどすべての場合、カートの更新はユーザーが「カートの表示」ページを介して行うものであるため、開発者として、「行ID」を確認する以外に、「行ID」を気にする必要はほとんどありません。 「カートを表示」ページの非表示のフォームフィールドにこの情報が含まれており、更新フォームが送信されたときに &lt;code&gt;update()&lt;/code&gt; メソッドに渡されることを確認します。詳細については、上の「カートの表示」ページの構成を調べてください。</target>
        </trans-unit>
        <trans-unit id="bc230e107ef92a380e492dcab63f433f5b46a9e4" translate="yes" xml:space="preserve">
          <source>In order for the Profiler to compile and display your benchmark data you must name your mark points using specific syntax.</source>
          <target state="translated">プロファイラがベンチマーク・データをコンパイルして表示するには、特定の構文を使用してマーク・ポイントに名前を付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="01b12010c126e02625a559d4424949d167724a6b" translate="yes" xml:space="preserve">
          <source>In order for the captcha function to prevent someone from submitting, you will need to add the information returned from &lt;code&gt;create_captcha()&lt;/code&gt; to your database. Then, when the data from the form is submitted by the user you will need to verify that the data exists in the database and has not expired.</source>
          <target state="translated">captcha関数で誰かが送信できないようにするには、 &lt;code&gt;create_captcha()&lt;/code&gt; から返された情報をデータベースに追加する必要があります。次に、フォームからのデータがユーザーによって送信されたときに、データがデータベースに存在し、期限が切れていないことを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="844a5cf2b9f7452ae04f106d9d615a0290f84385" translate="yes" xml:space="preserve">
          <source>In order for the image class to be allowed to do any processing, the folder containing the image files must have write permissions.</source>
          <target state="translated">画像クラスが何らかの処理を行うことを許可されるためには、画像ファイルを含むフォルダに書き込み権限が必要です。</target>
        </trans-unit>
        <trans-unit id="c30fb50dd5f280d09756ca3530321d84dfa4058f" translate="yes" xml:space="preserve">
          <source>In order for the image class to be allowed to do any processing, the image file must have &amp;ldquo;write&amp;rdquo; file permissions For example, 777.</source>
          <target state="translated">画像クラスが任意の処理を実行できるようにするには、画像ファイルに777などの「書き込み」ファイル権限が必要です。</target>
        </trans-unit>
        <trans-unit id="c398eabf1b69b1a562c1d87eeb95dfc1a42914c2" translate="yes" xml:space="preserve">
          <source>In order for the log file to actually be written, the &lt;em&gt;logs/&lt;/em&gt; directory must be writable. In addition, you must set the &amp;ldquo;threshold&amp;rdquo; for logging in &lt;em&gt;application/config/config.php&lt;/em&gt;. You might, for example, only want error messages to be logged, and not the other two types. If you set it to zero logging will be disabled.</source>
          <target state="translated">ログファイルが実際に書き込まれるためには、&lt;em&gt;logs /&lt;/em&gt;ディレクトリが書き込み可能である必要があります。さらに、&lt;em&gt;application / config / config.phpに&lt;/em&gt;ログインするための「しきい値」を設定する必要があります。たとえば、他の2つのタイプではなく、エラーメッセージのみをログに記録したい場合があります。ゼロに設定すると、ロギングは無効になります。</target>
        </trans-unit>
        <trans-unit id="76df0027cbcfa6b98c541123c208ff333a6de832" translate="yes" xml:space="preserve">
          <source>In order for this function to work it must be used before anything is outputted to the browser since it utilizes server headers.</source>
          <target state="translated">この関数が動作するためには、サーバヘッダを利用するため、ブラウザに何かを出力する前に使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="a8dc6f8e6fb9a09353e9d3663d0a1ced20c0d1c6" translate="yes" xml:space="preserve">
          <source>In order for this function to write data to a file, its permissions must be set such that it is writable. If the file does not already exist, then the directory containing it must be writable.</source>
          <target state="translated">この関数がファイルにデータを書き込むためには、そのファイルのパーミッションが書き込み可能に設定されている必要があります。ファイルがまだ存在しない場合は、そのファイルを含むディレクトリが書き込み可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="b81060b34b990dd615cce085bcba90ed4f5dac45" translate="yes" xml:space="preserve">
          <source>In order to accept Trackbacks you must display a Trackback URL next to each one of your weblog entries. This will be the URL that people will use to send you Trackbacks (we will refer to this as your &amp;ldquo;Ping URL&amp;rdquo;).</source>
          <target state="translated">トラックバックを受け入れるには、各ブログエントリの横にトラックバックURLを表示する必要があります。これは、人々がトラックバックを送信するために使用するURLです（これを「Ping URL」と呼びます）。</target>
        </trans-unit>
        <trans-unit id="f783196de2d835ade2e43c921b4c28b5f28c0f6d" translate="yes" xml:space="preserve">
          <source>In order to act as a &amp;ldquo;registrar&amp;rdquo; the classes so identified must have a static function named the same as the configuration class, and it should return an associative array of property settings.</source>
          <target state="translated">「レジストラ」として機能するためには、そのように識別されたクラスは、構成クラスと同じ名前の静的関数を持っている必要があり、プロパティ設定の連想配列を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="6f10a0ab3e5ff3bd9c0704571d9be715857612a5" translate="yes" xml:space="preserve">
          <source>In order to call a specific group, you will pass its name to the &lt;code&gt;run()&lt;/code&gt; method. For example, to call the signup rule you will do this:</source>
          <target state="translated">特定のグループを呼び出すには、その名前を &lt;code&gt;run()&lt;/code&gt; メソッドに渡します。たとえば、サインアップルールを呼び出すには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="572f62cd72002154cccbac5027b5b8facdff6e85" translate="yes" xml:space="preserve">
          <source>In order to fetch a line from a particular file you must load the file first. Loading a language file is done with the following code:</source>
          <target state="translated">特定のファイルから行を取得するには、まずファイルをロードしなければなりません。言語ファイルの読み込みは以下のコードで行います。</target>
        </trans-unit>
        <trans-unit id="d71c3d7b6252fbc639ec1679a007a6d5c8cb7cfd" translate="yes" xml:space="preserve">
          <source>In order to get the most out of CodeIgniter, you need to have a basic understanding of how HTTP requests and responses work. Since this is what you work with while developing web applications, understanding the concepts behind HTTP is a &lt;strong&gt;must&lt;/strong&gt; for all developers that want to be successful.</source>
          <target state="translated">CodeIgniterを最大限に活用するには、HTTPリクエストとレスポンスがどのように機能するかについての基本的な理解が必要です。これはWebアプリケーションの開発中に使用するものであるため、HTTPの背後にある概念を理解することは、成功したいすべての開発者にとって&lt;strong&gt;必須&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="9993db2742b3aaa2ee6b708d011b040da3012817" translate="yes" xml:space="preserve">
          <source>In order to help out, CodeIgniter uses a series of function, method, class and variable names in its operation. Because of this, some names cannot be used by a developer. Following is a list of reserved names that cannot be used.</source>
          <target state="translated">CodeIgniterでは、それを助けるために、関数名、メソッド名、クラス名、変数名を一連の操作で使用しています。そのため、開発者が使用できない名前もあります。以下は、使用できない予約名のリストです。</target>
        </trans-unit>
        <trans-unit id="79bb724f02638119bbe24d5dfe796c2327d9b113" translate="yes" xml:space="preserve">
          <source>In order to implement form validation you&amp;rsquo;ll need three things:</source>
          <target state="translated">フォーム検証を実装するには、次の3つが必要です。</target>
        </trans-unit>
        <trans-unit id="95860db938d3919eb2ade80e744190ab3980d9ab" translate="yes" xml:space="preserve">
          <source>In order to initialize the Forge class, your database driver must already be running, since the forge class relies on it.</source>
          <target state="translated">Forge クラスを初期化するためには、データベースドライバがすでに実行されている必要があります。</target>
        </trans-unit>
        <trans-unit id="03179a18ba52d77fa333ef687f94e78f9848a9c9" translate="yes" xml:space="preserve">
          <source>In order to initialize the Utility class, your database driver must already be running, since the utilities class relies on it.</source>
          <target state="translated">ユーティリティクラスを初期化するためには、ユーティリティクラスがそれに依存しているため、データベースドライバがすでに実行されている必要があります。</target>
        </trans-unit>
        <trans-unit id="adf7ee846331d544d1c43b60b08e4b43f60e7f58" translate="yes" xml:space="preserve">
          <source>In order to load those pages, you&amp;rsquo;ll have to check whether the requested page actually exists. This will be the body of the &lt;code&gt;view()&lt;/code&gt; method in the &lt;code&gt;Pages&lt;/code&gt; controller created above:</source>
          <target state="translated">これらのページをロードするには、要求されたページが実際に存在するかどうかを確認する必要があります。これは、上記で作成した &lt;code&gt;Pages&lt;/code&gt; コントローラーの &lt;code&gt;view()&lt;/code&gt; メソッドの本体になります。</target>
        </trans-unit>
        <trans-unit id="48e4674ff56f25d6125bb91b699b64a704f11401" translate="yes" xml:space="preserve">
          <source>In order to load those pages, you&amp;rsquo;ll have to check whether the requested page actually exists:</source>
          <target state="translated">これらのページをロードするには、リクエストされたページが実際に存在するかどうかを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="8a4c82565fd04f00fb822994d0a5110489375e16" translate="yes" xml:space="preserve">
          <source>In order to maintain compatibility on case-sensitive file systems, the Driver_name directory must be named in the format returned by &lt;code&gt;ucfirst()&lt;/code&gt;.</source>
          <target state="translated">大文字と小文字を区別するファイルシステムでの互換性を維持するために、Driver_nameディレクトリは &lt;code&gt;ucfirst()&lt;/code&gt; が返す形式で名前を付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="97fc22c170f7fff66b3a58c6d9d1c802b00aaa34" translate="yes" xml:space="preserve">
          <source>In order to organize your rules into &amp;ldquo;sets&amp;rdquo; requires that you place them into &amp;ldquo;sub arrays&amp;rdquo;. Consider the following example, showing two sets of rules. We&amp;rsquo;ve arbitrarily called these two rules &amp;ldquo;signup&amp;rdquo; and &amp;ldquo;email&amp;rdquo;. You can name your rules anything you want:</source>
          <target state="translated">ルールを「セット」に編成するには、ルールを「サブ配列」に配置する必要があります。次の例で、2つのルールセットを示します。これら2つのルールを「サインアップ」と「メール」と呼んでいます。ルールには任意の名前を付けることができます。</target>
        </trans-unit>
        <trans-unit id="2aa9eb02e2c81f88a063bb0a61094dfc58eb41dd" translate="yes" xml:space="preserve">
          <source>In order to take advantage of the additional tools provided, your tests must extend &lt;code&gt;CIUnitTestCase&lt;/code&gt;. All tests are expected to be located in the &lt;strong&gt;tests/app&lt;/strong&gt; directory by default.</source>
          <target state="translated">提供されている追加のツールを利用するには、テストで &lt;code&gt;CIUnitTestCase&lt;/code&gt; を拡張する必要があります。すべてのテストは、デフォルトで&lt;strong&gt;tests / app&lt;/strong&gt;ディレクトリに配置されることが期待されています。</target>
        </trans-unit>
        <trans-unit id="04ab03494e9e24ce471d990853db6244fbde4b25" translate="yes" xml:space="preserve">
          <source>In order to take advantage of the built-in database tools that CodeIgniter provides for testing, your tests must extend &lt;code&gt;CIDatabaseTestCase&lt;/code&gt;:</source>
          <target state="translated">CodeIgniterがテスト用に提供する組み込みのデータベースツールを利用するには、テストで &lt;code&gt;CIDatabaseTestCase&lt;/code&gt; を拡張する必要があります。</target>
        </trans-unit>
        <trans-unit id="cbb85b1b5b0b952e69e01ab11d19201e4c4079a2" translate="yes" xml:space="preserve">
          <source>In order to use the &amp;lsquo;DatabaseHandler&amp;rsquo; session driver, you must also create this table that we already mentioned and then set it as your &lt;code&gt;$sessionSavePath&lt;/code&gt; value. For example, if you would like to use &amp;lsquo;ci_sessions&amp;rsquo; as your table name, you would do this:</source>
          <target state="translated">'DatabaseHandler'セッションドライバーを使用するには、すでに説明したこのテーブルも作成し、それを &lt;code&gt;$sessionSavePath&lt;/code&gt; 値として設定する必要があります。たとえば、テーブル名として「ci_sessions」を使用する場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="4b6982f5f262a6b3f26b7c3695604256f2b1d771" translate="yes" xml:space="preserve">
          <source>In order to use the &amp;lsquo;database&amp;rsquo; session driver, you must also create this table that we already mentioned and then set it as your &lt;code&gt;$config['sess_save_path']&lt;/code&gt; value. For example, if you would like to use &amp;lsquo;ci_sessions&amp;rsquo; as your table name, you would do this:</source>
          <target state="translated">'データベース'セッションドライバーを使用するには、既に説明したこのテーブルを作成して、 &lt;code&gt;$config['sess_save_path']&lt;/code&gt; 値として設定する必要があります。たとえば、テーブル名として「ci_sessions」を使用する場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="0541ca32dc7aa92d9773390c8a2395e1a6508a7b" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;a href=&quot;../libraries/curlrequest&quot;&gt;CURLRequest&lt;/a&gt;, you will need &lt;a href=&quot;https://www.php.net/manual/en/curl.requirements.php&quot;&gt;libcurl&lt;/a&gt; installed.</source>
          <target state="translated">&lt;a href=&quot;../libraries/curlrequest&quot;&gt;CURLRequest&lt;/a&gt;を使用するには、&lt;a href=&quot;https://www.php.net/manual/en/curl.requirements.php&quot;&gt;libcurlを&lt;/a&gt;インストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="28f92a5f5e2598ca36555472becde8aa662153e4" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;printDebugger()&lt;/code&gt; method, you need to avoid clearing the email parameters.</source>
          <target state="translated">&lt;code&gt;printDebugger()&lt;/code&gt; メソッドを使用するには、電子メールパラメータをクリアしないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="c2565ac24b107f77faa9b3a972c7bda4dc158ab5" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;print_debugger()&lt;/code&gt; method, you need to avoid clearing the email parameters.</source>
          <target state="translated">&lt;code&gt;print_debugger()&lt;/code&gt; メソッドを使用するには、Eメールのパラメーターを消去しないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="05053be87a9bb781fd03d3a487d098057a73f3a2" translate="yes" xml:space="preserve">
          <source>In other words, if an XML-RPC Client sends a request for the new_post method, your server will load the My_blog class and call the new_entry function. If the request is for the update_post method, your server will load the My_blog class and call the &lt;code&gt;update_entry()&lt;/code&gt; method.</source>
          <target state="translated">つまり、XML-RPCクライアントがnew_postメソッドのリクエストを送信すると、サーバーはMy_blogクラスをロードしてnew_entry関数を呼び出します。リクエストがupdate_postメソッドに対するものである場合、サーバーはMy_blogクラスをロードし、 &lt;code&gt;update_entry()&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="90abf579405cd4058b5d0b68027900ad21d8aa97" translate="yes" xml:space="preserve">
          <source>In our Trackback receiving code above, if the third segment is missing, we will issue an error. Without a valid entry ID, there&amp;rsquo;s no reason to continue.</source>
          <target state="translated">上記のトラックバック受信コードで、3番目のセグメントが欠落している場合、エラーが発行されます。有効なエントリIDがなければ、続行する理由はありません。</target>
        </trans-unit>
        <trans-unit id="fbb4934ef06339777be78160da0e3ed458e17ec7" translate="yes" xml:space="preserve">
          <source>In previous CodeIgniter versions, a different, &amp;ldquo;cookie driver&amp;rdquo; was the only option and we have received negative feedback on not providing that option. While we do listen to feedback from the community, we want to warn you that it was dropped because it is &lt;strong&gt;unsafe&lt;/strong&gt; and we advise you NOT to try to replicate it via a custom driver.</source>
          <target state="translated">以前のCodeIgniterバージョンでは、別の「Cookieドライバー」が唯一のオプションであり、そのオプションを提供しないことについて否定的なフィードバックを受けました。コミュニティからのフィードバックには耳を傾けていますが、&lt;strong&gt;安全&lt;/strong&gt;では&lt;strong&gt;ない&lt;/strong&gt;ため削除されたことを警告したいと思います。カスタムドライバを介してそれを複製しようとしないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ad01dacd4bd45a1c366f674d7f153632ab4f701a" translate="yes" xml:space="preserve">
          <source>In previous CodeIgniter versions, the session data array included 4 items by default: &amp;lsquo;session_id&amp;rsquo;, &amp;lsquo;ip_address&amp;rsquo;, &amp;lsquo;user_agent&amp;rsquo;, &amp;lsquo;last_activity&amp;rsquo;.</source>
          <target state="translated">以前のCodeIgniterバージョンでは、セッションデータ配列にはデフォルトで4つのアイテムが含まれていました： 'session_id'、 'ip_address'、 'user_agent'、 'last_activity'。</target>
        </trans-unit>
        <trans-unit id="d0071c6ee3897f7ea33ae892b3baa518e7c8e97f" translate="yes" xml:space="preserve">
          <source>In previous versions, regular session data in CodeIgniter was referred to as &amp;lsquo;userdata&amp;rsquo;. Have this in mind if that term is used elsewhere in the manual. Most of it is written to explain how the custom &amp;lsquo;userdata&amp;rsquo; methods work.</source>
          <target state="translated">以前のバージョンでは、CodeIgniterの通常のセッションデータは「userdata」と呼ばれていました。この用語がマニュアルの他の場所で使用されている場合は、このことを覚えておいてください。そのほとんどは、カスタムの「userdata」メソッドがどのように機能するかを説明するために書かれています。</target>
        </trans-unit>
        <trans-unit id="0b4d77091e4390375ef7bdfbd30ad4ab8386cad8" translate="yes" xml:space="preserve">
          <source>In previous versions, the &lt;code&gt;unset_userdata()&lt;/code&gt; method used to accept an associative array of &lt;code&gt;key =&amp;gt; 'dummy value'&lt;/code&gt; pairs. This is no longer supported.</source>
          <target state="translated">以前のバージョンでは、 &lt;code&gt;unset_userdata()&lt;/code&gt; メソッドは、 &lt;code&gt;key =&amp;gt; 'dummy value'&lt;/code&gt; ペアの連想配列を受け入れるために使用されていました。これはサポートされなくなりました。</target>
        </trans-unit>
        <trans-unit id="022ec831745294e72e65b38ba7b333276df78085" translate="yes" xml:space="preserve">
          <source>In production environments, it is typically desirable to &amp;ldquo;disable&amp;rdquo; PHP&amp;rsquo;s error reporting by setting the internal &lt;em&gt;display_errors&lt;/em&gt; flag to a value of 0. This disables native PHP errors from being rendered as output, which may potentially contain sensitive information.</source>
          <target state="translated">本番環境では、通常、内部の&lt;em&gt;display_errors&lt;/em&gt;フラグの値を0に設定して、PHPのエラーレポートを「無効」にすることが望ましいです。これにより、機密情報が含まれる可能性のあるネイティブPHPエラーが出力としてレンダリングされなくなります。</target>
        </trans-unit>
        <trans-unit id="8a53a42a5a53c2d1eb0479dbc4b6d496528e31bf" translate="yes" xml:space="preserve">
          <source>In some cases you may want certain methods hidden from public access. In order to achieve this, simply declare the method as being private or protected and it will not be served via a URL request. For example, if you were to have a method like this:</source>
          <target state="translated">場合によっては、特定のメソッドをパブリックアクセスから隠したいこともあるでしょう。これを実現するには、そのメソッドをプライベートまたは保護されたものと宣言するだけで、URLリクエストを介してそのメソッドが提供されることはありません。例えば、次のようなメソッドがあるとします。</target>
        </trans-unit>
        <trans-unit id="b1d4df55c95a33d1fea1de9e8972f874fa90f54e" translate="yes" xml:space="preserve">
          <source>In some cases you may want to develop classes that exist apart from your controllers but have the ability to utilize all of CodeIgniter&amp;rsquo;s resources. This is easily possible as you&amp;rsquo;ll see.</source>
          <target state="translated">場合によっては、コントローラーとは別に存在するが、CodeIgniterのすべてのリソースを利用できるクラスを開発したいことがあります。ご覧のとおり、これは簡単に可能です。</target>
        </trans-unit>
        <trans-unit id="dffcfa34c5c7cdf68b61163e9858bd84da883cc3" translate="yes" xml:space="preserve">
          <source>In some cases you might prefer to use query strings URLs:</source>
          <target state="translated">場合によっては、クエリ文字列のURLを使用したい場合もあるでしょう。</target>
        </trans-unit>
        <trans-unit id="96be98c3ca0ee6d0b9ded69f83e7c0276e05a0b0" translate="yes" xml:space="preserve">
          <source>In some cases, you may specify an array of files to upload:</source>
          <target state="translated">場合によっては、アップロードするファイルの配列を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="6f89f2482b75dbc324aefc5d00c99b8d0bc93afc" translate="yes" xml:space="preserve">
          <source>In some cases, you may want certain methods hidden from public access. To achieve this, simply declare the method as private or protected. That will prevent it from being served by a URL request. For example, if you were to define a method like this for the &lt;code&gt;Helloworld&lt;/code&gt; controller:</source>
          <target state="translated">場合によっては、特定のメソッドをパブリックアクセスから隠したいことがあります。これを実現するには、メソッドをプライベートまたは保護として宣言するだけです。これにより、URLリクエストによって処理されなくなります。たとえば、 &lt;code&gt;Helloworld&lt;/code&gt; コントローラーに対して次のようなメソッドを定義する場合：</target>
        </trans-unit>
        <trans-unit id="c2b1dee509a00d0d7e87298f2fd36dda5cac8638" translate="yes" xml:space="preserve">
          <source>In some clustered server environments, for example, caching may be detrimental since file-system operations are so intense. On single servers in shared environments, caching will probably be beneficial. Unfortunately there is no single answer to the question of whether you should cache your database. It really depends on your situation.</source>
          <target state="translated">例えば、クラスタ化されたサーバ環境では、ファイルシステムの操作が非常に激しいため、キャッシングが不利になることがあります。共有環境の単一サーバでは、キャッシュはおそらく有益なものになるでしょう。残念ながら、データベースをキャッシュすべきかどうかという質問に対する一つの答えはありません。それはあなたの状況によります。</target>
        </trans-unit>
        <trans-unit id="adfa2820dba3293f4a46b30b34a65f9557013f1a" translate="yes" xml:space="preserve">
          <source>In some instances, however, you may want to remap this relationship so that a different class/method can be called instead of the one corresponding to the URL.</source>
          <target state="translated">しかし、いくつかのインスタンスでは、URL に対応するクラス/メソッドの代わりに別のクラス/メソッドを呼び出すことができるように、このリレーションシップをリマップしたい場合があります。</target>
        </trans-unit>
        <trans-unit id="4726b4e7f2fcd43affc5a65e21780eaa6d341da9" translate="yes" xml:space="preserve">
          <source>In some instances, you will want the option to pass a setting to the class during instantiation. Since the services file is a very simple class, it is easy to make this work.</source>
          <target state="translated">いくつかのインスタンスでは、インスタンス化の際に設定をクラスに渡すオプションが必要になるでしょう。サービスファイルは非常にシンプルなクラスなので、これを実現するのは簡単です。</target>
        </trans-unit>
        <trans-unit id="ec6a62285f67e2d7161b800ebd3c834d396ca9bd" translate="yes" xml:space="preserve">
          <source>In summary:</source>
          <target state="translated">要約すると</target>
        </trans-unit>
        <trans-unit id="283d37f6394831c516b879a8b06f9884b1666120" translate="yes" xml:space="preserve">
          <source>In that directory, create two files named &lt;em&gt;home.php&lt;/em&gt; and &lt;em&gt;about.php&lt;/em&gt;. Within those files, type some text &amp;minus; anything you&amp;rsquo;d like &amp;minus; and save them. If you like to be particularly un-original, try &amp;ldquo;Hello World!&amp;rdquo;.</source>
          <target state="translated">そのディレクトリでは、という名前の2つのファイルを作成&lt;em&gt;home.php&lt;/em&gt;と&lt;em&gt;about.phpを&lt;/em&gt;。それらのファイル内で、テキストを入力し（必要なものは何でも）、それらを保存します。特に独創的でないことが好きな場合は、「Hello World！」を試してください。</target>
        </trans-unit>
        <trans-unit id="b62bc60ec6a6e3a686f29a44babff064e347f04f" translate="yes" xml:space="preserve">
          <source>In that directory, create two files named &lt;strong&gt;home.php&lt;/strong&gt; and &lt;strong&gt;about.php&lt;/strong&gt;. Within those files, type some text &amp;minus; anything you&amp;rsquo;d like &amp;minus; and save them. If you like to be particularly un-original, try &amp;ldquo;Hello World!&amp;rdquo;.</source>
          <target state="translated">そのディレクトリでは、という名前の2つのファイルを作成&lt;strong&gt;home.php&lt;/strong&gt;と&lt;strong&gt;about.phpを&lt;/strong&gt;。それらのファイル内に、テキスト（好きなもの）を入力して保存します。特にオリジナルではない場合は、「HelloWorld！」を試してください。</target>
        </trans-unit>
        <trans-unit id="207c94f0476b7737b26b1c804c9d4f4ee2dd9cfd" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;setPassword()&lt;/code&gt; method we ensure that the password is always hashed.</source>
          <target state="translated">&lt;code&gt;setPassword()&lt;/code&gt; メソッド私たちは、パスワードは必ずハッシュ化されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="d597bd91da2ff2888373dd4c85cb6e8a1480aa7e" translate="yes" xml:space="preserve">
          <source>In the Table of Contents you&amp;rsquo;ll find a list of all the available Helper Files. Browse each one to see what they do.</source>
          <target state="translated">目次には、利用可能なすべてのヘルパーファイルのリストがあります。それぞれを参照して、それらの機能を確認します。</target>
        </trans-unit>
        <trans-unit id="8bb759a9f6e3995cf3e905eae5b186a08d8b161d" translate="yes" xml:space="preserve">
          <source>In the Table of Contents, you&amp;rsquo;ll find a list of all the available &lt;a href=&quot;https://codeigniter.com/userguide4/helpers/index.html&quot;&gt;Helpers&lt;/a&gt;. Browse each one to see what they do.</source>
          <target state="translated">目次には、利用可能なすべての&lt;a href=&quot;https://codeigniter.com/userguide4/helpers/index.html&quot;&gt;ヘルパーの&lt;/a&gt;リストがあります。それぞれを参照して、その機能を確認してください。</target>
        </trans-unit>
        <trans-unit id="435e60e4363df7b8aaf65dd9869a173e103e02f0" translate="yes" xml:space="preserve">
          <source>In the above code we are using a &amp;ldquo;url helper&amp;rdquo;. You can find more information in the &lt;a href=&quot;../general/helpers&quot;&gt;Helpers Functions&lt;/a&gt; page.</source>
          <target state="translated">上記のコードでは、「URLヘルパー」を使用しています。詳細については、&lt;a href=&quot;../general/helpers&quot;&gt;ヘルパー関数の&lt;/a&gt;ページをご覧ください。</target>
        </trans-unit>
        <trans-unit id="5ae187067e00b60dfcf14bf761246cd6a31df976" translate="yes" xml:space="preserve">
          <source>In the above code you&amp;rsquo;ll notice a pair of variables: {blog_entries} data&amp;hellip; {/blog_entries}. In a case like this, the entire chunk of data between these pairs would be repeated multiple times, corresponding to the number of rows in the &amp;ldquo;blog_entries&amp;rdquo; element of the parameters array.</source>
          <target state="translated">上記のコードでは、{blog_entries} data&amp;hellip;{/ blog_entries}という変数のペアに気づくでしょう。このような場合、パラメーター配列の「blog_entries」要素の行数に対応して、これらのペア間のデータのチャンク全体が複数回繰り返されます。</target>
        </trans-unit>
        <trans-unit id="8e8baf59cca4860da6253ff1a374534685068014" translate="yes" xml:space="preserve">
          <source>In the above example the method name is &lt;code&gt;index()&lt;/code&gt;. The &amp;ldquo;index&amp;rdquo; method is always loaded by default if the &lt;strong&gt;second segment&lt;/strong&gt; of the URI is empty. Another way to show your &amp;ldquo;Hello World&amp;rdquo; message would be this:</source>
          <target state="translated">上記の例では、メソッド名は &lt;code&gt;index()&lt;/code&gt; です。URIの&lt;strong&gt;2番目のセグメント&lt;/strong&gt;が空の場合、「index」メソッドは常にデフォルトでロードされます。「Hello World」メッセージを表示する別の方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="86abfae1a81d0b3864952be978138cb7a2be0579" translate="yes" xml:space="preserve">
          <source>In the above example, CodeIgniter would attempt to find a controller named Blog.php and load it.</source>
          <target state="translated">上記の例では、CodeIgniterはBlog.phpという名前のコントローラを見つけてそれをロードしようとします。</target>
        </trans-unit>
        <trans-unit id="d1bc8994156efd219f9f450b590603afd91ddf1d" translate="yes" xml:space="preserve">
          <source>In the above example, CodeIgniter would attempt to find a controller named Helloworld.php and load it.</source>
          <target state="translated">上記の例では、CodeIgniter は Helloworld.php という名前のコントローラを見つけてそれをロードしようとします。</target>
        </trans-unit>
        <trans-unit id="175e2eeab1be267ca057cf80270d6f7144c26d1c" translate="yes" xml:space="preserve">
          <source>In the above example, a PUT request to URI &amp;ldquo;products&amp;rdquo; would call the &lt;code&gt;Product::insert()&lt;/code&gt; controller method.</source>
          <target state="translated">上記の例では、URI「products」へのPUTリクエストは &lt;code&gt;Product::insert()&lt;/code&gt; コントローラーメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="215b23533cd5595c15d5738a705b39ff0b1d9a16" translate="yes" xml:space="preserve">
          <source>In the above example, a URI similar to products/shirts/123 would instead call the &amp;ldquo;shirts&amp;rdquo; controller class and the &amp;ldquo;id_123&amp;rdquo; method.</source>
          <target state="translated">上記の例では、products / shirts / 123に類似したURIは、代わりに「shirts」コントローラークラスと「id_123」メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="ca202bbb7fa5009d4f306f3ab4d1f99846d41080" translate="yes" xml:space="preserve">
          <source>In the above example, a URI similar to products/shirts/123 would instead call the &lt;code&gt;show&lt;/code&gt; method of the &lt;code&gt;Products&lt;/code&gt; controller class, with the original first and second segment passed as arguments to it.</source>
          <target state="translated">上記の例では、products / shirts / 123に似たURIが代わりに &lt;code&gt;Products&lt;/code&gt; コントローラークラスの &lt;code&gt;show&lt;/code&gt; メソッドを呼び出し、元の1番目と2番目のセグメントが引数として渡されます。</target>
        </trans-unit>
        <trans-unit id="18aa8832f9be32e53067d7e928c6761b1630f044" translate="yes" xml:space="preserve">
          <source>In the above example, all cell data would be ran through PHP&amp;rsquo;s &lt;code&gt;htmlspecialchars()&lt;/code&gt; function, resulting in:</source>
          <target state="translated">上記の例では、すべてのセルデータがPHPの &lt;code&gt;htmlspecialchars()&lt;/code&gt; 関数を介して実行され、結果は次のようになります。</target>
        </trans-unit>
        <trans-unit id="eb199bb9f8a4b32a0950a7aac1a1e1804acbd634" translate="yes" xml:space="preserve">
          <source>In the above example, all cell data would be run through PHP&amp;rsquo;s &lt;code&gt;htmlspecialchars()&lt;/code&gt; function, resulting in:</source>
          <target state="translated">上記の例では、すべてのセルデータがPHPの &lt;code&gt;htmlspecialchars()&lt;/code&gt; 関数を介して実行され、次のようになります。</target>
        </trans-unit>
        <trans-unit id="34c2ae611d8626168344c37d50edb9ee77845eba" translate="yes" xml:space="preserve">
          <source>In the above example, any HTTP request other than those for existing directories and existing files is treated as a request for your index.php file.</source>
          <target state="translated">上記の例では、既存のディレクトリと既存のファイル以外のHTTPリクエストは、index.phpファイルへのリクエストとして扱われます。</target>
        </trans-unit>
        <trans-unit id="ac27161239319a3c38fa5b2cce8e86e102f0c4f9" translate="yes" xml:space="preserve">
          <source>In the above example, both methods &lt;code&gt;foo()&lt;/code&gt; and &lt;code&gt;bar()&lt;/code&gt; will work after you instantiate the Example class, without the need to call &lt;code&gt;get_instance()&lt;/code&gt; in each of them.</source>
          <target state="translated">上記の例では、Exampleクラスをインスタンス化した後、 &lt;code&gt;foo()&lt;/code&gt; と &lt;code&gt;bar()&lt;/code&gt; の両方のメソッドが機能します。それぞれの &lt;code&gt;get_instance()&lt;/code&gt; を呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="91078a91dc3244bd0e2dc764dbec689f8e61caae" translate="yes" xml:space="preserve">
          <source>In the above example, if the &lt;code&gt;$1&lt;/code&gt; placeholder contains a slash, it will still be split into multiple parameters when passed to &lt;code&gt;Auth::login()&lt;/code&gt;.</source>
          <target state="translated">上記の例では、 &lt;code&gt;$1&lt;/code&gt; プレースホルダーにスラッシュが含まれている場合でも、 &lt;code&gt;Auth::login()&lt;/code&gt; に渡されると、複数のパラメーターに分割されます。</target>
        </trans-unit>
        <trans-unit id="b4cf73fc223a2a5fec1189a9216e4037c1c5b243" translate="yes" xml:space="preserve">
          <source>In the above example, if we assume that the &lt;em&gt;title&lt;/em&gt; field is our primary key, then if a row containing &amp;lsquo;My title&amp;rsquo; as the &lt;em&gt;title&lt;/em&gt; value, that row will be deleted with our new row data replacing it.</source>
          <target state="translated">上記の例で、&lt;em&gt;title&lt;/em&gt;フィールドを主キーとすると、&lt;em&gt;タイトル&lt;/em&gt;値として「My title」を含む行が削除されると、その行は新しい行データに置き換えられて削除されます。</target>
        </trans-unit>
        <trans-unit id="e7b19f1730535b1b6d5396c23fb761a920b97e10" translate="yes" xml:space="preserve">
          <source>In the above example, photo.jpg will be placed into the &lt;em&gt;path/to/&lt;/em&gt; directory.</source>
          <target state="translated">上記の例では、photo.jpgは&lt;em&gt;path / to /&lt;/em&gt;ディレクトリに配置されます。</target>
        </trans-unit>
        <trans-unit id="2286c4112d26e74b8ec527eb167584d3b9c697a3" translate="yes" xml:space="preserve">
          <source>In the above example, the method name is &lt;code&gt;index()&lt;/code&gt;. The &amp;ldquo;index&amp;rdquo; method is always loaded by default if the &lt;strong&gt;second segment&lt;/strong&gt; of the URI is empty. Another way to show your &amp;ldquo;Hello World&amp;rdquo; message would be this:</source>
          <target state="translated">上記の例では、メソッド名は &lt;code&gt;index()&lt;/code&gt; です。URIの&lt;strong&gt;2番目のセグメント&lt;/strong&gt;が空の場合、「index」メソッドは常にデフォルトでロードされます。「HelloWorld」メッセージを表示する別の方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="180761e10a60153aa156ab4ffa6d2f90d387a360" translate="yes" xml:space="preserve">
          <source>In the above example, we are &amp;ldquo;trimming&amp;rdquo; the fields, checking for length where necessary and making sure that both password fields match.</source>
          <target state="translated">上記の例では、フィールドを「トリミング」して、必要に応じて長さをチェックし、両方のパスワードフィールドが一致することを確認しています。</target>
        </trans-unit>
        <trans-unit id="f099ed7a552db8391abeb56b01f6c85316c8885c" translate="yes" xml:space="preserve">
          <source>In the above example, we are decrypting a message that was encrypted using the Blowfish cipher in CBC mode and authenticated via a SHA-256 HMAC.</source>
          <target state="translated">上記の例では、CBC モードで Blowfish 暗号を使用して暗号化され、SHA-256 HMAC で認証されたメッセージを復号化しています。</target>
        </trans-unit>
        <trans-unit id="51ce662a3f57ffe4f1f202086c4e738bdb5da140" translate="yes" xml:space="preserve">
          <source>In the above example, we&amp;rsquo;re passing a custom database object as the first parameter and then tell it to return the dbforge object, instead of assigning it directly to &lt;code&gt;$this-&amp;gt;dbforge&lt;/code&gt;.</source>
          <target state="translated">上記の例では、カスタムデータベースオブジェクトを最初のパラメーターとして渡し、それを &lt;code&gt;$this-&amp;gt;dbforge&lt;/code&gt; 直接割り当てる代わりに、dbforgeオブジェクトを返すように指示しています。</target>
        </trans-unit>
        <trans-unit id="2eac2b281f2385c1c361f0da15d0190a4a262031" translate="yes" xml:space="preserve">
          <source>In the above example, we&amp;rsquo;re passing a custom database object as the first parameter and then tell it to return the dbutil object, instead of assigning it directly to &lt;code&gt;$this-&amp;gt;dbutil&lt;/code&gt;.</source>
          <target state="translated">上記の例では、カスタムデータベースオブジェクトを最初のパラメーターとして渡し、それを &lt;code&gt;$this-&amp;gt;dbutil&lt;/code&gt; 直接割り当てる代わりに、dbutilオブジェクトを返すように指示しています。</target>
        </trans-unit>
        <trans-unit id="f6ac52ab6bceeae55a3349b85000792178859506" translate="yes" xml:space="preserve">
          <source>In the above example, we&amp;rsquo;re passing the name of a different database group to connect to as the first parameter.</source>
          <target state="translated">上記の例では、接続する別のデータベースグループの名前を最初のパラメーターとして渡します。</target>
        </trans-unit>
        <trans-unit id="4e34e2cb53ddbb0085cbc3e5a61b4772c7d5c3c2" translate="yes" xml:space="preserve">
          <source>In the above example:</source>
          <target state="translated">上記の例では</target>
        </trans-unit>
        <trans-unit id="5fe518e86d5c636076c710e804564e2b6f3cb96b" translate="yes" xml:space="preserve">
          <source>In the background, conditionals are parsed using an &lt;strong&gt;eval()&lt;/strong&gt;, so you must ensure that you take care with the user data that is used within conditionals, or you could open your application up to security risks.</source>
          <target state="translated">バックグラウンドでは、条件は&lt;strong&gt;eval（）&lt;/strong&gt;を使用して解析されるため、条件内で使用されるユーザーデータに注意を払う必要があります。そうしないと、アプリケーションがセキュリティリスクにさらされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="546d593c797413f040f65bc013a0f8c7182b8324" translate="yes" xml:space="preserve">
          <source>In the callback rule example above, the error message was set by passing the name of the method (without the &amp;ldquo;callback_&amp;rdquo; prefix):</source>
          <target state="translated">上記のコールバックルールの例では、エラーメッセージはメソッド名（「callback_」プレフィックスなし）を渡すことで設定されています。</target>
        </trans-unit>
        <trans-unit id="9538a0ee7d33cf4b81169d4182f81fc09834b323" translate="yes" xml:space="preserve">
          <source>In the case that the first choice $hanlder is not available, this is the next cache handler to load. This is commonly the &lt;strong&gt;file&lt;/strong&gt; handler since the file system is always available, but may not fit more complex, multi-server setups.</source>
          <target state="translated">最初の選択肢$ hanlderが使用できない場合、これが次にロードするキャッシュハンドラーです。ファイルシステムは常に利用可能であるため、これは通常&lt;strong&gt;ファイル&lt;/strong&gt;ハンドラですが、より複雑なマルチサーバー設定には適合しない場合があります。</target>
        </trans-unit>
        <trans-unit id="2daeb4c2b1bc88ca00d3b0ee065641beb36c2aab" translate="yes" xml:space="preserve">
          <source>In the code presented for the standard pagination structure, the methods &lt;code&gt;getPrevious()&lt;/code&gt; and &lt;code&gt;getNext()&lt;/code&gt; are used to obtain the links to the previous and next pagination groups respectively.</source>
          <target state="translated">標準のページ付け構造に対して提示されたコードでは、メソッド &lt;code&gt;getPrevious()&lt;/code&gt; および &lt;code&gt;getNext()&lt;/code&gt; を使用して、それぞれ前のページ付けグループと次のページ付けグループへのリンクを取得します。</target>
        </trans-unit>
        <trans-unit id="9737e3678edffa5e28f111fda2f5422ab2b13462" translate="yes" xml:space="preserve">
          <source>In the example above, we are using &amp;ldquo;dynamically added data&amp;rdquo;, which you will see below.</source>
          <target state="translated">上記の例では、「動的に追加されたデータ」を使用しています。</target>
        </trans-unit>
        <trans-unit id="d443f2916d90f214aa3ac88fe322acdaa7d6f0d6" translate="yes" xml:space="preserve">
          <source>In the example above, we catch any type of Exception. If we only want to watch for specific types of exceptions, like a &lt;code&gt;UnknownFileException&lt;/code&gt;, we can specify that in the catch parameter. Any other exceptions that are thrown and are not child classes of the caught exception will be passed on to the error handler:</source>
          <target state="translated">上記の例では、あらゆるタイプの例外をキャッチします。 &lt;code&gt;UnknownFileException&lt;/code&gt; など、特定の種類の例外のみを監視する場合は、catchパラメーターで指定できます。スローされ、キャッチされた例外の子クラスではないその他の例外は、エラーハンドラーに渡されます。</target>
        </trans-unit>
        <trans-unit id="3b3af324441a9984a68abbb7a57f25d98eeaa5a2" translate="yes" xml:space="preserve">
          <source>In the first line, the &lt;code&gt;setSurroundCount()&lt;/code&gt; method specifies than we want to show two links to either side of the current page link. The only parameter that it accepts is the number of links to show.</source>
          <target state="translated">最初の行で、 &lt;code&gt;setSurroundCount()&lt;/code&gt; メソッドは、現在のページリンクのいずれかの側に2つのリンクを表示することを指定します。受け入れる唯一のパラメーターは、表示するリンクの数です。</target>
        </trans-unit>
        <trans-unit id="6895760ed0ad70b4d36ad8d1564e04b308fe446d" translate="yes" xml:space="preserve">
          <source>In the folder above your project root:</source>
          <target state="translated">プロジェクトのルートの上のフォルダにある</target>
        </trans-unit>
        <trans-unit id="edac8bda0d8e7ab50433ae33b639a6e5d712c26e" translate="yes" xml:space="preserve">
          <source>In the header template, the &lt;code&gt;$title&lt;/code&gt; variable was used to customize the page title. The value of title is defined in this method, but instead of assigning the value to a variable, it is assigned to the title element in the &lt;code&gt;$data&lt;/code&gt; array.</source>
          <target state="translated">ヘッダーテンプレートでは、 &lt;code&gt;$title&lt;/code&gt; 変数を使用してページタイトルをカスタマイズしました。タイトルの値はこのメソッドで定義されますが、値を変数に割り当てる代わりに、 &lt;code&gt;$data&lt;/code&gt; 配列のタイトル要素に割り当てられます。</target>
        </trans-unit>
        <trans-unit id="fcea2eac1e2fce15cd484de022a2a172a6a88fdf" translate="yes" xml:space="preserve">
          <source>In the last section, we went over some basic concepts of the framework by writing a class that includes static pages. We cleaned up the URI by adding custom routing rules. Now it&amp;rsquo;s time to introduce dynamic content and start using a database.</source>
          <target state="translated">前のセクションでは、静的ページを含むクラスを作成することにより、フレームワークのいくつかの基本的な概念について説明しました。カスタムルーティングルールを追加してURIをクリーンアップしました。動的コンテンツを導入し、データベースの使用を開始する時が来ました。</target>
        </trans-unit>
        <trans-unit id="ab219dcdd1d5f7726e3b8df45f9e33413ee760b7" translate="yes" xml:space="preserve">
          <source>In the last section, we went over some basic concepts of the framework by writing a class that references static pages. We cleaned up the URI by adding custom routing rules. Now it&amp;rsquo;s time to introduce dynamic content and start using a database.</source>
          <target state="translated">前のセクションでは、静的ページを参照するクラスを作成することにより、フレームワークのいくつかの基本的な概念について説明しました。カスタムルーティングルールを追加してURIをクリーンアップしました。次に、動的コンテンツを紹介し、データベースの使用を開始します。</target>
        </trans-unit>
        <trans-unit id="ef11fb3a374134e8bdcf891f8f9fc31ab0518267" translate="yes" xml:space="preserve">
          <source>In the library loading method you can dynamically pass data as an array via the second parameter and it will be passed to your class constructor:</source>
          <target state="translated">ライブラリの読み込みメソッドでは、2 番目のパラメータで動的に配列としてデータを渡すことができ、それはクラスのコンストラクタに渡されます。</target>
        </trans-unit>
        <trans-unit id="2eda103b1cb1daa4ca3d59d9b1fabcdeba16d5f7" translate="yes" xml:space="preserve">
          <source>In this case, both the client and the server can agree on formatting the data as JSON so &amp;lsquo;json&amp;rsquo; is returned from the negotiate method. By default, if no match is found, the first element in the $supported array would be returned. In some cases, though, you might need to enforce the format to be a strict match. If you pass &lt;code&gt;true&lt;/code&gt; as the final value, it will return an empty string if no match is found:</source>
          <target state="translated">この場合、クライアントとサーバーの両方がデータをJSONとしてフォーマットすることに同意できるため、negotiateメソッドから「json」が返されます。デフォルトでは、一致するものが見つからない場合、$ supported配列の最初の要素が返されます。ただし、場合によっては、形式を厳密に一致させる必要があります。最終値として &lt;code&gt;true&lt;/code&gt; を渡すと、一致するものが見つからない場合は空の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="a71a71d5e59b364edf4be3366f80ac4c70341a97" translate="yes" xml:space="preserve">
          <source>In this case, the returned array of files would be more like:</source>
          <target state="translated">この場合、返されるファイルの配列は次のようになります。</target>
        </trans-unit>
        <trans-unit id="9d4c2becef087de7480d52b0df48880e9df2d48e" translate="yes" xml:space="preserve">
          <source>In this case, you can specify the array to be validated:</source>
          <target state="translated">この場合、検証対象の配列を指定することができます。</target>
        </trans-unit>
        <trans-unit id="77651439059ed4b28ccca0e18ecb5fde2a340192" translate="yes" xml:space="preserve">
          <source>In this example a connection is opened to the FTP server, and a local file is read and uploaded in ASCII mode. The file permissions are set to 755.</source>
          <target state="translated">この例では、FTP サーバーへの接続が開かれ、ローカルファイルが ASCII モードで読み込まれてアップロードされます。ファイルのパーミッションは755に設定されています。</target>
        </trans-unit>
        <trans-unit id="4ddaf2c81bfd06dfd2739e989dfb1af750752b09" translate="yes" xml:space="preserve">
          <source>In this example a list of files is retrieved from the server.</source>
          <target state="translated">この例では、サーバーからファイルのリストを取得します。</target>
        </trans-unit>
        <trans-unit id="5a583f525886fafa75e02c38ced0bb056bdefbee" translate="yes" xml:space="preserve">
          <source>In this example a local directory is mirrored on the server.</source>
          <target state="translated">この例では、ローカルディレクトリがサーバー上にミラーリングされています。</target>
        </trans-unit>
        <trans-unit id="09dad77adae7a2f704944fbe12d7f30409da0dc1" translate="yes" xml:space="preserve">
          <source>In this example some simple code is placed in &lt;strong&gt;app/Controllers/Migrate.php&lt;/strong&gt; to update the schema:</source>
          <target state="translated">この例では、スキーマを更新するために、いくつかの簡単なコードが&lt;strong&gt;app / Controllers /Migrate.php&lt;/strong&gt;に配置されています。</target>
        </trans-unit>
        <trans-unit id="461c1dd279681d4bee8944a47445e8ddbad7f6bc" translate="yes" xml:space="preserve">
          <source>In this example some simple code is placed in &lt;strong&gt;application/controllers/Migrate.php&lt;/strong&gt; to update the schema.:</source>
          <target state="translated">この例では、スキーマを更新するために、いくつかの単純なコードが&lt;strong&gt;application / controllers / Migrate.php&lt;/strong&gt;に配置されています。</target>
        </trans-unit>
        <trans-unit id="d416b4133d589b2002d503dcbde940953452197a" translate="yes" xml:space="preserve">
          <source>In this example, &amp;lsquo;en&amp;rsquo; would be returned as the current language. If no match is found, it will return the first element in the $supported array, so that should always be the preferred language.</source>
          <target state="translated">この例では、「en」が現在の言語として返されます。一致するものが見つからない場合は、$ support配列の最初の要素が返されるため、常に優先言語である必要があります。</target>
        </trans-unit>
        <trans-unit id="891313c2fb1c62e39c64225903f6da1857e7b0c1" translate="yes" xml:space="preserve">
          <source>In this example, an HTTP status code of 201 is returned, with the generic status message, &amp;lsquo;Created&amp;rsquo;. Methods exist for the most common use cases:</source>
          <target state="translated">この例では、一般的なステータスメッセージ「Created」とともにHTTPステータスコード201が返されます。最も一般的なユースケースには、次のような方法があります。</target>
        </trans-unit>
        <trans-unit id="92250b7cedfccf6a33389247c6975eb6bd3f60a2" translate="yes" xml:space="preserve">
          <source>In this example, any HTTP request other than those for existing directories and existing files are treated as a request for your index.php file.</source>
          <target state="translated">この例では、既存のディレクトリと既存のファイル以外のHTTPリクエストは、index.phpファイルへのリクエストとして扱われます。</target>
        </trans-unit>
        <trans-unit id="078c8f54b85f4570915b083a3e9c59ff5fa4827f" translate="yes" xml:space="preserve">
          <source>In this example, if the user tried to visit &lt;code&gt;http://example.com/fr/books&lt;/code&gt;, then the locale would be set to &lt;code&gt;fr&lt;/code&gt;, assuming it was configured as a valid locale.</source>
          <target state="translated">この例では、ユーザーが &lt;code&gt;http://example.com/fr/books&lt;/code&gt; にアクセスしようとした場合、有効なロケールとして構成されていると想定して、ロケールは &lt;code&gt;fr&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="c11bc29d03c88074dfa649638c61d8d819e24c48" translate="yes" xml:space="preserve">
          <source>In this example, if the user were to visit example.com/products, and a Products controller existed, the &lt;code&gt;Products::listAll()&lt;/code&gt; method would be executed:</source>
          <target state="translated">この例では、ユーザーがexample.com/productsにアクセスし、Productsコントローラーが存在する場合、 &lt;code&gt;Products::listAll()&lt;/code&gt; メソッドが実行されます。</target>
        </trans-unit>
        <trans-unit id="8fb6b63914283ba04ad1c1331b39d1973d921af0" translate="yes" xml:space="preserve">
          <source>In this example, the array &lt;code&gt;['dual', 'noreturn']&lt;/code&gt; will be passed in &lt;code&gt;$arguments&lt;/code&gt; to the filter&amp;rsquo;s &lt;code&gt;before()&lt;/code&gt; and &lt;code&gt;after()&lt;/code&gt; implementation methods.</source>
          <target state="translated">この例では、配列 &lt;code&gt;['dual', 'noreturn']&lt;/code&gt; が &lt;code&gt;$arguments&lt;/code&gt; でフィルターの &lt;code&gt;before()&lt;/code&gt; および &lt;code&gt;after()&lt;/code&gt; 実装メソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="16fd1fa210786feaf26bf715f39cb56e552a98a6" translate="yes" xml:space="preserve">
          <source>In this example, the browser would prefer French, with a second choice of English. If your website supports English and German you would do something like:</source>
          <target state="translated">この例では、ブラウザはフランス語を好み、第二の選択肢として英語を選択します。ウェブサイトが英語とドイツ語に対応している場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="28412dbedd2c9347f27f7146f1f6eb6a94bdd2cd" translate="yes" xml:space="preserve">
          <source>In this example, the class &lt;code&gt;App\Libraries\Blog&lt;/code&gt; is loaded, and the method &lt;code&gt;recentPosts()&lt;/code&gt; is run. The method must return the generated HTML as a string. The method can be either a static method or not. Either way works.</source>
          <target state="translated">この例では、クラス &lt;code&gt;App\Libraries\Blog&lt;/code&gt; が読み込まれ、メソッド &lt;code&gt;recentPosts()&lt;/code&gt; が実行されます。このメソッドは、生成されたHTMLを文字列として返す必要があります。メソッドは静的メソッドでもそうでなくてもかまいません。どちらの方法でも機能します。</target>
        </trans-unit>
        <trans-unit id="7b7049ef176042b52baba04282f968c4791427d0" translate="yes" xml:space="preserve">
          <source>In this example, we first create a new instance of our UserModel. Then we populate the data to send to the view. The first element is the results from the database, &lt;strong&gt;users&lt;/strong&gt;, which is retrieved for the correct page, returning 10 users per page. The second item that must be sent to the view is the Pager instance itself. As a convenience, the Model will hold on to the instance it used and store it in the public class variable, &lt;strong&gt;$pager&lt;/strong&gt;. So, we grab that and assign it to the $pager variable in the view.</source>
          <target state="translated">この例では、最初にUserModelの新しいインスタンスを作成します。次に、ビューに送信するデータを入力します。最初の要素は、データベース&lt;strong&gt;users&lt;/strong&gt;からの結果であり、正しいページに対して取得され、ページごとに10ユーザーを返します。ビューに送信する必要がある2番目のアイテムは、Pagerインスタンス自体です。便宜上、モデルは使用したインスタンスを保持し、パブリッククラス変数&lt;strong&gt;$ pagerに&lt;/strong&gt;格納します。したがって、それを取得して、ビューの$ pager変数に割り当てます。</target>
        </trans-unit>
        <trans-unit id="c3854a473b1e55ce04d5fc759fbaf12af031361e" translate="yes" xml:space="preserve">
          <source>In this example, we&amp;rsquo;ve switched to using div tags.</source>
          <target state="translated">この例では、divタグの使用に切り替えました。</target>
        </trans-unit>
        <trans-unit id="b8b40ea88af81932a0f5eb366b379bde5c52fdf3" translate="yes" xml:space="preserve">
          <source>In this example, when the model sets the &lt;code&gt;full_name&lt;/code&gt; field on the User class, it actually assigns that value to the class&amp;rsquo; &lt;code&gt;$name&lt;/code&gt; property, so it can be set and retrieved through &lt;code&gt;$user-&amp;gt;name&lt;/code&gt;. The value will still be accessible through the original &lt;code&gt;$user-&amp;gt;full_name&lt;/code&gt;, also, as this is needed for the model to get the data back out and save it to the database. However, &lt;code&gt;unset&lt;/code&gt; and &lt;code&gt;isset&lt;/code&gt; only work on the mapped property, &lt;code&gt;$name&lt;/code&gt;, not on the original name, &lt;code&gt;full_name&lt;/code&gt;.</source>
          <target state="translated">この例では、モデルがUserクラスに &lt;code&gt;full_name&lt;/code&gt; フィールドを設定すると、実際にはその値がクラスの &lt;code&gt;$name&lt;/code&gt; プロパティに割り当てられるため、 &lt;code&gt;$user-&amp;gt;name&lt;/code&gt; 介して設定および取得できます。モデルがデータを取得してデータベースに保存するために必要なため、元の &lt;code&gt;$user-&amp;gt;full_name&lt;/code&gt; からも値にアクセスできます。ただし、 &lt;code&gt;unset&lt;/code&gt; と &lt;code&gt;isset&lt;/code&gt; は、マップされたプロパティ &lt;code&gt;$name&lt;/code&gt; でのみ機能し、元の名前 &lt;code&gt;full_name&lt;/code&gt; では機能しません。</target>
        </trans-unit>
        <trans-unit id="4e99143aeb772058a805c00d47b28a2a43c6f541" translate="yes" xml:space="preserve">
          <source>In this example, whenever the &lt;strong&gt;pre_controller&lt;/strong&gt; event is executed, an instance of &lt;code&gt;MyClass&lt;/code&gt; is created and the &lt;code&gt;MyFunction&lt;/code&gt; method is run. Note that the second parameter can be &lt;em&gt;any&lt;/em&gt; form of &lt;a href=&quot;https://www.php.net/manual/en/function.is-callable.php&quot;&gt;callable&lt;/a&gt; that PHP recognizes:</source>
          <target state="translated">この例では、&lt;strong&gt;pre_controller&lt;/strong&gt;イベントが実行されるたびに、 &lt;code&gt;MyClass&lt;/code&gt; のインスタンスが作成され、 &lt;code&gt;MyFunction&lt;/code&gt; メソッドが実行されます。2番目のパラメーターは、PHPが認識する&lt;em&gt;任意の&lt;/em&gt;形式の&lt;a href=&quot;https://www.php.net/manual/en/function.is-callable.php&quot;&gt;呼び出し可能で&lt;/a&gt;あることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2bb2dce5eb9b1c9d0b1e2c3be3765c9bf17b472d" translate="yes" xml:space="preserve">
          <source>In this instance, it is possible for view naming collisions within packages to occur, and possibly the incorrect package being loaded. To ensure against this, set an optional second parameter of FALSE when calling &lt;code&gt;add_package_path()&lt;/code&gt;.</source>
          <target state="translated">この場合、パッケージ内でビューの名前の衝突が発生する可能性があり、場合によっては、正しくないパッケージがロードされます。これを防ぐには、 &lt;code&gt;add_package_path()&lt;/code&gt; を呼び出すときにオプションの2番目のパラメーターをFALSEに設定します。</target>
        </trans-unit>
        <trans-unit id="a3ac043fcab08a2a3658e4a09fc0585846ef35e1" translate="yes" xml:space="preserve">
          <source>In this section, we will discuss the 4 types of content that can be negotiated and show how that would look using both of the methods described above to access the negotiator.</source>
          <target state="translated">このセクションでは、ネゴシエート可能な4種類のコンテンツについて説明し、ネゴシエーターにアクセスするために上記の両方の方法を使用して、それがどのように見えるかを示します。</target>
        </trans-unit>
        <trans-unit id="1a3020b3fa093201335b1d59a6e5642735d8ab1d" translate="yes" xml:space="preserve">
          <source>In this set of rules, it states that the email address should be unique in the database, except for the row that has an id matching the placeholder&amp;rsquo;s value. Assuming that the form POST data had the following:</source>
          <target state="translated">この一連のルールでは、プレースホルダーの値と一致するIDを持つ行を除いて、電子メールアドレスはデータベース内で一意である必要があると規定されています。フォームのPOSTデータに次のものがあると仮定します。</target>
        </trans-unit>
        <trans-unit id="9e17e44f64ecd8743b6ca1c3738ac64b8c9b8db5" translate="yes" xml:space="preserve">
          <source>In this tutorial, you will be creating a &lt;strong&gt;basic news application&lt;/strong&gt;. You will begin by writing the code that can load static pages. Next, you will create a news section that reads news items from a database. Finally, you&amp;rsquo;ll add a form to create news items in the database.</source>
          <target state="translated">このチュートリアルでは、&lt;strong&gt;基本的なニュースアプリケーションを&lt;/strong&gt;作成し&lt;strong&gt;ます&lt;/strong&gt;。最初に、静的ページをロードできるコードを記述します。次に、データベースからニュース項目を読み取るニュースセクションを作成します。最後に、フォームを追加して、データベースにニュース項目を作成します。</target>
        </trans-unit>
        <trans-unit id="6e22614cbb24dd7b85b80e42f3d98198cd0de0f7" translate="yes" xml:space="preserve">
          <source>In your &lt;strong&gt;Routes.php&lt;/strong&gt; file you can create routes that are only accessible from the CLI as easily as you would create any other route. Instead of using the &lt;code&gt;get()&lt;/code&gt;, &lt;code&gt;post()&lt;/code&gt;, or similar method, you would use the &lt;code&gt;cli()&lt;/code&gt; method. Everything else works exactly like a normal route definition:</source>
          <target state="translated">あなたで&lt;strong&gt;のroutes.phpの&lt;/strong&gt;ファイルあなたに簡単にあなたが他のルートを作成して、CLIからのみアクセス可能なルートを作成することができます。 &lt;code&gt;get()&lt;/code&gt; 、 &lt;code&gt;post()&lt;/code&gt; 、または同様のメソッドを使用する代わりに、 &lt;code&gt;cli()&lt;/code&gt; メソッドを使用します。他のすべては、通常のルート定義とまったく同じように機能します。</target>
        </trans-unit>
        <trans-unit id="1c114a777f02f064ab4de2ff8d4a90fecb01e21f" translate="yes" xml:space="preserve">
          <source>In your &lt;strong&gt;application/controllers/&lt;/strong&gt; directory, create a file called Smileys.php and place the code below in it.</source>
          <target state="translated">あなたには&lt;strong&gt;アプリケーション/コントローラ/&lt;/strong&gt;ディレクトリ、Smileys.phpというファイルを作成し、その中で下のコードを配置します。</target>
        </trans-unit>
        <trans-unit id="25a6c342ff346fcef1cab1051301f6a8ea9a9ad5" translate="yes" xml:space="preserve">
          <source>In your &lt;strong&gt;application/views/&lt;/strong&gt; directory, create a file called &lt;strong&gt;smiley_view.php&lt;/strong&gt; and place this code in it:</source>
          <target state="translated">あなたの中&lt;strong&gt;のアプリケーション/ビュー/&lt;/strong&gt;ディレクトリ、というファイルを作成&lt;strong&gt;smiley_view.phpを&lt;/strong&gt;し、その中にこのコードを配置します。</target>
        </trans-unit>
        <trans-unit id="2af2ea24eb26cd73125b33bd603a1118fe718c3b" translate="yes" xml:space="preserve">
          <source>In your &lt;strong&gt;config/config.php&lt;/strong&gt; file you can specify a suffix that will be added to all URLs generated by CodeIgniter. For example, if a URL is this:</source>
          <target state="translated">あなたで&lt;strong&gt;のconfig / config.phpの&lt;/strong&gt;ファイルあなたはCodeIgniterのによって生成されたすべてのURLに追加されるサフィックスを指定することができます。たとえば、URLが次の場合：</target>
        </trans-unit>
        <trans-unit id="6b905381588895f31781cdf0c332a26a036ea3b1" translate="yes" xml:space="preserve">
          <source>In your CodeIgniter &lt;strong&gt;system&lt;/strong&gt; folder, you will find a &lt;strong&gt;language&lt;/strong&gt; sub-directory containing a set of language files for the &lt;strong&gt;english&lt;/strong&gt; idiom. The files in this directory (&lt;strong&gt;system/language/english/&lt;/strong&gt;) define the regular messages, error messages, and other generally output terms or expressions, for the different parts of the CodeIgniter framework.</source>
          <target state="translated">CodeIgniter &lt;strong&gt;システム&lt;/strong&gt;フォルダーには、&lt;strong&gt;英語の&lt;/strong&gt;イディオムの言語ファイルのセットを含む&lt;strong&gt;言語&lt;/strong&gt;サブディレクトリがあります。このディレクトリ（&lt;strong&gt;system / language / english /&lt;/strong&gt;）内のファイルは、CodeIgniterフレームワークのさまざまな部分について、通常のメッセージ、エラーメッセージ、およびその他の一般的な出力用語または式を定義します。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="daaa9b107552a9ba5fe078718a29552ff93b1228" translate="yes" xml:space="preserve">
          <source>In your controller, change the &amp;ldquo;username&amp;rdquo; rule to this:</source>
          <target state="translated">コントローラーで、「ユーザー名」ルールを次のように変更します。</target>
        </trans-unit>
        <trans-unit id="7e4eb6456b5ab23de5d1d03352fdb46087fb6c3c" translate="yes" xml:space="preserve">
          <source>In your controllers, you can override the defaults and config file values by calling the &lt;code&gt;set_profiler_sections()&lt;/code&gt; method of the &lt;a href=&quot;../libraries/output&quot;&gt;Output Library&lt;/a&gt;:</source>
          <target state="translated">コントローラーでは、&lt;a href=&quot;../libraries/output&quot;&gt;出力ライブラリの&lt;/a&gt; &lt;code&gt;set_profiler_sections()&lt;/code&gt; メソッドを呼び出すことで、デフォルトと設定ファイルの値を上書きできます。</target>
        </trans-unit>
        <trans-unit id="53d30d6442c6336edbc03303d35864bd65be42cc" translate="yes" xml:space="preserve">
          <source>In your project root:</source>
          <target state="translated">プロジェクトのルートで</target>
        </trans-unit>
        <trans-unit id="0f6ad7c808e4494e58979d03691b45eec69160fe" translate="yes" xml:space="preserve">
          <source>In your validation config file, you will name your rule group member/signup:</source>
          <target state="translated">検証設定ファイルでは、ルールグループのメンバー/サインアップに名前を付けます。</target>
        </trans-unit>
        <trans-unit id="dd5a7bb5632498c501639ac677275bcb7376b1dd" translate="yes" xml:space="preserve">
          <source>Inadequate authentication or improper session management can lead to a user getting more privileges than they are entitled to.</source>
          <target state="translated">不適切な認証や不適切なセッション管理は、ユーザーが権利以上の特権を得ることにつながります。</target>
        </trans-unit>
        <trans-unit id="ff133e24a31f413e13e7540c8c3419179b9c7be3" translate="yes" xml:space="preserve">
          <source>Include short code segments if they help to explain. Use a pastebin or dropbox facility to include longer segments of code or screenshots - do not include them in the issue report itself. This means setting a reasonable expiry for those until the issue is resolved or closed.</source>
          <target state="translated">説明に役立つ場合は、短いコード・セグメントを含めてください。コードやスクリーンショットの長いセグメントを含めるには、ペーストビンやドロップボックス機能を使用してください。これは、問題が解決または解決されるまでの妥当な期限を設定することを意味します。</target>
        </trans-unit>
        <trans-unit id="de89b973779996b7a2aed8f92656f4bd47fe8cc3" translate="yes" xml:space="preserve">
          <source>Included Properties</source>
          <target state="translated">含まれているプロパティ</target>
        </trans-unit>
        <trans-unit id="f6b899df8a00e8017f7737d8744273eef65f5afa" translate="yes" xml:space="preserve">
          <source>Including View Partials</source>
          <target state="translated">ビューパーツを含む</target>
        </trans-unit>
        <trans-unit id="a9c615b9e833ee226ac08cb33f93df17a615ca30" translate="yes" xml:space="preserve">
          <source>Incoming</source>
          <target state="translated">Incoming</target>
        </trans-unit>
        <trans-unit id="ea6d9025995e6a7d6458742c7cd6ec9693cd9c00" translate="yes" xml:space="preserve">
          <source>IncomingRequest #1304, #1313</source>
          <target state="translated">IncomingRequest #1304,#1313</target>
        </trans-unit>
        <trans-unit id="122259ba34c742285201ca13ab897414e825cdab" translate="yes" xml:space="preserve">
          <source>IncomingRequest #1445, #1469, #1496</source>
          <target state="translated">IncomingRequest #1445,#1469,#1496</target>
        </trans-unit>
        <trans-unit id="597c97867791fa1da9c6d5bb798210f8f72827de" translate="yes" xml:space="preserve">
          <source>IncomingRequest #1831</source>
          <target state="translated">IncomingRequest #1831</target>
        </trans-unit>
        <trans-unit id="4381fdb396e31cdc07b482332ea531c8733888dd" translate="yes" xml:space="preserve">
          <source>IncomingRequest #2063</source>
          <target state="translated">IncomingRequest #2063</target>
        </trans-unit>
        <trans-unit id="d737ab0d744a2ee8cf33b7ef31a9fe4dc04e103a" translate="yes" xml:space="preserve">
          <source>IncomingRequest #2265</source>
          <target state="translated">IncomingRequest #2265</target>
        </trans-unit>
        <trans-unit id="adbca23d6a706fc860f496328c3e8b8e10849e7e" translate="yes" xml:space="preserve">
          <source>IncomingRequest Class</source>
          <target state="translated">IncomingRequestクラス</target>
        </trans-unit>
        <trans-unit id="bd02816d1b5c22124ae83ec3085053151fdf9c3e" translate="yes" xml:space="preserve">
          <source>IncomingRequestDetectingTest #1576</source>
          <target state="translated">IncomingRequestDetectingTest #1576</target>
        </trans-unit>
        <trans-unit id="bf567c23119f965266746dfcb59ea1ac8a8743ef" translate="yes" xml:space="preserve">
          <source>IncomingRequestTest #1496</source>
          <target state="translated">IncomingRequestTest #1496</target>
        </trans-unit>
        <trans-unit id="74f6f2eb82ca90a04d33033d3b79cb0b0b4db945" translate="yes" xml:space="preserve">
          <source>IncomingRequestTest #1576</source>
          <target state="translated">IncomingRequestTest #1576</target>
        </trans-unit>
        <trans-unit id="613c5683f7ad525becf388c2f74a7a2727ca8ee8" translate="yes" xml:space="preserve">
          <source>IncomingRequestTest #1641</source>
          <target state="translated">IncomingRequestTest #1641</target>
        </trans-unit>
        <trans-unit id="edba46c59b2433e9976b88828b0a55083b551a11" translate="yes" xml:space="preserve">
          <source>Increment the value for a specific table by one and return the new value. (This is what is used internally with &lt;code&gt;Fabricator::create()&lt;/code&gt;).</source>
          <target state="translated">特定のテーブルの値を1つインクリメントし、新しい値を返します。（これは、 &lt;code&gt;Fabricator::create()&lt;/code&gt; 内部的に使用されるものです）。</target>
        </trans-unit>
        <trans-unit id="83dd44b97b6a7a5bdce797eefa084b3f067ebc9f" translate="yes" xml:space="preserve">
          <source>Increments a string by appending a number to it or increasing the number. Useful for creating &amp;ldquo;copies&amp;rdquo; or a file or duplicating database content which has unique titles or slugs.</source>
          <target state="translated">文字列に数値を追加するか、数値を増やして、文字列を増分します。「コピー」またはファイルの作成、または一意のタイトルやスラッグを持つデータベースコンテンツの複製に役立ちます。</target>
        </trans-unit>
        <trans-unit id="2feb617564d9f5f6ba7725f9e8a31cf3efa6e491" translate="yes" xml:space="preserve">
          <source>Increments the value of a field by the specified amount. If the field is not a numeric field, like a VARCHAR, it will likely be replaced with $value.</source>
          <target state="translated">フィールドの値を指定した量だけ増加させます。フィールドがVARCHARのような数値フィールドでない場合は、おそらく$valueに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="5a6bdab0c6db458e90545a059bae821391f2bc1c" translate="yes" xml:space="preserve">
          <source>Inflector</source>
          <target state="translated">Inflector</target>
        </trans-unit>
        <trans-unit id="8b2f69700fac3a46664ddc4767e8c233f82f3bdc" translate="yes" xml:space="preserve">
          <source>Inflector Helper</source>
          <target state="translated">インフレクターヘルパー</target>
        </trans-unit>
        <trans-unit id="6ae3d560bff162a6a76c386a593983e3599cca04" translate="yes" xml:space="preserve">
          <source>InflectorHelperTest #2065</source>
          <target state="translated">InflectorHelperTest #2065</target>
        </trans-unit>
        <trans-unit id="d92fd9006045f6c955ec5ea9bdfd4f065dc3db77" translate="yes" xml:space="preserve">
          <source>InflectorHelperTest #2296</source>
          <target state="translated">InflectorHelperTest #2296</target>
        </trans-unit>
        <trans-unit id="4887759530b0843965faeadd02359c7845dff2fc" translate="yes" xml:space="preserve">
          <source>Information About Your Database</source>
          <target state="translated">あなたのデータベースについての情報</target>
        </trans-unit>
        <trans-unit id="0e603abcd1a5cd00bfffc089dde0ad742072357f" translate="yes" xml:space="preserve">
          <source>Information From Executing a Query</source>
          <target state="translated">クエリ実行からの情報</target>
        </trans-unit>
        <trans-unit id="b20cefc43b636fa25a43eac43c2bf12918ea7dca" translate="yes" xml:space="preserve">
          <source>Information about all uploaded files can be retrieved through &lt;code&gt;$request-&amp;gt;getFiles()&lt;/code&gt;, which returns a &lt;a href=&quot;../libraries/uploaded_files&quot;&gt;FileCollection&lt;/a&gt; instance. This helps to ease the pain of working with uploaded files, and uses best practices to minimize any security risks.</source>
          <target state="translated">アップロードされたすべてのファイルに関する情報は、&lt;a href=&quot;../libraries/uploaded_files&quot;&gt;FileCollection&lt;/a&gt;インスタンスを返す &lt;code&gt;$request-&amp;gt;getFiles()&lt;/code&gt; 介して取得できます。これにより、アップロードされたファイルを操作する手間が軽減され、ベストプラクティスを使用してセキュリティリスクを最小限に抑えることができます。</target>
        </trans-unit>
        <trans-unit id="36ac2282e060300d6bc796647ed4007ca4656844" translate="yes" xml:space="preserve">
          <source>Information about the hashed password</source>
          <target state="translated">ハッシュ化されたパスワードに関する情報</target>
        </trans-unit>
        <trans-unit id="de7cd9e5602d11f9c93b107b113724b812a1909d" translate="yes" xml:space="preserve">
          <source>Information about the uploaded file</source>
          <target state="translated">アップロードされたファイルの情報</target>
        </trans-unit>
        <trans-unit id="140ad78a4dcc3766634a5a6c133fe60ec3b32e5a" translate="yes" xml:space="preserve">
          <source>Information on the entire cache database</source>
          <target state="translated">キャッシュデータベース全体の情報</target>
        </trans-unit>
        <trans-unit id="60ec494ee20a43921a8e4ea524f3499761718bac" translate="yes" xml:space="preserve">
          <source>Informational Messages. These are the lowest priority messages, simply giving information regarding some process.</source>
          <target state="translated">情報メッセージ。これらは最も優先度の低いメッセージで、単に何らかのプロセスに関する情報を提供するものです。</target>
        </trans-unit>
        <trans-unit id="2fd73e634f437c74afd7538d9c43bbb9a3e12e46" translate="yes" xml:space="preserve">
          <source>Initial Configuration &amp;amp; Set Up</source>
          <target state="translated">初期構成とセットアップ</target>
        </trans-unit>
        <trans-unit id="7c83e448b7d3bdc62c372f22486163968ec06cd8" translate="yes" xml:space="preserve">
          <source>Initial configuration is done in &lt;strong&gt;/app/Config/Autoload.php&lt;/strong&gt;. This file contains two primary arrays: one for the classmap, and one for PSR4-compatible namespaces.</source>
          <target state="translated">初期設定は&lt;strong&gt;/app/Config/Autoload.php&lt;/strong&gt;で行われ&lt;strong&gt;ます&lt;/strong&gt;。このファイルには、2つのプライマリ配列が含まれています。1つはクラスマップ用で、もう1つはPSR4互換の名前空間用です。</target>
        </trans-unit>
        <trans-unit id="9d7596b8a506e21f3adfcf509940dae4a61bf78e" translate="yes" xml:space="preserve">
          <source>Initialize database settings, establish a connection to the database.</source>
          <target state="translated">データベースの設定を初期化し、データベースへの接続を確立します。</target>
        </trans-unit>
        <trans-unit id="f5b9ca96e0e6702b654cb5fce04a8d5b0aa5821e" translate="yes" xml:space="preserve">
          <source>Initializes (configures) the library to use a different driver, cipher, mode or key.</source>
          <target state="translated">異なるドライバ、暗号、モード、鍵を使用するようにライブラリを初期化(設定)します。</target>
        </trans-unit>
        <trans-unit id="5ca4f7eb9f4c2316c17435593bbb7722d9194376" translate="yes" xml:space="preserve">
          <source>Initializes (configures) the library to use different settings.</source>
          <target state="translated">異なる設定を使用するためにライブラリを初期化(設定)します。</target>
        </trans-unit>
        <trans-unit id="450c70041c0560fd7ef7748a94e9a8412cbc1e15" translate="yes" xml:space="preserve">
          <source>Initializes all the email variables to an empty state. This method is intended for use if you run the email sending method in a loop, permitting the data to be reset between cycles.</source>
          <target state="translated">すべてのメール変数を空の状態に初期化します。このメソッドは、電子メール送信メソッドをループで実行し、サイクル間でデータをリセットできるようにする場合に使用することを意図しています。</target>
        </trans-unit>
        <trans-unit id="98c502ac468292017ae5f192b90eb7400f1f6e79" translate="yes" xml:space="preserve">
          <source>Initializes the Calendaring preferences. Accepts an associative array as input, containing display preferences.</source>
          <target state="translated">暦の設定を初期化します。入力として、表示設定を含む連想配列を受け取ります。</target>
        </trans-unit>
        <trans-unit id="ee7c5d74769ec578a1058c6d3c8b0ffa30736c3d" translate="yes" xml:space="preserve">
          <source>Initializes the Pagination class with your preferred options.</source>
          <target state="translated">お好みのオプションでページネーションクラスを初期化します。</target>
        </trans-unit>
        <trans-unit id="70b2358f732fa8c9e42689376cbca9969caf9ecd" translate="yes" xml:space="preserve">
          <source>Initializes the XML-RPC library. Accepts an associative array containing your settings.</source>
          <target state="translated">XML-RPC ライブラリを初期化します。設定を含む連想配列を受け取ります。</target>
        </trans-unit>
        <trans-unit id="d7a85696800ed0af25e9c76faa785c85f63437f6" translate="yes" xml:space="preserve">
          <source>Initializes the class for processing an image.</source>
          <target state="translated">画像を処理するためのクラスを初期化します。</target>
        </trans-unit>
        <trans-unit id="b05259a752965e8c5b8ca174aa3b138b33c15c3e" translate="yes" xml:space="preserve">
          <source>Initializing a Session</source>
          <target state="translated">セッションの初期化</target>
        </trans-unit>
        <trans-unit id="2329581287b8eeed5eae7f757a25730c77006015" translate="yes" xml:space="preserve">
          <source>Initializing the Class</source>
          <target state="translated">クラスの初期化</target>
        </trans-unit>
        <trans-unit id="e05d9053a05a2f6ed94612a25b725c2726c66a41" translate="yes" xml:space="preserve">
          <source>Initializing the Database Class</source>
          <target state="translated">データベースクラスの初期化</target>
        </trans-unit>
        <trans-unit id="0ade5d8c9764e51b720a1035d44f0c3b829c5f37" translate="yes" xml:space="preserve">
          <source>Initializing the Forge Class</source>
          <target state="translated">フォージクラスの初期化</target>
        </trans-unit>
        <trans-unit id="9f88fa37e1c12890d04ecd266ae43de5c7fdda5d" translate="yes" xml:space="preserve">
          <source>Initializing the Shopping Cart Class</source>
          <target state="translated">ショッピングカートクラスの初期化</target>
        </trans-unit>
        <trans-unit id="cccc001a54c9d96d4335172095fa54ae98c511af" translate="yes" xml:space="preserve">
          <source>Initializing the Upload Class</source>
          <target state="translated">アップロードクラスの初期化</target>
        </trans-unit>
        <trans-unit id="915bc66dbf90b3b17ffcb969a34d09ccc43208dc" translate="yes" xml:space="preserve">
          <source>Initializing the Utility Class</source>
          <target state="translated">ユーティリティクラスの初期化</target>
        </trans-unit>
        <trans-unit id="fe0b38e3970b220ebb4f77eef03d409e792c38fc" translate="yes" xml:space="preserve">
          <source>Inline Content</source>
          <target state="translated">インラインコンテンツ</target>
        </trans-unit>
        <trans-unit id="b568d47f2e244743b1fd7472db836ef9769c21f8" translate="yes" xml:space="preserve">
          <source>Input</source>
          <target state="translated">Input</target>
        </trans-unit>
        <trans-unit id="ddfdc8701ec1b817c00ddb898531f5b1c6f8a037" translate="yes" xml:space="preserve">
          <source>Input Class</source>
          <target state="translated">入力クラス</target>
        </trans-unit>
        <trans-unit id="29828082e95fd0d1118e948c6edbcb0fa39e8cdd" translate="yes" xml:space="preserve">
          <source>Input Filtering</source>
          <target state="translated">入力フィルタリング</target>
        </trans-unit>
        <trans-unit id="1ec54b9f145d0c22611e83b27bdc657f83aac9a8" translate="yes" xml:space="preserve">
          <source>Input stream array if no parameters supplied, otherwise the specified value if found or NULL if not</source>
          <target state="translated">パラメータが与えられていない場合は入力ストリームの配列、そうでない場合は指定された値、そうでない場合は NULL。</target>
        </trans-unit>
        <trans-unit id="907d7451e7f17214e736b646e5f53d44d0db2ff5" translate="yes" xml:space="preserve">
          <source>Insecure Direct Object References occur when an application provides direct access to objects based on user-supplied input. As a result of this vulnerability attackers can bypass authorization and access resources in the system directly, for example database records or files.</source>
          <target state="translated">安全でない直接オブジェクト参照は、アプリケーションがユーザからの入力に基づいてオブジェクトへの直接アクセスを提供した場合に発生します。この脆弱性の結果、攻撃者は認証を迂回してシステム内のリソース、例えばデータベースのレコードやファイルに直接アクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="a867c81b10593230b68cede96356f54aeb47293f" translate="yes" xml:space="preserve">
          <source>Insert items into the cart and save it to the session table. Returns TRUE on success and FALSE on failure.</source>
          <target state="translated">カートにアイテムを挿入し、セッションテーブルに保存します。成功した場合は TRUE、失敗した場合は FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="bb0554c986cdaa823c1ae630431b2b98efe4a35f" translate="yes" xml:space="preserve">
          <source>InsertTest #1640, #1677</source>
          <target state="translated">InsertTest #1640,#1677</target>
        </trans-unit>
        <trans-unit id="19cf71b4ecaeee0764237faa9780a1a6aa3da80d" translate="yes" xml:space="preserve">
          <source>InsertTest #1677</source>
          <target state="translated">InsertTest #1677</target>
        </trans-unit>
        <trans-unit id="fd73fb845758b5fc61a4f9f4d0ffbd5ee2b3d585" translate="yes" xml:space="preserve">
          <source>InsertTest #2269</source>
          <target state="translated">InsertTest #2269</target>
        </trans-unit>
        <trans-unit id="43a173abe9c6ad6efc38c4ab804b3a1062da29e1" translate="yes" xml:space="preserve">
          <source>Inserted value</source>
          <target state="translated">挿入値</target>
        </trans-unit>
        <trans-unit id="0dd2b481ad724309af4e29174757be7f9ad67dd8" translate="yes" xml:space="preserve">
          <source>Inserting Data</source>
          <target state="translated">データの挿入</target>
        </trans-unit>
        <trans-unit id="87ad9d627b9b1fc624eb9170c78ceda7065c18e2" translate="yes" xml:space="preserve">
          <source>Inserts a new row into the database. This row is removed after the current test runs. &lt;code&gt;$data&lt;/code&gt; is an associative array with the data to insert into the table.</source>
          <target state="translated">データベースに新しい行を挿入します。この行は、現在のテストの実行後に削除されます。 &lt;code&gt;$data&lt;/code&gt; は、テーブルに挿入するデータとの連想配列です。</target>
        </trans-unit>
        <trans-unit id="49ba34f16fb4468a50166f93ed913800a0bdc4c5" translate="yes" xml:space="preserve">
          <source>Inside the namespace, the file must be found at &lt;code&gt;Config\Services.php&lt;/code&gt;</source>
          <target state="translated">名前空間内で、ファイルは &lt;code&gt;Config\Services.php&lt;/code&gt; 必要があります</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="94b39fc155055e7e8b8070c11bb803287f7d2dac" translate="yes" xml:space="preserve">
          <source>Installation &amp;amp; Set Up</source>
          <target state="translated">インストールとセットアップ</target>
        </trans-unit>
        <trans-unit id="550c70d12638cfa6aa8f9e73e5ae88f8cbc4e453" translate="yes" xml:space="preserve">
          <source>Installation Instructions</source>
          <target state="translated">インストール手順</target>
        </trans-unit>
        <trans-unit id="2d1eb98c701254e7810f0d66475bb3073dbd23d5" translate="yes" xml:space="preserve">
          <source>Installing phpUnit</source>
          <target state="translated">phpUnitのインストール</target>
        </trans-unit>
        <trans-unit id="fc3b8f3c6151107514c4bf4eeca907ec5482a39c" translate="yes" xml:space="preserve">
          <source>Instantiating</source>
          <target state="translated">Instantiating</target>
        </trans-unit>
        <trans-unit id="0ee9328abc7e81d6d9a0a4dfb22dd4ac7e0327aa" translate="yes" xml:space="preserve">
          <source>Instead of (or in addition to) using &lt;code&gt;Services&lt;/code&gt; as described in &lt;a href=&quot;#usage&quot;&gt;Using the Encryption Library&lt;/a&gt;, you can create an &amp;ldquo;Encrypter&amp;rdquo; directly, or change the settings of an existing instance.</source>
          <target state="translated">&lt;a href=&quot;#usage&quot;&gt;暗号化ライブラリの使用で&lt;/a&gt;説明されているように &lt;code&gt;Services&lt;/code&gt; を使用する代わりに（またはそれに加えて）、「暗号化」を直接作成するか、既存のインスタンスの設定を変更することができます。</target>
        </trans-unit>
        <trans-unit id="266cc8e518a444fef4922c55769586b3c02890d2" translate="yes" xml:space="preserve">
          <source>Instead of calling the &lt;code&gt;getNews()&lt;/code&gt; method without a parameter, the &lt;code&gt;$slug&lt;/code&gt; variable is passed, so it will return the specific news item. The only thing left to do is create the corresponding view at &lt;strong&gt;app/Views/news/view.php&lt;/strong&gt;. Put the following code in this file.</source>
          <target state="translated">パラメータなしで &lt;code&gt;getNews()&lt;/code&gt; メソッドを呼び出す代わりに、 &lt;code&gt;$slug&lt;/code&gt; 変数が渡されるため、特定のニュースアイテムが返されます。あとは、&lt;strong&gt;app / Views / news /view.phpに&lt;/strong&gt;対応するビューを作成するだけです。このファイルに次のコードを入れます。</target>
        </trans-unit>
        <trans-unit id="c15f06834a0af85811d33247bd21731738bfe214" translate="yes" xml:space="preserve">
          <source>Instead of calling the &lt;code&gt;get_news()&lt;/code&gt; method without a parameter, the &lt;code&gt;$slug&lt;/code&gt; variable is passed, so it will return the specific news item. The only things left to do is create the corresponding view at &lt;em&gt;application/views/news/view.php&lt;/em&gt;. Put the following code in this file.</source>
          <target state="translated">パラメータなしで &lt;code&gt;get_news()&lt;/code&gt; メソッドを呼び出す代わりに、 &lt;code&gt;$slug&lt;/code&gt; 変数が渡されるため、特定のニュースアイテムが返されます。あとは、&lt;em&gt;application / views / news / view.phpに&lt;/em&gt;対応するビューを作成する&lt;em&gt;だけ&lt;/em&gt;です。このファイルに次のコードを挿入します。</target>
        </trans-unit>
        <trans-unit id="8c14b2990b4b7dcdd000fe202b536ecffb1270fa" translate="yes" xml:space="preserve">
          <source>Instead of creating the instance ourself, we let a central class create an instance of the class for us. This class is kept very simple. It only contains a method for each class that we want to use as a service. The method typically returns a shared instance of that class, passing any dependencies it might have into it. Then, we would replace our timer creation code with code that calls this new class:</source>
          <target state="translated">自分でインスタンスを作成するのではなく、中央のクラスにインスタンスを作成させます。このクラスは非常にシンプルに保たれています。サービスとして使用したい各クラスのメソッドだけが含まれています。メソッドは通常、そのクラスの共有インスタンスを返します。そして、タイマーの作成コードをこの新しいクラスを呼び出すコードに置き換えます。</target>
        </trans-unit>
        <trans-unit id="f9ccccf1f79bdde1a953a129d0af388be7c5862c" translate="yes" xml:space="preserve">
          <source>Instead of the &lt;em&gt;maxlength&lt;/em&gt; and &lt;em&gt;size&lt;/em&gt; attributes in the above example, you will instead specify &lt;em&gt;rows&lt;/em&gt; and &lt;em&gt;cols&lt;/em&gt;.</source>
          <target state="translated">上記の例の&lt;em&gt;maxlength&lt;/em&gt;および&lt;em&gt;size&lt;/em&gt;属性の代わりに、&lt;em&gt;rows&lt;/em&gt;および&lt;em&gt;colsを&lt;/em&gt;指定します。</target>
        </trans-unit>
        <trans-unit id="b3e2f79d53c68c61aeea078302e60134ac15c8b1" translate="yes" xml:space="preserve">
          <source>Instead of using the question mark to mark the location of the bound values, you can name the bindings, allowing the keys of the values passed in to match placeholders in the query:</source>
          <target state="translated">クエスチョンマークを使ってバインドされた値の位置をマークするのではなく、 バインディングに名前を付けることで、渡された値のキーがクエリのプレースホルダと一致するようにすることができます。</target>
        </trans-unit>
        <trans-unit id="d4716d1e58d6b1da06f97a9dfc3569ba9edbe049" translate="yes" xml:space="preserve">
          <source>Instead of writing database operations right in the controller, queries should be placed in a model, so they can easily be reused later. Models are the place where you retrieve, insert, and update information in your database or other data stores. They provide access to your data. You can read more about it &lt;a href=&quot;../models/model&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">コントローラーでデータベース操作を直接記述する代わりに、クエリをモデルに配置して、後で簡単に再利用できるようにする必要があります。モデルは、データベースまたは他のデータストアで情報を取得、挿入、および更新する場所です。彼らはあなたのデータへのアクセスを提供します。あなたはそれについてもっと読むことができ&lt;a href=&quot;../models/model&quot;&gt;ます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eaa94b0f14a39ee4f35a23a687593fd213e3e46e" translate="yes" xml:space="preserve">
          <source>Instead of writing database operations right in the controller, queries should be placed in a model, so they can easily be reused later. Models are the place where you retrieve, insert, and update information in your database or other data stores. They represent your data.</source>
          <target state="translated">データベースの操作をコントローラ内で直接記述するのではなく、クエリをモデル内に配置し、後で簡単に再利用できるようにします。モデルは、データベースや他のデータストアの情報を取得、挿入、更新する場所です。モデルはデータを表現します。</target>
        </trans-unit>
        <trans-unit id="07bb5d99b03923ba78741db3f0a22f09ff421b5f" translate="yes" xml:space="preserve">
          <source>Instead, we are going to open Terminal in Mac/Linux or go to Run &amp;gt; &amp;ldquo;cmd&amp;rdquo; in Windows and navigate to our CodeIgniter project&amp;rsquo;s web root.</source>
          <target state="translated">代わりに、Mac / Linuxでターミナルを開くか、Windowsで[実行]&amp;gt; [cmd]に移動して、CodeIgniterプロジェクトのWebルートに移動します。</target>
        </trans-unit>
        <trans-unit id="6a4770879bf02b01c62b2021c4fa40f55f566681" translate="yes" xml:space="preserve">
          <source>Instead, we are going to open the terminal in Mac/Linux or go to Run &amp;gt; &amp;ldquo;cmd&amp;rdquo; in Windows and navigate to our CodeIgniter project.</source>
          <target state="translated">代わりに、Mac / Linuxでターミナルを開くか、Windowsで[実行]&amp;gt; [cmd]に移動して、CodeIgniterプロジェクトに移動します。</target>
        </trans-unit>
        <trans-unit id="ea2c720502deec2915493d8a2cb72e3b14800a07" translate="yes" xml:space="preserve">
          <source>Instead, you should do something like this, depending on your environment</source>
          <target state="translated">その代わり、環境に応じて、次のようなことをする必要があります。</target>
        </trans-unit>
        <trans-unit id="c871d588250818d1c93e0fa0233b876f4f1dc207" translate="yes" xml:space="preserve">
          <source>Insufficient input validation where one user can add content to a web site that can be malicious when viewed by other users to the web site.</source>
          <target state="translated">一人のユーザーがWebサイトにコンテンツを追加しても、他のユーザーがWebサイトに閲覧した際に悪意を持たれる可能性がある入力の検証が不十分。</target>
        </trans-unit>
        <trans-unit id="b2e6a414d6b7905e9145e3d59307052be31b6a67" translate="yes" xml:space="preserve">
          <source>Integrate with other applications in other languages. For example, a random C++ script could call one command and run code in your models!</source>
          <target state="translated">他の言語の他のアプリケーションとの統合。例えば、ランダムなC++スクリプトは、1つのコマンドを呼び出してモデル内でコードを実行することができます!</target>
        </trans-unit>
        <trans-unit id="a2df016660f7365743cb17035ea465bc9a2c6ab7" translate="yes" xml:space="preserve">
          <source>Interbase/Firebird via the &lt;em&gt;ibase&lt;/em&gt; and &lt;em&gt;pdo&lt;/em&gt; drivers</source>
          <target state="translated">&lt;em&gt;ibase&lt;/em&gt;および&lt;em&gt;pdo&lt;/em&gt;ドライバーを介したInterbase / Firebird</target>
        </trans-unit>
        <trans-unit id="18af2010abc5eeaf48d2eca9cbf64b15158b9f94" translate="yes" xml:space="preserve">
          <source>Interesting events in your application, like a user logging in, logging SQL queries, etc.</source>
          <target state="translated">ユーザーのログイン、SQLクエリのロギングなど、アプリケーション内の興味深いイベント。</target>
        </trans-unit>
        <trans-unit id="7b73c223fde3cb09dfff8b461bcf969c391aa440" translate="yes" xml:space="preserve">
          <source>Internally, all queries are processed and stored as instances of CodeIgniterDatabaseQuery. This class is responsible for binding the parameters, otherwise preparing the query, and storing performance data about its query.</source>
          <target state="translated">内部的には、すべてのクエリはCodeIgniterDatabaseQueryのインスタンスとして処理され、保存されます。このクラスは、パラメータをバインドしたり、そうでなければクエリを準備したり、クエリに関するパフォーマンスデータを保存したりする役割を担っています。</target>
        </trans-unit>
        <trans-unit id="3b755f7b857b999860755840e5f0964f6b120c4d" translate="yes" xml:space="preserve">
          <source>Internationalization</source>
          <target state="translated">Internationalization</target>
        </trans-unit>
        <trans-unit id="b4e6a310890f62289340d7802703b8c2586c6d86" translate="yes" xml:space="preserve">
          <source>Intro</source>
          <target state="translated">Intro</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="3400d66643a199f7963e94306035e5ae0ffa6398" translate="yes" xml:space="preserve">
          <source>Introduction at HTML5Rocks</source>
          <target state="translated">HTML5Rocksでの紹介</target>
        </trans-unit>
        <trans-unit id="4364494f3ce5116182605619ffdae31c589015ac" translate="yes" xml:space="preserve">
          <source>Introduction, this page, which gives you an overview of what to expect and gets your default application downloaded and running.</source>
          <target state="translated">はじめに、このページでは、あなたが期待するものの概要を提供し、あなたのデフォルトのアプリケーションをダウンロードして実行して取得します。</target>
        </trans-unit>
        <trans-unit id="be0e3691ffce584022a34ea3a922d522ecd36f54" translate="yes" xml:space="preserve">
          <source>Introduction, this page, which gives you an overview of what to expect.</source>
          <target state="translated">はじめに、このページでは、何を期待しているかの概要をご紹介しています。</target>
        </trans-unit>
        <trans-unit id="a2d1a19b4ad8a682f05e9317f8df7dc728e26338" translate="yes" xml:space="preserve">
          <source>Is it something really obvious that you fix it yourself?</source>
          <target state="translated">自分で直すのは本当に当たり前のことなのか?</target>
        </trans-unit>
        <trans-unit id="598dccd6633158e03eab1e5b47384bb6f63df193" translate="yes" xml:space="preserve">
          <source>Issues are a quick way to point out a bug. If you find a bug or documentation error in CodeIgniter then please check a few things first:</source>
          <target state="translated">issueはバグを指摘するための手っ取り早い方法です。CodeIgniterでバグやドキュメントのエラーを見つけたら、まずいくつかのことを確認してください。</target>
        </trans-unit>
        <trans-unit id="9f2d2cd6702745a581bd59874d849b30a2299789" translate="yes" xml:space="preserve">
          <source>It accepts a positive integer value, which defaults to 0 and returns TRUE on success or FALSE on failure.</source>
          <target state="translated">これは正の整数値を受け付けます。デフォルトは 0 で、成功した場合は TRUE、失敗した場合は FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="1f056bd2bbc01e7ae8c64dd31b2eca754da54b7b" translate="yes" xml:space="preserve">
          <source>It also lets you display a set of smiley images that when clicked will be inserted into a form field. For example, if you have a blog that allows user commenting you can show the smileys next to the comment form. Your users can click a desired smiley and with the help of some JavaScript it will be placed into the form field.</source>
          <target state="translated">また、クリックするとフォームフィールドに挿入されるスマイリー画像のセットを表示することもできます。例えば、ユーザーがコメントできるブログをお持ちの場合、コメントフォームの横にスマイリー画像を表示することができます。ユーザーは希望のスマイリーをクリックすると、JavaScriptの助けを借りてフォームフィールドに配置されます。</target>
        </trans-unit>
        <trans-unit id="5a817ce454ff0e513d1e3882d152a8b91b34e86d" translate="yes" xml:space="preserve">
          <source>It also support nested definition:</source>
          <target state="translated">また、ネストされた定義にも対応しています。</target>
        </trans-unit>
        <trans-unit id="f60073f39bc330951e955ab4a0f808d026287e1b" translate="yes" xml:space="preserve">
          <source>It assumes that you have installed &lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;VirtualBox&lt;/a&gt; and &lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot;&gt;Vagrant&lt;/a&gt; for your platform.</source>
          <target state="translated">プラットフォームに&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;VirtualBox&lt;/a&gt;と&lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot;&gt;Vagrant&lt;/a&gt;がインストールされていることを前提としています。</target>
        </trans-unit>
        <trans-unit id="3dff7037a297e251b1aa9d665868de3c96f8b45c" translate="yes" xml:space="preserve">
          <source>It can range from 0 to 9, with 9 being the highest and 0 effectively disabling compression:</source>
          <target state="translated">0から9までの範囲があり、9が最も高く、0が効果的に圧縮を無効にします。</target>
        </trans-unit>
        <trans-unit id="c0cc03b5def98a6267a07ed390016614a67395d1" translate="yes" xml:space="preserve">
          <source>It can safely be said that it works exactly like PHP&amp;rsquo;s own default session implementation, but in case this is an important detail for you, have it mind that it is in fact not the same code and it has some limitations (and advantages).</source>
          <target state="translated">PHP自体のデフォルトセッション実装とまったく同じように機能するとは言えますが、これが重要な場合は、実際には同じコードではなく、いくつかの制限（および利点）があることを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="474abb6d64d8a72edd8e851e9c969391e9ceecf4" translate="yes" xml:space="preserve">
          <source>It frees the memory associated with the result and deletes the result resource ID. Normally PHP frees its memory automatically at the end of script execution. However, if you are running a lot of queries in a particular script you might want to free the result after each query result has been generated in order to cut down on memory consumption.</source>
          <target state="translated">これは、結果に関連するメモリを解放し、結果のリソースIDを削除します。通常、PHPはスクリプトの実行終了時に自動的にメモリを解放します。しかし、特定のスクリプトで多くのクエリを実行している場合は、 メモリ消費を抑えるためにクエリ結果が生成された後に結果を解放したほうがいいかもしれません。</target>
        </trans-unit>
        <trans-unit id="18829039bd1a2dba3f52e920a13753dcb367c2e4" translate="yes" xml:space="preserve">
          <source>It gets better - the localization can fall all the way back to English, in case new messages are added to the framework and you haven&amp;rsquo;t had a chance to translate them yet for your locale.</source>
          <target state="translated">新しいメッセージがフレームワークに追加され、自分のロケールに合わせてまだ翻訳する機会がない場合、ローカリゼーションは英語に戻る可能性があります。</target>
        </trans-unit>
        <trans-unit id="8ee6d29acd7a4685234ead7c80ff73f0ca8b06f0" translate="yes" xml:space="preserve">
          <source>It goes without saying that you should guard your key carefully. Should someone gain access to your key, the data will be easily decoded. If your server is not totally under your control it&amp;rsquo;s impossible to ensure key security so you may want to think carefully before using it for anything that requires high security, like storing credit card numbers.</source>
          <target state="translated">言うまでもなく、キーは慎重に保護する必要があります。誰かがあなたのキーにアクセスした場合、データは簡単にデコードされます。サーバーが完全に制御下にない場合、キーのセキュリティを確保することは不可能であるため、クレジットカード番号の保存など、高度なセキュリティが必要なものに使用する前に慎重に検討することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="16d5473c4a5a30e2758515a42a84d2c7b08ff216" translate="yes" xml:space="preserve">
          <source>It goes without saying that you should guard your key carefully. Should someone gain access to your key, the data will be easily decrypted. If your server is not totally under your control it&amp;rsquo;s impossible to ensure key security so you may want to think carefully before using it for anything that requires high security, like storing credit card numbers.</source>
          <target state="translated">言うまでもなく、キーは慎重に保護する必要があります。誰かがあなたのキーにアクセスした場合、データは簡単に復号化されます。サーバーが完全に制御下にない場合、キーのセキュリティを確保することは不可能であるため、クレジットカード番号の保存など、高度なセキュリティが必要なものに使用する前に慎重に検討することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="06ffce343ea9c2c702b2bd8baedfe1ca2c50e24d" translate="yes" xml:space="preserve">
          <source>It helps avoid having to write code like this:</source>
          <target state="translated">このようなコードを書かなくても済むようになります。</target>
        </trans-unit>
        <trans-unit id="cb7f9eceedc3b8cee9280424bc4f94cd2adbc727" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;critical&lt;/em&gt; that you handle passwords in your application properly.</source>
          <target state="translated">アプリケーションでパスワードを適切に処理することが&lt;em&gt;重要&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="a082d159d2331d41c9998a6ccc19b72815eeff48" translate="yes" xml:space="preserve">
          <source>It is a good practice to always provide the URI during testing to avoid surprises.</source>
          <target state="translated">不意打ちを避けるために、テスト中は常にURIを提供するのが良い習慣です。</target>
        </trans-unit>
        <trans-unit id="f53c68f3b8ab5ffc9af4b08ea4fe18e93ced8c25" translate="yes" xml:space="preserve">
          <source>It is also implemented in a way that aims to match the standard implementations in other programming languages and libraries.</source>
          <target state="translated">また、他のプログラミング言語やライブラリで標準実装されているものとの一致を目指して実装されています。</target>
        </trans-unit>
        <trans-unit id="1899efb1540d963d4e4d35cb07d9e711d01f4bd1" translate="yes" xml:space="preserve">
          <source>It is also possible to use a URI segment for the page number, instead of the page query parameter, as described in the previous section. Specify the segment number to use as the fifth parameter to &lt;code&gt;makeLinks()&lt;/code&gt;.</source>
          <target state="translated">前のセクションで説明したように、ページクエリパラメータの代わりに、ページ番号にURIセグメントを使用することもできます。 &lt;code&gt;makeLinks()&lt;/code&gt; の5番目のパラメーターとして使用するセグメント番号を指定します。</target>
        </trans-unit>
        <trans-unit id="9991e35812a37542c385a2817787a57173fb9932" translate="yes" xml:space="preserve">
          <source>It is also possible to use a URI segment for the page number, instead of the page query parameter. Simply specify the segment number to use as the fourth argument. URIs generated by the pager would then look like &lt;em&gt;https://domain.tld/model/[pageNumber]&lt;/em&gt; instead of &lt;em&gt;https://domain.tld/model?page=[pageNumber]&lt;/em&gt;.</source>
          <target state="translated">ページクエリパラメータの代わりに、ページ番号にURIセグメントを使用することもできます。4番目の引数として使用するセグメント番号を指定するだけです。ページャーによって生成されたURIは、&lt;em&gt;https：//domain.tld/model？page = [pageNumber]&lt;/em&gt;ではなく、&lt;em&gt;https：//domain.tld/model/ &lt;/em&gt;&lt;em&gt;[pageNumber]の&lt;/em&gt;ようになり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ea2e3708999e93e89b12fccfb73c41c1aff16065" translate="yes" xml:space="preserve">
          <source>It is important to be aware that the library pattern for Next and Previous is different from what is used in the traditional way of paging results.</source>
          <target state="translated">NextとPreviousのライブラリパターンは、結果をページングする従来の方法で使用されているものとは異なることを認識することが重要です。</target>
        </trans-unit>
        <trans-unit id="5a7729359eb8976bfaac6dc2e3971badc8583f8f" translate="yes" xml:space="preserve">
          <source>It is not needed, since the presentation can be handled with a conventional controller - it is a convenience. Its usage is similar to the resource routing:</source>
          <target state="translated">プレゼンテーションは従来のコントローラで処理できるので、必要ありません。使い方はリソースルーティングと似ています。</target>
        </trans-unit>
        <trans-unit id="77ce1dcad69d58eb6bb60378f7f6fb9e07a5b445" translate="yes" xml:space="preserve">
          <source>It is possible that logging still will not happen for exceptions if your current Log settings are not set up to log &lt;strong&gt;critical&lt;/strong&gt; errors, which all exceptions are logged as.</source>
          <target state="translated">現在のログ設定がすべての例外がログに記録される&lt;strong&gt;重大な&lt;/strong&gt;エラーをログに記録するように設定されていない場合、例外のログがまだ発生しない可能性があります。</target>
        </trans-unit>
        <trans-unit id="d1f9ac5822073c6527bcddcac665eecd2c9b3094" translate="yes" xml:space="preserve">
          <source>It is possible to move your application directory to a different location on your server than your web root. To do so open your main index.php and set a &lt;em&gt;full server path&lt;/em&gt; in the &lt;code&gt;$application_folder&lt;/code&gt; variable:</source>
          <target state="translated">アプリケーションディレクトリを、Webルート以外のサーバー上の別の場所に移動することができます。これを行うには、メインのindex.phpを開き、 &lt;code&gt;$application_folder&lt;/code&gt; 変数に&lt;em&gt;完全なサーバーパス&lt;/em&gt;を設定します。</target>
        </trans-unit>
        <trans-unit id="c9a0f83681248575775d833047fd21746adb5d1b" translate="yes" xml:space="preserve">
          <source>It is possible to set a website to not protect even inline scripts and styles on its own pages, since this might have been the result of user-generated content. To protect against this, CSP allows you to specify a nonce within the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags, and to add those values to the response&amp;rsquo;s header. This is a pain to handle in real life, and is most secure when generated on the fly. To make this simple, you can include a &lt;code&gt;{csp-style-nonce}&lt;/code&gt; or &lt;code&gt;{csp-script-nonce}&lt;/code&gt; placeholder in the tag and it will be handled for you automatically:</source>
          <target state="translated">これはユーザー生成コンテンツの結果である可能性があるため、独自のページのインラインスクリプトやスタイルでさえ保護しないようにWebサイトを設定することができます。これを防ぐために、CSPでは &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; タグと&amp;lt;script&amp;gt;タグ内にナンスを指定し、それらの値を応答のヘッダーに追加できます。これは実際の生活では扱いにくいものであり、その場で生成されたときに最も安全です。これを簡単にするために、タグに &lt;code&gt;{csp-style-nonce}&lt;/code&gt; または &lt;code&gt;{csp-script-nonce}&lt;/code&gt; プレースホルダーを含めることができ、自動的に処理されます。</target>
        </trans-unit>
        <trans-unit id="ce500d664c9f465e625769c26ba553fceb4b0040" translate="yes" xml:space="preserve">
          <source>It is possible to use HTTP verbs (request method) to define your routing rules. This is particularly useful when building RESTFUL applications. You can use any standard HTTP verb (GET, POST, PUT, DELETE, etc). Each verb has its own method you can use:</source>
          <target state="translated">HTTP の動詞 (リクエストメソッド)を使用してルーティングルールを定義することができます。これは特に RESTFUL アプリケーションを構築する際に便利です。標準的なHTTP動詞(GET、POST、PUT、DELETEなど)を使用することができます。それぞれの動詞には、使用できるメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="424278221c20d5a0b7e5d3a7a1519cf3041a3318" translate="yes" xml:space="preserve">
          <source>It is possible to use HTTP verbs (request method) to define your routing rules. This is particularly useful when building RESTful applications. You can use standard HTTP verbs (GET, PUT, POST, DELETE, PATCH) or a custom one such (e.g. PURGE). HTTP verb rules are case-insensitive. All you need to do is to add the verb as an array key to your route. Example:</source>
          <target state="translated">HTTP の動詞 (リクエストメソッド)を使用してルーティングルールを定義することができます。これはRESTfulアプリケーションを構築する際に特に便利です。標準のHTTP動詞(GET,PUT,POST,DELETE,PATCH)やカスタムの動詞(PURGEなど)を使用することができます。HTTP動詞のルールは大文字小文字を区別しません。必要なのは、動詞を配列のキーとしてルートに追加することだけです。例</target>
        </trans-unit>
        <trans-unit id="e209da0180d202ad4bd504f83081f6b11002a4a9" translate="yes" xml:space="preserve">
          <source>It is possible to use the library in this way, without setting an &lt;em&gt;encryption_key&lt;/em&gt; in your configuration file.</source>
          <target state="translated">設定ファイルに&lt;em&gt;encryption_key&lt;/em&gt;を設定することなく、この方法でライブラリを使用することが可能です。</target>
        </trans-unit>
        <trans-unit id="ca2026956fe3a75f5ca03349a32bc3b531bbd4b7" translate="yes" xml:space="preserve">
          <source>It is publicly available due to its otherwise general purpose. It is described in &lt;a href=&quot;https://tools.ietf.org/rfc/rfc5869.txt&quot;&gt;RFC 5869&lt;/a&gt;.</source>
          <target state="translated">それは他の点では一般的な目的のために公に利用可能です。&lt;a href=&quot;https://tools.ietf.org/rfc/rfc5869.txt&quot;&gt;RFC 5869で&lt;/a&gt;説明されています。</target>
        </trans-unit>
        <trans-unit id="91ee1f5bb1f2c0af57a94f01c916b3ff2e972328" translate="yes" xml:space="preserve">
          <source>It is recommended to only create services within controllers. Other files, like models and libraries should have the dependencies either passed into the constructor or through a setter method.</source>
          <target state="translated">サービスはコントローラ内でのみ作成することをお勧めします。モデルやライブラリのような他のファイルには、コンストラクタに渡すかセッターメソッドを使って依存関係を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="5a5853d761ba5d1d4b99bdc0140376c89e8e7b42" translate="yes" xml:space="preserve">
          <source>It is useful if you want to check for the availability of functions such as &lt;code&gt;eval()&lt;/code&gt; and &lt;code&gt;exec()&lt;/code&gt;, which are dangerous and might be disabled on servers with highly restrictive security policies.</source>
          <target state="translated">&lt;code&gt;eval()&lt;/code&gt; や &lt;code&gt;exec()&lt;/code&gt; などの危険性が高く、セキュリティポリシーが非常に制限されているサーバーで無効にされている可能性がある関数の可用性を確認する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="466ae5ac051d11dff63eb5c1baff6089a49a777e" translate="yes" xml:space="preserve">
          <source>It is useful in preventing Cross Site Scripting (XSS).</source>
          <target state="translated">クロスサイトスクリプティング(XSS)対策に役立ちます。</target>
        </trans-unit>
        <trans-unit id="83077494b1e9c5b1a9d328e3081d5700e74206d2" translate="yes" xml:space="preserve">
          <source>It must be noted that to ensure maximum security, such key &lt;em&gt;should&lt;/em&gt; not only be as strong as possible, but also often changed. Such behavior however is rarely practical or possible to implement, and that is why CodeIgniter gives you the ability to configure a single key that is to be used (almost) every time.</source>
          <target state="translated">最大限のセキュリティを確保するために、そのようなキー&lt;em&gt;は&lt;/em&gt;できるだけ強力であるだけでなく、頻繁に変更する必要があることに注意する必要があります。ただし、このような動作が実装されることはめったに実用的または可能ではないため、CodeIgniterを使用すると、（ほぼ）毎回使用する単一のキーを構成できます。</target>
        </trans-unit>
        <trans-unit id="18dab8acb5d37c271840ed5a7e65c99d8fb29e62" translate="yes" xml:space="preserve">
          <source>It must extend &lt;code&gt;CodeIgniter\Config\BaseService&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CodeIgniter\Config\BaseService&lt;/code&gt; 拡張する必要があります</target>
        </trans-unit>
        <trans-unit id="e02c70dce90df70656c234aabbc56d3d20422909" translate="yes" xml:space="preserve">
          <source>It pre-processes global input data for security.</source>
          <target state="translated">セキュリティのためにグローバル入力データを前処理します。</target>
        </trans-unit>
        <trans-unit id="4589fdacf6d3b296030dfaf5705f17239dc3e97e" translate="yes" xml:space="preserve">
          <source>It provides some helper methods for fetching input data and pre-processing it.</source>
          <target state="translated">入力データの取得や前処理を行うためのヘルパーメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="13f043c368bb29d7a757bdd5e9888a2cf3b5a67f" translate="yes" xml:space="preserve">
          <source>It returns whatever the database drivers&amp;rsquo; &amp;ldquo;execute&amp;rdquo; function returns. That typically is TRUE/FALSE on success or failure for write type queries such as INSERT, DELETE or UPDATE statements (which is what it really should be used for) and a resource/object on success for queries with fetchable results.</source>
          <target state="translated">データベースドライバーの「実行」関数が返すものは何でも返します。これは通常、INSERT、DELETE、またはUPDATEステートメントなどの書き込みタイプのクエリ（実際に使用する必要があるもの）の成功または失敗のTRUE / FALSEと、フェッチ可能な結果を​​持つクエリの成功時のリソース/オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="35b7780d3d3c40727ea31310d0854608a335ff11" translate="yes" xml:space="preserve">
          <source>It should be noted that flashdata variables are regular session variables, managed inside the CodeIgniter session handler.</source>
          <target state="translated">flashdata変数は通常のセッション変数であり、CodeIgniterのセッションハンドラの中で管理されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e16ee7aab2f904d2beab08e0a007ac9d5a544b7c" translate="yes" xml:space="preserve">
          <source>It should be noted that flashdata variables are regular session vars, only marked in a specific way under the &amp;lsquo;__ci_vars&amp;rsquo; key (please don&amp;rsquo;t touch that one, you&amp;rsquo;ve been warned).</source>
          <target state="translated">flashdata変数は通常のセッション変数であり、「__ ci_vars」キーの下で特定の方法でのみマークされていることに注意してください（警告されているので、触れないでください）。</target>
        </trans-unit>
        <trans-unit id="724798158ce043b7a9e5a997670f70913caac2c1" translate="yes" xml:space="preserve">
          <source>It uses a form helper to create the form opening. Technically, this isn&amp;rsquo;t necessary. You could create the form using standard HTML. However, the benefit of using the helper is that it generates the action URL for you, based on the URL in your config file. This makes your application more portable in the event your URLs change.</source>
          <target state="translated">フォームヘルパーを使用してフォームの開口部を作成します。技術的には、これは必要ありません。標準のHTMLを使用してフォームを作成できます。ただし、ヘルパーを使用する利点は、設定ファイルのURLに基​​づいてアクションURLを生成することです。これにより、URLが変更された場合のアプリケーションの移植性が向上します。</target>
        </trans-unit>
        <trans-unit id="c0380cf74129b0f2f2320763e4f1346519d79484" translate="yes" xml:space="preserve">
          <source>It will also return the session ID by calling &lt;code&gt;session_id()&lt;/code&gt; if you try to access &lt;code&gt;$this-&amp;gt;session-&amp;gt;session_id&lt;/code&gt;.</source>
          <target state="translated">また、 &lt;code&gt;$this-&amp;gt;session-&amp;gt;session_id&lt;/code&gt; にアクセスしようとすると、 &lt;code&gt;session_id()&lt;/code&gt; を呼び出してセッションIDを返します。</target>
        </trans-unit>
        <trans-unit id="e8c10efb9fc24611bb86cc63521358717cee07c8" translate="yes" xml:space="preserve">
          <source>It won&amp;rsquo;t affect to the &lt;code&gt;show_404()&lt;/code&gt; function, which will continue loading the default &lt;em&gt;error_404.php&lt;/em&gt; file at &lt;em&gt;application/views/errors/error_404.php&lt;/em&gt;.</source>
          <target state="translated">これは &lt;code&gt;show_404()&lt;/code&gt; 関数には影響しません。この関数は、&lt;em&gt;application / views / errors / error_404.phpに&lt;/em&gt;あるデフォルトの&lt;em&gt;error_404.php&lt;/em&gt;ファイルをロードし続けます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6bb0e98c0e4d57375e0d4f0f8f5f74d7b3f1918b" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a good practice to use a common prefix for all messages in a given file to avoid collisions with similarly named items in other files. For example, if you are creating error messages you might prefix them with error_</source>
          <target state="translated">他のファイル内の同様の名前のアイテムとの衝突を避けるために、特定のファイル内のすべてのメッセージに共通のプレフィックスを使用することをお勧めします。たとえば、エラーメッセージを作成している場合は、それらの前にerror_を付けることができます。</target>
        </trans-unit>
        <trans-unit id="a43b31509f7d6d07f8998d9fa85bde41f1d9d437" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a very good security practice to escape your data before submitting it into your database. CodeIgniter has three methods that help you do this:</source>
          <target state="translated">データベースに送信する前にデータをエスケープすることは、非常に優れたセキュリティプラクティスです。CodeIgniterには、これを行うのに役立つ3つのメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="fc1901451b2199b19993dff7361665a39e57fd85" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s good practice to use a common prefix for all messages in a given file to avoid collisions with similarly named items in other files. For example, if you are creating error messages you might prefix them with error_</source>
          <target state="translated">特定のファイル内のすべてのメッセージに共通のプレフィックスを使用して、他のファイル内の同様の名前のアイテムとの衝突を回避することをお勧めします。たとえば、エラーメッセージを作成する場合は、プレフィックスとしてerror_を付けることができます。</target>
        </trans-unit>
        <trans-unit id="03691f328e0073329d8d231ccb3ba57fa3807d00" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important for you to know that the encoded messages the encryption function generates will be approximately 2.6 times longer than the original message. For example, if you encrypt the string &amp;ldquo;my super secret data&amp;rdquo;, which is 21 characters in length, you&amp;rsquo;ll end up with an encoded string that is roughly 55 characters (we say &amp;ldquo;roughly&amp;rdquo; because the encoded string length increments in 64 bit clusters, so it&amp;rsquo;s not exactly linear). Keep this information in mind when selecting your data storage mechanism. Cookies, for example, can only hold 4K of information.</source>
          <target state="translated">暗号化機能が生成するエンコードされたメッセージは、元のメッセージよりも約2.6倍長いことを知っておくことが重要です。たとえば、長さが21文字の文字列「my super secret data」を暗号化すると、エンコードされた文字列は約55文字になります（エンコードされた文字列の長さが64ずつ増加するため、「大まかに」と言います）ビットクラスタなので、正確に線形ではありません）。データストレージメカニズムを選択するときは、この情報に留意してください。たとえば、Cookieは4Kの情報しか保持できません。</target>
        </trans-unit>
        <trans-unit id="d6641c0023d871e2551971a2584af112af5fc537" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important for you to understand that once initialized, the Session class runs automatically. There is nothing you need to do to cause the above behavior to happen. You can, as you&amp;rsquo;ll see below, work with session data, but the process of reading, writing, and updating a session is automatic.</source>
          <target state="translated">初期化されると、Sessionクラスが自動的に実行されることを理解することが重要です。上記の動作を発生させるために必要なことは何もありません。以下に示すように、セッションデータを操作できますが、セッションの読み取り、書き込み、更新のプロセスは自動的に行われます。</target>
        </trans-unit>
        <trans-unit id="ea7bae69dbedcd51469afcc25cfa8fc1e1037d63" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s preferable, though, to pass the request in as a dependency if the class is anything other than the controller, where you can save it as a class property:</source>
          <target state="translated">ただし、クラスがコントローラー以外の場合は、リクエストを依存関係として渡すことをお勧めします。コントローラーでは、クラスプロパティとして保存できます。</target>
        </trans-unit>
        <trans-unit id="0b5e4f23b885bc15d872f08d6c91b7892c6bc18a" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s probably important for you to know that an encrypted string is usually longer than the original, plain-text string (depending on the cipher).</source>
          <target state="translated">暗号化された文字列は通常、元のプレーンテキストの文字列よりも長いことを知っておくことが重要です（暗号によって異なります）。</target>
        </trans-unit>
        <trans-unit id="ecdda59aea5ee67d7d854c969ccf7f4f4b4a4c54" translate="yes" xml:space="preserve">
          <source>Item</source>
          <target state="translated">Item</target>
        </trans-unit>
        <trans-unit id="8c1d6beff1ccc3599bacbca736bd55108dd8cfb8" translate="yes" xml:space="preserve">
          <source>Item value or FALSE if not found</source>
          <target state="translated">アイテムの値、または見つからなかった場合はFALSE</target>
        </trans-unit>
        <trans-unit id="3168545c521a827cdaf7a7ffdd0ce202a2f325ca" translate="yes" xml:space="preserve">
          <source>Item value or NULL if not found</source>
          <target state="translated">アイテムの値、または見つからない場合はNULL</target>
        </trans-unit>
        <trans-unit id="0b145c351b873b4d2ede694b334d3b69df9fedf5" translate="yes" xml:space="preserve">
          <source>Its namespace must be defined in &lt;code&gt;Config\Autoload.php&lt;/code&gt;</source>
          <target state="translated">その名前空間は &lt;code&gt;Config\Autoload.php&lt;/code&gt; 定義する必要があります</target>
        </trans-unit>
        <trans-unit id="09837d7ec7e563f0c20bd47465b2ce80ece21d27" translate="yes" xml:space="preserve">
          <source>JSONFormatter #1918</source>
          <target state="translated">JSONFormatter #1918</target>
        </trans-unit>
        <trans-unit id="1ca76be7b84d714e17e61b65c84bec4810f63dd5" translate="yes" xml:space="preserve">
          <source>Javascript</source>
          <target state="translated">Javascript</target>
        </trans-unit>
        <trans-unit id="d8e89e187b69b05993a962b0a0b48b2220a55edc" translate="yes" xml:space="preserve">
          <source>Javascript Class</source>
          <target state="translated">Javascriptクラス</target>
        </trans-unit>
        <trans-unit id="483b1191fe93d2b6bd5a0e46521f9146b7672214" translate="yes" xml:space="preserve">
          <source>Just as with any other variable, unsetting a value in &lt;code&gt;$_SESSION&lt;/code&gt; can be done through &lt;code&gt;unset()&lt;/code&gt;:</source>
          <target state="translated">他の変数と同様に、 &lt;code&gt;$_SESSION&lt;/code&gt; SESSIONの値の &lt;code&gt;unset()&lt;/code&gt; を解除するには、unset（）を使用します。</target>
        </trans-unit>
        <trans-unit id="ce6038f3595789827c6ee9adeb78e04d8f111a88" translate="yes" xml:space="preserve">
          <source>Just as with the &amp;lsquo;FileHandler&amp;rsquo; and &amp;lsquo;DatabaseHandler&amp;rsquo; drivers, you must also configure the storage location for your sessions via the &lt;code&gt;$sessionSavePath&lt;/code&gt; setting. The format here is a bit different and complicated at the same time. It is best explained by the &lt;em&gt;phpredis&lt;/em&gt; extension&amp;rsquo;s README file, so we&amp;rsquo;ll simply link you to it:</source>
          <target state="translated">'FileHandler'および 'DatabaseHandler'ドライバーと同様に、 &lt;code&gt;$sessionSavePath&lt;/code&gt; 設定を使用してセッションの保存場所も構成する必要があります。ここでの形式は少し異なり、同時に複雑です。&lt;em&gt;phpredis&lt;/em&gt;拡張機能のREADMEファイルで最もよく説明されているので、リンクするだけです。</target>
        </trans-unit>
        <trans-unit id="7d2a7abfdb52d3ec01b83e7a4950a183477877ac" translate="yes" xml:space="preserve">
          <source>Just as with the &amp;lsquo;files&amp;rsquo; and &amp;lsquo;database&amp;rsquo; drivers, you must also configure the storage location for your sessions via the &lt;code&gt;$config['sess_save_path']&lt;/code&gt; setting. The format here is a bit different and complicated at the same time. It is best explained by the &lt;em&gt;phpredis&lt;/em&gt; extension&amp;rsquo;s README file, so we&amp;rsquo;ll simply link you to it:</source>
          <target state="translated">「ファイル」および「データベース」ドライバーと同様に、 &lt;code&gt;$config['sess_save_path']&lt;/code&gt; 設定を介してセッションのストレージの場所を設定する必要もあります。ここのフォーマットは少し異なり、同時に複雑です。これは、&lt;em&gt;phpredis&lt;/em&gt;拡張機能のREADMEファイルで最もよく説明されているので、リンクします。</target>
        </trans-unit>
        <trans-unit id="2491e6bde0e91af60a09f7ea1fd9815f8a3bdea9" translate="yes" xml:space="preserve">
          <source>Just as with the other methods (resizing, cropping, and rotating) the general process for watermarking involves setting the preferences corresponding to the action you intend to perform, then calling the watermark function. Here is an example:</source>
          <target state="translated">他のメソッド(サイズ変更、トリミング、回転)と同様に、透かしの一般的なプロセスでは、実行したいアクションに対応する設定を設定してから、透かし関数を呼び出す必要があります。ここに例を示します。</target>
        </trans-unit>
        <trans-unit id="96ed68d775470cf8442b50eb6292a884ce6d02c0" translate="yes" xml:space="preserve">
          <source>Keep / reestablish the database connection if no queries have been sent for a length of time exceeding the server&amp;rsquo;s idle timeout.</source>
          <target state="translated">サーバーのアイドルタイムアウトを超えてクエリが送信されなかった場合は、データベース接続を維持または再確立します。</target>
        </trans-unit>
        <trans-unit id="25e5fbc071e8d065a46d0006c8fd2db32aad0921" translate="yes" xml:space="preserve">
          <source>Keep this information in mind when selecting your data storage mechanism. Cookies, for example, can only hold 4K of information.</source>
          <target state="translated">データ保存メカニズムを選択する際には、この情報を念頭に置いてください。例えば、クッキーは4Kの情報しか保持できません。</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="ebf4d367be08cbb6c85e8815b4d4db37ec0899bd" translate="yes" xml:space="preserve">
          <source>Key lengths (bits / bytes)</source>
          <target state="translated">鍵の長さ(ビット/バイト</target>
        </trans-unit>
        <trans-unit id="cacccf2d59fc572cf2493081d5294cce68f00088" translate="yes" xml:space="preserve">
          <source>Kint was updated from the 2.x branch to the latest 3.x branch, with new config file to specify options</source>
          <target state="translated">Kint が 2.x ブランチから最新の 3.x ブランチに更新され、オプションを指定するための新しい設定ファイルが追加されました。</target>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="2ee6c0eebfc9b48a2e05fc3e65cc2d7d8c226d33" translate="yes" xml:space="preserve">
          <source>Language #1480, #1489</source>
          <target state="translated">言語 #1480,#1489</target>
        </trans-unit>
        <trans-unit id="a0bf559a0c572c713974d5e5bd48984750433689" translate="yes" xml:space="preserve">
          <source>Language #1587, #1562, #1610</source>
          <target state="translated">言語#1587、#1562、#1610</target>
        </trans-unit>
        <trans-unit id="08090548ebb33b6177e31edb60cf8d8151c59d61" translate="yes" xml:space="preserve">
          <source>Language #1641</source>
          <target state="translated">言語#1641</target>
        </trans-unit>
        <trans-unit id="a5b62ae8fa715e3de396d77474ea916aef8a842e" translate="yes" xml:space="preserve">
          <source>Language Class</source>
          <target state="translated">言語クラス</target>
        </trans-unit>
        <trans-unit id="a10cab33e5a3907293f3774bf75e57016709aa84" translate="yes" xml:space="preserve">
          <source>Language Fallback</source>
          <target state="translated">言語フォールバック</target>
        </trans-unit>
        <trans-unit id="fcd410f7a7be1aa00daa512a04ead06a000c5055" translate="yes" xml:space="preserve">
          <source>Language Files</source>
          <target state="translated">言語ファイル</target>
        </trans-unit>
        <trans-unit id="bb1cf7364dda164e2dfd6089c6047b35b9f52fd6" translate="yes" xml:space="preserve">
          <source>Language Helper</source>
          <target state="translated">言語ヘルパー</target>
        </trans-unit>
        <trans-unit id="2e43ed39efae3f83f92745827d327d968159b271" translate="yes" xml:space="preserve">
          <source>Language Localization</source>
          <target state="translated">言語のローカライズ</target>
        </trans-unit>
        <trans-unit id="8bfed6a52e6e888d2b329dc153e98dc3ac2233a2" translate="yes" xml:space="preserve">
          <source>Language files also allow nested arrays to make working with lists, etc&amp;hellip; easier.</source>
          <target state="translated">言語ファイルを使用すると、ネストされた配列でリストなどの操作が簡単になります。</target>
        </trans-unit>
        <trans-unit id="5b1a59bd699c65094a2724a0bd222f07a72c37f1" translate="yes" xml:space="preserve">
          <source>Language files are located automatically from defined namespaces when using the &lt;code&gt;lang()&lt;/code&gt; method, as long as the file follows the same directory structures as the main application directory.</source>
          <target state="translated">言語ファイルは、ファイルがメインアプリケーションディレクトリと同じディレクトリ構造に従っている限り、 &lt;code&gt;lang()&lt;/code&gt; メソッドを使用するときに定義された名前空間から自動的に配置されます。</target>
        </trans-unit>
        <trans-unit id="4fbff0545707d2b5f2b2f3e3bd53b2075605f96b" translate="yes" xml:space="preserve">
          <source>Language files found in the &lt;em&gt;system/language/&lt;/em&gt; directory</source>
          <target state="translated">&lt;em&gt;system / language /&lt;/em&gt;ディレクトリにある言語ファイル</target>
        </trans-unit>
        <trans-unit id="acc95e18045cff08f47333ad958ef4c18e29aaf2" translate="yes" xml:space="preserve">
          <source>Language files must be named with &lt;strong&gt;_lang.php&lt;/strong&gt; as the filename extension. For example, let&amp;rsquo;s say you want to create a file containing error messages. You might name it: error_lang.php</source>
          <target state="translated">言語ファイルには、ファイル名拡張子として&lt;strong&gt;_lang.phpを使用&lt;/strong&gt;して名前を&lt;strong&gt;付ける&lt;/strong&gt;必要があります。たとえば、エラーメッセージを含むファイルを作成するとします。あなたはそれに名前を付けるかもしれません：error_lang.php</target>
        </trans-unit>
        <trans-unit id="591efee3567dce0d82d348da2ecabd6f21a97837" translate="yes" xml:space="preserve">
          <source>Language line string or FALSE on failure</source>
          <target state="translated">失敗した場合は言語行文字列または FALSE</target>
        </trans-unit>
        <trans-unit id="bc4c49b39cfaf5d6564a02c36ee154f605118b85" translate="yes" xml:space="preserve">
          <source>Language strings are stored in the &lt;strong&gt;app/Language&lt;/strong&gt; directory, with a sub-directory for each supported language:</source>
          <target state="translated">言語文字列は、サポートされている各言語のサブディレクトリとともに、&lt;strong&gt;app / Language&lt;/strong&gt;ディレクトリに保存されます。</target>
        </trans-unit>
        <trans-unit id="66a97ff134d1139d278050c024d40ad1a7033df1" translate="yes" xml:space="preserve">
          <source>Language/</source>
          <target state="translated">Language/</target>
        </trans-unit>
        <trans-unit id="b472a567f74316c4c21abc43962a496471b8a999" translate="yes" xml:space="preserve">
          <source>Language/en/</source>
          <target state="translated">Language/en/</target>
        </trans-unit>
        <trans-unit id="0a371afc433d02fa877ac93d31c8aa429ae85293" translate="yes" xml:space="preserve">
          <source>LanguageTest #1480</source>
          <target state="translated">LanguageTest #1480</target>
        </trans-unit>
        <trans-unit id="c9dc56e80140b9eff6e7b786d36a11602d681b30" translate="yes" xml:space="preserve">
          <source>LanguageTest #1643</source>
          <target state="translated">LanguageTest #1643</target>
        </trans-unit>
        <trans-unit id="257ee2d99a78320226aed3d20b23cd0e446ce15f" translate="yes" xml:space="preserve">
          <source>Languages do not have any specific naming convention that are required. The file should be named logically to describe the type of content it holds. For example, let&amp;rsquo;s say you want to create a file containing error messages. You might name it simply: &lt;strong&gt;Errors.php&lt;/strong&gt;.</source>
          <target state="translated">言語には、必要な特定の命名規則はありません。ファイルは、保持するコンテンツのタイプを説明するために論理的に名前を付ける必要があります。たとえば、エラーメッセージを含むファイルを作成するとします。簡単に名前を付けることができます：&lt;strong&gt;Errors.php&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="6572fe248b6eb70dde5981d1e6bbed47c6e542a3" translate="yes" xml:space="preserve">
          <source>Large library of &amp;ldquo;helper&amp;rdquo; functions</source>
          <target state="translated">「ヘルパー」関数の大規模なライブラリ</target>
        </trans-unit>
        <trans-unit id="a53a26713f5b65c27d32180a2b90689e50783f18" translate="yes" xml:space="preserve">
          <source>Last row of result set, or NULL if it doesn&amp;rsquo;t exist</source>
          <target state="translated">結果セットの最後の行。存在しない場合はNULL</target>
        </trans-unit>
        <trans-unit id="4f2480315af1082d7e8ab7c4781ea98d73e1c2ab" translate="yes" xml:space="preserve">
          <source>Lastly, if a corresponding value is not found for a given key (if there is an odd number of URI segments) the value will be set to NULL.</source>
          <target state="translated">最後に、与えられたキーに対して対応する値が見つからない場合(奇数のURIセグメントがある場合)、値はNULLに設定されます。</target>
        </trans-unit>
        <trans-unit id="5b528541f967aec08cd8d757391014ee961cadbf" translate="yes" xml:space="preserve">
          <source>Lastly, we need to point out that the result object that is cached is a simplified version of the full result object. For that reason, some of the query result functions are not available for use.</source>
          <target state="translated">最後に、キャッシュされる結果オブジェクトは、完全な結果オブジェクトの簡略化されたバージョンであることを指摘する必要があります。そのため、いくつかのクエリ結果関数は使用できません。</target>
        </trans-unit>
        <trans-unit id="6424651b91b0ba29ae7231afdba0dcb85705c766" translate="yes" xml:space="preserve">
          <source>Latest Dev</source>
          <target state="translated">最新のデヴ</target>
        </trans-unit>
        <trans-unit id="1436c4a4b9c247c25d7e99520360835f787eb004" translate="yes" xml:space="preserve">
          <source>Layouts are views like any other. The only difference is their intended usage. Layouts are the only view files that would make use of the &lt;code&gt;renderSection()&lt;/code&gt; method. This method acts as a placeholder for content.</source>
          <target state="translated">レイアウトは他のビューと同じです。唯一の違いは、それらの使用目的です。レイアウトは、 &lt;code&gt;renderSection()&lt;/code&gt; メソッドを使用する唯一のビューファイルです。このメソッドは、コンテンツのプレースホルダーとして機能します。</target>
        </trans-unit>
        <trans-unit id="9122e8f764c11ef4cbd77eb75bbd654d2ac96ec0" translate="yes" xml:space="preserve">
          <source>Legacy Support</source>
          <target state="translated">レガシーサポート</target>
        </trans-unit>
        <trans-unit id="a5fec139b3235a16f5f31a77356272ac3b5f46b7" translate="yes" xml:space="preserve">
          <source>Less than and greater than characters: &amp;lt; &amp;gt;</source>
          <target state="translated">小なり記号と大なり記号：&amp;lt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="85504d45cecefb4fa086aef8cc2808bc7c2501e1" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s continue with preparing the record that is going to be inserted later, inside the &lt;code&gt;$data&lt;/code&gt; array. Each element corresponds with a column in the database table created earlier. You might notice a new method here, namely the &lt;code&gt;post()&lt;/code&gt; method from the &lt;a href=&quot;../libraries/input&quot;&gt;input library&lt;/a&gt;. This method makes sure the data is sanitized, protecting you from nasty attacks from others. The input library is loaded by default. At last, you insert our &lt;code&gt;$data&lt;/code&gt; array into our database.</source>
          <target state="translated">&lt;code&gt;$data&lt;/code&gt; 配列内に後で挿入されるレコードの準備を続けましょう。各要素は、前に作成したデータベーステーブルの列に対応しています。ここで、新しいメソッド、つまり&lt;a href=&quot;../libraries/input&quot;&gt;入力ライブラリの&lt;/a&gt; &lt;code&gt;post()&lt;/code&gt; メソッドに気付くでしょう。この方法により、データが確実にサニタイズされ、他人からの厄介な攻撃からユーザーを保護します。入力ライブラリはデフォルトでロードされます。最後に、 &lt;code&gt;$data&lt;/code&gt; 配列をデータベースに挿入します。</target>
        </trans-unit>
        <trans-unit id="379685906f34e3e7864afe840de42f146dad655a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a simple controller so you can see it in action. Using your text editor, create a file called Blog.php, and put the following code in it:</source>
          <target state="translated">実際の動作を確認できるように、簡単なコントローラーを作成しましょう。テキストエディターを使用して、Blog.phpというファイルを作成し、その中に次のコードを挿入します。</target>
        </trans-unit>
        <trans-unit id="7262f3fd8e028f6db4052be4f634ade90a943ead" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a simple controller so you can see it in action. Using your text editor, create a file called Helloworld.php, and put the following code in it:</source>
          <target state="translated">簡単なコントローラーを作成して、実際の動作を確認してみましょう。テキストエディタを使用して、Helloworld.phpというファイルを作成し、その中に次のコードを配置します。</target>
        </trans-unit>
        <trans-unit id="0f0fbbd501f34c77584f2fb69349ad1203f4d1b7" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a simple controller so you can see it in action. Using your text editor, create a file called Tools.php, and put the following code in it:</source>
          <target state="translated">実際の動作を確認できるように、簡単なコントローラーを作成しましょう。テキストエディタを使用して、Tools.phpというファイルを作成し、次のコードをその中に入れます。</target>
        </trans-unit>
        <trans-unit id="e0d3a54efcb476862d2d3c98c67be13ed20eea9a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create those three things, using a member sign-up form as the example.</source>
          <target state="translated">メンバー登録フォームを例にして、これら3つを作成しましょう。</target>
        </trans-unit>
        <trans-unit id="1bc1fced79469db43c5452dc032b1feff2a91766" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s do that. Open the routing file located at &lt;em&gt;application/config/routes.php&lt;/em&gt; and add the following two lines. Remove all other code that sets any element in the &lt;code&gt;$route&lt;/code&gt; array.</source>
          <target state="translated">それをしましょう。&lt;em&gt;application / config / routes.phpに&lt;/em&gt;あるルーティングファイルを開き、次の2行を追加します。 &lt;code&gt;$route&lt;/code&gt; 配列の要素を設定する他のすべてのコードを削除します。</target>
        </trans-unit>
        <trans-unit id="3f85f201ae32c08f94b053794a1f7dcdbcc72e22" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s do that. Open the routing file located at &lt;strong&gt;app/Config/Routes.php&lt;/strong&gt; and look for the &amp;ldquo;Route Definitions&amp;rdquo; section of the configuration file.</source>
          <target state="translated">そうしよう。&lt;strong&gt;app / Config / Routes.phpに&lt;/strong&gt;あるルーティングファイルを開き、構成ファイルの「ルート定義」セクションを探します。</target>
        </trans-unit>
        <trans-unit id="2564e2c489c0d44fb79805161f4a945efde74020" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s make our first controller</source>
          <target state="translated">最初のコントローラーを作りましょう</target>
        </trans-unit>
        <trans-unit id="ea71b2b6277059358ba84785d284893e83af2fa4" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say a particular user logs into your site. Once authenticated, you could add their username and e-mail address to the session, making that data globally available to you without having to run a database query when you need it.</source>
          <target state="translated">特定のユーザーがサイトにログインするとします。認証されたら、ユーザー名と電子メールアドレスをセッションに追加して、必要なときにデータベースクエリを実行しなくても、そのデータをグローバルに利用できるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="d829656a9bbed35a8e3d1acb7a9531a028e0a481" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say that a third-party script was trying to hit a URL repeatedly. At first, it would be able to use all 60 of those tokens in less than a second. However, after that the Throttler would only allow one action per second, potentially slowing down the requests enough that they attack is no longer worth it.</source>
          <target state="translated">サードパーティのスクリプトがURLを繰り返しヒットしようとしたとしましょう。最初は、60個すべてのトークンを1秒未満で使用できます。ただし、その後、Throttlerは1秒あたり1つのアクションしか許可しないため、リクエストの速度が低下して攻撃する価値がなくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="4ba04439c58cef2d4fbe005e364b881d315c55fa" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say we want an action to happen once every second. The first call to the Throttler would look like the following. The first parameter is the bucket name, the second parameter the number of tokens the bucket holds, and the third being the amount of time it takes the bucket to refill:</source>
          <target state="translated">1秒に1回アクションを実行したいとします。Throttlerへの最初の呼び出しは次のようになります。最初のパラメーターはバケット名、2番目のパラメーターはバケットが保持するトークンの数、3番目はバケットが補充されるのにかかる時間です。</target>
        </trans-unit>
        <trans-unit id="949a4c40802c4c9b2cf281703285a9b61d5f1c40" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you have to interact with another system that is out of your control and uses another method to encrypt data. A method that will most certainly not match the above-described sequence and probably not use all of the steps either.</source>
          <target state="translated">制御不能で別の方法を使用してデータを暗号化している別のシステムと対話する必要があるとしましょう。上記のシーケンスと一致せず、おそらくすべてのステップを使用しない方法。</target>
        </trans-unit>
        <trans-unit id="057f1bcb662b4fa48d267604a2845ac8fd684011" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s step through an example command whose only function is to report basic information about the application itself, for demonstration purposes. Start by creating a new file at &lt;strong&gt;/app/Commands/AppInfo.php&lt;/strong&gt;. It should contain the following code:</source>
          <target state="translated">デモの目的で、アプリケーション自体に関する基本情報を報告することだけが機能するコマンドの例を見ていきましょう。&lt;strong&gt;/app/Commands/AppInfo.phpに&lt;/strong&gt;新しいファイルを作成することから&lt;strong&gt;始め&lt;/strong&gt;ます。次のコードが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="425e6758407742378ec4d4e681b0c3e9612c5e4b" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a closer look at each of these three main components.</source>
          <target state="translated">これらの3つの主要コンポーネントのそれぞれを詳しく見てみましょう。</target>
        </trans-unit>
        <trans-unit id="f13c54589690f17b20c425e1b8cea7187b866239" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it with your controller file. Open it add this code:</source>
          <target state="translated">コントローラーファイルで試してみましょう。それを開き、次のコードを追加します。</target>
        </trans-unit>
        <trans-unit id="b69c689724f51dda55fe175e5e84c12f366a0670" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it with your controller file. Open it and add this code:</source>
          <target state="translated">コントローラファイルで試してみましょう。それを開き、次のコードを追加します。</target>
        </trans-unit>
        <trans-unit id="91431572c804983ba5c12bb84ab6e09d88a03978" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it. Add a new method to your controller:</source>
          <target state="translated">試してみよう。コントローラに新しいメソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="98854c1031b30b0e41990830dc088d9ccf54ddf4" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it: Hello World!</source>
          <target state="translated">やってみましょう：Hello World！</target>
        </trans-unit>
        <trans-unit id="136afde6efba39fba60c63ef5db809bd68322bac" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s walk through a very simple User Entity and how we&amp;rsquo;d work with it to help make things clear.</source>
          <target state="translated">非常に単純なユーザーエンティティと、それをどのように使用して状況を明確にするかについて説明します。</target>
        </trans-unit>
        <trans-unit id="1e23ab5b4393e6fe2aa38a3e481873c66bd2550c" translate="yes" xml:space="preserve">
          <source>Lets you clear the table heading and row data. If you need to show multiple tables with different data you should to call this method after each table has been generated to clear the previous table information. Example:</source>
          <target state="translated">表の見出しと行のデータをクリアします。異なるデータを持つ複数のテーブルを表示する必要がある場合は、各テーブルが生成された後にこのメソッドを呼び出して前のテーブル情報をクリアする必要があります。例</target>
        </trans-unit>
        <trans-unit id="4da12ee05657b9ba03a6fc01aef31d30bd1cea73" translate="yes" xml:space="preserve">
          <source>Lets you clear the table heading, row data and caption. If you need to show multiple tables with different data you should to call this method after each table has been generated to clear the previous table information.</source>
          <target state="translated">表の見出し、行データ、キャプションをクリアします。異なるデータを持つ複数の表を表示する必要がある場合は、各表が生成された後にこのメソッドをコールして前の表の情報をクリアする必要があります。</target>
        </trans-unit>
        <trans-unit id="8ebb0b9488b88a67c1033f6a7aabba4698876551" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;embed /&amp;gt; tags. The first parameter contains the embed source. Example:</source>
          <target state="translated">HTMLの&amp;lt;embed /&amp;gt;タグを作成できます。最初のパラメーターには、埋め込みソースが含まれています。例：</target>
        </trans-unit>
        <trans-unit id="0b0bfceceefa12e281006205c2bcc8cf5761ded2" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;img /&amp;gt; tags. The first parameter contains the image source. Example:</source>
          <target state="translated">HTML &amp;lt;img /&amp;gt;タグを作成できます。最初のパラメータには画像ソースが含まれています。例：</target>
        </trans-unit>
        <trans-unit id="8ec5149f82b8a3e6c930552da9f38a13b388f3e8" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;link /&amp;gt; tags. This is useful for stylesheet links, as well as other links. The parameters are &lt;em&gt;href&lt;/em&gt;, with optional &lt;em&gt;rel&lt;/em&gt;, &lt;em&gt;type&lt;/em&gt;, &lt;em&gt;title&lt;/em&gt;, &lt;em&gt;media&lt;/em&gt; and &lt;em&gt;indexPage&lt;/em&gt;.</source>
          <target state="translated">HTMLの&amp;lt;link /&amp;gt;タグを作成できます。これは、スタイルシートリンクやその他のリンクに役立ちます。パラメータは&lt;em&gt;href&lt;/em&gt;で、オプションの&lt;em&gt;rel&lt;/em&gt;、&lt;em&gt;type&lt;/em&gt;、&lt;em&gt;title&lt;/em&gt;、&lt;em&gt;media&lt;/em&gt;、&lt;em&gt;indexPageがあり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="2660ddaa0db6493c34040bf4aa235bfb048fca4c" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;link /&amp;gt; tags. This is useful for stylesheet links, as well as other links. The parameters are &lt;em&gt;href&lt;/em&gt;, with optional &lt;em&gt;rel&lt;/em&gt;, &lt;em&gt;type&lt;/em&gt;, &lt;em&gt;title&lt;/em&gt;, &lt;em&gt;media&lt;/em&gt; and &lt;em&gt;index_page&lt;/em&gt;.</source>
          <target state="translated">HTML &amp;lt;link /&amp;gt;タグを作成できます。これは、スタイルシートのリンクやその他のリンクに役立ちます。パラメータは&lt;em&gt;hrefで&lt;/em&gt;、&lt;em&gt;rel&lt;/em&gt;、&lt;em&gt;type&lt;/em&gt;、&lt;em&gt;title&lt;/em&gt;、&lt;em&gt;media&lt;/em&gt;、&lt;em&gt;index_pageはオプション&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="13d970752d33fe98f2dc98593a8fc808c6edd33e" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;object /&amp;gt; tags. The first parameter contains the object data. Example:</source>
          <target state="translated">HTMLの&amp;lt;object /&amp;gt;タグを作成できます。最初のパラメーターには、オブジェクトデータが含まれています。例：</target>
        </trans-unit>
        <trans-unit id="198715110af2f9062ec3e839ded6eeeeb0bcccea" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;param /&amp;gt; tags. The first parameter contains the param source. Example:</source>
          <target state="translated">HTMLの&amp;lt;param /&amp;gt;タグを作成できます。最初のパラメーターには、パラメーターソースが含まれています。例：</target>
        </trans-unit>
        <trans-unit id="fd0451fcacf3f3488ec98d6b535ed23412268566" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;script&amp;gt;&amp;lt;/script&amp;gt; tags. The parameters is &lt;em&gt;src&lt;/em&gt;, with optional &lt;em&gt;indexPage&lt;/em&gt;.</source>
          <target state="translated">HTMLの&amp;lt;script&amp;gt; &amp;lt;/ script&amp;gt;タグを作成できます。パラメータは&lt;em&gt;src&lt;/em&gt;で、オプションの&lt;em&gt;indexPageがあり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="24be98e0622c5c2cec0c37e666c4a7570cf25053" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;source /&amp;gt; tags. The first parameter contains the source source. Example:</source>
          <target state="translated">HTMLの&amp;lt;source /&amp;gt;タグを作成できます。最初のパラメーターには、ソースソースが含まれています。例：</target>
        </trans-unit>
        <trans-unit id="1b7d4d7707bdb8cf59912a95f17787edb6d7dcab" translate="yes" xml:space="preserve">
          <source>Lets you create HTML heading tags. The first parameter will contain the data, the second the size of the heading. Example:</source>
          <target state="translated">HTMLの見出しタグを作成します。最初のパラメータにはデータを、2番目のパラメータには見出しのサイズを指定します。例。</target>
        </trans-unit>
        <trans-unit id="f9bd80889297aa81c099eb19694e2f80392ba3f0" translate="yes" xml:space="preserve">
          <source>Lets you create a directory on your server. Supply the path ending in the folder name you wish to create, with a trailing slash.</source>
          <target state="translated">サーバー上にディレクトリを作成します。作成したいフォルダ名で終わるパスを、最後にスラッシュをつけて指定します。</target>
        </trans-unit>
        <trans-unit id="17e87de1b02132110e205241335e11721119f97e" translate="yes" xml:space="preserve">
          <source>Lets you create a standard drop-down field. The first parameter will contain the name of the field, the second parameter will contain an associative array of options, and the third parameter will contain the value you wish to be selected. You can also pass an array of multiple items through the third parameter, and CodeIgniter will create a multiple select for you.</source>
          <target state="translated">標準のドロップダウンフィールドを作成します。最初のパラメータにはフィールドの名前、2番目のパラメータにはオプションの連想配列、3番目のパラメータには選択したい値を指定します。3 番目のパラメータに複数の項目の配列を渡すこともでき、CodeIgniter が複数選択を作成してくれます。</target>
        </trans-unit>
        <trans-unit id="a8dc0bffe8e1750fc80a5e0fd2929c210f6976a8" translate="yes" xml:space="preserve">
          <source>Lets you create a standard drop-down field. The first parameter will contain the name of the field, the second parameter will contain an associative array of options, and the third parameter will contain the value you wish to be selected. You can also pass an array of multiple items through the third parameter, and the helper will create a multiple select for you.</source>
          <target state="translated">標準のドロップダウンフィールドを作成します。最初のパラメータにはフィールドの名前、2 番目のパラメータにはオプションの連想配列、 そして 3 番目のパラメータには選択したい値を指定します。3 番目のパラメータに複数の項目の配列を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="610c9f7ae46b2b883c1f9e3815c71f305540df01" translate="yes" xml:space="preserve">
          <source>Lets you create a standard multiselect field. The first parameter will contain the name of the field, the second parameter will contain an associative array of options, and the third parameter will contain the value or values you wish to be selected.</source>
          <target state="translated">標準のマルチセレクトフィールドを作成します。最初のパラメータにはフィールド名、2 番目のパラメータにはオプションの連想配列、3 番目のパラメータには選択したい値または値を指定します。</target>
        </trans-unit>
        <trans-unit id="8aa1a1e76883ea3726ff481a6a782b70bec2c76b" translate="yes" xml:space="preserve">
          <source>Lets you delete a cookie. Unless you&amp;rsquo;ve set a custom path or other values, only the name of the cookie is needed.</source>
          <target state="translated">Cookieを削除できます。カスタムパスやその他の値を設定していない限り、必要なのはCookieの名前だけです。</target>
        </trans-unit>
        <trans-unit id="803dde3593220383f6c805baf0dfb33da0084cb0" translate="yes" xml:space="preserve">
          <source>Lets you delete a directory and everything it contains. Supply the source path to the directory with a trailing slash.</source>
          <target state="translated">ディレクトリとその中に含まれるすべてのものを削除します。ディレクトリへのソースパスを最後のスラッシュで指定します。</target>
        </trans-unit>
        <trans-unit id="bb886ea3c258c117185e1bea42cf4ae0f881368c" translate="yes" xml:space="preserve">
          <source>Lets you delete a file. Supply the source path with the file name.</source>
          <target state="translated">ファイルを削除します。ソースパスにファイル名を指定します。</target>
        </trans-unit>
        <trans-unit id="c945d9f0f5989982c0977686f78906be0baba978" translate="yes" xml:space="preserve">
          <source>Lets you determine if the user agent accepts a particular character set. Example:</source>
          <target state="translated">ユーザーエージェントが特定の文字セットを受け入れるかどうかを判断します。例。</target>
        </trans-unit>
        <trans-unit id="52fa36fe5833bb360df9cbebac5727f077527450" translate="yes" xml:space="preserve">
          <source>Lets you determine if the user agent accepts a particular language. Example:</source>
          <target state="translated">ユーザーエージェントが特定の言語を受け入れるかどうかを判断します。例。</target>
        </trans-unit>
        <trans-unit id="f1573efb96215afa9cb2cebe44137222a851a391" translate="yes" xml:space="preserve">
          <source>Lets you fetch a number of items from an array. The function tests whether each of the array indices is set. If an index does not exist it is set to NULL, or whatever you&amp;rsquo;ve specified as the default value via the third parameter.</source>
          <target state="translated">配列からいくつかの項目をフェッチできます。この関数は、各配列インデックスが設定されているかどうかをテストします。インデックスが存在しない場合は、NULL、または3番目のパラメーターを介してデフォルト値として指定したものに設定されます。</target>
        </trans-unit>
        <trans-unit id="4660bec13c30c98eacd6e4366ca498ee63caed42" translate="yes" xml:space="preserve">
          <source>Lets you fetch an item from an array. The function tests whether the array index is set and whether it has a value. If a value exists it is returned. If a value does not exist it returns NULL, or whatever you&amp;rsquo;ve specified as the default value via the third parameter.</source>
          <target state="translated">配列からアイテムをフェッチできます。この関数は、配列インデックスが設定されているかどうか、および値があるかどうかをテストします。値が存在する場合はそれが返されます。値が存在しない場合は、NULL、または3番目のパラメーターを介してデフォルト値として指定したものを返します。</target>
        </trans-unit>
        <trans-unit id="075aae449a5a8b7fad41139c0b27d0cac85f63f9" translate="yes" xml:space="preserve">
          <source>Lets you generate a &amp;lt;label&amp;gt;. Simple example:</source>
          <target state="translated">&amp;lt;label&amp;gt;を生成できます。簡単な例：</target>
        </trans-unit>
        <trans-unit id="44f2bbad8758a3202773b6cb2eb35557413779da" translate="yes" xml:space="preserve">
          <source>Lets you generate a checkbox field. Simple example:</source>
          <target state="translated">チェックボックスフィールドを生成します。簡単な例です。</target>
        </trans-unit>
        <trans-unit id="db238792e698627ead3f40d4336fac2325c77ae8" translate="yes" xml:space="preserve">
          <source>Lets you generate a date string in one of several standardized formats.</source>
          <target state="translated">いくつかの標準化されたフォーマットのいずれかで日付文字列を生成することができます。</target>
        </trans-unit>
        <trans-unit id="2416e5ec9e5e05a90be1395e849c2366a2a2169b" translate="yes" xml:space="preserve">
          <source>Lets you generate a standard button element. You can minimally pass the button name and content in the first and second parameter:</source>
          <target state="translated">標準の button 要素を生成します。最初と2番目のパラメータには、ボタン名と内容を最小限に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="8eeee9bc3ac6a950df194f18fbc81253ee793fe8" translate="yes" xml:space="preserve">
          <source>Lets you generate a standard reset button. Use is identical to &lt;code&gt;form_submit()&lt;/code&gt;.</source>
          <target state="translated">標準のリセットボタンを生成できます。使用方法は &lt;code&gt;form_submit()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="62b06e846360c659c96c7720ac294d6d077bcdbf" translate="yes" xml:space="preserve">
          <source>Lets you generate a standard submit button. Simple example:</source>
          <target state="translated">標準的な送信ボタンを生成できます。簡単な例です。</target>
        </trans-unit>
        <trans-unit id="d71d30e69ee2c53e70c93469c0a9437d08385dee" translate="yes" xml:space="preserve">
          <source>Lets you generate a standard text input field. You can minimally pass the field name and value in the first and second parameter:</source>
          <target state="translated">標準のテキスト入力フィールドを生成します。最初と2番目のパラメータには、フィールド名と値を最小限に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="c78bdbf8524fd7718973b3a885ac89ad653453a7" translate="yes" xml:space="preserve">
          <source>Lets you generate fieldset/legend fields.</source>
          <target state="translated">fieldset/legendフィールドを生成します。</target>
        </trans-unit>
        <trans-unit id="c86ceb69af8d99fecf74e35036a3a965029c1071" translate="yes" xml:space="preserve">
          <source>Lets you generate hidden input fields. You can either submit a name/value string to create one field:</source>
          <target state="translated">隠し入力フィールドを生成できます。名前と値の文字列を入力して、1つのフィールドを作成することができます。</target>
        </trans-unit>
        <trans-unit id="a2e2a2c907fb7dd3b8224a6ccdf64260c66d5813" translate="yes" xml:space="preserve">
          <source>Lets you limit the number of rows you would like returned by the query:</source>
          <target state="translated">クエリから返される行の数を制限します。</target>
        </trans-unit>
        <trans-unit id="b71ca6e12e10e9ad89c60f5ac826b75944d9327c" translate="yes" xml:space="preserve">
          <source>Lets you move a file. Supply the source and destination paths:</source>
          <target state="translated">ファイルを移動させます。移動元と移動先のパスを指定します。</target>
        </trans-unit>
        <trans-unit id="4df2206e297cdbec80854756b325535a4efd4149" translate="yes" xml:space="preserve">
          <source>Lets you retrieve the transaction status flag to determine if it has failed.</source>
          <target state="translated">トランザクションステータスフラグを取得して、失敗したかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="90168ad37f66c3c2e99df0136c3650fc89e9ef96" translate="yes" xml:space="preserve">
          <source>Lets you set a default value for use in any table cells that are empty. You might, for example, set a non-breaking space:</source>
          <target state="translated">空のテーブルセルで使用するデフォルト値を設定できます。例えば、非改行スペースを設定することができます。</target>
        </trans-unit>
        <trans-unit id="30be926d329d9213a8bc43a7c20b5916f2d0b498" translate="yes" xml:space="preserve">
          <source>Lets you set an ORDER BY clause.</source>
          <target state="translated">ORDER BY句を設定することができます。</target>
        </trans-unit>
        <trans-unit id="7c7f5d049fad2569721d446c4a811f9bd5da5393" translate="yes" xml:space="preserve">
          <source>Level</source>
          <target state="translated">Level</target>
        </trans-unit>
        <trans-unit id="742bf954fec5a42a84c13456f12a8473dbbda677" translate="yes" xml:space="preserve">
          <source>Level can be one of the following values: &lt;strong&gt;emergency&lt;/strong&gt;, &lt;strong&gt;alert&lt;/strong&gt;, &lt;strong&gt;critical&lt;/strong&gt;, &lt;strong&gt;error&lt;/strong&gt;, &lt;strong&gt;warning&lt;/strong&gt;, &lt;strong&gt;notice&lt;/strong&gt;, &lt;strong&gt;info&lt;/strong&gt;, or &lt;strong&gt;debug&lt;/strong&gt;.</source>
          <target state="translated">レベルは、&lt;strong&gt;緊急&lt;/strong&gt;、&lt;strong&gt;アラート&lt;/strong&gt;、&lt;strong&gt;クリティカル&lt;/strong&gt;、&lt;strong&gt;エラー&lt;/strong&gt;、&lt;strong&gt;警告&lt;/strong&gt;、&lt;strong&gt;通知&lt;/strong&gt;、&lt;strong&gt;情報&lt;/strong&gt;、または&lt;strong&gt;デバッグの&lt;/strong&gt;いずれかの値に&lt;strong&gt;なり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="27c968e6692b41bf6e1a241b870dc41ff1a51b17" translate="yes" xml:space="preserve">
          <source>Libraries</source>
          <target state="translated">Libraries</target>
        </trans-unit>
        <trans-unit id="add0f98c92eaf797a6f7ae0402fa983e7d3b6e40" translate="yes" xml:space="preserve">
          <source>Libraries &amp;amp; Helpers</source>
          <target state="translated">ライブラリとヘルパー</target>
        </trans-unit>
        <trans-unit id="29d4125c1485c486a2c92097d8d44a9bffc3bc0f" translate="yes" xml:space="preserve">
          <source>Libraries are always instantiated by their fully-qualified class name, so no special access is provided:</source>
          <target state="translated">ライブラリは常に完全修飾されたクラス名でインスタンス化されるため、特別なアクセスは提供されません。</target>
        </trans-unit>
        <trans-unit id="b8100f5ba8bd048a7cf11d116fbbd73130c3c6f5" translate="yes" xml:space="preserve">
          <source>Library</source>
          <target state="translated">Library</target>
        </trans-unit>
        <trans-unit id="ef55040e6a354daf7a9fc8b7ad6813967db2d32c" translate="yes" xml:space="preserve">
          <source>Library Reference</source>
          <target state="translated">ライブラリーレファレンス</target>
        </trans-unit>
        <trans-unit id="a1f6de5b230d0c0bea0a7426dc7c43ffc676998e" translate="yes" xml:space="preserve">
          <source>Library files can be stored in subdirectories within the main &amp;ldquo;libraries&amp;rdquo; directory, or within your personal &lt;em&gt;application/libraries&lt;/em&gt; directory. To load a file located in a subdirectory, simply include the path, relative to the &amp;ldquo;libraries&amp;rdquo; directory. For example, if you have file located at:</source>
          <target state="translated">ライブラリファイルは、メインの「ライブラリ」ディレクトリ内のサブディレクトリ、または個人の&lt;em&gt;アプリケーション/ライブラリ&lt;/em&gt;ディレクトリ内に保存できます。サブディレクトリにあるファイルをロードするには、「ライブラリ」ディレクトリからの相対パスを含めるだけです。たとえば、次の場所にファイルがあるとします。</target>
        </trans-unit>
        <trans-unit id="2ee6c21c22e29b247c3b51ef8cc5e42e6e2df68a" translate="yes" xml:space="preserve">
          <source>License Agreement</source>
          <target state="translated">ライセンス契約書</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">MITライセンスに基づいてライセンスされています。</target>
        </trans-unit>
        <trans-unit id="cfa53e20ace93eda5eb19e74fbfcce82635df043" translate="yes" xml:space="preserve">
          <source>Like &lt;strong&gt;createFromDate&lt;/strong&gt; except it is only concerned with the &lt;strong&gt;hours&lt;/strong&gt;, &lt;strong&gt;minutes&lt;/strong&gt;, and &lt;strong&gt;seconds&lt;/strong&gt;. Uses the current day for the date portion of the Time instance. Accepts strings for the timezone and locale in the fourth and fifth parameters:</source>
          <target state="translated">&lt;strong&gt;createFromDate&lt;/strong&gt;と同様&lt;strong&gt;です&lt;/strong&gt;が、&lt;strong&gt;時間&lt;/strong&gt;、&lt;strong&gt;分&lt;/strong&gt;、&lt;strong&gt;秒&lt;/strong&gt;のみに関係します。Timeインスタンスの日付部分に現在の日を使用します。4番目と5番目のパラメーターのタイムゾーンとロケールの文字列を受け入れます。</target>
        </trans-unit>
        <trans-unit id="4950f4d20b533669f1605e588bd64b63319d9448" translate="yes" xml:space="preserve">
          <source>Like all services in CodeIgniter, it can be loaded via &lt;code&gt;Config\Services&lt;/code&gt;, though you usually will not need to load it manually:</source>
          <target state="translated">CodeIgniterのすべてのサービスと同様に、 &lt;code&gt;Config\Services&lt;/code&gt; を介してロードできますが、通常は手動でロードする必要はありません。</target>
        </trans-unit>
        <trans-unit id="3e669fbd3e79f9e8af01107d57857f8168d470f8" translate="yes" xml:space="preserve">
          <source>Like all services in CodeIgniter, it can be loaded via &lt;code&gt;Config\Services&lt;/code&gt;:</source>
          <target state="translated">CodeIgniterのすべてのサービスと同様に、 &lt;code&gt;Config\Services&lt;/code&gt; からロードできます。</target>
        </trans-unit>
        <trans-unit id="5d0b2fa5a6d39f703fcaaac402ba806d49b3a250" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Calendar class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、Calendarクラスは$ this-&amp;gt; load-&amp;gt; library関数を使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="f4a0239e8c4cf6eae8f4141f89134de784db1d58" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Encrypt class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、Encryptクラスは &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; メソッドを使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="e15c78db8ba15347661d8ba11aaca193f9eec997" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Encryption library is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、暗号化ライブラリは &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; メソッドを使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="236e101993f620e372e5686fe72de06dc91cb8ee" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the FTP class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、FTPクラスは$ this-&amp;gt; load-&amp;gt; library関数を使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="a8b090252d1a5bcb001f74d624c60f81a5b94ea1" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Parser class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、Parserクラスは &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; メソッドを使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="85ffab8a9dfc091b6c5da70d81ac3394f278f769" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Table class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、Tableクラスは &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; メソッドを使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="343a172109962c22ef400353ac7345af1630ffdb" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Trackback class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、Trackbackクラスは &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; メソッドを使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="5f4faedb4ac5a8693ea2f607998761a8d74395a3" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Typography class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、Typographyクラスは &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; メソッドを使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="da46f2de302a25572c889b014b9196aec7d788d4" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Unit Test class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、ユニットテストクラスは$ this-&amp;gt; load-&amp;gt; library関数を使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="6b460fb8245ae6c91591052bf1e4189c11cc0fb2" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Upload class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、Uploadクラスは &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; メソッドを使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="9dcffe0e9956ac447c90ef73a796dc571b5f2cc7" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the User Agent class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、ユーザーエージェントクラスは$ this-&amp;gt; load-&amp;gt; library関数を使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="1b7a66449003be7ba5624e3a1bab341fd86c8078" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the XML-RPC and XML-RPCS classes are initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、XML-RPCおよびXML-RPCSクラスは$ this-&amp;gt; load-&amp;gt; library関数を使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="8ccb62fb42b6558029e67bbe265f637348c82924" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Zip class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、Zipクラスは$ this-&amp;gt; load-&amp;gt; library関数を使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="a04437d7abf0c240d9642f5d424c3ec488163cc8" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the image class is initialized in your controller by calling the Services class:</source>
          <target state="translated">CodeIgniter の他のほとんどのクラスと同様に、 image クラスは Services クラスを呼び出すことでコントローラ内で初期化されます。</target>
        </trans-unit>
        <trans-unit id="0b8d7497c14528340351564b4c88b72c6b374099" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the image class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、画像クラスは$ this-&amp;gt; load-&amp;gt; library関数を使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="8750227ed72ddbb768c48398bb3793a50932ad53" translate="yes" xml:space="preserve">
          <source>Like, &lt;code&gt;setRule()&lt;/code&gt;, but accepts an array of field names and their rules:</source>
          <target state="translated">&lt;code&gt;setRule()&lt;/code&gt; と同様ですが、フィールド名とそのルールの配列を受け入れます。</target>
        </trans-unit>
        <trans-unit id="34d9146c00b0e7c8fb812afa9db23c69c93c3706" translate="yes" xml:space="preserve">
          <source>LikeTest #1640, #1677</source>
          <target state="translated">LikeTest #1640,#1677</target>
        </trans-unit>
        <trans-unit id="f06a78498d466986324969fc88ff4e1bdd101aa9" translate="yes" xml:space="preserve">
          <source>Limit the Routes Made</source>
          <target state="translated">作られたルートを制限する</target>
        </trans-unit>
        <trans-unit id="64316088a75238f2352361ecca021aec1100993b" translate="yes" xml:space="preserve">
          <source>Limit to Hostname</source>
          <target state="translated">ホスト名の制限</target>
        </trans-unit>
        <trans-unit id="6060ce02f626d7d7cf503af71e906a3114bd3ea8" translate="yes" xml:space="preserve">
          <source>Limit to Subdomains</source>
          <target state="translated">サブドメインの制限</target>
        </trans-unit>
        <trans-unit id="e12d22d458d76b0be69e5b7abfee40f7a61869ff" translate="yes" xml:space="preserve">
          <source>Limiting or Counting Results</source>
          <target state="translated">結果の制限またはカウント</target>
        </trans-unit>
        <trans-unit id="ed45ff60dbec1a6789ad6a4521b0b073c1c8ac83" translate="yes" xml:space="preserve">
          <source>Limits the number of characters to $limit.</source>
          <target state="translated">文字数を $limit に制限します。</target>
        </trans-unit>
        <trans-unit id="a1e42d7995c5fa47856042fef1892f42d0e3cebc" translate="yes" xml:space="preserve">
          <source>Limits the number of words to $limit.</source>
          <target state="translated">単語数を$limitに制限します。</target>
        </trans-unit>
        <trans-unit id="f9461da311f713d36b1205166a42d4a0a8cc89ff" translate="yes" xml:space="preserve">
          <source>Limits the string based on the character count. Will preserve complete words.</source>
          <target state="translated">文字数に基づいて文字列を制限します。完全な単語を保持します。</target>
        </trans-unit>
        <trans-unit id="eed6cd74cd94bc6d5acf8fa6998df07318a8ca92" translate="yes" xml:space="preserve">
          <source>Line Breaks</source>
          <target state="translated">ラインブレイク</target>
        </trans-unit>
        <trans-unit id="f5b04cdd83351a616c6d673cbf53e98d63cf8e3e" translate="yes" xml:space="preserve">
          <source>Line Number (line)</source>
          <target state="translated">行番号(行)</target>
        </trans-unit>
        <trans-unit id="e4741361713309f30f2644c2cf2cf1daf45659e7" translate="yes" xml:space="preserve">
          <source>Linkified string</source>
          <target state="translated">リンク化文字列</target>
        </trans-unit>
        <trans-unit id="54cd0ba31bcbb11251ffe78535a559fa87813373" translate="yes" xml:space="preserve">
          <source>List the Fields in a Table</source>
          <target state="translated">テーブル内のフィールドを一覧表示する</target>
        </trans-unit>
        <trans-unit id="5efcb9fe350d52e2db9c3e686fbabf8b35abc4a3" translate="yes" xml:space="preserve">
          <source>List the Indexes in a Table</source>
          <target state="translated">表のインデックスを一覧表示する</target>
        </trans-unit>
        <trans-unit id="6c17312dcba47bf03c2d81706d8a8b7a72b77507" translate="yes" xml:space="preserve">
          <source>List the Tables in Your Database</source>
          <target state="translated">データベースのテーブルを一覧表示</target>
        </trans-unit>
        <trans-unit id="6e4abe45adb861335b433026f39b483f3cda3e21" translate="yes" xml:space="preserve">
          <source>Listing of all database queries executed, including execution time</source>
          <target state="translated">実行されたすべてのデータベースクエリのリスト(実行時間を含む</target>
        </trans-unit>
        <trans-unit id="36cde6a3ede686eb83bcefdf061bd4e003018187" translate="yes" xml:space="preserve">
          <source>Live/</source>
          <target state="translated">Live/</target>
        </trans-unit>
        <trans-unit id="8985cd5132eff5cd3bf16bf694804fdd12d6e178" translate="yes" xml:space="preserve">
          <source>Live/ModelTest #1311</source>
          <target state="translated">ライブ/モデルテスト #1311</target>
        </trans-unit>
        <trans-unit id="692188d3a7bd09af4abdaec4c668ad0a95580a01" translate="yes" xml:space="preserve">
          <source>Live/ModelTest #1602, #a0fc68</source>
          <target state="translated">ライブ/モデルテスト #1602,#a0fc68</target>
        </trans-unit>
        <trans-unit id="525d1c45172ccc388087d01688a83c5c21878a6a" translate="yes" xml:space="preserve">
          <source>Live/ModelTest #1817, #1829, #1861</source>
          <target state="translated">ライブ/モデルテスト #1817,#1829,#1861</target>
        </trans-unit>
        <trans-unit id="bcc0cee723256dbc0b223d41440fa3dce77ff689" translate="yes" xml:space="preserve">
          <source>Live/WhereTest #1906</source>
          <target state="translated">ライブ/WhereTest #1906</target>
        </trans-unit>
        <trans-unit id="a27c5421fe3bf96eeebb79b236052a791336721d" translate="yes" xml:space="preserve">
          <source>Load the Forge Class as follows:</source>
          <target state="translated">以下のようにForgeクラスをロードします。</target>
        </trans-unit>
        <trans-unit id="605563d5aa0e231b93adb64a823c6ce2374639ab" translate="yes" xml:space="preserve">
          <source>Load the Utility Class as follows:</source>
          <target state="translated">以下のようにユーティリティクラスをロードします。</target>
        </trans-unit>
        <trans-unit id="8d4289d8ca6a689ab25f78f13decc606548739bd" translate="yes" xml:space="preserve">
          <source>Loaded CI_DB instance or FALSE on failure if $return is set to TRUE, otherwise CI_Loader instance (method chaining)</source>
          <target state="translated">return が TRUE に設定されている場合は失敗しても CI_DB インスタンスをロードします。</target>
        </trans-unit>
        <trans-unit id="e81f14f45654f8cd397f7fb89e2e743fc4206f25" translate="yes" xml:space="preserve">
          <source>Loaded CI_DB_forge instance if $return is set to TRUE, otherwise CI_Loader instance (method chaining)</source>
          <target state="translated">return が TRUE に設定されている場合は CI_DB_forge インスタンスをロードし、そうでない場合は CI_Loader インスタンスをロードします (メソッドのチェーニング)。</target>
        </trans-unit>
        <trans-unit id="68e2a1c2d4fc9d6a5687803ce88342494f4f5944" translate="yes" xml:space="preserve">
          <source>Loaded CI_DB_utility instance if $return is set to TRUE, otherwise CI_Loader instance (method chaining)</source>
          <target state="translated">returnがTRUEに設定されている場合はロードされたCI_DB_utilityインスタンス、そうでない場合はCI_Loaderインスタンス(メソッドチェーニング)をロードします。</target>
        </trans-unit>
        <trans-unit id="ec6f9069daa80029e880d76fc3bf6a0698a7d554" translate="yes" xml:space="preserve">
          <source>Loader</source>
          <target state="translated">Loader</target>
        </trans-unit>
        <trans-unit id="2deaf19033acec193ce3ec263d1504ae35ea7cb7" translate="yes" xml:space="preserve">
          <source>Loader Class</source>
          <target state="translated">ローダクラス</target>
        </trans-unit>
        <trans-unit id="11f7e47d8a3f26e9ac1360870f5558aa936a75a1" translate="yes" xml:space="preserve">
          <source>Loader, as the name suggests, is used to load elements. These elements can be libraries (classes) &lt;a href=&quot;../general/views&quot;&gt;View files&lt;/a&gt;, &lt;a href=&quot;../general/drivers&quot;&gt;Drivers&lt;/a&gt;, &lt;a href=&quot;../general/helpers&quot;&gt;Helpers&lt;/a&gt;, &lt;a href=&quot;../general/models&quot;&gt;Models&lt;/a&gt;, or your own files.</source>
          <target state="translated">名前が示すように、ローダーは要素のロードに使用されます。これらの要素は、ライブラリ（クラス）&lt;a href=&quot;../general/views&quot;&gt;ビューファイル&lt;/a&gt;、&lt;a href=&quot;../general/drivers&quot;&gt;ドライバー&lt;/a&gt;、&lt;a href=&quot;../general/helpers&quot;&gt;ヘルパー&lt;/a&gt;、&lt;a href=&quot;../general/models&quot;&gt;モデル&lt;/a&gt;、または独自のファイルです。</target>
        </trans-unit>
        <trans-unit id="2c02740debe56349e3d7ad6421d018524c63d82e" translate="yes" xml:space="preserve">
          <source>Loading A Language File</source>
          <target state="translated">言語ファイルの読み込み</target>
        </trans-unit>
        <trans-unit id="a9d94adb751265412fa56f2146814c6311e7e180" translate="yes" xml:space="preserve">
          <source>Loading Fabricators</source>
          <target state="translated">ローディングファブリケーター</target>
        </trans-unit>
        <trans-unit id="2eb3efe38251352226e9efcc98bd853d1dd26ab6" translate="yes" xml:space="preserve">
          <source>Loading Multiple Helpers</source>
          <target state="translated">複数のヘルパーの読み込み</target>
        </trans-unit>
        <trans-unit id="6f1c0b19d58b2f017f380e47ab3b3d42e2a7dc27" translate="yes" xml:space="preserve">
          <source>Loading Multiple Views</source>
          <target state="translated">複数のビューの読み込み</target>
        </trans-unit>
        <trans-unit id="d1ffd10ef8c487c39f98446b01187a717d636c46" translate="yes" xml:space="preserve">
          <source>Loading Your Sub-class</source>
          <target state="translated">サブクラスの読み込み</target>
        </trans-unit>
        <trans-unit id="bc925e92b7fd1c9cd79b26d5744c6d7591bffad8" translate="yes" xml:space="preserve">
          <source>Loading a Config File</source>
          <target state="translated">設定ファイルの読み込み</target>
        </trans-unit>
        <trans-unit id="05921c48039bc10d973f656f6961b47ad34f4e9e" translate="yes" xml:space="preserve">
          <source>Loading a Helper</source>
          <target state="translated">ヘルパーの読み込み</target>
        </trans-unit>
        <trans-unit id="57d23ecb39ef5c47089859f3c785f221f32618a1" translate="yes" xml:space="preserve">
          <source>Loading a Model</source>
          <target state="translated">モデルの読み込み</target>
        </trans-unit>
        <trans-unit id="d74ecfb0061a585ba0f5613c41c7fc89120c13fb" translate="yes" xml:space="preserve">
          <source>Loading a View</source>
          <target state="translated">ビューの読み込み</target>
        </trans-unit>
        <trans-unit id="c118f068e9710c178919d772cd32bc6b832db6cb" translate="yes" xml:space="preserve">
          <source>Loading a helper file is quite simple using the following method:</source>
          <target state="translated">ヘルパーファイルの読み込みは以下の方法で簡単にできます。</target>
        </trans-unit>
        <trans-unit id="3aab8a1d4f2b6a2ca97503ddbe974464d0173739" translate="yes" xml:space="preserve">
          <source>Loading from Non-standard Locations</source>
          <target state="translated">標準外の場所からの読み込み</target>
        </trans-unit>
        <trans-unit id="dfc3a31319824f7fe4080f082556087cad652e44" translate="yes" xml:space="preserve">
          <source>Loading multiple views</source>
          <target state="translated">複数のビューを読み込む</target>
        </trans-unit>
        <trans-unit id="c2e4ae2972a017619684d66e0d672b9566e25e93" translate="yes" xml:space="preserve">
          <source>Loading the Class</source>
          <target state="translated">クラスの読み込み</target>
        </trans-unit>
        <trans-unit id="f0bf461f8d94c61907d56ddfb64ba322bd456848" translate="yes" xml:space="preserve">
          <source>Loading the Library</source>
          <target state="translated">ライブラリの読み込み</target>
        </trans-unit>
        <trans-unit id="7e58548316093bf3fa57a72ac4bf6301357c5a29" translate="yes" xml:space="preserve">
          <source>Loading the Query Builder</source>
          <target state="translated">クエリビルダの読み込み</target>
        </trans-unit>
        <trans-unit id="464b40043d27fcad36cb997f91a70581882d7fac" translate="yes" xml:space="preserve">
          <source>Loading this Helper</source>
          <target state="translated">このヘルパーの読み込み</target>
        </trans-unit>
        <trans-unit id="64f4eb728b6871c37ada4d24a3c0f7898c84f543" translate="yes" xml:space="preserve">
          <source>Loads a configuration file.</source>
          <target state="translated">設定ファイルを読み込みます。</target>
        </trans-unit>
        <trans-unit id="5684ca47fb9d8afffdea7af826e84057aef1ae80" translate="yes" xml:space="preserve">
          <source>Loads a helper file.</source>
          <target state="translated">ヘルパーファイルを読み込みます。</target>
        </trans-unit>
        <trans-unit id="e67fd5f24139cedce864934078da2a52b79d9dc5" translate="yes" xml:space="preserve">
          <source>Loads a language file.</source>
          <target state="translated">言語ファイルを読み込みます。</target>
        </trans-unit>
        <trans-unit id="d079c51bff7f88b690b8c44e543a6105c7d1aeb9" translate="yes" xml:space="preserve">
          <source>Loads the &lt;a href=&quot;../database/forge&quot;&gt;Database Forge&lt;/a&gt; class, please refer to that manual for more info.</source>
          <target state="translated">&lt;a href=&quot;../database/forge&quot;&gt;Database Forge&lt;/a&gt;クラスをロードします。詳細については、そのマニュアルを参照してください。</target>
        </trans-unit>
        <trans-unit id="6f5c3800ce7e28fcbf2bcf5db1500dbff06cab79" translate="yes" xml:space="preserve">
          <source>Loads the &lt;a href=&quot;../database/utilities&quot;&gt;Database Utilities&lt;/a&gt; class, please refer to that manual for more info.</source>
          <target state="translated">&lt;a href=&quot;../database/utilities&quot;&gt;データベースユーティリティ&lt;/a&gt;クラスをロードします。詳細については、そのマニュアルを参照してください。</target>
        </trans-unit>
        <trans-unit id="af445b2b92bb3697ec701895b808fdb2d8e98359" translate="yes" xml:space="preserve">
          <source>Local Development Server</source>
          <target state="translated">ローカル開発サーバ</target>
        </trans-unit>
        <trans-unit id="b1525e24b190e02e3b67412ecf0705f4a4a5dd60" translate="yes" xml:space="preserve">
          <source>Locale Detection</source>
          <target state="translated">ロケール検出</target>
        </trans-unit>
        <trans-unit id="1460776e44bf572450673be2f84d6cf702bc90e8" translate="yes" xml:space="preserve">
          <source>Locale detection only works for web-based requests that use the IncomingRequest class. Command-line requests will not have these features.</source>
          <target state="translated">ロケールの検出は IncomingRequest クラスを使用するウェブベースのリクエストでのみ機能します。コマンドラインのリクエストにはこれらの機能はありません。</target>
        </trans-unit>
        <trans-unit id="b9fc941160f1b0396956bfd39853ec712bd8d1fb" translate="yes" xml:space="preserve">
          <source>Localization</source>
          <target state="translated">Localization</target>
        </trans-unit>
        <trans-unit id="5eaa6b4b315bdaa369a3a06c5527987ec1e89477" translate="yes" xml:space="preserve">
          <source>Localized Text</source>
          <target state="translated">ローカライズされたテキスト</target>
        </trans-unit>
        <trans-unit id="d219c68101f532de10add2cf42fb9dbeca73d3be" translate="yes" xml:space="preserve">
          <source>Location</source>
          <target state="translated">Location</target>
        </trans-unit>
        <trans-unit id="8a939d182d992114fef20f515cf479c3e42ce804" translate="yes" xml:space="preserve">
          <source>Locking is not the issue, it is a solution. Your issue is that you still have the session open, while you&amp;rsquo;ve already processed it and therefore no longer need it. So, what you need is to close the session for the current request after you no longer need it.</source>
          <target state="translated">ロックは問題ではなく、解決策です。あなたの問題は、セッションを開いたままにしていることですが、すでにそれを処理しているため、もう必要ありません。したがって、必要なのは、現在のリクエストが不要になった後、現在のリクエストのセッションを閉じることです。</target>
        </trans-unit>
        <trans-unit id="8bf95ea372568c7a254ba9fada5f6f1701ebc5b5" translate="yes" xml:space="preserve">
          <source>Log</source>
          <target state="translated">Log</target>
        </trans-unit>
        <trans-unit id="632964cc0fa0273f3cc53510104d2256c93f1660" translate="yes" xml:space="preserve">
          <source>Log/</source>
          <target state="translated">Log/</target>
        </trans-unit>
        <trans-unit id="6dbed1767472a446558ec56e33365f03036b30e8" translate="yes" xml:space="preserve">
          <source>Logger #1562, #1579</source>
          <target state="translated">ロガー #1562,#1579</target>
        </trans-unit>
        <trans-unit id="243c4222a810c444cc56455fc05975d30c1375a2" translate="yes" xml:space="preserve">
          <source>Logger, LoggerAwareTrait</source>
          <target state="translated">Logger、LoggerAwareTrait</target>
        </trans-unit>
        <trans-unit id="7b0d668e20d7685135be206b196d2aa0130b903e" translate="yes" xml:space="preserve">
          <source>LoggerAware Trait</source>
          <target state="translated">LoggerAware Trait</target>
        </trans-unit>
        <trans-unit id="ec22c6b4cc974914f3adb36bfda1e2730de4d71d" translate="yes" xml:space="preserve">
          <source>Logging Exceptions</source>
          <target state="translated">ロギングの例外</target>
        </trans-unit>
        <trans-unit id="af33953452c08aac6ed81900431a332650510c71" translate="yes" xml:space="preserve">
          <source>Logging Information</source>
          <target state="translated">ロギング情報</target>
        </trans-unit>
        <trans-unit id="65eac6118ebdd55aa38b41f70efdf532e567ffd8" translate="yes" xml:space="preserve">
          <source>Logical Operators</source>
          <target state="translated">論理演算子</target>
        </trans-unit>
        <trans-unit id="b399da6f4960cdd85bdf3f54882bb2ec5bee170c" translate="yes" xml:space="preserve">
          <source>Logs #1654</source>
          <target state="translated">ログ #1654</target>
        </trans-unit>
        <trans-unit id="e8a9b8c9f0bddbccb7c8b74c22736ca0ab949abb" translate="yes" xml:space="preserve">
          <source>Logs a message using the Log Handlers defined in &lt;strong&gt;app/Config/Logger.php&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;app / Config /Logger.phpで&lt;/strong&gt;定義されているログハンドラーを使用してメッセージをログに記録します。</target>
        </trans-unit>
        <trans-unit id="1709d0fedce5e63a987cb501d05ffb5cfe071014" translate="yes" xml:space="preserve">
          <source>Loki97</source>
          <target state="translated">Loki97</target>
        </trans-unit>
        <trans-unit id="201ddef0c1f1b20dd8eb1f5c55cd47ea589e4324" translate="yes" xml:space="preserve">
          <source>Long story short - call &lt;code&gt;session_write_close()&lt;/code&gt; once you no longer need anything to do with session variables.</source>
          <target state="translated">簡単に言うと、セッション変数を処理する必要がなくなったら、 &lt;code&gt;session_write_close()&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="c40ccc3b4d6450c8d32eac62ccac6a7620218c11" translate="yes" xml:space="preserve">
          <source>Long story short - if you don&amp;rsquo;t know how to do that already in raw PHP, you shouldn&amp;rsquo;t be trying to do it within CodeIgniter either. You&amp;rsquo;ve been warned.</source>
          <target state="translated">要するに、生のPHPでそれを行う方法がわからない場合でも、CodeIgniter内でそれを実行するべきではありません。あなたは警告されました。</target>
        </trans-unit>
        <trans-unit id="d9d7631e20686716ef7b23edbf215e0975f6a8c5" translate="yes" xml:space="preserve">
          <source>Looking at the code, you may see some similarity with the files we created earlier. First, it extends a core CodeIgniter class, &lt;code&gt;Controller&lt;/code&gt;, which provides a couple of helper methods, and makes sure that you have access to the current &lt;code&gt;Request&lt;/code&gt; and &lt;code&gt;Response&lt;/code&gt; objects, as well as the &lt;code&gt;Logger&lt;/code&gt; class, for saving information to disk.</source>
          <target state="translated">コードを見ると、以前に作成したファイルと類似していることがわかります。まず、コアCodeIgniterクラスである &lt;code&gt;Controller&lt;/code&gt; を拡張します。これは、いくつかのヘルパーメソッドを提供し、情報をディスクに保存するために、現在の &lt;code&gt;Request&lt;/code&gt; オブジェクトと &lt;code&gt;Response&lt;/code&gt; オブジェクト、および &lt;code&gt;Logger&lt;/code&gt; クラスにアクセスできるようにします。</target>
        </trans-unit>
        <trans-unit id="25f58df0ad55cf4efe6166bc5637401c0c5c3b5b" translate="yes" xml:space="preserve">
          <source>Looking at the code, you may see some similarity with the files we created earlier. First, the &lt;code&gt;__construct()&lt;/code&gt; method: it calls the constructor of its parent class (&lt;code&gt;CI_Controller&lt;/code&gt;) and loads the model, so it can be used in all other methods in this controller. It also loads a collection of &lt;a href=&quot;../helpers/url_helper&quot;&gt;URL Helper&lt;/a&gt; functions, because we&amp;rsquo;ll use one of them in a view later.</source>
          <target state="translated">コードを見ると、先ほど作成したファイルといくつかの類似点があることがわかります。まず、 &lt;code&gt;__construct()&lt;/code&gt; メソッド：親クラス（ &lt;code&gt;CI_Controller&lt;/code&gt; ）のコンストラクターを呼び出してモデルをロードするため、このコントローラーの他のすべてのメソッドで使用できます。また、後でビューで使用するため、&lt;a href=&quot;../helpers/url_helper&quot;&gt;URLヘルパー&lt;/a&gt;関数のコレクションもロードします。</target>
        </trans-unit>
        <trans-unit id="b76497296d19bd50b09adf1110fee7e78a387ec3" translate="yes" xml:space="preserve">
          <source>Looking for Similar Data</source>
          <target state="translated">類似データを探す</target>
        </trans-unit>
        <trans-unit id="563a6fc311750c300f20d5c41261e66e2ee14e54" translate="yes" xml:space="preserve">
          <source>Looking for Specific Data</source>
          <target state="translated">特定のデータを探す</target>
        </trans-unit>
        <trans-unit id="1ff86acfd476b5104c6d6199b4131589517222a3" translate="yes" xml:space="preserve">
          <source>Loop Substitutions</source>
          <target state="translated">ループの置換</target>
        </trans-unit>
        <trans-unit id="3007c044930ed8800e0f311fb209f6a158f4bc61" translate="yes" xml:space="preserve">
          <source>Lots of tweaks and corrections in the user guide.</source>
          <target state="translated">ユーザーガイドにはたくさんの調整や修正があります。</target>
        </trans-unit>
        <trans-unit id="4b7d57c3149051517340cee1e92dac82386afee2" translate="yes" xml:space="preserve">
          <source>MB_ENABLED</source>
          <target state="translated">MB_ENABLED</target>
        </trans-unit>
        <trans-unit id="417784f5ff00609e8935a02bce38521b11d8b94e" translate="yes" xml:space="preserve">
          <source>MCRYPT_MODE_ECB</source>
          <target state="translated">MCRYPT_MODE_ECB</target>
        </trans-unit>
        <trans-unit id="ec8658b95484eff9965158d9a7f142e7aab65326" translate="yes" xml:space="preserve">
          <source>MCrypt</source>
          <target state="translated">MCrypt</target>
        </trans-unit>
        <trans-unit id="2d402e17d9eaa7174787bbd2c137fb71ab24bfd2" translate="yes" xml:space="preserve">
          <source>MCrypt, OpenSSL</source>
          <target state="translated">MCrypt、OpenSSL</target>
        </trans-unit>
        <trans-unit id="7ddab92eb4744eb322da1d04187a78911937bb4a" translate="yes" xml:space="preserve">
          <source>MIME type string or FALSE on failure</source>
          <target state="translated">失敗した場合は MIME タイプの文字列または FALSE</target>
        </trans-unit>
        <trans-unit id="7698815b4097bfb3ec4c1b7ed737cad1f5331c02" translate="yes" xml:space="preserve">
          <source>MS SQL via the &lt;em&gt;mssql&lt;/em&gt;, &lt;em&gt;sqlsrv&lt;/em&gt; (version 2005 and above only) and &lt;em&gt;pdo&lt;/em&gt; drivers</source>
          <target state="translated">&lt;em&gt;mssql&lt;/em&gt;、&lt;em&gt;sqlsrv&lt;/em&gt;（バージョン2005以降のみ）および&lt;em&gt;pdo&lt;/em&gt;ドライバーを介したMS SQL</target>
        </trans-unit>
        <trans-unit id="750f9870f2ebf1c6d15527e004ee500ab2c52175" translate="yes" xml:space="preserve">
          <source>Make interactive &amp;ldquo;tasks&amp;rdquo; that can do things like set permissions, prune cache folders, run backups, etc.</source>
          <target state="translated">権限の設定、キャッシュフォルダーのプルーニング、バックアップの実行などを実行できるインタラクティブな「タスク」を作成します。</target>
        </trans-unit>
        <trans-unit id="49b18757e3384c544eddbafbefe90caaa7b76c9a" translate="yes" xml:space="preserve">
          <source>Make sure any non-mime string you pass to this method exists in &lt;em&gt;application/config/mimes.php&lt;/em&gt; or it will have no effect.</source>
          <target state="translated">このメソッドに渡すMIME以外の文字列が&lt;em&gt;application / config / mimes.phpに&lt;/em&gt;存在することを確認してください。存在しない場合は影響がありません。</target>
        </trans-unit>
        <trans-unit id="005658c1c9b5cd9f3e860b32ee48571d7bb1aac0" translate="yes" xml:space="preserve">
          <source>Make sure that the rewrite module is enabled (uncommented) in the main configuration file, eg. &lt;code&gt;apache2/conf/httpd.conf&lt;/code&gt;:</source>
          <target state="translated">メイン構成ファイルでリライトモジュールが有効になっている（コメントされていない）ことを確認します。 &lt;code&gt;apache2/conf/httpd.conf&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e8426586cbea8a69b865c2ed7a5219a2d737b0c2" translate="yes" xml:space="preserve">
          <source>Make sure that the virtual hosting module is enabled (uncommented) in the main configuration file, eg. &lt;code&gt;apache2/conf/httpd.conf&lt;/code&gt;:</source>
          <target state="translated">メイン構成ファイルで仮想ホスティングモジュールが有効になっている（コメントされていない）ことを確認します。 &lt;code&gt;apache2/conf/httpd.conf&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a1f003943cb4e56bfb2e78e9067ca1cf6bd3e12d" translate="yes" xml:space="preserve">
          <source>Make sure that your dev environment has error reporting enabled for ALL users, and that display_errors is enabled in the PHP environment. You can check this setting with:</source>
          <target state="translated">あなたの開発環境では、すべてのユーザーに対してエラー報告が有効になっていることと、 PHP 環境で display_errors が有効になっていることを確認してください。この設定は</target>
        </trans-unit>
        <trans-unit id="594beacd7affa24e9ab24014ff3171f6aaac2885" translate="yes" xml:space="preserve">
          <source>Make sure the &lt;strong&gt;.env&lt;/strong&gt; file is NOT tracked by your version control system. For &lt;em&gt;git&lt;/em&gt; that means adding it to &lt;strong&gt;.gitignore&lt;/strong&gt;. Failure to do so could result in sensitive credentials being exposed to the public.</source>
          <target state="translated">&lt;strong&gt;.env&lt;/strong&gt;ファイルがバージョン管理システムによって追跡されていないことを確認してください。以下のため&lt;em&gt;のgit&lt;/em&gt;手段はそれを追加すること&lt;strong&gt;.gitignore&lt;/strong&gt;。そうしないと、機密性の高い資格情報が一般に公開される可能性があります。</target>
        </trans-unit>
        <trans-unit id="9aa5102273854ea0af6892f9dd0898510905f938" translate="yes" xml:space="preserve">
          <source>Make sure to also exclude from the above rule any assets that you might need to be accessible from the outside world.</source>
          <target state="translated">また、外部からのアクセスが必要な資産については、上記のルールから除外するようにしましょう。</target>
        </trans-unit>
        <trans-unit id="741fa5a370a0a89b5b3f64892460af34bb380d42" translate="yes" xml:space="preserve">
          <source>Make sure to also exclude from the above rules any assets that you might need to be accessible from the outside world.</source>
          <target state="translated">また、外部からのアクセスが必要な資産については、上記のルールから除外するようにしましょう。</target>
        </trans-unit>
        <trans-unit id="e15586a5e2192fa9d0cccc8d76f99c8e9d396e2d" translate="yes" xml:space="preserve">
          <source>Make sure to use $this-&amp;gt;db-&amp;gt;transBegin() when running manual transactions, &lt;strong&gt;NOT&lt;/strong&gt; $this-&amp;gt;db-&amp;gt;transStart().</source>
          <target state="translated">、手動トランザクションを実行するときます$ this-&amp;gt; DB-&amp;gt; transBegin（）を使用していることを確認し&lt;strong&gt;ないで&lt;/strong&gt;ます$ this-&amp;gt; DB-&amp;gt; transStart（）。</target>
        </trans-unit>
        <trans-unit id="0a3b2596b897607da8ad13bf80f95aaea1ea920d" translate="yes" xml:space="preserve">
          <source>Make sure to use $this-&amp;gt;db-&amp;gt;trans_begin() when running manual transactions, &lt;strong&gt;NOT&lt;/strong&gt; $this-&amp;gt;db-&amp;gt;trans_start().</source>
          <target state="translated">、手動トランザクションを実行するときます$ this-&amp;gt; DB-&amp;gt; trans_begin（）を使用していることを確認し&lt;strong&gt;ないで&lt;/strong&gt;ます$ this-&amp;gt; DB-&amp;gt; trans_start（）。</target>
        </trans-unit>
        <trans-unit id="4e8d6a9929e543eda19658032bb07f5a1a1b2511" translate="yes" xml:space="preserve">
          <source>Make your cron-jobs inaccessible from being loaded in the URL by checking the return value of &lt;a href=&quot;../general/common_functions#is_cli&quot;&gt;&lt;code&gt;is_cli()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../general/common_functions#is_cli&quot;&gt; &lt;code&gt;is_cli()&lt;/code&gt; の&lt;/a&gt;戻り値を確認して、cronジョブがURLに読み込まれないようにします。</target>
        </trans-unit>
        <trans-unit id="f2f43b91fe7faa1f79dcfd8131243b2f662a06eb" translate="yes" xml:space="preserve">
          <source>Make your cron-jobs inaccessible from being loaded in the URL by checking the return value of &lt;a href=&quot;common_functions#is_cli&quot;&gt;&lt;code&gt;is_cli()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;common_functions#is_cli&quot;&gt; &lt;code&gt;is_cli()&lt;/code&gt; の&lt;/a&gt;戻り値をチェックして、cronジョブがURLにロードされないようにします。</target>
        </trans-unit>
        <trans-unit id="e2f6fe511430ae26e9aadc8036bb0de3de4164ab" translate="yes" xml:space="preserve">
          <source>Making Requests</source>
          <target state="translated">要望書の作成</target>
        </trans-unit>
        <trans-unit id="236b276a68c22f9a3d878d0e409b3e4882a08d8e" translate="yes" xml:space="preserve">
          <source>Making Your Queries Easier</source>
          <target state="translated">クエリーを簡単にする</target>
        </trans-unit>
        <trans-unit id="f26b359ba37eb8a50cdf02456f39cff00b1155a4" translate="yes" xml:space="preserve">
          <source>Managing Databases</source>
          <target state="translated">データベースの管理</target>
        </trans-unit>
        <trans-unit id="7e3631c271a96dd85e4e5ec97a177e7c33eea768" translate="yes" xml:space="preserve">
          <source>Managing Errors</source>
          <target state="translated">エラーの管理</target>
        </trans-unit>
        <trans-unit id="05fe651886989c4ce0e0af7ac38461728fecbdb8" translate="yes" xml:space="preserve">
          <source>Managing your Applications</source>
          <target state="translated">アプリケーションの管理</target>
        </trans-unit>
        <trans-unit id="65784dcc3319a8d37706da70362aa7a875ee8066" translate="yes" xml:space="preserve">
          <source>Managing your Cache Files</source>
          <target state="translated">キャッシュファイルの管理</target>
        </trans-unit>
        <trans-unit id="5ac982ced6cd245760453f72346753b56b58a0a4" translate="yes" xml:space="preserve">
          <source>Mandatory / Optional</source>
          <target state="translated">必須/オプション</target>
        </trans-unit>
        <trans-unit id="a7dbbb4172263077674577b2683165b09aa78cdb" translate="yes" xml:space="preserve">
          <source>Manual Installation</source>
          <target state="translated">マニュアルインストール</target>
        </trans-unit>
        <trans-unit id="25edf606a7402b2d23e46f59fd11a016545751bd" translate="yes" xml:space="preserve">
          <source>Manual Loading</source>
          <target state="translated">マニュアルローディング</target>
        </trans-unit>
        <trans-unit id="14ac742ff18f21cf639855837db3076274cea550" translate="yes" xml:space="preserve">
          <source>Manual Model Creation</source>
          <target state="translated">マニュアルモデル作成</target>
        </trans-unit>
        <trans-unit id="ad50d3bf63e52c7047694b83724f4488c3ce2c71" translate="yes" xml:space="preserve">
          <source>Manual Pagination</source>
          <target state="translated">手動ページネーション</target>
        </trans-unit>
        <trans-unit id="3b5cb7733c2c3fcadece40692da61413f4bc85e5" translate="yes" xml:space="preserve">
          <source>Manually Connecting</source>
          <target state="translated">手動接続</target>
        </trans-unit>
        <trans-unit id="6f2258b11ad6be040c2aaad749c96a59b6811d15" translate="yes" xml:space="preserve">
          <source>Manually Connecting to a Database</source>
          <target state="translated">データベースへの手動接続</target>
        </trans-unit>
        <trans-unit id="d3666bd352c671123bfd94f18d4c676d3ad8c67a" translate="yes" xml:space="preserve">
          <source>Manually closing the Connection</source>
          <target state="translated">手動で接続を閉じる</target>
        </trans-unit>
        <trans-unit id="e0c9b3af7816f60c52c2d82df5e4015e8c984ce3" translate="yes" xml:space="preserve">
          <source>Manually enables/disables caching. This can be useful if you want to keep certain queries from being cached. Example:</source>
          <target state="translated">手動でキャッシングを有効/無効にします。これは、特定のクエリをキャッシュしないようにしたい場合に便利です。例:キャッシュを有効にするかどうかを手動で設定します。</target>
        </trans-unit>
        <trans-unit id="f0fbfc0db13e058971251435772cfdb5ff983944" translate="yes" xml:space="preserve">
          <source>Many URIs contain several elements that are collectively known as the &amp;lsquo;authority&amp;rsquo;. This includes any user info, the host and the port number. You can retrieve all of these pieces as one single string with the &lt;code&gt;getAuthority()&lt;/code&gt; method, or you can manipulate the individual parts.</source>
          <target state="translated">多くのURIには、まとめて「権限」と呼ばれるいくつかの要素が含まれています。これには、ユーザー情報、ホスト、およびポート番号が含まれます。 &lt;code&gt;getAuthority()&lt;/code&gt; メソッドを使用して、これらすべての部分を1つの文字列として取得することも、個々の部分を操作することもできます。</target>
        </trans-unit>
        <trans-unit id="2ef710afe26f0e076f2387ccec40e3015e461fa6" translate="yes" xml:space="preserve">
          <source>Many applications have known vulnerabilities and known attack strategies that can be exploited in order to gain remote control or to exploit data.</source>
          <target state="translated">多くのアプリケーションには既知の脆弱性や既知の攻撃戦略があり、遠隔操作やデータを悪用するために悪用される可能性があります。</target>
        </trans-unit>
        <trans-unit id="eb3b57147424076cf5af4623293e09b00381a315" translate="yes" xml:space="preserve">
          <source>Many functions previously found in the CodeIgniter 3 &lt;code&gt;date_helper&lt;/code&gt; have been moved to the &lt;code&gt;I18n&lt;/code&gt; module in CodeIgniter 4.</source>
          <target state="translated">以前にCodeIgniterの3に見られる多くの機能 &lt;code&gt;date_helper&lt;/code&gt; はに移動された &lt;code&gt;I18n&lt;/code&gt; CodeIgniterの4内のモジュール。</target>
        </trans-unit>
        <trans-unit id="1b6c88e7856e110bf00aacdded83e6e3444c57a8" translate="yes" xml:space="preserve">
          <source>Many times, all you really want is an object representing the current URL of this request. This can be accessed in two different ways. The first is to grab it directly from the current request object. Assuming that you&amp;rsquo;re in a controller that extends &lt;code&gt;CodeIgniter\Controller&lt;/code&gt; you can get it like:</source>
          <target state="translated">多くの場合、本当に必要なのは、このリクエストの現在のURLを表すオブジェクトだけです。これには、2つの異なる方法でアクセスできます。1つ目は、現在のリクエストオブジェクトから直接取得することです。 &lt;code&gt;CodeIgniter\Controller&lt;/code&gt; を拡張するコントローラーを使用しているとすると、次のようになります。</target>
        </trans-unit>
        <trans-unit id="f05cfa155de6f487be47f71243984907de65b3d4" translate="yes" xml:space="preserve">
          <source>Many times, all you really want is to get a string representation of a URI. This is easy to do by simply casting the URI as a string:</source>
          <target state="translated">多くの場合、本当に欲しいのはURIの文字列表現を取得することです。これは単にURIを文字列としてキャストするだけで簡単にできます。</target>
        </trans-unit>
        <trans-unit id="ab39afc2adaf08cdbe5e34acf60b25cf44b01896" translate="yes" xml:space="preserve">
          <source>Many times, you will need to specify the full namespace to files you want to include, but CodeIgniter can be configured to make integrating modules into your applications simpler by automatically discovering many different file types, including:</source>
          <target state="translated">多くの場合、インクルードしたいファイルに完全な名前空間を指定する必要がありますが、CodeIgniterは、モジュールをアプリケーションに統合する際に、多くの異なるファイルタイプを自動的に検出することで、より簡単にモジュールをアプリケーションに統合できるように設定することができます。</target>
        </trans-unit>
        <trans-unit id="22721222334d51e093a1a9cb2401df040e5fdbd6" translate="yes" xml:space="preserve">
          <source>Mapping multiple routes</source>
          <target state="translated">複数のルートをマッピング</target>
        </trans-unit>
        <trans-unit id="587776e3bb4c7325738b28a4cc2f574afa8c3a35" translate="yes" xml:space="preserve">
          <source>Mark a start point</source>
          <target state="translated">開始点をマークする</target>
        </trans-unit>
        <trans-unit id="f3b39dc69524d3dbeaa09e276e51e723f8207cdc" translate="yes" xml:space="preserve">
          <source>Mark an end point</source>
          <target state="translated">終点をマークする</target>
        </trans-unit>
        <trans-unit id="253bd53881d6356cc150a392426f445958ddef90" translate="yes" xml:space="preserve">
          <source>Marks a &lt;code&gt;$_SESSION&lt;/code&gt; item key (or multiple ones) as &amp;ldquo;flashdata&amp;rdquo;.</source>
          <target state="translated">マークス &lt;code&gt;$_SESSION&lt;/code&gt; 「flashdata」などの項目キー（または複数のものを）。</target>
        </trans-unit>
        <trans-unit id="a16a4e619a6b9ac80f082d629ec9f9c72c4733fd" translate="yes" xml:space="preserve">
          <source>Marks a &lt;code&gt;$_SESSION&lt;/code&gt; item key (or multiple ones) as &amp;ldquo;tempdata&amp;rdquo;.</source>
          <target state="translated">マークス &lt;code&gt;$_SESSION&lt;/code&gt; 「TempDataを」などの項目キー（または複数のものを）。</target>
        </trans-unit>
        <trans-unit id="a984102b79887253f14b2b7bb734dbdf8577c367" translate="yes" xml:space="preserve">
          <source>MathML 1.01</source>
          <target state="translated">MathML 1.01</target>
        </trans-unit>
        <trans-unit id="34ed6b02d923aa3e44beb13601adea813d26bbb5" translate="yes" xml:space="preserve">
          <source>MathML 2.0</source>
          <target state="translated">MathML 2.0</target>
        </trans-unit>
        <trans-unit id="0c77aeece8c258113148c6fb487946bf97b34672" translate="yes" xml:space="preserve">
          <source>Media</source>
          <target state="translated">Media</target>
        </trans-unit>
        <trans-unit id="39e3a1d972064b766e66442aa9bc5cb04407acac" translate="yes" xml:space="preserve">
          <source>Memcached Caching</source>
          <target state="translated">Memcached のキャッシング</target>
        </trans-unit>
        <trans-unit id="46434806286f0c08214036027f2a06ccade17e54" translate="yes" xml:space="preserve">
          <source>Memcached Driver</source>
          <target state="translated">Memcached ドライバ</target>
        </trans-unit>
        <trans-unit id="45469a1e38ad08efc052bcff16b74bedd16faba7" translate="yes" xml:space="preserve">
          <source>Memcached servers can be specified in the cache configuration file. Available options are:</source>
          <target state="translated">Memcached サーバーは、キャッシュ設定ファイルで指定することができます。利用可能なオプションは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="3234182613f046fdcfc21083a0a9c17bf2843b8f" translate="yes" xml:space="preserve">
          <source>MemcachedHandler #1180</source>
          <target state="translated">MemcachedHandler #1180</target>
        </trans-unit>
        <trans-unit id="de5d933c66271f8b5ae7ec1dc6bf370a95d656bc" translate="yes" xml:space="preserve">
          <source>MemcachedHandler #1895</source>
          <target state="translated">MemcachedHandler #1895</target>
        </trans-unit>
        <trans-unit id="1bec2e47050dea9678829f94fc3c33059eda1cce" translate="yes" xml:space="preserve">
          <source>MemcachedHandler #2060</source>
          <target state="translated">MemcachedHandler #2060</target>
        </trans-unit>
        <trans-unit id="a5ec0672c44e0a8d1d42a8694013bab8a3c4245b" translate="yes" xml:space="preserve">
          <source>MemcachedHandler #2298</source>
          <target state="translated">MemcachedHandler #2298</target>
        </trans-unit>
        <trans-unit id="7806a83e56a864e2fe4aaec5982969ef661cc171" translate="yes" xml:space="preserve">
          <source>MemcachedHandler Driver</source>
          <target state="translated">MemcachedHandler ドライバ</target>
        </trans-unit>
        <trans-unit id="1aafdfbe48beda1eb51832fe649a9f0b78476c05" translate="yes" xml:space="preserve">
          <source>MemcachedHandlerTest #1180, #1383</source>
          <target state="translated">MemcachedHandlerTest #1180,#1383</target>
        </trans-unit>
        <trans-unit id="faa295b39e14a1eefe740f3ad721b898de1902ac" translate="yes" xml:space="preserve">
          <source>MemcachedHandlerTest #1895</source>
          <target state="translated">MemcachedHandlerTest #1895</target>
        </trans-unit>
        <trans-unit id="c135d6c186b40fc3b641c1dbab6bf4db37770e11" translate="yes" xml:space="preserve">
          <source>Memory usage info</source>
          <target state="translated">メモリ使用量情報</target>
        </trans-unit>
        <trans-unit id="9876991b8375ae1453592e0cd05169a3978a5be1" translate="yes" xml:space="preserve">
          <source>Message #1497</source>
          <target state="translated">メッセージ #1497</target>
        </trans-unit>
        <trans-unit id="49e55d8c880bacbfdcd7c3eb5fb0bd08757e71e1" translate="yes" xml:space="preserve">
          <source>Message @2171</source>
          <target state="translated">メッセージ @2171</target>
        </trans-unit>
        <trans-unit id="dcc9f5117505b2ac31ac9bb0cca43c4ce8b5a833" translate="yes" xml:space="preserve">
          <source>Message Length</source>
          <target state="translated">メッセージの長さ</target>
        </trans-unit>
        <trans-unit id="072c7444ba00df1beaa15d4b9c1bb6d93286a215" translate="yes" xml:space="preserve">
          <source>Message Translations</source>
          <target state="translated">メッセージの翻訳</target>
        </trans-unit>
        <trans-unit id="17d2053b78b2488505fa167e6e99aa5e4d4d6d07" translate="yes" xml:space="preserve">
          <source>Message changes:</source>
          <target state="translated">メッセージが変わります。</target>
        </trans-unit>
        <trans-unit id="9a726295325b0152a6dc4ac454aff607c50600e0" translate="yes" xml:space="preserve">
          <source>Message::appendBody()</source>
          <target state="translated">Message::appendBody()</target>
        </trans-unit>
        <trans-unit id="11e45b8138318f85f5b79a9d7d6c7b0a6038f631" translate="yes" xml:space="preserve">
          <source>Message::appendHeader()</source>
          <target state="translated">Message::appendHeader()</target>
        </trans-unit>
        <trans-unit id="ea0cca9aee41aa4ac886810f2cd59cf1f62306d2" translate="yes" xml:space="preserve">
          <source>Message::getBody()</source>
          <target state="translated">Message::getBody()</target>
        </trans-unit>
        <trans-unit id="642d6bc5b34cf0bd28bdef599b8476ae0314f98b" translate="yes" xml:space="preserve">
          <source>Message::getHeader()</source>
          <target state="translated">Message::getHeader()</target>
        </trans-unit>
        <trans-unit id="683268d01ca34f50ac0484050e604cb921f49278" translate="yes" xml:space="preserve">
          <source>Message::getHeaderLine()</source>
          <target state="translated">Message::getHeaderLine()</target>
        </trans-unit>
        <trans-unit id="1136c967673a3be48d1aaf5021be046f2b290dbd" translate="yes" xml:space="preserve">
          <source>Message::getHeaders()</source>
          <target state="translated">Message::getHeaders()</target>
        </trans-unit>
        <trans-unit id="0d63edcd84be923c447e45ed7551c5154be718f8" translate="yes" xml:space="preserve">
          <source>Message::getProtocolVersion()</source>
          <target state="translated">Message::getProtocolVersion()</target>
        </trans-unit>
        <trans-unit id="7c8e6896c7366e6ee1c0f695b6cdfa2c3b9bd5cf" translate="yes" xml:space="preserve">
          <source>Message::hasHeader()</source>
          <target state="translated">Message::hasHeader()</target>
        </trans-unit>
        <trans-unit id="0aec68442453882df1506bf7514fe149c73a712c" translate="yes" xml:space="preserve">
          <source>Message::populateHeaders()</source>
          <target state="translated">Message::populateHeaders()</target>
        </trans-unit>
        <trans-unit id="c054f3bc93a3048e27ecfacb27faab8c7dd2d98a" translate="yes" xml:space="preserve">
          <source>Message::prependHeader()</source>
          <target state="translated">Message::prependHeader()</target>
        </trans-unit>
        <trans-unit id="8ae5afe81c12ad34cc8a41ba39a1e4d70f7b6ee0" translate="yes" xml:space="preserve">
          <source>Message::removeHeader()</source>
          <target state="translated">Message::removeHeader()</target>
        </trans-unit>
        <trans-unit id="2ba1384e0d0921f5a27639769a1f9dd60f14e7bf" translate="yes" xml:space="preserve">
          <source>Message::setBody()</source>
          <target state="translated">Message::setBody()</target>
        </trans-unit>
        <trans-unit id="3e53a1a6e252e7ea484b9d156aa08f8c4ddbdfa3" translate="yes" xml:space="preserve">
          <source>Message::setHeader()</source>
          <target state="translated">Message::setHeader()</target>
        </trans-unit>
        <trans-unit id="86b22bb032b9a4935f830bc8cab9d098ec5dfa01" translate="yes" xml:space="preserve">
          <source>Message::setProtocolVersion()</source>
          <target state="translated">Message::setProtocolVersion()</target>
        </trans-unit>
        <trans-unit id="03f8d15214fa45b9cd111d4ac620d271c87c170e" translate="yes" xml:space="preserve">
          <source>MessageTest #2171</source>
          <target state="translated">MessageTest #2171</target>
        </trans-unit>
        <trans-unit id="1a9a24f86bf6f6866265a7c7adfd58ca01eea565" translate="yes" xml:space="preserve">
          <source>Messages now has RESTful set</source>
          <target state="translated">メッセージにRESTfulの設定が追加されました</target>
        </trans-unit>
        <trans-unit id="ac86e7797f214b88cd13e4ee84713dbacc784a95" translate="yes" xml:space="preserve">
          <source>Messing with a core system class has a lot of implications, so make sure you know what you are doing before attempting it.</source>
          <target state="translated">コアシステムのクラスをいじることには多くの意味があるので、それを試みる前に何をしているかを確認してください。</target>
        </trans-unit>
        <trans-unit id="251edc0eb5a820646bda4e103f0f007fd55321f3" translate="yes" xml:space="preserve">
          <source>Metadata</source>
          <target state="translated">Metadata</target>
        </trans-unit>
        <trans-unit id="c06b0bd8322121aafa4d4159e59f3fdbe2ba5851" translate="yes" xml:space="preserve">
          <source>Metadata for the cached item</source>
          <target state="translated">キャッシュされたアイテムのメタデータ</target>
        </trans-unit>
        <trans-unit id="a6f831b3f98600dfb357b624493dc57abe10e1c5" translate="yes" xml:space="preserve">
          <source>MetadataTest #2211</source>
          <target state="translated">MetadataTest #2211</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="5f0337845fa160f43e4c22fbe32ed48ddb937cdf" translate="yes" xml:space="preserve">
          <source>Method Chaining</source>
          <target state="translated">メソッドチェイニング</target>
        </trans-unit>
        <trans-unit id="8866386185561ecef5859b43af964574361732d9" translate="yes" xml:space="preserve">
          <source>Method chaining allows you to simplify your syntax by connecting multiple functions. Consider this example:</source>
          <target state="translated">メソッドチェーニングでは、複数の関数を接続することで構文をシンプルにすることができます。この例を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="eac6533c8e2646290ef5835647f9e84730beddc1" translate="yes" xml:space="preserve">
          <source>Methods and variables that are only accessed internally, such as utility and helper functions that your public methods use for code abstraction, should be prefixed with an underscore.</source>
          <target state="translated">コードの抽象化のためにパブリック・メソッドが使用するユーティリティやヘルパー関数など、内部的にのみアクセスされるメソッドや変数は、プレフィックスにアンダースコアを付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="5708006499fe69e19fb30e4b3945108c91b11f8d" translate="yes" xml:space="preserve">
          <source>Methods of that class can then be invoked with:</source>
          <target state="translated">そして、そのクラスのメソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="16e769962e1aae4dc5d556e669bbcf2ea23203cd" translate="yes" xml:space="preserve">
          <source>Migrate #2065, 2137</source>
          <target state="translated">2065,2137号を移住させる</target>
        </trans-unit>
        <trans-unit id="8b31c29cce1c7cdaa6c1c7b09644d7af1d21981e" translate="yes" xml:space="preserve">
          <source>MigrateCurrent #1431</source>
          <target state="translated">MigrateCurrent #1431</target>
        </trans-unit>
        <trans-unit id="78b8452b59f92f9086d5af31860d4bc582fe3462" translate="yes" xml:space="preserve">
          <source>MigrateLatest #1431</source>
          <target state="translated">MigrateLatest #1431</target>
        </trans-unit>
        <trans-unit id="dbf169f45aa262935c47eb520a740af3fe1c56c2" translate="yes" xml:space="preserve">
          <source>MigrateRefresh #2065, 2137</source>
          <target state="translated">MigrateRefresh #2065,2137</target>
        </trans-unit>
        <trans-unit id="80e360befa13c34ede4e5afae779447a51caf36f" translate="yes" xml:space="preserve">
          <source>MigrateRollback #1431</source>
          <target state="translated">MigrateRollback #1431</target>
        </trans-unit>
        <trans-unit id="f2e81526d05bc70f02649d09f3eaa11dd314ca37" translate="yes" xml:space="preserve">
          <source>MigrateRollback #2065, 2137</source>
          <target state="translated">MigrateRollback #2065,2137</target>
        </trans-unit>
        <trans-unit id="65f69cefe4ce11878ef07da981e2128a5b27bf14" translate="yes" xml:space="preserve">
          <source>MigrateStatus #1431</source>
          <target state="translated">MigrateStatus #1431</target>
        </trans-unit>
        <trans-unit id="260b6d898928f1d42dc8dd251e8cd2473e85069c" translate="yes" xml:space="preserve">
          <source>MigrateStatus #2137</source>
          <target state="translated">MigrateStatus #2137</target>
        </trans-unit>
        <trans-unit id="a04892e1a8ff2861179b7d100d7e106322be883f" translate="yes" xml:space="preserve">
          <source>MigrateVersion #1431</source>
          <target state="translated">MigrateVersion #1431</target>
        </trans-unit>
        <trans-unit id="2d4f370503ee3293ab3e80c76a9f77635f048c08" translate="yes" xml:space="preserve">
          <source>MigrateVersion #2137</source>
          <target state="translated">MigrateVersion #2137</target>
        </trans-unit>
        <trans-unit id="9bf3cbb290aa12ad41e3ea464d724ca63b9c1ab1" translate="yes" xml:space="preserve">
          <source>Migrates a database group with all available migrations:</source>
          <target state="translated">利用可能なすべてのマイグレーションでデータベースグループをマイグレーションします。</target>
        </trans-unit>
        <trans-unit id="078ee41dac1378068652b1af58416f50bdd87782" translate="yes" xml:space="preserve">
          <source>Migrates up to the current version (whatever is set for &lt;code&gt;$config['migration_version']&lt;/code&gt; in &lt;em&gt;application/config/migration.php&lt;/em&gt;).</source>
          <target state="translated">現在のバージョン（&lt;em&gt;application / config / migration.phpの&lt;/em&gt; &lt;code&gt;$config['migration_version']&lt;/code&gt; に&lt;em&gt;設定されているもの&lt;/em&gt;）まで&lt;em&gt;マイグレーションし&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="f67dfa42b9ffd138a8eaa81853c7b963617cf47f" translate="yes" xml:space="preserve">
          <source>Migration #2303</source>
          <target state="translated">マイグレーション #2303</target>
        </trans-unit>
        <trans-unit id="7c142e791dfed4cc8d24583caa5a10d6bbf882f3" translate="yes" xml:space="preserve">
          <source>Migration Preferences</source>
          <target state="translated">移行設定</target>
        </trans-unit>
        <trans-unit id="a33514e1e6bea2eea902c62665a432b6f1e7d9bc" translate="yes" xml:space="preserve">
          <source>Migration file names</source>
          <target state="translated">移行ファイル名</target>
        </trans-unit>
        <trans-unit id="a9b3cfaa597ef31d32ab5baa29dd12e2d5737430" translate="yes" xml:space="preserve">
          <source>Migration files will be automatically discovered within defined namespaces. All migrations found across all namespaces will be run every time.</source>
          <target state="translated">移行ファイルは、定義されたネームスペース内で自動的に検出されます。すべてのネームスペースで見つかったすべての移行は、毎回実行されます。</target>
        </trans-unit>
        <trans-unit id="845defffee841c80748a72883d8c2688afdec2cb" translate="yes" xml:space="preserve">
          <source>Migration has new &amp;amp; modified messages</source>
          <target state="translated">移行には新しいメッセージと変更されたメッセージがあります</target>
        </trans-unit>
        <trans-unit id="c6947d82904a70256912d2c9afb6e91c6675f741" translate="yes" xml:space="preserve">
          <source>MigrationRunner #1371</source>
          <target state="translated">MigrationRunner #1371</target>
        </trans-unit>
        <trans-unit id="055082153ef5699effc81973e5ee751348ee8fc9" translate="yes" xml:space="preserve">
          <source>MigrationRunner #1585</source>
          <target state="translated">MigrationRunner #1585</target>
        </trans-unit>
        <trans-unit id="b3752ec2efdee746d1847333ae42a423d0e6d01b" translate="yes" xml:space="preserve">
          <source>MigrationRunner #1743</source>
          <target state="translated">MigrationRunner #1743</target>
        </trans-unit>
        <trans-unit id="5a5cd0c22c129b6124f6e86109f05254246f81be" translate="yes" xml:space="preserve">
          <source>MigrationRunner #1860, #1865</source>
          <target state="translated">MigrationRunner #1860,#1865</target>
        </trans-unit>
        <trans-unit id="506e338123746d23b10b54e8378abe56cff0543f" translate="yes" xml:space="preserve">
          <source>MigrationRunner #2019</source>
          <target state="translated">MigrationRunner #2019</target>
        </trans-unit>
        <trans-unit id="cc4efcfe589adf216dbf1481ce00f35281ee450c" translate="yes" xml:space="preserve">
          <source>MigrationRunner #2065, 2137</source>
          <target state="translated">MigrationRunner #2065,2137</target>
        </trans-unit>
        <trans-unit id="56f5413026e0831866e29ef274f41301edfca43f" translate="yes" xml:space="preserve">
          <source>MigrationRunner #2191</source>
          <target state="translated">MigrationRunner #2191</target>
        </trans-unit>
        <trans-unit id="3b98148467ae6044f970f93cc474e840fcb60cb2" translate="yes" xml:space="preserve">
          <source>MigrationRunner #2303</source>
          <target state="translated">MigrationRunner #2303</target>
        </trans-unit>
        <trans-unit id="06518c93f35b9cf465fba00437b7efeef8477428" translate="yes" xml:space="preserve">
          <source>MigrationRunner #81d371, #1660</source>
          <target state="translated">MigrationRunner #81d371,#1660</target>
        </trans-unit>
        <trans-unit id="ccc8fc3ab8de1361d3f4f9f68ae97d8928d40f7e" translate="yes" xml:space="preserve">
          <source>MigrationRunner::findMigrations()</source>
          <target state="translated">MigrationRunner::findMigrations()</target>
        </trans-unit>
        <trans-unit id="9925e1f23204027047ab9612638d97a2e5dd5cf3" translate="yes" xml:space="preserve">
          <source>MigrationRunner::force()</source>
          <target state="translated">MigrationRunner::force()</target>
        </trans-unit>
        <trans-unit id="b1b79177274f578bcbc8108f62d739373e5dfc1d" translate="yes" xml:space="preserve">
          <source>MigrationRunner::latest()</source>
          <target state="translated">MigrationRunner::latest()</target>
        </trans-unit>
        <trans-unit id="7f5ba7303aeda6d58c40ccda748e1d27e5b62d7e" translate="yes" xml:space="preserve">
          <source>MigrationRunner::regress()</source>
          <target state="translated">MigrationRunner::regress()</target>
        </trans-unit>
        <trans-unit id="89fbbeda795f7a3efe9e4d5f9326a31a1f5a5db4" translate="yes" xml:space="preserve">
          <source>MigrationRunner::setGroup()</source>
          <target state="translated">MigrationRunner::setGroup()</target>
        </trans-unit>
        <trans-unit id="d735d1dcdd82a3cede6d215c6be021df634e8a4b" translate="yes" xml:space="preserve">
          <source>MigrationRunner::setNamespace()</source>
          <target state="translated">MigrationRunner::setNamespace()</target>
        </trans-unit>
        <trans-unit id="c9e74d8ebdced5a4576a942a72ef93df3c6353b9" translate="yes" xml:space="preserve">
          <source>MigrationRunnerTest #1917</source>
          <target state="translated">MigrationRunnerTest #1917</target>
        </trans-unit>
        <trans-unit id="a0b72199c7ad0683086ce3f9d840e3a88ba7f293" translate="yes" xml:space="preserve">
          <source>MigrationTest #1943</source>
          <target state="translated">MigrationTest #1943</target>
        </trans-unit>
        <trans-unit id="dca984afd74a0089c1d5a5816e4de2e8d46a60b5" translate="yes" xml:space="preserve">
          <source>Migrations</source>
          <target state="translated">Migrations</target>
        </trans-unit>
        <trans-unit id="2b387d5c86fee2389901f3481edf1bfb7728e44d" translate="yes" xml:space="preserve">
          <source>Migrations #1973</source>
          <target state="translated">移住 #1973</target>
        </trans-unit>
        <trans-unit id="aeba86c125c5a4613816efacdadc043b2e4c5095" translate="yes" xml:space="preserve">
          <source>Migrations #2065</source>
          <target state="translated">移住 #2065</target>
        </trans-unit>
        <trans-unit id="d0f54ddbf1e793a91ea8e7bb5b7109e4b563fc4d" translate="yes" xml:space="preserve">
          <source>Migrations #2065, 2137</source>
          <target state="translated">移住 #2065,2137</target>
        </trans-unit>
        <trans-unit id="6c4829efb74f7f334bf87b2b423e730253cccda2" translate="yes" xml:space="preserve">
          <source>Migrations Class</source>
          <target state="translated">移行クラス</target>
        </trans-unit>
        <trans-unit id="70c9988ae631b6472602bfba2ae9ed5b5d2affb3" translate="yes" xml:space="preserve">
          <source>Migrations and Seeds</source>
          <target state="translated">移住と種</target>
        </trans-unit>
        <trans-unit id="2635e0ad84bef8f271990ab82d359be2fb36c4ce" translate="yes" xml:space="preserve">
          <source>Migrations are a convenient way for you to alter your database in a structured and organized manner. You could edit fragments of SQL by hand but you would then be responsible for telling other developers that they need to go and run them. You would also have to keep track of which changes need to be run against the production machines next time you deploy.</source>
          <target state="translated">移行は、構造化された組織的な方法でデータベースを変更するための便利な方法です。手作業でSQLの断片を編集することもできますが、他の開発者にSQLを実行する必要があることを伝える責任があります。また、次回のデプロイ時には、どの変更を本番マシンに対して実行する必要があるかを追跡しなければなりません。</target>
        </trans-unit>
        <trans-unit id="d9c9e172939f128793c1f8e895abddab75a8a670" translate="yes" xml:space="preserve">
          <source>Migrations refactored and streamlined for more wholistic functionality (BC)</source>
          <target state="translated">マイグレーションのリファクタリングと合理化を行い、より全体的な機能性を向上 (BC)</target>
        </trans-unit>
        <trans-unit id="63b71a01b6a464d7f9608c027597cbfc83c1f3d6" translate="yes" xml:space="preserve">
          <source>Migrations/</source>
          <target state="translated">Migrations/</target>
        </trans-unit>
        <trans-unit id="66035ad3c8f4fd3253fd9b02b33a979ea942449e" translate="yes" xml:space="preserve">
          <source>Migrations/MigrationRunnerTest #1660, #1675</source>
          <target state="translated">Migrations/MigrationRunnerTest #1660,#1675</target>
        </trans-unit>
        <trans-unit id="c6854fb687a4a40230c2578c61327268b039aad9" translate="yes" xml:space="preserve">
          <source>Migrations/MigrationRunnerTest #1743</source>
          <target state="translated">Migrations/MigrationRunnerTest #1743</target>
        </trans-unit>
        <trans-unit id="e5744cf4484ab43c44ab34992c1b9ca390ed9516" translate="yes" xml:space="preserve">
          <source>Migrations/MigrationRunnerTest #2019</source>
          <target state="translated">移住/MigrationRunnerTest #2019</target>
        </trans-unit>
        <trans-unit id="ce8acc34e10b337bb73d6f2cc7bc86f51856cb1d" translate="yes" xml:space="preserve">
          <source>Migrations/MigrationRunnerTest #2065, 2137</source>
          <target state="translated">移住/Migrations/MigrationRunnerTest #2065,2137</target>
        </trans-unit>
        <trans-unit id="4808db6eee638681e8c4ab709e7e1bfb072f9927" translate="yes" xml:space="preserve">
          <source>MigratiopnRollback #2035</source>
          <target state="translated">MigratiopnRollback #2035</target>
        </trans-unit>
        <trans-unit id="4ef2336b504b110096c4ff9f42f4817bd93b850f" translate="yes" xml:space="preserve">
          <source>Mimes #1368, #1465</source>
          <target state="translated">マイム#1368,#1465</target>
        </trans-unit>
        <trans-unit id="0be8fa5cb75f09a302b19c7933a269aafc95758c" translate="yes" xml:space="preserve">
          <source>Mimes #1453</source>
          <target state="translated">マイムス#1453</target>
        </trans-unit>
        <trans-unit id="319c19b9e813f94557eb26c26b7b4388bfdc0145" translate="yes" xml:space="preserve">
          <source>Miscellaneous Functions</source>
          <target state="translated">その他の機能</target>
        </trans-unit>
        <trans-unit id="4302c5955438280974f012a80f484de76436a1b4" translate="yes" xml:space="preserve">
          <source>MockAppConfig #2272</source>
          <target state="translated">MockAppConfig #2272</target>
        </trans-unit>
        <trans-unit id="a5a4119421d4f5ec3fb7fe7781ef62beb7f063a3" translate="yes" xml:space="preserve">
          <source>Mocking Services</source>
          <target state="translated">モッキングサービス</target>
        </trans-unit>
        <trans-unit id="2bce951b21bab34d0f19787c3b911df0fb859777" translate="yes" xml:space="preserve">
          <source>Mode name</source>
          <target state="translated">モード名</target>
        </trans-unit>
        <trans-unit id="68c2cc7f0ceaa3e499ecb4db331feb4debbbcc23" translate="yes" xml:space="preserve">
          <source>Model</source>
          <target state="translated">Model</target>
        </trans-unit>
        <trans-unit id="2eeb16a9c6ac5a20d578ae80ceb524d500f39573" translate="yes" xml:space="preserve">
          <source>Model #1311</source>
          <target state="translated">モデル#1311</target>
        </trans-unit>
        <trans-unit id="4c865f9d0bd55803039922d7e49db0ced85fcf3f" translate="yes" xml:space="preserve">
          <source>Model #1345, #1380, #1373, #1440</source>
          <target state="translated">モデル#1345、#1380、#1373、#1440</target>
        </trans-unit>
        <trans-unit id="e36191532fcd22138961b21218c416036fe4f6c8" translate="yes" xml:space="preserve">
          <source>Model #1602, #a0fc68</source>
          <target state="translated">モデル#1602、#a0fc68</target>
        </trans-unit>
        <trans-unit id="9521e63acb6883adec67b9036a407fcb3638f615" translate="yes" xml:space="preserve">
          <source>Model #1617, #1632, #1656, #1689</source>
          <target state="translated">モデル#1617、#1632、#1656、#1689</target>
        </trans-unit>
        <trans-unit id="c2f106b0c15d2e7e410512c466e4ec178b7e7bf8" translate="yes" xml:space="preserve">
          <source>Model #1793, #1769, #1804, #1808, #1812, #1813, #1817, #1829, #1746, #1861</source>
          <target state="translated">モデル#1793、#1769、#1804、#1808、#1812、#1813、#1817、#1829、#1746、#1861</target>
        </trans-unit>
        <trans-unit id="0935d4730122c0c8259116369da51107e48c4f90" translate="yes" xml:space="preserve">
          <source>Model #1930, #1943, #1963, #1981</source>
          <target state="translated">モデル#1930、#1943、#1963、#1981</target>
        </trans-unit>
        <trans-unit id="97d7f6fcee2ec0d91825b412c521d70777d53582" translate="yes" xml:space="preserve">
          <source>Model #2050, #2051, #2053, #2054</source>
          <target state="translated">モデル#2050、#2051、#2053、#2054</target>
        </trans-unit>
        <trans-unit id="45343c9d835297d8f0c07f127c906be8ffc599e3" translate="yes" xml:space="preserve">
          <source>Model #2090</source>
          <target state="translated">モデル#2090</target>
        </trans-unit>
        <trans-unit id="a84af887b6432eef6df58c66d5bccbfb80281fb9" translate="yes" xml:space="preserve">
          <source>Model #2231</source>
          <target state="translated">モデル番号#2231</target>
        </trans-unit>
        <trans-unit id="30c36576375ae4c341ba3b7835b99e750bab9928" translate="yes" xml:space="preserve">
          <source>Model #2289, 2332</source>
          <target state="translated">モデル#2289、2332</target>
        </trans-unit>
        <trans-unit id="1d2b770049e8a805941e829573c09b1ded686e5f" translate="yes" xml:space="preserve">
          <source>Model #4f4a37, #6e549a, #37dbc1, #1712, #1763</source>
          <target state="translated">モデル#4f4a37、#6e549a、#37dbc1、#1712、#1763</target>
        </trans-unit>
        <trans-unit id="e3d1ca66c41254171e26939298c91e4676ab6741" translate="yes" xml:space="preserve">
          <source>Model Events</source>
          <target state="translated">モデルイベント</target>
        </trans-unit>
        <trans-unit id="8413017bbf695648f244a71e5a219f0422c504d2" translate="yes" xml:space="preserve">
          <source>Model Updating</source>
          <target state="translated">モデルの更新</target>
        </trans-unit>
        <trans-unit id="dc541a59c36c124e03def2af8a87a1f5d5d34eb3" translate="yes" xml:space="preserve">
          <source>Model classes are stored in your &lt;strong&gt;application/models/&lt;/strong&gt; directory. They can be nested within sub-directories if you want this type of organization.</source>
          <target state="translated">モデルクラスは、&lt;strong&gt;application / models /&lt;/strong&gt;ディレクトリに保存されます。このタイプの組織が必要な場合は、サブディレクトリ内にネストできます。</target>
        </trans-unit>
        <trans-unit id="9a44ef615916a4fab8a8e8aac039ef0308295c8d" translate="yes" xml:space="preserve">
          <source>Model-View-Controller</source>
          <target state="translated">Model-View-Controller</target>
        </trans-unit>
        <trans-unit id="b36a63bc3fe43961fc65d47d87018d35df5a1da6" translate="yes" xml:space="preserve">
          <source>Model-View-Controller Based System</source>
          <target state="translated">モデルビューコントローラベースシステム</target>
        </trans-unit>
        <trans-unit id="270836328e6579b01d4429364e4344240e7f7712" translate="yes" xml:space="preserve">
          <source>Model-View-Controller basics</source>
          <target state="translated">モデル-ビュー-コントローラの基本</target>
        </trans-unit>
        <trans-unit id="8d2fbbcd7cff5c513f04eca87b525cb904185f1e" translate="yes" xml:space="preserve">
          <source>Model: harden database servers</source>
          <target state="translated">モデル:データベースサーバの硬化</target>
        </trans-unit>
        <trans-unit id="cc8272383b9859e48c05c088ada39430736bc6b1" translate="yes" xml:space="preserve">
          <source>Model: mandate strong encrypted communications with servers</source>
          <target state="translated">モデル:サーバーとの強力な暗号化通信を義務付ける</target>
        </trans-unit>
        <trans-unit id="f7c87ca8e50f58816968fd5de99691f574a20611" translate="yes" xml:space="preserve">
          <source>Model: parameterized queries</source>
          <target state="translated">モデル:パラメータ化されたクエリ</target>
        </trans-unit>
        <trans-unit id="dd0e4b33839ac4194c4df0cf73e0231f1b93a06a" translate="yes" xml:space="preserve">
          <source>Model: validate role</source>
          <target state="translated">モデル:役割を検証する</target>
        </trans-unit>
        <trans-unit id="ef38dd41680f88c2ee862333c0e31aaab4bf44ab" translate="yes" xml:space="preserve">
          <source>Model: validate roles</source>
          <target state="translated">モデル:役割を検証する</target>
        </trans-unit>
        <trans-unit id="ed8390427e85108b2a02833785b7dae69bc19602" translate="yes" xml:space="preserve">
          <source>Model: validate user roles before updating data</source>
          <target state="translated">モデル:データを更新する前にユーザーロールを検証</target>
        </trans-unit>
        <trans-unit id="b52cfd3840e8ffc13d14f0ce2c4a92311ca4556d" translate="yes" xml:space="preserve">
          <source>ModelException #1829</source>
          <target state="translated">ModelException #1829</target>
        </trans-unit>
        <trans-unit id="273994fb46ec4a4c3c81a656daffa2cfbdd6e5d4" translate="yes" xml:space="preserve">
          <source>ModelException #2054</source>
          <target state="translated">ModelException #2054</target>
        </trans-unit>
        <trans-unit id="864561e8381b49f8af56301454b69103b489af76" translate="yes" xml:space="preserve">
          <source>ModelTest #1617, #1689</source>
          <target state="translated">ModelTest #1617,#1689</target>
        </trans-unit>
        <trans-unit id="ee419d3b6ef44bb984d0ebcce0baa45ad80d6555" translate="yes" xml:space="preserve">
          <source>ModelTest #1930, #1943, #1981</source>
          <target state="translated">ModelTest #1930,#1943,#1981</target>
        </trans-unit>
        <trans-unit id="2af8e8ee280d754d246ae204a209ed312b471d08" translate="yes" xml:space="preserve">
          <source>ModelTest #2002, #2051, #2053, #2054</source>
          <target state="translated">ModelTest #2002,#2051,#2053,#2054</target>
        </trans-unit>
        <trans-unit id="af30ae11b6416e70259ec1144589bcf9631ed615" translate="yes" xml:space="preserve">
          <source>ModelTest #2090</source>
          <target state="translated">ModelTest #2090</target>
        </trans-unit>
        <trans-unit id="ca9848f706cc8ca63da227940f1e4065f90ac44e" translate="yes" xml:space="preserve">
          <source>ModelTest #2231</source>
          <target state="translated">ModelTest #2231</target>
        </trans-unit>
        <trans-unit id="95a59b8f3e41ba9309b71345e3b8b24fdfad857c" translate="yes" xml:space="preserve">
          <source>ModelTest #37dbc1, #4ff1f5, #1763</source>
          <target state="translated">ModelTest #37dbc1,#4ff1f5,#1763</target>
        </trans-unit>
        <trans-unit id="fae2e5efbbb844a23e0e1b618d0a5e27205f5aa5" translate="yes" xml:space="preserve">
          <source>Modeling Data</source>
          <target state="translated">モデリングデータ</target>
        </trans-unit>
        <trans-unit id="f3798f81c7b6fecad2cbfec741314f8a66c0eca3" translate="yes" xml:space="preserve">
          <source>Models</source>
          <target state="translated">Models</target>
        </trans-unit>
        <trans-unit id="aa2bb6f267c7f647f6759e9cc81866832d6e53c1" translate="yes" xml:space="preserve">
          <source>Models are &lt;strong&gt;optionally&lt;/strong&gt; available for those who want to use a more traditional MVC approach.</source>
          <target state="translated">モデルは、より伝統的なMVCアプローチを使用したい人のために&lt;strong&gt;オプションで&lt;/strong&gt;利用可能です。</target>
        </trans-unit>
        <trans-unit id="2ce143308833ea115ea1d065350c70586547791c" translate="yes" xml:space="preserve">
          <source>Models are PHP classes that are designed to work with information in your database. For example, let&amp;rsquo;s say you use CodeIgniter to manage a blog. You might have a model class that contains functions to insert, update, and retrieve your blog data. Here is an example of what such a model class might look like:</source>
          <target state="translated">モデルは、データベース内の情報を操作するように設計されたPHPクラスです。たとえば、CodeIgniterを使用してブログを管理するとします。ブログデータを挿入、更新、および取得する関数を含むモデルクラスがある場合があります。このようなモデルクラスの例を次に示します。</target>
        </trans-unit>
        <trans-unit id="3fc6895637d47d242be76bdb83a9d08c9bad2e41" translate="yes" xml:space="preserve">
          <source>Models are always instantiated by their fully-qualified class name, so no special access is provided:</source>
          <target state="translated">モデルは常に完全修飾されたクラス名でインスタンス化されるため、特別なアクセスは提供されません。</target>
        </trans-unit>
        <trans-unit id="5461d5804c53ae5875be6f7762ac6c389f2ae708" translate="yes" xml:space="preserve">
          <source>Models are typically stored in &lt;strong&gt;/app/Models&lt;/strong&gt;, though they can use a namespace to be grouped however you need.</source>
          <target state="translated">モデルは通常&lt;strong&gt;/ app / Modelsに&lt;/strong&gt;保存されますが、必要に応じて名前空間を使用してグループ化することもできます。</target>
        </trans-unit>
        <trans-unit id="01eb144089cf8e157bf3dd75607fe42eb225ab34" translate="yes" xml:space="preserve">
          <source>Models are typically stored in the &lt;code&gt;app/Models&lt;/code&gt; directory. They should have a namespace that matches their location within the directory, like &lt;code&gt;namespace App\Models&lt;/code&gt;.</source>
          <target state="translated">モデルは通常、 &lt;code&gt;app/Models&lt;/code&gt; ディレクトリに保存されます。 &lt;code&gt;namespace App\Models&lt;/code&gt; ように、ディレクトリ内の場所と一致する名前空間が必要です。</target>
        </trans-unit>
        <trans-unit id="1ce933ee61509d678c0bfd1382fab7fec9416d44" translate="yes" xml:space="preserve">
          <source>Models found in the &lt;em&gt;models/&lt;/em&gt; folder</source>
          <target state="translated">&lt;em&gt;models /&lt;/em&gt;フォルダーにある&lt;em&gt;モデル&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6430616e316d540e076f049d0b7f8d76409f06e7" translate="yes" xml:space="preserve">
          <source>Models now require a primary key</source>
          <target state="translated">モデルにはプライマリキーが必要になりました。</target>
        </trans-unit>
        <trans-unit id="34d47c90e47f9e7f870dacb826a06a5720659c8c" translate="yes" xml:space="preserve">
          <source>Models provide a way to interact with a specific table in your database. They come out of the box with helper methods for much of the standard ways you would need to interact with a database table, including finding records, updating records, deleting records, and more.</source>
          <target state="translated">モデルは、データベース内の特定のテーブルを操作する方法を提供します。モデルは、レコードの検索、レコードの更新、レコードの削除など、データベースのテーブルを操作するために必要な標準的な方法のほとんどをヘルパーメソッドで実現しています。</target>
        </trans-unit>
        <trans-unit id="f8717fb263c5d564c64570c12c6e082a558e653c" translate="yes" xml:space="preserve">
          <source>Models, Views, and Controllers</source>
          <target state="translated">モデル、ビュー、コントローラ</target>
        </trans-unit>
        <trans-unit id="d45f0402146f97a0ea4e423da067ab13e3b51ac2" translate="yes" xml:space="preserve">
          <source>Modifies a table column. Usage: See &lt;a href=&quot;#modifying-a-column-in-a-table&quot;&gt;Modifying a Column in a Table&lt;/a&gt;.</source>
          <target state="translated">テーブルの列を変更します。使用法：&lt;a href=&quot;#modifying-a-column-in-a-table&quot;&gt;テーブルの列の変更を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3eb1bc49eb93d4bbabab3bb57d58c7c392d21e2f" translate="yes" xml:space="preserve">
          <source>Modifying Directory Locations</source>
          <target state="translated">ディレクトリの場所を変更する</target>
        </trans-unit>
        <trans-unit id="4f15aa8ca874492770383bfd8d9e19998f3752e1" translate="yes" xml:space="preserve">
          <source>Modifying Tables</source>
          <target state="translated">テーブルの修正</target>
        </trans-unit>
        <trans-unit id="a6a1cf1f8c70c268ba8c051031d188ec5a0c9450" translate="yes" xml:space="preserve">
          <source>Modifying a Column in a Table</source>
          <target state="translated">テーブルのカラムを修正する</target>
        </trans-unit>
        <trans-unit id="1d0f193cd2383328292798f7e63fc842842f32b6" translate="yes" xml:space="preserve">
          <source>Modifying the Message With Context</source>
          <target state="translated">コンテキストを使ってメッセージを変更する</target>
        </trans-unit>
        <trans-unit id="7e8bc3882617230cda96f81e2c15a839a822dcb2" translate="yes" xml:space="preserve">
          <source>Modifying the Value</source>
          <target state="translated">値の変更</target>
        </trans-unit>
        <trans-unit id="e3d5877865ad0f71617a1753503ff15016d343a8" translate="yes" xml:space="preserve">
          <source>Modules #1665</source>
          <target state="translated">モジュール #1665</target>
        </trans-unit>
        <trans-unit id="5132d424204bcfedbc339cff3aa80687cdf3c0ec" translate="yes" xml:space="preserve">
          <source>Modules that define a &amp;ldquo;current user&amp;rdquo; should define the function &lt;code&gt;user_id()&lt;/code&gt; to return the user&amp;rsquo;s unique identifier, or &lt;code&gt;null&lt;/code&gt; for &amp;ldquo;no current user&amp;rdquo;</source>
          <target state="translated">「現在のユーザー」を定義するモジュールは、ユーザーの一意の識別子を返す関数 &lt;code&gt;user_id()&lt;/code&gt; を定義するか、「現在のユーザーがいない」場合は &lt;code&gt;null&lt;/code&gt; を定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="c0319525c8b3b35899f57588e9fbbf63f1b20127" translate="yes" xml:space="preserve">
          <source>Modules that handle login and logout operations should trigger the &lt;code&gt;login&lt;/code&gt; and &lt;code&gt;logout&lt;/code&gt; Events when successful</source>
          <target state="translated">ログインおよびログアウト操作を処理するモジュールは、成功すると &lt;code&gt;login&lt;/code&gt; および &lt;code&gt;logout&lt;/code&gt; イベントをトリガーする必要があります</target>
        </trans-unit>
        <trans-unit id="f7f5736f000670e4324c3d5ce08b2d38e991c24d" translate="yes" xml:space="preserve">
          <source>Month name</source>
          <target state="translated">月名</target>
        </trans-unit>
        <trans-unit id="b44ad06989798965210da32f817e3ec3c0718854" translate="yes" xml:space="preserve">
          <source>More information about routing can be found in the URI Routing &lt;a href=&quot;../general/routing&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">ルーティングの詳細については、URIルーティングの&lt;a href=&quot;../general/routing&quot;&gt;ドキュメントを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="f28ae7a79ef261c2c93ebc8eeacb612fa881caee" translate="yes" xml:space="preserve">
          <source>More information about routing can be found in the URI Routing &lt;a href=&quot;../incoming/routing&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">ルーティングの詳細については、URIルーティングの&lt;a href=&quot;../incoming/routing&quot;&gt;ドキュメントを参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="995ceff0643549c7905313182ba91d5d90e66221" translate="yes" xml:space="preserve">
          <source>More simple way of getting model instances</source>
          <target state="translated">モデルインスタンスを取得するよりシンプルな方法</target>
        </trans-unit>
        <trans-unit id="ca1735cffdd12d3212da09522c562d75dec1c609" translate="yes" xml:space="preserve">
          <source>Most communication is done through the &lt;code&gt;request()&lt;/code&gt; method, which fires off the request, and then returns a Response instance to you. This takes the HTTP method, the url and an array of options as the parameters.</source>
          <target state="translated">ほとんどの通信は、 &lt;code&gt;request()&lt;/code&gt; メソッドを介して行われます。このメソッドは、リクエストを起動してから、Responseインスタンスを返します。これは、HTTPメソッド、URL、およびオプションの配列をパラメーターとして受け取ります。</target>
        </trans-unit>
        <trans-unit id="a2c3839667faf893586f5d4e669c976641f092c1" translate="yes" xml:space="preserve">
          <source>Most database engines support some form of prepared statements, that allow you to prepare a query once, and then run that query multiple times with new sets of data. This eliminates the possibility of SQL injection since the data is passed to the database in a different format than the query itself. When you need to run the same query multiple times it can be quite a bit faster, too. However, to use it for every query can have major performance hits, since you&amp;rsquo;re calling out to the database twice as often. Since the Query Builder and Database connections already handle escaping the data for you, the safety aspect is already taken care of for you. There will be times, though, when you need to ability to optimize the query by running a prepared statement, or prepared query.</source>
          <target state="translated">ほとんどのデータベースエンジンは、何らかの形式のプリペアドステートメントをサポートしています。これにより、クエリを1回準備してから、新しいデータセットを使用してそのクエリを複数回実行できます。これにより、データはクエリ自体とは異なる形式でデータベースに渡されるため、SQLインジェクションの可能性が排除されます。同じクエリを複数回実行する必要がある場合も、かなり高速になる可能性があります。ただし、データベースを2倍の頻度で呼び出すため、すべてのクエリに使用すると、パフォーマンスが大幅に低下する可能性があります。クエリビルダーとデータベース接続はすでにデータのエスケープを処理しているため、安全面はすでに処理されています。ただし、プリペアドステートメントまたはプリペアドクエリを実行してクエリを最適化する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="664fdcdad87fddbd4ffa30b716e9f883cb4bed03" translate="yes" xml:space="preserve">
          <source>Most events are defined within the &lt;strong&gt;app/Config/Events.php&lt;/strong&gt; file. You can subscribe an action to an event with the Events class&amp;rsquo; &lt;code&gt;on()&lt;/code&gt; method. The first parameter is the name of the event to subscribe to. The second parameter is a callable that will be run when that event is triggered:</source>
          <target state="translated">ほとんどのイベントは、&lt;strong&gt;app / Config /Events.php&lt;/strong&gt;ファイル内で定義されています。Eventsクラスの &lt;code&gt;on()&lt;/code&gt; メソッドを使用して、アクションをイベントにサブスクライブできます。最初のパラメーターは、サブスクライブするイベントの名前です。2番目のパラメーターは、そのイベントがトリガーされたときに実行される呼び出し可能パラメーターです。</target>
        </trans-unit>
        <trans-unit id="116301c6866f86f5ea978a7d88c80eee2f96bee7" translate="yes" xml:space="preserve">
          <source>Most of the preferences have default values that will be used if you do not set them.</source>
          <target state="translated">ほとんどの環境設定にはデフォルト値が設定されており、それを設定しない場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="b459604b0f135e3b57a2c7f27d38a481a961d01c" translate="yes" xml:space="preserve">
          <source>Most tests require some preparation in order to run correctly. PHPUnit&amp;rsquo;s &lt;code&gt;TestCase&lt;/code&gt; provides four methods to help with staging and clean up:</source>
          <target state="translated">ほとんどのテストは、正しく実行するためにいくつかの準備が必要です。PHPUnitの &lt;code&gt;TestCase&lt;/code&gt; は、ステージングとクリーンアップに役立つ4つのメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="a63b9abc427da0a44530fd123a81a4a38abb8e32" translate="yes" xml:space="preserve">
          <source>Moves the internal results row pointer to the desired offset.</source>
          <target state="translated">内部結果行ポインタを目的のオフセットに移動します。</target>
        </trans-unit>
        <trans-unit id="ddaffac14ac463c98c99282dc6679f7a80726b89" translate="yes" xml:space="preserve">
          <source>Moving Files</source>
          <target state="translated">ファイルの移動</target>
        </trans-unit>
        <trans-unit id="c023414fa6d5776d9048cc73233fc762fd2ebe04" translate="yes" xml:space="preserve">
          <source>Moving an uploaded file can fail, with an HTTPException, under several circumstances:</source>
          <target state="translated">アップロードされたファイルの移動は、いくつかの状況下で HTTPException が発生して失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="547cc125dadbc32ef9b7354ba68ec7522700f051" translate="yes" xml:space="preserve">
          <source>Much like &lt;code&gt;getPrevious()&lt;/code&gt; and &lt;code&gt;getNext()&lt;/code&gt;, these methods return links to the first and last pages in the result set.</source>
          <target state="translated">多くのように &lt;code&gt;getPrevious()&lt;/code&gt; と &lt;code&gt;getNext()&lt;/code&gt; 、これらのメソッドは、結果セットの最初と最後のページへのリンクを返します。</target>
        </trans-unit>
        <trans-unit id="5d51c7bf26cbe027d4ab2ef109ff389740770cab" translate="yes" xml:space="preserve">
          <source>Much like Time&amp;rsquo;s humanize() method, this returns a string that displays the difference between the times in a human readable format that is geared towards being easily understood. It can create strings like &amp;lsquo;3 hours ago&amp;rsquo;, &amp;lsquo;in 1 month&amp;rsquo;, etc. The biggest differences are in how very recent dates are handled:</source>
          <target state="translated">Timeのhumanize（）メソッドと同様に、これは、簡単に理解できるように調整された、人間が読める形式で時間の違いを表示する文字列を返します。「3時間前」、「1か月後」などの文字列を作成できます。最大の違いは、ごく最近の日付の処理方法にあります。</target>
        </trans-unit>
        <trans-unit id="eea36daf70a9f45dc0c4ba2490edb02e1066a1e0" translate="yes" xml:space="preserve">
          <source>Much like the &lt;a href=&quot;common_functions&quot;&gt;common functions&lt;/a&gt;, the compatibility functions are always available, as long as their dependencies are met.</source>
          <target state="translated">多くのように&lt;a href=&quot;common_functions&quot;&gt;一般的な機能&lt;/a&gt;、互換機能がある限りその依存関係が満たされているとして、常に利用可能です。</target>
        </trans-unit>
        <trans-unit id="7e4d42ac093fc14bacc5d8329d234a10abc81f1f" translate="yes" xml:space="preserve">
          <source>Much of modern PHP development requires building API&amp;rsquo;s, whether simply to provide data for a javascript-heavy single page application, or as a standalone product. CodeIgniter provides an API Response trait that can be used with any controller to make common response types simple, with no need to remember which HTTP status code should be returned for which response types.</source>
          <target state="translated">最新のPHP開発の多くは、JavaScriptを多用するシングルページアプリケーションにデータを提供するだけでも、スタンドアロン製品としてでも、APIを構築する必要があります。CodeIgniterは、一般的な応答タイプを単純にするために任意のコントローラーで使用できるAPI応答特性を提供します。どの応答タイプに対して、どのHTTPステータスコードを返す必要があるかを覚えておく必要はありません。</target>
        </trans-unit>
        <trans-unit id="57916ab8af22a09d2520bdd9f877353625ae5d0f" translate="yes" xml:space="preserve">
          <source>Multi-server configuration with an optional &lt;em&gt;weight&lt;/em&gt; parameter as the third colon-separated (&lt;code&gt;:weight&lt;/code&gt;) value is also supported, but we have to note that we haven&amp;rsquo;t tested if that is reliable.</source>
          <target state="translated">3番目のコロンで区切られた（ &lt;code&gt;:weight&lt;/code&gt; ）値としてオプションの&lt;em&gt;重み&lt;/em&gt;パラメーターを持つマルチサーバー構成もサポートされていますが、それが信頼できるかどうかはテストしていません。</target>
        </trans-unit>
        <trans-unit id="28bb37ed79034c9cf7806eaf79c9c2b81d2aadc7" translate="yes" xml:space="preserve">
          <source>Multibyte String</source>
          <target state="translated">マルチバイト文字列</target>
        </trans-unit>
        <trans-unit id="380d02a5144467138e83b85afe9b87b0857c1ef3" translate="yes" xml:space="preserve">
          <source>Multiple Calls to the Same Hook</source>
          <target state="translated">同一フックへの複数回の呼び出し</target>
        </trans-unit>
        <trans-unit id="4a409f347b4436212ae5679fbaef47bf82fdddfb" translate="yes" xml:space="preserve">
          <source>Multiple Connections to Same Database</source>
          <target state="translated">同一データベースへの複数接続</target>
        </trans-unit>
        <trans-unit id="b724d17f477233b318c04305bcd69cbc07f5cdbe" translate="yes" xml:space="preserve">
          <source>Multiple Memcached servers can be specified in the memcached.php configuration file, located in the _application/config/* directory.</source>
          <target state="translated">複数のMemcachedサーバは、_application/config/*ディレクトリにあるmemcached.php設定ファイルで指定することができます。</target>
        </trans-unit>
        <trans-unit id="9cae85b1776a27b4897d722abe985bb6b8afefb8" translate="yes" xml:space="preserve">
          <source>Multiple Protocols: Mail, Sendmail, and SMTP</source>
          <target state="translated">複数のプロトコル。メール、sendmail、SMTP</target>
        </trans-unit>
        <trans-unit id="e88e13e6706fb1291071d31af9e2526b344a490b" translate="yes" xml:space="preserve">
          <source>Multiple calls to addField() are cumulative.</source>
          <target state="translated">addField()の複数回の呼び出しは累積されます。</target>
        </trans-unit>
        <trans-unit id="d04302609118850f053f41d4170b518fb9554d6f" translate="yes" xml:space="preserve">
          <source>Multiple calls to add_field() are cumulative.</source>
          <target state="translated">add_field()の複数回の呼び出しは累積されます。</target>
        </trans-unit>
        <trans-unit id="56e55c9ca20fc6872fdaeaada1fd02d43aa28688" translate="yes" xml:space="preserve">
          <source>Multiple column non-primary keys must be sent as an array. Sample output below is for MySQL.</source>
          <target state="translated">複数のカラムの非主キーは配列として送信する必要があります。以下のサンプル出力はMySQLの場合です。</target>
        </trans-unit>
        <trans-unit id="46d68d1604f488dbe96f5a3022a8a29df6492c7a" translate="yes" xml:space="preserve">
          <source>Multiple files</source>
          <target state="translated">複数のファイル</target>
        </trans-unit>
        <trans-unit id="92dcf9faa5c51e9b8a99f8ab47128bd346f2f413" translate="yes" xml:space="preserve">
          <source>Multiple filters can be applied to the value by piping multiple ones together. They are processed in order, from left to right:</source>
          <target state="translated">複数のフィルタは、複数のフィルタをまとめて配管することで、値に適用することができます。左から順に処理されます。</target>
        </trans-unit>
        <trans-unit id="6f6dc9f7b82b69ac4a2ebaf51fe7a8e4191e02ed" translate="yes" xml:space="preserve">
          <source>Multiple function calls can be made if you need several joins in one query.</source>
          <target state="translated">1つのクエリで複数の結合が必要な場合は、複数の関数を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="daaa329caefed028a34e3484742ff33f2a34e26f" translate="yes" xml:space="preserve">
          <source>Multiple recipients</source>
          <target state="translated">複数の受信者</target>
        </trans-unit>
        <trans-unit id="06cf6def4457c4d9a93b362e71dfa92a49db4ecb" translate="yes" xml:space="preserve">
          <source>Multiple records may be updated with a single call by passing an array of primary keys as the first parameter:</source>
          <target state="translated">最初のパラメータとして主キーの配列を渡すことで、1回の呼び出しで複数のレコードを更新することができます。</target>
        </trans-unit>
        <trans-unit id="edf84bcdd705f98310cd4834a2d64e2a54b6583f" translate="yes" xml:space="preserve">
          <source>Mutators</source>
          <target state="translated">Mutators</target>
        </trans-unit>
        <trans-unit id="6dc21afca93624bf00f507b963979599291a29ff" translate="yes" xml:space="preserve">
          <source>MySQL (5.1+) via the &lt;em&gt;MySQLi&lt;/em&gt; driver</source>
          <target state="translated">&lt;em&gt;MySQLi&lt;/em&gt;ドライバーを介したMySQL（5.1+）</target>
        </trans-unit>
        <trans-unit id="28b44e1ed39acb3e0d4ab5cfb8eae27da41b4dad" translate="yes" xml:space="preserve">
          <source>MySQL (5.1+) via the &lt;em&gt;pdo&lt;/em&gt; driver</source>
          <target state="translated">&lt;em&gt;pdo&lt;/em&gt;ドライバーを介したMySQL（5.1+）</target>
        </trans-unit>
        <trans-unit id="5220d850a9cedf604eb12f4a809d3b970282586f" translate="yes" xml:space="preserve">
          <source>MySQL-formatted date</source>
          <target state="translated">MySQL形式の日付</target>
        </trans-unit>
        <trans-unit id="4bf3b636c78b93340089e1ff444c9b9ab26769f6" translate="yes" xml:space="preserve">
          <source>MySQLi/</source>
          <target state="translated">MySQLi/</target>
        </trans-unit>
        <trans-unit id="5a73dfa7783e2912af6f66c3d15f447a762b3de7" translate="yes" xml:space="preserve">
          <source>MySQLi/Connection #1335, #1449</source>
          <target state="translated">MySQLi/接続 #1335,#1449</target>
        </trans-unit>
        <trans-unit id="13d163c519aa4cbfc5a05f0aae2fa527136e099b" translate="yes" xml:space="preserve">
          <source>MySQLi/Connection #1561, #8f205a</source>
          <target state="translated">MySQLi/接続 #1561,#8f205a</target>
        </trans-unit>
        <trans-unit id="9f4c952773e44900c1ffe4f03feec7d62eda30a5" translate="yes" xml:space="preserve">
          <source>MySQLi/Connection #1896</source>
          <target state="translated">MySQLi/接続 #1896</target>
        </trans-unit>
        <trans-unit id="187752d1d8b5329f6413b5a1c054e43757de0f1e" translate="yes" xml:space="preserve">
          <source>MySQLi/Connection #2201, 2229</source>
          <target state="translated">MySQLi/接続 #2201,2229</target>
        </trans-unit>
        <trans-unit id="eff5b547f503542a44ecfea5a01caf67fc1b23fb" translate="yes" xml:space="preserve">
          <source>MySQLi/Forge #1343, #1344, #1530</source>
          <target state="translated">MySQLi/Forge #1343,#1344,#1530</target>
        </trans-unit>
        <trans-unit id="34c19c1f46ba9db32d160c3c0ecd083dc052469e" translate="yes" xml:space="preserve">
          <source>MySQLi/Forge #1899</source>
          <target state="translated">MySQLi/Forge #1899</target>
        </trans-unit>
        <trans-unit id="e06a676c71b1b6e55453056062cda4a79373be6e" translate="yes" xml:space="preserve">
          <source>MySQLi/Forge #2100</source>
          <target state="translated">MySQLi/Forge #2100</target>
        </trans-unit>
        <trans-unit id="42214f9ecf5d7dd47c16bf350d3843c9fcfe69a4" translate="yes" xml:space="preserve">
          <source>MySQLi/Result #1530</source>
          <target state="translated">MySQLi/結果#1530</target>
        </trans-unit>
        <trans-unit id="ec023d154e388626f611f199f102d6404f48fd1b" translate="yes" xml:space="preserve">
          <source>MySQLi/Utils #1209</source>
          <target state="translated">MySQLi/Utils #1209</target>
        </trans-unit>
        <trans-unit id="08d2e98e6754af941484848930ccbaddfefe13d6" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>
        </trans-unit>
        <trans-unit id="abc2e60850b5763ce5d1c173ae0815f72e928340" translate="yes" xml:space="preserve">
          <source>NGINX</source>
          <target state="translated">NGINX</target>
        </trans-unit>
        <trans-unit id="eef19c54306daa69eda49c0272623bdb5e2b341f" translate="yes" xml:space="preserve">
          <source>NULL</source>
          <target state="translated">NULL</target>
        </trans-unit>
        <trans-unit id="5a5aa17aff68e0b960c5d9bebe3d344b0cc416c1" translate="yes" xml:space="preserve">
          <source>NULL on failure or the array item.</source>
          <target state="translated">失敗した場合は NULL、または配列の項目。</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="185c40e821a43ee79c5bebbf84a2253f21a51093" translate="yes" xml:space="preserve">
          <source>Name Config</source>
          <target state="translated">名前の設定</target>
        </trans-unit>
        <trans-unit id="6e8d44fadcf61ab42000fb3b3fa3bd78ca16f559" translate="yes" xml:space="preserve">
          <source>Name of the file that was uploaded, including the filename extension</source>
          <target state="translated">アップロードされたファイル名(ファイル名の拡張子を含む</target>
        </trans-unit>
        <trans-unit id="f5d052329f355f2ba926e490ff8a0848dea519b8" translate="yes" xml:space="preserve">
          <source>Named Bindings</source>
          <target state="translated">名前付きバインディング</target>
        </trans-unit>
        <trans-unit id="d7c4875b7ebdb224c2a6562cf3347f7d1fded855" translate="yes" xml:space="preserve">
          <source>Namespaced Variables</source>
          <target state="translated">名前空間変数</target>
        </trans-unit>
        <trans-unit id="108bf8e95a3eff7ac63f8893d5c56e4f9132b002" translate="yes" xml:space="preserve">
          <source>Namespaced Views</source>
          <target state="translated">名前空間ビュー</target>
        </trans-unit>
        <trans-unit id="ecb54a5b592ccb694faeade978ee096eaff3b28e" translate="yes" xml:space="preserve">
          <source>Namespaced variables use a dot notation to qualify variable names so they will be unique when incorporated into the environment. This is done by including a distinguishing prefix followed by a dot (.), and then the variable name itself.</source>
          <target state="translated">名前空間変数は、環境に組み込まれたときに変数名が一意になるように、ドット表記を使用して変数名を修飾します。これは、識別用の接頭辞の後にドット(.)を付けて、変数名自体を指定することで行われます。</target>
        </trans-unit>
        <trans-unit id="be09a63bd1995e99cd22064cdc39a4bae464033d" translate="yes" xml:space="preserve">
          <source>Namespaces</source>
          <target state="translated">Namespaces</target>
        </trans-unit>
        <trans-unit id="ca5dcb142f49ca27343a2968087fe7377fe27000" translate="yes" xml:space="preserve">
          <source>Namespaces are not strictly required for test classes, but they are helpful to ensure no class names collide.</source>
          <target state="translated">名前空間はテストクラスに厳密に必要なものではありませんが、クラス名が衝突しないようにするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="8af56df8a9cb35f56b67edd6d269d4e86defc0d0" translate="yes" xml:space="preserve">
          <source>Naming Conventions</source>
          <target state="translated">命名規約</target>
        </trans-unit>
        <trans-unit id="ea3c2a67fdb974320c2d4fa47411bc1dbace11e3" translate="yes" xml:space="preserve">
          <source>Nearly identical to the &lt;a href=&quot;#anchor&quot;&gt;&lt;code&gt;anchor()&lt;/code&gt;&lt;/a&gt; function except that it opens the URL in a new window. You can specify JavaScript window attributes in the third parameter to control how the window is opened. If the third parameter is not set it will simply open a new window with your own browser settings.</source>
          <target state="translated">新しいウィンドウでURLを開くことを除いて、&lt;a href=&quot;#anchor&quot;&gt; &lt;code&gt;anchor()&lt;/code&gt; &lt;/a&gt;関数とほぼ同じです。3番目のパラメーターでJavaScriptウィンドウ属性を指定して、ウィンドウの開き方を制御できます。3番目のパラメータが設定されていない場合は、独自のブラウザ設定で新しいウィンドウを開くだけです。</target>
        </trans-unit>
        <trans-unit id="d91e10f8623afd45a7aff1707400ee18a00cad2c" translate="yes" xml:space="preserve">
          <source>Negotiate #1306</source>
          <target state="translated">ネゴシエート #1306</target>
        </trans-unit>
        <trans-unit id="80ebd9f341c97c3e2f4a6ab95ad183dc797ad406" translate="yes" xml:space="preserve">
          <source>NegotiateTest #1306</source>
          <target state="translated">ネゴシエートテスト #1306</target>
        </trans-unit>
        <trans-unit id="4c83646ba4c79426a664835479d129f505a452fb" translate="yes" xml:space="preserve">
          <source>Negotiating</source>
          <target state="translated">Negotiating</target>
        </trans-unit>
        <trans-unit id="a3bd4b1aa6fa4a4c692753b67da3c03803ceb8a0" translate="yes" xml:space="preserve">
          <source>Nested Arrays</source>
          <target state="translated">入れ子になった配列</target>
        </trans-unit>
        <trans-unit id="e773e8c231f00b8c6b4c1b3bf7ef1a6a5d98e9f1" translate="yes" xml:space="preserve">
          <source>Nested Substitutions</source>
          <target state="translated">入れ子になった置換</target>
        </trans-unit>
        <trans-unit id="a7f546c50a0939b939f9f2b1b67ad7feb9b2ae76" translate="yes" xml:space="preserve">
          <source>Nesting Seeders</source>
          <target state="translated">ネスティングシーダー</target>
        </trans-unit>
        <trans-unit id="86400f6e4dc89e55c3c4d3a947c05cc95f2083c6" translate="yes" xml:space="preserve">
          <source>Nesting Variables</source>
          <target state="translated">ネスティング変数</target>
        </trans-unit>
        <trans-unit id="f0fae8ae3924848a6bfc5e456d04122af81bb889" translate="yes" xml:space="preserve">
          <source>Never combine statements on one line.</source>
          <target state="translated">文章を一行にまとめることは絶対にしないでください。</target>
        </trans-unit>
        <trans-unit id="a1e12395bf3c98cfcc33a4a16b4eb9a4e1fcbb5e" translate="yes" xml:space="preserve">
          <source>Never insert information into your database without escaping it. Please see the section that discusses &lt;a href=&quot;../database/queries&quot;&gt;database queries&lt;/a&gt; for more information.</source>
          <target state="translated">エスケープせずにデータベースに情報を挿入しないでください。詳細については、&lt;a href=&quot;../database/queries&quot;&gt;データベースクエリ&lt;/a&gt;について説明しているセクションをご覧ください。</target>
        </trans-unit>
        <trans-unit id="a26f96b42ddebe18a3a7fe4884b0ff5bd60d21b8" translate="yes" xml:space="preserve">
          <source>New $CSRFHeaderName property in App/Config/App</source>
          <target state="translated">App/Config/App に新しい $CSRFHeaderName プロパティを追加しました。</target>
        </trans-unit>
        <trans-unit id="025519ea3f483eb11a3c8608b8a731eee0947b1b" translate="yes" xml:space="preserve">
          <source>New Features</source>
          <target state="translated">新機能</target>
        </trans-unit>
        <trans-unit id="103cdaeee869db70025b07a1c08990a34493e3f3" translate="yes" xml:space="preserve">
          <source>New View Layouts provide simple way to create site site view templates.</source>
          <target state="translated">新しいビューレイアウトは、サイトのサイトビューテンプレートを簡単に作成する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="d53aa4160fda608d41d4dcb9040ec950dfc3debe" translate="yes" xml:space="preserve">
          <source>New alpha_numeric_punct validation rule</source>
          <target state="translated">新しい alpha_numeric_punct 検証ルール</target>
        </trans-unit>
        <trans-unit id="f45ff502a389642fbb5d820722446d3c4e095af9" translate="yes" xml:space="preserve">
          <source>New messages:</source>
          <target state="translated">新しいメッセージです。</target>
        </trans-unit>
        <trans-unit id="ee6668c1ded394bd888d6fc032987a6173d0eaed" translate="yes" xml:space="preserve">
          <source>New model() helper method for easy singleton Models.</source>
          <target state="translated">簡単にシングルトンモデルを作成するための新しい model()ヘルパーメソッド。</target>
        </trans-unit>
        <trans-unit id="3d5213d3a046f9ad2ac44db63f64d7c7dd6a93f0" translate="yes" xml:space="preserve">
          <source>New packages list:</source>
          <target state="translated">新しいパッケージの一覧です。</target>
        </trans-unit>
        <trans-unit id="8c0978f21ea5894f02aebfacb2f433824dca3f0c" translate="yes" xml:space="preserve">
          <source>New value on success, FALSE on failure</source>
          <target state="translated">成功には新しい価値、失敗にはFALSE</target>
        </trans-unit>
        <trans-unit id="bdccd2dbe04845ab309e1f92b6e905515b2f17ab" translate="yes" xml:space="preserve">
          <source>Newline character. (Use &amp;ldquo;\r\n&amp;rdquo; to comply with RFC 822).</source>
          <target state="translated">改行文字。（「\ r \ n」を使用してRFC 822に準拠します）。</target>
        </trans-unit>
        <trans-unit id="6d3791e8b4637faca38efe4794ac3e212715c1d8" translate="yes" xml:space="preserve">
          <source>Newly encrypted string</source>
          <target state="translated">新しく暗号化された文字列</target>
        </trans-unit>
        <trans-unit id="f2cb5010b2ad28ffbee6b4a5493e9de05c8d65cc" translate="yes" xml:space="preserve">
          <source>News section</source>
          <target state="translated">ニュースセクション</target>
        </trans-unit>
        <trans-unit id="8ad3d5d5f85aef364a909e1fdb6731ec1591b992" translate="yes" xml:space="preserve">
          <source>Next and Previous here is linked to the group of links to be displayed in the pagination structure, and not to the next or previous page of records.</source>
          <target state="translated">ここでのNext and Previousは、ページネーション構造で表示されるリンク群にリンクされており、レコードの次のページや前のページにはリンクされていません。</target>
        </trans-unit>
        <trans-unit id="56d21d2233995efe7c5f1f61069435f5df49bbc6" translate="yes" xml:space="preserve">
          <source>Next row from the result set or NULL if it doesn&amp;rsquo;t exist</source>
          <target state="translated">結果セットの次の行、または存在しない場合はNULL</target>
        </trans-unit>
        <trans-unit id="e4478998415992fedb7ec8949d4aa892923d8770" translate="yes" xml:space="preserve">
          <source>Next row of result set, or NULL if it doesn&amp;rsquo;t exist</source>
          <target state="translated">結果セットの次の行。存在しない場合はNULL</target>
        </trans-unit>
        <trans-unit id="6b63652aceee247ec8cc1865efa7bcd8527d5439" translate="yes" xml:space="preserve">
          <source>Next, read each of the &lt;strong&gt;General Topics&lt;/strong&gt; pages in order. Each topic builds on the previous one, and includes code examples that you are encouraged to try.</source>
          <target state="translated">次に、&lt;strong&gt;一般トピックの&lt;/strong&gt;各ページを順番に読みます。各トピックは前のトピックに基づいており、試してみることをお勧めするコード例が含まれています。</target>
        </trans-unit>
        <trans-unit id="99bee288d49b693788cc16318bcd7a3e421115cc" translate="yes" xml:space="preserve">
          <source>Next, there are two methods to view all news items and one for a specific news item. You can see that the &lt;code&gt;$slug&lt;/code&gt; variable is passed to the model&amp;rsquo;s method in the second method. The model is using this slug to identify the news item to be returned.</source>
          <target state="translated">次に、すべてのニュース項目を表示する方法と、特定のニュース項目を表示する方法の2つがあります。 &lt;code&gt;$slug&lt;/code&gt; 変数が2番目のメソッドでモデルのメソッドに渡されていることがわかります。モデルはこのスラグを使用して、返されるニュース項目を識別しています。</target>
        </trans-unit>
        <trans-unit id="8ea0bf249bdec625be0ae3e0f9a2f9a40a44529b" translate="yes" xml:space="preserve">
          <source>Next, there are two methods, one to view all news items, and one for a specific news item. You can see that the &lt;code&gt;$slug&lt;/code&gt; variable is passed to the model&amp;rsquo;s method in the second method. The model is using this slug to identify the news item to be returned.</source>
          <target state="translated">次に、2つの方法があります。1つはすべてのニュースアイテムを表示する方法、もう1つは特定のニュースアイテムを表示する方法です。2番目のメソッドで &lt;code&gt;$slug&lt;/code&gt; 変数がモデルのメソッドに渡されていることがわかります。モデルはこのスラグを使用して、返されるニュースアイテムを識別しています。</target>
        </trans-unit>
        <trans-unit id="d6647b18d2127ce6be1c7020c64de461f017a76f" translate="yes" xml:space="preserve">
          <source>Next, we assign it to all POST requests made on the site:</source>
          <target state="translated">次に、サイト上で行われたすべてのPOSTリクエストに割り当てます。</target>
        </trans-unit>
        <trans-unit id="2f350b255f71579ea5fb2c8293778969345a9017" translate="yes" xml:space="preserve">
          <source>Next, you need to define the class that is used to format the array of data. This must be a fully qualified class name, and the class must implement &lt;strong&gt;CodeIgniter\Format\FormatterInterface&lt;/strong&gt;. Formatters come out of the box that support both JSON and XML:</source>
          <target state="translated">次に、データの配列をフォーマットするために使用されるクラスを定義する必要があります。これは完全修飾クラス名である必要があり、クラスは&lt;strong&gt;CodeIgniter \ Format \ FormatterInterfaceを&lt;/strong&gt;実装する必要があります。フォーマッターは、JSONとXMLの両方をサポートする箱から出てきます。</target>
        </trans-unit>
        <trans-unit id="1eb37d497aa68625f04e7df5dde63061f98252a0" translate="yes" xml:space="preserve">
          <source>Nginx is the second most widely used HTTP server for web hosting. Here you can find an example configuration using PHP 7.3 FPM (unix sockets) under Ubuntu Server.</source>
          <target state="translated">Nginxは、Webホスティングのための2番目に広く使用されているHTTPサーバーです。ここでは、Ubuntuサーバーの下でPHP 7.3 FPM(Unixソケット)を使用した設定例を見つけることができます。</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="6af9ce63c40b5c45ce6e810e2bcecd22831f67f1" translate="yes" xml:space="preserve">
          <source>No Default</source>
          <target state="translated">デフォルトではありません</target>
        </trans-unit>
        <trans-unit id="26b16faaedc842689bc649f0661d0305008bbf4d" translate="yes" xml:space="preserve">
          <source>No file was uploaded.</source>
          <target state="translated">ファイルがアップロードされていませんでした。</target>
        </trans-unit>
        <trans-unit id="8dfdf2b6ab7098cf44b8e82f293a1772e37a4cd9" translate="yes" xml:space="preserve">
          <source>No special change is needed when working with configuration files. These are still namespaced classes and loaded with the &lt;code&gt;new&lt;/code&gt; command:</source>
          <target state="translated">構成ファイルを操作する場合、特別な変更は必要ありません。これらはまだ名前空間付きのクラスであり、 &lt;code&gt;new&lt;/code&gt; コマンドでロードされます。</target>
        </trans-unit>
        <trans-unit id="8a4c24df7223586752973df5cee8f32bb2a241b0" translate="yes" xml:space="preserve">
          <source>No whitespace can precede the opening PHP tag or follow the closing PHP tag. Output is buffered, so whitespace in your files can cause output to begin before CodeIgniter outputs its content, leading to errors and an inability for CodeIgniter to send proper headers.</source>
          <target state="translated">最初のPHPタグの前に空白を入れたり、最後のPHPタグの後に空白を入れたりすることはできません。出力はバッファリングされているので、ファイル内の空白文字は、CodeIgniter がその内容を出力する前に出力を開始させてしまい、 エラーや CodeIgniter が適切なヘッダを送信できない原因となります。</target>
        </trans-unit>
        <trans-unit id="7b31028629115aecb301b21cc97f7edef2c73b0d" translate="yes" xml:space="preserve">
          <source>Noindex:</source>
          <target state="translated">Noindex:</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="167e1ae7118a5ed963da507c109ba030e3885f80" translate="yes" xml:space="preserve">
          <source>Normal, but significant events in your application.</source>
          <target state="translated">通常ですが、アプリケーション内の重要なイベント。</target>
        </trans-unit>
        <trans-unit id="aa543b7c8cad3921ccc866d337593feec5a943bb" translate="yes" xml:space="preserve">
          <source>Normally from within your controller methods you will call any of the available CodeIgniter methods using the &lt;code&gt;$this&lt;/code&gt; construct:</source>
          <target state="translated">通常、コントローラーメソッド内から、 &lt;code&gt;$this&lt;/code&gt; 構成を使用して、利用可能なCodeIgniterメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="5ef5afec2dbed7f6df2648d98c27d91ffc7f8252" translate="yes" xml:space="preserve">
          <source>Normally the second segment of the URL is reserved for the method name, but in the example above it instead has a product ID. To overcome this, CodeIgniter allows you to remap the URI handler.</source>
          <target state="translated">通常、URLの2番目のセグメントはメソッド名のために予約されていますが、上の例では代わりにプロダクトIDを持っています。これを克服するために、CodeIgniterではURIハンドラをリマップすることができます。</target>
        </trans-unit>
        <trans-unit id="07e2d5ba0a376b2bc8d3d5bb04c8a8b2b74a95c9" translate="yes" xml:space="preserve">
          <source>Normally to echo, or print out a variable you would do this:</source>
          <target state="translated">通常、変数をエコーしたり、出力したりするには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="e60b2af9383b9f7abea5bb84cd19bd6a54113070" translate="yes" xml:space="preserve">
          <source>Normally, to call any of the available methods, CodeIgniter requires you to use the &lt;code&gt;$this&lt;/code&gt; construct:</source>
          <target state="translated">通常、使用可能なメソッドを呼び出すには、CodeIgniterで &lt;code&gt;$this&lt;/code&gt; 構成を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="9c43a177cbd23e8af454b2820cfddbbac0371a49" translate="yes" xml:space="preserve">
          <source>Not All Database Functions Work with Caching</source>
          <target state="translated">すべてのデータベース関数がキャッシングで動作するわけではありません</target>
        </trans-unit>
        <trans-unit id="632b248b8fc8174595e1645d4a5851567f1dcb44" translate="yes" xml:space="preserve">
          <source>Not all database drivers have a native way of getting the total number of rows for a result set. When this is the case, all of the data is prefetched and &lt;code&gt;count()&lt;/code&gt; is manually called on the resulting array in order to achieve the same result.</source>
          <target state="translated">すべてのデータベースドライバーが、結果セットの行の総数を取得するネイティブな方法を備えているわけではありません。この場合、すべてのデータがプリフェッチされ、同じ結果を得るために、結果の配列に対して &lt;code&gt;count()&lt;/code&gt; が手動で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="23e46188c93c10017ea44dbb01a466dbed6d005c" translate="yes" xml:space="preserve">
          <source>Not all database drivers support this feature and will return FALSE. Most notably - you won&amp;rsquo;t be able to use it with PDO.</source>
          <target state="translated">すべてのデータベースドライバがこの機能をサポートしているわけではなく、FALSEを返します。特に、PDOで使用することはできません。</target>
        </trans-unit>
        <trans-unit id="b7571a4b4440813810f17784981c648429c7fba2" translate="yes" xml:space="preserve">
          <source>Not all database platforms support database optimization. It it is mostly for use with MySQL.</source>
          <target state="translated">すべてのデータベースプラットフォームがデータベースの最適化をサポートしているわけではありません。主に MySQL で使用されています。</target>
        </trans-unit>
        <trans-unit id="6387a3aec8e30d50cf84b89b94c7dbbd8ece60ca" translate="yes" xml:space="preserve">
          <source>Not all database platforms support table optimization. It is mostly for use with MySQL.</source>
          <target state="translated">すべてのデータベースプラットフォームがテーブル最適化をサポートしているわけではありません。主に MySQL で使用されています。</target>
        </trans-unit>
        <trans-unit id="de631bc6677a6def6e0986720d32e0aabcccea3b" translate="yes" xml:space="preserve">
          <source>Not all database platforms support table repairs.</source>
          <target state="translated">すべてのデータベースプラットフォームがテーブルの修復をサポートしているわけではありません。</target>
        </trans-unit>
        <trans-unit id="f2034351d3db6f7cc1d871b1e1307b942c921c61" translate="yes" xml:space="preserve">
          <source>Not all databases provide meta-data.</source>
          <target state="translated">すべてのデータベースがメタデータを提供しているわけではありません。</target>
        </trans-unit>
        <trans-unit id="a54f8dea091fcef59d9533c779707c765e9adf5b" translate="yes" xml:space="preserve">
          <source>Not all methods are supported by all database drivers, some of them may fail (and return FALSE) if the underlying driver does not support them.</source>
          <target state="translated">すべてのメソッドがすべてのデータベースドライバでサポートされているわけではありません。</target>
        </trans-unit>
        <trans-unit id="6e12b5a6a4c9cd4ba4dbf18b7251e1350e8f4411" translate="yes" xml:space="preserve">
          <source>Not all of the drivers have been converted/rewritten for CodeIgniter4. The list below shows the outstanding ones.</source>
          <target state="translated">全てのドライバがCodeIgniter4用に変換/書き換えられているわけではありません。以下のリストは未完成のものを示しています。</target>
        </trans-unit>
        <trans-unit id="3e154a37576dad604cc0ef6a270548bb8e61534d" translate="yes" xml:space="preserve">
          <source>Not all of the libraries have the same (or any) parameters in their constructor. Take a look at the library that you&amp;rsquo;re extending first to see how it should be implemented.</source>
          <target state="translated">すべてのライブラリのコンストラクタに同じ（または任意の）パラメータがあるわけではありません。最初に拡張するライブラリを見て、どのように実装するかを確認してください。</target>
        </trans-unit>
        <trans-unit id="4d241cecf7c2bce9e92f68b7e1f75f1fb673d9b3" translate="yes" xml:space="preserve">
          <source>Not all query result functions are available when you use caching. Please read this page carefully.</source>
          <target state="translated">キャッシングを利用した場合、すべてのクエリ結果機能が利用できるわけではありません。このページをよくお読みください。</target>
        </trans-unit>
        <trans-unit id="1a4e17d9ecc8a787bdbf6fbf0dad1ea016ea4da3" translate="yes" xml:space="preserve">
          <source>Not only does this &lt;strong&gt;reduce&lt;/strong&gt; security instead of improving it, but there&amp;rsquo;s literally no reason to do it. No technical limitations and no (practical) storage constraints apply once you&amp;rsquo;ve hashed them, none!</source>
          <target state="translated">これ&lt;strong&gt;により、&lt;/strong&gt;セキュリティが向上&lt;strong&gt;する&lt;/strong&gt;だけでなく、セキュリティが&lt;strong&gt;低下する&lt;/strong&gt;だけでなく、文字通りそれを行う理由もありません。いったんハッシュ化すると、技術的な制限や（実用的な）ストレージの制約は適用されません。</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="513eb4a933349349cfdccc2020ad9fe1daf6a9ff" translate="yes" xml:space="preserve">
          <source>Note some of the location lists have been abridged for clarity and formatting.</source>
          <target state="translated">場所のリストのいくつかは、わかりやすくするために簡略化されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="dae6613754b472e4a0866d273fc7fd4b6683ae9c" translate="yes" xml:space="preserve">
          <source>Note that &amp;ldquo;per_page&amp;rdquo; is the default query string passed, however can be configured using &lt;code&gt;$config['query_string_segment'] = 'your_string'&lt;/code&gt;</source>
          <target state="translated">「per_page」は渡されるデフォルトのクエリ文字列ですが、 &lt;code&gt;$config['query_string_segment'] = 'your_string'&lt;/code&gt; を使用して構成できます。</target>
        </trans-unit>
        <trans-unit id="3d4d77034d368a7c286fa421128ecaaa3d6914df" translate="yes" xml:space="preserve">
          <source>Note that both &amp;lsquo;key&amp;rsquo; and &amp;lsquo;hmac_key&amp;rsquo; are used in this example. When using custom parameters, encryption and HMAC keys are not derived like the default behavior of the library is.</source>
          <target state="translated">この例では「key」と「hmac_key」の両方が使用されていることに注意してください。カスタムパラメータを使用する場合、暗号化とHMACキーは、ライブラリのデフォルトの動作のように導出されません。</target>
        </trans-unit>
        <trans-unit id="01af2d10afb31d13c94f25eec162fb6e0de6520d" translate="yes" xml:space="preserve">
          <source>Note that data will only be retrievable from this function if it has been previously sent to the output class by one of the CodeIgniter functions like &lt;code&gt;$this-&amp;gt;load-&amp;gt;view()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$this-&amp;gt;load-&amp;gt;view()&lt;/code&gt; ようなCodeIgniter関数の1つによって以前に出力クラスに送信された場合にのみ、この関数からデータを取得できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="71090f977457f74fda5afde42e0d3d646c776086" translate="yes" xml:space="preserve">
          <source>Note that most native classes are prefixed with CI_.</source>
          <target state="translated">ほとんどのネイティブクラスのプレフィックスは CI_であることに注意してください。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
