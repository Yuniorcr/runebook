<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="codeigniter">
    <body>
      <group id="codeigniter">
        <trans-unit id="5e33f0ab51bcc28824755a193d02b300b6a28a55" translate="yes" xml:space="preserve">
          <source>The caching system saves your cache files to folders that correspond to the URI of the page you are viewing. For example, if you are viewing a page at example.com/index.php/blog/comments, the caching system will put all cache files associated with it in a folder called blog+comments. To delete those particular cache files you will use:</source>
          <target state="translated">キャッシングシステムは、あなたが見ているページの URI に対応するフォルダにキャッシュファイルを保存します。例えば、example.com/index.php/blog/comments のページを表示している場合、キャッシュシステムはそのページに関連する全てのキャッシュファイルを blog+comments という名前のフォルダに保存します。これらの特定のキャッシュファイルを削除するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="960a49cfd0a98d78deb2e7cc350a7a3f5f891c2d" translate="yes" xml:space="preserve">
          <source>The captcha function requires the GD image library.</source>
          <target state="translated">キャプチャ機能にはGDイメージライブラリが必要です。</target>
        </trans-unit>
        <trans-unit id="8673cea1866e84570272afee8b21cdad4d6021b5" translate="yes" xml:space="preserve">
          <source>The character collation used in communicating with the database</source>
          <target state="translated">データベースとの通信に使用される文字照合</target>
        </trans-unit>
        <trans-unit id="4b939624f331be0465646e1fc057773a658f11a6" translate="yes" xml:space="preserve">
          <source>The character set used in communicating with the database.</source>
          <target state="translated">データベースとの通信に使用される文字セット。</target>
        </trans-unit>
        <trans-unit id="b3201957d5f3f7e091bf0e333f76e5bfb26e8b59" translate="yes" xml:space="preserve">
          <source>The child classes, the drivers themselves, can then be called directly through the parent class, without initializing them:</source>
          <target state="translated">子クラスであるドライバ自身を初期化することなく、親クラスを経由して直接呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="3409ec41e31957957ce04693e790865a1d9a58da" translate="yes" xml:space="preserve">
          <source>The class declaration must extend the parent class.</source>
          <target state="translated">クラス宣言は親クラスを拡張する必要があります。</target>
        </trans-unit>
        <trans-unit id="09559a635805021c812d9944df3012e07664f5d3" translate="yes" xml:space="preserve">
          <source>The class is automatically initialized when the file is loaded the first time.</source>
          <target state="translated">ファイルの初回読み込み時にクラスが自動的に初期化されます。</target>
        </trans-unit>
        <trans-unit id="4a1caf94f5893bd40b68ea18b3cbdb82ed658ac5" translate="yes" xml:space="preserve">
          <source>The classmap is used extensively by CodeIgniter to eke the last ounces of performance out of the system by not hitting the file-system with extra &lt;code&gt;is_file()&lt;/code&gt; calls. You can use the classmap to link to third-party libraries that are not namespaced:</source>
          <target state="translated">クラスマップはCodeIgniterによって広く使用されており、余分な &lt;code&gt;is_file()&lt;/code&gt; 呼び出しでファイルシステムにアクセスしないことで、システムから最後のオンスのパフォーマンスを引き出します。クラスマップを使用して、名前が付けられていないサードパーティライブラリにリンクできます。</target>
        </trans-unit>
        <trans-unit id="5d0b3e31eed060dc4cc87f77e0151822d03afe46" translate="yes" xml:space="preserve">
          <source>The clear method resets all of the values used when processing an image. You will want to call this if you are processing images in a loop.</source>
          <target state="translated">clear メソッドは、画像を処理する際に使用したすべての値をリセットします。画像をループで処理している場合は、このメソッドを呼び出すとよいでしょう。</target>
        </trans-unit>
        <trans-unit id="17abd13a4b815ad6d739b409548fee639b29d5fe" translate="yes" xml:space="preserve">
          <source>The client you created sends a message (&amp;ldquo;How&amp;rsquo;s is going?&amp;rdquo;) to the server, along with a request for the &amp;ldquo;Greetings&amp;rdquo; method. The Server receives the request and maps it to the &lt;code&gt;process()&lt;/code&gt; method, where a response is sent back.</source>
          <target state="translated">作成したクライアントは、「あいさつ」メソッドのリクエストとともに、メッセージ（「どうですか？」）をサーバーに送信します。サーバーは要求を受信し、それを &lt;code&gt;process()&lt;/code&gt; メソッドにマップします。そこで、応答が送り返されます。</target>
        </trans-unit>
        <trans-unit id="8b61c3297e7d3a57127bf4ec87f6e532e944af30" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;current&amp;rdquo; link.</source>
          <target state="translated">「現在の」リンクの終了タグ。</target>
        </trans-unit>
        <trans-unit id="f1f942387778fb8713128548eef429a251bbe2a6" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;digit&amp;rdquo; link.</source>
          <target state="translated">「数字」リンクの終了タグ。</target>
        </trans-unit>
        <trans-unit id="8ab3eba975c76e0b3ae71e9342348ac4cacb6a3b" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;first&amp;rdquo; link.</source>
          <target state="translated">「最初の」リンクの終了タグ。</target>
        </trans-unit>
        <trans-unit id="f6a32236b7e0e7757d1963ed747dd5046a85f5ca" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;last&amp;rdquo; link.</source>
          <target state="translated">「最後の」リンクの終了タグ。</target>
        </trans-unit>
        <trans-unit id="a2b99eb02ddea9fd6f254c9bfd4cfc27dd832b88" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;next&amp;rdquo; link.</source>
          <target state="translated">「次の」リンクの終了タグ。</target>
        </trans-unit>
        <trans-unit id="1e4b9ec53d1fb1b8933c49a53b7f0ad3fff750e9" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;previous&amp;rdquo; link.</source>
          <target state="translated">「前の」リンクの終了タグ。</target>
        </trans-unit>
        <trans-unit id="35550101b6036e7993fae08111e0138e054317ce" translate="yes" xml:space="preserve">
          <source>The closing tag placed on the right side of the entire result.</source>
          <target state="translated">結果全体の右側に配置されたクロージングタグ。</target>
        </trans-unit>
        <trans-unit id="cf1f9e551c296d99e36a9337a66b134aba30a9d9" translate="yes" xml:space="preserve">
          <source>The code above adds a lot of functionality. First we load the NewsModel. After that, we check if we deal with the &lt;code&gt;POST&lt;/code&gt; request and then the Controller-provided helper function is used to validate the $_POST fields. In this case, the title and text fields are required.</source>
          <target state="translated">上記のコードは多くの機能を追加します。まず、NewsModelをロードします。その後、 &lt;code&gt;POST&lt;/code&gt; リクエストを処理するかどうかを確認し、コントローラーが提供するヘルパー関数を使用して$ _POSTフィールドを検証します。この場合、タイトルフィールドとテキストフィールドは必須です。</target>
        </trans-unit>
        <trans-unit id="9773e3d00125dc183f57dc0e983d9b3509ba18d9" translate="yes" xml:space="preserve">
          <source>The code above adds a lot of functionality. The first few lines load the form helper and the form validation library. After that, rules for the form validation are set. The &lt;code&gt;set_rules()&lt;/code&gt; method takes three arguments; the name of the input field, the name to be used in error messages, and the rule. In this case the title and text fields are required.</source>
          <target state="translated">上記のコードは多くの機能を追加します。最初の数行は、フォームヘルパーとフォーム検証ライブラリをロードします。その後、フォーム検証のルールが設定されます。 &lt;code&gt;set_rules()&lt;/code&gt; メソッドは、3つの引数を取ります。入力フィールドの名前、エラーメッセージで使用される名前、およびルール。この場合、タイトルとテキストフィールドは必須です。</target>
        </trans-unit>
        <trans-unit id="ab4208d2a44a3d69112c9a91ae92574495bea2e5" translate="yes" xml:space="preserve">
          <source>The code above gets all news records from the model and assigns it to a variable. The value for the title is also assigned to the &lt;code&gt;$data['title']&lt;/code&gt; element and all data is passed to the views. You now need to create a view to render the news items. Create &lt;em&gt;application/views/news/index.php&lt;/em&gt; and add the next piece of code.</source>
          <target state="translated">上記のコードは、モデルからすべてのニュースレコードを取得し、それを変数に割り当てます。タイトルの値も &lt;code&gt;$data['title']&lt;/code&gt; 要素に割り当てられ、すべてのデータがビューに渡されます。次に、ニュース項目をレンダリングするためのビューを作成する必要があります。作成し&lt;em&gt;たアプリケーション/ビュー/ニュース/ index.phpをする&lt;/em&gt;と、コードの次の部分を追加します。</target>
        </trans-unit>
        <trans-unit id="0b38553e184a3e5b8dd4d5afc5335e8a0ebc6130" translate="yes" xml:space="preserve">
          <source>The code above gets all news records from the model and assigns it to a variable. The value for the title is also assigned to the &lt;code&gt;$data['title']&lt;/code&gt; element and all data is passed to the views. You now need to create a view to render the news items. Create &lt;strong&gt;app/Views/news/overview.php&lt;/strong&gt; and add the next piece of code.</source>
          <target state="translated">上記のコードは、モデルからすべてのニュースレコードを取得し、それを変数に割り当てます。タイトルの値も &lt;code&gt;$data['title']&lt;/code&gt; 要素に割り当てられ、すべてのデータがビューに渡されます。次に、ニュースアイテムをレンダリングするためのビューを作成する必要があります。作成&lt;strong&gt;アプリ/ビュー/ニュース/ overview.php&lt;/strong&gt;とコードの次の部分を追加します。</target>
        </trans-unit>
        <trans-unit id="80fc0c266145440819f5051f9ddded2b3c7a891f" translate="yes" xml:space="preserve">
          <source>The codebase comes with a &lt;code&gt;VagrantFile.dist&lt;/code&gt;, that can be copied to &lt;code&gt;VagrantFile&lt;/code&gt; and tailored for your system, for instance enabling access to specific database or caching engines.</source>
          <target state="translated">コードベースが付属しています &lt;code&gt;VagrantFile.dist&lt;/code&gt; にコピーすることができ、 &lt;code&gt;VagrantFile&lt;/code&gt; とインスタンスは、特定のデータベースへのアクセスを可能にするか、エンジンをキャッシュするため、お使いのシステムに合わせました。</target>
        </trans-unit>
        <trans-unit id="c8e67fc6a18bb54fc6c196ca33a742c7c14afa1e" translate="yes" xml:space="preserve">
          <source>The codeigniter.com website, written in CodeIgniter 4</source>
          <target state="translated">CodeIgniter 4 で書かれた codeigniter.com のウェブサイト</target>
        </trans-unit>
        <trans-unit id="edd40e159ce69b46c0207b3c490845349c4613be" translate="yes" xml:space="preserve">
          <source>The color of the drop shadow, specified in hex. If you leave this blank a drop shadow will not be used. Both the full 6-length (ie, 993300) and the short three character abbreviated version (ie, fff) are supported.</source>
          <target state="translated">ドロップシャドウの色を16進数で指定します。これを空白にすると、 ドロップシャドウは使用されません。完全な 6 文字長 (すなわち 993300)と短い 3 文字の短縮版 (すなわち fff)の両方がサポートされています。</target>
        </trans-unit>
        <trans-unit id="0ce648786349d2663a22c00ebf48fb226eae9794" translate="yes" xml:space="preserve">
          <source>The command above will create a &amp;ldquo;project-root&amp;rdquo; folder.</source>
          <target state="translated">上記のコマンドは、「project-root」フォルダーを作成します。</target>
        </trans-unit>
        <trans-unit id="9a81596327853c44ac13732b111bff755c7881a9" translate="yes" xml:space="preserve">
          <source>The command above will update &lt;strong&gt;composer.json&lt;/strong&gt; to point to the &lt;code&gt;develop&lt;/code&gt; branch of the working repository, and update the corresponding paths in config and XML files. To revert these changes run:</source>
          <target state="translated">上記のコマンドは、&lt;strong&gt;composer.json&lt;/strong&gt;を更新して、作業リポジトリの &lt;code&gt;develop&lt;/code&gt; ブランチをポイントし、configファイルとXMLファイルの対応するパスを更新します。これらの変更を元に戻すには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="b17ad18b546472cb1cc96e9bf3adf77fdd3f1349" translate="yes" xml:space="preserve">
          <source>The command-line interface is a text-based method of interacting with computers. For more information, check the &lt;a href=&quot;http://en.wikipedia.org/wiki/Command-line_interface&quot;&gt;Wikipedia article&lt;/a&gt;.</source>
          <target state="translated">コマンドラインインターフェイスは、コンピューターと対話するためのテキストベースの方法です。詳細については、&lt;a href=&quot;http://en.wikipedia.org/wiki/Command-line_interface&quot;&gt;ウィキペディアの記事を&lt;/a&gt;確認してください。</target>
        </trans-unit>
        <trans-unit id="d5cf3d3be3cb73be1ee46f7ef0edcfe673374ebf" translate="yes" xml:space="preserve">
          <source>The command-line interface is a text-based method of interacting with computers. For more information, check the &lt;a href=&quot;https://en.wikipedia.org/wiki/Command-line_interface&quot;&gt;Wikipedia article&lt;/a&gt;.</source>
          <target state="translated">コマンドラインインターフェイスは、コンピューターと対話するためのテキストベースの方法です。詳細については、&lt;a href=&quot;https://en.wikipedia.org/wiki/Command-line_interface&quot;&gt;ウィキペディアの記事を&lt;/a&gt;確認してください。</target>
        </trans-unit>
        <trans-unit id="79991bf78e5d5f9e7e0a2e837edcba60a9337182" translate="yes" xml:space="preserve">
          <source>The compiled SQL statement as a string</source>
          <target state="translated">コンパイルされたSQL文を文字列として</target>
        </trans-unit>
        <trans-unit id="ed286abf70bf0b2bc642ad077d5c2d9a0da9a02c" translate="yes" xml:space="preserve">
          <source>The compression level to use.</source>
          <target state="translated">使用する圧縮レベル。</target>
        </trans-unit>
        <trans-unit id="651812a6bb14d505c9bea48ceb377785a2296900" translate="yes" xml:space="preserve">
          <source>The config settings are stored in a class property that is an array with this prototype:</source>
          <target state="translated">コンフィグの設定は、このプロトタイプを配列にしたクラスプロパティに格納されます。</target>
        </trans-unit>
        <trans-unit id="600431317ad6ed738aeca73f87a8cecc49da57e4" translate="yes" xml:space="preserve">
          <source>The config settings are stored in a multi-dimensional array with this prototype:</source>
          <target state="translated">このプロトタイプでは、コンフィグの設定は多次元配列に格納されています。</target>
        </trans-unit>
        <trans-unit id="b80bf2a0a37fc437e7714a9c9b0228b052c39931" translate="yes" xml:space="preserve">
          <source>The configuration item or NULL if the item doesn&amp;rsquo;t exist</source>
          <target state="translated">構成アイテムまたはアイテムが存在しない場合はNULL</target>
        </trans-unit>
        <trans-unit id="eebdf14f8cc04dbd23510c794fb2ed4ab74ecf97" translate="yes" xml:space="preserve">
          <source>The controller (Form.php) has one method: &lt;code&gt;index()&lt;/code&gt;. This method initializes the validation class and loads the form helper and URL helper used by your view files. It also runs the validation routine. Based on whether the validation was successful it either presents the form or the success page.</source>
          <target state="translated">コントローラー（Form.php）には、 &lt;code&gt;index()&lt;/code&gt; という 1つのメソッドがあります。このメソッドは、検証クラスを初期化し、ビューファイルで使用されるフォームヘルパーとURLヘルパーを読み込みます。また、検証ルーチンを実行します。検証が成功したかどうかに基づいて、フォームまたは成功ページのいずれかが表示されます。</target>
        </trans-unit>
        <trans-unit id="83c6d3b9890836689bddd1d9a9cf6cc3bd40a425" translate="yes" xml:space="preserve">
          <source>The controller (Form.php) has one method: &lt;code&gt;index()&lt;/code&gt;. This method uses the Controller-provided validate method and loads the form helper and URL helper used by your view files. It also runs the validation routine. Based on whether the validation was successful it either presents the form or the success page.</source>
          <target state="translated">コントローラ（Form.php）には、 &lt;code&gt;index()&lt;/code&gt; という1つのメソッドがあります。このメソッドは、コントローラーが提供する検証メソッドを使用し、ビューファイルで使用されるフォームヘルパーとURLヘルパーをロードします。また、検証ルーチンを実行します。検証が成功したかどうかに基づいて、フォームまたは成功ページが表示されます。</target>
        </trans-unit>
        <trans-unit id="b06c858c317f67505f718682390ec747ed3547f1" translate="yes" xml:space="preserve">
          <source>The controller is now functioning!</source>
          <target state="translated">コントローラーが機能するようになりました</target>
        </trans-unit>
        <trans-unit id="e3f5f4108c9a663269f429d7afc4ce033c90b078" translate="yes" xml:space="preserve">
          <source>The controller is now functioning! Point your browser to &lt;code&gt;[your-site-url]index.php/pages/view&lt;/code&gt; to see your page. When you visit &lt;code&gt;index.php/pages/view/about&lt;/code&gt; you&amp;rsquo;ll see the about page, again including the header and footer.</source>
          <target state="translated">これでコントローラーが機能しました。ブラウザで &lt;code&gt;[your-site-url]index.php/pages/view&lt;/code&gt; にアクセスして、ページを表示します。 &lt;code&gt;index.php/pages/view/about&lt;/code&gt; にアクセスすると、ヘッダーとフッターを含む概要ページが表示されます。</target>
        </trans-unit>
        <trans-unit id="8e1e124cf7a10c48d3cd6c4cc7958cd8ad07ecd7" translate="yes" xml:space="preserve">
          <source>The cookie value or NULL if not found</source>
          <target state="translated">クッキーの値、または見つからない場合はNULL</target>
        </trans-unit>
        <trans-unit id="dd2b915256fbfd0b7a1f9cd4e68bc6d1c89a5628" translate="yes" xml:space="preserve">
          <source>The core element of the modules functionality comes from the &lt;a href=&quot;../concepts/autoloader&quot;&gt;PSR4-compatible autoloading&lt;/a&gt; that CodeIgniter uses. While any code can use the PSR4 autoloader and namespaces, the primary way to take full advantage of modules is to namespace your code and add it to &lt;strong&gt;app/Config/Autoload.php&lt;/strong&gt;, in the &lt;code&gt;psr4&lt;/code&gt; section.</source>
          <target state="translated">モジュール機能のコア要素は、CodeIgniterが使用する&lt;a href=&quot;../concepts/autoloader&quot;&gt;PSR4互換の自動読み込みに&lt;/a&gt;由来します。どのコードでもPSR4オートローダーと名前空間を使用できますが、モジュールを最大限に活用する主な方法は、コードに名前空間を付けて、 &lt;code&gt;psr4&lt;/code&gt; セクションの&lt;strong&gt;app / Config &lt;/strong&gt;/Autoload.phpに追加すること&lt;strong&gt;です&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="d855c0682a87b7e7a31d0c4c76511dfdcef1e34d" translate="yes" xml:space="preserve">
          <source>The cropping method works nearly identically to the resizing function except it requires that you set preferences for the X and Y axis (in pixels) specifying where to crop, like this:</source>
          <target state="translated">トリミング方法はリサイズ機能とほぼ同じように動作しますが、X 軸と Y 軸 (ピクセル単位)の設定を行う必要があることを除いては、次のようにトリミングする場所を指定します。</target>
        </trans-unit>
        <trans-unit id="b379a7e73590ead6818a4e9c69bdcf12daf56069" translate="yes" xml:space="preserve">
          <source>The current HTTP protocol version</source>
          <target state="translated">現在の HTTP プロトコルのバージョン</target>
        </trans-unit>
        <trans-unit id="012f68e00c7ddc776d9534b59305bc8808dc1d30" translate="yes" xml:space="preserve">
          <source>The current HTTP status code for this response</source>
          <target state="translated">このレスポンスの現在の HTTP ステータスコード</target>
        </trans-unit>
        <trans-unit id="16c557b47029b1099d7d9512219d09eb51e33387" translate="yes" xml:space="preserve">
          <source>The current Message|Response instance</source>
          <target state="translated">現在の Message|Response インスタンス</target>
        </trans-unit>
        <trans-unit id="2bc54195d0a3d3a09d9d577d305964e5db4d5548" translate="yes" xml:space="preserve">
          <source>The current MigrationRunner instance</source>
          <target state="translated">現在の MigrationRunner インスタンス</target>
        </trans-unit>
        <trans-unit id="b99b67b7b410e6e908aa30e4b696e12ce94f7e78" translate="yes" xml:space="preserve">
          <source>The current Response instance</source>
          <target state="translated">現在のレスポンスのインスタンス</target>
        </trans-unit>
        <trans-unit id="c4d8ccea12238d3123db824d8aedaf6a570875de" translate="yes" xml:space="preserve">
          <source>The current URL</source>
          <target state="translated">現在のURL</target>
        </trans-unit>
        <trans-unit id="0ca51166025cdb1d814333c111d233ffbafcacf3" translate="yes" xml:space="preserve">
          <source>The current locale can always be retrieved from the IncomingRequest object, through the &lt;code&gt;getLocale()&lt;/code&gt; method. If your controller is extending &lt;code&gt;CodeIgniter\Controller&lt;/code&gt;, this will be available through &lt;code&gt;$this-&amp;gt;request&lt;/code&gt;:</source>
          <target state="translated">現在のロケールは、 &lt;code&gt;getLocale()&lt;/code&gt; メソッドを介してIncomingRequestオブジェクトからいつでも取得できます。コントローラーが &lt;code&gt;CodeIgniter\Controller&lt;/code&gt; 拡張している場合、これは &lt;code&gt;$this-&amp;gt;request&lt;/code&gt; から利用できます。</target>
        </trans-unit>
        <trans-unit id="6d23fb2ffe6ccb4331c9329c3a33433a5c7c183a" translate="yes" xml:space="preserve">
          <source>The current message body</source>
          <target state="translated">現在のメッセージ本文</target>
        </trans-unit>
        <trans-unit id="5e7ed544f83e9cfe4e9d9859b70db205789e2de4" translate="yes" xml:space="preserve">
          <source>The current message instance</source>
          <target state="translated">現在のメッセージインスタンス</target>
        </trans-unit>
        <trans-unit id="1bb56cc9eb648bed439f7c8f858142418bbd991c" translate="yes" xml:space="preserve">
          <source>The current reason phrase.</source>
          <target state="translated">現在の理由のフレーズ。</target>
        </trans-unit>
        <trans-unit id="bff1305c1ddef4edac6d774e0f2e90fbcdc8ce5b" translate="yes" xml:space="preserve">
          <source>The current response instance.</source>
          <target state="translated">現在の応答インスタンス。</target>
        </trans-unit>
        <trans-unit id="cb93049b3ccea9bba6c44a52054c4c9db2e512e3" translate="yes" xml:space="preserve">
          <source>The current value of the CSRF hash.</source>
          <target state="translated">CSRFハッシュの現在の値。</target>
        </trans-unit>
        <trans-unit id="cb6c7c19deb5a5ed0efdf786ad0b600d8eddf0d9" translate="yes" xml:space="preserve">
          <source>The current version your database should use.</source>
          <target state="translated">データベースが使用するべき現在のバージョン。</target>
        </trans-unit>
        <trans-unit id="5ff67a125bb9a51115be576423804ee646779f96" translate="yes" xml:space="preserve">
          <source>The data array you pass to your view files is not limited to simple variables. You can pass multi dimensional arrays, which can be looped to generate multiple rows. For example, if you pull data from your database it will typically be in the form of a multi-dimensional array.</source>
          <target state="translated">ビューファイルに渡すデータ配列は単純な変数に限定されません。多次元配列を渡すことができ、これをループさせて複数の行を生成することができます。例えば、データベースからデータを取得する場合、通常は多次元配列の形になります。</target>
        </trans-unit>
        <trans-unit id="4834140daa5a1b6c5bb399f1309af281d2a1382c" translate="yes" xml:space="preserve">
          <source>The data passed in is only available during one call to &lt;code&gt;view&lt;/code&gt;. If you call the function multiple times in a single request, you will have to pass the desired data to each view. This keeps any data from &amp;ldquo;bleeding&amp;rdquo; into other views, potentially causing issues. If you would prefer the data to persist, you can pass the &lt;code&gt;saveData&lt;/code&gt; option into the &lt;code&gt;$option&lt;/code&gt; array in the third parameter.</source>
          <target state="translated">渡されたデータは、 &lt;code&gt;view&lt;/code&gt; への1回の呼び出し中にのみ使用できます。1回のリクエストで関数を複数回呼び出す場合は、必要なデータを各ビューに渡す必要があります。これにより、データが他のビューに「ブリード」して、問題が発生する可能性がなくなります。データを永続化する場合は、 &lt;code&gt;saveData&lt;/code&gt; オプションを3番目のパラメーターの &lt;code&gt;$option&lt;/code&gt; 配列に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="ef5537f55aa4d285ee7ca0721073a75bf281b155" translate="yes" xml:space="preserve">
          <source>The database connection and the database Forge class are both available to you through &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; and &lt;code&gt;$this-&amp;gt;forge&lt;/code&gt;, respectively.</source>
          <target state="translated">データベース接続とデータベースForgeクラスは、それぞれ &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; と &lt;code&gt;$this-&amp;gt;forge&lt;/code&gt; を介して利用できます。</target>
        </trans-unit>
        <trans-unit id="a3f6051fd9cfe1f0bd63ddab7ef6161f98e89874" translate="yes" xml:space="preserve">
          <source>The database connection values, passed either as an array or a DSN string.</source>
          <target state="translated">配列またはDSN文字列として渡されるデータベース接続値。</target>
        </trans-unit>
        <trans-unit id="26381073095e1c8797de644632063fe772dfbed6" translate="yes" xml:space="preserve">
          <source>The database group name, a string that must match the config class&amp;rsquo; property name. Default value is $config-&amp;gt;defaultGroup.</source>
          <target state="translated">データベースグループ名。構成クラスのプロパティ名と一致する必要がある文字列。デフォルト値は$ config-&amp;gt; defaultGroupです。</target>
        </trans-unit>
        <trans-unit id="7e4fedc6efabba5047fc8547169959db18a62967" translate="yes" xml:space="preserve">
          <source>The database port number. To use this value you have to add a line to the database config array.</source>
          <target state="translated">データベースのポート番号。この値を使用するには、データベース設定配列に行を追加しなければなりません。</target>
        </trans-unit>
        <trans-unit id="066e83cf0a791a7ba0b0c53bdf6c609199909c6f" translate="yes" xml:space="preserve">
          <source>The database schema, defaults to &amp;lsquo;public&amp;rsquo;. Used by PostgreSQL and ODBC drivers.</source>
          <target state="translated">データベーススキーマ。デフォルトは 'public'です。PostgreSQLおよびODBCドライバーで使用されます。</target>
        </trans-unit>
        <trans-unit id="93af6a1c92aae8aeae6639ff6b34a69e8791cfcd" translate="yes" xml:space="preserve">
          <source>The database table &lt;strong&gt;migration&lt;/strong&gt; tracks which migrations have already been run so all you have to do is make sure your migrations are in place and call &lt;code&gt;$migration-&amp;gt;latest()&lt;/code&gt; to bring the database up to the most recent state. You can also use &lt;code&gt;$migration-&amp;gt;setNamespace(null)-&amp;gt;latest()&lt;/code&gt; to include migrations from all namespaces.</source>
          <target state="translated">データベーステーブルの&lt;strong&gt;移行で&lt;/strong&gt;は、すでに実行されている&lt;strong&gt;移行を&lt;/strong&gt;追跡するため、移行が適切に行われていることを確認し、 &lt;code&gt;$migration-&amp;gt;latest()&lt;/code&gt; を呼び出してデータベースを最新の状態にするだけです。 &lt;code&gt;$migration-&amp;gt;setNamespace(null)-&amp;gt;latest()&lt;/code&gt; を使用して、すべての名前空間からの移行を含めることもできます。</target>
        </trans-unit>
        <trans-unit id="e5bd0468e6fe37a5e5ed129dd5d153fde80c5e58" translate="yes" xml:space="preserve">
          <source>The database table &lt;strong&gt;migration&lt;/strong&gt; tracks which migrations have already been run so all you have to do is update your application files and call &lt;code&gt;$this-&amp;gt;migration-&amp;gt;current()&lt;/code&gt; to work out which migrations should be run. The current version is found in &lt;strong&gt;application/config/migration.php&lt;/strong&gt;.</source>
          <target state="translated">データベーステーブルの&lt;strong&gt;移行&lt;/strong&gt;は、既に実行されている&lt;strong&gt;移行を&lt;/strong&gt;追跡するので、アプリケーションファイルを更新し、 &lt;code&gt;$this-&amp;gt;migration-&amp;gt;current()&lt;/code&gt; を呼び出して、どの移行を実行する必要があるかを調べます。現在のバージョンは&lt;strong&gt;application / config / migration.phpにあり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="26c7034beae68dacbb8bcb55f6f826e6ff5c7192" translate="yes" xml:space="preserve">
          <source>The database type. eg: MySQLi, Postgre, etc. The case must match the driver name</source>
          <target state="translated">データベースの種類。MySQLi、Postgreなど。ケースはドライバ名と一致している必要があります</target>
        </trans-unit>
        <trans-unit id="c1980c8c79360697449e3bb8317ac1df04e65d44" translate="yes" xml:space="preserve">
          <source>The database type. ie: mysqli, postgre, odbc, etc. Must be specified in lower case.</source>
          <target state="translated">データベースの種類。小文字で指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="23edf906515a426c2bc46367ad05dc9072904b45" translate="yes" xml:space="preserve">
          <source>The default configuration has daily log files stored in &lt;code&gt;writable/logs&lt;/code&gt;. It would be a good idea to check them if things aren&amp;rsquo;t working the way you expect!</source>
          <target state="translated">デフォルト設定では、日次ログファイルが &lt;code&gt;writable/logs&lt;/code&gt; に保存されています。物事が期待どおりに機能していないかどうかを確認することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="70302738cbadb8e137a802ae74bfc153e9272c6f" translate="yes" xml:space="preserve">
          <source>The default controller is also used when no matching route has been found, and the URI would point to a directory in the controllers directory. For example, if the user visits &lt;code&gt;example.com/admin&lt;/code&gt;, if a controller was found at &lt;code&gt;/app/Controllers/admin/Home.php&lt;/code&gt; it would be used.</source>
          <target state="translated">デフォルトのコントローラーは、一致するルートが見つからない場合にも使用され、URIはコントローラーディレクトリ内のディレクトリを指します。たとえば、ユーザーが &lt;code&gt;example.com/admin&lt;/code&gt; に &lt;code&gt;/app/Controllers/admin/Home.php&lt;/code&gt; した場合、コントローラーが/app/Controllers/admin/Home.phpで見つかった場合は、それが使用されます。</target>
        </trans-unit>
        <trans-unit id="0168e95b60fc419689bd44100d2efba7648a5086" translate="yes" xml:space="preserve">
          <source>The default location of the SQLite3 database is in the &lt;code&gt;writable&lt;/code&gt; folder. If you want to change the location, you must set the full path to the new folder.</source>
          <target state="translated">SQLite3データベースのデフォルトの場所は、 &lt;code&gt;writable&lt;/code&gt; フォルダーです。場所を変更する場合は、新しいフォルダへのフルパスを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="11eada1d04512e757ac55ad2b2339d7e7aaa5e99" translate="yes" xml:space="preserve">
          <source>The default mode is &amp;lsquo;wb&amp;rsquo;. Please see the &lt;a href=&quot;http://php.net/manual/en/function.fopen.php&quot;&gt;PHP user guide&lt;/a&gt; for mode options.</source>
          <target state="translated">デフォルトのモードは「wb」です。モードオプションについては、&lt;a href=&quot;http://php.net/manual/en/function.fopen.php&quot;&gt;PHPユーザーガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a16f5593155b9dcbb90d9dd7784ec22c67190628" translate="yes" xml:space="preserve">
          <source>The default mode is &amp;lsquo;wb&amp;rsquo;. Please see the &lt;a href=&quot;https://www.php.net/manual/en/function.fopen.php&quot;&gt;PHP user guide&lt;/a&gt; for mode options.</source>
          <target state="translated">デフォルトのモードは「wb」です。モードオプションについては、&lt;a href=&quot;https://www.php.net/manual/en/function.fopen.php&quot;&gt;PHPユーザーガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a992ef10706da873eed57ed0e94fb8da71b4a7ec" translate="yes" xml:space="preserve">
          <source>The desired character set is passed through the &lt;code&gt;Accept-Charset&lt;/code&gt; header:</source>
          <target state="translated">目的の文字セットは、 &lt;code&gt;Accept-Charset&lt;/code&gt; ヘッダーを介して渡されます。</target>
        </trans-unit>
        <trans-unit id="1285635d292acb8ce2ce187f735646c11886c744" translate="yes" xml:space="preserve">
          <source>The desired style may be selected using the &lt;code&gt;$config['migration_type']&lt;/code&gt; setting in your &lt;em&gt;application/config/migration.php&lt;/em&gt; file.</source>
          <target state="translated">希望するスタイルは、&lt;em&gt;application / config / migration.php&lt;/em&gt;ファイルの &lt;code&gt;$config['migration_type']&lt;/code&gt; 設定を使用して選択できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="37bee7ad2660fc3d49046e5b35ea5d6d9daa8d22" translate="yes" xml:space="preserve">
          <source>The devstarter repo has been deprecated.</source>
          <target state="translated">devstarterレポは非推奨となりました。</target>
        </trans-unit>
        <trans-unit id="361758b2d1130045bc35e68480fb28f51ae6a478" translate="yes" xml:space="preserve">
          <source>The distance (in pixels) from the font that the drop shadow should appear.</source>
          <target state="translated">ドロップシャドウが表示されるフォントからの距離 (ピクセル単位)。</target>
        </trans-unit>
        <trans-unit id="69734bfc130a401ca95e9355bd3928b62ceb7900" translate="yes" xml:space="preserve">
          <source>The domain for which the session is applicable</source>
          <target state="translated">セッションが適用されるドメイン</target>
        </trans-unit>
        <trans-unit id="fbc8373c88683a4b45cc6a8732f0919d2ccb7cbf" translate="yes" xml:space="preserve">
          <source>The downside is that it is not as ubiquitous as relational databases and requires the &lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;phpredis&lt;/a&gt; PHP extension to be installed on your system, and that one doesn&amp;rsquo;t come bundled with PHP. Chances are, you&amp;rsquo;re only be using the &amp;lsquo;redis&amp;rsquo; driver only if you&amp;rsquo;re already both familiar with Redis and using it for other purposes.</source>
          <target state="translated">欠点は、リレーショナルデータベースほどユビキタスではなく、&lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;phpredis&lt;/a&gt; PHP拡張機能をシステムにインストールする必要があること、およびPHPにバンドルされていないことです。おそらく、Redisに既に慣れていて、他の目的でそれを使用している場合にのみ、 'redis'ドライバーを使用しています。</target>
        </trans-unit>
        <trans-unit id="147539b37427246ab4d6c3ddc48c3430247b7935" translate="yes" xml:space="preserve">
          <source>The downside is that it is not as ubiquitous as relational databases and requires the &lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;phpredis&lt;/a&gt; PHP extension to be installed on your system, and that one doesn&amp;rsquo;t come bundled with PHP. Chances are, you&amp;rsquo;re only be using the RedisHandler driver only if you&amp;rsquo;re already both familiar with Redis and using it for other purposes.</source>
          <target state="translated">欠点は、リレーショナルデータベースほどユビキタスではなく、システムに&lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;phpredis&lt;/a&gt; PHP拡張機能をインストールする必要があることと、PHPにバンドルされていないことです。おそらく、RedisHandlerドライバーを使用しているのは、Redisに精通していて、他の目的で使用している場合のみです。</target>
        </trans-unit>
        <trans-unit id="42058a915f8321c9dbde6beed01039926dc94bd0" translate="yes" xml:space="preserve">
          <source>The e-mail sending method. Returns boolean TRUE or FALSE based on success or failure, enabling it to be used conditionally:</source>
          <target state="translated">メールの送信方法。成功か失敗かに応じて TRUE か FALSE を返し、条件付きで使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="e36d2caacdd06a3a131fbd6af111bb3aa46944d8" translate="yes" xml:space="preserve">
          <source>The email field must contain a valid email address.</source>
          <target state="translated">メールアドレスの欄には、有効なメールアドレスを入力してください。</target>
        </trans-unit>
        <trans-unit id="392d32c2207f418527757ea463cc4f1f8c04e5d2" translate="yes" xml:space="preserve">
          <source>The encryption key. This it typically specified in your config file as outlined above.</source>
          <target state="translated">暗号化キーです。これは通常、上記で説明したように設定ファイルで指定します。</target>
        </trans-unit>
        <trans-unit id="0e773d9e355d3598ff78275495bbd52b73f5eae1" translate="yes" xml:space="preserve">
          <source>The entire tutorial is split up over several pages, each explaining a small part of the functionality of the CodeIgniter framework. You&amp;rsquo;ll go through the following pages:</source>
          <target state="translated">チュートリアル全体は複数のページに分かれており、それぞれがCodeIgniterフレームワークの機能のごく一部を説明しています。次のページに進みます。</target>
        </trans-unit>
        <trans-unit id="548c7e210cac784fc2745c447ca8cc9e7a7b38ad" translate="yes" xml:space="preserve">
          <source>The entry ID number is expected in the third segment of your URL. This is based on the URI example we gave earlier:</source>
          <target state="translated">エントリID番号はURLの3番目のセグメントに期待されます。これは先ほどのURIの例に基づいています。</target>
        </trans-unit>
        <trans-unit id="70086720ed68745caa5c8a49f8326921a495221a" translate="yes" xml:space="preserve">
          <source>The environment variable, the default value, or null.</source>
          <target state="translated">環境変数、デフォルト値、またはnullを指定します。</target>
        </trans-unit>
        <trans-unit id="8956ec7509c1b6f6569c46c0caf5169af14b9c79" translate="yes" xml:space="preserve">
          <source>The escaped data.</source>
          <target state="translated">エスケープされたデータです。</target>
        </trans-unit>
        <trans-unit id="bd35515b3c5c5828d253a60bec8306d8d1178cdf" translate="yes" xml:space="preserve">
          <source>The escaped string(s)</source>
          <target state="translated">エスケープされた文字列</target>
        </trans-unit>
        <trans-unit id="71df2c43a17f793987293dad3bdbf5e6e4f9e1f9" translate="yes" xml:space="preserve">
          <source>The escaped value(s)</source>
          <target state="translated">エスケープされた値</target>
        </trans-unit>
        <trans-unit id="5659b4756e016acb557e9c43f0d81f429b6813b5" translate="yes" xml:space="preserve">
          <source>The exact language used is controlled through the language file, Time.php.</source>
          <target state="translated">使用される正確な言語は、Time.phpという言語ファイルで制御されます。</target>
        </trans-unit>
        <trans-unit id="995281d1abc172fe8eaa06738ebca1cd35700d58" translate="yes" xml:space="preserve">
          <source>The exact time displayed is determined in the following manner:</source>
          <target state="translated">表示される正確な時間は、以下の方法で決定されます。</target>
        </trans-unit>
        <trans-unit id="8df7619e97898fb1f052906b2532d93dec3b03c3" translate="yes" xml:space="preserve">
          <source>The example above uses the configuration settings found in &lt;code&gt;app/Config/Encryption.php&lt;/code&gt;.</source>
          <target state="translated">上記の例では、 &lt;code&gt;app/Config/Encryption.php&lt;/code&gt; ある構成設定を使用しています。</target>
        </trans-unit>
        <trans-unit id="a767eb0ee7bc500b75f2547c6b7bc2d94b9bedee" translate="yes" xml:space="preserve">
          <source>The expected result you supply can either be a literal match, or a data type match. Here&amp;rsquo;s an example of a literal:</source>
          <target state="translated">指定する期待される結果は、リテラル一致またはデータ型一致のいずれかです。これがリテラルの例です：</target>
        </trans-unit>
        <trans-unit id="41a6a3c733d964074ea3c68e0b301a67a0c8232c" translate="yes" xml:space="preserve">
          <source>The expiration is set in &lt;strong&gt;seconds&lt;/strong&gt;, which will be added to the current time. Do not include the time, but rather only the number of seconds from &lt;em&gt;now&lt;/em&gt; that you wish the cookie to be valid. If the expiration is set to zero the cookie will only last as long as the browser is open.</source>
          <target state="translated">有効期限は&lt;strong&gt;秒単位&lt;/strong&gt;で設定され、現在時刻に追加されます。以下からの時間ではなく、秒数だけを含めないでください&lt;em&gt;今&lt;/em&gt;あなたはクッキーが有効であることを希望していること。有効期限がゼロに設定されている場合、Cookieはブラウザが開いている間のみ存続します。</target>
        </trans-unit>
        <trans-unit id="82292913a395e7d2c4e663fc00c674001367b3c5" translate="yes" xml:space="preserve">
          <source>The extend method takes the name of any view file that you wish to use. Since they are standard views, they will be located just like a view. By default, it will look in the application&amp;rsquo;s View directory, but will also scan other PSR-4 defined namespaces. You can include a namespace to locate the view in particular namespace View directory:</source>
          <target state="translated">extendsメソッドは、使用するビューファイルの名前を取ります。標準のビューであるため、ビューと同じように配置されます。デフォルトでは、アプリケーションのViewディレクトリを検索しますが、PSR-4で定義された他の名前空間もスキャンします。名前空間を含めて、特定の名前空間ビューディレクトリでビューを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="99bd55a9e53d90daf135ce7aa2de9d92324c8208" translate="yes" xml:space="preserve">
          <source>The field is required when all of the other fields are present in the data but not required.</source>
          <target state="translated">このフィールドは、他のすべてのフィールドがデータ内に存在するが、必須ではない場合に必須となります。</target>
        </trans-unit>
        <trans-unit id="04baf836605d26e38e5ccf771c7057d37bf6188e" translate="yes" xml:space="preserve">
          <source>The field is required when any of the other required fields are present in the data.</source>
          <target state="translated">このフィールドは、データ内に他の必須フィールドが存在する場合に必須となります。</target>
        </trans-unit>
        <trans-unit id="d5a074f1b41e497bc65a95b6a895ce196a77ff7c" translate="yes" xml:space="preserve">
          <source>The field name - the exact name you&amp;rsquo;ve given the form field.</source>
          <target state="translated">フィールド名-フォームフィールドに付けた正確な名前。</target>
        </trans-unit>
        <trans-unit id="123c2568d9bdd3dcef5df0cc4eec7098303eda1e" translate="yes" xml:space="preserve">
          <source>The file could not be written on disk.</source>
          <target state="translated">ファイルをディスクに書き込むことができませんでした。</target>
        </trans-unit>
        <trans-unit id="e85334cf486987531c0ebd2398d191d876d88b1c" translate="yes" xml:space="preserve">
          <source>The file exceeds the upload limit defined in your form.</source>
          <target state="translated">ファイルがあなたのフォームで定義されたアップロード制限を超えています。</target>
        </trans-unit>
        <trans-unit id="ded1fa73a71dc837304697a00695755f82110ca2" translate="yes" xml:space="preserve">
          <source>The file exceeds your upload_max_filesize ini directive.</source>
          <target state="translated">ファイルが upload_max_filesize ini ディレクティブを超えています。</target>
        </trans-unit>
        <trans-unit id="30950b42266fa34c536debcd9da45e11db7e9eab" translate="yes" xml:space="preserve">
          <source>The file format of the export file.</source>
          <target state="translated">書き出しファイルのファイル形式です。</target>
        </trans-unit>
        <trans-unit id="fd414cd1e34167b6d06dfb539e2a3be3d6b7b748" translate="yes" xml:space="preserve">
          <source>The file must be called &amp;lsquo;Blog.php&amp;rsquo;, with a capital &amp;lsquo;B&amp;rsquo;.</source>
          <target state="translated">ファイル名は「Blog.php」で、大文字の「B」を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2113d312f1b80ae6d77ad68edb117b0b90de41da" translate="yes" xml:space="preserve">
          <source>The file must be called &amp;lsquo;Helloworld.php&amp;rsquo;, with a capital &amp;lsquo;H&amp;rsquo;.</source>
          <target state="translated">このファイルは、大文字の「H」を付けて「Helloworld.php」という名前にする必要があります。</target>
        </trans-unit>
        <trans-unit id="64bea981141c2981c4af7ad1c0d531721f01b2fd" translate="yes" xml:space="preserve">
          <source>The file name must match the class name. For example, if this is your class:</source>
          <target state="translated">ファイル名はクラス名と一致している必要があります。例えば、これが自分のクラスであれば</target>
        </trans-unit>
        <trans-unit id="1f4519c4668f7e3682a79958b1baac1fa78c9ab2" translate="yes" xml:space="preserve">
          <source>The file should not contain every possible setting for every configuration class used by the application. In truth, it should include only those items that are specific to the environment or are sensitive details like passwords and API keys and other information that should not be exposed. But anything that changes between deployments is fair-game.</source>
          <target state="translated">ファイルは、アプリケーションによって使用される全ての設定クラスに対して可能な全ての設定を含むべきではありません。実際には、環境に固有の項目や、パスワードや API キーなどの機密性の高い情報や、公開されてはいけない情報だけを含むべきです。しかし、デプロイの間に変更されるものはすべてフェアゲームです。</target>
        </trans-unit>
        <trans-unit id="b33b7b74f535fc21a1084239dc3388c463c71b27" translate="yes" xml:space="preserve">
          <source>The file validation rules apply for both single and multiple file uploads.</source>
          <target state="translated">ファイルの検証ルールは、単一ファイルと複数ファイルのアップロードの両方に適用されます。</target>
        </trans-unit>
        <trans-unit id="88a179318d6a7b57fb917ebf09f9b8586d1cbb5a" translate="yes" xml:space="preserve">
          <source>The file was only partially uploaded.</source>
          <target state="translated">一部のみアップロードされていました。</target>
        </trans-unit>
        <trans-unit id="1afab90219f2e3297cb682c1fc0f61900f1ef32a" translate="yes" xml:space="preserve">
          <source>The filename prefix for &amp;ldquo;extending&amp;rdquo; Helpers is the same used to extend libraries and core classes. To set your own prefix, open your &lt;strong&gt;application/config/config.php&lt;/strong&gt; file and look for this item:</source>
          <target state="translated">「拡張」ヘルパーのファイル名プレフィックスは、ライブラリとコアクラスの拡張に使用されるものと同じです。独自のプレフィックスを設定するには、&lt;strong&gt;application / config / config.php&lt;/strong&gt;ファイルを開き、次の項目を探します。</target>
        </trans-unit>
        <trans-unit id="041c524261411e21ed77cd6441777fc0992e402b" translate="yes" xml:space="preserve">
          <source>The files must be writable or owned by the system in order to be deleted.</source>
          <target state="translated">削除するには、ファイルが書き込み可能であるか、システムが所有している必要があります。</target>
        </trans-unit>
        <trans-unit id="ce76e83c035c893df3740aa759f39235931b382c" translate="yes" xml:space="preserve">
          <source>The final property, &lt;code&gt;$description&lt;/code&gt; is a short string that is displayed in the &lt;strong&gt;list&lt;/strong&gt; command and should describe what the command does.</source>
          <target state="translated">最後のプロパティである &lt;code&gt;$description&lt;/code&gt; は、&lt;strong&gt;list&lt;/strong&gt;コマンドに表示される短い文字列であり、コマンドの機能を説明する必要があります。</target>
        </trans-unit>
        <trans-unit id="cfe70b053b4988ed1556d7fdd3291be371378d0b" translate="yes" xml:space="preserve">
          <source>The finalized View is rendered then sent to the web browser to be seen. If caching is enabled, the view is cached first so that on subsequent requests it can be served.</source>
          <target state="translated">最終的にレンダリングされたビューは、Web ブラウザに送信されて表示されます。キャッシングが有効になっている場合、ビューは最初にキャッシュされ、それ以降のリクエストに対応できるようになります。</target>
        </trans-unit>
        <trans-unit id="44d5e4df2666db41b867f02bfe3fcb25d4aa962f" translate="yes" xml:space="preserve">
          <source>The first and second parameters enable you to set a limit and offset clause:</source>
          <target state="translated">第1パラメータと第2パラメータを使用すると、制限句とオフセット句を設定することができます。</target>
        </trans-unit>
        <trans-unit id="c2ba397700c914caf10a767db91eb0504a8876f2" translate="yes" xml:space="preserve">
          <source>The first aspect to look at is handling &amp;lsquo;media&amp;rsquo; negotiations. These are provided by the &lt;code&gt;Accept&lt;/code&gt; header and is one of the most complex headers available. A common example is the client telling the server what format it wants the data in. This is especially common in API&amp;rsquo;s. For example, a client might request JSON formatted data from an API endpoint:</source>
          <target state="translated">最初に確認するのは、「メディア」ネゴシエーションの処理です。これらは &lt;code&gt;Accept&lt;/code&gt; ヘッダーによって提供され、利用可能な最も複雑なヘッダーの1つです。一般的な例は、クライアントがサーバーにデータを必要とする形式を指示することです。これは特にAPIで一般的です。たとえば、クライアントがAPIエンドポイントからJSON形式のデータを要求する場合があります。</target>
        </trans-unit>
        <trans-unit id="55ab73ada96b75189e6fe25204dae08981709ddb" translate="yes" xml:space="preserve">
          <source>The first four array indexes above (id, qty, price, and name) are &lt;strong&gt;required&lt;/strong&gt;. If you omit any of them the data will not be saved to the cart. The fifth index (options) is optional. It is intended to be used in cases where your product has options associated with it. Use an array for options, as shown above.</source>
          <target state="translated">上記の最初の4つの配列インデックス（id、qty、price、およびname）は&lt;strong&gt;必須です&lt;/strong&gt;。それらのいずれかを省略すると、データはカートに保存されません。5番目のインデックス（オプション）はオプションです。製品にオプションが関連付けられている場合に使用することを目的としています。上記のように、オプションには配列を使用します。</target>
        </trans-unit>
        <trans-unit id="26436ba231ac663cf040d33efa570ad7cfa7766d" translate="yes" xml:space="preserve">
          <source>The first function is provided by the &lt;a href=&quot;../helpers/form_helper&quot;&gt;form helper&lt;/a&gt; and renders the form element and adds extra functionality, like adding a hidden &lt;a href=&quot;../libraries/security&quot;&gt;CSRF prevention field&lt;/a&gt;. The latter is used to report errors related to form validation.</source>
          <target state="translated">最初の関数は&lt;a href=&quot;../helpers/form_helper&quot;&gt;フォームヘルパー&lt;/a&gt;によって提供され、フォーム要素をレンダリングし、非表示の&lt;a href=&quot;../libraries/security&quot;&gt;CSRF防止フィールドの&lt;/a&gt;追加などの追加機能を追加します。後者は、フォームの検証に関連するエラーを報告するために使用されます。</target>
        </trans-unit>
        <trans-unit id="38f1dc3d9df51402a3728d6ae87e13de9486f5cc" translate="yes" xml:space="preserve">
          <source>The first is &lt;code&gt;service()&lt;/code&gt; which returns a new instance of the requested service. The only required parameter is the service name. This is the same as the method name within the Services file always returns a SHARED instance of the class, so calling the function multiple times should always return the same instance:</source>
          <target state="translated">1つ目は、要求されたサービスの新しいインスタンスを返す &lt;code&gt;service()&lt;/code&gt; です。必要なパラメーターはサービス名のみです。これは、Servicesファイル内のメソッド名が常にクラスのSHAREDインスタンスを返すのと同じであるため、関数を複数回呼び出すと、常に同じインスタンスが返されます。</target>
        </trans-unit>
        <trans-unit id="f40a405b3d56e35d5f0a1b22cf8dcf7ce8579473" translate="yes" xml:space="preserve">
          <source>The first item in the placeholder corresponds to the index of the item in the array, if it&amp;rsquo;s numerical:</source>
          <target state="translated">プレースホルダーの最初の項目は、数値の場合、配列内の項目のインデックスに対応します。</target>
        </trans-unit>
        <trans-unit id="7c4179980494b1a2983eb2fd0f71733821c23e58" translate="yes" xml:space="preserve">
          <source>The first line in this method checks whether the page actually exists. PHP&amp;rsquo;s native &lt;code&gt;file_exists()&lt;/code&gt; function is used to check whether the file is where it&amp;rsquo;s expected to be. &lt;code&gt;show_404()&lt;/code&gt; is a built-in CodeIgniter function that renders the default error page.</source>
          <target state="translated">このメソッドの最初の行は、ページが実際に存在するかどうかを確認します。PHPのネイティブ &lt;code&gt;file_exists()&lt;/code&gt; 関数を使用して、ファイルが予期された場所にあるかどうかを確認します。 &lt;code&gt;show_404()&lt;/code&gt; は、デフォルトのエラーページをレンダリングする組み込みのCodeIgniter関数です。</target>
        </trans-unit>
        <trans-unit id="0c10ed1e1dc566c09fd77f3a97eae6e05adc5368" translate="yes" xml:space="preserve">
          <source>The first line in this method checks whether the page actually exists. PHP&amp;rsquo;s native &lt;code&gt;is_file()&lt;/code&gt; function is used to check whether the file is where it&amp;rsquo;s expected to be. The &lt;code&gt;PageNotFoundException&lt;/code&gt; is a CodeIgniter exception that causes the default error page to show.</source>
          <target state="translated">このメソッドの最初の行は、ページが実際に存在するかどうかを確認します。PHPのネイティブ &lt;code&gt;is_file()&lt;/code&gt; 関数は、ファイルが予期された場所にあるかどうかを確認するために使用されます。 &lt;code&gt;PageNotFoundException&lt;/code&gt; は、デフォルトのエラーページを表示するようになりCodeIgniterの例外です。</target>
        </trans-unit>
        <trans-unit id="15abe5276d2aa42e9e2c59dce197591afa3bfd17" translate="yes" xml:space="preserve">
          <source>The first paramenter is the text to extract an excerpt from, the second is the central word or phrase to count before and after. The third parameter is the number of characters to count before and after the central phrase. If no phrase passed, the excerpt will include the first $radius characters with the elipsis at the end.</source>
          <target state="translated">1 番目のパラメータは抜粋を抽出するテキストで、2 番目のパラメータは、前後にカウントする中心となる単語またはフレーズです。3 番目のパラメータは、中心となるフレーズの前後にカウントする文字数です。フレーズが渡されなかった場合は、最初の $radius 文字と最後のエリプシスが抜粋に含まれます。</target>
        </trans-unit>
        <trans-unit id="e710955db1bc69367ddf17af637e8c0371be5a8f" translate="yes" xml:space="preserve">
          <source>The first parameter can contain any segments you wish appended to the URL. As with the &lt;a href=&quot;#site_url&quot;&gt;&lt;code&gt;site_url()&lt;/code&gt;&lt;/a&gt; function above, segments can be a string or an array.</source>
          <target state="translated">最初のパラメータには、URLに追加したいセグメントを含めることができます。上記の&lt;a href=&quot;#site_url&quot;&gt; &lt;code&gt;site_url()&lt;/code&gt; &lt;/a&gt;関数と同様に、セグメントは文字列または配列です。</target>
        </trans-unit>
        <trans-unit id="62d6d89fb07b5653b1df041861150aa7bea31948" translate="yes" xml:space="preserve">
          <source>The first parameter contains the name of the &lt;a href=&quot;../general/views&quot;&gt;view file&lt;/a&gt; (in this example the file would be called blog_template.php), and the second parameter contains an associative array of data to be replaced in the template. In the above example, the template would contain two variables: {blog_title} and {blog_heading}</source>
          <target state="translated">最初のパラメーターには&lt;a href=&quot;../general/views&quot;&gt;ビューファイルの&lt;/a&gt;名前が含まれ（この例では、ファイルはblog_template.phpと呼ばれます）、2番目のパラメーターにはテンプレートで置き換えられるデータの連想配列が含まれています。上記の例では、テンプレートには2つの変数が含まれます：{blog_title}と{blog_heading}</target>
        </trans-unit>
        <trans-unit id="5d892b3c33b8d6bf3949d1ae5996880723e90f42" translate="yes" xml:space="preserve">
          <source>The first parameter contains the name of the column you would like to order by.</source>
          <target state="translated">最初のパラメータには、順序を指定したいカラムの名前を指定します。</target>
        </trans-unit>
        <trans-unit id="cabd415c9922743f8d13ed6cd27d7c3c7bef0946" translate="yes" xml:space="preserve">
          <source>The first parameter enables you to set whether or not the query builder query will be reset (by default it will be reset, just like when using &lt;code&gt;$builder-&amp;gt;get()&lt;/code&gt;):</source>
          <target state="translated">最初のパラメーターを使用すると、クエリビルダークエリをリセットするかどうかを設定できます（デフォルトでは、 &lt;code&gt;$builder-&amp;gt;get()&lt;/code&gt; を使用する場合と同様にリセットされます）。</target>
        </trans-unit>
        <trans-unit id="c898181ed33e5d491a0bb925f066421722284fd8" translate="yes" xml:space="preserve">
          <source>The first parameter is an associative array of values, the second parameter is the where key.</source>
          <target state="translated">最初のパラメータは値の連想配列、2 番目のパラメータは where キーです。</target>
        </trans-unit>
        <trans-unit id="155f743e0b15ed980fa4072b9a759ba9d79c7fcd" translate="yes" xml:space="preserve">
          <source>The first parameter is an associative array of values.</source>
          <target state="translated">最初のパラメータは値の連想配列です。</target>
        </trans-unit>
        <trans-unit id="a9d08eb7dce04c3e28acaa5dd60a74f6aa0d8f34" translate="yes" xml:space="preserve">
          <source>The first parameter is an object.</source>
          <target state="translated">最初のパラメータはオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="91307dd7c2e3e3df6387d09e1ab034c7f3820f07" translate="yes" xml:space="preserve">
          <source>The first parameter is required. It is the name of the view file you would like to load.</source>
          <target state="translated">最初のパラメータは必須です。読み込みたいビューファイルの名前です。</target>
        </trans-unit>
        <trans-unit id="616924b1fdfda1d7ee9af0c395f904e8d4f771f7" translate="yes" xml:space="preserve">
          <source>The first parameter is the &lt;strong&gt;name you want the downloaded file to be named&lt;/strong&gt;, the second parameter is the file data.</source>
          <target state="translated">最初のパラメータは&lt;strong&gt;ダウンロードしたファイルに名前を付ける名前&lt;/strong&gt;で、2番目のパラメータはファイルデータです。</target>
        </trans-unit>
        <trans-unit id="43f61544a4f289eec34c010b70236eb693d94bac" translate="yes" xml:space="preserve">
          <source>The first parameter is the error number while the second parameter is the error message.</source>
          <target state="translated">最初のパラメータはエラー番号で、2番目のパラメータはエラーメッセージです。</target>
        </trans-unit>
        <trans-unit id="0b60f95d78dc7293d55161c5ab4fd22a736a6647" translate="yes" xml:space="preserve">
          <source>The first parameter is the service that you are replacing. The name must match the function name in the Services class exactly. The second parameter is the instance to replace it with.</source>
          <target state="translated">最初のパラメータは、置換するサービスです。名前は、サービス・クラスの関数名と正確に一致している必要があります。2 番目のパラメータは、置き換えるインスタンスです。</target>
        </trans-unit>
        <trans-unit id="922336e4149e1e32162c31f2eb84298f25318a4b" translate="yes" xml:space="preserve">
          <source>The first parameter is the string of text that you wish to display. The second parameter is an array of options that allow you to specify how the text should be displayed:</source>
          <target state="translated">最初のパラメータは、表示したいテキストの文字列です。2 番目のパラメータはオプションの配列で、テキストの表示方法を指定することができます。</target>
        </trans-unit>
        <trans-unit id="6d4cb6ba6da6e3617c84957a20b5f8d73c9500b0" translate="yes" xml:space="preserve">
          <source>The first parameter is the string to ellipsize, the second is the number of characters in the final string. The third parameter is where in the string the ellipsis should appear from 0 - 1, left to right. For example. a value of 1 will place the ellipsis at the right of the string, .5 in the middle, and 0 at the left.</source>
          <target state="translated">最初のパラメータは楕円化する文字列で、2番目のパラメータは最終的な文字列の文字数です。3 番目のパラメータは、文字列のどこにエリプシスを表示するかを 0 から 1、左から右に指定します。例えば、値を 1 とすると、文字列の右にエリプシスが、中央に 0.5、左に 0 が配置されます。</target>
        </trans-unit>
        <trans-unit id="7dad7d86cd38aac21d1116631067baa2973ef7cf" translate="yes" xml:space="preserve">
          <source>The first parameter is the table name, the second is an associative array with the data to be inserted. The above example produces:</source>
          <target state="translated">最初のパラメータはテーブル名で、2 番目のパラメータは挿入するデータの連想配列です。上の例では、次のようになります。</target>
        </trans-unit>
        <trans-unit id="7d3800d9bd13b38ea465cc39e82c119f2ddc2c64" translate="yes" xml:space="preserve">
          <source>The first parameter is the table name, the second is an associative array with the data to be updated, and the third parameter is the &amp;ldquo;where&amp;rdquo; clause. The above example produces:</source>
          <target state="translated">最初のパラメーターはテーブル名、2番目は更新するデータを含む連想配列、3番目のパラメーターは「where」節です。上記の例では、以下が生成されます。</target>
        </trans-unit>
        <trans-unit id="c4fd3d807b2e6b4856bcf6c44ce3c054b828579e" translate="yes" xml:space="preserve">
          <source>The first parameter is the table name, the second is the where clause. You can also use the where() or or_where() functions instead of passing the data to the second parameter of the function:</source>
          <target state="translated">最初のパラメータはテーブル名で、2 番目のパラメータは where 節です。また、関数の 2 番目のパラメータにデータを渡す代わりに where()または or_where()関数を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="888a5575a8f84e08400760012fb83829cdd29c25" translate="yes" xml:space="preserve">
          <source>The first parameter is the where clause. You can also use the where() or or_where() functions instead of passing the data to the first parameter of the function:</source>
          <target state="translated">最初のパラメータは where 節です。また、関数の最初のパラメータにデータを渡す代わりに where()or_where()関数を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="f41f5a50c02edb607dc60f107f3fba44af345274" translate="yes" xml:space="preserve">
          <source>The first parameter lets you set an offset, which defaults to 3 since your URI will normally contain a controller/method pair in the first and second segments. Example:</source>
          <target state="translated">最初のパラメータでオフセットを設定できますが、デフォルトは3です。例を示します。</target>
        </trans-unit>
        <trans-unit id="a2c3e781cd4c3e5a8a8e7004b60bff0b1def81e6" translate="yes" xml:space="preserve">
          <source>The first parameter lets you set the &amp;ldquo;selected&amp;rdquo; state of the menu. For example, to set Pacific time as the default you will do this:</source>
          <target state="translated">最初のパラメータでは、メニューの「選択」状態を設定できます。たとえば、太平洋標準時をデフォルトとして設定するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="dd16868059ab6add63623445a2ecbebe3bc84917" translate="yes" xml:space="preserve">
          <source>The first parameter must contain a UNIX timestamp. The second parameter must contain a timestamp that is greater that the first timestamp. The thirdparameter is optional and limits the number of time units to display.</source>
          <target state="translated">最初のパラメータには、UNIX タイムスタンプを指定する必要があります。2 番目のパラメータには、1 番目のタイムスタンプよりも大きいタイムスタンプを指定しなければなりません。3番目のパラメータはオプションで、表示する時間単位の数を制限します。</target>
        </trans-unit>
        <trans-unit id="8a1d20a952ea0e0cd26b7470acf2a9b92fdf5679" translate="yes" xml:space="preserve">
          <source>The first parameter must contain the name of the checkbox, the second parameter must contain its value, and the third (optional) parameter lets you set an item as the default (use boolean TRUE/FALSE).</source>
          <target state="translated">最初のパラメータにはチェックボックスの名前を、2 番目のパラメータにはその値を、3 番目のパラメータ (オプション)にはデフォルトの項目を設定します (boolean TRUE/FALSE を使用します)。</target>
        </trans-unit>
        <trans-unit id="80899e1baf5ec5f003caac7f4435758e8409b343" translate="yes" xml:space="preserve">
          <source>The first parameter must contain the name of the select menu, the second parameter must contain the value of each item, and the third (optional) parameter lets you set an item as the default (use boolean TRUE/FALSE).</source>
          <target state="translated">最初のパラメータにはセレクトメニューの名前を、2番目のパラメータには各項目の値を、そして3番目の(オプションの)パラメータにはデフォルトの項目を設定します(booleanのTRUE/FALSEを使用します)。</target>
        </trans-unit>
        <trans-unit id="9e02a95effc6a2b3742765954a2876bf93207113" translate="yes" xml:space="preserve">
          <source>The first parameter of this function can &lt;strong&gt;optionally&lt;/strong&gt; be used to specify a particular database group from your config file, or you can even submit connection values for a database that is not specified in your config file. Examples:</source>
          <target state="translated">この関数の最初のパラメーターを&lt;strong&gt;オプション&lt;/strong&gt;で使用して、構成ファイルから特定のデータベースグループを指定できます。または、構成ファイルで指定されていないデータベースの接続値を送信することもできます。例：</target>
        </trans-unit>
        <trans-unit id="07131d562d860f8e5ad13517649d8fec8f654901" translate="yes" xml:space="preserve">
          <source>The first parameter of this function can &lt;strong&gt;optionally&lt;/strong&gt; be used to specify a particular database group from your config file. Examples:</source>
          <target state="translated">この関数の最初のパラメーターは、&lt;strong&gt;オプション&lt;/strong&gt;で、構成ファイルから特定のデータベースグループを指定するために使用できます。例：</target>
        </trans-unit>
        <trans-unit id="c93e88111eccee82539017d653ad01f9dc20aee0" translate="yes" xml:space="preserve">
          <source>The first parameter specifies the type of string, the second parameter specifies the length. The following choices are available:</source>
          <target state="translated">最初のパラメータは文字列の種類を指定し、2番目のパラメータは長さを指定します。以下の選択肢があります。</target>
        </trans-unit>
        <trans-unit id="987ce60318e6ced200dcd68188fa42be0d7efbe5" translate="yes" xml:space="preserve">
          <source>The first parameter to each of the &amp;ldquo;add&amp;rdquo; methods is an appropriate string value, or an array of them.</source>
          <target state="translated">各「add」メソッドの最初のパラメーターは、適切な文字列値またはそれらの配列です。</target>
        </trans-unit>
        <trans-unit id="ecd0df7606ba21f32105e0cc84a603fe5d6ca60a" translate="yes" xml:space="preserve">
          <source>The first parameter will contain the name of the POST item you are looking for:</source>
          <target state="translated">最初のパラメータには、探しているPOST項目の名前が含まれます。</target>
        </trans-unit>
        <trans-unit id="4645949e8bc5bf48b77e7eef1ada71e1e808f124" translate="yes" xml:space="preserve">
          <source>The first parameter will contain the name of the REQUEST item you are looking for:</source>
          <target state="translated">最初のパラメータには、お探しのREQUEST項目の名前を入力します。</target>
        </trans-unit>
        <trans-unit id="156b48de851b4d15f4b8ac1bb57e5fcc4aa16c3e" translate="yes" xml:space="preserve">
          <source>The first parameter will contain the table name, the second is an associative array of values, the third parameter is the where key.</source>
          <target state="translated">最初のパラメータにはテーブル名、2 番目のパラメータには値の連想配列、3 番目のパラメータには where キーを指定します。</target>
        </trans-unit>
        <trans-unit id="fb0f54a93e173bb9eea4df70309bad146b90deb7" translate="yes" xml:space="preserve">
          <source>The first parameter will contain the table name, the second is an associative array of values.</source>
          <target state="translated">最初のパラメータにはテーブル名を、2 番目のパラメータには値の連想配列を指定します。</target>
        </trans-unit>
        <trans-unit id="53a1e26fba1ebc60f7810d63acae346166738940" translate="yes" xml:space="preserve">
          <source>The first parameter will contain the table name, the second is an object.</source>
          <target state="translated">最初のパラメータにはテーブル名を、2番目のパラメータにはオブジェクトを指定します。</target>
        </trans-unit>
        <trans-unit id="103798f6010a569a43393a253f29ad7120d37d21" translate="yes" xml:space="preserve">
          <source>The first part of this chapter gives an overview. After the concepts are out of the way, we will discuss how to work with the requests and responses within CodeIgniter.</source>
          <target state="translated">この章の最初の部分では、概要を説明します。概念が抜けた後は、CodeIgniter内のリクエストとレスポンスをどのように扱うかを説明します。</target>
        </trans-unit>
        <trans-unit id="12280383ac6f65bca56620239f8212aa1079daa1" translate="yes" xml:space="preserve">
          <source>The first segment represents the controller &lt;strong&gt;class&lt;/strong&gt; that should be invoked.</source>
          <target state="translated">最初のセグメントは、呼び出されるコントローラ&lt;strong&gt;クラス&lt;/strong&gt;を表します。</target>
        </trans-unit>
        <trans-unit id="44eabcc05470ae87da1f037b423f57432c60d984" translate="yes" xml:space="preserve">
          <source>The first step is to &lt;a href=&quot;../installation/index&quot;&gt;install&lt;/a&gt; CodeIgniter, then read all the topics in the &lt;strong&gt;Introduction&lt;/strong&gt; section of the Table of Contents.</source>
          <target state="translated">最初のステップは、CodeIgniter を&lt;a href=&quot;../installation/index&quot;&gt;インストールして&lt;/a&gt;から、目次の&lt;strong&gt;概要&lt;/strong&gt;セクションのすべてのトピックを読むことです。</target>
        </trans-unit>
        <trans-unit id="86867a6001bafa32b0500e850519519842a4f051" translate="yes" xml:space="preserve">
          <source>The first step is to create custom views. These can be placed anywhere that the &lt;code&gt;view()&lt;/code&gt; method can locate them, which means the standard View directory, or any namespaced View folder will work. For example, you could create a new view at &lt;strong&gt;/app/Views/_errors_list.php&lt;/strong&gt;:</source>
          <target state="translated">最初のステップは、カスタムビューを作成することです。これらは、 &lt;code&gt;view()&lt;/code&gt; メソッドが配置できる場所であればどこにでも配置できます。つまり、標準のViewディレクトリ、または名前空間付きのViewフォルダーが機能します。たとえば、&lt;strong&gt;/ app&lt;/strong&gt; / &lt;strong&gt;Views /_errors_list.phpに&lt;/strong&gt;新しいビューを作成できます。</target>
        </trans-unit>
        <trans-unit id="07f7ed889cd7fe5fba03957be1f4179dd7f9f1c4" translate="yes" xml:space="preserve">
          <source>The first step is to fill out the &lt;code&gt;$validationRules&lt;/code&gt; class property with the fields and rules that should be applied. If you have custom error message that you want to use, place them in the &lt;code&gt;$validationMessages&lt;/code&gt; array:</source>
          <target state="translated">最初のステップは、 &lt;code&gt;$validationRules&lt;/code&gt; クラスプロパティに適用する必要のあるフィールドとルールを入力することです。使用したいカスタムエラーメッセージがある場合は、それらを &lt;code&gt;$validationMessages&lt;/code&gt; 配列に配置します。</target>
        </trans-unit>
        <trans-unit id="571be21b1a738a4f405879f12095c69e6bdb3c03" translate="yes" xml:space="preserve">
          <source>The first thing to notice is the name of the methods we&amp;rsquo;ve added. For each one, the class expects the snake_case column name to be converted into PascalCase, and prefixed with either &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;get&lt;/code&gt;. These methods will then be automatically called whenever you set or retrieve the class property using the direct syntax (i.e. $user-&amp;gt;email). The methods do not need to be public unless you want them accessed from other classes. For example, the &lt;code&gt;created_at&lt;/code&gt; class property will be accessed through the &lt;code&gt;setCreatedAt()&lt;/code&gt; and &lt;code&gt;getCreatedAt()&lt;/code&gt; methods.</source>
          <target state="translated">最初に気付くのは、追加したメソッドの名前です。それぞれについて、クラスはsnake_case列名がPascalCaseに変換され、 &lt;code&gt;set&lt;/code&gt; または &lt;code&gt;get&lt;/code&gt; のいずれかのプレフィックスが付けられることを想定しています。これらのメソッドは、直接構文（つまり、$ user-&amp;gt; email）を使用してクラスプロパティを設定または取得するたびに自動的に呼び出されます。他のクラスからアクセスしたい場合を除いて、メソッドをパブリックにする必要はありません。たとえば、 &lt;code&gt;created_at&lt;/code&gt; クラスプロパティには、 &lt;code&gt;setCreatedAt()&lt;/code&gt; &lt;code&gt;getCreatedAt()&lt;/code&gt; メソッドとgetCreatedAt（）メソッドを介してアクセスします。</target>
        </trans-unit>
        <trans-unit id="3c8a5b0daf9b4eb2bc663bd72913e52c8dde2cf6" translate="yes" xml:space="preserve">
          <source>The first thing you&amp;rsquo;re going to do is set up a &lt;strong&gt;controller&lt;/strong&gt; to handle static pages. A controller is simply a class that helps delegate work. It is the glue of your web application.</source>
          <target state="translated">まず最初に、静的なページを処理するように&lt;strong&gt;コントローラー&lt;/strong&gt;をセットアップします。コントローラは、単に作業を委任するのに役立つクラスです。それはあなたのウェブアプリケーションの接着剤です。</target>
        </trans-unit>
        <trans-unit id="bff0f134b295240ae900af4630038360cc293b1c" translate="yes" xml:space="preserve">
          <source>The first two techniques describe creating a skeleton project using CodeIgniter4, that you would then use as the base for a new webapp. The third technique described below lets you add CodeIgniter4 to an existing webapp,</source>
          <target state="translated">最初の2つのテクニックでは、CodeIgniter4を使用してスケルトンプロジェクトを作成し、それを新しいWebアプリのベースとして使用する方法を説明します。以下の3つ目のテクニックでは、既存のWebアプリにCodeIgniter4を追加することができます。</target>
        </trans-unit>
        <trans-unit id="c8762be18e8a0694b80e9772173d4ed89dfa3701" translate="yes" xml:space="preserve">
          <source>The five reserved indexes are:</source>
          <target state="translated">予約されているインデックスは5つです。</target>
        </trans-unit>
        <trans-unit id="47ed1299ffa0e56a4a2400a29ba4ba6c96b61f0e" translate="yes" xml:space="preserve">
          <source>The following PHP extensions are currently supported:</source>
          <target state="translated">現在サポートされているPHPの拡張機能は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="24736861e02754384552e0c7edd643b3bc62df61" translate="yes" xml:space="preserve">
          <source>The following PHP extensions should be enabled on your server: &lt;code&gt;php-json&lt;/code&gt;, &lt;code&gt;php-mysqlnd&lt;/code&gt;, &lt;code&gt;php-xml&lt;/code&gt;</source>
          <target state="translated">次のPHP拡張機能をサーバーで有効にする必要があります： &lt;code&gt;php-json&lt;/code&gt; 、 &lt;code&gt;php-mysqlnd&lt;/code&gt; 、 &lt;code&gt;php-xml&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac5ebb0734d274254c5a5090853815b4cb124caf" translate="yes" xml:space="preserve">
          <source>The following basic getters exist:</source>
          <target state="translated">以下の基本的なゲッターが存在します。</target>
        </trans-unit>
        <trans-unit id="95ce3efd0ee84f1a3288c097688270b177ce689a" translate="yes" xml:space="preserve">
          <source>The following basic setters exist. If any of the values set are out of range, an &lt;code&gt;InvalidArgumentExeption&lt;/code&gt; will be thrown.</source>
          <target state="translated">以下の基本的なセッターが存在します。設定された値のいずれかが範囲外の場合、 &lt;code&gt;InvalidArgumentExeption&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="392f97f093c6a771d72d5c1157f4dab50d71d45a" translate="yes" xml:space="preserve">
          <source>The following code loads and initializes the database class based on your &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; settings:</source>
          <target state="translated">次のコードは、&lt;a href=&quot;configuration&quot;&gt;構成&lt;/a&gt;設定に基づいてデータベースクラスをロードして初期化します。</target>
        </trans-unit>
        <trans-unit id="1654c9cb60daaf23942e6809fe613a89e9ac0c6e" translate="yes" xml:space="preserve">
          <source>The following comes from &lt;a href=&quot;https://owasp.org/www-project-top-ten/&quot;&gt;OWASP Top Ten Cheat Sheet&lt;/a&gt;, identifying the top vulnerabilities for web applications. For each, we provide a brief description, the OWASP recommendations, and then the CodeIgniter provisions to address the problem.</source>
          <target state="translated">以下は、&lt;a href=&quot;https://owasp.org/www-project-top-ten/&quot;&gt;OWASP Top Ten Cheat Sheetからのものであり&lt;/a&gt;、Webアプリケーションの上位の脆弱性を特定しています。それぞれについて、簡単な説明、OWASPの推奨事項、そして問題に対処するためのCodeIgniterの規定を提供します。</target>
        </trans-unit>
        <trans-unit id="cfa2394f80efc3ad808cfacc0f26b571d02ba545" translate="yes" xml:space="preserve">
          <source>The following constants are always available anywhere within your application.</source>
          <target state="translated">以下の定数は、アプリケーション内のどこにいても常に利用可能です。</target>
        </trans-unit>
        <trans-unit id="dd19eef3baa1250ea0922b93e3530248dab5c5a7" translate="yes" xml:space="preserve">
          <source>The following custom exceptions are available:</source>
          <target state="translated">以下のようなカスタム例外があります。</target>
        </trans-unit>
        <trans-unit id="90309348862e9146df0000da2ab87e588e715898" translate="yes" xml:space="preserve">
          <source>The following data is available from this function if supported by your database:</source>
          <target state="translated">お使いのデータベースでサポートされている場合は、この関数から以下のデータを取得できます。</target>
        </trans-unit>
        <trans-unit id="13392249fcd631b13df9c1112f6794a6bf4c52f1" translate="yes" xml:space="preserve">
          <source>The following example is not impacted by cascading:</source>
          <target state="translated">以下の例では、カスケードの影響を受けません。</target>
        </trans-unit>
        <trans-unit id="389c612f5f3b8b16b9ded17ce425d9069b0be5e1" translate="yes" xml:space="preserve">
          <source>The following example shows a common usage pattern within your controllers.</source>
          <target state="translated">次の例は、コントローラ内での一般的な使用パターンを示しています。</target>
        </trans-unit>
        <trans-unit id="1ce8ded02d6543206dfc253091a45a6902ff0fe9" translate="yes" xml:space="preserve">
          <source>The following example will load the cache driver, specify &lt;a href=&quot;#alternative-php-cache-apc-caching&quot;&gt;APC&lt;/a&gt; as the driver to use, and fall back to file-based caching if APC is not available in the hosting environment.</source>
          <target state="translated">次の例では、キャッシュドライバーを読み込み、使用するドライバーとして&lt;a href=&quot;#alternative-php-cache-apc-caching&quot;&gt;APC&lt;/a&gt;を指定し、ホスティング環境でAPCが利用できない場合はファイルベースのキャッシュにフォールバックします。</target>
        </trans-unit>
        <trans-unit id="ce79bbb48abc4596de1fec43c9e056528c24b0e0" translate="yes" xml:space="preserve">
          <source>The following filters are available when using the parser:</source>
          <target state="translated">パーサーを使用すると、以下のフィルタが利用できます。</target>
        </trans-unit>
        <trans-unit id="694bae70a1ee5670d39392ed6d9a949d24f52d47" translate="yes" xml:space="preserve">
          <source>The following foreground colors are available:</source>
          <target state="translated">以下の前景色をご用意しております。</target>
        </trans-unit>
        <trans-unit id="6ff30eaedbe165475f480855798ea303b6cd7906" translate="yes" xml:space="preserve">
          <source>The following functions ARE NOT available when using a cached result object:</source>
          <target state="translated">キャッシュされた結果オブジェクトを使用している場合、以下の関数は使用できません。</target>
        </trans-unit>
        <trans-unit id="ee489096aa3c47c9c7a61975c733f70ae484e766" translate="yes" xml:space="preserve">
          <source>The following functions all require the &lt;a href=&quot;https://www.php.net/manual/en/book.intl.php&quot;&gt;intl&lt;/a&gt; extension to be loaded on your system in order to work. If the extension is not loaded, no replacement will be attempted. A great overview can be found over at &lt;a href=&quot;https://www.sitepoint.com/localization-demystified-understanding-php-intl/&quot;&gt;Sitepoint&lt;/a&gt;.</source>
          <target state="translated">次の関数はすべて、機能するためにシステムに&lt;a href=&quot;https://www.php.net/manual/en/book.intl.php&quot;&gt;intl&lt;/a&gt;拡張機能をロードする必要があります。拡張機能がロードされていない場合、交換は試行されません。優れた概要は&lt;a href=&quot;https://www.sitepoint.com/localization-demystified-understanding-php-intl/&quot;&gt;Sitepointにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="efe79006c99ab52393b88e302d048d80356c407a" translate="yes" xml:space="preserve">
          <source>The following functions allow you to build SQL &lt;strong&gt;SELECT&lt;/strong&gt; statements.</source>
          <target state="translated">次の関数を使用すると、SQL &lt;strong&gt;SELECT&lt;/strong&gt;ステートメントを作成できます。</target>
        </trans-unit>
        <trans-unit id="02c3b27346be06cc7d986f188dfbf52bab519f98" translate="yes" xml:space="preserve">
          <source>The following functions are available:</source>
          <target state="translated">以下のような機能があります。</target>
        </trans-unit>
        <trans-unit id="859757b96efffa07074a155836225a5833b7a9e8" translate="yes" xml:space="preserve">
          <source>The following functions let you generate errors:</source>
          <target state="translated">以下の関数でエラーを発生させることができます。</target>
        </trans-unit>
        <trans-unit id="fa025a67eaef5265994f0efa68e8f38eece68728" translate="yes" xml:space="preserve">
          <source>The following graphic illustrates how data flows throughout the system:</source>
          <target state="translated">次の図は、システム全体でデータがどのように流れるかを示しています。</target>
        </trans-unit>
        <trans-unit id="75f5c9f4f1a1102b93ff342fc4586048480d0e96" translate="yes" xml:space="preserve">
          <source>The following image libraries are supported: GD/GD2, and ImageMagick.</source>
          <target state="translated">対応しているイメージライブラリは以下の通りです。GD/GD2、ImageMagick。</target>
        </trans-unit>
        <trans-unit id="d2b2d2419738fc5fc9169b2d424aed9a459a8541" translate="yes" xml:space="preserve">
          <source>The following is a list of all the native rules that are available to use:</source>
          <target state="translated">ネイティブルールを使用する場合は、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="e146fb8606faffeb0685df17241223902f042f48" translate="yes" xml:space="preserve">
          <source>The following is a list of all the preferences that can be set when sending email.</source>
          <target state="translated">メール送信時に設定できる環境設定は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="9ace79d5a084885afb64b260e1e701c10c70e16f" translate="yes" xml:space="preserve">
          <source>The following is a list of all the preferences you can pass to the initialization function to tailor the display.</source>
          <target state="translated">以下は、表示を調整するために初期化関数に渡すことができるすべての環境設定のリストです。</target>
        </trans-unit>
        <trans-unit id="d344019cd229a2f966adf0099ce7b4c53cbfea32" translate="yes" xml:space="preserve">
          <source>The following is a list of all the prepping methods that are available to use:</source>
          <target state="translated">といった下準備の方法があります。</target>
        </trans-unit>
        <trans-unit id="f46aed60d175da4e4259b8af8f8202b9436b8f08" translate="yes" xml:space="preserve">
          <source>The following is a list of available event points within the CodeIgniter core code:</source>
          <target state="translated">以下はCodeIgniterコアコード内で利用可能なイベントポイントのリストです。</target>
        </trans-unit>
        <trans-unit id="286f2164afd5442e4a281ca4fac4b148d52db937" translate="yes" xml:space="preserve">
          <source>The following is a list of available hook points.</source>
          <target state="translated">使用可能なフックポイントは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="b12824c64b9b46a58470066e590dc0ce3e968dda" translate="yes" xml:space="preserve">
          <source>The following is a list of doctype choices. These are configurable, and pulled from application/config/doctypes.php</source>
          <target state="translated">以下はdoctypeの選択肢のリストです。これらは設定可能で、application/config/doctypes.phpから取得します。</target>
        </trans-unit>
        <trans-unit id="e2487999be6ef0729487de0c2bd6d73200beccd1" translate="yes" xml:space="preserve">
          <source>The following is a list of the core system files that are invoked every time CodeIgniter runs:</source>
          <target state="translated">以下はCodeIgniterが起動するたびに起動されるコアシステムファイルの一覧です。</target>
        </trans-unit>
        <trans-unit id="6e9a275ad55259dd3dfedff7864a423c937902f4" translate="yes" xml:space="preserve">
          <source>The following is a list of the pre-defined doctype choices. These are configurable, pulled from &lt;code&gt;application/Config/DocTypes.php&lt;/code&gt;, or they could be over-ridden in your &lt;code&gt;.env&lt;/code&gt; configuration.</source>
          <target state="translated">以下は、事前定義されたDoctypeの選択肢のリストです。これらは構成可能であり、 &lt;code&gt;application/Config/DocTypes.php&lt;/code&gt; から &lt;code&gt;.env&lt;/code&gt; ます。または、.env構成でオーバーライドされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="15c29f8d9aab57a63dc4b7bb40223c5c1f17e2a1" translate="yes" xml:space="preserve">
          <source>The following is a table of all the config options for migrations, available in &lt;strong&gt;app/Config/Migrations.php&lt;/strong&gt;.</source>
          <target state="translated">以下は、&lt;strong&gt;app / Config /Migrations.php&lt;/strong&gt;で利用可能な移行のすべての構成オプションの表です。</target>
        </trans-unit>
        <trans-unit id="d10c27af83eaed810dcab46ca392228ff0a365f9" translate="yes" xml:space="preserve">
          <source>The following is a table of all the config options for migrations.</source>
          <target state="translated">以下は、移行のためのすべての設定オプションの表です。</target>
        </trans-unit>
        <trans-unit id="4fc14009f7a070b3a42cc7851751557f4310be05" translate="yes" xml:space="preserve">
          <source>The following is an example of a directory for an application package named &amp;ldquo;Foo Bar&amp;rdquo;.</source>
          <target state="translated">以下は、「Foo Bar」という名前のアプリケーションパッケージのディレクトリの例です。</target>
        </trans-unit>
        <trans-unit id="0ae69eb8f5b803f7264b143ca3a19c112b65e02d" translate="yes" xml:space="preserve">
          <source>The following items can be loaded automatically:</source>
          <target state="translated">以下の項目を自動で読み込むことができます。</target>
        </trans-unit>
        <trans-unit id="6efea29545b8489750b681a66ff72a2635213179" translate="yes" xml:space="preserve">
          <source>The following methods allow you to compare one Time instance with another. All comparisons are first converted to UTC before comparisons are done, to ensure that different timezones respond correctly.</source>
          <target state="translated">以下の方法では、1 つの Time インスタンスと別の Time インスタンスを比較することができます。異なるタイムゾーンが正しく反応するように、すべての比較は比較を行う前に UTC に変換されます。</target>
        </trans-unit>
        <trans-unit id="0c0ca3fd5b5502ec180daa4560daa71f43897add" translate="yes" xml:space="preserve">
          <source>The following methods allow you to modify the date by adding or subtracting values to the current Time. This will not modify the existing Time instance, but will return a new instance.</source>
          <target state="translated">以下のメソッドでは、現在のTimeに値を加算または減算することで日付を修正することができます。これは既存のTimeインスタンスを修正することはなく、新しいインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="b2e179690683ce038346d50adf520abc7ba8acff" translate="yes" xml:space="preserve">
          <source>The following page contains example code showing how the database class is used. For complete details please read the individual pages describing each function.</source>
          <target state="translated">次のページには、データベースクラスがどのように使用されるかを示すコード例が含まれています。完全な詳細については、各関数について説明している個々のページをお読みください。</target>
        </trans-unit>
        <trans-unit id="aecba606b709e08c385558b4f753d2e1932ff25e" translate="yes" xml:space="preserve">
          <source>The following page describes the coding styles adhered to when contributing to the development of CodeIgniter. There is no requirement to use these styles in your own CodeIgniter application, though they are recommended.</source>
          <target state="translated">以下のページでは、CodeIgniterの開発に貢献する際のコーディングスタイルについて説明します。あなた自身のCodeIgniterアプリケーションでこれらのスタイルを使用する必要はありませんが、推奨されています。</target>
        </trans-unit>
        <trans-unit id="c8c304f5c7b15bcf7bb62b37cd4e39ad558ff6a4" translate="yes" xml:space="preserve">
          <source>The following pages describe the architectural concepts behind CodeIgniter4:</source>
          <target state="translated">以下のページでは、CodeIgniter4の背後にあるアーキテクチャの概念を説明します。</target>
        </trans-unit>
        <trans-unit id="8d159a81060a80bf555851242e6ee33fd18e2a68" translate="yes" xml:space="preserve">
          <source>The following pages describe the broad concepts behind CodeIgniter:</source>
          <target state="translated">以下のページでは、CodeIgniterの大まかなコンセプトを説明します。</target>
        </trans-unit>
        <trans-unit id="a55b7426bc4ce10e8e87362b80495bc4f307cf71" translate="yes" xml:space="preserve">
          <source>The following placeholders are available for you to use in your routes:</source>
          <target state="translated">以下のプレースホルダを使用して、ルートで使用することができます。</target>
        </trans-unit>
        <trans-unit id="fd03bbaf2f4a57ddb977879361ad6db0e0cc5b4e" translate="yes" xml:space="preserve">
          <source>The following plugins are available when using the parser:</source>
          <target state="translated">パーサーを使用する際には、以下のプラグインが利用できます。</target>
        </trans-unit>
        <trans-unit id="1b294ac4c72e19e94a86681d1c2f5c6470176308" translate="yes" xml:space="preserve">
          <source>The following preferences are available. The default value indicates what will be used if you do not specify that preference.</source>
          <target state="translated">以下の環境設定が利用可能です。デフォルト値は、その環境設定を指定しなかった場合に使用されるものを示します。</target>
        </trans-unit>
        <trans-unit id="8738645ba2dd0b30608077d72c6c14a8f4aec8fb" translate="yes" xml:space="preserve">
          <source>The following properties should be used in order to get listed in CLI commands and to add help functionality to your command:</source>
          <target state="translated">CLIコマンドでリストを取得し、コマンドにヘルプ機能を追加するには、以下のプロパティを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="96280af471c3ee95653107b24f526a64d6921bb6" translate="yes" xml:space="preserve">
          <source>The following statements can be cached: select, from, join, where, like, group_by, having, order_by</source>
          <target state="translated">次のステートメントをキャッシュすることができます:select,from,join,where,like,group_by,having,order_by</target>
        </trans-unit>
        <trans-unit id="8a83e07f0f9e28ca779668202e46ca007d6fb2e9" translate="yes" xml:space="preserve">
          <source>The following table indicates each timezone and its location.</source>
          <target state="translated">以下の表は、各タイムゾーンとその位置を示しています。</target>
        </trans-unit>
        <trans-unit id="04f43f40c0fdd09b4dc7452b60915a1a4de09288" translate="yes" xml:space="preserve">
          <source>The font color, specified in hex. Both the full 6-length (ie, 993300) and the short three character abbreviated version (ie, fff) are supported.</source>
          <target state="translated">フ ォ ン ト の色を 16 進数で指定 し ます。完全な 6 文字長 (すなわち 993300)と短い 3 文字の短縮版 (すなわち fff)の両方がサポートされています。</target>
        </trans-unit>
        <trans-unit id="2d0a73ef112f5caf215171d7a45b56455ecfe80d" translate="yes" xml:space="preserve">
          <source>The form (Signup.php) is a standard web form with a couple of exceptions:</source>
          <target state="translated">フォーム (Signup.php)は、いくつかの例外を除いて標準的なウェブフォームです。</target>
        </trans-unit>
        <trans-unit id="fd3ccefc612790353a0125f8f6cb7ed191b94ef4" translate="yes" xml:space="preserve">
          <source>The form (myform.php) is a standard web form with a couple exceptions:</source>
          <target state="translated">フォーム (myform.php)は、いくつかの例外を除いて標準的なウェブフォームです。</target>
        </trans-unit>
        <trans-unit id="1bdc93b4e98d91956134727777637a365a12a80e" translate="yes" xml:space="preserve">
          <source>The form fields are not yet being re-populated with the data when there is an error. We&amp;rsquo;ll get to that shortly.</source>
          <target state="translated">エラーが発生した場合、フォームフィールドにはまだデータが再入力されていません。これについては後ほど説明します。</target>
        </trans-unit>
        <trans-unit id="39667a7e2af0504bf523f7c78c8fe44eb9c53ad5" translate="yes" xml:space="preserve">
          <source>The form that you are using must be a POST request. GET requests cannot be spoofed.</source>
          <target state="translated">使用しているフォームはPOSTリクエストでなければなりません。GETリクエストを偽装することはできません。</target>
        </trans-unit>
        <trans-unit id="01aa0984421463ddbb8d6f53a1796214b15fdc54" translate="yes" xml:space="preserve">
          <source>The format to use for timestamps when creating a migration.</source>
          <target state="translated">マイグレーションを作成する際にタイムスタンプに使用するフォーマット。</target>
        </trans-unit>
        <trans-unit id="b80d8fc7ed72421cb8b5d83d20df566a4a7fddc6" translate="yes" xml:space="preserve">
          <source>The former userdata method is deprecated, but you can pass an array containing your new session data to the &lt;code&gt;set()&lt;/code&gt; method:</source>
          <target state="translated">以前のuserdataメソッドは非推奨ですが、新しいセッションデータを含む配列を &lt;code&gt;set()&lt;/code&gt; メソッドに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="4a31fae67d3c364d9475667af2056af67beaf817" translate="yes" xml:space="preserve">
          <source>The fourth parameter lets you set one or more attributes on the generated select tag.</source>
          <target state="translated">4番目のパラメータでは、生成されたセレクトタグに1つ以上の属性を設定することができます。</target>
        </trans-unit>
        <trans-unit id="e6dde8d7606c9682badfcf3ed5d7228e202edfc8" translate="yes" xml:space="preserve">
          <source>The framework has a &lt;code&gt;phpunit.xml.dist&lt;/code&gt; file in the project root. This controls unit testing of the framework itself. If you provide your own &lt;code&gt;phpunit.xml&lt;/code&gt;, it will over-ride this.</source>
          <target state="translated">フレームワークのプロジェクトルートには &lt;code&gt;phpunit.xml.dist&lt;/code&gt; ファイルがあります。これは、フレームワーク自体の単体テストを制御します。独自の &lt;code&gt;phpunit.xml&lt;/code&gt; を提供すると、これが上書きされます。</target>
        </trans-unit>
        <trans-unit id="08077eb40a1b9be715db28b2c97e09e61637d883" translate="yes" xml:space="preserve">
          <source>The function expects the string passed to it to be the file path to the page that isn&amp;rsquo;t found. The exit status code will be set to &lt;code&gt;EXIT_UNKNOWN_FILE&lt;/code&gt;. Note that CodeIgniter automatically shows 404 messages if controllers are not found.</source>
          <target state="translated">この関数は、渡された文字列が、見つからないページへのファイルパスであると想定しています。終了ステータスコードは &lt;code&gt;EXIT_UNKNOWN_FILE&lt;/code&gt; に設定されます。コントローラが見つからない場合、CodeIgniterは自動的に404メッセージを表示することに注意してください。</target>
        </trans-unit>
        <trans-unit id="52491ca9b6871d45f846d3d1eb14c627cf3b340f" translate="yes" xml:space="preserve">
          <source>The function names in the above example are arbitrary. You&amp;rsquo;ll decide what they should be called on your server, or if you are using standardized APIs, like the Blogger or MetaWeblog API, you&amp;rsquo;ll use their function names.</source>
          <target state="translated">上記の例の関数名は任意です。サーバーで何を呼び出すかを決定するか、BloggerやMetaWeblog APIなどの標準化されたAPIを使用している場合は、それらの関数名を使用します。</target>
        </trans-unit>
        <trans-unit id="6a2804531e9a9d9e76a0b7a5a549a5abe2df32b8" translate="yes" xml:space="preserve">
          <source>The function result</source>
          <target state="translated">関数の結果</target>
        </trans-unit>
        <trans-unit id="21c65bd9c7c96d884334d083b0ea4d8822ef7247" translate="yes" xml:space="preserve">
          <source>The function returns NULL if the item you are trying to fetch does not exist.</source>
          <target state="translated">この関数は、取得しようとしている項目が存在しない場合には NULL を返します。</target>
        </trans-unit>
        <trans-unit id="1bd266cce94e26cfdb590b120fc1bc2feb5c63c3" translate="yes" xml:space="preserve">
          <source>The function uses PHP&amp;rsquo;s &lt;code&gt;highlight_string()&lt;/code&gt; function, so the colors used are the ones specified in your php.ini file.</source>
          <target state="translated">この関数はPHPの &lt;code&gt;highlight_string()&lt;/code&gt; 関数を使用するため、使用される色はphp.iniファイルで指定された色です。</target>
        </trans-unit>
        <trans-unit id="a5b78a9e5afcf27f53a72ee04f170eba8f2c43c8" translate="yes" xml:space="preserve">
          <source>The function will return a UNIX timestamp by default. You can, optionally, pass a format string (the same type as the PHP &lt;code&gt;date()&lt;/code&gt; function accepts) as the second parameter.</source>
          <target state="translated">この関数は、デフォルトでUNIXタイムスタンプを返します。オプションで、フォーマット文字列（PHPの &lt;code&gt;date()&lt;/code&gt; 関数が受け入れるタイプと同じタイプ）を2番目のパラメーターとして渡すことができます。</target>
        </trans-unit>
        <trans-unit id="e5abc553e483a62ea68f9195aba980dad53d8260" translate="yes" xml:space="preserve">
          <source>The function would return:</source>
          <target state="translated">関数が返ってきます。</target>
        </trans-unit>
        <trans-unit id="c8ddfc24b2e433df38c2faadd6a345c1e5ceb9c2" translate="yes" xml:space="preserve">
          <source>The functions within files loaded this way are not truly namespaced. The namespace is simply used as a convenient way to locate the files.</source>
          <target state="translated">この方法で読み込まれたファイル内の関数は、本当の意味でのネームスペースではありません。名前空間は単にファイルの位置を特定する便利な方法として使われています。</target>
        </trans-unit>
        <trans-unit id="d9871c656a6ccc1e8e1f85a940ea9c6d733b6993" translate="yes" xml:space="preserve">
          <source>The generated CSV file as a string</source>
          <target state="translated">生成されたCSVファイルを文字列で表示</target>
        </trans-unit>
        <trans-unit id="bdd69b583634902724c18b1b88353d8461a2fc1b" translate="yes" xml:space="preserve">
          <source>The generated XML document as a string</source>
          <target state="translated">文字列として生成されたXMLドキュメント</target>
        </trans-unit>
        <trans-unit id="ce932c166935c597d80ea5401b58114681852cd7" translate="yes" xml:space="preserve">
          <source>The guidelines for variable naming are very similar to those used for class methods. Variables should contain only lowercase letters, use underscore separators, and be reasonably named to indicate their purpose and contents. Very short, non-word variables should only be used as iterators in for() loops.</source>
          <target state="translated">変数の命名のガイドラインは、クラスメソッドで使用されるものと非常によく似ています。変数には小文字のみを使用し、アンダースコアの区切り文字を使用し、目的と内容を示すために適切な名前を付けなければなりません。非常に短く、単語ではない変数は、for()ループのイテレータとしてのみ使用します。</target>
        </trans-unit>
        <trans-unit id="3cb101ba06700359e387dc50a8cdc3d812f78651" translate="yes" xml:space="preserve">
          <source>The handlers are configured in the main configuration file, in the &lt;code&gt;$handlers&lt;/code&gt; property, which is simply an array of handlers and their configuration. Each handler is specified with the key being the fully name-spaced class name. The value will be an array of varying properties, specific to each handler. Each handler&amp;rsquo;s section will have one property in common: &lt;code&gt;handles&lt;/code&gt;, which is an array of log level &lt;em&gt;names&lt;/em&gt; that the handler will log information for.</source>
          <target state="translated">ハンドラーは、メイン構成ファイルの &lt;code&gt;$handlers&lt;/code&gt; プロパティで構成されます。これは、ハンドラーとその構成の配列にすぎません。各ハンドラーは、完全な名前間隔のクラス名であるキーで指定されます。値は、各ハンドラーに固有のさまざまなプロパティの配列になります。 ：各ハンドラの項では、一般的な1つのプロパティがあります &lt;code&gt;handles&lt;/code&gt; 、ログレベルの配列である&lt;em&gt;名前&lt;/em&gt;ハンドラがための情報を記録します。</target>
        </trans-unit>
        <trans-unit id="5d5c9f9de276d00743c41acac1d05f5b9e5fce02" translate="yes" xml:space="preserve">
          <source>The header contains the basic HTML code that you&amp;rsquo;ll want to display before loading the main view, together with a heading. It will also output the &lt;code&gt;$title&lt;/code&gt; variable, which we&amp;rsquo;ll define later in the controller. Now, create a footer at &lt;em&gt;application/views/templates/footer.php&lt;/em&gt; that includes the following code:</source>
          <target state="translated">ヘッダーには、メインビューを読み込む前に表示する基本的なHTMLコードと見出しが含まれています。また、後でコントローラーで定義する &lt;code&gt;$title&lt;/code&gt; 変数も出力します。次に、&lt;em&gt;application / views / templates / footer.php&lt;/em&gt;に次のコードを含むフッターを作成します。</target>
        </trans-unit>
        <trans-unit id="1104857f3e9351ca6467bf8be12316b1de342b8e" translate="yes" xml:space="preserve">
          <source>The header contains the basic HTML code that you&amp;rsquo;ll want to display before loading the main view, together with a heading. It will also output the &lt;code&gt;$title&lt;/code&gt; variable, which we&amp;rsquo;ll define later in the controller. Now, create a footer at &lt;strong&gt;app/Views/templates/footer.php&lt;/strong&gt; that includes the following code:</source>
          <target state="translated">ヘッダーには、メインビューをロードする前に表示する基本的なHTMLコードと、見出しが含まれています。また、 &lt;code&gt;$title&lt;/code&gt; 変数も出力します。これは、後でコントローラーで定義します。次に、&lt;strong&gt;app / Views / templates /footer.php&lt;/strong&gt;に次のコードを含むフッターを作成します。</target>
        </trans-unit>
        <trans-unit id="8d49fcce73ae0bddf832acc5746e6ccfa0c8441f" translate="yes" xml:space="preserve">
          <source>The header name is compared in a case-insensitive manner.</source>
          <target state="translated">ヘッダ名は大文字小文字を区別せずに比較されます。</target>
        </trans-unit>
        <trans-unit id="0f5f9bcdd8e6d09078f4373a02d8d61aa96d8429" translate="yes" xml:space="preserve">
          <source>The headers are any SERVER data that starts with &lt;code&gt;HTTP_&lt;/code&gt;, like &lt;code&gt;HTTP_HOST&lt;/code&gt;. Each message is converted from it&amp;rsquo;s standard uppercase and underscore format to a ucwords and dash format. The preceding &lt;code&gt;HTTP_&lt;/code&gt; is removed from the string. So &lt;code&gt;HTTP_ACCEPT_LANGUAGE&lt;/code&gt; becomes &lt;code&gt;Accept-Language&lt;/code&gt;.</source>
          <target state="translated">ヘッダーは、 &lt;code&gt;HTTP_HOST&lt;/code&gt; のように、 &lt;code&gt;HTTP_&lt;/code&gt; で始まる任意のSERVERデータです。各メッセージは、標準の大文字とアンダースコアの形式からucwordsとダッシュの形式に変換されます。先行する &lt;code&gt;HTTP_&lt;/code&gt; は文字列から削除されます。したがって、 &lt;code&gt;HTTP_ACCEPT_LANGUAGE&lt;/code&gt; は &lt;code&gt;Accept-Language&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="a7638da0639912e02dfb9eccf2c88a16870b31e7" translate="yes" xml:space="preserve">
          <source>The hooks feature can be globally enabled/disabled by setting the following item in the &lt;strong&gt;application/config/config.php&lt;/strong&gt; file:</source>
          <target state="translated">フック機能は、&lt;strong&gt;application / config / config.php&lt;/strong&gt;ファイルで次の項目を設定することにより、グローバルに有効/無効にできます。</target>
        </trans-unit>
        <trans-unit id="4c654984c63d0fa20a88504add9ba177ecdeac7b" translate="yes" xml:space="preserve">
          <source>The host portion of the URI is typically the domain name of the URL. This can be easily set and retrieved with the &lt;code&gt;getHost()&lt;/code&gt; and &lt;code&gt;setHost()&lt;/code&gt; methods:</source>
          <target state="translated">URIのホスト部分は通常、URLのドメイン名です。これは、 &lt;code&gt;getHost()&lt;/code&gt; &lt;code&gt;setHost()&lt;/code&gt; メソッドとsetHost（）メソッドを使用して簡単に設定および取得できます。</target>
        </trans-unit>
        <trans-unit id="df6396801dd61654c0e83ec596c7ddebe3edb770" translate="yes" xml:space="preserve">
          <source>The hostname of your database server. Often this is &amp;lsquo;localhost&amp;rsquo;.</source>
          <target state="translated">データベースサーバーのホスト名。多くの場合、これは「localhost」です。</target>
        </trans-unit>
        <trans-unit id="0aebc8754833439a1acbcb8301388afa8d21dcb2" translate="yes" xml:space="preserve">
          <source>The how-to material for this has been split over several articles. This article is intended to be a reference for them.</source>
          <target state="translated">そのためのハウツー素材は、いくつかの記事に分けています。この記事はそれらの参考にしていただきたいと思います。</target>
        </trans-unit>
        <trans-unit id="10376df67be505ba8e9463ca7c17e4cb80b35a05" translate="yes" xml:space="preserve">
          <source>The image resizing method lets you resize the original image, create a copy (with or without resizing), or create a thumbnail image.</source>
          <target state="translated">画像のリサイズ方法は、元の画像のサイズを変更したり、コピーを作成したり(リサイズの有無にかかわらず)、サムネイル画像を作成したりすることができます。</target>
        </trans-unit>
        <trans-unit id="2c976bbe58108e713610f39d5aa69861c86ed109" translate="yes" xml:space="preserve">
          <source>The image rotation method requires that the angle of rotation be set via its preference:</source>
          <target state="translated">画像の回転方法は、そのプリファレンスを介して回転角度を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="8fdafcb8cb62195638e4559d5ed893527a11364b" translate="yes" xml:space="preserve">
          <source>The image underneath shows your project&amp;rsquo;s &lt;strong&gt;app&lt;/strong&gt; folder, with all of the files that you created in green. The two modified configuration files (Database &amp;amp; Routes) are not shown.</source>
          <target state="translated">下の画像は、プロジェクトの&lt;strong&gt;アプリ&lt;/strong&gt;フォルダーを示しており、作成したすべてのファイルが緑色で表示されています。変更された2つの構成ファイル（データベースとルート）は表示されていません。</target>
        </trans-unit>
        <trans-unit id="80389f15c11e5149c916aca36b53b5185bca9b1c" translate="yes" xml:space="preserve">
          <source>The incoming Trackback data can be retrieved using this function:</source>
          <target state="translated">この機能を利用して、トラックバックの着信データを取得することができます。</target>
        </trans-unit>
        <trans-unit id="80ec92a1a464a1fcc2bea46f7e30b447762265af" translate="yes" xml:space="preserve">
          <source>The index.php serves as the front controller, initializing the base resources needed to run CodeIgniter.</source>
          <target state="translated">index.phpはフロントコントローラとして機能し、CodeIgniterの実行に必要な基本リソースを初期化します。</target>
        </trans-unit>
        <trans-unit id="3077913483f4614e977649f2cf7f82b900cbb223" translate="yes" xml:space="preserve">
          <source>The information returned and the structure of the data is dependent on which adapter is being used.</source>
          <target state="translated">返される情報とデータの構造は、どのアダプタを使用しているかに依存します。</target>
        </trans-unit>
        <trans-unit id="558f1414fd575b25dc49790a8061bfc9182f0b9a" translate="yes" xml:space="preserve">
          <source>The input item(s), escaped</source>
          <target state="translated">入力項目(複数可)、エスケープされた</target>
        </trans-unit>
        <trans-unit id="49e9887b1c73fc1e72bb9c5001b5ae6e2f743ce1" translate="yes" xml:space="preserve">
          <source>The input string with no image tags</source>
          <target state="translated">画像タグを含まない入力文字列</target>
        </trans-unit>
        <trans-unit id="9212f1fa0569fbe6233991c9667bb29366afe2cb" translate="yes" xml:space="preserve">
          <source>The insert ID number when performing database inserts.</source>
          <target state="translated">データベースへの挿入を行う際の挿入ID番号。</target>
        </trans-unit>
        <trans-unit id="150bc486d58804db5319d34ed61a0d9d61862ffd" translate="yes" xml:space="preserve">
          <source>The is the generic method used to represent a failed response, and is used by all of the other &amp;ldquo;fail&amp;rdquo; methods.</source>
          <target state="translated">これは、失敗した応答を表すために使用される一般的なメソッドであり、他のすべての「失敗」メソッドで使用されます。</target>
        </trans-unit>
        <trans-unit id="e350ada1ad275205322fd7940f332eaf7737d551" translate="yes" xml:space="preserve">
          <source>The is the name of the handler that should be used as the primary handler when starting up the engine. Available names are: dummy, file, memcached, redis, predis, wincache.</source>
          <target state="translated">エンジン起動時にプライマリハンドラとして使用するハンドラの名前です。利用可能な名前は、ダミー、ファイル、memcached、redis、predis、wincacheです。</target>
        </trans-unit>
        <trans-unit id="a1d0420200423635b7485c5060425cf3403be4f5" translate="yes" xml:space="preserve">
          <source>The issue has already been fixed (check the develop branch, or look for closed Issues)</source>
          <target state="translated">この問題はすでに修正されています (開発ブランチをチェックするか、クローズされた問題を探してください)</target>
        </trans-unit>
        <trans-unit id="0553ec938dd3c37b1436d16f2208f987d379e2f3" translate="yes" xml:space="preserve">
          <source>The jQuery Class</source>
          <target state="translated">jQuery クラス</target>
        </trans-unit>
        <trans-unit id="5c5b314d7e1ba8d8727e693dd7c92c8a25558c2a" translate="yes" xml:space="preserve">
          <source>The key can be either stored in your &lt;em&gt;application/config/config.php&lt;/em&gt;, or you can design your own storage mechanism and pass the key dynamically when encrypting/decrypting.</source>
          <target state="translated">キーは&lt;em&gt;application / config / config.php&lt;/em&gt;に保存するか、独自のストレージメカニズムを設計して、暗号化/復号化時にキーを動的に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="09ed7b267c5e0615866a641192b1f036b98122cb" translate="yes" xml:space="preserve">
          <source>The key can be stored in &lt;em&gt;app/Config/Encryption.php&lt;/em&gt;, or you can design a storage mechanism of your own and pass the key dynamically when encrypting/decrypting.</source>
          <target state="translated">キーは&lt;em&gt;app / Config / Encryption.php&lt;/em&gt;に保存できます。または、独自のストレージメカニズムを設計して、暗号化/復号化時にキーを動的に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="a469999a3348b685e6c5a8689130293bd5651a41" translate="yes" xml:space="preserve">
          <source>The key of each row is the name of the class that you want to locate. The value is the path to locate it at.</source>
          <target state="translated">各行のキーは、場所を特定したいクラスの名前です。値は、その場所を特定するためのパスです。</target>
        </trans-unit>
        <trans-unit id="23262a32c34ce04efc37fde9caec316dd1faa5cc" translate="yes" xml:space="preserve">
          <source>The key of each row is the namespace itself. This does not need a trailing slash. If you use double-quotes to define the array, be sure to escape the backward slash. That means that it would be &lt;code&gt;My\\App&lt;/code&gt;, not &lt;code&gt;My\App&lt;/code&gt;. The value is the location to the directory the classes can be found in. They should have a trailing slash.</source>
          <target state="translated">各行のキーは名前空間自体です。これには、末尾のスラッシュは必要ありません。二重引用符を使用して配列を定義する場合は、必ず円記号をエスケープしてください。つまり、 &lt;code&gt;My\App&lt;/code&gt; ではなく、 &lt;code&gt;My\\App&lt;/code&gt; になります。値は、クラスを見つけることができるディレクトリの場所です。末尾にスラッシュを付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="1ae3ee8751e1180a74eb1a18f5d22e997e658d1a" translate="yes" xml:space="preserve">
          <source>The key should be as random as possible and it &lt;strong&gt;must not&lt;/strong&gt; be a regular text string, nor the output of a hashing function, etc. In order to create a proper key, you must use the Encryption library&amp;rsquo;s &lt;code&gt;create_key()&lt;/code&gt; method</source>
          <target state="translated">キーは可能な限りランダムである&lt;strong&gt;必要が&lt;/strong&gt;あり、通常のテキスト文字列やハッシュ関数の出力などであってはなりません。適切なキーを作成するには、暗号化ライブラリの &lt;code&gt;create_key()&lt;/code&gt; メソッドを使用する必要があります</target>
        </trans-unit>
        <trans-unit id="753c83ed33b33d86a102014450df4b250f040de3" translate="yes" xml:space="preserve">
          <source>The key should be as random as possible, and it &lt;strong&gt;must not&lt;/strong&gt; be a regular text string, nor the output of a hashing function, etc. To create a proper key, you can use the Encryption library&amp;rsquo;s &lt;code&gt;createKey()&lt;/code&gt; method.</source>
          <target state="translated">キーは可能な限りランダムである&lt;strong&gt;必要が&lt;/strong&gt;あり、通常のテキスト文字列やハッシュ関数の出力などであって&lt;strong&gt;はなりません&lt;/strong&gt;。適切なキーを作成するには、暗号化ライブラリの &lt;code&gt;createKey()&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="a5891cdaa7022e4817317e150369c0589f171ab5" translate="yes" xml:space="preserve">
          <source>The key thing to notice in the above example is that the second query did not utilize &lt;code&gt;$builder-&amp;gt;from()&lt;/code&gt; nor did it pass a table name into the first parameter. The reason this worked is that the query has not been executed using &lt;code&gt;$builder-&amp;gt;insert()&lt;/code&gt; which resets values or reset directly using &lt;code&gt;$builder-&amp;gt;resetQuery()&lt;/code&gt;.</source>
          <target state="translated">上記の例で注目すべき重要な点は、2番目のクエリが &lt;code&gt;$builder-&amp;gt;from()&lt;/code&gt; 利用しておらず、最初のパラメータにテーブル名を渡していないことです。これが機能した理由は、値をリセット &lt;code&gt;$builder-&amp;gt;insert()&lt;/code&gt; を使用してクエリが実行されていないか、 &lt;code&gt;$builder-&amp;gt;resetQuery()&lt;/code&gt; を使用して直接リセットされていないためです。</target>
        </trans-unit>
        <trans-unit id="aa4f3c3df037fefd43f2b27f603273634fa9c5d4" translate="yes" xml:space="preserve">
          <source>The key thing to notice in the above example is that the second query did not utilize &lt;code&gt;$this-&amp;gt;db-&amp;gt;from()&lt;/code&gt; nor did it pass a table name into the first parameter. The reason this worked is because the query has not been executed using &lt;code&gt;$this-&amp;gt;db-&amp;gt;insert()&lt;/code&gt; which resets values or reset directly using &lt;code&gt;$this-&amp;gt;db-&amp;gt;reset_query()&lt;/code&gt;.</source>
          <target state="translated">上記の例で注目すべき重要な点は、2番目のクエリが &lt;code&gt;$this-&amp;gt;db-&amp;gt;from()&lt;/code&gt; 使用せず、最初のパラメータにテーブル名を渡さなかったことです。これが機能した理由は、値をリセットするか、 &lt;code&gt;$this-&amp;gt;db-&amp;gt;reset_query()&lt;/code&gt; を使用して直接リセットする &lt;code&gt;$this-&amp;gt;db-&amp;gt;insert()&lt;/code&gt; を使用してクエリが実行されていないためです。</target>
        </trans-unit>
        <trans-unit id="b9fd9e6083ad91a7e77a1d8edd8a0bb27418e088" translate="yes" xml:space="preserve">
          <source>The key thing to notice in the above example is that the second query did not utilize &lt;strong&gt;$builder-&amp;gt;from()&lt;/strong&gt; and did not pass a table name into the first parameter. The reason for this outcome is because the query has not been executed using &lt;strong&gt;$builder-&amp;gt;get()&lt;/strong&gt; which resets values or reset directly using &lt;strong&gt;$builder-&amp;gt;resetQuery()&lt;/strong&gt;.</source>
          <target state="translated">上記の例で注目すべき重要な点は、2番目のクエリが&lt;strong&gt;$ builder-&amp;gt; from（）&lt;/strong&gt;を利用せず、最初のパラメータにテーブル名を渡さなかったことです。この結果の理由は、値をリセットする&lt;strong&gt;$ builder-&amp;gt; get（）&lt;/strong&gt;を使用してクエリが実行されていないか、&lt;strong&gt;$ builder-&amp;gt; resetQuery（）&lt;/strong&gt;を使用して直接リセットされていないためです。</target>
        </trans-unit>
        <trans-unit id="d2f0801c3934d2d9df504dc9e3076c53074a8ee1" translate="yes" xml:space="preserve">
          <source>The key thing to notice in the above example is that the second query did not utilize &lt;strong&gt;$this-&amp;gt;db-&amp;gt;from()&lt;/strong&gt; and did not pass a table name into the first parameter. The reason for this outcome is because the query has not been executed using &lt;strong&gt;$this-&amp;gt;db-&amp;gt;get()&lt;/strong&gt; which resets values or reset directly using &lt;strong&gt;$this-&amp;gt;db-&amp;gt;reset_query()&lt;/strong&gt;.</source>
          <target state="translated">上記の例で重要なのは、2番目のクエリが&lt;strong&gt;$ this-&amp;gt; db-&amp;gt; from（）&lt;/strong&gt;を使用せず、テーブル名を最初のパラメーターに渡さなかったことです。この結果の理由は、値をリセットするか、&lt;strong&gt;$ this-&amp;gt; db-&amp;gt; reset_query（）&lt;/strong&gt;を使用して直接リセットする&lt;strong&gt;$ this-&amp;gt; db-&amp;gt; get（）&lt;/strong&gt;を使用してクエリが実行されていないためです。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d0d4211215dcc13f9aaccf29e1f7d95f1d15217f" translate="yes" xml:space="preserve">
          <source>The key types may be unique to the database you are using. For instance, MySQL will return one of primary, fulltext, spatial, index or unique for each key associated with a table.</source>
          <target state="translated">キータイプは、使用しているデータベースに固有のものである可能性があります。例えば、MySQLは、テーブルに関連付けられた各キーに対して、プライマリ、フルテキスト、空間、インデックス、またはユニークのいずれかを返します。</target>
        </trans-unit>
        <trans-unit id="25a44a74534adf32b4f0a86ef9eb65c797103dcb" translate="yes" xml:space="preserve">
          <source>The language line; in an HTML label tag, if the &lt;code&gt;$for&lt;/code&gt; parameter is not empty</source>
          <target state="translated">言語行。 &lt;code&gt;$for&lt;/code&gt; パラメータが空でない場合、HTML ラベルタグ内</target>
        </trans-unit>
        <trans-unit id="9bdd4ad0521fcea00db9d3fd3c1e10ac38ec7c13" translate="yes" xml:space="preserve">
          <source>The last query executed</source>
          <target state="translated">最後に実行されたクエリ</target>
        </trans-unit>
        <trans-unit id="0ea63f90d3e983bcbba62336f7eec0bbb2cf8dab" translate="yes" xml:space="preserve">
          <source>The last thing that has to be done is loading the views in the order they should be displayed. The &lt;code&gt;view()&lt;/code&gt; function built-in to CodeIgniter will be used to do this. The second parameter in the &lt;code&gt;view()&lt;/code&gt; function is used to pass values to the view. Each value in the &lt;code&gt;$data&lt;/code&gt; array is assigned to a variable with the name of its key. So the value of &lt;code&gt;$data['title']&lt;/code&gt; in the controller is equivalent to &lt;code&gt;$title&lt;/code&gt; in the view.</source>
          <target state="translated">最後に行う必要があるのは、表示する順序でビューをロードすることです。 &lt;code&gt;view()&lt;/code&gt; 関数は、内蔵のCodeIgniterにこれを実行するために使用されます。 &lt;code&gt;view()&lt;/code&gt; 関数の2番目のパラメーターは、ビューに値を渡すために使用されます。 &lt;code&gt;$data&lt;/code&gt; 配列の各値は、そのキーの名前を持つ変数に割り当てられます。したがって、コントローラーの &lt;code&gt;$data['title']&lt;/code&gt; の値は、ビューの &lt;code&gt;$title&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="f2222d874075ce2681bad72a3aac22f453e39316" translate="yes" xml:space="preserve">
          <source>The last thing that has to be done is loading the views in the order they should be displayed. The second parameter in the &lt;code&gt;view()&lt;/code&gt; method is used to pass values to the view. Each value in the &lt;code&gt;$data&lt;/code&gt; array is assigned to a variable with the name of its key. So the value of &lt;code&gt;$data['title']&lt;/code&gt; in the controller is equivalent to &lt;code&gt;$title&lt;/code&gt; in the view.</source>
          <target state="translated">最後に、表示する順序でビューをロードする必要があります。 &lt;code&gt;view()&lt;/code&gt; メソッドの2番目のパラメーターは、ビューに値を渡すために使用されます。 &lt;code&gt;$data&lt;/code&gt; 配列の各値は、キーの名前を持つ変数に割り当てられます。したがって、コントローラーの &lt;code&gt;$data['title']&lt;/code&gt; の値は、ビューの &lt;code&gt;$title&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="ec485c5e9843d82e933e933d5435649b39e36ccc" translate="yes" xml:space="preserve">
          <source>The library can be loaded either manually or through the &lt;a href=&quot;../concepts/services&quot;&gt;Services class&lt;/a&gt;.</source>
          <target state="translated">ライブラリは、手動または&lt;a href=&quot;../concepts/services&quot;&gt;Servicesクラスを&lt;/a&gt;介してロードできます。</target>
        </trans-unit>
        <trans-unit id="3237b2c65cfab43b20821d260e53d157e2ab7901" translate="yes" xml:space="preserve">
          <source>The library is loaded as a service named &lt;strong&gt;validation&lt;/strong&gt;:</source>
          <target state="translated">ライブラリは、&lt;strong&gt;validation&lt;/strong&gt;という名前のサービスとしてロードされます。</target>
        </trans-unit>
        <trans-unit id="437e34af2cd7cf02f6bf6385613203ccc52d0b9b" translate="yes" xml:space="preserve">
          <source>The line &lt;code&gt;$routes-&amp;gt;get('/', 'Home::index');&lt;/code&gt; is an optimization that you will want to use in a &amp;ldquo;real-world&amp;rdquo; app. But for demonstration purposes we don&amp;rsquo;t want to use that feature. &lt;code&gt;$routes-&amp;gt;get()&lt;/code&gt; is explained in &lt;a href=&quot;routing&quot;&gt;URI Routing&lt;/a&gt;</source>
          <target state="translated">行 &lt;code&gt;$routes-&amp;gt;get('/', 'Home::index');&lt;/code&gt; は、「実際の」アプリで使用する最適化です。ただし、デモンストレーションの目的では、その機能は使用しません。 &lt;code&gt;$routes-&amp;gt;get()&lt;/code&gt; は&lt;a href=&quot;routing&quot;&gt;URIルーティングで&lt;/a&gt;説明されています</target>
        </trans-unit>
        <trans-unit id="24ddc6509b246409f3fa5d8704c83ce06c9551d3" translate="yes" xml:space="preserve">
          <source>The line in {file} where the logger was called</source>
          <target state="translated">ロガーが呼び出された {file}の行</target>
        </trans-unit>
        <trans-unit id="e166e771e3aceb54d357f531534fbca648344d91" translate="yes" xml:space="preserve">
          <source>The link will explain why and how.</source>
          <target state="translated">リンク先では、その理由と方法を説明しています。</target>
        </trans-unit>
        <trans-unit id="e64c37dccad36bdcdf522170820d76056752dc94" translate="yes" xml:space="preserve">
          <source>The list of changed files follows, with PR numbers shown.</source>
          <target state="translated">変更されたファイルのリストは以下の通りで、PR番号が表示されています。</target>
        </trans-unit>
        <trans-unit id="7fedf61779a452f44d7db2b974f78cab5c147d13" translate="yes" xml:space="preserve">
          <source>The local configuration file, &lt;code&gt;.env&lt;/code&gt;, that you created when you installed CodeIgniter, should have the database property settings uncommented and set appropriately for the database you want to use. Make sure you&amp;rsquo;ve configured your database properly as described &lt;a href=&quot;../database/configuration&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">CodeIgniterのインストール時に作成したローカル構成ファイル &lt;code&gt;.env&lt;/code&gt; では、データベースプロパティ設定のコメントを解除し、使用するデータベースに適切に設定する必要があります。&lt;a href=&quot;../database/configuration&quot;&gt;ここで&lt;/a&gt;説明されているように、データベースが適切に構成されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="b6cca551f8691da5d0259c0df392b3d0b9654a9b" translate="yes" xml:space="preserve">
          <source>The local development server can be customized with three command line options:</source>
          <target state="translated">ローカル開発サーバーは、3つのコマンドラインオプションでカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="9030c764b7570c0017e94f832ae698d5c4a07a3b" translate="yes" xml:space="preserve">
          <source>The logging system can support multiple methods of handling logging running at the same time. Each handler can be set to handle specific levels and ignore the rest. Currently, two handlers come with a default install:</source>
          <target state="translated">ロギングシステムは、同時に実行されているロギングを処理する複数の方法をサポートすることができます。各ハンドラは特定のレベルを処理し、残りを無視するように設定することができます。現在、2つのハンドラがデフォルトでインストールされています。</target>
        </trans-unit>
        <trans-unit id="7dab4b11bad5fdc9c996572941308e37711644b4" translate="yes" xml:space="preserve">
          <source>The logging system does not provide ways to alert sysadmins or webmasters about these events, they solely log the information. For many of the more critical event levels, the logging happens automatically by the Error Handler, described above.</source>
          <target state="translated">ロギングシステムは、これらのイベントについて sysadmins や webmaster に警告する方法を提供せず、もっぱら情報をログに記録します。より重要なイベントレベルの多くについては、上記で説明したエラーハンドラによって自動的にロギングが行われます。</target>
        </trans-unit>
        <trans-unit id="28f1f8517839ec30ee6447877c3fdd85ae47c801" translate="yes" xml:space="preserve">
          <source>The mail sending protocol.</source>
          <target state="translated">メール送信プロトコル。</target>
        </trans-unit>
        <trans-unit id="ae4aae8cdd112f6dffc1c3f8f997c28a8acf7f1c" translate="yes" xml:space="preserve">
          <source>The main benefit of using this tag rather than hard coding your own HTML is that it permits your site to be more portable in the event your URLs ever change.</source>
          <target state="translated">独自のHTMLをハードコーディングするよりも、このタグを使用する主な利点は、URLが変更された場合でもサイトをよりポータブルにすることができるということです。</target>
        </trans-unit>
        <trans-unit id="aecca227b0bff54b0e7c1462ea7799d71473dd5f" translate="yes" xml:space="preserve">
          <source>The main methods are:</source>
          <target state="translated">主な方法は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="f2d1f45e09adf86dbf426a676c2e7c5cc49ad230" translate="yes" xml:space="preserve">
          <source>The maximum height (in pixels) that the image can be. Set to zero for no limit.</source>
          <target state="translated">画像ができる最大の高さ(ピクセル単位)。制限がない場合はゼロに設定します。</target>
        </trans-unit>
        <trans-unit id="e27b7e311ef8b220525ed0a96f9f84b210e3ae15" translate="yes" xml:space="preserve">
          <source>The maximum length that a file name can be. Set to zero for no limit.</source>
          <target state="translated">ファイル名の最大長を指定します。制限がない場合はゼロに設定します。</target>
        </trans-unit>
        <trans-unit id="8c684eeb3687c52ad35b7455fad7a3eb0787a763" translate="yes" xml:space="preserve">
          <source>The maximum size (in kilobytes) that the file can be. Set to zero for no limit. Note: Most PHP installations have their own limit, as specified in the php.ini file. Usually 2 MB (or 2048 KB) by default.</source>
          <target state="translated">ファイルの最大サイズ(キロバイト単位)。制限がない場合はゼロに設定します。注意:ほとんどの PHP インストールでは、php.ini ファイルで指定されているように独自の制限を設けています。通常、デフォルトでは 2 MB (または 2048 KB)です。</target>
        </trans-unit>
        <trans-unit id="8561b5b89ff91c55a3b3f15059aa29d069cccfd2" translate="yes" xml:space="preserve">
          <source>The maximum width (in pixels) that the image can be. Set to zero for no limit.</source>
          <target state="translated">画像ができる最大幅(ピクセル単位)。制限がない場合はゼロに設定します。</target>
        </trans-unit>
        <trans-unit id="f8cdbcce3c05daa9daa62ff4cfe85ced93e75bd8" translate="yes" xml:space="preserve">
          <source>The message is displayed using the &lt;em&gt;application/views/errors/error_db.php&lt;/em&gt; template.</source>
          <target state="translated">メッセージは、&lt;em&gt;application / views / errors / error_db.php&lt;/em&gt;テンプレートを使用して表示されます。</target>
        </trans-unit>
        <trans-unit id="ad99b817d16128a8681fc8e6364fc5962b4101ac" translate="yes" xml:space="preserve">
          <source>The method on the server you wish to call</source>
          <target state="translated">呼び出したいサーバー上のメソッド</target>
        </trans-unit>
        <trans-unit id="fd348990b06f4da14d822afa2085f9b8eb11f5e0" translate="yes" xml:space="preserve">
          <source>The method returns NULL if the item you are attempting to retrieve does not exist.</source>
          <target state="translated">このメソッドは、取得しようとしているアイテムが存在しない場合はNULLを返します。</target>
        </trans-unit>
        <trans-unit id="fb571fa01cf46778ed65292e759c487b03f0ee94" translate="yes" xml:space="preserve">
          <source>The method returns null if the item you are attempting to retrieve does not exist.</source>
          <target state="translated">取得しようとしているアイテムが存在しない場合、このメソッドはnullを返します。</target>
        </trans-unit>
        <trans-unit id="4534beebd587f58eddb7e70bf58aceffeeb45e50" translate="yes" xml:space="preserve">
          <source>The method would return this:</source>
          <target state="translated">メソッドはこれを返します。</target>
        </trans-unit>
        <trans-unit id="caca297492dace29dba9ab37dfa338ed78f39252" translate="yes" xml:space="preserve">
          <source>The methods in the above example use the &lt;a href=&quot;../database/query_builder&quot;&gt;Query Builder&lt;/a&gt; database methods.</source>
          <target state="translated">上記の例のメソッドは、&lt;a href=&quot;../database/query_builder&quot;&gt;クエリビルダー&lt;/a&gt;データベースメソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="95a6966cd06640067783b247a897c344ecf92c4a" translate="yes" xml:space="preserve">
          <source>The methods provided by the parent class that are available are:</source>
          <target state="translated">利用可能な親クラスが提供するメソッドは、以下の通りです。</target>
        </trans-unit>
        <trans-unit id="4feb2d9128d81504069506478f654f7c29436710" translate="yes" xml:space="preserve">
          <source>The methods provided by the parent classes that are available are:</source>
          <target state="translated">利用可能な親クラスが提供するメソッドは、以下の通りです。</target>
        </trans-unit>
        <trans-unit id="aec412493502a05968cbe33c0a296f5004cdf578" translate="yes" xml:space="preserve">
          <source>The migration library can automatically scan all namespaces you have defined within &lt;strong&gt;app/Config/Autoload.php&lt;/strong&gt; or loaded from an external source like Composer, using the &lt;code&gt;$psr4&lt;/code&gt; property for matching directory names. It will include all migrations it finds in Database/Migrations.</source>
          <target state="translated">移行ライブラリは、&lt;strong&gt;app / Config / Autoload.php&lt;/strong&gt;内で定義した、またはComposerなどの外部ソースからロードしたすべての名前空間を、ディレクトリ名を照合するための &lt;code&gt;$psr4&lt;/code&gt; プロパティを使用して自動的にスキャンできます。データベース/移行で見つかったすべての移行が含まれます。</target>
        </trans-unit>
        <trans-unit id="c73f7bbb53a3dd15636e3e23cd82e408d27b0ccb" translate="yes" xml:space="preserve">
          <source>The mime types corresponding to the types of files you allow to be uploaded. Usually the file extension can be used as the mime type. Can be either an array or a pipe-separated string.</source>
          <target state="translated">アップロードを許可するファイルの種類に対応するマイムタイプです。通常、ファイルの拡張子を MIME タイプとして使用することができます。配列かパイプで区切られた文字列のどちらかになります。</target>
        </trans-unit>
        <trans-unit id="6fa0b2708db1fa024e347caabbbacf6146c02854" translate="yes" xml:space="preserve">
          <source>The minimum height (in pixels) that the image can be. Set to zero for no limit.</source>
          <target state="translated">画像ができる最小の高さ(ピクセル単位)。制限がない場合はゼロに設定します。</target>
        </trans-unit>
        <trans-unit id="844a3201e5442ea82fff6b080ffb397af4fd3f29" translate="yes" xml:space="preserve">
          <source>The minimum width (in pixels) that the image can be. Set to zero for no limit.</source>
          <target state="translated">画像ができる最小の幅(ピクセル単位)。制限がない場合はゼロに設定します。</target>
        </trans-unit>
        <trans-unit id="25fd736a1385ee209b180e7946058053c72c913f" translate="yes" xml:space="preserve">
          <source>The model class has a few configuration options that can be set to allow the class&amp;rsquo; methods to work seamlessly for you. The first two are used by all of the CRUD methods to determine what table to use and how we can find the required records:</source>
          <target state="translated">モデルクラスには、クラスのメソッドがシームレスに機能するように設定できるいくつかの構成オプションがあります。最初の2つは、使用するテーブルと必要なレコードを見つける方法を決定するために、すべてのCRUDメソッドで使用されます。</target>
        </trans-unit>
        <trans-unit id="f099beb58438c3bd2ed10b82c957400c2ae0216e" translate="yes" xml:space="preserve">
          <source>The model provides a simple method to replace parts of your rules based on data that&amp;rsquo;s being passed into it. This sounds fairly obscure but can be especially handy with the &lt;code&gt;is_unique&lt;/code&gt; validation rule. Placeholders are simply the name of the field (or array key) that was passed in as $data surrounded by curly brackets. It will be replaced by the &lt;strong&gt;value&lt;/strong&gt; of the matched incoming field. An example should clarify this:</source>
          <target state="translated">モデルは、渡されるデータに基づいてルールの一部を置き換える簡単な方法を提供します。これはかなりあいまいに聞こえますが、 &lt;code&gt;is_unique&lt;/code&gt; 検証ルールを使用すると特に便利です。プレースホルダーは、中括弧で囲まれた$ dataとして渡されたフィールド（または配列キー）の名前です。一致した入力フィールドの&lt;strong&gt;値&lt;/strong&gt;に置き換えられます。例でこれを明確にする必要があります。</target>
        </trans-unit>
        <trans-unit id="9b597d2c77e07f9d01a18dafe02ba247c2277403" translate="yes" xml:space="preserve">
          <source>The model uses the &lt;code&gt;users&lt;/code&gt; table in the database for all of its activities. We&amp;rsquo;ve set the &lt;code&gt;$allowedFields&lt;/code&gt; property to include all of the fields that we want outside classes to change. The &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;created_at&lt;/code&gt;, and &lt;code&gt;updated_at&lt;/code&gt; fields are handled automatically by the class or the database, so we don&amp;rsquo;t want to change those. Finally, we&amp;rsquo;ve set our Entity class as the &lt;code&gt;$returnType&lt;/code&gt;. This ensures that all methods on the model that return rows from the database will return instances of our User Entity class instead of an object or array like normal.</source>
          <target state="translated">モデルは、すべてのアクティビティにデータベースの &lt;code&gt;users&lt;/code&gt; テーブルを使用します。 &lt;code&gt;$allowedFields&lt;/code&gt; プロパティを設定して、外部クラスで変更するすべてのフィールドを含めました。 &lt;code&gt;id&lt;/code&gt; 、 &lt;code&gt;created_at&lt;/code&gt; と &lt;code&gt;updated_at&lt;/code&gt; の我々はそれらを変更したくないので、フィールドは、クラスまたはデータベースによって自動的に処理されます。最後に、Entityクラスを &lt;code&gt;$returnType&lt;/code&gt; として設定しました。これにより、データベースから行を返すモデル上のすべてのメソッドが、通常のようなオブジェクトや配列ではなく、UserEntityクラスのインスタンスを返すようになります。</target>
        </trans-unit>
        <trans-unit id="c6490dc23173f2910818bba617390f7ea09c1a6b" translate="yes" xml:space="preserve">
          <source>The modified item</source>
          <target state="translated">修正された項目</target>
        </trans-unit>
        <trans-unit id="601234d7d85373c0836727861df1c6d67c755b1c" translate="yes" xml:space="preserve">
          <source>The most common purpose for this function is to show how much time has elapsed from some point in time in the past to now.</source>
          <target state="translated">この機能の最も一般的な目的は、過去のある時点から現在までの時間の経過を示すことである。</target>
        </trans-unit>
        <trans-unit id="e3e86b66ccbedfaa15f693f6d931758de264c03f" translate="yes" xml:space="preserve">
          <source>The move() method returns a new File instance that for the relocated file, so you must capture the result if the resulting location is needed:</source>
          <target state="translated">move()メソッドは、再配置されたファイルの新しい File インスタンスを返すので、結果の場所が必要な場合は結果をキャプチャする必要があります。</target>
        </trans-unit>
        <trans-unit id="dd74830ae16e193a43b39b75abb22ce1660c7e19" translate="yes" xml:space="preserve">
          <source>The name &amp;lsquo;test&amp;rsquo; is arbitrary. It can be anything you want. By default we&amp;rsquo;ve used the word &amp;ldquo;default&amp;rdquo; for the primary connection, but it too can be renamed to something more relevant to your project.</source>
          <target state="translated">「テスト」という名前は任意です。それはあなたが欲しいものにすることができます。デフォルトでは、プライマリ接続に「デフォルト」という言葉を使用しましたが、プロジェクトに関連する名前に変更することもできます。</target>
        </trans-unit>
        <trans-unit id="690f866e99a35076400ba57e71194aa0d2d21dbf" translate="yes" xml:space="preserve">
          <source>The name is not case-sensitive, but otherwise must match the name you gave it when you started the timer.</source>
          <target state="translated">名前は大文字小文字を区別しませんが、そうでない場合はタイマーを開始したときに付けた名前と一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="132b2f105b2546d78029936bb136e751e679787b" translate="yes" xml:space="preserve">
          <source>The name of file calling the logger</source>
          <target state="translated">ロガーを呼び出すファイル名</target>
        </trans-unit>
        <trans-unit id="11d3f6a2466d769185690fe7bebb76eabf741351" translate="yes" xml:space="preserve">
          <source>The name of the backed-up file. The name is needed only if you are using zip compression.</source>
          <target state="translated">バックアップされたファイルの名前です。この名前は、zip圧縮を使用している場合にのみ必要です。</target>
        </trans-unit>
        <trans-unit id="ba2f77557f731202ccef28d0e22b8e49d260c9be" translate="yes" xml:space="preserve">
          <source>The name of the class property is the connection name, and can be used while connecting to specify a group name.</source>
          <target state="translated">クラスプロパティの名前は接続名で、接続中に使用してグループ名を指定することができます。</target>
        </trans-unit>
        <trans-unit id="0fe0e5ff772813760860997ad17850aaaafb7ffa" translate="yes" xml:space="preserve">
          <source>The name of the current CSRF token.</source>
          <target state="translated">現在の CSRF トークンの名前。</target>
        </trans-unit>
        <trans-unit id="4a3b5f90cd9b5c05c9eaa7296ab95ee63785417d" translate="yes" xml:space="preserve">
          <source>The name of the database you want to connect to.</source>
          <target state="translated">接続したいデータベースの名前です。</target>
        </trans-unit>
        <trans-unit id="c30c6bf1d5bec2f16fb29f7fd770528e1a6e99eb" translate="yes" xml:space="preserve">
          <source>The name of the header for current CSRF token.</source>
          <target state="translated">現在の CSRF トークンのヘッダの名前です。</target>
        </trans-unit>
        <trans-unit id="f2f623cfdcee233c0ea961e03977fdc2a4adc70a" translate="yes" xml:space="preserve">
          <source>The name of the platform in use (mysql, mssql, etc&amp;hellip;).</source>
          <target state="translated">使用中のプラットフォームの名前（mysql、mssqlなど&amp;hellip;）。</target>
        </trans-unit>
        <trans-unit id="db2f71a3131e4833fad3edd3be5e9818cff8e4cd" translate="yes" xml:space="preserve">
          <source>The name used for the session cookie.</source>
          <target state="translated">セッション・クッキーに使用される名前。</target>
        </trans-unit>
        <trans-unit id="a5e5e70e4bfe3363748b428c08a69eb8d4544276" translate="yes" xml:space="preserve">
          <source>The new namespace is only applied during that call for any methods that create a single route, like get, post, etc. For any methods that create multiple routes, the new namespace is attached to all routes generated by that function or, in the case of &lt;code&gt;group()&lt;/code&gt;, all routes generated while in the closure.</source>
          <target state="translated">新しい名前空間は、get、postなど、単一のルートを作成するメソッドの呼び出し中にのみ適用されます。複数のルートを作成するメソッドの場合、新しい名前空間は、その関数によって生成されたすべてのルートにアタッチされます。 &lt;code&gt;group()&lt;/code&gt; 、すべてのルートが閉鎖にある間に生成します。</target>
        </trans-unit>
        <trans-unit id="bb43db58a21f739d8773553b65de6eca31796617" translate="yes" xml:space="preserve">
          <source>The news overview page is now done, but a page to display individual news items is still absent. The model created earlier is made in such a way that it can easily be used for this functionality. You only need to add some code to the controller and create a new view. Go back to the &lt;code&gt;News&lt;/code&gt; controller and update the &lt;code&gt;view()&lt;/code&gt; method with the following:</source>
          <target state="translated">ニュースの概要ページは完成しましたが、個々のニュース項目を表示するページはまだありません。以前に作成されたモデルは、この機能に簡単に使用できるように作成されています。コントローラにコードを追加して、新しいビューを作成するだけです。 &lt;code&gt;News&lt;/code&gt; コントローラーに戻り、 &lt;code&gt;view()&lt;/code&gt; メソッドを次のように更新します。</target>
        </trans-unit>
        <trans-unit id="fb4d5f9fb4eee671c1dd2ac352c6ecf51da2c499" translate="yes" xml:space="preserve">
          <source>The news overview page is now done, but a page to display individual news items is still absent. The model created earlier is made in such way that it can easily be used for this functionality. You only need to add some code to the controller and create a new view. Go back to the &lt;code&gt;News&lt;/code&gt; controller and update &lt;code&gt;view()&lt;/code&gt; with the following:</source>
          <target state="translated">これでニュース概要ページは完成しましたが、個々のニュース項目を表示するページはまだありません。前に作成したモデルは、この機能で簡単に使用できるように作成されています。コントローラーにコードを追加して、新しいビューを作成するだけです。 &lt;code&gt;News&lt;/code&gt; コントローラーに戻り、 &lt;code&gt;view()&lt;/code&gt; を次のように更新します。</target>
        </trans-unit>
        <trans-unit id="7259c69ce66170724477bab0adf43aed0452f4a2" translate="yes" xml:space="preserve">
          <source>The number as the appropriate currency for the locale</source>
          <target state="translated">ロケールに適した通貨としての数値</target>
        </trans-unit>
        <trans-unit id="ac95f42869160b1ade785dea40191814238fe7d3" translate="yes" xml:space="preserve">
          <source>The number of &amp;ldquo;digit&amp;rdquo; links you would like before and after the selected page number. For example, the number 2 will place two digits on either side, as in the example links at the very top of this page.</source>
          <target state="translated">選択したページ番号の前後に必要な「数字」リンクの数。たとえば、このページの最上部にあるリンクの例のように、数字の2は両側に2桁の数字を配置します。</target>
        </trans-unit>
        <trans-unit id="b4dbdbd5ab0c5fb515d98d43c9cc194725c8dc31" translate="yes" xml:space="preserve">
          <source>The number of FIELDS (columns) returned by the query. Make sure to call the method using your query result object:</source>
          <target state="translated">クエリによって返された FIELDS (カラム)の数。クエリ結果オブジェクトを使用してメソッドを呼び出すようにしてください。</target>
        </trans-unit>
        <trans-unit id="d2272c43c0b72b0fc81b4e012c8532a90ee0951c" translate="yes" xml:space="preserve">
          <source>The number of queries after which the query block will default to hidden.</source>
          <target state="translated">クエリブロックがデフォルトで非表示になるまでのクエリの数。</target>
        </trans-unit>
        <trans-unit id="9bf67d31e045ba0dc631e763749dd0c6cb4cf597" translate="yes" xml:space="preserve">
          <source>The number of rows returned by the query. Note: In this example, $query is the variable that the query result object is assigned to:</source>
          <target state="translated">クエリによって返された行の数。注意:この例では、$queryはクエリ結果オブジェクトが代入される変数です。</target>
        </trans-unit>
        <trans-unit id="b4a34cea2eb5c7721b673d85bb9dd93dbb530f86" translate="yes" xml:space="preserve">
          <source>The number of seconds until another token should be available.</source>
          <target state="translated">別のトークンが利用可能になるまでの秒数。</target>
        </trans-unit>
        <trans-unit id="7717a8b8b09e33c5e7a9b2662b944e9490382e07" translate="yes" xml:space="preserve">
          <source>The number of seconds you would like the session to last. If you would like a non-expiring session (until browser is closed) set the value to zero: 0</source>
          <target state="translated">セッションの持続時間を秒数で指定します。(ブラウザが閉じるまでの)有効期限のないセッションを希望する場合は、値を0に設定します。0</target>
        </trans-unit>
        <trans-unit id="9433d201289ca178b5989886415cf704647aa66f" translate="yes" xml:space="preserve">
          <source>The object fields may be unique to the database you are using. For instance, SQLite3 does not return data on column names, but has the additional &lt;em&gt;sequence&lt;/em&gt; field for compound foreign key definitions.</source>
          <target state="translated">オブジェクトフィールドは、使用しているデータベースに固有の場合があります。たとえば、SQLite3は列名に関するデータを返しませんが、複合外部キー定義用の追加の&lt;em&gt;シーケンス&lt;/em&gt;フィールドがあります。</target>
        </trans-unit>
        <trans-unit id="4fb2e392309ad0fe1e8ed8dd4920cd31955e6ed3" translate="yes" xml:space="preserve">
          <source>The object gives you full abilities to grab any part of the request on it&amp;rsquo;s own:</source>
          <target state="translated">オブジェクトは、それ自体でリクエストの任意の部分を取得するための完全な機能を提供します。</target>
        </trans-unit>
        <trans-unit id="e359c3078c839e3cfd95ab677cd2478d81c49adb" translate="yes" xml:space="preserve">
          <source>The old &lt;code&gt;sprintf()&lt;/code&gt; method of using &lt;strong&gt;%s&lt;/strong&gt; in your error messages will still work, however it will override the tags above. You should use one or the other.</source>
          <target state="translated">エラーメッセージで&lt;strong&gt;％s&lt;/strong&gt;を使用する古い &lt;code&gt;sprintf()&lt;/code&gt; メソッドは引き続き機能しますが、上記のタグをオーバーライドします。どちらかを使用する必要があります。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a259e59d14031de5c9cff2f5a26f5aff8e0ba7bc" translate="yes" xml:space="preserve">
          <source>The only URLs recognized are those that start with &amp;ldquo;www.&amp;rdquo; or with &amp;ldquo;://&amp;rdquo;.</source>
          <target state="translated">認識されるURLは、「www」で始まるURLのみです。または「：//」を使用します。</target>
        </trans-unit>
        <trans-unit id="b41d5456447e20297abd21454aa048c9c94e157d" translate="yes" xml:space="preserve">
          <source>The only argument is string that is the command called and any parameters. This appears exactly as you would call it from the command line.</source>
          <target state="translated">引数は、呼び出されたコマンドと任意のパラメータである文字列のみです。これは、コマンドラインから呼び出すのと同じように表示されます。</target>
        </trans-unit>
        <trans-unit id="986c3fd4041811696377870f11fcdff47cddf399" translate="yes" xml:space="preserve">
          <source>The only thing that remains is ensuring that your model is set up to allow data to be saved properly. The &lt;code&gt;save()&lt;/code&gt; method that was used will determine whether the information should be inserted or if the row already exists and should be updated, based on the presence of a primary key. In this case, there is no &lt;code&gt;id&lt;/code&gt; field passed to it, so it will insert a new row into it&amp;rsquo;s table, &lt;strong&gt;news&lt;/strong&gt;.</source>
          <target state="translated">残っているのは、データを適切に保存できるようにモデルが設定されていることを確認することだけです。 &lt;code&gt;save()&lt;/code&gt; を使用した方法は、情報を挿入するか、行が既に存在する場合、主キーの存在に基づいて、更新されるべきかどうかを決定します。この場合、 &lt;code&gt;id&lt;/code&gt; フィールドは渡されないため、テーブル&lt;strong&gt;newsに&lt;/strong&gt;新しい行が挿入されます。</target>
        </trans-unit>
        <trans-unit id="612b48d43ddb34ea8d1e711b76b0329fad57d383" translate="yes" xml:space="preserve">
          <source>The only thing that remains is writing a method that writes the data to the database. You&amp;rsquo;ll use the Query Builder class to insert the information and use the input library to get the posted data. Open up the model created earlier and add the following:</source>
          <target state="translated">残っているのは、データベースにデータを書き込むメソッドを記述することだけです。Query Builderクラスを使用して情報を挿入し、入力ライブラリを使用して投稿されたデータを取得します。前に作成したモデルを開き、以下を追加します。</target>
        </trans-unit>
        <trans-unit id="9d92c513b10ec67f5bddafb454bd792395760dbf" translate="yes" xml:space="preserve">
          <source>The only uncommented line there to start with should be:</source>
          <target state="translated">そこにある唯一のコメントされていない行は、最初にこうあるべきです。</target>
        </trans-unit>
        <trans-unit id="f4e2fba851a4f74610185ec64d69afc3aee4be02" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;current&amp;rdquo; link.</source>
          <target state="translated">「現在の」リンクの開始タグ。</target>
        </trans-unit>
        <trans-unit id="d07e4e56f702ba068334eb63819bf78dedac0db7" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;digit&amp;rdquo; link.</source>
          <target state="translated">「数字」リンクの開始タグ。</target>
        </trans-unit>
        <trans-unit id="99c2fae0475b3039f1b469a2ad97f7ea8927ecb2" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;first&amp;rdquo; link.</source>
          <target state="translated">「最初の」リンクの開始タグ。</target>
        </trans-unit>
        <trans-unit id="0b78402049e9163588515bb91aea837365a4bb0b" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;last&amp;rdquo; link.</source>
          <target state="translated">「最後の」リンクの開始タグ。</target>
        </trans-unit>
        <trans-unit id="5c8dfa6dae8b47a58f6da81f21164cb97fdd79ee" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;next&amp;rdquo; link.</source>
          <target state="translated">「次の」リンクの開始タグ。</target>
        </trans-unit>
        <trans-unit id="c80f52965005088f9303eea0a908fc89db234f55" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;previous&amp;rdquo; link.</source>
          <target state="translated">「前の」リンクの開始タグ。</target>
        </trans-unit>
        <trans-unit id="eb6098653cd9d24184788a65a965a61f1396c60e" translate="yes" xml:space="preserve">
          <source>The opening tag placed on the left side of the entire result.</source>
          <target state="translated">全体の結果の左側に配置されたオープニングタグ。</target>
        </trans-unit>
        <trans-unit id="26feb65dfe584899598879e6b3285c215e461784" translate="yes" xml:space="preserve">
          <source>The opposite of the &lt;code&gt;unix_to_time()&lt;/code&gt; function. Takes a &amp;ldquo;human&amp;rdquo; time as input and returns it as a UNIX timestamp. This is useful if you accept &amp;ldquo;human&amp;rdquo; formatted dates submitted via a form. Returns boolean FALSE date string passed to it is not formatted as indicated above.</source>
          <target state="translated">&lt;code&gt;unix_to_time()&lt;/code&gt; 関数の反対です。 「人間」の時間を入力として取り、それをUNIXタイムスタンプとして返​​します。これは、フォームから送信された「人間」形式の日付を受け入れる場合に便利です。ブール値FALSEを返します。渡された日付文字列は、上記の形式ではありません。</target>
        </trans-unit>
        <trans-unit id="c56b538c28cffd6ef0cd794d080ee200154417ed" translate="yes" xml:space="preserve">
          <source>The optional parameter &lt;code&gt;$status_code&lt;/code&gt; determines what HTTP status code should be sent with the error. If &lt;code&gt;$status_code&lt;/code&gt; is less than 100, the HTTP status code will be set to 500, and the exit status code will be set to &lt;code&gt;$status_code + EXIT__AUTO_MIN&lt;/code&gt;. If that value is larger than &lt;code&gt;EXIT__AUTO_MAX&lt;/code&gt;, or if &lt;code&gt;$status_code&lt;/code&gt; is 100 or higher, the exit status code will be set to &lt;code&gt;EXIT_ERROR&lt;/code&gt;. You can check in &lt;em&gt;application/config/constants.php&lt;/em&gt; for more detail.</source>
          <target state="translated">オプションのパラメーター &lt;code&gt;$status_code&lt;/code&gt; は、エラーと共に送信されるHTTPステータスコードを決定します。場合は &lt;code&gt;$status_code&lt;/code&gt; 100未満である、HTTPステータスコードが500に設定され、終了ステータスコードは次のように設定されます &lt;code&gt;$status_code + EXIT__AUTO_MIN&lt;/code&gt; 。その値が &lt;code&gt;EXIT__AUTO_MAX&lt;/code&gt; より大きい場合、または &lt;code&gt;$status_code&lt;/code&gt; が100以上の場合、終了ステータスコードは &lt;code&gt;EXIT_ERROR&lt;/code&gt; に設定されます。詳細については、&lt;em&gt;application / config / constants.php&lt;/em&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="b3099cf4db18381016774d7735aca10f232bf1f4" translate="yes" xml:space="preserve">
          <source>The optional second parameter allows you to force a particular redirection method. The available methods are &lt;strong&gt;auto&lt;/strong&gt;, &lt;strong&gt;location&lt;/strong&gt; and &lt;strong&gt;refresh&lt;/strong&gt;, with location being faster but less reliable on IIS servers. The default is &lt;strong&gt;auto&lt;/strong&gt;, which will attempt to intelligently choose the method based on the server environment.</source>
          <target state="translated">オプションの2番目のパラメーターを使用すると、特定のリダイレクト方法を強制できます。利用可能な方法は&lt;strong&gt;auto&lt;/strong&gt;、&lt;strong&gt;location&lt;/strong&gt;、および&lt;strong&gt;refreshであり&lt;/strong&gt;、IISサーバーでは場所は高速ですが信頼性は低くなります。デフォルトは&lt;strong&gt;auto&lt;/strong&gt;で、サーバー環境に基づいてメソッドをインテリジェントに選択しようとします。</target>
        </trans-unit>
        <trans-unit id="b829e9793ad91dcb288168b242d429438fd98712" translate="yes" xml:space="preserve">
          <source>The optional second parameter defaults to NULL and allows you to set the return value of this method when the requested URI segment is missing. For example, this would tell the method to return the number zero in the event of failure:</source>
          <target state="translated">オプションの 2 番目のパラメータの既定値は NULL で、要求された URI セグメントが見つからない場合のこのメソッドの戻り値を設定することができます。例えば、これは失敗した場合にゼロという数字を返すようにします。</target>
        </trans-unit>
        <trans-unit id="4f4bc3346c54dd23c7dd117438a91c581a8a3ab0" translate="yes" xml:space="preserve">
          <source>The optional third parameter allows you to send a specific HTTP Response Code - this could be used for example to create 301 redirects for search engine purposes. The default Response Code is 302. The third parameter is &lt;em&gt;only&lt;/em&gt; available with &lt;strong&gt;location&lt;/strong&gt; redirects, and not &lt;em&gt;refresh&lt;/em&gt;. Examples:</source>
          <target state="translated">オプションの3番目のパラメーターを使用すると、特定のHTTP応答コードを送信できます。これは、たとえば、検索エンジンの目的で301リダイレクトを作成するために使用できます。デフォルトの応答コードは302です。3番目のパラメーターは、&lt;strong&gt;場所の&lt;/strong&gt;リダイレクトで&lt;em&gt;のみ&lt;/em&gt;使用でき、&lt;em&gt;更新&lt;/em&gt;はできません。例：&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd62700f58241f5ce5914a422ac90368f6b35095" translate="yes" xml:space="preserve">
          <source>The order of checking the avability of the CSRF token is as follows:</source>
          <target state="translated">CSRFトークンのアビリティーをチェックする順番は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="37e0ac1fa9194b76aefe9564e4db6e54feabb94b" translate="yes" xml:space="preserve">
          <source>The ordering above is for clarity, whereas the actual order the routes are created in, in RouteCollection, ensures proper route resolution</source>
          <target state="translated">上記の順序は明確にするためのものですが、RouteCollection で実際にルートが作成される順序は、適切なルート解決を確実にするためのものです。</target>
        </trans-unit>
        <trans-unit id="2ac916d5032c815b00a1771448c4faba0ebe619e" translate="yes" xml:space="preserve">
          <source>The original encrypted data from CodeIgniter 1.x&amp;rsquo;s Encryption library</source>
          <target state="translated">CodeIgniter 1.xの暗号化ライブラリからの元の暗号化データ</target>
        </trans-unit>
        <trans-unit id="217193b44671101ccecb0f82d35be5e2ef8bb762" translate="yes" xml:space="preserve">
          <source>The other option is to download the .phar file from the &lt;a href=&quot;https://phpunit.de/getting-started/phpunit-7.html&quot;&gt;phpUnit&lt;/a&gt; site. This is a standalone file that should be placed within your project root.</source>
          <target state="translated">もう1つのオプションは、&lt;a href=&quot;https://phpunit.de/getting-started/phpunit-7.html&quot;&gt;phpUnit&lt;/a&gt;サイトから.pharファイルをダウンロードすることです。これは、プロジェクトルート内に配置する必要があるスタンドアロンファイルです。</target>
        </trans-unit>
        <trans-unit id="033d5535b676babd7615f2f4bf52b4dd073ee269" translate="yes" xml:space="preserve">
          <source>The other responsibility of the controller is to handle everything that pertains to HTTP requests - redirects, authentication, web safety, encoding, etc. In short, the controller is where you make sure that people are allowed to be there, and they get the data they need in a format they can use.</source>
          <target state="translated">コントローラのもう一つの責任は、HTTP リクエストに関連するすべてのものを処理することです-リダイレクト、認証、ウェブセーフティー、エンコーディングなど。要するに、コントローラは人がそこにいることを許されているかどうかを確認し、彼らが必要とするデータを、彼らが使える形式で手に入れるところにあるのです。</target>
        </trans-unit>
        <trans-unit id="543a52e9f24d7925f22c54e0f9606d84d3a0c345" translate="yes" xml:space="preserve">
          <source>The other way to set the validation message to fields by functions,</source>
          <target state="translated">もう一つは、検証メッセージを関数でフィールドに設定する方法です。</target>
        </trans-unit>
        <trans-unit id="3099b59a3ac63f6c22b2f355e51cfef30d90d294" translate="yes" xml:space="preserve">
          <source>The other way to set the validation rules to fields by functions,</source>
          <target state="translated">もう一つは、検証ルールを関数でフィールドに設定する方法です。</target>
        </trans-unit>
        <trans-unit id="449d437bb3a83cbf49c5e5db500cc4c56c429eb7" translate="yes" xml:space="preserve">
          <source>The output from the view.</source>
          <target state="translated">ビューからの出力です。</target>
        </trans-unit>
        <trans-unit id="bf4b76d60ae7ab2bb695f9d6b25b0b81bb327190" translate="yes" xml:space="preserve">
          <source>The output is NOT guaranteed to be cryptographically secure, just the best attempt at that.</source>
          <target state="translated">出力は暗号的に安全であることを保証するものではありません。</target>
        </trans-unit>
        <trans-unit id="9c32483d1a11476f49df83d8efcdab26c2fbc7e1" translate="yes" xml:space="preserve">
          <source>The overridden method call (typically the second segment of the URI) will be passed as a parameter to the &lt;code&gt;_remap()&lt;/code&gt; method:</source>
          <target state="translated">オーバーライドされたメソッド呼び出し（通常はURIの2番目のセグメント）は、パラメーターとして &lt;code&gt;_remap()&lt;/code&gt; メソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="eb942a151ead6d45e7e0448031c6bbd312c3522f" translate="yes" xml:space="preserve">
          <source>The page below explains these three concepts in detail.</source>
          <target state="translated">以下のページでは、この3つの概念について詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="b3087829b5f65a28ac78f1937f54c958b92c4b6d" translate="yes" xml:space="preserve">
          <source>The pagination function automatically determines which segment of your URI contains the page number. If you need something different you can specify it.</source>
          <target state="translated">ページ分割機能は、あなたの URI のどのセグメントにページ番号が含まれているかを自動的に決定します。何か別のものが必要な場合は、それを指定することができます。</target>
        </trans-unit>
        <trans-unit id="2788530637b461ef233bae0df3f68df77d05ddc3" translate="yes" xml:space="preserve">
          <source>The parameter can be a string specifying the name of the model, or an instance of the model itself:</source>
          <target state="translated">パラメータには、モデル名を指定する文字列、またはモデル自体のインスタンスを指定することができます。</target>
        </trans-unit>
        <trans-unit id="951924fa61ce56287c9ebe16db9a353faadb3028" translate="yes" xml:space="preserve">
          <source>The parameter usage is identical to using &lt;a href=&quot;#form_dropdown&quot;&gt;&lt;code&gt;form_dropdown()&lt;/code&gt;&lt;/a&gt; above, except of course that the name of the field will need to use POST array syntax, e.g. foo[].</source>
          <target state="translated">パラメータの使用法は、上記の&lt;a href=&quot;#form_dropdown&quot;&gt; &lt;code&gt;form_dropdown()&lt;/code&gt; &lt;/a&gt;を使用する場合と同じですが、もちろん、フィールドの名前にはfoo []などのPOST配列構文を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="4f6a5c5d0d2778091facd32a1346332fe33f1f65" translate="yes" xml:space="preserve">
          <source>The password field must match the password confirmation field.</source>
          <target state="translated">パスワードフィールドは、パスワード確認フィールドと一致している必要があります。</target>
        </trans-unit>
        <trans-unit id="f7e6b0324c8b2d067af6a096be5d6a15ffc23d6d" translate="yes" xml:space="preserve">
          <source>The password used to connect to the database.</source>
          <target state="translated">データベースへの接続に使用するパスワードです。</target>
        </trans-unit>
        <trans-unit id="5dea72232a3c7b3f256dba3a23a73774bc239ddf" translate="yes" xml:space="preserve">
          <source>The path are all of the segments within the site itself. As expected, the &lt;code&gt;getPath()&lt;/code&gt; and &lt;code&gt;setPath()&lt;/code&gt; methods can be used to manipulate it:</source>
          <target state="translated">パスは、サイト自体内のすべてのセグメントです。予想どおり、 &lt;code&gt;getPath()&lt;/code&gt; &lt;code&gt;setPath()&lt;/code&gt; メソッドとsetPath（）メソッドを使用して操作できます。</target>
        </trans-unit>
        <trans-unit id="3de7511a5028a0d8b341574c03a32a60d9e2847c" translate="yes" xml:space="preserve">
          <source>The path can be a relative or full server path. Returns FALSE (boolean) on failure.</source>
          <target state="translated">パスは、相対パスかフルサーバパスになります。失敗した場合は FALSE (boolean)を返します。</target>
        </trans-unit>
        <trans-unit id="badf76ddec366a5be5951ea4f88b35ee802eec41" translate="yes" xml:space="preserve">
          <source>The path is relative to your main site index.php file, NOT your controller or view files. CodeIgniter uses a front controller so paths are always relative to the main site index.</source>
          <target state="translated">パスはメインサイトの index.php ファイルからの相対パスであり、コントローラやビューファイルからの相対パスではありません。CodeIgniter はフロントコントローラを使用するので、パスは常にメインサイトのインデックスからの相対パスになります。</target>
        </trans-unit>
        <trans-unit id="5a0704170a1dcc74db3ad6b49c795903791b04bd" translate="yes" xml:space="preserve">
          <source>The path is usually not needed since the method sets a root path.</source>
          <target state="translated">このメソッドはルートパスを設定するので、通常はパスは必要ありません。</target>
        </trans-unit>
        <trans-unit id="5f435e3429663b68cab943a559442bf7e01264af" translate="yes" xml:space="preserve">
          <source>The path to the &lt;strong&gt;app&lt;/strong&gt; directory.</source>
          <target state="translated">&lt;strong&gt;アプリ&lt;/strong&gt;ディレクトリへのパス。</target>
        </trans-unit>
        <trans-unit id="90fd378c87137deac2d99abdbe4bbc817c0f97df" translate="yes" xml:space="preserve">
          <source>The path to the &lt;strong&gt;system&lt;/strong&gt; directory.</source>
          <target state="translated">&lt;strong&gt;システム&lt;/strong&gt;ディレクトリへのパス。</target>
        </trans-unit>
        <trans-unit id="bdac16f68a09a60aa65d865bc92256569c057123" translate="yes" xml:space="preserve">
          <source>The path to the &lt;strong&gt;writable&lt;/strong&gt; directory.</source>
          <target state="translated">&lt;strong&gt;書き込み可能な&lt;/strong&gt;ディレクトリへのパス。</target>
        </trans-unit>
        <trans-unit id="2808cbf8523e72eb6a348b69e206a13a96ae9298" translate="yes" xml:space="preserve">
          <source>The path to the directory that holds the front controller.</source>
          <target state="translated">フロントコントローラを格納しているディレクトリへのパスです。</target>
        </trans-unit>
        <trans-unit id="f967a2d54a002a077c1658322310f8ff395a8c5e" translate="yes" xml:space="preserve">
          <source>The path to the directory where the upload should be placed. The directory must be writable and the path can be absolute or relative.</source>
          <target state="translated">アップロード先のディレクトリへのパス。ディレクトリは書き込み可能でなければならず、パスは絶対パスでも相対パスでも構いません。</target>
        </trans-unit>
        <trans-unit id="7c7b38221c729cd203ea7c057c7d66072c00d644" translate="yes" xml:space="preserve">
          <source>The path to the project root directory. Just above &lt;code&gt;APPPATH&lt;/code&gt;.</source>
          <target state="translated">プロジェクトのルートディレクトリへのパス。 &lt;code&gt;APPPATH&lt;/code&gt; のすぐ上。</target>
        </trans-unit>
        <trans-unit id="a7abe13c2bd76ee461d902688613ef7d537e7d29" translate="yes" xml:space="preserve">
          <source>The path to which the session is applicable</source>
          <target state="translated">セッションが適用されるパス</target>
        </trans-unit>
        <trans-unit id="1df368bf68675ec14171c2ba922e5036a5482210" translate="yes" xml:space="preserve">
          <source>The path to your migrations folder.</source>
          <target state="translated">移行フォルダへのパスです。</target>
        </trans-unit>
        <trans-unit id="f70627520160f723ca7ebf08057e94eba4ac515f" translate="yes" xml:space="preserve">
          <source>The port is an integer number between 0 and 65535. Each sheme has a default value associated with it.</source>
          <target state="translated">ポートは 0 から 65535 までの整数値です。各 sheme にはデフォルト値が関連付けられています。</target>
        </trans-unit>
        <trans-unit id="8d987bf0607846c92d40a5afced37d2e54265999" translate="yes" xml:space="preserve">
          <source>The possible options that are recognized are as follows:</source>
          <target state="translated">認識される可能性のある選択肢は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="aeeb40f006fd925a239e6d152a360b90dccf6f39" translate="yes" xml:space="preserve">
          <source>The preferences described below allow you to tailor the image processing to suit your needs.</source>
          <target state="translated">以下に記載されている環境設定により、ニーズに合わせて画像処理を調整することができます。</target>
        </trans-unit>
        <trans-unit id="5590804d5ac59e3a0ff5acd9197296adf6afe862" translate="yes" xml:space="preserve">
          <source>The prefix is only needed if you need to avoid name collisions with other identically named cookies for your server.</source>
          <target state="translated">接頭辞が必要なのは、サーバーのために同じ名前のクッキーと名前が衝突しないようにする必要がある場合のみです。</target>
        </trans-unit>
        <trans-unit id="792a3c76c1bf7d603aed0a647e9088a398b0c665" translate="yes" xml:space="preserve">
          <source>The prefixed table name</source>
          <target state="translated">接頭語のテーブル名</target>
        </trans-unit>
        <trans-unit id="754cc3585642758b0387a50318352696106feaf9" translate="yes" xml:space="preserve">
          <source>The primary key name, FALSE if none</source>
          <target state="translated">主キー名、なければFALSE</target>
        </trans-unit>
        <trans-unit id="b021d74218222a9a03f11de255fd453b408f9abf" translate="yes" xml:space="preserve">
          <source>The property can be read multiple times.</source>
          <target state="translated">このプロパティは複数回読み込めます。</target>
        </trans-unit>
        <trans-unit id="3035d35d242b46c8062bc74fae4834744f08b7d6" translate="yes" xml:space="preserve">
          <source>The push method is used to push a new value onto a session value that is an array. For instance, if the &amp;lsquo;hobbies&amp;rsquo; key contains an array of hobbies, you can add a new value onto the array like so:</source>
          <target state="translated">pushメソッドは、配列であるセッション値に新しい値をプッシュするために使用されます。たとえば、「hobbies」キーに趣味の配列が含まれている場合は、次のように配列に新しい値を追加できます。</target>
        </trans-unit>
        <trans-unit id="534780b9409598286acdb67f2fe9770c9ae1b871" translate="yes" xml:space="preserve">
          <source>The query library supports a powerful &lt;a href=&quot;http://api.jquery.com/category/effects/&quot;&gt;Effects&lt;/a&gt; repertoire. Before an effect can be used, it must be loaded:</source>
          <target state="translated">クエリライブラリは、強力な&lt;a href=&quot;http://api.jquery.com/category/effects/&quot;&gt;効果&lt;/a&gt;レパートリーをサポートしています。エフェクトを使用する前に、ロードする必要があります。</target>
        </trans-unit>
        <trans-unit id="bdf30968e43f490e7e83a4606306b6793516a6b1" translate="yes" xml:space="preserve">
          <source>The query variables can be manipulated through the class using simple string representations. Query values can only be set as a string currently.</source>
          <target state="translated">クエリ変数は、単純な文字列表現を使用してクラスを通して操作することができます。クエリの値は、現在は文字列としてしか設定できません。</target>
        </trans-unit>
        <trans-unit id="a8a4093a730aaf09dad7243e11c02cf318121106" translate="yes" xml:space="preserve">
          <source>The query() function returns a database result &lt;strong&gt;object&lt;/strong&gt; when &amp;ldquo;read&amp;rdquo; type queries are run which you can use to &lt;a href=&quot;results&quot;&gt;show your results&lt;/a&gt;. When &amp;ldquo;write&amp;rdquo; type queries are run it simply returns TRUE or FALSE depending on success or failure. When retrieving data you will typically assign the query to your own variable, like this:</source>
          <target state="translated">query（）関数は、「読み取り」タイプのクエリが実行されると、データベースの結果&lt;strong&gt;オブジェクトを&lt;/strong&gt;返し&lt;a href=&quot;results&quot;&gt;ます&lt;/a&gt;。これを使用して、結果を表示できます。「書き込み」タイプのクエリが実行されると、成功または失敗に応じて、単にTRUEまたはFALSEが返されます。データを取得するときは、通常、次のようにクエリを独自の変数に割り当てます。</target>
        </trans-unit>
        <trans-unit id="d2d6ea25a2ec4eda793a2e60e9751210ad04c9cf" translate="yes" xml:space="preserve">
          <source>The query() function returns a database result &lt;strong&gt;object&lt;/strong&gt; when &amp;ldquo;read&amp;rdquo; type queries are run, which you can use to &lt;a href=&quot;results&quot;&gt;show your results&lt;/a&gt;. When &amp;ldquo;write&amp;rdquo; type queries are run it simply returns TRUE or FALSE depending on success or failure. When retrieving data you will typically assign the query to your own variable, like this:</source>
          <target state="translated">query（）関数は、「読み取り」タイプのクエリが実行されると、データベース結果&lt;strong&gt;オブジェクトを&lt;/strong&gt;返します。これを使用して&lt;a href=&quot;results&quot;&gt;、結果&lt;/a&gt;を表示できます。「書き込み」タイプのクエリを実行すると、成功または失敗に応じてTRUEまたはFALSEが返されます。データを取得するときは、通常、次のようにクエリを独自の変数に割り当てます。</target>
        </trans-unit>
        <trans-unit id="1379f592cece57e48c7022ff512dad1d880dad30" translate="yes" xml:space="preserve">
          <source>The question marks in the query are automatically replaced with the values in the array in the second parameter of the query function.</source>
          <target state="translated">クエリ内のクエスチョンマークは、クエリ関数の2番目のパラメータの配列内の値に自動的に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="24bbcae13b6997d6b5150f1b63f439acb44550f7" translate="yes" xml:space="preserve">
          <source>The reason for not including other popular algorithms, such as MD5 or SHA1 is that they are no longer considered secure enough and as such, we don&amp;rsquo;t want to encourage their usage. If you absolutely need to use them, it is easy to do so via PHP&amp;rsquo;s native &lt;a href=&quot;http://php.net/manual/en/function.hash-hmac.php&quot;&gt;hash_hmac()&lt;/a&gt; function.</source>
          <target state="translated">MD5やSHA1などの他の一般的なアルゴリズムを含めない理由は、それらのアルゴリズムが十分に安全であるとは見なされなくなったため、その使用を奨励したくないからです。それらを絶対に使用する必要がある場合は、PHPのネイティブの&lt;a href=&quot;http://php.net/manual/en/function.hash-hmac.php&quot;&gt;hash_hmac（）&lt;/a&gt;関数を使用して簡単に使用できます。</target>
        </trans-unit>
        <trans-unit id="135f4b060e2681aac836dc1c5430411d23f68d1d" translate="yes" xml:space="preserve">
          <source>The reason phrase (&amp;lsquo;OK&amp;rsquo;, &amp;lsquo;Created&amp;rsquo;, &amp;lsquo;Moved Permanently&amp;rsquo;) will be automatically added, but you can add custom reasons as the second parameter of the &lt;code&gt;setStatusCode()&lt;/code&gt; method:</source>
          <target state="translated">理由句（ 'OK'、 'C​​reated'、 'Moved Permanently'）は自動的に追加されますが、 &lt;code&gt;setStatusCode()&lt;/code&gt; メソッドの2番目のパラメーターとしてカスタム理由を追加できます。</target>
        </trans-unit>
        <trans-unit id="7b971d9c453ba46fceb492df35d489f13fdff9cf" translate="yes" xml:space="preserve">
          <source>The reason phrase will be automatically generated based upon the official lists. If you need to set your own for a custom status code, you can pass the reason phrase as the second parameter:</source>
          <target state="translated">理由のフレーズは、公式リストに基づいて自動的に生成されます。カスタムのステータスコードに独自のものを設定する必要がある場合は、2番目のパラメータとして reason phrase を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="53626f44bf4399660a176d5b278799ffb497ac94" translate="yes" xml:space="preserve">
          <source>The reason this line is necessary is because your local constructor will be overriding the one in the parent controller class so we need to manually call it.</source>
          <target state="translated">この行が必要な理由は、ローカルのコンストラクタが親コントローラクラスのコンストラクタをオーバーライドするためです。</target>
        </trans-unit>
        <trans-unit id="162bc5a9c2ae759089321bb03ecb46b6bcb9d77a" translate="yes" xml:space="preserve">
          <source>The reason we use a multi-dimensional array rather than a more simple one is to permit you to optionally store multiple sets of connection values. If, for example, you run multiple environments (development, production, test, etc.) under a single installation, you can set up a connection group for each, then switch between groups as needed. For example, to set up a &amp;ldquo;test&amp;rdquo; environment you would do this:</source>
          <target state="translated">より単純な配列ではなく多次元配列を使用する理由は、接続値の複数のセットをオプションで格納できるようにするためです。たとえば、1つのインストールで複数の環境（開発、本番、テストなど）を実行する場合、それぞれに接続グループを設定し、必要に応じてグループを切り替えることができます。たとえば、「テスト」環境を設定するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="8e8217e709c8091e4df7fb0cdc3a04c6942d640b" translate="yes" xml:space="preserve">
          <source>The recommended method for organizing your classes is to create one or more namespaces for your application&amp;rsquo;s files. This is most important for any business-logic related classes, entity classes, etc. The &lt;code&gt;psr4&lt;/code&gt; array in the configuration file allows you to map the namespace to the directory those classes can be found in:</source>
          <target state="translated">クラスを編成するための推奨される方法は、アプリケーションのファイル用に1つ以上の名前空間を作成することです。これは、ビジネスロジック関連のクラス、エンティティクラスなどにとって最も重要です。構成ファイルの &lt;code&gt;psr4&lt;/code&gt; 配列を使用すると、名前空間をそれらのクラスが存在するディレクトリにマップできます。</target>
        </trans-unit>
        <trans-unit id="fcf8416ee30decb89972d2e89a3927e19d279f61" translate="yes" xml:space="preserve">
          <source>The recommended method is to install it in your project using &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;. While it&amp;rsquo;s possible to install it globally we do not recommend it, since it can cause compatibility issues with other projects on your system as time goes on.</source>
          <target state="translated">推奨される方法は、&lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;を使用してプロジェクトにインストールすることです。グローバルにインストールすることは可能ですが、時間の経過とともにシステム上の他のプロジェクトとの互換性の問題が発生する可能性があるため、お勧めしません。</target>
        </trans-unit>
        <trans-unit id="b4a3c9d3cb629717c7060d49268967f6caea11d8" translate="yes" xml:space="preserve">
          <source>The referrer, if the user agent was referred from another site. Typically you&amp;rsquo;ll test for this as follows:</source>
          <target state="translated">ユーザーエージェントが別のサイトから参照された場合の参照元。通常、次のようにテストします。</target>
        </trans-unit>
        <trans-unit id="48c4266e926efd47ac7b17480bf10dc1d477b782" translate="yes" xml:space="preserve">
          <source>The renderSection() method only has one argument - the name of the section. That way any child views know what to name the content section.</source>
          <target state="translated">renderSection()メソッドの引数は 1 つだけです。これにより、どの子ビューでもコンテンツセクションの名前を知ることができます。</target>
        </trans-unit>
        <trans-unit id="4eaa0825ae517f6ae96525d29c03d6a82f4ba042" translate="yes" xml:space="preserve">
          <source>The rendered text for the chosen view</source>
          <target state="translated">選択したビューのレンダリングされたテキスト</target>
        </trans-unit>
        <trans-unit id="9d49b579a65bbc3eea080b073eda4bd973d41bfe" translate="yes" xml:space="preserve">
          <source>The renderer is smart enough to detect whether the view should be rendered on its own, or if it needs a layout.</source>
          <target state="translated">レンダラーは、ビューが単独でレンダリングされるべきか、レイアウトが必要かどうかを検知するのに十分に賢いです。</target>
        </trans-unit>
        <trans-unit id="473e001be07fea4045e8e7ffb4f99c36be426ec1" translate="yes" xml:space="preserve">
          <source>The report will be formatted in an HTML table for viewing. If you prefer the raw data you can retrieve an array using:</source>
          <target state="translated">レポートは、表示用のHTMLテーブルにフォーマットされます。生のデータをお望みの場合は、次のようにして配列を取得することができます。</target>
        </trans-unit>
        <trans-unit id="d2cbfc6b5f1ca58dea1ad7bb41a95ec9beb01244" translate="yes" xml:space="preserve">
          <source>The request also includes a number of optional request headers that can contain a wide variety of information such as what languages the client wants the content displayed as, the types of formats the client accepts, and much more. Wikipedia has an article that lists &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_HTTP_header_fields&quot;&gt;all header fields&lt;/a&gt; if you want to look it over.</source>
          <target state="translated">リクエストには、クライアントがコンテンツを表示する言語、クライアントが受け入れる形式の種類など、さまざまな情報を含めることができるオプションのリクエストヘッダーも多数含まれています。ウィキペディアには、&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_HTTP_header_fields&quot;&gt;すべてのヘッダーフィールドを&lt;/a&gt;確認したい場合にリストする記事があります。</target>
        </trans-unit>
        <trans-unit id="141cfb8141e772cbbbcee0941601a1f0531812b3" translate="yes" xml:space="preserve">
          <source>The request class does a lot of work in the background for you, that you never need to worry about. The &lt;code&gt;isAJAX()&lt;/code&gt; and &lt;code&gt;isSecure()&lt;/code&gt; methods check several different methods to determine the correct answer.</source>
          <target state="translated">リクエストクラスはバックグラウンドで多くの作業を行うため、心配する必要はありません。 &lt;code&gt;isAJAX()&lt;/code&gt; と &lt;code&gt;isSecure()&lt;/code&gt; メソッドは、正しい答えを決定するために、いくつかの異なる方法を確認してください。</target>
        </trans-unit>
        <trans-unit id="a923077313b07e5cc40aacf2ed523d545d760292" translate="yes" xml:space="preserve">
          <source>The request class is an object-oriented representation of an HTTP request. This is meant to work for both incoming, such as a request to the application from a browser, and outgoing requests, like would be used to send a request from the application to a third-party application. This class provides the common functionality they both need, but both cases have custom classes that extend from the Request class to add specific functionality.</source>
          <target state="translated">リクエストクラスは、HTTP リクエストをオブジェクト指向で表現したものです。これは、ブラウザからのアプリケーションへのリクエストのような着信リクエストと、アプリケーションからサードパーティのアプリケーションにリクエストを送信するために使用されるような発信リクエストの両方で動作することを意図しています。このクラスは両者に必要な共通の機能を提供しますが、どちらの場合も特定の機能を追加するために Request クラスから拡張したカスタムクラスを持っています。</target>
        </trans-unit>
        <trans-unit id="d8ef39f839d1c0b0f1895f65d12b0bbf5c033ded" translate="yes" xml:space="preserve">
          <source>The request sending method. Returns boolean TRUE or FALSE based on success for failure, enabling it to be used conditionally.</source>
          <target state="translated">リクエストの送信方法。失敗の場合は成功に基づいて TRUE または FALSE を返し、条件付きで使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="3acd8516bd78787105685c2d39db6a411c8eda54" translate="yes" xml:space="preserve">
          <source>The request would look something like this:</source>
          <target state="translated">リクエストは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="5e83094284b736629d3070ed2c7f6b78225ac6f1" translate="yes" xml:space="preserve">
          <source>The requested row or NULL if it doesn&amp;rsquo;t exist</source>
          <target state="translated">要求された行、または存在しない場合はNULL</target>
        </trans-unit>
        <trans-unit id="7ed5cb7dded7d330df172e12152cbcc7a58cbaad" translate="yes" xml:space="preserve">
          <source>The requested session data item, or NULL if it doesn&amp;rsquo;t exist</source>
          <target state="translated">要求されたセッションデータアイテム、または存在しない場合はNULL</target>
        </trans-unit>
        <trans-unit id="f5e449c67ce2307e2e8ffbe12fcfa44f925e3958" translate="yes" xml:space="preserve">
          <source>The resizing method will create a copy of the image file (and preserve the original) if you set a path and/or a new filename using this preference:</source>
          <target state="translated">この設定を使ってパスや新しいファイル名を設定すると、 リサイズ方法は画像ファイルのコピーを作成します (元の画像を保存します)。</target>
        </trans-unit>
        <trans-unit id="3723fcd40592ab14dee601b5cda7a34db59a7a9a" translate="yes" xml:space="preserve">
          <source>The resizing method will create a thumbnail file (and preserve the original) if you set this preference to TRUE:</source>
          <target state="translated">この設定を TRUE に設定した場合、リサイズ方法はサムネイルファイルを作成します (元のファイルを保存します)。</target>
        </trans-unit>
        <trans-unit id="960e95de6fa3b33d643ea0fda963277df8956eca" translate="yes" xml:space="preserve">
          <source>The response is an array with two elements: &lt;code&gt;error&lt;/code&gt; and &lt;code&gt;messages&lt;/code&gt;. The &lt;code&gt;error&lt;/code&gt; element contains the status code of the error. The &lt;code&gt;messages&lt;/code&gt; element contains an array of error messages. It would look something like:</source>
          <target state="translated">応答は、 &lt;code&gt;error&lt;/code&gt; と &lt;code&gt;messages&lt;/code&gt; 2つの要素を持つ配列です。 &lt;code&gt;error&lt;/code&gt; 要素は、エラーのステータスコードが含まれています。 &lt;code&gt;messages&lt;/code&gt; 要素は、エラーメッセージの配列が含まれています。次のようになります。</target>
        </trans-unit>
        <trans-unit id="67fb1d166c1d535cbeb346cae9c9ae96388d4914" translate="yes" xml:space="preserve">
          <source>The response object MUST be returned for the download to be sent to the client. This allows the response to be passed through all &lt;strong&gt;after&lt;/strong&gt; filters before being sent to the client.</source>
          <target state="translated">ダウンロードをクライアントに送信するには、応答オブジェクトを返す必要があります。これは、応答はすべてを通過することができます&lt;strong&gt;後に&lt;/strong&gt;クライアントに送信される前に、フィルタ。</target>
        </trans-unit>
        <trans-unit id="f7295f2eb5d3f1a64029c7fcbcb0ef1e3ec7e79f" translate="yes" xml:space="preserve">
          <source>The response tells the client what version of the HTTP specification that it&amp;rsquo;s using and, probably most importantly, the status code (200). The status code is one of a number of codes that have been standardized to have a very specific meaning to the client. This can tell them that it was successful (200), or that the page wasn&amp;rsquo;t found (404). Head over to IANA for a &lt;a href=&quot;https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml&quot;&gt;full list of HTTP status codes&lt;/a&gt;.</source>
          <target state="translated">応答は、クライアントが使用しているHTTP仕様のバージョンと、おそらく最も重要なステータスコード（200）をクライアントに通知します。ステータスコードは、クライアントにとって非常に具体的な意味を持つように標準化された多数のコードの1つです。これにより、成功した（200）か、ページが見つからなかった（404）ことがわかります。&lt;a href=&quot;https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml&quot;&gt;HTTPステータスコードの完全なリスト&lt;/a&gt;については、IANAにアクセスしてください。</target>
        </trans-unit>
        <trans-unit id="241ac6f67643809e3d0ba82124bf9b126d3a950d" translate="yes" xml:space="preserve">
          <source>The response you get back contains a number of helper methods to inspect the HTML output within the response. These are useful for using within assertions in your tests.</source>
          <target state="translated">取得したレスポンスには、レスポンス内の HTML 出力を検査するためのいくつかのヘルパーメソッドが含まれています。これらはテストのアサーション内で使用するのに便利です。</target>
        </trans-unit>
        <trans-unit id="62fe0a22e4f9a64b271bac8530c593bf78f6f80e" translate="yes" xml:space="preserve">
          <source>The result ID can be accessed from within your result object, like this:</source>
          <target state="translated">結果IDは、以下のように結果オブジェクト内からアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="fdc79b19e07924531643d2dd8e5c7690115615d2" translate="yes" xml:space="preserve">
          <source>The resulting query will be:</source>
          <target state="translated">結果のクエリは次のようになります。</target>
        </trans-unit>
        <trans-unit id="7191e9006d47bcdaaf39943a4cbb959c85d49989" translate="yes" xml:space="preserve">
          <source>The return from &lt;code&gt;make()&lt;/code&gt; is ready to be used in tests or inserted into the database. Alternatively &lt;code&gt;Fabricator&lt;/code&gt; includes the &lt;code&gt;create()&lt;/code&gt; command to insert it for you, and return the result. Due to model callbacks, database formatting, and special keys like primary and timestamps the return from &lt;code&gt;create()&lt;/code&gt; can differ from &lt;code&gt;make()&lt;/code&gt;. You might get back something like this:</source>
          <target state="translated">&lt;code&gt;make()&lt;/code&gt; からの戻り値は、テストで使用したり、データベースに挿入したりする準備ができています。あるいは、 &lt;code&gt;Fabricator&lt;/code&gt; には &lt;code&gt;create()&lt;/code&gt; コマンドが含まれており、それを挿入して結果を返します。モデルのコールバック、データベースのフォーマット、プライマリキーやタイムスタンプなどの特殊キーにより、 &lt;code&gt;create()&lt;/code&gt; からの戻り値は &lt;code&gt;make()&lt;/code&gt; とは異なる場合があります。あなたはこのようなものを取り戻すかもしれません：</target>
        </trans-unit>
        <trans-unit id="552ff9b4a1ff3577d15ca1dff4eae1875e6dfe25" translate="yes" xml:space="preserve">
          <source>The return type of &lt;code&gt;make()&lt;/code&gt; mimics what is defined in the representative model, but you can force a type using the methods directly:</source>
          <target state="translated">&lt;code&gt;make()&lt;/code&gt; の戻り値の型は、代表的なモデルで定義されているものを模倣していますが、メソッドを直接使用して型を強制することができます。</target>
        </trans-unit>
        <trans-unit id="a8fdf090183c534e897d51d88ff6c8f58eb4c414" translate="yes" xml:space="preserve">
          <source>The returned strings do NOT include quotes around them.</source>
          <target state="translated">返される文字列には引用符は含まれません。</target>
        </trans-unit>
        <trans-unit id="ade6cba23328820ffe2f094c01d372482db87f73" translate="yes" xml:space="preserve">
          <source>The returned value depends on the underlying driver in use. For example, a &lt;code&gt;mysqli&lt;/code&gt; instance will be returned with the &amp;lsquo;mysqli&amp;rsquo; driver.</source>
          <target state="translated">戻り値は、使用中の基になるドライバーによって異なります。たとえば、 &lt;code&gt;mysqli&lt;/code&gt; インスタンスは 'mysqli'ドライバーで返されます。</target>
        </trans-unit>
        <trans-unit id="4a814bef1ae8b669e2b0c1c9284241fc620cebf0" translate="yes" xml:space="preserve">
          <source>The roman number converted from given parameter</source>
          <target state="translated">与えられたパラメータから変換されたローマ数字</target>
        </trans-unit>
        <trans-unit id="76864c0b8a4a8c48009cbebda3f61a37893a4f7b" translate="yes" xml:space="preserve">
          <source>The rotate() method allows you to rotate an image in 90 degree increments:</source>
          <target state="translated">rotate()メソッドを使用すると、画像を 90 度単位で回転させることができます。</target>
        </trans-unit>
        <trans-unit id="2eb24489043c4632da13ad01c7551206e260ca87" translate="yes" xml:space="preserve">
          <source>The routes are matched in the order they are specified, so if you have a resource photos above a get &amp;lsquo;photos/poll&amp;rsquo; the show action&amp;rsquo;s route for the resource line will be matched before the get line. To fix this, move the get line above the resource line so that it is matched first.</source>
          <target state="translated">ルートは指定された順序で照合されるため、get'photos / poll 'の上にリソース写真がある場合、リソース行のshowactionのルートはget行の前に照合されます。これを修正するには、get行をリソース行の上に移動して、最初に一致するようにします。</target>
        </trans-unit>
        <trans-unit id="8ba5b8d415b0269d474dcb1bedecda88f60c074c" translate="yes" xml:space="preserve">
          <source>The routing for this would be:</source>
          <target state="translated">そのためのルーティングでしょう。</target>
        </trans-unit>
        <trans-unit id="1461fde23dadf89488e2ffe58300e891af4d872f" translate="yes" xml:space="preserve">
          <source>The routing has been beefed up</source>
          <target state="translated">ルーティングが強化されています</target>
        </trans-unit>
        <trans-unit id="9d6e8f5292c2b91c2f90d258564db98b6a6ef546" translate="yes" xml:space="preserve">
          <source>The row ID is a unique identifier that is generated by the cart code when an item is added to the cart. The reason a unique ID is created is so that identical products with different options can be managed by the cart.</source>
          <target state="translated">行IDは、カートに商品が追加されたときにカートコードで生成される一意の識別子です。固有IDが作成されるのは、オプションが異なる同一の商品をカートで管理できるようにするためです。</target>
        </trans-unit>
        <trans-unit id="8f50172784adc8f27b1800442fd74ced1ed12cb9" translate="yes" xml:space="preserve">
          <source>The same &lt;a href=&quot;https://github.com/codeigniter4/framework&quot;&gt;CodeIgniter 4 framework&lt;/a&gt; repository described in &amp;ldquo;Manual Installation&amp;rdquo; can also be added to an existing project using Composer.</source>
          <target state="translated">「手動インストール」で説明したのと同じ&lt;a href=&quot;https://github.com/codeigniter4/framework&quot;&gt;CodeIgniter4フレームワーク&lt;/a&gt;リポジトリを、Composerを使用して既存のプロジェクトに追加することもできます。</target>
        </trans-unit>
        <trans-unit id="dcb544c2b2de140573f98cba19cbb9e255c4b209" translate="yes" xml:space="preserve">
          <source>The same holds for a &lt;em&gt;short prefix&lt;/em&gt;, which is a namespace using only the lowercase version of the configuration class name. If the short prefix matches the class name, the value from &lt;strong&gt;.env&lt;/strong&gt; replaces the configuration file value.</source>
          <target state="translated">同じことが&lt;em&gt;短いプレフィックスに&lt;/em&gt;も当てはまり&lt;em&gt;ます&lt;/em&gt;。これは、構成クラス名の小文字バージョンのみを使用する名前空間です。短いプレフィックスがクラス名と一致する場合、&lt;strong&gt;.env&lt;/strong&gt;の値が構成ファイルの値に置き換わります。</target>
        </trans-unit>
        <trans-unit id="283d461ccbbbd3833da512f1cb92f5077d0ed78a" translate="yes" xml:space="preserve">
          <source>The save method also can make working with custom class result objects much simpler by recognizing a non-simple object and grabbing its public and protected values into an array, which is then passed to the appropriate insert or update method. This allows you to work with Entity classes in a very clean way. Entity classes are simple classes that represent a single instance of an object type, like a user, a blog post, job, etc. This class is responsible for maintaining the business logic surrounding the object itself, like formatting elements in a certain way, etc. They shouldn&amp;rsquo;t have any idea about how they are saved to the database. At their simplest, they might look like this:</source>
          <target state="translated">saveメソッドは、単純でないオブジェクトを認識し、そのパブリック値と保護された値を配列に取得して、適切な挿入メソッドまたは更新メソッドに渡すことにより、カスタムクラスの結果オブジェクトの操作をはるかに簡単にすることもできます。これにより、エンティティクラスを非常にクリーンな方法で操作できます。エンティティクラスは、ユーザー、ブログ投稿、ジョブなどのオブジェクトタイプの単一インスタンスを表す単純なクラスです。このクラスは、特定の方法で要素をフォーマットするなど、オブジェクト自体を取り巻くビジネスロジックを維持する役割を果たします。 。データベースにどのように保存されるかについて、彼らは何も知らないはずです。最も単純な場合、次のようになります。</target>
        </trans-unit>
        <trans-unit id="51b377cd0e3c2c56e9fa0ddf3a272315dc338478" translate="yes" xml:space="preserve">
          <source>The scheme is frequently &amp;lsquo;http&amp;rsquo; or &amp;lsquo;https&amp;rsquo;, but any scheme is supported, including &amp;lsquo;file&amp;rsquo;, &amp;lsquo;mailto&amp;rsquo;, etc.</source>
          <target state="translated">スキームは「http」または「https」であることがよくありますが、「file」、「mailto」など、任意のスキームがサポートされています。</target>
        </trans-unit>
        <trans-unit id="ce5ea4aee98ff3225fe8fddaebff0247002a413c" translate="yes" xml:space="preserve">
          <source>The second (optional) parameter allows you to optionally pass configuration setting. You will typically pass these as an array:</source>
          <target state="translated">2 番目の (オプションの)パラメータでは、オプションで設定を渡すことができます。通常は、これらを配列として渡します。</target>
        </trans-unit>
        <trans-unit id="ff3e08049ba61d132bb5f67ff5f2c2cb7efe6feb" translate="yes" xml:space="preserve">
          <source>The second (optional) parameter allows you to optionally pass configuration settings. You will typically pass these as an array:</source>
          <target state="translated">2 番目の (オプションの)パラメータでは、オプションで設定を渡すことができます。通常は配列として渡します。</target>
        </trans-unit>
        <trans-unit id="0df64ad357a37321c1f07de0851312afe2e745d1" translate="yes" xml:space="preserve">
          <source>The second &lt;strong&gt;optional&lt;/strong&gt; parameter can take an associative array or an object as input, which it runs through the PHP &lt;a href=&quot;http://php.net/extract&quot;&gt;extract()&lt;/a&gt; function to convert to variables that can be used in your view files. Again, read the &lt;a href=&quot;../general/views&quot;&gt;Views&lt;/a&gt; page to learn how this might be useful.</source>
          <target state="translated">2番目の&lt;strong&gt;オプションの&lt;/strong&gt;パラメーターは、連想配列またはオブジェクトを入力として受け取ることができます。これは、PHPの&lt;a href=&quot;http://php.net/extract&quot;&gt;extract（）&lt;/a&gt;関数を介して実行され、ビューファイルで使用できる変数に変換されます。繰り返しますが、&lt;a href=&quot;../general/views&quot;&gt;ビュー&lt;/a&gt;ページを読んで、これがどのように役立つかを学んでください。</target>
        </trans-unit>
        <trans-unit id="9b2700da8d3a489daddc87646edb95808421f95a" translate="yes" xml:space="preserve">
          <source>The second and third parameters enable you to set a limit and offset clause:</source>
          <target state="translated">2 番目と 3 番目のパラメータを使用すると、制限句とオフセット句を設定することができます。</target>
        </trans-unit>
        <trans-unit id="6c1dec89e930add4191cafe495c036fcb96ae4ba" translate="yes" xml:space="preserve">
          <source>The second and third parameters match up to the &lt;code&gt;depth&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments of the &lt;a href=&quot;https://www.php.net/manual/en/function.json-decode.php&quot;&gt;json_decode&lt;/a&gt; PHP function.</source>
          <target state="translated">2番目と3番目のパラメータは、最大一致 &lt;code&gt;depth&lt;/code&gt; と &lt;code&gt;options&lt;/code&gt; の引数&lt;a href=&quot;https://www.php.net/manual/en/function.json-decode.php&quot;&gt;json_decodeの&lt;/a&gt;PHP機能。</target>
        </trans-unit>
        <trans-unit id="91f730e2cc7faffcffd285a5b539592095eb2a53" translate="yes" xml:space="preserve">
          <source>The second function, &lt;code&gt;single_service()&lt;/code&gt; works just like &lt;code&gt;service()&lt;/code&gt; but returns a new instance of the class:</source>
          <target state="translated">2番目の関数 &lt;code&gt;single_service()&lt;/code&gt; は &lt;code&gt;service()&lt;/code&gt; と同じように機能しますが、クラスの新しいインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="19ec84c78c7a65810139ab1bcd407a98da99e1ea" translate="yes" xml:space="preserve">
          <source>The second method is by passing a &lt;code&gt;body&lt;/code&gt; option in. This is provided to maintain Guzzle API compatibility, and functions the exact same way as the previous example. The value must be a string:</source>
          <target state="translated">2番目の方法は、 &lt;code&gt;body&lt;/code&gt; オプションを渡すことです。これは、Guzzle APIの互換性を維持するために提供されており、前の例とまったく同じように機能します。値は文字列である必要があります。</target>
        </trans-unit>
        <trans-unit id="a174af9ce4f53236e452cb6de7a327b0b09ce731" translate="yes" xml:space="preserve">
          <source>The second method uses a custom placeholder to detect the desired locale and set it on the Request. The placeholder &lt;code&gt;{locale}&lt;/code&gt; can be placed as a segment in your route. If present, the contents of the matching segment will be your locale:</source>
          <target state="translated">2番目の方法では、カスタムプレースホルダーを使用して目的のロケールを検出し、それをリクエストに設定します。プレースホルダー &lt;code&gt;{locale}&lt;/code&gt; は、ルートのセグメントとして配置できます。存在する場合、一致するセグメントの内容はロケールになります。</target>
        </trans-unit>
        <trans-unit id="c70906f986bd1e99f2cc602a6ab1b73c0d2f269e" translate="yes" xml:space="preserve">
          <source>The second optional parameter lets you run the data through the PHP&amp;rsquo;s filters. Pass in the desired filter type as the second parameter:</source>
          <target state="translated">2番目のオプションのパラメーターを使用すると、PHPのフィルターを介してデータを実行できます。2番目のパラメーターとして目的のフィルタータイプを渡します。</target>
        </trans-unit>
        <trans-unit id="5b3dd961607875370c6235e14612e668e83f6b7b" translate="yes" xml:space="preserve">
          <source>The second optional parameter lets you run the data through the XSS filter. It&amp;rsquo;s enabled by setting the second parameter to boolean TRUE or by setting your &lt;code&gt;$config['global_xss_filtering']&lt;/code&gt; to TRUE.</source>
          <target state="translated">2番目のオプションのパラメーターを使用すると、XSSフィルターを介してデータを実行できます。2番目のパラメーターをブール値のTRUEに設定するか、 &lt;code&gt;$config['global_xss_filtering']&lt;/code&gt; をTRUEに設定することで有効になります。</target>
        </trans-unit>
        <trans-unit id="386329d69f1274d273fa0c52d4d9e0d5f01e7caa" translate="yes" xml:space="preserve">
          <source>The second parameter accepts an array of options that can be used to modify the routes that are generated.</source>
          <target state="translated">2 番目のパラメータには、生成されるルートを変更するために使用できるオプションの配列を指定します。</target>
        </trans-unit>
        <trans-unit id="69aca2d451bad6a32d42cf9ac93905c09823f63b" translate="yes" xml:space="preserve">
          <source>The second parameter accepts an array of options that can be used to modify the routes that are generated. While these routes are geared toward API-usage, where more methods are allowed, you can pass in the &amp;lsquo;websafe&amp;rsquo; option to have it generate update and delete methods that work with HTML forms:</source>
          <target state="translated">2番目のパラメーターは、生成されるルートを変更するために使用できるオプションの配列を受け入れます。これらのルートは、より多くのメソッドが許可されているAPIの使用を対象としていますが、「websafe」オプションを渡して、HTMLフォームで機能する更新メソッドと削除メソッドを生成させることができます。</target>
        </trans-unit>
        <trans-unit id="eaf26f12d355fcc18f52841c1ddf07d1771920c6" translate="yes" xml:space="preserve">
          <source>The second parameter determines the word delimiter. By default dashes are used. Preferred options are: &lt;strong&gt;-&lt;/strong&gt; (dash) or &lt;strong&gt;_&lt;/strong&gt; (underscore)</source>
          <target state="translated">2番目のパラメーターは、単語の区切り文字を決定します。デフォルトではダッシュが使用されます。優先オプションは次のとおりです。&lt;strong&gt;- &lt;/strong&gt;（ダッシュ）または&lt;strong&gt;_&lt;/strong&gt;（アンダースコア）</target>
        </trans-unit>
        <trans-unit id="d16dd4c639ea165f67d8a2f679ec71d32e7d6f2a" translate="yes" xml:space="preserve">
          <source>The second parameter determines the word delimiter. By default dashes are used. Preferred options are: &lt;strong&gt;-&lt;/strong&gt; (dash) or &lt;strong&gt;_&lt;/strong&gt; (underscore).</source>
          <target state="translated">2番目のパラメーターは、単語の区切り文字を決定します。デフォルトではダッシュが使用されます。好適なオプションは次のとおりです。&lt;strong&gt;- &lt;/strong&gt;（ダッシュ）または&lt;strong&gt;_&lt;/strong&gt;（アンダースコア）。</target>
        </trans-unit>
        <trans-unit id="90a240ca98719ba45cd84aedb73cb7ec0bf400a8" translate="yes" xml:space="preserve">
          <source>The second parameter determines whether URLs and e-mails are converted or just one or the other. Default behavior is both if the parameter is not specified. E-mail links are encoded as &lt;a href=&quot;#safe_mailto&quot;&gt;&lt;code&gt;safe_mailto()&lt;/code&gt;&lt;/a&gt; as shown above.</source>
          <target state="translated">2番目のパラメーターは、URLと電子メールを変換するか、どちらか一方のみを変換するかを決定します。パラメータが指定されていない場合、デフォルトの動作は両方です。上記のように、電子メールリンクは&lt;a href=&quot;#safe_mailto&quot;&gt; &lt;code&gt;safe_mailto()&lt;/code&gt; &lt;/a&gt;としてエンコードされます。</target>
        </trans-unit>
        <trans-unit id="11508399195304b8ca2bd55790044c4013c26af1" translate="yes" xml:space="preserve">
          <source>The second parameter determines whether URLs and e-mails are converted or just one or the other. The default behavior is both if the parameter is not specified. E-mail links are encoded as &lt;a href=&quot;#safe_mailto&quot;&gt;&lt;code&gt;safe_mailto()&lt;/code&gt;&lt;/a&gt; as shown above.</source>
          <target state="translated">2番目のパラメーターは、URLと電子メールを変換するか、どちらか一方だけを変換するかを決定します。パラメータが指定されていない場合、デフォルトの動作は両方です。電子メールリンクは、上記のように&lt;a href=&quot;#safe_mailto&quot;&gt; &lt;code&gt;safe_mailto()&lt;/code&gt; &lt;/a&gt;としてエンコードされます。</target>
        </trans-unit>
        <trans-unit id="5797d2b9190725d83f6f0abc3b297f46bbbb91b8" translate="yes" xml:space="preserve">
          <source>The second parameter enables you to set whether or not the query builder query will be reset (by default it will be reset, just like when using &lt;code&gt;$this-&amp;gt;db-&amp;gt;get()&lt;/code&gt;):</source>
          <target state="translated">2番目のパラメーターを使用すると、クエリビルダークエリをリセットするかどうかを設定できます（デフォルトでは、 &lt;code&gt;$this-&amp;gt;db-&amp;gt;get()&lt;/code&gt; を使用する場合と同様にリセットされます）。</target>
        </trans-unit>
        <trans-unit id="9b515246b8f6aa754bd23425a60d8b28e10bd8a2" translate="yes" xml:space="preserve">
          <source>The second parameter enables you to set whether or not the query builder query will be reset (by default it will be&amp;ndash;just like $builder-&amp;gt;insert()):</source>
          <target state="translated">2番目のパラメーターを使用すると、クエリビルダークエリをリセットするかどうかを設定できます（デフォルトでは、$ builder-&amp;gt; insert（）のようになります）。</target>
        </trans-unit>
        <trans-unit id="75c161bfe896d1841c7ea0ccc907fe14b176986d" translate="yes" xml:space="preserve">
          <source>The second parameter enables you to set whether or not the query builder query will be reset (by default it will be&amp;ndash;just like $this-&amp;gt;db-&amp;gt;insert()):</source>
          <target state="translated">2番目のパラメーターを使用すると、クエリビルダークエリをリセットするかどうかを設定できます（デフォルトでは、$ this-&amp;gt; db-&amp;gt; insert（）のようにリセットされます）。</target>
        </trans-unit>
        <trans-unit id="693f823c971a8ece41b08ee055ad884bdd4497ec" translate="yes" xml:space="preserve">
          <source>The second parameter lets you set a CSS class name for the menu.</source>
          <target state="translated">2 番目のパラメータでは、メニューの CSS クラス名を設定します。</target>
        </trans-unit>
        <trans-unit id="898a1e11ac60296e9fafee952e3f368403def4df" translate="yes" xml:space="preserve">
          <source>The second parameter lets you set a result offset.</source>
          <target state="translated">2 番目のパラメータでは、結果のオフセットを設定します。</target>
        </trans-unit>
        <trans-unit id="8376a81d6b363e1079ef94758c698a41c737c688" translate="yes" xml:space="preserve">
          <source>The second parameter lets you set default key names, so that the array returned will always contain expected indexes, even if missing from the URI. Example:</source>
          <target state="translated">2 番目のパラメータではデフォルトのキー名を設定します。これにより、返される配列には、たとえ URI に含まれていなくても常に期待されるインデックスが含まれます。例を示します。</target>
        </trans-unit>
        <trans-unit id="a28a584474aca7216a40c4b2bf5d872ece32babe" translate="yes" xml:space="preserve">
          <source>The second parameter lets you set the direction of the result. Options are &lt;strong&gt;ASC&lt;/strong&gt;, &lt;strong&gt;DESC&lt;/strong&gt; AND &lt;strong&gt;RANDOM&lt;/strong&gt;.</source>
          <target state="translated">2番目のパラメーターでは、結果の方向を設定できます。オプションは、&lt;strong&gt;ASC&lt;/strong&gt;、&lt;strong&gt;DESC、&lt;/strong&gt;および&lt;strong&gt;RANDOM&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="61a285b5f0cd09dff994f73b92d3981ee0f92095" translate="yes" xml:space="preserve">
          <source>The second section allows you to define any filters that should be applied to every request made by the framework. You should take care with how many you use here, since it could have performance implications to have too many run on every request. Filters can be specified by adding their alias to either the before or after array:</source>
          <target state="translated">2 番目のセクションでは、フレームワークによって行われるすべてのリクエストに適用されるフィルタを定義できます。ここで使用するフィルタの数には注意しなければなりません。フィルタは配列の前か後のどちらかにエイリアスを追加することで指定できます。</target>
        </trans-unit>
        <trans-unit id="55b770bfe651af254035444c5d7c703696f57469" translate="yes" xml:space="preserve">
          <source>The second segment is the text you would like the link to say. If you leave it blank, the URL will be used.</source>
          <target state="translated">2つ目のセグメントは、リンクに表示させたいテキストです。空欄のままにしておくと、URLが使用されます。</target>
        </trans-unit>
        <trans-unit id="7047ddee67c065e9d66a4072cdc3ec1caeee2102" translate="yes" xml:space="preserve">
          <source>The second segment represents the class &lt;strong&gt;function&lt;/strong&gt;, or method, that should be called.</source>
          <target state="translated">2番目のセグメントは、呼び出されるクラス&lt;strong&gt;関数&lt;/strong&gt;またはメソッドを表します。</target>
        </trans-unit>
        <trans-unit id="8023c7bb496406d9e4c8abe600242ff2f0e773d8" translate="yes" xml:space="preserve">
          <source>The second segment represents the class &lt;strong&gt;method&lt;/strong&gt; that should be called.</source>
          <target state="translated">2番目のセグメントは、呼び出す必要のあるクラス&lt;strong&gt;メソッド&lt;/strong&gt;を表します。</target>
        </trans-unit>
        <trans-unit id="43196c7b97c0190afc2bab02e24e3015b455e0e4" translate="yes" xml:space="preserve">
          <source>The second, third, and fourth parameters allow you to set the delimiter newline, and enclosure characters respectively. By default commas are used as the delimiter, &amp;ldquo;n&amp;rdquo; is used as a new line, and a double-quote is used as the enclosure. Example:</source>
          <target state="translated">2番目、3番目、4番目のパラメーターを使用すると、区切り文字の改行文字と囲み文字をそれぞれ設定できます。デフォルトでは、コンマが区切り文字として使用され、「n」が新しい行として使用され、二重引用符が囲みとして使用されます。例：</target>
        </trans-unit>
        <trans-unit id="64f9f9f8baafdbc6b0a6658bb6866fa04fc2d4a9" translate="yes" xml:space="preserve">
          <source>The secondary benefit of using binds is that the values are automatically escaped producing safer queries. You don&amp;rsquo;t have to remember to manually escape data &amp;mdash; the engine does it automatically for you.</source>
          <target state="translated">バインドを使用することの2番目の利点は、値が自動的にエスケープされ、より安全なクエリが生成されることです。データを手動でエスケープすることを覚えておく必要はありません&amp;mdash;エンジンが自動的にエスケープします。</target>
        </trans-unit>
        <trans-unit id="ea104d43719f2219c1047293a6fcd4c23be998f0" translate="yes" xml:space="preserve">
          <source>The secondary benefit of using binds is that the values are automatically escaped, producing safer queries. You don&amp;rsquo;t have to remember to manually escape data; the engine does it automatically for you.</source>
          <target state="translated">バインドを使用する第2の利点は、値が自動的にエスケープされ、より安全なクエリが生成されることです。手動でデータをエスケープすることを覚えておく必要はありません。エンジンが自動的に行います。</target>
        </trans-unit>
        <trans-unit id="5a305051f6ba1ab2952a9ec147d3d39edb59e0db" translate="yes" xml:space="preserve">
          <source>The secure boolean is only needed if you want to make it a secure cookie by setting it to TRUE.</source>
          <target state="translated">secure booleanは、TRUEを設定して安全なクッキーにしたい場合にのみ必要です。</target>
        </trans-unit>
        <trans-unit id="77df4a7848f252e2d02f363e09b48d8edd6797f9" translate="yes" xml:space="preserve">
          <source>The security filtering method is called automatically when a new &lt;a href=&quot;../general/controllers&quot;&gt;controller&lt;/a&gt; is invoked. It does the following:</source>
          <target state="translated">セキュリティフィルタリングメソッドは、新しい&lt;a href=&quot;../general/controllers&quot;&gt;コントローラー&lt;/a&gt;が呼び出されると自動的に呼び出されます。次のことを行います。</target>
        </trans-unit>
        <trans-unit id="e454ae4211a0ecb07416ce9b58f3bfa644f3497b" translate="yes" xml:space="preserve">
          <source>The seed records might be something like:</source>
          <target state="translated">種目の記録はこんな感じかもしれません。</target>
        </trans-unit>
        <trans-unit id="90c36012496a2ca4287a456135b50c87fe1b7ba1" translate="yes" xml:space="preserve">
          <source>The segment numbers would be this:</source>
          <target state="translated">セグメント番号はこうなります。</target>
        </trans-unit>
        <trans-unit id="5a1bf6187d083ef51315d41611b561f3c7823c19" translate="yes" xml:space="preserve">
          <source>The segments in the URL, in following with the Model-View-Controller approach, usually represent:</source>
          <target state="translated">URL内のセグメントは、Model-View-Controllerのアプローチでは、通常、以下のように表現されます。</target>
        </trans-unit>
        <trans-unit id="c7efdd948b75b9d10b8e24bb0f011f7c8e3effc0" translate="yes" xml:space="preserve">
          <source>The server now needs to provide a list of what type of content it can provide. In this example, the API might be able to return data as raw HTML, JSON, or XML. This list should be provided in order of preference:</source>
          <target state="translated">サーバーは、提供できるコンテンツの種類のリストを提供する必要があります。この例では、API は生の HTML、JSON、または XML としてデータを返すことができるかもしれません。このリストは、優先順位の高い順に提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="bf7c9b8ac32744e285bbbbc67d3c45a5c0dacfd4" translate="yes" xml:space="preserve">
          <source>The server path to Sendmail.</source>
          <target state="translated">Sendmailのサーバーパス。</target>
        </trans-unit>
        <trans-unit id="67524d3d2aab08b247f1e89ed98b9473341d81e4" translate="yes" xml:space="preserve">
          <source>The server path to the True Type Font you would like to use. If you do not use this option, the native GD font will be used.</source>
          <target state="translated">使用したい True Type Font のサーバーパス。このオプションを使用しない場合は、ネイティブのGDフォントが使用されます。</target>
        </trans-unit>
        <trans-unit id="eb6f214fd0c8022ee1b0aec6fbcba35a16b56f01" translate="yes" xml:space="preserve">
          <source>The server path to the image you wish to use as your watermark. Required only if you are using the overlay method.</source>
          <target state="translated">透かしとして使用する画像のサーバーパス。オーバーレイ方式を使用している場合にのみ必要です。</target>
        </trans-unit>
        <trans-unit id="2c0a05f98ab0d52976b0b9c65768650effd19258" translate="yes" xml:space="preserve">
          <source>The session storage driver to use.</source>
          <target state="translated">使用するセッション・ストレージ・ドライバ。</target>
        </trans-unit>
        <trans-unit id="6e103a4527cd56ac0b59eb2c140b28cec25dabd5" translate="yes" xml:space="preserve">
          <source>The settings for the Redis server that you wish to use when using the &lt;code&gt;Redis&lt;/code&gt; and &lt;code&gt;Predis&lt;/code&gt; handler.</source>
          <target state="translated">&lt;code&gt;Redis&lt;/code&gt; および &lt;code&gt;Predis&lt;/code&gt; ハンドラーを使用するときに使用するRedisサーバーの設定。</target>
        </trans-unit>
        <trans-unit id="a48ca72a1b7c8849316c4692ea1c9fdb5c2fbcb4" translate="yes" xml:space="preserve">
          <source>The settings used for the last successful send are available from the instance property &lt;code&gt;$archive&lt;/code&gt;. This is helpful for testing and debugging to determine that actual values at the time of the &lt;code&gt;send()&lt;/code&gt; call.</source>
          <target state="translated">最後に成功した送信に使用された設定は、インスタンスプロパティ &lt;code&gt;$archive&lt;/code&gt; から利用できます。これは、 &lt;code&gt;send()&lt;/code&gt; 呼び出し時の実際の値を判別するためのテストとデバッグに役立ちます。</target>
        </trans-unit>
        <trans-unit id="5848ce93c6ba09d39e3aa715dff827528ee2d42a" translate="yes" xml:space="preserve">
          <source>The simplest method to load the parser class is through its service:</source>
          <target state="translated">パーサクラスをロードする最も簡単な方法は、そのサービスを利用することです。</target>
        </trans-unit>
        <trans-unit id="2793017edf2c19111b17d87e0781a0498b3b2dd1" translate="yes" xml:space="preserve">
          <source>The simplest method to set the variable is in your &lt;a href=&quot;configuration&quot;&gt;.env file&lt;/a&gt;.</source>
          <target state="translated">変数を設定する最も簡単な方法は、&lt;a href=&quot;configuration&quot;&gt;.envファイルにあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14f1a123f9f3907c85b578698331a5a9463b5e5c" translate="yes" xml:space="preserve">
          <source>The size of the text. Note: If you are not using the True Type option above, the number is set using a range of 1 - 5. Otherwise, you can use any valid pixel size for the font you&amp;rsquo;re using.</source>
          <target state="translated">テキストのサイズ。注：上記のTrue Typeオプションを使用していない場合、数値は1〜5の範囲を使用して設定されます。それ以外の場合は、使用しているフォントに任意の有効なピクセルサイズを使用できます。</target>
        </trans-unit>
        <trans-unit id="49caf9b3b13141a69c6bd874716d826327a7ca49" translate="yes" xml:space="preserve">
          <source>The solution: use Apache to serve your site, or else the built-in CodeIgniter equivalent, &lt;code&gt;php spark serve&lt;/code&gt; from your project root.</source>
          <target state="translated">解決策：Apacheを使用してサイトにサービスを提供するか、組み込みのCodeIgniterに相当するphpSparkをプロジェクトルートから &lt;code&gt;php spark serve&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="bf0178ab76354ed40548536632aefae29105d8dc" translate="yes" xml:space="preserve">
          <source>The static methods run before and after the entire test case, whereas the local methods run between each test. If you implement any of these special functions make sure you run their parent as well so extended test cases do not interfere with staging:</source>
          <target state="translated">静的メソッドはテストケース全体の前後に実行され、ローカルメソッドは各テストの間に実行されます。これらの特別な関数を実装する場合は、拡張されたテストケースがステージングに干渉しないように、親関数も実行するようにしてください。</target>
        </trans-unit>
        <trans-unit id="66030269b38548b965739f4d3d6aa0fc86195f44" translate="yes" xml:space="preserve">
          <source>The string &amp;ldquo;Safari&amp;rdquo; in this example is an array key in the list of browser definitions. You can find this list in &lt;strong&gt;app/Config/UserAgents.php&lt;/strong&gt; if you want to add new browsers or change the strings.</source>
          <target state="translated">この例の文字列「Safari」は、ブラウザ定義のリストにある配列キーです。新しいブラウザを追加したり、文字列を変更したりする場合は、&lt;strong&gt;app / Config /UserAgents.phpに&lt;/strong&gt;このリストがあります。</target>
        </trans-unit>
        <trans-unit id="99919864fae4ef3fff139d4da3ce5dbe53058384" translate="yes" xml:space="preserve">
          <source>The string &amp;ldquo;Safari&amp;rdquo; in this example is an array key in the list of browser definitions. You can find this list in &lt;strong&gt;application/config/user_agents.php&lt;/strong&gt; if you want to add new browsers or change the stings.</source>
          <target state="translated">この例の文字列「Safari」は、ブラウザ定義のリストの配列キーです。新しいブラウザを追加したり、文字列を変更したりする場合は、&lt;strong&gt;application / config / user_agents.phpに&lt;/strong&gt;このリストがあり&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ac4f1b1a742c8a56666d2205e2499dac4a2fe779" translate="yes" xml:space="preserve">
          <source>The system can be easily extended through the use of your own libraries, helpers, or through class extensions or system hooks.</source>
          <target state="translated">独自のライブラリやヘルパーを使ったり、クラス拡張やシステムフックを使って簡単にシステムを拡張することができます。</target>
        </trans-unit>
        <trans-unit id="9f62d84cf3048a2846109df553af0167fefb7145" translate="yes" xml:space="preserve">
          <source>The system is not perfect and should be tested for your specific domain before being used in production. Most domains should work fine but some edge case ones, especially with a period in the domain itself (not used to separate suffixes or www) can potentially lead to false positives.</source>
          <target state="translated">このシステムは完全ではありませんので、本番で使用する前に特定のドメインについてテストする必要があります。ほとんどのドメインは問題なく動作するはずですが、特にドメイン自体にピリオドが含まれているエッジケースのドメイン(接尾辞やwwwの区切りには使用されていません)は、誤検出の原因となる可能性があります。</target>
        </trans-unit>
        <trans-unit id="93bd5e2d665ce7c3d07e3d8b90b8d64e25495080" translate="yes" xml:space="preserve">
          <source>The system is smart enough to fall back to more generic language codes if an exact match cannot be found. If the locale code was set to &lt;strong&gt;en-US&lt;/strong&gt; and we only have language files set up for &lt;strong&gt;en&lt;/strong&gt; then those will be used since nothing exists for the more specific &lt;strong&gt;en-US&lt;/strong&gt;. If, however, a language directory existed at &lt;strong&gt;app/Language/en-US&lt;/strong&gt; then that would be used first.</source>
          <target state="translated">システムは、完全に一致するものが見つからない場合に、より一般的な言語コードにフォールバックするのに十分スマートです。ロケールコードが&lt;strong&gt;en-USに&lt;/strong&gt;設定されていて、言語ファイルのみが&lt;strong&gt;enに&lt;/strong&gt;設定されている場合、より具体的な&lt;strong&gt;en-USに&lt;/strong&gt;は何も存在しないため、それらが使用されます。ただし、言語ディレクトリが&lt;strong&gt;app / Language / en-USに&lt;/strong&gt;存在する場合は、それが最初に使用されます。</target>
        </trans-unit>
        <trans-unit id="001045e2a8289e1472396f382fd9995e615278d2" translate="yes" xml:space="preserve">
          <source>The system is unusable.</source>
          <target state="translated">使えない状態になっています。</target>
        </trans-unit>
        <trans-unit id="4fbf47460f70c1132e18e702a999c88eff0dbeae" translate="yes" xml:space="preserve">
          <source>The system will attempt to match the URI against Controllers by matching each segment against folders/files in APPPATH/Controllers, when a match wasn&amp;rsquo;t found against defined routes. That&amp;rsquo;s why your folders/files MUST start with a capital letter and the rest MUST be lowercase. If you want another naming convention you need to manually define it using the &lt;a href=&quot;routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">定義されたルートに対して一致が見つからなかった場合、システムは、APPPATH / Controllers内のフォルダー/ファイルに対して各セグメントを照合することにより、コントローラーに対してURIを照合しようとします。そのため、フォルダ/ファイルは大文字で始め、残りは小文字にする必要があります。別の命名規則が必要な場合は、&lt;a href=&quot;routing&quot;&gt;URIルーティング&lt;/a&gt;機能を使用して手動で定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="872e2af95489361c67c3a924a6123ef629a547cc" translate="yes" xml:space="preserve">
          <source>The table name for storing the schema version number.</source>
          <target state="translated">スキーマのバージョン番号を格納するテーブル名。</target>
        </trans-unit>
        <trans-unit id="49c245e00702ac011c5e69dd3f3e8159b26929dd" translate="yes" xml:space="preserve">
          <source>The term &amp;ldquo;extend&amp;rdquo; is used loosely since Helper functions are procedural and discrete and cannot be extended in the traditional programmatic sense. Under the hood, this gives you the ability to add to or or to replace the functions a Helper provides.</source>
          <target state="translated">ヘルパー関数は手続き型で離散的であり、従来のプログラムの意味では拡張できないため、「拡張」という用語は大まかに使用されています。これにより、ヘルパーが提供する機能を追加または置換することができます。</target>
        </trans-unit>
        <trans-unit id="04e28c4ffddf86dba326a1e0d7c28cb538c81a9d" translate="yes" xml:space="preserve">
          <source>The term &amp;ldquo;extend&amp;rdquo; is used loosely since Helper functions are procedural and discrete and cannot be extended in the traditional programmatic sense. Under the hood, this gives you the ability to add to, or to replace the functions a Helper provides.</source>
          <target state="translated">「拡張」という用語は、ヘルパー関数が手続き型で離散的であり、従来のプログラム的な意味で拡張できないため、大まかに使用されます。内部的には、これにより、ヘルパーが提供する機能を追加したり、置き換えたりすることができます。</target>
        </trans-unit>
        <trans-unit id="f7a4d61b02735bd4e065c645039db16aafadb1ad" translate="yes" xml:space="preserve">
          <source>The terms &amp;lsquo;cipher&amp;rsquo; and &amp;lsquo;encryption algorithm&amp;rsquo; are interchangeable.</source>
          <target state="translated">「暗号」と「暗号化アルゴリズム」という用語は同じ意味で使用されます。</target>
        </trans-unit>
        <trans-unit id="86e87930148a647d6bf41b2bd5ca7a200bd525c1" translate="yes" xml:space="preserve">
          <source>The test is evaluating an integer, but the expected result is a boolean. PHP, however, due to it&amp;rsquo;s loose data-typing will evaluate the above code as TRUE using a normal equality test:</source>
          <target state="translated">テストは整数を評価していますが、期待される結果はブール値です。ただし、PHPはデータタイプが緩いため、通常の等価テストを使用して上記のコードをTRUEと評価します。</target>
        </trans-unit>
        <trans-unit id="c6b61f2e9351eaf641a989818648e317c2f4091e" translate="yes" xml:space="preserve">
          <source>The text contained in the menu is found in the following language file: &lt;code&gt;language/&amp;lt;your_lang&amp;gt;/date_lang.php&lt;/code&gt;</source>
          <target state="translated">メニューに含まれるテキストは、次の言語ファイルにあります： &lt;code&gt;language/&amp;lt;your_lang&amp;gt;/date_lang.php&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="846bf76f374e6d4e602d0bd51abe0a3fe911609b" translate="yes" xml:space="preserve">
          <source>The text generated by this function is found in the following language file: &lt;code&gt;language/&amp;lt;your_lang&amp;gt;/date_lang.php&lt;/code&gt;</source>
          <target state="translated">この関数によって生成されたテキストは、次の言語ファイルにあります： &lt;code&gt;language/&amp;lt;your_lang&amp;gt;/date_lang.php&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e137e9dd69532ed94adf59e22703e3c3526ef41f" translate="yes" xml:space="preserve">
          <source>The text generated by this function is found in the following language file: &lt;em&gt;language/&amp;lt;your_lang&amp;gt;/Number.php&lt;/em&gt;</source>
          <target state="translated">この関数によって生成されたテキストは、次の言語ファイルにあります：&lt;em&gt;language / &amp;lt;your_lang&amp;gt; /Number.php&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b87ec49b33b9952520b7ba66df4578328bd2b046" translate="yes" xml:space="preserve">
          <source>The text generated by this function is found in the following language file: &lt;em&gt;language/&amp;lt;your_lang&amp;gt;/number_lang.php&lt;/em&gt;</source>
          <target state="translated">この関数によって生成されたテキストは、次の言語ファイルにあります：&lt;em&gt;language / &amp;lt;your_lang&amp;gt; /number_lang.php&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5dc96c44ea9886a100a5a8c003fe214a18cb8531" translate="yes" xml:space="preserve">
          <source>The text you would like shown as the watermark. Typically this will be a copyright notice.</source>
          <target state="translated">透かしとして表示したいテキスト。通常、これは著作権表示になります。</target>
        </trans-unit>
        <trans-unit id="145eafdf698fbda2f060ee98da7f8b042fad14e2" translate="yes" xml:space="preserve">
          <source>The text you would like shown in the &amp;ldquo;first&amp;rdquo; link on the left. If you do not want this link rendered, you can set its value to FALSE.</source>
          <target state="translated">左側の「最初の」リンクに表示するテキスト。このリンクをレンダリングしたくない場合は、その値をFALSEに設定できます。</target>
        </trans-unit>
        <trans-unit id="0b5e138da4f4b0a586d1f0d015b76c0f75e20467" translate="yes" xml:space="preserve">
          <source>The text you would like shown in the &amp;ldquo;last&amp;rdquo; link on the right. If you do not want this link rendered, you can set its value to FALSE.</source>
          <target state="translated">右側の「最後の」リンクに表示するテキスト。このリンクをレンダリングしたくない場合は、その値をFALSEに設定できます。</target>
        </trans-unit>
        <trans-unit id="9db212fb97160fd2e25162536097699623505636" translate="yes" xml:space="preserve">
          <source>The text you would like shown in the &amp;ldquo;next&amp;rdquo; page link. If you do not want this link rendered, you can set its value to FALSE.</source>
          <target state="translated">「次の」ページのリンクに表示するテキスト。このリンクをレンダリングしたくない場合は、その値をFALSEに設定できます。</target>
        </trans-unit>
        <trans-unit id="1f2d15912bae9c88cab50683acbf9b3bd42f43a1" translate="yes" xml:space="preserve">
          <source>The text you would like shown in the &amp;ldquo;previous&amp;rdquo; page link. If you do not want this link rendered, you can set its value to FALSE.</source>
          <target state="translated">「前の」ページのリンクに表示するテキスト。このリンクをレンダリングしたくない場合は、その値をFALSEに設定できます。</target>
        </trans-unit>
        <trans-unit id="dd05495a9658b7f02d35550bba527e6a9eaad68b" translate="yes" xml:space="preserve">
          <source>The third &lt;strong&gt;optional&lt;/strong&gt; parameter lets you change the behavior of the method so that it returns data as a string rather than sending it to your browser. This can be useful if you want to process the data in some way. If you set the parameter to TRUE (boolean) it will return data. The default behavior is FALSE, which sends it to your browser. Remember to assign it to a variable if you want the data returned:</source>
          <target state="translated">3番目の&lt;strong&gt;オプション&lt;/strong&gt;パラメータを使用すると、データをブラウザに送信するのではなく文字列として返すようにメソッドの動作を変更できます。これは、何らかの方法でデータを処理する場合に役立ちます。パラメータをTRUE（ブール）に設定すると、データが返されます。デフォルトの動作はFALSEで、ブラウザに送信されます。データを返したい場合は、必ず変数に割り当ててください。</target>
        </trans-unit>
        <trans-unit id="fdee4b1dee21b01aa26d5464cc6834581bd5592a" translate="yes" xml:space="preserve">
          <source>The third parameter allows you to suppress errors in the event that a config file does not exist:</source>
          <target state="translated">3番目のパラメータでは、設定ファイルが存在しない場合のエラーを抑制することができます。</target>
        </trans-unit>
        <trans-unit id="6438dc0398f2b0ec80fad5bb33750caf385a30d2" translate="yes" xml:space="preserve">
          <source>The third parameter can contain a list of attributes you would like added to the link. The attributes can be a simple string or an associative array.</source>
          <target state="translated">三番目のパラメータには、リンクに追加したい属性の一覧を指定します。属性には、単純な文字列か連想配列を指定します。</target>
        </trans-unit>
        <trans-unit id="729522a3cc7a40834999ac40e2ba86b073a2eba9" translate="yes" xml:space="preserve">
          <source>The third parameter contains a boolean TRUE/FALSE to determine whether the box should be checked or not.</source>
          <target state="translated">3 番目のパラメータには、ボックスをチェックするかどうかを決定するための boolean TRUE/FALSE が含まれています。</target>
        </trans-unit>
        <trans-unit id="65b19b18893c64483e0e745010adf89f6bf687c3" translate="yes" xml:space="preserve">
          <source>The third parameter determines whether links are shown in a new window. The value can be TRUE or FALSE (boolean):</source>
          <target state="translated">3 番目のパラメータは、リンクを新しいウィンドウに表示するかどうかを決定します。値は TRUE または FALSE (boolean)です。</target>
        </trans-unit>
        <trans-unit id="9368b9b7248186e474cb1c6ce09fcb06f6329f95" translate="yes" xml:space="preserve">
          <source>The third parameter determines whether or not lowercase characters are forced. By default they are not. Options are boolean TRUE/FALSE.</source>
          <target state="translated">3 番目のパラメータは、小文字を強制的に使用するかどうかを決定します。デフォルトでは強制されません。オプションは TRUE/FALSE です。</target>
        </trans-unit>
        <trans-unit id="91f7adbe88c6a97c0dd272adfc652045e0b2c566" translate="yes" xml:space="preserve">
          <source>The third parameter is an optional suffix added to the string, if undeclared this helper uses an ellipsis.</source>
          <target state="translated">3番目のパラメータは、文字列に追加されるオプションの接尾辞で、もし宣言されていない場合、このヘルパーはエリプシスを使用します。</target>
        </trans-unit>
        <trans-unit id="b1e176a9f361094b6030aab9d8eefa8eb31e978f" translate="yes" xml:space="preserve">
          <source>The third parameter is an optional suffix added to the string. By default it adds an ellipsis.</source>
          <target state="translated">3 番目のパラメータは、文字列に追加するオプションのサフィックスです。デフォルトでは省略記号が追加されます。</target>
        </trans-unit>
        <trans-unit id="bc85a920bbe71063d289662bbb5676b2ac78915e" translate="yes" xml:space="preserve">
          <source>The third, and any additional segments, represent the ID and any variables that will be passed to the controller.</source>
          <target state="translated">3 番目と追加のセグメントは、ID とコントローラに渡される変数を表します。</target>
        </trans-unit>
        <trans-unit id="833918b52320b838ab8835351346ffe9041be890" translate="yes" xml:space="preserve">
          <source>The time can be formatted with or without seconds, and it can be set to European or US format. If only the timestamp is submitted it will return the time without seconds formatted for the U.S.</source>
          <target state="translated">時刻は秒あり、秒なしのどちらでも構いませんし、ヨーロッパかアメリカのフォーマットに設定することもできます。もしタイムスタンプだけが送信された場合は、米国のフォーマットで秒なしの時間を返します。</target>
        </trans-unit>
        <trans-unit id="549397bbdb4a65bb1b6cf23b071a8967920be757" translate="yes" xml:space="preserve">
          <source>The timers are automatically displayed in the &lt;a href=&quot;debugging&quot;&gt;Debub Toolbar&lt;/a&gt;.</source>
          <target state="translated">タイマーは、&lt;a href=&quot;debugging&quot;&gt;デバブツールバーに&lt;/a&gt;自動的に表示されます。</target>
        </trans-unit>
        <trans-unit id="5181867fc8dae88558f1ce390d4ab4ee9a56c806" translate="yes" xml:space="preserve">
          <source>The timezone the application has been set to display dates in.</source>
          <target state="translated">アプリケーションが日付を表示するように設定されているタイムゾーンです。</target>
        </trans-unit>
        <trans-unit id="b3093e2ac2b8ce9100a5e36bd57d17da58fbc75b" translate="yes" xml:space="preserve">
          <source>The toolbar is enabled by default in any environment &lt;em&gt;except&lt;/em&gt; production. It will be shown whenever the constant CI_DEBUG is defined and it&amp;rsquo;s value is positive. This is defined in the boot files (i.e. app/Config/Boot/development.php) and can be modified there to determine what environments it shows itself in.</source>
          <target state="translated">ツールバーは、本番環境&lt;em&gt;を除く&lt;/em&gt;すべての環境でデフォルトで有効になっています。定数CI_DEBUGが定義されていて、その値が正の場合は常に表示されます。これはブートファイル（つまり、app / Config / Boot / development.php）で定義されており、そこで変更して、どの環境に表示されるかを決定できます。</target>
        </trans-unit>
        <trans-unit id="c8ead8483abb17f6b0b924cb9412ba39c8a95f33" translate="yes" xml:space="preserve">
          <source>The toolbar itself is displayed as an &lt;a href=&quot;../incoming/filters&quot;&gt;After Filter&lt;/a&gt;. You can stop it from ever running by removing it from the &lt;code&gt;$globals&lt;/code&gt; property of &lt;strong&gt;app/Config/Filters.php&lt;/strong&gt;.</source>
          <target state="translated">ツールバー自体は、&lt;a href=&quot;../incoming/filters&quot;&gt;アフターフィルター&lt;/a&gt;として表示されます。&lt;strong&gt;app / Config /Filters.phpの&lt;/strong&gt; &lt;code&gt;$globals&lt;/code&gt; プロパティから削除することで、実行を停止できます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49286f7a63de49638023a986b47630601eb40df5" translate="yes" xml:space="preserve">
          <source>The total number of queries executed</source>
          <target state="translated">実行されたクエリの総数</target>
        </trans-unit>
        <trans-unit id="e8befc4db36b46d5df2ba9dd5123e904c5ff0ae2" translate="yes" xml:space="preserve">
          <source>The tutorial gives 404 errors everywhere :(</source>
          <target state="translated">チュートリアルではどこでも404エラーが出ます :(</target>
        </trans-unit>
        <trans-unit id="a30e71da625e268b1ca904dc1045563c96b30821" translate="yes" xml:space="preserve">
          <source>The two methods used here, &lt;code&gt;findAll()&lt;/code&gt; and &lt;code&gt;first()&lt;/code&gt;, are provided by the Model class. They already know the table to use based on the &lt;code&gt;$table&lt;/code&gt; property we set in &lt;strong&gt;NewsModel&lt;/strong&gt; class, earlier. They are helper methods that use the Query Builder to run their commands on the current table, and returning an array of results in the format of your choice. In this example, &lt;code&gt;findAll()&lt;/code&gt; returns an array of objects.</source>
          <target state="translated">ここで使用される2つのメソッド、 &lt;code&gt;findAll()&lt;/code&gt; と &lt;code&gt;first()&lt;/code&gt; は、Modelクラスによって提供されます。彼らは、以前に&lt;strong&gt;NewsModel&lt;/strong&gt;クラスで設定した &lt;code&gt;$table&lt;/code&gt; プロパティに基づいて使用するテーブルをすでに知っています。これらは、クエリビルダーを使用して現在のテーブルでコマンドを実行し、選択した形式で結果の配列を返すヘルパーメソッドです。この例では、 &lt;code&gt;findAll()&lt;/code&gt; はオブジェクトの配列を返します。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4ee6ad41b5087b9e1db5fdec7fc0b49d7661837" translate="yes" xml:space="preserve">
          <source>The type of numeric identifier used to name migration files.</source>
          <target state="translated">移行ファイルの名前を付けるために使用される数値識別子のタイプ。</target>
        </trans-unit>
        <trans-unit id="06d07d50e8790295fca587f907628a00b71da5ba" translate="yes" xml:space="preserve">
          <source>The unsetting routine is effectively the same as &lt;em&gt;register_globals = off&lt;/em&gt;.</source>
          <target state="translated">設定解除ルーチンは、実質的に&lt;em&gt;register_globals = off&lt;/em&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="8231fcf2b84eb3510fd1484d1d85b1a988e02b88" translate="yes" xml:space="preserve">
          <source>The updated SQL statement</source>
          <target state="translated">更新されたSQL文</target>
        </trans-unit>
        <trans-unit id="7e660ca118ce503e603eac64d87b461f8b0e08e4" translate="yes" xml:space="preserve">
          <source>The usage of this method is identical to &lt;code&gt;addColumn()&lt;/code&gt;, except it alters an existing column rather than adding a new one. In order to change the name, you can add a &amp;ldquo;name&amp;rdquo; key into the field defining array.</source>
          <target state="translated">このメソッドの使用法は、新しい列を追加するのではなく、既存の列を変更することを除いて、 &lt;code&gt;addColumn()&lt;/code&gt; と同じです。名前を変更するために、フィールド定義配列に「name」キーを追加できます。</target>
        </trans-unit>
        <trans-unit id="46408a6498e023f903cf4f150fc7ef72725eb174" translate="yes" xml:space="preserve">
          <source>The usage of this method is identical to &lt;code&gt;add_column()&lt;/code&gt;, except it alters an existing column rather than adding a new one. In order to change the name you can add a &amp;ldquo;name&amp;rdquo; key into the field defining array.</source>
          <target state="translated">このメソッドの使用法は、新しい列を追加するのではなく既存の列を変更することを除いて、 &lt;code&gt;add_column()&lt;/code&gt; と同じです。名前を変更するには、「name」キーをフィールド定義配列に追加できます。</target>
        </trans-unit>
        <trans-unit id="c46954e2352cf8d888736d81298fba498ab32218" translate="yes" xml:space="preserve">
          <source>The user agent library only contains the most common robot definitions. It is not a complete list of bots. There are hundreds of them so searching for each one would not be very efficient. If you find that some bots that commonly visit your site are missing from the list you can add them to your &lt;strong&gt;app/Config/UserAgents.php&lt;/strong&gt; file.</source>
          <target state="translated">ユーザーエージェントライブラリには、最も一般的なロボット定義のみが含まれています。ボットの完全なリストではありません。それらは何百もあるので、それぞれを検索することはあまり効率的ではありません。サイトによくアクセスするボットがリストにない場合は、それらを&lt;strong&gt;app / Config /UserAgents.php&lt;/strong&gt;ファイルに追加できます。</target>
        </trans-unit>
        <trans-unit id="42d5501341110e0b74bc711bc1e5831c714456ff" translate="yes" xml:space="preserve">
          <source>The user agent library only contains the most common robot definitions. It is not a complete list of bots. There are hundreds of them so searching for each one would not be very efficient. If you find that some bots that commonly visit your site are missing from the list you can add them to your &lt;strong&gt;application/config/user_agents.php&lt;/strong&gt; file.</source>
          <target state="translated">ユーザーエージェントライブラリには、最も一般的なロボット定義のみが含まれています。ボットの完全なリストではありません。それらは数百にも及ぶため、それぞれを検索するのはあまり効率的ではありません。サイトによくアクセスするボットの一部がリストにない場合は、それらを&lt;strong&gt;application / config / user_agents.php&lt;/strong&gt;ファイルに追加できます。</target>
        </trans-unit>
        <trans-unit id="8fe55c107900410bcd4824838de6c5c6fb038a99" translate="yes" xml:space="preserve">
          <source>The user agent name definitions are located in a config file located at: &lt;strong&gt;app/Config/UserAgents.php&lt;/strong&gt;. You may add items to the various user agent arrays if needed.</source>
          <target state="translated">ユーザーエージェント名の定義は、&lt;strong&gt;app / Config /UserAgents.phpにある構成&lt;/strong&gt;ファイルにあります。必要に応じて、さまざまなユーザーエージェント配列にアイテムを追加できます。</target>
        </trans-unit>
        <trans-unit id="c953aef2bdb19c3b64108e9a61955e20cef4e1f2" translate="yes" xml:space="preserve">
          <source>The user agent name definitions are located in a config file located at: application/config/user_agents.php. You may add items to the various user agent arrays if needed.</source>
          <target state="translated">ユーザーエージェント名の定義は、application/config/user_agents.php にある設定ファイルにあります。必要に応じて、さまざまなユーザーエージェントの配列に項目を追加することができます。</target>
        </trans-unit>
        <trans-unit id="36bc43702446324ebc468b9a9cd0a22de66750d9" translate="yes" xml:space="preserve">
          <source>The user&amp;rsquo;s IP Address, if it can be detected, or null. If the IP address is not a valid IP address, then will return 0.0.0.0</source>
          <target state="translated">ユーザーのIPアドレス（検出できる場合）、またはnull。IPアドレスが有効なIPアドレスでない場合、0.0.0.0を返します。</target>
        </trans-unit>
        <trans-unit id="23e70177cd3fb04320d382c3eaf2c0bb2e4fbbde" translate="yes" xml:space="preserve">
          <source>The userinfo section is simply the username and password that you might see with an FTP URI. While you can get this as part of the Authority, you can also retrieve it yourself:</source>
          <target state="translated">userinfo セクションは、FTP URI で見たようなユーザ名とパスワードです。これは Authority の一部として取得できますが、自分で取得することもできます。</target>
        </trans-unit>
        <trans-unit id="ee28ea53678e65730e2e22dbfcd6a0476ae5ad16" translate="yes" xml:space="preserve">
          <source>The username field be no shorter than 5 characters and no longer than 12.</source>
          <target state="translated">ユーザー名の欄は5文字以内、12文字以内としてください。</target>
        </trans-unit>
        <trans-unit id="994d87508b5482e314bbca52ab6ec6423cec6042" translate="yes" xml:space="preserve">
          <source>The username used to connect to the database.</source>
          <target state="translated">データベースへの接続に使用するユーザー名。</target>
        </trans-unit>
        <trans-unit id="5d533920b42f713f55d5a22d17da78de4d8d988f" translate="yes" xml:space="preserve">
          <source>The validation rules for this form field.</source>
          <target state="translated">このフォームフィールドの検証ルール。</target>
        </trans-unit>
        <trans-unit id="0f49c9881ccd4c8b16c159be72a33a88b5ae0de8" translate="yes" xml:space="preserve">
          <source>The validation system supports callbacks to your own validation methods. This permits you to extend the validation class to meet your needs. For example, if you need to run a database query to see if the user is choosing a unique username, you can create a callback method that does that. Let&amp;rsquo;s create an example of this.</source>
          <target state="translated">検証システムは、独自の検証メソッドへのコールバックをサポートしています。これにより、必要に応じて検証クラスを拡張できます。たとえば、ユーザーが一意のユーザー名を選択しているかどうかを確認するためにデータベースクエリを実行する必要がある場合は、それを行うコールバックメソッドを作成できます。この例を作成してみましょう。</target>
        </trans-unit>
        <trans-unit id="6244a99b633fdeb81de321302de8dd6c5fca79f5" translate="yes" xml:space="preserve">
          <source>The value being tested against can be a Time instance, a DateTime instance, or a string with the full date time in a manner that a new DateTime instance can understand. When passing a string as the first parameter, you can pass a timezone string in as the second parameter. If no timezone is given, the system default will be used:</source>
          <target state="translated">テストされる値は、Time インスタンス、DateTime インスタンス、または新しい DateTime インスタンスが理解できるような完全な日付時刻を持つ文字列のいずれかです。最初のパラメータとして文字列を渡す場合、2番目のパラメータとしてタイムゾーンの文字列を渡すことができます。タイムゾーンを指定しない場合は、システムのデフォルトが使用されます。</target>
        </trans-unit>
        <trans-unit id="7c35c60013c5ceb87bc15bcdf1f0b15b183cb1ff" translate="yes" xml:space="preserve">
          <source>The value can be any string that your application uses to manage text strings and other formats. It is recommended that a &lt;a href=&quot;https://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP 47&lt;/a&gt; language code is used. This results in language codes like en-US for American English, or fr-FR, for French/France. A more readable introduction to this can be found on the &lt;a href=&quot;https://www.w3.org/International/articles/language-tags/&quot;&gt;W3C&amp;rsquo;s site&lt;/a&gt;.</source>
          <target state="translated">値は、アプリケーションがテキスト文字列やその他の形式を管理するために使用する任意の文字列にすることができます。&lt;a href=&quot;https://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP47&lt;/a&gt;言語コードを使用することをお勧めします。これにより、アメリカ英語の場合はen-US、フランス語/フランスの場合はfr-FRなどの言語コードが生成されます。これについてのより読みやすい紹介は、&lt;a href=&quot;https://www.w3.org/International/articles/language-tags/&quot;&gt;W3Cのサイトにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="433be07e88570ccec098ac1314b566609be81602" translate="yes" xml:space="preserve">
          <source>The value for the filter must match one of the aliases defined within &lt;code&gt;app/Config/Filters.php&lt;/code&gt;.</source>
          <target state="translated">フィルタの値は、 &lt;code&gt;app/Config/Filters.php&lt;/code&gt; 内で定義されているエイリアスの1つと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="683591ea594d1ea47f1e3e0f17b59356c2b35ef5" translate="yes" xml:space="preserve">
          <source>The value for the filter must match one of the aliases defined within &lt;code&gt;app/Config/Filters.php&lt;/code&gt;. You may also supply arguments to be passed to the filter&amp;rsquo;s &lt;code&gt;before()&lt;/code&gt; and &lt;code&gt;after()&lt;/code&gt; methods:</source>
          <target state="translated">フィルタの値は、 &lt;code&gt;app/Config/Filters.php&lt;/code&gt; 内で定義されているエイリアスの1つと一致する必要があります。フィルタの &lt;code&gt;before()&lt;/code&gt; &lt;code&gt;after()&lt;/code&gt; メソッドとafter（）メソッドに渡される引数を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="21393f4716d2905d004c1e6d8ad1c53f17643faf" translate="yes" xml:space="preserve">
          <source>The value for the pseudo-variable &lt;code&gt;blog_entries&lt;/code&gt; is a sequential array of associative arrays. The outer level does not have keys associated with each of the nested &amp;ldquo;rows&amp;rdquo;.</source>
          <target state="translated">疑似変数 &lt;code&gt;blog_entries&lt;/code&gt; の値は、連想配列の順次配列です。外側のレベルには、ネストされた「行」のそれぞれに関連付けられたキーがありません。</target>
        </trans-unit>
        <trans-unit id="1e77d6b258ff1dbd544a8fbe42e1a4cce9306e6e" translate="yes" xml:space="preserve">
          <source>The value for the pseudo-variable &lt;code&gt;blog_entry&lt;/code&gt; is an associative array. The key/value pairs defined inside it will be exposed inside the variable pair loop for that variable.</source>
          <target state="translated">疑似変数 &lt;code&gt;blog_entry&lt;/code&gt; の値は、連想配列です。その中で定義されたキー/値のペアは、その変数の変数ペアループ内で公開されます。</target>
        </trans-unit>
        <trans-unit id="d06dfcde6af1929402dcc4a3db0f20dd16605694" translate="yes" xml:space="preserve">
          <source>The value found within the array, or null</source>
          <target state="translated">配列内で見つかった値、または null</target>
        </trans-unit>
        <trans-unit id="e8915410d6ffa06712b47c9d89cd41452b0cd744" translate="yes" xml:space="preserve">
          <source>The value is returned in the format specified in $returnType.</source>
          <target state="translated">値は、$returnTypeで指定した形式で返されます。</target>
        </trans-unit>
        <trans-unit id="fc7fa54a5a1d4f6ba0b399c26cd0c5285cafeec7" translate="yes" xml:space="preserve">
          <source>The value must match the value of the field in the parameter.</source>
          <target state="translated">値は、パラメータ内のフィールドの値と一致している必要があります。</target>
        </trans-unit>
        <trans-unit id="bd2cf851463a011a050b8a6dcfb8cd476dcacba4" translate="yes" xml:space="preserve">
          <source>The value of &amp;lsquo;foo&amp;rsquo; in $_ENV</source>
          <target state="translated">$ _ENVの「foo」の値</target>
        </trans-unit>
        <trans-unit id="8e66ca5390d535d1a7fbc2ae75b4b2a8c8d4a098" translate="yes" xml:space="preserve">
          <source>The value of the Response object&amp;rsquo;s send() method.</source>
          <target state="translated">The value of the Response object&amp;rsquo;s send() method.</target>
        </trans-unit>
        <trans-unit id="01d585d08f420e2f25513cd1394c460dc658aae1" translate="yes" xml:space="preserve">
          <source>The value of the defined key, or the default value.</source>
          <target state="translated">定義されたキーの値、またはデフォルト値。</target>
        </trans-unit>
        <trans-unit id="0793d5da9928a47bf168120ad60485455f4e2573" translate="yes" xml:space="preserve">
          <source>The version of the database being used</source>
          <target state="translated">使用しているデータベースのバージョン</target>
        </trans-unit>
        <trans-unit id="a2076b9113665d973257ac81dd15a88a37ae031f" translate="yes" xml:space="preserve">
          <source>The word &amp;ldquo;class&amp;rdquo; here refers to libraries and drivers.</source>
          <target state="translated">ここでの「クラス」という言葉は、ライブラリとドライバを指します。</target>
        </trans-unit>
        <trans-unit id="c553f3aab79b89685b49148200c79d654922cbe5" translate="yes" xml:space="preserve">
          <source>The words &amp;ldquo;code_start&amp;rdquo; and &amp;ldquo;code_end&amp;rdquo; are arbitrary. They are simply words used to set two markers. You can use any words you want, and you can set multiple sets of markers. Consider this example:</source>
          <target state="translated">「code_start」および「code_end」という単語は任意です。これらは単に2つのマーカーを設定するために使用される単語です。任意の単語を使用でき、マーカーの複数のセットを設定できます。この例を考えてみましょう：</target>
        </trans-unit>
        <trans-unit id="1390c56c0a055d53b65a2602afef521fbcfd02a8" translate="yes" xml:space="preserve">
          <source>Their difference to &lt;code&gt;hasPrevious()&lt;/code&gt; and &lt;code&gt;hasNext()&lt;/code&gt; is that they are based on the current page while &lt;code&gt;hasPrevious()&lt;/code&gt; and &lt;code&gt;hasNext()&lt;/code&gt; are based on the set of links to be displayed before and after the current page based on the value passed in &lt;code&gt;setSurroundCount&lt;/code&gt;.</source>
          <target state="translated">Their difference to &lt;code&gt;hasPrevious()&lt;/code&gt; and &lt;code&gt;hasNext()&lt;/code&gt; is that they are based on the current page while &lt;code&gt;hasPrevious()&lt;/code&gt; and &lt;code&gt;hasNext()&lt;/code&gt; are based on the set of links to be displayed before and after the current page based on the value passed in &lt;code&gt;setSurroundCount&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b38f31cfff3de55386868844f36c89e073a5162" translate="yes" xml:space="preserve">
          <source>Then &lt;strong&gt;foo&lt;/strong&gt; is the command name, and the &lt;code&gt;$params&lt;/code&gt; array would be:</source>
          <target state="translated">Then &lt;strong&gt;foo&lt;/strong&gt; is the command name, and the &lt;code&gt;$params&lt;/code&gt; array would be:</target>
        </trans-unit>
        <trans-unit id="e8dbce3d8dea58baaa2224aa6728bd602dd9e6b5" translate="yes" xml:space="preserve">
          <source>Then add a new method called &lt;code&gt;username_check()&lt;/code&gt; to your controller. Here&amp;rsquo;s how your controller should now look:</source>
          <target state="translated">次に、 &lt;code&gt;username_check()&lt;/code&gt; という新しいメソッドをコントローラーに追加します。コントローラは次のようになります。</target>
        </trans-unit>
        <trans-unit id="525a58dcf94173a5b523d8b11b632d7d0e42c2f1" translate="yes" xml:space="preserve">
          <source>Then in &lt;strong&gt;application/config/migration.php&lt;/strong&gt; set &lt;code&gt;$config['migration_version'] = 20121031100537;&lt;/code&gt;.</source>
          <target state="translated">その後で&lt;strong&gt;アプリケーション/設定/ migration.php&lt;/strong&gt;セット &lt;code&gt;$config['migration_version'] = 20121031100537;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5afe6c36a65bf03cd31849ccdb76f22b9a80d952" translate="yes" xml:space="preserve">
          <source>Then load the page at the URL you&amp;rsquo;ve been using and you should see the variables replaced.</source>
          <target state="translated">次に、使用していたURLでページをロードすると、変数が置き換えられているのがわかります。</target>
        </trans-unit>
        <trans-unit id="6515d9007760169f497b359f416b3418c21015cc" translate="yes" xml:space="preserve">
          <source>Then save the file in your &lt;em&gt;application/views/&lt;/em&gt; directory.</source>
          <target state="translated">次に、ファイルを&lt;em&gt;application / views /&lt;/em&gt;ディレクトリに保存します。</target>
        </trans-unit>
        <trans-unit id="4df8b158457b8adb0994d9d90ed61982575db20d" translate="yes" xml:space="preserve">
          <source>Then save the file in your &lt;strong&gt;app/Views&lt;/strong&gt; directory.</source>
          <target state="translated">Then save the file in your &lt;strong&gt;app/Views&lt;/strong&gt; directory.</target>
        </trans-unit>
        <trans-unit id="88bcb8a9801fce85699038e0cac56cab9fd7055d" translate="yes" xml:space="preserve">
          <source>Then save the file to your &lt;em&gt;application/controllers/&lt;/em&gt; directory.</source>
          <target state="translated">次に、ファイルを&lt;em&gt;application / controllers /&lt;/em&gt;ディレクトリに保存します。</target>
        </trans-unit>
        <trans-unit id="e7ca2463756fa1df8d70c9f3e69eeea96d3d1a72" translate="yes" xml:space="preserve">
          <source>Then save the file to your &lt;em&gt;application/controllers/&lt;/em&gt; folder.</source>
          <target state="translated">次に、ファイルを&lt;em&gt;application / controllers /&lt;/em&gt;フォルダーに保存します。</target>
        </trans-unit>
        <trans-unit id="666a6687baa87dfd8f87dc2107af0807a64173c5" translate="yes" xml:space="preserve">
          <source>Then save the file to your &lt;strong&gt;/app/Controllers/&lt;/strong&gt; directory.</source>
          <target state="translated">Then save the file to your &lt;strong&gt;/app/Controllers/&lt;/strong&gt; directory.</target>
        </trans-unit>
        <trans-unit id="ea3c8ad3666095be6cc47a2c5b1f302a9bff89bc" translate="yes" xml:space="preserve">
          <source>Then save the file to your &lt;strong&gt;app/Controllers/&lt;/strong&gt; directory.</source>
          <target state="translated">Then save the file to your &lt;strong&gt;app/Controllers/&lt;/strong&gt; directory.</target>
        </trans-unit>
        <trans-unit id="0704065e08d419bf187f7ee76d229a9631e9285d" translate="yes" xml:space="preserve">
          <source>Then you can use any of the three standard rendering methods that it provides: &lt;strong&gt;render(viewpath, options, save)&lt;/strong&gt;, &lt;strong&gt;setVar(name, value, context)&lt;/strong&gt; and &lt;strong&gt;setData(data, context)&lt;/strong&gt;. You will also be able to specify delimiters directly, through the &lt;strong&gt;setDelimiters(left,right)&lt;/strong&gt; method.</source>
          <target state="translated">Then you can use any of the three standard rendering methods that it provides: &lt;strong&gt;render(viewpath, options, save)&lt;/strong&gt;, &lt;strong&gt;setVar(name, value, context)&lt;/strong&gt; and &lt;strong&gt;setData(data, context)&lt;/strong&gt;. You will also be able to specify delimiters directly, through the &lt;strong&gt;setDelimiters(left,right)&lt;/strong&gt; method.</target>
        </trans-unit>
        <trans-unit id="18eaf0e30cf97e5a6abbc849bb831e452fda99bc" translate="yes" xml:space="preserve">
          <source>Then you would modify the &lt;code&gt;routes&lt;/code&gt; service to load your class instead:</source>
          <target state="translated">Then you would modify the &lt;code&gt;routes&lt;/code&gt; service to load your class instead:</target>
        </trans-unit>
        <trans-unit id="0cd10a47d1d8d3b78a003caa8071eb783ab81f36" translate="yes" xml:space="preserve">
          <source>Then, on the page that accepts the submission you&amp;rsquo;ll have something like this:</source>
          <target state="translated">次に、送信を受け入れるページには、次のようなものが表示されます。</target>
        </trans-unit>
        <trans-unit id="cdf88d84610218a5f7808515ca964ecdfd3b6e2e" translate="yes" xml:space="preserve">
          <source>Then, store the name in one of your language file arrays (without the prefix):</source>
          <target state="translated">そして、その名前を言語ファイルの配列のいずれかに格納します (接頭辞なし)。</target>
        </trans-unit>
        <trans-unit id="ee192db64354b0a4273770d616ccdff5643228d9" translate="yes" xml:space="preserve">
          <source>Then, to globally tell the system to use that group you would set this variable located in the config file:</source>
          <target state="translated">そして、そのグループを使用するようにシステムにグローバルに指示するには、設定ファイルにあるこの変数を設定します。</target>
        </trans-unit>
        <trans-unit id="8badae02dd6944cf6807cd84ad3d3ded786125aa" translate="yes" xml:space="preserve">
          <source>There are 21 different preferences available to tailor how your email messages are sent. You can either set them manually as described here, or automatically via preferences stored in your config file, described below:</source>
          <target state="translated">メールメッセージの送信方法を調整するために、21種類の設定があります。ここで説明するように手動で設定することもできますし、以下で説明するように設定ファイルに保存されている設定を使って自動的に設定することもできます。</target>
        </trans-unit>
        <trans-unit id="dcb28304f10008a614018c243887ab95ba3dea83" translate="yes" xml:space="preserve">
          <source>There are 5 rotation options:</source>
          <target state="translated">ローテーションは5つの選択肢があります。</target>
        </trans-unit>
        <trans-unit id="16a87f99405e3ad2f296c7cf559c6f2cfd0599eb" translate="yes" xml:space="preserve">
          <source>There are a couple of things to note here:</source>
          <target state="translated">ここで注意すべき点がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="1b56afab6c223beb4455222c9746b001aa97f1a2" translate="yes" xml:space="preserve">
          <source>There are actually two types of views that you can create. The first has an array of all of the errors, and is what we just looked at. The other type is simpler, and only contains a single variable, &lt;code&gt;$error&lt;/code&gt; that contains the error message. This is used with the &lt;code&gt;showError()&lt;/code&gt; method where a field must be specified:</source>
          <target state="translated">There are actually two types of views that you can create. The first has an array of all of the errors, and is what we just looked at. The other type is simpler, and only contains a single variable, &lt;code&gt;$error&lt;/code&gt; that contains the error message. This is used with the &lt;code&gt;showError()&lt;/code&gt; method where a field must be specified:</target>
        </trans-unit>
        <trans-unit id="fbfa1e4e759a116988deabae9ac095ce71de8a56" translate="yes" xml:space="preserve">
          <source>There are also several deployment repositories, referenced in the installation directions. The deployment repositories are built automatically when a new version is released, and they are not directly contributed to.</source>
          <target state="translated">また、インストールの指示で参照されるデプロイメントリポジトリもいくつかあります。ディプロイメントリポジトリは新しいバージョンがリリースされたときに自動的に構築され、直接貢献されるものではありません。</target>
        </trans-unit>
        <trans-unit id="a5d4e715bf2fc86b4909f77004f8ad1eb5312f97" translate="yes" xml:space="preserve">
          <source>There are eight different log levels, matching to the &lt;a href=&quot;https://tools.ietf.org/html/rfc5424&quot;&gt;RFC 5424&lt;/a&gt; levels, and they are as follows:</source>
          <target state="translated">There are eight different log levels, matching to the &lt;a href=&quot;https://tools.ietf.org/html/rfc5424&quot;&gt;RFC 5424&lt;/a&gt; levels, and they are as follows:</target>
        </trans-unit>
        <trans-unit id="d9161044595ca3da92e937815d022f60799f3985" translate="yes" xml:space="preserve">
          <source>There are four available processing methods:</source>
          <target state="translated">加工方法は4種類あります。</target>
        </trans-unit>
        <trans-unit id="b2b8b90d11a6c2644f8d653c8b9e48860c798143" translate="yes" xml:space="preserve">
          <source>There are many reasons for running CodeIgniter from the command-line, but they are not always obvious.</source>
          <target state="translated">CodeIgniterをコマンドラインから実行する理由はたくさんありますが、必ずしも明白ではありません。</target>
        </trans-unit>
        <trans-unit id="fbeb372403a4686ed33cdd01a5a5ca35c25450cc" translate="yes" xml:space="preserve">
          <source>There are no configuration options for legacy support.</source>
          <target state="translated">レガシーサポートの設定オプションはありません。</target>
        </trans-unit>
        <trans-unit id="3e6e088dae5fe1eda5050ae9c1593edcd3628bd9" translate="yes" xml:space="preserve">
          <source>There are occasions where you need to require that only a single instance of a service is created. This is easily handled with the &lt;code&gt;getSharedInstance()&lt;/code&gt; method that is called from within the factory method. This handles checking if an instance has been created and saved within the class, and, if not, creates a new one. All of the factory methods provide a &lt;code&gt;$getShared = true&lt;/code&gt; value as the last parameter. You should stick to the method also:</source>
          <target state="translated">There are occasions where you need to require that only a single instance of a service is created. This is easily handled with the &lt;code&gt;getSharedInstance()&lt;/code&gt; method that is called from within the factory method. This handles checking if an instance has been created and saved within the class, and, if not, creates a new one. All of the factory methods provide a &lt;code&gt;$getShared = true&lt;/code&gt; value as the last parameter. You should stick to the method also:</target>
        </trans-unit>
        <trans-unit id="2f872b0a7c11f4879b09000d8634b72d8cf2f0ea" translate="yes" xml:space="preserve">
          <source>There are only two settings:</source>
          <target state="translated">設定は2つしかありません。</target>
        </trans-unit>
        <trans-unit id="3eae96b8c21cb27ff18ed7fec99b71d560a0dbb4" translate="yes" xml:space="preserve">
          <source>There are only two things here that probably look unfamiliar to you: the &lt;code&gt;form_open()&lt;/code&gt; function and the &lt;code&gt;validation_errors()&lt;/code&gt; function.</source>
          <target state="translated">ここでは、なじみのないものとして、 &lt;code&gt;form_open()&lt;/code&gt; 関数と &lt;code&gt;validation_errors()&lt;/code&gt; 関数の2つしかありません。</target>
        </trans-unit>
        <trans-unit id="a48257e6792d25f675eb3bd72bf8dc2bab9c0cb4" translate="yes" xml:space="preserve">
          <source>There are probably only two things here that look unfamiliar. The &lt;code&gt;\Config\Services::validation()-&amp;gt;listErrors()&lt;/code&gt; function is used to report errors related to form validation. The &lt;code&gt;csrf_field()&lt;/code&gt; function creates a hidden input with a CSRF token that helps protect against some common attacks.</source>
          <target state="translated">There are probably only two things here that look unfamiliar. The &lt;code&gt;\Config\Services::validation()-&amp;gt;listErrors()&lt;/code&gt; function is used to report errors related to form validation. The &lt;code&gt;csrf_field()&lt;/code&gt; function creates a hidden input with a CSRF token that helps protect against some common attacks.</target>
        </trans-unit>
        <trans-unit id="7f14665a57a8a2b041c1168a9c9772d0a31633fe" translate="yes" xml:space="preserve">
          <source>There are quite a few functions necessary to CodeIgniter that need to be loaded early for use in the core classes and thus cannot be placed into a helper. While most users will never have any need to do this, but the option to replace these functions does exist for those who would like to significantly alter the CodeIgniter core. In the &lt;code&gt;App\&lt;/code&gt; directory there is a file &lt;code&gt;Common.php&lt;/code&gt;, and any functions defined in there will take precedence over the versions found in &lt;code&gt;system/Common.php&lt;/code&gt;. This is also an opportunity to create globally-available functions you intend to use throughout the framework.</source>
          <target state="translated">There are quite a few functions necessary to CodeIgniter that need to be loaded early for use in the core classes and thus cannot be placed into a helper. While most users will never have any need to do this, but the option to replace these functions does exist for those who would like to significantly alter the CodeIgniter core. In the &lt;code&gt;App\&lt;/code&gt; directory there is a file &lt;code&gt;Common.php&lt;/code&gt; , and any functions defined in there will take precedence over the versions found in &lt;code&gt;system/Common.php&lt;/code&gt; . This is also an opportunity to create globally-available functions you intend to use throughout the framework.</target>
        </trans-unit>
        <trans-unit id="f68bad634482bd3d2a3ad12fdfa92a2c34a09c55" translate="yes" xml:space="preserve">
          <source>There are seven available processing methods:</source>
          <target state="translated">加工方法は7種類あります。</target>
        </trans-unit>
        <trans-unit id="d9aabf3d07b7f514b2a3f01b9c2c933867b33b98" translate="yes" xml:space="preserve">
          <source>There are seven preferences you can set to control various aspects of the calendar. Preferences are set by passing an array of preferences in the second parameter of the loading function. Here is an example:</source>
          <target state="translated">カレンダーのさまざまな機能を制御するために設定できる 7 つの環境設定があります。環境設定は、読み込み関数の二番目のパラメータに環境設定の配列を渡すことで設定します。ここに例を示します。</target>
        </trans-unit>
        <trans-unit id="3d255c1d22dd96a7c86a39a055fbfc9c2ab4ebd3" translate="yes" xml:space="preserve">
          <source>There are several development repositories, of interest to potential contributors:</source>
          <target state="translated">潜在的な貢献者にとって興味のある開発リポジトリがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="72b2d9b098b2f8cfa96d5c6d592391fab5b6f101" translate="yes" xml:space="preserve">
          <source>There are several points within the model&amp;rsquo;s execution that you can specify multiple callback methods to run. These methods can be used to normalize data, hash passwords, save related entities, and much more. The following points in the model&amp;rsquo;s execution can be affected, each through a class property: &lt;strong&gt;$beforeInsert&lt;/strong&gt;, &lt;strong&gt;$afterInsert&lt;/strong&gt;, &lt;strong&gt;$beforeUpdate&lt;/strong&gt;, &lt;strong&gt;afterUpdate&lt;/strong&gt;, &lt;strong&gt;afterFind&lt;/strong&gt;, and &lt;strong&gt;afterDelete&lt;/strong&gt;.</source>
          <target state="translated">There are several points within the model&amp;rsquo;s execution that you can specify multiple callback methods to run. These methods can be used to normalize data, hash passwords, save related entities, and much more. The following points in the model&amp;rsquo;s execution can be affected, each through a class property: &lt;strong&gt;$beforeInsert&lt;/strong&gt;, &lt;strong&gt;$afterInsert&lt;/strong&gt;, &lt;strong&gt;$beforeUpdate&lt;/strong&gt;, &lt;strong&gt;afterUpdate&lt;/strong&gt;, &lt;strong&gt;afterFind&lt;/strong&gt;, and &lt;strong&gt;afterDelete&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="96c670a89c5b42c9a798b7ce8da4afb1f79402b9" translate="yes" xml:space="preserve">
          <source>There are several things you may wish to do when creating tables. Add fields, add keys to the table, alter columns. CodeIgniter provides a mechanism for this.</source>
          <target state="translated">テーブルを作成する際には、いくつかのことを行いたいと思うかもしれません。フィールドの追加、テーブルへのキーの追加、カラムの変更。CodeIgniterはこのためのメカニズムを提供しています。</target>
        </trans-unit>
        <trans-unit id="efec2f009cd95d2450db9e7d5eaa1107b9697a55" translate="yes" xml:space="preserve">
          <source>There are several ways that a new Time instance can be created. The first is simply to create a new instance like any other class. When you do it this way, you can pass in a string representing the desired time. This can be any string that PHP&amp;rsquo;s strtotime function can parse:</source>
          <target state="translated">There are several ways that a new Time instance can be created. The first is simply to create a new instance like any other class. When you do it this way, you can pass in a string representing the desired time. This can be any string that PHP&amp;rsquo;s strtotime function can parse:</target>
        </trans-unit>
        <trans-unit id="6145569e00d030b12a4f1ad97b894bdb66f76856" translate="yes" xml:space="preserve">
          <source>There are several ways to generate query results:</source>
          <target state="translated">クエリ結果を生成する方法はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="1363a7e9c9236db9434af92e3707763fc2ec59fc" translate="yes" xml:space="preserve">
          <source>There are some breaking changes&amp;hellip;</source>
          <target state="translated">There are some breaking changes&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="ca80b79e0ca53fe010a4169a2e043d0166bcb9cd" translate="yes" xml:space="preserve">
          <source>There are some configuration items in Javascript library. These can either be set in &lt;em&gt;application/config.php&lt;/em&gt;, within its own &lt;em&gt;config/javascript.php&lt;/em&gt; file, or within any controller usings the &lt;code&gt;set_item()&lt;/code&gt; function.</source>
          <target state="translated">JavaScriptライブラリにはいくつかの設定項目があります。これらは、&lt;em&gt;application / config.php&lt;/em&gt;内、独自の&lt;em&gt;config / javascript.php&lt;/em&gt;ファイル内、または &lt;code&gt;set_item()&lt;/code&gt; 関数を使用する任意のコントローラー内で設定できます。</target>
        </trans-unit>
        <trans-unit id="311eeccd02b1fa8c24793790ab52e2d81b638c93" translate="yes" xml:space="preserve">
          <source>There are some places in the CodeIgniter system where the ENVIRONMENT constant is used. This section describes how default framework behavior is affected.</source>
          <target state="translated">CodeIgniterシステムの中には、ENVIRONMENT定数が使われている場所がいくつかあります。このセクションでは、デフォルトのフレームワークの動作がどのように影響を受けるかを説明します。</target>
        </trans-unit>
        <trans-unit id="f8f7b0035aad4ba6631b1ab5dd58acc1e40dbc86" translate="yes" xml:space="preserve">
          <source>There are three message types:</source>
          <target state="translated">メッセージには3つのタイプがあります。</target>
        </trans-unit>
        <trans-unit id="629f9692433c64b0562f5fcdc3d4ede2b94c0308" translate="yes" xml:space="preserve">
          <source>There are three reserved routes:</source>
          <target state="translated">予約ルートは3つあります。</target>
        </trans-unit>
        <trans-unit id="99b9cae11bccc39c53e1dd6aec9f2742f3ea236a" translate="yes" xml:space="preserve">
          <source>There are three types of substitution supported: simple, looping, and nested. Substitutions are performed in the same sequence that pseudo-variables were added.</source>
          <target state="translated">置換には、単純置換、ループ置換、ネスト置換の3つのタイプがサポートされています。置換は、擬似変数が追加されたのと同じ順序で実行されます。</target>
        </trans-unit>
        <trans-unit id="8f97aa8379257d9b6db6c439c41821e9268440dc" translate="yes" xml:space="preserve">
          <source>There are times where you want to apply a filter to almost every request, but have a few that should be left alone. One common example is if you need to exclude a few URI&amp;rsquo;s from the CSRF protection filter to allow requests from third-party websites to hit one or two specific URI&amp;rsquo;s, while keeping the rest of them protected. To do this, add an array with the &amp;lsquo;except&amp;rsquo; key and a uri to match as the value alongside the alias:</source>
          <target state="translated">There are times where you want to apply a filter to almost every request, but have a few that should be left alone. One common example is if you need to exclude a few URI&amp;rsquo;s from the CSRF protection filter to allow requests from third-party websites to hit one or two specific URI&amp;rsquo;s, while keeping the rest of them protected. To do this, add an array with the &amp;lsquo;except&amp;rsquo; key and a uri to match as the value alongside the alias:</target>
        </trans-unit>
        <trans-unit id="55a5368680abd5395640f6e06de5fa8437aba53d" translate="yes" xml:space="preserve">
          <source>There are two &lt;strong&gt;view()&lt;/strong&gt; functions referred to in this tutorial. One is the class method created with &lt;code&gt;public function view($page = 'home')&lt;/code&gt; and &lt;code&gt;echo view('welcome_message');&lt;/code&gt; for displaying a view. Both are &lt;em&gt;technically&lt;/em&gt; a function. But when you create a function in a class, it&amp;rsquo;s called a method.</source>
          <target state="translated">There are two &lt;strong&gt;view()&lt;/strong&gt; functions referred to in this tutorial. One is the class method created with &lt;code&gt;public function view($page = 'home')&lt;/code&gt; and &lt;code&gt;echo view('welcome_message');&lt;/code&gt; for displaying a view. Both are &lt;em&gt;technically&lt;/em&gt; a function. But when you create a function in a class, it&amp;rsquo;s called a method.</target>
        </trans-unit>
        <trans-unit id="d3c9b37faf50477c70183affb35728e76b8e9758" translate="yes" xml:space="preserve">
          <source>There are two additional configuration keys you may make use of when initializing the server class: debug can be set to TRUE in order to enable debugging, and xss_clean may be set to FALSE to prevent sending data through the Security library&amp;rsquo;s &lt;code&gt;xss_clean()&lt;/code&gt; method.</source>
          <target state="translated">サーバークラスを初期化するときに使用できる追加の構成キーが2つあります。デバッグを有効にするためにdebugをTRUEに設定でき、セキュリティライブラリの &lt;code&gt;xss_clean()&lt;/code&gt; メソッドを介してデータが送信されないようにxss_cleanをFALSEに設定できます。</target>
        </trans-unit>
        <trans-unit id="bd256896c069d53389d269d6b63159287c0bbe6b" translate="yes" xml:space="preserve">
          <source>There are two methods supported to detect the correct locale during the request. The first is a &amp;ldquo;set and forget&amp;rdquo; method that will automatically perform &lt;a href=&quot;../incoming/content_negotiation&quot;&gt;content negotiation&lt;/a&gt; for you to determine the correct locale to use. The second method allows you to specify a segment in your routes that will be used to set the locale.</source>
          <target state="translated">There are two methods supported to detect the correct locale during the request. The first is a &amp;ldquo;set and forget&amp;rdquo; method that will automatically perform &lt;a href=&quot;../incoming/content_negotiation&quot;&gt;content negotiation&lt;/a&gt; for you to determine the correct locale to use. The second method allows you to specify a segment in your routes that will be used to set the locale.</target>
        </trans-unit>
        <trans-unit id="5b2f3b1d9f7ac0bc0a6f9614543d2395792ce854" translate="yes" xml:space="preserve">
          <source>There are two types of watermarking that you can use:</source>
          <target state="translated">透かしの種類は2種類あります。</target>
        </trans-unit>
        <trans-unit id="ef6e214cf7ef2709759cc2ea89093616dcff90d7" translate="yes" xml:space="preserve">
          <source>There are two ways to connect to a database:</source>
          <target state="translated">データベースに接続するには2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="a14106d1c67d57749d3aba340af098e00dd489e7" translate="yes" xml:space="preserve">
          <source>There are two ways to load a config file:</source>
          <target state="translated">設定ファイルを読み込む方法は2つあります。</target>
        </trans-unit>
        <trans-unit id="e4b19523e4c567a7d5a60289d16084867fe2a9ee" translate="yes" xml:space="preserve">
          <source>There are two ways to set the body of the request for request types that support them, like PUT, OR POST. The first way is to use the &lt;code&gt;setBody()&lt;/code&gt; method:</source>
          <target state="translated">There are two ways to set the body of the request for request types that support them, like PUT, OR POST. The first way is to use the &lt;code&gt;setBody()&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="de5cb69669ee5219405a4d47d33ffdf726ab750f" translate="yes" xml:space="preserve">
          <source>There is a special exception for creating id fields. A field with type id will automatically be assigned as an INT(9) auto_incrementing Primary Key.</source>
          <target state="translated">idフィールドの作成には特例があります。id 型のフィールドは自動的に INT(9)自動インクリメント主キーとして割り当てられます。</target>
        </trans-unit>
        <trans-unit id="a345b3e8ab95047284a2375f61ed1e17f9f96dbb" translate="yes" xml:space="preserve">
          <source>There is a third &lt;strong&gt;optional&lt;/strong&gt; parameter lets you change the behavior of the method so that it returns data as a string rather than sending it to your browser. This can be useful if you want to process the data in some way. If you set the parameter to TRUE (boolean) it will return data. The default behavior is false, which sends it to your browser. Remember to assign it to a variable if you want the data returned:</source>
          <target state="translated">3番目の&lt;strong&gt;オプションの&lt;/strong&gt;パラメーターがあり、データをブラウザーに送信するのではなく文字列として返すように、メソッドの動作を変更できます。これは、何らかの方法でデータを処理する場合に役立ちます。パラメータをTRUE（ブール）に設定すると、データが返されます。デフォルトの動作はfalseで、ブラウザに送信されます。データを返したい場合は、必ず変数に割り当ててください。</target>
        </trans-unit>
        <trans-unit id="746084183e6ae241a18e9165a5805b78b608f104" translate="yes" xml:space="preserve">
          <source>There is an optional second parameter that is a TRUE/FALSE value that specifics if the &lt;em&gt;src&lt;/em&gt; should have the page specified by &lt;code&gt;$config['index_page']&lt;/code&gt; added to the address it creates. Presumably, this would be if you were using a media controller:</source>
          <target state="translated">&lt;em&gt;src&lt;/em&gt;が &lt;code&gt;$config['index_page']&lt;/code&gt; 指定されたページを作成するアドレスに追加する必要があるかどうかを指定するTRUE / FALSE値であるオプションの2番目のパラメーターがあります。おそらく、これは、メディアコントローラを使用している場合です。</target>
        </trans-unit>
        <trans-unit id="d948c40ccba90a2fb879274eda05a848031a8622" translate="yes" xml:space="preserve">
          <source>There is an optional second parameter that is a true/false value that specifics if the &lt;em&gt;src&lt;/em&gt; should have the page specified by &lt;code&gt;$config['indexPage']&lt;/code&gt; added to the address it creates. Presumably, this would be if you were using a media controller:</source>
          <target state="translated">There is an optional second parameter that is a true/false value that specifics if the &lt;em&gt;src&lt;/em&gt; should have the page specified by &lt;code&gt;$config['indexPage']&lt;/code&gt; added to the address it creates. Presumably, this would be if you were using a media controller:</target>
        </trans-unit>
        <trans-unit id="cb5da4013ef25b745ff56238d7647b097516e4c9" translate="yes" xml:space="preserve">
          <source>There is no need to &amp;ldquo;echo&amp;rdquo; or do something with the data returned by $this-&amp;gt;parser-&amp;gt;parse(). It is automatically passed to the output class to be sent to the browser. However, if you do want the data returned instead of sent to the output class you can pass TRUE (boolean) as the third parameter:</source>
          <target state="translated">$ this-&amp;gt; parser-&amp;gt; parse（）によって返されたデータを「エコー」したり、何かをしたりする必要はありません。これは自動的に出力クラスに渡され、ブラウザーに送信されます。ただし、データを出力クラスに送信するのではなく返す場合は、3番目のパラメーターとしてTRUE（ブール値）を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="3d73f12ac915274552702605b3e836637243e821" translate="yes" xml:space="preserve">
          <source>There is not already an open Issue</source>
          <target state="translated">まだ公開されていない課題</target>
        </trans-unit>
        <trans-unit id="e240224c0e0e5260cad246098edaba05c40aa610" translate="yes" xml:space="preserve">
          <source>There is nothing to prevent you from using those abbreviations in your application!</source>
          <target state="translated">アプリケーションでこれらの略語を使用することを妨げるものは何もありません!</target>
        </trans-unit>
        <trans-unit id="cbd030c24f719bed28d720abe6db7864c1dae364" translate="yes" xml:space="preserve">
          <source>There is one optional parameter that determines whether the parser should reduce more than two consecutive line breaks down to two. Pass boolean TRUE to enable reducing line breaks:</source>
          <target state="translated">パーサが2つ以上の連続した改行を2つに減らすかどうかを決めるオプションのパラメータが1つあります。TRUE を渡すと、改行を減らすことができます。</target>
        </trans-unit>
        <trans-unit id="f7df4ee8813099ef3c09a1a7ab76943eeb207539" translate="yes" xml:space="preserve">
          <source>There will be times when you absolutely need something to used and NOT escaped. You can do this by adding exclamation marks to the opening and closing braces:</source>
          <target state="translated">絶対に何かを使用してエスケープされていないことが必要な時があるでしょう。開閉中括弧に感嘆符をつけることで、これを行うことができます。</target>
        </trans-unit>
        <trans-unit id="19a88d67606a3eb9568a3f2deb7b1ff6596e618e" translate="yes" xml:space="preserve">
          <source>There will be times when you will have several variables with the same name. The system needs a way of knowing what the correct setting should be. This problem is solved by &amp;ldquo;&lt;em&gt;namespacing&lt;/em&gt;&amp;rdquo; the variables.</source>
          <target state="translated">There will be times when you will have several variables with the same name. The system needs a way of knowing what the correct setting should be. This problem is solved by &amp;ldquo;&lt;em&gt;namespacing&lt;/em&gt;&amp;rdquo; the variables.</target>
        </trans-unit>
        <trans-unit id="937e2e3ed4b2b83f4bcb357cc92be95d9b385c8d" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s also the ability to change the driver, if for some reason you have both, but want to use MCrypt instead of OpenSSL:</source>
          <target state="translated">何らかの理由で両方を持っているが、OpenSSLの代わりにMCryptを使用したい場合は、ドライバーを変更する機能もあります。</target>
        </trans-unit>
        <trans-unit id="8f2c1f939af667dc99dba7d6c871dfb576530049" translate="yes" xml:space="preserve">
          <source>These algorithms are old, proven to be flawed, and not designed for password hashing in the first place.</source>
          <target state="translated">これらのアルゴリズムは古く、欠陥があることが証明されており、そもそもパスワードハッシュのために設計されたものではありません。</target>
        </trans-unit>
        <trans-unit id="3ecb28890a436a0f7819b94097acc7adaca55cb0" translate="yes" xml:space="preserve">
          <source>These are not composer-installable repositories.</source>
          <target state="translated">これらは作曲家がインストールできるリポジトリではありません。</target>
        </trans-unit>
        <trans-unit id="71876e526866f0e596d162e249b087fdb38ad6a3" translate="yes" xml:space="preserve">
          <source>These are the regular expression rules that we use to validate the product ID - alpha-numeric, dashes, underscores, or periods by default</source>
          <target state="translated">これらは、製品IDを検証するために使用する正規表現ルールです。</target>
        </trans-unit>
        <trans-unit id="aa7a6e2b5361d36977e63c8e1e48ab58f085b06e" translate="yes" xml:space="preserve">
          <source>These are the regular expression rules that we use to validate the product ID and product name - alpha-numeric, dashes, underscores, colons or periods by default</source>
          <target state="translated">これらは、製品IDと製品名を検証するために使用する正規表現ルールで、デフォルトでは英数字、ダッシュ、アンダースコア、コロン、ピリオドが使用されます。</target>
        </trans-unit>
        <trans-unit id="58064285061976040c5a7e1018d152921d9670fc" translate="yes" xml:space="preserve">
          <source>These are two ways to provide custom error messages.</source>
          <target state="translated">これらは、カスタムエラーメッセージを提供する2つの方法です。</target>
        </trans-unit>
        <trans-unit id="908a14a1aaa60bf87d00643f27a412b8a633ff96" translate="yes" xml:space="preserve">
          <source>These arrays allow you to specify callback methods that will be run on the data at the time specified in the property name.</source>
          <target state="translated">これらの配列を使用すると、プロパティ名で指定した時刻にデータに対して実行されるコールバックメソッドを指定することができます。</target>
        </trans-unit>
        <trans-unit id="224298923a1843833457f77d787e21adaad78795" translate="yes" xml:space="preserve">
          <source>These effects cause an element(s) to disappear or reappear over time.</source>
          <target state="translated">これらの効果により、時間が経つにつれて要素が消えたり、再び現れたりします。</target>
        </trans-unit>
        <trans-unit id="1bdf165bb9c4974426d883fa2fdb9114531b796d" translate="yes" xml:space="preserve">
          <source>These effects cause an element(s) to slide.</source>
          <target state="translated">これらの効果により、要素がスライドします。</target>
        </trans-unit>
        <trans-unit id="00174d3ed3c2ab563906b87fd13481d2e5ef9d65" translate="yes" xml:space="preserve">
          <source>These functions let you fetch table information.</source>
          <target state="translated">これらの関数では、テーブル情報を取得することができます。</target>
        </trans-unit>
        <trans-unit id="35251fd12dd965fa2c868f7d685c5728514c0ead" translate="yes" xml:space="preserve">
          <source>These methods only change the return type for the next find*() method call. After that, it is reset to its default value.</source>
          <target state="translated">これらのメソッドは、次の find*()メソッド呼び出し時の戻り値の型を変更するだけです。それ以降はデフォルト値にリセットされます。</target>
        </trans-unit>
        <trans-unit id="4dd30b4dece0e0da9abef8d96180d21cdf3e5261" translate="yes" xml:space="preserve">
          <source>These methods return a URL for the previous and next pages in relation to the current page being displayed, unlike &lt;code&gt;getPrevious()&lt;/code&gt; and &lt;code&gt;getNext()&lt;/code&gt; that return the URL for the previous or next pages of results on either side of the numbered links. See the previous paragraph for a full explanation.</source>
          <target state="translated">These methods return a URL for the previous and next pages in relation to the current page being displayed, unlike &lt;code&gt;getPrevious()&lt;/code&gt; and &lt;code&gt;getNext()&lt;/code&gt; that return the URL for the previous or next pages of results on either side of the numbered links. See the previous paragraph for a full explanation.</target>
        </trans-unit>
        <trans-unit id="281c69e51d883d85d1db68f194e683d0c7767438" translate="yes" xml:space="preserve">
          <source>These methods return a boolean true if there are more links that can be displayed on either side of the current page, based on the value passed to &lt;code&gt;setSurroundCount&lt;/code&gt;. For example, let&amp;rsquo;s say we have 20 pages of data. The current page is page 3. If the surrounding count is 2, then the following links would show up in the list: 1, 2, 3, 4, and 5. Since the first link displayed is page one, &lt;code&gt;hasPrevious()&lt;/code&gt; would return &lt;strong&gt;false&lt;/strong&gt; since there is no page zero. However, &lt;code&gt;hasNext()&lt;/code&gt; would return &lt;strong&gt;true&lt;/strong&gt; since there are 15 additional pages of results after page five.</source>
          <target state="translated">These methods return a boolean true if there are more links that can be displayed on either side of the current page, based on the value passed to &lt;code&gt;setSurroundCount&lt;/code&gt; . For example, let&amp;rsquo;s say we have 20 pages of data. The current page is page 3. If the surrounding count is 2, then the following links would show up in the list: 1, 2, 3, 4, and 5. Since the first link displayed is page one, &lt;code&gt;hasPrevious()&lt;/code&gt; would return &lt;strong&gt;false&lt;/strong&gt; since there is no page zero. However, &lt;code&gt;hasNext()&lt;/code&gt; would return &lt;strong&gt;true&lt;/strong&gt; since there are 15 additional pages of results after page five.</target>
        </trans-unit>
        <trans-unit id="4fcdb9a18774c41683d5a3692b950c027390a8a3" translate="yes" xml:space="preserve">
          <source>These methods return boolean TRUE upon success and FALSE for failure. If they fail you can retrieve the error message using this function:</source>
          <target state="translated">これらのメソッドは、成功した場合に TRUE、失敗した場合に FALSE を返します。失敗した場合は、この関数を使用してエラーメッセージを取得することができます。</target>
        </trans-unit>
        <trans-unit id="5de1859f00d8cacac456c17e61e2a1a66b7b9d28" translate="yes" xml:space="preserve">
          <source>These methods return the URL for the previous or next pages of results on either side of the numbered links. See the previous paragraph for a full explanation.</source>
          <target state="translated">これらのメソッドは、番号が付けられたリンクの両側にある結果の前のページまたは次のページのURLを返します。詳しい説明は前の段落を参照してください。</target>
        </trans-unit>
        <trans-unit id="c08372270eaa7094c05a9480efa5c421e04296f2" translate="yes" xml:space="preserve">
          <source>These methods return the class instance so they can be chained together, as shown above. If they fail they will throw a &lt;code&gt;CodeIgniter\Images\ImageException&lt;/code&gt; that contains the error message. A good practice is to catch the exceptions, showing an error upon failure, like this:</source>
          <target state="translated">These methods return the class instance so they can be chained together, as shown above. If they fail they will throw a &lt;code&gt;CodeIgniter\Images\ImageException&lt;/code&gt; that contains the error message. A good practice is to catch the exceptions, showing an error upon failure, like this:</target>
        </trans-unit>
        <trans-unit id="caf0735a92fabff95f661a2c84f250729ddb3d32" translate="yes" xml:space="preserve">
          <source>These rules can also be called as discrete methods. For example:</source>
          <target state="translated">これらのルールは、離散メソッドと呼ぶこともできます。例えば</target>
        </trans-unit>
        <trans-unit id="178c77d9ac502bfa4c4e5c41717c474162d5c87e" translate="yes" xml:space="preserve">
          <source>These specific rules might not work for all server configurations.</source>
          <target state="translated">これらの特定のルールは、すべてのサーバー構成では機能しない場合があります。</target>
        </trans-unit>
        <trans-unit id="1f95c5e9099f4efe624c429da3001198591e96d5" translate="yes" xml:space="preserve">
          <source>These validation rules enable you to do the basic checks you might need to verify that uploaded files meet your business needs. Since the value of a file upload HTML field doesn&amp;rsquo;t exist, and is stored in the $_FILES global, the name of the input field will need to be used twice. Once to specify the field name as you would for any other rule, but again as the first parameter of all file upload related rules:</source>
          <target state="translated">These validation rules enable you to do the basic checks you might need to verify that uploaded files meet your business needs. Since the value of a file upload HTML field doesn&amp;rsquo;t exist, and is stored in the $_FILES global, the name of the input field will need to be used twice. Once to specify the field name as you would for any other rule, but again as the first parameter of all file upload related rules:</target>
        </trans-unit>
        <trans-unit id="063ba3b9bc217c4888661381c6128d2f4b5015ce" translate="yes" xml:space="preserve">
          <source>These variables are not actual PHP variables, but rather plain text representations that allow you to eliminate PHP from your templates (view files).</source>
          <target state="translated">これらの変数は実際の PHP 変数ではなく、テンプレート (ビューファイル)から PHP を削除できるようにするためのプレーンテキスト表現です。</target>
        </trans-unit>
        <trans-unit id="4824287dc5de8d9d0cbe56b2b0c030019a5bd3b3" translate="yes" xml:space="preserve">
          <source>These will be updated along with the framework whenever you do a &lt;code&gt;composer update&lt;/code&gt;.</source>
          <target state="translated">These will be updated along with the framework whenever you do a &lt;code&gt;composer update&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f333babff833bfd9f3c2694967d31f2424c210ce" translate="yes" xml:space="preserve">
          <source>Third party libraries incorporated must be vetted</source>
          <target state="translated">サードパーティ製のライブラリを組み込んだ場合は、審査を受ける必要があります。</target>
        </trans-unit>
        <trans-unit id="faea92fd53bbcb4500652c888901547aa3e8a100" translate="yes" xml:space="preserve">
          <source>ThirdParty (bundled)</source>
          <target state="translated">サードパーティ</target>
        </trans-unit>
        <trans-unit id="08635f7bec913f53046ff97dc7c3efda34d33b66" translate="yes" xml:space="preserve">
          <source>This PSR provides a method for organizing file and namespaces to allow for a standard method of autoloading classes. Our &lt;a href=&quot;../concepts/autoloader&quot;&gt;Autoloader&lt;/a&gt; meets the PSR-4 recommendations.</source>
          <target state="translated">This PSR provides a method for organizing file and namespaces to allow for a standard method of autoloading classes. Our &lt;a href=&quot;../concepts/autoloader&quot;&gt;Autoloader&lt;/a&gt; meets the PSR-4 recommendations.</target>
        </trans-unit>
        <trans-unit id="28cb9e9d5427d741d56b9ea659179b86a09715fd" translate="yes" xml:space="preserve">
          <source>This PSR standardizes a way of representing the HTTP interactions. While many of the concepts became part of our HTTP layer, CodeIgniter does not strive for compatibility with this recommendation.</source>
          <target state="translated">このPSRは、HTTPインタラクションを表現する方法を標準化します。多くの概念がHTTPレイヤーの一部となっていますが、CodeIgniterはこの推奨事項との互換性を求めていません。</target>
        </trans-unit>
        <trans-unit id="63c894cf51aa174d956f38f8cf1efa757438590b" translate="yes" xml:space="preserve">
          <source>This PSR was fairly controversial when it first came out. CodeIgniter meets many of the recommendations within, but does not, and will not, meet all of them.</source>
          <target state="translated">このPSRは、最初に発表されたときにはかなり議論の的になりました。CodeIgniterはその中の多くの推奨事項を満たしていますが、すべての推奨事項を満たしているわけではありませんし、今後も満たしていく予定はありません。</target>
        </trans-unit>
        <trans-unit id="6776eebda3209f4bc0203068384ae3a7c073a995" translate="yes" xml:space="preserve">
          <source>This allows you access to the response object that was generated, if any:</source>
          <target state="translated">これにより、生成されたレスポンスオブジェクトがあれば、それにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="7d3f91c9976910ab7b22cfac9c0f3d081e8d021f" translate="yes" xml:space="preserve">
          <source>This also impacts escaping parameter values for different contexts inside your script. You will have to give each escaped value a unique parameter name.</source>
          <target state="translated">これは、スクリプト内のさまざまなコンテキストでのパラメータ値のエスケープにも影響します。それぞれのエスケープされた値には一意のパラメータ名をつける必要があります。</target>
        </trans-unit>
        <trans-unit id="0fa25e2c7d9a7dc2a4767ef8cebeff29e629ca3f" translate="yes" xml:space="preserve">
          <source>This are handled through the &lt;code&gt;Cache-Control&lt;/code&gt; and &lt;code&gt;ETag&lt;/code&gt; headers. This guide is not the proper place for a thorough introduction to all of the cache headers power, but you can get a good understanding over at &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching&quot;&gt;Google Developers&lt;/a&gt;.</source>
          <target state="translated">This are handled through the &lt;code&gt;Cache-Control&lt;/code&gt; and &lt;code&gt;ETag&lt;/code&gt; headers. This guide is not the proper place for a thorough introduction to all of the cache headers power, but you can get a good understanding over at &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching&quot;&gt;Google Developers&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="524da95f7e8a1aa0dda42cff93284f9056fbb929" translate="yes" xml:space="preserve">
          <source>This array should be updated with the field names that can be set during save, insert, or update methods. Any field names other than these will be discarded. This helps to protect against just taking input from a form and throwing it all at the model, resulting in potential mass assignment vulnerabilities.</source>
          <target state="translated">この配列は、保存、挿入、または更新メソッドの間に設定できるフィールド名で更新されなければなりません。これら以外のフィールド名は破棄されます。これは、フォームから入力を取得してモデルにすべてを投げつけ、大量代入の脆弱性が発生する可能性があることを防ぐのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="d398f16fd2a9b4630da7d948a19072749120596e" translate="yes" xml:space="preserve">
          <source>This assertion simply uses the &lt;strong&gt;isOK()&lt;/strong&gt; method to test a response.</source>
          <target state="translated">This assertion simply uses the &lt;strong&gt;isOK()&lt;/strong&gt; method to test a response.</target>
        </trans-unit>
        <trans-unit id="85cb998077ce7ed5b57f92def42cd3d5a025d1ea" translate="yes" xml:space="preserve">
          <source>This automatically loads the &lt;code&gt;Config\Validation&lt;/code&gt; file which contains settings for including multiple Rulesets, and collections of rules that can be easily reused.</source>
          <target state="translated">This automatically loads the &lt;code&gt;Config\Validation&lt;/code&gt; file which contains settings for including multiple Rulesets, and collections of rules that can be easily reused.</target>
        </trans-unit>
        <trans-unit id="a20c05aad6100d4192a76f261a64627619d7be40" translate="yes" xml:space="preserve">
          <source>This block is animated in place for a very nice effect.</source>
          <target state="translated">このブロックはその場でアニメーション化されていて、とても素敵な効果を発揮します。</target>
        </trans-unit>
        <trans-unit id="37eb54dcef71740e96e38ca343c7ae9626aefe09" translate="yes" xml:space="preserve">
          <source>This boolean value determines whether the current date is automatically added to all inserts and updates. If true, will set the current time in the format specified by $dateFormat. This requires that the table have columns named &amp;lsquo;created_at&amp;rsquo; and &amp;lsquo;updated_at&amp;rsquo; in the appropriate data type.</source>
          <target state="translated">This boolean value determines whether the current date is automatically added to all inserts and updates. If true, will set the current time in the format specified by $dateFormat. This requires that the table have columns named &amp;lsquo;created_at&amp;rsquo; and &amp;lsquo;updated_at&amp;rsquo; in the appropriate data type.</target>
        </trans-unit>
        <trans-unit id="727e132a18a59c2ef82021cd9772a1488e47300b" translate="yes" xml:space="preserve">
          <source>This boolean value determines whether the database is completely refreshed before every test. If true, all migrations are rolled back to version 0. The database is always migrated to the latest available state as defined by &lt;code&gt;$namespace&lt;/code&gt;.</source>
          <target state="translated">This boolean value determines whether the database is completely refreshed before every test. If true, all migrations are rolled back to version 0. The database is always migrated to the latest available state as defined by &lt;code&gt;$namespace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="804108ebe6ecd77f120e6016b555d4f6ad2bef43" translate="yes" xml:space="preserve">
          <source>This builder is already set up with the model&amp;rsquo;s $table.</source>
          <target state="translated">This builder is already set up with the model&amp;rsquo;s $table.</target>
        </trans-unit>
        <trans-unit id="034866b66ab82477a9cfcc54754f9833c30c8b3f" translate="yes" xml:space="preserve">
          <source>This can also be accessed through the &lt;a href=&quot;cli_library&quot;&gt;CLI&lt;/a&gt; library, but this already has your command removed from the string. These parameters can be used to customize how your scripts behave.</source>
          <target state="translated">This can also be accessed through the &lt;a href=&quot;cli_library&quot;&gt;CLI&lt;/a&gt; library, but this already has your command removed from the string. These parameters can be used to customize how your scripts behave.</target>
        </trans-unit>
        <trans-unit id="96673ed9b35c8fb73fa02c45dd31e480ae22184f" translate="yes" xml:space="preserve">
          <source>This can also be used to create more dynamic rules at runtime, as long as you take care that any dynamic keys passed in don&amp;rsquo;t conflict with your form data.</source>
          <target state="translated">This can also be used to create more dynamic rules at runtime, as long as you take care that any dynamic keys passed in don&amp;rsquo;t conflict with your form data.</target>
        </trans-unit>
        <trans-unit id="34cb415c8e996708a7bb00d65bc16365ef49dd27" translate="yes" xml:space="preserve">
          <source>This can be beneficial when developing API&amp;rsquo;s with the first URI segment being the version number. It can also be used when the first parameter is a language string:</source>
          <target state="translated">This can be beneficial when developing API&amp;rsquo;s with the first URI segment being the version number. It can also be used when the first parameter is a language string:</target>
        </trans-unit>
        <trans-unit id="4b1546fe90a4bcfd3869fa14931e9ccf408a61e0" translate="yes" xml:space="preserve">
          <source>This can be easily done with the &lt;code&gt;prepare()&lt;/code&gt; method. This takes a single parameter, which is a Closure that returns a query object. Query objects are automatically generated by any of the &amp;ldquo;final&amp;rdquo; type queries, including &lt;strong&gt;insert&lt;/strong&gt;, &lt;strong&gt;update&lt;/strong&gt;, &lt;strong&gt;delete&lt;/strong&gt;, &lt;strong&gt;replace&lt;/strong&gt;, and &lt;strong&gt;get&lt;/strong&gt;. This is handled the easiest by using the Query Builder to run a query. The query is not actually run, and the values don&amp;rsquo;t matter since they&amp;rsquo;re never applied, acting instead as placeholders. This returns a PreparedQuery object:</source>
          <target state="translated">This can be easily done with the &lt;code&gt;prepare()&lt;/code&gt; method. This takes a single parameter, which is a Closure that returns a query object. Query objects are automatically generated by any of the &amp;ldquo;final&amp;rdquo; type queries, including &lt;strong&gt;insert&lt;/strong&gt;, &lt;strong&gt;update&lt;/strong&gt;, &lt;strong&gt;delete&lt;/strong&gt;, &lt;strong&gt;replace&lt;/strong&gt;, and &lt;strong&gt;get&lt;/strong&gt;. This is handled the easiest by using the Query Builder to run a query. The query is not actually run, and the values don&amp;rsquo;t matter since they&amp;rsquo;re never applied, acting instead as placeholders. This returns a PreparedQuery object:</target>
        </trans-unit>
        <trans-unit id="9a2154bf1fc22684d14c6e6e1460e64d4f6ef196" translate="yes" xml:space="preserve">
          <source>This can be handy for handling the error yourself, or for performing cleanup before the script ends. If you want the error handler to function as normal, you can throw a new exception within the catch block:</source>
          <target state="translated">これは、自分でエラーを処理したり、スクリプトが終了する前にクリーンアップを実行したりするのに便利です。エラーハンドラを通常どおりに動作させたい場合は、 catch ブロック内で新しい例外をスローすることができます。</target>
        </trans-unit>
        <trans-unit id="55534d1d1010737507b41958a9166ca693bc5738" translate="yes" xml:space="preserve">
          <source>This can be useful if you need to display a date in a form field for submission.</source>
          <target state="translated">これは、送信のためにフォームフィールドに日付を表示する必要がある場合に便利です。</target>
        </trans-unit>
        <trans-unit id="3892f216dce995652ed6cb4f69969fcdacef5534" translate="yes" xml:space="preserve">
          <source>This can be very useful, especially for one-time informational, error or status messages (for example: &amp;ldquo;Record 2 deleted&amp;rdquo;).</source>
          <target state="translated">これは、特に1回限りの情報メッセージ、エラーメッセージ、またはステータスメッセージ（たとえば、「レコード2が削除されました」）の場合に非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="aee16350210e7e42f8a1779bdd0c61af00df12ff" translate="yes" xml:space="preserve">
          <source>This class does NOT need to be initialized. It is loaded automatically by the &lt;a href=&quot;../libraries/output&quot;&gt;Output Library&lt;/a&gt; if profiling is enabled as shown below.</source>
          <target state="translated">このクラスは初期化する必要はありません。&lt;a href=&quot;../libraries/output&quot;&gt;出力ライブラリ&lt;/a&gt;によって自動的にロードされます以下に示すようにプロファイリングが有効になっている場合はされます。</target>
        </trans-unit>
        <trans-unit id="2c04ca7faf60e32469147776e1fed4a3353b16bf" translate="yes" xml:space="preserve">
          <source>This class does not need to be loaded on it&amp;rsquo;s own. Instead, it can be accessed through this request&amp;rsquo;s &lt;code&gt;IncomingRequest&lt;/code&gt; instance. While you cannot access it directly this way, you can easily access all of methods through the &lt;code&gt;negotiate()&lt;/code&gt; method:</source>
          <target state="translated">This class does not need to be loaded on it&amp;rsquo;s own. Instead, it can be accessed through this request&amp;rsquo;s &lt;code&gt;IncomingRequest&lt;/code&gt; instance. While you cannot access it directly this way, you can easily access all of methods through the &lt;code&gt;negotiate()&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="5a71733e6bc77602d6faa0d1a8ddeb713ed35f94" translate="yes" xml:space="preserve">
          <source>This class is initialized automatically by the database driver when caching is enabled. Do NOT load this class manually.</source>
          <target state="translated">このクラスは、キャッシングが有効になっているときにデータベースドライバによって自動的に初期化されます。このクラスを手動でロードしないでください。</target>
        </trans-unit>
        <trans-unit id="b6235ea2d8cb97ef9b65f064e1d65d0678d86b83" translate="yes" xml:space="preserve">
          <source>This class is initialized automatically by the system so there is no need to do it manually.</source>
          <target state="translated">このクラスはシステムが自動的に初期化してくれるので、手動で初期化する必要はありません。</target>
        </trans-unit>
        <trans-unit id="5a773a84aa6aa1f6e1798aff216afa8144baa206" translate="yes" xml:space="preserve">
          <source>This class is modeled after the &lt;a href=&quot;http://docs.guzzlephp.org/en/latest/&quot;&gt;Guzzle HTTP Client&lt;/a&gt; library since it is one of the more widely used libraries. Where possible, the syntax has been kept the same so that if your application needs something a little more powerful than what this library provides, you will have to change very little to move over to use Guzzle.</source>
          <target state="translated">This class is modeled after the &lt;a href=&quot;http://docs.guzzlephp.org/en/latest/&quot;&gt;Guzzle HTTP Client&lt;/a&gt; library since it is one of the more widely used libraries. Where possible, the syntax has been kept the same so that if your application needs something a little more powerful than what this library provides, you will have to change very little to move over to use Guzzle.</target>
        </trans-unit>
        <trans-unit id="08bb891914dbd259388623b1c7e17177474fa143" translate="yes" xml:space="preserve">
          <source>This class is the parent class that both the &lt;a href=&quot;request&quot;&gt;Request Class&lt;/a&gt; and the &lt;a href=&quot;../outgoing/response&quot;&gt;Response Class&lt;/a&gt; extend from. As such, some methods, such as the content negotiation methods, may apply only to a request or response, and not the other one, but they have been included here to keep the header methods together.</source>
          <target state="translated">This class is the parent class that both the &lt;a href=&quot;request&quot;&gt;Request Class&lt;/a&gt; and the &lt;a href=&quot;../outgoing/response&quot;&gt;Response Class&lt;/a&gt; extend from. As such, some methods, such as the content negotiation methods, may apply only to a request or response, and not the other one, but they have been included here to keep the header methods together.</target>
        </trans-unit>
        <trans-unit id="71b0e21151d777af9d206cc839cbf496e1bbb73c" translate="yes" xml:space="preserve">
          <source>This class provides a solid base from which to build your own models, allowing you to rapidly build out your application&amp;rsquo;s model layer.</source>
          <target state="translated">This class provides a solid base from which to build your own models, allowing you to rapidly build out your application&amp;rsquo;s model layer.</target>
        </trans-unit>
        <trans-unit id="67734896d912f2b8965aeb6ae5590ebed9a8d513" translate="yes" xml:space="preserve">
          <source>This class requires the &lt;a href=&quot;https://www.php.net/manual/en/book.curl.php&quot;&gt;cURL Library&lt;/a&gt; to be installed in your version of PHP. This is a very common library that is typically available but not all hosts will provide it, so please check with your host to verify if you run into problems.</source>
          <target state="translated">This class requires the &lt;a href=&quot;https://www.php.net/manual/en/book.curl.php&quot;&gt;cURL Library&lt;/a&gt; to be installed in your version of PHP. This is a very common library that is typically available but not all hosts will provide it, so please check with your host to verify if you run into problems.</target>
        </trans-unit>
        <trans-unit id="be20a80bf17696b848db6b783188be73a46759a6" translate="yes" xml:space="preserve">
          <source>This code looks similar to the controller code that was used earlier. It creates a new model by extending &lt;code&gt;CI_Model&lt;/code&gt; and loads the database library. This will make the database class available through the &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; object.</source>
          <target state="translated">このコードは、以前に使用されたコントローラーコードに似ています。 &lt;code&gt;CI_Model&lt;/code&gt; を拡張して新しいモデルを作成し、データベースライブラリをロードします。これにより、データベースクラスが &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; オブジェクトを通じて利用可能になります。</target>
        </trans-unit>
        <trans-unit id="09fa82f65472c7053324c6560affb51a85213d60" translate="yes" xml:space="preserve">
          <source>This code looks similar to the controller code that was used earlier. It creates a new model by extending &lt;code&gt;CodeIgniter\Model&lt;/code&gt; and loads the database library. This will make the database class available through the &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; object.</source>
          <target state="translated">This code looks similar to the controller code that was used earlier. It creates a new model by extending &lt;code&gt;CodeIgniter\Model&lt;/code&gt; and loads the database library. This will make the database class available through the &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="9de017ee31206b49707ca594df240d6ecd2f06d8" translate="yes" xml:space="preserve">
          <source>This command will take a string, start printing it on the current line, and wrap it to a set length on new lines. This might be useful when displaying a list of options with descriptions that you want to wrap in the current window and not go off screen:</source>
          <target state="translated">このコマンドは文字列を受け取り、現在の行でそれの印刷を開始し、新しい行ではそれを設定した長さに折り返します。これは、現在のウィンドウで折り返して画面外に出さないようにしたい説明付きのオプションのリストを表示するときに便利かもしれません。</target>
        </trans-unit>
        <trans-unit id="23f7fe9ff13596e7f3d3f6ae32c45622a17f3047" translate="yes" xml:space="preserve">
          <source>This command will take the &lt;strong&gt;sessionSavePath&lt;/strong&gt; and &lt;strong&gt;sessionMatchIP&lt;/strong&gt; settings into account when it generates the code.</source>
          <target state="translated">This command will take the &lt;strong&gt;sessionSavePath&lt;/strong&gt; and &lt;strong&gt;sessionMatchIP&lt;/strong&gt; settings into account when it generates the code.</target>
        </trans-unit>
        <trans-unit id="bd8ce5002ffc10ff65dceb7891840fc368226410" translate="yes" xml:space="preserve">
          <source>This compatibility layer contains backports for the &lt;code&gt;hash_equals()&lt;/code&gt; and &lt;code&gt;hash_pbkdf2()&lt;/code&gt; functions, which otherwise require PHP 5.6 and/or PHP 5.5 respectively.</source>
          <target state="translated">この互換性層は、バックポート用含ま &lt;code&gt;hash_equals()&lt;/code&gt; と &lt;code&gt;hash_pbkdf2()&lt;/code&gt; そうでなければ、それぞれPHP 5.6および/またはPHP 5.5を必要とする機能を、。</target>
        </trans-unit>
        <trans-unit id="fd8c93914ac6b1ca4fa1f0c472b5dc7efe0b8106" translate="yes" xml:space="preserve">
          <source>This configuration enables URLs without &amp;ldquo;index.php&amp;rdquo; in them and using CodeIgniter&amp;rsquo;s &amp;ldquo;404 - File Not Found&amp;rdquo; for URLs ending with &amp;ldquo;.php&amp;rdquo;.</source>
          <target state="translated">This configuration enables URLs without &amp;ldquo;index.php&amp;rdquo; in them and using CodeIgniter&amp;rsquo;s &amp;ldquo;404 - File Not Found&amp;rdquo; for URLs ending with &amp;ldquo;.php&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="2b942b04cfb21ce20712a7a8f81689b97db9162e" translate="yes" xml:space="preserve">
          <source>This could be as simple as:</source>
          <target state="translated">これは単純なことかもしれません。</target>
        </trans-unit>
        <trans-unit id="34fffd999eab7895813700a6185a686bac6727e4" translate="yes" xml:space="preserve">
          <source>This could be used to differentiate messages by status, or create &amp;lsquo;headers&amp;rsquo; by using a different color. You can even set background colors by passing the color name in as the third parameter:</source>
          <target state="translated">This could be used to differentiate messages by status, or create &amp;lsquo;headers&amp;rsquo; by using a different color. You can even set background colors by passing the color name in as the third parameter:</target>
        </trans-unit>
        <trans-unit id="18d420293cf5bfd32aba54526d0303bf19fb1722" translate="yes" xml:space="preserve">
          <source>This creates a new folder, ci-news, which contains your application code, with CodeIgniter installed in the vendor folder.</source>
          <target state="translated">これにより、新しいフォルダ ci-news が作成され、そこにはアプリケーションのコードが含まれています。</target>
        </trans-unit>
        <trans-unit id="e0dea9f08a0e390393f705706672f19bca2fc8ae" translate="yes" xml:space="preserve">
          <source>This defines the format to be used when formatting arrays in responses. If you provide a &lt;code&gt;null&lt;/code&gt; value for &lt;code&gt;$format&lt;/code&gt;, it will be automatically determined through content negotiation.</source>
          <target state="translated">This defines the format to be used when formatting arrays in responses. If you provide a &lt;code&gt;null&lt;/code&gt; value for &lt;code&gt;$format&lt;/code&gt; , it will be automatically determined through content negotiation.</target>
        </trans-unit>
        <trans-unit id="954bfec53177a0f60f21a9446c995406893b3595" translate="yes" xml:space="preserve">
          <source>This dependency is optional and these functions will always be declared. If iconv is not available, they WILL fall-back to their non-mbstring versions.</source>
          <target state="translated">この依存関係はオプションであり、これらの関数は常に宣言されます。iconvが利用できない場合、これらの関数はmbstringではないバージョンにフォールバックします。</target>
        </trans-unit>
        <trans-unit id="ae0050c31e5146d7e79e7cbd057cdf86e28d1ece" translate="yes" xml:space="preserve">
          <source>This directive says that any incoming request without any content specified should be handled by the &lt;code&gt;index()&lt;/code&gt; method inside the &lt;code&gt;Home&lt;/code&gt; controller.</source>
          <target state="translated">This directive says that any incoming request without any content specified should be handled by the &lt;code&gt;index()&lt;/code&gt; method inside the &lt;code&gt;Home&lt;/code&gt; controller.</target>
        </trans-unit>
        <trans-unit id="a676df192e2a9c967c1766fa6b7657fb3af0e16a" translate="yes" xml:space="preserve">
          <source>This directory holds any directories that might need to be written to in the course of an application&amp;rsquo;s life. This includes directories for storing cache files, logs, and any uploads a user might send. You should add any other directories that your application will need to write to here. This allows you to keep your other primary directories non-writable as an added security measure.</source>
          <target state="translated">This directory holds any directories that might need to be written to in the course of an application&amp;rsquo;s life. This includes directories for storing cache files, logs, and any uploads a user might send. You should add any other directories that your application will need to write to here. This allows you to keep your other primary directories non-writable as an added security measure.</target>
        </trans-unit>
        <trans-unit id="0d28a333f83e9ff03fdb5c54716f4c69aac4adc4" translate="yes" xml:space="preserve">
          <source>This directory is set up to hold your test files. The &lt;code&gt;_support&lt;/code&gt; directory holds various mock classes and other utilities that you can use while writing your tests. This directory does not need to be transferred to your production servers.</source>
          <target state="translated">This directory is set up to hold your test files. The &lt;code&gt;_support&lt;/code&gt; directory holds various mock classes and other utilities that you can use while writing your tests. This directory does not need to be transferred to your production servers.</target>
        </trans-unit>
        <trans-unit id="9667d16125da6adb4305d74895c146b16a9ac484" translate="yes" xml:space="preserve">
          <source>This directory stores the files that make up the framework, itself. While you have a lot of flexibility in how you use the application directory, the files in the system directory should never be modified. Instead, you should extend the classes, or create new classes, to provide the desired functionality.</source>
          <target state="translated">このディレクトリにはフレームワークを構成するファイルそのものが格納されます。アプリケーションディレクトリをどのように使うかについては多くの柔軟性がありますが、システムディレクトリのファイルは決して変更されるべきではありません。代わりに、必要な機能を提供するためにクラスを拡張するか、新しいクラスを作成してください。</target>
        </trans-unit>
        <trans-unit id="fc7b1ffe1539020a48f4f9b77402d33bab6b04c1" translate="yes" xml:space="preserve">
          <source>This empty class provides convenient access to the database connection, the Query Builder, and a number of additional convenience methods.</source>
          <target state="translated">この空のクラスは、データベース接続、クエリビルダ、そしていくつかの便利なメソッドへの便利なアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="4c7b1bd28097910dff18cf16bb81c0b627a5bb65" translate="yes" xml:space="preserve">
          <source>This ensures that only the id, title and content fields are sent to be updated.</source>
          <target state="translated">これにより、id、title、contentフィールドのみが更新されるように送信されます。</target>
        </trans-unit>
        <trans-unit id="a20cf4589eaf1aa6c43a67f4ee26640574c60177" translate="yes" xml:space="preserve">
          <source>This event is triggered whenever a new query has been run, whether successful or not. The only parameter is a &lt;a href=&quot;queries&quot;&gt;Query&lt;/a&gt; instance of the current query. You could use this to display all queries in STDOUT, or logging to a file, or even creating tools to do automatic query analysis to help you spot potentially missing indexes, slow queries, etc. An example usage might be:</source>
          <target state="translated">This event is triggered whenever a new query has been run, whether successful or not. The only parameter is a &lt;a href=&quot;queries&quot;&gt;Query&lt;/a&gt; instance of the current query. You could use this to display all queries in STDOUT, or logging to a file, or even creating tools to do automatic query analysis to help you spot potentially missing indexes, slow queries, etc. An example usage might be:</target>
        </trans-unit>
        <trans-unit id="16b9bfd4d51d1a27739b8022fc9451395b581164" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to compress a file, save it to a folder on your server, and download it to your desktop.</source>
          <target state="translated">この例では、ファイルを圧縮し、サーバー上のフォルダに保存し、デスクトップにダウンロードする方法を説明します。</target>
        </trans-unit>
        <trans-unit id="80a18390cb50eb14095fea780e7cb508569a12b2" translate="yes" xml:space="preserve">
          <source>This example gives different results, depending on cascading:</source>
          <target state="translated">この例では、カスケードによって異なる結果が得られます。</target>
        </trans-unit>
        <trans-unit id="36d317b485aa9fc49051f9839ccc7c032696285b" translate="yes" xml:space="preserve">
          <source>This example shows a plugin named &lt;strong&gt;foo&lt;/strong&gt;. It can manipulate any of the content between its opening and closing tags. In this example, it could work with the text &amp;rdquo; inner content &amp;ldquo;. Plugins are processed before any pseudo-variable replacements happen.</source>
          <target state="translated">This example shows a plugin named &lt;strong&gt;foo&lt;/strong&gt;. It can manipulate any of the content between its opening and closing tags. In this example, it could work with the text &amp;rdquo; inner content &amp;ldquo;. Plugins are processed before any pseudo-variable replacements happen.</target>
        </trans-unit>
        <trans-unit id="d7e9e39021f2f329eec2ea02155eff926fb7cb27" translate="yes" xml:space="preserve">
          <source>This example will migrate Blog namespace with any new migrations on the test database group:</source>
          <target state="translated">この例では、テストデータベースグループ上の任意の新しい移行でBlog名前空間を移行します。</target>
        </trans-unit>
        <trans-unit id="91eecca036b3e4c0e003d1f2c98e09d2c9532420" translate="yes" xml:space="preserve">
          <source>This example would only allow the specified hosts to work if the domain exactly matched &amp;ldquo;accounts.example.com&amp;rdquo;. It would not work under the main site at &amp;ldquo;example.com&amp;rdquo;.</source>
          <target state="translated">This example would only allow the specified hosts to work if the domain exactly matched &amp;ldquo;accounts.example.com&amp;rdquo;. It would not work under the main site at &amp;ldquo;example.com&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="d516da3579c66c52e838f68d61c231d7943cc613" translate="yes" xml:space="preserve">
          <source>This example would take the same image and first fix any mobile phone orientation issues, rotate the image by 90 degress, and then crop the result into a 100x100 pixel image, starting at the top left corner. The result would be saved as the thumbnail.</source>
          <target state="translated">この例では、同じ画像を撮影し、まず携帯電話の向きの問題を修正し、画像を90度回転させ、その結果を左上隅から始まる100x100ピクセルの画像にトリミングします。その結果はサムネイルとして保存されます。</target>
        </trans-unit>
        <trans-unit id="980c908ff521dc8a6500fb5b12c55eebfd4b59ed" translate="yes" xml:space="preserve">
          <source>This example would write a single line to the window, with &lt;code&gt;fileA&lt;/code&gt; in yellow, followed by a tab, and then &lt;code&gt;/path/to/file&lt;/code&gt; in white text.</source>
          <target state="translated">This example would write a single line to the window, with &lt;code&gt;fileA&lt;/code&gt; in yellow, followed by a tab, and then &lt;code&gt;/path/to/file&lt;/code&gt; in white text.</target>
        </trans-unit>
        <trans-unit id="85f4b65b6e95577879b72fe9a6c9417d47419ab0" translate="yes" xml:space="preserve">
          <source>This exception is a special case allowing for overriding of all other response routing and forcing a redirect to a specific route or URL:</source>
          <target state="translated">この例外は、他のすべてのレスポンスルーティングを上書きし、特定のルートやURLへのリダイレクトを強制することを可能にする特殊なケースです。</target>
        </trans-unit>
        <trans-unit id="5a9791f097a80631703ba813e5f28bee35529889" translate="yes" xml:space="preserve">
          <source>This exception is thrown for database errors, such as when the database connection cannot be created, or when it is temporarily lost:</source>
          <target state="translated">この例外は、データベース接続が作成できない場合や、一時的に失われた場合などのデータベースエラーに対してスローされます。</target>
        </trans-unit>
        <trans-unit id="b068f5845eba00d4e1fedf15e64ec3a98b34aa84" translate="yes" xml:space="preserve">
          <source>This exception should be used when the values from the configuration class are invalid, or when the config class is not the right type, etc:</source>
          <target state="translated">この例外は、設定クラスからの値が無効な場合や、設定クラスが正しい型ではない場合などに使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="960d87303252ea43081bf787f7b5895dac070bdf" translate="yes" xml:space="preserve">
          <source>This feature has been deprecated from the language library and moved to the &lt;a href=&quot;../helpers/language_helper#lang&quot;&gt;&lt;code&gt;lang()&lt;/code&gt;&lt;/a&gt; function of the &lt;a href=&quot;../helpers/language_helper&quot;&gt;Language Helper&lt;/a&gt;.</source>
          <target state="translated">この機能は言語ライブラリから廃止され、言語&lt;a href=&quot;../helpers/language_helper&quot;&gt;ヘルパーの&lt;/a&gt;&lt;a href=&quot;../helpers/language_helper#lang&quot;&gt; &lt;code&gt;lang()&lt;/code&gt; &lt;/a&gt;関数に移動されました。</target>
        </trans-unit>
        <trans-unit id="c0f79c293364f9808329dd49ed37881cfaaf399d" translate="yes" xml:space="preserve">
          <source>This feature is only available for MySQL and Interbase/Firebird databases.</source>
          <target state="translated">この機能はMySQLとInterbase/Firebirdデータベースでのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="c1b24eb7c23fd71655282908c3cca602a9445f84" translate="yes" xml:space="preserve">
          <source>This file contains server-specific settings. This means you never will need to commit any sensitive information to your version control system. It includes some of the most common ones you want to enter already, though they are all commented out. So uncomment the line with CI_ENVIRONMENT on it, and change &lt;code&gt;production&lt;/code&gt; to &lt;code&gt;development&lt;/code&gt;:</source>
          <target state="translated">This file contains server-specific settings. This means you never will need to commit any sensitive information to your version control system. It includes some of the most common ones you want to enter already, though they are all commented out. So uncomment the line with CI_ENVIRONMENT on it, and change &lt;code&gt;production&lt;/code&gt; to &lt;code&gt;development&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e8a0a976facf86105523f7c1be1f594bbe8d5296" translate="yes" xml:space="preserve">
          <source>This folder is meant to be the &amp;ldquo;web root&amp;rdquo; of your site, and your web server would be configured to point to it.</source>
          <target state="translated">This folder is meant to be the &amp;ldquo;web root&amp;rdquo; of your site, and your web server would be configured to point to it.</target>
        </trans-unit>
        <trans-unit id="ae3bd527553322d4ee7175e8b312b353cfea3140" translate="yes" xml:space="preserve">
          <source>This forces a single file to migrate regardless of order or batches. Method &amp;ldquo;up&amp;rdquo; or &amp;ldquo;down&amp;rdquo; is detected based on whether it has already been migrated. &lt;strong&gt;Note&lt;/strong&gt;: This method is recommended only for testing and could cause data consistency issues.</source>
          <target state="translated">This forces a single file to migrate regardless of order or batches. Method &amp;ldquo;up&amp;rdquo; or &amp;ldquo;down&amp;rdquo; is detected based on whether it has already been migrated. &lt;strong&gt;Note&lt;/strong&gt;: This method is recommended only for testing and could cause data consistency issues.</target>
        </trans-unit>
        <trans-unit id="f9e9fb8d28d16d2667a1ca22cfb02f7413987d18" translate="yes" xml:space="preserve">
          <source>This form is converted into a PUT request and is a true PUT request as far as the routing and the IncomingRequest class are concerned.</source>
          <target state="translated">このフォームはPUTリクエストに変換され、ルーティングとIncomingRequestクラスに関する限り、真のPUTリクエストです。</target>
        </trans-unit>
        <trans-unit id="725d1029ffe9ce7ec5be1297e5511abc6a9c48cd" translate="yes" xml:space="preserve">
          <source>This function acquires an exclusive lock on the file while writing to it.</source>
          <target state="translated">ファイルへの書き込み中に排他的ロックを取得します。</target>
        </trans-unit>
        <trans-unit id="cac28d605a40408860abda66d7f9a382add1b6fc" translate="yes" xml:space="preserve">
          <source>This function acts as an alias for PHP&amp;rsquo;s native &lt;code&gt;htmlspecialchars()&lt;/code&gt; function, with the advantage of being able to accept an array of strings.</source>
          <target state="translated">この関数は、PHPのネイティブ &lt;code&gt;htmlspecialchars()&lt;/code&gt; のエイリアスとして機能します関数機能し、文字列の配列を受け入れることができるという利点があります。</target>
        </trans-unit>
        <trans-unit id="b1469356fa89de96548b762d1694cecfcd6777bb" translate="yes" xml:space="preserve">
          <source>This function can be called to stop caching.</source>
          <target state="translated">この関数は、キャッシングを停止するために呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="1dfaf1dfb4bec9da6f999dadd63b608ce8556dbe" translate="yes" xml:space="preserve">
          <source>This function can only be used in your view files. The consumption will reflect the total memory used by the entire app.</source>
          <target state="translated">この機能は、ビューファイルでのみ使用できます。消費量は、アプリ全体で使用されたメモリの合計を反映します。</target>
        </trans-unit>
        <trans-unit id="5e734ebe11da824e7d5cc62fcc84fdf55eecfa44" translate="yes" xml:space="preserve">
          <source>This function can take a number poorly-formed date formats and convert them into something useful. It also accepts well-formed dates.</source>
          <target state="translated">この関数は、不完全な形式の日付フォーマットを取得し、それらを有用なものに変換することができます。また、整形された日付も受け付けます。</target>
        </trans-unit>
        <trans-unit id="206ec51534217ee7313acdbf5762d709a4d52351" translate="yes" xml:space="preserve">
          <source>This function checks both if the &lt;code&gt;PHP_SAPI&lt;/code&gt; value is &amp;lsquo;cli&amp;rsquo; or if the &lt;code&gt;STDIN&lt;/code&gt; constant is defined.</source>
          <target state="translated">この関数は、 &lt;code&gt;PHP_SAPI&lt;/code&gt; 値が「cli」であるか、または &lt;code&gt;STDIN&lt;/code&gt; 定数が定義されているかを確認します。</target>
        </trans-unit>
        <trans-unit id="64ec1bb5f75ad5a9c4fb643517f3571ad0f4ff36" translate="yes" xml:space="preserve">
          <source>This function deletes all items from the Query Builder cache.</source>
          <target state="translated">この関数は、クエリビルダのキャッシュからすべての項目を削除します。</target>
        </trans-unit>
        <trans-unit id="1d1bfa3527099fbf88cabb9e02c248b0886e34a3" translate="yes" xml:space="preserve">
          <source>This function determines if a file is actually writable by attempting to write to it first. Generally only recommended on platforms where this information may be unreliable.</source>
          <target state="translated">この関数は、最初にファイルへの書き込みを試みることで、ファイルが実際に書き込み可能かどうかを判断します。一般的に、この情報が信頼できないプラットフォームでのみ推奨されます。</target>
        </trans-unit>
        <trans-unit id="c181dbf1a0393276e90af9672983b3a764878f52" translate="yes" xml:space="preserve">
          <source>This function does the opposite of &lt;a href=&quot;#ascii_to_entities&quot;&gt;&lt;code&gt;ascii_to_entities()&lt;/code&gt;&lt;/a&gt;. It turns character entities back into ASCII.</source>
          <target state="translated">This function does the opposite of &lt;a href=&quot;#ascii_to_entities&quot;&gt; &lt;code&gt;ascii_to_entities()&lt;/code&gt; &lt;/a&gt;. It turns character entities back into ASCII.</target>
        </trans-unit>
        <trans-unit id="e60ddca9fcb5c7c66bde19b07a2bce0e7102e143" translate="yes" xml:space="preserve">
          <source>This function enables you to call PHP database functions that are not natively included in CodeIgniter, in a platform independent manner. For example, let&amp;rsquo;s say you want to call the mysql_get_client_info() function, which is &lt;strong&gt;not&lt;/strong&gt; natively supported by CodeIgniter. You could do so like this:</source>
          <target state="translated">この関数を使用すると、プラットフォームに依存しない方法で、CodeIgniterにネイティブに含まれていないPHPデータベース関数を呼び出すことができます。たとえば、CodeIgniterでネイティブにサポートされて&lt;strong&gt;いない&lt;/strong&gt; mysql_get_client_info（）関数を呼び出したいとします。あなたはこのようにすることができます：</target>
        </trans-unit>
        <trans-unit id="0b4c5b345afac8749f19042fba954c904e639562" translate="yes" xml:space="preserve">
          <source>This function enables you to call PHP database functions that are not natively included in CodeIgniter, in a platform-independent manner. For example, let&amp;rsquo;s say you want to call the mysql_get_client_info() function, which is &lt;strong&gt;not&lt;/strong&gt; natively supported by CodeIgniter. You could do so like this:</source>
          <target state="translated">This function enables you to call PHP database functions that are not natively included in CodeIgniter, in a platform-independent manner. For example, let&amp;rsquo;s say you want to call the mysql_get_client_info() function, which is &lt;strong&gt;not&lt;/strong&gt; natively supported by CodeIgniter. You could do so like this:</target>
        </trans-unit>
        <trans-unit id="d2a7aac91152dabb2b45a5691242fab53012e58f" translate="yes" xml:space="preserve">
          <source>This function enables you to set &lt;strong&gt;WHERE&lt;/strong&gt; clauses using one of four methods:</source>
          <target state="translated">この機能により、&lt;strong&gt;WHERE&lt;/strong&gt;を設定できます。&lt;strong&gt;&lt;/strong&gt;、次の4つの方法のいずれかを使用して句を。</target>
        </trans-unit>
        <trans-unit id="ef6c9fdc60b7911db1bbabeb153d30a0cf0edca9" translate="yes" xml:space="preserve">
          <source>This function enables you to set values for inserts or updates.</source>
          <target state="translated">挿入や更新の値を設定することができます。</target>
        </trans-unit>
        <trans-unit id="aea9b7acd8e392aacc3cbb4651b2cbf802f7ad72" translate="yes" xml:space="preserve">
          <source>This function ignores ampersands if they are part of existing numbered character entities, e.g. &amp;amp;#123;. Example:</source>
          <target state="translated">＆＃123;などの既存の番号付き文字エンティティの一部である場合、この関数はアンパサンドを無視します。例：</target>
        </trans-unit>
        <trans-unit id="a2e14e9bfe8719fad9c5b28059644cf7de1513b0" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED and is just an alias for &lt;a href=&quot;../general/common_functions&quot;&gt;common function&lt;/a&gt;&lt;code&gt;html_escape()&lt;/code&gt; - please use that instead.</source>
          <target state="translated">この関数は &lt;code&gt;html_escape()&lt;/code&gt; れ、&lt;a href=&quot;../general/common_functions&quot;&gt;一般的な関数&lt;/a&gt;html_escape（）の単なるエイリアスです-代わりにそれを使用してください。</target>
        </trans-unit>
        <trans-unit id="dc52634c0dd730bf964417e38f2bb9aa542beed4" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use PHP&amp;rsquo;s native &lt;a href=&quot;https://secure.php.net/datetime&quot;&gt;DateTime class&lt;/a&gt; instead.</source>
          <target state="translated">この機能は廃止されました。代わりに、PHPのネイティブ&lt;a href=&quot;https://secure.php.net/datetime&quot;&gt;DateTimeクラスを&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="bc3d5eae9d702a12c016f57a0da3a09e0dcee97d" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;date()&lt;/code&gt; combined with &lt;a href=&quot;https://secure.php.net/manual/en/class.datetime.php#datetime.constants.types&quot;&gt;DateTime&amp;rsquo;s format constants&lt;/a&gt; instead:</source>
          <target state="translated">この機能は廃止されました。代わりに、ネイティブの &lt;code&gt;date()&lt;/code&gt; を&lt;a href=&quot;https://secure.php.net/manual/en/class.datetime.php#datetime.constants.types&quot;&gt;DateTimeのフォーマット定数&lt;/a&gt;と組み合わせて使用します。</target>
        </trans-unit>
        <trans-unit id="6a8a9dcd77676a51b6f33b62ef8aba89a6863664" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;file_get_contents()&lt;/code&gt; instead.</source>
          <target state="translated">この機能は廃止されました。代わりに、ネイティブの &lt;code&gt;file_get_contents()&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="ee697be58d5579422821dffc01f706a1cd4f04f6" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;hash()&lt;/code&gt; instead.</source>
          <target state="translated">この機能は廃止されました。代わりにネイティブの &lt;code&gt;hash()&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="ea4a4913c2cf88f95e548f2ea29473b3e4be14b3" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;str_repeat()&lt;/code&gt; in combination with &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; instead.</source>
          <target state="translated">この機能は廃止されました。 &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; と組み合わせてネイティブの &lt;code&gt;str_repeat()&lt;/code&gt; を使用します。代わりに。</target>
        </trans-unit>
        <trans-unit id="1e8c9b29aeb665b3790cf4beb2756442e0e3f2d9" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;str_repeat()&lt;/code&gt; in combination with &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; instead.</source>
          <target state="translated">この機能は廃止されました。代わりに、ネイティブの &lt;code&gt;str_repeat()&lt;/code&gt; を &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; と組み合わせて使用してください。</target>
        </trans-unit>
        <trans-unit id="21335c3e8d00c6a559243a37128815137bd94b09" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;str_repeat()&lt;/code&gt; instead.</source>
          <target state="translated">この機能は廃止されました。代わりにネイティブの &lt;code&gt;str_repeat()&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="aab18310e3746761381b7ec89ac2d16054c3049b" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;trim()&lt;/code&gt; instead: | | trim($str, &amp;lsquo;/&amp;rsquo;);</source>
          <target state="translated">この機能は廃止されました。代わりにネイティブの &lt;code&gt;trim()&lt;/code&gt; を使用してください：| | trim（$ str、 '/'）;</target>
        </trans-unit>
        <trans-unit id="28ea4e512218ac9bb00668259f3ad88debfc5a59" translate="yes" xml:space="preserve">
          <source>This function is absolutely identical to &lt;a href=&quot;#form_open&quot;&gt;&lt;code&gt;form_open()&lt;/code&gt;&lt;/a&gt; above, except that it adds a &lt;em&gt;multipart&lt;/em&gt; attribute, which is necessary if you would like to use the form to upload files with.</source>
          <target state="translated">この関数は、フォームを使用してファイルをアップロードする場合に必要な&lt;em&gt;マルチパート&lt;/em&gt;属性を追加することを除いて、上記の&lt;a href=&quot;#form_open&quot;&gt; &lt;code&gt;form_open()&lt;/code&gt; &lt;/a&gt;とまったく同じです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="48cd3bc7dfe364d1fc48f5463cce2de61be138aa" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Config::base_url()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/config&quot;&gt;Config Library&lt;/a&gt; documentation.</source>
          <target state="translated">この関数は &lt;code&gt;CI_Config::base_url()&lt;/code&gt; エイリアスです。詳細については、&lt;a href=&quot;../libraries/config&quot;&gt;構成ライブラリ&lt;/a&gt;を参照してくださいドキュメント。</target>
        </trans-unit>
        <trans-unit id="cbf9fb7d50a8e4e2580826844c3c571f4d5668d8" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Config::site_url()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/config&quot;&gt;Config Library&lt;/a&gt; documentation.</source>
          <target state="translated">この関数は &lt;code&gt;CI_Config::site_url()&lt;/code&gt; エイリアスです。詳細については、&lt;a href=&quot;../libraries/config&quot;&gt;構成ライブラリの&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="d9fc75e113b4adc12bcf64077dd1fdd581afc21b" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Config::uri_string()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/config&quot;&gt;Config Library&lt;/a&gt; documentation.</source>
          <target state="translated">この関数は &lt;code&gt;CI_Config::uri_string()&lt;/code&gt; エイリアスです。詳細については、&lt;a href=&quot;../libraries/config&quot;&gt;構成ライブラリの&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="42b354867caa2b01fb1d5ef32341dec80cea9010" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Input::xss_clean()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/input&quot;&gt;Input Library&lt;/a&gt; documentation.</source>
          <target state="translated">この関数は &lt;code&gt;CI_Input::xss_clean()&lt;/code&gt; エイリアスです。詳しくは、&lt;a href=&quot;../libraries/input&quot;&gt;入力ライブラリの&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="ca7306115b7ddfe5a6ba4e2055acebbecf5e37b9" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Security::entity_decode()&lt;/code&gt;. Fore more info, please see the &lt;a href=&quot;../libraries/security&quot;&gt;Security Library&lt;/a&gt; documentation.</source>
          <target state="translated">この関数は &lt;code&gt;CI_Security::entity_decode()&lt;/code&gt; エイリアスです。詳しくは、&lt;a href=&quot;../libraries/security&quot;&gt;セキュリティライブラリの&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="4bbc97dffd257ba3053a81a61414205622c26693" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Security::sanitize_filename()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/security&quot;&gt;Security Library&lt;/a&gt; documentation.</source>
          <target state="translated">この関数は &lt;code&gt;CI_Security::sanitize_filename()&lt;/code&gt; エイリアスです。詳細については、&lt;a href=&quot;../libraries/security&quot;&gt;セキュリティライブラリ&lt;/a&gt;をご覧ください。ドキュメント。</target>
        </trans-unit>
        <trans-unit id="b5a040393bdaaa86eb14aca9dd560ae1c94a21ea" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Security::strip_image_tags()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/security&quot;&gt;Security Library&lt;/a&gt; documentation.</source>
          <target state="translated">この関数は &lt;code&gt;CI_Security::strip_image_tags()&lt;/code&gt; エイリアスです。詳細については、&lt;a href=&quot;../libraries/security&quot;&gt;セキュリティライブラリの&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="fe27a409cbe25fb514bb52bf89c96a24e88714bc" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Typography::auto_typography()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/typography&quot;&gt;Typography Library&lt;/a&gt; documentation.</source>
          <target state="translated">この関数は &lt;code&gt;CI_Typography::auto_typography()&lt;/code&gt; エイリアスです。詳しくは、&lt;a href=&quot;../libraries/typography&quot;&gt;タイポグラフィライブラリの&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="ac1102570db4117a66ff5f18e6383a32c318245a" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;\CodeIgniter\Security::sanitize_filename()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/security&quot;&gt;Security Library&lt;/a&gt; documentation.</source>
          <target state="translated">This function is an alias for &lt;code&gt;\CodeIgniter\Security::sanitize_filename()&lt;/code&gt; . For more info, please see the &lt;a href=&quot;../libraries/security&quot;&gt;Security Library&lt;/a&gt; documentation.</target>
        </trans-unit>
        <trans-unit id="3bbad1d4a509fcfe70c16792951014a09e2eb859" translate="yes" xml:space="preserve">
          <source>This function is identical in all respects to the &lt;a href=&quot;#form_checkbox&quot;&gt;&lt;code&gt;form_checkbox()&lt;/code&gt;&lt;/a&gt; function above except that it uses the &amp;ldquo;radio&amp;rdquo; input type.</source>
          <target state="translated">この関数は、「radio」入力タイプを使用することを除いて、上記の&lt;a href=&quot;#form_checkbox&quot;&gt; &lt;code&gt;form_checkbox()&lt;/code&gt; &lt;/a&gt;関数とすべての点で同じです。</target>
        </trans-unit>
        <trans-unit id="1f2c1c4c95cebd8a2e5316ad19bc50bed3b49988" translate="yes" xml:space="preserve">
          <source>This function is identical in all respects to the &lt;a href=&quot;#form_input&quot;&gt;&lt;code&gt;form_input()&lt;/code&gt;&lt;/a&gt; function above except that it generates a &amp;ldquo;textarea&amp;rdquo; type.</source>
          <target state="translated">この関数は、「textarea」タイプを生成することを除いて、上記の&lt;a href=&quot;#form_input&quot;&gt; &lt;code&gt;form_input()&lt;/code&gt; &lt;/a&gt;関数とすべての点で同じです。</target>
        </trans-unit>
        <trans-unit id="4bb276365402c6804132d346e7de7868f98ca6ba" translate="yes" xml:space="preserve">
          <source>This function is identical in all respects to the &lt;a href=&quot;#form_input&quot;&gt;&lt;code&gt;form_input()&lt;/code&gt;&lt;/a&gt; function above except that it uses the &amp;ldquo;file&amp;rdquo; input type, allowing it to be used to upload files.</source>
          <target state="translated">この関数は、すべての点で&lt;a href=&quot;#form_input&quot;&gt; &lt;code&gt;form_input()&lt;/code&gt; &lt;/a&gt;と同じです。、「ファイル」入力タイプを使用することを除いて、上記の関数、ファイルのアップロードに使用できます。</target>
        </trans-unit>
        <trans-unit id="eb971b11293530362e31483a41138b561c8510d2" translate="yes" xml:space="preserve">
          <source>This function is identical in all respects to the &lt;a href=&quot;#form_input&quot;&gt;&lt;code&gt;form_input()&lt;/code&gt;&lt;/a&gt; function above except that it uses the &amp;ldquo;password&amp;rdquo; input type.</source>
          <target state="translated">この関数は、「パスワード」入力タイプを使用することを除いて、上記の&lt;a href=&quot;#form_input&quot;&gt; &lt;code&gt;form_input()&lt;/code&gt; &lt;/a&gt;関数とすべての点で同じです。</target>
        </trans-unit>
        <trans-unit id="d1cc54de0767d95a956e430d9375f5d307f677bf" translate="yes" xml:space="preserve">
          <source>This function is identical to &lt;a href=&quot;#form_open&quot;&gt;&lt;code&gt;form_open()&lt;/code&gt;&lt;/a&gt; above, except that it adds a &lt;em&gt;multipart&lt;/em&gt; attribute, which is necessary if you would like to use the form to upload files with.</source>
          <target state="translated">This function is identical to &lt;a href=&quot;#form_open&quot;&gt; &lt;code&gt;form_open()&lt;/code&gt; &lt;/a&gt; above, except that it adds a &lt;em&gt;multipart&lt;/em&gt; attribute, which is necessary if you would like to use the form to upload files with.</target>
        </trans-unit>
        <trans-unit id="ed1a5bec9325eff9adc19151b3b8826e9ba7798f" translate="yes" xml:space="preserve">
          <source>This function is identical to PHP&amp;rsquo;s &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date()&lt;/a&gt; function, except that it lets you use MySQL style date codes, where each code letter is preceded with a percent sign, e.g. &lt;code&gt;%Y %m %d&lt;/code&gt;</source>
          <target state="translated">この関数は、MySQLスタイルの日付コードを使用できることを除いて、PHPの&lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date（）&lt;/a&gt;関数と同じです。各コード文字の前にパーセント記号を付けます（例： &lt;code&gt;%Y %m %d&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c87dbb34cbba265ecba734e95ad1ceb55757302" translate="yes" xml:space="preserve">
          <source>This function is identical to the one above, except that multiple instances are joined by OR</source>
          <target state="translated">この関数は、複数のインスタンスが OR で結合されていることを除いては、上記のものと同じです。</target>
        </trans-unit>
        <trans-unit id="296b7bc9600c09e0a2b2fc441343390e919d63fd" translate="yes" xml:space="preserve">
          <source>This function is identical to the one above, except that multiple instances are joined by OR:</source>
          <target state="translated">この関数は、複数のインスタンスをORで結合する以外は、上の関数と同じです。</target>
        </trans-unit>
        <trans-unit id="aaa2c4a32230ab4d1feb90d43b79f4a35ebc4377" translate="yes" xml:space="preserve">
          <source>This function is otherwise identical to &lt;code&gt;set_cookie()&lt;/code&gt;, except that it does not have the value and expiration parameters. You can submit an array of values in the first parameter or you can set discrete parameters.</source>
          <target state="translated">その他の点では、この関数は &lt;code&gt;set_cookie()&lt;/code&gt; と同じですが、値と有効期限のパラメータがない点が異なります。最初のパラメーターで値の配列を送信するか、個別のパラメーターを設定できます。</target>
        </trans-unit>
        <trans-unit id="a248d9f4a088bc1b5cd7e812a6524f29d51a8560" translate="yes" xml:space="preserve">
          <source>This function is useful when used with &lt;a href=&quot;#timezone_menu&quot;&gt;&lt;code&gt;timezone_menu()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、&lt;a href=&quot;#timezone_menu&quot;&gt; &lt;code&gt;timezone_menu()&lt;/code&gt; &lt;/a&gt;と一緒に使用すると便利です。</target>
        </trans-unit>
        <trans-unit id="43133048c00e8c08d6edfb65af49920ed7df046f" translate="yes" xml:space="preserve">
          <source>This function lets you write messages to your log files. You must supply one of three &amp;ldquo;levels&amp;rdquo; in the first parameter, indicating what type of message it is (debug, error, info), with the message itself in the second parameter.</source>
          <target state="translated">この関数を使用すると、ログファイルにメッセージを書き込むことができます。最初のパラメーターで3つの「レベル」の1つを指定して、メッセージのタイプ（デバッグ、エラー、情報）を示し、2番目のパラメーターでメッセージ自体を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="b7d15a25cba8bbb545576dd1fe07a9ae68f664d6" translate="yes" xml:space="preserve">
          <source>This function mainly converts double and single quotes to curly entities, but it also converts em-dashes, double spaces, and ampersands.</source>
          <target state="translated">この関数は主にダブルクォーテーションとシングルクォーテーションをカーリーエンティティに変換しますが、エム・ダッシュ、ダブルスペース、アンパサンドも変換します。</target>
        </trans-unit>
        <trans-unit id="a953a82c0a275869ae4175a732434ac3c9b8400a" translate="yes" xml:space="preserve">
          <source>This function must be called to begin caching. All Query Builder queries of the correct type (see below for supported queries) are stored for later use.</source>
          <target state="translated">キャッシングを開始するには、この関数を呼び出す必要があります。正しい型(サポートされているクエリについては以下を参照)の Query Builder クエリはすべて保存され、後で使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="53e77948b4acb781abcfe7af97410b40538ebc92" translate="yes" xml:space="preserve">
          <source>This function only handles numbers in the range 1 through 3999. It will return null for any value outside that range .</source>
          <target state="translated">この関数は、1 から 3999 の範囲の数値のみを扱います。その範囲外の値については null を返します。</target>
        </trans-unit>
        <trans-unit id="bc7a6117ebc8ca503f2f5a607af983932c8e91e3" translate="yes" xml:space="preserve">
          <source>This function prevents inserting NULL characters between ASCII characters, like Java\0script.</source>
          <target state="translated">この関数は、Java0scriptのようにASCII文字の間にNULL文字を挿入しないようにします。</target>
        </trans-unit>
        <trans-unit id="0b7169ec2b5c775e1d680e854a48398a7c607b71" translate="yes" xml:space="preserve">
          <source>This function returns a &lt;em&gt;reference&lt;/em&gt; to the MIMEs array from &lt;em&gt;application/config/mimes.php&lt;/em&gt;.</source>
          <target state="translated">この関数は、&lt;em&gt;application / config / mimes.php&lt;/em&gt;からMIMEs配列への&lt;em&gt;参照&lt;/em&gt;を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8de26549daa9a7b3cd483260ea07bc2e2bc9a036" translate="yes" xml:space="preserve">
          <source>This function returns a line of text from a loaded language file with simplified syntax that may be more desirable for view files than &lt;code&gt;CI_Lang::line()&lt;/code&gt;.</source>
          <target state="translated">この関数は、ロードされた言語ファイルから、 &lt;code&gt;CI_Lang::line()&lt;/code&gt; よりもビューファイルに望ましい構文を使用してテキスト行を返します。</target>
        </trans-unit>
        <trans-unit id="3c11c461dcde867fd92463ee4c58a9d22fdd64d1" translate="yes" xml:space="preserve">
          <source>This function returns the same thing as &lt;a href=&quot;#site_url&quot;&gt;&lt;code&gt;site_url()&lt;/code&gt;&lt;/a&gt;, without the &lt;em&gt;indexPage&lt;/em&gt; being appended.</source>
          <target state="translated">この関数は、&lt;em&gt;indexPage&lt;/em&gt;が追加されていない、&lt;em&gt;site_url &lt;/em&gt;&lt;a href=&quot;#site_url&quot;&gt; &lt;code&gt;site_url()&lt;/code&gt; &lt;/a&gt;と同じものを返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2fb0777ec9cdafc83860eb1d8beda71f2d5197e" translate="yes" xml:space="preserve">
          <source>This function returns the same thing as &lt;a href=&quot;#site_url&quot;&gt;&lt;code&gt;site_url()&lt;/code&gt;&lt;/a&gt;, without the &lt;em&gt;index_page&lt;/em&gt; or &lt;em&gt;url_suffix&lt;/em&gt; being appended.</source>
          <target state="translated">この関数は、&lt;em&gt;index_page&lt;/em&gt;や&lt;em&gt;url_suffix&lt;/em&gt;を追加せずに、&lt;em&gt;site_url &lt;/em&gt;&lt;a href=&quot;#site_url&quot;&gt; &lt;code&gt;site_url()&lt;/code&gt; &lt;/a&gt;と同じものを返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="603901fe1abb97e6d45ddcdce7d50096df4bf6da" translate="yes" xml:space="preserve">
          <source>This function runs a &lt;code&gt;function_exists()&lt;/code&gt; check and if the &lt;code&gt;Suhosin extension &amp;lt;http://www.hardened-php.net/suhosin/&amp;gt;&lt;/code&gt; is loaded, checks if it doesn&amp;rsquo;t disable the function being checked.</source>
          <target state="translated">この関数は &lt;code&gt;function_exists()&lt;/code&gt; チェックを実行し、 &lt;code&gt;Suhosin extension &amp;lt;http://www.hardened-php.net/suhosin/&amp;gt;&lt;/code&gt; かどうかを確認しますがロードされているかどうか、チェックされている関数を無効にしていないかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="b7893d50839aad8d1bec09386452626dd29299d5" translate="yes" xml:space="preserve">
          <source>This function simplifies the process of writing database inserts. It returns a correctly formatted SQL insert string. Example:</source>
          <target state="translated">この関数は、データベースへの挿入を記述するプロセスを簡素化します。これは、正しくフォーマットされたSQL挿入文字列を返します。例を示します。</target>
        </trans-unit>
        <trans-unit id="3a59ba5f5760631050a9c5af07fc4479c42bceef" translate="yes" xml:space="preserve">
          <source>This function simplifies the process of writing database updates. It returns a correctly formatted SQL update string. Example:</source>
          <target state="translated">この関数は、データベース更新の書き込みプロセスを簡素化します。この関数は、正しくフォーマットされたSQL更新文字列を返します。例を示します。</target>
        </trans-unit>
        <trans-unit id="3a75de402c3bab7dd9f458697c5af468d98d19d0" translate="yes" xml:space="preserve">
          <source>This function used to use the &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tag by default. Older browsers might not support the new HTML5 mark tag, so it is recommended that you insert the following CSS code into your stylesheet if you need to support such browsers:</source>
          <target state="translated">この関数は、デフォルトで &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; タグを使用していました。古いブラウザは新しいHTML5マークタグをサポートしていない可能性があるため、そのようなブラウザをサポートする必要がある場合は、次のCSSコードをスタイルシートに挿入することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="b2600ffbad9f6bdb19b51484968a194786865fbd" translate="yes" xml:space="preserve">
          <source>This function uses a companion config file &lt;code&gt;app/Config/ForeignCharacters.php&lt;/code&gt; to define the to and from array for transliteration.</source>
          <target state="translated">この関数は、コンパニオン &lt;code&gt;app/Config/ForeignCharacters.php&lt;/code&gt; ファイルapp / Config / ForeignCharacters.phpを使用して、音訳用のto配列とfrom配列を定義します。</target>
        </trans-unit>
        <trans-unit id="9cfb783277dbaf014a719ca5abb3236712df6dae" translate="yes" xml:space="preserve">
          <source>This function uses a companion config file &lt;code&gt;application/config/foreign_chars.php&lt;/code&gt; to define the to and from array for transliteration.</source>
          <target state="translated">この関数は、対応する設定ファイル &lt;code&gt;application/config/foreign_chars.php&lt;/code&gt; を使用して、文字変換の to配列とfrom配列を定義します。</target>
        </trans-unit>
        <trans-unit id="ba8889a9f4f94ab2789c11c83895ed6eeb8235a3" translate="yes" xml:space="preserve">
          <source>This function was formerly named &lt;code&gt;dohash()&lt;/code&gt;, which has been removed in favor of &lt;code&gt;do_hash()&lt;/code&gt;.</source>
          <target state="translated">この関数は、以前は &lt;code&gt;dohash()&lt;/code&gt; と呼ばれていましたが、 &lt;code&gt;do_hash()&lt;/code&gt; のために削除されました。</target>
        </trans-unit>
        <trans-unit id="b3f3df08a35d5ea2cf68905c474b5e7b70248342" translate="yes" xml:space="preserve">
          <source>This function was introduced because Suhosin terminated script execution, but this turned out to be a bug. A fix has been available for some time (version 0.9.34), but is unfortunately not released yet.</source>
          <target state="translated">この機能は、Suhosinがスクリプトの実行を終了させるために導入されたものですが、これがバグであることが判明しました。しばらく前から修正版が公開されていますが (バージョン 0.9.34)、残念ながらまだリリースされていません。</target>
        </trans-unit>
        <trans-unit id="79288af119265a637a00800c5bc1ca18e985595a" translate="yes" xml:space="preserve">
          <source>This function will add &lt;em&gt;http://&lt;/em&gt; in the event that a protocol prefix is missing from a URL.</source>
          <target state="translated">この関数は、プロトコルプレフィックスがURLにない場合に、&lt;em&gt;http：//&lt;/em&gt;を追加します。</target>
        </trans-unit>
        <trans-unit id="580a78a98b457647c93f9b78d2fa47303df506cc" translate="yes" xml:space="preserve">
          <source>This function will add http:// in the event that a protocol prefix is missing from a URL.</source>
          <target state="translated">この関数は、URL にプロトコルのプレフィックスがない場合に http://を追加します。</target>
        </trans-unit>
        <trans-unit id="9965cad3c8dc5cffce9ce82a61e9d59718ece5f2" translate="yes" xml:space="preserve">
          <source>This function will add or remove a CSS class to its target.</source>
          <target state="translated">この関数は、対象のCSSクラスを追加または削除します。</target>
        </trans-unit>
        <trans-unit id="a2a7dd33554ea7d04458752145e8f07331940a26" translate="yes" xml:space="preserve">
          <source>This function will alias the native &lt;code&gt;cal_days_in_month()&lt;/code&gt;, if it is available.</source>
          <target state="translated">この関数は、使用可能な場合、ネイティブの &lt;code&gt;cal_days_in_month()&lt;/code&gt; にエイリアスを設定します。</target>
        </trans-unit>
        <trans-unit id="c0ebb727a1ab498cb510b1e74a7a68140b95b7f2" translate="yes" xml:space="preserve">
          <source>This function will also add a table prefix to your table, assuming you have a prefix specified in your database config file. To enable the prefixing set TRUE (boolean) via the second parameter:</source>
          <target state="translated">データベースの設定ファイルでプレフィックスを指定している場合は、 この関数はテーブルにプレフィックスを追加します。プレフィックスを有効にするには、2 番目のパラメータで TRUE (boolean)を指定します。</target>
        </trans-unit>
        <trans-unit id="190b38f6be92523917b213bfa7a859cfe15d6834" translate="yes" xml:space="preserve">
          <source>This function will display the 404 error message supplied to it using the error template appropriate to your execution:</source>
          <target state="translated">この関数は、実行に適したエラーテンプレートを使用して、指定された404エラーメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="b7de61c4585f7a59c95c962b6b1ab7f4598ffef7" translate="yes" xml:space="preserve">
          <source>This function will display the error message supplied to it using the error template appropriate to your execution:</source>
          <target state="translated">この関数は、実行に適したエラーテンプレートを使用して、与えられたエラーメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="811e57c886fe7358bd1e95303e6d49b2ff7aa4d2" translate="yes" xml:space="preserve">
          <source>This function will extract $radius number of characters before and after the central $phrase with an elipsis before and after.</source>
          <target state="translated">この関数は、中心となる$phraseの前後にエリプシスを付けて、$radiusの文字数を抽出します。</target>
        </trans-unit>
        <trans-unit id="aac35838b30878a37a1f3626eb2e27d124297f16" translate="yes" xml:space="preserve">
          <source>This function will return a server path without symbolic links or relative directory structures. An optional second argument will cause an error to be triggered if the path cannot be resolved.</source>
          <target state="translated">この関数は、シンボリックリンクや相対ディレクトリ構造を含まないサーバパスを返します。オプションの第二引数を指定すると、パスが解決できない場合にエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="de89324f973e90129df77d891a20cee32a0be9df" translate="yes" xml:space="preserve">
          <source>This function will return any error messages sent back by the validator. If there are no messages it returns an empty string.</source>
          <target state="translated">この関数は、バリデータから送られてきたエラーメッセージを返します。メッセージがない場合は空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="872a09f32ff79332bb3a1eceb2a480b92dd312e1" translate="yes" xml:space="preserve">
          <source>This function will set the field messages.</source>
          <target state="translated">この関数は、フィールドメッセージを設定します。</target>
        </trans-unit>
        <trans-unit id="b02ddbda520a844d7c347f709a5c0cf80d16a569" translate="yes" xml:space="preserve">
          <source>This function will set the field validation rules.</source>
          <target state="translated">この関数は、フィールドのバリデーションルールを設定します。</target>
        </trans-unit>
        <trans-unit id="e1e64087a2ee8c57032429c5307e4ada7739f783" translate="yes" xml:space="preserve">
          <source>This function will set the field wise error messages.</source>
          <target state="translated">この関数は、フィールドごとのエラーメッセージを設定します。</target>
        </trans-unit>
        <trans-unit id="916222b5974e4ee5b75216a9e768e776bec0e401" translate="yes" xml:space="preserve">
          <source>This function will set the validation rules.</source>
          <target state="translated">この関数は、検証ルールを設定します。</target>
        </trans-unit>
        <trans-unit id="2a06fd79261ff102088be6456cb4752d1bc0ea4f" translate="yes" xml:space="preserve">
          <source>This function will strip tags from a string, split it at a defined maximum length, and insert an ellipsis.</source>
          <target state="translated">この関数は、文字列からタグを削除し、定義された最大長で分割し、エリプシスを挿入します。</target>
        </trans-unit>
        <trans-unit id="92adb488571ac8aa2c86b63bcf33314d9c838bc8" translate="yes" xml:space="preserve">
          <source>This function will terminate script execution.</source>
          <target state="translated">この関数は、スクリプトの実行を終了します。</target>
        </trans-unit>
        <trans-unit id="6025c3e9e54766c61da79f4ab9418966b4852934" translate="yes" xml:space="preserve">
          <source>This function works the same as &lt;a href=&quot;#url_title&quot;&gt;&lt;code&gt;url_title()&lt;/code&gt;&lt;/a&gt; but it converts all accented characters automatically.</source>
          <target state="translated">この関数は&lt;a href=&quot;#url_title&quot;&gt; &lt;code&gt;url_title()&lt;/code&gt; &lt;/a&gt;と同じように機能しますが、アクセント付きのすべての文字を自動的に変換します。</target>
        </trans-unit>
        <trans-unit id="586be07abce2fe1ad0fa90bce27fd696e6c7c3f2" translate="yes" xml:space="preserve">
          <source>This has no way of checking if the incoming data is valid JSON or not, you should only use this method if you know that you&amp;rsquo;re expecting JSON.</source>
          <target state="translated">これには、受信データが有効なJSONであるかどうかを確認する方法がありません。この方法は、JSONを期待していることがわかっている場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="5a6def756253381ec9923d7c024ad25c73bff129" translate="yes" xml:space="preserve">
          <source>This has the added benefit of making the views more readable, too.</source>
          <target state="translated">これには、ビューをより読みやすくするというメリットもあります。</target>
        </trans-unit>
        <trans-unit id="d0064e41c7d8197b99e73662cd607c34d657ccd4" translate="yes" xml:space="preserve">
          <source>This helper function gives you friendlier syntax to get browser cookies. Refer to the &lt;a href=&quot;../incoming/incomingrequest&quot;&gt;IncomingRequest Library&lt;/a&gt; for detailed description of its use, as this function acts very similarly to &lt;code&gt;IncomingRequest::getCookie()&lt;/code&gt;, except it will also prepend the &lt;code&gt;$cookiePrefix&lt;/code&gt; that you might&amp;rsquo;ve set in your &lt;em&gt;app/Config/App.php&lt;/em&gt; file.</source>
          <target state="translated">このヘルパー関数は、ブラウザーのCookieを取得するためのよりわかりやすい構文を提供します。この関数は &lt;code&gt;IncomingRequest::getCookie()&lt;/code&gt; と非常によく似た動作をするため、その使用法の詳細については&lt;a href=&quot;../incoming/incomingrequest&quot;&gt;IncomingRequestライブラリ&lt;/a&gt;を参照してください。ただし、&lt;em&gt;app / Config /App.php&lt;/em&gt;ファイルで設定した &lt;code&gt;$cookiePrefix&lt;/code&gt; が&lt;em&gt;先頭に追加され&lt;/em&gt;ます。 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7d76fd42d80a36ba57f9415eaa77283dac255366" translate="yes" xml:space="preserve">
          <source>This helper function gives you friendlier syntax to get browser cookies. Refer to the &lt;a href=&quot;../libraries/input&quot;&gt;Input Library&lt;/a&gt; for detailed description of its use, as this function acts very similarly to &lt;code&gt;CI_Input::cookie()&lt;/code&gt;, except it will also prepend the &lt;code&gt;$config['cookie_prefix']&lt;/code&gt; that you might&amp;rsquo;ve set in your &lt;em&gt;application/config/config.php&lt;/em&gt; file.</source>
          <target state="translated">このヘルパー関数は、ブラウザーのCookieを取得するためのわかりやすい構文を提供します。この関数は &lt;code&gt;CI_Input::cookie()&lt;/code&gt; と非常によく似ているため、使用方法の詳細については&lt;a href=&quot;../libraries/input&quot;&gt;入力ライブラリ&lt;/a&gt;を参照してください。ただし、&lt;em&gt;アプリケーション/構成で設定し&lt;/em&gt;た &lt;code&gt;$config['cookie_prefix']&lt;/code&gt; が前に付加される点が異なります。&lt;em&gt;/config.php&lt;/em&gt;ファイル。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="74b2f02f7078d239af1739730d46620e6519b937" translate="yes" xml:space="preserve">
          <source>This helper function gives you friendlier syntax to set browser cookies. Refer to the &lt;a href=&quot;../libraries/input&quot;&gt;Input Library&lt;/a&gt; for a description of its use, as this function is an alias for &lt;code&gt;CI_Input::set_cookie()&lt;/code&gt;.</source>
          <target state="translated">このヘルパー関数は、ブラウザーのCookieを設定するためのわかりやすい構文を提供します。この関数は &lt;code&gt;CI_Input::set_cookie()&lt;/code&gt; エイリアスであるため、その使用方法については、&lt;a href=&quot;../libraries/input&quot;&gt;入力ライブラリ&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7deaeff72453843b2b90b2e16f4f229ea61b87ef" translate="yes" xml:space="preserve">
          <source>This helper function gives you friendlier syntax to set browser cookies. Refer to the &lt;a href=&quot;../outgoing/response&quot;&gt;Response Library&lt;/a&gt; for a description of its use, as this function is an alias for &lt;code&gt;Response::setCookie()&lt;/code&gt;.</source>
          <target state="translated">このヘルパー関数は、ブラウザーのCookieを設定するためのよりわかりやすい構文を提供します。この関数は &lt;code&gt;Response::setCookie()&lt;/code&gt; エイリアスであるため、その使用法の説明については、&lt;a href=&quot;../outgoing/response&quot;&gt;応答ライブラリ&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c4717c587ebe75f40efeb98182f152059cc04e14" translate="yes" xml:space="preserve">
          <source>This helper is automatically loaded by the framework on every request.</source>
          <target state="translated">このヘルパーはリクエストのたびにフレームワークによって自動的にロードされます。</target>
        </trans-unit>
        <trans-unit id="ec3a131564042ea77bae1f18c97c5a743224c8c2" translate="yes" xml:space="preserve">
          <source>This helper is loaded using the following code</source>
          <target state="translated">このヘルパーは以下のコードを使用してロードされます。</target>
        </trans-unit>
        <trans-unit id="3ab7862f392b0a2150493928c18434a48e3751e3" translate="yes" xml:space="preserve">
          <source>This helper is loaded using the following code:</source>
          <target state="translated">このヘルパーは、以下のコードを使用してロードされます。</target>
        </trans-unit>
        <trans-unit id="99307f5fb4109cd1a2379b86376dbc76414c900c" translate="yes" xml:space="preserve">
          <source>This helper method is a static version of the default constructor. It takes a string acceptable as DateTime&amp;rsquo;s constructor as the first parameter, a timezone as the second parameter, and the locale as the third parameter.:</source>
          <target state="translated">このヘルパーメソッドは、デフォルトのコンストラクターの静的バージョンです。最初のパラメーターとしてDateTimeのコンストラクターとして受け入れ可能な文字列、2番目のパラメーターとしてタイムゾーン、3番目のパラメーターとしてロケールを取ります。</target>
        </trans-unit>
        <trans-unit id="62ee30b24e91b5e2bca64d73d5e15ceb2692cfd0" translate="yes" xml:space="preserve">
          <source>This helps you mix together normal &lt;a href=&quot;../general/urls&quot;&gt;URI Segments&lt;/a&gt; as well as query string arguments, which until 3.0 was not possible.</source>
          <target state="translated">これにより、通常の&lt;a href=&quot;../general/urls&quot;&gt;URIセグメント&lt;/a&gt;とクエリ文字列引数を組み合わせることができます。これは、3.0までは不可能でした。</target>
        </trans-unit>
        <trans-unit id="febab50fbdda06a005ed07c79c4eb1322da66af9" translate="yes" xml:space="preserve">
          <source>This installation technique would suit a developer who wishes to start a new CodeIgniter4 based project.</source>
          <target state="translated">このインストール方法は、CodeIgniter4 ベースの新しいプロジェクトを開始したいと考えている開発者に適しています。</target>
        </trans-unit>
        <trans-unit id="7ad02614db2833e3d79e1c010c33033a08f4a440" translate="yes" xml:space="preserve">
          <source>This is &lt;strong&gt;not&lt;/strong&gt; valid:</source>
          <target state="translated">これは、&lt;strong&gt;ない&lt;/strong&gt;有効：</target>
        </trans-unit>
        <trans-unit id="43d37f88fad38d5a756912465e911c911c43a597" translate="yes" xml:space="preserve">
          <source>This is a caching backend that will always &amp;lsquo;miss.&amp;rsquo; It stores no data, but lets you keep your caching code in place in environments that don&amp;rsquo;t support your chosen cache.</source>
          <target state="translated">これは常に「欠落」するキャッシュバックエンドです。データは保存されませんが、選択したキャッシュをサポートしていない環境でキャッシュコードを適切な場所に保持できます。</target>
        </trans-unit>
        <trans-unit id="4960c726802d874c3f0f98b1c7714aa7e4533da8" translate="yes" xml:space="preserve">
          <source>This is a generic file loading method. Supply the filepath and name in the first parameter and it will open and read the file. By default the data is sent to your browser, just like a View file, but if you set the second parameter to boolean TRUE it will instead return the data as a string.</source>
          <target state="translated">これは汎用的なファイル読み込み方法です。最初のパラメータにfilepathと名前を指定すると、ファイルを開いて読み込みます。デフォルトでは、View ファイルのようにブラウザにデータが送信されますが、 二番目のパラメータを TRUE に設定すると、代わりに文字列としてデータを返します。</target>
        </trans-unit>
        <trans-unit id="d73f03ec4706c30d2d14c2dba26a21fe38e3d2d7" translate="yes" xml:space="preserve">
          <source>This is a helper method that returns an array containing all of the data related to the file you uploaded. Here is the array prototype:</source>
          <target state="translated">これは、アップロードしたファイルに関連するすべてのデータを含む配列を返すヘルパーメソッドです。これが配列のプロトタイプです。</target>
        </trans-unit>
        <trans-unit id="f97a72cf4007a42b9de867ccb266095fe6db78bf" translate="yes" xml:space="preserve">
          <source>This is a legacy method kept only for backwards compatibility with older applications.</source>
          <target state="translated">これは、古いアプリケーションとの後方互換性のためだけに保持されたレガシー方式です。</target>
        </trans-unit>
        <trans-unit id="6a21cdb3cd1efc4dff5cc155509ad8cd795efa6f" translate="yes" xml:space="preserve">
          <source>This is a legacy method kept only for backwards compatibility with older applications. It is just an alias for &lt;code&gt;isset($_SESSION[$key])&lt;/code&gt; - please use that instead.</source>
          <target state="translated">これは、古いアプリケーションとの下位互換性のためにのみ残されているレガシー方式です。 &lt;code&gt;isset($_SESSION[$key])&lt;/code&gt; 単なるエイリアスです-代わりにそれを使用してください。</target>
        </trans-unit>
        <trans-unit id="e82a0628a6263c017695488f4efa237172a23ade" translate="yes" xml:space="preserve">
          <source>This is a legacy method kept only for backwards compatibility with older applications. It is just an alias for &lt;code&gt;unset($_SESSION[$key])&lt;/code&gt; - please use that instead.</source>
          <target state="translated">これは、古いアプリケーションとの下位互換性のためにのみ残されているレガシー方式です。これは単に &lt;code&gt;unset($_SESSION[$key])&lt;/code&gt; エイリアスです-代わりにそれを使用してください。</target>
        </trans-unit>
        <trans-unit id="7db228d85e7b1207b06cb2cdf9a9572dc1be3d4a" translate="yes" xml:space="preserve">
          <source>This is a legacy method kept only for backwards compatibility with older applications. It is just an alias for the &lt;code&gt;mark_as_flash()&lt;/code&gt; method.</source>
          <target state="translated">これは、古いアプリケーションとの下位互換性のためにのみ残されているレガシー方式です。これは、 &lt;code&gt;mark_as_flash()&lt;/code&gt; メソッドの単なるエイリアスです。</target>
        </trans-unit>
        <trans-unit id="abb95415195866c87feb578c0d9f4f86509e2260" translate="yes" xml:space="preserve">
          <source>This is a legacy method kept only for backwards compatibility with older applications. You should directly access &lt;code&gt;$_SESSION&lt;/code&gt; instead.</source>
          <target state="translated">これは、古いアプリケーションとの下位互換性のためにのみ残されているレガシー方式です。代わりに &lt;code&gt;$_SESSION&lt;/code&gt; に直接アクセスする必要があります。</target>
        </trans-unit>
        <trans-unit id="0e1fd9ad081de754a51b8c72d7e89d34e1dba7ed" translate="yes" xml:space="preserve">
          <source>This is a replacement for DateTime&amp;rsquo;s method of the same name. This allows the timezone to be set at the same time, and returns a &lt;strong&gt;Time&lt;/strong&gt; instance, instead of DateTime:</source>
          <target state="translated">これは、同じ名前のDateTimeのメソッドを置き換えるものです。これにより、タイムゾーンを同時に設定でき、DateTimeの代わりに&lt;strong&gt;Time&lt;/strong&gt;インスタンスが返されます。</target>
        </trans-unit>
        <trans-unit id="3060d47837da9df022206aa4aba12247eb205c81" translate="yes" xml:space="preserve">
          <source>This is a security function that converts PHP tags to entities.</source>
          <target state="translated">PHPのタグを実体に変換するセキュリティ機能です。</target>
        </trans-unit>
        <trans-unit id="035e4dda7dcefc3930b3ee8a53d3484d091979e3" translate="yes" xml:space="preserve">
          <source>This is a security function that will strip image tags from a string. It leaves the image URL as plain text.</source>
          <target state="translated">これは文字列から画像タグを削除するセキュリティ機能です。画像のURLをプレーンテキストとして残します。</target>
        </trans-unit>
        <trans-unit id="dff92e351491c493260d9b9f2b39c9cc098b765b" translate="yes" xml:space="preserve">
          <source>This is a wrapper around the insert() and update() methods that handle inserting or updating the record automatically, based on whether it finds an array key matching the $primaryKey value:</source>
          <target state="translated">これは、レコードの挿入や更新を自動的に処理する insert()メソッドや update()メソッドのラッパーで、 $primaryKey の値にマッチする配列キーが見つかったかどうかに基づいて処理します。</target>
        </trans-unit>
        <trans-unit id="e069dcca80eda6bc7378c978b82c64a0cb14ad76" translate="yes" xml:space="preserve">
          <source>This is an array of servers that will be used when using the &lt;code&gt;Memcache(d)&lt;/code&gt; handler.</source>
          <target state="translated">これは、 &lt;code&gt;Memcache(d)&lt;/code&gt; ハンドラーを使用するときに使用されるサーバーの配列です。</target>
        </trans-unit>
        <trans-unit id="5ee55d46c3c981fd5ef918b421a80688c24f55af" translate="yes" xml:space="preserve">
          <source>This is an optional message string which can be used if you send HTML formatted email. It lets you specify an alternative message with no HTML formatting which is added to the header string for people who do not accept HTML email. If you do not set your own message CodeIgniter will extract the message from your HTML email and strip the tags.</source>
          <target state="translated">これは、HTMLフォーマットの電子メールを送信する場合に使用できるオプションのメッセージ文字列です。HTMLフォーマットのメールを受け付けない人のために、HTMLフォーマットのない代替メッセージをヘッダー文字列に追加することができます。独自のメッセージを設定しない場合、CodeIgniterはHTMLメールからメッセージを抽出し、タグを削除します。</target>
        </trans-unit>
        <trans-unit id="382999574ddec134a2b20400054dd86fad046318" translate="yes" xml:space="preserve">
          <source>This is as good as storing them in plain-text. Really. Do &lt;strong&gt;hashing&lt;/strong&gt;, not &lt;em&gt;encoding&lt;/em&gt;.</source>
          <target state="translated">これは、プレーンテキストで保存するのと同じです。本当に。ください&lt;strong&gt;ハッシング&lt;/strong&gt;ない、&lt;em&gt;エンコードします&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="88c7a1010e54a24f887aa60f47197fab7aed54c1" translate="yes" xml:space="preserve">
          <source>This is best used during cronjobs, data exports, or other large tasks.</source>
          <target state="translated">クロンジョブやデータのエクスポート、その他の大規模なタスクの際に最適です。</target>
        </trans-unit>
        <trans-unit id="a27fd01dede0b6c37b30c76b1f17f557f9531984" translate="yes" xml:space="preserve">
          <source>This is configured in the file &lt;strong&gt;app/Config/Modules.php&lt;/strong&gt;.</source>
          <target state="translated">これは、ファイル&lt;strong&gt;app / Config /Modules.phpで&lt;/strong&gt;構成されます。</target>
        </trans-unit>
        <trans-unit id="0c4a19f41f357e975c7ecf272280bda06a0a7837" translate="yes" xml:space="preserve">
          <source>This is equivalent to:</source>
          <target state="translated">に相当します。</target>
        </trans-unit>
        <trans-unit id="39fcc7d9a2d4d8517e8e7d24a5708085617456bb" translate="yes" xml:space="preserve">
          <source>This is especially useful with the Entity classes, which has an asArray method that returns all public and protected properties (minus the _options property) and makes them available to the Parser.</source>
          <target state="translated">これは特にEntityクラスで便利で、すべてのpublicプロパティとprotectedプロパティ(_optionsプロパティを除く)を返し、パーサーで利用できるようにするasArrayメソッドを持っています。</target>
        </trans-unit>
        <trans-unit id="d6a284d8f53333c943cd1e45d959dfc4bf0c2758" translate="yes" xml:space="preserve">
          <source>This is identical to the &lt;strong&gt;equals&lt;/strong&gt; method, except that it only returns true when the date, time, AND timezone are all identical:</source>
          <target state="translated">これは、日付、時刻、およびタイムゾーンがすべて同一である場合にのみtrueを返すことを除いて、&lt;strong&gt;equals&lt;/strong&gt;メソッドと同じです。</target>
        </trans-unit>
        <trans-unit id="200c4026b3fd13a7453e27858cd84a346c47f52c" translate="yes" xml:space="preserve">
          <source>This is influenced by the cipher algorithm itself, the IV prepended to the cipher-text and the HMAC authentication message that is also prepended. Furthermore, the encrypted message is also Base64-encoded so that it is safe for storage and transmission, regardless of a possible character set in use.</source>
          <target state="translated">これは、暗号アルゴリズム自体、暗号文に前置されたIV、および前置されたHMAC認証メッセージに影響されます。さらに、暗号化されたメッセージは、使用されている可能性のある文字セットに関係なく、保存および送信のために安全であるように、Base64で符号化されている。</target>
        </trans-unit>
        <trans-unit id="41adae30504955c5e0c5d89e71609e62c9be21f5" translate="yes" xml:space="preserve">
          <source>This is influenced by the cipher algorithm itself, the initialization vector (IV) prepended to the cipher-text, and the HMAC authentication message that is also prepended. Furthermore, the encrypted message is also Base64-encoded so that it is safe for storage and transmission regardless of the character-set in use.</source>
          <target state="translated">これは、暗号アルゴリズム自体や、暗号文に付加された初期化ベクトル(IV)や、同じく付加されたHMAC認証メッセージの影響を受けます。さらに、暗号化されたメッセージはBase64で符号化されているため、使用する文字セットに関係なく安全に保存・送信することができます。</target>
        </trans-unit>
        <trans-unit id="c386959aa2d4ef7fa23c75f51074bfb6df3cc7de" translate="yes" xml:space="preserve">
          <source>This is just a basic class with a few internal helper methods. It is also extendable like any other library, if you really need to do that, but we are not going to explain how &amp;hellip; if you&amp;rsquo;re familiar with how class extensions/overrides work in CI, then you already know how to do it. If not, well, you shouldn&amp;rsquo;t be doing it in the first place.</source>
          <target state="translated">これは、いくつかの内部ヘルパーメソッドを備えた基本的なクラスです。他のライブラリと同じように拡張可能ですが、本当に必要な場合は説明しませんが、CIでクラス拡張/オーバーライドがどのように機能するかを理解している場合は、すでにその方法を知っています。そうでなければ、まあ、あなたはそもそもそれをすべきではありません。</target>
        </trans-unit>
        <trans-unit id="45ead81e1276f906103d34d31babcfa60150e9cd" translate="yes" xml:space="preserve">
          <source>This is just an example of course, and callbacks aren&amp;rsquo;t limited to models. You can use any object/method that accepts the field value as its&amp;rsquo; first parameter. You can also use an anonymous function:</source>
          <target state="translated">これは単なる例であり、コールバックはモデルに限定されません。フィールド値を最初のパラメーターとして受け入れる任意のオブジェクト/メソッドを使用できます。無名関数を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="2d53f9650f0a5183987badea2577aa5c5f9938b8" translate="yes" xml:space="preserve">
          <source>This is not a full cryptographic solution. If you need more capabilities, for example, public-key encryption, we suggest you consider direct use of OpenSSL or one of the other &lt;a href=&quot;https://www.php.net/manual/en/refs.crypto.php&quot;&gt;Cryptography Extensions&lt;/a&gt;. A more comprehensive package like &lt;a href=&quot;https://github.com/paragonie/halite&quot;&gt;Halite&lt;/a&gt; (an O-O package built on libsodium) is another possibility.</source>
          <target state="translated">これは完全な暗号化ソリューションではありません。公開鍵暗号化など、より多くの機能が必要な場合は、OpenSSLまたは他の&lt;a href=&quot;https://www.php.net/manual/en/refs.crypto.php&quot;&gt;暗号化拡張機能の&lt;/a&gt;1つを直接使用することを検討することをお勧めします。&lt;a href=&quot;https://github.com/paragonie/halite&quot;&gt;Halite&lt;/a&gt;（libsodium上に構築されたOOパッケージ）のようなより包括的なパッケージは別の可能性です。</target>
        </trans-unit>
        <trans-unit id="669502e4399f2e5f2f0e859e1a4b242308109484" translate="yes" xml:space="preserve">
          <source>This is not actually a mode, it just says that a stream cipher is being used. Required because of the general cipher+mode initialization process.</source>
          <target state="translated">これは実際にはモードではなく、ストリーム暗号が使用されていることを示しているだけです。一般的な暗号+モードの初期化処理のために必要です。</target>
        </trans-unit>
        <trans-unit id="92087cd54fa13263562092c120e3e8602bac6050" translate="yes" xml:space="preserve">
          <source>This is not an accurate way of determining file MIME types, and is here strictly for convenience. It should not be used for security purposes.</source>
          <target state="translated">これはファイルの MIME タイプを決定する正確な方法ではなく、ここでは便宜上のものです。セキュリティ目的で使用すべきではありません。</target>
        </trans-unit>
        <trans-unit id="61fefa9cf2bfc23c9a2d857606d6f03a913b7919" translate="yes" xml:space="preserve">
          <source>This is not the same as the File Uploading class in previous versions of CodeIgniter. This provides a raw interface to the uploaded files with a few small features.</source>
          <target state="translated">これは以前のバージョンのCodeIgniterのFile Uploadingクラスとは異なります。これは、アップロードされたファイルへの生のインターフェイスを提供し、いくつかの小さな機能を備えています。</target>
        </trans-unit>
        <trans-unit id="0d174dfa8ae37e167b575ad463a5ad41d14043cf" translate="yes" xml:space="preserve">
          <source>This is purposeful: view files with no PHP.</source>
          <target state="translated">これは意図的なものです:PHPを使用していないファイルを表示します。</target>
        </trans-unit>
        <trans-unit id="dcf1c7e283a0d7f0f6962f045e122ce0146f7f1f" translate="yes" xml:space="preserve">
          <source>This is the array that is used during &lt;a href=&quot;../incoming/content_negotiation&quot;&gt;Content Negotiation&lt;/a&gt; to determine which type of response to return. If no matches are found between what the client requested and what you support, the first format in this array is what will be returned.</source>
          <target state="translated">これは、&lt;a href=&quot;../incoming/content_negotiation&quot;&gt;コンテンツネゴシエーション&lt;/a&gt;中に、返される応答のタイプを決定するために使用される配列です。クライアントが要求したものとサポートしているものの間に一致が見つからない場合、この配列の最初の形式が返されます。</target>
        </trans-unit>
        <trans-unit id="d9f29cae0816377d851592c240f85b4ce65bfb2e" translate="yes" xml:space="preserve">
          <source>This is the first of three helper methods to work with the IntlDateFormatter without having to remember their values. This will return a string formatted as you would commonly use for datetime columns in a database (Y-m-d H:i:s):</source>
          <target state="translated">これは、値を覚えなくても IntlDateFormatter を使用できるようにするための 3 つのヘルパーメソッドのうちの最初のものです。これは、データベースの日付のカラムで一般的に使用されている形式 (Y-m-d H:i:s)の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="6f2435c396ad9f1119caa02ccbbb626caf78c1a0" translate="yes" xml:space="preserve">
          <source>This is the localized version of DateTime&amp;rsquo;s format() method. Instead of using the values you might be familiar with, though, you must use values acceptable to the &lt;a href=&quot;https://www.php.net/manual/en/class.intldateformatter.php&quot;&gt;IntlDateFormatter&lt;/a&gt; class. A full listing of values can be found &lt;a href=&quot;https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classSimpleDateFormat.html#details&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">これは、DateTimeのformat（）メソッドのローカライズ版です。ただし、使い慣れた値を使用する代わりに、&lt;a href=&quot;https://www.php.net/manual/en/class.intldateformatter.php&quot;&gt;IntlDateFormatter&lt;/a&gt;クラスで受け入れ可能な値を使用する必要があります。値の完全なリストは&lt;a href=&quot;https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classSimpleDateFormat.html#details&quot;&gt;ここにあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8c7636355d2088e815fd36fc826b72c57b00fb5" translate="yes" xml:space="preserve">
          <source>This is the method used by all other methods in this trait to return a response to the client.</source>
          <target state="translated">これは、この形質の他のすべてのメソッドがクライアントにレスポンスを返すために使用するメソッドです。</target>
        </trans-unit>
        <trans-unit id="358d455c1129277e19bb41a55f876aba29565665" translate="yes" xml:space="preserve">
          <source>This is the name of the column that uniquely identifies the records in this table. This does not necessarily have to match the primary key that is specified in the database, but is used with methods like &lt;code&gt;find()&lt;/code&gt; to know what column to match the specified value to.</source>
          <target state="translated">これは、このテーブルのレコードを一意に識別する列の名前です。これは、データベースで指定されている主キーと必ずしも一致する必要はありませんが、 &lt;code&gt;find()&lt;/code&gt; などのメソッドで使用され、指定された値と一致する列を認識します。</target>
        </trans-unit>
        <trans-unit id="e6e72f595d3bc95a6b34147d296d518f7c4b19ba" translate="yes" xml:space="preserve">
          <source>This is the platform-independent base DB implementation class. This class will not be called directly. Rather, the adapter class for the specific database will extend and instantiate it.</source>
          <target state="translated">プラットフォームに依存しないベースDB実装クラスです。このクラスは直接呼ばれることはありません。むしろ、特定のデータベース用のアダプタクラスがこれを拡張してインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="baff5411a9745a09c0b9598e3cc92499c81469bd" translate="yes" xml:space="preserve">
          <source>This is used by the &lt;code&gt;file&lt;/code&gt; handler to show where it should save the cache files to.</source>
          <target state="translated">これは、 &lt;code&gt;file&lt;/code&gt; ハンドラーが、キャッシュファイルを保存する場所を示すために使用されます。</target>
        </trans-unit>
        <trans-unit id="d8a847f61b5611538c9fdd9401411d7e943408f1" translate="yes" xml:space="preserve">
          <source>This is used to signal a 404, Page Not Found error. When thrown, the system will show the view found at &lt;code&gt;/app/views/errors/html/error_404.php&lt;/code&gt;. You should customize all of the error views for your site. If, in &lt;code&gt;Config/Routes.php&lt;/code&gt;, you have specified a 404 Override, that will be called instead of the standard 404 page:</source>
          <target state="translated">これは、404、Page NotFoundエラーを通知するために使用されます。スローされると、システムは &lt;code&gt;/app/views/errors/html/error_404.php&lt;/code&gt; にあるビューを表示します。サイトのすべてのエラービューをカスタマイズする必要があります。で、もし &lt;code&gt;Config/Routes.php&lt;/code&gt; 、あなたは標準の404ページの代わりに呼び出されます404オーバーライドし、指定しています：</target>
        </trans-unit>
        <trans-unit id="dc974daba4e9c19d525ad69d70fb4d64806b9432" translate="yes" xml:space="preserve">
          <source>This is useful because unlike &lt;a href=&quot;#site_url&quot;&gt;&lt;code&gt;site_url()&lt;/code&gt;&lt;/a&gt;, you can supply a string to a file, such as an image or stylesheet. For example:</source>
          <target state="translated">&lt;a href=&quot;#site_url&quot;&gt; &lt;code&gt;site_url()&lt;/code&gt; &lt;/a&gt;とは異なり、画像やスタイルシートなどの文字列をファイルに提供できるため、これは便利です。例えば：</target>
        </trans-unit>
        <trans-unit id="f59e06cffb2ecea4cfd977cb168acb56148e5e30" translate="yes" xml:space="preserve">
          <source>This is useful in situations where you are using Query Builder to generate SQL (ex. &lt;code&gt;$builder-&amp;gt;getCompiledSelect()&lt;/code&gt;) but then choose to, for instance, run the query:</source>
          <target state="translated">これは、クエリビルダーを使用してSQLを生成しているが（例： &lt;code&gt;$builder-&amp;gt;getCompiledSelect()&lt;/code&gt; ）、クエリを実行することを選択した場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="1ab9fc60858c5ca99df16a923ff76a50ddf9445e" translate="yes" xml:space="preserve">
          <source>This is useful in situations where you are using Query Builder to generate SQL (ex. &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_select()&lt;/code&gt;) but then choose to, for instance, run the query:</source>
          <target state="translated">これは、クエリビルダーを使用してSQL（例： &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_select()&lt;/code&gt; ）を生成しているが、たとえばクエリの実行を選択する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="d7340815aed4509eb6565afec885a2f30faf7677" translate="yes" xml:space="preserve">
          <source>This is useful when sending the &lt;code&gt;$_POST&lt;/code&gt; array to one of your Models. This prevents users from sending additional POST data to be entered into your tables.</source>
          <target state="translated">これは、モデルの1つに &lt;code&gt;$_POST&lt;/code&gt; 配列を送信するときに役立ちます。これにより、ユーザーが追加のPOSTデータを送信してテーブルに入力するのを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="e2ce4631a4992534dc7754187bf4d1e921b04a8d" translate="yes" xml:space="preserve">
          <source>This is valid:</source>
          <target state="translated">これは有効です。</target>
        </trans-unit>
        <trans-unit id="98ce8e47e983bb85718fb19730d97b1dba9ccc3d" translate="yes" xml:space="preserve">
          <source>This is very important. Assigning by reference allows you to use the original CodeIgniter object rather than creating a copy of it.</source>
          <target state="translated">これは非常に重要です。参照で代入することで、元のCodeIgniterオブジェクトのコピーを作成するのではなく、元のCodeIgniterオブジェクトを使用することができます。</target>
        </trans-unit>
        <trans-unit id="88474ddc9da224dad21b58710f7249d37266dafd" translate="yes" xml:space="preserve">
          <source>This library has been DEPRECATED and is only kept for backwards compatibility. Please use the new &lt;a href=&quot;encryption&quot;&gt;Encryption Library&lt;/a&gt;.</source>
          <target state="translated">このライブラリは廃止されており、下位互換性のためにのみ保持されています。新しい&lt;a href=&quot;encryption&quot;&gt;暗号化ライブラリを&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="25569ca66cc3e0ba2980987c091f61c816dcfe6a" translate="yes" xml:space="preserve">
          <source>This library is DEPRECATED and should not be used. It has always been with an &amp;lsquo;experimental&amp;rsquo; status and is now no longer supported. Currently only kept for backwards compatibility.</source>
          <target state="translated">このライブラリは廃止されているため、使用しないでください。これは常に「実験的」ステータスであり、現在はサポートされていません。現在、下位互換性のためにのみ保持されています。</target>
        </trans-unit>
        <trans-unit id="1d57af5891abe3119d335369bae3901afc04792b" translate="yes" xml:space="preserve">
          <source>This locates migrations for a namespace (or all namespaces), determines which migrations have not yet been run, and runs them in order of their version (namespaces intermingled).</source>
          <target state="translated">これは、ある名前空間 (またはすべての名前空間)の移行を検索し、まだ実行されていない移行を決定し、バージョン順に実行します (名前空間が混在している)。</target>
        </trans-unit>
        <trans-unit id="4ee3c3f025e0a95cb2507b605499838c17ddc2c7" translate="yes" xml:space="preserve">
          <source>This means that your application works and you can start making changes to it.</source>
          <target state="translated">これは、アプリケーションが動作し、変更を開始できることを意味します。</target>
        </trans-unit>
        <trans-unit id="46fa023d3e8a5a93ef24f7b6ce5a318cfabb63ee" translate="yes" xml:space="preserve">
          <source>This menu is useful if you run a membership site in which your users are allowed to set their local timezone value.</source>
          <target state="translated">このメニューは、ユーザーがローカルタイムゾーンの値を設定できる会員制サイトを運営している場合に便利です。</target>
        </trans-unit>
        <trans-unit id="eb018aa6d6924386288704c6f4a2c8916241abb6" translate="yes" xml:space="preserve">
          <source>This message displays all of the information necessary to know what the client is requesting. It tells the method for the request (GET, POST, DELETE, etc), and the version of HTTP it supports.</source>
          <target state="translated">このメッセージは、クライアントが何を要求しているのかを知るために必要なすべての情報を表示します。リクエストのメソッド (GET、POST、DELETE など)と、サポートしている HTTP のバージョンが表示されます。</target>
        </trans-unit>
        <trans-unit id="41f0ed10931730832b2d7b1cc14cc0a3751faf97" translate="yes" xml:space="preserve">
          <source>This method acts a lot like PHP&amp;rsquo;s own native &lt;code&gt;html_entity_decode()&lt;/code&gt; function in ENT_COMPAT mode, only it tries to detect HTML entities that don&amp;rsquo;t end in a semicolon because some browsers allow that.</source>
          <target state="translated">このメソッドは、ENT_COMPATモードのPHP独自の &lt;code&gt;html_entity_decode()&lt;/code&gt; 関数とよく似ています。一部のブラウザーではセミコロンで終了しないHTMLエンティティを検出しようとするだけです。</target>
        </trans-unit>
        <trans-unit id="1be8bd2dd2a1a632961e99c8f98dd721205b4060" translate="yes" xml:space="preserve">
          <source>This method allows you to define the exact instance that will be returned by the Services class. You can use this to set properties of a service so that it behaves in a certain way, or replace a service with a mocked class.</source>
          <target state="translated">このメソッドを使用すると、サービス・クラスが返すインスタンスを正確に定義することができます。これを使用して、サービスのプロパティを設定して特定の振る舞いをするようにしたり、サービスをモックされたクラスに置き換えたりすることができます。</target>
        </trans-unit>
        <trans-unit id="eece3cf23ca9b9a38289ffe9af6213bcbd5f1fbd" translate="yes" xml:space="preserve">
          <source>This method allows you to run other commands during the execution of your current command:</source>
          <target state="translated">このメソッドを使用すると、現在のコマンドの実行中に他のコマンドを実行することができます。</target>
        </trans-unit>
        <trans-unit id="843d7b2ac2c3e2b9897ca3affa43a08985fb9e5f" translate="yes" xml:space="preserve">
          <source>This method allows you to use dot-notation to search through an array for a specific-key, and allows the use of a the &amp;lsquo;*&amp;rsquo; wildcard. Given the following array:</source>
          <target state="translated">このメソッドを使用すると、ドット表記を使用して配列内で特定のキーを検索でき、「*」ワイルドカードを使用できます。次の配列があるとします。</target>
        </trans-unit>
        <trans-unit id="3e4b819b5508be41a57b2ee65c79939fb347687e" translate="yes" xml:space="preserve">
          <source>This method also accepts an array of item keys to unset:</source>
          <target state="translated">このメソッドは、設定を解除する項目キーの配列も受け付けます。</target>
        </trans-unit>
        <trans-unit id="03159809103f08878381276d1490b5a26671d6a4" translate="yes" xml:space="preserve">
          <source>This method checks both the PHP SAPI name currently in use and if the &lt;code&gt;STDIN&lt;/code&gt; constant is defined, which is usually a failsafe way to see if PHP is being run via the command line.</source>
          <target state="translated">このメソッドは、現在使用中のPHP SAPI名と、 &lt;code&gt;STDIN&lt;/code&gt; 定数が定義されているかどうかの両方をチェックします。これは通常、コマンドラインからPHPが実行されているかどうかを確認するフェイルセーフな方法です。</target>
        </trans-unit>
        <trans-unit id="c788e27f64e88ce335c60250cbc328da173f7cd3" translate="yes" xml:space="preserve">
          <source>This method checks the associative array of variables available to your views. This is useful if for any reason a var is set in a library or another controller method using &lt;code&gt;$this-&amp;gt;load-&amp;gt;vars()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、ビューで使用可能な変数の連想配列をチェックします。これは、何らかの理由で、ライブラリまたは &lt;code&gt;$this-&amp;gt;load-&amp;gt;vars()&lt;/code&gt; を使用して別のコントローラーメソッドに変数が設定されている場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="edc18766fdf49a4699e67eb16f4279fbe37ea8ff" translate="yes" xml:space="preserve">
          <source>This method doesn&amp;rsquo;t work for batched inserts.</source>
          <target state="translated">このメソッドは、バッチ挿入では機能しません。</target>
        </trans-unit>
        <trans-unit id="401bb86ccb5ded7115a69d6312e30cc518878b00" translate="yes" xml:space="preserve">
          <source>This method doesn&amp;rsquo;t work for batched updates.</source>
          <target state="translated">このメソッドは、バッチ更新では機能しません。</target>
        </trans-unit>
        <trans-unit id="700ae76eede772c87f162ebb221dc142157b7bd5" translate="yes" xml:space="preserve">
          <source>This method enables you to generate &lt;strong&gt;LIKE&lt;/strong&gt; clauses for HAVING part or the query, useful for doing searches.</source>
          <target state="translated">このメソッドを使用すると、HAVINGパーツまたはクエリの&lt;strong&gt;LIKE&lt;/strong&gt;句を生成でき、検索の実行に役立ちます。</target>
        </trans-unit>
        <trans-unit id="93b59204ccd231321c0129754d64dad39ca98d53" translate="yes" xml:space="preserve">
          <source>This method enables you to generate &lt;strong&gt;LIKE&lt;/strong&gt; clauses, useful for doing searches.</source>
          <target state="translated">このメソッドを使用すると、検索に役立つ&lt;strong&gt;LIKE&lt;/strong&gt;句を生成できます。</target>
        </trans-unit>
        <trans-unit id="e7eca912b2405289635397ae0b1828f3039d0886" translate="yes" xml:space="preserve">
          <source>This method executes a REPLACE statement, which is basically the SQL standard for (optional) DELETE + INSERT, using &lt;em&gt;PRIMARY&lt;/em&gt; and &lt;em&gt;UNIQUE&lt;/em&gt; keys as the determining factor. In our case, it will save you from the need to implement complex logics with different combinations of &lt;code&gt;select()&lt;/code&gt;, &lt;code&gt;update()&lt;/code&gt;, &lt;code&gt;delete()&lt;/code&gt; and &lt;code&gt;insert()&lt;/code&gt; calls.</source>
          <target state="translated">このメソッドは、基本的に（オプションの）DELETE + INSERTのSQL標準であるREPLACEステートメントを、決定要因として&lt;em&gt;PRIMARY&lt;/em&gt;および&lt;em&gt;UNIQUE&lt;/em&gt;キーを使用して実行します。私たちのケースでは、 &lt;code&gt;select()&lt;/code&gt; 、 &lt;code&gt;update()&lt;/code&gt; 、 &lt;code&gt;delete()&lt;/code&gt; 、および &lt;code&gt;insert()&lt;/code&gt; コールのさまざまな組み合わせで複雑なロジックを実装する必要性からあなたを救います。</target>
        </trans-unit>
        <trans-unit id="52672f8c3b68fb7043511ad7887033bef1dc1943" translate="yes" xml:space="preserve">
          <source>This method gets a rule group from the validation configuration:</source>
          <target state="translated">このメソッドは、検証設定からルールグループを取得します。</target>
        </trans-unit>
        <trans-unit id="697f7b41b37fbc98edee428b246ae96e5189411e" translate="yes" xml:space="preserve">
          <source>This method is DEPRECATED and is now just an alias for the &lt;code&gt;is_cli()&lt;/code&gt; function.</source>
          <target state="translated">このメソッドは &lt;code&gt;is_cli()&lt;/code&gt; れ、is_cli（）関数の単なるエイリアスになりました。</target>
        </trans-unit>
        <trans-unit id="80a18e8b3d911d2d16c37ce7eac4888f4967dc3c" translate="yes" xml:space="preserve">
          <source>This method is DEPRECATED because it encourages usage of insecure coding practices. Your &lt;em&gt;system/&lt;/em&gt; directory shouldn&amp;rsquo;t be publicly accessible.</source>
          <target state="translated">この方法は、安全でないコーディング手法の使用を奨励するため非推奨です。あなたの&lt;em&gt;system /&lt;/em&gt;ディレクトリは一般公開されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="f963378ce88a201592f9278399a22d7e82d8f19f" translate="yes" xml:space="preserve">
          <source>This method is DEPRECATED. Use &lt;code&gt;userdata()&lt;/code&gt; with no parameters instead.</source>
          <target state="translated">このメソッドは非推奨です。代わりにパラメーターなしで &lt;code&gt;userdata()&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="d8470abcd2ae41be96ee7c95eb011b48a641cfbb" translate="yes" xml:space="preserve">
          <source>This method is almost identical to &lt;code&gt;segment()&lt;/code&gt;, except it adds a trailing and/or leading slash based on the second parameter. If the parameter is not used, a trailing slash added. Examples:</source>
          <target state="translated">このメソッドは、2番目のパラメーターに基づいて末尾または先頭のスラッシュを追加することを除いて、 &lt;code&gt;segment()&lt;/code&gt; とほぼ同じです。パラメータを使用しない場合は、末尾にスラッシュが追加されます。例：</target>
        </trans-unit>
        <trans-unit id="150404b9b63af6a59a4b4130a663ec9d7f68566b" translate="yes" xml:space="preserve">
          <source>This method is an alias for &lt;a href=&quot;../general/common_functions&quot;&gt;Common function&lt;/a&gt;&lt;code&gt;set_status_header()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../general/common_functions&quot;&gt;共通関数&lt;/a&gt; &lt;code&gt;set_status_header()&lt;/code&gt; のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="778f3a13b8a8baf9d47751fb9b8bf014435c238c" translate="yes" xml:space="preserve">
          <source>This method is an alias for &lt;a href=&quot;../helpers/date_helper&quot;&gt;Date Helper&lt;/a&gt; function &lt;a href=&quot;../helpers/date_helper#days_in_month&quot;&gt;&lt;code&gt;days_in_month()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../helpers/date_helper&quot;&gt;日付ヘルパー&lt;/a&gt;関数&lt;a href=&quot;../helpers/date_helper#days_in_month&quot;&gt; &lt;code&gt;days_in_month()&lt;/code&gt; の&lt;/a&gt;エイリアスです。</target>
        </trans-unit>
        <trans-unit id="eb1b7ee4bdfe8f8d00f52af90a3c23d1c3828c17" translate="yes" xml:space="preserve">
          <source>This method is an alias of the &lt;a href=&quot;config&quot;&gt;config file loading method&lt;/a&gt;: &lt;code&gt;$this-&amp;gt;config-&amp;gt;load()&lt;/code&gt;</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;config&quot;&gt;設定ファイルの読み込みメソッドの&lt;/a&gt;エイリアスです： &lt;code&gt;$this-&amp;gt;config-&amp;gt;load()&lt;/code&gt; config- &amp;gt; load（）</target>
        </trans-unit>
        <trans-unit id="57d182ffd2f3025960bb183a035a80a5d44c9056" translate="yes" xml:space="preserve">
          <source>This method is an alias of the &lt;a href=&quot;language&quot;&gt;language loading method&lt;/a&gt;: &lt;code&gt;$this-&amp;gt;lang-&amp;gt;load()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;language&quot;&gt;言語読み込みメソッドの&lt;/a&gt;エイリアスです： &lt;code&gt;$this-&amp;gt;lang-&amp;gt;load()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dcdabde96da9f26faabda544d38189b6a6904285" translate="yes" xml:space="preserve">
          <source>This method is automatically called when accessing drivers via &lt;code&gt;$this-&amp;gt;cache-&amp;gt;get()&lt;/code&gt;. However, if the individual drivers are used, make sure to call this method to ensure the driver is supported in the hosting environment.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;$this-&amp;gt;cache-&amp;gt;get()&lt;/code&gt; 介してドライバーにアクセスすると自動的に呼び出されます。ただし、個々のドライバーを使用する場合は、必ずこのメソッドを呼び出して、ドライバーがホスティング環境でサポートされていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="8f99fc25b7b6f81c366fe88ce322af7a6e0f19ae" translate="yes" xml:space="preserve">
          <source>This method is called automatically at the end of script execution, you won&amp;rsquo;t need to call it manually unless you are aborting script execution using &lt;code&gt;exit()&lt;/code&gt; or &lt;code&gt;die()&lt;/code&gt; in your code.</source>
          <target state="translated">このメソッドはスクリプト実行の最後に自動的に呼び出されます。コードで &lt;code&gt;exit()&lt;/code&gt; または &lt;code&gt;die()&lt;/code&gt; を使用してスクリプト実行を中止しない限り、手動で呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="965949d01d98948d1586cd3c5af0ee08018428a1" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;d()&lt;/code&gt;, except that it also &lt;code&gt;dies()&lt;/code&gt; and no further code is executed this request.</source>
          <target state="translated">このメソッドは &lt;code&gt;d()&lt;/code&gt; と同じですが、 &lt;code&gt;dies()&lt;/code&gt; もあり、このリクエストでそれ以上のコードが実行されない点が異なります。</target>
        </trans-unit>
        <trans-unit id="89dda063762a6aa97ceaa14a31b16c570c832ab8" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;get()&lt;/code&gt;, &lt;code&gt;post()&lt;/code&gt; and &lt;code&gt;cookie()&lt;/code&gt;, only it fetches the &lt;em&gt;php://input&lt;/em&gt; stream data.</source>
          <target state="translated">このメソッドは &lt;code&gt;get()&lt;/code&gt; 、 &lt;code&gt;post()&lt;/code&gt; および &lt;code&gt;cookie()&lt;/code&gt; と同じですが、&lt;em&gt;php：// input&lt;/em&gt;ストリームデータをフェッチするだけです。</target>
        </trans-unit>
        <trans-unit id="ac7a9fc248b1ccf55f10beb427def346e7b20813" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;getPost()&lt;/code&gt; and &lt;code&gt;getGet()&lt;/code&gt;, only it fetches cookie data:</source>
          <target state="translated">このメソッドは &lt;code&gt;getPost()&lt;/code&gt; および &lt;code&gt;getGet()&lt;/code&gt; と同じですが、Cookieデータをフェッチするだけです。</target>
        </trans-unit>
        <trans-unit id="499d6fa6fa67cbd0c815e5fb1cabe2be1fe84f90" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;getVar()&lt;/code&gt;, only it fetches GET data.</source>
          <target state="translated">このメソッドは &lt;code&gt;getVar()&lt;/code&gt; と同じですが、GETデータをフェッチするだけです。</target>
        </trans-unit>
        <trans-unit id="6c87cc6e9953d0d12bdd6eb618315fe7dffa08dc" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;getVar()&lt;/code&gt;, only it fetches POST data.</source>
          <target state="translated">このメソッドは &lt;code&gt;getVar()&lt;/code&gt; と同じですが、POSTデータをフェッチするだけです。</target>
        </trans-unit>
        <trans-unit id="dccfb8a4fa8c1f6cd70023219f5b4b1103ebd30c" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;havingLike()&lt;/code&gt;, except that it generates NOT LIKE statements:</source>
          <target state="translated">このメソッドは、NOT LIKEステートメントを生成することを除いて、 &lt;code&gt;havingLike()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="9fd39800406edc3c9c2e8de41391ce0c8bd35024" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;item()&lt;/code&gt;, except it appends a forward slash to the end of the item, if it exists.</source>
          <target state="translated">このメソッドは &lt;code&gt;item()&lt;/code&gt; と同じですが、存在する場合、アイテムの最後にスラッシュを追加します。</target>
        </trans-unit>
        <trans-unit id="a5d0707b464dc7e8b97d1ece8c58ac6b54e0e036" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;like()&lt;/code&gt;, except that it generates NOT LIKE statements:</source>
          <target state="translated">このメソッドは、NOT LIKEステートメントを生成することを除いて、 &lt;code&gt;like()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="1d6d2234b79a3846512080aed8fc001a7cc20d6c" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;notHavingLike()&lt;/code&gt;, except that multiple instances are joined by OR:</source>
          <target state="translated">このメソッドは、複数のインスタンスがORで結合されることを除いて、 &lt;code&gt;notHavingLike()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="4d3fd7e03f0e9554873a9facfb5f99e6ab704bb2" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;notLike()&lt;/code&gt;, except that multiple instances are joined by OR:</source>
          <target state="translated">このメソッドは、複数のインスタンスがORで結合されることを除いて、 &lt;code&gt;notLike()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="ee7183003eb0d2e0931678848c0a4eb1d2a50526" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;not_like()&lt;/code&gt;, except that multiple instances are joined by OR:</source>
          <target state="translated">このメソッドは &lt;code&gt;not_like()&lt;/code&gt; と同じですが、複数のインスタンスがORで結合されている点が異なります。</target>
        </trans-unit>
        <trans-unit id="e1ba21b19255b3073e16f970c82002d2a9ac0bd7" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;post()&lt;/code&gt; and &lt;code&gt;get()&lt;/code&gt;, only it fetches cookie data:</source>
          <target state="translated">このメソッドは &lt;code&gt;post()&lt;/code&gt; および &lt;code&gt;get()&lt;/code&gt; と同じですが、Cookieデータをフェッチするだけです。</target>
        </trans-unit>
        <trans-unit id="7c20e492e6b5437ff848f952246a472b7c97dee8" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;post()&lt;/code&gt;, only it fetches GET data.</source>
          <target state="translated">このメソッドは &lt;code&gt;post()&lt;/code&gt; と同じですが、GETデータをフェッチするだけです。</target>
        </trans-unit>
        <trans-unit id="49437eb3550234325dcd55ac7395a497fd1f7475" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;segment()&lt;/code&gt;, except that it lets you retrieve a specific segment from your re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">このメソッドは、CodeIgniterの&lt;a href=&quot;../general/routing&quot;&gt;URIルーティング&lt;/a&gt;機能を使用している場合に、再ルーティングされたURIから特定のセグメントを取得できることを除いて、 &lt;code&gt;segment()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="f9c088c46ad96fd523e8013afecdc9951bb326ea" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;segment_array()&lt;/code&gt;, except that it returns the array of segments in your re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">このメソッドは、CodeIgniterの&lt;a href=&quot;../general/routing&quot;&gt;URIルーティング&lt;/a&gt;機能を使用している場合に、再ルーティングされたURIのセグメントの配列を返すことを除いて、 &lt;code&gt;segment_array()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="a4b1b4f4eda41ff9c2048ea97be2f4b17a2564ab" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;slash_segment()&lt;/code&gt;, except that it lets you add slashes a specific segment from your re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">このメソッドは &lt;code&gt;slash_segment()&lt;/code&gt; と同じですが、CodeIgniterの&lt;a href=&quot;../general/routing&quot;&gt;URIルーティング&lt;/a&gt;機能を使用している場合に、再ルーティングされたURIから特定のセグメントにスラッシュを追加できる点が異なります。</target>
        </trans-unit>
        <trans-unit id="b5857c30b5d157f8480853361e4910775e822d42" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;total_segments()&lt;/code&gt;, except that it returns the total number of segments in your re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">このメソッドは、CodeIgniterの&lt;a href=&quot;../general/routing&quot;&gt;URIルーティング&lt;/a&gt;機能を使用している場合に、再ルーティングされたURIのセグメントの総数を返すことを除いて、 &lt;code&gt;total_segments()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="c86771c81607bbbef96d8d48fb0b0429aa24701b" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;uri_string()&lt;/code&gt;, except that it returns the re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">このメソッドは &lt;code&gt;uri_string()&lt;/code&gt; と同じですが、CodeIgniterの&lt;a href=&quot;../general/routing&quot;&gt;URIルーティング&lt;/a&gt;機能を使用している場合に、再ルーティングされたURIを返します。</target>
        </trans-unit>
        <trans-unit id="7f15500fce1c40ba960c01f83d133ba93e904030" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;uri_to_assoc()&lt;/code&gt;, except that it creates an associative array using the re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">このメソッドは &lt;code&gt;uri_to_assoc()&lt;/code&gt; と同じですが、CodeIgniterの&lt;a href=&quot;../general/routing&quot;&gt;URIルーティング&lt;/a&gt;機能を使用している場合に、再ルーティングされたURIを使用して連想配列を作成します。</target>
        </trans-unit>
        <trans-unit id="c93e901c04b9989d291497112e87fc2d46c0cd45" translate="yes" xml:space="preserve">
          <source>This method is identical to the &lt;code&gt;getPost()&lt;/code&gt;, &lt;code&gt;getGet()&lt;/code&gt; and &lt;code&gt;getCookie()&lt;/code&gt; methods, only it fetches getServer data (&lt;code&gt;$_SERVER&lt;/code&gt;):</source>
          <target state="translated">このメソッドは、 &lt;code&gt;getPost()&lt;/code&gt; 、 &lt;code&gt;getGet()&lt;/code&gt; 、および &lt;code&gt;getCookie()&lt;/code&gt; メソッドと同じですが、getServerデータ（ &lt;code&gt;$_SERVER&lt;/code&gt; ）をフェッチするだけです。</target>
        </trans-unit>
        <trans-unit id="4dd60c7775353dfe700d372425772b666f10ede5" translate="yes" xml:space="preserve">
          <source>This method is identical to the &lt;code&gt;post()&lt;/code&gt;, &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;cookie()&lt;/code&gt; methods from the &lt;a href=&quot;incomingrequest&quot;&gt;IncomingRequest Class&lt;/a&gt;, only it fetches getEnv data (&lt;code&gt;$_ENV&lt;/code&gt;):</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;incomingrequest&quot;&gt;IncomingRequestクラス&lt;/a&gt;の &lt;code&gt;post()&lt;/code&gt; 、 &lt;code&gt;get()&lt;/code&gt; 、および &lt;code&gt;cookie()&lt;/code&gt; メソッドと同じですが、getEnvデータ（ &lt;code&gt;$_ENV&lt;/code&gt; ）をフェッチするだけです。</target>
        </trans-unit>
        <trans-unit id="03599b0d8f3ca86a38e560d848294d0d5daeee37" translate="yes" xml:space="preserve">
          <source>This method is identical to the &lt;code&gt;post()&lt;/code&gt;, &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;cookie()&lt;/code&gt; methods from the &lt;a href=&quot;incomingrequest&quot;&gt;IncomingRequest Class&lt;/a&gt;, only it fetches getServer data (&lt;code&gt;$_SERVER&lt;/code&gt;):</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;incomingrequest&quot;&gt;IncomingRequestクラス&lt;/a&gt;の &lt;code&gt;post()&lt;/code&gt; 、 &lt;code&gt;get()&lt;/code&gt; 、および &lt;code&gt;cookie()&lt;/code&gt; メソッドと同じですが、getServerデータ（ &lt;code&gt;$_SERVER&lt;/code&gt; ）をフェッチするだけです。</target>
        </trans-unit>
        <trans-unit id="a26d1268fa08f2343c3691e9d359e96bde668e0d" translate="yes" xml:space="preserve">
          <source>This method is identical to the &lt;code&gt;post()&lt;/code&gt;, &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;cookie()&lt;/code&gt; methods, only it fetches server data (&lt;code&gt;$_SERVER&lt;/code&gt;):</source>
          <target state="translated">このメソッドは &lt;code&gt;post()&lt;/code&gt; 、 &lt;code&gt;get()&lt;/code&gt; および &lt;code&gt;cookie()&lt;/code&gt; メソッドと同じですが、サーバーデータ（ &lt;code&gt;$_SERVER&lt;/code&gt; ）のみをフェッチします。</target>
        </trans-unit>
        <trans-unit id="a3dcb8ed58e34cd61008734b761e57e3a8ece5d4" translate="yes" xml:space="preserve">
          <source>This method is identical to the one above, except that multiple instances are joined by OR:</source>
          <target state="translated">この方法は、複数のインスタンスをORで結合する以外は、上記の方法と同じです。</target>
        </trans-unit>
        <trans-unit id="e46269081faf3e2d5737a212ccef7711f4764db0" translate="yes" xml:space="preserve">
          <source>This method is just an alias for &lt;code&gt;db_connect(TRUE)&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;db_connect(TRUE)&lt;/code&gt; の単なるエイリアスです。</target>
        </trans-unit>
        <trans-unit id="531338e85fd1fa3afc47e5ec70986b0d6c29afe3" translate="yes" xml:space="preserve">
          <source>This method is just an alias for PHP&amp;rsquo;s native &lt;a href=&quot;http://php.net/session_destroy&quot;&gt;session_destroy()&lt;/a&gt; function.</source>
          <target state="translated">このメソッドは、PHPのネイティブ&lt;a href=&quot;http://php.net/session_destroy&quot;&gt;session_destroy（）&lt;/a&gt;関数の単なるエイリアスです。</target>
        </trans-unit>
        <trans-unit id="e80cf159ab4224777f589e32e0470e160df18ec0" translate="yes" xml:space="preserve">
          <source>This method is just an alias for PHP&amp;rsquo;s native &lt;a href=&quot;http://php.net/session_regenerate_id&quot;&gt;session_regenerate_id()&lt;/a&gt; function.</source>
          <target state="translated">このメソッドは、PHPのネイティブ&lt;a href=&quot;http://php.net/session_regenerate_id&quot;&gt;session_regenerate_id（）&lt;/a&gt;関数の単なるエイリアスです。</target>
        </trans-unit>
        <trans-unit id="0c56cea4cd3e4559f8baf9ebc034bd43be2d9338" translate="yes" xml:space="preserve">
          <source>This method is normally accessed via the corresponding functions in the &lt;a href=&quot;../helpers/url_helper&quot;&gt;URL Helper&lt;/a&gt;.</source>
          <target state="translated">このメソッドには通常、&lt;a href=&quot;../helpers/url_helper&quot;&gt;URLヘルパーの&lt;/a&gt;対応する関数を介してアクセスします。</target>
        </trans-unit>
        <trans-unit id="913a6595962d5864fe7811098bf7f61b48e06d43" translate="yes" xml:space="preserve">
          <source>This method is not suitable for filtering HTML attribute values! Use &lt;a href=&quot;../general/common_functions#html_escape&quot;&gt;&lt;code&gt;html_escape()&lt;/code&gt;&lt;/a&gt; for that instead.</source>
          <target state="translated">このメソッドは、HTML属性値のフィルタリングには適していません。代わりに&lt;a href=&quot;../general/common_functions#html_escape&quot;&gt; &lt;code&gt;html_escape()&lt;/code&gt; &lt;/a&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="7da4391a14e1f9c37dac85bbf3e55f4d74122d7b" translate="yes" xml:space="preserve">
          <source>This method is not typically very reliable since some browsers do not provide character-set info, and even among those that do, it is not always accurate.</source>
          <target state="translated">この方法は、一部のブラウザでは文字セット情報を提供していないため、一般的にはあまり信頼性が高くありません。また、提供しているブラウザであっても、常に正確であるとは限りません。</target>
        </trans-unit>
        <trans-unit id="d6bc2f2034123c76362f7494182650f2ee61abc0" translate="yes" xml:space="preserve">
          <source>This method is not typically very reliable since some browsers do not provide language info, and even among those that do, it is not always accurate.</source>
          <target state="translated">この方法は、言語情報を提供していないブラウザもあり、提供しているブラウザでも常に正確とは限りませんので、一般的にはあまり信頼性が高くありません。</target>
        </trans-unit>
        <trans-unit id="37ed3a3e6d29b7e685b819e2bd9fddb0951bcbdb" translate="yes" xml:space="preserve">
          <source>This method is particularly helpful when used with &lt;code&gt;groupBy()&lt;/code&gt;. For counting results generally see &lt;code&gt;countAll()&lt;/code&gt; or &lt;code&gt;countAllResults()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;groupBy()&lt;/code&gt; とともに使用する場合に特に役立ちます。結果のカウントについては、通常、 &lt;code&gt;countAll()&lt;/code&gt; または &lt;code&gt;countAllResults()&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="d986ef9f8de3c4828ef0e000f499c62b3071bea4" translate="yes" xml:space="preserve">
          <source>This method is similar to &lt;code&gt;auto_typography()&lt;/code&gt; above, except that it only does character conversion:</source>
          <target state="translated">このメソッドは、文字変換のみを行うことを除いて、上記の &lt;code&gt;auto_typography()&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="a17ef441a3b62409c2e4b6351fa2e4863328586c" translate="yes" xml:space="preserve">
          <source>This method is used extensively by the Query Builder class.</source>
          <target state="translated">このメソッドは、クエリビルダクラスで広く使われています。</target>
        </trans-unit>
        <trans-unit id="cbc3a53a6784229c06ffef3dfb87e22fad0302b1" translate="yes" xml:space="preserve">
          <source>This method is used internally to derive an encryption and HMAC key from your configured &lt;em&gt;encryption_key&lt;/em&gt;.</source>
          <target state="translated">このメソッドは、構成された&lt;em&gt;encryption_key&lt;/em&gt;から暗号化およびHMACキーを導出するために内部的に使用されます。</target>
        </trans-unit>
        <trans-unit id="6113e31189d4ec9be607748dc1692e877d109be2" translate="yes" xml:space="preserve">
          <source>This method is used to load core classes.</source>
          <target state="translated">このメソッドはコアクラスをロードするために使用されます。</target>
        </trans-unit>
        <trans-unit id="2db4213c18bbc138ec8c6fe22bcf52f479fcb035" translate="yes" xml:space="preserve">
          <source>This method is used to load driver libraries, acts very much like the &lt;code&gt;library()&lt;/code&gt; method.</source>
          <target state="translated">このメソッドは、ドライバーライブラリをロードするために使用され、 &lt;code&gt;library()&lt;/code&gt; メソッドと非常によく似ています。</target>
        </trans-unit>
        <trans-unit id="ec6e3e6d321edd0f3ca30ceb9d2d531cfb27ca27" translate="yes" xml:space="preserve">
          <source>This method is used to load your View files. If you haven&amp;rsquo;t read the &lt;a href=&quot;../general/views&quot;&gt;Views&lt;/a&gt; section of the user guide it is recommended that you do since it shows you how this method is typically used.</source>
          <target state="translated">このメソッドは、Viewファイルをロードするために使用されます。ユーザーガイドの&lt;a href=&quot;../general/views&quot;&gt;「ビュー」&lt;/a&gt;セクションをまだ読んでいない場合は、このメソッドが通常どのように使用されるかを示しているので、読むことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="33ef2314f530a181f616c7f11a67b840235c6e52" translate="yes" xml:space="preserve">
          <source>This method lets multiple trackbacks to be sent. It takes a string of URLs (separated by comma or space) and puts each URL into an array.</source>
          <target state="translated">このメソッドは複数のトラックバックを送信することができます。URL の文字列 (カンマかスペースで区切られたもの)を受け取り、それぞれの URL を配列に入れます。</target>
        </trans-unit>
        <trans-unit id="295023d43f4dc7e6bf19a3a3bf04872f2435d9b8" translate="yes" xml:space="preserve">
          <source>This method lets you load the database class. The two parameters are &lt;strong&gt;optional&lt;/strong&gt;. Please see the &lt;a href=&quot;../database/index&quot;&gt;database&lt;/a&gt; section for more info.</source>
          <target state="translated">このメソッドを使用すると、データベースクラスをロードできます。2つのパラメーターは&lt;strong&gt;オプションです&lt;/strong&gt;。詳細は&lt;a href=&quot;../database/index&quot;&gt;データベースの&lt;/a&gt;セクションをご覧ください。</target>
        </trans-unit>
        <trans-unit id="b8439f40fdab0e4221bacbcad1dbf0b5b11af7e2" translate="yes" xml:space="preserve">
          <source>This method lets you send an error message from your server to the client. First parameter is the error number while the second parameter is the error message.</source>
          <target state="translated">このメソッドを使用すると、サーバーからクライアントにエラーメッセージを送信できます。最初のパラメータはエラー番号で、2 番目のパラメータはエラーメッセージです。</target>
        </trans-unit>
        <trans-unit id="c2502b9d0f94349a2144f67720b0c946564547d6" translate="yes" xml:space="preserve">
          <source>This method lets you turn URI segments into an associative array of key/value pairs. Consider this URI:</source>
          <target state="translated">このメソッドを使用すると、URI のセグメントをキーと値のペアの連想配列に変換することができます。このURIを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="c1a19e89bb15b6f745647911f4b2420048af3e31" translate="yes" xml:space="preserve">
          <source>This method loads helper files, where file_name is the name of the file, without the _helper.php extension.</source>
          <target state="translated">このメソッドはヘルパーファイルをロードします。 file_name はファイル名で、拡張子は _helper.php ではありません。</target>
        </trans-unit>
        <trans-unit id="ed8df8dd586e4100135f4d1049851aaa2cf37c1e" translate="yes" xml:space="preserve">
          <source>This method makes sure that you have a valid month/year. For example, if you submit 13 as the month, the year will increment and the month will become January:</source>
          <target state="translated">この方法では、有効な月/年があることを確認します。例えば、13を月として投稿した場合、年がインクリメントされて1月になります。</target>
        </trans-unit>
        <trans-unit id="e2cd9ea6f0323a40a488bf2316ff87698067a037" translate="yes" xml:space="preserve">
          <source>This method permits changing the properties of a given item. Typically it is called from the &amp;ldquo;view cart&amp;rdquo; page if a user makes changes to the quantity before checkout. That array must contain the rowid for each item.</source>
          <target state="translated">このメソッドでは、特定のアイテムのプロパティを変更できます。通常、ユーザーがチェックアウト前に数量を変更すると、「カートの表示」ページから呼び出されます。その配列には、各アイテムのROWIDが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="9caf8ac0e013064406bf4823e4656c23659302e1" translate="yes" xml:space="preserve">
          <source>This method retrieves all variables available to your views.</source>
          <target state="translated">このメソッドは、ビューで利用可能なすべての変数を取得します。</target>
        </trans-unit>
        <trans-unit id="fc2f00cd6e9961c618d2d7a6150b482df3de86fd" translate="yes" xml:space="preserve">
          <source>This method retrieves the URL to your CodeIgniter system/ directory.</source>
          <target state="translated">このメソッドは、CodeIgniterのシステム/ディレクトリへのURLを取得します。</target>
        </trans-unit>
        <trans-unit id="51731d403f9247bce5f75b8bf4f3088a162a352c" translate="yes" xml:space="preserve">
          <source>This method retrieves the URL to your site, along with the &amp;ldquo;index&amp;rdquo; value you&amp;rsquo;ve specified in the config file.</source>
          <target state="translated">このメソッドは、構成ファイルで指定した「インデックス」値とともに、サイトのURLを取得します。</target>
        </trans-unit>
        <trans-unit id="f1d1e48140008aa39379028f9d8b6da04b9e8d31" translate="yes" xml:space="preserve">
          <source>This method retrieves the URL to your site, plus an optional path such as to a stylesheet or image.</source>
          <target state="translated">このメソッドは、あなたのサイトへの URL と、スタイルシートや画像などのオプションのパスを取得します。</target>
        </trans-unit>
        <trans-unit id="2c8cd2cf99ebbf62a14488f3806b7cd551d10bb8" translate="yes" xml:space="preserve">
          <source>This method returns a boolean true if there are links to a page before and after, respectively, the current page being displayed.</source>
          <target state="translated">このメソッドは、現在表示されているページの前後に、それぞれページへのリンクがある場合に真を返します。</target>
        </trans-unit>
        <trans-unit id="459349e0f1a198c00774e50afc8dd04fa8cdaf29" translate="yes" xml:space="preserve">
          <source>This method returns a single result row without prefetching the whole result in memory as &lt;code&gt;row()&lt;/code&gt; does. If your query has more than one row, it returns the current row and moves the internal data pointer ahead.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;row()&lt;/code&gt; のように結果全体をメモリにプリフェッチすることなく、単一の結果行を返します。クエリに複数の行がある場合、現在の行を返し、内部データポインターを前に移動します。</target>
        </trans-unit>
        <trans-unit id="c4273a5edcb0c1dfcb16d1b1785f211e71c3ee99" translate="yes" xml:space="preserve">
          <source>This method returns a single result row. If your query has more than one row, it returns only the first row. The result is returned as an &lt;strong&gt;object&lt;/strong&gt;. Here&amp;rsquo;s a usage example:</source>
          <target state="translated">このメソッドは、単一の結果行を返します。クエリに複数の行がある場合、最初の行のみが返されます。結果は&lt;strong&gt;オブジェクト&lt;/strong&gt;として返され&lt;strong&gt;ます&lt;/strong&gt;。次に使用例を示します。</target>
        </trans-unit>
        <trans-unit id="7020f2be64422f0c7eacccf181d574687b4b8d1a" translate="yes" xml:space="preserve">
          <source>This method returns the User Agent string from the SERVER data:</source>
          <target state="translated">このメソッドは、サーバーデータからユーザーエージェントの文字列を返します。</target>
        </trans-unit>
        <trans-unit id="aac6d5ccd122b4b9f003baa89bb5cefffc12ecb9" translate="yes" xml:space="preserve">
          <source>This method returns the query result as a pure array, or an empty array when no result is produced. Typically you&amp;rsquo;ll use this in a foreach loop, like this:</source>
          <target state="translated">このメソッドは、クエリ結果を純粋な配列として返すか、結果が生成されない場合は空の配列を返します。通常、次のように、これをforeachループで使用します。</target>
        </trans-unit>
        <trans-unit id="f2f54038f7b1b6c8097683eec5e9cb50cb5c0c98" translate="yes" xml:space="preserve">
          <source>This method returns the query result as an array of &lt;strong&gt;objects&lt;/strong&gt;, or &lt;strong&gt;an empty array&lt;/strong&gt; on failure. Typically you&amp;rsquo;ll use this in a foreach loop, like this:</source>
          <target state="translated">このメソッドは、クエリ結果を&lt;strong&gt;オブジェクトの&lt;/strong&gt;配列として返します。失敗した場合&lt;strong&gt;は空の配列&lt;/strong&gt;を返します。通常、次のように、これをforeachループで使用します。</target>
        </trans-unit>
        <trans-unit id="d6cecd9c4c25c39cb8bed24bd2b4c6f12119428f" translate="yes" xml:space="preserve">
          <source>This method returns the xml result from database result. You can do like this:</source>
          <target state="translated">このメソッドは、データベースの結果からxmlの結果を返します。このようにすることができます。</target>
        </trans-unit>
        <trans-unit id="cd8fec557fdc64db510090ddd1120b02664a9e14" translate="yes" xml:space="preserve">
          <source>This method sets a rule group from the validation configuration to the validation service:</source>
          <target state="translated">このメソッドは、検証設定から検証サービスへのルールグループを設定します。</target>
        </trans-unit>
        <trans-unit id="8e5dc370e21cd301042a28c8a6727e3907c78908" translate="yes" xml:space="preserve">
          <source>This method sets a single rule. It takes the name of the field as the first parameter, an optional label and a string with a pipe-delimited list of rules that should be applied:</source>
          <target state="translated">このメソッドは単一のルールを設定します。最初のパラメータとしてフィールドの名前、オプションのラベル、適用するルールのパイプで区切られたリストの文字列を受け取ります。</target>
        </trans-unit>
        <trans-unit id="972dabf6c801253a13d89cf6c8ab822c1d037af4" translate="yes" xml:space="preserve">
          <source>This method sets the internal pointer for the next result row to be fetched. It is only useful in combination with &lt;code&gt;getUnbufferedRow()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、フェッチされる次の結果行の内部ポインタを設定します。 &lt;code&gt;getUnbufferedRow()&lt;/code&gt; と組み合わせた場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="a51b393032241d4fbafdb891bcd50a42623cb279" translate="yes" xml:space="preserve">
          <source>This method sets the internal pointer for the next result row to be fetched. It is only useful in combination with &lt;code&gt;unbuffered_row()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、フェッチされる次の結果行の内部ポインタを設定します。 &lt;code&gt;unbuffered_row()&lt;/code&gt; と組み合わせた場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="df2f4f9eb6ae1cc46b206e63f007d46a24074911" translate="yes" xml:space="preserve">
          <source>This method simply returns the line. It does not echo it.</source>
          <target state="translated">このメソッドは単に行を返します。エコーは行いません。</target>
        </trans-unit>
        <trans-unit id="037b6bf978690a05524bc80443bb032593936ac7" translate="yes" xml:space="preserve">
          <source>This method simply validates the incoming TB data, returning TRUE on success and FALSE on failure. If the data is valid it is set to the &lt;code&gt;$this-&amp;gt;data&lt;/code&gt; array so that it can be inserted into a database.</source>
          <target state="translated">このメソッドは、着信TBデータを検証し、成功した場合にTRUEを返し、失敗した場合にFALSEを返します。データが有効な場合、データベースに挿入できるように &lt;code&gt;$this-&amp;gt;data&lt;/code&gt; 配列に設定されます。</target>
        </trans-unit>
        <trans-unit id="31654035f9053da2e075e98a9972dfdd8a79f8c1" translate="yes" xml:space="preserve">
          <source>This method takes a UNIX timestamp and, optionally, the timezone and locale, to create a new Time instance:</source>
          <target state="translated">このメソッドは、UNIX タイムスタンプとオプションでタイムゾーンとロケールを受け取り、新しい Time インスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="d14f05b182a4f93daa9f2214d0b50d6b556d0116" translate="yes" xml:space="preserve">
          <source>This method takes a one-dimensional array as input and creates a multi-dimensional array with a depth equal to the number of columns desired. This allows a single array with many elements to be displayed in a table that has a fixed column count. Consider this example:</source>
          <target state="translated">このメソッドは,1次元配列を入力として受け取り,希望する列数に等しい深さの多次元配列を作成します.これにより、多くの要素を持つ単一の配列を、固定の列数を持つテーブルに表示することができます。この例を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="7b1532965e5b32c61e001d8c9976acca771903cf" translate="yes" xml:space="preserve">
          <source>This method takes an associative array as input and generates variables using the PHP &lt;a href=&quot;http://php.net/extract&quot;&gt;extract()&lt;/a&gt; function. This method produces the same result as using the second parameter of the &lt;code&gt;$this-&amp;gt;load-&amp;gt;view()&lt;/code&gt; method above. The reason you might want to use this method independently is if you would like to set some global variables in the constructor of your controller and have them become available in any view file loaded from any method. You can have multiple calls to this method. The data get cached and merged into one array for conversion to variables.</source>
          <target state="translated">このメソッドは、連想配列を入力として取り、PHPの&lt;a href=&quot;http://php.net/extract&quot;&gt;extract（）&lt;/a&gt;関数を使用して変数を生成します。このメソッドは、上記の &lt;code&gt;$this-&amp;gt;load-&amp;gt;view()&lt;/code&gt; メソッドの2番目のパラメーターを使用した場合と同じ結果を生成します。このメソッドを個別に使用する理由は、コントローラーのコンストラクターでいくつかのグローバル変数を設定し、任意のメソッドからロードされた任意のビューファイルでそれらを使用できるようにする場合です。このメソッドを複数回呼び出すことができます。データはキャッシュされ、変数に変換するために1つの配列にマージされます。</target>
        </trans-unit>
        <trans-unit id="e41e04171a3ebb3a8f347ee790bed8205ae22e26" translate="yes" xml:space="preserve">
          <source>This method takes into account the &lt;code&gt;$config['proxy_ips']&lt;/code&gt; setting and will return the reported HTTP_X_FORWARDED_FOR, HTTP_CLIENT_IP, HTTP_X_CLIENT_IP or HTTP_X_CLUSTER_CLIENT_IP address for the allowed IP addresses.</source>
          <target state="translated">このメソッドは &lt;code&gt;$config['proxy_ips']&lt;/code&gt; 設定を考慮に入れ、許可されたIPアドレスに対して報告されたHTTP_X_FORWARDED_FOR、HTTP_CLIENT_IP、HTTP_X_CLIENT_IPまたはHTTP_X_CLUSTER_CLIENT_IPアドレスを返します。</target>
        </trans-unit>
        <trans-unit id="d7d020ce5d0fa983df00559315baac443c590c86" translate="yes" xml:space="preserve">
          <source>This method takes into account the &lt;code&gt;App-&amp;gt;proxyIPs&lt;/code&gt; setting and will return the reported HTTP_X_FORWARDED_FOR, HTTP_CLIENT_IP, HTTP_X_CLIENT_IP, or HTTP_X_CLUSTER_CLIENT_IP address for the allowed IP address.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;App-&amp;gt;proxyIPs&lt;/code&gt; 設定を考慮し、許可されたIPアドレスに対して報告されたHTTP_X_FORWARDED_FOR、HTTP_CLIENT_IP、HTTP_X_CLIENT_IP、またはHTTP_X_CLUSTER_CLIENT_IPアドレスを返します。</target>
        </trans-unit>
        <trans-unit id="958be113167b12a2b240c1a1566480a2e8fe362f" translate="yes" xml:space="preserve">
          <source>This method used to act EXACTLY like &lt;code&gt;post_get()&lt;/code&gt;, but it&amp;rsquo;s behavior has changed in CodeIgniter 3.0.</source>
          <target state="translated">このメソッドは以前は &lt;code&gt;post_get()&lt;/code&gt; とまったく同じように動作していましたが、CodeIgniter 3.0では動作が変更されています。</target>
        </trans-unit>
        <trans-unit id="fa052b05e00e0f9febeadcdb19232a667059df74" translate="yes" xml:space="preserve">
          <source>This method will &amp;lsquo;clean&amp;rsquo; the entire cache. If the deletion of the cache files fails, the method will return FALSE.</source>
          <target state="translated">このメソッドは、キャッシュ全体を「クリーン」にします。キャッシュファイルの削除に失敗した場合、メソッドはFALSEを返します。</target>
        </trans-unit>
        <trans-unit id="8325f80eeae2146036e6788ac2012a5ef6cabcc6" translate="yes" xml:space="preserve">
          <source>This method will NOT write the CSV file for you. It simply creates the CSV layout. If you need to write the file use the &lt;a href=&quot;../helpers/file_helper&quot;&gt;File Helper&lt;/a&gt;.</source>
          <target state="translated">この方法では、CSVファイルは書き込まれません。CSVレイアウトを作成するだけです。ファイルを書き込む必要がある場合は、&lt;a href=&quot;../helpers/file_helper&quot;&gt;ファイルヘルパーを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="afa7f2da88fc19349a904dfd68b863d904c6c765" translate="yes" xml:space="preserve">
          <source>This method will NOT write the XML file for you. It simply creates the XML layout. If you need to write the file use the &lt;a href=&quot;../helpers/file_helper&quot;&gt;File Helper&lt;/a&gt;.</source>
          <target state="translated">このメソッドはXMLファイルを書き込みません。XMLレイアウトを作成するだけです。ファイルを書き込む必要がある場合は、&lt;a href=&quot;../helpers/file_helper&quot;&gt;ファイルヘルパーを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="808c1b9865ce562940ee8da7ba15a82051c0f0fa" translate="yes" xml:space="preserve">
          <source>This method will attempt to fetch an item from the cache store. If the item does not exist, the method will return FALSE.</source>
          <target state="translated">このメソッドは、キャッシュストアからのアイテムの取得を試みます。アイテムが存在しない場合、このメソッドは FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="a9c4e85dffe66c94944fd6ae8a3831f9f50b2d39" translate="yes" xml:space="preserve">
          <source>This method will attempt to fetch an item from the cache store. If the item does not exist, the method will return NULL.</source>
          <target state="translated">このメソッドは、キャッシュストアからアイテムを取得しようとします。アイテムが存在しない場合、このメソッドは NULL を返します。</target>
        </trans-unit>
        <trans-unit id="56a22195165acca064e9023bbfda2654e4f8e427" translate="yes" xml:space="preserve">
          <source>This method will automatically clear all parameters if the request was successful. To stop this behaviour pass FALSE:</source>
          <target state="translated">このメソッドは、リクエストが成功した場合に自動的にすべてのパラメータをクリアします。この動作を停止させるには FALSE を渡します。</target>
        </trans-unit>
        <trans-unit id="38ad4d2473614dce0049e83250e1ba44369f0a6c" translate="yes" xml:space="preserve">
          <source>This method will delete a specific item from the cache store. If item deletion fails, the method will return FALSE.</source>
          <target state="translated">このメソッドは、キャッシュストアから特定のアイテムを削除します。アイテムの削除に失敗した場合、このメソッドは FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="22b4061c7a24637f33f63604c6b28d8f6f126629" translate="yes" xml:space="preserve">
          <source>This method will return detailed information on a specific item in the cache.</source>
          <target state="translated">このメソッドは、キャッシュ内の特定のアイテムの詳細情報を返します。</target>
        </trans-unit>
        <trans-unit id="83588aee58c99808b58db31a32a923040295071e" translate="yes" xml:space="preserve">
          <source>This method will return information on the entire cache.</source>
          <target state="translated">このメソッドは、キャッシュ全体の情報を返します。</target>
        </trans-unit>
        <trans-unit id="7063c2aa524e3978a76a52cd3562563acead6a64" translate="yes" xml:space="preserve">
          <source>This method will return the body of the response as a JSON string:</source>
          <target state="translated">このメソッドは、レスポンスのボディを JSON 文字列として返します。</target>
        </trans-unit>
        <trans-unit id="3fc454919914e668e0db3cdb062a2d2859a9f907" translate="yes" xml:space="preserve">
          <source>This method will save an item to the cache store. If saving fails, the method will return FALSE.</source>
          <target state="translated">このメソッドは、キャッシュストアにアイテムを保存します。保存に失敗した場合、このメソッドはFALSEを返します。</target>
        </trans-unit>
        <trans-unit id="9dd1a2c30c865d0b951a07fdc7ddcb9a3fc15755" translate="yes" xml:space="preserve">
          <source>This method will terminate script execution.</source>
          <target state="translated">このメソッドはスクリプトの実行を終了します。</target>
        </trans-unit>
        <trans-unit id="bdb56983b0d0bc558cfc50a168cfb83e2eb4de63" translate="yes" xml:space="preserve">
          <source>This method works exactly like &lt;code&gt;parse()&lt;/code&gt;, only it accepts the template as a string instead of loading a view file.</source>
          <target state="translated">このメソッドは &lt;code&gt;parse()&lt;/code&gt; とまったく同じように機能しますが、ビューファイルをロードする代わりにテンプレートを文字列として受け入れます。</target>
        </trans-unit>
        <trans-unit id="e35ecca7556ce31b80192235c6c6a0e345d05df3" translate="yes" xml:space="preserve">
          <source>This method works pretty much the same way as &lt;code&gt;getPost()&lt;/code&gt; and &lt;code&gt;getGet()&lt;/code&gt;, only combined. It will search through both POST and GET streams for data, looking first in GET, and then in POST:</source>
          <target state="translated">このメソッドは、 &lt;code&gt;getPost()&lt;/code&gt; および &lt;code&gt;getGet()&lt;/code&gt; とほぼ同じように機能しますが、組み合わせただけです。POSTストリームとGETストリームの両方でデータを検索し、最初にGETを検索し、次にPOSTを検索します。</target>
        </trans-unit>
        <trans-unit id="3df74bf7008b9cd5a5783ae9da7234c50a2a5efe" translate="yes" xml:space="preserve">
          <source>This method works pretty much the same way as &lt;code&gt;getPost()&lt;/code&gt; and &lt;code&gt;getGet()&lt;/code&gt;, only combined. It will search through both POST and GET streams for data, looking first in POST, and then in GET:</source>
          <target state="translated">このメソッドは、 &lt;code&gt;getPost()&lt;/code&gt; および &lt;code&gt;getGet()&lt;/code&gt; とほぼ同じように機能しますが、組み合わせただけです。POSTストリームとGETストリームの両方でデータを検索し、最初にPOSTを検索し、次にGETを検索します。</target>
        </trans-unit>
        <trans-unit id="52ab50e1346fbc3c91d2f1fe0e57909f5e232090" translate="yes" xml:space="preserve">
          <source>This method works pretty much the same way as &lt;code&gt;post()&lt;/code&gt; and &lt;code&gt;get()&lt;/code&gt;, only combined. It will search through both POST and GET streams for data, looking in POST first, and then in GET:</source>
          <target state="translated">このメソッドは、 &lt;code&gt;post()&lt;/code&gt; および &lt;code&gt;get()&lt;/code&gt; とほぼ同じように機能しますが、組み合わせるだけです。POSTとGETの両方のストリームでデータを検索し、最初にPOSTを検索し、次にGETで検索します。</target>
        </trans-unit>
        <trans-unit id="4c871b6c84a391e61ad1c7aa769a53c5e76a100a" translate="yes" xml:space="preserve">
          <source>This method works the same way as &lt;code&gt;post_get()&lt;/code&gt; only it looks for GET data first.</source>
          <target state="translated">このメソッドは &lt;code&gt;post_get()&lt;/code&gt; と同じように機能しますが、最初にGETデータを探します。</target>
        </trans-unit>
        <trans-unit id="629d18c3d38bb4c8be6aa2241ccbca67c81db81c" translate="yes" xml:space="preserve">
          <source>This methods returns a string that displays the difference between the current date/time and the instance in a human readable format that is geared towards being easily understood. It can create strings like &amp;lsquo;3 hours ago&amp;rsquo;, &amp;lsquo;in 1 month&amp;rsquo;, etc:</source>
          <target state="translated">このメソッドは、現在の日付/時刻とインスタンスの違いを、簡単に理解できるように人間が読める形式で表示する文字列を返します。「3時間前」、「1か月後」などの文字列を作成できます。</target>
        </trans-unit>
        <trans-unit id="c088163a57e7f2b108e3f044588bbead064c4e71" translate="yes" xml:space="preserve">
          <source>This model works with data from the &lt;code&gt;jobs&lt;/code&gt; table, and returns all results as an instance of &lt;code&gt;App\Entities\Job&lt;/code&gt;. When you need to persist that record to the database, you will need to either write custom methods, or use the model&amp;rsquo;s &lt;code&gt;save()&lt;/code&gt; method to inspect the class, grab any public and private properties, and save them to the database:</source>
          <target state="translated">このモデルは、 &lt;code&gt;jobs&lt;/code&gt; テーブルのデータを処理し、すべての結果を &lt;code&gt;App\Entities\Job&lt;/code&gt; インスタンスとして返します。そのレコードをデータベースに永続化する必要がある場合は、カスタムメソッドを作成するか、モデルの &lt;code&gt;save()&lt;/code&gt; メソッドを使用してクラスを検査し、パブリックプロパティとプライベートプロパティを取得してデータベースに保存する必要があります。</target>
        </trans-unit>
        <trans-unit id="5e53b447b7065fd9017352b7ddf0e6a2f57ac983" translate="yes" xml:space="preserve">
          <source>This must be the &lt;em&gt;last&lt;/em&gt; session-related function that you call. All session data will be lost after you do that.</source>
          <target state="translated">これは、呼び出す&lt;em&gt;最後の&lt;/em&gt;セッション関連関数でなければなりません。これを実行すると、すべてのセッションデータが失われます。</target>
        </trans-unit>
        <trans-unit id="c026dee2cfdc15090dd9aa4b80d3d10d8ab40d41" translate="yes" xml:space="preserve">
          <source>This must be the last session-related operation that you do during the same request. All session data (including flashdata and tempdata) will be destroyed permanently and functions will be unusable during the same request after you destroy the session.</source>
          <target state="translated">これは、同じリクエスト中に行う最後のセッション関連の操作でなければなりません。すべてのセッションデータ(flashdataとtempdataを含む)は永久に破棄され、セッションを破棄した後は同じリクエスト中に機能は使用できなくなります。</target>
        </trans-unit>
        <trans-unit id="9f8653bc87ca45a74185f47a167469cb5a361fdf" translate="yes" xml:space="preserve">
          <source>This new method takes care of inserting the news item into the database. The third line contains a new function, url_title(). This function - provided by the &lt;a href=&quot;../helpers/url_helper&quot;&gt;URL helper&lt;/a&gt; - strips down the string you pass it, replacing all spaces by dashes (-) and makes sure everything is in lowercase characters. This leaves you with a nice slug, perfect for creating URIs.</source>
          <target state="translated">この新しいメソッドは、ニュース項目のデータベースへの挿入を処理します。3行目には、新しい関数url_title（）が含まれています。この関数&lt;a href=&quot;../helpers/url_helper&quot;&gt;-URLヘルパー&lt;/a&gt;によって提供されます -渡した文字列を削除し、すべてのスペースをダッシュ​​（-）に置き換え、すべてが小文字であることを確認します。これにより、URIの作成に最適な素晴らしいスラッグが作成されます。</target>
        </trans-unit>
        <trans-unit id="cd8ebe417ba38c2c46bdf46d8f15ecbf15f4a504" translate="yes" xml:space="preserve">
          <source>This new property now contains the fields that we allow to be saved to the database. Notice that we leave out the &lt;code&gt;id&lt;/code&gt;? That&amp;rsquo;s because you will almost never need to do that, since it is an auto-incrementing field in the database. This helps protect against Mass Assignment Vulnerabilities. If your model is handling your timestamps, you would also leave those out.</source>
          <target state="translated">この新しいプロパティには、データベースに保存できるフィールドが含まれています。 &lt;code&gt;id&lt;/code&gt; を省略していることに注意してください。これは、データベースの自動インクリメントフィールドであるため、これを行う必要がほとんどないためです。これは、一括割り当ての脆弱性から保護するのに役立ちます。モデルがタイムスタンプを処理している場合は、それらも除外します。</target>
        </trans-unit>
        <trans-unit id="2553e8eab8b99b0c546abaee3673ec3c14d3946c" translate="yes" xml:space="preserve">
          <source>This only changes the values returned during this one call. If you need to modify the URI&amp;rsquo;s query values more permanently, you can use the &lt;code&gt;stripQuery()&lt;/code&gt; and &lt;code&gt;keepQuery()&lt;/code&gt; methods to change the actual object&amp;rsquo;s query variable collection:</source>
          <target state="translated">これは、この1回の呼び出し中に返される値のみを変更します。あなたがより恒久的URIのクエリ値を変更する必要がある場合は、使用することができます &lt;code&gt;stripQuery()&lt;/code&gt; と &lt;code&gt;keepQuery()&lt;/code&gt; メソッドは、実際のオブジェクトのクエリ変数のコレクションを変更するには：</target>
        </trans-unit>
        <trans-unit id="5aa7b14f8a1206449553495b4c48c23bb4113e96" translate="yes" xml:space="preserve">
          <source>This only works when trying to access the properties from outside of the class. Any methods internal to the class must call the &lt;code&gt;setX()&lt;/code&gt; and &lt;code&gt;getX()&lt;/code&gt; methods directly.</source>
          <target state="translated">これは、クラスの外部からプロパティにアクセスしようとした場合にのみ機能します。クラス内部のメソッドは、 &lt;code&gt;setX()&lt;/code&gt; &lt;code&gt;getX()&lt;/code&gt; メソッドとgetX（）メソッドを直接呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="691dbe7e4f2c05bdd4de591e347ca2f89331a4b4" translate="yes" xml:space="preserve">
          <source>This option controls how often the session class will regenerate itself and create a new session ID. Setting it to 0 will disable session ID regeneration.</source>
          <target state="translated">このオプションは、セッション・クラスが自分自身を再生成して新しいセッションIDを作成する頻度を制御します。0に設定すると、セッションIDの再生成は無効になります。</target>
        </trans-unit>
        <trans-unit id="7c276fad5500f651f37e5b133aa0d7f073bd67ec" translate="yes" xml:space="preserve">
          <source>This option describes the SSL certificate verification behavior. If the &lt;code&gt;verify&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt;, it enables the SSL certificate verification and uses the default CA bundle provided by the operating system. If set to &lt;code&gt;false&lt;/code&gt; it will disable the certificate verification (this is insecure, and allows man-in-the-middle attacks!). You can set it to a string that contains the path to a CA bundle to enable verification with a custom certificate. The default value is true:</source>
          <target state="translated">このオプションは、SSL証明書の検証動作を説明します。 &lt;code&gt;verify&lt;/code&gt; オプションが &lt;code&gt;true&lt;/code&gt; の場合、SSL証明書の検証が有効になり、オペレーティングシステムによって提供されるデフォルトのCAバンドルが使用されます。 &lt;code&gt;false&lt;/code&gt; に設定すると、証明書の検証が無効になります（これは安全ではなく、man-in-the-middle攻撃を許可します！）。CAバンドルへのパスを含む文字列に設定して、カスタム証明書による検証を有効にすることができます。デフォルト値はtrueです。</target>
        </trans-unit>
        <trans-unit id="92e46dae3907c56863063adffa759b9efe7faf8d" translate="yes" xml:space="preserve">
          <source>This option does not allow for any customization of the &lt;code&gt;json_encode()&lt;/code&gt; function, or the Content-Type header. If you need that ability, you will need to encode the data manually, passing it through the &lt;code&gt;setBody()&lt;/code&gt; method of CURLRequest, and set the Content-Type header with the &lt;code&gt;setHeader()&lt;/code&gt; method.</source>
          <target state="translated">このオプションでは、 &lt;code&gt;json_encode()&lt;/code&gt; 関数またはContent-Typeヘッダーをカスタマイズすることはできません。あなたがその能力を必要とする場合、あなたはそれを通す、手動でデータをエンコードする必要があります &lt;code&gt;setBody()&lt;/code&gt; CURLRequestの方法、及びでContent-Typeヘッダを設定する &lt;code&gt;setHeader()&lt;/code&gt; メソッド。</target>
        </trans-unit>
        <trans-unit id="87306342b8ed1b5bd74b31a1f6660557235479fe" translate="yes" xml:space="preserve">
          <source>This option enables you to automatically replace dashes (&amp;lsquo;-&amp;lsquo;) with underscores in the controller and method URI segments, thus saving you additional route entries if you need to do that. This is required because the dash isn&amp;rsquo;t a valid class or method name character and would cause a fatal error if you try to use it:</source>
          <target state="translated">このオプションを使用すると、コントローラーおよびメソッドのURIセグメントでダッシュ（「-」）をアンダースコアに自動的に置き換えることができるため、必要に応じて追加のルートエントリを節約できます。ダッシュは有効なクラス名またはメソッド名の文字ではなく、使用しようとすると致命的なエラーが発生するため、これが必要です。</target>
        </trans-unit>
        <trans-unit id="6480bcb2e7dcb2ea338374aa4d10508d4817653a" translate="yes" xml:space="preserve">
          <source>This page describes some &amp;ldquo;best practices&amp;rdquo; regarding web security, and details CodeIgniter&amp;rsquo;s internal security features.</source>
          <target state="translated">このページでは、Webセキュリティに関する「ベストプラクティス」について説明し、CodeIgniterの内部セキュリティ機能について詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="420af405e6b33f31ad5533b67879d0b5b702bedb" translate="yes" xml:space="preserve">
          <source>This permits it to be put it anywhere in a template without the memory being calculated until the end. The &lt;a href=&quot;output&quot;&gt;Output Class&lt;/a&gt; will swap the real value for this variable.</source>
          <target state="translated">これにより、メモリを最後まで計算することなく、テンプレートの任意の場所に配置できます。&lt;a href=&quot;output&quot;&gt;出力クラスは、&lt;/a&gt;この変数の実際の値を交換します。</target>
        </trans-unit>
        <trans-unit id="f5386ab8eb9e5e8a42e6d1e737010e634e4c1413" translate="yes" xml:space="preserve">
          <source>This permits you to have the same hook point with multiple scripts. The order you define your array will be the execution order.</source>
          <target state="translated">これにより、複数のスクリプトで同じフックポイントを持つことができます。配列を定義した順序が実行順序となります。</target>
        </trans-unit>
        <trans-unit id="59e5cd381e91018d51d7c6b4983eb1e025a19bdf" translate="yes" xml:space="preserve">
          <source>This process continues until you have submitted a valid form.</source>
          <target state="translated">このプロセスは、有効なフォームを送信するまで続きます。</target>
        </trans-unit>
        <trans-unit id="869d1e9ae24d103241a779ec3aa72df8d918cdcf" translate="yes" xml:space="preserve">
          <source>This property is an array of filter aliases. For each alias, you can specify before and after arrays that contain a list of URI patterns that filter should apply to:</source>
          <target state="translated">このプロパティは、フィルタのエイリアスの配列です。各エイリアスに対して、フィルタが適用すべき URI パターンのリストを含む前後の配列を指定することができます。</target>
        </trans-unit>
        <trans-unit id="acfa7091e2df2c97c35863843a6945edcd69e5d9" translate="yes" xml:space="preserve">
          <source>This provides a backtrace to the current execution point, with Kint&amp;rsquo;s own unique spin:</source>
          <target state="translated">これにより、Kint独自のスピンを使用して、現在の実行ポイントへのバックトレースが提供されます。</target>
        </trans-unit>
        <trans-unit id="86f46fe897c2457c270bf14ca0d28ba01d684462" translate="yes" xml:space="preserve">
          <source>This provides a much simpler way to crop that will always maintain the aspect ratio:</source>
          <target state="translated">これにより、常にアスペクト比を維持したままクロップするより簡単な方法が提供されます。</target>
        </trans-unit>
        <trans-unit id="9a3f6c9abaa104af7811d0380838a634fce7b5ad" translate="yes" xml:space="preserve">
          <source>This provides a simple check that the response would be considered a &amp;ldquo;successful&amp;rdquo; response. This primarily checks that the HTTP status code is within the 200 or 300 ranges:</source>
          <target state="translated">これにより、応答が「成功した」応答と見なされるかどうかを簡単に確認できます。これは主に、HTTPステータスコードが200または300の範囲内にあることを確認します。</target>
        </trans-unit>
        <trans-unit id="5641723d4768f1a1fd1bffcd17bff3342fc91805" translate="yes" xml:space="preserve">
          <source>This provides an HTTP status code of 500 and an exit code of 3.</source>
          <target state="translated">これは、HTTPステータスコード500と終了コード3を提供します。</target>
        </trans-unit>
        <trans-unit id="54accb9e4c5404c70df2eaba3b7762a802291e7e" translate="yes" xml:space="preserve">
          <source>This provides an HTTP status code of 500 and an exit code of 8.</source>
          <target state="translated">これは、HTTPステータスコード500と終了コード8を提供します。</target>
        </trans-unit>
        <trans-unit id="d0fe0599b14701b90ef4cae9704179561b99253c" translate="yes" xml:space="preserve">
          <source>This query may be modified by interjecting Query Builder commands as needed prior to calling this method:</source>
          <target state="translated">このクエリは、このメソッドを呼び出す前に必要に応じてクエリビルダコマンドを挿入することで変更することができます。</target>
        </trans-unit>
        <trans-unit id="35c6a357efc30a058e71d51f0b3302b8607adccd" translate="yes" xml:space="preserve">
          <source>This recommendation covers basic class, method, and file-naming standards. Our &lt;a href=&quot;https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/styleguide.rst&quot;&gt;style guide&lt;/a&gt; meets PSR-1 and adds its own requirements on top of it.</source>
          <target state="translated">この推奨事項は、基本的なクラス、メソッド、およびファイルの命名基準を対象としています。私たちの&lt;a href=&quot;https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/styleguide.rst&quot;&gt;スタイルガイド&lt;/a&gt;はPSR-1を満たし、その上に独自の要件を追加します。</target>
        </trans-unit>
        <trans-unit id="f6993350b073ce3d18ccf8a75eb079094000f3fc" translate="yes" xml:space="preserve">
          <source>This requires either a DATETIME or INTEGER field in the database as per the model&amp;rsquo;s $dateFormat setting. The default field name is &lt;code&gt;deleted_at&lt;/code&gt; however this name can be configured to any name of your choice by using $deletedField property.</source>
          <target state="translated">これには、モデルの$ dateFormat設定に従って、データベースにDATETIMEフィールドまたはINTEGERフィールドのいずれかが必要です。デフォルトのフィールド名は &lt;code&gt;deleted_at&lt;/code&gt; ですが、この名前は$ deletedFieldプロパティを使用して任意の名前に構成できます。</target>
        </trans-unit>
        <trans-unit id="aba462ddc10314944c9a8eca97a7a52772580288" translate="yes" xml:space="preserve">
          <source>This returns a new helper class that provides a number of routines for checking the response itself. See below for details.</source>
          <target state="translated">これは、レスポンス自体をチェックするためのいくつかのルーチンを提供する新しいヘルパークラスを返します。詳細は以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="36730087e45bfd287a9abf0437ba48007ee389fa" translate="yes" xml:space="preserve">
          <source>This returns a standard &lt;a href=&quot;results&quot;&gt;result set&lt;/a&gt;.</source>
          <target state="translated">これ&lt;a href=&quot;results&quot;&gt;により&lt;/a&gt;、標準の結果セットが返されます。</target>
        </trans-unit>
        <trans-unit id="2e733c7416d4b843d187adf65b52640938e46cb5" translate="yes" xml:space="preserve">
          <source>This returns a string of errors that were detected while performing a migration.</source>
          <target state="translated">これは、移行の実行中に検出されたエラーの文字列を返します。</target>
        </trans-unit>
        <trans-unit id="bbdf22c88df7f984fab29af90a1002d5f63b116a" translate="yes" xml:space="preserve">
          <source>This returns an array with the field names and their associated errors that can be used to either show all of the errors at the top of the form, or to display them individually:</source>
          <target state="translated">これは、フォームの先頭にすべてのエラーを表示したり、個別にエラーを表示したりするために使用できる、フィールド名とそれに関連するエラーの配列を返します。</target>
        </trans-unit>
        <trans-unit id="d25982663f24e26ff6d51f1ff0a0c3f3c57d7716" translate="yes" xml:space="preserve">
          <source>This returns the prepared query as a string.</source>
          <target state="translated">これは、用意されたクエリを文字列として返します。</target>
        </trans-unit>
        <trans-unit id="186ef9fd8ca60f812da4e28515241298b05f6287" translate="yes" xml:space="preserve">
          <source>This route indicates which controller class should be loaded if the requested controller is not found. It will override the default 404 error page. Same per-directory rules as with &amp;lsquo;default_controller&amp;rsquo; apply here as well.</source>
          <target state="translated">このルートは、要求されたコントローラーが見つからない場合にどのコントローラークラスをロードする必要があるかを示します。デフォルトの404エラーページを上書きします。「default_controller」と同じディレクトリごとのルールがここにも適用されます。</target>
        </trans-unit>
        <trans-unit id="afb355aea764a659ef509ce50c18b4bcf458debe" translate="yes" xml:space="preserve">
          <source>This route points to the action that should be executed if the URI contains no data, which will be the case when people load your root URL. The setting accepts a &lt;strong&gt;controller/method&lt;/strong&gt; value and &lt;code&gt;index()&lt;/code&gt; would be the default method if you don&amp;rsquo;t specify one. In the above example, it is &lt;code&gt;Welcome::index()&lt;/code&gt; that would be called.</source>
          <target state="translated">このルートは、URIにデータが含まれていない場合に実行する必要があるアクションを指します。これは、ユーザーがルートURLをロードする場合に当てはまります。設定は&lt;strong&gt;コントローラー/メソッドの&lt;/strong&gt;値を受け入れ、指定しない場合、 &lt;code&gt;index()&lt;/code&gt; がデフォルトのメソッドになります。上記の例では、 &lt;code&gt;Welcome::index()&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4a56ab4d3b8f6a8ea6fb31dce9f4e571629b378d" translate="yes" xml:space="preserve">
          <source>This same negotiation can happen with four types of data:</source>
          <target state="translated">これと同じ交渉が4種類のデータで起こります。</target>
        </trans-unit>
        <trans-unit id="3263f79c068ad8df37f09262e213c2bb54439a11" translate="yes" xml:space="preserve">
          <source>This same value can be retrieved by casting the Query object to a string:</source>
          <target state="translated">この同じ値は、Queryオブジェクトを文字列にキャストすることで取得できます。</target>
        </trans-unit>
        <trans-unit id="eeb7375920d4a46437db6465fae88279f64c62a8" translate="yes" xml:space="preserve">
          <source>This section describes all of the available options you may pass into the constructor, the &lt;code&gt;request()&lt;/code&gt; method, or any of the shortcut methods.</source>
          <target state="translated">このセクションでは、コンストラクター、 &lt;code&gt;request()&lt;/code&gt; メソッド、または任意のショートカットメソッドに渡すことができるすべての使用可能なオプションについて説明します。</target>
        </trans-unit>
        <trans-unit id="8814e7aaa85a8e0fa4c2767e269479c41b45cfce" translate="yes" xml:space="preserve">
          <source>This section is a quick overview for newer programmers, or for developers who are not experienced with using exceptions.</source>
          <target state="translated">ここでは、新しいプログラマーの方や、例外を使った経験のない開発者の方のために、簡単に概要を説明します。</target>
        </trans-unit>
        <trans-unit id="9e4abfdf21fe77417cd883f81239b14ef9258a29" translate="yes" xml:space="preserve">
          <source>This section will take a look at each of the file types (controllers, views, language files, etc) and how they can be used within the module. Some of this information is described in more detail in the relevant location of the user guide, but is being reproduced here so that it&amp;rsquo;s easier to grasp how all of the pieces fit together.</source>
          <target state="translated">このセクションでは、各ファイルタイプ（コントローラー、ビュー、言語ファイルなど）と、それらをモジュール内でどのように使用できるかについて説明します。この情報の一部は、ユーザーガイドの関連する場所でより詳細に説明されていますが、すべての要素がどのように組み合わされているかを簡単に把握できるように、ここで再現されています。</target>
        </trans-unit>
        <trans-unit id="f57dcf58933fadaa27a7f0d083e645014656ab7b" translate="yes" xml:space="preserve">
          <source>This server variable can be set in your .htaccess file, or Apache config using &lt;a href=&quot;https://httpd.apache.org/docs/2.2/mod/mod_env.html#setenv&quot;&gt;SetEnv&lt;/a&gt;. Alternative methods are available for nginx and other servers, or you can remove this logic entirely and set the constant based on the server&amp;rsquo;s IP address.</source>
          <target state="translated">このサーバー変数は、.htaccessファイル、または&lt;a href=&quot;https://httpd.apache.org/docs/2.2/mod/mod_env.html#setenv&quot;&gt;SetEnv&lt;/a&gt;を使用したApache構成で設定できます。nginxや他のサーバーでは別の方法を使用できます。または、このロジックを完全に削除して、サーバーのIPアドレスに基づいて定数を設定できます。</target>
        </trans-unit>
        <trans-unit id="8491da6b630951ba353087a26cfe285cb3801977" translate="yes" xml:space="preserve">
          <source>This server variable can be set in your &lt;code&gt;.htaccess&lt;/code&gt; file or Apache config using &lt;a href=&quot;https://httpd.apache.org/docs/2.2/mod/mod_env.html#setenv&quot;&gt;SetEnv&lt;/a&gt;.</source>
          <target state="translated">このサーバー変数は、&lt;a href=&quot;https://httpd.apache.org/docs/2.2/mod/mod_env.html#setenv&quot;&gt;SetEnv&lt;/a&gt;を使用して &lt;code&gt;.htaccess&lt;/code&gt; ファイルまたはApache構成で設定できます。</target>
        </trans-unit>
        <trans-unit id="f9cd4cad730e9ea33a3f4c2d2306b294081cfdbc" translate="yes" xml:space="preserve">
          <source>This set of compatibility functions offers a &amp;ldquo;backport&amp;rdquo; of PHP&amp;rsquo;s standard &lt;a href=&quot;http://php.net/password&quot;&gt;Password Hashing extension&lt;/a&gt; that is otherwise available only since PHP 5.5.</source>
          <target state="translated">この一連の互換性関数は、PHP 5.5以降でのみ使用可能なPHPの標準&lt;a href=&quot;http://php.net/password&quot;&gt;パスワードハッシュ拡張&lt;/a&gt;機能の「バックポート」を提供します。</target>
        </trans-unit>
        <trans-unit id="12f7babc1edcec43f28c4f65c746c7e4d0026350" translate="yes" xml:space="preserve">
          <source>This set of compatibility functions offers limited support for PHP&amp;rsquo;s &lt;a href=&quot;http://php.net/mbstring&quot;&gt;Multibyte String extension&lt;/a&gt;. Because of the limited alternative solutions, only a few functions are available.</source>
          <target state="translated">この一連の互換性関数は、PHPの&lt;a href=&quot;http://php.net/mbstring&quot;&gt;マルチバイト文字列拡張&lt;/a&gt;機能の限定的なサポートを提供します。代替ソリューションが限られているため、使用できる機能はごくわずかです。</target>
        </trans-unit>
        <trans-unit id="ef032a3e37a47e5ef463fd5886c8f5a1e67d1db9" translate="yes" xml:space="preserve">
          <source>This set of compatibility functions offers support for a few standard functions in PHP that otherwise require a newer PHP version.</source>
          <target state="translated">この互換性関数群は、PHP のいくつかの標準関数をサポートしています。</target>
        </trans-unit>
        <trans-unit id="932b0183fb7d2604a4741a3eb0e65308418712af" translate="yes" xml:space="preserve">
          <source>This sets the default path in the constructor method, but allows for easily changing the path it uses:</source>
          <target state="translated">これはコンストラクタメソッドにデフォルトのパスを設定しますが、使用するパスを簡単に変更することができます。</target>
        </trans-unit>
        <trans-unit id="d718e6506e4dac39273b3b86b5b115433c9df51c" translate="yes" xml:space="preserve">
          <source>This setting stores the alias and &lt;a href=&quot;../outgoing/views&quot;&gt;namespaced view paths&lt;/a&gt; for the view that should be used. The &lt;em&gt;default_full&lt;/em&gt; and &lt;em&gt;default_simple&lt;/em&gt; views are used for the &lt;code&gt;links()&lt;/code&gt; and &lt;code&gt;simpleLinks()&lt;/code&gt; methods, respectively. To change the way those are displayed application-wide, you could assign a new view here.</source>
          <target state="translated">この設定は、使用する必要があるビューのエイリアスと&lt;a href=&quot;../outgoing/views&quot;&gt;名前空間のビューパスを&lt;/a&gt;格納します。&lt;em&gt;default_full&lt;/em&gt;と&lt;em&gt;default_simple&lt;/em&gt;ビューがために使用される &lt;code&gt;links()&lt;/code&gt; と &lt;code&gt;simpleLinks()&lt;/code&gt; メソッド、それぞれ。それらがアプリケーション全体で表示される方法を変更するには、ここで新しいビューを割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="30ea6d62c6853becf0bc70a2c577c74d9533f49c" translate="yes" xml:space="preserve">
          <source>This simple block is converted to the following during parsing:</source>
          <target state="translated">この単純なブロックは、解析中に以下のように変換されます。</target>
        </trans-unit>
        <trans-unit id="2db2b7a8bd40f30e5b9725dea467391ec33e47b0" translate="yes" xml:space="preserve">
          <source>This simply uses phpUnit&amp;rsquo;s own &lt;a href=&quot;https://phpunit.readthedocs.io/en/7.2/assertions.html#assertarraysubset&quot;&gt;assertArraySubset()&lt;/a&gt; method to do the comparison.</source>
          <target state="translated">これは、phpUnit独自の&lt;a href=&quot;https://phpunit.readthedocs.io/en/7.2/assertions.html#assertarraysubset&quot;&gt;assertArraySubset（）&lt;/a&gt;メソッドを使用して比較を行うだけです。</target>
        </trans-unit>
        <trans-unit id="f52501bd9395c8c77102bf1b55a2b054b4832a28" translate="yes" xml:space="preserve">
          <source>This single preference determines whether a thumbnail is created or not.</source>
          <target state="translated">この設定は、サムネイルを作成するかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="948551fb5386fe883028c9ab1a7c815133704782" translate="yes" xml:space="preserve">
          <source>This sounds complex, and on some sites, can definitely be challenging. For many simple sites, though, where all content is served by the same domain (&lt;a href=&quot;http://example.com&quot;&gt;http://example.com&lt;/a&gt;), it is very simple to integrate.</source>
          <target state="translated">これは複雑に聞こえますが、サイトによっては間違いなく難しい場合があります。ただし、すべてのコンテンツが同じドメイン（&lt;a href=&quot;http://example.com&quot;&gt;http://example.com&lt;/a&gt;）によって提供される多くの単純なサイトでは、統合は非常に簡単です。</target>
        </trans-unit>
        <trans-unit id="43c1a3bbe167dd8787e9c30ad2370be3ae3e9c84" translate="yes" xml:space="preserve">
          <source>This specifies the filename that CURL should use to read cookie values from, and to save cookie values to. This is done using the CURL_COOKIEJAR and CURL_COOKIEFILE options. An example:</source>
          <target state="translated">これは、CURL がクッキーの値を読み込んだり、クッキーの値を保存したりするのに使用するファイル名を指定します。これは CURL_COOKIEJAR と CURL_COOKIEFILE オプションを使って行われます。例を示します。</target>
        </trans-unit>
        <trans-unit id="c7e41f7d2d3c5e1be7f516b369d30375db681e45" translate="yes" xml:space="preserve">
          <source>This table presents a comparison of the default routes created by &lt;code&gt;resource()&lt;/code&gt; and &lt;code&gt;presenter()&lt;/code&gt; with their corresponding Controller functions.</source>
          <target state="translated">この表は、 &lt;code&gt;resource()&lt;/code&gt; および &lt;code&gt;presenter()&lt;/code&gt; によって作成されたデフォルトルートと、対応するコントローラー関数との比較を示しています。</target>
        </trans-unit>
        <trans-unit id="6c3a253a77450dfe93aa60af05ef58eedf0fcbd6" translate="yes" xml:space="preserve">
          <source>This table shows the preferences that are available for both types of watermarking (text or overlay)</source>
          <target state="translated">この表は、両方のタイプの透かし(テキストまたはオーバーレイ)で利用可能な環境設定を示しています。</target>
        </trans-unit>
        <trans-unit id="2aace79df5622c85c929842b82dea9b0e4f1efb7" translate="yes" xml:space="preserve">
          <source>This table shows the preferences that are available for the overlay type of watermarking.</source>
          <target state="translated">この表は、透かしのオーバーレイタイプで利用できる環境設定を示しています。</target>
        </trans-unit>
        <trans-unit id="2bef284b7058881a0c58e2ff3ed57d38f7cd84e4" translate="yes" xml:space="preserve">
          <source>This table shows the preferences that are available for the text type of watermarking.</source>
          <target state="translated">この表は、透かしのテキストタイプで利用できる環境設定を示しています。</target>
        </trans-unit>
        <trans-unit id="67cdd491300ba72393a7ae541ae1aa6c9182a23d" translate="yes" xml:space="preserve">
          <source>This timeout period will be used both for an initial connection to the remote server, as well as for getting a response from it. Make sure you set the timeout before calling &lt;code&gt;send_request()&lt;/code&gt;.</source>
          <target state="translated">このタイムアウト期間は、リモートサーバーへの初期接続と、リモートサーバーからの応答の取得の両方に使用されます。 &lt;code&gt;send_request()&lt;/code&gt; を呼び出す前に、必ずタイムアウトを設定してください。</target>
        </trans-unit>
        <trans-unit id="b895d71db44cc35b1104dd6bb3155b42aa7aae46" translate="yes" xml:space="preserve">
          <source>This tutorial did not cover all of the things you might expect of a full-fledged content management system, but it introduced you to the more important topics of routing, writing controllers, and models. We hope this tutorial gave you an insight into some of CodeIgniter&amp;rsquo;s basic design patterns, which you can expand upon.</source>
          <target state="translated">このチュートリアルでは、本格的なコンテンツ管理システムに期待されるすべてのことを取り上げたわけではありませんが、ルーティング、コントローラーの作成、モデルのより重要なトピックを紹介しました。このチュートリアルが、CodeIgniterのいくつかの基本的なデザインパターンについての洞察を提供し、拡張できることを願っています。</target>
        </trans-unit>
        <trans-unit id="4ff1666974a1755ecefbede4f43526ed971da27c" translate="yes" xml:space="preserve">
          <source>This tutorial is intended to introduce you to the CodeIgniter framework and the basic principles of MVC architecture. It will show you how a basic CodeIgniter application is constructed in step-by-step fashion.</source>
          <target state="translated">このチュートリアルは、CodeIgniterフレームワークとMVCアーキテクチャの基本的な原理を紹介することを目的としています。基本的な CodeIgniter アプリケーションがどのようにステップバイステップで構築されているかを紹介します。</target>
        </trans-unit>
        <trans-unit id="21b84cdb295cf304d73582610b043797c6fcec95" translate="yes" xml:space="preserve">
          <source>This tutorial is intended to introduce you to the CodeIgniter4 framework and the basic principles of MVC architecture. It will show you how a basic CodeIgniter application is constructed in a step-by-step fashion.</source>
          <target state="translated">このチュートリアルは CodeIgniter4 フレームワークと MVC アーキテクチャの基本原則を紹介することを目的としています。このチュートリアルでは、基本的な CodeIgniter アプリケーションがどのように構築されているかをステップバイステップで紹介します。</target>
        </trans-unit>
        <trans-unit id="b0d002ac117d420127603a684da177756f27d42c" translate="yes" xml:space="preserve">
          <source>This tutorial will primarily focus on:</source>
          <target state="translated">このチュートリアルでは、主に以下の点に焦点を当てます。</target>
        </trans-unit>
        <trans-unit id="cdb92d8ac94acd4cb0065a9236c247a2200604e9" translate="yes" xml:space="preserve">
          <source>This value can also be translated via a language file.</source>
          <target state="translated">この値は、言語ファイルを介して翻訳することもできます。</target>
        </trans-unit>
        <trans-unit id="4b057f1e2b89c48cba782ade2b3544cb32439fe9" translate="yes" xml:space="preserve">
          <source>This value works with $useTimestamps and $useSoftDeletes to ensure that the correct type of date value gets inserted into the database. By default, this creates DATETIME values, but valid options are: datetime, date, or int (a PHP timestamp). Using &amp;lsquo;useSoftDeletes&amp;rsquo; or &amp;lsquo;useTimestamps&amp;rsquo; with an invalid or missing dateFormat will cause an exception.</source>
          <target state="translated">この値は$ useTimestampsおよび$ useSoftDeletesと連携して、正しいタイプの日付値がデータベースに挿入されるようにします。デフォルトでは、これによりDATETIME値が作成されますが、有効なオプションは、datetime、date、またはint（PHPタイムスタンプ）です。「useSoftDeletes」または「useTimestamps」を無効または欠落しているdateFormatとともに使用すると、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="698b58228ca20763d80f893f722ba2385343c70c" translate="yes" xml:space="preserve">
          <source>This was due to the specifics of how sessions worked, but is now no longer necessary with our new implementation. However, it may happen that your application relied on these values, so here are alternative methods of accessing them:</source>
          <target state="translated">これは、セッションがどのように動作するかの仕様に起因していましたが、新しい実装では必要なくなりました。しかし、アプリケーションがこれらの値に依存していることがあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="24045ca6ac9cb2217c60a9aa49487fc168ba8fd5" translate="yes" xml:space="preserve">
          <source>This will be the first migration for a new site which has a blog. All migrations go in the &lt;strong&gt;app/Database/Migrations/&lt;/strong&gt; directory and have names such as &lt;em&gt;20121031100537_add_blog.php&lt;/em&gt;.</source>
          <target state="translated">これは、ブログを持つ新しいサイトの最初の移行になります。すべての移行は&lt;strong&gt;app / Database / Migrations /&lt;/strong&gt;ディレクトリに&lt;strong&gt;移動し&lt;/strong&gt;、&lt;em&gt;20121031100537_add_blog.php&lt;/em&gt;などの名前が付けられ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="77ef12d8da6ad35ed9d0b24f79795e1a9b41e572" translate="yes" xml:space="preserve">
          <source>This will be the first migration for a new site which has a blog. All migrations go in the &lt;strong&gt;application/migrations/&lt;/strong&gt; directory and have names such as &lt;em&gt;20121031100537_add_blog.php&lt;/em&gt;.</source>
          <target state="translated">これは、ブログを持つ新しいサイトの最初の移行になります。すべての移行は&lt;strong&gt;application / migrations /&lt;/strong&gt;ディレクトリに&lt;strong&gt;移動し&lt;/strong&gt;、&lt;em&gt;20121031100537_add_blog.php&lt;/em&gt;などの名前が付けられ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c2761b927e6e91a33525c717e04d545869f226d9" translate="yes" xml:space="preserve">
          <source>This will create a ZIP with a directory named &amp;ldquo;directory&amp;rdquo; inside, then all sub-directories stored correctly inside that, but will not include the &lt;em&gt;/path/to/your&lt;/em&gt; part of the path.</source>
          <target state="translated">これにより、「directory」という名前のディレクトリを含むZIPが作成され、すべてのサブディレクトリがその中に正しく格納されますが、&lt;em&gt;/ path / to /&lt;/em&gt;パスの一部は含まれません。</target>
        </trans-unit>
        <trans-unit id="c739374afae8e7c51a3d3950ec1c71c79301448f" translate="yes" xml:space="preserve">
          <source>This will first look for a file or directory matching the URI (constructing the full path to each file from the settings of the root and alias directives), and then sends the request to the index.php file along with any arguments.</source>
          <target state="translated">これはまずURIにマッチするファイルやディレクトリを探し(rootディレクティブやエイリアスディレクティブの設定から各ファイルへのフルパスを構築します)、引数を指定してindex.phpファイルにリクエストを送ります。</target>
        </trans-unit>
        <trans-unit id="52d834ebe51c9aae4bd4212c05438f82e9d9af1e" translate="yes" xml:space="preserve">
          <source>This will grab the current request instance and automatically inject it into the Negotiator class.</source>
          <target state="translated">これは現在のリクエストのインスタンスを取得し、それを自動的に Negotiator クラスに注入します。</target>
        </trans-unit>
        <trans-unit id="d19f19552439aebf1ea11dbd0142ec5e24d6bcc0" translate="yes" xml:space="preserve">
          <source>This will install the correct version for your current PHP version. Once that is done, you can run all of the tests for this project by typing:</source>
          <target state="translated">これにより、現在の PHP のバージョンに合った正しいバージョンがインストールされます。これが完了すると、このプロジェクトのすべてのテストを実行することができます。</target>
        </trans-unit>
        <trans-unit id="fc5d60e8642c70df750c83eb9ef53a3ac2f4f085" translate="yes" xml:space="preserve">
          <source>This will launch the server and you can now view your application in your browser at &lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt;.</source>
          <target state="translated">これによりサーバーが起動し、&lt;a href=&quot;http://localhost:8080&quot;&gt;http：// localhost：8080の&lt;/a&gt;ブラウザーでアプリケーションを表示できるようになります。</target>
        </trans-unit>
        <trans-unit id="899e6ed20f4e31d17cdd43b7bfd2605a3e144533" translate="yes" xml:space="preserve">
          <source>This will look for any migrations located at both &lt;strong&gt;APPPATH/Database/Migrations&lt;/strong&gt; and &lt;strong&gt;ROOTPATH/MyCompany/Database/Migrations&lt;/strong&gt;. This makes it simple to include migrations in your re-usable, modular code suites.</source>
          <target state="translated">これにより、&lt;strong&gt;APPPATH / Database / Migrations&lt;/strong&gt;と&lt;strong&gt;ROOTPATH / MyCompany / Database / Migrationsの&lt;/strong&gt;両方にある移行が検​​索されます。これにより、再利用可能なモジュラーコードスイートに移行を簡単に含めることができます。</target>
        </trans-unit>
        <trans-unit id="554ed56bcaa800de28880527a09b79ed869901e3" translate="yes" xml:space="preserve">
          <source>This will retrieve data and convert it to an array. Like this:</source>
          <target state="translated">これはデータを取得して配列に変換します。このように</target>
        </trans-unit>
        <trans-unit id="1c25471c05801b85073a51ccc5408bd1ee15f466" translate="yes" xml:space="preserve">
          <source>This will, by default, display the links in the normal manner, as a series of links, but you can change the display template used by passing in the name of the template as the fourth parameter. More details can be found in the following sections.</source>
          <target state="translated">デフォルトでは、リンクは通常の方法で一連のリンクとして表示されますが、4番目のパラメータとしてテンプレート名を渡すことで、使用する表示テンプレートを変更することができます。詳細は以下のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="2611b6cf3c26deb17f449876763316e52b5c92b6" translate="yes" xml:space="preserve">
          <source>This works exactly the same way as &lt;code&gt;$builder-&amp;gt;getCompiledInsert()&lt;/code&gt; except that it produces a DELETE SQL string instead of an INSERT SQL string.</source>
          <target state="translated">これは、 &lt;code&gt;$builder-&amp;gt;getCompiledInsert()&lt;/code&gt; 文字列の代わりにDELETESQL文字列を生成することを除いて、$ builder-&amp;gt; getCompiledInsert（）とまったく同じように機能します。</target>
        </trans-unit>
        <trans-unit id="52aaeda114a57d3161db3407301cecb09b5069be" translate="yes" xml:space="preserve">
          <source>This works exactly the same way as &lt;code&gt;$builder-&amp;gt;getCompiledInsert()&lt;/code&gt; except that it produces an UPDATE SQL string instead of an INSERT SQL string.</source>
          <target state="translated">これは、 &lt;code&gt;$builder-&amp;gt;getCompiledInsert()&lt;/code&gt; 文字列の代わりにUPDATESQL文字列を生成することを除いて、$ builder-&amp;gt; getCompiledInsert（）とまったく同じように機能します。</target>
        </trans-unit>
        <trans-unit id="e721a52372f9610ac520c526bae76c786eaee878" translate="yes" xml:space="preserve">
          <source>This works exactly the same way as &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_insert()&lt;/code&gt; except that it produces a DELETE SQL string instead of an INSERT SQL string.</source>
          <target state="translated">これは、INSERT SQL文字列ではなくDELETE SQL文字列を生成することを除いて、 &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_insert()&lt;/code&gt; とまったく同じように機能します。</target>
        </trans-unit>
        <trans-unit id="a63f354542997f0ba925f6f90bb6204bfd31a8a5" translate="yes" xml:space="preserve">
          <source>This works exactly the same way as &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_insert()&lt;/code&gt; except that it produces an UPDATE SQL string instead of an INSERT SQL string.</source>
          <target state="translated">これは、INSERT SQL文字列ではなくUPDATE SQL文字列を生成することを除いて、 &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_insert()&lt;/code&gt; とまったく同じように機能します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
