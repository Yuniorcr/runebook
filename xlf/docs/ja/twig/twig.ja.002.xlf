<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="twig">
    <body>
      <group id="twig">
        <trans-unit id="d6e73a9ab58564b6c6f9d89b412dfc49be175ef0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;country_name&lt;/code&gt; filter is part of the &lt;code&gt;IntlExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;country_name&lt;/code&gt; フィルタは、の一部である &lt;code&gt;IntlExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="baae1e705722afd6d9de4f70375ee459d79aedad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;country_name&lt;/code&gt; filter returns the country name given its ISO-3166 two-letter code:</source>
          <target state="translated">&lt;code&gt;country_name&lt;/code&gt; フィルタは、そのISO-3166の2文字コードを指定した国の名前を返します。</target>
        </trans-unit>
        <trans-unit id="4eb4708ec7a7d053da724118296fe14e3d88ce0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;country_timezones&lt;/code&gt; function is part of the &lt;code&gt;IntlExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;country_timezones&lt;/code&gt; の機能は、の一部です &lt;code&gt;IntlExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="451b2fa6b1745235608ec04bc0edd95ca7fc98e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;country_timezones&lt;/code&gt; function returns the names of the timezones associated with a given country code:</source>
          <target state="translated">&lt;code&gt;country_timezones&lt;/code&gt; の関数は、指定した国コードに関連付けられたタイムゾーンの名前を返します。</target>
        </trans-unit>
        <trans-unit id="17da35633b02f3f8923db8a9dfa3abd9e3824453" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;currency_name&lt;/code&gt; filter is part of the &lt;code&gt;IntlExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;currency_name&lt;/code&gt; フィルタは、の一部である &lt;code&gt;IntlExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="d8ad337be122897576f1c7c8442e62aa0d974c5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;currency_name&lt;/code&gt; filter returns the currency name given its three-letter code:</source>
          <target state="translated">&lt;code&gt;currency_name&lt;/code&gt; フィルタは、その三文字コードを指定した通貨名を返します。</target>
        </trans-unit>
        <trans-unit id="818320d720aef2849eabeb71c3785eb4fd6eaf90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;currency_symbol&lt;/code&gt; filter is part of the &lt;code&gt;IntlExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;currency_symbol&lt;/code&gt; フィルタは、の一部である &lt;code&gt;IntlExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="9ff7e0ffb17750ed274919bc55639c448757fb36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;currency_symbol&lt;/code&gt; filter returns the currency symbol given its three-letter code:</source>
          <target state="translated">&lt;code&gt;currency_symbol&lt;/code&gt; フィルタは、その三文字コード指定された通貨記号を返します。</target>
        </trans-unit>
        <trans-unit id="dd1e20413f0e5c32410d548c8841be407e164367" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cycle&lt;/code&gt; function cycles on an array of values:</source>
          <target state="translated">&lt;code&gt;cycle&lt;/code&gt; 値の配列に機能サイクル：</target>
        </trans-unit>
        <trans-unit id="06e9455d37b0946337aa055c91f455c2e6afc222" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data_uri&lt;/code&gt; filter generates a URL using the data scheme as defined in RFC 2397:</source>
          <target state="translated">&lt;code&gt;data_uri&lt;/code&gt; フィルタは、RFC 2397で定義されているデータスキームを使用してURLを生成します。</target>
        </trans-unit>
        <trans-unit id="20d313cb8c9ffa91a76c5949b9bca037ca98f955" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data_uri&lt;/code&gt; filter is part of the &lt;code&gt;HtmlExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;data_uri&lt;/code&gt; フィルタは、の一部である &lt;code&gt;HtmlExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="77eb234d788844ca1f03526d092faaf1a5cab09c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;date&lt;/code&gt; filter accepts strings (it must be in a format supported by the &lt;a href=&quot;https://secure.php.net/strtotime&quot;&gt;strtotime&lt;/a&gt; function), &lt;a href=&quot;https://secure.php.net/DateTime&quot;&gt;DateTime&lt;/a&gt; instances, or &lt;a href=&quot;https://secure.php.net/DateInterval&quot;&gt;DateInterval&lt;/a&gt; instances. For instance, to display the current date, filter the word &quot;now&quot;:</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; フィルタは、文字列（それはによってサポートされる形式でなければならない受け入れる&lt;a href=&quot;https://secure.php.net/strtotime&quot;&gt;のstrtotimeの&lt;/a&gt;機能）、&lt;a href=&quot;https://secure.php.net/DateTime&quot;&gt;日時の&lt;/a&gt;インスタンス、または&lt;a href=&quot;https://secure.php.net/DateInterval&quot;&gt;DateInterval&lt;/a&gt;インスタンス。たとえば、現在の日付を表示するには、「今」という単語をフィルタリングします。</target>
        </trans-unit>
        <trans-unit id="a6595d850d802161e5946a6f1a03ba21090d9378" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;date&lt;/code&gt; filter accepts strings (it must be in a format supported by the &lt;a href=&quot;https://secure.php.net/strtotime&quot;&gt;strtotime&lt;/a&gt; function), &lt;a href=&quot;https://secure.php.net/DateTime&quot;&gt;DateTime&lt;/a&gt; instances, or &lt;a href=&quot;https://secure.php.net/DateInterval&quot;&gt;DateInterval&lt;/a&gt; instances. For instance, to display the current date, filter the word &amp;ldquo;now&amp;rdquo;:</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; フィルタは、文字列（それはによってサポートされる形式でなければならない受け入れる&lt;a href=&quot;https://secure.php.net/strtotime&quot;&gt;のstrtotimeの&lt;/a&gt;機能）、&lt;a href=&quot;https://secure.php.net/DateTime&quot;&gt;日時の&lt;/a&gt;インスタンス、または&lt;a href=&quot;https://secure.php.net/DateInterval&quot;&gt;DateInterval&lt;/a&gt;インスタンス。たとえば、現在の日付を表示するには、「今」という単語をフィルタリングします。</target>
        </trans-unit>
        <trans-unit id="7796966e97e4813e1f2e13803584baaed805c901" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;date&lt;/code&gt; filter formats a date to a given format:</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; フィルタは、与えられたフォーマットに日付をフォーマット：</target>
        </trans-unit>
        <trans-unit id="c85f8b701a4fc4c98a64bf1b9ada081cc2ccc938" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;date_modify&lt;/code&gt; filter accepts strings (it must be in a format supported by the &lt;a href=&quot;https://secure.php.net/strtotime&quot;&gt;strtotime&lt;/a&gt; function) or &lt;a href=&quot;https://secure.php.net/DateTime&quot;&gt;DateTime&lt;/a&gt; instances. You can combine it with the &lt;a href=&quot;date&quot;&gt;date&lt;/a&gt; filter for formatting.</source>
          <target state="translated">&lt;code&gt;date_modify&lt;/code&gt; フィルタは、文字列を受け付ける（それによってサポートされる形式でなければならない&lt;a href=&quot;https://secure.php.net/strtotime&quot;&gt;のstrtotimeの&lt;/a&gt;又は機能）&lt;a href=&quot;https://secure.php.net/DateTime&quot;&gt;のDateTime&lt;/a&gt;インスタンス。&lt;a href=&quot;date&quot;&gt;日付&lt;/a&gt;フィルターと組み合わせてフォーマットすることができます。</target>
        </trans-unit>
        <trans-unit id="75a1b9c27397952f9eb08576ec6b53480c103632" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;date_modify&lt;/code&gt; filter accepts strings (it must be in a format supported by the &lt;a href=&quot;https://secure.php.net/strtotime&quot;&gt;strtotime&lt;/a&gt; function) or &lt;a href=&quot;https://secure.php.net/DateTime&quot;&gt;DateTime&lt;/a&gt; instances. You can easily combine it with the &lt;a href=&quot;date&quot;&gt;date&lt;/a&gt; filter for formatting.</source>
          <target state="translated">&lt;code&gt;date_modify&lt;/code&gt; フィルタは、文字列を受け付ける（それによってサポートされる形式でなければならない&lt;a href=&quot;https://secure.php.net/strtotime&quot;&gt;のstrtotimeの&lt;/a&gt;又は機能）&lt;a href=&quot;https://secure.php.net/DateTime&quot;&gt;のDateTime&lt;/a&gt;インスタンス。これを&lt;a href=&quot;date&quot;&gt;日付&lt;/a&gt;フィルターと簡単に組み合わせてフォーマットできます。</target>
        </trans-unit>
        <trans-unit id="c133f2c7161b16391bb7e622b23faee600ae8b62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;date_modify&lt;/code&gt; filter modifies a date with a given modifier string:</source>
          <target state="translated">&lt;code&gt;date_modify&lt;/code&gt; フィルタは、指定された修飾子文字列で日付を変更します。</target>
        </trans-unit>
        <trans-unit id="c46107f2fa75538d6f369cb980d446e862b995a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;default&lt;/code&gt; filter returns the passed default value if the value is undefined or empty, otherwise the value of the variable:</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 値は不定または空である場合、フィルタは、変数のそれ以外の場合は値を渡されるデフォルト値を戻します。</target>
        </trans-unit>
        <trans-unit id="1b145beb33958c6428a1246aa85b0387d0e2bbac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;display()&lt;/code&gt; method is a shortcut to output the rendered template.</source>
          <target state="translated">&lt;code&gt;display()&lt;/code&gt; メソッドは、レンダリングされたテンプレート出力へのショートカットです。</target>
        </trans-unit>
        <trans-unit id="df01a343602c9310d484d4698a78c13186a546a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;display()&lt;/code&gt; method is a shortcut to output the template directly.</source>
          <target state="translated">&lt;code&gt;display()&lt;/code&gt; メソッドは、テンプレートに直接出力へのショートカットです。</target>
        </trans-unit>
        <trans-unit id="692781c0b9584a9043a42e010e10ebe0dd72cc91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;do&lt;/code&gt; tag works exactly like the regular variable expression (&lt;code&gt;{{ ...
}}&lt;/code&gt;) just that it doesn&amp;rsquo;t print anything:</source>
          <target state="translated">&lt;code&gt;do&lt;/code&gt; タグは（正確に通常の変数の表現のように動作します &lt;code&gt;{{ ... }}&lt;/code&gt; それは何も印刷されないだけであること）：</target>
        </trans-unit>
        <trans-unit id="948e3b0df1dec5c2763406af28cb197981dba3d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;do&lt;/code&gt; tag works exactly like the regular variable expression (&lt;code&gt;{{ ...
}}&lt;/code&gt;) just that it doesn't print anything:</source>
          <target state="translated">&lt;code&gt;do&lt;/code&gt; タグは（正確に通常の変数の表現のように動作します &lt;code&gt;{{ ... }}&lt;/code&gt; それは何も印刷されないだけであること）：</target>
        </trans-unit>
        <trans-unit id="0c171a70d9a57ca5304be00a542f3215b6e32c2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dump&lt;/code&gt; function dumps information about a template variable. This is mostly useful to debug a template that does not behave as expected by introspecting its variables:</source>
          <target state="translated">&lt;code&gt;dump&lt;/code&gt; 機能は、テンプレート変数に関する情報をダンプします。これは主に、変数をイントロスペクトすることで期待どおりに動作しないテンプレートをデバッグするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="60eac5692d6576266e138dcf1a9ab556960e564e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dump&lt;/code&gt; function is not available by default. You must add the &lt;code&gt;Twig_Extension_Debug&lt;/code&gt; extension explicitly when creating your Twig environment:</source>
          <target state="translated">&lt;code&gt;dump&lt;/code&gt; 機能はデフォルトでは使用できません。Twig環境を作成するときに、 &lt;code&gt;Twig_Extension_Debug&lt;/code&gt; 拡張機能を明示的に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="911372f463777c2743a1992c910fe5992fbab3f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dump&lt;/code&gt; function is not available by default. You must add the &lt;code&gt;\Twig\Extension\DebugExtension&lt;/code&gt; extension explicitly when creating your Twig environment:</source>
          <target state="translated">&lt;code&gt;dump&lt;/code&gt; 機能はデフォルトでは使用できません。Twig環境を作成するときは、 &lt;code&gt;\Twig\Extension\DebugExtension&lt;/code&gt; 拡張機能を明示的に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="f348cc4aaa6d73bc36bb534cab74eee413e23103" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;embed&lt;/code&gt; tag combines the behavior of &lt;a href=&quot;include&quot;&gt;include&lt;/a&gt; and &lt;a href=&quot;extends&quot;&gt;extends&lt;/a&gt;. It allows you to include another template&amp;rsquo;s contents, just like &lt;code&gt;include&lt;/code&gt; does. But it also allows you to override any block defined inside the included template, like when extending a template.</source>
          <target state="translated">&lt;code&gt;embed&lt;/code&gt; タグはの行動兼ね備え&lt;a href=&quot;include&quot;&gt;含める&lt;/a&gt;と&lt;a href=&quot;extends&quot;&gt;拡張を&lt;/a&gt;。includeと同じよう &lt;code&gt;include&lt;/code&gt; 、別のテンプレートのコンテンツを含めることができます。ただし、テンプレートを拡張する場合のように、含まれているテンプレート内で定義されているブロックをオーバーライドすることもできます。</target>
        </trans-unit>
        <trans-unit id="ef6624dfe9784454b6c556591ff6373a4d0feb76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;embed&lt;/code&gt; tag combines the behaviour of &lt;a href=&quot;include&quot;&gt;include&lt;/a&gt; and &lt;a href=&quot;extends&quot;&gt;extends&lt;/a&gt;. It allows you to include another template's contents, just like &lt;code&gt;include&lt;/code&gt; does. But it also allows you to override any block defined inside the included template, like when extending a template.</source>
          <target state="translated">&lt;code&gt;embed&lt;/code&gt; タグはの行動兼ね備え&lt;a href=&quot;include&quot;&gt;含める&lt;/a&gt;と&lt;a href=&quot;extends&quot;&gt;拡張を&lt;/a&gt;。includeと同じよう &lt;code&gt;include&lt;/code&gt; 、別のテンプレートのコンテンツを含めることができます。ただし、テンプレートを拡張するときのように、含まれているテンプレート内で定義されているブロックをオーバーライドすることもできます。</target>
        </trans-unit>
        <trans-unit id="c39a2c1665a60532d4beca89d0c0ac1d98bf11b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;embed&lt;/code&gt; tag takes the exact same arguments as the &lt;code&gt;include&lt;/code&gt; tag:</source>
          <target state="translated">&lt;code&gt;embed&lt;/code&gt; としてタグがまったく同じ引数を取り &lt;code&gt;include&lt;/code&gt; タグを：</target>
        </trans-unit>
        <trans-unit id="e21db1b726db4b05a28f478595fb7adb621dfddb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;embed&lt;/code&gt; tag takes the idea of template inheritance to the level of content fragments. While template inheritance allows for &quot;document skeletons&quot;, which are filled with life by child templates, the &lt;code&gt;embed&lt;/code&gt; tag allows you to create &quot;skeletons&quot; for smaller units of content and re-use and fill them anywhere you like.</source>
          <target state="translated">&lt;code&gt;embed&lt;/code&gt; タグは、コンテンツの断片のレベルにテンプレートの継承の考え方をとります。テンプレートの継承では「ドキュメントスケルトン」が許可されますが、子テンプレートによって生命で満たされますが、 &lt;code&gt;embed&lt;/code&gt; タグを使用すると、コンテンツの小さな単位の「スケルトン」を作成し、再利用して好きな場所に埋め込むことができます。</target>
        </trans-unit>
        <trans-unit id="9cd64e128274e0b3a8b8bd9c697b0271f97e0e84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;embed&lt;/code&gt; tag takes the idea of template inheritance to the level of content fragments. While template inheritance allows for &amp;ldquo;document skeletons&amp;rdquo;, which are filled with life by child templates, the &lt;code&gt;embed&lt;/code&gt; tag allows you to create &amp;ldquo;skeletons&amp;rdquo; for smaller units of content and re-use and fill them anywhere you like.</source>
          <target state="translated">&lt;code&gt;embed&lt;/code&gt; タグは、コンテンツの断片のレベルにテンプレートの継承の考え方をとります。テンプレートの継承により、子テンプレートによって生命が満たされる「ドキュメントスケルトン」が可能になりますが、 &lt;code&gt;embed&lt;/code&gt; タグを使用すると、コンテンツの小さな単位の「スケルトン」を作成し、好きな場所で再利用して埋めることができます。</target>
        </trans-unit>
        <trans-unit id="157e33f77b4422d38f7d255c2607c6b805cf5182" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;escape&lt;/code&gt; filter can also be used in other contexts than HTML thanks to an optional argument which defines the escaping strategy to use:</source>
          <target state="translated">&lt;code&gt;escape&lt;/code&gt; フィルタは、使用に逃げる戦略を定義するオプションの引数にHTMLのおかげ以外のコンテキストで使用することができます。</target>
        </trans-unit>
        <trans-unit id="4b054688f3b6d5e5d45b3d622daf62124750c2ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;escape&lt;/code&gt; filter escapes a string for safe insertion into the final output. It supports different escaping strategies depending on the template context.</source>
          <target state="translated">&lt;code&gt;escape&lt;/code&gt; フィルタは、最終的な出力への安全な挿入のための文字列をエスケープします。テンプレートのコンテキストに応じて、さまざまなエスケープ戦略をサポートします。</target>
        </trans-unit>
        <trans-unit id="f6ccb56d36596943c0f81f78c72b183256ee769e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;escape&lt;/code&gt; filter escapes a string using strategies that depend on the context.</source>
          <target state="translated">&lt;code&gt;escape&lt;/code&gt; フィルタは、コンテキストに依存戦略を使用して文字列をエスケープします。</target>
        </trans-unit>
        <trans-unit id="8329a9fc207d1d41231886266f6716c10a2f9586" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;escape&lt;/code&gt; filter supports the following escaping strategies for HTML documents:</source>
          <target state="translated">&lt;code&gt;escape&lt;/code&gt; フィルタは、HTMLドキュメントの以下のエスケープ戦略をサポートしています。</target>
        </trans-unit>
        <trans-unit id="ac5d7328582ac96c6d97cef791b4d7806906c198" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;escape&lt;/code&gt; filter supports the following escaping strategies:</source>
          <target state="translated">&lt;code&gt;escape&lt;/code&gt; フィルタは、次のエスケープ戦略をサポートしています。</target>
        </trans-unit>
        <trans-unit id="bde417128526d71fede9fb78614f2a447ea32142" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;escaper&lt;/code&gt; extension adds automatic output escaping to Twig. It defines a tag, &lt;code&gt;autoescape&lt;/code&gt;, and a filter, &lt;code&gt;raw&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;escaper&lt;/code&gt; 拡張子が小枝に逃げる自動出力を追加します。これは、タグ &lt;code&gt;autoescape&lt;/code&gt; とフィルター &lt;code&gt;raw&lt;/code&gt; を定義します。</target>
        </trans-unit>
        <trans-unit id="bffba75408b4ea4103cc0fde4ba7531e9090e1b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extends&lt;/code&gt; tag can be used to extend a template from another one.</source>
          <target state="translated">&lt;code&gt;extends&lt;/code&gt; タグは、別のものからテンプレートを拡張するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="817d160418c5d5d0f0b110915bfd12116b87f7a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extends&lt;/code&gt; tag is the key here. It tells the template engine that this template &quot;extends&quot; another template. When the template system evaluates this template, first it locates the parent. The extends tag should be the first tag in the template.</source>
          <target state="translated">ここで &lt;code&gt;extends&lt;/code&gt; タグが重要です。これは、このテンプレートが別のテンプレートを「拡張」することをテンプレートエンジンに通知します。テンプレートシステムがこのテンプレートを評価するとき、最初に親を見つけます。extendsタグは、テンプレートの最初のタグである必要があります。</target>
        </trans-unit>
        <trans-unit id="f3ca2beb2d3b306051f8818f3c54a99aab29b80a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extends&lt;/code&gt; tag is the key here. It tells the template engine that this template &amp;ldquo;extends&amp;rdquo; another template. When the template system evaluates this template, first it locates the parent. The extends tag should be the first tag in the template.</source>
          <target state="translated">&lt;code&gt;extends&lt;/code&gt; タグがここで重要です。このテンプレートが別のテンプレートを「拡張」することをテンプレートエンジンに通知します。テンプレートシステムがこのテンプレートを評価するとき、最初に親を見つけます。extendsタグは、テンプレートの最初のタグである必要があります。</target>
        </trans-unit>
        <trans-unit id="99de059f2b885c80521e786d9ef5666b41c6e75a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; filter filters elements of a sequence or a mapping using an arrow function. The arrow function receives the value of the sequence or mapping:</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; フィルタは、シーケンスの要素または矢印機能を使用してマッピングをフィルタリングします。矢印関数は、シーケンスまたはマッピングの値を受け取ります。</target>
        </trans-unit>
        <trans-unit id="88f5632df3f44be1b9cb73c817fec2a161f90776" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;first&lt;/code&gt; filter returns the first &quot;element&quot; of a sequence, a mapping, or a string:</source>
          <target state="translated">&lt;code&gt;first&lt;/code&gt; フィルタは、シーケンスの最初の「要素」、マッピング、または文字列を返します。</target>
        </trans-unit>
        <trans-unit id="3cb4fa6aa3c6157efb1d37b3ea85c3d13b05f9dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;first&lt;/code&gt; filter returns the first &amp;ldquo;element&amp;rdquo; of a sequence, a mapping, or a string:</source>
          <target state="translated">&lt;code&gt;first&lt;/code&gt; フィルタは、シーケンスの最初の「要素」、マッピング、または文字列を返します。</target>
        </trans-unit>
        <trans-unit id="361510c9c5bdc43866136662fe460a8219f82b32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flush&lt;/code&gt; tag tells Twig to flush the output buffer:</source>
          <target state="translated">&lt;code&gt;flush&lt;/code&gt; タグは、出力バッファをフラッシュする小枝を伝えます：</target>
        </trans-unit>
        <trans-unit id="a3dc5950d236340577fe0c9778a003f1c3084766" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format&lt;/code&gt; filter formats a given string by replacing the placeholders (placeholders follows the &lt;a href=&quot;https://secure.php.net/sprintf&quot;&gt;sprintf&lt;/a&gt; notation):</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; フィルタ（プレースホルダは、次のプレースホルダを置換することによって指定された文字列をフォーマット&lt;a href=&quot;https://secure.php.net/sprintf&quot;&gt;はsprintfと&lt;/a&gt;表記）。</target>
        </trans-unit>
        <trans-unit id="0060cb576773b132102229089c4804de694b1753" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format_currency&lt;/code&gt; filter formats a number as a currency:</source>
          <target state="translated">&lt;code&gt;format_currency&lt;/code&gt; のフィルタは、通貨として番号をフォーマット：</target>
        </trans-unit>
        <trans-unit id="54823fa3f9db56a155f604d6568c8081b17ce1fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format_currency&lt;/code&gt; filter is part of the &lt;code&gt;IntlExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;format_currency&lt;/code&gt; のフィルタは、の一部である &lt;code&gt;IntlExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="924c0128027d6c80c551f84acad682db10dfbdc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format_date&lt;/code&gt; filter formats a date. It behaves in the exact same way as the &lt;a href=&quot;format_datetime&quot;&gt;format_datetime&lt;/a&gt; filter, but without the time.</source>
          <target state="translated">&lt;code&gt;format_date&lt;/code&gt; フィルタは、日付をフォーマットします。&lt;a href=&quot;format_datetime&quot;&gt;format_datetime&lt;/a&gt;フィルターとまったく同じように動作しますが、時間はありません。</target>
        </trans-unit>
        <trans-unit id="8bbb69ff9d600765de4e689d2381ab00aedfef8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format_date&lt;/code&gt; filter is part of the &lt;code&gt;IntlExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;format_date&lt;/code&gt; フィルタは、の一部である &lt;code&gt;IntlExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="ae6f96d8e94e19c6ce618e9ad891ee9830b98b2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format_datetime&lt;/code&gt; filter formats a date time:</source>
          <target state="translated">&lt;code&gt;format_datetime&lt;/code&gt; のフィルタは、日付時刻をフォーマット：</target>
        </trans-unit>
        <trans-unit id="2f7275e000fb9d7d41ad05c1b68128f866f1e0f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format_datetime&lt;/code&gt; filter is part of the &lt;code&gt;IntlExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;format_datetime&lt;/code&gt; のフィルタは、の一部である &lt;code&gt;IntlExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="b7a5689fe3b702246b7ed020014de49d5bb63cc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format_number&lt;/code&gt; filter formats a number:</source>
          <target state="translated">&lt;code&gt;format_number&lt;/code&gt; のフィルタは、番号をフォーマット：</target>
        </trans-unit>
        <trans-unit id="0097e17be14b2da96decd67a2aa93f473dade443" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format_number&lt;/code&gt; filter is part of the &lt;code&gt;IntlExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;format_number&lt;/code&gt; のフィルタは、の一部である &lt;code&gt;IntlExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="4820684caa952278e280437707403bdb8d02a029" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format_time&lt;/code&gt; filter formats a time. It behaves in the exact same way as the &lt;a href=&quot;format_datetime&quot;&gt;format_datetime&lt;/a&gt; filter, but without the date.</source>
          <target state="translated">&lt;code&gt;format_time&lt;/code&gt; のフィルタは、時間をフォーマットします。&lt;a href=&quot;format_datetime&quot;&gt;format_datetime&lt;/a&gt;フィルターとまったく同じように動作しますが、日付はありません。</target>
        </trans-unit>
        <trans-unit id="6e9a5249645d4df2c2b76464f7ebf5a754a4d314" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format_time&lt;/code&gt; filter is part of the &lt;code&gt;IntlExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;format_time&lt;/code&gt; のフィルタは、の一部である &lt;code&gt;IntlExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="bbb417d50ceb0df7bcca0fa55a5c0aa697ce98f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;from&lt;/code&gt; tag imports &lt;a href=&quot;macro&quot;&gt;macro&lt;/a&gt; names into the current namespace. The tag is documented in detail in the documentation for the &lt;a href=&quot;import&quot;&gt;import&lt;/a&gt; tag.</source>
          <target state="translated">タグの輸入 &lt;code&gt;from&lt;/code&gt; &lt;a href=&quot;macro&quot;&gt;マクロ&lt;/a&gt;現在の名前空間に名前。タグについては、&lt;a href=&quot;import&quot;&gt;インポート&lt;/a&gt;タグのドキュメントで詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="8355c81f93233fe31e28e4e640c2645bc38654a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;from&lt;/code&gt; tag imports &lt;a href=&quot;macro&quot;&gt;macro&lt;/a&gt; names into the current namespace. The tag is documented in detail in the documentation for the &lt;a href=&quot;macro&quot;&gt;macro&lt;/a&gt; tag.</source>
          <target state="translated">タグをインポート&lt;a href=&quot;macro&quot;&gt;マクロ&lt;/a&gt;現在の名前空間に名前。タグは、のドキュメントに詳細に文書化され&lt;a href=&quot;macro&quot;&gt;たマクロ&lt;/a&gt;タグ。 &lt;code&gt;from&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a68801fb748ab295cba3984228f16e6c585c011f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getOperators()&lt;/code&gt; methods lets you add new operators. Here is how to add &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;||&lt;/code&gt;, and &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; operators:</source>
          <target state="translated">&lt;code&gt;getOperators()&lt;/code&gt; メソッドを使用すると、新しい演算子を追加することができます。追加方法はこちら &lt;code&gt;!&lt;/code&gt; 、 &lt;code&gt;||&lt;/code&gt; 、および &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 演算子：</target>
        </trans-unit>
        <trans-unit id="9e56a14901c16daf98e275363a9a7f3315ddd506" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getOperators()&lt;/code&gt; methods lets you add new operators. Here is how to add the &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;||&lt;/code&gt;, and &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; operators:</source>
          <target state="translated">&lt;code&gt;getOperators()&lt;/code&gt; メソッドを使用すると、新しい演算子を追加することができます。 &lt;code&gt;!&lt;/code&gt; を追加する方法は次のとおりです。、 &lt;code&gt;||&lt;/code&gt; 、および &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 演算子：</target>
        </trans-unit>
        <trans-unit id="168a76bbaa0bf4b00f9b4ae6503fd3417b7cbf84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getSourceContext()&lt;/code&gt; method must return an instance of &lt;code&gt;Twig_Source&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getSourceContext()&lt;/code&gt; メソッドは、インスタンスを返す必要があり &lt;code&gt;Twig_Source&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="becc57326f9e95644fc8740dccbc7102dd8aca99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getSourceContext()&lt;/code&gt; method must return an instance of &lt;code&gt;\Twig\Source&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getSourceContext()&lt;/code&gt; メソッドは、のインスタンスを返す必要があります &lt;code&gt;\Twig\Source&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac4d775157865531855cbaeed2a36af803a54709" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getTag()&lt;/code&gt; method must return the tag we want to parse, here &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getTag()&lt;/code&gt; メソッドは、我々がここで、解析したいタグを返さなければなりません &lt;code&gt;set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="661164ace9ec8a163d8ad3363886805db865b969" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getTests()&lt;/code&gt; method lets you add new test functions:</source>
          <target state="translated">の &lt;code&gt;getTests()&lt;/code&gt; メソッドを使用すると、新しいテスト機能を追加することができます：</target>
        </trans-unit>
        <trans-unit id="c30f13a8ea9131d21bf3ea67fba131af55743841" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;html_classes&lt;/code&gt; function is part of the &lt;code&gt;HtmlExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;html_classes&lt;/code&gt; の機能は、の一部です &lt;code&gt;HtmlExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="7fcb9d090c981f211f73528acbee0d89e89712f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;html_classes&lt;/code&gt; function returns a string by conditionally joining class names together:</source>
          <target state="translated">&lt;code&gt;html_classes&lt;/code&gt; の機能は条件付きで一緒にクラス名を結合して文字列を返します。</target>
        </trans-unit>
        <trans-unit id="f1518e27ca83e2ff692f50d32593dce7647c25e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;html_to_markdown&lt;/code&gt; filter converts a block of HTML to Markdown:</source>
          <target state="translated">&lt;code&gt;html_to_markdown&lt;/code&gt; のフィルタは、マークダウンにHTMLのブロックを変換します。</target>
        </trans-unit>
        <trans-unit id="d1dc2bbe7af75563fb2b86c6885882ce786301d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;html_to_markdown&lt;/code&gt; filter is part of the &lt;code&gt;MarkdownExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;html_to_markdown&lt;/code&gt; のフィルタは、の一部である &lt;code&gt;MarkdownExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="f2f0fb6d7b36b47835b1e9599edddae47fa30542" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;if&lt;/code&gt; statement in Twig is comparable with the if statements of PHP.</source>
          <target state="translated">の &lt;code&gt;if&lt;/code&gt; 小枝でのステートメントは、PHPのif文と同等です。</target>
        </trans-unit>
        <trans-unit id="89194f8c3490cb4f1adc0e5f2f2255ace6817113" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;import&lt;/code&gt; tag imports &lt;a href=&quot;macro&quot;&gt;macro&lt;/a&gt; names in a local variable. The tag is documented in detail in the documentation for the &lt;a href=&quot;macro&quot;&gt;macro&lt;/a&gt; tag.</source>
          <target state="translated">&lt;code&gt;import&lt;/code&gt; タグは、インポート&lt;a href=&quot;macro&quot;&gt;マクロ&lt;/a&gt;ローカル変数に名前を。タグは、のドキュメントに詳細に文書化され&lt;a href=&quot;macro&quot;&gt;たマクロ&lt;/a&gt;タグ。</target>
        </trans-unit>
        <trans-unit id="61b1df8387204cf8851a30a6541a8dc4600e4c96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;in&lt;/code&gt; operator performs containment test.</source>
          <target state="translated">の &lt;code&gt;in&lt;/code&gt; オペレータ行う封じ込め試験。</target>
        </trans-unit>
        <trans-unit id="3f3d783345e5374e19ae95f57e346fc7bc1d501d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;in&lt;/code&gt; operator performs containment test. It returns &lt;code&gt;true&lt;/code&gt; if the left operand is contained in the right:</source>
          <target state="translated">オペレータ行う封じ込め試験。左側のオペランドが右側に含まれている場合は &lt;code&gt;true&lt;/code&gt; を返します。 &lt;code&gt;in&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9391393f4882addd5a8576922a42fdc0e1eba2c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; function does not impose any specific order for arguments thanks to &lt;a href=&quot;../templates#named-arguments&quot;&gt;named arguments&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; 関数は引数のおかげ用の任意の特定の順序を課していない&lt;a href=&quot;../templates#named-arguments&quot;&gt;名前付き引数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fac2fc3431937c9388da35b8a5224aedcf9615b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; function is more &amp;ldquo;composable&amp;rdquo;:</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; 機能は、より多くの「構成可能」です。</target>
        </trans-unit>
        <trans-unit id="afac8fc85353ccff7bf2a26abd2b9666ee6399c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; function is semantically more &amp;ldquo;correct&amp;rdquo; (including a template outputs its rendered contents in the current scope; a tag should not display anything);</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; 関数は意味的に複数（;タグは何も表示されてはならない現在のスコープ内のその可視化コンテンツ出力テンプレートを含む）を「正しい」です。</target>
        </trans-unit>
        <trans-unit id="9d22f5f290a7b8a1fed18d253ad4143ebaac31e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; function returns the rendered content of a template:</source>
          <target state="translated">の &lt;code&gt;include&lt;/code&gt; 機能は、テンプレートのレンダリングされたコンテンツを返します。</target>
        </trans-unit>
        <trans-unit id="cb164c17be978baed8f58aa5c67568ca8e6c522d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; statement includes a template and outputs the rendered content of that file:</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; 文はテンプレートが含まれており、そのファイルのレンダリングされたコンテンツを出力します。</target>
        </trans-unit>
        <trans-unit id="d520db4926c547e24c082c125ff4393aaebbe16c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; statement includes a template and returns the rendered content of that file into the current namespace:</source>
          <target state="translated">の &lt;code&gt;include&lt;/code&gt; 文はテンプレートが含まれており、現在の名前空間に、そのファイルのレンダリングされたコンテンツを返します。</target>
        </trans-unit>
        <trans-unit id="72c4ace811779f218f846ba9f0a2898c3009ab4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inky_to_html&lt;/code&gt; filter is part of the &lt;code&gt;InkyExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;inky_to_html&lt;/code&gt; のフィルタは、の一部である &lt;code&gt;InkyExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="edb78d563c084f28fb7f59d9a2d6ad7efc83285a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inky_to_html&lt;/code&gt; filter processes an &lt;a href=&quot;https://github.com/zurb/inky&quot;&gt;inky email template&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;inky_to_html&lt;/code&gt; のフィルタが処理&lt;a href=&quot;https://github.com/zurb/inky&quot;&gt;真っ黒電子メールテンプレートを&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="92fe7990852f029d3efc327a4ffc8d29309bee00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inline_css&lt;/code&gt; filter inline CSS styles in HTML documents:</source>
          <target state="translated">&lt;code&gt;inline_css&lt;/code&gt; HTMLドキュメントのCSSスタイルのインラインフィルター：</target>
        </trans-unit>
        <trans-unit id="8fdb7312d2a51a37c90ee29017c426224ef76a45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inline_css&lt;/code&gt; filter is part of the &lt;code&gt;CssInlinerExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;inline_css&lt;/code&gt; のフィルタは、の一部である &lt;code&gt;CssInlinerExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="c00dccd11bc69f2a5a916c034205674c6f1358b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;is&lt;/code&gt; operator performs tests. Tests can be used to test a variable against a common expression. The right operand is name of the test:</source>
          <target state="translated">の &lt;code&gt;is&lt;/code&gt; オペレータ行う試験。テストを使用して、一般的な式に対して変数をテストできます。右側のオペランドはテストの名前です。</target>
        </trans-unit>
        <trans-unit id="5700677a49b4856951fe1d2ce4a31213a0d614bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isFresh()&lt;/code&gt; method must return &lt;code&gt;true&lt;/code&gt; if the current cached template is still fresh, given the last modification time, or &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;isFresh()&lt;/code&gt; メソッドが返す必要があり &lt;code&gt;true&lt;/code&gt; 現在のキャッシュされたテンプレートがまだ新鮮である場合には最終更新時刻与えられた、または &lt;code&gt;false&lt;/code&gt; そう。</target>
        </trans-unit>
        <trans-unit id="9a7e7afd97cb725f93cbf08db598c05fb380f854" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;join&lt;/code&gt; filter returns a string which is the concatenation of the items of a sequence:</source>
          <target state="translated">の &lt;code&gt;join&lt;/code&gt; フィルタは、シーケンスの項目を連結した文字列を返します。</target>
        </trans-unit>
        <trans-unit id="ac64c5d2ed1087cc55710a50424e31d04536a2a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;json_encode&lt;/code&gt; filter returns the JSON representation of a value:</source>
          <target state="translated">の &lt;code&gt;json_encode&lt;/code&gt; のフィルタは、値のJSON表現を返します。</target>
        </trans-unit>
        <trans-unit id="37df48f92877e1a150fda994b1de24710042dd9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keys&lt;/code&gt; filter returns the keys of an array. It is useful when you want to iterate over the keys of an array:</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; フィルタは、配列のキーを返します。配列のキーを反復処理する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="6a30638b3df0a57a3a3b8845ed5c9b6d873e1cb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;language_name&lt;/code&gt; filter is part of the &lt;code&gt;IntlExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;language_name&lt;/code&gt; フィルタは、の一部である &lt;code&gt;IntlExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="f5e722fa7032519007f6542f4474f51c8938b02e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;language_name&lt;/code&gt; filter returns the language name given its two-letter code:</source>
          <target state="translated">&lt;code&gt;language_name&lt;/code&gt; フィルタは、その2文字のコード指定された言語の名前を返します。</target>
        </trans-unit>
        <trans-unit id="410b6b2171eacc088a408761d4c973c89b3f4ba9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;last&lt;/code&gt; filter returns the last &quot;element&quot; of a sequence, a mapping, or a string:</source>
          <target state="translated">&lt;code&gt;last&lt;/code&gt; フィルタは、シーケンスの最後の「要素」、マッピング、または文字列を返します。</target>
        </trans-unit>
        <trans-unit id="27930bdf4903abfff32b55ace816ef82a536fdf2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;last&lt;/code&gt; filter returns the last &amp;ldquo;element&amp;rdquo; of a sequence, a mapping, or a string:</source>
          <target state="translated">&lt;code&gt;last&lt;/code&gt; フィルタは、シーケンスの最後の「要素」、マッピング、または文字列を返します。</target>
        </trans-unit>
        <trans-unit id="d49bb3b8bd12457ee5a65655af737d8407cd41f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; filter returns the number of items of a sequence or mapping, or the length of a string.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; フィルタは、シーケンスまたはマッピングの項目の数、または文字列の長さを返します。</target>
        </trans-unit>
        <trans-unit id="19ebd86e7657c8651fbcf339bdb91206d1f0cc5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locale_name&lt;/code&gt; filter is part of the &lt;code&gt;IntlExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;locale_name&lt;/code&gt; に使用するフィルタは、の一部である &lt;code&gt;IntlExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="de6e568424b7c42821f4cd482419eae7c543b1f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locale_name&lt;/code&gt; filter returns the locale name given its two-letter code:</source>
          <target state="translated">&lt;code&gt;locale_name&lt;/code&gt; に使用するフィルタは、その2文字のコード指定されたロケールの名前を返します。</target>
        </trans-unit>
        <trans-unit id="5a593ec9ffe8950082afd494d3f5e6d12179c055" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loop.length&lt;/code&gt;, &lt;code&gt;loop.revindex&lt;/code&gt;, &lt;code&gt;loop.revindex0&lt;/code&gt;, and &lt;code&gt;loop.last&lt;/code&gt; variables are only available for PHP arrays, or objects that implement the &lt;code&gt;Countable&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;loop.length&lt;/code&gt; 、 &lt;code&gt;loop.revindex&lt;/code&gt; 、 &lt;code&gt;loop.revindex0&lt;/code&gt; 、及び &lt;code&gt;loop.last&lt;/code&gt; 変数が実装PHP配列、またはオブジェクトのためにのみ利用可能である &lt;code&gt;Countable&lt;/code&gt; インタフェースを。</target>
        </trans-unit>
        <trans-unit id="5d9fa90530366866598478026d28321914ae37c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loop.length&lt;/code&gt;, &lt;code&gt;loop.revindex&lt;/code&gt;, &lt;code&gt;loop.revindex0&lt;/code&gt;, and &lt;code&gt;loop.last&lt;/code&gt; variables are only available for PHP arrays, or objects that implement the &lt;code&gt;Countable&lt;/code&gt; interface. They are also not available when looping with a condition.</source>
          <target state="translated">&lt;code&gt;loop.length&lt;/code&gt; 、 &lt;code&gt;loop.revindex&lt;/code&gt; 、 &lt;code&gt;loop.revindex0&lt;/code&gt; 、及び &lt;code&gt;loop.last&lt;/code&gt; 変数が実装PHP配列、またはオブジェクトのためにのみ利用可能である &lt;code&gt;Countable&lt;/code&gt; インタフェースを。条件付きループの場合も使用できません。</target>
        </trans-unit>
        <trans-unit id="af30b7d5c04220a7b0351843917a0618ce56493c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lower&lt;/code&gt; filter converts a value to lowercase:</source>
          <target state="translated">&lt;code&gt;lower&lt;/code&gt; フィルタは小文字に値を変換します。</target>
        </trans-unit>
        <trans-unit id="03d3a02a3aba840f84cd1d025e8a9a83e779e657" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;map&lt;/code&gt; filter applies an arrow function to the elements of a sequence or a mapping. The arrow function receives the value of the sequence or mapping:</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; フィルタは、シーケンスまたはマッピングの要素に矢印関数を適用します。矢印関数は、シーケンスまたはマッピングの値を受け取ります。</target>
        </trans-unit>
        <trans-unit id="c2445badf381fb02e5af078d1de30c125378a28d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;markdown_to_html&lt;/code&gt; filter converts a block of Markdown to HTML:</source>
          <target state="translated">&lt;code&gt;markdown_to_html&lt;/code&gt; のフィルタは、HTMLにマークダウンのブロックを変換します。</target>
        </trans-unit>
        <trans-unit id="4e8577ae8ec7265d95e363163f46f13fcadebd10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;markdown_to_html&lt;/code&gt; filter is part of the &lt;code&gt;MarkdownExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;markdown_to_html&lt;/code&gt; のフィルタは、の一部である &lt;code&gt;MarkdownExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="6164aabc73042acc10266f499c62d5afc3bd0012" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;merge&lt;/code&gt; filter also works on hashes:</source>
          <target state="translated">&lt;code&gt;merge&lt;/code&gt; フィルタは、ハッシュ上で動作します：</target>
        </trans-unit>
        <trans-unit id="ce5234404419a5c9c04df93914f8d9afd3be17c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;merge&lt;/code&gt; filter merges an array with another array:</source>
          <target state="translated">&lt;code&gt;merge&lt;/code&gt; フィルタは、別の配列との配列をマージします。</target>
        </trans-unit>
        <trans-unit id="12f2049de90207e2d4a3203b1fac4d18b74a11c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nl2br&lt;/code&gt; filter inserts HTML line breaks before all newlines in a string:</source>
          <target state="translated">&lt;code&gt;nl2br&lt;/code&gt; 文字列内のすべての改行の前にHTMLの改行を挿入フィルタ：</target>
        </trans-unit>
        <trans-unit id="cbd8572e3e73141f20f341c09b33e9288bb5a5fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nl2br&lt;/code&gt; filter pre-escapes the input before applying the transformation.</source>
          <target state="translated">&lt;code&gt;nl2br&lt;/code&gt; フィルタ変換を適用する前に、入力を事前に逃げます。</target>
        </trans-unit>
        <trans-unit id="a8da1ff778152ee852452db2ee78e5cda54e0c89" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;node&lt;/code&gt; sub-node will contain an expression of &lt;code&gt;my_value&lt;/code&gt;. Node-based tests also have access to the &lt;code&gt;arguments&lt;/code&gt; node. This node will contain the various other arguments that have been provided to your test.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; サブノードは、発現含有するであろう &lt;code&gt;my_value&lt;/code&gt; を。ノードベースのテストは &lt;code&gt;arguments&lt;/code&gt; もアクセスできますノードにます。このノードには、テストに提供された他のさまざまな引数が含まれます。</target>
        </trans-unit>
        <trans-unit id="1f7ed5fdfcdbfb2be11afe2121d283fb1f18207a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;number_format&lt;/code&gt; filter formats numbers. It is a wrapper around PHP&amp;rsquo;s &lt;a href=&quot;https://secure.php.net/number_format&quot;&gt;number_format&lt;/a&gt; function:</source>
          <target state="translated">&lt;code&gt;number_format&lt;/code&gt; フィルタ形式番号。これは、PHPの&lt;a href=&quot;https://secure.php.net/number_format&quot;&gt;number_format&lt;/a&gt;関数のラッパーです。</target>
        </trans-unit>
        <trans-unit id="f81837a441e58e822553187f0220f2b6c83aa26a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;number_format&lt;/code&gt; filter formats numbers. It is a wrapper around PHP's &lt;a href=&quot;https://secure.php.net/number_format&quot;&gt;number_format&lt;/a&gt; function:</source>
          <target state="translated">&lt;code&gt;number_format&lt;/code&gt; フィルタ形式番号。PHPの&lt;a href=&quot;https://secure.php.net/number_format&quot;&gt;number_formatの&lt;/a&gt;ラッパーです。関数です。</target>
        </trans-unit>
        <trans-unit id="dfeb5f43cc45c37204ec8585d5e11935374b82af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;optimizer&lt;/code&gt; extension optimizes the node tree before compilation:</source>
          <target state="translated">&lt;code&gt;optimizer&lt;/code&gt; 拡張は、コンパイルの前にノードツリーを最適化します。</target>
        </trans-unit>
        <trans-unit id="95416bcddf7dbb8bce6fbbf66b623d07eab4af1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parent()&lt;/code&gt; call will return the content of the &lt;code&gt;sidebar&lt;/code&gt; block as defined in the &lt;code&gt;base.html&lt;/code&gt; template.</source>
          <target state="translated">&lt;code&gt;parent()&lt;/code&gt; の呼び出しは、の内容を返します &lt;code&gt;sidebar&lt;/code&gt; で定義されたブロックを &lt;code&gt;base.html&lt;/code&gt; のテンプレート。</target>
        </trans-unit>
        <trans-unit id="57ddeedd18626f308f64505bbac8ead769095428" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parent()&lt;/code&gt; function automatically determines the correct inheritance tree, so it can be used when overriding a block defined in an imported template:</source>
          <target state="translated">&lt;code&gt;parent()&lt;/code&gt; インポートされたテンプレートで定義されたブロックをオーバーライドするときに使用できるように機能が自動的に正しい継承ツリーを決定します。</target>
        </trans-unit>
        <trans-unit id="941dcd9d7e54290385f7acb95f98b200c398b476" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parse()&lt;/code&gt; method is invoked whenever the parser encounters a &lt;code&gt;set&lt;/code&gt; tag. It should return a &lt;code&gt;Twig_Node&lt;/code&gt; instance that represents the node (the &lt;code&gt;Project_Set_Node&lt;/code&gt; calls creating is explained in the next section).</source>
          <target state="translated">&lt;code&gt;parse()&lt;/code&gt; パーサーが遭遇するたびにメソッドが呼び出された &lt;code&gt;set&lt;/code&gt; タグ。これは、返すべき &lt;code&gt;Twig_Node&lt;/code&gt; のノード（表しインスタンス &lt;code&gt;Project_Set_Node&lt;/code&gt; を呼び出しの作成については、次のセクションで説明します）。</target>
        </trans-unit>
        <trans-unit id="d783ecf905422db277fa6b76351416b6b3f3dfab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parse()&lt;/code&gt; method is invoked whenever the parser encounters a &lt;code&gt;set&lt;/code&gt; tag. It should return a &lt;code&gt;\Twig\Node\Node&lt;/code&gt; instance that represents the node (the &lt;code&gt;Project_Set_Node&lt;/code&gt; calls creating is explained in the next section).</source>
          <target state="translated">&lt;code&gt;parse()&lt;/code&gt; パーサーが遭遇するたびにメソッドが呼び出された &lt;code&gt;set&lt;/code&gt; タグ。 &lt;code&gt;\Twig\Node\Node&lt;/code&gt; を表す\ Twig \ Node \ Nodeインスタンスを返す必要があります（作成する &lt;code&gt;Project_Set_Node&lt;/code&gt; 呼び出しについては次のセクションで説明します）。</target>
        </trans-unit>
        <trans-unit id="f92cd61d4593f13bb123e2f225dcda2c9ffc1ba5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;profiler&lt;/code&gt; extension enables a profiler for Twig templates; it should only be used on your development machines as it adds some overhead:</source>
          <target state="translated">&lt;code&gt;profiler&lt;/code&gt; 拡張は小枝テンプレートのプロファイラを有効にします。オーバーヘッドが増えるため、開発マシンでのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="c724d762472523da2c71275d9198ed9b88f76d2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;random&lt;/code&gt; function returns a random value depending on the supplied parameter type:</source>
          <target state="translated">&lt;code&gt;random&lt;/code&gt; 関数は、指定されたパラメータの種類に応じてランダム値を返します。</target>
        </trans-unit>
        <trans-unit id="a0ff25b1e3325b2af1618c52320802cb0e0caa67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;range&lt;/code&gt; function works as the native PHP &lt;a href=&quot;https://secure.php.net/range&quot;&gt;range&lt;/a&gt; function.</source>
          <target state="translated">&lt;code&gt;range&lt;/code&gt; 機能は、ネイティブのPHPとして動作&lt;a href=&quot;https://secure.php.net/range&quot;&gt;レンジ&lt;/a&gt;機能。</target>
        </trans-unit>
        <trans-unit id="3b3020ecc8382592217b30aa4ee4d2cdbf681fb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;raw&lt;/code&gt; filter marks the value as being &quot;safe&quot;, which means that in an environment with automatic escaping enabled this variable will not be escaped if &lt;code&gt;raw&lt;/code&gt; is the last filter applied to it:</source>
          <target state="translated">&lt;code&gt;raw&lt;/code&gt; 場合は自動エスケープを持つ環境でこの変数を有効にすることを手段がエスケープされない「安全」であるとして、フィルタマーク値、 &lt;code&gt;raw&lt;/code&gt; 最後のフィルタであるが、それに適用されます：</target>
        </trans-unit>
        <trans-unit id="1bb0ad3e6ee4b60e0d7ab9f7ceb54f8ffe8903ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;raw&lt;/code&gt; filter marks the value as being &amp;ldquo;safe&amp;rdquo;, which means that in an environment with automatic escaping enabled this variable will not be escaped if &lt;code&gt;raw&lt;/code&gt; is the last filter applied to it:</source>
          <target state="translated">&lt;code&gt;raw&lt;/code&gt; 場合は自動エスケープを持つ環境でこの変数を有効にすることを手段がエスケープされない「安全」であるとして、フィルタマーク値、 &lt;code&gt;raw&lt;/code&gt; 最後のフィルタであるが、それに適用されます：</target>
        </trans-unit>
        <trans-unit id="1dcd565db52e703f2cbf138be69de9fd7225be35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reduce&lt;/code&gt; filter iteratively reduces a sequence or a mapping to a single value using an arrow function, so as to reduce it to a single value. The arrow function receives the return value of the previous iteration and the current value of the sequence or mapping:</source>
          <target state="translated">&lt;code&gt;reduce&lt;/code&gt; 単一の値に低減するように、フィルタは、反復配列または矢印関数を使用して単一の値へのマッピングを減少させます。矢印関数は、前の反復の戻り値とシーケンスまたはマッピングの現在の値を受け取ります。</target>
        </trans-unit>
        <trans-unit id="61e6c43407acf6eb9bda5ccfd91f894567c1c9a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reduce&lt;/code&gt; filter takes an &lt;code&gt;initial&lt;/code&gt; value as a second argument:</source>
          <target state="translated">&lt;code&gt;reduce&lt;/code&gt; フィルタをとり &lt;code&gt;initial&lt;/code&gt; 2番目の引数として値：</target>
        </trans-unit>
        <trans-unit id="002e6c25f1fb886ce85399d06f84ed7db62d819a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render()&lt;/code&gt; method loads the template passed as a first argument and renders it with the variables passed as a second argument.</source>
          <target state="translated">&lt;code&gt;render()&lt;/code&gt; メソッド負荷は、テンプレートは、最初の引数として渡されると、第二引数として渡された変数でそれをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="33b18b18c7e998d2b22f6ae7f3f9b06a88dd4811" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replace&lt;/code&gt; filter formats a given string by replacing the placeholders (placeholders are free-form):</source>
          <target state="translated">&lt;code&gt;replace&lt;/code&gt; （プレースホルダが自由形式である）プレースホルダを置換することによって、フィルタ形式を指定した文字列を：</target>
        </trans-unit>
        <trans-unit id="5c8b33cdb67049edeed7d2e788399637cd72f3e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse&lt;/code&gt; filter reverses a sequence, a mapping, or a string:</source>
          <target state="translated">&lt;code&gt;reverse&lt;/code&gt; フィルタは、シーケンス、マッピング、または文字列を反転させます：</target>
        </trans-unit>
        <trans-unit id="ceba2e6341ca087afd7ed560d216b7fb2232d6b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;round&lt;/code&gt; filter rounds a number to a given precision:</source>
          <target state="translated">&lt;code&gt;round&lt;/code&gt; フィルタは、所定の精度に番号を丸め。</target>
        </trans-unit>
        <trans-unit id="30b57d8d2f1a7e8a766c55994dbda6df8b66c4da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;round&lt;/code&gt; filter takes two optional arguments; the first one specifies the precision (default is &lt;code&gt;0&lt;/code&gt;) and the second the rounding method (default is &lt;code&gt;common&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;round&lt;/code&gt; フィルタは、2つのオプションの引数を取ります。1つ目は精度を指定し（デフォルトは &lt;code&gt;0&lt;/code&gt; ）、2つ目は丸め方法（デフォルトは &lt;code&gt;common&lt;/code&gt; ）です。</target>
        </trans-unit>
        <trans-unit id="210e8b05c762c417ea9b258603b5f4f419ff0e50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sandbox&lt;/code&gt; extension can be used to evaluate untrusted code. Access to unsafe attributes and methods is prohibited. The sandbox security is managed by a policy instance. By default, Twig comes with one policy class: &lt;code&gt;Twig_Sandbox_SecurityPolicy&lt;/code&gt;. This class allows you to white-list some tags, filters, properties, and methods:</source>
          <target state="translated">&lt;code&gt;sandbox&lt;/code&gt; 拡張機能は、信頼できないコードを評価するために使用することができます。安全でない属性やメソッドへのアクセスは禁止されています。サンドボックスセキュリティは、ポリシーインスタンスによって管理されます。デフォルトでは、Twigには &lt;code&gt;Twig_Sandbox_SecurityPolicy&lt;/code&gt; という 1つのポリシークラスが付属しています。このクラスを使用すると、いくつかのタグ、フィルター、プロパティ、およびメソッドをホワイトリストに登録できます。</target>
        </trans-unit>
        <trans-unit id="5e7d5f479148d34fba5e0a4d8aec738a2455903c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sandbox&lt;/code&gt; extension can be used to evaluate untrusted code. Access to unsafe attributes and methods is prohibited. The sandbox security is managed by a policy instance. By default, Twig comes with one policy class: &lt;code&gt;\Twig\Sandbox\SecurityPolicy&lt;/code&gt;. This class allows you to white-list some tags, filters, properties, and methods:</source>
          <target state="translated">&lt;code&gt;sandbox&lt;/code&gt; 拡張機能は、信頼できないコードを評価するために使用することができます。安全でない属性やメソッドへのアクセスは禁止されています。サンドボックスセキュリティは、ポリシーインスタンスによって管理されます。デフォルトでは、Twigには1つのポリシークラス &lt;code&gt;\Twig\Sandbox\SecurityPolicy&lt;/code&gt; が付属しています。このクラスを使用すると、いくつかのタグ、フィルター、プロパティ、およびメソッドをホワイトリストに登録できます。</target>
        </trans-unit>
        <trans-unit id="cb4920ea5c29b5be966292f879030a9762560d1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sandbox&lt;/code&gt; tag can be used to enable the sandboxing mode for an included template, when sandboxing is not enabled globally for the Twig environment:</source>
          <target state="translated">&lt;code&gt;sandbox&lt;/code&gt; タグは、サンドボックスが小枝環境に対してグローバルに有効になっていない場合は、付属のテンプレートのためのサンドボックスモードを有効にするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="f8e41fba1638a3ae4743e9b43ff272714b0a6287" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sandbox&lt;/code&gt; tag can only be used to sandbox an include tag and it cannot be used to sandbox a section of a template. The following example won&amp;rsquo;t work:</source>
          <target state="translated">&lt;code&gt;sandbox&lt;/code&gt; タグはタグのみを含み、それはテンプレートのサンドボックスセクションに使用することができないサンドボックスを使用することができます。次の例は機能しません。</target>
        </trans-unit>
        <trans-unit id="cb517d481dd15e34b020a9ac6ce5715295d2e3bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sandbox&lt;/code&gt; tag can only be used to sandbox an include tag and it cannot be used to sandbox a section of a template. The following example won't work:</source>
          <target state="translated">&lt;code&gt;sandbox&lt;/code&gt; タグはタグのみを含み、それはテンプレートのサンドボックスセクションに使用することができないサンドボックスを使用することができます。次の例は機能しません。</target>
        </trans-unit>
        <trans-unit id="87d56e5c630766ca43c12a09991d8fec6cc7ae96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sandbox&lt;/code&gt; tag is only available when the sandbox extension is enabled (see the &lt;a href=&quot;../api&quot;&gt;Twig for Developers&lt;/a&gt; chapter).</source>
          <target state="translated">&lt;code&gt;sandbox&lt;/code&gt; サンドボックスの拡張機能が有効になっている場合、タグが（参照のみ利用可能である&lt;a href=&quot;../api&quot;&gt;開発者のための小枝を&lt;/a&gt;章）。</target>
        </trans-unit>
        <trans-unit id="03f11a9d9e0a6b0e4727502d09eaafec4b00c3af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set&lt;/code&gt; tag can also be used to &amp;lsquo;capture&amp;rsquo; chunks of text:</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; タグは、テキストの「捕獲」チャンクに使用することができます。</target>
        </trans-unit>
        <trans-unit id="d3e756734f4349287443f7deba06e83b4c2d7235" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set&lt;/code&gt; tag can also be used to 'capture' chunks of text:</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; タグは、テキストの「捕獲」チャンクに使用することができます。</target>
        </trans-unit>
        <trans-unit id="564e12fb8952aa16adba44fd29140d6c57bbddf0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set&lt;/code&gt; tag is part of the Core extension and as such is always available. The built-in version is slightly more powerful and supports multiple assignments by default (cf. the template designers chapter for more information).</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; タグは、コアの拡張機能の一部であり、そのようなものとして常に利用可能です。組み込みバージョンは少し強力で、デフォルトで複数の割り当てをサポートしています（詳細については、テンプレートデザイナーの章を参照してください）。</target>
        </trans-unit>
        <trans-unit id="7cca2ccfbc66932e00029933dfb7ba524b37444d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set&lt;/code&gt; tag is part of the Core extension and as such is always available. The built-in version is slightly more powerful and supports multiple assignments by default.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; タグは、コアの拡張機能の一部であり、そのようなものとして常に利用可能です。組み込みバージョンは少し強力で、デフォルトで複数の割り当てをサポートします。</target>
        </trans-unit>
        <trans-unit id="d8d038055268623eb1d19ae195f5096858fe1711" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slice&lt;/code&gt; filter extracts a slice of a sequence, a mapping, or a string:</source>
          <target state="translated">&lt;code&gt;slice&lt;/code&gt; フィルタは、シーケンスのスライス、マッピング、または文字列を抽出します。</target>
        </trans-unit>
        <trans-unit id="3a21681f738ead2d68b63c3ffc9b79c83c255cfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slice&lt;/code&gt; filter works as the &lt;a href=&quot;https://secure.php.net/array_slice&quot;&gt;array_slice&lt;/a&gt; PHP function for arrays and &lt;a href=&quot;https://secure.php.net/mb-substr&quot;&gt;mb_substr&lt;/a&gt; for strings with a fallback to &lt;a href=&quot;https://secure.php.net/substr&quot;&gt;substr&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;slice&lt;/code&gt; フィルタとして機能&lt;a href=&quot;https://secure.php.net/array_slice&quot;&gt;array_sliceの&lt;/a&gt;アレイとのためのPHP関数&lt;a href=&quot;https://secure.php.net/mb-substr&quot;&gt;mb_substr&lt;/a&gt;へのフォールバックを持つ文字列の&lt;a href=&quot;https://secure.php.net/substr&quot;&gt;SUBSTR&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8eb8880699963f4b7f528dff66dfd967f79df38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sort&lt;/code&gt; filter sorts an array:</source>
          <target state="translated">&lt;code&gt;sort&lt;/code&gt; フィルタは配列をソートします。</target>
        </trans-unit>
        <trans-unit id="6a6f98b9c71cee8034cf1a2020ff737bee65cc3b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; function returns the content of a template without rendering it:</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; 関数は、それをレンダリングすることなく、テンプレートの内容を返します。</target>
        </trans-unit>
        <trans-unit id="25c42306f4cfeac4b2375f9073a9b4fe7cdc343d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;split&lt;/code&gt; filter splits a string by the given delimiter and returns a list of strings:</source>
          <target state="translated">&lt;code&gt;split&lt;/code&gt; フィルタは、指定された区切り文字で文字列を分割し、文字列のリストを返します。</target>
        </trans-unit>
        <trans-unit id="0221d7c22463f0c39fab986796b3b00150bf70bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;striptags&lt;/code&gt; filter strips SGML/XML tags and replace adjacent whitespace by one space:</source>
          <target state="translated">&lt;code&gt;striptags&lt;/code&gt; のフィルターはSGML / XMLタグを取り除き、1つのスペースで隣接する空白文字を置き換えます。</target>
        </trans-unit>
        <trans-unit id="d629c45ce826a8e656be118f509c51936f367177" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;template_from_string&lt;/code&gt; function is not available by default. You must add the &lt;code&gt;Twig_Extension_StringLoader&lt;/code&gt; extension explicitly when creating your Twig environment:</source>
          <target state="translated">&lt;code&gt;template_from_string&lt;/code&gt; の機能はデフォルトでは使用できません。Twig環境を作成するときに、 &lt;code&gt;Twig_Extension_StringLoader&lt;/code&gt; 拡張機能を明示的に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="cfb9a09f2c03418e55004812c69f58ada9f3be92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;template_from_string&lt;/code&gt; function is not available by default. You must add the &lt;code&gt;\Twig\Extension\StringLoaderExtension&lt;/code&gt; extension explicitly when creating your Twig environment:</source>
          <target state="translated">&lt;code&gt;template_from_string&lt;/code&gt; の機能はデフォルトでは使用できません。Twig環境を作成するときは、 &lt;code&gt;\Twig\Extension\StringLoaderExtension&lt;/code&gt; 拡張機能を明示的に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="dcbb569095312224e89ee037de9e4b2116a3f71f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;template_from_string&lt;/code&gt; function loads a template from a string:</source>
          <target state="translated">&lt;code&gt;template_from_string&lt;/code&gt; 関数は、文字列からテンプレートをロードします。</target>
        </trans-unit>
        <trans-unit id="a0744a84f55faf9ae372619ff0fc085498665a50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timezone_name&lt;/code&gt; filter is part of the &lt;code&gt;IntlExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;timezone_name&lt;/code&gt; フィルタは、の一部である &lt;code&gt;IntlExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="1f13d43dd7b31609ce3c8f6bd991c1f7691763ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timezone_name&lt;/code&gt; filter returns the timezone name given a timezone identifier:</source>
          <target state="translated">&lt;code&gt;timezone_name&lt;/code&gt; フィルタは、タイムゾーン識別子を指定されたタイムゾーン名を返します。</target>
        </trans-unit>
        <trans-unit id="81e4be597fd5bd22bd6bfb07c087eda23e318e59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;title&lt;/code&gt; filter returns a titlecased version of the value. Words will start with uppercase letters, all remaining characters are lowercase:</source>
          <target state="translated">&lt;code&gt;title&lt;/code&gt; フィルターは、値のタイトルケースバージョンを返します。単語は大文字で始まり、残りの文字はすべて小文字です：</target>
        </trans-unit>
        <trans-unit id="895eb83c406f96a86bfcbf154a9737c4ac38e383" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trim&lt;/code&gt; filter strips whitespace (or other characters) from the beginning and end of a string:</source>
          <target state="translated">&lt;code&gt;trim&lt;/code&gt; 文字列の先頭と末尾からフィルターストリップ空白（もしくは他の文字）：</target>
        </trans-unit>
        <trans-unit id="906114cf04f4c639d657a505a8335535e293b788" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;truncate&lt;/code&gt; method also accepts a third argument to preserve whole words:</source>
          <target state="translated">&lt;code&gt;truncate&lt;/code&gt; 方法はまた、単語全体を維持するために第三引数を受け付けます。</target>
        </trans-unit>
        <trans-unit id="4669f2c1135ef852b1d9ca687a0dc924f73b32f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;u&lt;/code&gt; filter is part of the &lt;code&gt;StringExtension&lt;/code&gt; which is not installed by default. Install it first:</source>
          <target state="translated">&lt;code&gt;u&lt;/code&gt; フィルタは、の一部である &lt;code&gt;StringExtension&lt;/code&gt; デフォルトでインストールされていません。最初にインストールします。</target>
        </trans-unit>
        <trans-unit id="47d2cdc76db496a3d00ac7425104a55ec58ca20b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;u&lt;/code&gt; filter wraps a text in a Unicode object (a &lt;a href=&quot;https://symfony.com/doc/current/components/string.html&quot;&gt;Symfony UnicodeString instance&lt;/a&gt;) that exposes methods to &amp;ldquo;manipulate&amp;rdquo; the string.</source>
          <target state="translated">&lt;code&gt;u&lt;/code&gt; フィルタは、Unicodeオブジェクトのテキスト（ラップ&lt;a href=&quot;https://symfony.com/doc/current/components/string.html&quot;&gt;symfonyのUnicodeStringのインスタンス&lt;/a&gt;が露出方法は、文字列を「操作」することを）。</target>
        </trans-unit>
        <trans-unit id="0070319a10a5241532916999018023aef08d7429" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;upper&lt;/code&gt; filter converts a value to uppercase:</source>
          <target state="translated">&lt;code&gt;upper&lt;/code&gt; フィルタは大文字に値を変換します。</target>
        </trans-unit>
        <trans-unit id="6413d3c0b9555adf8ef85a36003c89c957f8e091" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url_encode&lt;/code&gt; filter percent encodes a given string as URL segment or an array as query string:</source>
          <target state="translated">&lt;code&gt;url_encode&lt;/code&gt; フィルタパーセントはURLセグメントまたはクエリ文字列として配列として与えられた文字列をエンコードします。</target>
        </trans-unit>
        <trans-unit id="1bfab91fdd5bcd3f8979bf9e97fb3e0461e03796" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;use&lt;/code&gt; statement tells Twig to import the blocks defined in &lt;code&gt;blocks.html&lt;/code&gt; into the current template (it&amp;rsquo;s like macros, but for blocks):</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; 声明はで定義されたブロックをインポートするために小枝を伝え &lt;code&gt;blocks.html&lt;/code&gt; 現在のテンプレート（それはブロックのためのマクロのようだが、）には：</target>
        </trans-unit>
        <trans-unit id="7936890c536201493543868801518da19d18fac6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;use&lt;/code&gt; statement tells Twig to import the blocks defined in &lt;code&gt;blocks.html&lt;/code&gt; into the current template (it's like macros, but for blocks):</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; 声明はで定義されたブロックをインポートするために小枝を伝え &lt;code&gt;blocks.html&lt;/code&gt; 現在のテンプレート（それはブロックのためのマクロのようだが、）には：</target>
        </trans-unit>
        <trans-unit id="eaadc7bc4aabf29fa095c1fd0b1b415a5c0ab9fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;use&lt;/code&gt; tag only imports a template if it does not extend another template, if it does not define macros, and if the body is empty. But it can &lt;em&gt;use&lt;/em&gt; other templates.</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; それはマクロを定義していない場合には、別のテンプレートを拡張しない場合は、と体が空の場合、タグは、テンプレートだけをインポートします。しかし、それは&lt;em&gt;使用&lt;/em&gt;でき&lt;em&gt;ます&lt;/em&gt;他のテンプレート。</target>
        </trans-unit>
        <trans-unit id="b6d3bfe65fc1f76559b5c728ee42ff72e5b6d25b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;verbatim&lt;/code&gt; tag marks sections as being raw text that should not be parsed. For example to put Twig syntax as example into a template you can use this snippet:</source>
          <target state="translated">&lt;code&gt;verbatim&lt;/code&gt; 解析されるべきではない生のテキストであるとしてタグマークのセクション。たとえば、例としてTwig構文をテンプレートに入れるには、次のスニペットを使用できます。</target>
        </trans-unit>
        <trans-unit id="3715b8091ee0166bf63e86dfa81bdf94b5fe55cd" translate="yes" xml:space="preserve">
          <source>The Compiler</source>
          <target state="translated">コンパイラ</target>
        </trans-unit>
        <trans-unit id="58223a5b31b2b0984995c927c2253b2fb623cc7e" translate="yes" xml:space="preserve">
          <source>The Core, Escaper, and Optimizer extensions are registered by default.</source>
          <target state="translated">Core、Escaper、Optimizerの拡張機能はデフォルトで登録されています。</target>
        </trans-unit>
        <trans-unit id="a2653f51b9af961513d55ee8d6255738294c4bc9" translate="yes" xml:space="preserve">
          <source>The Lexer</source>
          <target state="translated">レクサー</target>
        </trans-unit>
        <trans-unit id="01b5106be745c239227fc77fa5ae7d35debe59ca" translate="yes" xml:space="preserve">
          <source>The Parser</source>
          <target state="translated">パーサー</target>
        </trans-unit>
        <trans-unit id="4aa531182510623b9eca298e680cd9095de3f1c4" translate="yes" xml:space="preserve">
          <source>The Twig built-in &lt;code&gt;..&lt;/code&gt; operator is just syntactic sugar for the &lt;code&gt;range&lt;/code&gt; function (with a step of &lt;code&gt;1&lt;/code&gt;, or &lt;code&gt;-1&lt;/code&gt; if the start is greater than the end):</source>
          <target state="translated">Twig組み込み &lt;code&gt;..&lt;/code&gt; 演算子は、 &lt;code&gt;range&lt;/code&gt; 関数の構文糖衣です（ &lt;code&gt;1&lt;/code&gt; のステップ、または開始が終了より大きい場合は &lt;code&gt;-1&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ee2bef423b1321304ef8bc4277dfe49ba3918560" translate="yes" xml:space="preserve">
          <source>The Twig core extensions are great examples of how extensions work.</source>
          <target state="translated">Twigコアのエクステンションは、エクステンションがどのように機能するかを示す素晴らしい例です。</target>
        </trans-unit>
        <trans-unit id="f8d7560db836c961304fd1fc1b510de4c324573f" translate="yes" xml:space="preserve">
          <source>The Twig logo is &amp;copy; 2010&amp;ndash;2018 Symfony</source>
          <target state="translated">Twigのロゴは&amp;copy;2010&amp;ndash;2018 Symfonyです</target>
        </trans-unit>
        <trans-unit id="35abc1742727ff51ffbb8e30b7160596f18fdd52" translate="yes" xml:space="preserve">
          <source>The Twig logo is &amp;copy; 2010&amp;ndash;2020 Symfony</source>
          <target state="translated">Twigのロゴは&amp;copy;2010&amp;ndash;2020 Symfony</target>
        </trans-unit>
        <trans-unit id="6910e410325efbaa3a6f01140b886fac5d854aa4" translate="yes" xml:space="preserve">
          <source>The above &lt;code&gt;import&lt;/code&gt; call imports the &quot;forms.html&quot; file (which can contain only macros, or a template and some macros), and import the functions as items of the &lt;code&gt;forms&lt;/code&gt; variable.</source>
          <target state="translated">上記の &lt;code&gt;import&lt;/code&gt; 呼び出しは、「forms.html」ファイル（マクロのみ、またはテンプレートと一部のマクロを含むことができます）をインポートし、関数を &lt;code&gt;forms&lt;/code&gt; アイテムとしてインポートします変数のます。</target>
        </trans-unit>
        <trans-unit id="3e0bddf384569b4317b5bbcd39554c4a0e2c3870" translate="yes" xml:space="preserve">
          <source>The above &lt;code&gt;import&lt;/code&gt; call imports the &lt;code&gt;forms.html&lt;/code&gt; file (which can contain only macros, or a template and some macros), and import the macros as items of the &lt;code&gt;forms&lt;/code&gt; local variable.</source>
          <target state="translated">上記の &lt;code&gt;import&lt;/code&gt; 呼び出しは、 &lt;code&gt;forms.html&lt;/code&gt; ファイル（マクロのみ、またはテンプレートといくつかのマクロを含むことができます）をインポートし、 &lt;code&gt;forms&lt;/code&gt; ローカル変数の項目としてマクロをインポートします。</target>
        </trans-unit>
        <trans-unit id="f2a7364c525627057337b80e1098dc4d0e6644e2" translate="yes" xml:space="preserve">
          <source>The above example shows how you can create tests that use a node class. The node class has access to one sub-node called 'node'. This sub-node contains the value that is being tested. When the &lt;code&gt;odd&lt;/code&gt; filter is used in code such as:</source>
          <target state="translated">上記の例は、ノードクラスを使用するテストを作成する方法を示しています。ノードクラスは、「ノード」と呼ばれる1つのサブノードにアクセスできます。このサブノードには、テストされている値が含まれています。場合 &lt;code&gt;odd&lt;/code&gt; ：フィルタは、以下のようなコードで使用され</target>
        </trans-unit>
        <trans-unit id="25f3a4bcaf8b3b99bc3d225fac9accada1525259" translate="yes" xml:space="preserve">
          <source>The above example shows how you can create tests that use a node class. The node class has access to one sub-node called &lt;code&gt;node&lt;/code&gt;. This sub-node contains the value that is being tested. When the &lt;code&gt;odd&lt;/code&gt; filter is used in code such as:</source>
          <target state="translated">上記の例は、ノードクラスを使用するテストを作成する方法を示しています。ノードクラスは、nodeと呼ばれる1つのサブノードにアクセスでき &lt;code&gt;node&lt;/code&gt; 。このサブノードには、テスト中の値が含まれています。次のようなコードで &lt;code&gt;odd&lt;/code&gt; フィルターが使用されている場合：</target>
        </trans-unit>
        <trans-unit id="c378881b0e512398e8db2c4814815ef008a9ffc9" translate="yes" xml:space="preserve">
          <source>The above example will be rendered as:</source>
          <target state="translated">上記の例では、次のようにレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="bc1f748312fb14ba7531d73812530d6f72dd4170" translate="yes" xml:space="preserve">
          <source>The above sample shows the default whitespace control modifier, and how you can use it to remove whitespace around tags. Trimming space will consume all whitespace for that side of the tag. It is possible to use whitespace trimming on one side of a tag:</source>
          <target state="translated">上のサンプルは、デフォルトのホワイトスペースコントロール修飾子と、それを使ってタグの周りのホワイトスペースを削除する方法を示しています。スペースをトリミングすると、タグのその側のホワイトスペースがすべて消費されます。タグの片側の空白をトリミングすることも可能です。</target>
        </trans-unit>
        <trans-unit id="b8c35b5b10b134bd0cd94e3750670f5c9ee5b97c" translate="yes" xml:space="preserve">
          <source>The above snippet of code would print all numbers from 0 to 10.</source>
          <target state="translated">上記のコードのスニペットは、0 から 10 までのすべての数字を表示します。</target>
        </trans-unit>
        <trans-unit id="08428d17cf82e612a5c47958cda8b6ca3d575aaa" translate="yes" xml:space="preserve">
          <source>The advantage is that the special loop variable will count correctly thus not counting the users not iterated over. Keep in mind that properties like &lt;code&gt;loop.last&lt;/code&gt; will not be defined when using loop conditions.</source>
          <target state="translated">利点は、特別なループ変数が正しくカウントされるため、繰り返されなかったユーザーはカウントされないことです。ループ条件を使用する場合、 &lt;code&gt;loop.last&lt;/code&gt; などのプロパティは定義されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="c4d982256c3cdae4fe94cfe18ac1e970c60e736d" translate="yes" xml:space="preserve">
          <source>The application passes variables to the templates for manipulation in the template. Variables may have attributes or elements you can access, too. The visual representation of a variable depends heavily on the application providing it.</source>
          <target state="translated">アプリケーションは、テンプレート内で操作するために変数をテンプレートに渡します。変数は、アクセスできる属性や要素を持つこともあります。変数の視覚的な表現は、それを提供するアプリケーションに大きく依存します。</target>
        </trans-unit>
        <trans-unit id="d54bfffb112e10817fd1518e43290261ac533d03" translate="yes" xml:space="preserve">
          <source>The argument must be in one of PHP&amp;rsquo;s supported &lt;a href=&quot;https://secure.php.net/manual/en/datetime.formats.php&quot;&gt;date and time formats&lt;/a&gt;.</source>
          <target state="translated">引数は、PHPでサポートされている&lt;a href=&quot;https://secure.php.net/manual/en/datetime.formats.php&quot;&gt;日付と時刻の形式&lt;/a&gt;のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="a1caf45b85089c639905dd78cd0e8fbbe9f115fa" translate="yes" xml:space="preserve">
          <source>The array can contain any number of values:</source>
          <target state="translated">配列には、任意の数の値を含めることができます。</target>
        </trans-unit>
        <trans-unit id="1bde1ee32e57d32f6cc92eab3d56e83da0a82659" translate="yes" xml:space="preserve">
          <source>The arrow function also receives the key as a second argument:</source>
          <target state="translated">また、矢印関数は第2引数としてキーを受け取ります。</target>
        </trans-unit>
        <trans-unit id="9e31028b618ce860f4d94456a400bde813ddd5ea" translate="yes" xml:space="preserve">
          <source>The assigned value can be any valid &lt;a href=&quot;../templates#twig-expressions&quot;&gt;Twig expression&lt;/a&gt;:</source>
          <target state="translated">割り当てられる値は、任意の有効な&lt;a href=&quot;../templates#twig-expressions&quot;&gt;Twig式に&lt;/a&gt;することができます。</target>
        </trans-unit>
        <trans-unit id="a93dff14b467666990c56a9cb4fab5610c8a7a8b" translate="yes" xml:space="preserve">
          <source>The assigned value can be any valid &lt;a href=&quot;../templates#twig-expressions&quot;&gt;Twig expressions&lt;/a&gt;:</source>
          <target state="translated">割り当てられる値は、任意の有効な&lt;a href=&quot;../templates#twig-expressions&quot;&gt;Twig式に&lt;/a&gt;することができます。</target>
        </trans-unit>
        <trans-unit id="946773ce8aab10de068321e15269b1bddacf9779" translate="yes" xml:space="preserve">
          <source>The automatic escaping strategy can be configured via the &lt;a href=&quot;api#environment-options&quot;&gt;autoescape&lt;/a&gt; option and defaults to &lt;code&gt;html&lt;/code&gt;.</source>
          <target state="translated">自動エスケープ戦略は&lt;a href=&quot;api#environment-options&quot;&gt;autoescape&lt;/a&gt;オプションで設定でき、デフォルトは &lt;code&gt;html&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="33d8627a43ed2cce4d479c40339634c89efe8989" translate="yes" xml:space="preserve">
          <source>The base template class to use for generated templates.</source>
          <target state="translated">生成されたテンプレートに使用するベーステンプレートクラス。</target>
        </trans-unit>
        <trans-unit id="4f847d2c722947336e4d6a55582603d95e1e31ac" translate="yes" xml:space="preserve">
          <source>The chapter &lt;a href=&quot;../api&quot;&gt;Twig for Developers&lt;/a&gt; gives more information about when and how automatic escaping is applied.</source>
          <target state="translated">&lt;a href=&quot;../api&quot;&gt;Twig for Developers&lt;/a&gt;の章では、自動エスケープがいつどのように適用されるかについて詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="94f896c527ca0da05bda1f21cf43aa560cd6af04" translate="yes" xml:space="preserve">
          <source>The charset used by the templates.</source>
          <target state="translated">テンプレートで使用される文字セット。</target>
        </trans-unit>
        <trans-unit id="e0683062f4f3db674163014c49b61054695302ba" translate="yes" xml:space="preserve">
          <source>The compiler implements a fluid interface and provides methods that helps the developer generate beautiful and readable PHP code:</source>
          <target state="translated">コンパイラは流体インターフェースを実装しており、開発者が美しく読みやすい PHP コードを生成するのに役立つメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="e485849b9935dbc80376c4fd4020360cdd89d525" translate="yes" xml:space="preserve">
          <source>The context is passed by default to the template but you can also pass additional variables:</source>
          <target state="translated">コンテキストはデフォルトでテンプレートに渡されますが、追加の変数を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="b8401445a147ae259c702f51dcb47455d24f6ea8" translate="yes" xml:space="preserve">
          <source>The core, escaper, and optimizer extensions do not need to be added to the Twig environment, as they are registered by default.</source>
          <target state="translated">コア、エスケーパー、オプティマイザーの拡張機能はデフォルトで登録されているので、Twig環境に追加する必要はありません。</target>
        </trans-unit>
        <trans-unit id="b75761bd813f44788ddffff0dbe11c55ec23f29c" translate="yes" xml:space="preserve">
          <source>The current iteration of the loop. (0 indexed)</source>
          <target state="translated">ループの現在の繰り返し。(0 インデックス付き)</target>
        </trans-unit>
        <trans-unit id="2ae957376dd8bf52f87cded346b35444762a2644" translate="yes" xml:space="preserve">
          <source>The current iteration of the loop. (1 indexed)</source>
          <target state="translated">ループの現在の繰り返し。(1 インデックス付き)</target>
        </trans-unit>
        <trans-unit id="ae7b5e2210fb962eaed4c6b2c3ce02ff6483fe06" translate="yes" xml:space="preserve">
          <source>The default compiler (&lt;code&gt;Twig_Compiler&lt;/code&gt;) can be changed by calling the &lt;code&gt;setCompiler()&lt;/code&gt; method:</source>
          <target state="translated">デフォルトのコンパイラー（ &lt;code&gt;Twig_Compiler&lt;/code&gt; ）は、 &lt;code&gt;setCompiler()&lt;/code&gt; メソッドを呼び出すことで変更できます。</target>
        </trans-unit>
        <trans-unit id="689c1556dc99fb7461256f03acca37fe431130e8" translate="yes" xml:space="preserve">
          <source>The default compiler (&lt;code&gt;\Twig\Compiler&lt;/code&gt;) can be changed by calling the &lt;code&gt;setCompiler()&lt;/code&gt; method:</source>
          <target state="translated">デフォルトのコンパイラ（ &lt;code&gt;\Twig\Compiler&lt;/code&gt; ）は、 &lt;code&gt;setCompiler()&lt;/code&gt; メソッドを呼び出すことで変更できます。</target>
        </trans-unit>
        <trans-unit id="1337a952abcbae566b8e83ec6f422c97918f1993" translate="yes" xml:space="preserve">
          <source>The default lexer (&lt;code&gt;Twig_Lexer&lt;/code&gt;) can be changed by calling the &lt;code&gt;setLexer()&lt;/code&gt; method:</source>
          <target state="translated">デフォルトのレクサー（ &lt;code&gt;Twig_Lexer&lt;/code&gt; ）は、 &lt;code&gt;setLexer()&lt;/code&gt; メソッドを呼び出すことで変更できます。</target>
        </trans-unit>
        <trans-unit id="09cbcd6938e6f18c58264dbd5be94a02c4ed8dfb" translate="yes" xml:space="preserve">
          <source>The default lexer (&lt;code&gt;\Twig\Lexer&lt;/code&gt;) can be changed by calling the &lt;code&gt;setLexer()&lt;/code&gt; method:</source>
          <target state="translated">デフォルトのレクサー（ &lt;code&gt;\Twig\Lexer&lt;/code&gt; ）は、 &lt;code&gt;setLexer()&lt;/code&gt; メソッドを呼び出すことで変更できます。</target>
        </trans-unit>
        <trans-unit id="8bc40acbce05be030b05bcf8f913176956352470" translate="yes" xml:space="preserve">
          <source>The default parser (&lt;code&gt;Twig_TokenParser&lt;/code&gt;) can be changed by calling the &lt;code&gt;setParser()&lt;/code&gt; method:</source>
          <target state="translated">デフォルトのパーサー（ &lt;code&gt;Twig_TokenParser&lt;/code&gt; ）は、 &lt;code&gt;setParser()&lt;/code&gt; メソッドを呼び出すことで変更できます。</target>
        </trans-unit>
        <trans-unit id="d26c7a2c9fe83a738a7b9abad78112e6c8260b4e" translate="yes" xml:space="preserve">
          <source>The default parser (&lt;code&gt;\Twig\TokenParser\AbstractTokenParser&lt;/code&gt;) can be changed by calling the &lt;code&gt;setParser()&lt;/code&gt; method:</source>
          <target state="translated">デフォルトのパーサー（ &lt;code&gt;\Twig\TokenParser\AbstractTokenParser&lt;/code&gt; ）は、 &lt;code&gt;setParser()&lt;/code&gt; メソッドを呼び出すことで変更できます。</target>
        </trans-unit>
        <trans-unit id="c1e4faa4acd0a6c2b7bacdf0bf279a1b394101f0" translate="yes" xml:space="preserve">
          <source>The default timezone can also be set globally by calling &lt;code&gt;setTimezone()&lt;/code&gt;:</source>
          <target state="translated">デフォルトのタイムゾーンは、 &lt;code&gt;setTimezone()&lt;/code&gt; を呼び出してグローバルに設定することもできます。</target>
        </trans-unit>
        <trans-unit id="626342b14315e9f248083458c04ae2b58c149b44" translate="yes" xml:space="preserve">
          <source>The defaults set for &lt;code&gt;number_format&lt;/code&gt; can be over-ridden upon each call using the additional parameters.</source>
          <target state="translated">&lt;code&gt;number_format&lt;/code&gt; に設定されたデフォルトは、追加のパラメーターを使用して、呼び出しごとにオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="efeb65cba867482b5ada38208846cd82dca68aeb" translate="yes" xml:space="preserve">
          <source>The documentation page for the &lt;a href=&quot;tags/extends&quot;&gt;extends&lt;/a&gt; tag describes more advanced features like block nesting, scope, dynamic inheritance, and conditional inheritance.</source>
          <target state="translated">&lt;a href=&quot;tags/extends&quot;&gt;extends&lt;/a&gt;タグのドキュメントページでは、ブロックのネスト、スコープ、動的継承、条件付き継承などのより高度な機能について説明しています。</target>
        </trans-unit>
        <trans-unit id="c7333baa1058271fcbaa17d5ac64f7ac1678e428" translate="yes" xml:space="preserve">
          <source>The easiest and most flexible is importing the whole module into a variable. That way you can access the attributes:</source>
          <target state="translated">最も簡単で柔軟性が高いのは、モジュール全体を変数にインポートすることです。そうすれば、属性にアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="6b788ceae4ae9f783bbeb47a7d912da0d56e084b" translate="yes" xml:space="preserve">
          <source>The easiest way is to output the variable delimiter (&lt;code&gt;{{&lt;/code&gt;) by using a variable expression:</source>
          <target state="translated">最も簡単な方法は、変数式を使用して変数区切り文字（ &lt;code&gt;{{&lt;/code&gt; ）を出力することです。</target>
        </trans-unit>
        <trans-unit id="1a3663987e5f711fc8bba0f3d61ad82ecaffcea1" translate="yes" xml:space="preserve">
          <source>The escaping rules are implemented as follows:</source>
          <target state="translated">エスケープルールは以下のように実装されています。</target>
        </trans-unit>
        <trans-unit id="7a56689b9c35ebbbcc2772b31e4a4dcb595bdcdd" translate="yes" xml:space="preserve">
          <source>The filesystem loader also supports namespaced templates. This allows to group your templates under different namespaces which have their own template paths.</source>
          <target state="translated">ファイルシステムローダーは、名前空間テンプレートもサポートしています。これにより、テンプレートを独自のテンプレートパスを持つ異なる名前空間の下にグループ化することができます。</target>
        </trans-unit>
        <trans-unit id="9f06a14947add56204b6cfc9f988a2c71b50df09" translate="yes" xml:space="preserve">
          <source>The filter does not perform any length validation on purpose (limits depends on the usage context), validation should be done before calling this filter.</source>
          <target state="translated">このフィルタは意図的に長さの検証を行いません (制限値は使用状況に依存します)。</target>
        </trans-unit>
        <trans-unit id="882c80cd2258f6b71d153af8aff99c1acfc710d5" translate="yes" xml:space="preserve">
          <source>The filter receives all dynamic part values before the normal filter arguments, but after the environment and the context. For instance, a call to &lt;code&gt;'foo'|a_path_b()&lt;/code&gt; will result in the following arguments to be passed to the filter: &lt;code&gt;('a', 'b', 'foo')&lt;/code&gt;.</source>
          <target state="translated">フィルタは、通常のフィルタ引数の前に、環境とコンテキストの後にすべての動的パーツ値を受け取ります。たとえば、 &lt;code&gt;'foo'|a_path_b()&lt;/code&gt; を呼び出すと、次の引数がフィルターに渡されます：（ &lt;code&gt;('a', 'b', 'foo')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9f6a40483ad9ac1f341a0971ee09d160adc287b" translate="yes" xml:space="preserve">
          <source>The filter will receive all dynamic part values before the normal filter arguments, but after the environment and the context. For instance, a call to &lt;code&gt;'foo'|a_path_b()&lt;/code&gt; will result in the following arguments to be passed to the filter: &lt;code&gt;('a', 'b', 'foo')&lt;/code&gt;.</source>
          <target state="translated">フィルターは、通常のフィルター引数の前、ただし環境とコンテキストの後にすべての動的パーツ値を受け取ります。たとえば、 &lt;code&gt;'foo'|a_path_b()&lt;/code&gt; を呼び出すと、次の引数がフィルターに渡されます：（ &lt;code&gt;('a', 'b', 'foo')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0f6b794ddb26e904320ee5020edce6046e5531e" translate="yes" xml:space="preserve">
          <source>The first argument passed to the &lt;code&gt;Twig_Filter&lt;/code&gt; constructor is the name of the filter you will use in templates and the second one is the PHP callable to associate with it.</source>
          <target state="translated">&lt;code&gt;Twig_Filter&lt;/code&gt; コンストラクターに渡される最初の引数は、テンプレートで使用するフィルターの名前です。2番目の引数は、それに関連付けるために呼び出し可能なPHPです。</target>
        </trans-unit>
        <trans-unit id="55ab714f2583c920feefe578165e1972b5dce7a6" translate="yes" xml:space="preserve">
          <source>The first argument passed to the &lt;code&gt;\Twig\TwigFilter&lt;/code&gt; constructor is the name of the filter you will use in templates and the second one is the PHP callable to associate with it.</source>
          <target state="translated">&lt;code&gt;\Twig\TwigFilter&lt;/code&gt; コンストラクターに渡される最初の引数は、テンプレートで使用するフィルターの名前であり、2番目の引数はそれに関連付けるために呼び出し可能なPHPです。</target>
        </trans-unit>
        <trans-unit id="d5d012f3dec8f179cf80cda3fe4fa06259e86d53" translate="yes" xml:space="preserve">
          <source>The first newline after a template tag is removed automatically (like in PHP). Whitespace is not further modified by the template engine, so each whitespace (spaces, tabs, newlines etc.) is returned unchanged.</source>
          <target state="translated">テンプレートタグの後の最初の改行は自動的に削除されます(PHPのように)。空白はテンプレートエンジンによってそれ以上変更されないので、各空白(スペース、タブ、改行など)は変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="d2b14df30f46d92e75dbaa41948d383844c76801" translate="yes" xml:space="preserve">
          <source>The first newline after a template tag is removed automatically (like in PHP.) Whitespace is not further modified by the template engine, so each whitespace (spaces, tabs, newlines etc.) is returned unchanged.</source>
          <target state="translated">テンプレートタグの後の最初の改行は自動的に削除されます(PHPのように)。 空白はテンプレートエンジンによってそれ以上変更されないので、各空白(スペース、タブ、改行など)は変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="4a5ac5bb1e5d2d56c45815ca12d1c104b632182f" translate="yes" xml:space="preserve">
          <source>The first section of this chapter describes how to extend Twig easily. If you want to reuse your changes in different projects or if you want to share them with others, you should then create an extension as described in the following section.</source>
          <target state="translated">この章の最初のセクションでは、Twigを簡単に拡張する方法を説明します。変更した内容を別のプロジェクトで再利用したい場合や、他の人と共有したい場合は、次のセクションで説明するように拡張機能を作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="c670eb21f6aa2ef36d65d794362b31ad1a67d644" translate="yes" xml:space="preserve">
          <source>The first section of this chapter describes how to extend Twig. If you want to reuse your changes in different projects or if you want to share them with others, you should then create an extension as described in the following section.</source>
          <target state="translated">この章の最初のセクションでは、Twig を拡張する方法を説明します。変更した内容を別のプロジェクトで再利用したい場合や、他の人と共有したい場合は、次のセクションで説明するように拡張機能を作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="ea95c296545f1347ce8eabac7b9c002b497ff4dd" translate="yes" xml:space="preserve">
          <source>The first solution may indeed work for this simplified example. But imagine we add a sidebar, which may again contain different, recurring structures of content. Now we would need to create intermediate base templates for all occurring combinations of content structure and sidebar structure&amp;hellip; and so on.</source>
          <target state="translated">最初の解決策は、この単純化された例で実際に機能する可能性があります。ただし、サイドバーを追加するとします。サイドバーには、コンテンツのさまざまな繰り返し構造が含まれている場合があります。次に、コンテンツ構造とサイドバー構造のすべての発生する組み合わせに対して中間ベーステンプレートを作成する必要があります&amp;hellip;など。</target>
        </trans-unit>
        <trans-unit id="16567a2a5f2f0181293e258acdb167ab9f0567c1" translate="yes" xml:space="preserve">
          <source>The first solution may indeed work for this simplified example. But imagine we add a sidebar, which may again contain different, recurring structures of content. Now we would need to create intermediate base templates for all occurring combinations of content structure and sidebar structure... and so on.</source>
          <target state="translated">最初の解決策は、この単純化された例では確かに機能するかもしれません。しかし、サイドバーを追加することを想像してみてください。ここで、コンテンツ構造とサイドバー構造のすべての組み合わせに対応する中間ベーステンプレートを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="8d08a5f0510c148121acba15829a11ed98a53e38" translate="yes" xml:space="preserve">
          <source>The first ternary statement is not escaped: &lt;code&gt;hello&lt;/code&gt; is marked as being safe and Twig does not escape static values (see &lt;a href=&quot;../tags/autoescape&quot;&gt;escape&lt;/a&gt;). In the second ternary statement, even if &lt;code&gt;hello&lt;/code&gt; is marked as safe, &lt;code&gt;hola&lt;/code&gt; remains unsafe and so is the whole expression. The third ternary statement is marked as safe and the result is not escaped.</source>
          <target state="translated">最初の三元の文がエスケープされていない： &lt;code&gt;hello&lt;/code&gt; 安全であるとしてマークされ、小枝が（参照静的な値をエスケープしない&lt;a href=&quot;../tags/autoescape&quot;&gt;エスケープ&lt;/a&gt;）。2番目の3項ステートメントでは、 &lt;code&gt;hello&lt;/code&gt; が安全であるとマークされていても、 &lt;code&gt;hola&lt;/code&gt; は安全ではなく、式全体が安全ではありません。3番目の3項ステートメントは安全とマークされ、結果はエスケープされません。</target>
        </trans-unit>
        <trans-unit id="3a92d6691ff4d57bf9000b437e140c0936a7eac0" translate="yes" xml:space="preserve">
          <source>The following comparison operators are supported in any expression: &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, and &lt;code&gt;&amp;lt;=&lt;/code&gt;.</source>
          <target state="translated">次の比較演算子は、任意の式でサポートされています： &lt;code&gt;==&lt;/code&gt; 、 &lt;code&gt;!=&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;=&lt;/code&gt; 、および &lt;code&gt;&amp;lt;=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8e4157f683171782d1eda1124f6096441356e08" translate="yes" xml:space="preserve">
          <source>The following example removes all HTML tags from the &lt;code&gt;name&lt;/code&gt; and title-cases it:</source>
          <target state="translated">次の例では、 &lt;code&gt;name&lt;/code&gt; からすべてのHTMLタグを削除し、タイトルに大文字と小文字を区別しています。</target>
        </trans-unit>
        <trans-unit id="1c064e461177e8eca79776322b93823eea330a4b" translate="yes" xml:space="preserve">
          <source>The following filters are matched by the above defined dynamic filter:</source>
          <target state="translated">以下のフィルタは、上記で定義されたダイナミックフィルタにマッチします。</target>
        </trans-unit>
        <trans-unit id="c16b7008a9692110f1fa6e35b3176621a1908aed" translate="yes" xml:space="preserve">
          <source>The following filters will be matched by the above defined dynamic filter:</source>
          <target state="translated">以下のフィルタは、上記で定義されたダイナミックフィルタにマッチします。</target>
        </trans-unit>
        <trans-unit id="910183fb1cddf1e3d2367c47dd8c613aa9cc0534" translate="yes" xml:space="preserve">
          <source>The following operators don&amp;rsquo;t fit into any of the other categories:</source>
          <target state="translated">次の演算子は、他のどのカテゴリにも当てはまりません。</target>
        </trans-unit>
        <trans-unit id="ac279778ea8ebc8ca1a2612798290960dbc2872a" translate="yes" xml:space="preserve">
          <source>The following operators don't fit into any of the other categories:</source>
          <target state="translated">以下の演算子は、他のカテゴリには当てはまりません。</target>
        </trans-unit>
        <trans-unit id="87ad7915cdbf5aabf9ec8f4e6f650717a3e51ad5" translate="yes" xml:space="preserve">
          <source>The following options are available:</source>
          <target state="translated">以下のようなオプションがあります。</target>
        </trans-unit>
        <trans-unit id="c6571118dc0ea8666d12be6ef5c03078a6db3b49" translate="yes" xml:space="preserve">
          <source>The following variables are always available in templates:</source>
          <target state="translated">テンプレートでは、以下の変数が常に利用可能です。</target>
        </trans-unit>
        <trans-unit id="773ec5e3fd78e37009d77619523442f212da7c0f" translate="yes" xml:space="preserve">
          <source>The format specifier is the same as supported by &lt;a href=&quot;https://secure.php.net/date&quot;&gt;date&lt;/a&gt;, except when the filtered data is of type &lt;a href=&quot;https://secure.php.net/DateInterval&quot;&gt;DateInterval&lt;/a&gt;, when the format must conform to &lt;a href=&quot;https://secure.php.net/DateInterval.format&quot;&gt;DateInterval::format&lt;/a&gt; instead.</source>
          <target state="translated">書式指定子は、フィルターされたデータの型が&lt;a href=&quot;https://secure.php.net/DateInterval&quot;&gt;DateInterval&lt;/a&gt;である場合を除き、&lt;a href=&quot;https://secure.php.net/date&quot;&gt;日付&lt;/a&gt;でサポートされているものと同じです。ただし、形式は&lt;a href=&quot;https://secure.php.net/DateInterval.format&quot;&gt;DateInterval :: format&lt;/a&gt;に準拠する必要があります。</target>
        </trans-unit>
        <trans-unit id="28cfa2cf2683aecfcabe0faf80363cea4f3e45d2" translate="yes" xml:space="preserve">
          <source>The function uses the same template loaders as the ones used to include templates. So, if you are using the filesystem loader, the templates are looked for in the paths defined by it.</source>
          <target state="translated">この関数は、テンプレートをインクルードするために使用するものと同じテンプレートローダーを使用します。つまり、ファイルシステムローダーを使用している場合、テンプレートはファイルシステムローダーで定義されたパスの中から探します。</target>
        </trans-unit>
        <trans-unit id="76f07d6136fe6a0251e0cf40140475c3c70f3874" translate="yes" xml:space="preserve">
          <source>The generated template for a &lt;code&gt;Hello {{ name }}&lt;/code&gt; template reads as follows (the actual output can differ depending on the version of Twig you are using):</source>
          <target state="translated">&lt;code&gt;Hello {{ name }}&lt;/code&gt; テンプレート用に生成されたテンプレートは次のようになります（実際の出力は、使用しているTwigのバージョンによって異なる場合があります）。</target>
        </trans-unit>
        <trans-unit id="68b9b9687e6fadedb57a8e704d9aea7510573ccc" translate="yes" xml:space="preserve">
          <source>The goal of the &lt;code&gt;vertical_boxes_skeleton.twig&lt;/code&gt; template being to factor out the HTML markup for the boxes.</source>
          <target state="translated">&lt;code&gt;vertical_boxes_skeleton.twig&lt;/code&gt; テンプレートの目標は、ボックスのHTMLマークアップを除外することです。</target>
        </trans-unit>
        <trans-unit id="d3ec7fa62db972a7d113d6329bf7c14361ed082a" translate="yes" xml:space="preserve">
          <source>The included template &lt;code&gt;render_box.html&lt;/code&gt; is able to access the &lt;code&gt;box&lt;/code&gt; variable.</source>
          <target state="translated">含まれているテンプレート &lt;code&gt;render_box.html&lt;/code&gt; は、 &lt;code&gt;box&lt;/code&gt; 変数にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="5c244412946bdca0cfb1d2e30f2901b9e323e306" translate="yes" xml:space="preserve">
          <source>The key-features are&amp;hellip;</source>
          <target state="translated">主な機能は&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="f2142ed5c914046b44b4e6ee51dee1a0740846ff" translate="yes" xml:space="preserve">
          <source>The key-features are...</source>
          <target state="translated">主な特徴は...</target>
        </trans-unit>
        <trans-unit id="4350e31bd1bcfca74d1195d7be9ce832e884de3d" translate="yes" xml:space="preserve">
          <source>The last step is done by the compiler. It takes a node tree as an input and generates PHP code usable for runtime execution of the template.</source>
          <target state="translated">最後のステップはコンパイラによって行われます。これはノードツリーを入力として受け取り、テンプレートの実行時に使用可能なPHPコードを生成します。</target>
        </trans-unit>
        <trans-unit id="7e4c8f6e9c1c90fbd784bf935a1323945a0e100c" translate="yes" xml:space="preserve">
          <source>The lexer tokenizes a template source code into a token stream (each token is an instance of &lt;code&gt;Twig_Token&lt;/code&gt;, and the stream is an instance of &lt;code&gt;Twig_TokenStream&lt;/code&gt;). The default lexer recognizes 13 different token types:</source>
          <target state="translated">レクサーは、テンプレートのソースコードをトークンストリームにトークン化します（各トークンは &lt;code&gt;Twig_Token&lt;/code&gt; のインスタンスであり、ストリームは &lt;code&gt;Twig_TokenStream&lt;/code&gt; のインスタンスです）。デフォルトのレクサーは、13の異なるトークンタイプを認識します。</target>
        </trans-unit>
        <trans-unit id="e14bb239ccf17b9941a6d77b21039a8adad0ec11" translate="yes" xml:space="preserve">
          <source>The lexer tokenizes a template source code into a token stream (each token is an instance of &lt;code&gt;\Twig\Token&lt;/code&gt;, and the stream is an instance of &lt;code&gt;\Twig\TokenStream&lt;/code&gt;). The default lexer recognizes 13 different token types:</source>
          <target state="translated">レクサーは、テンプレートのソースコードをトークンストリームにトークン化します（各トークンは &lt;code&gt;\Twig\Token&lt;/code&gt; インスタンスであり、ストリームは &lt;code&gt;\Twig\TokenStream&lt;/code&gt; インスタンスです）。デフォルトのレクサーは、13の異なるトークンタイプを認識します。</target>
        </trans-unit>
        <trans-unit id="fa3e180db5b00bf0db7d4df946d2528020bba4b8" translate="yes" xml:space="preserve">
          <source>The list of supported options:</source>
          <target state="translated">サポートされているオプションのリストです。</target>
        </trans-unit>
        <trans-unit id="812ab14218b47381617a949ea1d724c7aeb946cd" translate="yes" xml:space="preserve">
          <source>The list of supported styles:</source>
          <target state="translated">サポートされているスタイルのリストです。</target>
        </trans-unit>
        <trans-unit id="8b363acbbfa4e5d24f22616535518c19270ac8fd" translate="yes" xml:space="preserve">
          <source>The macro can then be called at will:</source>
          <target state="translated">そして、マクロを自由に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="7e85a06baf3f8044443aa5da13ddd1233e4ea86b" translate="yes" xml:space="preserve">
          <source>The macros can then be called at will in the &lt;em&gt;current&lt;/em&gt; template:</source>
          <target state="translated">その後、&lt;em&gt;現在の&lt;/em&gt;テンプレートでマクロを自由に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="861680efe60d8f9fff591116da01bc4f2e1f81a8" translate="yes" xml:space="preserve">
          <source>The main motivation for writing an extension is to move often used code into a reusable class like adding support for internationalization. An extension can define tags, filters, tests, operators, functions, and node visitors.</source>
          <target state="translated">拡張機能を書く主な動機は、国際化のサポートを追加するなど、よく使われるコードを再利用可能なクラスに移動させることです。拡張機能はタグ、フィルタ、テスト、演算子、関数、ノード訪問者を定義することができます。</target>
        </trans-unit>
        <trans-unit id="f0c808dab61aa2c1413b6a9789b8f73fdb1f7113" translate="yes" xml:space="preserve">
          <source>The main motivation for writing an extension is to move often used code into a reusable class like adding support for internationalization. An extension can define tags, filters, tests, operators, global variables, functions, and node visitors.</source>
          <target state="translated">拡張機能を書く主な動機は、国際化のサポートを追加するなど、よく使われるコードを再利用可能なクラスに移動させることです。拡張機能はタグ、フィルタ、テスト、演算子、グローバル変数、関数、ノード訪問者を定義することができます。</target>
        </trans-unit>
        <trans-unit id="9b20ae2ab298f893eea70b6e719d27ca7c00f701" translate="yes" xml:space="preserve">
          <source>The main template can also override any imported block. If the template already defines the &lt;code&gt;sidebar&lt;/code&gt; block, then the one defined in &lt;code&gt;blocks.html&lt;/code&gt; is ignored. To avoid name conflicts, you can rename imported blocks:</source>
          <target state="translated">メインテンプレートは、インポートされたブロックをオーバーライドすることもできます。テンプレートが既に &lt;code&gt;sidebar&lt;/code&gt; ブロックを定義している場合、 &lt;code&gt;blocks.html&lt;/code&gt; で定義されたものは無視されます。名前の競合を回避するために、インポートしたブロックの名前を変更できます。</target>
        </trans-unit>
        <trans-unit id="b476dab8449b4a8b72baaeb17e864ecc245459dd" translate="yes" xml:space="preserve">
          <source>The modifiers can be used on either side of the tags like in &lt;code&gt;{%-&lt;/code&gt; or &lt;code&gt;-%}&lt;/code&gt; and they consume all whitespace for that side of the tag. It is possible to use the modifiers on one side of a tag or on both sides:</source>
          <target state="translated">修飾子は、 &lt;code&gt;{%-&lt;/code&gt; または &lt;code&gt;-%}&lt;/code&gt; のようにタグのいずれかの側で使用でき、タグのその側のすべての空白を消費します。タグの片側または両側で修飾子を使用することができます。</target>
        </trans-unit>
        <trans-unit id="57df31c6d47c78e99c3d0e5645e2ae4906c69b8f" translate="yes" xml:space="preserve">
          <source>The most powerful part of Twig is template inheritance. Template inheritance allows you to build a base &quot;skeleton&quot; template that contains all the common elements of your site and defines &lt;strong&gt;blocks&lt;/strong&gt; that child templates can override.</source>
          <target state="translated">Twigの最も強力な部分はテンプレートの継承です。テンプレートの継承により、サイトのすべての一般的な要素を含み、子テンプレートがオーバーライドできる&lt;strong&gt;ブロック&lt;/strong&gt;を定義する基本的な「スケルトン」テンプレートを構築できます。</target>
        </trans-unit>
        <trans-unit id="315b0ebb7fa2b6d22e0490661c70f4f5738422a2" translate="yes" xml:space="preserve">
          <source>The most powerful part of Twig is template inheritance. Template inheritance allows you to build a base &amp;ldquo;skeleton&amp;rdquo; template that contains all the common elements of your site and defines &lt;strong&gt;blocks&lt;/strong&gt; that child templates can override.</source>
          <target state="translated">Twigの最も強力な部分は、テンプレートの継承です。テンプレートの継承により、サイトのすべての一般的な要素を含み、子テンプレートがオーバーライドできる&lt;strong&gt;ブロック&lt;/strong&gt;を定義する基本の「スケルトン」テンプレートを構築できます。</target>
        </trans-unit>
        <trans-unit id="f3ae71e03e841e47ac1f9239e08fed4f8f7f1033" translate="yes" xml:space="preserve">
          <source>The name of the template depends on the template loader. For instance, the &lt;code&gt;Twig_Loader_Filesystem&lt;/code&gt; allows you to access other templates by giving the filename. You can access templates in subdirectories with a slash:</source>
          <target state="translated">テンプレートの名前は、テンプレートローダーによって異なります。たとえば、 &lt;code&gt;Twig_Loader_Filesystem&lt;/code&gt; を使用すると、ファイル名を指定して他のテンプレートにアクセスできます。スラッシュを使用してサブディレクトリ内のテンプレートにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="de0842dcd3de8ad25232ac69f83a54176fb9c8c3" translate="yes" xml:space="preserve">
          <source>The name of the template depends on the template loader. For instance, the &lt;code&gt;\Twig\Loader\FilesystemLoader&lt;/code&gt; allows you to access other templates by giving the filename. You can access templates in subdirectories with a slash:</source>
          <target state="translated">テンプレートの名前は、テンプレートローダーによって異なります。たとえば、 &lt;code&gt;\Twig\Loader\FilesystemLoader&lt;/code&gt; 使用すると、ファイル名を指定して他のテンプレートにアクセスできます。スラッシュを使用してサブディレクトリのテンプレートにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="addc305d15e7077a30488beca9ad7fe5dd8d2645" translate="yes" xml:space="preserve">
          <source>The number of items in the sequence</source>
          <target state="translated">シーケンスの項目数</target>
        </trans-unit>
        <trans-unit id="f55c0141f00d125146e625b42450cdd91a9bd7e1" translate="yes" xml:space="preserve">
          <source>The number of iterations from the end of the loop (0 indexed)</source>
          <target state="translated">ループの終了からの反復回数(インデックスは0)を指定します。</target>
        </trans-unit>
        <trans-unit id="e4908293726276d229be0d3d16697517841de110" translate="yes" xml:space="preserve">
          <source>The number of iterations from the end of the loop (1 indexed)</source>
          <target state="translated">ループの終了からの反復回数(インデックスは1回</target>
        </trans-unit>
        <trans-unit id="d7c03fe0b71fb7bfec02b7b8fdfe10a7c98a5c92" translate="yes" xml:space="preserve">
          <source>The operator precedence is as follows, with the lowest-precedence operators listed first: &lt;code&gt;?:&lt;/code&gt; (ternary operator), &lt;code&gt;b-and&lt;/code&gt;, &lt;code&gt;b-xor&lt;/code&gt;, &lt;code&gt;b-or&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;in&lt;/code&gt;, &lt;code&gt;matches&lt;/code&gt;, &lt;code&gt;starts with&lt;/code&gt;, &lt;code&gt;ends with&lt;/code&gt;, &lt;code&gt;..&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;//&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;is&lt;/code&gt; (tests), &lt;code&gt;**&lt;/code&gt;, &lt;code&gt;??&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt; (filters), &lt;code&gt;[]&lt;/code&gt;, and &lt;code&gt;.&lt;/code&gt;:</source>
          <target state="translated">次のように最も低い優先順位の演算子が最初にリストとオペレータの優先順位は、ある &lt;code&gt;?:&lt;/code&gt; （三項演算子）、 &lt;code&gt;b-and&lt;/code&gt; 、 &lt;code&gt;b-xor&lt;/code&gt; 、 &lt;code&gt;b-or&lt;/code&gt; 、 &lt;code&gt;or&lt;/code&gt; 、 &lt;code&gt;and&lt;/code&gt; 、 &lt;code&gt;==&lt;/code&gt; 、 &lt;code&gt;!=&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;=&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;in&lt;/code&gt; 、 &lt;code&gt;matches&lt;/code&gt; 、で &lt;code&gt;starts with&lt;/code&gt; で &lt;code&gt;ends with&lt;/code&gt; 、 &lt;code&gt;..&lt;/code&gt; 、 &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; 、 &lt;code&gt;~&lt;/code&gt; 、 &lt;code&gt;*&lt;/code&gt; 、 &lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;//&lt;/code&gt; 、 &lt;code&gt;%&lt;/code&gt; 、 &lt;code&gt;is&lt;/code&gt; （tests）、 &lt;code&gt;**&lt;/code&gt; 、 &lt;code&gt;??&lt;/code&gt; 、 &lt;code&gt;|&lt;/code&gt; （フィルター）、 &lt;code&gt;[]&lt;/code&gt; 、および &lt;code&gt;.&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="78bc6ac3ffefb69fa5a9d53de83bd329eaec89f9" translate="yes" xml:space="preserve">
          <source>The operator precedence is as follows, with the lowest-precedence operators listed first: &lt;code&gt;b-and&lt;/code&gt;, &lt;code&gt;b-xor&lt;/code&gt;, &lt;code&gt;b-or&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;in&lt;/code&gt;, &lt;code&gt;matches&lt;/code&gt;, &lt;code&gt;starts with&lt;/code&gt;, &lt;code&gt;ends with&lt;/code&gt;, &lt;code&gt;..&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;//&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;is&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt;, and &lt;code&gt;.&lt;/code&gt;:</source>
          <target state="translated">次のように最も低い優先順位の演算子が最初にリストとオペレータの優先順位は、であり &lt;code&gt;b-and&lt;/code&gt; 、 &lt;code&gt;b-xor&lt;/code&gt; 、 &lt;code&gt;b-or&lt;/code&gt; 、 &lt;code&gt;or&lt;/code&gt; 、 &lt;code&gt;and&lt;/code&gt; 、 &lt;code&gt;==&lt;/code&gt; 、 &lt;code&gt;!=&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;=&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;in&lt;/code&gt; 、 &lt;code&gt;matches&lt;/code&gt; 、 &lt;code&gt;starts with&lt;/code&gt; 、 &lt;code&gt;ends with&lt;/code&gt; 、 &lt;code&gt;..&lt;/code&gt; .、 &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; 、〜、 &lt;code&gt;~&lt;/code&gt; &lt;code&gt;*&lt;/code&gt; 、 &lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;//&lt;/code&gt; 、 &lt;code&gt;%&lt;/code&gt; 、 &lt;code&gt;is&lt;/code&gt; 、 &lt;code&gt;**&lt;/code&gt; 、 &lt;code&gt;|&lt;/code&gt; 、 &lt;code&gt;[]&lt;/code&gt; 、および &lt;code&gt;.&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4e5f774c81db74dce3749cbfa6c413108a7708fb" translate="yes" xml:space="preserve">
          <source>The output will be similar to:</source>
          <target state="translated">と似たような出力になります。</target>
        </trans-unit>
        <trans-unit id="673abb75de556e0885cff50b28e5a9cae662ebae" translate="yes" xml:space="preserve">
          <source>The parent context</source>
          <target state="translated">親コンテキスト</target>
        </trans-unit>
        <trans-unit id="612ced3f56e7cfeac2917746ea7fba6d6eab800d" translate="yes" xml:space="preserve">
          <source>The parser converts the token stream into an AST (Abstract Syntax Tree), or a node tree (an instance of &lt;code&gt;Twig_Node_Module&lt;/code&gt;). The core extension defines the basic nodes like: &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt;, ... and the expression nodes.</source>
          <target state="translated">パーサーはトークンストリームをAST（抽象構文ツリー）またはノードツリー（ &lt;code&gt;Twig_Node_Module&lt;/code&gt; のインスタンス）に変換します。コア拡張は、 &lt;code&gt;for&lt;/code&gt; 、 &lt;code&gt;if&lt;/code&gt; 、...などの基本ノードと式ノードを定義します。</target>
        </trans-unit>
        <trans-unit id="db132e074d1e44d840963fc70b6e0e2638217f67" translate="yes" xml:space="preserve">
          <source>The parser converts the token stream into an AST (Abstract Syntax Tree), or a node tree (an instance of &lt;code&gt;\Twig\Node\ModuleNode&lt;/code&gt;). The core extension defines the basic nodes like: &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt;, &amp;hellip; and the expression nodes.</source>
          <target state="translated">パーサーは、トークンストリームをAST（抽象構文木）またはノードツリー（ &lt;code&gt;\Twig\Node\ModuleNode&lt;/code&gt; インスタンス）に変換します。コア拡張機能は、 &lt;code&gt;for&lt;/code&gt; 、 &lt;code&gt;if&lt;/code&gt; 、&amp;hellip;および式ノードのような基本ノードを定義します。</target>
        </trans-unit>
        <trans-unit id="5655ed1ff8aed24268a1afb344a9c125842ef305" translate="yes" xml:space="preserve">
          <source>The parsing process is simplified thanks to a bunch of methods you can call from the token stream (&lt;code&gt;$this-&amp;gt;parser-&amp;gt;getStream()&lt;/code&gt;):</source>
          <target state="translated">トークンストリーム（ &lt;code&gt;$this-&amp;gt;parser-&amp;gt;getStream()&lt;/code&gt; ）から呼び出すことができる一連のメソッドのおかげで、解析プロセスが簡略化されます。</target>
        </trans-unit>
        <trans-unit id="f3574d65109403c2cb81586702c761af2d0ad345" translate="yes" xml:space="preserve">
          <source>The policy object is the first argument of the sandbox constructor:</source>
          <target state="translated">ポリシーオブジェクトはサンドボックスのコンストラクタの第一引数になります。</target>
        </trans-unit>
        <trans-unit id="476b1568969ccc06c6d3438260ae7806fade3fe9" translate="yes" xml:space="preserve">
          <source>The recommended way to install Twig is via Composer:</source>
          <target state="translated">Twigのおすすめのインストール方法は、Composerを経由してインストールする方法です。</target>
        </trans-unit>
        <trans-unit id="5aa8f413f50516f554d66069df8fd0a454a1c75c" translate="yes" xml:space="preserve">
          <source>The rendering of a Twig template can be summarized into four key steps:</source>
          <target state="translated">Twigテンプレートのレンダリングは、4つの重要なステップにまとめることができます。</target>
        </trans-unit>
        <trans-unit id="0805c8022dee59c0d1d0f8ba4a500510f262ee9b" translate="yes" xml:space="preserve">
          <source>The resolution algorithm is the same as the one used for the &lt;code&gt;.&lt;/code&gt; notation, except that the item can be any valid expression.</source>
          <target state="translated">解決アルゴリズムは、で使用されるものと同じ &lt;code&gt;.&lt;/code&gt; 表記法。ただし、アイテムは任意の有効な式にできます。</target>
        </trans-unit>
        <trans-unit id="e6c5f1e9e032fae94b06416d0874435a647e4649" translate="yes" xml:space="preserve">
          <source>The rules to determine if an expression is &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; are the same as in PHP; here are the edge cases rules:</source>
          <target state="translated">式が &lt;code&gt;true&lt;/code&gt; か &lt;code&gt;false&lt;/code&gt; かを判別するルールは、PHPと同じです。エッジケースのルールは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="5667fb50053afafdfed7bf9387c671b584ebccd2" translate="yes" xml:space="preserve">
          <source>The scoping rules are the same whether you imported macros via &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;from&lt;/code&gt;.</source>
          <target state="translated">スコープ規則は、 &lt;code&gt;import&lt;/code&gt; を介してマクロをインポートした場合でも &lt;code&gt;from&lt;/code&gt; インポートした場合でも同じです。</target>
        </trans-unit>
        <trans-unit id="0ed34948a81970e240357513831102e2a671eb87" translate="yes" xml:space="preserve">
          <source>The second solution involves duplication of common code with all its negative consequences: any change involves finding and editing all affected copies of the structure, correctness has to be verified for each copy, copies may go out of sync by careless modifications etc.</source>
          <target state="translated">2つ目の解決策は、すべての否定的な結果を伴う共通コードの複製を含みます:どのような変更も、構造体の影響を受けるすべてのコピーを見つけて編集する必要があります、正確性は各コピーに対して検証されなければなりません、コピーは不注意な変更などによって同期を失う可能性があります。</target>
        </trans-unit>
        <trans-unit id="28f59f1aaed7ee9b4d5d01401a14b713526c2294" translate="yes" xml:space="preserve">
          <source>The separator between elements is an empty string per default, but you can define it with the optional first parameter:</source>
          <target state="translated">要素間の区切り文字はデフォルトでは空の文字列ですが、オプションの最初のパラメータで定義することができます。</target>
        </trans-unit>
        <trans-unit id="2c26d2b17c16e7bdfb2f6cff610f9b02b3dcb587" translate="yes" xml:space="preserve">
          <source>The simplest form of expressions are literals. Literals are representations for PHP types such as strings, numbers, and arrays. The following literals exist:</source>
          <target state="translated">式の最も単純な形式はリテラルです。リテラルは、文字列や数値、配列などの PHP の型を表すものです。以下のリテラルが存在します。</target>
        </trans-unit>
        <trans-unit id="8bc546a32b1a826afc5723deeed49d9fe549ac18" translate="yes" xml:space="preserve">
          <source>The simplest way to configure Twig to load templates for your application looks roughly like this:</source>
          <target state="translated">アプリケーションのテンプレートをロードするためにTwigを設定する最も簡単な方法は、大体次のようになります。</target>
        </trans-unit>
        <trans-unit id="5950f218b5e82f58b716b595186a9cd89b310099" translate="yes" xml:space="preserve">
          <source>The simplest way to use methods is to define them on the extension itself:</source>
          <target state="translated">メソッドを使用する最もシンプルな方法は、拡張機能自体にメソッドを定義することです。</target>
        </trans-unit>
        <trans-unit id="935a6993e4dbedb42b8a75c15f45ed186cb819a6" translate="yes" xml:space="preserve">
          <source>The tag is not flexible as you cannot use it in an expression:</source>
          <target state="translated">このタグは式の中では使えないので、柔軟性がありません。</target>
        </trans-unit>
        <trans-unit id="570c7975cafae6b1fc10dda241e66146d26a496e" translate="yes" xml:space="preserve">
          <source>The tag outputs something;</source>
          <target state="translated">タグは何かを出力します。</target>
        </trans-unit>
        <trans-unit id="fb9f43c9283804263a29fbd1d4b14bfba3d67d59" translate="yes" xml:space="preserve">
          <source>The template name can be any valid Twig expression:</source>
          <target state="translated">テンプレート名には、有効なTwig式を指定することができます。</target>
        </trans-unit>
        <trans-unit id="6cf8636f7d382a7639257ade415410c8c320316d" translate="yes" xml:space="preserve">
          <source>The typical way to configure Twig to load templates for an application looks roughly like this:</source>
          <target state="translated">Twigがアプリケーションのテンプレートを読み込むように設定する典型的な方法は、大体次のようになります。</target>
        </trans-unit>
        <trans-unit id="fd076a0bfe9a72011fe9f978aa7103ba995f3c1f" translate="yes" xml:space="preserve">
          <source>Then, add the filter to the Twig environment:</source>
          <target state="translated">そして、Twig環境にフィルターを追加します。</target>
        </trans-unit>
        <trans-unit id="d9bcd4837a06c852bffe5d7e7bbe04297acc58ed" translate="yes" xml:space="preserve">
          <source>Then, add the filter to your Twig environment:</source>
          <target state="translated">そして、Twig環境にフィルターを追加します。</target>
        </trans-unit>
        <trans-unit id="4ddf49563b69a5ffb88c7c6ecffd187bc79ffc70" translate="yes" xml:space="preserve">
          <source>Then, the &lt;strong&gt;parser&lt;/strong&gt; converts the token stream into a meaningful tree of nodes (the Abstract Syntax Tree);</source>
          <target state="translated">次に、&lt;strong&gt;パーサー&lt;/strong&gt;はトークンストリームをノードの意味のあるツリー（抽象構文ツリー）に変換します。</target>
        </trans-unit>
        <trans-unit id="e710debb8ca9ec4095842606119799e685a51289" translate="yes" xml:space="preserve">
          <source>Then, use the &lt;code&gt;twig/extra-bundle&lt;/code&gt; on Symfony projects or add the extension explicitly on the Twig environment:</source>
          <target state="translated">次に、Symfonyプロジェクトで &lt;code&gt;twig/extra-bundle&lt;/code&gt; を使用するか、Twig環境で明示的に拡張機能を追加します。</target>
        </trans-unit>
        <trans-unit id="45c9c61b30124f9fde334fc87f9ef4f7280170ea" translate="yes" xml:space="preserve">
          <source>There are two kinds of delimiters: &lt;code&gt;{% ... %}&lt;/code&gt; and &lt;code&gt;{{ ... }}&lt;/code&gt;. The first one is used to execute statements such as for-loops, the latter outputs the result of an expression.</source>
          <target state="translated">区切り文字には、 &lt;code&gt;{% ... %}&lt;/code&gt; と &lt;code&gt;{{ ... }}&lt;/code&gt; 2種類があります。前者はforループなどのステートメントを実行するために使用され、後者は式の結果を出力します。</target>
        </trans-unit>
        <trans-unit id="54045c78156842fb4a2d2b71f752119954a2c76a" translate="yes" xml:space="preserve">
          <source>There are two kinds of delimiters: &lt;code&gt;{% ... %}&lt;/code&gt; and &lt;code&gt;{{ ... }}&lt;/code&gt;. The first one is used to execute statements such as for-loops, the latter prints the result of an expression to the template.</source>
          <target state="translated">区切り文字には、 &lt;code&gt;{% ... %}&lt;/code&gt; と &lt;code&gt;{{ ... }}&lt;/code&gt; 2種類があります。最初のものはforループなどのステートメントを実行するために使用され、後者は式の結果をテンプレートに出力します。</target>
        </trans-unit>
        <trans-unit id="d2d925bc84fedb7bd3c0ff8cef00565e6c94128b" translate="yes" xml:space="preserve">
          <source>There are two ways to import macros. You can import the complete template containing the macros into a local variable (via the &lt;code&gt;import&lt;/code&gt; tag) or only import specific macros from the template (via the &lt;code&gt;from&lt;/code&gt; tag).</source>
          <target state="translated">マクロをインポートする方法は2つあります。マクロを含む完全なテンプレートを（ &lt;code&gt;import&lt;/code&gt; タグを介して）ローカル変数にインポートすることも、テンプレートから（ &lt;code&gt;from&lt;/code&gt; タグを介して）特定のマクロのみをインポートすることもできます。</target>
        </trans-unit>
        <trans-unit id="87d6b5aac9cf1e2f97301f786b8e656e193b37c2" translate="yes" xml:space="preserve">
          <source>There are two ways to import templates. You can import the complete template into a variable or request specific macros from it.</source>
          <target state="translated">テンプレートをインポートするには2つの方法があります。テンプレート全体を変数にインポートするか、その変数から特定のマクロをリクエストすることができます。</target>
        </trans-unit>
        <trans-unit id="e9a7700bf3f3a7f17d04c860ce312e5d3a03b627" translate="yes" xml:space="preserve">
          <source>These defaults can be changed through the core extension:</source>
          <target state="translated">これらのデフォルト値は、コアエクステンションを通して変更することができます。</target>
        </trans-unit>
        <trans-unit id="06f4085a7a27e0a51ed63ecc74013b50005df7fd" translate="yes" xml:space="preserve">
          <source>These defaults can be easily changed through the core extension:</source>
          <target state="translated">これらのデフォルト値は、コアエクステンションで簡単に変更することができます。</target>
        </trans-unit>
        <trans-unit id="c98f2a0bf2c292d3c91d370c544ce89ecac34e16" translate="yes" xml:space="preserve">
          <source>These two solutions do not scale well because they each have a major drawback:</source>
          <target state="translated">この2つのソリューションは、それぞれに大きな欠点があるため、スケールがうまくいきません。</target>
        </trans-unit>
        <trans-unit id="23f6955d23835bd73fbc69e62d45469c1ec33446" translate="yes" xml:space="preserve">
          <source>Think of an embedded template as a &quot;micro layout skeleton&quot;.</source>
          <target state="translated">埋め込みテンプレートは「マイクロレイアウトのスケルトン」と考えてください。</target>
        </trans-unit>
        <trans-unit id="906f4540b9b418ae1dcc1f292920e51df75408ed" translate="yes" xml:space="preserve">
          <source>Think of an embedded template as a &amp;ldquo;micro layout skeleton&amp;rdquo;.</source>
          <target state="translated">埋め込まれたテンプレートを「マイクロレイアウトスケルトン」と考えてください。</target>
        </trans-unit>
        <trans-unit id="fb6a6eec4d428662641f8d3c2820dfb951d81a46" translate="yes" xml:space="preserve">
          <source>This behavior depends on the application embedding Twig.</source>
          <target state="translated">この動作はTwigを埋め込むアプリケーションに依存します。</target>
        </trans-unit>
        <trans-unit id="aacd43e82fe743bc45f3661b7e03e79e613e518c" translate="yes" xml:space="preserve">
          <source>This can be achieved with the following code:</source>
          <target state="translated">これは以下のコードで実現できます。</target>
        </trans-unit>
        <trans-unit id="38683bc182c9b9e9a72b8cf1d5d34761b07fee44" translate="yes" xml:space="preserve">
          <source>This can be easily achieved with the following code:</source>
          <target state="translated">これは以下のコードで簡単に実現できます。</target>
        </trans-unit>
        <trans-unit id="dd75a429027769005ca3c431661e9140bda2b034" translate="yes" xml:space="preserve">
          <source>This chapter describes the API to Twig and not the template language. It will be most useful as reference to those implementing the template interface to the application and not those who are creating Twig templates.</source>
          <target state="translated">この章では、TwigのAPIについて説明し、テンプレート言語については説明しません。これは、Twigテンプレートを作成している人ではなく、アプリケーションへのテンプレートインターフェースを実装している人の参考になるでしょう。</target>
        </trans-unit>
        <trans-unit id="2030e6ed0803a3c954599e63b05bc1d979a3941b" translate="yes" xml:space="preserve">
          <source>This creates a template environment with a default configuration and a loader that looks up templates in the &lt;code&gt;/path/to/templates/&lt;/code&gt; directory. Different loaders are available and you can also write your own if you want to load templates from a database or other resources.</source>
          <target state="translated">これにより、デフォルト構成のテンプレート環境と、 &lt;code&gt;/path/to/templates/&lt;/code&gt; ディレクトリでテンプレートを検索するローダーが作成されます。さまざまなローダーが利用可能であり、データベースまたは他のリソースからテンプレートをロードする場合は、独自のローダーを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="f0dcaa483477b7fec5f6edb94f4eaad2cbf30698" translate="yes" xml:space="preserve">
          <source>This document describes the syntax and semantics of the template engine and will be most useful as reference to those creating Twig templates.</source>
          <target state="translated">このドキュメントでは、テンプレートエンジンの構文とセマンティクスについて説明しており、Twigテンプレートを作成する際の参考になるでしょう。</target>
        </trans-unit>
        <trans-unit id="5ddf705d4692f11943f0857eb819f6ccc94d0258" translate="yes" xml:space="preserve">
          <source>This extension does nothing for now. We will customize it in the next sections.</source>
          <target state="translated">この拡張機能は今のところ何もしません。次のセクションでカスタマイズしていきます。</target>
        </trans-unit>
        <trans-unit id="ace843964eff2ec15ebad79cc831cd3cf1cb8441" translate="yes" xml:space="preserve">
          <source>This filter relies on the &lt;a href=&quot;https://secure.php.net/iconv&quot;&gt;iconv&lt;/a&gt; extension.</source>
          <target state="translated">このフィルターは、&lt;a href=&quot;https://secure.php.net/iconv&quot;&gt;iconv&lt;/a&gt;拡張機能に依存しています。</target>
        </trans-unit>
        <trans-unit id="83d4e7381cf870e644b158bfaa0519c6dbf2e670" translate="yes" xml:space="preserve">
          <source>This is the documentation for Twig, the flexible, fast, and secure template engine for PHP.</source>
          <target state="translated">これは、柔軟かつ高速で安全な PHP 用テンプレートエンジンである Twig のドキュメントです。</target>
        </trans-unit>
        <trans-unit id="2a4e79c5da9275c422612b015b496b8e6044ddb6" translate="yes" xml:space="preserve">
          <source>This is very convenient but not recommended as it makes template compilation depend on runtime dependencies even if they are not needed (think for instance as a dependency that connects to a database engine).</source>
          <target state="translated">これは非常に便利ですが、テンプレートのコンパイルを実行時の依存関係に依存させてしまうので、お勧めできません(例えば、データベースエンジンに接続する依存関係と考えてください)。</target>
        </trans-unit>
        <trans-unit id="ea23bac535d13b11eb65c1ae34222ac10317e809" translate="yes" xml:space="preserve">
          <source>This loader is very useful for unit testing. It can also be used for small projects where storing all templates in a single PHP file might make sense.</source>
          <target state="translated">このローダーはユニットテストにとても便利です。また、すべてのテンプレートを一つの PHP ファイルに格納することが理にかなっているかもしれない小規模なプロジェクトにも使用できます。</target>
        </trans-unit>
        <trans-unit id="78b68d9999fdf3afa7ce0e71f640505ca1182c5b" translate="yes" xml:space="preserve">
          <source>This method won&amp;rsquo;t catch any sandbox policy violations because the policy is enforced during template rendering (as Twig needs the context for some checks like allowed methods on objects).</source>
          <target state="translated">このメソッドは、テンプレートのレンダリング中にポリシーが適用されるため、サンドボックスポリシー違反をキャッチしません（Twigは、オブジェクトで許可されたメソッドなどのいくつかのチェックのコンテキストを必要とするため）。</target>
        </trans-unit>
        <trans-unit id="0fa9f2240361a3ee4fb58fc704cdf516a783509a" translate="yes" xml:space="preserve">
          <source>This method won't catch any sandbox policy violations because the policy is enforced during template rendering (as Twig needs the context for some checks like allowed methods on objects).</source>
          <target state="translated">このメソッドはサンドボックスポリシーの違反を検知することはありません。</target>
        </trans-unit>
        <trans-unit id="d987f80afc8f1be0bae0a1b1849b1101459785c6" translate="yes" xml:space="preserve">
          <source>This recipe is the continuation of the previous one. Even if you store the contributed templates in a database, you might want to keep the original/base templates on the filesystem. When templates can be loaded from different sources, you need to use the &lt;code&gt;Twig_Loader_Chain&lt;/code&gt; loader.</source>
          <target state="translated">このレシピは、前のレシピの続きです。提供されたテンプレートをデータベースに保存する場合でも、元の/ベースのテンプレートをファイルシステムに保持したい場合があります。テンプレートをさまざまなソースからロードできる場合は、 &lt;code&gt;Twig_Loader_Chain&lt;/code&gt; ローダーを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7c4cd5b51d80c5953871d8b5bab107c0f52f3e59" translate="yes" xml:space="preserve">
          <source>This recipe is the continuation of the previous one. Even if you store the contributed templates in a database, you might want to keep the original/base templates on the filesystem. When templates can be loaded from different sources, you need to use the &lt;code&gt;\Twig\Loader\ChainLoader&lt;/code&gt; loader.</source>
          <target state="translated">このレシピは前のレシピの続きです。提供されたテンプレートをデータベースに保存する場合でも、元のテンプレート/ベーステンプレートをファイルシステムに保持することをお勧めします。テンプレートをさまざまなソースからロードできる場合は、 &lt;code&gt;\Twig\Loader\ChainLoader&lt;/code&gt; ローダーを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7e5a70f22e0e3943bf23733efd34809e13affed5" translate="yes" xml:space="preserve">
          <source>This recipe was inspired by the following Django wiki page: &lt;a href=&quot;https://code.djangoproject.com/wiki/ExtendingTemplates&quot;&gt;https://code.djangoproject.com/wiki/ExtendingTemplates&lt;/a&gt;</source>
          <target state="translated">このレシピは、次のDjango wikiページに触発されました：&lt;a href=&quot;https://code.djangoproject.com/wiki/ExtendingTemplates&quot;&gt;https&lt;/a&gt; : //code.djangoproject.com/wiki/ExtendingTemplates</target>
        </trans-unit>
        <trans-unit id="3b9272055aa356bf24d7aa3c56d2da8a6b08cdd6" translate="yes" xml:space="preserve">
          <source>This section describes the features added by the built-in extensions.</source>
          <target state="translated">ここでは、内蔵拡張機能で追加された機能について説明します。</target>
        </trans-unit>
        <trans-unit id="ae100f2d3f02efd9269340625f673bbda6624380" translate="yes" xml:space="preserve">
          <source>This section gives you a brief introduction to the PHP API for Twig.</source>
          <target state="translated">このセクションでは、Twig 用の PHP API について簡単に紹介します。</target>
        </trans-unit>
        <trans-unit id="2e8614a3c8387d696228897b403a0066bd8f7cf3" translate="yes" xml:space="preserve">
          <source>This section gives you a brief introduction to the PHP API for Twig:</source>
          <target state="translated">このセクションでは、Twig 用の PHP API について簡単に紹介します。</target>
        </trans-unit>
        <trans-unit id="5736e92ed139d7ba64706ce677dfca132f14d10d" translate="yes" xml:space="preserve">
          <source>This tag is not meant to &quot;optimize&quot; the size of the generated HTML content but merely to avoid extra whitespace between HTML tags to avoid browser rendering quirks under some circumstances.</source>
          <target state="translated">このタグは、生成されたHTMLコンテンツのサイズを「最適化」することを意図したものではなく、状況によってはブラウザのレンダリングのクセを避けるためにHTMLタグ間の余分な空白を避けるだけです。</target>
        </trans-unit>
        <trans-unit id="42892fea5067faea90e6f237403b49af12d3a4e2" translate="yes" xml:space="preserve">
          <source>This tag is not meant to &amp;ldquo;optimize&amp;rdquo; the size of the generated HTML content but merely to avoid extra whitespace between HTML tags to avoid browser rendering quirks under some circumstances.</source>
          <target state="translated">このタグは、生成されたHTMLコンテンツのサイズを「最適化」することを目的としたものではなく、状況によってはブラウザのレンダリングの癖を回避するためにHTMLタグ間の余分な空白を回避することを目的としています。</target>
        </trans-unit>
        <trans-unit id="06ae559a1a3118598da1ab09690c171423c4f14f" translate="yes" xml:space="preserve">
          <source>This will create a template environment with the default settings and a loader that looks up the templates in the &lt;code&gt;/path/to/templates/&lt;/code&gt; folder. Different loaders are available and you can also write your own if you want to load templates from a database or other resources.</source>
          <target state="translated">これにより、デフォルト設定のテンプレート環境と、 &lt;code&gt;/path/to/templates/&lt;/code&gt; フォルダー内のテンプレートを検索するローダーが作成されます。さまざまなローダーが利用可能で、データベースやその他のリソースからテンプレートをロードする場合は、独自のローダーを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="4eb832eb02fec68d1c91369120b18a5908b9e34a" translate="yes" xml:space="preserve">
          <source>Three steps are needed to define a new tag:</source>
          <target state="translated">新しいタグを定義するには、3つのステップが必要です。</target>
        </trans-unit>
        <trans-unit id="d1f7dc891b5e5d1797163b556e805123c9369e4f" translate="yes" xml:space="preserve">
          <source>Timezone</source>
          <target state="translated">Timezone</target>
        </trans-unit>
        <trans-unit id="d19ceca501465c339e3bcf2bc0d8ff02bb697d6c" translate="yes" xml:space="preserve">
          <source>Tip</source>
          <target state="translated">Tip</target>
        </trans-unit>
        <trans-unit id="1c3a3f99b4f351a3a56c5bdac3c697d5452fc289" translate="yes" xml:space="preserve">
          <source>To add a filter to an extension, you need to override the &lt;code&gt;getFilters()&lt;/code&gt; method. This method must return an array of filters to add to the Twig environment:</source>
          <target state="translated">フィルターを拡張機能に追加するには、 &lt;code&gt;getFilters()&lt;/code&gt; メソッドをオーバーライドする必要があります。このメソッドは、Twig環境に追加するフィルターの配列を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="9838487cbd27f08cc48dea1a0411c383a932b2c8" translate="yes" xml:space="preserve">
          <source>To apply a filter on a section of code, wrap it in the &lt;a href=&quot;tags/filter&quot;&gt;filter&lt;/a&gt; tag:</source>
          <target state="translated">コードのセクションにフィルターを適用するには、&lt;a href=&quot;tags/filter&quot;&gt;フィルター&lt;/a&gt;タグでラップします。</target>
        </trans-unit>
        <trans-unit id="5f516d15c533049381a3900a4183b6190f5b4d01" translate="yes" xml:space="preserve">
          <source>To apply a filter on a section of code, wrap it with the &lt;a href=&quot;tags/apply&quot;&gt;apply&lt;/a&gt; tag:</source>
          <target state="translated">コードのセクションにフィルターを適用するには、&lt;a href=&quot;tags/apply&quot;&gt;apply&lt;/a&gt;タグでラップします。</target>
        </trans-unit>
        <trans-unit id="b4c58be64438c26f383a66eb2663df1846bfacfa" translate="yes" xml:space="preserve">
          <source>To change the block delimiters, you need to create your own lexer object:</source>
          <target state="translated">ブロック区切りを変更するには、独自のレキサーオブジェクトを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="f2738ba060aad383469ea8d0b84018026dac0e9d" translate="yes" xml:space="preserve">
          <source>To comment-out part of a line in a template, use the comment syntax &lt;code&gt;{# ...
#}&lt;/code&gt;. This is useful for debugging or to add information for other template designers or yourself:</source>
          <target state="translated">テンプレートの行の一部をコメントアウトするには、コメント構文 &lt;code&gt;{# ... #}&lt;/code&gt; 使用します。これは、デバッグしたり、他のテンプレート設計者や自分の情報を追加したりするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="b7668a039080c1019dbebd84d210fb85089eb2e6" translate="yes" xml:space="preserve">
          <source>To ease debugging, you can also give the template a name that will be part of any related error message:</source>
          <target state="translated">デバッグを容易にするために、関連するエラーメッセージの一部となるテンプレート名を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="3a733121523112e760a7e8b29885945c210de2ed" translate="yes" xml:space="preserve">
          <source>To easily remove all deprecated feature usages from your templates, write and run a script along the lines of the following:</source>
          <target state="translated">非推奨の機能をテンプレートから簡単に削除するには、以下のようなスクリプトを書いて実行します。</target>
        </trans-unit>
        <trans-unit id="6f36cfc4945a0a2add9986f0f898b2a2812f78da" translate="yes" xml:space="preserve">
          <source>To escape words and characters in the date format use &lt;code&gt;\\&lt;/code&gt; in front of each character:</source>
          <target state="translated">日付形式の単語と文字をエスケープするには、各文字の前に &lt;code&gt;\\&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="c8f5657aa5d8abd52a0bf4c6e7b998777489fbfa" translate="yes" xml:space="preserve">
          <source>To format negative numbers or math calculation, wrap the previous statement with parentheses (needed because of Twig&amp;rsquo;s &lt;a href=&quot;../templates#twig-expressions&quot;&gt;precedence of operators&lt;/a&gt;):</source>
          <target state="translated">負の数または数学計算をフォーマットするには、前のステートメントを括弧で囲みます（Twigの&lt;a href=&quot;../templates#twig-expressions&quot;&gt;演算子&lt;/a&gt;の優先順位のために必要です）：</target>
        </trans-unit>
        <trans-unit id="6ef5c2a4e82dd6e65b0e553cfd760b57830b2a95" translate="yes" xml:space="preserve">
          <source>To format negative numbers, wrap the number with parentheses (needed because of Twig's &lt;a href=&quot;../templates#twig-expressions&quot;&gt;precedence of operators&lt;/a&gt;:</source>
          <target state="translated">負の数をフォーマットするには、数値を括弧で囲みます（&lt;a href=&quot;../templates#twig-expressions&quot;&gt;演算子の&lt;/a&gt; Twigの優先順位のために必要です：</target>
        </trans-unit>
        <trans-unit id="6a255173ad218eef9e3a68f248639c71623fa06b" translate="yes" xml:space="preserve">
          <source>To get around this, force Twig to invalidate the bytecode cache:</source>
          <target state="translated">これを回避するには、Twigでバイトコードキャッシュを強制的に無効にします。</target>
        </trans-unit>
        <trans-unit id="c2d4b350ed889a5a0fdd9e9b1ce8d07a438ea841" translate="yes" xml:space="preserve">
          <source>To import all macros from a template into a local variable, use the &lt;code&gt;import&lt;/code&gt; tag:</source>
          <target state="translated">テンプレートからローカル変数にすべてのマクロをインポートするには、次の &lt;code&gt;import&lt;/code&gt; タグを使用します。</target>
        </trans-unit>
        <trans-unit id="2cf2ee0ccfeea5c7bdd512b697ea8994f7ee5507" translate="yes" xml:space="preserve">
          <source>To import macros from the current file, use the special &lt;code&gt;_self&lt;/code&gt; variable for the source.</source>
          <target state="translated">現在のファイルからマクロをインポートするには、ソースに特別な &lt;code&gt;_self&lt;/code&gt; 変数を使用します。</target>
        </trans-unit>
        <trans-unit id="c9ab79ef335d639be5bce9016c153dca02225911" translate="yes" xml:space="preserve">
          <source>To keep your extension class clean and lean, inherit from the built-in &lt;code&gt;Twig_Extension&lt;/code&gt; class instead of implementing the interface as it provides empty implementations for all methods:</source>
          <target state="translated">拡張クラスをクリーンで無駄のない状態に保つには、すべてのメソッドに空の実装を提供するため、インターフェースを実装する代わりに、 &lt;code&gt;Twig_Extension&lt;/code&gt; クラスから継承します。</target>
        </trans-unit>
        <trans-unit id="41bda8c2f65a04e5f9122ffada3a99df4c4af7ee" translate="yes" xml:space="preserve">
          <source>To keep your extension class clean and lean, inherit from the built-in &lt;code&gt;\Twig\Extension\AbstractExtension&lt;/code&gt; class instead of implementing the interface as it provides empty implementations for all methods:</source>
          <target state="translated">拡張クラスをクリーンで無駄のない状態に保つには、すべてのメソッドに空の実装を提供するため、インターフェイスを実装する代わりに、組み込みの &lt;code&gt;\Twig\Extension\AbstractExtension&lt;/code&gt; クラスから継承します。</target>
        </trans-unit>
        <trans-unit id="b74cd98f71e3ffe850527fbdcd6d2efe7a52be44" translate="yes" xml:space="preserve">
          <source>To learn more about the other installation methods, read the &lt;a href=&quot;installation&quot;&gt;installation&lt;/a&gt; chapter; it also explains how to install the Twig C extension.</source>
          <target state="translated">他のインストール方法の詳細については、&lt;a href=&quot;installation&quot;&gt;インストールの&lt;/a&gt;章をお読みください。Twig C拡張機能のインストール方法についても説明します。</target>
        </trans-unit>
        <trans-unit id="8d1cb0a16ca06335afadc2386fc99e9bb9cdbd7a" translate="yes" xml:space="preserve">
          <source>To load a template from a Twig environment, call the &lt;code&gt;load()&lt;/code&gt; method which returns a &lt;code&gt;Twig_TemplateWrapper&lt;/code&gt; instance:</source>
          <target state="translated">Twig環境からテンプレートをロードするには、 &lt;code&gt;Twig_TemplateWrapper&lt;/code&gt; インスタンスを返す &lt;code&gt;load()&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="cdc32be03f489ef63efd3305fa3aa95d9ad4f292" translate="yes" xml:space="preserve">
          <source>To load a template from a Twig environment, call the &lt;code&gt;load()&lt;/code&gt; method which returns a &lt;code&gt;\Twig\TemplateWrapper&lt;/code&gt; instance:</source>
          <target state="translated">Twig環境からテンプレートをロードするには、 &lt;code&gt;\Twig\TemplateWrapper&lt;/code&gt; インスタンスを返す &lt;code&gt;load()&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="afb5f8b42eda99730a573de29ee992445a309dcb" translate="yes" xml:space="preserve">
          <source>To overload an already defined filter, test, operator, global variable, or function, re-define it in an extension and register it &lt;strong&gt;as late as possible&lt;/strong&gt; (order matters):</source>
          <target state="translated">既に定義されているフィルター、テスト、演算子、グローバル変数、または関数をオーバーロードするには、それを拡張機能で再定義し、&lt;strong&gt;できるだけ遅く&lt;/strong&gt;登録&lt;strong&gt;します&lt;/strong&gt;（順序が重要）。</target>
        </trans-unit>
        <trans-unit id="911dbd69004ee28591d95d7b288601a9d2ab8182" translate="yes" xml:space="preserve">
          <source>To perform a negative test, use the &lt;code&gt;not in&lt;/code&gt; operator:</source>
          <target state="translated">否定的なテストを実行するには、 &lt;code&gt;not in&lt;/code&gt; 演算子を使用します。</target>
        </trans-unit>
        <trans-unit id="8aab6e501b9db0e42854320958ab1985eabb7e0c" translate="yes" xml:space="preserve">
          <source>To remove all deprecated feature usages from your templates, write and run a script along the lines of the following:</source>
          <target state="translated">テンプレートから非推奨の機能をすべて削除するには、以下のようなスクリプトを書いて実行します。</target>
        </trans-unit>
        <trans-unit id="26b501a90a5f2a926fd44a55ef63d7b59c067cf0" translate="yes" xml:space="preserve">
          <source>To render the template with some variables, call the &lt;code&gt;render()&lt;/code&gt; method:</source>
          <target state="translated">いくつかの変数を使用してテンプレートをレンダリングするには、 &lt;code&gt;render()&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="dc2a7ce0c3e0556f8e1b9c78f7106463998c2739" translate="yes" xml:space="preserve">
          <source>To understand why Twig exposes so many extension points, let&amp;rsquo;s see how to implement a &lt;em&gt;Lorem ipsum&lt;/em&gt; generator (it needs to know the number of words to generate).</source>
          <target state="translated">Twigが非常に多くの拡張ポイントを公開する理由を理解するために、&lt;em&gt;Lorem ipsum&lt;/em&gt;ジェネレーターを実装する方法を見てみましょう（生成する単語の数を知る必要があります）。</target>
        </trans-unit>
        <trans-unit id="c9f9895d451a4d20595cb005970fb96bb73773c6" translate="yes" xml:space="preserve">
          <source>To understand why Twig exposes so many extension points, let's see how to implement a &lt;em&gt;Lorem ipsum&lt;/em&gt; generator (it needs to know the number of words to generate).</source>
          <target state="translated">Twigが多くの拡張ポイントを公開する理由を理解するために、&lt;em&gt;Lorem ipsum&lt;/em&gt;ジェネレーターを実装する方法を見てみましょう（生成する単語の数を知る必要があります）。</target>
        </trans-unit>
        <trans-unit id="6d1582619e7c90204a94f7ffe028afe72341fb11" translate="yes" xml:space="preserve">
          <source>True if first iteration</source>
          <target state="translated">最初の繰り返しであれば真</target>
        </trans-unit>
        <trans-unit id="b6aaca4860d1d53183300670b36edc55b429809a" translate="yes" xml:space="preserve">
          <source>True if last iteration</source>
          <target state="translated">最後の繰り返しであれば真</target>
        </trans-unit>
        <trans-unit id="4aaddde62bcecb33c76dd8d63402229b2439754b" translate="yes" xml:space="preserve">
          <source>Truncating a string:</source>
          <target state="translated">文字列を切り捨てます。</target>
        </trans-unit>
        <trans-unit id="adfe01d64b287e79f43278660cdb5bdf82bd0ed1" translate="yes" xml:space="preserve">
          <source>Twig</source>
          <target state="translated">Twig</target>
        </trans-unit>
        <trans-unit id="acb9042547094d0a949cdb10ed5aa49133eb16b2" translate="yes" xml:space="preserve">
          <source>Twig 3.x needs at least &lt;strong&gt;PHP 7.2.5&lt;/strong&gt; to run.</source>
          <target state="translated">Twig 3.xを実行するには、少なくとも&lt;strong&gt;PHP7.2.5&lt;/strong&gt;が必要です。</target>
        </trans-unit>
        <trans-unit id="ac92d1c41baa1bf0d0db6d3d73e5eea6bc02e2b8" translate="yes" xml:space="preserve">
          <source>Twig Internals</source>
          <target state="translated">小枝の内部</target>
        </trans-unit>
        <trans-unit id="056dc0ef607f59cea5a4b0ee3ffaccc10f0957eb" translate="yes" xml:space="preserve">
          <source>Twig allows expressions everywhere.</source>
          <target state="translated">Twigはあらゆる場所で表現を可能にします。</target>
        </trans-unit>
        <trans-unit id="b469ccab7205877c1f839d055ff0bc0d9a6473de" translate="yes" xml:space="preserve">
          <source>Twig allows expressions everywhere. These work very similar to regular PHP and even if you're not working with PHP you should feel comfortable with it.</source>
          <target state="translated">Twigでは、あらゆる場所で式を使うことができます。これらは通常のPHPと非常によく似た動作をするので、PHPを使っていない人でも安心して使えるはずです。</target>
        </trans-unit>
        <trans-unit id="9349376a5d61330189fbb788a769e54ee084b3d3" translate="yes" xml:space="preserve">
          <source>Twig allows some syntax customization for the block delimiters. It&amp;rsquo;s &lt;strong&gt;not&lt;/strong&gt; recommended to use this feature as templates will be tied with your custom syntax. But for specific projects, it can make sense to change the defaults.</source>
          <target state="translated">Twigでは、ブロック区切り文字の構文をカスタマイズできます。だ&lt;strong&gt;ていない&lt;/strong&gt;テンプレート、カスタム構文で結ばれますよう、この機能を使用することをお勧めします。ただし、特定のプロジェクトでは、デフォルトを変更するのが理にかなっています。</target>
        </trans-unit>
        <trans-unit id="3460799cc39f1a188e2a0c7ac9c6618151563e7d" translate="yes" xml:space="preserve">
          <source>Twig allows some syntax customization for the block delimiters. It's not recommended to use this feature as templates will be tied with your custom syntax. But for specific projects, it can make sense to change the defaults.</source>
          <target state="translated">Twigでは、ブロック区切り文字の構文をカスタマイズすることができます。この機能を使用することはお勧めできません。テンプレートはあなたのカスタム構文に縛られてしまうからです。しかし、特定のプロジェクトでは、デフォルトを変更することは意味があります。</target>
        </trans-unit>
        <trans-unit id="8c20363039f76d4051e12f2f37af9a9db00a3bd8" translate="yes" xml:space="preserve">
          <source>Twig allows you to calculate with values. This is rarely useful in templates but exists for completeness' sake. The following operators are supported:</source>
          <target state="translated">Twigでは、値を使って計算することができます。これはテンプレートではほとんど役に立ちませんが、完全性のために存在します。以下の演算子がサポートされています。</target>
        </trans-unit>
        <trans-unit id="61c06208011d96f0ece37dbb2c79481d45293c04" translate="yes" xml:space="preserve">
          <source>Twig allows you to do math in templates; the following operators are supported:</source>
          <target state="translated">Twigではテンプレート内で数学を行うことができ、以下の演算子がサポートされています。</target>
        </trans-unit>
        <trans-unit id="f1e4b46150cd575d2c8addd9c2ed121f0aaf33ed" translate="yes" xml:space="preserve">
          <source>Twig allows you to put the name of the block after the end tag for better readability (the name after the &lt;code&gt;endblock&lt;/code&gt; word must match the block name):</source>
          <target state="translated">小枝は、あなたが読みやすく（後の名前のために終了タグの後にブロックの名前を置くことを可能にする &lt;code&gt;endblock&lt;/code&gt; ブロック名と一致する必要があります単語）：</target>
        </trans-unit>
        <trans-unit id="03191eefd0493914679a1488834d1c1c7b0a2dce" translate="yes" xml:space="preserve">
          <source>Twig allows you to put the name of the block after the end tag for better readability:</source>
          <target state="translated">Twigでは、エンドタグの後にブロック名を付けることで、読みやすさを向上させることができます。</target>
        </trans-unit>
        <trans-unit id="49ac8159e03f7fa73abfce55022578cdf217481d" translate="yes" xml:space="preserve">
          <source>Twig allows you to put the name of the macro after the end tag for better readability (the name after the &lt;code&gt;endmacro&lt;/code&gt; word must match the macro name):</source>
          <target state="translated">Twigを使用すると、読みやすくするために終了タグの後にマクロの名前を付けることができます（ &lt;code&gt;endmacro&lt;/code&gt; ワードの後の名前はマクロ名と一致する必要があります）。</target>
        </trans-unit>
        <trans-unit id="35c03d0b26a90d03143a63ac69fdcb62f5927a79" translate="yes" xml:space="preserve">
          <source>Twig allows you to put the name of the macro after the end tag for better readability:</source>
          <target state="translated">Twigでは、マクロの名前をエンドタグの後に付けることで、読みやすさを向上させることができます。</target>
        </trans-unit>
        <trans-unit id="01bf3b68c727a71e746a731f5298fdfceeeffd1e" translate="yes" xml:space="preserve">
          <source>Twig also support bitwise operators (&lt;code&gt;b-and&lt;/code&gt;, &lt;code&gt;b-xor&lt;/code&gt;, and &lt;code&gt;b-or&lt;/code&gt;).</source>
          <target state="translated">Twigはビット単位の演算子（ &lt;code&gt;b-and&lt;/code&gt; 、 &lt;code&gt;b-xor&lt;/code&gt; 、および &lt;code&gt;b-or&lt;/code&gt; ）もサポートしています。</target>
        </trans-unit>
        <trans-unit id="ad6a9d8fc2bc53bb6c8c45abd31ee8b4e3ebda99" translate="yes" xml:space="preserve">
          <source>Twig also supports a specific syntax for accessing items on PHP arrays, &lt;code&gt;foo['bar']&lt;/code&gt;:</source>
          <target state="translated">Twigは、PHP配列上のアイテムにアクセスするための特定の構文 &lt;code&gt;foo['bar']&lt;/code&gt; もサポートしています。</target>
        </trans-unit>
        <trans-unit id="24cbf01d445d3d0267697ee94f4474b5a5e21945" translate="yes" xml:space="preserve">
          <source>Twig also supports bitwise operators (&lt;code&gt;b-and&lt;/code&gt;, &lt;code&gt;b-xor&lt;/code&gt;, and &lt;code&gt;b-or&lt;/code&gt;).</source>
          <target state="translated">Twigは、ビット演算子（ &lt;code&gt;b-and&lt;/code&gt; 、 &lt;code&gt;b-xor&lt;/code&gt; 、および &lt;code&gt;b-or&lt;/code&gt; ）もサポートします。</target>
        </trans-unit>
        <trans-unit id="2135085cc8aae1970b986def0e5df7479a00b404" translate="yes" xml:space="preserve">
          <source>Twig also supports multiple inheritance via &amp;ldquo;horizontal reuse&amp;rdquo; with the help of the &lt;a href=&quot;tags/use&quot;&gt;use&lt;/a&gt; tag.</source>
          <target state="translated">Twigは、&lt;a href=&quot;tags/use&quot;&gt;use&lt;/a&gt;タグを使用した「水平再利用」による多重継承もサポートしています。</target>
        </trans-unit>
        <trans-unit id="41175d1a7a58715c75dfcd87a79bddcd7cd3a9c0" translate="yes" xml:space="preserve">
          <source>Twig also supports multiple inheritance with the so called horizontal reuse with the help of the &lt;a href=&quot;tags/use&quot;&gt;use&lt;/a&gt; tag. This is an advanced feature hardly ever needed in regular templates.</source>
          <target state="translated">Twigは、&lt;a href=&quot;tags/use&quot;&gt;use&lt;/a&gt;タグを利用したいわゆる水平再利用による多重継承もサポートしています。これは、通常のテンプレートではほとんど必要ない高度な機能です。</target>
        </trans-unit>
        <trans-unit id="71ec2dc82e34a07e453b5afdb20205a245f4212a" translate="yes" xml:space="preserve">
          <source>Twig can be easily extended.</source>
          <target state="translated">小枝は簡単に伸ばすことができます。</target>
        </trans-unit>
        <trans-unit id="b71f7b5a80f36e4804a2e876c2900b47f2590d9b" translate="yes" xml:space="preserve">
          <source>Twig can be extended in many ways; you can add extra tags, filters, tests, operators, global variables, and functions. You can even extend the parser itself with node visitors.</source>
          <target state="translated">タグ、フィルタ、テスト、演算子、グローバル変数、関数を追加することができます。ノード訪問者を使ってパーサ自体を拡張することもできます。</target>
        </trans-unit>
        <trans-unit id="f81bad1168e830f33104d65b44458b1a9609ba13" translate="yes" xml:space="preserve">
          <source>Twig can be extended. If you want to create your own extensions, read the &lt;a href=&quot;advanced#creating-extensions&quot;&gt;Creating an Extension&lt;/a&gt; chapter.</source>
          <target state="translated">小枝は伸ばすことができます。独自の拡張機能を作成する場合は&lt;a href=&quot;advanced#creating-extensions&quot;&gt;、拡張機能&lt;/a&gt;の作成の章をお読みください。</target>
        </trans-unit>
        <trans-unit id="015e2e2a6b2d148dd643f55fc94c1f90feaf6958" translate="yes" xml:space="preserve">
          <source>Twig can throw exceptions:</source>
          <target state="translated">Twigは例外を投げることができます。</target>
        </trans-unit>
        <trans-unit id="c172fdd1a94faa174e6af82f652b98ea6867fd19" translate="yes" xml:space="preserve">
          <source>Twig comes bundled with the following extensions:</source>
          <target state="translated">Twigには以下の拡張機能が付属しています。</target>
        </trans-unit>
        <trans-unit id="584e4509c561852513b8a0ff441a21cc5d9ecae9" translate="yes" xml:space="preserve">
          <source>Twig comes with a PSR-11 compatible runtime loader (&lt;code&gt;Twig_ContainerRuntimeLoader&lt;/code&gt;).</source>
          <target state="translated">Twigには、PSR-11互換のランタイムローダー（ &lt;code&gt;Twig_ContainerRuntimeLoader&lt;/code&gt; ）が付属しています。</target>
        </trans-unit>
        <trans-unit id="4fa25309c207e6765130e8cc6eddf49f783e6d80" translate="yes" xml:space="preserve">
          <source>Twig comes with a PSR-11 compatible runtime loader (&lt;code&gt;\Twig\RuntimeLoader\ContainerRuntimeLoader&lt;/code&gt;).</source>
          <target state="translated">Twigには、PSR-11互換のランタイムローダー（ &lt;code&gt;\Twig\RuntimeLoader\ContainerRuntimeLoader&lt;/code&gt; ）が付属しています。</target>
        </trans-unit>
        <trans-unit id="f93b38faadcc36bf71c8dbbe019a2de3c1268304" translate="yes" xml:space="preserve">
          <source>Twig does not care where you save your extension on the filesystem, as all extensions must be registered explicitly to be available in your templates.</source>
          <target state="translated">Twigは拡張機能をファイルシステム上のどこに保存するかは気にしません。</target>
        </trans-unit>
        <trans-unit id="f18b75e9b419f4e36105e76ac128cb2ab458d76d" translate="yes" xml:space="preserve">
          <source>Twig does not escape static expressions:</source>
          <target state="translated">Twigは静的表現をエスケープしません。</target>
        </trans-unit>
        <trans-unit id="46d081ec3db4983ad3ed33d126f6e4e1eadc276b" translate="yes" xml:space="preserve">
          <source>Twig extensions are packages that add new features to Twig. Register an extension via the &lt;code&gt;addExtension()&lt;/code&gt; method:</source>
          <target state="translated">Twig拡張機能は、Twigに新しい機能を追加するパッケージです。 &lt;code&gt;addExtension()&lt;/code&gt; メソッドを介して拡張機能を登録します。</target>
        </trans-unit>
        <trans-unit id="b6d4453e1c07f63e7f7f7a7639d5781bdc23f05e" translate="yes" xml:space="preserve">
          <source>Twig extensions are packages that add new features to Twig. Using an extension is as simple as using the &lt;code&gt;addExtension()&lt;/code&gt; method:</source>
          <target state="translated">Twig拡張機能は、Twigに新機能を追加するパッケージです。拡張機能の使用は、 &lt;code&gt;addExtension()&lt;/code&gt; メソッドを使用するのと同じくらい簡単です。</target>
        </trans-unit>
        <trans-unit id="d8f7e1fda203acba66c3e075f651eccd9a4706fc" translate="yes" xml:space="preserve">
          <source>Twig filters, functions, and tests runtime implementations can be defined as any valid PHP callable:</source>
          <target state="translated">Twigフィルタ、関数、テストのランタイム実装は、有効なPHPコールアブルとして定義することができます。</target>
        </trans-unit>
        <trans-unit id="4ac699ffed5dc30e9aef04e3f1b4199b5986c1e4" translate="yes" xml:space="preserve">
          <source>Twig for Developers</source>
          <target state="translated">開発者のためのTwig</target>
        </trans-unit>
        <trans-unit id="25e854d014f922d2149249c37f331a1d0c48a31e" translate="yes" xml:space="preserve">
          <source>Twig for Template Designers</source>
          <target state="translated">テンプレートデザイナーのためのTwig</target>
        </trans-unit>
        <trans-unit id="d71ee8988717e2a63ab250feb19606bebbc37ae5" translate="yes" xml:space="preserve">
          <source>Twig generates a deprecation notice (via a call to the &lt;code&gt;trigger_error()&lt;/code&gt; PHP function) where the &lt;code&gt;deprecated&lt;/code&gt; tag is used in a template:</source>
          <target state="translated">Twigは非推奨の通知を（ &lt;code&gt;trigger_error()&lt;/code&gt; PHP関数の呼び出しを介して）生成し、非 &lt;code&gt;deprecated&lt;/code&gt; タグがテンプレートで使用されます。</target>
        </trans-unit>
        <trans-unit id="fa49cd1b48ab460b90d97045df15e0845d33c602" translate="yes" xml:space="preserve">
          <source>Twig is both designer and developer friendly by sticking to PHP&amp;rsquo;s principles and adding functionality useful for templating environments.</source>
          <target state="translated">Twigは、PHPの原則に準拠し、環境のテンプレート化に役立つ機能を追加することで、設計者と開発者の両方に優しいものです。</target>
        </trans-unit>
        <trans-unit id="6e919d373ca9bc1c86a0c1150e2ce34cd7a68d8c" translate="yes" xml:space="preserve">
          <source>Twig is smart enough to not escape an already escaped value by the &lt;a href=&quot;../filters/escape&quot;&gt;escape&lt;/a&gt; filter.</source>
          <target state="translated">Twigは、すでにエスケープされた値を&lt;a href=&quot;../filters/escape&quot;&gt;エスケープ&lt;/a&gt;フィルターでエスケープしないように十分にスマートです。</target>
        </trans-unit>
        <trans-unit id="c54a915b0d7cd1f339979101b694d9987d92dc28" translate="yes" xml:space="preserve">
          <source>Twig is used by many Open-Source projects like Symfony, Drupal8, eZPublish, phpBB, Matomo, OroCRM; and many frameworks have support for it as well like Slim, Yii, Laravel, and Codeigniter &amp;mdash; just to name a few.</source>
          <target state="translated">Twigは、Symfony、Drupal8、eZPublish、phpBB、Matomo、OroCRMなどの多くのオープンソースプロジェクトで使用されています。ほんの数例を挙げると、Slim、Yii、Laravel、Codeigniterなどの多くのフレームワークがそれをサポートしています。</target>
        </trans-unit>
        <trans-unit id="21cb446a38a34831df32b35bce3699037b5566da" translate="yes" xml:space="preserve">
          <source>Twig is used by many Open-Source projects like Symfony, Drupal8, eZPublish, phpBB, Piwik, OroCRM; and many frameworks have support for it as well like Slim, Yii, Laravel, Codeigniter and Kohana &amp;mdash; just to name a few.</source>
          <target state="translated">Twigは、Symfony、Drupal8、eZPublish、phpBB、Piwik、OroCRMなどの多くのオープンソースプロジェクトで使用されています。Slim、Yii、Laravel、Codeigniter、Kohanaなど、多くのフレームワークがサポートしています。</target>
        </trans-unit>
        <trans-unit id="4587cc8860ed1aa1998dcacdba57df03165ec085" translate="yes" xml:space="preserve">
          <source>Twig is very extensible and you can easily hack it. Keep in mind that you should probably try to create an extension before hacking the core, as most features and enhancements can be handled with extensions. This chapter is also useful for people who want to understand how Twig works under the hood.</source>
          <target state="translated">Twigは非常に拡張性が高く、簡単にハックすることができます。ほとんどの機能や機能拡張は拡張機能で処理できるので、コアをハックする前に拡張機能を作成してみるべきだということを覚えておいてください。この章は、Twigがどのように機能しているのかを理解したい人にも役立ちます。</target>
        </trans-unit>
        <trans-unit id="b317c1850fca0e3ec7ad640bebc29a200aebcbfd" translate="yes" xml:space="preserve">
          <source>Twig is very extensible and you can hack it. Keep in mind that you should probably try to create an extension before hacking the core, as most features and enhancements can be handled with extensions. This chapter is also useful for people who want to understand how Twig works under the hood.</source>
          <target state="translated">Twigは非常に拡張性が高いので、ハックすることができます。ほとんどの機能や拡張は拡張機能で処理できるので、コアをハックする前に拡張機能を作成してみるべきだということを覚えておいてください。この章は、Twigがどのように機能するのかを理解したい人にも役立ちます。</target>
        </trans-unit>
        <trans-unit id="743739118f78c9e8b5bbbd535fbf128921ac4de5" translate="yes" xml:space="preserve">
          <source>Twig needs at least &lt;strong&gt;PHP 7.0.0&lt;/strong&gt; to run.</source>
          <target state="translated">Twig を実行するには、少なくとも&lt;strong&gt;PHP 7.0.0&lt;/strong&gt;が必要です。</target>
        </trans-unit>
        <trans-unit id="195a95702149919e3680976695bf08526af00348" translate="yes" xml:space="preserve">
          <source>Twig supports both, automatic escaping is enabled by default.</source>
          <target state="translated">Twigは両方をサポートしており、デフォルトでは自動エスケープが有効になっています。</target>
        </trans-unit>
        <trans-unit id="a21475a969c585df94f2a3eb1362ee4b147be5c5" translate="yes" xml:space="preserve">
          <source>Twig supports dynamic inheritance by using a variable as the base template:</source>
          <target state="translated">Twigは変数をベーステンプレートとして使用することで動的継承をサポートしています。</target>
        </trans-unit>
        <trans-unit id="c2450652f7e62084ab8da4b43bd8c55f7a24b7d5" translate="yes" xml:space="preserve">
          <source>Twig supports putting often used code into &lt;a href=&quot;macro&quot;&gt;macros&lt;/a&gt;. These macros can go into different templates and get imported from there.</source>
          <target state="translated">Twigは、よく使われるコードを&lt;a href=&quot;macro&quot;&gt;マクロに&lt;/a&gt;入れることをサポートしています。これらのマクロは、さまざまなテンプレートに入れて、そこからインポートすることができます。</target>
        </trans-unit>
        <trans-unit id="edf1d34dad678b09f43d91344a032e1441aac3a0" translate="yes" xml:space="preserve">
          <source>Twig supports the following optimizations:</source>
          <target state="translated">Twigは以下の最適化をサポートしています。</target>
        </trans-unit>
        <trans-unit id="f4a9e894bc933972d0e187cc01586dff40006d7b" translate="yes" xml:space="preserve">
          <source>Twig supports two modifiers:</source>
          <target state="translated">Twigは2つの修飾子をサポートしています。</target>
        </trans-unit>
        <trans-unit id="7cf43da01704e7bdd07c8957453fd7a773c3d040" translate="yes" xml:space="preserve">
          <source>Twig uses a central object called the &lt;strong&gt;environment&lt;/strong&gt; (of class &lt;code&gt;Twig_Environment&lt;/code&gt;). Instances of this class are used to store the configuration and extensions, and are used to load templates from the file system or other locations.</source>
          <target state="translated">Twigは（ &lt;code&gt;Twig_Environment&lt;/code&gt; クラスの）&lt;strong&gt;環境&lt;/strong&gt;と呼ばれる中央オブジェクトを使用します。このクラスのインスタンスは、構成と拡張機能を格納するために使用され、ファイルシステムまたは他の場所からテンプレートをロードするために使用されます。</target>
        </trans-unit>
        <trans-unit id="09cbc10c700f80a98d4224f85c4bd6acf889d1e6" translate="yes" xml:space="preserve">
          <source>Twig uses a central object called the &lt;strong&gt;environment&lt;/strong&gt; (of class &lt;code&gt;\Twig\Environment&lt;/code&gt;). Instances of this class are used to store the configuration and extensions, and are used to load templates.</source>
          <target state="translated">Twigは、&lt;strong&gt;環境&lt;/strong&gt;と呼ばれる（クラス &lt;code&gt;\Twig\Environment&lt;/code&gt; ）中央オブジェクトを使用します。このクラスのインスタンスは、構成と拡張機能を格納するために使用され、テンプレートをロードするために使用されます。</target>
        </trans-unit>
        <trans-unit id="0278d71819b6454e8ee529ca0b1e4dbdca7e0d70" translate="yes" xml:space="preserve">
          <source>Twig uses a loader (&lt;code&gt;Twig_Loader_Array&lt;/code&gt;) to locate templates, and an environment (&lt;code&gt;Twig_Environment&lt;/code&gt;) to store the configuration.</source>
          <target state="translated">Twigはローダー（ &lt;code&gt;Twig_Loader_Array&lt;/code&gt; ）を使用してテンプレートを検索し、環境（ &lt;code&gt;Twig_Environment&lt;/code&gt; ）を使用して構成を保存します。</target>
        </trans-unit>
        <trans-unit id="0ac33ace0c12326e55d701998d1b1c7fdd612fd1" translate="yes" xml:space="preserve">
          <source>Twig uses a loader (&lt;code&gt;\Twig\Loader\ArrayLoader&lt;/code&gt;) to locate templates, and an environment (&lt;code&gt;\Twig\Environment&lt;/code&gt;) to store its configuration.</source>
          <target state="translated">Twigは、ローダー（ &lt;code&gt;\Twig\Loader\ArrayLoader&lt;/code&gt; ）を使用してテンプレートを検索し、環境（ &lt;code&gt;\Twig\Environment&lt;/code&gt; ）を使用してその構成を保存します。</target>
        </trans-unit>
        <trans-unit id="8cef831d3600ddb7a5cadf6a78bcb0bea768c022" translate="yes" xml:space="preserve">
          <source>Twig's bitwise operators</source>
          <target state="translated">ツイッグのビット演算子</target>
        </trans-unit>
        <trans-unit id="fd09847544b0fce90c8bc8f12aa38c07d451c76b" translate="yes" xml:space="preserve">
          <source>Unlike in PHP, it's not possible to &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; in a loop. You can however filter the sequence during iteration which allows you to skip items. The following example skips all the users which are not active:</source>
          <target state="translated">PHPとは異なり、ループ内で &lt;code&gt;break&lt;/code&gt; または &lt;code&gt;continue&lt;/code&gt; することはできません。ただし、反復中にシーケンスをフィルタリングして、アイテムをスキップすることができます。次の例では、アクティブでないすべてのユーザーをスキップします。</target>
        </trans-unit>
        <trans-unit id="f667c863793c22bc59dadb9fc056933bece3c557" translate="yes" xml:space="preserve">
          <source>Upload the profile to visualize it (create a &lt;a href=&quot;https://blackfire.io/signup&quot;&gt;free account&lt;/a&gt; first):</source>
          <target state="translated">プロファイルをアップロードして視覚化します（最初に&lt;a href=&quot;https://blackfire.io/signup&quot;&gt;無料のアカウントを&lt;/a&gt;作成します）。</target>
        </trans-unit>
        <trans-unit id="a4c04dea610d55450863275c7d31bc59661fcd55" translate="yes" xml:space="preserve">
          <source>Upload the profile to visualize it (create a &lt;a href=&quot;https://blackfire.io/signup?utm_source=twig&amp;amp;utm_medium=doc&amp;amp;utm_campaign=profiler&quot;&gt;free account&lt;/a&gt; first):</source>
          <target state="translated">プロファイルをアップロードして視覚化します（最初に&lt;a href=&quot;https://blackfire.io/signup?utm_source=twig&amp;amp;utm_medium=doc&amp;amp;utm_campaign=profiler&quot;&gt;無料のアカウントを&lt;/a&gt;作成します）。</target>
        </trans-unit>
        <trans-unit id="23d45580ff64b3985f7a3adb7b6bace05bc2569c" translate="yes" xml:space="preserve">
          <source>Use a dot (&lt;code&gt;.&lt;/code&gt;) to access attributes of a variable (methods or properties of a PHP object, or items of a PHP array):</source>
          <target state="translated">ドット（ &lt;code&gt;.&lt;/code&gt; ）を使用して、変数の属性（PHPオブジェクトのメソッドまたはプロパティ、またはPHP配列の項目）にアクセスします。</target>
        </trans-unit>
        <trans-unit id="999b8c7b76a5be29accac3307a3e2b3e9f4fea9d" translate="yes" xml:space="preserve">
          <source>Use lower cased and underscored variable names:</source>
          <target state="translated">小文字とアンダースコア付きの変数名を使用します。</target>
        </trans-unit>
        <trans-unit id="54541ac160ad82d686ccfffb622a60a2cbfe7f04" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;defined&lt;/code&gt; test to check if a block exists in the context of the current template:</source>
          <target state="translated">&lt;code&gt;defined&lt;/code&gt; テストを使用して、現在のテンプレートのコンテキストにブロックが存在するかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="185f69fccc3e5e5a792110da641b27534f42a4f3" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;defined&lt;/code&gt; test to check if a constant is defined:</source>
          <target state="translated">&lt;code&gt;defined&lt;/code&gt; テストを使用して、定数が定義されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="b31b96bb4f018bc81a194a57253b67da86c2929c" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;spaceless&lt;/code&gt; filter to remove whitespace &lt;em&gt;between HTML tags&lt;/em&gt;, not whitespace within HTML tags or whitespace in plain text:</source>
          <target state="translated">&lt;code&gt;spaceless&lt;/code&gt; フィルターを使用して、&lt;em&gt;HTMLタグ&lt;/em&gt;内の空白やプレーンテキストの空白ではなく、&lt;em&gt;HTMLタグ間の&lt;/em&gt;空白を削除します。</target>
        </trans-unit>
        <trans-unit id="3ccff04da6396a6cb9bdc87e32a2e41394a0afc2" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;spaceless&lt;/code&gt; tag to remove whitespace &lt;em&gt;between HTML tags&lt;/em&gt;, not whitespace within HTML tags or whitespace in plain text:</source>
          <target state="translated">&lt;code&gt;spaceless&lt;/code&gt; タグを使用して、&lt;em&gt;HTMLタグ&lt;/em&gt;内の空白やプレーンテキストの空白ではなく、&lt;em&gt;HTMLタグ間の&lt;/em&gt;空白を削除します。</target>
        </trans-unit>
        <trans-unit id="aee37d92efbd59c9807c5afdfea157dc37c28287" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;spaceless&lt;/code&gt; tag to remove whitespace &lt;em&gt;between HTML tags&lt;/em&gt;:</source>
          <target state="translated">&lt;code&gt;spaceless&lt;/code&gt; タグを使用して、&lt;em&gt;HTMLタグ間の&lt;/em&gt;空白を削除し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e8f08a60e60db6e1cafe0bdbfd15c1ffc4e4fcb3" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;with&lt;/code&gt; tag to create a new inner scope. Variables set within this scope are not visible outside of the scope:</source>
          <target state="translated">使用 &lt;code&gt;with&lt;/code&gt; 新しい内部スコープを作成するタグ。このスコープ内で設定された変数は、スコープ外では表示されません。</target>
        </trans-unit>
        <trans-unit id="fa10774d0e271ce1daa32ba7d67741dff0dd4dd8" translate="yes" xml:space="preserve">
          <source>Using Extensions</source>
          <target state="translated">拡張機能の使用</target>
        </trans-unit>
        <trans-unit id="9dfb73d7df2c7ae0665e6da00571e99a1aed9b42" translate="yes" xml:space="preserve">
          <source>Using Twig and AngularJS in the same Templates</source>
          <target state="translated">TwigとAngularJSを同じテンプレートで使う</target>
        </trans-unit>
        <trans-unit id="5631369b3cafb1ab2618e4fce6b9bb17107628f4" translate="yes" xml:space="preserve">
          <source>Using a &lt;code&gt;pre&lt;/code&gt; tag is not needed when &lt;a href=&quot;https://xdebug.org/docs/display&quot;&gt;XDebug&lt;/a&gt; is enabled and &lt;code&gt;html_errors&lt;/code&gt; is &lt;code&gt;on&lt;/code&gt;; as a bonus, the output is also nicer with XDebug enabled.</source>
          <target state="translated">&lt;a href=&quot;https://xdebug.org/docs/display&quot;&gt;XDebug&lt;/a&gt;が有効で &lt;code&gt;html_errors&lt;/code&gt; が &lt;code&gt;on&lt;/code&gt; 場合、 &lt;code&gt;pre&lt;/code&gt; タグを使用する必要はありません。おまけとして、XDebugを有効にすると、出力もより良くなります。</target>
        </trans-unit>
        <trans-unit id="6f6269cb50e92da95e085556f5a1f67078a12942" translate="yes" xml:space="preserve">
          <source>Using a Database to store Templates</source>
          <target state="translated">テンプレートを保存するためのデータベースの使用</target>
        </trans-unit>
        <trans-unit id="dae32036cadc9f0ad2ca66b6584488e32ca4021b" translate="yes" xml:space="preserve">
          <source>Using different Template Sources</source>
          <target state="translated">異なるテンプレートソースの使用</target>
        </trans-unit>
        <trans-unit id="0441c9c98c577243b761b5d5436cd31ae685d15a" translate="yes" xml:space="preserve">
          <source>Using double-quoted or single-quoted strings has no impact on performance but &lt;a href=&quot;#templates-string-interpolation&quot;&gt;string interpolation&lt;/a&gt; is only supported in double-quoted strings.</source>
          <target state="translated">二重引用符または一重引用符で囲まれた文字列を使用してもパフォーマンスに影響はありませんが、&lt;a href=&quot;#templates-string-interpolation&quot;&gt;文字列補間&lt;/a&gt;は二重引用符で囲まれた文字列でのみサポートされます。</target>
        </trans-unit>
        <trans-unit id="9a83ead92315bfecdc76fd804841dde87b29f4d1" translate="yes" xml:space="preserve">
          <source>Using double-quoted or single-quoted strings has no impact on performance but string interpolation is only supported in double-quoted strings.</source>
          <target state="translated">ダブルクォートまたはシングルクォートの文字列を使用してもパフォーマンスに影響はありませんが、文字列補間はダブルクォートの文字列でのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="339be1963c4861b48823da4f869f80c4e4f4716e" translate="yes" xml:space="preserve">
          <source>Using dynamic Object Properties</source>
          <target state="translated">動的オブジェクト プロパティの使用</target>
        </trans-unit>
        <trans-unit id="8b38f87881208fed16c581c24013b3d36ee3d1d9" translate="yes" xml:space="preserve">
          <source>Using named arguments makes your templates more explicit about the meaning of the values you pass as arguments:</source>
          <target state="translated">名前付き引数を使用すると、引数として渡す値の意味がより明確になります。</target>
        </trans-unit>
        <trans-unit id="72aed553c5fd1b03524d3ec1a62a5994f4530d43" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;default&lt;/code&gt; filter on a boolean variable might trigger unexpected behavior, as &lt;code&gt;false&lt;/code&gt; is treated as an empty value. Consider using &lt;code&gt;??&lt;/code&gt; instead:</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; は空の値として扱われるため、ブール変数で &lt;code&gt;default&lt;/code&gt; フィルターを使用すると、予期しない動作が発生する可能性があります。 &lt;code&gt;??&lt;/code&gt; の使用を検討してください 代わりに：</target>
        </trans-unit>
        <trans-unit id="c1ed30ab73af00c4d2314335c5ab18cdc3421807" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;loop&lt;/code&gt; variable within the condition is not recommended as it will probably not be doing what you expect it to. For instance, adding a condition like &lt;code&gt;loop.index &amp;gt; 4&lt;/code&gt; won't work as the index is only incremented when the condition is true (so the condition will never match).</source>
          <target state="translated">条件内で &lt;code&gt;loop&lt;/code&gt; 変数を使用することは、期待どおりに動作しない可能性があるため、お勧めできません。たとえば、 &lt;code&gt;loop.index &amp;gt; 4&lt;/code&gt; ような条件を追加しても、条件がtrueの場合にのみインデックスが増分されるため、条件は一致しません。</target>
        </trans-unit>
        <trans-unit id="813701b498ea9df393b5878a24b378d3c992a65f" translate="yes" xml:space="preserve">
          <source>Validating the Template Syntax</source>
          <target state="translated">テンプレート構文の検証</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="2893d9417f93894e75018f6819e871d5763d35a0" translate="yes" xml:space="preserve">
          <source>Value transformation</source>
          <target state="translated">価値観の転換</target>
        </trans-unit>
        <trans-unit id="1df09f064e1cb457e364d04da1bba4eaf1883b1c" translate="yes" xml:space="preserve">
          <source>Values transformation</source>
          <target state="translated">価値観の変換</target>
        </trans-unit>
        <trans-unit id="19de69cb601f53a4ea7af22a65c71ae63251365c" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">Variable</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="ee1f96ac809548e8406325e875bc67e8e0a29f8e" translate="yes" xml:space="preserve">
          <source>Variables can be modified by &lt;strong&gt;filters&lt;/strong&gt;. Filters are separated from the variable by a pipe symbol (&lt;code&gt;|&lt;/code&gt;) and may have optional arguments in parentheses. Multiple filters can be chained. The output of one filter is applied to the next.</source>
          <target state="translated">変数は&lt;strong&gt;フィルター&lt;/strong&gt;によって変更できます。フィルターは、パイプ記号（ &lt;code&gt;|&lt;/code&gt; ）によって変数から区切られ、括弧内にオプションの引数を含めることができます。複数のフィルターを連鎖させることができます。1つのフィルターの出力が次のフィルターに適用されます。</target>
        </trans-unit>
        <trans-unit id="160650b69302dc93a5de39d73ddc38bc725d715a" translate="yes" xml:space="preserve">
          <source>Variables can be modified by &lt;strong&gt;filters&lt;/strong&gt;. Filters are separated from the variable by a pipe symbol (&lt;code&gt;|&lt;/code&gt;). Multiple filters can be chained. The output of one filter is applied to the next.</source>
          <target state="translated">変数は&lt;strong&gt;フィルター&lt;/strong&gt;で変更できます。フィルタは、パイプ記号（ &lt;code&gt;|&lt;/code&gt; ）で変数から区切られます。複数のフィルターを連鎖させることができます。1つのフィルターの出力が次のフィルターに適用されます。</target>
        </trans-unit>
        <trans-unit id="5c5477bb5a9c73aa709fca03cdf7969bda85eb31" translate="yes" xml:space="preserve">
          <source>Variadic Filters</source>
          <target state="translated">異種フィルタ</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="1a4d39da402271e2b553763e2e54f301da0b88aa" translate="yes" xml:space="preserve">
          <source>We have created a simple &lt;code&gt;templates&lt;/code&gt; table that hosts two templates: &lt;code&gt;base.twig&lt;/code&gt; and &lt;code&gt;index.twig&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;base.twig&lt;/code&gt; と &lt;code&gt;index.twig&lt;/code&gt; の 2つのテンプレートをホストする単純な &lt;code&gt;templates&lt;/code&gt; テーブルを作成しました。</target>
        </trans-unit>
        <trans-unit id="e32a99de9bee1d7080008ee153ec38f9732e4218" translate="yes" xml:space="preserve">
          <source>Welcome to the documentation for Twig, the flexible, fast, and secure template engine for PHP.</source>
          <target state="translated">柔軟で高速かつ安全な PHP 用テンプレートエンジンである Twig のドキュメントへようこそ。</target>
        </trans-unit>
        <trans-unit id="be65b9e347375f6ab4dbf58f66fa0a0b73735783" translate="yes" xml:space="preserve">
          <source>What?</source>
          <target state="translated">What?</target>
        </trans-unit>
        <trans-unit id="1e28bea7913ae56c97c990aeb29bb8fd5fc3e40b" translate="yes" xml:space="preserve">
          <source>When Twig encounters a variable like &lt;code&gt;article.title&lt;/code&gt;, it tries to find a &lt;code&gt;title&lt;/code&gt; public property in the &lt;code&gt;article&lt;/code&gt; object.</source>
          <target state="translated">Twigが &lt;code&gt;article.title&lt;/code&gt; のような変数を検出すると、 &lt;code&gt;article&lt;/code&gt; オブジェクトで &lt;code&gt;title&lt;/code&gt; パブリックプロパティを見つけようとします。</target>
        </trans-unit>
        <trans-unit id="c185021af47e3a8eb1d7dae9ad44b34b63e28a42" translate="yes" xml:space="preserve">
          <source>When a filter is deprecated, Twig emits a deprecation notice when compiling a template using it. See &lt;a href=&quot;recipes#deprecation-notices&quot;&gt;Displaying Deprecation Notices&lt;/a&gt; for more information.</source>
          <target state="translated">フィルターが廃止された場合、Twigはそれを使用してテンプレートをコンパイルするときに廃止通知を発行します。詳細については、&lt;a href=&quot;recipes#deprecation-notices&quot;&gt;廃止通知の表示を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8040832347234e04d62fcf869ba270e0f73de843" translate="yes" xml:space="preserve">
          <source>When a filter should accept an arbitrary number of arguments, set the &lt;code&gt;is_variadic&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;; Twig will pass the extra arguments as the last argument to the filter call as an array:</source>
          <target state="translated">フィルターが任意の数の引数を受け入れる必要がある場合は、 &lt;code&gt;is_variadic&lt;/code&gt; オプションを &lt;code&gt;true&lt;/code&gt; に設定します。Twigは、追加の引数を配列としてフィルター呼び出しの最後の引数として渡します。</target>
        </trans-unit>
        <trans-unit id="b13bc67d3920b4e94b3daf093ac7d9a5d7f43449" translate="yes" xml:space="preserve">
          <source>When a function (or a filter) is not defined, Twig defaults to throw a &lt;code&gt;Twig_Error_Syntax&lt;/code&gt; exception. However, it can also call a &lt;a href=&quot;https://secure.php.net/manual/en/function.is-callable.php&quot;&gt;callback&lt;/a&gt; (any valid PHP callable) which should return a function (or a filter).</source>
          <target state="translated">関数（またはフィルター）が定義されていない場合、Twigはデフォルトで &lt;code&gt;Twig_Error_Syntax&lt;/code&gt; 例外をスローします。ただし、関数（またはフィルター）を返す必要がある&lt;a href=&quot;https://secure.php.net/manual/en/function.is-callable.php&quot;&gt;コールバック&lt;/a&gt;（有効なPHP呼び出し可能オブジェクト）を呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="05820cc3aba98cd4e746a094db4cd6dc9556ccb7" translate="yes" xml:space="preserve">
          <source>When a function (or a filter) is not defined, Twig defaults to throw a &lt;code&gt;\Twig\Error\SyntaxError&lt;/code&gt; exception. However, it can also call a &lt;a href=&quot;https://secure.php.net/manual/en/function.is-callable.php&quot;&gt;callback&lt;/a&gt; (any valid PHP callable) which should return a function (or a filter).</source>
          <target state="translated">関数（またはフィルター）が定義されていない場合、Twigはデフォルトで &lt;code&gt;\Twig\Error\SyntaxError&lt;/code&gt; 例外をスローします。ただし、関数（またはフィルター）を返す&lt;a href=&quot;https://secure.php.net/manual/en/function.is-callable.php&quot;&gt;コールバック&lt;/a&gt;（有効なPHP呼び出し可能ファイル）を呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="876bdba9df3ee981a36134302ecbe5fa45aa05cf" translate="yes" xml:space="preserve">
          <source>When a template uses inheritance and if you want to print a block multiple times, use the &lt;code&gt;block&lt;/code&gt; function:</source>
          <target state="translated">テンプレートが継承を使用していて、ブロックを複数回印刷する場合は、関数 &lt;code&gt;block&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="f291c4ad44f610ded014feddff4ca61f02d15330" translate="yes" xml:space="preserve">
          <source>When a template uses inheritance, it&amp;rsquo;s possible to render the contents of the parent block when overriding a block by using the &lt;code&gt;parent&lt;/code&gt; function:</source>
          <target state="translated">テンプレートが継承を使用する場合、 &lt;code&gt;parent&lt;/code&gt; 関数を使用してブロックをオーバーライドするときに、親ブロックのコンテンツをレンダリングすることができます。</target>
        </trans-unit>
        <trans-unit id="c5b5c9cf1582b0f15177236c2060bd6f1bdb1d56" translate="yes" xml:space="preserve">
          <source>When a template uses inheritance, it's possible to render the contents of the parent block when overriding a block by using the &lt;code&gt;parent&lt;/code&gt; function:</source>
          <target state="translated">テンプレートが継承を使用する場合、 &lt;code&gt;parent&lt;/code&gt; 関数を使用してブロックをオーバーライドするときに、親ブロックのコンテンツをレンダリングすることが可能です。</target>
        </trans-unit>
        <trans-unit id="213fd294c634b58e4fcb5c928941722e4fd7274c" translate="yes" xml:space="preserve">
          <source>When attaching a visitor to a &lt;code&gt;Twig_Environment&lt;/code&gt; instance, Twig uses it to visit &lt;em&gt;all&lt;/em&gt; templates it compiles. If you need to keep some state information around, you probably want to reset it when visiting a new template.</source>
          <target state="translated">訪問者を &lt;code&gt;Twig_Environment&lt;/code&gt; インスタンスにアタッチすると、Twigはそれを使用して、コンパイルする&lt;em&gt;すべての&lt;/em&gt;テンプレートにアクセスします。いくつかの状態情報を保持する必要がある場合は、新しいテンプレートにアクセスしたときにリセットすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="0fad47e5e933eec6bcafaadbdbb030167193a2a9" translate="yes" xml:space="preserve">
          <source>When attaching a visitor to a &lt;code&gt;\Twig\Environment&lt;/code&gt; instance, Twig uses it to visit &lt;em&gt;all&lt;/em&gt; templates it compiles. If you need to keep some state information around, you probably want to reset it when visiting a new template.</source>
          <target state="translated">訪問者を &lt;code&gt;\Twig\Environment&lt;/code&gt; インスタンスにアタッチすると、Twigはそれを使用してコンパイルする&lt;em&gt;すべての&lt;/em&gt;テンプレートにアクセスします。状態情報を保持する必要がある場合は、新しいテンプレートにアクセスしたときにリセットすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a03a1b18f5d4e91cb8389dc0f980f77e2d76915d" translate="yes" xml:space="preserve">
          <source>When automatic escaping is enabled everything is escaped by default except for values explicitly marked as safe. Those can be marked in the template by using the &lt;a href=&quot;../filters/raw&quot;&gt;raw&lt;/a&gt; filter:</source>
          <target state="translated">自動エスケープが有効になっている場合、安全と明示的にマークされた値を除いて、すべてがデフォルトでエスケープされます。これらは、&lt;a href=&quot;../filters/raw&quot;&gt;未加工&lt;/a&gt;フィルターを使用してテンプレートでマークできます。</target>
        </trans-unit>
        <trans-unit id="a14c3207406c248c355b713cfe404d6f1c24cbe6" translate="yes" xml:space="preserve">
          <source>When called by Twig, the PHP callable receives the left side of the filter (before the pipe &lt;code&gt;|&lt;/code&gt;) as the first argument and the extra arguments passed to the filter (within parentheses &lt;code&gt;()&lt;/code&gt;) as extra arguments.</source>
          <target state="translated">Twigから呼び出されると、PHP呼び出し可能オブジェクトはフィルターの左側（パイプ &lt;code&gt;|&lt;/code&gt; の前）を最初の引数として受け取り、フィルターに渡される追加の引数（括弧 &lt;code&gt;()&lt;/code&gt; 内）を追加の引数として受け取ります。</target>
        </trans-unit>
        <trans-unit id="6338a9bbc3e89df3ba162fe30f6271d7034b68fc" translate="yes" xml:space="preserve">
          <source>When called by Twig, the callable receives the Twig environment instance, the string to escape, and the charset.</source>
          <target state="translated">Twigによって呼び出された場合、callableはTwig環境のインスタンス、エスケープする文字列、文字セットを受け取ります。</target>
        </trans-unit>
        <trans-unit id="bcbb60a30372718ca8a0dd7295b6478ae6d43b57" translate="yes" xml:space="preserve">
          <source>When called with a mapping, max ignores keys and only compares values:</source>
          <target state="translated">マッピングで呼び出された場合、maxはキーを無視して値の比較のみを行います。</target>
        </trans-unit>
        <trans-unit id="7b295ae779f6c765908c9cf2cd92a106fd786381" translate="yes" xml:space="preserve">
          <source>When called with a mapping, min ignores keys and only compares values:</source>
          <target state="translated">マッピングで呼び出された場合、minはキーを無視して値の比較のみを行います。</target>
        </trans-unit>
        <trans-unit id="e83916e652bcf4cf1cb14ba0e3b995c88c9f57f4" translate="yes" xml:space="preserve">
          <source>When calling &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;from&lt;/code&gt; from a &lt;code&gt;block&lt;/code&gt; tag, the imported macros are only defined in the current block and they override macros defined at the template level with the same names.</source>
          <target state="translated">&lt;code&gt;import&lt;/code&gt; または &lt;code&gt;from&lt;/code&gt; を &lt;code&gt;block&lt;/code&gt; タグから呼び出す場合、インポートされたマクロは現在のブロックでのみ定義され、同じ名前でテンプレートレベルで定義されたマクロをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="00050245100bd5db64626168b4e292aa771ccb7e" translate="yes" xml:space="preserve">
          <source>When calling &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;from&lt;/code&gt; from a &lt;code&gt;macro&lt;/code&gt; tag, the imported macros are only defined in the current macro and they override macros defined at the template level with the same names.</source>
          <target state="translated">&lt;code&gt;import&lt;/code&gt; または &lt;code&gt;from&lt;/code&gt; を &lt;code&gt;macro&lt;/code&gt; から呼び出す場合、インポートされたマクロは現在のマクロでのみ定義され、同じ名前でテンプレートレベルで定義されたマクロをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="4430627788e9d9f3c682651983553fd65806d196" translate="yes" xml:space="preserve">
          <source>When creating a new &lt;code&gt;Twig_Environment&lt;/code&gt; instance, you can pass an array of options as the constructor second argument:</source>
          <target state="translated">新しい &lt;code&gt;Twig_Environment&lt;/code&gt; インスタンスを作成するとき、オプションの配列をコンストラクタの2番目の引数として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="f12ed9dc408b7f54229032607cbb9e252b50def4" translate="yes" xml:space="preserve">
          <source>When creating a new &lt;code&gt;\Twig\Environment&lt;/code&gt; instance, you can pass an array of options as the constructor second argument:</source>
          <target state="translated">新しい &lt;code&gt;\Twig\Environment&lt;/code&gt; インスタンスを作成するときに、コンストラクターの2番目の引数としてオプションの配列を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="92bc5f7d8c1bc1e711e264e69548c9fc6527c3d3" translate="yes" xml:space="preserve">
          <source>When creating tests you can use the &lt;code&gt;node_class&lt;/code&gt; option to provide custom test compilation. This is useful if your test can be compiled into PHP primitives. This is used by many of the tests built into Twig:</source>
          <target state="translated">テストを作成するとき、 &lt;code&gt;node_class&lt;/code&gt; オプションを使用してカスタムテストのコンパイルを提供できます。これは、テストをPHPプリミティブにコンパイルできる場合に役立ちます。これは、Twigに組み込まれている多くのテストで使用されています。</target>
        </trans-unit>
        <trans-unit id="f6d6dea0cfb3c10a74028151fd62af41ba99725e" translate="yes" xml:space="preserve">
          <source>When creating the escaper extension, you can switch on or off the global output escaping strategy:</source>
          <target state="translated">エスケーパー拡張機能を作成する際に、グローバル出力のエスケープ戦略のオン/オフを切り替えることができます。</target>
        </trans-unit>
        <trans-unit id="85f84c5d2385bb8e4dbfbb2f0eb4c9b80c6de580" translate="yes" xml:space="preserve">
          <source>When developing with Twig, it&amp;rsquo;s useful to recompile the template whenever the source code changes. If you don&amp;rsquo;t provide a value for the &lt;code&gt;auto_reload&lt;/code&gt; option, it will be determined automatically based on the &lt;code&gt;debug&lt;/code&gt; value.</source>
          <target state="translated">Twigを使用して開発する場合、ソースコードが変更されるたびにテンプレートを再コンパイルすると便利です。 &lt;code&gt;auto_reload&lt;/code&gt; オプションの値を指定しない場合、 &lt;code&gt;debug&lt;/code&gt; 値に基づいて自動的に決定されます。</target>
        </trans-unit>
        <trans-unit id="c90742c29d3efa52a9e898846e168bd362bed25f" translate="yes" xml:space="preserve">
          <source>When developing with Twig, it's useful to recompile the template whenever the source code changes. If you don't provide a value for the &lt;code&gt;auto_reload&lt;/code&gt; option, it will be determined automatically based on the &lt;code&gt;debug&lt;/code&gt; value.</source>
          <target state="translated">Twigで開発する場合、ソースコードが変更されるたびにテンプレートを再コンパイルすると便利です。 &lt;code&gt;auto_reload&lt;/code&gt; オプションの値を指定しない場合、 &lt;code&gt;debug&lt;/code&gt; 値に基づいて自動的に決定されます。</target>
        </trans-unit>
        <trans-unit id="c913932cf48f96cf4f0baf48e5d585652425a644" translate="yes" xml:space="preserve">
          <source>When extending Twig without creating an extension, Twig won&amp;rsquo;t be able to recompile your templates when the PHP code is updated. To see your changes in real-time, either disable template caching or package your code into an extension (see the next section of this chapter).</source>
          <target state="translated">拡張機能を作成せずにTwigを拡張する場合、PHPコードが更新されると、Twigはテンプレートを再コンパイルできません。変更をリアルタイムで確認するには、テンプレートキャッシュを無効にするか、コードを拡張機能にパッケージ化します（この章の次のセクションを参照）。</target>
        </trans-unit>
        <trans-unit id="1016ce95a3964b38f34407da6de6c0b83d4513b1" translate="yes" xml:space="preserve">
          <source>When extending Twig without creating an extension, Twig won't be able to recompile your templates when the PHP code is updated. To see your changes in real-time, either disable template caching or package your code into an extension (see the next section of this chapter).</source>
          <target state="translated">拡張モジュールを作成せずにTwigを拡張した場合、PHPコードが更新されてもTwigはテンプレートを再コンパイルすることができません。変更内容をリアルタイムで確認するには、テンプレートのキャッシングを無効にするか、 コードを拡張モジュールにパッケージ化します (この章の次のセクションを参照してください)。</target>
        </trans-unit>
        <trans-unit id="c4871e77e0bb31423b46de7da34857a63c01200a" translate="yes" xml:space="preserve">
          <source>When generating HTML from templates, there&amp;rsquo;s always a risk that a variable will include characters that affect the resulting HTML. There are two approaches: manually escaping each variable or automatically escaping everything by default.</source>
          <target state="translated">テンプレートからHTMLを生成する場合、結果のHTMLに影響を与える文字が変数に含まれるリスクが常にあります。2つのアプローチがあります。各変数を手動でエスケープするか、デフォルトですべてを自動的にエスケープします。</target>
        </trans-unit>
        <trans-unit id="bbfbf84506b26665c4b871cdaa357986fdfc6dd7" translate="yes" xml:space="preserve">
          <source>When generating HTML from templates, there's always a risk that a variable will include characters that affect the resulting HTML. There are two approaches: manually escaping each variable or automatically escaping everything by default.</source>
          <target state="translated">テンプレートからHTMLを生成する際には、変数に結果のHTMLに影響を与える文字が含まれてしまうリスクが常にあります。各変数を手動でエスケープするか、デフォルトですべてを自動的にエスケープするかの2つのアプローチがあります。</target>
        </trans-unit>
        <trans-unit id="3bb5f62e4c7f9faafc22ee2d0642bf5307757b8b" translate="yes" xml:space="preserve">
          <source>When including a template created by an end user, you should consider sandboxing it. More information in the &lt;a href=&quot;../api&quot;&gt;Twig for Developers&lt;/a&gt; chapter and in the &lt;a href=&quot;sandbox&quot;&gt;sandbox&lt;/a&gt; tag documentation.</source>
          <target state="translated">エンドユーザーが作成したテンプレートを含める場合、サンドボックス化を検討する必要があります。&lt;a href=&quot;../api&quot;&gt;Twig for Developersの&lt;/a&gt;章と&lt;a href=&quot;sandbox&quot;&gt;サンドボックス&lt;/a&gt;タグのドキュメントで詳細をご覧ください。</target>
        </trans-unit>
        <trans-unit id="46cf04daa0cc353312a64e7dea74a7bef6eee37a" translate="yes" xml:space="preserve">
          <source>When including a template created by an end user, you should consider sandboxing it:</source>
          <target state="translated">エンドユーザーが作成したテンプレートを含める場合は、サンドボックス化を検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="569b9643621919d6a183cf57134ad1c0526c1b1b" translate="yes" xml:space="preserve">
          <source>When including a template, its name does not need to be a string. For instance, the name can depend on the value of a variable:</source>
          <target state="translated">テンプレートを含める場合、その名前は文字列である必要はありません。例えば、名前は変数の値に依存することができます。</target>
        </trans-unit>
        <trans-unit id="214e491cc7434bce9d841d5e659cfcf5891f2de3" translate="yes" xml:space="preserve">
          <source>When looking for a template, Twig tries each loader in turn and returns as soon as the template is found. When rendering the &lt;code&gt;index.html&lt;/code&gt; template from the above example, Twig will load it with &lt;code&gt;$loader2&lt;/code&gt; but the &lt;code&gt;base.html&lt;/code&gt; template will be loaded from &lt;code&gt;$loader1&lt;/code&gt;.</source>
          <target state="translated">テンプレートを探すとき、Twigは各ローダーを順番に試し、テンプレートが見つかるとすぐに戻ります。上記の例の &lt;code&gt;index.html&lt;/code&gt; テンプレートをレンダリングすると、Twigは &lt;code&gt;$loader2&lt;/code&gt; ロードしますが、 &lt;code&gt;base.html&lt;/code&gt; テンプレートは &lt;code&gt;$loader1&lt;/code&gt; からロードされます。</target>
        </trans-unit>
        <trans-unit id="22e08145c5206f662564c94379550125799c600c" translate="yes" xml:space="preserve">
          <source>When looking for a template, Twig will try each loader in turn and it will return as soon as the template is found. When rendering the &lt;code&gt;index.html&lt;/code&gt; template from the above example, Twig will load it with &lt;code&gt;$loader2&lt;/code&gt; but the &lt;code&gt;base.html&lt;/code&gt; template will be loaded from &lt;code&gt;$loader1&lt;/code&gt;.</source>
          <target state="translated">テンプレートを探すとき、Twigは各ローダーを順番に試し、テンプレートが見つかるとすぐに戻ります。上記の例の &lt;code&gt;index.html&lt;/code&gt; テンプレートをレンダリングする場合、Twigは &lt;code&gt;$loader2&lt;/code&gt; それをロードしますが、 &lt;code&gt;base.html&lt;/code&gt; テンプレートは &lt;code&gt;$loader1&lt;/code&gt; からロードされます。</target>
        </trans-unit>
        <trans-unit id="4783968e5e6f0d9701f69822a9cff3a9381fc645" translate="yes" xml:space="preserve">
          <source>When macro usages and definitions are in the same template, you don&amp;rsquo;t need to import the macros as they are automatically available under the special &lt;code&gt;_self&lt;/code&gt; variable:</source>
          <target state="translated">マクロの使用法と定義が同じテンプレートにある場合、マクロは特別な &lt;code&gt;_self&lt;/code&gt; 変数で自動的に使用できるため、インポートする必要はありません。</target>
        </trans-unit>
        <trans-unit id="6d5150536dee0facc6bda84f4f472762d42c4115" translate="yes" xml:space="preserve">
          <source>When not passing the root path as a second argument, Twig uses &lt;code&gt;getcwd()&lt;/code&gt; for relative paths.</source>
          <target state="translated">ルートパスを2番目の引数として渡さない場合、Twigは相対パスに &lt;code&gt;getcwd()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="aad3d86408a5fe77b7cc931344047db39ee94048" translate="yes" xml:space="preserve">
          <source>When packaging your code into an extension, Twig is smart enough to recompile your templates whenever you make a change to it (when &lt;code&gt;auto_reload&lt;/code&gt; is enabled).</source>
          <target state="translated">コードを拡張機能にパッケージ化する場合、Twigは、テンプレートを変更するたびに（ &lt;code&gt;auto_reload&lt;/code&gt; が有効になっている場合）テンプレートを再コンパイルするのに十分スマートです。</target>
        </trans-unit>
        <trans-unit id="344b231c232ff20731604fe0107747d40a2ce459" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, the generated templates have a &lt;code&gt;__toString()&lt;/code&gt; method that you can use to display the generated nodes (default to &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; に設定すると、生成されたテンプレートには、生成されたノードの表示に使用できる &lt;code&gt;__toString()&lt;/code&gt; メソッドがあります（デフォルトは &lt;code&gt;false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d094b4172baac13f4f02bb1a99aff27c14668624" translate="yes" xml:space="preserve">
          <source>When step is given (as the third parameter), it specifies the increment (or decrement for negative values):</source>
          <target state="translated">stepが与えられた場合(3番目のパラメータとして)は、インクリメント(負の値の場合はデクリメント)を指定します。</target>
        </trans-unit>
        <trans-unit id="c4f30798a0ce3f97baa06aafbcb63621a5d4dd63" translate="yes" xml:space="preserve">
          <source>When template code is provided by a third-party (through a web interface for instance), it might be interesting to validate the template syntax before saving it. If the template code is stored in a</source>
          <target state="translated">テンプレートコードがサードパーティから提供されている場合(例えば、ウェブインタフェースを介して)、保存する前にテンプレートの構文を検証するのは興味深いことかもしれません。テンプレートコードが</target>
        </trans-unit>
        <trans-unit id="e17273d04ce8d0b5d66b81722bdaf7e6ad6e1e3a" translate="yes" xml:space="preserve">
          <source>When template code is provided by a third-party (through a web interface for instance), it might be interesting to validate the template syntax before saving it. If the template code is stored in a &lt;code&gt;$template&lt;/code&gt; variable, here is how you can do it:</source>
          <target state="translated">テンプレートコードがサードパーティによって（たとえばWebインターフェイスを介して）提供されている場合、保存する前にテンプレート構文を検証することは興味深いかもしれません。テンプレートコードが &lt;code&gt;$template&lt;/code&gt; 変数に格納されている場合、その方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="67e42e707e0e0568b95fd864d8efc7fa0982d436" translate="yes" xml:space="preserve">
          <source>When the attribute contains special characters (like &lt;code&gt;-&lt;/code&gt; that would be interpreted as the minus operator), use the &lt;code&gt;attribute&lt;/code&gt; function instead to access the variable attribute:</source>
          <target state="translated">属性は（のような特殊文字が含まれている場合 &lt;code&gt;-&lt;/code&gt; マイナス演算子として解釈されてしまうこと）を、使用 &lt;code&gt;attribute&lt;/code&gt; 変数属性にアクセスする代わりに、関数：</target>
        </trans-unit>
        <trans-unit id="d7de9253c392095c50442fe669505af044745e25" translate="yes" xml:space="preserve">
          <source>When using OPcache with &lt;code&gt;opcache.validate_timestamps&lt;/code&gt; set to &lt;code&gt;0&lt;/code&gt; or APC with &lt;code&gt;apc.stat&lt;/code&gt; set to &lt;code&gt;0&lt;/code&gt; and Twig cache enabled, clearing the template cache won&amp;rsquo;t update the cache.</source>
          <target state="translated">OPcache使用している場合 &lt;code&gt;opcache.validate_timestamps&lt;/code&gt; に設定 &lt;code&gt;0&lt;/code&gt; またはAPC &lt;code&gt;apc.stat&lt;/code&gt; にセット &lt;code&gt;0&lt;/code&gt; と小枝キャッシュはキャッシュを更新しませんテンプレートキャッシュをクリアし、有効。</target>
        </trans-unit>
        <trans-unit id="0813e5c10c5f1c009971ad784eda73a785b69db1" translate="yes" xml:space="preserve">
          <source>When using OPcache with &lt;code&gt;opcache.validate_timestamps&lt;/code&gt; set to &lt;code&gt;0&lt;/code&gt; or APC with &lt;code&gt;apc.stat&lt;/code&gt; set to &lt;code&gt;0&lt;/code&gt; and Twig cache enabled, clearing the template cache won't update the cache.</source>
          <target state="translated">OPcache使用している場合 &lt;code&gt;opcache.validate_timestamps&lt;/code&gt; に設定 &lt;code&gt;0&lt;/code&gt; またはAPC &lt;code&gt;apc.stat&lt;/code&gt; にセット &lt;code&gt;0&lt;/code&gt; と小枝キャッシュはキャッシュを更新しませんテンプレートキャッシュをクリアし、有効。</target>
        </trans-unit>
        <trans-unit id="752ab74beaab9317cd15548434043fa98c9d2e1d" translate="yes" xml:space="preserve">
          <source>When using a variable as the escaping strategy, you should disable automatic escaping:</source>
          <target state="translated">エスケープ戦略として変数を使用する場合は、自動エスケープを無効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="2708246fbc077f8eb2388f50aa89636c00df5471" translate="yes" xml:space="preserve">
          <source>When using automatic escaping, Twig tries to not double-escape a variable when the automatic escaping strategy is the same as the one applied by the escape filter; but that does not work when using a variable as the escaping strategy:</source>
          <target state="translated">自動エスケープを使うとき、Twigは自動エスケープのストラテジーがエスケープフィルタによって適用されたものと同じである場合、変数を二重にエスケープしないようにしています。</target>
        </trans-unit>
        <trans-unit id="0ac34962d9f0ad38b6ebdc99a6b1e9c63868a759" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;Array&lt;/code&gt; loader with a cache mechanism, you should know that a new cache key is generated each time a template content &quot;changes&quot; (the cache key being the source code of the template). If you don't want to see your cache grows out of control, you need to take care of clearing the old cache file by yourself.</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; ローダーをキャッシュメカニズムと共に使用する場合、テンプレートのコンテンツが「変更」されるたびに新しいキャッシュキーが生成されることを知っておく必要があります（キャッシュキーはテンプレートのソースコードです）。キャッシュが制御不能になるのを見たくない場合は、古いキャッシュファイルを自分でクリアする必要があります。</target>
        </trans-unit>
        <trans-unit id="6f7aff27a122e26d1afc754b09c7c81de17dbcd2" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;Array&lt;/code&gt; loader with a cache mechanism, you should know that a new cache key is generated each time a template content &amp;ldquo;changes&amp;rdquo; (the cache key being the source code of the template). If you don&amp;rsquo;t want to see your cache grows out of control, you need to take care of clearing the old cache file by yourself.</source>
          <target state="translated">キャッシュメカニズムで &lt;code&gt;Array&lt;/code&gt; ローダーを使用する場合、テンプレートのコンテンツが「変更」されるたびに新しいキャッシュキーが生成されることを知っておく必要があります（キャッシュキーはテンプレートのソースコードです）。キャッシュが制御不能になるのを確認したくない場合は、古いキャッシュファイルを自分でクリアする必要があります。</target>
        </trans-unit>
        <trans-unit id="cda849c54f0b38bf7080d01a2fdfab411f3e7a09" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;default&lt;/code&gt; filter on an expression that uses variables in some method calls, be sure to use the &lt;code&gt;default&lt;/code&gt; filter whenever a variable can be undefined:</source>
          <target state="translated">使用している場合 &lt;code&gt;default&lt;/code&gt; 式にフィルタをいくつかのメソッド呼び出しでの使用の変数は、必ず使用していることを &lt;code&gt;default&lt;/code&gt; 変数は未定義することができたときにフィルタを：</target>
        </trans-unit>
        <trans-unit id="19fa26972d88f178e441a8de21417fc9ac8adc94" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;defined&lt;/code&gt; test on an expression that uses variables in some method calls, be sure that they are all defined first:</source>
          <target state="translated">使用している場合 &lt;code&gt;defined&lt;/code&gt; 式にテストをいくつかのメソッド呼び出しでの使用の変数は、それらはすべて最初に定義されていることを確認してくださいということ：</target>
        </trans-unit>
        <trans-unit id="3fa5d75856aefd54283671f167f3e9b8d722a578" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;setPaths()&lt;/code&gt;, &lt;code&gt;addPath()&lt;/code&gt;, and &lt;code&gt;prependPath()&lt;/code&gt; methods, specify the namespace as the second argument (when not specified, these methods act on the &quot;main&quot; namespace):</source>
          <target state="translated">使用している場合 &lt;code&gt;setPaths()&lt;/code&gt; を、 &lt;code&gt;addPath()&lt;/code&gt; 、および &lt;code&gt;prependPath()&lt;/code&gt; メソッドは、第二引数（指定されていない場合は、これらの方法は、「メイン」名前空間に作用）として名前空間を指定します。</target>
        </trans-unit>
        <trans-unit id="0fb799b6ab2d2fed0cd4b41761e0de31565c1bda" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;setPaths()&lt;/code&gt;, &lt;code&gt;addPath()&lt;/code&gt;, and &lt;code&gt;prependPath()&lt;/code&gt; methods, specify the namespace as the second argument (when not specified, these methods act on the &amp;ldquo;main&amp;rdquo; namespace):</source>
          <target state="translated">使用している場合 &lt;code&gt;setPaths()&lt;/code&gt; を、 &lt;code&gt;addPath()&lt;/code&gt; 、および &lt;code&gt;prependPath()&lt;/code&gt; メソッドは、第二引数（指定されていない場合は、これらの方法は、「メイン」名前空間に作用）として名前空間を指定します。</target>
        </trans-unit>
        <trans-unit id="db5351bfd037ab168b88a735d12ed5587d5b219c" translate="yes" xml:space="preserve">
          <source>When using the whitespace control character, do not put any spaces between it and the delimiter:</source>
          <target state="translated">空白制御文字を使用する場合は、区切り文字との間にスペースを入れないようにしてください。</target>
        </trans-unit>
        <trans-unit id="c60b7ed3fc6247cac50401e3fd4744947d88ad6b" translate="yes" xml:space="preserve">
          <source>When writing Twig templates, we recommend you to follow these official coding standards:</source>
          <target state="translated">Twigのテンプレートを書く際には、以下の公式のコーディング基準に従うことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="973964216de0a31861f2d1c1d3895c5ff82b3519" translate="yes" xml:space="preserve">
          <source>When you set the &lt;code&gt;ignore_missing&lt;/code&gt; flag, Twig will return an empty string if the template does not exist:</source>
          <target state="translated">&lt;code&gt;ignore_missing&lt;/code&gt; フラグを設定すると、テンプレートが存在しない場合、Twigは空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="e88cdb1d85d8ae245d732495a6b5c645b610b3dc" translate="yes" xml:space="preserve">
          <source>When you want to use a macro in another macro from the same file, you need to import it locally:</source>
          <target state="translated">同じファイルから別のマクロで使いたい場合は、ローカルにインポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="b2028cfcc78f7fd44821aacab16481a32f1dfc70" translate="yes" xml:space="preserve">
          <source>When?</source>
          <target state="translated">When?</target>
        </trans-unit>
        <trans-unit id="8dd37894d1b63b621628f1a41fd39383129c1435" translate="yes" xml:space="preserve">
          <source>Whether automatic escaping is enabled or not, you can mark a section of a template to be escaped or not by using the &lt;a href=&quot;tags/autoescape&quot;&gt;autoescape&lt;/a&gt; tag:</source>
          <target state="translated">自動エスケープが有効かどうかに関係なく、&lt;a href=&quot;tags/autoescape&quot;&gt;autoescape&lt;/a&gt;タグを使用して、テンプレートのセクションをエスケープするかどうかをマークできます。</target>
        </trans-unit>
        <trans-unit id="07f5308cc3a8a56183bb8085f502d4928e9d6aa7" translate="yes" xml:space="preserve">
          <source>Whether automatic escaping is enabled or not, you can mark a section of a template to be escaped or not by using the &lt;code&gt;autoescape&lt;/code&gt; tag:</source>
          <target state="translated">自動エスケープが有効かどうかに関係なく、 &lt;code&gt;autoescape&lt;/code&gt; タグを使用して、テンプレートのセクションをエスケープするかどうかをマークできます。</target>
        </trans-unit>
        <trans-unit id="5dd3fc91fe8f6c82594a680c7bccd3efc08235e6" translate="yes" xml:space="preserve">
          <source>While other pages (&quot;boom&quot; and &quot;baz&quot;) share a different content structure - two boxes side by side:</source>
          <target state="translated">他のページ(「ブーム」と「バズ」)が異なるコンテンツ構造を共有している間に-2つのボックスが横に並んでいます。</target>
        </trans-unit>
        <trans-unit id="05db1be9b935313891ad6432e0f55984efe204c9" translate="yes" xml:space="preserve">
          <source>While other pages (&amp;ldquo;boom&amp;rdquo; and &amp;ldquo;baz&amp;rdquo;) share a different content structure - two boxes side by side:</source>
          <target state="translated">他のページ（「ブーム」と「バズ」）は異なるコンテンツ構造を共有していますが、2つのボックスが並んでいます。</target>
        </trans-unit>
        <trans-unit id="8e3fb6b9dddf2cf75633e30c42b159d65aafe736" translate="yes" xml:space="preserve">
          <source>Whitespace Control</source>
          <target state="translated">空白制御</target>
        </trans-unit>
        <trans-unit id="ecf33dfffe1d472b018bba2411263f34cfaf0df9" translate="yes" xml:space="preserve">
          <source>Will be rendered &quot;&amp;lt;strong&amp;gt;Hello&amp;lt;/strong&amp;gt; &lt;strong&gt;world&lt;/strong&gt;&quot;.</source>
          <target state="translated">「&amp;lt;strong&amp;gt; Hello &amp;lt;/ strong&amp;gt; &lt;strong&gt;world&lt;/strong&gt;」とレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="433cc9d44eaaf82401c06c689824aa1c7b8a3dfa" translate="yes" xml:space="preserve">
          <source>Will be rendered &amp;ldquo;&amp;lt;strong&amp;gt;Hello&amp;lt;/strong&amp;gt; &lt;strong&gt;world&lt;/strong&gt;&amp;rdquo;.</source>
          <target state="translated">「&amp;lt;strong&amp;gt;こんにちは&amp;lt;/ strong&amp;gt;の&lt;strong&gt;世界&lt;/strong&gt;」にレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="f0aa810573f73fcb5f1bd47880002f3d77512ca9" translate="yes" xml:space="preserve">
          <source>With such a configuration, Twig will first look for templates in &lt;code&gt;$templateDir1&lt;/code&gt; and if they do not exist, it will fallback to look for them in the &lt;code&gt;$templateDir2&lt;/code&gt;.</source>
          <target state="translated">このような構成では、Twigは最初に &lt;code&gt;$templateDir1&lt;/code&gt; でテンプレートを検索し、テンプレートが存在しない場合は、フォールバックして &lt;code&gt;$templateDir2&lt;/code&gt; を検索します。</target>
        </trans-unit>
        <trans-unit id="183f1a5810276b796abfb434f208acb31cb83dc4" translate="yes" xml:space="preserve">
          <source>With the previous configuration, the security policy will only allow usage of the &lt;code&gt;if&lt;/code&gt; tag, and the &lt;code&gt;upper&lt;/code&gt; filter. Moreover, the templates will only be able to call the &lt;code&gt;getTitle()&lt;/code&gt; and &lt;code&gt;getBody()&lt;/code&gt; methods on &lt;code&gt;Article&lt;/code&gt; objects, and the &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt; public properties. Everything else won&amp;rsquo;t be allowed and will generate a &lt;code&gt;\Twig\Sandbox\SecurityError&lt;/code&gt; exception.</source>
          <target state="translated">以前の構成では、セキュリティポリシーは、 &lt;code&gt;if&lt;/code&gt; タグと &lt;code&gt;upper&lt;/code&gt; フィルターの使用のみを許可します。また、テンプレートは、唯一の呼び出すことができるようになります &lt;code&gt;getTitle()&lt;/code&gt; と &lt;code&gt;getBody()&lt;/code&gt; のメソッド &lt;code&gt;Article&lt;/code&gt; オブジェクトと、 &lt;code&gt;title&lt;/code&gt; と &lt;code&gt;body&lt;/code&gt; のパブリックプロパティ。それ以外はすべて許可されず、 &lt;code&gt;\Twig\Sandbox\SecurityError&lt;/code&gt; 例外が生成されます。</target>
        </trans-unit>
        <trans-unit id="31a261091bc12477bdf201132db7e19681961115" translate="yes" xml:space="preserve">
          <source>With the previous configuration, the security policy will only allow usage of the &lt;code&gt;if&lt;/code&gt; tag, and the &lt;code&gt;upper&lt;/code&gt; filter. Moreover, the templates will only be able to call the &lt;code&gt;getTitle()&lt;/code&gt; and &lt;code&gt;getBody()&lt;/code&gt; methods on &lt;code&gt;Article&lt;/code&gt; objects, and the &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt; public properties. Everything else won't be allowed and will generate a &lt;code&gt;Twig_Sandbox_SecurityError&lt;/code&gt; exception.</source>
          <target state="translated">以前の構成では、セキュリティポリシーは &lt;code&gt;if&lt;/code&gt; タグと &lt;code&gt;upper&lt;/code&gt; フィルターの使用のみを許可します。また、テンプレートは、唯一の呼び出すことができるようになります &lt;code&gt;getTitle()&lt;/code&gt; と &lt;code&gt;getBody()&lt;/code&gt; のメソッド &lt;code&gt;Article&lt;/code&gt; オブジェクトと、 &lt;code&gt;title&lt;/code&gt; と &lt;code&gt;body&lt;/code&gt; のパブリックプロパティ。それ以外は許可されず、 &lt;code&gt;Twig_Sandbox_SecurityError&lt;/code&gt; 例外が生成されます。</target>
        </trans-unit>
        <trans-unit id="8e3006cae4f5c258364302cbb40c3749f1e0b048" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;embed&lt;/code&gt; tag, you have two ways to design your templates:</source>
          <target state="translated">なければ &lt;code&gt;embed&lt;/code&gt; タグを、あなたのテンプレートを設計するには、2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="fc84de10a09d95ec9c9220b502b9d9fb9bbf0755" translate="yes" xml:space="preserve">
          <source>Working with Ajax means that the same content is sometimes displayed as is, and sometimes decorated with a layout. As Twig layout template names can be any valid expression, you can pass a variable that evaluates to &lt;code&gt;true&lt;/code&gt; when the request is made via Ajax and choose the layout accordingly:</source>
          <target state="translated">Ajaxを使用すると、同じコンテンツがそのまま表示されたり、レイアウトで装飾されたりすることがあります。Twigレイアウトテンプレート名は任意の有効な式にすることができるため、リクエストがAjax経由で行われたときに &lt;code&gt;true&lt;/code&gt; と評価される変数を渡し、それに応じてレイアウトを選択できます。</target>
        </trans-unit>
        <trans-unit id="da90ccd243d299c65a2697d5ea61cdc25d4bcb15" translate="yes" xml:space="preserve">
          <source>Working with Automatic Escaping</source>
          <target state="translated">自動エスケープとの連携</target>
        </trans-unit>
        <trans-unit id="426206ad1379d0ba97fdb478fba1088b1e8604e3" translate="yes" xml:space="preserve">
          <source>Working with Manual Escaping</source>
          <target state="translated">マニュアルエケイピングでの作業</target>
        </trans-unit>
        <trans-unit id="1b7805563350b95944d8bbf569bfbddef299cbd1" translate="yes" xml:space="preserve">
          <source>Wrapping a text to a given number of characters:</source>
          <target state="translated">テキストを所定の文字数にラッピングします。</target>
        </trans-unit>
        <trans-unit id="ea2e3ecce537f9ffac3ab9d0847565705767efd0" translate="yes" xml:space="preserve">
          <source>You can add additional variables by passing them after the &lt;code&gt;with&lt;/code&gt; keyword:</source>
          <target state="translated">&lt;code&gt;with&lt;/code&gt; キーワードの後に変数を渡すことにより、変数を追加できます。</target>
        </trans-unit>
        <trans-unit id="29021213a03eb7bb62b7f93809ab6447fa4d6382" translate="yes" xml:space="preserve">
          <source>You can add or prepend paths via the &lt;code&gt;addPath()&lt;/code&gt; and &lt;code&gt;prependPath()&lt;/code&gt; methods:</source>
          <target state="translated">&lt;code&gt;addPath()&lt;/code&gt; および &lt;code&gt;prependPath()&lt;/code&gt; メソッドを介してパスを追加または追加できます。</target>
        </trans-unit>
        <trans-unit id="0d9d64a7c06c89a8728c28dd460685680a194b49" translate="yes" xml:space="preserve">
          <source>You can also access both keys and values:</source>
          <target state="translated">キーと値の両方にアクセスすることもできます。</target>
        </trans-unit>
        <trans-unit id="744055768ba741d0f8a97bc63a4a46519ce07159" translate="yes" xml:space="preserve">
          <source>You can also add loaders via the &lt;code&gt;addLoader()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;addLoader()&lt;/code&gt; メソッドを使用してローダーを追加することもできます。</target>
        </trans-unit>
        <trans-unit id="4df95231d583cf64eb401087a78532c3dd146017" translate="yes" xml:space="preserve">
          <source>You can also add some stylesheets by passing them as arguments to the filter:</source>
          <target state="translated">スタイルシートをフィルタの引数として渡すことで、 いくつかのスタイルシートを追加することもできます。</target>
        </trans-unit>
        <trans-unit id="991fdc2761e1416e3f5f2b539227ec2046dac22f" translate="yes" xml:space="preserve">
          <source>You can also chain filters and pass arguments to them:</source>
          <target state="translated">また、フィルタをチェーン化して引数を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="f2c85ef3103f54de82aefc407306b88b27d64421" translate="yes" xml:space="preserve">
          <source>You can also chain filters:</source>
          <target state="translated">また、フィルターをチェーン化することもできます。</target>
        </trans-unit>
        <trans-unit id="26168adc4ca27c8e2017fb5862f500c0a9dea5f8" translate="yes" xml:space="preserve">
          <source>You can also chain methods:</source>
          <target state="translated">メソッドを連鎖させることもできます。</target>
        </trans-unit>
        <trans-unit id="6ed5b7fff1c4ad3d3c0eb865290606e141f9530c" translate="yes" xml:space="preserve">
          <source>You can also change the escaping mode locally by using the &lt;code&gt;autoescape&lt;/code&gt; tag:</source>
          <target state="translated">&lt;code&gt;autoescape&lt;/code&gt; タグを使用して、エスケープモードをローカルで変更することもできます。</target>
        </trans-unit>
        <trans-unit id="a4232664a77febfd864fec44f04a15aa06b2a807" translate="yes" xml:space="preserve">
          <source>You can also check if a string &lt;code&gt;starts with&lt;/code&gt; or &lt;code&gt;ends with&lt;/code&gt; another string:</source>
          <target state="translated">文字列 &lt;code&gt;starts with&lt;/code&gt; 別の文字列で始まるか、または &lt;code&gt;ends with&lt;/code&gt; かどうかを確認することもできます。</target>
        </trans-unit>
        <trans-unit id="5e4b841248df8631f3e0c1c72b7b8edccf9d7c95" translate="yes" xml:space="preserve">
          <source>You can also control whitespace on a per tag level. By using the whitespace control modifiers on your tags, you can trim leading and or trailing whitespace.</source>
          <target state="translated">また、タグのレベルごとに空白を制御することもできます。タグのホワイトスペース制御モディファイアを使用することで、先頭のホワイトスペースや末尾のホワイトスペースをトリミングすることができます。</target>
        </trans-unit>
        <trans-unit id="d655e1c5d2f4233dfb72114871900c8aabc9ee81" translate="yes" xml:space="preserve">
          <source>You can also dump the data in a &lt;a href=&quot;https://blackfire.io/&quot;&gt;Blackfire.io&lt;/a&gt; compatible format:</source>
          <target state="translated">&lt;a href=&quot;https://blackfire.io/&quot;&gt;Blackfire.io&lt;/a&gt;互換形式でデータをダンプすることもできます。</target>
        </trans-unit>
        <trans-unit id="91dbc986860d74942d4f200cc3e13bbed5036746" translate="yes" xml:space="preserve">
          <source>You can also load and render the template in one fell swoop:</source>
          <target state="translated">テンプレートを一気に読み込んでレンダリングすることもできます。</target>
        </trans-unit>
        <trans-unit id="eb4878faacdeb475115989a82d7c77566af2c847" translate="yes" xml:space="preserve">
          <source>You can also pass a &lt;code&gt;limit&lt;/code&gt; argument:</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; 引数を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="ee755ffe35e5f2617bcf948aefa36fab832cabd0" translate="yes" xml:space="preserve">
          <source>You can also provide a list of templates that are checked for existence before inclusion. The first template that exists will be included:</source>
          <target state="translated">また、含める前に存在をチェックするテンプレートのリストを提供することもできます。最初に存在するテンプレートがインクルードされます。</target>
        </trans-unit>
        <trans-unit id="d2c4cdc8f33df1ab318ca9558b9b27fd01226dc7" translate="yes" xml:space="preserve">
          <source>You can also provide a list of templates that are checked for existence before inclusion. The first template that exists will be rendered:</source>
          <target state="translated">また、含める前に存在をチェックするテンプレートのリストを指定することもできます。最初に存在するテンプレートがレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="5594aabe2a908b695a983e99b8999ad83d83d844" translate="yes" xml:space="preserve">
          <source>You can also provide a list of templates that are checked for existence. The first template that exists will be used as a parent:</source>
          <target state="translated">また、存在をチェックするテンプレートのリストを提供することもできます。最初に存在するテンプレートが親として使用されます。</target>
        </trans-unit>
        <trans-unit id="6898ebf6346a2760e9226b31f9760ceddba6c4ea" translate="yes" xml:space="preserve">
          <source>You can also provide tags which should not be stripped:</source>
          <target state="translated">また、剥がしてはいけないタグを用意することもできます。</target>
        </trans-unit>
        <trans-unit id="f9bc30c9614c2a625e757dc33f34a40ae71ec0bc" translate="yes" xml:space="preserve">
          <source>You can also test if an array is not empty:</source>
          <target state="translated">配列が空でないかどうかをテストすることもできます。</target>
        </trans-unit>
        <trans-unit id="9f777e8afcd333f96ea24faa3b8a9bfa41f9681c" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;not&lt;/code&gt; to check for values that evaluate to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; と評価される値をチェックし &lt;code&gt;not&lt;/code&gt; ように使用することもできます。</target>
        </trans-unit>
        <trans-unit id="bddf06289de4e2d3aa497bb7248d5a7adaed995c" translate="yes" xml:space="preserve">
          <source>You can also use both positional and named arguments in one call, in which case positional arguments must always come before named arguments:</source>
          <target state="translated">また、一度の呼び出しで位置引数と名前付き引数の両方を使用することもできますが、その場合、位置引数は常に名前付き引数の前に来なければなりません。</target>
        </trans-unit>
        <trans-unit id="fecc43715e0bcbd03147933235a8d4ecc55736db" translate="yes" xml:space="preserve">
          <source>You can also use the filter on an entire template which you &lt;code&gt;include&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; テンプレート全体でフィルターを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="a9d0694ddae8ec8a4ce21885e13b75cb032ba4ce" translate="yes" xml:space="preserve">
          <source>You can also use the filter on an included file or a variable:</source>
          <target state="translated">インクルードされたファイルや変数に対してフィルタを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="bdc988216dfc842a88aba04d594b841eadcb25f5" translate="yes" xml:space="preserve">
          <source>You can also use the filter on an included file:</source>
          <target state="translated">また、インクルードされたファイルにフィルタを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="08289bc84bb98b8c8cc12e888425eba0c86fc9e8" translate="yes" xml:space="preserve">
          <source>You can assign values to variables inside code blocks. Assignments use the &lt;a href=&quot;tags/set&quot;&gt;set&lt;/a&gt; tag:</source>
          <target state="translated">コードブロック内の変数に値を割り当てることができます。割り当ては&lt;a href=&quot;tags/set&quot;&gt;set&lt;/a&gt;タグを使用します。</target>
        </trans-unit>
        <trans-unit id="baaacded40ba2f14df2d4a9b319343cdcabaa1a5" translate="yes" xml:space="preserve">
          <source>You can check if a macro is defined via the &lt;code&gt;defined&lt;/code&gt; test:</source>
          <target state="translated">&lt;code&gt;defined&lt;/code&gt; テストを介してマクロが定義されているかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="0c215e6ecff07f3201ff2121f05cb3e9ff339627" translate="yes" xml:space="preserve">
          <source>You can combine &lt;code&gt;spaceless&lt;/code&gt; with the &lt;code&gt;apply&lt;/code&gt; tag to apply the transformation on large amounts of HTML:</source>
          <target state="translated">&lt;code&gt;spaceless&lt;/code&gt; を &lt;code&gt;apply&lt;/code&gt; タグと組み合わせて、大量のHTMLに変換を適用できます。</target>
        </trans-unit>
        <trans-unit id="b730796f435431ad683b561b7ff6b43fdfc2e89f" translate="yes" xml:space="preserve">
          <source>You can combine multiple expressions with the following operators:</source>
          <target state="translated">以下の演算子で複数の式を組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="9454e5f5a90acd04f414e8f766e5e1f3a3c514ea" translate="yes" xml:space="preserve">
          <source>You can control the number of decimal places, decimal point, and thousands separator using the additional arguments:</source>
          <target state="translated">追加の引数を使用して、小数点以下の桁数、小数点以下の桁数、千桁の区切り文字を制御することができます。</target>
        </trans-unit>
        <trans-unit id="9e2c08c89c838b68bf6f38d6358b1d07335dbc49" translate="yes" xml:space="preserve">
          <source>You can create functional tests for extensions by creating the following file structure in your test directory:</source>
          <target state="translated">テストディレクトリに以下のファイル構造を作成することで、拡張子の機能テストを作成することができます。</target>
        </trans-unit>
        <trans-unit id="d98f954507f65201281ae89512276fc98247e81e" translate="yes" xml:space="preserve">
          <source>You can create functional tests for extensions simply by creating the following file structure in your test directory:</source>
          <target state="translated">テストディレクトリに以下のファイル構造を作成するだけで、拡張子の機能テストを作成することができます。</target>
        </trans-unit>
        <trans-unit id="a9ebeee9759534393bcd5a00faecd0e47d610141" translate="yes" xml:space="preserve">
          <source>You can debug several variables by passing them as additional arguments:</source>
          <target state="translated">いくつかの変数を追加の引数として渡すことで、デバッグを行うことができます。</target>
        </trans-unit>
        <trans-unit id="1a2caadfac3dbe65d10d1ddd70e99a16e71324cf" translate="yes" xml:space="preserve">
          <source>You can decouple the extension definitions from their runtime implementations by registering a &lt;code&gt;\Twig\RuntimeLoader\RuntimeLoaderInterface&lt;/code&gt; instance on the environment that knows how to instantiate such runtime classes (runtime classes must be autoload-able):</source>
          <target state="translated">このようなランタイムクラスをインスタンス化する方法を知っている環境に &lt;code&gt;\Twig\RuntimeLoader\RuntimeLoaderInterface&lt;/code&gt; インスタンスを登録することで、拡張定義をランタイム実装から切り離すことができます（ランタイムクラスは自動ロード可能である必要があります）。</target>
        </trans-unit>
        <trans-unit id="5ae0b0755f10e915d2b236229a98f7e621e2a24f" translate="yes" xml:space="preserve">
          <source>You can define custom escapers by calling the &lt;code&gt;setEscaper()&lt;/code&gt; method on the &lt;code&gt;core&lt;/code&gt; extension instance. The first argument is the escaper name (to be used in the &lt;code&gt;escape&lt;/code&gt; call) and the second one must be a valid PHP callable:</source>
          <target state="translated">&lt;code&gt;core&lt;/code&gt; 拡張インスタンスで &lt;code&gt;setEscaper()&lt;/code&gt; メソッドを呼び出すことにより、カスタムエスケーパーを定義できます。最初の引数はエスケープ名（ &lt;code&gt;escape&lt;/code&gt; 呼び出しで使用される）で、2番目の引数は有効なPHP呼び出し可能でなければなりません：</target>
        </trans-unit>
        <trans-unit id="d899bd41c17eda1f20463b4b5da9f44d68041952" translate="yes" xml:space="preserve">
          <source>You can define custom escapers by calling the &lt;code&gt;setEscaper()&lt;/code&gt; method on the escaper extension instance. The first argument is the escaper name (to be used in the &lt;code&gt;escape&lt;/code&gt; call) and the second one must be a valid PHP callable:</source>
          <target state="translated">エスケープ機能拡張インスタンスで &lt;code&gt;setEscaper()&lt;/code&gt; メソッドを呼び出すことにより、カスタムエスケープ機能を定義できます。最初の引数は（ &lt;code&gt;escape&lt;/code&gt; 呼び出しで使用される）エスケープ名であり、2番目の引数は有効なPHP呼び出し可能である必要があります。</target>
        </trans-unit>
        <trans-unit id="8722fec221f5acb70a892d491c5904c2be6c817a" translate="yes" xml:space="preserve">
          <source>You can disable access to the context by appending the &lt;code&gt;only&lt;/code&gt; keyword:</source>
          <target state="translated">&lt;code&gt;only&lt;/code&gt; キーワードを追加することで、コンテキストへのアクセスを無効にできます。</target>
        </trans-unit>
        <trans-unit id="653fe6c0e6ed3a6e6cdbe517e89a0b5a4125edf8" translate="yes" xml:space="preserve">
          <source>You can disable access to the context by setting &lt;code&gt;with_context&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;with_context&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定すると、コンテキストへのアクセスを無効にできます。</target>
        </trans-unit>
        <trans-unit id="ced3b2e2517a5803d7a298565585388b8c4f1f01" translate="yes" xml:space="preserve">
          <source>You can easily decouple the extension definitions from their runtime implementations by registering a &lt;code&gt;Twig_RuntimeLoaderInterface&lt;/code&gt; instance on the environment that knows how to instantiate such runtime classes (runtime classes must be autoload-able):</source>
          <target state="translated">このようなランタイムクラスをインスタンス化する方法を知っている環境に &lt;code&gt;Twig_RuntimeLoaderInterface&lt;/code&gt; インスタンスを登録することにより、ランタイム実装から拡張機能定義を簡単に分離できます（ランタイムクラスはオートロード可能でなければなりません）。</target>
        </trans-unit>
        <trans-unit id="6dea39f294b5df26c2da2cc1bb03aee5828c0cb7" translate="yes" xml:space="preserve">
          <source>You can manually compile a node tree to PHP code with the &lt;code&gt;compile()&lt;/code&gt; method of an environment:</source>
          <target state="translated">環境の &lt;code&gt;compile()&lt;/code&gt; メソッドを使用して、ノードツリーを手動でPHPコードにコンパイルできます。</target>
        </trans-unit>
        <trans-unit id="f944556c85a57c16374179e605ecc68390cc44c9" translate="yes" xml:space="preserve">
          <source>You can manually convert a source code into a token stream by calling the &lt;code&gt;tokenize()&lt;/code&gt; method of an environment:</source>
          <target state="translated">環境の &lt;code&gt;tokenize()&lt;/code&gt; メソッドを呼び出すことにより、ソースコードを手動でトークンストリームに変換できます。</target>
        </trans-unit>
        <trans-unit id="1aa929721913a822ae54009478f98e310dc36ca9" translate="yes" xml:space="preserve">
          <source>You can manually convert a token stream into a node tree by calling the &lt;code&gt;parse()&lt;/code&gt; method of an environment:</source>
          <target state="translated">環境の &lt;code&gt;parse()&lt;/code&gt; メソッドを呼び出すことで、トークンストリームをノードツリーに手動で変換できます。</target>
        </trans-unit>
        <trans-unit id="6614c3d201949247dbf4580db46ae68d4c4e6e76" translate="yes" xml:space="preserve">
          <source>You can mark a filter as being deprecated by setting the &lt;code&gt;deprecated&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;. You can also give an alternative filter that replaces the deprecated one when that makes sense:</source>
          <target state="translated">&lt;code&gt;deprecated&lt;/code&gt; オプションを &lt;code&gt;true&lt;/code&gt; に設定することで、フィルターを非推奨としてマークできます。それが理にかなっている場合は、非推奨のフィルターを置き換える代替フィルターを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="e15776b646d78d53f2fc8c89896bc0c27e632b31" translate="yes" xml:space="preserve">
          <source>You can mark an include with &lt;code&gt;ignore missing&lt;/code&gt; in which case Twig will ignore the statement if the template to be included does not exist. It has to be placed just after the template name. Here some valid examples:</source>
          <target state="translated">includeに &lt;code&gt;ignore missing&lt;/code&gt; をマークすることができます。その場合、インクルードされるテンプレートが存在しない場合、Twigはステートメントを無視します。テンプレート名の直後に配置する必要があります。ここにいくつかの有効な例があります：</target>
        </trans-unit>
        <trans-unit id="84c7c4336471ee9e9b18ca6b538983ed5ac43452" translate="yes" xml:space="preserve">
          <source>You can pass a timezone as the second argument:</source>
          <target state="translated">第二引数にタイムゾーンを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="9e73cb963aab02bddaed29fabbab2bd6c2ebfb25" translate="yes" xml:space="preserve">
          <source>You can pass an arrow function to sort the array:</source>
          <target state="translated">配列をソートするために矢印関数を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="2c8a82e7cab730188087edbc650b7e51019b8bf2" translate="yes" xml:space="preserve">
          <source>You can pass attributes to tweak the output:</source>
          <target state="translated">出力を微調整するために属性を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="4a1417762b9eca3a670bc8b4f41658d2fe94c558" translate="yes" xml:space="preserve">
          <source>You can pass the whole context as an argument by using the special &lt;code&gt;_context&lt;/code&gt; variable.</source>
          <target state="translated">特別な &lt;code&gt;_context&lt;/code&gt; 変数を使用して、コンテキスト全体を引数として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="d3d8a72bba54521e2705fbbbed7c3aaecd6910fa" translate="yes" xml:space="preserve">
          <source>You can read constants from object instances as well:</source>
          <target state="translated">オブジェクトインスタンスからも定数を読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="e17b8ab245c674bdb58d8d2d15e7a18bb49c17be" translate="yes" xml:space="preserve">
          <source>You can register an extension by using the &lt;code&gt;addExtension()&lt;/code&gt; method on your main &lt;code&gt;Environment&lt;/code&gt; object:</source>
          <target state="translated">メインの &lt;code&gt;Environment&lt;/code&gt; オブジェクトで &lt;code&gt;addExtension()&lt;/code&gt; メソッドを使用して、拡張機能を登録できます。</target>
        </trans-unit>
        <trans-unit id="2454154985f03a6a1ab77a807641233526d7a03c" translate="yes" xml:space="preserve">
          <source>You can replace this template by putting a file with the same name in &lt;code&gt;.../templates/mysite&lt;/code&gt;. And if you want to extend the original template, you might be tempted to write the following:</source>
          <target state="translated">このテンプレートを置き換えるには、同じ名前のファイルを &lt;code&gt;.../templates/mysite&lt;/code&gt; に配置します。また、元のテンプレートを拡張したい場合は、次のように書きたくなるかもしれません。</target>
        </trans-unit>
        <trans-unit id="5af45c7898083fafe96603ad763d000e629744e6" translate="yes" xml:space="preserve">
          <source>You can sandbox all templates by passing &lt;code&gt;true&lt;/code&gt; as the second argument of the extension constructor:</source>
          <target state="translated">拡張コンストラクタの2番目の引数として &lt;code&gt;true&lt;/code&gt; を渡すことで、すべてのテンプレートをサンドボックス化できます。</target>
        </trans-unit>
        <trans-unit id="add734ebc5fb9c21fc7b48db7ae7cc330d571a42" translate="yes" xml:space="preserve">
          <source>You can save your extension anywhere on the filesystem, as all extensions must be registered explicitly to be available in your templates.</source>
          <target state="translated">テンプレートで利用できるようにするには、すべての拡張子を明示的に登録しなければならないので、ファイルシステム上のどこにでも拡張子を保存することができます。</target>
        </trans-unit>
        <trans-unit id="ad7685bbda3bc84e65a81b841f252a680150cd52" translate="yes" xml:space="preserve">
          <source>You can set the default timezone globally by calling &lt;code&gt;setTimezone()&lt;/code&gt; on the &lt;code&gt;core&lt;/code&gt; extension instance:</source>
          <target state="translated">&lt;code&gt;core&lt;/code&gt; 拡張インスタンスで &lt;code&gt;setTimezone()&lt;/code&gt; を呼び出すことにより、デフォルトのタイムゾーンをグローバルに設定できます。</target>
        </trans-unit>
        <trans-unit id="143d2994f269bdb8ad0cf03bd2289e63d6745b01" translate="yes" xml:space="preserve">
          <source>You can test constants from object instances as well:</source>
          <target state="translated">オブジェクトインスタンスから定数をテストすることもできます。</target>
        </trans-unit>
        <trans-unit id="216b9bf39de3cdc56ce26093f9fb0cc002f0f1a1" translate="yes" xml:space="preserve">
          <source>You can then use the &lt;code&gt;text&lt;/code&gt; variable anywhere in a template:</source>
          <target state="translated">その後、テンプレート内の任意の場所で &lt;code&gt;text&lt;/code&gt; 変数を使用できます。</target>
        </trans-unit>
        <trans-unit id="fe772cff66eef96b2a91d4199aeca955205e5431" translate="yes" xml:space="preserve">
          <source>You can tweak the output for the date part and the time part:</source>
          <target state="translated">日付の部分と時間の部分の出力を微調整することができます。</target>
        </trans-unit>
        <trans-unit id="a9796bd10ca04ccb136765358fc9eb764b710bd1" translate="yes" xml:space="preserve">
          <source>You can use a &lt;code&gt;lipsum&lt;/code&gt;&lt;em&gt;tag&lt;/em&gt;:</source>
          <target state="translated">&lt;code&gt;lipsum&lt;/code&gt; &lt;em&gt;タグ&lt;/em&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="b20b9abec33c3f5b71e354fee02a15658749e7a6" translate="yes" xml:space="preserve">
          <source>You can use a dot (&lt;code&gt;.&lt;/code&gt;) to access attributes of a variable (methods or properties of a PHP object, or items of a PHP array), or the so-called &quot;subscript&quot; syntax (&lt;code&gt;[]&lt;/code&gt;):</source>
          <target state="translated">ドット（ &lt;code&gt;.&lt;/code&gt; ）を使用して、変数の属性（PHPオブジェクトのメソッドまたはプロパティ、またはPHP配列の項目）、またはいわゆる「添え字」構文（ &lt;code&gt;[]&lt;/code&gt; ）にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="938d2d8f696bd3bf1a0fca7c9b5d42d664ea99c7" translate="yes" xml:space="preserve">
          <source>You can use any valid expression for both the start and the length:</source>
          <target state="translated">開始と長さの両方に有効な式を使用することができます。</target>
        </trans-unit>
        <trans-unit id="6f0d86dd462199b3f244bb7e0e54fb5f579246e1" translate="yes" xml:space="preserve">
          <source>You can use as many &lt;code&gt;use&lt;/code&gt; statements as you want in any given template. If two imported templates define the same block, the latest one wins.</source>
          <target state="translated">任意のテンプレートで、必要な数の &lt;code&gt;use&lt;/code&gt; ステートメントを使用できます。2つのインポートされたテンプレートが同じブロックを定義している場合、最新のテンプレートが優先されます。</target>
        </trans-unit>
        <trans-unit id="15bcb85ac8e6cb36e0e2b288cd2678e8d0214397" translate="yes" xml:space="preserve">
          <source>You can use this filter to perform a containment test on strings, arrays, or objects implementing the &lt;code&gt;Traversable&lt;/code&gt; interface.</source>
          <target state="translated">このフィルターを使用して、 &lt;code&gt;Traversable&lt;/code&gt; インターフェースを実装する文字列、配列、またはオブジェクトに対して包含テストを実行できます。</target>
        </trans-unit>
        <trans-unit id="790578c5be55b2d5b046c84de9323022baaf5fd9" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t define multiple &lt;code&gt;block&lt;/code&gt; tags with the same name in the same template. This limitation exists because a block tag works in &amp;ldquo;both&amp;rdquo; directions. That is, a block tag doesn&amp;rsquo;t just provide a hole to fill - it also defines the content that fills the hole in the &lt;em&gt;parent&lt;/em&gt;. If there were two similarly-named &lt;code&gt;block&lt;/code&gt; tags in a template, that template&amp;rsquo;s parent wouldn&amp;rsquo;t know which one of the blocks&amp;rsquo; content to use.</source>
          <target state="translated">同じテンプレートに同じ名前の複数の &lt;code&gt;block&lt;/code&gt; タグを定義することはできません。この制限が存在するのは、ブロックタグが「両」方向で機能するためです。つまり、ブロックタグは、埋めるための穴を提供するだけでなく、&lt;em&gt;親の&lt;/em&gt;穴を埋めるコンテンツも定義します。テンプレートに同じ名前の &lt;code&gt;block&lt;/code&gt; タグが2つある場合、そのテンプレートの親は、ブロックのコンテンツのどちらを使用するかを知りません。</target>
        </trans-unit>
        <trans-unit id="c46dd32ce3f7d767d816f8b044faea4e54b5daa5" translate="yes" xml:space="preserve">
          <source>You can't define multiple &lt;code&gt;block&lt;/code&gt; tags with the same name in the same template. This limitation exists because a block tag works in &quot;both&quot; directions. That is, a block tag doesn't just provide a hole to fill - it also defines the content that fills the hole in the &lt;em&gt;parent&lt;/em&gt;. If there were two similarly-named &lt;code&gt;block&lt;/code&gt; tags in a template, that template's parent wouldn't know which one of the blocks' content to use.</source>
          <target state="translated">同じテンプレートで同じ名前の複数の &lt;code&gt;block&lt;/code&gt; タグを定義することはできません。この制限が存在するのは、blockタグが「両方」の方向で機能するためです。つまり、blockタグは埋める穴を提供するだけではなく、&lt;em&gt;親の&lt;/em&gt;穴を埋めるコンテンツも定義します。テンプレートに2つの類似した名前の &lt;code&gt;block&lt;/code&gt; タグがある場合、そのテンプレートの親は、ブロックのコンテンツのどれを使用するかがわかりません。</target>
        </trans-unit>
        <trans-unit id="22cac4f49871943beb67e5c6d3d91f573a484496" translate="yes" xml:space="preserve">
          <source>You might want to iterate over a subset of values. This can be achieved using the &lt;a href=&quot;../filters/slice&quot;&gt;slice&lt;/a&gt; filter:</source>
          <target state="translated">値のサブセットを反復処理したい場合があります。これは、&lt;a href=&quot;../filters/slice&quot;&gt;スライス&lt;/a&gt;フィルターを使用して実現できます。</target>
        </trans-unit>
        <trans-unit id="799b60e2bdca781629f31da3e6069d06c75928bb" translate="yes" xml:space="preserve">
          <source>[erusev/parsedown](&lt;a href=&quot;https://github.com/erusev/parsedown&quot;&gt;https://github.com/erusev/parsedown&lt;/a&gt;)</source>
          <target state="translated">[erusev/parsedown](&lt;a href=&quot;https://github.com/erusev/parsedown&quot;&gt;https://github.com/erusev/parsedown&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="6be834665b37e5e5459c24a8ea3c5076dfa1e7a5" translate="yes" xml:space="preserve">
          <source>[michelf/php-markdown](&lt;a href=&quot;https://github.com/michelf/php-markdown&quot;&gt;https://github.com/michelf/php-markdown&lt;/a&gt;)</source>
          <target state="translated">[michelf/php-markdown](&lt;a href=&quot;https://github.com/michelf/php-markdown&quot;&gt;https://github.com/michelf/php-markdown&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="1bdbae49be9dadb1da41d07c43456994bcf8772b" translate="yes" xml:space="preserve">
          <source>[thephpleague/html-to-markdown](&lt;a href=&quot;https://github.com/thephpleague/html-to-markdown&quot;&gt;https://github.com/thephpleague/html-to-markdown&lt;/a&gt;)</source>
          <target state="translated">[thephpleague/html-to-markdown](&lt;a href=&quot;https://github.com/thephpleague/html-to-markdown&quot;&gt;https://github.com/thephpleague/html-to-markdown&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="70f9a4cb05a8f4494873842e70c1cfa4fab2fa52" translate="yes" xml:space="preserve">
          <source>a random character from a string;</source>
          <target state="translated">文字列からのランダムな文字。</target>
        </trans-unit>
        <trans-unit id="4f5fc54474755a9e8a5b05d2e8d6a284b045c660" translate="yes" xml:space="preserve">
          <source>a random integer between 0 and the integer parameter (inclusive).</source>
          <target state="translated">0から整数パラメータ(含む)の間のランダムな整数。</target>
        </trans-unit>
        <trans-unit id="3dd0ee4a74d71fcea3b6d5890ca1e5dc49461a1e" translate="yes" xml:space="preserve">
          <source>a random integer between the first integer and the second integer parameter (inclusive).</source>
          <target state="translated">第1の整数と第2の整数パラメータの間のランダムな整数(含む)。</target>
        </trans-unit>
        <trans-unit id="10dab0268fd983e4b740e2eb9437e6022281c60a" translate="yes" xml:space="preserve">
          <source>a random integer between the integer parameter (when negative) and 0 (inclusive).</source>
          <target state="translated">整数パラメータ(負の場合)と0(含む)の間のランダムな整数。</target>
        </trans-unit>
        <trans-unit id="e21d83cd12e5129ad7da99a46f8fbab23f50453b" translate="yes" xml:space="preserve">
          <source>a random item from a sequence;</source>
          <target state="translated">シーケンスからのランダムな項目。</target>
        </trans-unit>
        <trans-unit id="82451b41fd7878180b6aa2b54e369cbec4e8032c" translate="yes" xml:space="preserve">
          <source>abs</source>
          <target state="translated">abs</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="69f45da1683c501696ebfa086d25192af3807dc6" translate="yes" xml:space="preserve">
          <source>apply</source>
          <target state="translated">apply</target>
        </trans-unit>
        <trans-unit id="2c317cd0735d9046d7675c475fa1c6dce647953f" translate="yes" xml:space="preserve">
          <source>attribute</source>
          <target state="translated">attribute</target>
        </trans-unit>
        <trans-unit id="177a744414283b05d8b122b94f6f0e8fc54eca42" translate="yes" xml:space="preserve">
          <source>autoescape</source>
          <target state="translated">autoescape</target>
        </trans-unit>
        <trans-unit id="7f01fe787c49e4adbe32533279699f08494c6472" translate="yes" xml:space="preserve">
          <source>batch</source>
          <target state="translated">batch</target>
        </trans-unit>
        <trans-unit id="0214b4b355d11ca8f2ce45a968c264651bdfbf83" translate="yes" xml:space="preserve">
          <source>block</source>
          <target state="translated">block</target>
        </trans-unit>
        <trans-unit id="fc39b18f287d8bbfaceae020f4a4eb32ac5c1e70" translate="yes" xml:space="preserve">
          <source>both</source>
          <target state="translated">both</target>
        </trans-unit>
        <trans-unit id="d01a341706c2a5c67a30eb227bba3d0fd7ace906" translate="yes" xml:space="preserve">
          <source>capitalize</source>
          <target state="translated">capitalize</target>
        </trans-unit>
        <trans-unit id="2cf3010522d927f05c835ad06f16007c84f138dd" translate="yes" xml:space="preserve">
          <source>check if &lt;code&gt;foo&lt;/code&gt; is an array and &lt;code&gt;bar&lt;/code&gt; a valid element;</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; が配列かどうかを確認し、有効な要素を &lt;code&gt;bar&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="d0a87463a5da3a529959582ae7965dbc217195be" translate="yes" xml:space="preserve">
          <source>class Project_Twig_Extension extends Twig_Extension { }</source>
          <target state="translated">class Project_Twig_Extension extends Twig_Extension{}.</target>
        </trans-unit>
        <trans-unit id="aa60230ab00282b5a1f3f1993b2d1c503e7d15a5" translate="yes" xml:space="preserve">
          <source>column</source>
          <target state="translated">column</target>
        </trans-unit>
        <trans-unit id="6ff16b36dc77810e63bda254427a1d6965fa127a" translate="yes" xml:space="preserve">
          <source>complex</source>
          <target state="translated">complex</target>
        </trans-unit>
        <trans-unit id="d810ca965a236c6f46a932efff918a4b3a191918" translate="yes" xml:space="preserve">
          <source>constant</source>
          <target state="translated">constant</target>
        </trans-unit>
        <trans-unit id="1f6b6676540ba69ffa0f1e9f5245486098bc2798" translate="yes" xml:space="preserve">
          <source>convert_encoding</source>
          <target state="translated">convert_encoding</target>
        </trans-unit>
        <trans-unit id="2c5aa339240c0c3ae97fcc9dc4ccf574c54bd9a0" translate="yes" xml:space="preserve">
          <source>country_name</source>
          <target state="translated">country_name</target>
        </trans-unit>
        <trans-unit id="073f6daaddab44779157014b510cf3d1b645a428" translate="yes" xml:space="preserve">
          <source>country_timezones</source>
          <target state="translated">country_timezones</target>
        </trans-unit>
        <trans-unit id="77f11186dd58a8d87ad5fff02464f8b7402f5d2f" translate="yes" xml:space="preserve">
          <source>currency_name</source>
          <target state="translated">currency_name</target>
        </trans-unit>
        <trans-unit id="25fd91050301f15e352646105d34cc9adea5de15" translate="yes" xml:space="preserve">
          <source>currency_symbol</source>
          <target state="translated">currency_symbol</target>
        </trans-unit>
        <trans-unit id="5d2432d4636d257e92c0918095f31735825405c3" translate="yes" xml:space="preserve">
          <source>cycle</source>
          <target state="translated">cycle</target>
        </trans-unit>
        <trans-unit id="eb3309815b50f5b910f7cfb43fa014bce2372865" translate="yes" xml:space="preserve">
          <source>data_uri</source>
          <target state="translated">data_uri</target>
        </trans-unit>
        <trans-unit id="e927d0677c77241b707442314346326278051dd6" translate="yes" xml:space="preserve">
          <source>date</source>
          <target state="translated">date</target>
        </trans-unit>
        <trans-unit id="0375b9aa6be553ecd1b87e02fb4bfff2bc3fbe99" translate="yes" xml:space="preserve">
          <source>date_modify</source>
          <target state="translated">date_modify</target>
        </trans-unit>
        <trans-unit id="7505d64a54e061b7acd54ccd58b49dc43500b635" translate="yes" xml:space="preserve">
          <source>default</source>
          <target state="translated">default</target>
        </trans-unit>
        <trans-unit id="9bc79382610417cb19c15d3e65015f8a7d7b36bc" translate="yes" xml:space="preserve">
          <source>defined</source>
          <target state="translated">defined</target>
        </trans-unit>
        <trans-unit id="513b28ad3810ae4846ec6bb58921d48892ceb662" translate="yes" xml:space="preserve">
          <source>deprecated</source>
          <target state="translated">deprecated</target>
        </trans-unit>
        <trans-unit id="3df24216e2026e64b661d856c019ca1a82e0532a" translate="yes" xml:space="preserve">
          <source>divisible by</source>
          <target state="translated">割り切れる</target>
        </trans-unit>
        <trans-unit id="3ba1a76c3742c595303023507125306e74c51571" translate="yes" xml:space="preserve">
          <source>divisibleby</source>
          <target state="translated">divisibleby</target>
        </trans-unit>
        <trans-unit id="eadcd9bd2a09c75aef04954e6799e50278ee124a" translate="yes" xml:space="preserve">
          <source>do</source>
          <target state="translated">do</target>
        </trans-unit>
        <trans-unit id="9567d1547e105470e4e53c1568f07a209e82a161" translate="yes" xml:space="preserve">
          <source>dump</source>
          <target state="translated">dump</target>
        </trans-unit>
        <trans-unit id="ae050f5b7fb8d383d62139276081853b47e7a03e" translate="yes" xml:space="preserve">
          <source>else</source>
          <target state="translated">else</target>
        </trans-unit>
        <trans-unit id="cfff27c96089b93150f3553b6ffdd39d0d5d8e78" translate="yes" xml:space="preserve">
          <source>embed</source>
          <target state="translated">embed</target>
        </trans-unit>
        <trans-unit id="ad87109bfff0765f4dd8cf4943b04d16a4070fea" translate="yes" xml:space="preserve">
          <source>empty</source>
          <target state="translated">empty</target>
        </trans-unit>
        <trans-unit id="79cc112e9b671aeea9119eee68c74b3f2fbeaa70" translate="yes" xml:space="preserve">
          <source>empty array</source>
          <target state="translated">空の配列</target>
        </trans-unit>
        <trans-unit id="6b3f8803e110dc659aa6186ce6aba70d8e52b81a" translate="yes" xml:space="preserve">
          <source>empty string</source>
          <target state="translated">空文字列</target>
        </trans-unit>
        <trans-unit id="cdecabe1520a398e4e46deff9d55b19bed6d6457" translate="yes" xml:space="preserve">
          <source>escape</source>
          <target state="translated">escape</target>
        </trans-unit>
        <trans-unit id="04b8c80bb78edbc4f2742dedfab5f5bddf895cd1" translate="yes" xml:space="preserve">
          <source>even</source>
          <target state="translated">even</target>
        </trans-unit>
        <trans-unit id="2b781ff8e3327e3e897ec571fa02fec12242e7dd" translate="yes" xml:space="preserve">
          <source>extends</source>
          <target state="translated">extends</target>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="translated">false</target>
        </trans-unit>
        <trans-unit id="4bb4ca75941b7bbc5bc6a12be44b22fc9c8d234e" translate="yes" xml:space="preserve">
          <source>filter</source>
          <target state="translated">filter</target>
        </trans-unit>
        <trans-unit id="9f8a9950a99ea4e23f0c97da4201341828eae28b" translate="yes" xml:space="preserve">
          <source>filter should only be used at the end of the filter chain:</source>
          <target state="translated">フィルターはフィルターチェーンの最後にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="e0996a37c13d44c3b06074939d43fa3759bd32c1" translate="yes" xml:space="preserve">
          <source>first</source>
          <target state="translated">first</target>
        </trans-unit>
        <trans-unit id="e4706359fc4117d0efea7adb012984601954e2af" translate="yes" xml:space="preserve">
          <source>flush</source>
          <target state="translated">flush</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="785987648f85190cfde9eadc69fc7c46fe8a7433" translate="yes" xml:space="preserve">
          <source>format</source>
          <target state="translated">format</target>
        </trans-unit>
        <trans-unit id="20f17d50b4eb27e59e614001aaecb4b6785ff8e5" translate="yes" xml:space="preserve">
          <source>format_currency</source>
          <target state="translated">format_currency</target>
        </trans-unit>
        <trans-unit id="6f4a1ad82ec90c91fe3c64ba4e9637a4eb315f70" translate="yes" xml:space="preserve">
          <source>format_date</source>
          <target state="translated">format_date</target>
        </trans-unit>
        <trans-unit id="50cc4089b2f517c7e3af2f5144fafbc83093391a" translate="yes" xml:space="preserve">
          <source>format_datetime</source>
          <target state="translated">format_datetime</target>
        </trans-unit>
        <trans-unit id="4c10ca3c7849e6acf901543261e9e352c7a521de" translate="yes" xml:space="preserve">
          <source>format_number</source>
          <target state="translated">format_number</target>
        </trans-unit>
        <trans-unit id="cd6757e0e531a59f84238019742bbe373c1e4890" translate="yes" xml:space="preserve">
          <source>format_time</source>
          <target state="translated">format_time</target>
        </trans-unit>
        <trans-unit id="79eb183e04b1523bd17785c4ffa9dc1ee345d968" translate="yes" xml:space="preserve">
          <source>frequent</source>
          <target state="translated">frequent</target>
        </trans-unit>
        <trans-unit id="0b1e95cfd9775191a7224d0a218ae79187e80c1d" translate="yes" xml:space="preserve">
          <source>from</source>
          <target state="translated">from</target>
        </trans-unit>
        <trans-unit id="c68a53701aa13dbe013e31658f7334743b555236" translate="yes" xml:space="preserve">
          <source>function to allow loading templates from string in a template.</source>
          <target state="translated">関数を使って、テンプレート内の文字列からテンプレートを読み込めるようにします。</target>
        </trans-unit>
        <trans-unit id="81d2c6aeec6f62cfbd111c5e8ad2d9d8611597a1" translate="yes" xml:space="preserve">
          <source>html_classes</source>
          <target state="translated">html_classes</target>
        </trans-unit>
        <trans-unit id="d747e0adf84082a97d77116c165aa8188742a34b" translate="yes" xml:space="preserve">
          <source>html_to_markdown</source>
          <target state="translated">html_to_markdown</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="4ca36229f1aade3dd1b230aea952384f754bbb8b" translate="yes" xml:space="preserve">
          <source>if not, and if &lt;code&gt;foo&lt;/code&gt; is an object, check that &lt;code&gt;bar&lt;/code&gt; is a valid method (even if &lt;code&gt;bar&lt;/code&gt; is the constructor - use &lt;code&gt;__construct()&lt;/code&gt; instead);</source>
          <target state="translated">そうでない場合、および &lt;code&gt;foo&lt;/code&gt; がオブジェクトの場合、 &lt;code&gt;bar&lt;/code&gt; が有効なメソッドであることを確認します（ &lt;code&gt;bar&lt;/code&gt; がコンストラクターであっても- 代わりに &lt;code&gt;__construct()&lt;/code&gt; を使用してください）。</target>
        </trans-unit>
        <trans-unit id="a10ecf2cdab1ff42e7ad747f6e3bde95e855d564" translate="yes" xml:space="preserve">
          <source>if not, and if &lt;code&gt;foo&lt;/code&gt; is an object, check that &lt;code&gt;bar&lt;/code&gt; is a valid property;</source>
          <target state="translated">そうでない場合、および &lt;code&gt;foo&lt;/code&gt; がオブジェクトの場合は、 &lt;code&gt;bar&lt;/code&gt; が有効なプロパティであることを確認してください。</target>
        </trans-unit>
        <trans-unit id="6596eed4ae4059448e0853306bef725b034792d8" translate="yes" xml:space="preserve">
          <source>if not, and if &lt;code&gt;foo&lt;/code&gt; is an object, check that &lt;code&gt;getBar&lt;/code&gt; is a valid method;</source>
          <target state="translated">そうでない場合、および &lt;code&gt;foo&lt;/code&gt; がオブジェクトの場合、 &lt;code&gt;getBar&lt;/code&gt; が有効なメソッドであることを確認してください。</target>
        </trans-unit>
        <trans-unit id="c498e5f27b0a869081d6fde35321037f7b4c649b" translate="yes" xml:space="preserve">
          <source>if not, and if &lt;code&gt;foo&lt;/code&gt; is an object, check that &lt;code&gt;hasBar&lt;/code&gt; is a valid method;</source>
          <target state="translated">そうでない場合、および &lt;code&gt;foo&lt;/code&gt; がオブジェクトの場合、 &lt;code&gt;hasBar&lt;/code&gt; が有効なメソッドであることを確認してください。</target>
        </trans-unit>
        <trans-unit id="01a43c200a380cf92db7d2ae1376fa68b98bc943" translate="yes" xml:space="preserve">
          <source>if not, and if &lt;code&gt;foo&lt;/code&gt; is an object, check that &lt;code&gt;isBar&lt;/code&gt; is a valid method;</source>
          <target state="translated">そうでない場合、および &lt;code&gt;foo&lt;/code&gt; がオブジェクトの場合、 &lt;code&gt;isBar&lt;/code&gt; が有効なメソッドであることを確認してください。</target>
        </trans-unit>
        <trans-unit id="ed17d9ee197b9ce5e4b5c98c8a238b212b43354a" translate="yes" xml:space="preserve">
          <source>if not, return a &lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">そうでない場合は、 &lt;code&gt;null&lt;/code&gt; 値を返します。</target>
        </trans-unit>
        <trans-unit id="62fdfbd55d19b2a4671102ad7bca17d875f8207a" translate="yes" xml:space="preserve">
          <source>import</source>
          <target state="translated">import</target>
        </trans-unit>
        <trans-unit id="d3ecb0d890368d7659ee54010045b835dacb8efe" translate="yes" xml:space="preserve">
          <source>include</source>
          <target state="translated">include</target>
        </trans-unit>
        <trans-unit id="207ec161130c9728917963da48db342b0393ada9" translate="yes" xml:space="preserve">
          <source>inky_to_html</source>
          <target state="translated">inky_to_html</target>
        </trans-unit>
        <trans-unit id="a0b8633d592d5ce1b166afd478b734e71d94e81f" translate="yes" xml:space="preserve">
          <source>inline_css</source>
          <target state="translated">inline_css</target>
        </trans-unit>
        <trans-unit id="a4232aa69e44a8d57375e3eb2456dacd95b18c0d" translate="yes" xml:space="preserve">
          <source>is compiled to something like the following:</source>
          <target state="translated">のようにコンパイルされています。</target>
        </trans-unit>
        <trans-unit id="9dd94c6934186333a00e635592ff461c9140c174" translate="yes" xml:space="preserve">
          <source>iterable</source>
          <target state="translated">iterable</target>
        </trans-unit>
        <trans-unit id="c455b38e076228392d1c751d14fe95da50519334" translate="yes" xml:space="preserve">
          <source>join</source>
          <target state="translated">join</target>
        </trans-unit>
        <trans-unit id="9fcd0bfe0868c9806b0bd00dba22225d3282d85b" translate="yes" xml:space="preserve">
          <source>json_encode</source>
          <target state="translated">json_encode</target>
        </trans-unit>
        <trans-unit id="5944ae25418ceabcf285dca1d721b77888dac89b" translate="yes" xml:space="preserve">
          <source>keys</source>
          <target state="translated">keys</target>
        </trans-unit>
        <trans-unit id="7df7d1e250ea2a416f078a631fb8caef5d6ad080" translate="yes" xml:space="preserve">
          <source>language_name</source>
          <target state="translated">language_name</target>
        </trans-unit>
        <trans-unit id="213ed3ea453bf610688ff8041e0a3b7b6abb5e6e" translate="yes" xml:space="preserve">
          <source>last</source>
          <target state="translated">last</target>
        </trans-unit>
        <trans-unit id="12c0f1fbadc4046b5f2bb9e063b227ef8750d9d6" translate="yes" xml:space="preserve">
          <source>left</source>
          <target state="translated">left</target>
        </trans-unit>
        <trans-unit id="3d54973f528b01019a58a52d34d518405a01b891" translate="yes" xml:space="preserve">
          <source>length</source>
          <target state="translated">length</target>
        </trans-unit>
        <trans-unit id="a228fc2e2eea07da9355df2690a2ef778a15c360" translate="yes" xml:space="preserve">
          <source>locale_name</source>
          <target state="translated">locale_name</target>
        </trans-unit>
        <trans-unit id="1df823e482339eb6067f4134408b0b8b28411a78" translate="yes" xml:space="preserve">
          <source>loop</source>
          <target state="translated">loop</target>
        </trans-unit>
        <trans-unit id="346e3ee198e98146993894d3de8ecab1a86c3e80" translate="yes" xml:space="preserve">
          <source>lower</source>
          <target state="translated">lower</target>
        </trans-unit>
        <trans-unit id="78f3a3d9d6e4d907a7d12e475d0a751d6b7e256b" translate="yes" xml:space="preserve">
          <source>macro</source>
          <target state="translated">macro</target>
        </trans-unit>
        <trans-unit id="37745ed7a0f005fb14522c5cc7c1ba3d9e0df579" translate="yes" xml:space="preserve">
          <source>map</source>
          <target state="translated">map</target>
        </trans-unit>
        <trans-unit id="05bb76f1e435db71754a65f9e8acec7dfdd4c65d" translate="yes" xml:space="preserve">
          <source>markdown_to_html</source>
          <target state="translated">markdown_to_html</target>
        </trans-unit>
        <trans-unit id="0706025b2bbcec1ed8d64822f4eccd96314938d0" translate="yes" xml:space="preserve">
          <source>max</source>
          <target state="translated">max</target>
        </trans-unit>
        <trans-unit id="14091a9f2461267ee7e02525b4f1f2923f1c9849" translate="yes" xml:space="preserve">
          <source>merge</source>
          <target state="translated">merge</target>
        </trans-unit>
        <trans-unit id="b6c935d4f3c7b220fa038613a1f9c1b56b255a86" translate="yes" xml:space="preserve">
          <source>min</source>
          <target state="translated">min</target>
        </trans-unit>
        <trans-unit id="6834c74997e8995bac010b6d8fa062688b176994" translate="yes" xml:space="preserve">
          <source>nl2br</source>
          <target state="translated">nl2br</target>
        </trans-unit>
        <trans-unit id="db85006aed50f7ba21c540a4033fd7451f321db5" translate="yes" xml:space="preserve">
          <source>non-empty array</source>
          <target state="translated">空でない配列</target>
        </trans-unit>
        <trans-unit id="2be88ca4242c76e8253ac62474851065032d6833" translate="yes" xml:space="preserve">
          <source>null</source>
          <target state="translated">null</target>
        </trans-unit>
        <trans-unit id="5dd136c52cf302163a05e7cafa3693a7179fe74b" translate="yes" xml:space="preserve">
          <source>number_format</source>
          <target state="translated">number_format</target>
        </trans-unit>
        <trans-unit id="6877adbecf3e276a79f96e540d9d0f418fc64532" translate="yes" xml:space="preserve">
          <source>numeric zero</source>
          <target state="translated">すうじゼロ</target>
        </trans-unit>
        <trans-unit id="1615307cc4523f183e777df67f168c86908e8007" translate="yes" xml:space="preserve">
          <source>object</source>
          <target state="translated">object</target>
        </trans-unit>
        <trans-unit id="60f7a51208a50e4639fc53af2d60b808f4429a1e" translate="yes" xml:space="preserve">
          <source>odd</source>
          <target state="translated">odd</target>
        </trans-unit>
        <trans-unit id="d8fd39d0bbdd2dcf322d8b11390a4c5825b11495" translate="yes" xml:space="preserve">
          <source>parent</source>
          <target state="translated">parent</target>
        </trans-unit>
        <trans-unit id="4397a54dc2413cd0815c38c0fe9f4b8d24715ce4" translate="yes" xml:space="preserve">
          <source>public function formatDateTime(Environment $env, $date, ?string $dateFormat = &amp;lsquo;medium&amp;rsquo;, ?string $timeFormat = &amp;lsquo;medium&amp;rsquo;, string $pattern = &amp;lsquo;&amp;rsquo;, $timezone = null, string $calendar = &amp;lsquo;gregorian&amp;rsquo;, string $locale = null): string</source>
          <target state="translated">public function formatDateTime（Environment $ env、$ date、？string $ dateFormat = 'medium'、？string $ timeFormat = 'medium'、string $ pattern = ''、$ timezone = null、string $ calendar = 'gregorian'、string $ locale = null）：文字列</target>
        </trans-unit>
        <trans-unit id="a415ab5cc17c8c093c015ccdb7e552aee7911aa4" translate="yes" xml:space="preserve">
          <source>random</source>
          <target state="translated">random</target>
        </trans-unit>
        <trans-unit id="4d55af37dbbb6a42088d917caa1ca25428ec42c9" translate="yes" xml:space="preserve">
          <source>range</source>
          <target state="translated">range</target>
        </trans-unit>
        <trans-unit id="d5e62fc1fc3b3a64ea4fc20d640432c8bd216663" translate="yes" xml:space="preserve">
          <source>rare</source>
          <target state="translated">rare</target>
        </trans-unit>
        <trans-unit id="ce15802a8c5e8e9db0ffaf10130ef265296e9ea4" translate="yes" xml:space="preserve">
          <source>raw</source>
          <target state="translated">raw</target>
        </trans-unit>
        <trans-unit id="48c3689f6dd5e9e952f925b7ebebf64d7c43fc56" translate="yes" xml:space="preserve">
          <source>reduce</source>
          <target state="translated">reduce</target>
        </trans-unit>
        <trans-unit id="3cacc7bfac0a382c669a884c953d0401a689785d" translate="yes" xml:space="preserve">
          <source>replace</source>
          <target state="translated">replace</target>
        </trans-unit>
        <trans-unit id="75470a3076d8da06e21a0f542f3a535af3f72e94" translate="yes" xml:space="preserve">
          <source>reverse</source>
          <target state="translated">reverse</target>
        </trans-unit>
        <trans-unit id="d27a1f11771200949714b1af99f048a416f5d6f4" translate="yes" xml:space="preserve">
          <source>right</source>
          <target state="translated">right</target>
        </trans-unit>
        <trans-unit id="f0590a6dd3663be108ff31f58d16b829a1284be6" translate="yes" xml:space="preserve">
          <source>round</source>
          <target state="translated">round</target>
        </trans-unit>
        <trans-unit id="ac3a5e8e42ecd5cec06569abf86321a3c130988b" translate="yes" xml:space="preserve">
          <source>same as</source>
          <target state="translated">と同じ</target>
        </trans-unit>
        <trans-unit id="7f73a2ab85efd2733199f6dfe4bc70aa0d8b69db" translate="yes" xml:space="preserve">
          <source>sameas</source>
          <target state="translated">sameas</target>
        </trans-unit>
        <trans-unit id="9ed037b84943c4caa3a520e48a5540181c46c98c" translate="yes" xml:space="preserve">
          <source>sandbox</source>
          <target state="translated">sandbox</target>
        </trans-unit>
        <trans-unit id="65c10dc3549fe07424148a8a4790a3341ecbc253" translate="yes" xml:space="preserve">
          <source>set</source>
          <target state="translated">set</target>
        </trans-unit>
        <trans-unit id="0f7d0d088b6ea936fb25b477722d734706fe8b40" translate="yes" xml:space="preserve">
          <source>simple</source>
          <target state="translated">simple</target>
        </trans-unit>
        <trans-unit id="0a5228e66df38e2f27ca61b901edf86f7ef97fb8" translate="yes" xml:space="preserve">
          <source>slice</source>
          <target state="translated">slice</target>
        </trans-unit>
        <trans-unit id="98c4b8f6e2d770a0f2b54233669d65ff6eddc472" translate="yes" xml:space="preserve">
          <source>sort</source>
          <target state="translated">sort</target>
        </trans-unit>
        <trans-unit id="828d338a9b04221c9cbe286f50cd389f68de4ecf" translate="yes" xml:space="preserve">
          <source>source</source>
          <target state="translated">source</target>
        </trans-unit>
        <trans-unit id="5ecd294ae7c5dfd951350294152cbf1e7e2c4bba" translate="yes" xml:space="preserve">
          <source>spaceless</source>
          <target state="translated">spaceless</target>
        </trans-unit>
        <trans-unit id="94d5cab6f5fe3422a447ab15436e7a672bc0c09a" translate="yes" xml:space="preserve">
          <source>split</source>
          <target state="translated">split</target>
        </trans-unit>
        <trans-unit id="1fa14e850fba8e8028bfa7aae314967903bfd25f" translate="yes" xml:space="preserve">
          <source>string &quot;0&quot; or '0'</source>
          <target state="translated">文字列「0」または「0」</target>
        </trans-unit>
        <trans-unit id="65256061c7ddc3d25b28e67bdaf74bcb3d4d7550" translate="yes" xml:space="preserve">
          <source>string &amp;ldquo;0&amp;rdquo; or &amp;lsquo;0&amp;rsquo;</source>
          <target state="translated">文字列「0」または「0」</target>
        </trans-unit>
        <trans-unit id="ab84ef96b894ad194b0eab95e2e28bd9f60a85ad" translate="yes" xml:space="preserve">
          <source>striptags</source>
          <target state="translated">striptags</target>
        </trans-unit>
        <trans-unit id="60bbb09c0cec106baf068ba77f089201972495a9" translate="yes" xml:space="preserve">
          <source>template_from_string</source>
          <target state="translated">template_from_string</target>
        </trans-unit>
        <trans-unit id="416ff1a8aedc587a4b907606f1cea21e81a3ec84" translate="yes" xml:space="preserve">
          <source>timezone_name</source>
          <target state="translated">timezone_name</target>
        </trans-unit>
        <trans-unit id="3c6de1b7dd91465d437ef415f94f36afc1fbc8a8" translate="yes" xml:space="preserve">
          <source>title</source>
          <target state="translated">title</target>
        </trans-unit>
        <trans-unit id="7ab4b0a80acc6ac1e45dd17da3810e3e8beb829e" translate="yes" xml:space="preserve">
          <source>trim</source>
          <target state="translated">trim</target>
        </trans-unit>
        <trans-unit id="f2fc8123700c95880a53d4a1576282f2ca68c4b0" translate="yes" xml:space="preserve">
          <source>trivial</source>
          <target state="translated">trivial</target>
        </trans-unit>
        <trans-unit id="5ffe533b830f08a0326348a9160afafc8ada44db" translate="yes" xml:space="preserve">
          <source>true</source>
          <target state="translated">true</target>
        </trans-unit>
        <trans-unit id="51e69892ab49df85c6230ccc57f8e1d1606caccc" translate="yes" xml:space="preserve">
          <source>u</source>
          <target state="translated">u</target>
        </trans-unit>
        <trans-unit id="c538c170bdc6b0f3bb98dce44a016a2e2d45a6e7" translate="yes" xml:space="preserve">
          <source>upper</source>
          <target state="translated">upper</target>
        </trans-unit>
        <trans-unit id="ca4ca6ff0749feaa735a423d62ba79cbfc879aa8" translate="yes" xml:space="preserve">
          <source>url_encode</source>
          <target state="translated">url_encode</target>
        </trans-unit>
        <trans-unit id="04489a12bbaa6aebffb61ed2f524424ba8e1147e" translate="yes" xml:space="preserve">
          <source>use</source>
          <target state="translated">use</target>
        </trans-unit>
        <trans-unit id="b46d0172433dd6895dac7544b9dacbb87b361e9f" translate="yes" xml:space="preserve">
          <source>variable</source>
          <target state="translated">variable</target>
        </trans-unit>
        <trans-unit id="03dbc04c745751f563cb64f734008bc0006b6c9f" translate="yes" xml:space="preserve">
          <source>variable, here is how you can do it:</source>
          <target state="translated">変数の場合は、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="d99a2118f45121587f2aa88f0bbe3e6a0222afec" translate="yes" xml:space="preserve">
          <source>verbatim</source>
          <target state="translated">verbatim</target>
        </trans-unit>
        <trans-unit id="9b3d9037b0bc87627042c509134a61cfec13c10a" translate="yes" xml:space="preserve">
          <source>whitespace-only string</source>
          <target state="translated">空白文字列</target>
        </trans-unit>
        <trans-unit id="a471d315045b2ea8fbb81be598ec9f27291d9d7d" translate="yes" xml:space="preserve">
          <source>will strip from either the left side or right side only</source>
          <target state="translated">は、左側または右側のどちらか一方からのみ剥がすことができます。</target>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="translated">with</target>
        </trans-unit>
        <trans-unit id="afbfa864d26d82e251db9ca353c23c11eb75a69a" translate="yes" xml:space="preserve">
          <source>with a style:</source>
          <target state="translated">スタイルで。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
