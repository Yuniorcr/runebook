<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="twig">
    <body>
      <group id="twig">
        <trans-unit id="d406fae92c1d4b9940e88adf8557b9a0aae8883e" translate="yes" xml:space="preserve">
          <source>$template</source>
          <target state="translated">$template</target>
        </trans-unit>
        <trans-unit id="4f7d8bf6e181bd173643fbeb0c2f944da0b5d81e" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2009&amp;ndash;2018 by the Twig Team</source>
          <target state="translated">&amp;copy;2009&amp;ndash;2018 Twigチーム</target>
        </trans-unit>
        <trans-unit id="29194482da30c2984a7b43f65ab141ad08108b2e" translate="yes" xml:space="preserve">
          <source>&amp;laquo; odd</source>
          <target state="translated">&amp;laquo;奇数</target>
        </trans-unit>
        <trans-unit id="46835bb757c07caedf30fa2b59650348ec06bcc7" translate="yes" xml:space="preserve">
          <source>) sides, but</source>
          <target state="translated">）側面、ただし</target>
        </trans-unit>
        <trans-unit id="8178170d557825e52786be3523f082cea011707e" translate="yes" xml:space="preserve">
          <source>0 decimal places.</source>
          <target state="translated">小数点以下0桁。</target>
        </trans-unit>
        <trans-unit id="667dd49d351b0633b5062095bea5c8ff275b5334" translate="yes" xml:space="preserve">
          <source>: &lt;code&gt;{{
data|json_encode(constant('JSON_PRETTY_PRINT') b-or constant('JSON_HEX_QUOT') }}&lt;/code&gt;)</source>
          <target state="translated">： &lt;code&gt;{{ data|json_encode(constant('JSON_PRETTY_PRINT') b-or constant('JSON_HEX_QUOT') }}&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e8ea619277a26491c58c78e5c784651812fe152b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../functions/block&quot;&gt;block&lt;/a&gt;, &lt;a href=&quot;../functions/parent&quot;&gt;parent&lt;/a&gt;, &lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;, &lt;a href=&quot;extends&quot;&gt;extends&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../functions/block&quot;&gt;ブロック&lt;/a&gt;、&lt;a href=&quot;../functions/parent&quot;&gt;親&lt;/a&gt;、&lt;a href=&quot;use&quot;&gt;使用&lt;/a&gt;、&lt;a href=&quot;extends&quot;&gt;拡張&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8b9a2b8bc0465adaf0a8864a48aa171b3843315" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../functions/block&quot;&gt;block&lt;/a&gt;, &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt;, &lt;a href=&quot;../functions/parent&quot;&gt;parent&lt;/a&gt;, &lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../functions/block&quot;&gt;block&lt;/a&gt;、&lt;a href=&quot;block&quot;&gt;block&lt;/a&gt;、&lt;a href=&quot;../functions/parent&quot;&gt;parent&lt;/a&gt;、&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a53739e5cee7025fa66ae27a433fa6f7d2048d8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tags/extends&quot;&gt;extends&lt;/a&gt;, &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt;, &lt;a href=&quot;../tags/block&quot;&gt;block&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../tags/extends&quot;&gt;extends&lt;/a&gt;、&lt;a href=&quot;block&quot;&gt;block&lt;/a&gt;、&lt;a href=&quot;../tags/block&quot;&gt;block&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a5e38d89ce7b3e929ad0bf70100d7eb996be73b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tags/extends&quot;&gt;extends&lt;/a&gt;, &lt;a href=&quot;parent&quot;&gt;parent&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../tags/extends&quot;&gt;拡張&lt;/a&gt;、&lt;a href=&quot;parent&quot;&gt;親&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2196055e831455bdb5de42125b82dee52c455f8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;abs&quot;&gt; &amp;laquo; abs &lt;/a&gt;|&lt;a href=&quot;capitalize&quot;&gt; capitalize &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;abs&quot;&gt;&amp;laquo;abs&lt;/a&gt; | &lt;a href=&quot;capitalize&quot;&gt;大文字にする&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e26db352ac4882be075ea44e19344fd93531b852" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;advanced&quot;&gt; &amp;laquo; Extending Twig &lt;/a&gt;|&lt;a href=&quot;https://twig.symfony.com/doc/3.x/deprecated.html&quot;&gt; Deprecated Features &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;advanced&quot;&gt;&amp;laquo;小枝を伸ばす&lt;/a&gt;| &lt;a href=&quot;https://twig.symfony.com/doc/3.x/deprecated.html&quot;&gt;非推奨の機能&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ab89f9233442b42d401bcbec1125780a3887e67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;advanced&quot;&gt; &amp;laquo; Extending Twig &lt;/a&gt;|&lt;a href=&quot;recipes&quot;&gt; Recipes &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;advanced&quot;&gt;&amp;laquo;Twigの拡張&lt;/a&gt; | &lt;a href=&quot;recipes&quot;&gt;レシピ&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07387ab8c02dd794e4acd73eb190d57fe260b8c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api&quot;&gt; &amp;laquo; Twig for Developers &lt;/a&gt;|&lt;a href=&quot;internals&quot;&gt; Twig Internals &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;api&quot;&gt;&amp;laquo;開発者向けのTwig&lt;/a&gt; | &lt;a href=&quot;internals&quot;&gt;小枝の内部&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c7ba60633d08a54385ef8d0ba6d7c2bef12d38d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apply&quot;&gt; &amp;laquo; apply &lt;/a&gt;|&lt;a href=&quot;block&quot;&gt; block &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;apply&quot;&gt;&amp;laquo;適用&lt;/a&gt;| &lt;a href=&quot;block&quot;&gt;ブロック&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97b8b61d8ea5e41f85d9aa72a758e00669f27f92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attribute&quot;&gt; &amp;laquo; attribute &lt;/a&gt;|&lt;a href=&quot;constant&quot;&gt; constant &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;attribute&quot;&gt;&amp;laquo;属性&lt;/a&gt; | &lt;a href=&quot;constant&quot;&gt;絶え間ない &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1043b13a92b7753c0d035d44fb27872675f48052" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;autoescape&quot;&gt; &amp;laquo; autoescape &lt;/a&gt;|&lt;a href=&quot;deprecated&quot;&gt; deprecated &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;autoescape&quot;&gt;&amp;laquo;自動エスケープ&lt;/a&gt;| &lt;a href=&quot;deprecated&quot;&gt;非推奨&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63c02699d3befd22357284af002e07b177a0f72f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;autoescape&quot;&gt; &amp;laquo; autoescape &lt;/a&gt;|&lt;a href=&quot;do&quot;&gt; do &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;autoescape&quot;&gt;&amp;laquo;自動エスケープ&lt;/a&gt; | &lt;a href=&quot;do&quot;&gt;行う &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="faef0be13c0c33d5d61b51e2efb74097e5fcb71f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;batch&quot;&gt; &amp;laquo; batch &lt;/a&gt;|&lt;a href=&quot;column&quot;&gt; column &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;batch&quot;&gt;&amp;laquo;バッチ&lt;/a&gt;| &lt;a href=&quot;column&quot;&gt;列&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48aad7b1c1cfd8113e1eafcd69152911345dc753" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;batch&quot;&gt; &amp;laquo; batch &lt;/a&gt;|&lt;a href=&quot;convert_encoding&quot;&gt; convert_encoding &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;batch&quot;&gt;&amp;laquo;バッチ&lt;/a&gt; | &lt;a href=&quot;convert_encoding&quot;&gt;convert_encoding&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6d48227387b105d00b030ae4cc5b402055d5d84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;block&quot;&gt; &amp;laquo; block &lt;/a&gt;|&lt;a href=&quot;cycle&quot;&gt; cycle &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;block&quot;&gt;&amp;laquo;ブロック&lt;/a&gt; | &lt;a href=&quot;cycle&quot;&gt;サイクル&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9bb40b8019b0f5a4fface6b487dd987288bfdd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;block&quot;&gt; &amp;laquo; block &lt;/a&gt;|&lt;a href=&quot;do&quot;&gt; do &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;block&quot;&gt;&amp;laquo;ブロック&lt;/a&gt;| &lt;a href=&quot;do&quot;&gt;行う &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93873d292b0f6f5f9eddaa89b081635db2e87c5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;block&quot;&gt; &amp;laquo; block &lt;/a&gt;|&lt;a href=&quot;embed&quot;&gt; embed &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;block&quot;&gt;&amp;laquo;ブロック&lt;/a&gt; | &lt;a href=&quot;embed&quot;&gt;埋め込む&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc0b86d810116861ecc4d078693e5d50013da285" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;capitalize&quot;&gt; &amp;laquo; capitalize &lt;/a&gt;|&lt;a href=&quot;convert_encoding&quot;&gt; convert_encoding &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;capitalize&quot;&gt;&amp;laquo;大文字&lt;/a&gt;| &lt;a href=&quot;convert_encoding&quot;&gt;convert_encoding&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfa1d30b3f2a2332eea6f924513fd5a5658bb8d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;capitalize&quot;&gt; &amp;laquo; capitalize &lt;/a&gt;|&lt;a href=&quot;date&quot;&gt; date &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;capitalize&quot;&gt;&amp;laquo;大文字にする&lt;/a&gt; | &lt;a href=&quot;date&quot;&gt;日付&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6eaf65c4165a9d7c69214e96c5ce8a47124fcfe6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;column&quot;&gt; &amp;laquo; column &lt;/a&gt;|&lt;a href=&quot;country_name&quot;&gt; country_name &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;column&quot;&gt;&amp;laquo;列&lt;/a&gt;| &lt;a href=&quot;country_name&quot;&gt;国の名前 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34853c0d594e778b8b422493478aae32dadf8d0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constant&quot;&gt; &amp;laquo; constant &lt;/a&gt;|&lt;a href=&quot;date&quot;&gt; date &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;constant&quot;&gt;&amp;laquo;定数&lt;/a&gt; | &lt;a href=&quot;date&quot;&gt;日付&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44cb9c77f9121e23464d6a65f90cef0dcf96807d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constant&quot;&gt; &amp;laquo; constant &lt;/a&gt;|&lt;a href=&quot;divisibleby&quot;&gt; divisible by &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;constant&quot;&gt;&amp;laquo;定数&lt;/a&gt; | &lt;a href=&quot;divisibleby&quot;&gt;&amp;raquo;で割り切れる&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1915c3d626fc0a44381f1c4f218e752fe5ebfa6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;convert_encoding&quot;&gt; &amp;laquo; convert_encoding &lt;/a&gt;|&lt;a href=&quot;currency_name&quot;&gt; currency_name &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;convert_encoding&quot;&gt;&amp;laquo;convert_encoding&lt;/a&gt; | &lt;a href=&quot;currency_name&quot;&gt;通貨名&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ce20b5c32ace9a7f151b0ceb54106603117de24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;convert_encoding&quot;&gt; &amp;laquo; convert_encoding &lt;/a&gt;|&lt;a href=&quot;date_modify&quot;&gt; date_modify &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;convert_encoding&quot;&gt;&amp;laquo;convert_encoding&lt;/a&gt; | &lt;a href=&quot;date_modify&quot;&gt;date_modify&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd8c3ddb72b6ccbe3a507d7428e7426936a996d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;country_name&quot;&gt; &amp;laquo; country_name &lt;/a&gt;|&lt;a href=&quot;currency_symbol&quot;&gt; currency_symbol &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;country_name&quot;&gt;&amp;laquo;country_name&lt;/a&gt; | &lt;a href=&quot;currency_symbol&quot;&gt;通貨記号&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e4467c5f23871bcad90be0196a1e968d365c37a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;country_timezones&quot;&gt; &amp;laquo; country_timezones &lt;/a&gt;|&lt;a href=&quot;../tests/index&quot;&gt; Tests &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;country_timezones&quot;&gt;&amp;laquo;country_timezones&lt;/a&gt; | &lt;a href=&quot;../tests/index&quot;&gt;テスト&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab27bed2086cf2eb6635ff08f004cecb8d75920c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;currency_name&quot;&gt; &amp;laquo; currency_name &lt;/a&gt;|&lt;a href=&quot;data_uri&quot;&gt; data_uri &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;currency_name&quot;&gt; &amp;laquo; currency_name &lt;/a&gt;|&lt;a href=&quot;data_uri&quot;&gt; data_uri &amp;raquo; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46b3d86cbd69b16504cd106b97787122986fbc5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;currency_symbol&quot;&gt; &amp;laquo; currency_symbol &lt;/a&gt;|&lt;a href=&quot;date&quot;&gt; date &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;currency_symbol&quot;&gt;&amp;laquo;currency_symbol&lt;/a&gt; | &lt;a href=&quot;date&quot;&gt;日付&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b547841eee856cabbc16d4ecca64b4db0eccc02b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cycle&quot;&gt; &amp;laquo; cycle &lt;/a&gt;|&lt;a href=&quot;dump&quot;&gt; dump &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;cycle&quot;&gt;&amp;laquo;サイクル&lt;/a&gt; | &lt;a href=&quot;dump&quot;&gt;投げ捨てる &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="faa043983ecf0cc903e3afc454cb138b48b6e955" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;data_uri&quot;&gt; &amp;laquo; data_uri &lt;/a&gt;|&lt;a href=&quot;date_modify&quot;&gt; date_modify &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data_uri&quot;&gt; &amp;laquo; data_uri &lt;/a&gt;|&lt;a href=&quot;date_modify&quot;&gt; date_modify &amp;raquo; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2dc0fb3e7ff462fc922a6a77a24c155280533409" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date&quot;&gt; &amp;laquo; date &lt;/a&gt;|&lt;a href=&quot;default&quot;&gt; default &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;date&quot;&gt;&amp;laquo;日付&lt;/a&gt; | &lt;a href=&quot;default&quot;&gt;デフォルト &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="358a09ae85d98ecc3dae4ba3a8af014939fa3566" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date&quot;&gt; &amp;laquo; date &lt;/a&gt;|&lt;a href=&quot;html_classes&quot;&gt; html_classes &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;date&quot;&gt;&amp;laquo;日付&lt;/a&gt;| &lt;a href=&quot;html_classes&quot;&gt;html_classes&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c57cb592ef5db5006924bc0a67ba1157b7eb64fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date&quot;&gt; &amp;laquo; date &lt;/a&gt;|&lt;a href=&quot;include&quot;&gt; include &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;date&quot;&gt;&amp;laquo;日付&lt;/a&gt; | &lt;a href=&quot;include&quot;&gt;含む&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c6ff317f14b3b103f0cf8f35aa407de9da5cf42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date_modify&quot;&gt; &amp;laquo; date_modify &lt;/a&gt;|&lt;a href=&quot;escape&quot;&gt; escape &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;date_modify&quot;&gt;&amp;laquo;date_modify&lt;/a&gt; | &lt;a href=&quot;escape&quot;&gt;逃れる &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a982cfda82ef57359b6f0b61a8f26cc2fbcd799" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;default&quot;&gt; &amp;laquo; default &lt;/a&gt;|&lt;a href=&quot;filter&quot;&gt; filter &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;default&quot;&gt;&amp;laquo;デフォルト&lt;/a&gt;| &lt;a href=&quot;filter&quot;&gt;フィルタ&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d008ef9bcb1bad643f6c1e9cb4e9ffbf1a10fad5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;default&quot;&gt; &amp;laquo; default &lt;/a&gt;|&lt;a href=&quot;first&quot;&gt; first &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;default&quot;&gt;&amp;laquo;デフォルト&lt;/a&gt; | &lt;a href=&quot;first&quot;&gt;最初 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24029a7469a584d78529ae81ff78bfd254700c19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;defined&quot;&gt; &amp;laquo; defined &lt;/a&gt;|&lt;a href=&quot;empty&quot;&gt; empty &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;defined&quot;&gt;&amp;laquo;定義済み&lt;/a&gt; | &lt;a href=&quot;empty&quot;&gt;空の &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bcc933313afad5c368713f339675cab9900e225" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;deprecated&quot;&gt; &amp;laquo; deprecated &lt;/a&gt;|&lt;a href=&quot;embed&quot;&gt; embed &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;deprecated&quot;&gt;&amp;laquo;非推奨&lt;/a&gt;| &lt;a href=&quot;embed&quot;&gt;埋め込み&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d319c860e2a9ab3f1e2814a902a02d3e78d477c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;divisibleby&quot;&gt; &amp;laquo; divisible by &lt;/a&gt;|&lt;a href=&quot;even&quot;&gt; even &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;divisibleby&quot;&gt;&amp;laquo;分割可能&lt;/a&gt; | &lt;a href=&quot;even&quot;&gt;でも&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ca95e7dca88a716f6524ef27db9696d8a5171d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;do&quot;&gt; &amp;laquo; do &lt;/a&gt;|&lt;a href=&quot;extends&quot;&gt; extends &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;do&quot;&gt;&amp;laquo;する&lt;/a&gt; | &lt;a href=&quot;extends&quot;&gt;拡張&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3930e4d4f2f406fc87b28b8fab1e6e9fadd2ce3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dump&quot;&gt; &amp;laquo; dump &lt;/a&gt;|&lt;a href=&quot;include&quot;&gt; include &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;dump&quot;&gt;&amp;laquo;ダンプ&lt;/a&gt;| &lt;a href=&quot;include&quot;&gt;含める&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d9b26b39b8f0eae6a6a31c4ccf526c04ebe31ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dump&quot;&gt; &amp;laquo; dump &lt;/a&gt;|&lt;a href=&quot;max&quot;&gt; max &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;dump&quot;&gt;&amp;laquo;ダンプ&lt;/a&gt; | &lt;a href=&quot;max&quot;&gt;最大&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b74aaac88f872e72b422cab89afab6a9f40f079" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;embed&quot;&gt; &amp;laquo; embed &lt;/a&gt;|&lt;a href=&quot;filter&quot;&gt; filter &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;embed&quot;&gt;&amp;laquo;埋め込み&lt;/a&gt; | &lt;a href=&quot;filter&quot;&gt;フィルター&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="817bd0e713b67f0706c582545803d63c64d2fc57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;embed&quot;&gt; &amp;laquo; embed &lt;/a&gt;|&lt;a href=&quot;flush&quot;&gt; flush &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;embed&quot;&gt;&amp;laquo;埋め込み&lt;/a&gt;| &lt;a href=&quot;flush&quot;&gt;流す &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e261747a0edf819e20be37af0eda34d23f3ffea3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;empty&quot;&gt; &amp;laquo; empty &lt;/a&gt;|&lt;a href=&quot;iterable&quot;&gt; iterable &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;empty&quot;&gt;&amp;laquo;空&lt;/a&gt; | &lt;a href=&quot;iterable&quot;&gt;反復可能&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf33260436cd82388e526b1b6268781e91f521b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;escape&quot;&gt; &amp;laquo; escape &lt;/a&gt;|&lt;a href=&quot;first&quot;&gt; first &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;escape&quot;&gt;&amp;laquo;エスケープ&lt;/a&gt;| &lt;a href=&quot;first&quot;&gt;最初 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="703b7f99a391bb7361397a85f21666a7dd879393" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;escape&quot;&gt; &amp;laquo; escape &lt;/a&gt;|&lt;a href=&quot;format&quot;&gt; format &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;escape&quot;&gt;&amp;laquo;エスケープ&lt;/a&gt; | &lt;a href=&quot;format&quot;&gt;フォーマット &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0305bff5644f060da5eb6c106486320f4dd9c68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;even&quot;&gt; &amp;laquo; even &lt;/a&gt;|&lt;a href=&quot;null&quot;&gt; null &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;even&quot;&gt;&amp;laquo;も&lt;/a&gt; | &lt;a href=&quot;null&quot;&gt;ヌル &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08840c9c6b4e10f567da756e357cb582f6094d34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;extends&quot;&gt; &amp;laquo; extends &lt;/a&gt;|&lt;a href=&quot;flush&quot;&gt; flush &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;extends&quot;&gt;&amp;laquo;拡張する&lt;/a&gt; | &lt;a href=&quot;flush&quot;&gt;流す &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28b6795c016bc9095d0b753cb4a115c4babcaf35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;extends&quot;&gt; &amp;laquo; extends &lt;/a&gt;|&lt;a href=&quot;for&quot;&gt; for &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;extends&quot;&gt;&amp;laquo;拡張&lt;/a&gt;| &lt;a href=&quot;for&quot;&gt;ために &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8040a7ef5e42567d92deaed919a0e6a740c10fe5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filter&quot;&gt; &amp;laquo; filter &lt;/a&gt;|&lt;a href=&quot;for&quot;&gt; for &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;filter&quot;&gt;&amp;laquo;フィルター&lt;/a&gt; | &lt;a href=&quot;for&quot;&gt;ために &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d1223a52b74c50dc4febaa31a84ec39e4577744" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filter&quot;&gt; &amp;laquo; filter &lt;/a&gt;|&lt;a href=&quot;format&quot;&gt; format &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;filter&quot;&gt;&amp;laquo;フィルター&lt;/a&gt;| &lt;a href=&quot;format&quot;&gt;フォーマット &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93f588b10d5c9bb280fb8edf2ab8315a7760df01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filters/index&quot;&gt;Filters&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;filters/index&quot;&gt;Filters&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="a40ee25d257e78f219b5bed221529abb85b493e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;first&quot;&gt; &amp;laquo; first &lt;/a&gt;|&lt;a href=&quot;format_currency&quot;&gt; format_currency &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;first&quot;&gt;&amp;laquo;最初&lt;/a&gt;| &lt;a href=&quot;format_currency&quot;&gt;format_currency&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4667a78915e1374b2bb97c98e345897b4ba8debd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;first&quot;&gt; &amp;laquo; first &lt;/a&gt;|&lt;a href=&quot;join&quot;&gt; join &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;first&quot;&gt;&amp;laquo;最初&lt;/a&gt; | &lt;a href=&quot;join&quot;&gt;参加&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c5f8a75fd3d8a19df85a114bf680f36970581a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;flush&quot;&gt; &amp;laquo; flush &lt;/a&gt;|&lt;a href=&quot;from&quot;&gt; from &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;flush&quot;&gt;&amp;laquo;フラッシュ&lt;/a&gt; | &lt;a href=&quot;from&quot;&gt;から&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="517d7a848117bd9bcc400e49bfbc4005c0fc8973" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;for&quot;&gt; &amp;laquo; for &lt;/a&gt;|&lt;a href=&quot;if&quot;&gt; if &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;for&quot;&gt;&amp;laquo;の&lt;/a&gt; | &lt;a href=&quot;if&quot;&gt;もし&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a979716e75317cc0babfcf2fac11cfe7c7ce43e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;format&quot;&gt; &amp;laquo; format &lt;/a&gt;|&lt;a href=&quot;format_date&quot;&gt; format_date &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;format&quot;&gt;&amp;laquo;フォーマット&lt;/a&gt;| &lt;a href=&quot;format_date&quot;&gt;format_date&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0eb9fc8d4fc1ce7eee7847e1f2521579cbff7f6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;format&quot;&gt; &amp;laquo; format &lt;/a&gt;|&lt;a href=&quot;json_encode&quot;&gt; json_encode &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;format&quot;&gt;&amp;laquo;フォーマット&lt;/a&gt; | &lt;a href=&quot;json_encode&quot;&gt;json_encode&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8fbfee717eaf7ff9b32a9a07841b82e2f1246cc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;format_currency&quot;&gt; &amp;laquo; format_currency &lt;/a&gt;|&lt;a href=&quot;format_datetime&quot;&gt; format_datetime &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;format_currency&quot;&gt; &amp;laquo; format_currency &lt;/a&gt;|&lt;a href=&quot;format_datetime&quot;&gt; format_datetime &amp;raquo; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1cf1b3cefc69e4090d43eee11a29d102d9fef20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;format_date&quot;&gt; &amp;laquo; format_date &lt;/a&gt;|&lt;a href=&quot;format_number&quot;&gt; format_number &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;format_date&quot;&gt; &amp;laquo; format_date &lt;/a&gt;|&lt;a href=&quot;format_number&quot;&gt; format_number &amp;raquo; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf7eb01babb5a6ace35f5bacc42ac49c979fe8aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;format_datetime&quot;&gt; &amp;laquo; format_datetime &lt;/a&gt;|&lt;a href=&quot;format_time&quot;&gt; format_time &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;format_datetime&quot;&gt; &amp;laquo; format_datetime &lt;/a&gt;|&lt;a href=&quot;format_time&quot;&gt; format_time &amp;raquo; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6631a7696f1446a0ae271d197214df4181f2add" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;format_number&quot;&gt; &amp;laquo; format_number &lt;/a&gt;|&lt;a href=&quot;html_to_markdown&quot;&gt; html_to_markdown &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;format_number&quot;&gt; &amp;laquo; format_number &lt;/a&gt;|&lt;a href=&quot;html_to_markdown&quot;&gt; html_to_markdown &amp;raquo; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0d59bcb929f98cebc567074ceebe12dcac84aae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;format_time&quot;&gt; &amp;laquo; format_time &lt;/a&gt;|&lt;a href=&quot;inline_css&quot;&gt; inline_css &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;format_time&quot;&gt; &amp;laquo; format_time &lt;/a&gt;|&lt;a href=&quot;inline_css&quot;&gt; inline_css &amp;raquo; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39ede6c75905fce3b5b7b963f26a10bdeec89d10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;from&quot;&gt; &amp;laquo; from &lt;/a&gt;|&lt;a href=&quot;import&quot;&gt; import &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;from&quot;&gt;&amp;laquo;から&lt;/a&gt; | &lt;a href=&quot;import&quot;&gt;インポート&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23443e2efe45712146937b8a58cc32102f871889" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;from&quot;&gt;from&lt;/a&gt;, &lt;a href=&quot;import&quot;&gt;import&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;from&quot;&gt;から&lt;/a&gt;、&lt;a href=&quot;import&quot;&gt;インポート&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="32a397ccf3f3175bfedfd1ec550aa812a0385663" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;functions/index&quot;&gt;Functions&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;functions/index&quot;&gt;Functions&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="90603259c507f6842d8765ce64d5e4042ae7bd80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;html_classes&quot;&gt; &amp;laquo; html_classes &lt;/a&gt;|&lt;a href=&quot;max&quot;&gt; max &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;html_classes&quot;&gt;&amp;laquo;html_classes&lt;/a&gt; | &lt;a href=&quot;max&quot;&gt;最大&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf3b08633fcf5b17fbf0a9c1f12a91212b43972b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;html_to_markdown&quot;&gt; &amp;laquo; html_to_markdown &lt;/a&gt;|&lt;a href=&quot;inky_to_html&quot;&gt; inky_to_html &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;html_to_markdown&quot;&gt; &amp;laquo; html_to_markdown &lt;/a&gt;|&lt;a href=&quot;inky_to_html&quot;&gt; inky_to_html &amp;raquo; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46dd615ef0490556521cd38cc3c93d9ff730a738" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://twig.symfony.com/doc/3.x/deprecated.html&quot;&gt; &amp;laquo; Deprecated Features &lt;/a&gt;|&lt;a href=&quot;coding_standards&quot;&gt; Coding Standards &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://twig.symfony.com/doc/3.x/deprecated.html&quot;&gt;&amp;laquo;非推奨の機能&lt;/a&gt;| &lt;a href=&quot;coding_standards&quot;&gt;コーディング標準&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33fff9e6477ef103248c8f4e20bdc2ff4dc82aef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;if&quot;&gt; &amp;laquo; if &lt;/a&gt;|&lt;a href=&quot;include&quot;&gt; include &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;if&quot;&gt;&amp;laquo;の場合&lt;/a&gt; | &lt;a href=&quot;include&quot;&gt;含む&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc91615238c252ee9aa2454af61c2fed69c0cecb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;import&quot;&gt; &amp;laquo; import &lt;/a&gt;|&lt;a href=&quot;macro&quot;&gt; macro &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;import&quot;&gt;&amp;laquo;インポート&lt;/a&gt; | &lt;a href=&quot;macro&quot;&gt;大きい &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1be3b495966e94e350f9255aeeb09c6a8c0cd062" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;include&quot;&gt; &amp;laquo; include &lt;/a&gt;|&lt;a href=&quot;min&quot;&gt; min &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;include&quot;&gt;&amp;laquo;含める&lt;/a&gt; | &lt;a href=&quot;min&quot;&gt;最小&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61c8b8b5a901ed68cb5e3c81e4803cda93d66383" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;include&quot;&gt; &amp;laquo; include &lt;/a&gt;|&lt;a href=&quot;sandbox&quot;&gt; sandbox &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;include&quot;&gt;&amp;laquo;含める&lt;/a&gt; | &lt;a href=&quot;sandbox&quot;&gt;サンドボックス&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29c61d5eb8de3d48d8eefaf393b647f4b9ee78e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;index&quot;&gt; &amp;laquo; Filters &lt;/a&gt;|&lt;a href=&quot;batch&quot;&gt; batch &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;&amp;laquo;フィルター&lt;/a&gt; | &lt;a href=&quot;batch&quot;&gt;バッチ &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8688863e41ad997c6bccb8d262ce29e71c7a0e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;index&quot;&gt; &amp;laquo; Functions &lt;/a&gt;|&lt;a href=&quot;block&quot;&gt; block &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;&amp;laquo;関数&lt;/a&gt; | &lt;a href=&quot;block&quot;&gt;ブロック&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20a1cf316fa6073a1ad90fefe99431abe3bc578e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;index&quot;&gt; &amp;laquo; Tags &lt;/a&gt;|&lt;a href=&quot;autoescape&quot;&gt; autoescape &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;&amp;laquo;タグ&lt;/a&gt;| &lt;a href=&quot;autoescape&quot;&gt;自動エスケープ&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7686baab9e452a0b7ee3dc21dd6f9eae01ca5fd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;index&quot;&gt; &amp;laquo; Tags &lt;/a&gt;|&lt;a href=&quot;block&quot;&gt; block &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;&amp;laquo;タグ&lt;/a&gt; | &lt;a href=&quot;block&quot;&gt;ブロック&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ac5a2a98109a4fa0e136913916c2013a92b6d45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;index&quot;&gt; &amp;laquo; Tests &lt;/a&gt;|&lt;a href=&quot;defined&quot;&gt; defined &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;&amp;laquo;テスト&lt;/a&gt; | &lt;a href=&quot;defined&quot;&gt;定義済み&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="deee586ed0bf723843887e34adb9bbd7dd49cd51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;index&quot;&gt; &amp;laquo; Twig &lt;/a&gt;|&lt;a href=&quot;installation&quot;&gt; Installation &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;&amp;laquo;小枝&lt;/a&gt; | &lt;a href=&quot;installation&quot;&gt;インストール&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67c0f60cb86269201c39dba9792369bc5565e5a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;inky_to_html&quot;&gt; &amp;laquo; inky_to_html &lt;/a&gt;|&lt;a href=&quot;json_encode&quot;&gt; json_encode &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;inky_to_html&quot;&gt; &amp;laquo; inky_to_html &lt;/a&gt;|&lt;a href=&quot;json_encode&quot;&gt; json_encode &amp;raquo; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="980f9cfacc984376c75be92c3b37f9593e04cca7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;inline_css&quot;&gt; &amp;laquo; inline_css &lt;/a&gt;|&lt;a href=&quot;join&quot;&gt; join &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;inline_css&quot;&gt;&amp;laquo;inline_css&lt;/a&gt; | &lt;a href=&quot;join&quot;&gt;参加&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="725eee06b01eca5fd0bb57281361bb346d24b945" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;installation&quot;&gt; &amp;laquo; Installation &lt;/a&gt;|&lt;a href=&quot;api&quot;&gt; Twig for Developers &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;installation&quot;&gt;&amp;laquo;インストール&lt;/a&gt; | &lt;a href=&quot;api&quot;&gt;開発者向けTwig&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebb803509ba975e1a7f2c7414a3019ac8ca2d4e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internals&quot;&gt; &amp;laquo; Twig Internals &lt;/a&gt;|&lt;a href=&quot;coding_standards&quot;&gt; Coding Standards &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;internals&quot;&gt;&amp;laquo;Twigの内部&lt;/a&gt; | &lt;a href=&quot;coding_standards&quot;&gt;コーディング基準&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c8ec96b96fd59d0dfdf80692234d73e9296c686" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;intro&quot;&gt; &amp;laquo; Introduction &lt;/a&gt;|&lt;a href=&quot;templates&quot;&gt; Twig for Template Designers &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;intro&quot;&gt;&amp;laquo;はじめに&lt;/a&gt; | &lt;a href=&quot;templates&quot;&gt;テンプレートデザイナーのためのTwig&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7a77a60ee7a72e0b3d9363f63d395362dfd317d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iterable&quot;&gt; &amp;laquo; iterable &lt;/a&gt;|&lt;a href=&quot;odd&quot;&gt; odd &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;iterable&quot;&gt;&amp;laquo;反復可能&lt;/a&gt; | &lt;a href=&quot;odd&quot;&gt;奇数&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9c691d6d9bb157fa724dc7d8251c6127fba5c2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;join&quot;&gt; &amp;laquo; join &lt;/a&gt;|&lt;a href=&quot;keys&quot;&gt; keys &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;join&quot;&gt;&amp;laquo;参加&lt;/a&gt; | &lt;a href=&quot;keys&quot;&gt;キー&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7af53135db0bfe3f1c1af78bd759ef14dbb6090e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;json_encode&quot;&gt; &amp;laquo; json_encode &lt;/a&gt;|&lt;a href=&quot;language_name&quot;&gt; language_name &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;json_encode&quot;&gt; &amp;laquo; json_encode &lt;/a&gt;|&lt;a href=&quot;language_name&quot;&gt; language_name &amp;raquo; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="607a06da59cfad58dd8d5c4afade5497a10fbfc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;json_encode&quot;&gt; &amp;laquo; json_encode &lt;/a&gt;|&lt;a href=&quot;last&quot;&gt; last &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;json_encode&quot;&gt;&amp;laquo;json_encode&lt;/a&gt; | &lt;a href=&quot;last&quot;&gt;最後&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be267f48b38211e376bff00e002b4cf99b5bdf8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;keys&quot;&gt; &amp;laquo; keys &lt;/a&gt;|&lt;a href=&quot;last&quot;&gt; last &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;keys&quot;&gt;&amp;laquo;キー&lt;/a&gt;| &lt;a href=&quot;last&quot;&gt;最後&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f8d44f0eaaf0359ee83098044e2eeae1cb0d599" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;keys&quot;&gt; &amp;laquo; keys &lt;/a&gt;|&lt;a href=&quot;length&quot;&gt; length &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;keys&quot;&gt;&amp;laquo;キー&lt;/a&gt; | &lt;a href=&quot;length&quot;&gt;長さ&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bd39d212220b15d1e030acf453c44e2dacf82aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;language_name&quot;&gt; &amp;laquo; language_name &lt;/a&gt;|&lt;a href=&quot;length&quot;&gt; length &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;language_name&quot;&gt;&amp;laquo;language_name&lt;/a&gt; | &lt;a href=&quot;length&quot;&gt;長さ&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c902d8580decde22cad9cee96c97a8df8e5b238" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;last&quot;&gt; &amp;laquo; last &lt;/a&gt;|&lt;a href=&quot;locale_name&quot;&gt; locale_name &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;last&quot;&gt;&amp;laquo;最後&lt;/a&gt;| &lt;a href=&quot;locale_name&quot;&gt;locale_name&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87bc64ed7b9ae093621e5f1cc14409fdadb74a87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;last&quot;&gt; &amp;laquo; last &lt;/a&gt;|&lt;a href=&quot;lower&quot;&gt; lower &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;last&quot;&gt;&amp;laquo;最後&lt;/a&gt; | &lt;a href=&quot;lower&quot;&gt;下&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a01630d00508cd03b3e19704eab188bcd6d00c0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;length&quot;&gt; &amp;laquo; length &lt;/a&gt;|&lt;a href=&quot;lower&quot;&gt; lower &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;length&quot;&gt;&amp;laquo;長さ&lt;/a&gt;| &lt;a href=&quot;lower&quot;&gt;下&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dfcab2dfc144803b37c2806ed8c24edbce30ccfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;length&quot;&gt; &amp;laquo; length &lt;/a&gt;|&lt;a href=&quot;merge&quot;&gt; merge &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;length&quot;&gt;&amp;laquo;長さ&lt;/a&gt; | &lt;a href=&quot;merge&quot;&gt;マージ&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8edcc32c54b2afdd058cb3ca5396b242a3f41330" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;locale_name&quot;&gt; &amp;laquo; locale_name &lt;/a&gt;|&lt;a href=&quot;map&quot;&gt; map &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;locale_name&quot;&gt;&amp;laquo;locale_name&lt;/a&gt; | &lt;a href=&quot;map&quot;&gt;地図&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23590e34f6ec3bdf68389c91642710649aff66df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lower&quot;&gt; &amp;laquo; lower &lt;/a&gt;|&lt;a href=&quot;markdown_to_html&quot;&gt; markdown_to_html &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;lower&quot;&gt;&amp;laquo;下&lt;/a&gt;| &lt;a href=&quot;markdown_to_html&quot;&gt;markdown_to_html&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33c4e9d6cd845480d8c6cb277559f7b25cd7bbe2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lower&quot;&gt; &amp;laquo; lower &lt;/a&gt;|&lt;a href=&quot;nl2br&quot;&gt; nl2br &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;lower&quot;&gt;&amp;laquo;下&lt;/a&gt; | &lt;a href=&quot;nl2br&quot;&gt;nl2br&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="561a9cf04bbf578a516f0572c428e9175e30500d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;macro&quot;&gt; &amp;laquo; macro &lt;/a&gt;|&lt;a href=&quot;set&quot;&gt; set &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;macro&quot;&gt;&amp;laquo;マクロ&lt;/a&gt; | &lt;a href=&quot;set&quot;&gt;セットする &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f7c5699a484a0db1029b8b81146361aae25fc3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;macro&quot;&gt;macro&lt;/a&gt;, &lt;a href=&quot;from&quot;&gt;from&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;macro&quot;&gt;マクロ&lt;/a&gt;、&lt;a href=&quot;from&quot;&gt;から&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f98962c1a8976f8dbc3e24cf3b59217731f69aa9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;macro&quot;&gt;macro&lt;/a&gt;, &lt;a href=&quot;import&quot;&gt;import&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;macro&quot;&gt;マクロ&lt;/a&gt;、&lt;a href=&quot;import&quot;&gt;インポート&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8c76f13e7d142e2679bb49f887f6446d4bb7e86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;map&quot;&gt; &amp;laquo; map &lt;/a&gt;|&lt;a href=&quot;merge&quot;&gt; merge &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;map&quot;&gt;&amp;laquo;地図&lt;/a&gt;| &lt;a href=&quot;merge&quot;&gt;マージ&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f74026241caaff7b8742c45f11ebcae4088d17a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;markdown_to_html&quot;&gt; &amp;laquo; markdown_to_html &lt;/a&gt;|&lt;a href=&quot;nl2br&quot;&gt; nl2br &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;markdown_to_html&quot;&gt; &amp;laquo; markdown_to_html &lt;/a&gt;|&lt;a href=&quot;nl2br&quot;&gt; nl2br &amp;raquo; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7550c442b9420153d4791bcd4a8dfcad93955e60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;max&quot;&gt; &amp;laquo; max &lt;/a&gt;|&lt;a href=&quot;parent&quot;&gt; parent &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;max&quot;&gt;&amp;laquo;最大&lt;/a&gt; | &lt;a href=&quot;parent&quot;&gt;親&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1f4fb23821f46238459e6e2b7a3453326edbdbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;merge&quot;&gt; &amp;laquo; merge &lt;/a&gt;|&lt;a href=&quot;number_format&quot;&gt; number_format &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;merge&quot;&gt;&amp;laquo;マージ&lt;/a&gt; | &lt;a href=&quot;number_format&quot;&gt;number_format&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1991a51a3124c551e867c95b465c1fbcfa7065c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;min&quot;&gt; &amp;laquo; min &lt;/a&gt;|&lt;a href=&quot;random&quot;&gt; random &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;min&quot;&gt;&amp;laquo;分&lt;/a&gt; | &lt;a href=&quot;random&quot;&gt;ランダム&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2d86eeaaa9088130ff6b2c007d72553674c1a41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;nl2br&quot;&gt; &amp;laquo; nl2br &lt;/a&gt;|&lt;a href=&quot;raw&quot;&gt; raw &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;nl2br&quot;&gt;&amp;laquo;nl2br&lt;/a&gt; | &lt;a href=&quot;raw&quot;&gt;生 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ebc14301946cf2ea7ba9461fdf0f74c02ea9378" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;null&quot;&gt; &amp;laquo; null &lt;/a&gt;|&lt;a href=&quot;sameas&quot;&gt; same as &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;null&quot;&gt;&amp;laquo;null&lt;/a&gt; | &lt;a href=&quot;sameas&quot;&gt;と同じ &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4129d2cca47f6e1bebe5d131450701275d601cbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;number_format&quot;&gt; &amp;laquo; number_format &lt;/a&gt;|&lt;a href=&quot;reduce&quot;&gt; reduce &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;number_format&quot;&gt;&amp;laquo;number_format&lt;/a&gt; | &lt;a href=&quot;reduce&quot;&gt;減らす&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8892cb18569a9ad1d3f77b8d193af5f47849e26b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;number_format&quot;&gt; &amp;laquo; number_format &lt;/a&gt;|&lt;a href=&quot;replace&quot;&gt; replace &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;number_format&quot;&gt;&amp;laquo;number_format&lt;/a&gt; | &lt;a href=&quot;replace&quot;&gt;交換&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="819f486fb3335c2fc9b46d664299821e5fd9359e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parent&quot;&gt; &amp;laquo; parent &lt;/a&gt;|&lt;a href=&quot;range&quot;&gt; range &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;parent&quot;&gt;&amp;laquo;親&lt;/a&gt; | &lt;a href=&quot;range&quot;&gt;範囲 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36b86310270c429231ea67387c2ffbfe0b2c31e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;random&quot;&gt; &amp;laquo; random &lt;/a&gt;|&lt;a href=&quot;source&quot;&gt; source &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;random&quot;&gt;&amp;laquo;ランダム&lt;/a&gt; | &lt;a href=&quot;source&quot;&gt;ソース&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eedd7ec3be9d1d926f04defa298dc398a532e534" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;range&quot;&gt; &amp;laquo; range &lt;/a&gt;|&lt;a href=&quot;country_timezones&quot;&gt; country_timezones &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;range&quot;&gt;&amp;laquo;範囲&lt;/a&gt;| &lt;a href=&quot;country_timezones&quot;&gt;country_timezones&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ab7dbde3653751026d8d7e4a84a03e09d65c43e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;range&quot;&gt; &amp;laquo; range &lt;/a&gt;|&lt;a href=&quot;template_from_string&quot;&gt; template_from_string &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;range&quot;&gt;&amp;laquo;範囲&lt;/a&gt; | &lt;a href=&quot;template_from_string&quot;&gt;template_from_string&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d07e2c9a3b9498ae2000fc4241cbdca68276a1ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;raw&quot;&gt; &amp;laquo; raw &lt;/a&gt;|&lt;a href=&quot;replace&quot;&gt; replace &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;raw&quot;&gt;&amp;laquo;生&lt;/a&gt;| &lt;a href=&quot;replace&quot;&gt;交換&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88c402254032519e354f6e6f5938583ec1862c10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;raw&quot;&gt; &amp;laquo; raw &lt;/a&gt;|&lt;a href=&quot;reverse&quot;&gt; reverse &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;raw&quot;&gt;&amp;laquo;生&lt;/a&gt; | &lt;a href=&quot;reverse&quot;&gt;逆行する &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7908e7407e7c8fedd935bd4c22d850cfb43d263" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recipes&quot;&gt; &amp;laquo; Recipes &lt;/a&gt;|&lt;a href=&quot;tags/index&quot;&gt; Tags &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;recipes&quot;&gt;&amp;laquo;レシピ&lt;/a&gt; | &lt;a href=&quot;tags/index&quot;&gt;タグ&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13f6e6446e0ec7c21c18dbd5fb0a4eeb1da5d435" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reduce&quot;&gt; &amp;laquo; reduce &lt;/a&gt;|&lt;a href=&quot;reverse&quot;&gt; reverse &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;reduce&quot;&gt;&amp;laquo;削減&lt;/a&gt;| &lt;a href=&quot;reverse&quot;&gt;逆行する &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="482b30f2e72cc6220bc976f066380002f6a7ca63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;replace&quot;&gt; &amp;laquo; replace &lt;/a&gt;|&lt;a href=&quot;round&quot;&gt; round &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;replace&quot;&gt;&amp;laquo;置換&lt;/a&gt; | &lt;a href=&quot;round&quot;&gt;円形 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea63a5183106883042f03ce3060be09519915d0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reverse&quot;&gt; &amp;laquo; reverse &lt;/a&gt;|&lt;a href=&quot;slice&quot;&gt; slice &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;reverse&quot;&gt;&amp;laquo;逆&lt;/a&gt; | &lt;a href=&quot;slice&quot;&gt;スライス &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17e10e4c99c240ad2423a6bcff8d1efeb4e51f6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;round&quot;&gt; &amp;laquo; round &lt;/a&gt;|&lt;a href=&quot;sort&quot;&gt; sort &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;round&quot;&gt;&amp;laquo;ラウンド&lt;/a&gt; | &lt;a href=&quot;sort&quot;&gt;並べ替え&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc01271584d44812ceec734c223f4c47abb2b7e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sandbox&quot;&gt; &amp;laquo; sandbox &lt;/a&gt;|&lt;a href=&quot;spaceless&quot;&gt; spaceless &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;sandbox&quot;&gt;&amp;laquo;サンドボックス&lt;/a&gt; | &lt;a href=&quot;spaceless&quot;&gt;スペースレス&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd54fceebdc0baaa4f2568fb39c95291ca7ab311" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sandbox&quot;&gt; &amp;laquo; sandbox &lt;/a&gt;|&lt;a href=&quot;use&quot;&gt; use &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;sandbox&quot;&gt;&amp;laquo;サンドボックス&lt;/a&gt;| &lt;a href=&quot;use&quot;&gt;使用する &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="773dec3a1dc7d40ec5b3cb0435a541223e719eba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt; &amp;laquo; set &lt;/a&gt;|&lt;a href=&quot;use&quot;&gt; use &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt;&amp;laquo;セット&lt;/a&gt; | &lt;a href=&quot;use&quot;&gt;使用する &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bac2f07f3e517f34b91fe4147c0bf1dfa31794e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt; &amp;laquo; set &lt;/a&gt;|&lt;a href=&quot;verbatim&quot;&gt; verbatim &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt;&amp;laquo;セット&lt;/a&gt;| &lt;a href=&quot;verbatim&quot;&gt;逐語的&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4387c2a790b6e872c63d304f4b693266b42c3308" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;slice&quot;&gt; &amp;laquo; slice &lt;/a&gt;|&lt;a href=&quot;spaceless&quot;&gt; spaceless &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;slice&quot;&gt;&amp;laquo;スライス&lt;/a&gt;| &lt;a href=&quot;spaceless&quot;&gt;スペースレス&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ffe60d68232492ff39ac9414bef4b01cc3dcdb43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;slice&quot;&gt; &amp;laquo; slice &lt;/a&gt;|&lt;a href=&quot;split&quot;&gt; split &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;slice&quot;&gt;&amp;laquo;スライス&lt;/a&gt; | &lt;a href=&quot;split&quot;&gt;スプリット &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb94a2e485a42ada6e29e8e50b7bf4d73247c01c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sort&quot;&gt; &amp;laquo; sort &lt;/a&gt;|&lt;a href=&quot;split&quot;&gt; split &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;sort&quot;&gt;&amp;laquo;並べ替え&lt;/a&gt;| &lt;a href=&quot;split&quot;&gt;スプリット &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="204cb8e40607ba0b405f250717e93cb78d7ca66f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sort&quot;&gt; &amp;laquo; sort &lt;/a&gt;|&lt;a href=&quot;striptags&quot;&gt; striptags &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;sort&quot;&gt;&amp;laquo;並べ替え&lt;/a&gt; | &lt;a href=&quot;striptags&quot;&gt;ストリップタグ&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a396e6ce5612149064645fb880ba048a8ea1e77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;source&quot;&gt; &amp;laquo; source &lt;/a&gt;|&lt;a href=&quot;../tests/index&quot;&gt; Tests &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;source&quot;&gt;&amp;laquo;ソース&lt;/a&gt; | &lt;a href=&quot;../tests/index&quot;&gt;テスト&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4d0caf13598c14992ea9564b571621af08e9808" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;source&quot;&gt; &amp;laquo; source &lt;/a&gt;|&lt;a href=&quot;template_from_string&quot;&gt; template_from_string &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;source&quot;&gt;&amp;laquo;ソース&lt;/a&gt;| &lt;a href=&quot;template_from_string&quot;&gt;template_from_string&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99534deb19c09bc23eaf2589037dd0a602d11513" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spaceless&quot;&gt; &amp;laquo; spaceless &lt;/a&gt;|&lt;a href=&quot;striptags&quot;&gt; striptags &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;spaceless&quot;&gt;&amp;laquo;スペースレス&lt;/a&gt;| &lt;a href=&quot;striptags&quot;&gt;ストリップタグ&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cf2ceaa70358c6f979a8bb370c80504ba850d20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spaceless&quot;&gt; &amp;laquo; spaceless &lt;/a&gt;|&lt;a href=&quot;verbatim&quot;&gt; verbatim &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;spaceless&quot;&gt;&amp;laquo;スペースレス&lt;/a&gt; | &lt;a href=&quot;verbatim&quot;&gt;逐語的&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b78e5537f6e00cc29270ec4040e5a474ef563843" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;split&quot;&gt; &amp;laquo; split &lt;/a&gt;|&lt;a href=&quot;timezone_name&quot;&gt; timezone_name &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;split&quot;&gt;&amp;laquo;分割&lt;/a&gt;| &lt;a href=&quot;timezone_name&quot;&gt;timezone_name&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b14c455be70b803eac26d92b35c20b79c5457bd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;split&quot;&gt; &amp;laquo; split &lt;/a&gt;|&lt;a href=&quot;title&quot;&gt; title &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;split&quot;&gt;&amp;laquo;分割&lt;/a&gt; | &lt;a href=&quot;title&quot;&gt;題名 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79bbc5018db39a0dabf1dffe7826bb6480b8504a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;striptags&quot;&gt; &amp;laquo; striptags &lt;/a&gt;|&lt;a href=&quot;title&quot;&gt; title &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;striptags&quot;&gt;&amp;laquo;ストリップタグ&lt;/a&gt;| &lt;a href=&quot;title&quot;&gt;題名 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50eef075cda312730583c86ef860507a51dafede" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;striptags&quot;&gt; &amp;laquo; striptags &lt;/a&gt;|&lt;a href=&quot;trim&quot;&gt; trim &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;striptags&quot;&gt;&amp;laquo;ストリップタグ&lt;/a&gt; | &lt;a href=&quot;trim&quot;&gt;トリム&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="693001f35f7d06eaf26035e5d7c26f583e99f1da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tags/index&quot;&gt;Tags&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;tags/index&quot;&gt;Tags&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="65e3dc56aea1f3161625835133603c62634e0cab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;templates&quot;&gt; &amp;laquo; Twig for Template Designers &lt;/a&gt;|&lt;a href=&quot;advanced&quot;&gt; Extending Twig &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;templates&quot;&gt;&amp;laquo;テンプレートデザイナーのためのTwig&lt;/a&gt; | &lt;a href=&quot;advanced&quot;&gt;Twigの拡張&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59e28a50210de21a390fb0df49384503f44f6fab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tests/index&quot;&gt;Tests&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tests/index&quot;&gt;Tests&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1790fd7c9251528225d2a2f22dfb15cddb1c3e18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;timezone_name&quot;&gt; &amp;laquo; timezone_name &lt;/a&gt;|&lt;a href=&quot;trim&quot;&gt; trim &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;timezone_name&quot;&gt;&amp;laquo;timezone_name&lt;/a&gt; | &lt;a href=&quot;trim&quot;&gt;トリム&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc4232664ed85249efbe8b59fdd5232b82218469" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;title&quot;&gt; &amp;laquo; title &lt;/a&gt;|&lt;a href=&quot;u&quot;&gt; u &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;title&quot;&gt;&amp;laquo;タイトル&lt;/a&gt;| &lt;a href=&quot;u&quot;&gt;u&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f052c50ff640e3cdf8bf7f52512b1689d02e403" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;title&quot;&gt; &amp;laquo; title &lt;/a&gt;|&lt;a href=&quot;upper&quot;&gt; upper &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;title&quot;&gt;&amp;laquo;タイトル&lt;/a&gt; | &lt;a href=&quot;upper&quot;&gt;アッパー&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e0a0d24847e2ebc34f85083d0290234de4ab785" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trim&quot;&gt; &amp;laquo; trim &lt;/a&gt;|&lt;a href=&quot;upper&quot;&gt; upper &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;trim&quot;&gt;&amp;laquo;トリム&lt;/a&gt;| &lt;a href=&quot;upper&quot;&gt;アッパー&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61f43b3367cde53e3053e3ad038987d409874cdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trim&quot;&gt; &amp;laquo; trim &lt;/a&gt;|&lt;a href=&quot;url_encode&quot;&gt; url_encode &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;trim&quot;&gt;&amp;laquo;トリム&lt;/a&gt; | &lt;a href=&quot;url_encode&quot;&gt;url_encode&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ef99184627456f7c1ab373ae586d11dc906d2c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;u&quot;&gt; &amp;laquo; u &lt;/a&gt;|&lt;a href=&quot;url_encode&quot;&gt; url_encode &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;u&quot;&gt; &amp;laquo; u &lt;/a&gt;|&lt;a href=&quot;url_encode&quot;&gt; url_encode &amp;raquo; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4552103dd6ba41474db2f230d47c30704c9ef4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;upper&quot;&gt; &amp;laquo; upper &lt;/a&gt;|&lt;a href=&quot;../functions/index&quot;&gt; Functions &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;upper&quot;&gt;&amp;laquo;上&lt;/a&gt; | &lt;a href=&quot;../functions/index&quot;&gt;関数 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ff2ee154ad899316685f10549fb9107218838aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;use&quot;&gt; &amp;laquo; use &lt;/a&gt;|&lt;a href=&quot;with&quot;&gt; with &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;use&quot;&gt;&amp;laquo;使用&lt;/a&gt; | &lt;a href=&quot;with&quot;&gt;と&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59783e551a9cf5dbf9c0cd9652b416135f110140" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;verbatim&quot;&gt; &amp;laquo; verbatim &lt;/a&gt;|&lt;a href=&quot;../filters/index&quot;&gt; Filters &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;verbatim&quot;&gt;&amp;laquo;逐語的&lt;/a&gt;| &lt;a href=&quot;../filters/index&quot;&gt;フィルタ&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39b6c8bd920a46198b95f1bbcf2d8af0fc049433" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;verbatim&quot;&gt; &amp;laquo; verbatim &lt;/a&gt;|&lt;a href=&quot;deprecated&quot;&gt; deprecated &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;verbatim&quot;&gt;&amp;laquo;逐語的&lt;/a&gt; | &lt;a href=&quot;deprecated&quot;&gt;非推奨&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58ff108035350fd2ef7a60023adedbb92cba7203" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;with&quot;&gt; &amp;laquo; with &lt;/a&gt;|&lt;a href=&quot;../filters/index&quot;&gt; Filters &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;with&quot;&gt;&amp;laquo;と&lt;/a&gt; | &lt;a href=&quot;../filters/index&quot;&gt;フィルター&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68adeb0559dfe78186752617ee10567f0f829479" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;Hello World&quot;&lt;/code&gt;: Everything between two double or single quotes is a string. They are useful whenever you need a string in the template (for example as arguments to function calls, filters or just to extend or include a template). A string can contain a delimiter if it is preceded by a backslash (&lt;code&gt;\&lt;/code&gt;) &amp;ndash; like in &lt;code&gt;'It\'s good'&lt;/code&gt;. If the string contains a backslash (e.g. &lt;code&gt;'c:\Program Files'&lt;/code&gt;) escape it by doubling it (e.g. &lt;code&gt;'c:\\Program Files'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; ：2つの二重引用符または一重引用符の間はすべて文字列です。これらは、テンプレートに文字列が必要な場合に役立ちます（たとえば、関数呼び出し、フィルターへの引数として、または単にテンプレートを拡張または含めるために）。 &lt;code&gt;'It\'s good'&lt;/code&gt; ように、文字列の前に円記号（ &lt;code&gt;\&lt;/code&gt; ）が付いている場合は、区切り文字を含めることができます。文字列にバックスラッシュが含まれている場合（例： &lt;code&gt;'c:\Program Files'&lt;/code&gt; ）、文字列を2倍にしてエスケープします（例： &lt;code&gt;'c:\\Program Files'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7eac074b7f27387856b6bc06e8b305943c3b7dd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;Hello World&quot;&lt;/code&gt;: Everything between two double or single quotes is a string. They are useful whenever you need a string in the template (for example as arguments to function calls, filters or just to extend or include a template). A string can contain a delimiter if it is preceded by a backslash (&lt;code&gt;\&lt;/code&gt;) -- like in &lt;code&gt;'It\'s good'&lt;/code&gt;. If the string contains a backslash (e.g. &lt;code&gt;'c:\Program Files'&lt;/code&gt;) escape it by doubling it (e.g. &lt;code&gt;'c:\\Program Files'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; ：2つの二重引用符または単一引用符の間のすべてが文字列です。これらは、テンプレートで文字列が必要な場合に便利です（たとえば、関数呼び出し、フィルターへの引数として、または単にテンプレートを拡張または含めるために）。 &lt;code&gt;'It\'s good'&lt;/code&gt; ように、バックスラッシュ（ &lt;code&gt;\&lt;/code&gt; ）が前に付いている場合、文字列に区切り文字を含めることができます。文字列にバックスラッシュが含まれている場合（例： &lt;code&gt;'c:\Program Files'&lt;/code&gt; ）、文字列を2倍にしてエスケープします（例： &lt;code&gt;'c:\\Program Files'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="67a456b1f2a350ea1e238988637c27343ce07c6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%&lt;/code&gt;: Calculates the remainder of an integer division. &lt;code&gt;{{ 11 % 7 }}&lt;/code&gt; is &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;%&lt;/code&gt; ：整数除算の剰余を計算します。 &lt;code&gt;{{ 11 % 7 }}&lt;/code&gt; は &lt;code&gt;4&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="76c670387f6227af7f0dcf7bf27215ca6da0bcd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(expr)&lt;/code&gt;: Groups an expression.</source>
          <target state="translated">&lt;code&gt;(expr)&lt;/code&gt; ：式をグループ化します。</target>
        </trans-unit>
        <trans-unit id="7dc558dedb5667491fce06b188a847e0761b0dac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt;: Raises the left operand to the power of the right operand. &lt;code&gt;{{ 2 **
3 }}&lt;/code&gt; would return &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; ：左のオペランドを右のオペランドで累乗します。 &lt;code&gt;{{ 2 ** 3 }}&lt;/code&gt; は &lt;code&gt;8&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3d2b5c057603aa687fd041d7579ce453de9aac62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;: Multiplies the left operand with the right one. &lt;code&gt;{{ 2 * 2 }}&lt;/code&gt; would return &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; ：左のオペランドと右のオペランドを乗算します。 &lt;code&gt;{{ 2 * 2 }}&lt;/code&gt; は &lt;code&gt;4&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f99ff64284e747a01d488071f051a9925dd97bfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;: Adds two numbers together (the operands are casted to numbers). &lt;code&gt;{{
1 + 1 }}&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; ：2つの数値を加算します（オペランドは数値にキャストされます）。 &lt;code&gt;{{ 1 + 1 }}&lt;/code&gt; は &lt;code&gt;2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ac8ad4158f95f089a57f1195c7d1f3c07ddf8439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;: Adds two objects together (the operands are casted to numbers). &lt;code&gt;{{
1 + 1 }}&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; ：2つのオブジェクトを加算します（オペランドは数値にキャストされます）。 &lt;code&gt;{{ 1 + 1 }}&lt;/code&gt; は &lt;code&gt;2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="69e3f7bc2724a62821823708504885762eeb017e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;,&lt;/code&gt; as the thousands separator.</source>
          <target state="translated">&lt;code&gt;,&lt;/code&gt; 桁区切り記号として。</target>
        </trans-unit>
        <trans-unit id="9cdee98c00618154e630150e42faa6f8f1fea5a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt;: Subtracts the second number from the first one. &lt;code&gt;{{ 3 - 2 }}&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; ：最初の数値から2番目の数値を減算します。 &lt;code&gt;{{ 3 - 2 }}&lt;/code&gt; は &lt;code&gt;1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2df9773b056a11c03c36ba467f921a4ce2970497" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;: Creates a sequence based on the operand before and after the operator (this is just syntactic sugar for the &lt;a href=&quot;functions/range&quot;&gt;range&lt;/a&gt; function):</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt; ：演算子の前後のオペランドに基づいてシーケンスを作成します（これは、&lt;a href=&quot;functions/range&quot;&gt;範囲&lt;/a&gt;関数の構文糖衣です）：</target>
        </trans-unit>
        <trans-unit id="5f399297ecb5f9d15947241234aae0c439690f58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;: Creates a sequence based on the operand before and after the operator (this is syntactic sugar for the &lt;a href=&quot;functions/range&quot;&gt;range&lt;/a&gt; function):</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt; ：演算子の前後のオペランドに基づいてシーケンスを作成します（これは&lt;a href=&quot;functions/range&quot;&gt;範囲&lt;/a&gt;関数の構文糖衣です）：</target>
        </trans-unit>
        <trans-unit id="b0e67803b2f4e163d5945afe61ca13c92ddf0918" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.&lt;/code&gt; as the decimal point.</source>
          <target state="translated">&lt;code&gt;.&lt;/code&gt; 小数点として。</target>
        </trans-unit>
        <trans-unit id="96cbc3cfd4bd5431c1f9dc9126a57dd1739fcf0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt;: Gets an attribute of a variable.</source>
          <target state="translated">&lt;code&gt;.&lt;/code&gt; 、 &lt;code&gt;[]&lt;/code&gt; ：変数の属性を取得します。</target>
        </trans-unit>
        <trans-unit id="9bd76b5497b4f08507d0266dde593c90e03c8291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt;: Gets an attribute of an object.</source>
          <target state="translated">&lt;code&gt;.&lt;/code&gt; 、 &lt;code&gt;[]&lt;/code&gt; ：オブジェクトの属性を取得します。</target>
        </trans-unit>
        <trans-unit id="2bb1e9c1e54014070b5a34acc1d0a9972b0c7fe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;//&lt;/code&gt;: Divides two numbers and returns the floored integer result. &lt;code&gt;{{ 20
// 7 }}&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;{{ -20  // 7 }}&lt;/code&gt; is &lt;code&gt;-3&lt;/code&gt; (this is just syntactic sugar for the &lt;a href=&quot;filters/round&quot;&gt;round&lt;/a&gt; filter).</source>
          <target state="translated">&lt;code&gt;//&lt;/code&gt; ：2つの数値を除算し、フロアされた整数の結果を返します。 &lt;code&gt;{{ 20 // 7 }}&lt;/code&gt; は &lt;code&gt;2&lt;/code&gt; 、 &lt;code&gt;{{ -20 // 7 }}&lt;/code&gt; は &lt;code&gt;-3&lt;/code&gt; です（これは&lt;a href=&quot;filters/round&quot;&gt;ラウンド&lt;/a&gt;フィルターの構文上の砂糖です）。</target>
        </trans-unit>
        <trans-unit id="63baa23152ef70b9531e0106356981c3516c1173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;//&lt;/code&gt;: Divides two numbers and returns the floored integer result. &lt;code&gt;{{ 20
// 7 }}&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;{{ -20&amp;nbsp; // 7 }}&lt;/code&gt; is &lt;code&gt;-3&lt;/code&gt; (this is just syntactic sugar for the &lt;a href=&quot;filters/round&quot;&gt;round&lt;/a&gt; filter).</source>
          <target state="translated">&lt;code&gt;//&lt;/code&gt; ：2つの数値を除算し、フロア整数の結果を返します。 &lt;code&gt;{{ 20 // 7 }}&lt;/code&gt; は &lt;code&gt;2&lt;/code&gt; 、 &lt;code&gt;{{ -20&amp;nbsp; // 7 }}&lt;/code&gt; は &lt;code&gt;-3&lt;/code&gt; です（これは&lt;a href=&quot;filters/round&quot;&gt;ラウンド&lt;/a&gt;フィルターの単なる構文糖衣です）。</target>
        </trans-unit>
        <trans-unit id="aed343de284b589f6792a7e52da177a9576b0103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt;: Divides two numbers. The returned value will be a floating point number. &lt;code&gt;{{ 1 / 2 }}&lt;/code&gt; is &lt;code&gt;{{ 0.5 }}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; ：2つの数値を除算します。戻り値は浮動小数点数になります。 &lt;code&gt;{{ 1 / 2 }}&lt;/code&gt; は &lt;code&gt;{{ 0.5 }}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a16e612d99e3ba5ef070ad0f051089dd866ca0fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;42&lt;/code&gt; / &lt;code&gt;42.23&lt;/code&gt;: Integers and floating point numbers are created by just writing the number down. If a dot is present the number is a float, otherwise an integer.</source>
          <target state="translated">&lt;code&gt;42&lt;/code&gt; / &lt;code&gt;42.23&lt;/code&gt; ：整数と浮動小数点数は、数値を書き留めるだけで作成されます。ドットが存在する場合、数値は浮動小数点数であり、それ以外の場合は整数です。</target>
        </trans-unit>
        <trans-unit id="bb012efe6f73b9732fead3fe3452507c6724bc47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;42&lt;/code&gt; / &lt;code&gt;42.23&lt;/code&gt;: Integers and floating point numbers are created by writing the number down. If a dot is present the number is a float, otherwise an integer.</source>
          <target state="translated">&lt;code&gt;42&lt;/code&gt; / &lt;code&gt;42.23&lt;/code&gt; ：整数と浮動小数点数は、数値を書き留めることによって作成されます。ドットが存在する場合、数値は浮動小数点数です。それ以外の場合、整数です。</target>
        </trans-unit>
        <trans-unit id="a706fb53d1324068d838c6b65333c2e9f2d1f743" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?:&lt;/code&gt;: The ternary operator:</source>
          <target state="translated">&lt;code&gt;?:&lt;/code&gt; :三項演算子：</target>
        </trans-unit>
        <trans-unit id="8ba3306623e3b66961a95e4131e5ad88e232bddd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;??&lt;/code&gt;: The null-coalescing operator:</source>
          <target state="translated">&lt;code&gt;??&lt;/code&gt; ：null結合演算子：</target>
        </trans-unit>
        <trans-unit id="4d4483144829e0b6b36199f640ed97a9c29399f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Error&lt;/code&gt;: The base exception for all errors.</source>
          <target state="translated">&lt;code&gt;Twig_Error&lt;/code&gt; ：すべてのエラーの基本例外。</target>
        </trans-unit>
        <trans-unit id="f5329e77a3ab992075825dcf12ee070759bd9584" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Error_Loader&lt;/code&gt;: Thrown when an error occurs during template loading.</source>
          <target state="translated">&lt;code&gt;Twig_Error_Loader&lt;/code&gt; ：テンプレートのロード中にエラーが発生した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="36694247c54ecb7bcb6981010e258818e809c609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Error_Runtime&lt;/code&gt;: Thrown when an error occurs at runtime (when a filter does not exist for instance).</source>
          <target state="translated">&lt;code&gt;Twig_Error_Runtime&lt;/code&gt; ：実行時にエラーが発生した場合（たとえば、フィルターが存在しない場合）にスローされます。</target>
        </trans-unit>
        <trans-unit id="dc345fba1a0f2c7f400d2021e09ac828024a3103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Error_Syntax&lt;/code&gt;: Thrown to tell the user that there is a problem with the template syntax.</source>
          <target state="translated">&lt;code&gt;Twig_Error_Syntax&lt;/code&gt; ：テンプレート構文に問題があることをユーザーに通知するためにスローされます。</target>
        </trans-unit>
        <trans-unit id="9d0dab3a45404c190c7aefcca51513a314de16fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Loader_Array&lt;/code&gt; loads a template from a PHP array. It's passed an array of strings bound to template names:</source>
          <target state="translated">&lt;code&gt;Twig_Loader_Array&lt;/code&gt; は、PHP配列からテンプレートをロードします。テンプレート名にバインドされた文字列の配列が渡されます：</target>
        </trans-unit>
        <trans-unit id="ff398614316619443713414a90c1d5032def14aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Loader_Chain&lt;/code&gt; accepts any loader that implements &lt;code&gt;Twig_LoaderInterface&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Twig_Loader_Chain&lt;/code&gt; は、実装するすべてのローダー受け入れ &lt;code&gt;Twig_LoaderInterface&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="666ec4037bfc4e9d0de722f89ed5e57debf8af06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Loader_Chain&lt;/code&gt; delegates the loading of templates to other loaders:</source>
          <target state="translated">&lt;code&gt;Twig_Loader_Chain&lt;/code&gt; はテンプレートのロードを他のローダーに委任します：</target>
        </trans-unit>
        <trans-unit id="2c3ee64136d743b8f0e89a2ec4726fd64776bac1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Loader_Filesystem&lt;/code&gt; loads templates from the file system. This loader can find templates in folders on the file system and is the preferred way to load them:</source>
          <target state="translated">&lt;code&gt;Twig_Loader_Filesystem&lt;/code&gt; は、ファイルシステムからテンプレートをロードします。このローダーは、ファイルシステム上のフォルダー内のテンプレートを見つけることができ、それらをロードするための推奨される方法です。</target>
        </trans-unit>
        <trans-unit id="a454dd136ddafece86ee659465ec62911af32548" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Loader_Filesystem&lt;/code&gt; support absolute and relative paths. Using relative paths is preferred as it makes the cache keys independent of the project root directory (for instance, it allows warming the cache from a build server where the directory might be different from the one used on production servers):</source>
          <target state="translated">&lt;code&gt;Twig_Loader_Filesystem&lt;/code&gt; は、絶対パスと相対パスをサポートしています。相対パスを使用すると、キャッシュキーがプロジェクトのルートディレクトリから独立するため、推奨されます（たとえば、ディレクトリが本番サーバーで使用されているものと異なる可能性があるビルドサーバーからキャッシュをウォームすることができます）。</target>
        </trans-unit>
        <trans-unit id="78c4b0c7edcf7a1461dd0dc4d78735624de0d07a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_ALL&lt;/code&gt;, enables all optimizations (this is the default value).</source>
          <target state="translated">&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_ALL&lt;/code&gt; は、すべての最適化を有効にします（これがデフォルト値です）。</target>
        </trans-unit>
        <trans-unit id="d3d0a8d747bd3c131c8e61c07af925b02a59b75b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_FOR&lt;/code&gt;, optimizes the &lt;code&gt;for&lt;/code&gt; tag by removing the &lt;code&gt;loop&lt;/code&gt; variable creation whenever possible.</source>
          <target state="translated">&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_FOR&lt;/code&gt; 、可能な限り &lt;code&gt;loop&lt;/code&gt; 変数の作成を削除して &lt;code&gt;for&lt;/code&gt; タグを最適化します。</target>
        </trans-unit>
        <trans-unit id="28641a8771513abe6ad6fe7d53580f51a7768aee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_NONE&lt;/code&gt;, disables all optimizations. This reduces the compilation time, but it can increase the execution time and the consumed memory.</source>
          <target state="translated">&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_NONE&lt;/code&gt; 、すべての最適化を無効にします。これにより、コンパイル時間が短縮されますが、実行時間と消費メモリが増加する可能性があります。</target>
        </trans-unit>
        <trans-unit id="258fc19a834127995bc88894ecc124e8ac4491d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_RAW_FILTER&lt;/code&gt;, removes the &lt;code&gt;raw&lt;/code&gt; filter whenever possible.</source>
          <target state="translated">&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_RAW_FILTER&lt;/code&gt; は、可能な場合は常に &lt;code&gt;raw&lt;/code&gt; フィルターを削除します。</target>
        </trans-unit>
        <trans-unit id="3a5b6814006830125d9b96ad7050999173b90650" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_VAR_ACCESS&lt;/code&gt;, simplifies the creation and access of variables in the compiled templates whenever possible.</source>
          <target state="translated">&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_VAR_ACCESS&lt;/code&gt; は、コンパイルされたテンプレートでの変数の作成とアクセスを可能な限り簡略化します。</target>
        </trans-unit>
        <trans-unit id="b44d50aca7948ae94e7ffd03b194b40212595a23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Sandbox_SecurityError&lt;/code&gt;: Thrown when an unallowed tag, filter, or method is called in a sandboxed template.</source>
          <target state="translated">&lt;code&gt;Twig_Sandbox_SecurityError&lt;/code&gt; ：サンドボックス化されたテンプレートで許可されていないタグ、フィルター、またはメソッドが呼び出された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="a894de489ee856d15fe9813fe6483af505bcb323" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::BLOCK_START_TYPE&lt;/code&gt;, &lt;code&gt;Twig_Token::BLOCK_END_TYPE&lt;/code&gt;: Delimiters for blocks (&lt;code&gt;{% %}&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Twig_Token::BLOCK_START_TYPE&lt;/code&gt; 、 &lt;code&gt;Twig_Token::BLOCK_END_TYPE&lt;/code&gt; ：ブロックの区切り文字（ &lt;code&gt;{% %}&lt;/code&gt; ％％}）</target>
        </trans-unit>
        <trans-unit id="eaa9e4485b9506a89604f93421f9fcfe8ee16ec5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::EOF_TYPE&lt;/code&gt;: Ends of template.</source>
          <target state="translated">&lt;code&gt;Twig_Token::EOF_TYPE&lt;/code&gt; ：テンプレートの終わり。</target>
        </trans-unit>
        <trans-unit id="4413028ab1ab87e8665b313adddc72f4e33b7520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::INTERPOLATION_START_TYPE&lt;/code&gt;, &lt;code&gt;Twig_Token::INTERPOLATION_END_TYPE&lt;/code&gt;: Delimiters for string interpolation;</source>
          <target state="translated">&lt;code&gt;Twig_Token::INTERPOLATION_START_TYPE&lt;/code&gt; 、 &lt;code&gt;Twig_Token::INTERPOLATION_END_TYPE&lt;/code&gt; ：文字列補間の区切り文字。</target>
        </trans-unit>
        <trans-unit id="8878912125baf8b296d1bf0ed09bce05acd6057f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::NAME_TYPE&lt;/code&gt;: A name in an expression;</source>
          <target state="translated">&lt;code&gt;Twig_Token::NAME_TYPE&lt;/code&gt; ：式の名前。</target>
        </trans-unit>
        <trans-unit id="08bc5658c032d630a943ca14268f7294e670981b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::NUMBER_TYPE&lt;/code&gt;: A number in an expression;</source>
          <target state="translated">&lt;code&gt;Twig_Token::NUMBER_TYPE&lt;/code&gt; ：式の数値。</target>
        </trans-unit>
        <trans-unit id="02aaaef5e3efeef8800705089a06f9df39b8ec22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::OPERATOR_TYPE&lt;/code&gt;: An operator;</source>
          <target state="translated">&lt;code&gt;Twig_Token::OPERATOR_TYPE&lt;/code&gt; ：演算子。</target>
        </trans-unit>
        <trans-unit id="0d19d5aed13db21524ee11fcc3f725c4582eea75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::PUNCTUATION_TYPE&lt;/code&gt;: A punctuation sign;</source>
          <target state="translated">&lt;code&gt;Twig_Token::PUNCTUATION_TYPE&lt;/code&gt; ：句読記号。</target>
        </trans-unit>
        <trans-unit id="45ef985ce2fc6144888317f4b2a279c3469c4fdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::STRING_TYPE&lt;/code&gt;: A string in an expression;</source>
          <target state="translated">&lt;code&gt;Twig_Token::STRING_TYPE&lt;/code&gt; ：式の文字列。</target>
        </trans-unit>
        <trans-unit id="77b6be30730cf1229f510e8bb5952039fc9e0767" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::TEXT_TYPE&lt;/code&gt;: A text outside an expression;</source>
          <target state="translated">&lt;code&gt;Twig_Token::TEXT_TYPE&lt;/code&gt; ：式外のテキスト。</target>
        </trans-unit>
        <trans-unit id="57c92a0dc9a0ae689f9a81e766216a0384ec6663" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::VAR_START_TYPE&lt;/code&gt;, &lt;code&gt;Twig_Token::VAR_END_TYPE&lt;/code&gt;: Delimiters for variables (&lt;code&gt;{{ }}&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Twig_Token::VAR_START_TYPE&lt;/code&gt; 、 &lt;code&gt;Twig_Token::VAR_END_TYPE&lt;/code&gt; ：変数の区切り文字（ &lt;code&gt;{{ }}&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d5a0b5e32f24fb0afb94083703d155a532b48d4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&quot;foo&quot;, &quot;bar&quot;]&lt;/code&gt;: Arrays are defined by a sequence of expressions separated by a comma (&lt;code&gt;,&lt;/code&gt;) and wrapped with squared brackets (&lt;code&gt;[]&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;[&quot;foo&quot;, &quot;bar&quot;]&lt;/code&gt; ：配列は、コンマ（ &lt;code&gt;,&lt;/code&gt; ）で区切られた式のシーケンスで定義され、角括弧（ &lt;code&gt;[]&lt;/code&gt; ）で囲まれます。</target>
        </trans-unit>
        <trans-unit id="12a20b0f876dffd0a94d7b62a8c6d22e5689c1ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Error\Error&lt;/code&gt;: The base exception for all errors.</source>
          <target state="translated">&lt;code&gt;\Twig\Error\Error&lt;/code&gt; ：すべてのエラーの基本例外。</target>
        </trans-unit>
        <trans-unit id="e7d9c3275c739c6b9d3857fe11194da9922e07d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Error\LoaderError&lt;/code&gt;: Thrown when an error occurs during template loading.</source>
          <target state="translated">&lt;code&gt;\Twig\Error\LoaderError&lt;/code&gt; ：テンプレートの読み込み中にエラーが発生したときにスローされます。</target>
        </trans-unit>
        <trans-unit id="41e51794c2da306bfd1cf0dbfb1bc9fb9328919a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Error\RuntimeError&lt;/code&gt;: Thrown when an error occurs at runtime (when a filter does not exist for instance).</source>
          <target state="translated">&lt;code&gt;\Twig\Error\RuntimeError&lt;/code&gt; ：実行時にエラーが発生した場合（たとえば、フィルターが存在しない場合）にスローされます。</target>
        </trans-unit>
        <trans-unit id="ce694a5e7b288486236b5554d703fdec6f0af575" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Error\SyntaxError&lt;/code&gt;: Thrown to tell the user that there is a problem with the template syntax.</source>
          <target state="translated">&lt;code&gt;\Twig\Error\SyntaxError&lt;/code&gt; ：テンプレート構文に問題があることをユーザーに通知するためにスローされます。</target>
        </trans-unit>
        <trans-unit id="a4a708fe9d0e2ad82a2a60de4c59af76b5753a7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Loader\ArrayLoader&lt;/code&gt; loads a template from a PHP array. It is passed an array of strings bound to template names:</source>
          <target state="translated">&lt;code&gt;\Twig\Loader\ArrayLoader&lt;/code&gt; は、PHP配列からテンプレートをロードします。テンプレート名にバインドされた文字列の配列が渡されます。</target>
        </trans-unit>
        <trans-unit id="6adfd67d6a6a2143a326e93d9912267de257056f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Loader\ChainLoader&lt;/code&gt; delegates the loading of templates to other loaders:</source>
          <target state="translated">&lt;code&gt;\Twig\Loader\ChainLoader&lt;/code&gt; は、テンプレートのロードを他のローダーに委任します。</target>
        </trans-unit>
        <trans-unit id="86743a9a799c8e3304185fecb30ca282a4aa0fd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Loader\FilesystemLoader&lt;/code&gt; loads templates from the file system. This loader can find templates in folders on the file system and is the preferred way to load them:</source>
          <target state="translated">&lt;code&gt;\Twig\Loader\FilesystemLoader&lt;/code&gt; は、ファイルシステムからテンプレートをロードします。このローダーは、ファイルシステム上のフォルダー内のテンプレートを見つけることができ、それらをロードするための推奨される方法です。</target>
        </trans-unit>
        <trans-unit id="42dec6f9d20798310e92065d32f48f72e9f0517f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Loader\FilesystemLoader&lt;/code&gt; support absolute and relative paths. Using relative paths is preferred as it makes the cache keys independent of the project root directory (for instance, it allows warming the cache from a build server where the directory might be different from the one used on production servers):</source>
          <target state="translated">&lt;code&gt;\Twig\Loader\FilesystemLoader&lt;/code&gt; 絶対パスと相対パスをサポートします。相対パスを使用すると、キャッシュキーがプロジェクトのルートディレクトリから独立するため、推奨されます（たとえば、ディレクトリが本番サーバーで使用されているものと異なる可能性があるビルドサーバーからキャッシュをウォームアップできます）。</target>
        </trans-unit>
        <trans-unit id="82de0cd6ee7085aaecb354735868fc36c0a7e4dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_ALL&lt;/code&gt;, enables all optimizations (this is the default value).</source>
          <target state="translated">&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_ALL&lt;/code&gt; は、すべての最適化を有効にします（これはデフォルト値です）。</target>
        </trans-unit>
        <trans-unit id="5f502f3b399809234cc4705a84fe6468abf66290" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_FOR&lt;/code&gt;, optimizes the &lt;code&gt;for&lt;/code&gt; tag by removing the &lt;code&gt;loop&lt;/code&gt; variable creation whenever possible.</source>
          <target state="translated">&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_FOR&lt;/code&gt; 、可能な限り &lt;code&gt;loop&lt;/code&gt; 変数の作成を削除することにより、 &lt;code&gt;for&lt;/code&gt; タグを最適化します。</target>
        </trans-unit>
        <trans-unit id="a0a195e3d7ccfe77769eae4d1bb1d7faf8429143" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_NONE&lt;/code&gt;, disables all optimizations. This reduces the compilation time, but it can increase the execution time and the consumed memory.</source>
          <target state="translated">&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_NONE&lt;/code&gt; 、すべての最適化を無効にします。これにより、コンパイル時間が短縮されますが、実行時間と消費メモリが増加する可能性があります。</target>
        </trans-unit>
        <trans-unit id="0f67c9b333e892c6115d0251accc2af8e9eab5a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_RAW_FILTER&lt;/code&gt;, removes the &lt;code&gt;raw&lt;/code&gt; filter whenever possible.</source>
          <target state="translated">&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_RAW_FILTER&lt;/code&gt; は、可能な限り &lt;code&gt;raw&lt;/code&gt; フィルターを削除します。</target>
        </trans-unit>
        <trans-unit id="8648b25ca583313dc1418a5071b8beeea3798bf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_VAR_ACCESS&lt;/code&gt;, simplifies the creation and access of variables in the compiled templates whenever possible.</source>
          <target state="translated">&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_VAR_ACCESS&lt;/code&gt; 、可能な限り、コンパイルされたテンプレートでの変数の作成とアクセスを簡素化します。</target>
        </trans-unit>
        <trans-unit id="036b594962395994a61e2376b568aefbbc6a46be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Sandbox\SecurityError&lt;/code&gt;: Thrown when an unallowed tag, filter, or method is called in a sandboxed template.</source>
          <target state="translated">&lt;code&gt;\Twig\Sandbox\SecurityError&lt;/code&gt; ：サンドボックス化されたテンプレートで許可されていないタグ、フィルター、またはメソッドが呼び出されたときにスローされます。</target>
        </trans-unit>
        <trans-unit id="48c6aed5373e9eb47b7e15e6a38beed7919d531a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::BLOCK_START_TYPE&lt;/code&gt;, &lt;code&gt;\Twig\Token::BLOCK_END_TYPE&lt;/code&gt;: Delimiters for blocks (&lt;code&gt;{% %}&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;\Twig\Token::BLOCK_START_TYPE&lt;/code&gt; 、 &lt;code&gt;\Twig\Token::BLOCK_END_TYPE&lt;/code&gt; ：ブロックの区切り文字（ &lt;code&gt;{% %}&lt;/code&gt; %% }）</target>
        </trans-unit>
        <trans-unit id="c64376c4df87bb4798ebe379c83af7c764b489a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::EOF_TYPE&lt;/code&gt;: Ends of template.</source>
          <target state="translated">&lt;code&gt;\Twig\Token::EOF_TYPE&lt;/code&gt; ：テンプレートの終わり。</target>
        </trans-unit>
        <trans-unit id="30ae5e8d730500c203011a0c2b23f1f6bc40c234" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::INTERPOLATION_START_TYPE&lt;/code&gt;, &lt;code&gt;\Twig\Token::INTERPOLATION_END_TYPE&lt;/code&gt;: Delimiters for string interpolation;</source>
          <target state="translated">&lt;code&gt;\Twig\Token::INTERPOLATION_START_TYPE&lt;/code&gt; 、 &lt;code&gt;\Twig\Token::INTERPOLATION_END_TYPE&lt;/code&gt; ：文字列補間の区切り文字。</target>
        </trans-unit>
        <trans-unit id="caee34697965cc596e9ceac63e8b7183baf73aa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::NAME_TYPE&lt;/code&gt;: A name in an expression;</source>
          <target state="translated">&lt;code&gt;\Twig\Token::NAME_TYPE&lt;/code&gt; ：式の名前。</target>
        </trans-unit>
        <trans-unit id="903ad635c3cc19851c99a1d170d4bb8b64d931ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::NUMBER_TYPE&lt;/code&gt;: A number in an expression;</source>
          <target state="translated">&lt;code&gt;\Twig\Token::NUMBER_TYPE&lt;/code&gt; ：式の数値。</target>
        </trans-unit>
        <trans-unit id="9e35952444fce11f87d72091dc60cfb3e1c24d34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::OPERATOR_TYPE&lt;/code&gt;: An operator;</source>
          <target state="translated">&lt;code&gt;\Twig\Token::OPERATOR_TYPE&lt;/code&gt; ：演算子;</target>
        </trans-unit>
        <trans-unit id="a4a057a4e8f0b0424072ab31487c9ce26b497623" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::PUNCTUATION_TYPE&lt;/code&gt;: A punctuation sign;</source>
          <target state="translated">&lt;code&gt;\Twig\Token::PUNCTUATION_TYPE&lt;/code&gt; ：句読点;</target>
        </trans-unit>
        <trans-unit id="2c4c8a1bfb0b9ccd457ef25647b598e017efd139" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::STRING_TYPE&lt;/code&gt;: A string in an expression;</source>
          <target state="translated">&lt;code&gt;\Twig\Token::STRING_TYPE&lt;/code&gt; ：式の文字列。</target>
        </trans-unit>
        <trans-unit id="d13da03bb52d936649afe3a2397d52b2f87e5646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::TEXT_TYPE&lt;/code&gt;: A text outside an expression;</source>
          <target state="translated">&lt;code&gt;\Twig\Token::TEXT_TYPE&lt;/code&gt; ：式の外側のテキスト。</target>
        </trans-unit>
        <trans-unit id="d97be16156a9ad38ce66c5769c1ae78e1a28e0fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::VAR_START_TYPE&lt;/code&gt;, &lt;code&gt;\Twig\Token::VAR_END_TYPE&lt;/code&gt;: Delimiters for variables (&lt;code&gt;{{ }}&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;\Twig\Token::VAR_START_TYPE&lt;/code&gt; 、 &lt;code&gt;\Twig\Token::VAR_END_TYPE&lt;/code&gt; ：変数の区切り文字（ &lt;code&gt;{{ }}&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="82ff0896ed569eff54417827955cd27ff1419362" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_charset&lt;/code&gt;: references the current charset.</source>
          <target state="translated">&lt;code&gt;_charset&lt;/code&gt; ：現在の文字セットを参照します。</target>
        </trans-unit>
        <trans-unit id="0bae122111862402866865d2a39f65dc61c8f197" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_context&lt;/code&gt;: references the current context;</source>
          <target state="translated">&lt;code&gt;_context&lt;/code&gt; ：現在のコンテキストを参照します。</target>
        </trans-unit>
        <trans-unit id="ddfb239f5a7e9e7b7853ee154946c850f0769a46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_self&lt;/code&gt;: references the current template name;</source>
          <target state="translated">&lt;code&gt;_self&lt;/code&gt; ：現在のテンプレート名を参照します。</target>
        </trans-unit>
        <trans-unit id="0cdb80018b98d472f9da9f2154968f58f12e6718" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addDebugInfo()&lt;/code&gt;: Adds the line of the original template file related to the current node as a comment.</source>
          <target state="translated">&lt;code&gt;addDebugInfo()&lt;/code&gt; ：現在のノードに関連する元のテンプレートファイルの行をコメントとして追加します。</target>
        </trans-unit>
        <trans-unit id="c388bf33dc55fbcbd46b92b49692b3a633b944a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowable_tags&lt;/code&gt;: Tags which should not be stripped</source>
          <target state="translated">&lt;code&gt;allowable_tags&lt;/code&gt; ：削除すべきではないタグ</target>
        </trans-unit>
        <trans-unit id="0b32513b3e1ba982c04115190b5b36fcb9fec2b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt;: Returns true if the left and the right operands are both true.</source>
          <target state="translated">&lt;code&gt;and&lt;/code&gt; ：左と右のオペランドが両方ともtrueの場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="8e0222d3ade18c3e5a46596c42a267a35da454de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt;: The separator for the last pair of input items</source>
          <target state="translated">&lt;code&gt;and&lt;/code&gt; ：入力項目の最後のペアの区切り記号</target>
        </trans-unit>
        <trans-unit id="78645f723419b0631a3acaa5942a8d19a34425a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt;: The sequence or mapping</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; ：シーケンスまたはマッピング</target>
        </trans-unit>
        <trans-unit id="a6a5d12e36229bec35ad4b5c92a192eef9a99c55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrow&lt;/code&gt;: An arrow function</source>
          <target state="translated">&lt;code&gt;arrow&lt;/code&gt; ：矢印関数</target>
        </trans-unit>
        <trans-unit id="902b138d4cc0b71f649374f3553f5f3112813d8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrow&lt;/code&gt;: The arrow function</source>
          <target state="translated">&lt;code&gt;arrow&lt;/code&gt; ：矢印関数</target>
        </trans-unit>
        <trans-unit id="53674e08e00cf7e13e02e1a5706b55e2bd1d8391" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attrs&lt;/code&gt;: A map of attributes</source>
          <target state="translated">&lt;code&gt;attrs&lt;/code&gt; ：属性のマップ</target>
        </trans-unit>
        <trans-unit id="2dc2dd2e6096003c1f1d680fe415e3ae59e2beaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_reload&lt;/code&gt;&lt;em&gt;boolean&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;auto_reload&lt;/code&gt;&lt;em&gt;boolean&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c3f4984fc137167b054aea3a9c96c16e9cf9b47d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autoescape&lt;/code&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;autoescape&lt;/code&gt;&lt;em&gt;string&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e31cbe727939990a8ad35acd79bb95818f71748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;base_template_class&lt;/code&gt;&lt;em&gt;string&lt;/em&gt; (defaults to &lt;code&gt;Twig_Template&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;base_template_class&lt;/code&gt; &lt;em&gt;文字列&lt;/em&gt;（デフォルトは &lt;code&gt;Twig_Template&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="db8391d08d16f4911333c096c22dde1077ccd98f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache&lt;/code&gt;&lt;em&gt;string&lt;/em&gt; or &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cache&lt;/code&gt; &lt;em&gt;文字列&lt;/em&gt;または &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a87db29648044f6c232f9526bdc465d28d4c33c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ceil&lt;/code&gt; always rounds up;</source>
          <target state="translated">&lt;code&gt;ceil&lt;/code&gt; は常に切り上げます。</target>
        </trans-unit>
        <trans-unit id="1095fec08a10f31cbdde9b14988d6a87bed6810f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;character_mask&lt;/code&gt;: The characters to strip</source>
          <target state="translated">&lt;code&gt;character_mask&lt;/code&gt; ：取り除く文字</target>
        </trans-unit>
        <trans-unit id="69ab44ba1560263906b112354df2cf2c6f1f441f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charset&lt;/code&gt;: The string charset</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; ：文字列の文字セット</target>
        </trans-unit>
        <trans-unit id="a51c991e9e9606e43b36455c4c071f9a84521079" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charset&lt;/code&gt;&lt;em&gt;string&lt;/em&gt; (defaults to &lt;code&gt;utf-8&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; &lt;em&gt;列&lt;/em&gt;（デフォルトは &lt;code&gt;utf-8&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b30a99e7c62a59d7fe378b1eee766c89920c8630" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;common&lt;/code&gt; rounds either up or down (rounds the value up to precision decimal places away from zero, when it is half way there &amp;ndash; making 1.5 into 2 and -1.5 into -2);</source>
          <target state="translated">&lt;code&gt;common&lt;/code&gt; 切り上げまたは切り下げ（値がゼロから小数点以下の精度で切り上げられ、途中で1.5が2に、-1.5が-2になります）。</target>
        </trans-unit>
        <trans-unit id="c3e5bf7a078b36db933fe48662dcbee8cbb11aaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;common&lt;/code&gt; rounds either up or down (rounds the value up to precision decimal places away from zero, when it is half way there -- making 1.5 into 2 and -1.5 into -2);</source>
          <target state="translated">&lt;code&gt;common&lt;/code&gt; 切り上げまたは切り下げ（値がゼロから離れるように、小数点以下の桁数を小数点以下に切り上げます。1.5を2に、-1.5を-2にします）。</target>
        </trans-unit>
        <trans-unit id="566426416c5a108c1a8d9f59e7f15db1df99d80b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;constant&lt;/code&gt; checks if a variable has the exact same value as a constant. You can use either global constants or class constants:</source>
          <target state="translated">&lt;code&gt;constant&lt;/code&gt; は、変数が定数とまったく同じ値を持っているかどうかをチェックします。グローバル定数またはクラス定数のいずれかを使用できます。</target>
        </trans-unit>
        <trans-unit id="b4145601e18bcd5ff029315fa26bb588bb4569ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;constant&lt;/code&gt; returns the constant value for a given string:</source>
          <target state="translated">&lt;code&gt;constant&lt;/code&gt; は、指定された文字列の定数値を返します。</target>
        </trans-unit>
        <trans-unit id="61a8d878bd6cd3e59405d419092714c1da976443" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt;: The context to dump</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; ：ダンプするコンテキスト</target>
        </trans-unit>
        <trans-unit id="c54502aa343e0f024ddc97f8281b188bec0aca5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;css&lt;/code&gt;: escapes a string for the &lt;strong&gt;CSS context&lt;/strong&gt;. CSS escaping can be applied to any string being inserted into CSS and escapes everything except alphanumerics.</source>
          <target state="translated">&lt;code&gt;css&lt;/code&gt; ：&lt;strong&gt;CSSコンテキストの&lt;/strong&gt;文字列をエスケープし&lt;strong&gt;ます&lt;/strong&gt;。CSSエスケープは、CSSに挿入される任意の文字列に適用でき、英数字以外のすべてをエスケープします。</target>
        </trans-unit>
        <trans-unit id="d4f11fb9e18e39fbb105cc4b500800436cb2f12c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;css&lt;/code&gt;: escapes a string for the &lt;strong&gt;CSS&lt;/strong&gt; context. CSS escaping can be applied to any string being inserted into CSS and escapes everything except alphanumerics.</source>
          <target state="translated">&lt;code&gt;css&lt;/code&gt; ：&lt;strong&gt;CSS&lt;/strong&gt;コンテキストの文字列をエスケープします。CSSエスケープは、CSSに挿入されるすべての文字列に適用でき、英数字以外のすべてをエスケープします。</target>
        </trans-unit>
        <trans-unit id="fc9c56c9698e709c99c5f20779cf53cd9181989a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;currency&lt;/code&gt;: The currency</source>
          <target state="translated">&lt;code&gt;currency&lt;/code&gt; ：通貨</target>
        </trans-unit>
        <trans-unit id="a7947d57fe5bac192748fe268eefe6ef3521e0c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;currency&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;currency&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="8767c4ab6e6721f031660b6a0f9f9905355080f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date&lt;/code&gt;: The date</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; ：日付</target>
        </trans-unit>
        <trans-unit id="177e44bb8a7c11eca0b1868d211359359a502539" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dateFormat&lt;/code&gt;: The date format</source>
          <target state="translated">&lt;code&gt;dateFormat&lt;/code&gt; ：日付形式</target>
        </trans-unit>
        <trans-unit id="c494d2aa6d128157f631ceda8c7caab6aaa22736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;debug&lt;/code&gt;&lt;em&gt;boolean&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;debug&lt;/code&gt;&lt;em&gt;boolean&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="66541ba41ccb48a464e00e7a9303fe4410b72066" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal&lt;/code&gt;: The number of decimal points to display</source>
          <target state="translated">&lt;code&gt;decimal&lt;/code&gt; ：表示する小数点の数</target>
        </trans-unit>
        <trans-unit id="41630113c6ade8d9e638cd878698f41064f9eddb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;decimal&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="e334f21e65e83081cd94761c941d33e8923c2936" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal_always_shown&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;decimal_always_shown&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="fc87128f3a6263ee71f0574e751ad0ae9c9222a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal_point&lt;/code&gt;: The character(s) to use for the decimal point</source>
          <target state="translated">&lt;code&gt;decimal_point&lt;/code&gt; ：小数点に使用する文字</target>
        </trans-unit>
        <trans-unit id="7cba36dc92c50f95df27bec9e03b04c32297f6ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;: The default value</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; ：デフォルト値</target>
        </trans-unit>
        <trans-unit id="8a4f3256c45b0cd856d5c156aad10b15b5aeef15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defined&lt;/code&gt; checks if a variable is defined in the current context. This is very useful if you use the &lt;code&gt;strict_variables&lt;/code&gt; option:</source>
          <target state="translated">&lt;code&gt;defined&lt;/code&gt; は、変数が現在のコンテキストで定義されているかどうかをチェックします。これは、 &lt;code&gt;strict_variables&lt;/code&gt; オプションを使用する場合に非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="f0749fe159afb905c9ce398b9c4958e7aa466c00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delimiter&lt;/code&gt;: The delimiter</source>
          <target state="translated">&lt;code&gt;delimiter&lt;/code&gt; ：区切り文字</target>
        </trans-unit>
        <trans-unit id="886a11a718b30519a7667c488d4cd9f56dd882d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;divisible by&lt;/code&gt; checks if a variable is divisible by a number:</source>
          <target state="translated">&lt;code&gt;divisible by&lt;/code&gt; 変数が数値で割り切れるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="1d7078d6fc957846f0981b12f0797e92d78cb997" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;duration&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;duration&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="e7913c0ebe7934d25832b6b7e66d2838fb5ef38a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;empty&lt;/code&gt; checks if a variable is an empty string, an empty array, an empty hash, exactly &lt;code&gt;false&lt;/code&gt;, or exactly &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;empty&lt;/code&gt; は、変数が空の文字列、空の配列、空のハッシュ、正確に &lt;code&gt;false&lt;/code&gt; または正確に &lt;code&gt;null&lt;/code&gt; であるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="45efc35657d78a97a25fb3289beaab5bbe01792b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;even&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if the given number is even:</source>
          <target state="translated">&lt;code&gt;even&lt;/code&gt; 返す &lt;code&gt;true&lt;/code&gt; 与えられた数が偶数の場合：</target>
        </trans-unit>
        <trans-unit id="93ab4f9b7b86070c3b8d22b27a94ac04c0b7fa51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expect($type[, $value[, $message]])&lt;/code&gt;: If the current token isn&amp;rsquo;t of the given type/value a syntax error is thrown. Otherwise, if the type and value are correct, the token is returned and the stream moves to the next token.</source>
          <target state="translated">&lt;code&gt;expect($type[, $value[, $message]])&lt;/code&gt; ：現在のトークンが指定されたタイプ/値でない場合、構文エラーがスローされます。それ以外の場合、タイプと値が正しい場合、トークンが返され、ストリームは次のトークンに移動します。</target>
        </trans-unit>
        <trans-unit id="33d0568fdf8ebda748b0af928c5b2ab770a89834" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expect($type[, $value[, $message]])&lt;/code&gt;: If the current token isn't of the given type/value a syntax error is thrown. Otherwise, if the type and value are correct, the token is returned and the stream moves to the next token.</source>
          <target state="translated">&lt;code&gt;expect($type[, $value[, $message]])&lt;/code&gt; ：現在のトークンが指定されたタイプ/値でない場合、構文エラーがスローされます。それ以外の場合、タイプと値が正しい場合、トークンが返され、ストリームは次のトークンに移動します。</target>
        </trans-unit>
        <trans-unit id="5c9bbed1584998b5b7946c92751379946601ab76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fill&lt;/code&gt;: Used to fill in missing items</source>
          <target state="translated">&lt;code&gt;fill&lt;/code&gt; ：不足しているアイテムを埋めるために使用されます</target>
        </trans-unit>
        <trans-unit id="fd6cd7e192dfb14cad18563b9021d8e78094f6a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;floor&lt;/code&gt; always rounds down.</source>
          <target state="translated">&lt;code&gt;floor&lt;/code&gt; 常に切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="3e680a7325c2fdcd9264d8ab254e809caf9516cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo['bar']&lt;/code&gt; on the other hand only works with PHP arrays:</source>
          <target state="translated">&lt;code&gt;foo['bar']&lt;/code&gt; 一方、foo ['bar']はPHP配列でのみ機能します。</target>
        </trans-unit>
        <trans-unit id="ad50ae9d90fbe139bca0db4b2ccb5a86ed47f186" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt;: The date format</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; ：日付形式</target>
        </trans-unit>
        <trans-unit id="7bea077cdd2e2e4b9d8c857cb7677250e7f93923" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format_width&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;format_width&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="45e8cc2701a3b1cff6e609300f171bbbebd7dcad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fraction_digit&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;fraction_digit&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="14df8a7afcfe5b3b38ca4dbc4b5c098d25769c95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from&lt;/code&gt;: The input charset</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt; ：入力文字セット</target>
        </trans-unit>
        <trans-unit id="318ba115cb8fcb535c471f2921c53092b5c53068" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from&lt;/code&gt;: The placeholder values</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt; ：プレースホルダー値</target>
        </trans-unit>
        <trans-unit id="3dbf15d32f9adfc327c4c78941fa4706cedc73e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getCurrent()&lt;/code&gt;: Gets the current token in the stream.</source>
          <target state="translated">&lt;code&gt;getCurrent()&lt;/code&gt; ：ストリーム内の現在のトークンを取得します。</target>
        </trans-unit>
        <trans-unit id="b5a16990bed9d4d034500247d7205244fe5520c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;glue&lt;/code&gt;: The separator</source>
          <target state="translated">&lt;code&gt;glue&lt;/code&gt; ：セパレーター</target>
        </trans-unit>
        <trans-unit id="c5ff3f07082c25683d3d722082f958ca2610710c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;grouping_size&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;grouping_size&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="41ff5603ca647aad71ead23820432bce7e306a63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;grouping_used&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;grouping_used&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="f17b4834bae8134c398225b1a5317a565e555514" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;high&lt;/code&gt;: The highest possible value of the sequence.</source>
          <target state="translated">&lt;code&gt;high&lt;/code&gt; ：シーケンスの可能な最高値。</target>
        </trans-unit>
        <trans-unit id="024cd34a7876559460cb75970daf30ee2fdf862c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html&lt;/code&gt;: escapes a string for the &lt;strong&gt;HTML body&lt;/strong&gt; context.</source>
          <target state="translated">&lt;code&gt;html&lt;/code&gt; ：&lt;strong&gt;HTML本文&lt;/strong&gt;コンテキストの文字列をエスケープします。</target>
        </trans-unit>
        <trans-unit id="cd17a21cf59880bd904391b9c988a9e098c83a41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html_attr&lt;/code&gt;: escapes a string for the &lt;strong&gt;HTML attribute&lt;/strong&gt; context.</source>
          <target state="translated">&lt;code&gt;html_attr&lt;/code&gt; ：&lt;strong&gt;HTML属性&lt;/strong&gt;コンテキストの文字列をエスケープします。</target>
        </trans-unit>
        <trans-unit id="c3d865860c1ecbb1092e8fcc9951ac09e82d0b62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html_to_markdown&lt;/code&gt; is just a frontend; the actual conversion is done by one of the following compatible libraries, from which you can choose:</source>
          <target state="translated">&lt;code&gt;html_to_markdown&lt;/code&gt; は単なるフロントエンドです。実際の変換は、次の互換性のあるライブラリのいずれかによって実行され、そこから選択できます。</target>
        </trans-unit>
        <trans-unit id="2138a4f8f7ae546c796255dc823332b536e34c49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignore_missing&lt;/code&gt;: Whether to ignore missing templates or not</source>
          <target state="translated">&lt;code&gt;ignore_missing&lt;/code&gt; ：不足しているテンプレートを無視するかどうか</target>
        </trans-unit>
        <trans-unit id="0deeb58dea94a0394252c87ed2e810b2abbc2b6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indent()&lt;/code&gt;: Indents the generated code (see &lt;code&gt;Twig_Node_Block&lt;/code&gt; for a usage example).</source>
          <target state="translated">&lt;code&gt;indent()&lt;/code&gt; ：生成されたコードをインデントします（使用例については、 &lt;code&gt;Twig_Node_Block&lt;/code&gt; を参照してください）。</target>
        </trans-unit>
        <trans-unit id="cd13f99b8a31b79ee49a2d7e22cd40af64cad078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indent()&lt;/code&gt;: Indents the generated code (see &lt;code&gt;\Twig\Node\BlockNode&lt;/code&gt; for a usage example).</source>
          <target state="translated">&lt;code&gt;indent()&lt;/code&gt; ：生成されたコードをインデントします（使用例については、 &lt;code&gt;\Twig\Node\BlockNode&lt;/code&gt; を参照してください）。</target>
        </trans-unit>
        <trans-unit id="8701980e2275c62f5fb183d4ee007f3d539c9436" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initial&lt;/code&gt;: The initial value</source>
          <target state="translated">&lt;code&gt;initial&lt;/code&gt; 値：初期値</target>
        </trans-unit>
        <trans-unit id="d11932a88b32c7c4d30393b1e2527e2d20c103fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;integer_digit&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;integer_digit&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="47dbf7e6a3c6cc7e2aaa59f8411f0bc0b461c450" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iterable&lt;/code&gt; checks if a variable is an array or a traversable object:</source>
          <target state="translated">&lt;code&gt;iterable&lt;/code&gt; は、変数が配列またはトラバース可能なオブジェクトであるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="9947b00ca5e2271cbef5298df0cf14565320c92a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;js&lt;/code&gt;: escapes a string for the &lt;strong&gt;JavaScript context&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;js&lt;/code&gt; ：&lt;strong&gt;JavaScriptコンテキストの&lt;/strong&gt;文字列をエスケープし&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="451b00357c98dfe8aefb3f1356fb125455115642" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;js&lt;/code&gt;: escapes a string for the &lt;strong&gt;JavaScript&lt;/strong&gt; context.</source>
          <target state="translated">&lt;code&gt;js&lt;/code&gt; ：&lt;strong&gt;JavaScript&lt;/strong&gt;コンテキストの文字列をエスケープします。</target>
        </trans-unit>
        <trans-unit id="976099f1bd00288f13f88ad10df595a6f27c7362" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length&lt;/code&gt;: The size of the slice</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; ：スライスのサイズ</target>
        </trans-unit>
        <trans-unit id="09ce372fd250d716b244c19ddd39cb93e344ecd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lenient_parse&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lenient_parse&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="7d20188c45a33f90f77b29cb2069091f2aeea0a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;limit&lt;/code&gt;: The limit argument</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; ：制限引数</target>
        </trans-unit>
        <trans-unit id="bf748397a29b5a0e69e0a12f5d9c1e1c3ad8d51a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lipsum&lt;/code&gt; is not a language construct;</source>
          <target state="translated">&lt;code&gt;lipsum&lt;/code&gt; は言語の構成要素ではありません。</target>
        </trans-unit>
        <trans-unit id="013068d6fbc1d0f5a903648dd2588bccb119c3f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locale&lt;/code&gt;: The locale</source>
          <target state="translated">&lt;code&gt;locale&lt;/code&gt; ：ロケール</target>
        </trans-unit>
        <trans-unit id="8401d488236b5f087920d45ea3e66f14fdca1e00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;look()&lt;/code&gt;: Looks at the next token without consuming it.</source>
          <target state="translated">&lt;code&gt;look()&lt;/code&gt; ：次のトークンを消費せずに調べます。</target>
        </trans-unit>
        <trans-unit id="fcac0ea0a30847871e06f8d39d3ac4facbbcc5ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;low&lt;/code&gt;: The first value of the sequence.</source>
          <target state="translated">&lt;code&gt;low&lt;/code&gt; ：シーケンスの最初の値。</target>
        </trans-unit>
        <trans-unit id="60f0bcdedd88266e42570874bd6aa1fe4cb0db29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max&lt;/code&gt; returns the biggest value of a sequence or a set of values:</source>
          <target state="translated">&lt;code&gt;max&lt;/code&gt; は、シーケンスまたは値のセットの最大値を返します。</target>
        </trans-unit>
        <trans-unit id="a29109e9d97a62c8a7f8f02df26c038dab0690cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max&lt;/code&gt;: The max value when values is an integer</source>
          <target state="translated">&lt;code&gt;max&lt;/code&gt; ：値が整数の場合の最大値</target>
        </trans-unit>
        <trans-unit id="232c922d6400986371a4a43281df6017b753249a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_fraction_digit&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;max_fraction_digit&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="ea94176f37d43e01a8de02da825cf9a3d1f812e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_integer_digit&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;max_integer_digit&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="33dbc58940598750b037337d4906ef0b134e0970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_significant_digits_used&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;max_significant_digits_used&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="97a2a642932e8fdf2a47322d31a2126f52a49f20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method&lt;/code&gt;: The rounding method</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; ：丸め方法</target>
        </trans-unit>
        <trans-unit id="ea42d0899fd807c59d79e63039c0141cf740b152" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mime&lt;/code&gt;: The mime type</source>
          <target state="translated">&lt;code&gt;mime&lt;/code&gt; ：mimeタイプ</target>
        </trans-unit>
        <trans-unit id="b716430d25875adad89db5f9718c85626b5edf72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min&lt;/code&gt; returns the lowest value of a sequence or a set of values:</source>
          <target state="translated">&lt;code&gt;min&lt;/code&gt; は、シーケンスまたは値のセットの最小値を返します。</target>
        </trans-unit>
        <trans-unit id="7d5cc14fb40a1d25d31219997b79c7408f580b76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_fraction_digit&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;min_fraction_digit&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="e874a597c7ef757aedfab1b7230211f0bd4adad0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_integer_digit&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;min_integer_digit&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="76dfd66802000a2887cf6010d2a8e760802c95cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_significant_digits_used&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;min_significant_digits_used&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="a9668f33703f87cf462a545e6e185c6e9b4a01f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modifier&lt;/code&gt;: The modifier</source>
          <target state="translated">&lt;code&gt;modifier&lt;/code&gt; ：修飾子</target>
        </trans-unit>
        <trans-unit id="54933ce8dc240b396cc9d1b4b3dfc532fc1299e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;multiplier&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;multiplier&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="d3c576d50180d66a69081ba0c4be82a9d4949998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: A name for the template</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; ：テンプレートの名前</target>
        </trans-unit>
        <trans-unit id="a7710d35194cba6e08f33e5291bb419a9a7499fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: The column name to extract</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; ：抽出する列名</target>
        </trans-unit>
        <trans-unit id="59b981af45de55021acdf2db944741786b00fe9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: The name of the template to read</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; ：読み取るテンプレートの名前</target>
        </trans-unit>
        <trans-unit id="c3ebe6f2fc5666133b5e76b97a4b1277f6c55f87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;next()&lt;/code&gt;: Moves to the next token in the stream, &lt;em&gt;but returns the old one&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;next()&lt;/code&gt; ：ストリームの次のトークンに移動し&lt;em&gt;ますが、古い&lt;/em&gt;トークンを&lt;em&gt;返します&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6c91c1700fbfe347771e159e0854527646bdf00a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; is an alias for &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="ff22e0418abeb3148ce98bd86e73bc664506ec04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;not&lt;/code&gt;: Negates a statement.</source>
          <target state="translated">&lt;code&gt;not&lt;/code&gt; ：ステートメントを否定します。</target>
        </trans-unit>
        <trans-unit id="8118f6ed8d097463ae564e39837ece8121cc1a4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if the variable is &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 変数が &lt;code&gt;null&lt;/code&gt; の場合、nullは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4d3a9a42fa379eafa065ca61642250fd9936952a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt;: &lt;code&gt;null&lt;/code&gt; represents no specific value. This is the value returned when a variable does not exist. &lt;code&gt;none&lt;/code&gt; is an alias for &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; ： &lt;code&gt;null&lt;/code&gt; は特定の値を表しません。これは、変数が存在しない場合に返される値です。 &lt;code&gt;none&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="6f5572e5b4e3cde6296c7c5ffd921671bb6217e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;odd&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if the given number is odd:</source>
          <target state="translated">&lt;code&gt;odd&lt;/code&gt; 指定された数が奇数の場合、oddは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a779a195cd577b6f99ca8a5b1e58613dcfaa137f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimizations&lt;/code&gt;&lt;em&gt;integer&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;optimizations&lt;/code&gt;&lt;em&gt;integer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c55e52dc34a92db5ce1368475b7d4dc6c9e47389" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt;: A bitmask of &lt;a href=&quot;https://secure.php.net/manual/en/json.constants.php&quot;&gt;json_encode options&lt;/a&gt; (&lt;code&gt;{{
data|json_encode(constant('JSON_PRETTY_PRINT')) }}&lt;/code&gt;. Combine constants using</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; ：&lt;a href=&quot;https://secure.php.net/manual/en/json.constants.php&quot;&gt;json_encodeオプションの&lt;/a&gt;ビットマスク（ &lt;code&gt;{{ data|json_encode(constant('JSON_PRETTY_PRINT')) }}&lt;/code&gt; 。定数を使用して</target>
        </trans-unit>
        <trans-unit id="d836f5e25c007ed63f3de7afdbbbcf2c88b9e0d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt;: A bitmask of &lt;a href=&quot;https://secure.php.net/manual/en/json.constants.php&quot;&gt;json_encode options&lt;/a&gt;: &lt;code&gt;{{
data|json_encode(constant('JSON_PRETTY_PRINT')) }}&lt;/code&gt;. Combine constants using &lt;a href=&quot;../templates#template-logic&quot;&gt;bitwise operators&lt;/a&gt;: &lt;code&gt;{{ data|json_encode(constant('JSON_PRETTY_PRINT') b-or constant('JSON_HEX_QUOT')) }}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; ：&lt;a href=&quot;https://secure.php.net/manual/en/json.constants.php&quot;&gt;json_encodeオプションの&lt;/a&gt;ビットマスク： &lt;code&gt;{{ data|json_encode(constant('JSON_PRETTY_PRINT')) }}&lt;/code&gt; 。&lt;a href=&quot;../templates#template-logic&quot;&gt;ビット演算子&lt;/a&gt;を使用して定数を組み合わせる： &lt;code&gt;{{ data|json_encode(constant('JSON_PRETTY_PRINT') b-or constant('JSON_HEX_QUOT')) }}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7663fabb56015c937a27304b9323b5f845b6241e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;or&lt;/code&gt;: Returns true if the left or the right operand is true.</source>
          <target state="translated">&lt;code&gt;or&lt;/code&gt; ：左または右のオペランドがtrueの場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="7b24ff97d9a59e2f0d69cd66afbd49f103554cda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ordinal&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;ordinal&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="d9091e446a2b7c8437c33f7821d74c9708774031" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outdent()&lt;/code&gt;: Outdents the generated code (see &lt;code&gt;Twig_Node_Block&lt;/code&gt; for a usage example).</source>
          <target state="translated">&lt;code&gt;outdent()&lt;/code&gt; ：生成されたコードの &lt;code&gt;Twig_Node_Block&lt;/code&gt; を上げます（使用例については、Twig_Node_Blockを参照してください）。</target>
        </trans-unit>
        <trans-unit id="5f8675d4a78e652104f05df37ce16af4e2ab0f25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outdent()&lt;/code&gt;: Outdents the generated code (see &lt;code&gt;\Twig\Node\BlockNode&lt;/code&gt; for a usage example).</source>
          <target state="translated">&lt;code&gt;outdent()&lt;/code&gt; ：生成されたコードをインデントします（使用例については、 &lt;code&gt;\Twig\Node\BlockNode&lt;/code&gt; を参照してください）。</target>
        </trans-unit>
        <trans-unit id="27066d194aab3e7ba23c38d332dfb5bc16ae4520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padding_position&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;padding_position&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="804824c1c6c2a7964cfc4b3b1cfa036cef03915e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parameters&lt;/code&gt;: An array of parameters</source>
          <target state="translated">&lt;code&gt;parameters&lt;/code&gt; ：パラメータの配列</target>
        </trans-unit>
        <trans-unit id="fbe228d704301b51d0a70c68584ac8ed2e21734e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pattern&lt;/code&gt;: A date time pattern</source>
          <target state="translated">&lt;code&gt;pattern&lt;/code&gt; ：日時パターン</target>
        </trans-unit>
        <trans-unit id="5c1a655665d15327b1d3b078ca8ed0a21ba5d6f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;percent&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;percent&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="043e6325fed6877d5183ef9e0fe9ed443f2ba067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;position&lt;/code&gt;: The cycle position</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; ：サイクル位置</target>
        </trans-unit>
        <trans-unit id="f738c558af7ebf4755ba6251278bee5d0c082840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;precision&lt;/code&gt;: The rounding precision</source>
          <target state="translated">&lt;code&gt;precision&lt;/code&gt; ：丸め精度</target>
        </trans-unit>
        <trans-unit id="1dfdbea116002e3b27bf032a86b099ac0eed54e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preserve_keys&lt;/code&gt;: Preserve keys when reversing a mapping or a sequence.</source>
          <target state="translated">&lt;code&gt;preserve_keys&lt;/code&gt; ：マッピングまたはシーケンスを逆にするときにキーを保持します。</target>
        </trans-unit>
        <trans-unit id="5f223d056c85527a62af1c69b2d413aa1a6bc160" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preserve_keys&lt;/code&gt;: Whether to preserve key or not (when the input is an array)</source>
          <target state="translated">&lt;code&gt;preserve_keys&lt;/code&gt; ：キーを保持するかどうか（入力が配列の場合）</target>
        </trans-unit>
        <trans-unit id="9d6959155665df16b2184ce5735b148064d8da6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preserve_keys&lt;/code&gt;: Whether to preserve keys or not</source>
          <target state="translated">&lt;code&gt;preserve_keys&lt;/code&gt; ：キーを保持するかどうか</target>
        </trans-unit>
        <trans-unit id="59bdfdb819c11f331de7a766257dbe9e3e44c699" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;raw()&lt;/code&gt;: Writes the given string as is.</source>
          <target state="translated">&lt;code&gt;raw()&lt;/code&gt; ：指定された文字列をそのまま書き込みます。</target>
        </trans-unit>
        <trans-unit id="c2ab8d9f237d2d421d78d06710b5892da178061e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repr()&lt;/code&gt;: Writes a PHP representation of a given value (see &lt;code&gt;Twig_Node_For&lt;/code&gt; for a usage example).</source>
          <target state="translated">&lt;code&gt;repr()&lt;/code&gt; ：指定された値のPHP表現を書き込みます（使用例については &lt;code&gt;Twig_Node_For&lt;/code&gt; を参照してください）。</target>
        </trans-unit>
        <trans-unit id="6297aa175b34d6463274c115c79ee6ff05061023" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repr()&lt;/code&gt;: Writes a PHP representation of a given value (see &lt;code&gt;\Twig\Node\ForNode&lt;/code&gt; for a usage example).</source>
          <target state="translated">&lt;code&gt;repr()&lt;/code&gt; ：指定された値のPHP表現を書き込みます（使用例については、 &lt;code&gt;\Twig\Node\ForNode&lt;/code&gt; を参照してください）。</target>
        </trans-unit>
        <trans-unit id="428e610ecef4b31c43f6d8bf011dd5ffd5d55fca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rounding_increment&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;rounding_increment&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="e54899a4c27986af54e95d347f7e4b82a20f143c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rounding_mode&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;rounding_mode&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="541d69c7a583c932e1243d8ca9193d06b5ba1f6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;same as&lt;/code&gt; checks if a variable is the same as another variable. This is equivalent to &lt;code&gt;===&lt;/code&gt; in PHP:</source>
          <target state="translated">&lt;code&gt;same as&lt;/code&gt; 変数が別の変数と同じであるかどうかをチェックするのと同じです。これは、PHPの &lt;code&gt;===&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="f5b8e270329f5f0cde165d6b271799244c41e9ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;same as&lt;/code&gt; checks if a variable is the same as another variable. This is the equivalent to &lt;code&gt;===&lt;/code&gt; in PHP:</source>
          <target state="translated">&lt;code&gt;same as&lt;/code&gt; 変数が別の変数と同じかどうかをチェックするのと同じです。これは、PHPの &lt;code&gt;===&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="ea3135cfc0a09129f7de9e7416c7f34f0fc52e8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sandboxed&lt;/code&gt;: Whether to sandbox the template or not</source>
          <target state="translated">&lt;code&gt;sandboxed&lt;/code&gt; ：テンプレートをサンドボックス化するかどうか</target>
        </trans-unit>
        <trans-unit id="27e31b5b36271173e14da3afe32d7c353a10eeda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scientific&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;scientific&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="e5c173db1b1671aafe4d01630641fcd81b9d2399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;secondary_grouping_size&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;secondary_grouping_size&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="de09be95802be27db6a35bc7dec22cb6762d8867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;side&lt;/code&gt;: The default is to strip from the left and the right (</source>
          <target state="translated">&lt;code&gt;side&lt;/code&gt; ：デフォルトは左と右からストリップすることです（</target>
        </trans-unit>
        <trans-unit id="b428881fec19792b3b06f30eb39d683a40893539" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;significant_digits_used&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;significant_digits_used&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="516f8e7949845a4cfa5d780b37928e56fc3b4225" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt;: The size of the batch; fractional numbers will be rounded up</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; ：バッチのサイズ。小数は切り上げられます</target>
        </trans-unit>
        <trans-unit id="89e2884511899ca30f09ded50d7d8f3da25f86fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;spellout&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;spellout&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="4139f6c8c9b486ed80a9f635a2f0778c77548045" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt;: The start of the slice</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; ：スライスの始まり</target>
        </trans-unit>
        <trans-unit id="b5c6d2b32fb0489380db25654cce6f6c4db594b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;step&lt;/code&gt;: The increment between elements of the sequence.</source>
          <target state="translated">&lt;code&gt;step&lt;/code&gt; ：シーケンスの要素間の増分。</target>
        </trans-unit>
        <trans-unit id="ec2c5593f02b756956fdb1970a9cf0934b9f734a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strategy&lt;/code&gt;: The escaping strategy</source>
          <target state="translated">&lt;code&gt;strategy&lt;/code&gt; ：脱出戦略</target>
        </trans-unit>
        <trans-unit id="c4cdbfaf8516cb606530ac913f64cea3c7f63d04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strict_variables&lt;/code&gt;&lt;em&gt;boolean&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;strict_variables&lt;/code&gt;&lt;em&gt;boolean&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b4d86e19d90afe3884179a0a1eff94b9a5606a64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string()&lt;/code&gt;: Writes a quoted string.</source>
          <target state="translated">&lt;code&gt;string()&lt;/code&gt; ：引用符で囲まれた文字列を書き込みます。</target>
        </trans-unit>
        <trans-unit id="6ecc1914e4b24f4f2433d6043c6e2793f12c8a9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;style&lt;/code&gt;: The style of the number output</source>
          <target state="translated">&lt;code&gt;style&lt;/code&gt; ：数値出力のスタイル</target>
        </trans-unit>
        <trans-unit id="8764d50d296bd7ececd557e129973fbb4b253f04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subcompile()&lt;/code&gt;: Compiles a node.</source>
          <target state="translated">&lt;code&gt;subcompile()&lt;/code&gt; ：ノードをコンパイルします。</target>
        </trans-unit>
        <trans-unit id="93ec4bef2b12f5bb926c475849965b828f46a864" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt;: The template</source>
          <target state="translated">&lt;code&gt;template&lt;/code&gt; ：テンプレート</target>
        </trans-unit>
        <trans-unit id="3b558c680b216b188e7e5a5bf1ef269ccaa4c85d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt;: The template to render</source>
          <target state="translated">&lt;code&gt;template&lt;/code&gt; ：レンダリングするテンプレート</target>
        </trans-unit>
        <trans-unit id="c786fc61e5f8020adeed0acc786f1517cfd2bf80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test($type)&lt;/code&gt;, &lt;code&gt;test($value)&lt;/code&gt; or &lt;code&gt;test($type, $value)&lt;/code&gt;: Determines whether the current token is of a particular type or value (or both). The value may be an array of several possible values.</source>
          <target state="translated">&lt;code&gt;test($type)&lt;/code&gt; 、 &lt;code&gt;test($value)&lt;/code&gt; または &lt;code&gt;test($type, $value)&lt;/code&gt; ：現在のトークンが特定のタイプまたは値（あるいはその両方）であるかどうかを決定します。値は、いくつかの可能な値の配列になります。</target>
        </trans-unit>
        <trans-unit id="53b9d29f8835ab06b72a7036e04be4908b0c22b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thousand_sep&lt;/code&gt;: The character(s) to use for the thousands separator</source>
          <target state="translated">&lt;code&gt;thousand_sep&lt;/code&gt; ：3桁ごとの区切り文字として使用する文字</target>
        </trans-unit>
        <trans-unit id="68a280d41b84fd2b0db0bcbd2fa27db34b736e29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeFormat&lt;/code&gt;: The time format</source>
          <target state="translated">&lt;code&gt;timeFormat&lt;/code&gt; ：時間形式</target>
        </trans-unit>
        <trans-unit id="18515e1ba715b12a7bb24e68fdb0d5a189c57f02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timezone&lt;/code&gt;: The date timezone</source>
          <target state="translated">&lt;code&gt;timezone&lt;/code&gt; ：日付のタイムゾーン</target>
        </trans-unit>
        <trans-unit id="f5943c94470b33dfa8c0b0d78a33b86ef30f9c0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timezone&lt;/code&gt;: The timezone</source>
          <target state="translated">&lt;code&gt;timezone&lt;/code&gt; ：タイムゾーン</target>
        </trans-unit>
        <trans-unit id="d478daf942d8af4499b6e2f9ee51c74a63ac9a1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to&lt;/code&gt;: The output charset</source>
          <target state="translated">&lt;code&gt;to&lt;/code&gt; ：出力文字セット</target>
        </trans-unit>
        <trans-unit id="ac4f0a6d4adb86cb0d4a9aaf935c307580d6bd43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt; represents the true value, &lt;code&gt;false&lt;/code&gt; represents the false value.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; ： &lt;code&gt;true&lt;/code&gt; 真の値を示し、 &lt;code&gt;false&lt;/code&gt; 偽の値を表しています。</target>
        </trans-unit>
        <trans-unit id="1482161f3592aef782c73e696aecc05f4b8abb97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt;: escapes a string for the &lt;strong&gt;URI or parameter contexts&lt;/strong&gt;. This should not be used to escape an entire URI; only a subcomponent being inserted.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; ：&lt;strong&gt;URIまたはパラメータコンテキストの&lt;/strong&gt;文字列をエスケープします。これはURI全体をエスケープするために使用すべきではありません。挿入されるサブコンポーネントのみ。</target>
        </trans-unit>
        <trans-unit id="d5af7e8e944c4ecc6f283c80ec4253b72351cdc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt;: escapes a string for the &lt;strong&gt;URI or parameter&lt;/strong&gt; contexts. This should not be used to escape an entire URI; only a subcomponent being inserted.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; ：&lt;strong&gt;URIまたはパラメータ&lt;/strong&gt;コンテキストの文字列をエスケープします。これは、URI全体をエスケープするために使用しないでください。挿入されるサブコンポーネントのみ。</target>
        </trans-unit>
        <trans-unit id="2552d040120cc9de9e1915b8378def7b9a274d6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;values&lt;/code&gt;: The values</source>
          <target state="translated">&lt;code&gt;values&lt;/code&gt; ：値</target>
        </trans-unit>
        <trans-unit id="0df52e9ffaa1102fcdf0d07ef788563e1b9b5f8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variables&lt;/code&gt;: The variables to pass to the template</source>
          <target state="translated">&lt;code&gt;variables&lt;/code&gt; ：テンプレートに渡す変数</target>
        </trans-unit>
        <trans-unit id="97ca793c8fc8e2b2854d4775a7bd7f2280a3808f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;with_context&lt;/code&gt;: Whether to pass the current context variables or not</source>
          <target state="translated">&lt;code&gt;with_context&lt;/code&gt; ：現在のコンテキスト変数を渡すかどうか</target>
        </trans-unit>
        <trans-unit id="7db83eaa367bbb4c1245ee71d1b4fb382544531a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write()&lt;/code&gt;: Writes the given string by adding indentation at the beginning of each line.</source>
          <target state="translated">&lt;code&gt;write()&lt;/code&gt; ：各行の先頭にインデントを追加して、指定された文字列を書き込みます。</target>
        </trans-unit>
        <trans-unit id="02058c1e6be3cb925f51dc2a4429812422761078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&quot;foo&quot;: &quot;bar&quot;}&lt;/code&gt;: Hashes are defined by a list of keys and values separated by a comma (&lt;code&gt;,&lt;/code&gt;) and wrapped with curly braces (&lt;code&gt;{}&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;{&quot;foo&quot;: &quot;bar&quot;}&lt;/code&gt; ：ハッシュは、コンマ（ &lt;code&gt;,&lt;/code&gt; ）で区切られたキーと値のリストによって定義され、中括弧（ &lt;code&gt;{}&lt;/code&gt; ）で囲まれます。</target>
        </trans-unit>
        <trans-unit id="8660ff42c23922bcd05f7c67432b5cac30108497" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{% %}&lt;/code&gt;: used to execute statements.</source>
          <target state="translated">&lt;code&gt;{% %}&lt;/code&gt; ：ステートメントの実行に使用されます。</target>
        </trans-unit>
        <trans-unit id="09576fdb009b83f86b6380bbcb6a6b5eb469e166" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{ }}&lt;/code&gt;: used to print the result of an expression evaluation;</source>
          <target state="translated">&lt;code&gt;{{ }}&lt;/code&gt; ：式評価の結果を出力するために使用されます。</target>
        </trans-unit>
        <trans-unit id="7902afc01917933b363ba1cfc39e37ebbf0fe422" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;|&lt;/code&gt;: Applies a filter.</source>
          <target state="translated">&lt;code&gt;|&lt;/code&gt; ：フィルターを適用します。</target>
        </trans-unit>
        <trans-unit id="9e0195ff816065229cd5af85871720f639f1133e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~&lt;/code&gt;: Converts all operands into strings and concatenates them. &lt;code&gt;{{ &quot;Hello
&quot; ~ name ~ &quot;!&quot; }}&lt;/code&gt; would return (assuming &lt;code&gt;name&lt;/code&gt; is &lt;code&gt;'John'&lt;/code&gt;) &lt;code&gt;Hello
John!&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt; ：すべてのオペランドを文字列に変換し、それらを連結します。 &lt;code&gt;{{ &quot;Hello &quot; ~ name ~ &quot;!&quot; }}&lt;/code&gt; が返されます（ &lt;code&gt;name&lt;/code&gt; が &lt;code&gt;'John'&lt;/code&gt; であると想定） &lt;code&gt;Hello John!&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b2cdbfe0e81737baad6ea986e8bcc97cf4822f7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Atom&lt;/em&gt; via the &lt;a href=&quot;https://github.com/reesef/php-twig&quot;&gt;PHP-twig for atom&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;Atom&lt;/em&gt;の&lt;a href=&quot;https://github.com/reesef/php-twig&quot;&gt;PHP小枝を&lt;/a&gt;介した&lt;em&gt;Atom&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf97b6d4e57317ff083f3db0e3adc5a22dd5984f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Coda 2&lt;/em&gt; via the &lt;a href=&quot;https://github.com/muxx/Twig-HTML.mode&quot;&gt;other Twig syntax mode&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;https://github.com/muxx/Twig-HTML.mode&quot;&gt;他のTwig構文モード&lt;/a&gt;による&lt;em&gt;Coda 2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="49bbcee0845768e64e06b8d863fec411c7468d7e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Coda&lt;/em&gt; and &lt;em&gt;SubEthaEdit&lt;/em&gt; via the &lt;a href=&quot;https://github.com/bobthecow/Twig-HTML.mode&quot;&gt;Twig syntax mode&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;https://github.com/bobthecow/Twig-HTML.mode&quot;&gt;Twig構文モード&lt;/a&gt;による&lt;em&gt;Coda&lt;/em&gt;と&lt;em&gt;SubEthaEdit&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f827e5b2d94b2394b4fa0d37b2e2c120904b9544" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Eclipse&lt;/em&gt; via the &lt;a href=&quot;https://github.com/pulse00/Twig-Eclipse-Plugin&quot;&gt;Twig plugin&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;https://github.com/pulse00/Twig-Eclipse-Plugin&quot;&gt;Twigプラグイン&lt;/a&gt;を介した&lt;em&gt;Eclipse&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fab718fb5319fe6abc25162a66cb3c0f71bf1207" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Emacs&lt;/em&gt; via &lt;a href=&quot;http://web-mode.org/&quot;&gt;web-mode.el&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;Emacsの&lt;/em&gt;経由&lt;a href=&quot;http://web-mode.org/&quot;&gt;ウェブ-mode.el&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9e6790591155671e32becfea54139628bfe0fd9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Fast&lt;/em&gt;: Twig compiles templates down to plain optimized PHP code. The overhead compared to regular PHP code was reduced to the very minimum.</source>
          <target state="translated">&lt;em&gt;高速&lt;/em&gt;：Twigはテンプレートを単純な最適化されたPHPコードにコンパイルします。通常のPHPコードと比較したオーバーヘッドは最小限に抑えられました。</target>
        </trans-unit>
        <trans-unit id="644bb1f7c511acce4fbaea8f8de8f6a51b4a7370" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Flexible&lt;/em&gt;: Twig is powered by a flexible lexer and parser. This allows the developer to define their own custom tags and filters, and to create their own DSL.</source>
          <target state="translated">&lt;em&gt;柔軟性&lt;/em&gt;：Twigは、柔軟なレクサーとパーサーを使用しています。これにより、開発者は独自のカスタムタグとフィルターを定義し、独自のDSLを作成できます。</target>
        </trans-unit>
        <trans-unit id="f405311eb35e7a44f513b3afd5686103a05cd1cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GtkSourceView&lt;/em&gt; via the &lt;a href=&quot;https://github.com/gabrielcorpse/gedit-twig-template-language&quot;&gt;Twig language definition&lt;/a&gt; (used by gedit and other projects)</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;https://github.com/gabrielcorpse/gedit-twig-template-language&quot;&gt;Twig言語定義&lt;/a&gt;を介した&lt;em&gt;GtkSourceView&lt;/em&gt;（geditおよびその他のプロジェクトで使用）</target>
        </trans-unit>
        <trans-unit id="8728690ec33fe976a2ace770d51c29cf40ee280a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inheritance&lt;/em&gt;: A template &lt;em&gt;extends&lt;/em&gt; a parent template and overrides some blocks;</source>
          <target state="translated">&lt;em&gt;継承&lt;/em&gt;：テンプレート&lt;em&gt;は&lt;/em&gt;親テンプレートを&lt;em&gt;拡張し&lt;/em&gt;、いくつかのブロックをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="f7556e0a803d3677ca5bc0a999797b522a0cbab9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Komodo&lt;/em&gt; and &lt;em&gt;Komodo Edit&lt;/em&gt; via the Twig highlight/syntax check mode</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;Twigハイライト/構文チェックモードによる&lt;em&gt;Komodo&lt;/em&gt;および&lt;em&gt;Komodo Edit&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b7314feb87ff19b3352f9cd96e8b31c0d6a3899" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Line whitespace trimming&lt;/em&gt; via the &lt;code&gt;~&lt;/code&gt; modifier: Removes all whitespace (excluding newlines). Using this modifier on the right disables the default removal of the first newline inherited from PHP.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;~&lt;/code&gt; 修飾子による&lt;em&gt;行の空白のトリミング&lt;/em&gt;：すべての空白を削除します（改行を除く）。右側でこの修飾子を使用すると、PHPから継承された最初の改行のデフォルトの削除が無効になります。</target>
        </trans-unit>
        <trans-unit id="3961e5c148cea9139269865a7e58244993fab084" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Netbeans&lt;/em&gt; via the &lt;a href=&quot;http://plugins.netbeans.org/plugin/37069/php-twig&quot;&gt;Twig syntax plugin&lt;/a&gt; (until 7.1, native as of 7.2)</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;http://plugins.netbeans.org/plugin/37069/php-twig&quot;&gt;Twig構文プラグイン&lt;/a&gt;を介した&lt;em&gt;Netbeans&lt;/em&gt;（7.1まで、7.2以降のネイティブ）</target>
        </trans-unit>
        <trans-unit id="55884811267a49d7c6951020fa989f7c3db8d278" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Notepad++&lt;/em&gt; via the &lt;a href=&quot;https://github.com/Banane9/notepadplusplus-twig&quot;&gt;Notepad++ Twig Highlighter&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;Notepad ++ &lt;/em&gt;&lt;a href=&quot;https://github.com/Banane9/notepadplusplus-twig&quot;&gt;Twig Highlighter&lt;/a&gt;を介したNotepad ++</target>
        </trans-unit>
        <trans-unit id="2c76f83bc050d05584f27eadf8d652cb73e13dcb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PhpStorm&lt;/em&gt; (native as of 2.1)</source>
          <target state="translated">&lt;em&gt;PhpStorm&lt;/em&gt;（2.1以降のネイティブ）</target>
        </trans-unit>
        <trans-unit id="bbbe94cdc957a0b31b48e6ed87bf35c3e018973b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Replacement&lt;/em&gt;: If you use the filesystem loader, Twig loads the first template it finds in a list of configured directories; a template found in a directory &lt;em&gt;replaces&lt;/em&gt; another one from a directory further in the list.</source>
          <target state="translated">&lt;em&gt;置換&lt;/em&gt;：ファイルシステムローダーを使用する場合、Twigは設定されたディレクトリのリストで最初に見つかったテンプレートをロードします。ディレクトリで見つかったテンプレートは、リストのさらに遠いディレクトリのテンプレートを&lt;em&gt;置き換え&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ec78e5fce8b71edccafc26a589bf93555c8819fe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Secure&lt;/em&gt;: Twig has a sandbox mode to evaluate untrusted template code. This allows Twig to be used as a template language for applications where users may modify the template design.</source>
          <target state="translated">&lt;em&gt;セキュア&lt;/em&gt;：Twigには、信頼できないテンプレートコードを評価するためのサンドボックスモードがあります。これにより、Twigは、ユーザーがテンプレートデザインを変更できるアプリケーションのテンプレート言語として使用できます。</target>
        </trans-unit>
        <trans-unit id="e1005673ab94ac2fbea98dc473a8d47085a5fcbb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Sublime Text&lt;/em&gt; via the &lt;a href=&quot;https://github.com/Anomareh/PHP-Twig.tmbundle&quot;&gt;Twig bundle&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;https://github.com/Anomareh/PHP-Twig.tmbundle&quot;&gt;Twigバンドル&lt;/a&gt;による&lt;em&gt;崇高なテキスト&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f23b9bb5b0bd1b30bcb0a1d5b36b12e4914ea90a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Textmate&lt;/em&gt; via the &lt;a href=&quot;https://github.com/Anomareh/PHP-Twig.tmbundle&quot;&gt;Twig bundle&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;https://github.com/Anomareh/PHP-Twig.tmbundle&quot;&gt;Twigバンドル&lt;/a&gt;を介した&lt;em&gt;テキストメイト&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f81da2db2ac03e2d48a3495235ccd17242e8b797" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TwigExtensionCoreExtension&lt;/em&gt;: Defines all the core features of Twig.</source>
          <target state="translated">&lt;em&gt;TwigExtensionCoreExtension&lt;/em&gt;：Twigのすべてのコア機能を定義します。</target>
        </trans-unit>
        <trans-unit id="dd2b8add7a39bd375230656c111d0fed63414fcb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TwigExtensionDebugExtension&lt;/em&gt;: Defines the &lt;code&gt;dump&lt;/code&gt; function to help debug template variables.</source>
          <target state="translated">&lt;em&gt;TwigExtensionDebugExtension&lt;/em&gt;：テンプレート変数のデバッグに役立つ &lt;code&gt;dump&lt;/code&gt; 関数を定義します。</target>
        </trans-unit>
        <trans-unit id="d162dd8376c57fb73b0f2abf14a376524c612f20" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TwigExtensionEscaperExtension&lt;/em&gt;: Adds automatic output-escaping and the possibility to escape/unescape blocks of code.</source>
          <target state="translated">&lt;em&gt;TwigExtensionEscaperExtension&lt;/em&gt;：自動出力エスケープと、コードのブロックをエスケープ/エスケープ&lt;em&gt;解除&lt;/em&gt;する可能性を追加します。</target>
        </trans-unit>
        <trans-unit id="14547e5d84e85292440da68fc7bfa9ff837e3613" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TwigExtensionOptimizerExtension&lt;/em&gt;: Optimizes the node tree before compilation.</source>
          <target state="translated">&lt;em&gt;TwigExtensionOptimizerExtension&lt;/em&gt;：コンパイル前にノードツリーを最適化します。</target>
        </trans-unit>
        <trans-unit id="fbe2b242ee474912e3505523a02aca9302b08b5f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TwigExtensionProfilerExtension&lt;/em&gt;: Enables the built-in Twig profiler.</source>
          <target state="translated">&lt;em&gt;TwigExtensionProfilerExtension&lt;/em&gt;：組み込みのTwigプロファイラーを有効にします。</target>
        </trans-unit>
        <trans-unit id="b3b70d4d81d45cffb0c26636b9f112b42ce19f1e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TwigExtensionSandboxExtension&lt;/em&gt;: Adds a sandbox mode to the default Twig environment, making it safe to evaluate untrusted code.</source>
          <target state="translated">&lt;em&gt;TwigExtensionSandboxExtension&lt;/em&gt;：デフォルトのTwig環境にサンドボックスモードを追加し、信頼できないコードを安全に評価できるようにします。</target>
        </trans-unit>
        <trans-unit id="067f72085bf188614589621f266c44477864141d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TwigExtensionStringLoaderExtension&lt;/em&gt;: Defines the &lt;code&gt;template_from_string&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;TwigExtensionStringLoaderExtension&lt;/em&gt;： &lt;code&gt;template_from_string&lt;/code&gt; を定義します</target>
        </trans-unit>
        <trans-unit id="1789f90c4413949dd88c06a512a5bdf1114ddee2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Twig_Extension_Core&lt;/em&gt;: Defines all the core features of Twig.</source>
          <target state="translated">&lt;em&gt;Twig_Extension_Core&lt;/em&gt;：Twigのすべてのコア機能を定義します。</target>
        </trans-unit>
        <trans-unit id="c60a803a2fea943e9a86387d5b09122546167acf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Twig_Extension_Escaper&lt;/em&gt;: Adds automatic output-escaping and the possibility to escape/unescape blocks of code.</source>
          <target state="translated">&lt;em&gt;Twig_Extension_Escaper&lt;/em&gt;：自動出力エスケープとコードブロックのエスケープ/エスケープ&lt;em&gt;解除&lt;/em&gt;の可能性を追加します。</target>
        </trans-unit>
        <trans-unit id="cd7e78cd8163b213441f40ea03472a195fc94d4d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Twig_Extension_Optimizer&lt;/em&gt;: Optimizes the node tree before compilation.</source>
          <target state="translated">&lt;em&gt;Twig_Extension_Optimizer&lt;/em&gt;：コンパイル前にノードツリーを最適化します。</target>
        </trans-unit>
        <trans-unit id="2b5f5dd1af92ad7e795b11c9aec9d34b1ebff699" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Twig_Extension_Profiler&lt;/em&gt;: Enabled the built-in Twig profiler.</source>
          <target state="translated">&lt;em&gt;Twig_Extension_Profiler&lt;/em&gt;：組み込みのTwigプロファイラーを有効にしました。</target>
        </trans-unit>
        <trans-unit id="e4804bb4d301db60a6eb43343f760ef4e95dc39a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Twig_Extension_Sandbox&lt;/em&gt;: Adds a sandbox mode to the default Twig environment, making it safe to evaluate untrusted code.</source>
          <target state="translated">&lt;em&gt;Twig_Extension_Sandbox&lt;/em&gt;：デフォルトのTwig環境にサンドボックスモードを追加し、信頼できないコードを安全に評価できるようにします。</target>
        </trans-unit>
        <trans-unit id="73633566be03cfd027f710e2e4d94d8f25c113ef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Vim&lt;/em&gt; via the &lt;a href=&quot;http://jinja.pocoo.org/docs/integration/#vim&quot;&gt;Jinja syntax plugin&lt;/a&gt; or the &lt;a href=&quot;https://github.com/lumiliet/vim-twig&quot;&gt;vim-twig plugin&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;http://jinja.pocoo.org/docs/integration/#vim&quot;&gt;Jinja構文プラグイン&lt;/a&gt;または&lt;a href=&quot;https://github.com/lumiliet/vim-twig&quot;&gt;vim-twigプラグ&lt;/a&gt;インを介した&lt;em&gt;Vim&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2495e8d8f72ff104b72172ab638c4e99a456e87b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Visual Studio Code&lt;/em&gt; via the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=bajdzis.vscode-twig-pack&quot;&gt;Twig pack&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=bajdzis.vscode-twig-pack&quot;&gt;Twigパック&lt;/a&gt;による&lt;em&gt;Visual Studio Code&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="000c3b31e4d79ddd890eb1ccc6846bd1f3daccb7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Whitespace trimming&lt;/em&gt; via the &lt;code&gt;-&lt;/code&gt; modifier: Removes all whitespace (including newlines);</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;-&lt;/code&gt; 修飾子による&lt;em&gt;空白のトリミング&lt;/em&gt;：すべての空白（改行を含む）を削除します。</target>
        </trans-unit>
        <trans-unit id="f590b48fc69dfcc7c372467da1823ab26198ea35" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filter&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;filter&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b0316b1e05af2ac8f5c7c2230ab143f027320de1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;function&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;function&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07ede4f2c5c32b63c52018a687c24a7a9fc9ee43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;global&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;global&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ed4a26bd2219a669612e9e3c2b7b5c6da73a19c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;macro&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;macro&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="329fb0be8efc83873031a165e1d6cda8ca39d02d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;operator&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;operator&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc5dcfd7fa2c24a533fa19007091483ece18fad4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tag&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;tag&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a098a7a90c1a066f05f9dc3183cd1cb9a431e679" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;test&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;test&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ab5624198f715cc64842a1671d08fa559be738e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Evaluate&lt;/strong&gt; the template: It basically means calling the &lt;code&gt;display()&lt;/code&gt; method of the compiled template and passing it the context.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;テンプレートを&lt;strong&gt;評価&lt;/strong&gt;する：基本的には、コンパイルされたテンプレートの &lt;code&gt;display()&lt;/code&gt; メソッドを呼び出し、それにコンテキストを渡すことを意味します。</target>
        </trans-unit>
        <trans-unit id="7ecee2ed311a8f944166e1549d113bc7b87dcc73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Evaluate&lt;/strong&gt; the template: It means calling the &lt;code&gt;display()&lt;/code&gt; method of the compiled template and passing it the context.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;テンプレートを&lt;strong&gt;評価&lt;/strong&gt;する：コンパイルされたテンプレートの &lt;code&gt;display()&lt;/code&gt; メソッドを呼び出して、コンテキストを渡すことを意味します。</target>
        </trans-unit>
        <trans-unit id="2f99f11ba680c92e4084e9a67a5b4d13749339cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Load&lt;/strong&gt; the template: If the template is already compiled, load it and go to the &lt;em&gt;evaluation&lt;/em&gt; step, otherwise:</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;テンプレートを&lt;strong&gt;ロード&lt;/strong&gt;します。テンプレートがすでにコンパイルされている場合は、ロードして&lt;em&gt;評価&lt;/em&gt;ステップに進みます。それ以外の場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="b6ce555ecf27d61dbfcc5bed59611e89e8d4df57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;closures&lt;/strong&gt;: Simple to implement;</source>
          <target state="translated">&lt;strong&gt;クロージャ&lt;/strong&gt;：実装が簡単。</target>
        </trans-unit>
        <trans-unit id="344997d286afaa5a924693f6e5851174c2d72c07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;functions/static methods&lt;/strong&gt;: Simple to implement and fast (used by all Twig core extensions); but it is hard for the runtime to depend on external objects;</source>
          <target state="translated">&lt;strong&gt;関数/静的メソッド&lt;/strong&gt;：実装が簡単で高速（すべてのTwigコア拡張機能で使用）。しかし、ランタイムが外部オブジェクトに依存することは困難です。</target>
        </trans-unit>
        <trans-unit id="be44414b42f51920bf9f02b65dabca69cee2f0bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;object methods&lt;/strong&gt;: More flexible and required if your runtime code depends on external objects.</source>
          <target state="translated">&lt;strong&gt;オブジェクトメソッド&lt;/strong&gt;：ランタイムコードが外部オブジェクトに依存している場合、より柔軟で必須です。</target>
        </trans-unit>
        <trans-unit id="3a48e3a013982ce86b77d65aee0fb32ce1057112" translate="yes" xml:space="preserve">
          <source>A block provides a way to change how a certain part of a template is rendered but it does not interfere in any way with the logic around it.</source>
          <target state="translated">ブロックはテンプレートの特定の部分がどのようにレンダリングされるかを変更する方法を提供しますが、その周りのロジックには一切干渉しません。</target>
        </trans-unit>
        <trans-unit id="baab44730efc2515b4d79e67f8f95a25efc365b7" translate="yes" xml:space="preserve">
          <source>A child template might look like this:</source>
          <target state="translated">子テンプレートは次のようになります。</target>
        </trans-unit>
        <trans-unit id="41644a15607ad8b577e757ac190d0b799dcb62ff" translate="yes" xml:space="preserve">
          <source>A control structure refers to all those things that control the flow of a program - conditionals (i.e. &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;elseif&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt;), &lt;code&gt;for&lt;/code&gt;-loops, as well as things like blocks. Control structures appear inside &lt;code&gt;{% ... %}&lt;/code&gt; blocks.</source>
          <target state="translated">制御構造とは、プログラムのフローを制御するすべてのものを指します-条件（ &lt;code&gt;if&lt;/code&gt; / &lt;code&gt;elseif&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt; ）、 &lt;code&gt;for&lt;/code&gt; ループ、およびブロックなど。制御構造は、 &lt;code&gt;{% ... %}&lt;/code&gt; ブロック内に表示されます。</target>
        </trans-unit>
        <trans-unit id="5222c0a49ab6d5739e705113a8d8ff63f6d0887d" translate="yes" xml:space="preserve">
          <source>A default value can also be defined for macro arguments when not provided in a macro call:</source>
          <target state="translated">マクロ呼び出しで提供されていない場合は、マクロ引数にデフォルト値を定義することもできます。</target>
        </trans-unit>
        <trans-unit id="2cb528dcb5c9cca74dc84640f672da0999cfb904" translate="yes" xml:space="preserve">
          <source>A dynamic filter can define more than one dynamic parts:</source>
          <target state="translated">ダイナミックフィルタは、複数のダイナミックパートを定義することができます。</target>
        </trans-unit>
        <trans-unit id="edee5835c50f6f6da0822d343c438d940ef590f5" translate="yes" xml:space="preserve">
          <source>A filter name containing the special &lt;code&gt;*&lt;/code&gt; character is a dynamic filter and the &lt;code&gt;*&lt;/code&gt; part will match any string:</source>
          <target state="translated">特殊 &lt;code&gt;*&lt;/code&gt; 文字を含むフィルター名は動的フィルターであり、 &lt;code&gt;*&lt;/code&gt; 部分は任意の文字列に一致します。</target>
        </trans-unit>
        <trans-unit id="d429c49e354a1006492382a454968762c1a19102" translate="yes" xml:space="preserve">
          <source>A filter name containing the special &lt;code&gt;*&lt;/code&gt; character is a dynamic filter as the &lt;code&gt;*&lt;/code&gt; can be any string:</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; は任意の文字列にできるため、特殊な &lt;code&gt;*&lt;/code&gt; 文字を含むフィルター名は動的フィルターです。</target>
        </trans-unit>
        <trans-unit id="db796d1ad1542450da59abf1d0f149d41ae6384b" translate="yes" xml:space="preserve">
          <source>A flag that indicates which optimizations to apply (default to &lt;code&gt;-1&lt;/code&gt; &amp;ndash; all optimizations are enabled; set it to &lt;code&gt;0&lt;/code&gt; to disable).</source>
          <target state="translated">適用する最適化を示すフラグ（デフォルトは &lt;code&gt;-1&lt;/code&gt; &amp;ndash;すべての最適化が有効です。無効にするには &lt;code&gt;0&lt;/code&gt; に設定します）。</target>
        </trans-unit>
        <trans-unit id="dc09dc74a2d1f6e901912b73f3fa58ff1a90a56e" translate="yes" xml:space="preserve">
          <source>A flag that indicates which optimizations to apply (default to &lt;code&gt;-1&lt;/code&gt; -- all optimizations are enabled; set it to &lt;code&gt;0&lt;/code&gt; to disable).</source>
          <target state="translated">適用する最適化を示すフラグ（デフォルトは &lt;code&gt;-1&lt;/code&gt; -すべての最適化が有効です。無効にするには &lt;code&gt;0&lt;/code&gt; に設定します）。</target>
        </trans-unit>
        <trans-unit id="e5b9418bc1bf0b8e918a5ab65d79f4bcc67abcc2" translate="yes" xml:space="preserve">
          <source>A global variable is like any other template variable, except that it&amp;rsquo;s available in all templates and macros:</source>
          <target state="translated">グローバル変数は、他のテンプレート変数と同じですが、すべてのテンプレートとマクロで使用できる点が異なります。</target>
        </trans-unit>
        <trans-unit id="e1ad7760538498bde9477e80ef6573d835e9959e" translate="yes" xml:space="preserve">
          <source>A global variable is like any other template variable, except that it's available in all templates and macros:</source>
          <target state="translated">グローバル変数は他のテンプレート変数と同じですが、すべてのテンプレートとマクロで利用可能であることを除いては、グローバル変数は他のテンプレート変数と同じです。</target>
        </trans-unit>
        <trans-unit id="22601ce5c8452cc77789f8e28813a74f070b158c" translate="yes" xml:space="preserve">
          <source>A macro is defined via the &lt;a href=&quot;tags/macro&quot;&gt;macro&lt;/a&gt; tag. Here is a small example (subsequently called &lt;code&gt;forms.html&lt;/code&gt;) of a macro that renders a form element:</source>
          <target state="translated">マクロは、&lt;a href=&quot;tags/macro&quot;&gt;マクロタグ&lt;/a&gt;を介して定義されます。次に、フォーム要素をレンダリングするマクロの小さな例（以降、 &lt;code&gt;forms.html&lt;/code&gt; と呼ばれる）を示します。</target>
        </trans-unit>
        <trans-unit id="d22f4bcd2e83bd0c81adc78392fe7bb86165c18d" translate="yes" xml:space="preserve">
          <source>A profile contains information about time and memory consumption for template, block, and macro executions.</source>
          <target state="translated">プロファイルには、テンプレート、ブロック、マクロの実行のための時間とメモリ消費に関する情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="441d078a3263758d9de80b7139c17cb5ccccbd71" translate="yes" xml:space="preserve">
          <source>A second parameter can also be provided that will be the separator used between the last two items of the sequence:</source>
          <target state="translated">また、シーケンスの最後の2つの項目の間で使用されるセパレータとなる第2のパラメータを提供することができます。</target>
        </trans-unit>
        <trans-unit id="82abec751382c73ddbe0e414e0b3a1e22095906d" translate="yes" xml:space="preserve">
          <source>A sequence can be either an array or an object implementing the &lt;code&gt;Traversable&lt;/code&gt; interface.</source>
          <target state="translated">シーケンスは、 &lt;code&gt;Traversable&lt;/code&gt; インターフェースを実装する配列またはオブジェクトのいずれかです。</target>
        </trans-unit>
        <trans-unit id="a990fcb3d5f6df58a19b54d69edadbec46d0abea" translate="yes" xml:space="preserve">
          <source>A template can be customized in two different ways:</source>
          <target state="translated">テンプレートは2つの方法でカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="0dfa5740f5e7b1e6c40d4b2a84679a54fe3cbc9e" translate="yes" xml:space="preserve">
          <source>A template contains &lt;strong&gt;variables&lt;/strong&gt; or &lt;strong&gt;expressions&lt;/strong&gt;, which get replaced with values when the template is evaluated, and &lt;strong&gt;tags&lt;/strong&gt;, which control the logic of the template.</source>
          <target state="translated">テンプレートには、テンプレートの評価時に値に置き換えられる&lt;strong&gt;変数&lt;/strong&gt;または&lt;strong&gt;式&lt;/strong&gt;と、テンプレートのロジックを制御する&lt;strong&gt;タグ&lt;/strong&gt;が含まれ&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="10b1029706f6054c679df6774fbf24814de198d8" translate="yes" xml:space="preserve">
          <source>A template contains &lt;strong&gt;variables&lt;/strong&gt; or &lt;strong&gt;expressions&lt;/strong&gt;, which get replaced with values when the template is evaluated, and &lt;strong&gt;tags&lt;/strong&gt;, which control the template&amp;rsquo;s logic.</source>
          <target state="translated">テンプレートが含まれている&lt;strong&gt;変数&lt;/strong&gt;や&lt;strong&gt;式の&lt;/strong&gt;テンプレートが評価された値、およびに置き換えられます、&lt;strong&gt;タグ&lt;/strong&gt;テンプレートのロジックを制御し、。</target>
        </trans-unit>
        <trans-unit id="36e07b0a6e684781e673a7d109ead9317dec6616" translate="yes" xml:space="preserve">
          <source>A template is a regular text file. It can generate any text-based format (HTML, XML, CSV, LaTeX, etc.). It doesn&amp;rsquo;t have a specific extension, &lt;code&gt;.html&lt;/code&gt; or &lt;code&gt;.xml&lt;/code&gt; are just fine.</source>
          <target state="translated">テンプレートは通常のテキストファイルです。任意のテキストベースの形式（HTML、XML、CSV、LaTeXなど）を生成できます。特定の拡張子はありません &lt;code&gt;.html&lt;/code&gt; または &lt;code&gt;.xml&lt;/code&gt; で問題ありません。</target>
        </trans-unit>
        <trans-unit id="2675cb78fe461e1ab586685b1f1befd56b5bd810" translate="yes" xml:space="preserve">
          <source>A template is simply a text file. It can generate any text-based format (HTML, XML, CSV, LaTeX, etc.). It doesn't have a specific extension, &lt;code&gt;.html&lt;/code&gt; or &lt;code&gt;.xml&lt;/code&gt; are just fine.</source>
          <target state="translated">テンプレートは単なるテキストファイルです。テキストベースのフォーマット（HTML、XML、CSV、LaTeXなど）を生成できます。特定の拡張子はありません &lt;code&gt;.html&lt;/code&gt; または &lt;code&gt;.xml&lt;/code&gt; で十分です。</target>
        </trans-unit>
        <trans-unit id="4336f319bcccbf29d698330cf0b70953cab170a4" translate="yes" xml:space="preserve">
          <source>Accessing the parent Context in Nested Loops</source>
          <target state="translated">入れ子になったループでの親コンテキストへのアクセス</target>
        </trans-unit>
        <trans-unit id="bbf67a7b7c898637de98d2a7d7a47045591544e1" translate="yes" xml:space="preserve">
          <source>Add a tag by calling the &lt;code&gt;addTokenParser&lt;/code&gt; method on the &lt;code&gt;\Twig\Environment&lt;/code&gt; instance:</source>
          <target state="translated">&lt;code&gt;\Twig\Environment&lt;/code&gt; インスタンスで &lt;code&gt;addTokenParser&lt;/code&gt; メソッドを呼び出して、タグを追加します。</target>
        </trans-unit>
        <trans-unit id="1178a2b0d872c0e7863f6975a16a91251f2429c7" translate="yes" xml:space="preserve">
          <source>Adding a condition</source>
          <target state="translated">条件の追加</target>
        </trans-unit>
        <trans-unit id="6fc2836d2d4d8189a9f3229a87bdb63089561344" translate="yes" xml:space="preserve">
          <source>Adding a tag in an extension can be done by overriding the &lt;code&gt;getTokenParsers()&lt;/code&gt; method. This method must return an array of tags to add to the Twig environment:</source>
          <target state="translated">拡張機能にタグを追加するには、 &lt;code&gt;getTokenParsers()&lt;/code&gt; メソッドをオーバーライドします。このメソッドは、Twig環境に追加するタグの配列を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="e6f8ce7b80c049316a2bf46357c5117f1b64b2f2" translate="yes" xml:space="preserve">
          <source>Adding a tag is as simple as calling the &lt;code&gt;addTokenParser&lt;/code&gt; method on the &lt;code&gt;Twig_Environment&lt;/code&gt; instance:</source>
          <target state="translated">タグの追加は、 &lt;code&gt;Twig_Environment&lt;/code&gt; インスタンスで &lt;code&gt;addTokenParser&lt;/code&gt; メソッドを呼び出すのと同じくらい簡単です。</target>
        </trans-unit>
        <trans-unit id="cc33c6eb93ffaa6edfdcc52e77411fd547eceab2" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;set&lt;/code&gt; call, the &lt;code&gt;foo&lt;/code&gt; variable is available in the template like any other ones:</source>
          <target state="translated">後に &lt;code&gt;set&lt;/code&gt; コール、 &lt;code&gt;foo&lt;/code&gt; という変数は、他のもののようなテンプレートで提供されています：</target>
        </trans-unit>
        <trans-unit id="b27ec9f6cce7e21cf288357baaec5afb94e7ae59" translate="yes" xml:space="preserve">
          <source>Afterwards you need to install a markdown library of your choice. Some of them are mentioned in the &lt;code&gt;require-dev&lt;/code&gt; section of the &lt;code&gt;twig/markdown-extra&lt;/code&gt; package.</source>
          <target state="translated">その後、選択したマークダウンライブラリをインストールする必要があります。それらのいくつかは、 &lt;code&gt;twig/markdown-extra&lt;/code&gt; パッケージの &lt;code&gt;require-dev&lt;/code&gt; セクションに記載されています。</target>
        </trans-unit>
        <trans-unit id="9f1640cf93f375b54ba7491282068bbb93d4e76c" translate="yes" xml:space="preserve">
          <source>Again, it works, but it looks weird. A filter transforms the passed value to something else but here we use the value to indicate the number of words to generate (so, &lt;code&gt;40&lt;/code&gt; is an argument of the filter, not the value we want to transform).</source>
          <target state="translated">再び、それは機能しますが、奇妙に見えます。フィルターは渡された値を別の値に変換しますが、ここでは値を使用して生成する単語の数を示します（したがって、 &lt;code&gt;40&lt;/code&gt; はフィルターの引数であり、変換する値ではありません）。</target>
        </trans-unit>
        <trans-unit id="7c2cb603b676e29afd274939a215d7191ccfbd24" translate="yes" xml:space="preserve">
          <source>Again, it works. But a filter should transform the passed value to something else. Here, we use the value to indicate the number of words to generate (so, &lt;code&gt;40&lt;/code&gt; is an argument of the filter, not the value we want to transform).</source>
          <target state="translated">繰り返しますが、それは機能します。ただし、フィルターは渡された値を別の値に変換する必要があります。ここでは、値を使用して生成する単語の数を示します（したがって、 &lt;code&gt;40&lt;/code&gt; はフィルターの引数であり、変換する値ではありません）。</target>
        </trans-unit>
        <trans-unit id="20986f09976c5c0477bfd60ef87d08c14e2225ed" translate="yes" xml:space="preserve">
          <source>All loaders implement the &lt;code&gt;Twig_LoaderInterface&lt;/code&gt;:</source>
          <target state="translated">すべてのローダーは &lt;code&gt;Twig_LoaderInterface&lt;/code&gt; を実装します。</target>
        </trans-unit>
        <trans-unit id="6280ca772dd8c46297159a55d0fd0277f37c007f" translate="yes" xml:space="preserve">
          <source>All loaders implement the &lt;code&gt;\Twig\Loader\LoaderInterface&lt;/code&gt;:</source>
          <target state="translated">すべてのローダーは &lt;code&gt;\Twig\Loader\LoaderInterface&lt;/code&gt; 実装します。</target>
        </trans-unit>
        <trans-unit id="92e357f03bba83bbea3a7ea2e761fc0c7b8604b8" translate="yes" xml:space="preserve">
          <source>All template loaders can cache the compiled templates on the filesystem for future reuse. It speeds up Twig a lot as templates are only compiled once.</source>
          <target state="translated">すべてのテンプレートローダーは、コンパイルされたテンプレートをファイルシステム上にキャッシュし、将来の再利用のために利用できます。テンプレートは一度だけコンパイルされるので、Twigの処理速度を大幅に向上させることができます。</target>
        </trans-unit>
        <trans-unit id="4337c2273f6cbfb94fdcadf01dadd1f09383982d" translate="yes" xml:space="preserve">
          <source>All template loaders can cache the compiled templates on the filesystem for future reuse. It speeds up Twig a lot as templates are only compiled once; and the performance boost is even larger if you use a PHP accelerator such as APC. See the &lt;code&gt;cache&lt;/code&gt; and &lt;code&gt;auto_reload&lt;/code&gt; options of &lt;code&gt;Twig_Environment&lt;/code&gt; above for more information.</source>
          <target state="translated">すべてのテンプレートローダーは、コンパイルされたテンプレートを将来の再利用のためにファイルシステムにキャッシュできます。テンプレートは一度だけコンパイルされるので、Twigを大幅に高速化します。APCなどのPHPアクセラレータを使用すると、パフォーマンスがさらに向上します。参照 &lt;code&gt;cache&lt;/code&gt; と &lt;code&gt;auto_reload&lt;/code&gt; のオプション &lt;code&gt;Twig_Environment&lt;/code&gt; 詳細については、上記を。</target>
        </trans-unit>
        <trans-unit id="f7561288669145954b170876ce2566a454a1f0fd" translate="yes" xml:space="preserve">
          <source>All the &lt;code&gt;block&lt;/code&gt; tag does is to tell the template engine that a child template may override those portions of the template.</source>
          <target state="translated">子テンプレートがテンプレートのこれらの部分をオーバーライドする可能性があることをテンプレートエンジンに伝えることだけが、 &lt;code&gt;block&lt;/code&gt; タグです。</target>
        </trans-unit>
        <trans-unit id="bb23bc4af1271d89329cb1a26b890e3aad74103d" translate="yes" xml:space="preserve">
          <source>Also you can deprecate a block in the following way:</source>
          <target state="translated">また、以下のようにブロックを非推奨にすることもできます。</target>
        </trans-unit>
        <trans-unit id="9b93c0bc408b319af0a081f79a8c97cd8cf1301f" translate="yes" xml:space="preserve">
          <source>Also, &lt;a href=&quot;https://twigfiddle.com/&quot;&gt;TwigFiddle&lt;/a&gt; is an online service that allows you to execute Twig templates from a browser; it supports all versions of Twig.</source>
          <target state="translated">また、&lt;a href=&quot;https://twigfiddle.com/&quot;&gt;TwigFiddle&lt;/a&gt;は、ブラウザからTwigテンプレートを実行できるオンラインサービスです。Twigのすべてのバージョンをサポートしています。</target>
        </trans-unit>
        <trans-unit id="854265b2a029f852d0bc224561c502812f6d7747" translate="yes" xml:space="preserve">
          <source>Alternatively you can import names from the template into the current namespace via the &lt;code&gt;from&lt;/code&gt; tag:</source>
          <target state="translated">または、 &lt;code&gt;from&lt;/code&gt; タグを使用して、テンプレートから現在の名前空間に名前をインポートすることもできます。</target>
        </trans-unit>
        <trans-unit id="d64478597926444af94eb516059d628d0e84afea" translate="yes" xml:space="preserve">
          <source>Alternatively you can import names from the template into the current namespace:</source>
          <target state="translated">また、テンプレートから現在のネームスペースに名前をインポートすることもできます。</target>
        </trans-unit>
        <trans-unit id="7cd3f686536e1a8a5feef73223de57e1de3c3afd" translate="yes" xml:space="preserve">
          <source>Alternatively, you can import individual macro names from a template into the current namespace via the &lt;a href=&quot;tags/from&quot;&gt;from&lt;/a&gt; tag and optionally alias them:</source>
          <target state="translated">または、&lt;a href=&quot;tags/from&quot;&gt;from&lt;/a&gt;タグを使用して、テンプレートから個々のマクロ名を現在のネームスペースにインポートし、オプションでそれらにエイリアスを設定できます。</target>
        </trans-unit>
        <trans-unit id="0f3e0777d038437080de7fae66ec93e0eeef3783" translate="yes" xml:space="preserve">
          <source>An absolute path where to store the compiled templates, or &lt;code&gt;false&lt;/code&gt; to disable caching (which is the default).</source>
          <target state="translated">コンパイルされたテンプレートを保存する絶対パス、または &lt;code&gt;false&lt;/code&gt; （デフォルト）はキャッシュを無効にします。</target>
        </trans-unit>
        <trans-unit id="001e0fa53d02fa64f509bebb272fffb950b32ef3" translate="yes" xml:space="preserve">
          <source>An extension is a class that implements the following interface:</source>
          <target state="translated">拡張機能とは、以下のインターフェイスを実装したクラスのことです。</target>
        </trans-unit>
        <trans-unit id="72013e231dc45052f94b813f04210719a13cee6e" translate="yes" xml:space="preserve">
          <source>And here is how to escape variables included in JavaScript code:</source>
          <target state="translated">そして、JavaScriptのコードに含まれる変数をエスケープする方法をご紹介します。</target>
        </trans-unit>
        <trans-unit id="12e1a982eb58b05927654644fe66fcc880fe66c8" translate="yes" xml:space="preserve">
          <source>And here is how to use it in a template:</source>
          <target state="translated">そして、テンプレートでの使い方です。</target>
        </trans-unit>
        <trans-unit id="e6fe04587380e5a62ba1555278d47c8e5b944255" translate="yes" xml:space="preserve">
          <source>And here is the code for &lt;code&gt;vertical_boxes_skeleton.twig&lt;/code&gt;:</source>
          <target state="translated">そして、これが &lt;code&gt;vertical_boxes_skeleton.twig&lt;/code&gt; のコードです。</target>
        </trans-unit>
        <trans-unit id="36050e6e23cbafc55c782796b0c0eddf58d22524" translate="yes" xml:space="preserve">
          <source>And if the expression evaluates to a &lt;code&gt;Twig_Template&lt;/code&gt; or a &lt;code&gt;Twig_TemplateWrapper&lt;/code&gt; instance, Twig will use it directly:</source>
          <target state="translated">そして、式が &lt;code&gt;Twig_Template&lt;/code&gt; または &lt;code&gt;Twig_TemplateWrapper&lt;/code&gt; インスタンスに評価される場合、Twigはそれを直接使用します。</target>
        </trans-unit>
        <trans-unit id="af7d7aa2e97aa5f2efa7b19f368291f7ebfe4cde" translate="yes" xml:space="preserve">
          <source>And if the expression evaluates to a &lt;code&gt;\Twig\Template&lt;/code&gt; or a &lt;code&gt;\Twig\TemplateWrapper&lt;/code&gt; instance, Twig will use it directly:</source>
          <target state="translated">また、式が &lt;code&gt;\Twig\Template&lt;/code&gt; または &lt;code&gt;\Twig\TemplateWrapper&lt;/code&gt; インスタンスに評価される場合、Twigはそれを直接使用します。</target>
        </trans-unit>
        <trans-unit id="b6f04d0927c83a82c1eb6e9dc548ad1c2bafda38" translate="yes" xml:space="preserve">
          <source>And the following template to display all messages in all topics:</source>
          <target state="translated">そして、すべてのトピックにすべてのメッセージを表示するには、以下のテンプレートを使用します。</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="040ed443ab4fd79e3d209b36badedb69fbe56f90" translate="yes" xml:space="preserve">
          <source>Arguments of a macro are always optional.</source>
          <target state="translated">マクロの引数は常にオプションです。</target>
        </trans-unit>
        <trans-unit id="e646603e8d8c75f866daa426b7f32a29c6fd65d2" translate="yes" xml:space="preserve">
          <source>Arrays and hashes can be nested:</source>
          <target state="translated">配列とハッシュは入れ子にすることができます。</target>
        </trans-unit>
        <trans-unit id="da43dabafa3e7e1066b2d90210aae00d40fe1590" translate="yes" xml:space="preserve">
          <source>As a matter of fact, the template name can be any valid expression, such as the following:</source>
          <target state="translated">実際のところ、テンプレート名は、以下のような任意の有効な式にすることができます。</target>
        </trans-unit>
        <trans-unit id="60d4af2021444a8d8bae3ca89173b100f5df0603" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, use functions for frequently used features and global objects for everything else.</source>
          <target state="translated">経験則として、よく使う機能には関数を使い、それ以外のものにはグローバルオブジェクトを使うようにしましょう。</target>
        </trans-unit>
        <trans-unit id="692f65e3a76c0b3b657ed9387d4774bc74a9e3ef" translate="yes" xml:space="preserve">
          <source>As a shortcut, you can use the &lt;code&gt;format_*_number&lt;/code&gt; filters by replacing</source>
          <target state="translated">ショートカットとして、次のように置き換えることで &lt;code&gt;format_*_number&lt;/code&gt; フィルターを使用できます</target>
        </trans-unit>
        <trans-unit id="8faf22ad587b8068fb8c778bd51400f3da8faa2a" translate="yes" xml:space="preserve">
          <source>As embedded templates do not have &quot;names&quot;, auto-escaping strategies based on the template name won't work as expected if you change the context (for instance, if you embed a CSS/JavaScript template into an HTML one). In that case, explicitly set the default auto-escaping strategy with the &lt;code&gt;autoescape&lt;/code&gt; tag.</source>
          <target state="translated">埋め込みテンプレートには「名前」がないため、コンテキストを変更すると（たとえば、CSS / JavaScriptテンプレートをHTMLに埋め込んだ場合）、テンプレート名に基づく自動エスケープ戦略は期待どおりに機能しません。その場合、 &lt;code&gt;autoescape&lt;/code&gt; タグを使用してデフォルトの自動エスケープ戦略を明示的に設定します。</target>
        </trans-unit>
        <trans-unit id="c40e258ff49f6d9390243385adea75a0abde4252" translate="yes" xml:space="preserve">
          <source>As embedded templates do not have &amp;ldquo;names&amp;rdquo;, auto-escaping strategies based on the template name won&amp;rsquo;t work as expected if you change the context (for instance, if you embed a CSS/JavaScript template into an HTML one). In that case, explicitly set the default auto-escaping strategy with the &lt;code&gt;autoescape&lt;/code&gt; tag.</source>
          <target state="translated">埋め込まれたテンプレートには「名前」がないため、コンテキストを変更した場合（たとえば、CSS / JavaScriptテンプレートをHTMLテンプレートに埋め込んだ場合）、テンプレート名に基づく自動エスケープ戦略は期待どおりに機能しません。その場合は、 &lt;code&gt;autoescape&lt;/code&gt; タグを使用してデフォルトの自動エスケープ戦略を明示的に設定してください。</target>
        </trans-unit>
        <trans-unit id="1a5434b6014c06b012b48905cb05a3574ae61a62" translate="yes" xml:space="preserve">
          <source>As syntactic sugar, you can also use the &lt;code&gt;[]&lt;/code&gt; notation:</source>
          <target state="translated">構文糖として、 &lt;code&gt;[]&lt;/code&gt; 表記も使用できます。</target>
        </trans-unit>
        <trans-unit id="ef2ce8b617c3dabbb7d8ddc1c811cdbfd82ac5cf" translate="yes" xml:space="preserve">
          <source>As templates are generally stored on the filesystem, Twig also comes with a filesystem loader:</source>
          <target state="translated">テンプレートは一般的にファイルシステムに保存されるので、Twigにはファイルシステムローダーも付属しています。</target>
        </trans-unit>
        <trans-unit id="d6b073394fbe14b74141808af30d5117f797398e" translate="yes" xml:space="preserve">
          <source>As the filter uses a regular expression behind the scenes, its performance is directly related to the text size you are working on (remember that filters are executed at runtime).</source>
          <target state="translated">フィルタは裏で正規表現を使っているので、 その性能は作業しているテキストサイズに直接関係します (フィルタは実行時に実行されることを覚えておいてください)。</target>
        </trans-unit>
        <trans-unit id="b162cb9a3db0568369f30dabc8925b952214aea9" translate="yes" xml:space="preserve">
          <source>As the resolution of functions and filters is done during compilation, there is no overhead when registering these callbacks.</source>
          <target state="translated">関数やフィルタの解決はコンパイル時に行われるため、これらのコールバックを登録する際のオーバーヘッドがありません。</target>
        </trans-unit>
        <trans-unit id="d7b5ef95ea3e664c909e155001a7d5b2e1984f6e" translate="yes" xml:space="preserve">
          <source>As the stream has a &lt;code&gt;__toString()&lt;/code&gt; method, you can have a textual representation of it by echoing the object:</source>
          <target state="translated">ストリームには &lt;code&gt;__toString()&lt;/code&gt; メソッドがあるため、オブジェクトをエコーすることでテキストで表現できます。</target>
        </trans-unit>
        <trans-unit id="0ea9a412d1fe41be92c04bd44bca509f8daa62e3" translate="yes" xml:space="preserve">
          <source>As the template name for the parent can be any valid Twig expression, it&amp;rsquo;s possible to make the inheritance mechanism conditional:</source>
          <target state="translated">親のテンプレート名は任意の有効なTwig式にすることができるため、継承メカニズムを条件付きにすることができます。</target>
        </trans-unit>
        <trans-unit id="5becfbd63fc2fa3adafdfab34d36a25456768fbb" translate="yes" xml:space="preserve">
          <source>As the template name for the parent can be any valid Twig expression, it's possible to make the inheritance mechanism conditional:</source>
          <target state="translated">親のテンプレート名は任意の有効なTwig式にすることができるので、継承の仕組みを条件付きにすることができます。</target>
        </trans-unit>
        <trans-unit id="29909a85f8900892eb541f027aefa18d0fce0fd9" translate="yes" xml:space="preserve">
          <source>As you can see in the previous recipe, we reference the template in the exact same way as we would have done it with a regular filesystem loader. This is the key to be able to mix and match templates coming from the database, the filesystem, or any other loader for that matter: the template name should be a logical name, and not the path from the filesystem:</source>
          <target state="translated">前のレシピで見たように、通常のファイルシステムローダーと全く同じ方法でテンプレートを参照しています。これが、データベース、ファイルシステム、あるいは他のローダーから来るテンプレートをミックスしたり、マッチさせたりするための鍵となります。</target>
        </trans-unit>
        <trans-unit id="7cb099f6e8eeb2d93444d80f05c81eb87e9c997b" translate="yes" xml:space="preserve">
          <source>Automatic Escaping</source>
          <target state="translated">自動エスケープ</target>
        </trans-unit>
        <trans-unit id="a39cfeeebe89147faf69eee8adc690a872cab9bf" translate="yes" xml:space="preserve">
          <source>Automatic escaping is not applied if the last filter in the chain is marked safe for the current context (e.g. &lt;code&gt;html&lt;/code&gt; or &lt;code&gt;js&lt;/code&gt;). &lt;code&gt;escape&lt;/code&gt; and &lt;code&gt;escape('html')&lt;/code&gt; are marked safe for HTML, &lt;code&gt;escape('js')&lt;/code&gt; is marked safe for JavaScript, &lt;code&gt;raw&lt;/code&gt; is marked safe for everything.</source>
          <target state="translated">チェーンの最後のフィルターが現在のコンテキスト（例： &lt;code&gt;html&lt;/code&gt; または &lt;code&gt;js&lt;/code&gt; ）に対して安全であるとマークされている場合、自動エスケープは適用されません。 &lt;code&gt;escape&lt;/code&gt; および &lt;code&gt;escape('html')&lt;/code&gt; はHTMLに対して安全とマークされ、 &lt;code&gt;escape('js')&lt;/code&gt; はJavaScriptに対して安全とマークされ、 &lt;code&gt;raw&lt;/code&gt; はすべてに対して安全とマークされます。</target>
        </trans-unit>
        <trans-unit id="a95a93dea4bd76ef1b6385cb96f21a4ab35c02b5" translate="yes" xml:space="preserve">
          <source>Basic API Usage</source>
          <target state="translated">基本的なAPIの使い方</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="8503764862d5fb3f259084f1f1f824ca4e4e5854" translate="yes" xml:space="preserve">
          <source>Be careful when using the &lt;code&gt;raw&lt;/code&gt; filter inside expressions:</source>
          <target state="translated">式内で &lt;code&gt;raw&lt;/code&gt; フィルターを使用するときは注意してください。</target>
        </trans-unit>
        <trans-unit id="6d523673b445f9a685830922be5e485c5e6bb8d2" translate="yes" xml:space="preserve">
          <source>Be warned that &lt;a href=&quot;templates#named-arguments&quot;&gt;named arguments&lt;/a&gt; passed to a variadic filter cannot be checked for validity as they will automatically end up in the option array.</source>
          <target state="translated">可変個引数フィルターに渡された&lt;a href=&quot;templates#named-arguments&quot;&gt;名前付き引数&lt;/a&gt;は、オプション配列に自動的に含まれるため、有効性を確認できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="9dd84aabcec3468fc16cf65177ebfe2a4bca2a32" translate="yes" xml:space="preserve">
          <source>Be warned that named arguments passed to a variadic filter cannot be checked for validity as they will automatically end up in the option array.</source>
          <target state="translated">variadic フィルタに渡される名前付き引数は、その有効性をチェックすることができないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="a64d1c3efe0b5136e8e87c51f07117c9455945f2" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;use&lt;/code&gt; statements are resolved independently of the context passed to the template, the template reference cannot be an expression.</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; ステートメントはテンプレートに渡されるコンテキストとは関係なく解決されるため、テンプレート参照を式にすることはできません。</target>
        </trans-unit>
        <trans-unit id="5aaaa72d621b178c6d4fea096e2daeace9123651" translate="yes" xml:space="preserve">
          <source>Before extending Twig, you must understand the differences between all the different possible extension points and when to use them.</source>
          <target state="translated">Twigを拡張する前に、可能なすべての異なる拡張ポイントの違いと、それらを使用するタイミングを理解しておく必要があります。</target>
        </trans-unit>
        <trans-unit id="31d567b0c5a13d010b449bf26ab42c9158eaa357" translate="yes" xml:space="preserve">
          <source>Before writing your own extensions, have a look at the Twig official extension repository: &lt;a href=&quot;https://github.com/twigphp/Twig-extensions&quot;&gt;https://github.com/twigphp/Twig-extensions&lt;/a&gt;.</source>
          <target state="translated">独自の拡張機能を作成する前に、Twigの公式拡張リポジトリ&lt;a href=&quot;https://github.com/twigphp/Twig-extensions&quot;&gt;https://github.com/twigphp/Twig-extensionsをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e828016ac72660eb882fef90ef09bf394557888" translate="yes" xml:space="preserve">
          <source>Below is a minimal template that illustrates a few basics. We will cover further details later on:</source>
          <target state="translated">以下は、いくつかの基本的なことを説明する最小限のテンプレートです。詳細は後ほどご紹介します。</target>
        </trans-unit>
        <trans-unit id="332402f75c52ee92be87d91ae0d82a8fb020f98f" translate="yes" xml:space="preserve">
          <source>Besides plain numbers, the filter can also format numbers in various styles:</source>
          <target state="translated">単純な数値のほかにも、 フィルタはさまざまな形式で数値をフォーマットすることができます。</target>
        </trans-unit>
        <trans-unit id="f0df383d4e0feb1807cf6bfd346518081aef6280" translate="yes" xml:space="preserve">
          <source>Block Nesting and Scope</source>
          <target state="translated">ブロックのネスティングとスコープ</target>
        </trans-unit>
        <trans-unit id="165742734396b0ef5e028adac4baa2a29de7dece" translate="yes" xml:space="preserve">
          <source>Block Shortcuts</source>
          <target state="translated">ブロックのショートカット</target>
        </trans-unit>
        <trans-unit id="3a12fc742b6fddd2cd490f93896cfff560e93cc9" translate="yes" xml:space="preserve">
          <source>Block names must consist of alphanumeric characters, and underscores. The first char can&amp;rsquo;t be a digit and dashes are not permitted.</source>
          <target state="translated">ブロック名は、英数字とアンダースコアで構成する必要があります。最初の文字を数字にすることはできず、ダッシュは使用できません。</target>
        </trans-unit>
        <trans-unit id="2822d237ce1b5d7940a3f7ee29b09a6a59fa5a6a" translate="yes" xml:space="preserve">
          <source>Block names should consist of alphanumeric characters, and underscores. Dashes are not permitted.</source>
          <target state="translated">ブロック名は英数字とアンダースコアで構成してください。ダッシュは使用できません。</target>
        </trans-unit>
        <trans-unit id="b45c99b7e2e655ae0e097dcc9f67590cc93aa543" translate="yes" xml:space="preserve">
          <source>Blocks are used for inheritance and act as placeholders and replacements at the same time. They are documented in detail in the documentation for the &lt;a href=&quot;extends&quot;&gt;extends&lt;/a&gt; tag.</source>
          <target state="translated">ブロックは継承に使用され、プレースホルダーおよび置換として同時に機能します。それらは&lt;a href=&quot;extends&quot;&gt;extends&lt;/a&gt;タグのドキュメントで詳細に説明されています。</target>
        </trans-unit>
        <trans-unit id="4c9f0d001be7e94743eaaacf19d3485d02a206f5" translate="yes" xml:space="preserve">
          <source>Blocks can be nested for more complex layouts. Per default, blocks have access to variables from outer scopes:</source>
          <target state="translated">ブロックは、より複雑なレイアウトのために入れ子にすることができます。デフォルトでは、ブロックは外部スコープから変数にアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="b03a3cc6ded72f2ac8774da6e07b8b0105a62b55" translate="yes" xml:space="preserve">
          <source>Boolean decision</source>
          <target state="translated">ブール決定</target>
        </trans-unit>
        <trans-unit id="86b0d6eb95c3db4d81992dedeb5105051f9d0d45" translate="yes" xml:space="preserve">
          <source>Boolean evaluation</source>
          <target state="translated">ブール評価</target>
        </trans-unit>
        <trans-unit id="3f1f1a237f0e89ebaf2f3bd2bf9e31d13d400bb7" translate="yes" xml:space="preserve">
          <source>Built-in Extensions</source>
          <target state="translated">ビルトインエクステンション</target>
        </trans-unit>
        <trans-unit id="14f126509f4335c317af4a2a32904aa83d96efc8" translate="yes" xml:space="preserve">
          <source>Built-in Loaders</source>
          <target state="translated">内蔵ローダー</target>
        </trans-unit>
        <trans-unit id="b63771e3f672b156116c4dccd8a736f58cd3ce53" translate="yes" xml:space="preserve">
          <source>Built-in escapers cannot be overridden mainly because they should be considered as the final implementation and also for better performance.</source>
          <target state="translated">組み込みのエスケーパは、主に最終的な実装として考慮されるべきであり、より良いパフォーマンスのためにも考慮されるべきであるため、オーバーライドすることはできません。</target>
        </trans-unit>
        <trans-unit id="655a1642bfb010336f36b2774be0af4982945073" translate="yes" xml:space="preserve">
          <source>Built-in escapers cannot be overridden mainly they should be considered as the final implementation and also for better performance.</source>
          <target state="translated">組み込みのエスケープは、主に最終的な実装として、またより良いパフォーマンスのために考慮されるべきです。</target>
        </trans-unit>
        <trans-unit id="042037f853230f37eaa1920067476ade19e011ee" translate="yes" xml:space="preserve">
          <source>But as with PHP functions, macros don&amp;rsquo;t have access to the current template variables.</source>
          <target state="translated">ただし、PHP関数と同様に、マクロは現在のテンプレート変数にアクセスできません。</target>
        </trans-unit>
        <trans-unit id="fff6688e0887b9682eb8a82f475996d2ee4e7467" translate="yes" xml:space="preserve">
          <source>But as with PHP functions, macros don't have access to the current template variables.</source>
          <target state="translated">しかし、PHPの関数と同様に、マクロは現在のテンプレート変数にアクセスすることができません。</target>
        </trans-unit>
        <trans-unit id="cc4d6faf3ec2dc32b0b39dd5d3516f5f8fa82c4e" translate="yes" xml:space="preserve">
          <source>But how do you combine both: &lt;em&gt;replace&lt;/em&gt; a template that also extends itself (aka a template in a directory further in the list)?</source>
          <target state="translated">しかし、両方をどのように組み合わせるのですか？それ自体を拡張するテンプレート（別名リストのさらに上のディレクトリにあるテンプレート）を&lt;em&gt;置き換え&lt;/em&gt;ますか？</target>
        </trans-unit>
        <trans-unit id="d5766260fddc60d59a594927a796ea29ec334c24" translate="yes" xml:space="preserve">
          <source>By default, a loop iterates over the values of the sequence. You can iterate on keys by using the &lt;code&gt;keys&lt;/code&gt; filter:</source>
          <target state="translated">デフォルトでは、ループはシーケンスの値を反復処理します。 &lt;code&gt;keys&lt;/code&gt; フィルターを使用して、キーを反復処理できます。</target>
        </trans-unit>
        <trans-unit id="b1b7eab0b2a558465a8058aca84695e2f768a032" translate="yes" xml:space="preserve">
          <source>By default, all optimizations are turned on. You can select the ones you want to enable by passing them to the constructor:</source>
          <target state="translated">デフォルトでは、すべての最適化がオンになっています。コンストラクタに渡すことで、有効にしたいものを選択することができます。</target>
        </trans-unit>
        <trans-unit id="103ffb60439f0bf5fe8eb8a6d89f56640c56147c" translate="yes" xml:space="preserve">
          <source>By default, auto-escaping uses the &lt;code&gt;html&lt;/code&gt; escaping strategy. If you output variables in other contexts, you need to explicitly escape them with the appropriate escaping strategy:</source>
          <target state="translated">デフォルトでは、自動エスケープは &lt;code&gt;html&lt;/code&gt; エスケープ戦略を使用します。他のコンテキストで変数を出力する場合は、適切なエスケープ戦略で明示的にエスケープする必要があります。</target>
        </trans-unit>
        <trans-unit id="841ca308886743182de433a36e60161a852ad2a1" translate="yes" xml:space="preserve">
          <source>By default, included templates have access to the same context as the template which includes them. This means that any variable defined in the main template will be available in the included template too:</source>
          <target state="translated">デフォルトでは、インクルードされたテンプレートは、インクルードされたテンプレートと同じコンテキストにアクセスできます。これは、メインテンプレートで定義されている変数は、インクルードされたテンプレートでも利用可能であることを意味します。</target>
        </trans-unit>
        <trans-unit id="32f5c247824d4ac3ebcbfb77dca589496bfacd7b" translate="yes" xml:space="preserve">
          <source>By default, it uses the HTML escaping strategy:</source>
          <target state="translated">デフォルトでは、HTML エスケープ戦略を使用します。</target>
        </trans-unit>
        <trans-unit id="40f749209db4b39252e20e3da4bb8e1d11ca0888" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;escape&lt;/code&gt; filter uses the &lt;code&gt;html&lt;/code&gt; strategy, but depending on the escaping context, you might want to explicitly use an other strategy:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;escape&lt;/code&gt; フィルターは &lt;code&gt;html&lt;/code&gt; 戦略を使用しますが、エスケープコンテキストによっては、他の戦略を明示的に使用したい場合があります。</target>
        </trans-unit>
        <trans-unit id="2e1bdad7b16ce38d760229a970e648a79a17736f" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;escape&lt;/code&gt; filter uses the &lt;code&gt;html&lt;/code&gt; strategy, but depending on the escaping context, you might want to explicitly use any other available strategies:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;escape&lt;/code&gt; フィルターは &lt;code&gt;html&lt;/code&gt; 戦略を使用しますが、エスケープコンテキストによっては、他の使用可能な戦略を明示的に使用したい場合があります。</target>
        </trans-unit>
        <trans-unit id="013998e3dbf4fa9781657f6ed29b3436bfd248db" translate="yes" xml:space="preserve">
          <source>By default, the date is displayed by applying the default timezone (the one specified in php.ini or declared in Twig &amp;ndash; see below), but you can override it by explicitly specifying a timezone:</source>
          <target state="translated">デフォルトでは、日付はデフォルトのタイムゾーン（php.iniで指定されたものまたはTwigで宣言されたもの-以下を参照）を適用して表示されますが、タイムゾーンを明示的に指定することでオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="ef411e1f79631b7502b30fc94d6278bc2ddc7d67" translate="yes" xml:space="preserve">
          <source>By default, the date is displayed by applying the default timezone (the one specified in php.ini or declared in Twig -- see below), but you can override it by explicitly specifying a timezone:</source>
          <target state="translated">デフォルトでは、デフォルトのタイムゾーン (php.ini で指定されたタイムゾーン、もしくは Twig で宣言されたタイムゾーン --以下を参照)を適用して日付が表示されますが、明示的にタイムゾーンを指定することでそれをオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="c8ef92b0c0f4b08c678ec46da3112a3bd769e06d" translate="yes" xml:space="preserve">
          <source>By default, the filter uses the current locale. You can pass it explicitly:</source>
          <target state="translated">デフォルトでは、フィルタは現在のロケールを使用します。明示的に渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="71639d8401d82bd72a5b6d33871fd832e2714359" translate="yes" xml:space="preserve">
          <source>By default, the inner scope has access to the outer scope context; you can disable this behavior by appending the &lt;code&gt;only&lt;/code&gt; keyword:</source>
          <target state="translated">デフォルトでは、内部スコープは外部スコープコンテキストにアクセスできます。この動作を無効にするには、 &lt;code&gt;only&lt;/code&gt; キーワードを追加します。</target>
        </trans-unit>
        <trans-unit id="694abf09f6ba17b93d23bf9a1a76377be0e6f964" translate="yes" xml:space="preserve">
          <source>By default, the sandbox mode is disabled and should be enabled when including untrusted template code by using the &lt;code&gt;sandbox&lt;/code&gt; tag:</source>
          <target state="translated">デフォルトでは、サンドボックスモードは無効になっており、 &lt;code&gt;sandbox&lt;/code&gt; タグを使用して信頼できないテンプレートコードを含める場合は有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="55a89527100d7affacb785a535913eceec75eda6" translate="yes" xml:space="preserve">
          <source>Caution</source>
          <target state="translated">Caution</target>
        </trans-unit>
        <trans-unit id="841ebda6544ddbba69554e4189edb9aa9a579ca2" translate="yes" xml:space="preserve">
          <source>Changing the delimiters of one of the template engines (depending on which engine you introduced last):</source>
          <target state="translated">テンプレートエンジンのいずれかのデリミタを変更する(最後に導入したエンジンに依存する</target>
        </trans-unit>
        <trans-unit id="2398a0461657553f576bedce6090b2b43f66a52c" translate="yes" xml:space="preserve">
          <source>Checking if a Macro is defined</source>
          <target state="translated">マクロが定義されているかどうかの確認</target>
        </trans-unit>
        <trans-unit id="996e31f727a5d55f1c2c9ecc6fab3703f07517ac" translate="yes" xml:space="preserve">
          <source>Child Template</source>
          <target state="translated">子テンプレート</target>
        </trans-unit>
        <trans-unit id="bfa26f82d31c6894fd22c56cda343f490718f895" translate="yes" xml:space="preserve">
          <source>Clause</source>
          <target state="translated">Clause</target>
        </trans-unit>
        <trans-unit id="7ddec538289b11324f7535a727852ccc402681c5" translate="yes" xml:space="preserve">
          <source>Coding Standards</source>
          <target state="translated">コーディング規格</target>
        </trans-unit>
        <trans-unit id="1aef20d756d2d8144ff423aba5105a475f5a465b" translate="yes" xml:space="preserve">
          <source>Combined with the &lt;code&gt;for&lt;/code&gt; tag, it allows to filter the items to iterate over:</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; タグと組み合わせると、アイテムをフィルタリングして繰り返し処理できます。</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="e46ee00fde40e955c86abe019a61121e06d653c9" translate="yes" xml:space="preserve">
          <source>Comparisons</source>
          <target state="translated">Comparisons</target>
        </trans-unit>
        <trans-unit id="4159f677a3ba4b1e8e5c8d9e5dcb054853dc4d44" translate="yes" xml:space="preserve">
          <source>Compilation Cache</source>
          <target state="translated">コンパイルキャッシュ</target>
        </trans-unit>
        <trans-unit id="8620d3f223635ae2fada6a944bdf7791cdafebad" translate="yes" xml:space="preserve">
          <source>Conditional Inheritance</source>
          <target state="translated">条件付き継承</target>
        </trans-unit>
        <trans-unit id="4c4d50a3c4388b60540a6bb6a575b4439ccf09cb" translate="yes" xml:space="preserve">
          <source>Containment Operator</source>
          <target state="translated">封じ込め作業員</target>
        </trans-unit>
        <trans-unit id="631f756e9a696cb4f11333a23eb74502ab2a1bea" translate="yes" xml:space="preserve">
          <source>Content generation</source>
          <target state="translated">コンテンツ生成</target>
        </trans-unit>
        <trans-unit id="3d39259a09853933576ea9ae7680e4c9db3df385" translate="yes" xml:space="preserve">
          <source>Context-aware Filters</source>
          <target state="translated">文脈を考慮したフィルタ</target>
        </trans-unit>
        <trans-unit id="bb66e040b1eaaa938975b8930e88b461f54966e0" translate="yes" xml:space="preserve">
          <source>Contrary to what you might think, this template does not define a block conditionally; it just makes overridable by a child template the output of what will be rendered when the condition is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">ご想像のとおり、このテンプレートでは条件付きでブロックを定義していません。条件が &lt;code&gt;true&lt;/code&gt; の場合にレンダリングされるものの出力を、子テンプレートでオーバーライドできるようにするだけです。</target>
        </trans-unit>
        <trans-unit id="dc8212cea50053ea6c5082578330fb7fddacde68" translate="yes" xml:space="preserve">
          <source>Control Structure</source>
          <target state="translated">制御構造</target>
        </trans-unit>
        <trans-unit id="4d6fc77538f6f5da4fe47893201fdbb11b81e9bf" translate="yes" xml:space="preserve">
          <source>Converting a string to &lt;em&gt;snake&lt;/em&gt; case or &lt;em&gt;camelCase&lt;/em&gt;:</source>
          <target state="translated">文字列を&lt;em&gt;スネーク&lt;/em&gt;ケースまたは&lt;em&gt;キャメル&lt;/em&gt;ケースに変換する：</target>
        </trans-unit>
        <trans-unit id="f643dde3c69f6c516a05419a7bee9eb0c1da0f69" translate="yes" xml:space="preserve">
          <source>Converts an argument to a date to allow date comparison:</source>
          <target state="translated">引数を日付に変換して、日付の比較を可能にします。</target>
        </trans-unit>
        <trans-unit id="373a9d8ff1daf2670e1db5d6c60706fb56834033" translate="yes" xml:space="preserve">
          <source>Core Extension</source>
          <target state="translated">コアエクステンション</target>
        </trans-unit>
        <trans-unit id="800e0975533c92d4737ab54b41c79ea48c2c7750" translate="yes" xml:space="preserve">
          <source>Create two &quot;intermediate&quot; base templates that extend the master layout template: one with vertically stacked boxes to be used by the &quot;foo&quot; and &quot;bar&quot; pages and another one with side-by-side boxes for the &quot;boom&quot; and &quot;baz&quot; pages.</source>
          <target state="translated">マスターレイアウトテンプレートを拡張する2つの「中間」ベーステンプレートを作成します:1つは「foo」と「bar」ページで使用するための垂直に積み上げられたボックス、もう1つは「boom」と「baz」ページのためのサイドバイサイドのボックスです。</target>
        </trans-unit>
        <trans-unit id="5d7afe6270e5c173e4c062c11c3436f528bf9ad7" translate="yes" xml:space="preserve">
          <source>Create two &amp;ldquo;intermediate&amp;rdquo; base templates that extend the master layout template: one with vertically stacked boxes to be used by the &amp;ldquo;foo&amp;rdquo; and &amp;ldquo;bar&amp;rdquo; pages and another one with side-by-side boxes for the &amp;ldquo;boom&amp;rdquo; and &amp;ldquo;baz&amp;rdquo; pages.</source>
          <target state="translated">マスターレイアウトテンプレートを拡張する2つの「中間」ベーステンプレートを作成します。1つは「foo」ページと「bar」ページで使用する垂直に積み重ねられたボックス、もう1つは「ブーム」と「baz」用のボックスを並べたものです。 」ページ。</target>
        </trans-unit>
        <trans-unit id="e812c00b1d029e2bd6da31be4387e9458b3795bb" translate="yes" xml:space="preserve">
          <source>Create your own Loader</source>
          <target state="translated">独自のローダーを作成</target>
        </trans-unit>
        <trans-unit id="8efcf4a8fd9fb8bf4d249b48568cdf0129d677bf" translate="yes" xml:space="preserve">
          <source>Creating a filter consists of associating a name with a PHP callable:</source>
          <target state="translated">フィルタを作成するには、名前と PHP の callable を関連付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="abb89ed86cd9ec0681aceb129a3db464abbc00cc" translate="yes" xml:space="preserve">
          <source>Creating a filter is as simple as associating a name with a PHP callable:</source>
          <target state="translated">フィルタの作成は、名前と PHP の callable を関連付けるのと同じくらい簡単です。</target>
        </trans-unit>
        <trans-unit id="d98d225179baa96a9aad75f63fa267228aac2cb2" translate="yes" xml:space="preserve">
          <source>Creating an Extension</source>
          <target state="translated">拡張機能の作成</target>
        </trans-unit>
        <trans-unit id="d460cf77255e9f6554f633feff229f0554d49c57" translate="yes" xml:space="preserve">
          <source>Custom Escapers</source>
          <target state="translated">カスタムエスケイプ</target>
        </trans-unit>
        <trans-unit id="9ce90e18ea78746ba849d8b048e61d6fe6de1823" translate="yes" xml:space="preserve">
          <source>Customizing the Syntax</source>
          <target state="translated">構文のカスタマイズ</target>
        </trans-unit>
        <trans-unit id="bf68faa05c49a245f705073bbff6d8d1e2d5a664" translate="yes" xml:space="preserve">
          <source>DSL language construct</source>
          <target state="translated">DSL言語構成体</target>
        </trans-unit>
        <trans-unit id="743ac9af736554b327df742c7669732bc225f922" translate="yes" xml:space="preserve">
          <source>Default argument values are defined by using the &lt;code&gt;default&lt;/code&gt; filter in the macro body;</source>
          <target state="translated">デフォルトの引数値は、マクロ本体の &lt;code&gt;default&lt;/code&gt; フィルターを使用して定義されます。</target>
        </trans-unit>
        <trans-unit id="df7276ec51477b766f58425f6f6cd985c15ceb0a" translate="yes" xml:space="preserve">
          <source>Defining a Node</source>
          <target state="translated">ノードの定義</target>
        </trans-unit>
        <trans-unit id="47298c6c4220f18f8351f766579c44084dc606cc" translate="yes" xml:space="preserve">
          <source>Defining a Node class (responsible for converting the parsed code to PHP);</source>
          <target state="translated">Node クラスの定義 (パースしたコードを PHP に変換する役割)。</target>
        </trans-unit>
        <trans-unit id="f9ac05668b95495418c92ce13a1ee8531536fc5b" translate="yes" xml:space="preserve">
          <source>Defining a Token Parser</source>
          <target state="translated">トークンパーサの定義</target>
        </trans-unit>
        <trans-unit id="7d22ec582ecbb71c1de058c7096c33d9e79d3afb" translate="yes" xml:space="preserve">
          <source>Defining a Token Parser class (responsible for parsing the template code);</source>
          <target state="translated">トークンパーサークラス(テンプレートコードの解析を担当)を定義します。</target>
        </trans-unit>
        <trans-unit id="905a63411289386486912504c2882def0978656b" translate="yes" xml:space="preserve">
          <source>Defining undefined Functions and Filters on the Fly</source>
          <target state="translated">定義されていない関数とフィルタをオンザフライで定義する</target>
        </trans-unit>
        <trans-unit id="42431a70f7d6a713149aa76e7833d14debec6945" translate="yes" xml:space="preserve">
          <source>Definition vs Runtime</source>
          <target state="translated">定義と実行時</target>
        </trans-unit>
        <trans-unit id="ceaeb02845d1d654b15aff26166b75166c1f4101" translate="yes" xml:space="preserve">
          <source>Depending on the library, you can also add some options by passing them as an argument to the filter. Example for &lt;code&gt;league/html-to-markdown&lt;/code&gt;:</source>
          <target state="translated">ライブラリによっては、オプションを引数としてフィルターに渡すことで、いくつかのオプションを追加することもできます。たとえば &lt;code&gt;league/html-to-markdown&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="def61a57f1801bd18a4d37400296f865b936a07f" translate="yes" xml:space="preserve">
          <source>Deprecated Features</source>
          <target state="translated">非推奨機能</target>
        </trans-unit>
        <trans-unit id="9c7548801bdb83424b41bc768fefa021c6bfa539" translate="yes" xml:space="preserve">
          <source>Deprecated Filters</source>
          <target state="translated">非推奨フィルター</target>
        </trans-unit>
        <trans-unit id="cfb7e90012ebb9cf373e81f8c8ae797fe4e8bf5b" translate="yes" xml:space="preserve">
          <source>Deprecated features generate deprecation notices (via a call to the &lt;code&gt;trigger_error()&lt;/code&gt; PHP function). By default, they are silenced and never displayed nor logged.</source>
          <target state="translated">非推奨となった機能は、 &lt;code&gt;trigger_error()&lt;/code&gt; PHP関数の呼び出しを介して）非推奨通知を生成します。デフォルトでは、これらは非表示にされ、表示もログも記録されません。</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="95a04d79c1def5970f9d3ed416baab23f7ca1ba3" translate="yes" xml:space="preserve">
          <source>Displaying Deprecation Notices</source>
          <target state="translated">非推奨通知の表示</target>
        </trans-unit>
        <trans-unit id="70bdeb4bde64edbddb2c9890467abaa39f9ff863" translate="yes" xml:space="preserve">
          <source>Do not put any spaces after an opening parenthesis and before a closing parenthesis in expressions:</source>
          <target state="translated">式の中で、開括弧の後と閉括弧の前にはスペースを入れないでください。</target>
        </trans-unit>
        <trans-unit id="b54b07578e66332ed94b1360d985511a91c57498" translate="yes" xml:space="preserve">
          <source>Do not put any spaces before and after string delimiters:</source>
          <target state="translated">文字列の区切り文字の前後にスペースを入れないでください。</target>
        </trans-unit>
        <trans-unit id="ad513610c4e1cca7668e0fcbc4fbb412aa032171" translate="yes" xml:space="preserve">
          <source>Do not put any spaces before and after the following operators: &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;..&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt;:</source>
          <target state="translated">次の演算子の前後にスペースを入れないでください： &lt;code&gt;|&lt;/code&gt; 、 &lt;code&gt;.&lt;/code&gt; 、 &lt;code&gt;..&lt;/code&gt; 、 &lt;code&gt;[]&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2c9a4a876054cecb973a2f5e467a1b18ed3f4f36" translate="yes" xml:space="preserve">
          <source>Do not put any spaces before and after the opening and the closing of arrays and hashes:</source>
          <target state="translated">配列やハッシュの開閉の前後にスペースを入れないでください。</target>
        </trans-unit>
        <trans-unit id="1148410eb402bec176a0f348c903944c39cd5f7e" translate="yes" xml:space="preserve">
          <source>Do not put any spaces before and after the parenthesis used for filter and function calls:</source>
          <target state="translated">フィルタや関数の呼び出しに使用する括弧の前後にはスペースを入れないでください。</target>
        </trans-unit>
        <trans-unit id="859bdc1b54392984bc364ffe503b536cb9710f3e" translate="yes" xml:space="preserve">
          <source>Dynamic Filters</source>
          <target state="translated">ダイナミックフィルタ</target>
        </trans-unit>
        <trans-unit id="a09e59843e185b728305864a15de2bcd038b41e9" translate="yes" xml:space="preserve">
          <source>Dynamic Inheritance</source>
          <target state="translated">動的継承</target>
        </trans-unit>
        <trans-unit id="92642574d257034abe629dc675e85aade352df2c" translate="yes" xml:space="preserve">
          <source>Each function and filter documentation page has a section where the names of all arguments are listed when supported.</source>
          <target state="translated">各関数やフィルタのドキュメントページには、サポートされている場合にはすべての引数の名前がリストアップされているセクションがあります。</target>
        </trans-unit>
        <trans-unit id="bf019af769da2ee272a4a27166a4ba6773fa77a3" translate="yes" xml:space="preserve">
          <source>Each macro argument can have a default value (here &lt;code&gt;text&lt;/code&gt; is the default value for &lt;code&gt;type&lt;/code&gt; if not provided in the call).</source>
          <target state="translated">各マクロ引数にはデフォルト値を設定できます（ここでは、呼び出しで指定されていない場合、 &lt;code&gt;text&lt;/code&gt; が &lt;code&gt;type&lt;/code&gt; のデフォルト値です）。</target>
        </trans-unit>
        <trans-unit id="5ec3c773b895dade597b0e8ba5f5323cc3c86d20" translate="yes" xml:space="preserve">
          <source>Echoing the node object gives you a nice representation of the tree:</source>
          <target state="translated">ノードオブジェクトをエコーすることで、ツリーをきれいに表現することができます。</target>
        </trans-unit>
        <trans-unit id="98b5ec53a59036c75459467bcfa063b11065abb6" translate="yes" xml:space="preserve">
          <source>Embed the markup for the top/bottom and left/right boxes into each page template directly.</source>
          <target state="translated">上下左右のボックスのマークアップを各ページのテンプレートに直接埋め込みます。</target>
        </trans-unit>
        <trans-unit id="95e1752eccc38d5ee799e62cfff0d6c30ca5ac2d" translate="yes" xml:space="preserve">
          <source>Environment Options</source>
          <target state="translated">環境オプション</target>
        </trans-unit>
        <trans-unit id="4135099ad3e0fd72e4307a01269675a7943c0945" translate="yes" xml:space="preserve">
          <source>Environment-aware Filters</source>
          <target state="translated">環境対応フィルター</target>
        </trans-unit>
        <trans-unit id="d4528d41a236473327873f18599a03820aa54049" translate="yes" xml:space="preserve">
          <source>Escaper Extension</source>
          <target state="translated">エスケーパーエクステンション</target>
        </trans-unit>
        <trans-unit id="2779ea444cb47200f1b0085d04662b33c09fc23f" translate="yes" xml:space="preserve">
          <source>Escaping</source>
          <target state="translated">Escaping</target>
        </trans-unit>
        <trans-unit id="2f64df555761fcd513351bd487c6cb34c6170a2e" translate="yes" xml:space="preserve">
          <source>Escaping is applied before printing, after any other filter is applied:</source>
          <target state="translated">エスケーピングは、他のフィルタを適用した後、印刷前に適用されます。</target>
        </trans-unit>
        <trans-unit id="ea4c96b7b87934975a46907d0a6763eba0657e46" translate="yes" xml:space="preserve">
          <source>Escaping the AngularJS delimiters by wrapping AngularJS sections with the &lt;code&gt;{% verbatim %}&lt;/code&gt; tag or by escaping each delimiter via &lt;code&gt;{{ '{{' }}&lt;/code&gt; and &lt;code&gt;{{ '}}' }}&lt;/code&gt;;</source>
          <target state="translated">AngularJSセクションを &lt;code&gt;{% verbatim %}&lt;/code&gt; タグでラップするか、 &lt;code&gt;{{ '{{' }}&lt;/code&gt; および &lt;code&gt;{{ '}}' }}&lt;/code&gt; 各区切り文字をエスケープすることにより、AngularJS区切り文字をエスケープします。</target>
        </trans-unit>
        <trans-unit id="4109704b90ce02d40973a45a504a9806c5827f0a" translate="yes" xml:space="preserve">
          <source>Escaping works by piping the variable through the &lt;a href=&quot;filters/escape&quot;&gt;escape&lt;/a&gt; or &lt;code&gt;e&lt;/code&gt; filter:</source>
          <target state="translated">エスケープは、&lt;a href=&quot;filters/escape&quot;&gt;エスケープ&lt;/a&gt;または &lt;code&gt;e&lt;/code&gt; フィルターを介して変数をパイプすることで機能します。</target>
        </trans-unit>
        <trans-unit id="a6621a08893aa9842ef986ff518de2ac16202603" translate="yes" xml:space="preserve">
          <source>Escaping works by using the &lt;a href=&quot;filters/escape&quot;&gt;escape&lt;/a&gt; or &lt;code&gt;e&lt;/code&gt; filter:</source>
          <target state="translated">エスケープは、&lt;a href=&quot;filters/escape&quot;&gt;エスケープ&lt;/a&gt;または &lt;code&gt;e&lt;/code&gt; フィルターを使用して機能します。</target>
        </trans-unit>
        <trans-unit id="60697050c60f954e23935fccbfbe6531b3962e98" translate="yes" xml:space="preserve">
          <source>Even if you will probably always use the &lt;code&gt;template_from_string&lt;/code&gt; function with the &lt;code&gt;include&lt;/code&gt; function, you can use it with any tag or function that takes a template as an argument (like the &lt;code&gt;embed&lt;/code&gt; or &lt;code&gt;extends&lt;/code&gt; tags).</source>
          <target state="translated">常に &lt;code&gt;include&lt;/code&gt; 関数で &lt;code&gt;template_from_string&lt;/code&gt; 関数を使用する場合でも、テンプレートを引数として取る任意のタグまたは関数（ &lt;code&gt;embed&lt;/code&gt; タグまたは &lt;code&gt;extends&lt;/code&gt; タグなど）で使用できます。</target>
        </trans-unit>
        <trans-unit id="55b442ddfc10ca641575a0cace13c33adbc77bb0" translate="yes" xml:space="preserve">
          <source>Even when enabled, the &lt;code&gt;dump&lt;/code&gt; function won&amp;rsquo;t display anything if the &lt;code&gt;debug&lt;/code&gt; option on the environment is not enabled (to avoid leaking debug information on a production server).</source>
          <target state="translated">有効にした場合でも、環境の &lt;code&gt;debug&lt;/code&gt; オプションが有効になっていないと、 &lt;code&gt;dump&lt;/code&gt; 機能は何も表示しません（運用サーバーでのデバッグ情報の漏洩を防ぐため）。</target>
        </trans-unit>
        <trans-unit id="a7edd162b60dd14999cf4e788e10ae0d17e0f0fb" translate="yes" xml:space="preserve">
          <source>Even when enabled, the &lt;code&gt;dump&lt;/code&gt; function won't display anything if the &lt;code&gt;debug&lt;/code&gt; option on the environment is not enabled (to avoid leaking debug information on a production server).</source>
          <target state="translated">有効になっている場合でも、環境での &lt;code&gt;debug&lt;/code&gt; オプションが有効になっていないと、 &lt;code&gt;dump&lt;/code&gt; 機能は何も表示しません（本番サーバーでのデバッグ情報のリークを防ぐため）。</target>
        </trans-unit>
        <trans-unit id="d1399855e39585fbfffca02adb295237939b20ed" translate="yes" xml:space="preserve">
          <source>Eventually, the &lt;em&gt;compiler&lt;/em&gt; transforms the AST into PHP code.</source>
          <target state="translated">最終的に、&lt;em&gt;コンパイラー&lt;/em&gt;はASTをPHPコードに変換します。</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="ae5fccd8dcd8fc317f8edfc8259af86cd2967a29" translate="yes" xml:space="preserve">
          <source>Expressions</source>
          <target state="translated">Expressions</target>
        </trans-unit>
        <trans-unit id="b6a57516215cf22f8b66da0db43560414fc20a0d" translate="yes" xml:space="preserve">
          <source>Expressions which the result is a literal or a variable marked safe are never automatically escaped:</source>
          <target state="translated">結果がリテラルであったり、セーフとマークされた変数である式は自動的にはエスケープされません。</target>
        </trans-unit>
        <trans-unit id="16940240239ca65d46884627794c5f81839963a3" translate="yes" xml:space="preserve">
          <source>Expressions which the result is always a literal or a variable marked safe are never automatically escaped:</source>
          <target state="translated">結果が常にリテラルである式や、セーフとマークされた変数は自動的にエスケープされません。</target>
        </trans-unit>
        <trans-unit id="7964234568085623be599dd2d3496aaf2d0acb52" translate="yes" xml:space="preserve">
          <source>Extending Twig</source>
          <target state="translated">エクステンディング・ツイッグ</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="9ea10b18d2beb6235355dd68071716da6450e30e" translate="yes" xml:space="preserve">
          <source>Filter sections allow you to apply regular Twig filters on a block of template data. Just wrap the code in the special &lt;code&gt;filter&lt;/code&gt; section:</source>
          <target state="translated">フィルターセクションでは、テンプレートデータのブロックに通常のTwigフィルターを適用できます。特別な &lt;code&gt;filter&lt;/code&gt; セクションでコードをラップするだけです。</target>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="d98f8566899c8f80607289f118d9a710a1d52e0b" translate="yes" xml:space="preserve">
          <source>Filters that accept arguments have parentheses around the arguments. This example joins the elements of a list by commas:</source>
          <target state="translated">引数を受け入れるフィルタは、引数の周りを括弧で囲みます。この例では、リストの要素をカンマで結合しています。</target>
        </trans-unit>
        <trans-unit id="799374271dcfc303126933d2bada076ea844693f" translate="yes" xml:space="preserve">
          <source>Filters that accept arguments have parentheses around the arguments. This example will join a list by commas:</source>
          <target state="translated">引数を受け入れるフィルタは、引数の周りを括弧で囲んでいます。この例では、カンマでリストを結合します。</target>
        </trans-unit>
        <trans-unit id="5cd349b356a3bb03dc3bb82904949d1c0f6cb19c" translate="yes" xml:space="preserve">
          <source>Finally, here is an example on how you can use it:</source>
          <target state="translated">最後に、使い方の一例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="c942e282773ba641684d435881fe24a70e43111c" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;em&gt;compiler&lt;/em&gt; transforms the AST into PHP code.</source>
          <target state="translated">最後に、&lt;em&gt;コンパイラ&lt;/em&gt;はASTをPHPコードに変換します。</target>
        </trans-unit>
        <trans-unit id="6384961a803b11bb83e55efe9feb56cce34ce8e5" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s create a temporary in-memory SQLite3 database to work with:</source>
          <target state="translated">まず、以下を操作するための一時的なメモリ内SQLite3データベースを作成しましょう。</target>
        </trans-unit>
        <trans-unit id="4529581f9e01417597653686a60438a8befc4187" translate="yes" xml:space="preserve">
          <source>First, let's create a temporary in-memory SQLite3 database to work with:</source>
          <target state="translated">まず、一時的にインメモリのSQLite3データベースを作成して作業してみましょう。</target>
        </trans-unit>
        <trans-unit id="ee292aefdda70ed92b3e6075b629adfda3afe738" translate="yes" xml:space="preserve">
          <source>First, remember that Twig has two main language constructs:</source>
          <target state="translated">まず、Twigには主に2つの言語構造があることを覚えておきましょう。</target>
        </trans-unit>
        <trans-unit id="5ff3c8bbfbea6b5841dbe5d64cf994f4003537dd" translate="yes" xml:space="preserve">
          <source>First, the &lt;strong&gt;lexer&lt;/strong&gt; tokenizes the template source code into small pieces for easier processing;</source>
          <target state="translated">まず、&lt;strong&gt;レクサー&lt;/strong&gt;はテンプレートのソースコードを小さな部分にトークン化し、処理を容易にします。</target>
        </trans-unit>
        <trans-unit id="a2c0c18e56245083bca0a54db22916649a6e924b" translate="yes" xml:space="preserve">
          <source>Fixtures examples can be found within the Twig repository &lt;a href=&quot;https://github.com/twigphp/Twig/tree/2.x/test/Twig/Tests/Fixtures&quot;&gt;tests/Twig/Fixtures&lt;/a&gt; directory.</source>
          <target state="translated">Fixturesの例は、Twigリポジトリの&lt;a href=&quot;https://github.com/twigphp/Twig/tree/2.x/test/Twig/Tests/Fixtures&quot;&gt;tests / Twig / Fixtures&lt;/a&gt;ディレクトリにあります。</target>
        </trans-unit>
        <trans-unit id="f458d937b9659ceaf6084784c918dd5d5756c9f5" translate="yes" xml:space="preserve">
          <source>Fixtures examples can be found within the Twig repository &lt;a href=&quot;https://github.com/twigphp/Twig/tree/3.x/tests/Fixtures&quot;&gt;tests/Twig/Fixtures&lt;/a&gt; directory.</source>
          <target state="translated">フィクスチャの例は、Twigリポジトリの&lt;a href=&quot;https://github.com/twigphp/Twig/tree/3.x/tests/Fixtures&quot;&gt;tests / Twig / Fixtures&lt;/a&gt;ディレクトリにあります。</target>
        </trans-unit>
        <trans-unit id="225a2ef3c417130113dac554a2682a7011fd9350" translate="yes" xml:space="preserve">
          <source>For AngularJS, change the interpolation tags using the &lt;code&gt;interpolateProvider&lt;/code&gt; service, for instance at the module initialization time:</source>
          <target state="translated">AngularJSの場合、たとえばモジュールの初期化時に、 &lt;code&gt;interpolateProvider&lt;/code&gt; サービスを使用して補間タグを変更します。</target>
        </trans-unit>
        <trans-unit id="ccb5b3fea058adb3aef0ffcd2abc6270115cdab4" translate="yes" xml:space="preserve">
          <source>For Twig, change the delimiters via the &lt;code&gt;tag_variable&lt;/code&gt; Lexer option:</source>
          <target state="translated">Twigの場合、 &lt;code&gt;tag_variable&lt;/code&gt; Lexerオプションを使用して区切り文字を変更します。</target>
        </trans-unit>
        <trans-unit id="b863c75c0f9a9178ae396e17f15f21d3daccc0a9" translate="yes" xml:space="preserve">
          <source>For bigger sections it makes sense to mark a block &lt;a href=&quot;tags/verbatim&quot;&gt;verbatim&lt;/a&gt;.</source>
          <target state="translated">大きなセクションでは、ブロックを&lt;a href=&quot;tags/verbatim&quot;&gt;逐語的&lt;/a&gt;にマークするのが理にかなっています。</target>
        </trans-unit>
        <trans-unit id="ca936664688c69cb3c0eb77880c3a6550215321b" translate="yes" xml:space="preserve">
          <source>For blocks with little content, it&amp;rsquo;s possible to use a shortcut syntax. The following constructs do the same thing:</source>
          <target state="translated">コンテンツが少ないブロックの場合、ショートカット構文を使用できます。次の構成は同じことを行います。</target>
        </trans-unit>
        <trans-unit id="11c38d1ed96e3e89a018e63af5b8cb4ff8b2fd0b" translate="yes" xml:space="preserve">
          <source>For blocks with little content, it's possible to use a shortcut syntax. The following constructs do the same thing:</source>
          <target state="translated">内容の少ないブロックに対しては、ショートカット構文を使用することが可能です。以下の構文は同じことを行います。</target>
        </trans-unit>
        <trans-unit id="b985650ed7d553e703986182e8d4fdc315209f29" translate="yes" xml:space="preserve">
          <source>For complex string comparisons, the &lt;code&gt;matches&lt;/code&gt; operator allows you to use &lt;a href=&quot;https://secure.php.net/manual/en/pcre.pattern.php&quot;&gt;regular expressions&lt;/a&gt;:</source>
          <target state="translated">複雑な文字列比較の場合、 &lt;code&gt;matches&lt;/code&gt; 演算子を使用すると&lt;a href=&quot;https://secure.php.net/manual/en/pcre.pattern.php&quot;&gt;正規表現&lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="b6e1d886bdccc571c72c37e65f5b73646c9e2a06" translate="yes" xml:space="preserve">
          <source>For convenience&amp;rsquo;s sake &lt;code&gt;foo.bar&lt;/code&gt; does the following things on the PHP layer:</source>
          <target state="translated">便宜上、 &lt;code&gt;foo.bar&lt;/code&gt; はPHPレイヤーで次のことを行います。</target>
        </trans-unit>
        <trans-unit id="5ad460cf92922f20a5ee3885b1365dd4e6b40629" translate="yes" xml:space="preserve">
          <source>For convenience's sake &lt;code&gt;foo.bar&lt;/code&gt; does the following things on the PHP layer:</source>
          <target state="translated">便宜上、 &lt;code&gt;foo.bar&lt;/code&gt; はPHPレイヤーで次のことを行います。</target>
        </trans-unit>
        <trans-unit id="77d39edb7ffbcade3a337ec5fa10e41c0f743866" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;code&gt;e&lt;/code&gt; filter is defined as an alias:</source>
          <target state="translated">便宜上、 &lt;code&gt;e&lt;/code&gt; フィルターはエイリアスとして定義されています。</target>
        </trans-unit>
        <trans-unit id="99f127d620f201056066322b1fd124205a863f25" translate="yes" xml:space="preserve">
          <source>For example, to display a list of users provided in a variable called &lt;code&gt;users&lt;/code&gt;, use the &lt;a href=&quot;tags/for&quot;&gt;for&lt;/a&gt; tag:</source>
          <target state="translated">たとえば、という変数で提供ユーザーのリストを表示する &lt;code&gt;users&lt;/code&gt; 、使用&lt;a href=&quot;tags/for&quot;&gt;のための&lt;/a&gt;タグ：</target>
        </trans-unit>
        <trans-unit id="4a83d7d6b58b115f9865b98a13d833d762f65ac0" translate="yes" xml:space="preserve">
          <source>For filters, register callbacks with &lt;code&gt;registerUndefinedFilterCallback()&lt;/code&gt;. For functions, use &lt;code&gt;registerUndefinedFunctionCallback()&lt;/code&gt;:</source>
          <target state="translated">フィルターの場合は、コールバックを &lt;code&gt;registerUndefinedFilterCallback()&lt;/code&gt; で登録します。関数の場合は、 &lt;code&gt;registerUndefinedFunctionCallback()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="0eacb302a145f136ded3b5f13a9f71583d8a8047" translate="yes" xml:space="preserve">
          <source>For greater flexiblity, you can even define your own pattern (see the &lt;a href=&quot;https://unicode-org.github.io/icu/userguide/format_parse/datetime/#datetime-format-syntax&quot;&gt;ICU user guide&lt;/a&gt; for supported patterns).</source>
          <target state="translated">柔軟性を高めるために、独自のパターンを定義することもできます（サポートされているパターンについては、&lt;a href=&quot;https://unicode-org.github.io/icu/userguide/format_parse/datetime/#datetime-format-syntax&quot;&gt;ICUユーザーガイド&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="c3a044680fcf002d4c4ca6d485a689a3b93b93e4" translate="yes" xml:space="preserve">
          <source>For hashes, the merging process occurs on the keys: if the key does not already exist, it is added but if the key already exists, its value is overridden.</source>
          <target state="translated">ハッシュの場合、マージ処理はキーに対して行われます。キーが既に存在しない場合は追加されますが、キーが既に存在する場合はその値が上書きされます。</target>
        </trans-unit>
        <trans-unit id="10a0d976f073f47d3a96ec69721c9a7fd5bc49ac" translate="yes" xml:space="preserve">
          <source>For instance, if you want to create a tag that converts a Markdown formatted text to HTML, create a &lt;code&gt;markdown&lt;/code&gt; filter instead:</source>
          <target state="translated">たとえば、マークダウン形式のテキストをHTMLに変換するタグを作成する場合は、代わりに &lt;code&gt;markdown&lt;/code&gt; ダウンフィルターを作成します。</target>
        </trans-unit>
        <trans-unit id="f236783b8a5f4e80fb04562a31ed26bb9c0ce532" translate="yes" xml:space="preserve">
          <source>For instance, if you want to create a tag that logs text, create a &lt;code&gt;log&lt;/code&gt; function instead and call it via the &lt;a href=&quot;tags/do&quot;&gt;do&lt;/a&gt; tag:</source>
          <target state="translated">たとえば、テキストをログに記録するタグを作成する場合は、代わりに &lt;code&gt;log&lt;/code&gt; 関数を作成し、&lt;a href=&quot;tags/do&quot;&gt;do&lt;/a&gt;タグを介して呼び出します。</target>
        </trans-unit>
        <trans-unit id="4a0ea4124fb537f4aa32e1a1bb44f6f2e65e163a" translate="yes" xml:space="preserve">
          <source>For instance, the &lt;code&gt;range&lt;/code&gt; function returns a list containing an arithmetic progression of integers:</source>
          <target state="translated">たとえば、 &lt;code&gt;range&lt;/code&gt; 関数は、整数の算術的な進行を含むリストを返します。</target>
        </trans-unit>
        <trans-unit id="399f6a17cbccd7f3c3b6129fcd8a9099b916ad94" translate="yes" xml:space="preserve">
          <source>For instance, the following code:</source>
          <target state="translated">例えば、以下のようなコードです。</target>
        </trans-unit>
        <trans-unit id="2d0efa7ed4b28d7267f9a039ac07646628d4f792" translate="yes" xml:space="preserve">
          <source>For large strings manipulation, use the &lt;code&gt;apply&lt;/code&gt; tag:</source>
          <target state="translated">大きな文字列を操作するには、 &lt;code&gt;apply&lt;/code&gt; タグを使用します。</target>
        </trans-unit>
        <trans-unit id="e4bc1ad9b4c9279d684b83c3f6470896fb1e2108" translate="yes" xml:space="preserve">
          <source>For more information on whitespace control, read the &lt;a href=&quot;../templates#templates-whitespace-control&quot;&gt;dedicated section&lt;/a&gt; of the documentation and learn how you can also use the whitespace control modifier on your tags.</source>
          <target state="translated">ホワイトスペースコントロールの詳細については、ドキュメントの&lt;a href=&quot;../templates#templates-whitespace-control&quot;&gt;専用セクション&lt;/a&gt;を読み、タグでホワイトスペースコントロール修飾子を使用する方法をご覧ください。</target>
        </trans-unit>
        <trans-unit id="42f22176cb9f08b67bb5d715a1ade54c538077b7" translate="yes" xml:space="preserve">
          <source>For multiple branches &lt;code&gt;elseif&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; can be used like in PHP. You can use more complex &lt;code&gt;expressions&lt;/code&gt; there too:</source>
          <target state="translated">複数のブランチでは、 &lt;code&gt;elseif&lt;/code&gt; と &lt;code&gt;else&lt;/code&gt; をPHPのように使用できます。そこでもより複雑な &lt;code&gt;expressions&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="da88edff7f7011a22060e83a26a200191c86a310" translate="yes" xml:space="preserve">
          <source>For multiple conditions, &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt; can be used:</source>
          <target state="translated">複数の条件で、 &lt;code&gt;and&lt;/code&gt; および &lt;code&gt;or&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="fd02eaa57d14e5cf25af74ec2660a02d47dd4413" translate="yes" xml:space="preserve">
          <source>For objects that implement the &lt;code&gt;Countable&lt;/code&gt; interface, &lt;code&gt;empty&lt;/code&gt; will check the return value of the &lt;code&gt;count()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;Countable&lt;/code&gt; インターフェースを実装するオブジェクトの場合、 &lt;code&gt;empty&lt;/code&gt; は &lt;code&gt;count()&lt;/code&gt; メソッドの戻り値をチェックします。</target>
        </trans-unit>
        <trans-unit id="92c71a41058f9d5ba0a127eee7360701feb144a2" translate="yes" xml:space="preserve">
          <source>For objects that implement the &lt;code&gt;Countable&lt;/code&gt; interface, &lt;code&gt;length&lt;/code&gt; will use the return value of the &lt;code&gt;count()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;Countable&lt;/code&gt; インターフェースを実装するオブジェクトの場合、 &lt;code&gt;length&lt;/code&gt; は &lt;code&gt;count()&lt;/code&gt; メソッドの戻り値を使用します。</target>
        </trans-unit>
        <trans-unit id="9b532c7ad7e4cde77196b6561d2170cf1ddd8900" translate="yes" xml:space="preserve">
          <source>For objects that implement the &lt;code&gt;IteratorAggregate&lt;/code&gt; interface, &lt;code&gt;length&lt;/code&gt; will use the return value of the &lt;code&gt;iterator_count()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;IteratorAggregate&lt;/code&gt; インターフェースを実装するオブジェクトの場合、 &lt;code&gt;length&lt;/code&gt; は &lt;code&gt;iterator_count()&lt;/code&gt; メソッドの戻り値を使用します。</target>
        </trans-unit>
        <trans-unit id="51d4918c314766f8ed9f7379f302728625cd859d" translate="yes" xml:space="preserve">
          <source>For objects that implement the &lt;code&gt;__toString()&lt;/code&gt; magic method (and not &lt;code&gt;Countable&lt;/code&gt;), it will check if an empty string is returned.</source>
          <target state="translated">&lt;code&gt;__toString()&lt;/code&gt; マジックメソッド（ &lt;code&gt;Countable&lt;/code&gt; ではない）を実装するオブジェクトの場合、空の文字列が返されるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="6596e8998c16d51669cd74569a4cd3a9863cd0ff" translate="yes" xml:space="preserve">
          <source>For objects that implement the &lt;code&gt;__toString()&lt;/code&gt; magic method (and not &lt;code&gt;Countable&lt;/code&gt;), it will return the length of the string provided by that method.</source>
          <target state="translated">&lt;code&gt;__toString()&lt;/code&gt; マジックメソッドを実装するオブジェクト（ &lt;code&gt;Countable&lt;/code&gt; ではない）の場合、そのメソッドによって提供される文字列の長さを返します。</target>
        </trans-unit>
        <trans-unit id="cfbc45ea8e894c24a6f0bf04da80c66fde4abc58" translate="yes" xml:space="preserve">
          <source>For sequences and mappings, numeric keys are not preserved. To reverse them as well, pass &lt;code&gt;true&lt;/code&gt; as an argument to the &lt;code&gt;reverse&lt;/code&gt; filter:</source>
          <target state="translated">シーケンスとマッピングの場合、数値キーは保持されません。それらも逆にするには、 &lt;code&gt;reverse&lt;/code&gt; フィルターの引数として &lt;code&gt;true&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="47a92c562c2a2ff7ae46149812323c804d86303a" translate="yes" xml:space="preserve">
          <source>From PHP, it&amp;rsquo;s also possible to load a template stored in a string via &lt;code&gt;\Twig\Environment::createTemplate()&lt;/code&gt;:</source>
          <target state="translated">PHPから、 &lt;code&gt;\Twig\Environment::createTemplate()&lt;/code&gt; 介して文字列に保存されたテンプレートをロードすることもできます。</target>
        </trans-unit>
        <trans-unit id="87f1c90681e23f5246f99ac4fbe5903d80b2a7c5" translate="yes" xml:space="preserve">
          <source>From PHP, it's also possible to load a template stored in a string via &lt;code&gt;Twig_Environment::createTemplate()&lt;/code&gt;:</source>
          <target state="translated">PHPからは、文字列に格納されたテンプレートを &lt;code&gt;Twig_Environment::createTemplate()&lt;/code&gt; 介してロードすることもできます。</target>
        </trans-unit>
        <trans-unit id="34a48677f4f35ffd8b3e0a61ceee7e3cd351710b" translate="yes" xml:space="preserve">
          <source>From a template, you can easily load a template stored in a string via the &lt;code&gt;template_from_string&lt;/code&gt; function (via the &lt;code&gt;Twig_Extension_StringLoader&lt;/code&gt; extension):</source>
          <target state="translated">テンプレートから、（ &lt;code&gt;Twig_Extension_StringLoader&lt;/code&gt; 拡張機能を介して） &lt;code&gt;template_from_string&lt;/code&gt; 関数を介して文字列に格納されているテンプレートを簡単にロードできます。</target>
        </trans-unit>
        <trans-unit id="425a73da26abdafa9555c09abf59a03e72c454a0" translate="yes" xml:space="preserve">
          <source>From a template, you can load a template stored in a string via the &lt;code&gt;template_from_string&lt;/code&gt; function (via the &lt;code&gt;\Twig\Extension\StringLoaderExtension&lt;/code&gt; extension):</source>
          <target state="translated">テンプレートから、 &lt;code&gt;template_from_string&lt;/code&gt; 関数を介して（ &lt;code&gt;\Twig\Extension\StringLoaderExtension&lt;/code&gt; 拡張を介して）文字列に格納されたテンプレートをロードできます。</target>
        </trans-unit>
        <trans-unit id="dc8cc17fb9092b97f58b24c8584410fc2ce9317e" translate="yes" xml:space="preserve">
          <source>Functional Tests</source>
          <target state="translated">機能テスト</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="099ba5d46d6df85bfe3e60660754781dfa985114" translate="yes" xml:space="preserve">
          <source>Functions are defined in the exact same way as filters, but you need to create an instance of &lt;code&gt;Twig_Function&lt;/code&gt;:</source>
          <target state="translated">関数はフィルターとまったく同じ方法で定義されますが、 &lt;code&gt;Twig_Function&lt;/code&gt; のインスタンスを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="5d31b84178f225e35975858ea63e419c5e590d6a" translate="yes" xml:space="preserve">
          <source>Functions are defined in the exact same way as filters, but you need to create an instance of &lt;code&gt;\Twig\TwigFunction&lt;/code&gt;:</source>
          <target state="translated">関数はフィルターとまったく同じ方法で定義されますが、 &lt;code&gt;\Twig\TwigFunction&lt;/code&gt; インスタンスを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="0824da2339605ae886359ab9acbfde0844e1a62b" translate="yes" xml:space="preserve">
          <source>Functions can be called to generate content. Functions are called by their name followed by parentheses (&lt;code&gt;()&lt;/code&gt;) and may have arguments.</source>
          <target state="translated">関数を呼び出してコンテンツを生成できます。関数は、名前の後に括弧（ &lt;code&gt;()&lt;/code&gt; ）を付けて呼び出され、引数を持つこともできます。</target>
        </trans-unit>
        <trans-unit id="b31d6aceaf53bed426201a6a7a6b2394f4ab59d1" translate="yes" xml:space="preserve">
          <source>Functions can be registered in an extension via the &lt;code&gt;getFunctions()&lt;/code&gt; method:</source>
          <target state="translated">関数は、 &lt;code&gt;getFunctions()&lt;/code&gt; メソッドを介して拡張機能に登録できます。</target>
        </trans-unit>
        <trans-unit id="5508f385c620a7d7dd8a7266ee4911fb4a47082d" translate="yes" xml:space="preserve">
          <source>Functions returning template data (like &lt;a href=&quot;macro&quot;&gt;macros&lt;/a&gt; and &lt;a href=&quot;../functions/parent&quot;&gt;parent&lt;/a&gt;) always return safe markup.</source>
          <target state="translated">テンプレートデータを返す関数（&lt;a href=&quot;macro&quot;&gt;マクロ&lt;/a&gt;や&lt;a href=&quot;../functions/parent&quot;&gt;親など&lt;/a&gt;）は常に安全なマークアップを返します。</target>
        </trans-unit>
        <trans-unit id="93a657eb8ec28f46011330cca8182b513c636ba2" translate="yes" xml:space="preserve">
          <source>Functions support the same features as filters, except for the &lt;code&gt;pre_escape&lt;/code&gt; and &lt;code&gt;preserves_safety&lt;/code&gt; options.</source>
          <target state="translated">関数は、 &lt;code&gt;pre_escape&lt;/code&gt; オプションと &lt;code&gt;preserves_safety&lt;/code&gt; オプションを除いて、フィルターと同じ機能をサポートします。</target>
        </trans-unit>
        <trans-unit id="2ff4e53e2b802e1ec127c83da80fa5fc4b5333fa" translate="yes" xml:space="preserve">
          <source>Global Variables</source>
          <target state="translated">グローバル変数</target>
        </trans-unit>
        <trans-unit id="9d4bc0bc987de9636524d7da4c675ef8f0f47eac" translate="yes" xml:space="preserve">
          <source>Global variables can be registered in an extension via the &lt;code&gt;getGlobals()&lt;/code&gt; method:</source>
          <target state="translated">グローバル変数は、 &lt;code&gt;getGlobals()&lt;/code&gt; メソッドを介して拡張機能に登録できます。</target>
        </trans-unit>
        <trans-unit id="3f827c66e7e04723ed3fa1ab0945dff3f10b9b83" translate="yes" xml:space="preserve">
          <source>Globals</source>
          <target state="translated">Globals</target>
        </trans-unit>
        <trans-unit id="b343dc194be203c0bd103ca64fcd845a7a3f16d3" translate="yes" xml:space="preserve">
          <source>Go to the &lt;a href=&quot;filters/index&quot;&gt;filters&lt;/a&gt; page to learn more about built-in filters.</source>
          <target state="translated">組み込みのフィルターの詳細については、&lt;a href=&quot;filters/index&quot;&gt;フィルターの&lt;/a&gt;ページにアクセスしてください。</target>
        </trans-unit>
        <trans-unit id="ccdb52d803e4402b8022dce86e44c59ba6f83b61" translate="yes" xml:space="preserve">
          <source>Go to the &lt;a href=&quot;functions/index&quot;&gt;functions&lt;/a&gt; page to learn more about the built-in functions.</source>
          <target state="translated">&lt;a href=&quot;functions/index&quot;&gt;関数の&lt;/a&gt;ページに移動して、組み込み関数の詳細を確認してください。</target>
        </trans-unit>
        <trans-unit id="ddc0361a2caee889a00ed6ce5b69051a5c3fde25" translate="yes" xml:space="preserve">
          <source>Go to the &lt;a href=&quot;tags/index&quot;&gt;tags&lt;/a&gt; page to learn more about the built-in tags.</source>
          <target state="translated">組み込みタグの詳細については、&lt;a href=&quot;tags/index&quot;&gt;タグ&lt;/a&gt;ページにアクセスしてください。</target>
        </trans-unit>
        <trans-unit id="1bf0a9906249c21eb4884e6ca9233b814356e0fa" translate="yes" xml:space="preserve">
          <source>Go to the &lt;a href=&quot;tests/index&quot;&gt;tests&lt;/a&gt; page to learn more about the built-in tests.</source>
          <target state="translated">組み込みテストの詳細については、&lt;a href=&quot;tests/index&quot;&gt;テスト&lt;/a&gt;ページにアクセスしてください。</target>
        </trans-unit>
        <trans-unit id="24612093a73d54eb6853f0fcb0bdb396d8b5d87d" translate="yes" xml:space="preserve">
          <source>HTML Escaping</source>
          <target state="translated">HTML エスケーピング</target>
        </trans-unit>
        <trans-unit id="5c93af1b41ff6e1fdc7f90079941d676aec8009d" translate="yes" xml:space="preserve">
          <source>Helper object</source>
          <target state="translated">ヘルパーオブジェクト</target>
        </trans-unit>
        <trans-unit id="3af2f5f95b4f2b1acf0ff9aaa2dc7755a9f92cbe" translate="yes" xml:space="preserve">
          <source>Here are some configuration example that simulates some other template engines syntax:</source>
          <target state="translated">ここでは、他のテンプレートエンジンの構文をシミュレートした設定例を紹介します。</target>
        </trans-unit>
        <trans-unit id="5fb0b795174a34374ba6774b7f2f95ce57b12302" translate="yes" xml:space="preserve">
          <source>Here is a list of the built-in loaders Twig provides:</source>
          <target state="translated">Twigが提供するビルトインローダーのリストです。</target>
        </trans-unit>
        <trans-unit id="053732e9017f5e11005b658e5c60c450f8ca0521" translate="yes" xml:space="preserve">
          <source>Here is a list of the built-in loaders:</source>
          <target state="translated">ビルトインローダーの一覧です。</target>
        </trans-unit>
        <trans-unit id="14f0acd2f36883130e4f7dc146c85c8bf3e075a2" translate="yes" xml:space="preserve">
          <source>Here is a small example of a macro that renders a form element:</source>
          <target state="translated">ここでは、フォーム要素をレンダリングするマクロの小さな例を示します。</target>
        </trans-unit>
        <trans-unit id="dd701e1c823f01c43e6a693a1c3a57ee3e18f8a6" translate="yes" xml:space="preserve">
          <source>Here is how you can assign the &lt;code&gt;bar&lt;/code&gt; value to the &lt;code&gt;foo&lt;/code&gt; variable:</source>
          <target state="translated">次に、 &lt;code&gt;foo&lt;/code&gt; 変数に &lt;code&gt;bar&lt;/code&gt; 値を割り当てる方法を示します。</target>
        </trans-unit>
        <trans-unit id="69edf9db3f16dbd6ad2d5a4214517d0359383a67" translate="yes" xml:space="preserve">
          <source>Here is the output for the &lt;code&gt;Hello {{ name }}&lt;/code&gt; template:</source>
          <target state="translated">&lt;code&gt;Hello {{ name }}&lt;/code&gt; テンプレートの出力は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="8a40885bc69090dd9c2fb3dce0e208a40f9d0dec" translate="yes" xml:space="preserve">
          <source>Here we go. For this specific example, the creation of a function is the extension point to use. And you can use it anywhere an expression is accepted:</source>
          <target state="translated">ここからが本題です。この具体的な例では、関数の作成が使用する拡張ポイントとなります。そして、式が受け入れられる場所であればどこでも使えます。</target>
        </trans-unit>
        <trans-unit id="75a62b2bbefcbeb9b7dcf549759cd331a77f05b1" translate="yes" xml:space="preserve">
          <source>Here, we have overloaded the built-in &lt;code&gt;date&lt;/code&gt; filter with a custom one.</source>
          <target state="translated">ここでは、組み込みの &lt;code&gt;date&lt;/code&gt; フィルターをカスタムフィルターでオーバーロードしました。</target>
        </trans-unit>
        <trans-unit id="01fcaab35f4daaa17192f10fc17d5113372142e1" translate="yes" xml:space="preserve">
          <source>Horizontal reuse is a way to achieve the same goal as multiple inheritance, but without the associated complexity:</source>
          <target state="translated">水平再利用は、複数の継承と同じ目的を達成する方法ですが、それに伴う複雑さはありません。</target>
        </trans-unit>
        <trans-unit id="b5a8770fc8f04db7b93bc442a4f3439aff4a5086" translate="yes" xml:space="preserve">
          <source>Horizontal reuse is an advanced Twig feature that is hardly ever needed in regular templates. It is mainly used by projects that need to make template blocks reusable without using inheritance.</source>
          <target state="translated">水平再利用は、通常のテンプレートではほとんど必要とされないTwigの高度な機能です。主に、継承を使わずにテンプレートブロックを再利用可能にする必要があるプロジェクトで使用されます。</target>
        </trans-unit>
        <trans-unit id="94e91fe754365a152716d74a76da574eb5bcb330" translate="yes" xml:space="preserve">
          <source>How do blocks work?</source>
          <target state="translated">ブロックはどのように機能するのか?</target>
        </trans-unit>
        <trans-unit id="d6709f6a536cf9e9375fd94d5932aa7239cf4f4f" translate="yes" xml:space="preserve">
          <source>How does Twig work?</source>
          <target state="translated">Twigの仕組みは?</target>
        </trans-unit>
        <trans-unit id="0856fb43e7a0db78ee578f5a7a193daa428634e0" translate="yes" xml:space="preserve">
          <source>How often?</source>
          <target state="translated">どのくらいの頻度で?</target>
        </trans-unit>
        <trans-unit id="c00aabb610a843e04d137962f83b5bdb0f2001e8" translate="yes" xml:space="preserve">
          <source>However, this code won&amp;rsquo;t find all deprecations (like using deprecated some Twig classes). To catch all notices, register a custom error handler like the one below:</source>
          <target state="translated">ただし、このコードはすべての非推奨を検出するわけではありません（非推奨の一部のTwigクラスを使用するなど）。すべての通知をキャッチするには、次のようなカスタムエラーハンドラーを登録します。</target>
        </trans-unit>
        <trans-unit id="495717ac95d280ac3d46685e2cbf6f8246157ddc" translate="yes" xml:space="preserve">
          <source>However, this code won't find all deprecations (like using deprecated some Twig classes). To catch all notices, register a custom error handler like the one below:</source>
          <target state="translated">しかし、このコードではすべての非推奨事項を見つけることはできません (非推奨の Twig クラスを使用しているような)。すべての通知をキャッチするには、以下のようなカスタムエラーハンドラを登録してください。</target>
        </trans-unit>
        <trans-unit id="7ae66a27633d37484aef7b7f2ccc2defe6279eb1" translate="yes" xml:space="preserve">
          <source>However, this will not work as Twig will always load the template from &lt;code&gt;.../templates/mysite&lt;/code&gt;.</source>
          <target state="translated">ただし、Twigは常に &lt;code&gt;.../templates/mysite&lt;/code&gt; からテンプレートをロードするため、これは機能しません。</target>
        </trans-unit>
        <trans-unit id="14621b0619258cfafac55a7426846c43afd25f60" translate="yes" xml:space="preserve">
          <source>IDEs Integration</source>
          <target state="translated">IDEの統合</target>
        </trans-unit>
        <trans-unit id="44f654e04913eaa2a4671483612726fa96e95403" translate="yes" xml:space="preserve">
          <source>INF (Infinity)</source>
          <target state="translated">インフィニティ</target>
        </trans-unit>
        <trans-unit id="02915466d5bc7de8498733d2aef6c0c8d886aae6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ignore missing&lt;/code&gt; is given, it will fall back to rendering nothing if none of the templates exist, otherwise it will throw an exception.</source>
          <target state="translated">場合は &lt;code&gt;ignore missing&lt;/code&gt; 与えられて、それはそれ以外の場合は、例外がスローされます、テンプレートの何も存在しない場合は何もレンダリングしないにフォールバックします。</target>
        </trans-unit>
        <trans-unit id="40e1523ee3fc08abda00b4fea6fd3fb7708406b3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ignore_missing&lt;/code&gt; is set, it will fall back to rendering nothing if none of the templates exist, otherwise it will throw an exception.</source>
          <target state="translated">&lt;code&gt;ignore_missing&lt;/code&gt; が設定されている場合、テンプレートが存在しない場合は何もレンダリングされず、それ以外の場合は例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="71d79d8a89b6b40a2f487b338f3d17f6e07513e4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;limit&lt;/code&gt; is negative, all components except the last -limit are returned;</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; が負の場合、最後の-limitを除くすべてのコンポーネントが返されます。</target>
        </trans-unit>
        <trans-unit id="72c96a56a8ea178d0b41772e6e26a5ea94e6c9e4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;limit&lt;/code&gt; is positive, the returned array will contain a maximum of limit elements with the last element containing the rest of string;</source>
          <target state="translated">場合 &lt;code&gt;limit&lt;/code&gt; 正である、返される配列は、文字列の残りの部分を含む最後の要素に制限要素の最大値を含むであろう。</target>
        </trans-unit>
        <trans-unit id="f91a9e003b2a6ce571cccdacc41fd8487ee3b45b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;limit&lt;/code&gt; is zero, then this is treated as 1.</source>
          <target state="translated">場合 &lt;code&gt;limit&lt;/code&gt; ゼロであり、これは1として扱われます。</target>
        </trans-unit>
        <trans-unit id="125458410e3b41bde5d593d4e3f8006456f20dd5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;var&lt;/code&gt; evaluates to &lt;code&gt;index&lt;/code&gt;, the &lt;code&gt;index_foo.html&lt;/code&gt; template will be rendered.</source>
          <target state="translated">場合 &lt;code&gt;var&lt;/code&gt; があると評価 &lt;code&gt;index&lt;/code&gt; 、 &lt;code&gt;index_foo.html&lt;/code&gt; テンプレートがレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="83090575960d1a3c44874b605102b8207c5a1f27" translate="yes" xml:space="preserve">
          <source>If a template defines blocks, they can be rendered individually via the &lt;code&gt;renderBlock()&lt;/code&gt; call:</source>
          <target state="translated">テンプレートがブロックを定義している場合、それらは &lt;code&gt;renderBlock()&lt;/code&gt; 呼び出しを介して個別にレンダリングできます。</target>
        </trans-unit>
        <trans-unit id="cd3ce215ac3aee385cdfb649a61a314bd6bc67e0" translate="yes" xml:space="preserve">
          <source>If a variable or attribute does not exist, you will receive a &lt;code&gt;null&lt;/code&gt; value when the &lt;code&gt;strict_variables&lt;/code&gt; option is set to &lt;code&gt;false&lt;/code&gt;; alternatively, if &lt;code&gt;strict_variables&lt;/code&gt; is set, Twig will throw an error (see &lt;a href=&quot;api#environment-options&quot;&gt;environment options&lt;/a&gt;).</source>
          <target state="translated">変数または属性が存在しない場合、 &lt;code&gt;strict_variables&lt;/code&gt; オプションが &lt;code&gt;false&lt;/code&gt; に設定されていると &lt;code&gt;null&lt;/code&gt; 値を受け取ります。あるいは、 &lt;code&gt;strict_variables&lt;/code&gt; が設定されている場合、Twigはエラーをスローします（&lt;a href=&quot;api#environment-options&quot;&gt;環境オプションを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="2c65708b7fe2597cb2e7d3639f90f6352e9734f3" translate="yes" xml:space="preserve">
          <source>If automatic escaping is enabled, the output of the filter may be escaped before printing. If your filter acts as an escaper (or explicitly outputs HTML or JavaScript code), you will want the raw output to be printed. In such a case, set the &lt;code&gt;is_safe&lt;/code&gt; option:</source>
          <target state="translated">自動エスケープが有効になっている場合、フィルターの出力は印刷前にエスケープされる可能性があります。フィルターがエスケーパーとして機能する場合（またはHTMLまたはJavaScriptコードを明示的に出力する場合）、生の出力を印刷する必要があります。このような場合は、 &lt;code&gt;is_safe&lt;/code&gt; オプションを設定します。</target>
        </trans-unit>
        <trans-unit id="c3380528f49168c9b0f5336fd0e4b3702939e243" translate="yes" xml:space="preserve">
          <source>If extra positional arguments are passed to a macro call, they end up in the special &lt;code&gt;varargs&lt;/code&gt; variable as a list of values.</source>
          <target state="translated">追加の位置引数がマクロ呼び出しに渡されると、値のリストとして特別な &lt;code&gt;varargs&lt;/code&gt; 変数に入れられます。</target>
        </trans-unit>
        <trans-unit id="aaef7352ea4ceeef52d446b235cea3cf137d2954" translate="yes" xml:space="preserve">
          <source>If extra positional arguments are passed to a macro, they end up in the special &lt;code&gt;varargs&lt;/code&gt; variable as a list of values.</source>
          <target state="translated">追加の位置引数がマクロに渡されると、それらは値のリストとして特別な &lt;code&gt;varargs&lt;/code&gt; 変数に入れられます。</target>
        </trans-unit>
        <trans-unit id="283b71b89029e7fd1deb1a026df4463d5e9b1ad5" translate="yes" xml:space="preserve">
          <source>If length is given and is positive, then the sequence will have up to that many elements in it. If the variable is shorter than the length, then only the available variable elements will be present. If length is given and is negative then the sequence will stop that many elements from the end of the variable. If it is omitted, then the sequence will have everything from offset up until the end of the variable.</source>
          <target state="translated">長さが与えられ、それが正の値であれば、シーケンスはそれだけの数の要素を持つことになります。変数が長さよりも短い場合、利用可能な変数の要素だけが存在します。長さが与えられ、負の値であれば、シーケンスは、変数の終わりからそれだけの数の要素を停止します。それが省略された場合、シーケンスはオフセットから変数の最後までのすべての要素を持つことになります。</target>
        </trans-unit>
        <trans-unit id="cadddc30a0145dfb93312d2dddef4941a30b78de" translate="yes" xml:space="preserve">
          <source>If macros are defined and used in the same template, you can use the special &lt;code&gt;_self&lt;/code&gt; variable to import them:</source>
          <target state="translated">マクロが定義され、同じテンプレートで使用されている場合、特別な &lt;code&gt;_self&lt;/code&gt; 変数を使用してマクロをインポートできます。</target>
        </trans-unit>
        <trans-unit id="8cfe332936ad03aafce0cfe4e396b2e688e23385" translate="yes" xml:space="preserve">
          <source>If manual escaping is enabled, it is &lt;strong&gt;your&lt;/strong&gt; responsibility to escape variables if needed. What to escape? Any variable that comes from an untrusted source.</source>
          <target state="translated">手動エスケープが有効になっている場合、必要に応じて変数をエスケープするのは&lt;strong&gt;ユーザーの&lt;/strong&gt;責任です。何を逃れる？信頼できないソースからの変数。</target>
        </trans-unit>
        <trans-unit id="cd8b1fccaabf9b52169080a7dd167e0b7dc9fad8" translate="yes" xml:space="preserve">
          <source>If manual escaping is enabled, it is &lt;strong&gt;your&lt;/strong&gt; responsibility to escape variables if needed. What to escape? Any variable you don't trust.</source>
          <target state="translated">手動エスケープが有効になっている場合、必要に応じて変数をエスケープするのは&lt;strong&gt;ユーザーの&lt;/strong&gt;責任です。何を脱出する？信頼できない変数。</target>
        </trans-unit>
        <trans-unit id="981dc93ab57bc83fbcffa86164f1a5ed31b06044" translate="yes" xml:space="preserve">
          <source>If no argument is passed, the function returns the current date:</source>
          <target state="translated">引数を渡さなかった場合、この関数は現在の日付を返します。</target>
        </trans-unit>
        <trans-unit id="a77050781fd13429ed40075c42fad3ce1ce3c6f0" translate="yes" xml:space="preserve">
          <source>If no format is provided, Twig will use the default one: &lt;code&gt;F j, Y H:i&lt;/code&gt;. This default can be changed by calling the &lt;code&gt;setDateFormat()&lt;/code&gt; method on the &lt;code&gt;core&lt;/code&gt; extension instance. The first argument is the default format for dates and the second one is the default format for date intervals:</source>
          <target state="translated">形式が指定されていない場合、Twigはデフォルトの形式 &lt;code&gt;F j, Y H:i&lt;/code&gt; を使用します。このデフォルトは、 &lt;code&gt;core&lt;/code&gt; 拡張インスタンスで &lt;code&gt;setDateFormat()&lt;/code&gt; メソッドを呼び出すことで変更できます。最初の引数は日付のデフォルト形式であり、2番目の引数は日付間隔のデフォルト形式です。</target>
        </trans-unit>
        <trans-unit id="5b98716d7d00505a22cb3761673ab8a504b297e7" translate="yes" xml:space="preserve">
          <source>If no format is provided, Twig will use the default one: &lt;code&gt;F j, Y H:i&lt;/code&gt;. This default can be easily changed by calling the &lt;code&gt;setDateFormat()&lt;/code&gt; method on the &lt;code&gt;core&lt;/code&gt; extension instance. The first argument is the default format for dates and the second one is the default format for date intervals:</source>
          <target state="translated">形式が指定されていない場合、Twigはデフォルトの形式である &lt;code&gt;F j, Y H:i&lt;/code&gt; を使用します。このデフォルトは、 &lt;code&gt;core&lt;/code&gt; 拡張インスタンスで &lt;code&gt;setDateFormat()&lt;/code&gt; メソッドを呼び出すことで簡単に変更できます。最初の引数は日付のデフォルト形式で、2番目の引数は日付間隔のデフォルト形式です。</target>
        </trans-unit>
        <trans-unit id="c8b9cac8fa55f45cece3fdcb1c574834a54629ba" translate="yes" xml:space="preserve">
          <source>If no formatting options are provided then Twig will use the default formatting options of:</source>
          <target state="translated">フォーマットオプションが指定されていない場合、Twigはデフォルトのフォーマットオプションを使用します。</target>
        </trans-unit>
        <trans-unit id="80e616990e4d6d5c2c47f0e9c50eb0f73f812f22" translate="yes" xml:space="preserve">
          <source>If no iteration took place because the sequence was empty, you can render a replacement block by using &lt;code&gt;else&lt;/code&gt;:</source>
          <target state="translated">シーケンスが空だったために反復が行われなかった場合は、 &lt;code&gt;else&lt;/code&gt; を使用して置換ブロックをレンダリングできます。</target>
        </trans-unit>
        <trans-unit id="19f1b448d6eb97106538e78690ce9572389c5528" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;false&lt;/code&gt;, Twig will silently ignore invalid variables (variables and or attributes/methods that do not exist) and replace them with a &lt;code&gt;null&lt;/code&gt; value. When set to &lt;code&gt;true&lt;/code&gt;, Twig throws an exception instead (default to &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; に設定した場合、Twigは無効な変数（存在しない変数や属性/メソッド）を暗黙的に無視し、それらを &lt;code&gt;null&lt;/code&gt; 値で置き換えます。 &lt;code&gt;true&lt;/code&gt; に設定すると、Twigは代わりに例外をスローします（デフォルトは &lt;code&gt;false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1ffc7170c90ce1e21dc444c1052165fe1ac21a18" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;html&lt;/code&gt;, all variables in templates are escaped (using the &lt;code&gt;html&lt;/code&gt; escaping strategy), except those using the &lt;code&gt;raw&lt;/code&gt; filter:</source>
          <target state="translated">&lt;code&gt;html&lt;/code&gt; に設定すると、 &lt;code&gt;raw&lt;/code&gt; フィルターを使用するものを除いて、テンプレートのすべての変数がエスケープされます（ &lt;code&gt;html&lt;/code&gt; エスケープ戦略を使用）。</target>
        </trans-unit>
        <trans-unit id="dc5bd388756b3ec79dbd8dab347bca097a4b243e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;delimiter&lt;/code&gt; is an empty string, then value will be split by equal chunks. Length is set by the &lt;code&gt;limit&lt;/code&gt; argument (one character by default).</source>
          <target state="translated">場合 &lt;code&gt;delimiter&lt;/code&gt; 空の文字列で、その値は、同じチャンクで分割されます。長さは、 &lt;code&gt;limit&lt;/code&gt; 引数（デフォルトでは1文字）によって設定されます。</target>
        </trans-unit>
        <trans-unit id="d5b43a7fafd96e6c65b23b62316b452bc9d21d81" translate="yes" xml:space="preserve">
          <source>If the callable is not able to return a valid function (or filter), it must return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">呼び出し可能オブジェクトが有効な関数（またはフィルター）を返すことができない場合は、 &lt;code&gt;false&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="f580992476b0f175ded9807c92f6906ac9e232ce" translate="yes" xml:space="preserve">
          <source>If the date is already a DateTime object, and if you want to keep its current timezone, pass &lt;code&gt;false&lt;/code&gt; as the timezone value:</source>
          <target state="translated">日付が既にDateTimeオブジェクトであり、現在のタイムゾーンを保持したい場合は、タイムゾーン値として &lt;code&gt;false&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="763109bd3ec4e44b7c7a175e4e524ab5ce9cfc8f" translate="yes" xml:space="preserve">
          <source>If the start is non-negative, the sequence will start at that start in the variable. If start is negative, the sequence will start that far from the end of the variable.</source>
          <target state="translated">開始が負でない場合、シーケンスは変数のその開始位置から開始します。startが負の場合、シーケンスはその変数の終端から遠く離れたところから始まります。</target>
        </trans-unit>
        <trans-unit id="776bdde32eb152d71b763cd9e8f76e6527bc1922" translate="yes" xml:space="preserve">
          <source>If the value passed to the &lt;code&gt;date&lt;/code&gt; filter is &lt;code&gt;null&lt;/code&gt;, it will return the current date by default. If an empty string is desired instead of the current date, use a ternary operator:</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; フィルターに渡された値が &lt;code&gt;null&lt;/code&gt; の場合、デフォルトで現在の日付が返されます。現在の日付ではなく空の文字列が必要な場合は、三項演算子を使用します。</target>
        </trans-unit>
        <trans-unit id="6364fb6ad82d380986be6e33eb15612efd9751ba" translate="yes" xml:space="preserve">
          <source>If the variable evaluates to a &lt;code&gt;Twig_Template&lt;/code&gt; or a &lt;code&gt;Twig_TemplateWrapper&lt;/code&gt; instance, Twig will use it as the parent template:</source>
          <target state="translated">変数が &lt;code&gt;Twig_Template&lt;/code&gt; または &lt;code&gt;Twig_TemplateWrapper&lt;/code&gt; インスタンスに評価される場合、Twigはそれを親テンプレートとして使用します。</target>
        </trans-unit>
        <trans-unit id="c23c0db8dbbace4aeca89bece1d675f88288f8dd" translate="yes" xml:space="preserve">
          <source>If the variable evaluates to a &lt;code&gt;\Twig\Template&lt;/code&gt; or a &lt;code&gt;\Twig\TemplateWrapper&lt;/code&gt; instance, Twig will use it as the parent template:</source>
          <target state="translated">変数が &lt;code&gt;\Twig\Template&lt;/code&gt; または &lt;code&gt;\Twig\TemplateWrapper&lt;/code&gt; インスタンスに評価される場合、Twigはそれを親テンプレートとして使用します。</target>
        </trans-unit>
        <trans-unit id="acbb3d306eac5cfa23ba5a5452ec55607530a4ce" translate="yes" xml:space="preserve">
          <source>If you are developing a CMS, templates are usually stored in a database. This recipe gives you a simple PDO template loader you can use as a starting point for your own.</source>
          <target state="translated">CMSを開発している場合、テンプレートは通常データベースに保存されます。このレシピでは、あなた自身の出発点として使用できるシンプルなPDOテンプレートローダーを提供します。</target>
        </trans-unit>
        <trans-unit id="fe3e0353290e1adfae0c5bf4bcabb224e978038e" translate="yes" xml:space="preserve">
          <source>If you are looking for new tags, filters, or functions, have a look at the Twig official &lt;a href=&quot;https://github.com/twigphp/Twig-extensions&quot;&gt;extension repository&lt;/a&gt;.</source>
          <target state="translated">新しいタグ、フィルター、または関数を探している場合は、Twig公式&lt;a href=&quot;https://github.com/twigphp/Twig-extensions&quot;&gt;拡張リポジトリをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c6679a006a7122b2e19b5dfd1f5675fbae4f78a7" translate="yes" xml:space="preserve">
          <source>If you are not using Symfony, you must also register the extension runtime:</source>
          <target state="translated">symfony を利用していない場合、拡張機能のランタイムも登録しなければなりません。</target>
        </trans-unit>
        <trans-unit id="2f984ac5fece17d54183fea76662f3ed3a2a5db9" translate="yes" xml:space="preserve">
          <source>If you are using the filesystem loader, the templates are looked for in the paths defined by it.</source>
          <target state="translated">ファイルシステムローダーを使用している場合は、テンプレートはそれによって定義されたパスの中から探されます。</target>
        </trans-unit>
        <trans-unit id="3630fac6fac3817c33b4afca4d3e502839b199f1" translate="yes" xml:space="preserve">
          <source>If you do need to iterate over a sequence of numbers, you can use the &lt;code&gt;..&lt;/code&gt; operator:</source>
          <target state="translated">一連の数値を反復処理する必要がある場合は、 &lt;code&gt;..&lt;/code&gt; 演算子を使用できます。</target>
        </trans-unit>
        <trans-unit id="e6a9be3cfbd3f5a407c0bebddedaae85e4aba4a8" translate="yes" xml:space="preserve">
          <source>If you do the same on the &lt;code&gt;Twig_Environment&lt;/code&gt; itself, beware that it takes precedence over any other registered extensions:</source>
          <target state="translated">&lt;code&gt;Twig_Environment&lt;/code&gt; 自体で同じことを行う場合は、他の登録済み拡張機能よりも優先されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="65a412a3dd837cb7081effcb46b16d2d5a1b4262" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t pass any value, all variables from the current context are dumped:</source>
          <target state="translated">値を渡さない場合、現在のコンテキストのすべての変数がダンプされます。</target>
        </trans-unit>
        <trans-unit id="57c87ce604c0227c8b1d1ac8c4b605f8328c3ee8" translate="yes" xml:space="preserve">
          <source>If you don't pass any value, all variables from the current context are dumped:</source>
          <target state="translated">何も値を渡さなかった場合、現在のコンテキストからのすべての変数がダンプされます。</target>
        </trans-unit>
        <trans-unit id="5ea2dd5f3cf1cea30fa8929eaf91cca6f3dda631" translate="yes" xml:space="preserve">
          <source>If you enable automatic output escaping, Twig will only consider the content to be safe when capturing chunks of text.</source>
          <target state="translated">自動出力のエスケープを有効にすると、Twigはテキストの塊をキャプチャする際にのみ、安全なコンテンツとみなします。</target>
        </trans-unit>
        <trans-unit id="9b50172839954bc46cb0d41f334f3dbcb13ef00e" translate="yes" xml:space="preserve">
          <source>If you have any exposure to other text-based template languages, such as Smarty, Django, or Jinja, you should feel right at home with Twig. It's both designer and developer friendly by sticking to PHP's principles and adding functionality useful for templating environments.</source>
          <target state="translated">他のテキストベースのテンプレート言語、例えば Smarty,Django,Jinja に触れたことがあるならば、Twig を使うとしっくりと馴染むはずです。PHP の原則にこだわり、テンプレート環境に便利な機能を追加することで、デザイナーにも開発者にも優しいです。</target>
        </trans-unit>
        <trans-unit id="d6e129bd0a50c98dfb9e4295e0775d1c794ae1db" translate="yes" xml:space="preserve">
          <source>If you iterate over a set of files, you can pass the filename to the &lt;code&gt;tokenize()&lt;/code&gt; method to get the filename in the exception message:</source>
          <target state="translated">一連のファイルを反復処理する場合は、ファイル名を &lt;code&gt;tokenize()&lt;/code&gt; メソッドに渡して、例外メッセージでファイル名を取得できます。</target>
        </trans-unit>
        <trans-unit id="991969d3f5904e056927cfbb875a45c2b7319022" translate="yes" xml:space="preserve">
          <source>If you register more than one callback, Twig will call them in turn until one does not return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">複数のコールバックを登録すると、Twigは、1つが &lt;code&gt;false&lt;/code&gt; を返さなくなるまで順番にコールバックします。</target>
        </trans-unit>
        <trans-unit id="ae8f00d028882b92a272a0808d7a8c8b39dfce79" translate="yes" xml:space="preserve">
          <source>If you render this template, the result would be exactly the same with or without the &lt;code&gt;block&lt;/code&gt; tag. The &lt;code&gt;block&lt;/code&gt; inside the &lt;code&gt;for&lt;/code&gt; loop is just a way to make it overridable by a child template:</source>
          <target state="translated">このテンプレートをレンダリングした場合、結果は &lt;code&gt;block&lt;/code&gt; タグがあってもなくてもまったく同じです。 &lt;code&gt;for&lt;/code&gt; ループ内の &lt;code&gt;block&lt;/code&gt; は、子テンプレートでオーバーライドできるようにするための方法にすぎません。</target>
        </trans-unit>
        <trans-unit id="c4624b25bb5311a7b2131c1614ec6734a5a4618f" translate="yes" xml:space="preserve">
          <source>If you still want to create a tag for a new language construct, great!</source>
          <target state="translated">それでも新しい言語構成のためにタグを作成したいのであれば、それは素晴らしいことです。</target>
        </trans-unit>
        <trans-unit id="557ba85de404f2334ddf98824f5343df983772a0" translate="yes" xml:space="preserve">
          <source>If you want the output to be displayed conditionally, use the following instead:</source>
          <target state="translated">条件付きで出力を表示させたい場合は、代わりに以下を使用します。</target>
        </trans-unit>
        <trans-unit id="d9676e911d28059a2275ef920bfb099a09f780bd" translate="yes" xml:space="preserve">
          <source>If you want to access a dynamic attribute of a variable, use the &lt;a href=&quot;functions/attribute&quot;&gt;attribute&lt;/a&gt; function instead.</source>
          <target state="translated">変数の動的属性にアクセスする場合は、代わりに&lt;a href=&quot;functions/attribute&quot;&gt;属性&lt;/a&gt;関数を使用してください。</target>
        </trans-unit>
        <trans-unit id="d8d5e56c6caad2b5892f1b1571abba40236836b8" translate="yes" xml:space="preserve">
          <source>If you want to access the current context in your filter, set the &lt;code&gt;needs_context&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;; Twig will pass the current context as the first argument to the filter call (or the second one if &lt;code&gt;needs_environment&lt;/code&gt; is also set to &lt;code&gt;true&lt;/code&gt;):</source>
          <target state="translated">フィルターの現在のコンテキストにアクセスする場合は、 &lt;code&gt;needs_context&lt;/code&gt; オプションを &lt;code&gt;true&lt;/code&gt; に設定します。Twigは現在のコンテキストを最初の引数としてフィルター呼び出しに渡します（または、 &lt;code&gt;needs_environment&lt;/code&gt; も &lt;code&gt;true&lt;/code&gt; に設定されている場合は2番目の引数）：</target>
        </trans-unit>
        <trans-unit id="e3e2d240ca7cca8e7bbbd8f8afa99eed42699aa2" translate="yes" xml:space="preserve">
          <source>If you want to access the current environment instance in your filter, set the &lt;code&gt;needs_environment&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;; Twig will pass the current environment as the first argument to the filter call:</source>
          <target state="translated">フィルター内の現在の環境インスタンスにアクセスする場合は、 &lt;code&gt;needs_environment&lt;/code&gt; オプションを &lt;code&gt;true&lt;/code&gt; に設定します。Twigは、フィルター呼び出しの最初の引数として現在の環境を渡します。</target>
        </trans-unit>
        <trans-unit id="931efc9fe805c7b7cd6d330854e73bae4a99adbe" translate="yes" xml:space="preserve">
          <source>If you want to access the variable, just declare it before the loop:</source>
          <target state="translated">変数にアクセスしたい場合は、ループの前に宣言すればいいだけです。</target>
        </trans-unit>
        <trans-unit id="5349beb244608f52e286eb21d6c71afb6d913019" translate="yes" xml:space="preserve">
          <source>If you want to create a tag that actually removes all extra whitespace in an HTML string, be warned that this is not as easy as it seems to be (think of &lt;code&gt;textarea&lt;/code&gt; or &lt;code&gt;pre&lt;/code&gt; tags for instance). Using a third-party library like Tidy is probably a better idea.</source>
          <target state="translated">HTML文字列のすべての余分な空白を実際に削除するタグを作成する場合は、これは簡単ではないようです（たとえば、 &lt;code&gt;textarea&lt;/code&gt; または &lt;code&gt;pre&lt;/code&gt; タグを考えてみてください）。Tidyなどのサードパーティライブラリを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f6fdb2da8b3011d5ced6e236d46458928119344e" translate="yes" xml:space="preserve">
          <source>If you want to create your own, read the &lt;a href=&quot;advanced#creating-extensions&quot;&gt;Creating an Extension&lt;/a&gt; chapter.</source>
          <target state="translated">独自に作成する場合は&lt;a href=&quot;advanced#creating-extensions&quot;&gt;、拡張機能&lt;/a&gt;の作成の章をお読みください。</target>
        </trans-unit>
        <trans-unit id="555b358a8549cca465392fc40d5c9e7b69d117bd" translate="yes" xml:space="preserve">
          <source>If you want to ensure that some values are defined in an array (by given default values), reverse the two elements in the call:</source>
          <target state="translated">いくつかの値が(与えられたデフォルト値によって)配列で定義されていることを確実にしたい場合は、呼び出しの2つの要素を逆にします。</target>
        </trans-unit>
        <trans-unit id="3553e66838301ebc795d5de82ea3059415aeb214" translate="yes" xml:space="preserve">
          <source>If you want to manage the deprecation notices from your PHPUnit tests, have a look at the &lt;a href=&quot;https://github.com/symfony/phpunit-bridge&quot;&gt;symfony/phpunit-bridge&lt;/a&gt; package, which eases the process a lot.</source>
          <target state="translated">PHPUnitテストからの廃止通知を管理したい場合は、&lt;a href=&quot;https://github.com/symfony/phpunit-bridge&quot;&gt;symfony / phpunit-bridge&lt;/a&gt;パッケージをご覧ください。これにより、プロセスが大幅に簡略化されます。</target>
        </trans-unit>
        <trans-unit id="fc501dab360fa0d2910e4021a68f13af545ab7a4" translate="yes" xml:space="preserve">
          <source>If you want to manage the deprecation notices from your PHPUnit tests, have a look at the &lt;a href=&quot;https://github.com/symfony/phpunit-bridge&quot;&gt;symfony/phpunit-bridge&lt;/a&gt; package, which eases the process.</source>
          <target state="translated">PHPUnitテストからの非推奨通知を管理したい場合は、&lt;a href=&quot;https://github.com/symfony/phpunit-bridge&quot;&gt;symfony / phpunit-bridge&lt;/a&gt;パッケージを見てください。これによりプロセスが簡単になります。</target>
        </trans-unit>
        <trans-unit id="61f66ba8e734d3a135979f8a45b22e542f91692c" translate="yes" xml:space="preserve">
          <source>If you want to optimize the size of the generated HTML content, gzip compress the output instead.</source>
          <target state="translated">生成されたHTMLコンテンツのサイズを最適化したい場合は、代わりに出力をgzipで圧縮します。</target>
        </trans-unit>
        <trans-unit id="8e8bb9402012c3e8b3d101c0a8899738b3e29a1e" translate="yes" xml:space="preserve">
          <source>If you want to pass a variable number of positional or named arguments to the test, set the &lt;code&gt;is_variadic&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;. Tests support dynamic names (see dynamic filters and functions for the syntax).</source>
          <target state="translated">可変数の位置引数または名前付き引数をテストに &lt;code&gt;is_variadic&lt;/code&gt; 場合は、is_variadicオプションを &lt;code&gt;true&lt;/code&gt; に設定します。テストは動的名をサポートします（構文については、動的フィルターと関数を参照してください）。</target>
        </trans-unit>
        <trans-unit id="7a928c76a2f592c3b882eab48e4e6c5635ade3b5" translate="yes" xml:space="preserve">
          <source>If you want to pass a variable number of positional or named arguments to the test, set the &lt;code&gt;is_variadic&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;. Tests support dynamic names (see dynamic filters for the syntax).</source>
          <target state="translated">可変数の定位置引数または名前付き引数をテストに &lt;code&gt;is_variadic&lt;/code&gt; 場合は、is_variadicオプションを &lt;code&gt;true&lt;/code&gt; に設定します。テストは動的な名前をサポートします（構文については動的フィルターを参照してください）。</target>
        </trans-unit>
        <trans-unit id="6697722e9ccb30c2e3ab2ec2abf4cce9ad7c1037" translate="yes" xml:space="preserve">
          <source>If you want to print a block multiple times you can however use the &lt;code&gt;block&lt;/code&gt; function:</source>
          <target state="translated">ただし、ブロックを複数回印刷する場合は、 &lt;code&gt;block&lt;/code&gt; 関数を使用できます。</target>
        </trans-unit>
        <trans-unit id="208fd5f4bc9cd77ac6da611e4009c9bd76c7959f" translate="yes" xml:space="preserve">
          <source>If you want to test if the variable is defined, use &lt;code&gt;if users is
defined&lt;/code&gt; instead.</source>
          <target state="translated">変数が定義されているかどうかをテストする場合は、代わりに &lt;code&gt;if users is defined&lt;/code&gt; いる場合に使用します。</target>
        </trans-unit>
        <trans-unit id="b137b4c232ffa6aef95b99b8fed1a72363344cfb" translate="yes" xml:space="preserve">
          <source>If you want use this filter on large amounts of text, wrap it with the &lt;a href=&quot;tags/apply&quot;&gt;apply&lt;/a&gt; tag:</source>
          <target state="translated">大量のテキストにこのフィルターを使用する場合は、&lt;a href=&quot;tags/apply&quot;&gt;apply&lt;/a&gt;タグでラップします。</target>
        </trans-unit>
        <trans-unit id="a10fcb3d859cd3186f7f1fbb89ad133ad7ab5ccd" translate="yes" xml:space="preserve">
          <source>If your tag does not output anything, but only exists because of a side effect, create a &lt;strong&gt;function&lt;/strong&gt; that returns nothing and call it via the &lt;a href=&quot;tags/do&quot;&gt;filter&lt;/a&gt; tag.</source>
          <target state="translated">タグが何も出力せず、副作用のためにのみ存在する場合は、何も返さない&lt;strong&gt;関数&lt;/strong&gt;を作成し、&lt;a href=&quot;tags/do&quot;&gt;filter&lt;/a&gt;タグを介して呼び出します。</target>
        </trans-unit>
        <trans-unit id="47e1dfbeb939c058a4af9d14be4fd925eb6ce76a" translate="yes" xml:space="preserve">
          <source>If your tag generates some output, use a &lt;strong&gt;function&lt;/strong&gt; instead.</source>
          <target state="translated">タグが何らかの出力を生成する場合は、代わりに&lt;strong&gt;関数&lt;/strong&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="659b8279e92a52fb3b13497ca363100cfe8cdf72" translate="yes" xml:space="preserve">
          <source>If your tag modifies some content and returns it, use a &lt;strong&gt;filter&lt;/strong&gt; instead.</source>
          <target state="translated">タグが一部のコンテンツを変更して返す場合は、代わりに&lt;strong&gt;フィルター&lt;/strong&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="9a6c5e917715b3899c6bb9c14576a0655ce4f732" translate="yes" xml:space="preserve">
          <source>If your templates are not stored on the filesystem, use the &lt;code&gt;collect()&lt;/code&gt; method instead. &lt;code&gt;collect()&lt;/code&gt; takes a &lt;code&gt;Traversable&lt;/code&gt; which must return template names as keys and template contents as values (as done by &lt;code&gt;Twig_Util_TemplateDirIterator&lt;/code&gt;).</source>
          <target state="translated">テンプレートがファイルシステムに保存されていない場合は、代わりに &lt;code&gt;collect()&lt;/code&gt; メソッドを使用してください。 &lt;code&gt;collect()&lt;/code&gt; は、テンプレート名をキーとして、テンプレートの内容を値として返す必要がある &lt;code&gt;Traversable&lt;/code&gt; を受け取ります（ &lt;code&gt;Twig_Util_TemplateDirIterator&lt;/code&gt; によって行われます）。</target>
        </trans-unit>
        <trans-unit id="bec61512ebc1f93ede3cd9d75fbd65d67707fc9b" translate="yes" xml:space="preserve">
          <source>If your templates are not stored on the filesystem, use the &lt;code&gt;collect()&lt;/code&gt; method instead. &lt;code&gt;collect()&lt;/code&gt; takes a &lt;code&gt;Traversable&lt;/code&gt; which must return template names as keys and template contents as values (as done by &lt;code&gt;\Twig\Util\TemplateDirIterator&lt;/code&gt;).</source>
          <target state="translated">テンプレートがファイルシステムに保存されていない場合は、代わりに &lt;code&gt;collect()&lt;/code&gt; メソッドを使用してください。 &lt;code&gt;collect()&lt;/code&gt; は &lt;code&gt;Traversable&lt;/code&gt; を取ります。これは、テンプレート名をキーとして、テンプレートの内容を値として返す必要があります（ &lt;code&gt;\Twig\Util\TemplateDirIterator&lt;/code&gt; によって実行されます）。</target>
        </trans-unit>
        <trans-unit id="7fc49e35d2108cbe2d2ebfaf2ba103b8512e1c04" translate="yes" xml:space="preserve">
          <source>Imagine having a generic helper template that define how to render HTML forms via macros (called &lt;code&gt;forms.html&lt;/code&gt;):</source>
          <target state="translated">マクロを介してHTMLフォームをレンダリングする方法を定義する汎用ヘルパーテンプレート（ &lt;code&gt;forms.html&lt;/code&gt; と呼ばれる）があると想像してみてください。</target>
        </trans-unit>
        <trans-unit id="f32be784a9fd750f505617b04b2e4df4592177d3" translate="yes" xml:space="preserve">
          <source>Imagine we have a helper module that renders forms (called &lt;code&gt;forms.html&lt;/code&gt;):</source>
          <target state="translated">フォームをレンダリングするヘルパーモジュール（ &lt;code&gt;forms.html&lt;/code&gt; と呼ばれます）があるとします。</target>
        </trans-unit>
        <trans-unit id="8781d615fd77be9578225c40ac67b9471394cced" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="translated">Implementation</target>
        </trans-unit>
        <trans-unit id="dbe590d57ea316a9ac7c8db3e10089fb2960ef01" translate="yes" xml:space="preserve">
          <source>Implementation difficulty?</source>
          <target state="translated">実装の難しさ?</target>
        </trans-unit>
        <trans-unit id="d6fbc9d2bdd580e18ed0bc5805dc26db323d6f5f" translate="yes" xml:space="preserve">
          <source>Import</source>
          <target state="translated">Import</target>
        </trans-unit>
        <trans-unit id="f0ac04952c10af1b6c6cec7e2d0e50991456ca71" translate="yes" xml:space="preserve">
          <source>Imported macros are always &lt;strong&gt;local&lt;/strong&gt; to the current template. It means that macros are available in all blocks and other macros defined in the current template, but they are not available in included templates or child templates; you need to explicitly re-import macros in each template.</source>
          <target state="translated">インポートされたマクロは、常に現在のテンプレートに対して&lt;strong&gt;ローカル&lt;/strong&gt;です。これは、マクロは現在のテンプレートで定義されているすべてのブロックおよびその他のマクロで使用できますが、含まれているテンプレートまたは子テンプレートでは使用できないことを意味します。各テンプレートでマクロを明示的に再インポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="5f946c4014e076b0c5984924af8d9249f3943877" translate="yes" xml:space="preserve">
          <source>Imported macros are not available in the body of &lt;code&gt;embed&lt;/code&gt; tags, you need to explicitly re-import macros inside the tag.</source>
          <target state="translated">インポートされたマクロは、 &lt;code&gt;embed&lt;/code&gt; タグの本体では使用できません。タグ内のマクロを明示的に再インポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="d23b4cd6cf61e84e8fb1fffdcff8886611ae7fbf" translate="yes" xml:space="preserve">
          <source>Importing Macros</source>
          <target state="translated">マクロのインポート</target>
        </trans-unit>
        <trans-unit id="6a9e625370a9655dd8ee33e68eacc99478a76e91" translate="yes" xml:space="preserve">
          <source>In addition to the spaceless tag you can also control whitespace on a per tag level. By using the whitespace control modifier on your tags, you can trim leading and or trailing whitespace:</source>
          <target state="translated">スペースのないタグに加えて、タグのレベルごとに空白を制御することができます。タグに whitespace control モディファイアを使用することで、先頭の空白や末尾の空白をトリミングすることができます。</target>
        </trans-unit>
        <trans-unit id="8fed2d4da289b2556399d4137859b8704e305e41" translate="yes" xml:space="preserve">
          <source>In addition to the whitespace modifiers, Twig also has a &lt;code&gt;spaceless&lt;/code&gt; filter that removes whitespace &lt;strong&gt;between HTML tags&lt;/strong&gt;:</source>
          <target state="translated">空白修飾子に加えて、Twigには&lt;strong&gt;HTMLタグ間の&lt;/strong&gt;空白を削除するスペース &lt;code&gt;spaceless&lt;/code&gt; フィルターもあり&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="dd8952829248ab05284ea5168bbb8720baa2e61a" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;code&gt;defined&lt;/code&gt; test can check for the existence of a dynamic attribute:</source>
          <target state="translated">さらに、 &lt;code&gt;defined&lt;/code&gt; テストは、動的属性の存在を確認できます。</target>
        </trans-unit>
        <trans-unit id="39bb8e73e6f9e62161bf54076cf5b03a73e3607c" translate="yes" xml:space="preserve">
          <source>In an HTML context, wrap the output with a &lt;code&gt;pre&lt;/code&gt; tag to make it easier to read:</source>
          <target state="translated">HTMLコンテキストでは、出力を &lt;code&gt;pre&lt;/code&gt; タグでラップして読みやすくします。</target>
        </trans-unit>
        <trans-unit id="66ee2404d68362ab3da2d53f2a28712e7ee5896b" translate="yes" xml:space="preserve">
          <source>In fact, you rarely need to create tags; and that&amp;rsquo;s good news because tags are the most complex extension point.</source>
          <target state="translated">実際、タグを作成する必要はめったにありません。タグは最も複雑な拡張ポイントであるため、これは朗報です。</target>
        </trans-unit>
        <trans-unit id="908d563cd3b942c5017ac5a60932077cd7caf1ce" translate="yes" xml:space="preserve">
          <source>In fact, you rarely need to create tags; and that's good news because tags are the most complex extension point of Twig.</source>
          <target state="translated">実際、タグを作成する必要はほとんどありません。タグはTwigの最も複雑な拡張ポイントだからです。</target>
        </trans-unit>
        <trans-unit id="7cc95a2045c293769a9e91d096ba4a538fc9570b" translate="yes" xml:space="preserve">
          <source>In such a situation, the &lt;code&gt;embed&lt;/code&gt; tag comes in handy. The common layout code can live in a single base template, and the two different content structures, let&amp;rsquo;s call them &amp;ldquo;micro layouts&amp;rdquo; go into separate templates which are embedded as necessary:</source>
          <target state="translated">このような状況では、 &lt;code&gt;embed&lt;/code&gt; タグが役立ちます。共通のレイアウトコードは単一の基本テンプレートに含めることができ、2つの異なるコンテンツ構造を「マイクロレイアウト」と呼び、必要に応じて埋め込まれる個別のテンプレートに入れます。</target>
        </trans-unit>
        <trans-unit id="8180188e82ddfd83e0bd99274423483f7ec9856c" translate="yes" xml:space="preserve">
          <source>In such a situation, the &lt;code&gt;embed&lt;/code&gt; tag comes in handy. The common layout code can live in a single base template, and the two different content structures, let's call them &quot;micro layouts&quot; go into separate templates which are embedded as necessary:</source>
          <target state="translated">このような状況では、 &lt;code&gt;embed&lt;/code&gt; タグが便利です。共通のレイアウトコードは単一のベーステンプレートに含めることができ、2つの異なるコンテンツ構造を「マイクロレイアウト」と呼び、必要に応じて埋め込まれた個別のテンプレートに入れます。</target>
        </trans-unit>
        <trans-unit id="36c7d75266040e90099508a1e217df9592fe7b55" translate="yes" xml:space="preserve">
          <source>In the above code, we have added a single new tag, defined by the &lt;code&gt;Project_Set_TokenParser&lt;/code&gt; class. The &lt;code&gt;Project_Set_TokenParser&lt;/code&gt; class is responsible for parsing the tag and compiling it to PHP.</source>
          <target state="translated">上記のコードでは、 &lt;code&gt;Project_Set_TokenParser&lt;/code&gt; クラスによって定義された単一の新しいタグを追加しています。 &lt;code&gt;Project_Set_TokenParser&lt;/code&gt; のクラスは、タグを解析し、PHPにそれをコンパイルするための責任があります。</target>
        </trans-unit>
        <trans-unit id="465899ed2ed898ed5e4c4b17b172e486d88e1edc" translate="yes" xml:space="preserve">
          <source>In the inner loop, the &lt;code&gt;loop.parent&lt;/code&gt; variable is used to access the outer context. So, the index of the current &lt;code&gt;topic&lt;/code&gt; defined in the outer for loop is accessible via the &lt;code&gt;loop.parent.loop.index&lt;/code&gt; variable.</source>
          <target state="translated">内側のループでは、 &lt;code&gt;loop.parent&lt;/code&gt; 変数を使用して外側のコンテキストにアクセスします。したがって、外側のforループで定義されている現在の &lt;code&gt;topic&lt;/code&gt; インデックスには、 &lt;code&gt;loop.parent.loop.index&lt;/code&gt; 変数を介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="3af3c7bb4b707246b0979219eaa2c4f59d7d4bf9" translate="yes" xml:space="preserve">
          <source>In the simplest form you can use it to test if an expression evaluates to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">最も単純な形式では、これを使用して式が &lt;code&gt;true&lt;/code&gt; と評価されるかどうかをテストできます。</target>
        </trans-unit>
        <trans-unit id="cd1bddc75c0900fe4ac0ccb2bb7c69e250b3c812" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;parent()&lt;/code&gt; will correctly call the &lt;code&gt;sidebar&lt;/code&gt; block from the &lt;code&gt;blocks.html&lt;/code&gt; template.</source>
          <target state="translated">この例では、 &lt;code&gt;parent()&lt;/code&gt; は、 &lt;code&gt;blocks.html&lt;/code&gt; テンプレートから &lt;code&gt;sidebar&lt;/code&gt; ブロックを正しく呼び出します。</target>
        </trans-unit>
        <trans-unit id="981489d50bc34860e72f589bb39d5ad47a56581b" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; tags define four blocks that child templates can fill in.</source>
          <target state="translated">この例では、&lt;a href=&quot;block&quot;&gt;block&lt;/a&gt;タグは、子テンプレートが入力できる4つのブロックを定義します。</target>
        </trans-unit>
        <trans-unit id="311b1a5b2f5865ab6be5683acb6f5128bdf320ec" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;tags/block&quot;&gt;block&lt;/a&gt; tags define four blocks that child templates can fill in. All the &lt;code&gt;block&lt;/code&gt; tag does is to tell the template engine that a child template may override those portions of the template.</source>
          <target state="translated">この例では、&lt;a href=&quot;tags/block&quot;&gt;block&lt;/a&gt;タグは、子テンプレートが入力できる4つのブロックを定義します &lt;code&gt;block&lt;/code&gt; タグが行うのは、子テンプレートがテンプレートのこれらの部分をオーバーライドできることをテンプレートエンジンに伝えることだけです。</target>
        </trans-unit>
        <trans-unit id="707ab29c25fe20587428f1a61b60cbd4cda92345" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;/p&amp;gt;&lt;/code&gt; tags won&amp;rsquo;t be removed from the string.</source>
          <target state="translated">この例では、 &lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 、および &lt;code&gt;&amp;lt;/p&amp;gt;&lt;/code&gt; タグは文字列から削除されません。</target>
        </trans-unit>
        <trans-unit id="159e47262a57705a495ccfdfe44c92b48d0e9289" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;/p&amp;gt;&lt;/code&gt; tags won't be removed from the string.</source>
          <target state="translated">この例では、 &lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 、および &lt;code&gt;&amp;lt;/p&amp;gt;&lt;/code&gt; タグは文字列から削除されません。</target>
        </trans-unit>
        <trans-unit id="a82a412de8d5a33c62340f8b2684dd02f0af610e" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;use&lt;/code&gt; statement imports the &lt;code&gt;sidebar&lt;/code&gt; block into the main template. The code is mostly equivalent to the following one (the imported blocks are not outputted automatically):</source>
          <target state="translated">この例では、 &lt;code&gt;use&lt;/code&gt; ステートメントは &lt;code&gt;sidebar&lt;/code&gt; ブロックをメインテンプレートにインポートします。コードはほとんど次のコードと同等です（インポートされたブロックは自動的に出力されません）：</target>
        </trans-unit>
        <trans-unit id="980bffcd10bd0a042da20bbafc7dd0a698071ffd" translate="yes" xml:space="preserve">
          <source>In this example, the template will extend the &quot;minimum.html&quot; layout template if the &lt;code&gt;standalone&lt;/code&gt; variable evaluates to &lt;code&gt;true&lt;/code&gt;, and &quot;base.html&quot; otherwise.</source>
          <target state="translated">この例では、 &lt;code&gt;standalone&lt;/code&gt; 変数の評価が &lt;code&gt;true&lt;/code&gt; の場合、テンプレートは「minimum.html」レイアウトテンプレートを拡張し、そうでない場合は「base.html」を拡張します。</target>
        </trans-unit>
        <trans-unit id="fb7a15f7a1ecbb45ba659b431c71ef0536d48e06" translate="yes" xml:space="preserve">
          <source>In this example, the template will extend the &amp;ldquo;minimum.html&amp;rdquo; layout template if the &lt;code&gt;standalone&lt;/code&gt; variable evaluates to &lt;code&gt;true&lt;/code&gt;, and &amp;ldquo;base.html&amp;rdquo; otherwise.</source>
          <target state="translated">この例では、 &lt;code&gt;standalone&lt;/code&gt; 変数が &lt;code&gt;true&lt;/code&gt; と評価された場合、テンプレートは「minimum.html」レイアウトテンプレートを拡張し、それ以外の場合は「base.html」を拡張します。</target>
        </trans-unit>
        <trans-unit id="9c72a0059b780364bca84ccdf4380863974e19a4" translate="yes" xml:space="preserve">
          <source>Included templates have access to the variables of the active context.</source>
          <target state="translated">含まれるテンプレートは、アクティブなコンテキストの変数にアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="2da59be8085f79a33e81332a9b539d6207917436" translate="yes" xml:space="preserve">
          <source>Including other Templates</source>
          <target state="translated">他のテンプレートを含む</target>
        </trans-unit>
        <trans-unit id="eec07433cd724a3acdf1de54a99a9b54113c7ae9" translate="yes" xml:space="preserve">
          <source>Indent your code inside tags (use the same indentation as the one used for the target language of the rendered template):</source>
          <target state="translated">タグ内のコードをインデントします(レンダリングされたテンプレートのターゲット言語で使用されているものと同じインデントを使用してください)。</target>
        </trans-unit>
        <trans-unit id="c8c4738ce44cf9c03eb8235abaaae13ef3ad41bf" translate="yes" xml:space="preserve">
          <source>Inside code blocks you can also assign values to variables. Assignments use the &lt;code&gt;set&lt;/code&gt; tag and can have multiple targets.</source>
          <target state="translated">コードブロック内では、変数に値を割り当てることもできます。割り当ては &lt;code&gt;set&lt;/code&gt; タグを使用し、複数のターゲットを持つことができます。</target>
        </trans-unit>
        <trans-unit id="66367dd2714df124b07f6a60e42daf59a102cb99" translate="yes" xml:space="preserve">
          <source>Inside of a &lt;code&gt;for&lt;/code&gt; loop block you can access some special variables:</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; ループブロック内では、いくつかの特別な変数にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="d021f32066e1d162d4807369a92e503e42dd9386" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://getcomposer.org/download/&quot;&gt;Composer&lt;/a&gt; and run the following command to get the latest version:</source>
          <target state="translated">&lt;a href=&quot;https://getcomposer.org/download/&quot;&gt;Composer&lt;/a&gt;をインストールし、次のコマンドを実行して最新バージョンを取得します。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="a1ec4edbd514825eabcf3f42d5dcc9d5bbf903d8" translate="yes" xml:space="preserve">
          <source>Instead of defining variables at the beginning of the scope, you can pass a hash of variables you want to define in the &lt;code&gt;with&lt;/code&gt; tag; the previous example is equivalent to the following one:</source>
          <target state="translated">スコープの先頭で変数を定義する代わりに、 &lt;code&gt;with&lt;/code&gt; タグで定義する変数のハッシュを渡すことができます。前の例は、次の例と同等です。</target>
        </trans-unit>
        <trans-unit id="13636e65321fd12c3003f0e74463e8dc2e906f6d" translate="yes" xml:space="preserve">
          <source>Internally, &lt;code&gt;escape&lt;/code&gt; uses the PHP native &lt;a href=&quot;https://secure.php.net/htmlspecialchars&quot;&gt;htmlspecialchars&lt;/a&gt; function for the HTML escaping strategy.</source>
          <target state="translated">内部的に、 &lt;code&gt;escape&lt;/code&gt; はHTMLエスケープ戦略にPHPネイティブの&lt;a href=&quot;https://secure.php.net/htmlspecialchars&quot;&gt;htmlspecialchars&lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="2839d7517d48ead9abb29e54f179a635d289b471" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/abs&quot;&gt;abs&lt;/a&gt; function.</source>
          <target state="translated">内部的には、TwigはPHPの&lt;a href=&quot;https://secure.php.net/abs&quot;&gt;abs&lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="3a256385484a5e54d8e2892e0684a46cfe162a57" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/array_column&quot;&gt;array_column&lt;/a&gt; function.</source>
          <target state="translated">内部的には、TwigはPHPの&lt;a href=&quot;https://secure.php.net/array_column&quot;&gt;array_column&lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="999e1991e74a82497d5a93be16b843bfa74c429d" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/array_merge&quot;&gt;array_merge&lt;/a&gt; function. It supports Traversable objects by transforming those to arrays.</source>
          <target state="translated">内部的には、TwigはPHPの&lt;a href=&quot;https://secure.php.net/array_merge&quot;&gt;array_merge&lt;/a&gt;関数を使用します。それらを配列に変換することでTraversableオブジェクトをサポートします。</target>
        </trans-unit>
        <trans-unit id="45e217e625bdc2f66adaa6cad5e61a8e79836a19" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/asort&quot;&gt;asort&lt;/a&gt; function to maintain index association. It supports Traversable objects by transforming those to arrays.</source>
          <target state="translated">内部的には、TwigはPHPの&lt;a href=&quot;https://secure.php.net/asort&quot;&gt;asort&lt;/a&gt;関数を使用して、インデックスの関連付けを維持しています。それらを配列に変換することでTraversableオブジェクトをサポートします。</target>
        </trans-unit>
        <trans-unit id="1f3576cbb1c9a2a4d0626742ef427fbc99e4c2b2" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/explode&quot;&gt;explode&lt;/a&gt; or &lt;a href=&quot;https://secure.php.net/str_split&quot;&gt;str_split&lt;/a&gt; (if delimiter is empty) functions for string splitting.</source>
          <target state="translated">内部的には、小枝は、PHPが使用&lt;a href=&quot;https://secure.php.net/explode&quot;&gt;爆発&lt;/a&gt;又は&lt;a href=&quot;https://secure.php.net/str_split&quot;&gt;str_split&lt;/a&gt;ストリング分割する機能（区切り文字が空の場合）。</target>
        </trans-unit>
        <trans-unit id="cfe95a226368e9873101aae5ad05e6c9e5073778" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/flush&quot;&gt;flush&lt;/a&gt; function.</source>
          <target state="translated">内部的には、TwigはPHPの&lt;a href=&quot;https://secure.php.net/flush&quot;&gt;フラッシュ&lt;/a&gt;機能を使用しています。</target>
        </trans-unit>
        <trans-unit id="a009c0ede20fc40a5c1a0c0321e74fdc0e587fdd" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/json_encode&quot;&gt;json_encode&lt;/a&gt; function.</source>
          <target state="translated">内部的には、TwigはPHPの&lt;a href=&quot;https://secure.php.net/json_encode&quot;&gt;json_encode&lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="a517bd02f4c8e1ed67bd64ee8800df8b7b2fa7cb" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/rawurlencode&quot;&gt;rawurlencode&lt;/a&gt; or the &lt;a href=&quot;https://secure.php.net/http_build_query&quot;&gt;http_build_query&lt;/a&gt; function.</source>
          <target state="translated">内部的には、Twigは&lt;a href=&quot;https://secure.php.net/rawurlencode&quot;&gt;PHPrawurlencode&lt;/a&gt;または&lt;a href=&quot;https://secure.php.net/http_build_query&quot;&gt;http_build_query&lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="32e9b399aebaba99cad3cfd944a3b5c19fa43bb2" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/strip_tags&quot;&gt;strip_tags&lt;/a&gt; function.</source>
          <target state="translated">内部的には、TwigはPHPの&lt;a href=&quot;https://secure.php.net/strip_tags&quot;&gt;strip_tags&lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="1ed2a90a17e16014a5f81eed030947a88e3a5d3d" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/trim&quot;&gt;trim&lt;/a&gt;, &lt;a href=&quot;https://secure.php.net/ltrim&quot;&gt;ltrim&lt;/a&gt;, and &lt;a href=&quot;https://secure.php.net/rtrim&quot;&gt;rtrim&lt;/a&gt; functions.</source>
          <target state="translated">内部的には、TwigはPHPの&lt;a href=&quot;https://secure.php.net/trim&quot;&gt;trim&lt;/a&gt;、&lt;a href=&quot;https://secure.php.net/ltrim&quot;&gt;ltrim&lt;/a&gt;、および&lt;a href=&quot;https://secure.php.net/rtrim&quot;&gt;rtrim&lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="953c0bab70e8b2b160858a258514b4dad8c08041" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/var_dump&quot;&gt;var_dump&lt;/a&gt; function.</source>
          <target state="translated">内部的には、TwigはPHPの&lt;a href=&quot;https://secure.php.net/var_dump&quot;&gt;var_dump&lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="1eec0c8bbb39fa158960757b8c9d6cea2ac491f8" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;code&gt;rawurlencode&lt;/code&gt;.</source>
          <target state="translated">内部的には、TwigはPHP &lt;code&gt;rawurlencode&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="035609c9f68c6df67a38534f6f58542179ed547c" translate="yes" xml:space="preserve">
          <source>It also works if the property does not exist but is rather defined dynamically thanks to the magic &lt;code&gt;__get()&lt;/code&gt; method; you just need to also implement the &lt;code&gt;__isset()&lt;/code&gt; magic method like shown in the following snippet of code:</source>
          <target state="translated">プロパティが存在しない場合でも機能しますが、マジック &lt;code&gt;__get()&lt;/code&gt; メソッドのおかげで動的に定義されます。次のコードスニペットに示すように、 &lt;code&gt;__isset()&lt;/code&gt; マジックメソッドも実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="758f7c9192c4f21e23d177ded6b70f4096d54a98" translate="yes" xml:space="preserve">
          <source>It also works if the property does not exist but is rather defined dynamically thanks to the magic &lt;code&gt;__get()&lt;/code&gt; method; you need to also implement the &lt;code&gt;__isset()&lt;/code&gt; magic method like shown in the following snippet of code:</source>
          <target state="translated">プロパティが存在しない場合にも機能しますが、魔法の &lt;code&gt;__get()&lt;/code&gt; メソッドのおかげで動的に定義されます。次のコードスニペットに示すように、 &lt;code&gt;__isset()&lt;/code&gt; マジックメソッドも実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="b3073d1ad21404b047c88767f6b6ff41587ad667" translate="yes" xml:space="preserve">
          <source>It also works with mappings:</source>
          <target state="translated">マッピングにも対応しています。</target>
        </trans-unit>
        <trans-unit id="1c869afe5c305b0aa7fda9513f76282d1d48a4a1" translate="yes" xml:space="preserve">
          <source>It also works with objects implementing the &lt;a href=&quot;https://secure.php.net/Traversable&quot;&gt;Traversable&lt;/a&gt; interface.</source>
          <target state="translated">また、&lt;a href=&quot;https://secure.php.net/Traversable&quot;&gt;Traversable&lt;/a&gt;インターフェースを実装するオブジェクトでも機能します。</target>
        </trans-unit>
        <trans-unit id="a4321564546fe93d632d7f92f99e22d71c2aacc5" translate="yes" xml:space="preserve">
          <source>It also works with objects implementing the &lt;a href=&quot;https://secure.php.net/manual/en/class.traversable.php&quot;&gt;Traversable&lt;/a&gt; interface.</source>
          <target state="translated">また、&lt;a href=&quot;https://secure.php.net/manual/en/class.traversable.php&quot;&gt;Traversable&lt;/a&gt;インターフェースを実装するオブジェクトでも機能します。</target>
        </trans-unit>
        <trans-unit id="29fe677cb865db79eefb4ef834bd6d89da8c06c3" translate="yes" xml:space="preserve">
          <source>It can also look for templates in an array of directories:</source>
          <target state="translated">また、ディレクトリの配列からテンプレートを探すこともできます。</target>
        </trans-unit>
        <trans-unit id="8dfe5bd84206702e7a1b0f38ba32364c4ec0edda" translate="yes" xml:space="preserve">
          <source>It can be also useful with letters:</source>
          <target state="translated">文字でも使えます。</target>
        </trans-unit>
        <trans-unit id="2fb2c0e43b8be4a883eeb2055997be7897172948" translate="yes" xml:space="preserve">
          <source>It is now possible to move the runtime logic to a new &lt;code&gt;Project_Twig_RuntimeExtension&lt;/code&gt; class and use it directly in the extension:</source>
          <target state="translated">ランタイムロジックを新しい &lt;code&gt;Project_Twig_RuntimeExtension&lt;/code&gt; クラスに移動して、拡張機能で直接使用することが可能になりました。</target>
        </trans-unit>
        <trans-unit id="68545c2a02ea8a8ff64fad2cf7905735ede1eb54" translate="yes" xml:space="preserve">
          <source>It is recommended to use the &lt;a href=&quot;../functions/include&quot;&gt;include&lt;/a&gt; function instead as it provides the same features with a bit more flexibility:</source>
          <target state="translated">代わりに&lt;a href=&quot;../functions/include&quot;&gt;include&lt;/a&gt;関数を使用することをお勧めします。これは、同じ機能をもう少し柔軟性を持って提供するためです。</target>
        </trans-unit>
        <trans-unit id="46f741939632241afedefbcd39e83975826b2c68" translate="yes" xml:space="preserve">
          <source>It is sometimes desirable or even necessary to have Twig ignore parts it would otherwise handle as variables or blocks. For example if the default syntax is used and you want to use &lt;code&gt;{{&lt;/code&gt; as raw string in the template and not start a variable you have to use a trick.</source>
          <target state="translated">Twigが変数やブロックとして処理する部分を無視することが望ましい場合や必要な場合さえあります。たとえば、デフォルトの構文が使用されており、テンプレートで生の文字列として &lt;code&gt;{{&lt;/code&gt; を使用し、変数を開始しない場合は、トリックを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="39e24ed8ecf68080b57fed7a858fc45b7d87a24b" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;true&lt;/code&gt; if the left operand is contained in the right:</source>
          <target state="translated">左側のオペランドが右側に含まれている場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2f48f2e4e2d1732d610c58b5c55da874660d68a1" translate="yes" xml:space="preserve">
          <source>It turns out it is possible to get this to work, by adding a directory right at the end of your template directories, which is the parent of all of the other directories: &lt;code&gt;.../templates&lt;/code&gt; in our case. This has the effect of making every template file within our system uniquely addressable. Most of the time you will use the &quot;normal&quot; paths, but in the special case of wanting to extend a template with an overriding version of itself we can reference its parent's full, unambiguous template path in the extends tag:</source>
          <target state="translated">他のすべてのディレクトリの親であるテンプレートディレクトリの最後にディレクトリを追加することで、これを機能させることが可能であることがわかります。この場合は &lt;code&gt;.../templates&lt;/code&gt; です。これにより、システム内のすべてのテンプレートファイルを一意にアドレス指定できるようになります。ほとんどの場合、「通常の」パスを使用しますが、テンプレートをそれ自体のオーバーライドバージョンで拡張する特別なケースでは、親の完全で明確な完全なテンプレートパスをextendsタグで参照できます。</target>
        </trans-unit>
        <trans-unit id="a1355c3d3b50852a6fde28f0b252e8a98d4b7769" translate="yes" xml:space="preserve">
          <source>It turns out it is possible to get this to work, by adding a directory right at the end of your template directories, which is the parent of all of the other directories: &lt;code&gt;.../templates&lt;/code&gt; in our case. This has the effect of making every template file within our system uniquely addressable. Most of the time you will use the &amp;ldquo;normal&amp;rdquo; paths, but in the special case of wanting to extend a template with an overriding version of itself we can reference its parent&amp;rsquo;s full, unambiguous template path in the extends tag:</source>
          <target state="translated">テンプレートディレクトリの最後にディレクトリを追加することで、これを機能させることができます。このディレクトリは、他のすべてのディレクトリの親です。この場合は &lt;code&gt;.../templates&lt;/code&gt; です。これには、システム内のすべてのテンプレートファイルを一意にアドレス指定できるようにする効果があります。ほとんどの場合、「通常の」パスを使用しますが、テンプレートをそれ自体のオーバーライドバージョンで拡張する特別な場合は、extendsタグで親の完全で明確なテンプレートパスを参照できます。</target>
        </trans-unit>
        <trans-unit id="6a09eed10c1dbcd6087594a7fc212f0dee3536b7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s easier to understand the concept by starting with an example.</source>
          <target state="translated">例から始めると、概念を理解しやすくなります。</target>
        </trans-unit>
        <trans-unit id="3af4fd96eb23be6f68083ff003e624921c41d0ad" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to know that the curly braces are &lt;em&gt;not&lt;/em&gt; part of the variable but the print statement. When accessing variables inside tags, don&amp;rsquo;t put the braces around them.</source>
          <target state="translated">これは、中括弧があることを知っておくことが重要です&lt;em&gt;いない&lt;/em&gt;変数が、print文の一部。タグ内の変数にアクセスするときは、それらを中括弧で囲まないでください。</target>
        </trans-unit>
        <trans-unit id="623c7fecbc0de48cce22dbd05521382132938f5c" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to render the contents of the parent block by using the &lt;a href=&quot;../functions/parent&quot;&gt;parent&lt;/a&gt; function. This gives back the results of the parent block:</source>
          <target state="translated">&lt;a href=&quot;../functions/parent&quot;&gt;親&lt;/a&gt;関数を使用して、親ブロックの内容をレンダリングすることができます。これにより、親ブロックの結果が返されます。</target>
        </trans-unit>
        <trans-unit id="338334a61a937764d2a051dd4307598dafa150f1" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to render the contents of the parent block by using the &lt;a href=&quot;functions/parent&quot;&gt;parent&lt;/a&gt; function. This gives back the results of the parent block:</source>
          <target state="translated">&lt;a href=&quot;functions/parent&quot;&gt;親&lt;/a&gt;関数を使用して、親ブロックの内容をレンダリングすることができます。これにより、親ブロックの結果が返されます。</target>
        </trans-unit>
        <trans-unit id="465666602f25190ff7e422499feae3ee6e642a5f" translate="yes" xml:space="preserve">
          <source>It's important to know that the curly braces are &lt;em&gt;not&lt;/em&gt; part of the variable but the print statement. When accessing variables inside tags, don't put the braces around them.</source>
          <target state="translated">これは、中括弧があることを知っておくことが重要です&lt;em&gt;いない&lt;/em&gt;変数が、print文の一部。タグ内の変数にアクセスするときは、それらを中括弧で囲まないでください。</target>
        </trans-unit>
        <trans-unit id="564a685e46312016019ba06245ef8f71432def3b" translate="yes" xml:space="preserve">
          <source>It's possible to render the contents of the parent block by using the &lt;a href=&quot;../functions/parent&quot;&gt;parent&lt;/a&gt; function. This gives back the results of the parent block:</source>
          <target state="translated">関数&lt;a href=&quot;../functions/parent&quot;&gt;parent&lt;/a&gt;を使用して、親ブロックのコンテンツをレンダリングすることが可能です。これは親ブロックの結果を返します：</target>
        </trans-unit>
        <trans-unit id="6483fc692ab94c7062d29856887e65592971b217" translate="yes" xml:space="preserve">
          <source>It's possible to render the contents of the parent block by using the &lt;a href=&quot;functions/parent&quot;&gt;parent&lt;/a&gt; function. This gives back the results of the parent block:</source>
          <target state="translated">関数&lt;a href=&quot;functions/parent&quot;&gt;parent&lt;/a&gt;を使用して、親ブロックのコンテンツをレンダリングすることが可能です。これは親ブロックの結果を返します：</target>
        </trans-unit>
        <trans-unit id="88aab1f28cfeaf19d17e8481897faebd0b8aa9fc" translate="yes" xml:space="preserve">
          <source>Iterating over Keys</source>
          <target state="translated">キーの反復処理</target>
        </trans-unit>
        <trans-unit id="30135b5ab79216fdd0cdc73fd61c8627a8d3fda3" translate="yes" xml:space="preserve">
          <source>Iterating over Keys and Values</source>
          <target state="translated">キーと値の反復処理</target>
        </trans-unit>
        <trans-unit id="9b4ba7bff30a255adc5921d365a6b18df850e43d" translate="yes" xml:space="preserve">
          <source>Iterating over a Subset</source>
          <target state="translated">サブセットの反復処理</target>
        </trans-unit>
        <trans-unit id="8b67ec30cc37da2df4f99f8f15a0a8b089da1053" translate="yes" xml:space="preserve">
          <source>Keep in mind the following when you want to extend Twig:</source>
          <target state="translated">Twigを拡張する場合は以下の点に注意してください。</target>
        </trans-unit>
        <trans-unit id="f1fd171fa90105404ddd994a950730569b172bc3" translate="yes" xml:space="preserve">
          <source>Last but not the least, you can also use a &lt;em&gt;global&lt;/em&gt; object with a method able to generate lorem ipsum text:</source>
          <target state="translated">最後になりましたが、lorem ipsumテキストを生成できるメソッドで&lt;em&gt;グローバル&lt;/em&gt;オブジェクトを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="a0ef977fcdf38807b3d044c0172add68ffb5bd27" translate="yes" xml:space="preserve">
          <source>Lastly, you can also use a &lt;em&gt;global&lt;/em&gt; object with a method able to generate lorem ipsum text:</source>
          <target state="translated">最後に、loremipsumテキストを生成できるメソッドで&lt;em&gt;グローバル&lt;/em&gt;オブジェクトを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="97596f5bd56ab0869aa4c872007aad037fd1e96e" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a &lt;code&gt;set&lt;/code&gt; tag that allows the definition of simple variables from within a template. The tag can be used like follows:</source>
          <target state="translated">テンプレート内から単純な変数を定義できるようにする &lt;code&gt;set&lt;/code&gt; タグを作成しましょう。タグは次のように使用できます。</target>
        </trans-unit>
        <trans-unit id="3cebca85de999e1aac3b5bcf4b766cd1b5fd0b0f" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s define a base template, &lt;code&gt;base.html&lt;/code&gt;, which defines a simple HTML skeleton document:</source>
          <target state="translated">単純なHTMLスケルトンドキュメントを定義するベーステンプレート &lt;code&gt;base.html&lt;/code&gt; を定義しましょう。</target>
        </trans-unit>
        <trans-unit id="b48fd7da674b71fa42b8cf6c6aa846f39814e375" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s define a base template, &lt;code&gt;base.html&lt;/code&gt;, which defines an HTML skeleton document that might be used for a two-column page:</source>
          <target state="translated">2列のページに使用される可能性のあるHTMLスケルトンドキュメントを定義するベーステンプレート &lt;code&gt;base.html&lt;/code&gt; を定義しましょう。</target>
        </trans-unit>
        <trans-unit id="48078ba05442f9f14ce18cd86850785fce965180" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say that your templates are loaded from both &lt;code&gt;.../templates/mysite&lt;/code&gt; and &lt;code&gt;.../templates/default&lt;/code&gt; in this order. The &lt;code&gt;page.twig&lt;/code&gt; template, stored in &lt;code&gt;.../templates/default&lt;/code&gt; reads as follows:</source>
          <target state="translated">テンプレートが &lt;code&gt;.../templates/mysite&lt;/code&gt; と &lt;code&gt;.../templates/default&lt;/code&gt; の両方からこの順序でロードされたとしましょう。 &lt;code&gt;page.twig&lt;/code&gt; の中に保存されたテンプレート、 &lt;code&gt;.../templates/default&lt;/code&gt; 次のように読み取ります。</target>
        </trans-unit>
        <trans-unit id="9039ee00b9572df95e50759e8d6122ec4ac1300d" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see some common use cases.</source>
          <target state="translated">いくつかの一般的な使用例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="44a36919c2de62dc4caf18fd6af92e630c445085" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take another example: a block included within an &lt;code&gt;if&lt;/code&gt; statement:</source>
          <target state="translated">別の例を見てみましょう： &lt;code&gt;if&lt;/code&gt; ステートメントに含まれるブロック：</target>
        </trans-unit>
        <trans-unit id="9b4901ad77ca69d7205ff01955e0f371048090ef" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take the following example to illustrate how a block works and more importantly, how it does not work:</source>
          <target state="translated">次の例を見て、ブロックがどのように機能するか、さらに重要なことに、ブロックがどのように機能しないかを説明しましょう。</target>
        </trans-unit>
        <trans-unit id="d9bb4fa3109d50c316f1fd5d20b878185c63c2aa" translate="yes" xml:space="preserve">
          <source>Let's create a simple &lt;code&gt;set&lt;/code&gt; tag that allows the definition of simple variables from within a template. The tag can be used like follows:</source>
          <target state="translated">テンプレート内から単純な変数を定義できる単純な &lt;code&gt;set&lt;/code&gt; タグを作成しましょう。タグは次のように使用できます。</target>
        </trans-unit>
        <trans-unit id="4ef9153e1d5be3805903d14442ef1098653d6e1a" translate="yes" xml:space="preserve">
          <source>Let's define a base template, &lt;code&gt;base.html&lt;/code&gt;, which defines a simple HTML skeleton document that you might use for a simple two-column page:</source>
          <target state="translated">シンプルな2列のページに使用できるシンプルなHTMLスケルトンドキュメントを定義するベーステンプレート &lt;code&gt;base.html&lt;/code&gt; を定義してみましょう。</target>
        </trans-unit>
        <trans-unit id="a038a401f3d56f0124ac2cb309512e9fd67163a1" translate="yes" xml:space="preserve">
          <source>Let's define a base template, &lt;code&gt;base.html&lt;/code&gt;, which defines a simple HTML skeleton document:</source>
          <target state="translated">シンプルなHTMLスケルトンドキュメントを定義するベーステンプレート &lt;code&gt;base.html&lt;/code&gt; を定義しましょう。</target>
        </trans-unit>
        <trans-unit id="1faa02b2ee6fc8641109fea8b253e1120c7192bb" translate="yes" xml:space="preserve">
          <source>Let's say that your templates are loaded from both &lt;code&gt;.../templates/mysite&lt;/code&gt; and &lt;code&gt;.../templates/default&lt;/code&gt; in this order. The &lt;code&gt;page.twig&lt;/code&gt; template, stored in &lt;code&gt;.../templates/default&lt;/code&gt; reads as follows:</source>
          <target state="translated">テンプレートが &lt;code&gt;.../templates/mysite&lt;/code&gt; と &lt;code&gt;.../templates/default&lt;/code&gt; の両方からこの順序で読み込まれたとしましょう。 &lt;code&gt;page.twig&lt;/code&gt; の中に保存されたテンプレート、 &lt;code&gt;.../templates/default&lt;/code&gt; 次のように読み取ります。</target>
        </trans-unit>
        <trans-unit id="333107194d5daf3b519900f208c1a9379e402cd3" translate="yes" xml:space="preserve">
          <source>Let's take another example: a block included within an &lt;code&gt;if&lt;/code&gt; statement:</source>
          <target state="translated">別の例を見てみましょう： &lt;code&gt;if&lt;/code&gt; ステートメント内に含まれるブロック：</target>
        </trans-unit>
        <trans-unit id="ec98bf38f883c641c8e664139e952d295fc2cb10" translate="yes" xml:space="preserve">
          <source>Let's take the following example to illustrate how a block works and more importantly, how it does not work:</source>
          <target state="translated">ブロックがどのように機能するのか、さらに重要なことは、ブロックがどのように機能しないのかを説明するために、次の例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="b8784441607e9ae1e4a0d363f27f45028b927794" translate="yes" xml:space="preserve">
          <source>Licensed under the three clause BSD license.</source>
          <target state="translated">三節BSDライセンスでライセンスされています。</target>
        </trans-unit>
        <trans-unit id="fa12dc09485c5f2d9273691d047d5a5d083f91cb" translate="yes" xml:space="preserve">
          <source>Like PHP, Twig does not support multiple inheritance. So you can only have one extends tag called per rendering. However, Twig supports horizontal &lt;a href=&quot;use&quot;&gt;reuse&lt;/a&gt;.</source>
          <target state="translated">PHPと同様に、Twigは多重継承をサポートしていません。したがって、レンダリングごとに呼び出される拡張タグは1つだけです。ただし、Twigは水平方向の&lt;a href=&quot;use&quot;&gt;再利用を&lt;/a&gt;サポートしています。</target>
        </trans-unit>
        <trans-unit id="c7ba7dcf662374aafe652b03d75cb8f6024519d9" translate="yes" xml:space="preserve">
          <source>Literals</source>
          <target state="translated">Literals</target>
        </trans-unit>
        <trans-unit id="0ac5f6d59a1e5dc8d44114ce7725375609e9f673" translate="yes" xml:space="preserve">
          <source>Literals (integers, booleans, arrays, &amp;hellip;) used in the template directly as variables or filter arguments are never automatically escaped:</source>
          <target state="translated">テンプレートで変数またはフィルター引数として直接使用されるリテラル（整数、ブール値、配列など）は、自動的にエスケープされることはありません。</target>
        </trans-unit>
        <trans-unit id="d3b440ddb3e952021e0417ff7287e7b8bd1d45e8" translate="yes" xml:space="preserve">
          <source>Literals (integers, booleans, arrays, ...) used in the template directly as variables or filter arguments are never automatically escaped:</source>
          <target state="translated">テンプレート内で直接変数やフィルタ引数として使用されるリテラル(整数、ブーリアン、配列、...)は、自動的にはエスケープされません。</target>
        </trans-unit>
        <trans-unit id="4f514b04ed6b877534da140af8e12cab5016f713" translate="yes" xml:space="preserve">
          <source>Loaders</source>
          <target state="translated">Loaders</target>
        </trans-unit>
        <trans-unit id="48f0cdc3426bfa68eed3cb4d620c27f8e48479b2" translate="yes" xml:space="preserve">
          <source>Loaders are responsible for loading templates from a resource such as the file system.</source>
          <target state="translated">ローダは、ファイルシステムなどのリソースからテンプレートをロードする役割を担っています。</target>
        </trans-unit>
        <trans-unit id="87d6939af2d932b9a52ec9597a5839df8c4d0ecc" translate="yes" xml:space="preserve">
          <source>Loading a Template from a String</source>
          <target state="translated">文字列からテンプレートを読み込む</target>
        </trans-unit>
        <trans-unit id="3d52a6d8fedcc48a65297c07bf5f7e3e41aab5aa" translate="yes" xml:space="preserve">
          <source>Logic</source>
          <target state="translated">Logic</target>
        </trans-unit>
        <trans-unit id="fee5a14356621b73ac22c3c0edad01021765caac" translate="yes" xml:space="preserve">
          <source>Loop over each item in a sequence. For example, to display a list of users provided in a variable called &lt;code&gt;users&lt;/code&gt;:</source>
          <target state="translated">シーケンス内の各アイテムをループします。たとえば、usersという変数で提供される &lt;code&gt;users&lt;/code&gt; リストを表示するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="f8caaab99e30597a08e2e4af3b233a36b556425e" translate="yes" xml:space="preserve">
          <source>Macros Scoping</source>
          <target state="translated">マクロのスコープ</target>
        </trans-unit>
        <trans-unit id="002af17d5caf610dc2fe3503ceaccf6cc059a743" translate="yes" xml:space="preserve">
          <source>Macros are comparable with functions in regular programming languages. They are useful to put often used HTML idioms into reusable elements to not repeat yourself.</source>
          <target state="translated">マクロは通常のプログラミング言語の関数に匹敵します。よく使われるHTMLのイディオムを再利用可能な要素に入れて、自分を繰り返さないようにするのに便利です。</target>
        </trans-unit>
        <trans-unit id="345965812bba350396cd2f6dce74dcae3cc671d6" translate="yes" xml:space="preserve">
          <source>Macros are comparable with functions in regular programming languages. They are useful to reuse HTML fragments to not repeat yourself. They are described in the &lt;a href=&quot;tags/macro&quot;&gt;macro&lt;/a&gt; tag documentation.</source>
          <target state="translated">マクロは、通常のプログラミング言語の関数に匹敵します。HTMLフラグメントを再利用して、繰り返さないようにする場合に便利です。これらは、&lt;a href=&quot;tags/macro&quot;&gt;マクロタグの&lt;/a&gt;ドキュメントで説明されています。</target>
        </trans-unit>
        <trans-unit id="cb7fcb852103ed0a63a181a772614b4571a71011" translate="yes" xml:space="preserve">
          <source>Macros are comparable with functions in regular programming languages. They are useful to reuse often used HTML fragments to not repeat yourself.</source>
          <target state="translated">マクロは通常のプログラミング言語の関数に匹敵します。マクロは、よく使うHTMLの断片を再利用して、自分を繰り返さないようにするのに便利です。</target>
        </trans-unit>
        <trans-unit id="d0c92cc858836450dea55d8030e7b4b3a1cdef5d" translate="yes" xml:space="preserve">
          <source>Macros are comparable with functions in regular programming languages. They are useful to reuse template fragments to not repeat yourself.</source>
          <target state="translated">マクロは通常のプログラミング言語の関数に匹敵します。マクロはテンプレートの断片を再利用して自分を繰り返さないようにするのに便利です。</target>
        </trans-unit>
        <trans-unit id="b024e54c9fcc0397c80e78ceb540e09e3c70de07" translate="yes" xml:space="preserve">
          <source>Macros are defined in regular templates.</source>
          <target state="translated">マクロは通常のテンプレートで定義されています。</target>
        </trans-unit>
        <trans-unit id="52e0d1ecb820a6b4a6718778558b574290158f29" translate="yes" xml:space="preserve">
          <source>Macros can be defined in any template, and need to be &quot;imported&quot; before being used (see the documentation for the &lt;a href=&quot;import&quot;&gt;import&lt;/a&gt; tag for more information):</source>
          <target state="translated">マクロは任意のテンプレートで定義でき、使用する前に「インポート」する必要があります（詳細については、&lt;a href=&quot;import&quot;&gt;インポート&lt;/a&gt;タグのドキュメントを参照してください）。</target>
        </trans-unit>
        <trans-unit id="2f3085e663536adf3e5dbb75d79b0e921e111391" translate="yes" xml:space="preserve">
          <source>Macros can be defined in any template, and need to be &quot;imported&quot; via the &lt;a href=&quot;tags/import&quot;&gt;import&lt;/a&gt; tag before being used:</source>
          <target state="translated">マクロは任意のテンプレートで定義でき、使用する前に&lt;a href=&quot;tags/import&quot;&gt;インポート&lt;/a&gt;タグを介して「インポート」する必要があります。</target>
        </trans-unit>
        <trans-unit id="4ef6d6a58054ae9889caea03f0dbfb4a83c2fb2a" translate="yes" xml:space="preserve">
          <source>Macros differ from native PHP functions in a few ways:</source>
          <target state="translated">マクロは、ネイティブの PHP 関数とはいくつかの点で異なります。</target>
        </trans-unit>
        <trans-unit id="305e5fae1f0f54206b1804a471337b9a97a4e417" translate="yes" xml:space="preserve">
          <source>Making a Layout conditional</source>
          <target state="translated">レイアウト条件の作成</target>
        </trans-unit>
        <trans-unit id="4fc17e09652fcc579a87a75286e97481eb20bfc9" translate="yes" xml:space="preserve">
          <source>Making an Include dynamic</source>
          <target state="translated">インクルードの動的な作成</target>
        </trans-unit>
        <trans-unit id="af62f3eceb714a029d9896c6bcb26ce781a27a63" translate="yes" xml:space="preserve">
          <source>Many IDEs support syntax highlighting and auto-completion for Twig:</source>
          <target state="translated">多くのIDEはTwigの構文ハイライトと自動補完をサポートしています。</target>
        </trans-unit>
        <trans-unit id="3edf0df49942da6d11a1a217e4d3af4a5a8e64f2" translate="yes" xml:space="preserve">
          <source>Math</source>
          <target state="translated">Math</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="cd70332627f6e0032f42e790234355b73b9a84e5" translate="yes" xml:space="preserve">
          <source>Mixing different template syntaxes in the same file is not a recommended practice as both AngularJS and Twig use the same delimiters in their syntax: &lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt;.</source>
          <target state="translated">AngularJSとTwigはどちらも構文で同じ区切り文字を使用するため、同じファイルで異なるテンプレート構文を混在させることはお勧めできません： &lt;code&gt;{{&lt;/code&gt; および &lt;code&gt;}}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="33ff9c9387af83205c35a7ca62391c9b62e1a11e" translate="yes" xml:space="preserve">
          <source>Most applications create one &lt;code&gt;\Twig\Environment&lt;/code&gt; object on application initialization and use that to load templates. In some cases, it might be useful to have multiple environments side by side, with different configurations.</source>
          <target state="translated">ほとんどのアプリケーションは、アプリケーションの初期化時に1つの &lt;code&gt;\Twig\Environment&lt;/code&gt; オブジェクトを作成し、それを使用してテンプレートをロードします。場合によっては、構成が異なる複数の環境を並べて配置すると便利なことがあります。</target>
        </trans-unit>
        <trans-unit id="f37760e852ee7ed1460834e80e17486cdd06c339" translate="yes" xml:space="preserve">
          <source>Most applications will create one &lt;code&gt;Twig_Environment&lt;/code&gt; object on application initialization and use that to load templates. In some cases it's however useful to have multiple environments side by side, if different configurations are in use.</source>
          <target state="translated">ほとんどのアプリケーションは、アプリケーションの初期化時に1つの &lt;code&gt;Twig_Environment&lt;/code&gt; オブジェクトを作成し、それを使用してテンプレートをロードします。ただし、異なる構成が使用されている場合は、複数の環境を並べて配置すると便利な場合があります。</target>
        </trans-unit>
        <trans-unit id="e305f2a16de2214e5f2cff86169dbb556e981d7e" translate="yes" xml:space="preserve">
          <source>Most of the time though, a tag is not needed:</source>
          <target state="translated">しかし、ほとんどの場合、タグは必要ありません。</target>
        </trans-unit>
        <trans-unit id="328e34d1f3a0c785552d31ae2b230de470afe978" translate="yes" xml:space="preserve">
          <source>Most of the time, it is useful to create a single extension for your project, to host all the specific tags and filters you want to add to Twig.</source>
          <target state="translated">ほとんどの場合、Twigに追加したい特定のタグやフィルターをすべてホストするために、プロジェクトのための単一の拡張機能を作成するのが便利です。</target>
        </trans-unit>
        <trans-unit id="eeb9ce0839ae0c4cad962e6ecb2bcbfe2346e1f2" translate="yes" xml:space="preserve">
          <source>NAN (Not A Number)</source>
          <target state="translated">ナン</target>
        </trans-unit>
        <trans-unit id="80a1546459fb296b75e903b673f8cc0ad0b7638a" translate="yes" xml:space="preserve">
          <source>Named Arguments</source>
          <target state="translated">名前付き引数</target>
        </trans-unit>
        <trans-unit id="a54f2ccb779f481bea3312bbe38f4dd24beb2f09" translate="yes" xml:space="preserve">
          <source>Named Block End-Tags</source>
          <target state="translated">名前付きブロックエンドタグ</target>
        </trans-unit>
        <trans-unit id="e06508babc518d97db27083de76cf1b0e86dcfa8" translate="yes" xml:space="preserve">
          <source>Named Macro End-Tags</source>
          <target state="translated">名前付きマクロエンドタグ</target>
        </trans-unit>
        <trans-unit id="68367e0b2bbb96ca817eea40abd93ed8bf55fa49" translate="yes" xml:space="preserve">
          <source>Named arguments also allow you to skip some arguments for which you don&amp;rsquo;t want to change the default value:</source>
          <target state="translated">名前付き引数を使用すると、デフォルト値を変更したくない一部の引数をスキップすることもできます。</target>
        </trans-unit>
        <trans-unit id="187cef2cee2780f4a1eca642920058ef8eafcfb4" translate="yes" xml:space="preserve">
          <source>Named arguments also allow you to skip some arguments for which you don't want to change the default value:</source>
          <target state="translated">名前付き引数は、デフォルト値を変更したくないいくつかの引数をスキップすることもできます。</target>
        </trans-unit>
        <trans-unit id="a86840aee549bc01286a0a18b1982b1f76850fdf" translate="yes" xml:space="preserve">
          <source>Namespaced templates can be accessed via the special &lt;code&gt;@namespace_name/template_path&lt;/code&gt; notation:</source>
          <target state="translated">名前空間付きテンプレートには、特別な &lt;code&gt;@namespace_name/template_path&lt;/code&gt; 表記を使用してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="457ee342743936defa5e5ae0636ab32d2fd99406" translate="yes" xml:space="preserve">
          <source>New in version 1.36: and 2.6 The &lt;code&gt;deprecated&lt;/code&gt; tag was added in Twig 1.36 and 2.6.</source>
          <target state="translated">バージョン1.36の新機能：および2.6 &lt;code&gt;deprecated&lt;/code&gt; タグがTwig 1.36および2.6に追加されました。</target>
        </trans-unit>
        <trans-unit id="8912da4bf3693faeaf8d5d2e36ccc5d265e80238" translate="yes" xml:space="preserve">
          <source>New in version 2.3: Support for the &lt;code&gt;__toString()&lt;/code&gt; magic method has been added in Twig 2.3.</source>
          <target state="translated">バージョン2.3の新機能： &lt;code&gt;__toString()&lt;/code&gt; マジックメソッドのサポートがTwig 2.3に追加されました。</target>
        </trans-unit>
        <trans-unit id="f1edc0de5f7eb7f187ea75980322df188858822d" translate="yes" xml:space="preserve">
          <source>New in version 2.6: Dynamic tests support was added in Twig 2.6.</source>
          <target state="translated">バージョン2.6の新機能:Twig 2.6で動的テストのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="69e1fd5edf585130a67594beaafb52be08ebcc44" translate="yes" xml:space="preserve">
          <source>New values are added at the end of the existing ones.</source>
          <target state="translated">既存の値の最後に新しい値が追加されます。</target>
        </trans-unit>
        <trans-unit id="b05723cd3f80d9b4f408aa1de856db7eeb01c580" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s use a &lt;code&gt;lipsum&lt;/code&gt;&lt;em&gt;function&lt;/em&gt;:</source>
          <target state="translated">次に、 &lt;code&gt;lipsum&lt;/code&gt; &lt;em&gt;関数を&lt;/em&gt;使用しましょう：</target>
        </trans-unit>
        <trans-unit id="4bda3d2e0b5297dbbf3c08e9c01e6dcb02e257c0" translate="yes" xml:space="preserve">
          <source>Next, let's use a &lt;code&gt;lipsum&lt;/code&gt;&lt;em&gt;function&lt;/em&gt;:</source>
          <target state="translated">次に、 &lt;code&gt;lipsum&lt;/code&gt; &lt;em&gt;関数を&lt;/em&gt;使用し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ef1e6eaa9a5dc6b5208904520b59cf46cf059cdc" translate="yes" xml:space="preserve">
          <source>Node Tests</source>
          <target state="translated">ノードテスト</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="9c5f6f8d83481bbfc82b23fdb41985198fbb2c9d" translate="yes" xml:space="preserve">
          <source>Note that autoescaping has some limitations as escaping is applied on expressions after evaluation. For instance, when working with concatenation, &lt;code&gt;{{ foo|raw ~ bar }}&lt;/code&gt; won&amp;rsquo;t give the expected result as escaping is applied on the result of the concatenation, not on the individual variables (so, the &lt;code&gt;raw&lt;/code&gt; filter won&amp;rsquo;t have any effect here).</source>
          <target state="translated">評価後に式にエスケープが適用されるため、自動エスケープにはいくつかの制限があることに注意してください。たとえば、連結を使用する場合、 &lt;code&gt;{{ foo|raw ~ bar }}&lt;/code&gt; は、個々の変数ではなく連結の結果にエスケープが適用されるため、期待される結果を提供しません（したがって、 &lt;code&gt;raw&lt;/code&gt; フィルターにはここでの効果）。</target>
        </trans-unit>
        <trans-unit id="cfc14d99847b7ea8cf4e92f97b1932faba4f8401" translate="yes" xml:space="preserve">
          <source>Note that autoescaping has some limitations as escaping is applied on expressions after evaluation. For instance, when working with concatenation, &lt;code&gt;{{ foo|raw ~ bar }}&lt;/code&gt; won't give the expected result as escaping is applied on the result of the concatenation, not on the individual variables (so, the &lt;code&gt;raw&lt;/code&gt; filter won't have any effect here).</source>
          <target state="translated">評価後に式にエスケープが適用されるため、自動エスケープにはいくつかの制限があることに注意してください。たとえば、連結を使用する場合、エスケープは個々の変数ではなく連結の結果に適用されるため、 &lt;code&gt;{{ foo|raw ~ bar }}&lt;/code&gt; は期待される結果を与えません（したがって、 &lt;code&gt;raw&lt;/code&gt; フィルターにはここで任意の効果）。</target>
        </trans-unit>
        <trans-unit id="f12617a50472a5f6f4baa3d9893b0e771bd3b52b" translate="yes" xml:space="preserve">
          <source>Note that by default, the deprecation notices are silenced and never displayed nor logged. See &lt;a href=&quot;../recipes#deprecation-notices&quot;&gt;Displaying Deprecation Notices&lt;/a&gt; to learn how to handle them.</source>
          <target state="translated">デフォルトでは、サポート終了の通知は表示されず、表示もログも記録されないことに注意してください。それらの処理方法については、非&lt;a href=&quot;../recipes#deprecation-notices&quot;&gt;推奨通知の表示を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="52433777175e4e0620007b39a0ba7268f5c3ecf1" translate="yes" xml:space="preserve">
          <source>Note that doing contextual escaping in HTML documents is hard and choosing the right escaping strategy depends on a lot of factors. Please, read related documentation like &lt;a href=&quot;https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.md&quot;&gt;the OWASP prevention cheat sheet&lt;/a&gt; to learn more about this topic.</source>
          <target state="translated">HTMLドキュメントでコンテキストエスケープを実行することは困難であり、適切なエスケープ戦略を選択することは多くの要因に依存することに注意してください。このトピックの詳細について&lt;a href=&quot;https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.md&quot;&gt;は、OWASP防止&lt;/a&gt;に関するチートシートなどの関連ドキュメントをお読みください。</target>
        </trans-unit>
        <trans-unit id="1b876de0f99fe546d3c259ec56dbbfb1e7e52b1f" translate="yes" xml:space="preserve">
          <source>Note that if the start is greater than the end, &lt;code&gt;range&lt;/code&gt; assumes a step of &lt;code&gt;-1&lt;/code&gt;:</source>
          <target state="translated">開始が終了よりも大きい場合、 &lt;code&gt;range&lt;/code&gt; は &lt;code&gt;-1&lt;/code&gt; のステップを想定することに注意してください。</target>
        </trans-unit>
        <trans-unit id="62a25da9e469d0a5c9b22e4af6be6a7710897fa3" translate="yes" xml:space="preserve">
          <source>Note that loops are scoped in Twig; therefore a variable declared inside a &lt;code&gt;for&lt;/code&gt; loop is not accessible outside the loop itself:</source>
          <target state="translated">ループのスコープはTwigであることに注意してください。したがって、 &lt;code&gt;for&lt;/code&gt; ループ内で宣言された変数は、ループ自体の外ではアクセスできません。</target>
        </trans-unit>
        <trans-unit id="51d2fdac6de82e6adea991a25c97f78b15376a8d" translate="yes" xml:space="preserve">
          <source>Note that most deprecation notices are triggered during &lt;strong&gt;compilation&lt;/strong&gt;, so they won&amp;rsquo;t be generated when templates are already cached.</source>
          <target state="translated">ほとんどの非推奨通知は&lt;strong&gt;コンパイル&lt;/strong&gt;中にトリガーされるため、テンプレートがすでにキャッシュされている場合は生成されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="eb49b4359fbfd731f78d70761064fb47970b9ff5" translate="yes" xml:space="preserve">
          <source>Note that most deprecation notices are triggered during &lt;strong&gt;compilation&lt;/strong&gt;, so they won't be generated when templates are already cached.</source>
          <target state="translated">ほとんどの非推奨通知は&lt;strong&gt;コンパイル&lt;/strong&gt;時にトリガーされるため、テンプレートがすでにキャッシュされている場合は生成されません。</target>
        </trans-unit>
        <trans-unit id="932a8c7463111ba5585d513406372533fb7c97b8" translate="yes" xml:space="preserve">
          <source>Note that overloading the built-in Twig elements is not recommended as it might be confusing.</source>
          <target state="translated">組み込みのTwig要素をオーバーロードすることは、混乱を招く可能性があるのでお勧めできません。</target>
        </trans-unit>
        <trans-unit id="ffb9e8311ff9b6abe89fad294990e4d58e7bdaf2" translate="yes" xml:space="preserve">
          <source>Note that since the child template doesn&amp;rsquo;t define the &lt;code&gt;footer&lt;/code&gt; block, the value from the parent template is used instead.</source>
          <target state="translated">子テンプレートは &lt;code&gt;footer&lt;/code&gt; ブロックを定義しないため、代わりに親テンプレートの値が使用されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6db7db7bf54f23f6d10d27a94b93439147686a0d" translate="yes" xml:space="preserve">
          <source>Note that since the child template doesn't define the &lt;code&gt;footer&lt;/code&gt; block, the value from the parent template is used instead.</source>
          <target state="translated">子テンプレートは &lt;code&gt;footer&lt;/code&gt; ブロックを定義していないため、代わりに親テンプレートの値が使用されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="af71bfa6ffbaf9d16fe8b25378476a134a8bfb9d" translate="yes" xml:space="preserve">
          <source>Note that the CSS inliner works on an entire HTML document, not a fragment.</source>
          <target state="translated">CSS inliner は HTML 文書全体に対して動作し、断片ではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="bf77acd7076a835dbc9f6e7fa623c253c891b164" translate="yes" xml:space="preserve">
          <source>Note that the arrow function has access to the current context.</source>
          <target state="translated">矢印関数は、現在のコンテキストにアクセスできることに注意してください。</target>
        </trans-unit>
        <trans-unit id="fb0061340983153c823eef7e2263aab480152430" translate="yes" xml:space="preserve">
          <source>Note that you can indent the Markdown content as leading whitespaces will be removed consistently before conversion:</source>
          <target state="translated">先頭の空白文字が変換前に一貫して削除されるので、Markdownコンテンツをインデントすることができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7c8fc14fd973764907951dac1bf26538235693b5" translate="yes" xml:space="preserve">
          <source>Note that you must use parentheses when combining it with the filter operator due to the &lt;a href=&quot;#twig-expressions&quot;&gt;operator precedence rules&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#twig-expressions&quot;&gt;演算子の優先順位規則&lt;/a&gt;により、フィルター演算子と組み合わせる場合は括弧を使用する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d2d4febe0dd36197987d165680a9e744fccfccd9" translate="yes" xml:space="preserve">
          <source>Note the usage of the &lt;a href=&quot;https://www.php.net/manual/en/language.operators.comparison.php&quot;&gt;spaceship&lt;/a&gt; operator to simplify the comparison.</source>
          <target state="translated">比較を簡単にするために、&lt;a href=&quot;https://www.php.net/manual/en/language.operators.comparison.php&quot;&gt;宇宙船&lt;/a&gt;オペレーターの使用法に注意してください。</target>
        </trans-unit>
        <trans-unit id="269d903abeea808c099c43b2c89f7578f086ca67" translate="yes" xml:space="preserve">
          <source>Notice that the second argument of the environment is an array of options. The &lt;code&gt;cache&lt;/code&gt; option is a compilation cache directory, where Twig caches the compiled templates to avoid the parsing phase for sub-sequent requests. It is very different from the cache you might want to add for the evaluated templates. For such a need, you can use any available PHP cache library.</source>
          <target state="translated">環境の2番目の引数はオプションの配列であることに注意してください。 &lt;code&gt;cache&lt;/code&gt; オプションは、小枝がサブシークエントの要求のために解析する段階を避けるために、コンパイル済みのテンプレートをキャッシュするコンパイルキャッシュディレクトリ、です。これは、評価されたテンプレートに追加したいキャッシュとは大きく異なります。そのような必要がある場合は、利用可能な任意のPHPキャッシュライブラリを使用できます。</target>
        </trans-unit>
        <trans-unit id="c4ad646cbb98a73cb1d04b94c1aa2736693d8c6f" translate="yes" xml:space="preserve">
          <source>Now that the &lt;code&gt;base.twig&lt;/code&gt; templates is defined in an array loader, you can remove it from the database, and everything else will still work as before.</source>
          <target state="translated">今すぐこと &lt;code&gt;base.twig&lt;/code&gt; のテンプレートは、アレイローダーで定義され、データベースから削除することができ、すべてが他にまだ以前のように動作します。</target>
        </trans-unit>
        <trans-unit id="3fff6fd40b39a92d65adb96f35a625770fee3304" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s define a loader able to use this database:</source>
          <target state="translated">それでは、このデータベースを使用できるローダーを定義しましょう。</target>
        </trans-unit>
        <trans-unit id="d44fdd0378c48c0a2cefb12275df414e10be8883" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s see the actual code of this class:</source>
          <target state="translated">それでは、このクラスの実際のコードを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="9374d94471423cb1528c253e82a16e501a97732b" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s use a &lt;code&gt;lipsum&lt;/code&gt;&lt;em&gt;filter&lt;/em&gt;:</source>
          <target state="translated">それでは、 &lt;code&gt;lipsum&lt;/code&gt; &lt;em&gt;フィルターを&lt;/em&gt;使用しましょう：</target>
        </trans-unit>
        <trans-unit id="f0b0ac82ee4f0b3dad626021e51d61be5bf1b4f8" translate="yes" xml:space="preserve">
          <source>Now, let's define a loader able to use this database:</source>
          <target state="translated">では、このデータベースを使用できるローダーを定義してみましょう。</target>
        </trans-unit>
        <trans-unit id="55944aa75cf0566648ae2016949aa3b6420ae3a6" translate="yes" xml:space="preserve">
          <source>Now, let's see the actual code of this class:</source>
          <target state="translated">では、このクラスの実際のコードを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="3df63f485424893ca145d25bc027c8afb7d92810" translate="yes" xml:space="preserve">
          <source>Now, let's use a &lt;code&gt;lipsum&lt;/code&gt;&lt;em&gt;filter&lt;/em&gt;:</source>
          <target state="translated">次に、 &lt;code&gt;lipsum&lt;/code&gt; &lt;em&gt;フィルターを&lt;/em&gt;使用し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ee3cf78fa4321b1a656162de09054591df25623f" translate="yes" xml:space="preserve">
          <source>Now, when rendering the child template, the loop is going to use the block defined in the child template instead of the one defined in the base one; the executed template is then equivalent to the following one:</source>
          <target state="translated">子テンプレートをレンダリングする際に、ループはベーステンプレートで定義されたブロックではなく、子テンプレートで定義されたブロックを使用します。</target>
        </trans-unit>
        <trans-unit id="c80a4c073f41e66657cf87483a913a12037c7c7d" translate="yes" xml:space="preserve">
          <source>Objects with a &lt;code&gt;__toString&lt;/code&gt; method are converted to strings and escaped. You can mark some classes and/or interfaces as being safe for some strategies via &lt;code&gt;EscaperExtension::addSafeClass()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;__toString&lt;/code&gt; メソッドを持つオブジェクトは、文字列に変換されてエスケープされます。 &lt;code&gt;EscaperExtension::addSafeClass()&lt;/code&gt; ：を使用して、一部のクラスやインターフェイスを一部の戦略に対して安全であるとマークできます。</target>
        </trans-unit>
        <trans-unit id="de2aec2c6115b1a0acdf36db9cfc0442cf7ad052" translate="yes" xml:space="preserve">
          <source>Of course, the name after the &lt;code&gt;endblock&lt;/code&gt; word must match the block name.</source>
          <target state="translated">もちろん、 &lt;code&gt;endblock&lt;/code&gt; ワードの後の名前はブロック名と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="4e3d747c3ca751dfdcb72ca28bbd09f99edfd3ef" translate="yes" xml:space="preserve">
          <source>Of course, the name after the &lt;code&gt;endmacro&lt;/code&gt; word must match the macro name.</source>
          <target state="translated">もちろん、 &lt;code&gt;endmacro&lt;/code&gt; マクロワードの後の名前はマクロ名と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="4d623c3a29cf15cbf2e3aa6ab3acf410300c43a9" translate="yes" xml:space="preserve">
          <source>Of course, this extension does nothing for now. We will customize it in the next sections.</source>
          <target state="translated">もちろん、この拡張機能は今のところ何もしません。次のセクションでカスタマイズしていきます。</target>
        </trans-unit>
        <trans-unit id="3fb55b4c63bbfbc160e8fdaee768a3a1208ad506" translate="yes" xml:space="preserve">
          <source>Of course, this will not work as Twig will always load the template from &lt;code&gt;.../templates/mysite&lt;/code&gt;.</source>
          <target state="translated">もちろん、Twigは常にテンプレートを &lt;code&gt;.../templates/mysite&lt;/code&gt; からロードするため、これは機能しません。</target>
        </trans-unit>
        <trans-unit id="8e501498dd887e4214dc7088168cf722d2eb9b7a" translate="yes" xml:space="preserve">
          <source>On Symfony projects, you can automatically enable it by installing the &lt;code&gt;twig/extra-bundle&lt;/code&gt;:</source>
          <target state="translated">Symfonyプロジェクトでは、 &lt;code&gt;twig/extra-bundle&lt;/code&gt; をインストールすることで、自動的に有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="f26c8678cbbdacce2482797f90493c9415e41580" translate="yes" xml:space="preserve">
          <source>One of the most exciting features of a template engine like Twig is the possibility to define new &lt;strong&gt;language constructs&lt;/strong&gt;. This is also the most complex feature as you need to understand how Twig&amp;rsquo;s internals work.</source>
          <target state="translated">Twigのようなテンプレートエンジンの最もエキサイティングな機能の1つは、新しい&lt;strong&gt;言語構造&lt;/strong&gt;を定義する可能性です。Twigの内部がどのように機能するかを理解する必要があるため、これは最も複雑な機能でもあります。</target>
        </trans-unit>
        <trans-unit id="85db17d433557911a3bbd98ef14105129a2240b1" translate="yes" xml:space="preserve">
          <source>One of the most exciting features of a template engine like Twig is the possibility to define new language constructs. This is also the most complex feature as you need to understand how Twig's internals work.</source>
          <target state="translated">Twigのようなテンプレートエンジンの最もエキサイティングな機能の一つは、新しい言語構造を定義できることです。これは、Twigの内部がどのように機能するかを理解する必要があるため、最も複雑な機能でもあります。</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="b2368527f5ef2990fd1abef077498e8c7aca7b6d" translate="yes" xml:space="preserve">
          <source>Operators are case sensitive.</source>
          <target state="translated">オペレータは大文字と小文字を区別します。</target>
        </trans-unit>
        <trans-unit id="60d5ec08a38e822c97bde535785de0972ad7b2cd" translate="yes" xml:space="preserve">
          <source>Optimizer Extension</source>
          <target state="translated">オプティマイザー拡張</target>
        </trans-unit>
        <trans-unit id="fbc46fa272cc8f490d2973699d6c9d4a7aaccbc6" translate="yes" xml:space="preserve">
          <source>Or add the extension explicitly on the Twig environment:</source>
          <target state="translated">または、Twig環境上で明示的に拡張機能を追加します。</target>
        </trans-unit>
        <trans-unit id="fd13b94019000aaafc7f679d1d2b13d8082b8dbf" translate="yes" xml:space="preserve">
          <source>Other Operators</source>
          <target state="translated">その他のオペレーター</target>
        </trans-unit>
        <trans-unit id="cb2f163ccc20cb7388203cf1edbc6860b44ea0f0" translate="yes" xml:space="preserve">
          <source>Overloading</source>
          <target state="translated">Overloading</target>
        </trans-unit>
        <trans-unit id="7d042791c6d03b8b65532d86de57a4e45528817d" translate="yes" xml:space="preserve">
          <source>Overriding a Template that also extends itself</source>
          <target state="translated">自分自身も拡張するテンプレートをオーバーライドする</target>
        </trans-unit>
        <trans-unit id="7c41fdf87d994d54c4375ddb9f40e24e5f85510a" translate="yes" xml:space="preserve">
          <source>Page template &lt;code&gt;foo.twig&lt;/code&gt;:</source>
          <target state="translated">ページテンプレート &lt;code&gt;foo.twig&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9d1fb6ff4699baace9bc278338c14b908486de9e" translate="yes" xml:space="preserve">
          <source>Parent Blocks</source>
          <target state="translated">親ブロック</target>
        </trans-unit>
        <trans-unit id="efa9d684a8a8fd8d907340a153d9ff2538136018" translate="yes" xml:space="preserve">
          <source>Parsing expressions is done by calling the &lt;code&gt;parseExpression()&lt;/code&gt; like we did for the &lt;code&gt;set&lt;/code&gt; tag.</source>
          <target state="translated">式の解析は、 &lt;code&gt;set&lt;/code&gt; タグに対して行ったように &lt;code&gt;parseExpression()&lt;/code&gt; を呼び出すことによって行われます。</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="5e6823369b4670c3ba15d69df7cf750211fabe49" translate="yes" xml:space="preserve">
          <source>Profiler Extension</source>
          <target state="translated">プロファイラ拡張</target>
        </trans-unit>
        <trans-unit id="6208518abe3f135d3b04f664fbde54fd614e08ee" translate="yes" xml:space="preserve">
          <source>Put one (and only one) space after the &lt;code&gt;:&lt;/code&gt; sign in hashes and &lt;code&gt;,&lt;/code&gt; in arrays and hashes:</source>
          <target state="translated">後に1つだけのスペースを入れてください &lt;code&gt;:&lt;/code&gt; ハッシュサインインして &lt;code&gt;,&lt;/code&gt; 配列やハッシュに：</target>
        </trans-unit>
        <trans-unit id="c0a20a0e2ca5dc0d17d7efd8e205ac8ea7b27843" translate="yes" xml:space="preserve">
          <source>Put one (and only one) space after the start of a delimiter (&lt;code&gt;{{&lt;/code&gt;, &lt;code&gt;{%&lt;/code&gt;, and &lt;code&gt;{#&lt;/code&gt;) and before the end of a delimiter (&lt;code&gt;}}&lt;/code&gt;, &lt;code&gt;%}&lt;/code&gt;, and &lt;code&gt;#}&lt;/code&gt;):</source>
          <target state="translated">区切り文字の開始（ &lt;code&gt;{{&lt;/code&gt; 、 &lt;code&gt;{%&lt;/code&gt; 、および &lt;code&gt;{#&lt;/code&gt; ）の後で、区切り文字の終わり（ &lt;code&gt;}}&lt;/code&gt; 、 &lt;code&gt;%}&lt;/code&gt; 、および &lt;code&gt;#}&lt;/code&gt; の前に1つ（および1つだけ）のスペースを置きます。</target>
        </trans-unit>
        <trans-unit id="f807293bb4406551b7f2ad035b45144b7ab5ce17" translate="yes" xml:space="preserve">
          <source>Put one (and only one) space before and after the following operators: comparison operators (&lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;), math operators (&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;//&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt;), logic operators (&lt;code&gt;not&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;), &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;is&lt;/code&gt;, &lt;code&gt;in&lt;/code&gt;, and the ternary operator (&lt;code&gt;?:&lt;/code&gt;):</source>
          <target state="translated">次の演算子の前後に1つ（1つだけ）のスペースを入れます：比較演算子（ &lt;code&gt;==&lt;/code&gt; 、 &lt;code&gt;!=&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;=&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; ）、数学演算子（ &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; 、 &lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;*&lt;/code&gt; 、 &lt;code&gt;%&lt;/code&gt; 、 &lt;code&gt;//&lt;/code&gt; 、 &lt;code&gt;**&lt;/code&gt; ）、論理演算子（ &lt;code&gt;not&lt;/code&gt; 、 &lt;code&gt;and&lt;/code&gt; 、 &lt;code&gt;or&lt;/code&gt; 、または）、 &lt;code&gt;~&lt;/code&gt; 、 &lt;code&gt;is&lt;/code&gt; 、 &lt;code&gt;in&lt;/code&gt; 、および三項演算子（ &lt;code&gt;?:&lt;/code&gt; :) ：</target>
        </trans-unit>
        <trans-unit id="e8a8372ae80166065b62384db97a6a02327c4eba" translate="yes" xml:space="preserve">
          <source>Read the chapter about &lt;a href=&quot;advanced&quot;&gt;extending Twig&lt;/a&gt; to learn how to create your own extensions.</source>
          <target state="translated">&lt;a href=&quot;advanced&quot;&gt;Twigの拡張&lt;/a&gt;に関する章を読んで、独自の拡張機能を作成する方法を学びます。</target>
        </trans-unit>
        <trans-unit id="59ec32809687eb79bf3036f216e7894f2f9df7bf" translate="yes" xml:space="preserve">
          <source>Read the chapter about extending Twig to learn how to create your own extensions.</source>
          <target state="translated">Twigの拡張についての章を読んで、独自の拡張機能を作成する方法を学びましょう。</target>
        </trans-unit>
        <trans-unit id="ca8824fd81d472811585a1610376e2407b987863" translate="yes" xml:space="preserve">
          <source>Read the documentation for the &lt;a href=&quot;../tests/defined&quot;&gt;defined&lt;/a&gt; and &lt;a href=&quot;../tests/empty&quot;&gt;empty&lt;/a&gt; tests to learn more about their semantics.</source>
          <target state="translated">&lt;a href=&quot;../tests/defined&quot;&gt;定義さ&lt;/a&gt;れた&lt;a href=&quot;../tests/empty&quot;&gt;空の&lt;/a&gt;ドキュメントを読むセマンティクスの詳細についてテストテスト。</target>
        </trans-unit>
        <trans-unit id="9c7c6706c310bb3998a273ba1502af82fa2c863d" translate="yes" xml:space="preserve">
          <source>Reading the existing &lt;code&gt;TokenParser&lt;/code&gt; classes is the best way to learn all the nitty-gritty details of the parsing process.</source>
          <target state="translated">既存の &lt;code&gt;TokenParser&lt;/code&gt; を読み取るクラスをは、解析プロセスの重要な詳細をすべて学習するための最良の方法です。</target>
        </trans-unit>
        <trans-unit id="9fb1092f32d4fcbf9e061ffd718d4ec689c6c95e" translate="yes" xml:space="preserve">
          <source>Recipes</source>
          <target state="translated">Recipes</target>
        </trans-unit>
        <trans-unit id="ad4374049d17600ffcdb2255846a2aa3c856f1a4" translate="yes" xml:space="preserve">
          <source>Refreshing modified Templates when OPcache or APC is enabled</source>
          <target state="translated">OPcache または APC が有効な場合に変更されたテンプレートを更新する</target>
        </trans-unit>
        <trans-unit id="7c671004cb76b6dcc65fd61f71cf6a4c1e279381" translate="yes" xml:space="preserve">
          <source>Registering a new tag</source>
          <target state="translated">新規タグの登録</target>
        </trans-unit>
        <trans-unit id="fcc06caf9c40c5639bfc12d1e0cb27d22ada6057" translate="yes" xml:space="preserve">
          <source>Registering the tag.</source>
          <target state="translated">タグを登録します。</target>
        </trans-unit>
        <trans-unit id="41ef4ab18edbb01635b4770a7b1392471d9d3578" translate="yes" xml:space="preserve">
          <source>Renaming allows you to simulate inheritance by calling the &quot;parent&quot; block:</source>
          <target state="translated">リネームすることで、&quot;親 &quot;ブロックを呼び出すことで継承をシミュレートすることができます。</target>
        </trans-unit>
        <trans-unit id="f3959d7eb7ad45f4eec0d5617fadcbe10f66bfca" translate="yes" xml:space="preserve">
          <source>Renaming allows you to simulate inheritance by calling the &amp;ldquo;parent&amp;rdquo; block:</source>
          <target state="translated">名前を変更すると、「親」ブロックを呼び出すことで継承をシミュレートできます。</target>
        </trans-unit>
        <trans-unit id="99bd1e34cd164e21963997294779599c4962042e" translate="yes" xml:space="preserve">
          <source>Rendering Templates</source>
          <target state="translated">レンダリング テンプレート</target>
        </trans-unit>
        <trans-unit id="66598cc6137bf9abd066764c4d7091ecd797ffa8" translate="yes" xml:space="preserve">
          <source>Returns a list containing an arithmetic progression of integers:</source>
          <target state="translated">整数の算術進行を含むリストを返します。</target>
        </trans-unit>
        <trans-unit id="ff1112bb210b5d8b487698b1204697b834e1bb95" translate="yes" xml:space="preserve">
          <source>Reusing a stateful Node Visitor</source>
          <target state="translated">ステートフルなノード ビジターを再利用する</target>
        </trans-unit>
        <trans-unit id="b0482778b8f01990f61e8fd56f3823b346d0a435" translate="yes" xml:space="preserve">
          <source>Sandbox Extension</source>
          <target state="translated">サンドボックス拡張</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">も参照してください。</target>
        </trans-unit>
        <trans-unit id="e7243d5cdb40f327926fed4254ded6a7971a3b95" translate="yes" xml:space="preserve">
          <source>Sets the default auto-escaping strategy (&lt;code&gt;name&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;html_attr&lt;/code&gt;, or a PHP callback that takes the template &quot;filename&quot; and returns the escaping strategy to use -- the callback cannot be a function name to avoid collision with built-in escaping strategies); set it to &lt;code&gt;false&lt;/code&gt; to disable auto-escaping. The &lt;code&gt;name&lt;/code&gt; escaping strategy determines the escaping strategy to use for a template based on the template filename extension (this strategy does not incur any overhead at runtime as auto-escaping is done at compilation time.)</source>
          <target state="translated">デフォルトの自動エスケープ戦略（ &lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;html&lt;/code&gt; 、 &lt;code&gt;js&lt;/code&gt; 、 &lt;code&gt;css&lt;/code&gt; 、 &lt;code&gt;url&lt;/code&gt; 、 &lt;code&gt;html_attr&lt;/code&gt; 、またはテンプレートの「ファイル名」を受け取り、使用するエスケープ戦略を返すPHPコールバックを設定します-衝突を避けるためにコールバックを関数名にすることはできません組み込みのエスケープ戦略付き）; 自動エスケープを無効にするには、 &lt;code&gt;false&lt;/code&gt; に設定します。 &lt;code&gt;name&lt;/code&gt; 戦略をエスケープするには（自動エスケープは、コンパイル時に行われているように、この戦略は、実行時に任意のオーバーヘッドが発生しません。）テンプレートファイル名の拡張子に基づいてテンプレートの使用に逃げる戦略を決定します</target>
        </trans-unit>
        <trans-unit id="eaaa2fafed2843a018fa7e43e4bec9d280174b03" translate="yes" xml:space="preserve">
          <source>Sets the default auto-escaping strategy (&lt;code&gt;name&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;html_attr&lt;/code&gt;, or a PHP callback that takes the template &amp;ldquo;filename&amp;rdquo; and returns the escaping strategy to use &amp;ndash; the callback cannot be a function name to avoid collision with built-in escaping strategies); set it to &lt;code&gt;false&lt;/code&gt; to disable auto-escaping. The &lt;code&gt;name&lt;/code&gt; escaping strategy determines the escaping strategy to use for a template based on the template filename extension (this strategy does not incur any overhead at runtime as auto-escaping is done at compilation time.)</source>
          <target state="translated">デフォルトの自動エスケープ戦略（ &lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;html&lt;/code&gt; 、 &lt;code&gt;js&lt;/code&gt; 、 &lt;code&gt;css&lt;/code&gt; 、 &lt;code&gt;url&lt;/code&gt; 、 &lt;code&gt;html_attr&lt;/code&gt; 、またはテンプレート「filename」を取得して使用するエスケープ戦略を返すPHPコールバック）を設定します。コールバックは、との衝突を回避するための関数名にすることはできません。組み込みのエスケープ戦略）;自動エスケープを無効にするには、 &lt;code&gt;false&lt;/code&gt; に設定します。 &lt;code&gt;name&lt;/code&gt; 戦略をエスケープするには（自動エスケープは、コンパイル時に行われているように、この戦略は、実行時に任意のオーバーヘッドが発生しません。）テンプレートファイル名の拡張子に基づいてテンプレートの使用に逃げる戦略を決定します</target>
        </trans-unit>
        <trans-unit id="6a07d409a8bca74d5b1cfcdca5970e45d67bb7d8" translate="yes" xml:space="preserve">
          <source>Setting Variables</source>
          <target state="translated">変数の設定</target>
        </trans-unit>
        <trans-unit id="b4b928607a437ad5e0d739dcf50be282731834cb" translate="yes" xml:space="preserve">
          <source>Several variables can be assigned in one block:</source>
          <target state="translated">1つのブロックに複数の変数を代入することができます。</target>
        </trans-unit>
        <trans-unit id="98451f04af922e592c06df098273788a4a72ef81" translate="yes" xml:space="preserve">
          <source>Since the use case may not be obvious, let&amp;rsquo;s look at a simplified example. Imagine a base template shared by multiple HTML pages, defining a single block named &amp;ldquo;content&amp;rdquo;:</source>
          <target state="translated">ユースケースが明確でない場合があるため、簡単な例を見てみましょう。「content」という名前の単一のブロックを定義する、複数のHTMLページで共有される基本テンプレートを想像してみてください。</target>
        </trans-unit>
        <trans-unit id="0877d0fa0c3bb3055b8f88fa55ac5c42526ffe20" translate="yes" xml:space="preserve">
          <source>Since the use case may not be obvious, let's look at a simplified example. Imagine a base template shared by multiple HTML pages, defining a single block named &quot;content&quot;:</source>
          <target state="translated">使用例は明らかではないかもしれませんので、単純化した例を見てみましょう。複数のHTMLページで共有されているベーステンプレートを想像してみてください。</target>
        </trans-unit>
        <trans-unit id="076aecdf194c0acbcd569262d67a5c1b5180dcb5" translate="yes" xml:space="preserve">
          <source>Some filters may need to work on input that is already escaped or safe, for example when adding (safe) HTML tags to originally unsafe output. In such a case, set the &lt;code&gt;pre_escape&lt;/code&gt; option to escape the input data before it is run through your filter:</source>
          <target state="translated">一部のフィルターは、たとえば（安全な）HTMLタグを元々安全でない出力に追加する場合など、既にエスケープされているか安全な入力で動作する必要がある場合があります。そのような場合は、 &lt;code&gt;pre_escape&lt;/code&gt; オプションを設定して、フィルターを実行する前に入力データをエスケープします。</target>
        </trans-unit>
        <trans-unit id="27db328c07d26d85d4cfb53732b20f728fea4b58" translate="yes" xml:space="preserve">
          <source>Some pages (&quot;foo&quot; and &quot;bar&quot;) share the same content structure - two vertically stacked boxes:</source>
          <target state="translated">いくつかのページ(&quot;foo &quot;と &quot;bar&quot;)は、2つの垂直に積み上げられた箱という同じコンテンツ構造を共有しています。</target>
        </trans-unit>
        <trans-unit id="6a86061fc5d5cdbe99881184f9056f7383e0fdb6" translate="yes" xml:space="preserve">
          <source>Some pages (&amp;ldquo;foo&amp;rdquo; and &amp;ldquo;bar&amp;rdquo;) share the same content structure - two vertically stacked boxes:</source>
          <target state="translated">一部のページ（「foo」と「bar」）は同じコンテンツ構造を共有します-2つの垂直に積み重ねられたボックス：</target>
        </trans-unit>
        <trans-unit id="3ba99ddb5d740267821ed70cf3314f577b85b653" translate="yes" xml:space="preserve">
          <source>Sometimes, when using nested loops, you need to access the parent context. The parent context is always accessible via the &lt;code&gt;loop.parent&lt;/code&gt; variable. For instance, if you have the following template data:</source>
          <target state="translated">ネストされたループを使用する場合、親コンテキストにアクセスする必要がある場合があります。親コンテキストには、常に &lt;code&gt;loop.parent&lt;/code&gt; 変数を介してアクセスできます。たとえば、次のテンプレートデータがあるとします。</target>
        </trans-unit>
        <trans-unit id="b94eab177d0450791e2bd87d5293995143f45c6d" translate="yes" xml:space="preserve">
          <source>Sounds complicated but it is very basic. It's easier to understand it by starting with an example.</source>
          <target state="translated">複雑に聞こえますが、とても基本的なことです。まずは例を挙げてみるとわかりやすいですね。</target>
        </trans-unit>
        <trans-unit id="4949c62fb969326b2fde8b8dab0281e60449d966" translate="yes" xml:space="preserve">
          <source>Still, if you want to use AngularJS and Twig in the same template, there are two ways to make it work depending on the amount of AngularJS you need to include in your templates:</source>
          <target state="translated">それでも、AngularJSとTwigを同じテンプレートで使いたい場合は、テンプレートに含めるAngularJSの量に応じて2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="dcadc5a0cb117211f9dc789c191b1d6c306ecd43" translate="yes" xml:space="preserve">
          <source>String Interpolation</source>
          <target state="translated">文字列補間</target>
        </trans-unit>
        <trans-unit id="ed19c64d1fe7c3fa1574fd852a215a59e822c2fd" translate="yes" xml:space="preserve">
          <source>String interpolation (&lt;code&gt;#{expression}&lt;/code&gt;) allows any valid expression to appear within a &lt;em&gt;double-quoted string&lt;/em&gt;. The result of evaluating that expression is inserted into the string:</source>
          <target state="translated">文字列補間（ &lt;code&gt;#{expression}&lt;/code&gt; ）を使用すると、&lt;em&gt;二重引用符で囲まれた文字列&lt;/em&gt;内に有効な式を表示でき&lt;em&gt;ます&lt;/em&gt;。その式を評価した結果が文字列に挿入されます。</target>
        </trans-unit>
        <trans-unit id="79983270e27e4282d9a5436b31f621d6a3e26f40" translate="yes" xml:space="preserve">
          <source>Styles loaded via the filter override the styles defined in the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag of the HTML document.</source>
          <target state="translated">フィルタを介してロードされた &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; は、HTMLドキュメントの&amp;lt;style&amp;gt;タグで定義されたスタイルを上書きします。</target>
        </trans-unit>
        <trans-unit id="09b5c5d2f7deba96340dca0862672c4efc5ac069" translate="yes" xml:space="preserve">
          <source>Supported values are: &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, and &lt;code&gt;full&lt;/code&gt;.</source>
          <target state="translated">サポートされている値は、 &lt;code&gt;none&lt;/code&gt; 、 &lt;code&gt;short&lt;/code&gt; 、 &lt;code&gt;medium&lt;/code&gt; 、 &lt;code&gt;long&lt;/code&gt; 、 &lt;code&gt;full&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="d6b6bb3a1a939adefc8ad08e7880baf39f4c9d7b" translate="yes" xml:space="preserve">
          <source>Template Inheritance</source>
          <target state="translated">テンプレート継承</target>
        </trans-unit>
        <trans-unit id="3dd87e05efd2c362fafa221c98a5b8da06087ae9" translate="yes" xml:space="preserve">
          <source>Template inheritance is one of the most powerful features of Twig but it is limited to single inheritance; a template can only extend one other template. This limitation makes template inheritance simple to understand and easy to debug:</source>
          <target state="translated">テンプレート継承はTwigの最も強力な機能の1つですが、1つのテンプレートが他の1つのテンプレートを拡張できるだけで、単一の継承に制限されています。この制限により、テンプレート継承はシンプルに理解でき、デバッグも容易になります。</target>
        </trans-unit>
        <trans-unit id="2691b3f1f1c212aa5a3ce650bad359d76371d1b6" translate="yes" xml:space="preserve">
          <source>Test Operator</source>
          <target state="translated">テストオペレーター</target>
        </trans-unit>
        <trans-unit id="51bb693e68b00c8ad782a93c3be170057edee936" translate="yes" xml:space="preserve">
          <source>Test functions must always return &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">テスト関数は常に &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="b31ecb33b837cbfc4706edad7573ceba634fad70" translate="yes" xml:space="preserve">
          <source>Test functions should always return true/false.</source>
          <target state="translated">テスト関数は常にtrue/falseを返すべきです。</target>
        </trans-unit>
        <trans-unit id="6e82098b28b9a25feb0191a7549df268e2da2272" translate="yes" xml:space="preserve">
          <source>Testing an Extension</source>
          <target state="translated">拡張機能のテスト</target>
        </trans-unit>
        <trans-unit id="c77cef40d68a9d5b02df3c7dfe86cb9171553b82" translate="yes" xml:space="preserve">
          <source>Testing the node visitors can be complex, so extend your test cases from &lt;code&gt;Twig_Test_NodeTestCase&lt;/code&gt;. Examples can be found in the Twig repository &lt;a href=&quot;https://github.com/twigphp/Twig/tree/2.x/test/Twig/Tests/Node&quot;&gt;tests/Twig/Node&lt;/a&gt; directory.</source>
          <target state="translated">ノードの訪問者のテストは複雑になる可能性があるため、 &lt;code&gt;Twig_Test_NodeTestCase&lt;/code&gt; からテストケースを拡張します。例はTwigリポジトリの&lt;a href=&quot;https://github.com/twigphp/Twig/tree/2.x/test/Twig/Tests/Node&quot;&gt;test / Twig / Node&lt;/a&gt;ディレクトリにあります。</target>
        </trans-unit>
        <trans-unit id="e8b5725046bd26e26c85ce47000748953def2557" translate="yes" xml:space="preserve">
          <source>Testing the node visitors can be complex, so extend your test cases from &lt;code&gt;\Twig\Test\NodeTestCase&lt;/code&gt;. Examples can be found in the Twig repository &lt;a href=&quot;https://github.com/twigphp/Twig/tree/3.x/tests/Node&quot;&gt;tests/Twig/Node&lt;/a&gt; directory.</source>
          <target state="translated">ノード訪問者のテストは複雑になる可能性があるため、テストケースを &lt;code&gt;\Twig\Test\NodeTestCase&lt;/code&gt; から拡張します。例は、Twigリポジトリの&lt;a href=&quot;https://github.com/twigphp/Twig/tree/3.x/tests/Node&quot;&gt;tests / Twig / Node&lt;/a&gt;ディレクトリにあります。</target>
        </trans-unit>
        <trans-unit id="39fdec1194d94212b871a28b2aa04a73cd40fce1" translate="yes" xml:space="preserve">
          <source>Tests</source>
          <target state="translated">Tests</target>
        </trans-unit>
        <trans-unit id="ba364bf3ac703d87d4b6f4bfe2ada3ffd7d0ba0a" translate="yes" xml:space="preserve">
          <source>Tests allow you to create custom application specific logic for evaluating boolean conditions. As a simple example, let&amp;rsquo;s create a Twig test that checks if objects are &amp;lsquo;red&amp;rsquo;:</source>
          <target state="translated">テストを使用すると、ブール条件を評価するためのカスタムアプリケーション固有のロジックを作成できます。簡単な例として、オブジェクトが「赤」であるかどうかをチェックするTwigテストを作成しましょう。</target>
        </trans-unit>
        <trans-unit id="b591a4ce48960f6657e9b7732cf3fd020bc84733" translate="yes" xml:space="preserve">
          <source>Tests allow you to create custom application specific logic for evaluating boolean conditions. As a simple example, let's create a Twig test that checks if objects are 'red':</source>
          <target state="translated">テストでは、ブーリアン条件を評価するためのカスタムアプリケーション固有のロジックを作成することができます。簡単な例として、オブジェクトが「赤」であるかどうかをチェックする Twig テストを作成してみましょう。</target>
        </trans-unit>
        <trans-unit id="596bd57151aeb778febfe0c5deffffd75b69ed5a" translate="yes" xml:space="preserve">
          <source>Tests are defined in the exact same way as filters and functions, but you need to create an instance of &lt;code&gt;Twig_Test&lt;/code&gt;:</source>
          <target state="translated">テストはフィルターや関数とまったく同じ方法で定義されますが、 &lt;code&gt;Twig_Test&lt;/code&gt; のインスタンスを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="6b7e25ca5def81bef756b710d3e6aee85e42d46e" translate="yes" xml:space="preserve">
          <source>Tests are defined in the exact same way as filters and functions, but you need to create an instance of &lt;code&gt;\Twig\TwigTest&lt;/code&gt;:</source>
          <target state="translated">テストはフィルターや関数とまったく同じ方法で定義されますが、 &lt;code&gt;\Twig\TwigTest&lt;/code&gt; インスタンスを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="d016962d5b85e27a5c3c03381147db98d63e5bde" translate="yes" xml:space="preserve">
          <source>Tests can accept arguments too:</source>
          <target state="translated">テストは引数を受け入れることもできます。</target>
        </trans-unit>
        <trans-unit id="5fd8ac942a7735f28c5b6559de7283feb1d87ac5" translate="yes" xml:space="preserve">
          <source>Tests can be negated by using the &lt;code&gt;is not&lt;/code&gt; operator:</source>
          <target state="translated">&lt;code&gt;is not&lt;/code&gt; 演算子を使用すると、テストを無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="bc05d9ff1dea43b0d895530a510dde04588d1a01" translate="yes" xml:space="preserve">
          <source>That works, but using a tag for &lt;code&gt;lipsum&lt;/code&gt; is not a good idea for at least three main reasons:</source>
          <target state="translated">それは機能しますが、少なくとも3つの主な理由から、 &lt;code&gt;lipsum&lt;/code&gt; タグを使用することはお勧めできません。</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="b9d9b80f14772854d52ed5dec4f0f258aaef1eda" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;functions/include&quot;&gt;include&lt;/a&gt; function is useful to include a template and return the rendered content of that template into the current one:</source>
          <target state="translated">&lt;a href=&quot;functions/include&quot;&gt;含む&lt;/a&gt;機能テンプレートを含み、現在の一つにそのテンプレートのレンダリングされたコンテンツを返すために有用です。</target>
        </trans-unit>
        <trans-unit id="7c517cc2140061caabf6eb26128d8f44b616831b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;tags/extends&quot;&gt;extends&lt;/a&gt; tag is the key here. It tells the template engine that this template &quot;extends&quot; another template. When the template system evaluates this template, first it locates the parent. The extends tag should be the first tag in the template.</source>
          <target state="translated">ここで&lt;a href=&quot;tags/extends&quot;&gt;はextends&lt;/a&gt;タグが重要です。これは、このテンプレートが別のテンプレートを「拡張」することをテンプレートエンジンに通知します。テンプレートシステムがこのテンプレートを評価するとき、最初に親を見つけます。extendsタグは、テンプレートの最初のタグである必要があります。</target>
        </trans-unit>
        <trans-unit id="d8262296b283b51f50141bd48d50664e5bad23a7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;tags/extends&quot;&gt;extends&lt;/a&gt; tag is the key here. It tells the template engine that this template &amp;ldquo;extends&amp;rdquo; another template. When the template system evaluates this template, first it locates the parent. The extends tag should be the first tag in the template.</source>
          <target state="translated">&lt;a href=&quot;tags/extends&quot;&gt;拡張&lt;/a&gt;タグがここで重要です。このテンプレートが別のテンプレートを「拡張」することをテンプレートエンジンに通知します。テンプレートシステムがこのテンプレートを評価するとき、最初に親を見つけます。extendsタグは、テンプレートの最初のタグである必要があります。</target>
        </trans-unit>
        <trans-unit id="ca4b88e78723cbdc13ccc7c9b6d43a1ad2a2ff62" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;tags/if&quot;&gt;if&lt;/a&gt; tag can be used to test an expression:</source>
          <target state="translated">&lt;a href=&quot;tags/if&quot;&gt;場合&lt;/a&gt;、タグが式をテストするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="d54ebb65540ace4eb941e7f3784ca2f7127ce402" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;..&lt;/code&gt; operator can take any expression at both sides:</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt; 演算子は、両側に任意の式を取ることができます。</target>
        </trans-unit>
        <trans-unit id="7d412831cb118a24ce7d7fcddf89d5788006afcd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;//&lt;/code&gt; operator is equivalent to &lt;code&gt;|round(0, 'floor')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;//&lt;/code&gt; 演算子は同等です &lt;code&gt;|round(0, 'floor')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f35426526d8abdeee2946e91d481308afc10a8bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IntegrationTest.php&lt;/code&gt; file should look like this:</source>
          <target state="translated">&lt;code&gt;IntegrationTest.php&lt;/code&gt; のファイルには、次のようになります。</target>
        </trans-unit>
        <trans-unit id="8b91e9c23ee6c3474cb4e78d9874ad8965db4556" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Project_Set_Node&lt;/code&gt; class itself is quite short:</source>
          <target state="translated">&lt;code&gt;Project_Set_Node&lt;/code&gt; のクラス自体は非常に短いです。</target>
        </trans-unit>
        <trans-unit id="4912dce360fccc8f06b66623452b245dee8c0800" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Project_Set_Node&lt;/code&gt; class itself is rather simple:</source>
          <target state="translated">&lt;code&gt;Project_Set_Node&lt;/code&gt; のクラス自体はかなりシンプルです。</target>
        </trans-unit>
        <trans-unit id="e597681d224ad7a663bb9414aefb1f1c547bc38c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Twig_Filter&lt;/code&gt; class takes an array of options as its last argument:</source>
          <target state="translated">&lt;code&gt;Twig_Filter&lt;/code&gt; のクラスは、その最後の引数としてオプションの配列をとります。</target>
        </trans-unit>
        <trans-unit id="3372eca0ea3bd5c6dcb73ae4b52e4842c6593fc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;\Twig\TwigFilter&lt;/code&gt; class takes an array of options as its last argument:</source>
          <target state="translated">&lt;code&gt;\Twig\TwigFilter&lt;/code&gt; クラスは、その最後の引数としてオプションの配列をとります。</target>
        </trans-unit>
        <trans-unit id="4cc7367fe154518c207585a0a01ccb6a38cc815b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;abs&lt;/code&gt; filter returns the absolute value.</source>
          <target state="translated">&lt;code&gt;abs&lt;/code&gt; フィルタは、絶対値を返します。</target>
        </trans-unit>
        <trans-unit id="397f640604ac129faccfa043c349280ead0ad144" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;apply&lt;/code&gt; tag allows you to apply Twig filters on a block of template data:</source>
          <target state="translated">&lt;code&gt;apply&lt;/code&gt; タグを使用して、テンプレートデータのブロックに小枝フィルタを適用することができます：</target>
        </trans-unit>
        <trans-unit id="bc2aae17b73685ca254c41d189b708101146d739" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attribute&lt;/code&gt; function can be used to access a &quot;dynamic&quot; attribute of a variable:</source>
          <target state="translated">&lt;code&gt;attribute&lt;/code&gt; ：関数は、変数の「ダイナミック」属性にアクセスするために使用することができます</target>
        </trans-unit>
        <trans-unit id="b87c4153c6c72c4c93e16248daaa32f1664c597d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attribute&lt;/code&gt; function can be used to access a &amp;ldquo;dynamic&amp;rdquo; attribute of a variable:</source>
          <target state="translated">&lt;code&gt;attribute&lt;/code&gt; ：関数は、変数の「ダイナミック」属性にアクセスするために使用することができます</target>
        </trans-unit>
        <trans-unit id="4f54831e3c67d5cc675a204bd867fa26a69d8393" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attribute&lt;/code&gt; function is also useful when the attribute contains special characters (like &lt;code&gt;-&lt;/code&gt; that would be interpreted as the minus operator):</source>
          <target state="translated">&lt;code&gt;attribute&lt;/code&gt; 属性は、（のような特殊文字が含まれている場合、機能にも便利です &lt;code&gt;-&lt;/code&gt; それはマイナス演算子として解釈されます）：</target>
        </trans-unit>
        <trans-unit id="7fb5104325e06a74a519a351afca169722d58933" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autoescape&lt;/code&gt; tag has no effect on included files.</source>
          <target state="translated">&lt;code&gt;autoescape&lt;/code&gt; のタグが含まれているファイルには影響を与えません。</target>
        </trans-unit>
        <trans-unit id="348d6ce7ff8d8ffc7c825ab8e2a405cc69813269" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;batch&lt;/code&gt; filter &quot;batches&quot; items by returning a list of lists with the given number of items. A second parameter can be provided and used to fill in missing items:</source>
          <target state="translated">&lt;code&gt;batch&lt;/code&gt; 項目の与えられた数のリストのリストを返すことによって、フィルタ「バッチ」のアイテム。2番目のパラメーターを指定して、不足しているアイテムを埋めるために使用できます。</target>
        </trans-unit>
        <trans-unit id="1f739a71c1cbb77f51c27a8297456b06e83f247b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;batch&lt;/code&gt; filter &amp;ldquo;batches&amp;rdquo; items by returning a list of lists with the given number of items. A second parameter can be provided and used to fill in missing items:</source>
          <target state="translated">&lt;code&gt;batch&lt;/code&gt; 項目の与えられた数のリストのリストを返すことによって、フィルタ「バッチ」のアイテム。2番目のパラメーターを指定して、不足している項目を埋めるために使用できます。</target>
        </trans-unit>
        <trans-unit id="c0493f95f4ab86e387482bff4024fbcbf3601106" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;block&lt;/code&gt; function can also be used to display one block from another template:</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; 機能は、別のテンプレートから1つのブロックを表示するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="1fb899cca6fdbc401562019b85a1abc3a8b9f4e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;capitalize&lt;/code&gt; filter capitalizes a value. The first character will be uppercase, all others lowercase:</source>
          <target state="translated">&lt;code&gt;capitalize&lt;/code&gt; フィルタ値を大文字にします。最初の文字は大文字、その他はすべて小文字になります。</target>
        </trans-unit>
        <trans-unit id="ebaeff82f38de421a073bd9ccaf973cd2c74bbe9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collectDir()&lt;/code&gt; method compiles all templates found in a directory, catches deprecation notices, and return them.</source>
          <target state="translated">&lt;code&gt;collectDir()&lt;/code&gt; メソッドは、すべてのテンプレートは、ディレクトリに廃止通知をキャッチし、それらを返すコンパイルします。</target>
        </trans-unit>
        <trans-unit id="fd15af31281dd6a50afc7d11c9fcdc6daaf410f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;column&lt;/code&gt; filter returns the values from a single column in the input array.</source>
          <target state="translated">&lt;code&gt;column&lt;/code&gt; フィルタは、入力配列内の単一の列からの値を返します。</target>
        </trans-unit>
        <trans-unit id="33a62715fae2d62c47ee6de7a2cad3d939529a3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;convert_encoding&lt;/code&gt; filter converts a string from one encoding to another. The first argument is the expected output charset and the second one is the input charset:</source>
          <target state="translated">&lt;code&gt;convert_encoding&lt;/code&gt; フィルタは、別のエンコーディングからの文字列を変換します。最初の引数は予想される出力文字セットで、2番目の引数は入力文字セットです。</target>
        </trans-unit>
        <trans-unit id="ce768f21be3c42687c07df2f1802dc76ff1f2020" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;core&lt;/code&gt; extension defines all the core features of Twig:</source>
          <target state="translated">&lt;code&gt;core&lt;/code&gt; 拡張定義小枝のすべての主要機能：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
