<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="falcon">
    <body>
      <group id="falcon">
        <trans-unit id="148290291b85c1a92c3fe04624586ce1ce4edb2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;json&lt;/strong&gt; (&lt;em&gt;JSON serializable&lt;/em&gt;) &amp;ndash; Default JSON document to use in responses. Will be serialized to a string and encoded as UTF-8. Either &lt;em&gt;json&lt;/em&gt; or &lt;em&gt;body&lt;/em&gt; may be specified, but not both.</source>
          <target state="translated">&lt;strong&gt;json&lt;/strong&gt;（&lt;em&gt;JSON serializable&lt;/em&gt;）&amp;ndash;応答で使用するデフォルトのJSONドキュメント。文字列にシリアル化され、UTF-8としてエンコードされます。&lt;em&gt;json&lt;/em&gt;または&lt;em&gt;bodyの&lt;/em&gt;いずれかを指定できますが、両方を指定することはできません。</target>
        </trans-unit>
        <trans-unit id="f921135b427e4cd12cf3dfdb0d1cec02fc0b5ce6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;keep_blank&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to return fields even if they do not have a value (default &lt;code&gt;False&lt;/code&gt;). For comma-separated values, this option also determines whether or not empty elements in the parsed list are retained.</source>
          <target state="translated">&lt;strong&gt;keep_blank&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash; &lt;code&gt;True&lt;/code&gt; に設定すると、値がない場合でもフィールドが返されます（デフォルトは &lt;code&gt;False&lt;/code&gt; ）。カンマ区切り値の場合、このオプションは、解析済みリストの空の要素を保持するかどうかも決定します。</target>
        </trans-unit>
        <trans-unit id="e9ff29b19291b10fceff25dab7266e0220d98a7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;keep_blank_qs_values&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to return fields even if they do not have a value (default &lt;code&gt;False&lt;/code&gt;). For comma-separated values, this option also determines whether or not empty elements in the parsed list are retained.</source>
          <target state="translated">&lt;strong&gt;keep_blank_qs_values&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash; &lt;code&gt;True&lt;/code&gt; に設定すると、フィールドに値がない場合でもフィールドが返されます（デフォルトは &lt;code&gt;False&lt;/code&gt; ）。カンマ区切り値の場合、このオプションは、解析済みリストの空の要素を保持するかどうかも決定します。</target>
        </trans-unit>
        <trans-unit id="3fc54239fe1f28a456b8f5e2e4571ccd446dceca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;kwargs&lt;/strong&gt; &amp;ndash; URI template &lt;em&gt;name=value&lt;/em&gt; pairs, if any, along with any extra args injected by middleware.</source>
          <target state="translated">&lt;strong&gt;kwargs&lt;/strong&gt; &amp;ndash; URIテンプレートの&lt;em&gt;名前と値の&lt;/em&gt;ペア（ある場合）、およびミドルウェアによって挿入された追加の引数。</target>
        </trans-unit>
        <trans-unit id="0f7eb9cffca8f43f8cb2df226d1a7679b261cb32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;kwargs&lt;/strong&gt; (&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Same as those defined for &lt;code&gt;falcon.testing.create_environ&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;kwargs&lt;/strong&gt;（&lt;em&gt;オプション&lt;/em&gt;）&amp;ndash; &lt;code&gt;falcon.testing.create_environ&lt;/code&gt; に定義されたものと同じです。</target>
        </trans-unit>
        <trans-unit id="7ae3685d8333cf7ddbe1d1b05f6af1e04c4f31b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;loads&lt;/strong&gt; (&lt;em&gt;func&lt;/em&gt;) &amp;ndash; Function to use when deserializing JSON requests.</source>
          <target state="translated">&lt;strong&gt;load&lt;/strong&gt;（&lt;em&gt;func&lt;/em&gt;）&amp;ndash;JSONリクエストを逆シリアル化するときに使用する関数。</target>
        </trans-unit>
        <trans-unit id="74ed1a87e1e930a31f54dbb57fd31443a30f2110" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;location&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URI to provide as the Location header in the response.</source>
          <target state="translated">&lt;strong&gt;location&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;応答のLocationヘッダーとして提供するURI。</target>
        </trans-unit>
        <trans-unit id="372767cf20ae27e6d804ace26106aed6bffe4000" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;location&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URI to provide as the Location header in the response.</source>
          <target state="translated">&lt;strong&gt;location&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;応答のLocationヘッダーとして提供するURI。</target>
        </trans-unit>
        <trans-unit id="77a897a6574dc6e92ca5a3c779ddfa01a18a8153" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Maximum string length to return, inclusive</source>
          <target state="translated">&lt;strong&gt;max&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash;返される文字列の最大長（両端を含む）</target>
        </trans-unit>
        <trans-unit id="6148701af0db02b1e0c3467c719b3c16f62cea2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Reject the value if it is greater than this number.</source>
          <target state="translated">&lt;strong&gt;max&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash;この値より大きい場合、値を拒否します。</target>
        </trans-unit>
        <trans-unit id="407fe39fbc4ddd985701d3624061d1d51e5d30fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Set to the maximum value allowed for this param. If the param is found and its value is greater than max, an &lt;code&gt;HTTPError&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;strong&gt;max&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash;このパラメーターに許可されている最大値に設定します。paramが見つかり、その値がmaxより大きい場合、 &lt;code&gt;HTTPError&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="3926c37c3196f6af7efa659956af962a38aaa51a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Maximum string length to return, inclusive</source>
          <target state="translated">&lt;strong&gt;max&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash;返される最大文字列長（両端を含む）</target>
        </trans-unit>
        <trans-unit id="ecc5c736ad8e9158c1f8adaf1d5d011600efb313" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Reject the value if it is greater than this number.</source>
          <target state="translated">&lt;strong&gt;max&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash;値がこの数値より大きい場合、値を拒否します。</target>
        </trans-unit>
        <trans-unit id="4feab799c11a464faf94a1946ecbccd312d6bc02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max_age&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;max_age&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash;</target>
        </trans-unit>
        <trans-unit id="8dc36103b40b1b27c6eb2e6963415d67638d222f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max_age&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;max_age&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash;</target>
        </trans-unit>
        <trans-unit id="6da555df676cd6adda4c0b51be1868f6a76e4bf6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max_value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#float&quot;&gt;float&lt;/a&gt;) &amp;ndash; Set to the maximum value allowed for this param. If the param is found and its value is greater than max_value, an &lt;code&gt;HTTPError&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;strong&gt;max_value&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#float&quot;&gt;float&lt;/a&gt;）&amp;ndash;このパラメーターに許可される最大値に設定します。paramが見つかり、その値がmax_valueより大きい場合、 &lt;code&gt;HTTPError&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="7415636900f71ea840697d5eb7e26ffd2b63a5d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max_value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Set to the maximum value allowed for this param. If the param is found and its value is greater than max_value, an &lt;code&gt;HTTPError&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;strong&gt;max_value&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash;このパラメーターに許可される最大値に設定します。paramが見つかり、その値がmax_valueより大きい場合、 &lt;code&gt;HTTPError&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="ba96c3af6da6e05365976f04d8b5ecf65a9689d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;media&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;) &amp;ndash; A serializable object.</source>
          <target state="translated">&lt;strong&gt;media&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;）&amp;ndash;シリアル化可能なオブジェクト。</target>
        </trans-unit>
        <trans-unit id="629286ebf4ae43a88fde420a5cbfe572a5533e2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;media_type&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; An Internet media type to check.</source>
          <target state="translated">&lt;strong&gt;media_type&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;チェックするインターネットメディアタイプ。</target>
        </trans-unit>
        <trans-unit id="af279faa01b0a0e9daf0ac28759a0e402d1044f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;media_type&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Default media type to use as the value for the Content-Type header on responses (default &amp;lsquo;application/json&amp;rsquo;). The &lt;code&gt;falcon&lt;/code&gt; module provides a number of constants for common media types, such as &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_YAML&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_XML&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;strong&gt;media_type&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;応答のContent-Typeヘッダーの値として使用するデフォルトのメディアタイプ（デフォルトは 'application / json'）。 &lt;code&gt;falcon&lt;/code&gt; モジュールは、次のような一般的なメディアタイプの定数の数を提供 &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt; 、 &lt;code&gt;falcon.MEDIA_YAML&lt;/code&gt; 、 &lt;code&gt;falcon.MEDIA_XML&lt;/code&gt; 等、</target>
        </trans-unit>
        <trans-unit id="450d3ab60c3d087d46a6fe01675ce7451cfd8e82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;media_type&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; An Internet media type to check.</source>
          <target state="translated">&lt;strong&gt;media_type&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;チェックするインターネットメディアタイプ。</target>
        </trans-unit>
        <trans-unit id="d4a5a16899142b322054b61a4a8cb2f24871f0bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;media_type&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Default media type to use as the value for the Content-Type header on responses (default &amp;lsquo;application/json&amp;rsquo;). The &lt;code&gt;falcon&lt;/code&gt; module provides a number of constants for common media types, such as &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_YAML&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_XML&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;strong&gt;media_type&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;応答のContent-Typeヘッダーの値として使用するデフォルトのメディアタイプ（デフォルトは「application / json」）。 &lt;code&gt;falcon&lt;/code&gt; モジュールは、次のような一般的なメディアタイプの定数の数を提供 &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt; 、 &lt;code&gt;falcon.MEDIA_YAML&lt;/code&gt; 、 &lt;code&gt;falcon.MEDIA_XML&lt;/code&gt; 等、</target>
        </trans-unit>
        <trans-unit id="779bd25b6e93ec8bf62b591249a5378d355eb34c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;media_types&lt;/strong&gt; (&lt;em&gt;iterable of str&lt;/em&gt;) &amp;ndash; One or more Internet media types from which to choose the client&amp;rsquo;s preferred type. This value &lt;strong&gt;must&lt;/strong&gt; be an iterable collection of strings.</source>
          <target state="translated">&lt;strong&gt;media_types&lt;/strong&gt;（&lt;em&gt;strの反復可能&lt;/em&gt;）&amp;ndash;クライアントの優先タイプを選択する1つ以上のインターネットメディアタイプ。この値&lt;strong&gt;は&lt;/strong&gt;、反復可能な文字列のコレクションで&lt;strong&gt;なければなりません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="3a3bb5addbcea5528dd6c0f0500471f647f5ba31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;message&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;a href=&quot;https://docs.python.org/2/library/functions.html#unicode&quot;&gt;unicode&lt;/a&gt;) &amp;ndash; Description of the problem. On Python 2, instances of &lt;code&gt;unicode&lt;/code&gt; will be converted to UTF-8.</source>
          <target state="translated">&lt;strong&gt;メッセージ&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str &lt;/a&gt;&lt;em&gt;または&lt;/em&gt;&lt;a href=&quot;https://docs.python.org/2/library/functions.html#unicode&quot;&gt;unicode&lt;/a&gt;）&amp;ndash;問題の説明。Python 2では、 &lt;code&gt;unicode&lt;/code&gt; インスタンスはUTF-8に変換されます。</target>
        </trans-unit>
        <trans-unit id="15eef077f755a3b844fb6e8ce586399b136f8f16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;message&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;unicode&lt;/em&gt;) &amp;ndash; Description of the problem. On Python 2, instances of &lt;code&gt;unicode&lt;/code&gt; will be converted to UTF-8.</source>
          <target state="translated">&lt;strong&gt;メッセージ&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;&lt;em&gt;または&lt;/em&gt;&lt;em&gt;unicode&lt;/em&gt;）&amp;ndash;問題の説明。Python 2では、 &lt;code&gt;unicode&lt;/code&gt; インスタンスはUTF-8に変換されます。</target>
        </trans-unit>
        <trans-unit id="e1f017b7ed9c530778c5af0603f0f8ebfcd8f913" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;method&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; An HTTP method to use in the request (default: &amp;lsquo;GET&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;method&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リクエストで使用するHTTPメソッド（デフォルト： 'GET'）</target>
        </trans-unit>
        <trans-unit id="aa979d6fa50bb3f01e2177a8d0eefbcd1f9e3c17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;method&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The HTTP method to use (default &amp;lsquo;GET&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;method&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;使用するHTTPメソッド（デフォルトは「GET」）</target>
        </trans-unit>
        <trans-unit id="2e15abcb25113f0ce19b4bf93e3dfd7c54ae02b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;method&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; An HTTP method to use in the request (default: &amp;lsquo;GET&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;method&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リクエストで使用するHTTPメソッド（デフォルト： 'GET'）</target>
        </trans-unit>
        <trans-unit id="610a72c7dded6c81aa3a96584daaa6159935d068" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;method&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The HTTP method to use (default &amp;lsquo;GET&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;method&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;使用するHTTPメソッド（デフォルトは「GET」）</target>
        </trans-unit>
        <trans-unit id="c02139faf32d9441e634ec751113f7b020406a25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;method_map&lt;/strong&gt; &amp;ndash; A dict with HTTP methods mapped to responders explicitly defined in a resource.</source>
          <target state="translated">&lt;strong&gt;method_map&lt;/strong&gt; &amp;ndash;リソースで明示的に定義されたレスポンダにマップされたHTTPメソッドを持つdict。</target>
        </trans-unit>
        <trans-unit id="713c1eb4f6fd9b4bdaf1584b5a153e023972bf3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;method_name&lt;/strong&gt; &amp;ndash; Name of the method to retrieve.</source>
          <target state="translated">&lt;strong&gt;method_name&lt;/strong&gt; &amp;ndash;取得するメソッドの名前。</target>
        </trans-unit>
        <trans-unit id="0ca65485e86a53a230d2496bfdefd46bd3d21806" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;middleware&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#object&quot;&gt;object&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;list&lt;/em&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;ミドルウェア&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#object&quot;&gt;オブジェクト&lt;/a&gt;&lt;em&gt;または&lt;/em&gt;&lt;em&gt;リスト&lt;/em&gt;）&amp;ndash;</target>
        </trans-unit>
        <trans-unit id="02ccaa41417d59014c15414b64accaaa9595d4da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;middleware&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#list&quot;&gt;list&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;ミドルウェア&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;オブジェクト&lt;/a&gt;&lt;em&gt;または&lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#list&quot;&gt;リスト&lt;/a&gt;）&amp;ndash;</target>
        </trans-unit>
        <trans-unit id="dd1cb222a4ef22f40b64a5b1c51b66d7777902fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;min&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Minimum string length to return, inclusive</source>
          <target state="translated">&lt;strong&gt;min&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash;返される文字列の最小の長さ（両端を含む）</target>
        </trans-unit>
        <trans-unit id="e96e065a1ba64d5d81fdd8e9ce0f946c1630af3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;min&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Reject the value if it is less than this number.</source>
          <target state="translated">&lt;strong&gt;min&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash;この値より小さい場合、値を拒否します。</target>
        </trans-unit>
        <trans-unit id="512459d69475555fef0535314bbd48f0c81d741b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;min&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Set to the minimum value allowed for this param. If the param is found and it is less than min, an &lt;code&gt;HTTPError&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;strong&gt;min&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash;このパラメーターに許可される最小値に設定します。paramが見つかり、それがmin未満の場合、 &lt;code&gt;HTTPError&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="9072a33509632e055aa33f55f86f52f4063b9c56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;min&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Minimum string length to return, inclusive</source>
          <target state="translated">&lt;strong&gt;min&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash;返す最小文字列長（両端を含む）</target>
        </trans-unit>
        <trans-unit id="e5ab144e23b6f30cb75f1c13675ef6e82110f799" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;min&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Reject the value if it is less than this number.</source>
          <target state="translated">&lt;strong&gt;min&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash;値がこの数値よりも小さい場合、値を拒否します。</target>
        </trans-unit>
        <trans-unit id="43c47bd31c40533373756a647e0beac5ff802dd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;min_value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#float&quot;&gt;float&lt;/a&gt;) &amp;ndash; Set to the minimum value allowed for this param. If the param is found and it is less than min_value, an &lt;code&gt;HTTPError&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;strong&gt;min_value&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#float&quot;&gt;float&lt;/a&gt;）&amp;ndash;このパラメーターに許可されている最小値に設定します。paramが見つかり、それがmin_valueより小さい場合、 &lt;code&gt;HTTPError&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="6189a9bec0be4eab8431517ee5aabd477b4ac700" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;min_value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Set to the minimum value allowed for this param. If the param is found and it is less than min_value, an &lt;code&gt;HTTPError&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;strong&gt;min_value&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash;このパラメーターに許可されている最小値に設定します。paramが見つかり、それがmin_valueより小さい場合、 &lt;code&gt;HTTPError&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="ffadb71523c3b2e11709636b323489ecd0e70ab9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;morsel&lt;/strong&gt; &amp;ndash; A &lt;code&gt;Morsel&lt;/code&gt; object from which to derive the cookie data.</source>
          <target state="translated">&lt;strong&gt;morsel&lt;/strong&gt; &amp;ndash; Cookieデータを取得する &lt;code&gt;Morsel&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="f35023b7677e72bce3e3a1bf4ecd22499c82dcbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A description of the invalid parameter.</source>
          <target state="translated">&lt;strong&gt;msg&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;無効なパラメーターの説明。</target>
        </trans-unit>
        <trans-unit id="f77ea4e82b6b71d346ae1e04e66a77df4d168290" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A description of why the value is invalid.</source>
          <target state="translated">&lt;strong&gt;msg&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;値が無効である理由の説明。</target>
        </trans-unit>
        <trans-unit id="08d75c37bd36b144259d801183922237c2248b6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A description of the invalid parameter.</source>
          <target state="translated">&lt;strong&gt;msg&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;無効なパラメーターの説明。</target>
        </trans-unit>
        <trans-unit id="30dc358982919c9360773cff23fbff6864bd15b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A description of why the value is invalid.</source>
          <target state="translated">&lt;strong&gt;msg&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;値が無効である理由の説明。</target>
        </trans-unit>
        <trans-unit id="820964f7f190058892e182e78de4674913828ea0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Cookie name</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash; Cookie名</target>
        </trans-unit>
        <trans-unit id="324cdf575c54c912c11949fa5b83e305334fac15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name (case-insensitive). Must be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt; and contain only US-ASCII characters. Under Python 2.x, the &lt;code&gt;unicode&lt;/code&gt; type is also accepted, although such strings are also limited to US-ASCII.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;ヘッダー名（大文字と小文字は区別されません）。タイプ &lt;code&gt;str&lt;/code&gt; または &lt;code&gt;StringType&lt;/code&gt; で、US-ASCII文字のみを含む必要があります。Python 2.xでは、 &lt;code&gt;unicode&lt;/code&gt; タイプも受け入れられますが、そのような文字列もUS-ASCIIに制限されています。</target>
        </trans-unit>
        <trans-unit id="7e07596522b9f1cf11d5ca41543800aaeb0fe5bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name (case-insensitive). The restrictions noted below for the header&amp;rsquo;s value also apply here.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;ヘッダー名（大文字と小文字は区別されません）。以下に示すヘッダーの値の制限は、ここでも適用されます。</target>
        </trans-unit>
        <trans-unit id="4a1ea7c7f3a3df976b330cf08b276c59ec5b7a53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name, case-insensitive (e.g., &amp;lsquo;Content-Type&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;ヘッダー名、大文字と小文字を区別しません（例： 'Content-Type'）</target>
        </trans-unit>
        <trans-unit id="bd56a7e618f937d72da9056f89e1d0359db19b2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name, case-insensitive (e.g., &amp;lsquo;Date&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;ヘッダー名、大文字と小文字を区別しない（例： 'Date'）</target>
        </trans-unit>
        <trans-unit id="3509f7fb59dd946d4c9745f5e8f705e6856e4781" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name, case-insensitive. Must be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt;, and only character values 0x00 through 0xFF may be used on platforms that use wide characters.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;ヘッダー名。大文字と小文字は区別されません。タイプ &lt;code&gt;str&lt;/code&gt; または &lt;code&gt;StringType&lt;/code&gt; でなければならず、ワイド文字を使用するプラットフォームでは0x00から0xFFまでの文字値のみを使用できます。</target>
        </trans-unit>
        <trans-unit id="c6838ad35511286cfa66fe1990b703ad44e94b2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;detailed&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;大文字と小文字を区別するパラメーター名（例： 'detailed'）。</target>
        </trans-unit>
        <trans-unit id="12634538c9459b6783aa70185ac6f7b05c12d4e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;id&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;パラメータ名、大文字と小文字を区別（例： 'id'）。</target>
        </trans-unit>
        <trans-unit id="f32a093488314f51f204d843b5bab95cc5e70d31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;ids&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;大文字と小文字を区別するパラメーター名（例： 'ids'）。</target>
        </trans-unit>
        <trans-unit id="9e1fb06d8305e7ade0d62938f672cd3d89251ade" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;limit&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;大文字と小文字を区別するパラメーター名（例： 'limit'）。</target>
        </trans-unit>
        <trans-unit id="d8c48a931f3c04f2206bc7fa1324eecbaa921250" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;payload&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;大文字と小文字を区別するパラメーター名（例： 'payload'）。</target>
        </trans-unit>
        <trans-unit id="8ee1c68153a8dd8e1d89b3c2056189e3226cac0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;sort&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;大文字と小文字を区別するパラメーター名（例： 'sort'）。</target>
        </trans-unit>
        <trans-unit id="ff46ce456834734755e8fbff85b8037e3d6451e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Cookie name</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;Cookie名</target>
        </trans-unit>
        <trans-unit id="0d3b686a5af705a3fdef9cb12d65c7d62d4bf046" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Cookie name, case-sensitive.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash; Cookie名、大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="b11ac5ed17b406d9f708018f29525a4577a658a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name (case-insensitive). Must be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt; and contain only US-ASCII characters. Under Python 2.x, the &lt;code&gt;unicode&lt;/code&gt; type is also accepted, although such strings are also limited to US-ASCII.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;ヘッダー名（大文字と小文字は区別されません）。タイプ &lt;code&gt;str&lt;/code&gt; または &lt;code&gt;StringType&lt;/code&gt; であり、US-ASCII文字のみを含む必要があります。Python 2.xでは、 &lt;code&gt;unicode&lt;/code&gt; タイプも受け入れられますが、そのような文字列もUS-ASCIIに制限されています。</target>
        </trans-unit>
        <trans-unit id="dc03d5bf80937e11794b1511e731074cd583e272" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name (case-insensitive). The restrictions noted below for the header&amp;rsquo;s value also apply here.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;ヘッダー名（大文字と小文字は区別されません）。ヘッダーの値について以下に示す制限は、ここでも適用されます。</target>
        </trans-unit>
        <trans-unit id="12ce3a1523bb8b1897f9acb950154aebdce40f89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name, case-insensitive (e.g., &amp;lsquo;Content-Type&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;ヘッダー名、大文字と小文字を区別しない（例： 'Content-Type'）</target>
        </trans-unit>
        <trans-unit id="d196791d1d6c47dfc046c37e6b9d2bdadf665a22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name, case-insensitive (e.g., &amp;lsquo;Date&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;ヘッダー名、大文字と小文字を区別しない（例、「日付」）</target>
        </trans-unit>
        <trans-unit id="7bd7d085fd6e56a971b844efda4eae4b9e8ae3c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name, case-insensitive. Must be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt;, and only character values 0x00 through 0xFF may be used on platforms that use wide characters.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;ヘッダー名、大文字と小文字は区別されません。タイプ &lt;code&gt;str&lt;/code&gt; または &lt;code&gt;StringType&lt;/code&gt; である必要があり、ワイド文字を使用するプラットフォームでは、文字値0x00から0xFFのみを使用できます。</target>
        </trans-unit>
        <trans-unit id="90c0e155be92fc7c53522f72819e8a94fb998335" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;detailed&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;パラメーター名。大文字と小文字が区別されます（例：「詳細」）。</target>
        </trans-unit>
        <trans-unit id="90c9cb26730ae6c023849a413a972231de2627ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;id&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;パラメータ名。大文字と小文字が区別されます（例： 'id'）。</target>
        </trans-unit>
        <trans-unit id="b02016883d77749a746ca19adf4883fa57e3ad63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;ids&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;パラメータ名。大文字と小文字が区別されます（例： 'ids'）。</target>
        </trans-unit>
        <trans-unit id="dae7b025f4ac4823300cc584ea9b4f6e4cfa68b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;limit&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;パラメーター名。大文字と小文字が区別されます（例：「limit」）。</target>
        </trans-unit>
        <trans-unit id="6eab1894295bf9765bdb86df2647365af5d556c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;payload&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;パラメーター名。大文字と小文字が区別されます（例：「ペイロード」）。</target>
        </trans-unit>
        <trans-unit id="5076939db043feb2c232701ce17aacf7b389e34d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;sort&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;パラメータ名。大文字と小文字が区別されます（例： 'sort'）。</target>
        </trans-unit>
        <trans-unit id="1e4d628db9dcb61ee8a0b5aba2ac6c4d50372c9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;num_digits&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Require the value to have the given number of digits.</source>
          <target state="translated">&lt;strong&gt;num_digits&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash;指定された桁数の値が必要です。</target>
        </trans-unit>
        <trans-unit id="0970cbe45a251cc72a5f0af388d7c62d9629087b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;num_digits&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Require the value to have the given number of digits.</source>
          <target state="translated">&lt;strong&gt;num_digits&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash;指定された桁数の値が必要です。</target>
        </trans-unit>
        <trans-unit id="55ee4a4c77e9a7d7db948d2c9db14b74d4059eb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obj&lt;/strong&gt; &amp;ndash; Object on which to look up the method.</source>
          <target state="translated">&lt;strong&gt;obj&lt;/strong&gt; &amp;ndash;メソッドを検索するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="caf87632ba8db9410dca839d50e62cbf705a244f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obj&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#object&quot;&gt;object&lt;/a&gt;) &amp;ndash; A serializable object.</source>
          <target state="translated">&lt;strong&gt;obj&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#object&quot;&gt;object&lt;/a&gt;）&amp;ndash;シリアル化可能なオブジェクト。</target>
        </trans-unit>
        <trans-unit id="c3dd766c3355e8226eac7a5aab9f935d1321c7cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obj_type&lt;/strong&gt; &amp;ndash; A dict-like type that will be used to store the error information (default &lt;code&gt;dict&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;obj_type&lt;/strong&gt; &amp;ndash;エラー情報を格納するために使用されるdictのようなタイプ（デフォルトの &lt;code&gt;dict&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4ed33c07ccc0777928b5ceab3db617f9ca410f0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obs_date&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Support obs-date formats according to RFC 7231, e.g.: &amp;ldquo;Sunday, 06-Nov-94 08:49:37 GMT&amp;rdquo; (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;obs_date&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash; RFC 7231に準拠したobs-date形式をサポートします。例：「Sunday、06-Nov-94 08:49:37 GMT」（デフォルトは &lt;code&gt;False&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b4fb692bc98d05a4bbd24c9959676f50ebb8b36f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obs_date&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Support obs-date formats according to RFC 7231, e.g.: &amp;ldquo;Sunday, 06-Nov-94 08:49:37 GMT&amp;rdquo; (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;obs_date&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash; RFC 7231に準拠したobs-date形式をサポートします。例：「Sunday、06-Nov-94 08:49:37 GMT」（デフォルトは &lt;code&gt;False&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="56e816b8bc2bb30f049c0030db3e2ede55ca3f10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;one.&lt;/strong&gt; (&lt;em&gt;this&lt;/em&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;1。&lt;/strong&gt;（&lt;em&gt;これ&lt;/em&gt;）&amp;ndash;</target>
        </trans-unit>
        <trans-unit id="c8bea9c25609799f5d652b41bca52fa40fa470c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;options&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; Set of global options passed from the API handler.</source>
          <target state="translated">&lt;strong&gt;options&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;）&amp;ndash; APIハンドラーから渡されたグローバルオプションのセット。</target>
        </trans-unit>
        <trans-unit id="5c7aa09ed9b68fac56479b38ffb09911612fd67e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;options&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; Set of global options passed from the API handler.</source>
          <target state="translated">&lt;strong&gt;options&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;）&amp;ndash;APIハンドラーから渡されるグローバルオプションのセット。</target>
        </trans-unit>
        <trans-unit id="1392c2fbda6b7aaea6b8831ae49e62bc268babea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;other&lt;/strong&gt; (&lt;a href=&quot;#falcon.ETag&quot;&gt;ETag&lt;/a&gt;) &amp;ndash; The other &lt;a href=&quot;#falcon.ETag&quot;&gt;&lt;code&gt;ETag&lt;/code&gt;&lt;/a&gt; to which you are comparing</source>
          <target state="translated">&lt;strong&gt;other&lt;/strong&gt;（&lt;a href=&quot;#falcon.ETag&quot;&gt;ETag&lt;/a&gt;）&amp;ndash;比較している他の&lt;a href=&quot;#falcon.ETag&quot;&gt; &lt;code&gt;ETag&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5692e9bc4a93ddb937ba8ec5e450d475eb5db89b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;param_name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The name of the missing parameter.</source>
          <target state="translated">&lt;strong&gt;param_name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;欠落しているパラメーターの名前。</target>
        </trans-unit>
        <trans-unit id="44b462efa75b5a8dd814a172e762a95dad83b511" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;param_name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The name of the parameter.</source>
          <target state="translated">&lt;strong&gt;param_name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;パラメータの名前。</target>
        </trans-unit>
        <trans-unit id="8efb52e52689e2dc5c7b3ab51d2708a667d98ccc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;param_name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The name of the missing parameter.</source>
          <target state="translated">&lt;strong&gt;param_name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;欠落しているパラメーターの名前。</target>
        </trans-unit>
        <trans-unit id="d75cf3af3daa487faf747fe96f0f836e24259082" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;param_name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The name of the parameter.</source>
          <target state="translated">&lt;strong&gt;param_name&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;パラメーターの名前。</target>
        </trans-unit>
        <trans-unit id="c6a8b7d326e152831aff6ff48dfac460b3ccead8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;params&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A dictionary of parameters, where each key is a parameter name, and each value is either a &lt;code&gt;str&lt;/code&gt; or something that can be converted into a &lt;code&gt;str&lt;/code&gt;, or a list of such values. If a &lt;code&gt;list&lt;/code&gt;, the value will be converted to a comma-delimited string of values (e.g., &amp;lsquo;thing=1,2,3&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;paramsは&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;辞書&lt;/a&gt;） -各キーはパラメータ名であり、それぞれの値のいずれかであるパラメータの辞書、 &lt;code&gt;str&lt;/code&gt; またはに変換することができるもの &lt;code&gt;str&lt;/code&gt; 、またはそのような値のリスト。場合は &lt;code&gt;list&lt;/code&gt; 、値が値のカンマで区切られた文字列（例えば、「もの= 1,2,3」）に変換されます。</target>
        </trans-unit>
        <trans-unit id="266abbad6e22e95fb71e5e3913c1aba96c63a037" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;params&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A dictionary of query string parameters, where each key is a parameter name, and each value is either a &lt;code&gt;str&lt;/code&gt; or something that can be converted into a &lt;code&gt;str&lt;/code&gt;, or a list of such values. If a &lt;code&gt;list&lt;/code&gt;, the value will be converted to a comma-delimited string of values (e.g., &amp;lsquo;thing=1,2,3&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;paramsは&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;辞書&lt;/a&gt;） -各キーはパラメータ名であり、それぞれの値のいずれかであるクエリ文字列パラメータの辞書、 &lt;code&gt;str&lt;/code&gt; またはに変換することができるもの &lt;code&gt;str&lt;/code&gt; 、またはそのような値のリスト。場合は &lt;code&gt;list&lt;/code&gt; 、値が値のカンマで区切られた文字列（例えば、「もの= 1,2,3」）に変換されます。</target>
        </trans-unit>
        <trans-unit id="7ee5bf3579b2714233b44a3a7ae5b1f7eeebe9c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;params&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A dictionary of parameters, where each key is a parameter name, and each value is either a &lt;code&gt;str&lt;/code&gt; or something that can be converted into a &lt;code&gt;str&lt;/code&gt;, or a list of such values. If a &lt;code&gt;list&lt;/code&gt;, the value will be converted to a comma-delimited string of values (e.g., &amp;lsquo;thing=1,2,3&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;paramsは&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;辞書&lt;/a&gt;） -各キーはパラメータ名であり、それぞれの値のいずれかであるパラメータの辞書、 &lt;code&gt;str&lt;/code&gt; またはに変換することができるもの &lt;code&gt;str&lt;/code&gt; 、またはそのような値のリスト。場合は &lt;code&gt;list&lt;/code&gt; 、値が値のカンマで区切られた文字列（例えば、「もの= 1,2,3」）に変換されます。</target>
        </trans-unit>
        <trans-unit id="4a600f45587d8b3636907cb12871dcf08dee5196" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;params&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A dictionary of query string parameters, where each key is a parameter name, and each value is either a &lt;code&gt;str&lt;/code&gt; or something that can be converted into a &lt;code&gt;str&lt;/code&gt;, or a list of such values. If a &lt;code&gt;list&lt;/code&gt;, the value will be converted to a comma-delimited string of values (e.g., &amp;lsquo;thing=1,2,3&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;paramsは&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;辞書&lt;/a&gt;） -各キーはパラメータ名であり、それぞれの値のいずれかであるクエリ文字列パラメータの辞書、 &lt;code&gt;str&lt;/code&gt; またはに変換することができるもの &lt;code&gt;str&lt;/code&gt; 、またはそのような値のリスト。場合は &lt;code&gt;list&lt;/code&gt; 、値が値のカンマで区切られた文字列（例えば、「もの= 1,2,3」）に変換されます。</target>
        </trans-unit>
        <trans-unit id="8b2168a05c7abd538c3e5f3e8863fbdf30de56c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;params_csv&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;False&lt;/code&gt; to encode list values in query string params by specifying multiple instances of the parameter (e.g., &amp;lsquo;thing=1&amp;amp;thing=2&amp;amp;thing=3&amp;rsquo;). Otherwise, parameters will be encoded as comma-separated values (e.g., &amp;lsquo;thing=1,2,3&amp;rsquo;). Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;params_csv&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash; &lt;code&gt;False&lt;/code&gt; に設定すると、パラメーターの複数のインスタンスを指定して（例： 'thing = 1＆thing = 2＆thing = 3'）、クエリ文字列paramsのリスト値をエンコードします。それ以外の場合、パラメーターはコンマ区切り値としてエンコードされます（例： 'thing = 1,2,3'）。デフォルトは &lt;code&gt;True&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="808f6b1e8f19af343e1efb305a11bf5a77a30d1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;params_csv&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;False&lt;/code&gt; to encode list values in query string params by specifying multiple instances of the parameter (e.g., &amp;lsquo;thing=1&amp;amp;thing=2&amp;amp;thing=3&amp;rsquo;). Otherwise, parameters will be encoded as comma-separated values (e.g., &amp;lsquo;thing=1,2,3&amp;rsquo;). Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;params_csv&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash; &lt;code&gt;False&lt;/code&gt; に設定すると、パラメーターの複数のインスタンスを指定してクエリ文字列paramsのリスト値をエンコードします（例： 'thing = 1＆thing = 2＆thing = 3'）。それ以外の場合、パラメーターはコンマ区切り値としてエンコードされます（たとえば、 'thing = 1,2,3'）。デフォルトは &lt;code&gt;True&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="96b09df0fb0066e0e81c2eb5f5ce4ef665dbb95d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;parse_qs_csv&lt;/strong&gt; &amp;ndash; Set to &lt;code&gt;False&lt;/code&gt; in order to disable splitting query parameters on &lt;code&gt;,&lt;/code&gt; (default &lt;code&gt;True&lt;/code&gt;). Depending on the user agent, encoding lists as multiple occurrences of the same parameter might be preferable. In this case, setting &lt;code&gt;parse_qs_csv&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt; will cause the framework to treat commas as literal characters in each occurring parameter value.</source>
          <target state="translated">&lt;strong&gt;parse_qs_csv&lt;/strong&gt; -に設定 &lt;code&gt;False&lt;/code&gt; をディセーブルに分割クエリパラメータへ順に &lt;code&gt;,&lt;/code&gt; （デフォルト &lt;code&gt;True&lt;/code&gt; ）。ユーザーエージェントによっては、同じパラメーターの複数のオカレンスとしてリストをエンコードすることが望ましい場合があります。この場合、 &lt;code&gt;parse_qs_csv&lt;/code&gt; を &lt;code&gt;False&lt;/code&gt; に設定すると、フレームワークは、出現する各パラメーター値でコンマをリテラル文字として扱います。</target>
        </trans-unit>
        <trans-unit id="d7ab9753843cdf4ba89965fe50188b6e74c22f21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;パス&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;</target>
        </trans-unit>
        <trans-unit id="84322c5015f768347f029d1324c10729c3225a00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The URL path to request</source>
          <target state="translated">&lt;strong&gt;パス&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;STR&lt;/a&gt;） -リクエストへのURLパス</target>
        </trans-unit>
        <trans-unit id="1e64739e33f93617092f1e61061ea8108cbd50f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The URL path to request (default: &amp;lsquo;/&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;path&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リクエストするURLパス（デフォルト： '/'）</target>
        </trans-unit>
        <trans-unit id="bcc558933a8f22bf04611cf3843f49a6df848300" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The path for the request (default &amp;lsquo;/&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;path&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リクエストのパス（デフォルトは '/'）</target>
        </trans-unit>
        <trans-unit id="00b45285b19de417e79d3e73dd0376cb4f6f55e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The path to request.</source>
          <target state="translated">&lt;strong&gt;path&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リクエストするパス。</target>
        </trans-unit>
        <trans-unit id="5705e36baa994d8ae74c0ce664f26c39280449e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;パス&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;</target>
        </trans-unit>
        <trans-unit id="6428d0d48bc53fa88130a23eafeb5e43c5bb6dc8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The URL path to request</source>
          <target state="translated">&lt;strong&gt;path&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リクエストするURLパス</target>
        </trans-unit>
        <trans-unit id="2f8635c9c39674215879fe54b5328da8980efa1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The path for the request (default &amp;lsquo;/&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;path&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リクエストのパス（デフォルトは '/'）</target>
        </trans-unit>
        <trans-unit id="6cd4ea591b0d5e919f808f90e690c099626ef3de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;port&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The TCP port to simulate. Defaults to the standard port used by the given scheme (i.e., 80 for &amp;lsquo;http&amp;rsquo; and 443 for &amp;lsquo;https&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;port&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;シミュレートするTCPポート。デフォルトは、指定されたスキームで使用される標準ポートです（つまり、「http」の場合は80、「https」の場合は443）。</target>
        </trans-unit>
        <trans-unit id="ee62e3fbba448a088e1e0b2e5f5378147a89c7bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;port&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The TCP port to simulate. Defaults to the standard port used by the given scheme (i.e., 80 for &amp;lsquo;http&amp;rsquo; and 443 for &amp;lsquo;https&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;port&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;シミュレートするTCPポート。デフォルトは、指定されたスキームで使用される標準ポートです（つまり、「http」の場合は80、「https」の場合は443）。</target>
        </trans-unit>
        <trans-unit id="ebf05db05ebbd28c48ba2022e013f4e9cc0aa8d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;prefix&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;False&lt;/code&gt; to exclude the &amp;lsquo;?&amp;rsquo; prefix in the result string (default &lt;code&gt;True&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;接頭辞&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash; 「？」を除外するには &lt;code&gt;False&lt;/code&gt; に設定します 結果の文字列のプレフィックス（デフォルトは &lt;code&gt;True&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5a4d21de3f02695777178bfb49618234b1535c26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;prefix&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;接頭辞&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;</target>
        </trans-unit>
        <trans-unit id="13b72e63b39db60ec7866aa675d09820b7c1fa71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;prefix&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;False&lt;/code&gt; to exclude the &amp;lsquo;?&amp;rsquo; prefix in the result string (default &lt;code&gt;True&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;prefix&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash; &lt;code&gt;False&lt;/code&gt; に設定して、「？」を除外します 結果文字列のプレフィックス（デフォルトは &lt;code&gt;True&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a5dda5db19379524dd526e6ee8a5575a0f328095" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;prefix&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;プレフィックス&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;</target>
        </trans-unit>
        <trans-unit id="8e789c333b6b90d18040d279285b4c9e024aa6e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;protocol&lt;/strong&gt; &amp;ndash; The protocol to use for the URL scheme (default: &amp;lsquo;http&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;protocol&lt;/strong&gt; &amp;ndash; URLスキームに使用するプロトコル（デフォルト： 'http'）</target>
        </trans-unit>
        <trans-unit id="eea471b77d786e0d90191647e25f040ba970100b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;protocol&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The HTTP protocol to simulate (default &amp;lsquo;HTTP/1.1&amp;rsquo;). If set to &amp;lsquo;HTTP/1.0&amp;rsquo;, the Host header will not be added to the environment.</source>
          <target state="translated">&lt;strong&gt;protocol&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;シミュレートするHTTPプロトコル（デフォルトは「HTTP / 1.1」）。「HTTP / 1.0」に設定すると、ホストヘッダーは環境に追加されません。</target>
        </trans-unit>
        <trans-unit id="2e659f68d2a99a2edd64df45dd951d408cda60f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;protocol&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The HTTP protocol to simulate (default &amp;lsquo;HTTP/1.1&amp;rsquo;). If set to &amp;lsquo;HTTP/1.0&amp;rsquo;, the Host header will not be added to the environment.</source>
          <target state="translated">&lt;strong&gt;protocol&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;シミュレートするHTTPプロトコル（デフォルトは「HTTP / 1.1」）。'HTTP / 1.0'に設定すると、Hostヘッダーは環境に追加されません。</target>
        </trans-unit>
        <trans-unit id="c0a80ec01233ba72f295096d3b1636853db44313" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;query_string&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A raw query string to include in the request (default: &lt;code&gt;None&lt;/code&gt;). If specified, overrides &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;query_string&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リクエストに含める生のクエリ文字列（デフォルト： &lt;code&gt;None&lt;/code&gt; ）。指定した場合、 &lt;code&gt;params&lt;/code&gt; をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="fe2729e2c567e77f2097bdfcb2ea1263dff99906" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;query_string&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The query string to parse.</source>
          <target state="translated">&lt;strong&gt;query_string&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;解析するクエリ文字列。</target>
        </trans-unit>
        <trans-unit id="b498f298666f64bb32694105e211a3a196c9fafc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;query_string&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The query string to simulate, without a leading &amp;lsquo;?&amp;rsquo; (default &amp;lsquo;&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;query_string&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;先頭に「？」を付けずにシミュレートするクエリ文字列 （デフォルト ''）</target>
        </trans-unit>
        <trans-unit id="46b250bdf8e259914355bb6ed40bfe5e7257c940" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;query_string&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A raw query string to include in the request (default: &lt;code&gt;None&lt;/code&gt;). If specified, overrides &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;query_string&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リクエストに含める生のクエリ文字列（デフォルト： &lt;code&gt;None&lt;/code&gt; ）。指定した場合、 &lt;code&gt;params&lt;/code&gt; をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="4004d3d054f078e42c804545c6a33acf75d2e826" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;query_string&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The query string to parse.</source>
          <target state="translated">&lt;strong&gt;query_string&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;解析するクエリ文字列。</target>
        </trans-unit>
        <trans-unit id="5b352a6374ea6270c90fd0c4a94f6328dc9740d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;query_string&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The query string to simulate, without a leading &amp;lsquo;?&amp;rsquo; (default &amp;lsquo;&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;query_string&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;先頭に「？」を付けずにシミュレートするクエリ文字列 （デフォルト ''）</target>
        </trans-unit>
        <trans-unit id="0914864b58b93c199e17d8d9f52be57e6a8a9879" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;quoted&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Original quoted string</source>
          <target state="translated">&lt;strong&gt;quoted&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;元の引用文字列</target>
        </trans-unit>
        <trans-unit id="52abc0fa93fb556ca6790ae8e7c5c3c0152bb610" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;quoted&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Original quoted string</source>
          <target state="translated">&lt;strong&gt;引用符で囲まれた&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;元の引用符で囲まれた文字列</target>
        </trans-unit>
        <trans-unit id="33d9ece0dd5c929f97f762b08d6be426f90f32dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;raw&lt;/strong&gt; (&lt;em&gt;bytes&lt;/em&gt;) &amp;ndash; Input bytes to deserialize</source>
          <target state="translated">&lt;strong&gt;raw&lt;/strong&gt;（&lt;em&gt;bytes&lt;/em&gt;）&amp;ndash;デシリアライズする入力バイト</target>
        </trans-unit>
        <trans-unit id="fa9f5182572e76a5fca0af4a20912f0fd6d160d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rel&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;rel&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;</target>
        </trans-unit>
        <trans-unit id="dc054f509d36b8e31ed6089277dda88f3011674c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rel&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;rel&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;</target>
        </trans-unit>
        <trans-unit id="b3c7444259430659e8b1706862493121245c594e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;remote_addr&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A string to use as the remote IP address for the request (default: &amp;lsquo;127.0.0.1&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;remote_addr&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リクエストのリモートIPアドレスとして使用する文字列（デフォルト： '127.0.0.1'）</target>
        </trans-unit>
        <trans-unit id="d8bd5b342f32d225d7addcc5602a5edec941267e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;remote_addr&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Remote address for the request (default &amp;lsquo;127.0.0.1&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;remote_addr&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リクエストのリモートアドレス（デフォルトは「127.0.0.1」）</target>
        </trans-unit>
        <trans-unit id="010c831764585a6a05fb23e58f4943e7a35db870" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;req&lt;/strong&gt; &amp;ndash; Falcon &lt;code&gt;Request&lt;/code&gt; instance.</source>
          <target state="translated">&lt;strong&gt;req&lt;/strong&gt; &amp;ndash; Falcon &lt;code&gt;Request&lt;/code&gt; インスタンス。</target>
        </trans-unit>
        <trans-unit id="0a8a544d5728254840dc6b57e50004dbd6e00759" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;req&lt;/strong&gt; (&lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;Request&lt;/a&gt;) &amp;ndash; The Request object that will be passed to the routed responder. Currently the value of this argument is ignored by &lt;a href=&quot;#falcon.routing.CompiledRouter&quot;&gt;&lt;code&gt;CompiledRouter&lt;/code&gt;&lt;/a&gt;. Routing is based solely on the path.</source>
          <target state="translated">&lt;strong&gt;req&lt;/strong&gt;（&lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;Request&lt;/a&gt;）&amp;ndash;ルーティングされたレスポンダーに渡されるRequestオブジェクト。現在、この引数の値は&lt;a href=&quot;#falcon.routing.CompiledRouter&quot;&gt; &lt;code&gt;CompiledRouter&lt;/code&gt; &lt;/a&gt;によって無視されます。ルーティングはパスのみに基づいています。</target>
        </trans-unit>
        <trans-unit id="9767a9afe69da91218bb2eefdee8efc12a5eb0e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;req_schema&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; A dictionary that follows the JSON Schema specification. The request will be validated against this schema.</source>
          <target state="translated">&lt;strong&gt;req_schema&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict &lt;/a&gt;&lt;em&gt;、&lt;/em&gt;&lt;em&gt;オプション&lt;/em&gt;）&lt;strong&gt;&amp;ndash;JSON&lt;/strong&gt;スキーマ仕様に従う辞書。リクエストはこのスキーマに対して検証されます。</target>
        </trans-unit>
        <trans-unit id="4d3eb3be4bfbfc1553caf40cea170e2cc2b1f960" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;request_type&lt;/strong&gt; (&lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;Request&lt;/a&gt;) &amp;ndash; &lt;code&gt;Request&lt;/code&gt;-like class to use instead of Falcon&amp;rsquo;s default class. Among other things, this feature affords inheriting from &lt;code&gt;falcon.request.Request&lt;/code&gt; in order to override the &lt;code&gt;context_type&lt;/code&gt; class variable. (default &lt;code&gt;falcon.request.Request&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;request_type&lt;/strong&gt;（&lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;Request&lt;/a&gt;）&amp;ndash; Falconのデフォルトクラスの代わりに使用する &lt;code&gt;Request&lt;/code&gt; ようなクラス。とりわけ、この機能は、 &lt;code&gt;context_type&lt;/code&gt; クラス変数をオーバーライドするために、 &lt;code&gt;falcon.request.Request&lt;/code&gt; からの継承を可能にします。（デフォルトは &lt;code&gt;falcon.request.Request&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d6eec5915313c703e925f0d9b74d0eb3c6a62923" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash; &lt;code&gt;True&lt;/code&gt; に設定すると、パラメーターが見つからない場合に &lt;code&gt;None&lt;/code&gt; を返す代わりに &lt;code&gt;HTTPBadRequest&lt;/code&gt; が発生します（デフォルトは &lt;code&gt;False&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5cc2ce1fa76876ed8dc3564501d1c5c621ec988b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not a UUID (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash; パラメータが見つからない、またはUUIDでない場合（デフォルトは &lt;code&gt;False&lt;/code&gt; ）、 &lt;code&gt;None&lt;/code&gt; を返す代わりに、 &lt;code&gt;True&lt;/code&gt; に設定して &lt;code&gt;HTTPBadRequest&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="cb2fd5592ccd3f95aa0c4e2d109bca39604c8467" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not a recognized boolean string (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash; パラメータが見つからないか、ブール文字列として認識されない場合（デフォルトは &lt;code&gt;False&lt;/code&gt; ）、 &lt;code&gt;None&lt;/code&gt; を返す代わりに &lt;code&gt;True&lt;/code&gt; に設定して &lt;code&gt;HTTPBadRequest&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="f10a4d6071ef2d3af9cbd5bd2fa8314bd065b570" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not an integer (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash; パラメータが見つからないか整数でない場合（デフォルトは &lt;code&gt;False&lt;/code&gt; ）に &lt;code&gt;None&lt;/code&gt; を返す代わりに &lt;code&gt;True&lt;/code&gt; に設定して &lt;code&gt;HTTPBadRequest&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="eec59641f60ec4b38ffb72b81829aca45e2ad780" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning gracefully when the header is not found (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash; &lt;code&gt;True&lt;/code&gt; に設定すると、ヘッダーが見つからない場合に正常に戻る代わりに &lt;code&gt;HTTPBadRequest&lt;/code&gt; が発生します（デフォルトは &lt;code&gt;False&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d7fa65e7ea7bd75329b5c3c57f4c345328250306" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash;パラメータが見つからない場合に &lt;code&gt;None&lt;/code&gt; を返す代わりに、 &lt;code&gt;HTTPBadRequest&lt;/code&gt; を発生させるには &lt;code&gt;True&lt;/code&gt; に設定します（デフォルトは &lt;code&gt;False&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3e528382fefc4ff396eb56e9079aa437aeba572d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not a UUID (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash;パラメータが見つからないかUUIDでない場合に &lt;code&gt;None&lt;/code&gt; を返す代わりに &lt;code&gt;HTTPBadRequest&lt;/code&gt; を発生させるには &lt;code&gt;True&lt;/code&gt; に設定します（デフォルトは &lt;code&gt;False&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9c11d49fc8cdf9c787d5e4bf8a6e3bb4b94d680e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not a recognized boolean string (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash;パラメータが見つからないか認識されたブール文字列でない場合に &lt;code&gt;None&lt;/code&gt; を返す代わりに &lt;code&gt;HTTPBadRequest&lt;/code&gt; を発生させるには &lt;code&gt;True&lt;/code&gt; に設定します（デフォルトは &lt;code&gt;False&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1458507bc76682a35dda09983aea51c8f8332b44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not an float (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash;パラメータが見つからないかfloatでない場合に &lt;code&gt;None&lt;/code&gt; を返す代わりに &lt;code&gt;HTTPBadRequest&lt;/code&gt; を発生させるには &lt;code&gt;True&lt;/code&gt; に設定します（デフォルトは &lt;code&gt;False&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="093433da512dc8ce8278490d5e9d83dd01be56e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not an integer (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash;パラメータが見つからないか整数でない場合に &lt;code&gt;None&lt;/code&gt; を返す代わりに &lt;code&gt;HTTPBadRequest&lt;/code&gt; を発生させるには &lt;code&gt;True&lt;/code&gt; に設定します（デフォルトは &lt;code&gt;False&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="deaed2dcf7204bb39c2fa82dc044bcdc323aa50d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning gracefully when the header is not found (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash;ヘッダーが見つからない場合に正常に戻るのではなく、 &lt;code&gt;HTTPBadRequest&lt;/code&gt; を発生させるには &lt;code&gt;True&lt;/code&gt; に設定します（デフォルトは &lt;code&gt;False&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ef195ae1b1692846d92f74cbfeb0da1c7e33f508" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;resource&lt;/strong&gt; &amp;ndash; An object with &lt;em&gt;responder&lt;/em&gt; methods, following the naming convention &lt;em&gt;on_*&lt;/em&gt;, that correspond to each method the resource supports. For example, if a resource supports GET and POST, it should define &lt;code&gt;on_get(self, req, resp)&lt;/code&gt; and &lt;code&gt;on_post(self, req, resp)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;resource&lt;/strong&gt; &amp;ndash; 命名規則&lt;em&gt;on_ *&lt;/em&gt;に従って、リソースがサポートする各メソッドに対応する&lt;em&gt;レスポンダ&lt;/em&gt;メソッドを持つオブジェクト。たとえば、リソースがGETおよびPOSTをサポートしている場合は、 &lt;code&gt;on_get(self, req, resp)&lt;/code&gt; および &lt;code&gt;on_post(self, req, resp)&lt;/code&gt; を定義する必要があります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="52a4b91fc4f7a6d8a7f2680989c94aade491a3f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;resource&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;) &amp;ndash; The resource instance to associate with the URI template.</source>
          <target state="translated">&lt;strong&gt;resource&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;）&amp;ndash;URIテンプレートに関連付けるリソースインスタンス。</target>
        </trans-unit>
        <trans-unit id="21a0e837fde78a074c8113ea07063beefd3acadd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;resource&lt;/strong&gt; (&lt;em&gt;instance&lt;/em&gt;) &amp;ndash; Object which represents a REST resource. Falcon will pass &amp;ldquo;GET&amp;rdquo; requests to on_get, &amp;ldquo;PUT&amp;rdquo; requests to on_put, etc. If any HTTP methods are not supported by your resource, simply don&amp;rsquo;t define the corresponding request handlers, and Falcon will do the right thing.</source>
          <target state="translated">&lt;strong&gt;resource&lt;/strong&gt;（&lt;em&gt;instance&lt;/em&gt;）&amp;ndash; RESTリソースを表すオブジェクト。Falconは「GET」リクエストをon_getに渡し、「PUT」リクエストをon_putに渡します。HTTPメソッドがリソースでサポートされていない場合は、対応するリクエストハンドラーを定義しないでください。Falconが正しく動作します。</target>
        </trans-unit>
        <trans-unit id="a59f5b59808b6c833b631530a3cacdbdc4afab85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;resource&lt;/strong&gt; (&lt;em&gt;instance&lt;/em&gt;) &amp;ndash; Object which represents a REST resource. Falcon will pass GET requests to &lt;code&gt;on_get()&lt;/code&gt;, PUT requests to &lt;code&gt;on_put()&lt;/code&gt;, etc. If any HTTP methods are not supported by your resource, simply don&amp;rsquo;t define the corresponding request handlers, and Falcon will do the right thing.</source>
          <target state="translated">&lt;strong&gt;resource&lt;/strong&gt;（&lt;em&gt;instance&lt;/em&gt;）&amp;ndash;RESTリソースを表すオブジェクト。FalconはGETリクエストを &lt;code&gt;on_get()&lt;/code&gt; に渡し、PUTリクエストを &lt;code&gt;on_put()&lt;/code&gt; に渡します。リソースでサポートされていないHTTPメソッドがある場合は、対応するリクエストハンドラーを定義しないでください。そうすれば、Falconは正しいことを行います。</target>
        </trans-unit>
        <trans-unit id="a20856b0c915df9d02cb36ddfea210355e0c9628" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;resource&lt;/strong&gt; (&lt;em&gt;instance&lt;/em&gt;) &amp;ndash; Object which represents a REST resource. The default maps the HTTP method &lt;code&gt;GET&lt;/code&gt; to &lt;code&gt;on_get()&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt; to &lt;code&gt;on_post()&lt;/code&gt;, etc. If any HTTP methods are not supported by your resource, simply don&amp;rsquo;t define the corresponding request handlers, and Falcon will do the right thing.</source>
          <target state="translated">&lt;strong&gt;resource&lt;/strong&gt;（&lt;em&gt;instance&lt;/em&gt;）&amp;ndash;RESTリソースを表すオブジェクト。デフォルトでは、HTTPメソッド &lt;code&gt;GET&lt;/code&gt; を &lt;code&gt;on_get()&lt;/code&gt; に、 &lt;code&gt;POST&lt;/code&gt; を &lt;code&gt;on_post()&lt;/code&gt; などにマップします。リソースでサポートされていないHTTPメソッドがある場合は、対応するリクエストハンドラーを定義しないでください。そうすれば、Falconが正しいことを行います。</target>
        </trans-unit>
        <trans-unit id="a9870e945d8ceafdb6ef04865e9d1a1a1b1685f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;resource_length&lt;/strong&gt; &amp;ndash; The maximum value for the last-byte-pos of a range request. Used to set the Content-Range header.</source>
          <target state="translated">&lt;strong&gt;resource_length&lt;/strong&gt; &amp;ndash;範囲リクエストのlast-byte-posの最大値。Content-Rangeヘッダーを設定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="da33b43d632ef16cb028d8d26c6a6c8a0b7493b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;resp&lt;/strong&gt; &amp;ndash; Falcon &lt;code&gt;Response&lt;/code&gt; instance.</source>
          <target state="translated">&lt;strong&gt;resp&lt;/strong&gt; &amp;ndash; Falcon &lt;code&gt;Response&lt;/code&gt; インスタンス。</target>
        </trans-unit>
        <trans-unit id="79db0aa426435fe8e612d20d5ca12dbcbd08b06f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;resp_schema&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; A dictionary that follows the JSON Schema specification. The response will be validated against this schema.</source>
          <target state="translated">&lt;strong&gt;resp_schema&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict &lt;/a&gt;&lt;em&gt;、&lt;/em&gt;&lt;em&gt;オプション&lt;/em&gt;）&lt;strong&gt;&amp;ndash;JSON&lt;/strong&gt;スキーマ仕様に従う辞書。応答は、このスキーマに対して検証されます。</target>
        </trans-unit>
        <trans-unit id="0dc5e811aa9af4e5c730073eeb03067f448bf93e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;response_type&lt;/strong&gt; (&lt;a href=&quot;request_and_response#falcon.Response&quot;&gt;Response&lt;/a&gt;) &amp;ndash; &lt;code&gt;Response&lt;/code&gt;-like class to use instead of Falcon&amp;rsquo;s default class. (default &lt;code&gt;falcon.response.Response&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;response_type&lt;/strong&gt;（&lt;a href=&quot;request_and_response#falcon.Response&quot;&gt;Response&lt;/a&gt;）&amp;ndash; Falconのデフォルトクラスの代わりに使用する &lt;code&gt;Response&lt;/code&gt; のようなクラス。（デフォルト &lt;code&gt;falcon.response.Response&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e3e51910f94e994989f209caf702bf26e956c1fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;retry_after&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/datetime.html#module-datetime&quot;&gt;datetime&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Value for the Retry-After header. If a &lt;code&gt;datetime&lt;/code&gt; object, will serialize as an HTTP date. Otherwise, a non-negative &lt;code&gt;int&lt;/code&gt; is expected, representing the number of seconds to wait.</source>
          <target state="translated">&lt;strong&gt;retry_after&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/datetime.html#module-datetime&quot;&gt;datetime &lt;/a&gt;&lt;em&gt;または&lt;/em&gt;&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&amp;ndash; Retry-Afterヘッダーの値。 &lt;code&gt;datetime&lt;/code&gt; オブジェクトの場合、HTTP日付としてシリアル化されます。それ以外の場合は、待機する秒数を表す負でない &lt;code&gt;int&lt;/code&gt; が期待されます。</target>
        </trans-unit>
        <trans-unit id="213f361ae61b045632426e12c332da76f35b7f7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;retry_after&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#module-datetime&quot;&gt;datetime&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Value for the Retry-After header. If a &lt;code&gt;datetime&lt;/code&gt; object, will serialize as an HTTP date. Otherwise, a non-negative &lt;code&gt;int&lt;/code&gt; is expected, representing the number of seconds to wait.</source>
          <target state="translated">&lt;strong&gt;try_after&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#module-datetime&quot;&gt;datetime&lt;/a&gt;&lt;em&gt;または&lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;）&lt;strong&gt;&amp;ndash;Retry&lt;/strong&gt; -Afterヘッダーの値。 &lt;code&gt;datetime&lt;/code&gt; オブジェクトの場合、HTTP日付としてシリアル化されます。それ以外の場合は、待機する秒数を表す非負の &lt;code&gt;int&lt;/code&gt; が期待されます。</target>
        </trans-unit>
        <trans-unit id="a6f86a3c0457bf635d27c3c6d578513d8e880a2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;router&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#object&quot;&gt;object&lt;/a&gt;) &amp;ndash; An instance of a custom router to use in lieu of the default engine. (See also: &lt;a href=&quot;routing#routing-custom&quot;&gt;Custom Routers&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;router&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#object&quot;&gt;オブジェクト&lt;/a&gt;）&amp;ndash;デフォルトエンジンの代わりに使用するカスタムルーターのインスタンス。（参照：&lt;a href=&quot;routing#routing-custom&quot;&gt;カスタムルーター&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="3a57b91e706404354951487e7ad62409d4b7cf2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;router&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;) &amp;ndash; An instance of a custom router to use in lieu of the default engine. (See also: &lt;a href=&quot;routing#routing-custom&quot;&gt;Custom Routers&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;router&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;）&amp;ndash;デフォルトエンジンの代わりに使用するカスタムルーターのインスタンス。（参照：&lt;a href=&quot;routing#routing-custom&quot;&gt;カスタムルーター&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="03567e0a67ff6b011983f5b443ab0e8228aad71e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;schema&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A dictionary that follows the JSON Schema specification. See &lt;a href=&quot;http://json-schema.org/&quot;&gt;json-schema.org&lt;/a&gt; for more information on defining a compatible dictionary.</source>
          <target state="translated">&lt;strong&gt;スキーマ&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;）&amp;ndash; JSONスキーマ仕様に従う辞書。互換性のある辞書の定義の詳細については、&lt;a href=&quot;http://json-schema.org/&quot;&gt;json-schema.org&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2ccf6b40297a0815b845ce9f939b17f6e1cb4433" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;scheme&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URL scheme, either &amp;lsquo;http&amp;rsquo; or &amp;lsquo;https&amp;rsquo; (default &amp;lsquo;http&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;スキーム&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash; URLスキーム、 'http'または 'https'（デフォルトは 'http'）</target>
        </trans-unit>
        <trans-unit id="161598da0e155c4bc604bc3d33654d366826f614" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;scheme&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URL scheme, either &amp;lsquo;http&amp;rsquo; or &amp;lsquo;https&amp;rsquo; (default &amp;lsquo;http&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;スキーム&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;URLスキーム。「http」または「https」（デフォルトは「http」）</target>
        </trans-unit>
        <trans-unit id="2629cf5306cbf82e7ce168597407ec6fd7a0b158" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;secure&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;セキュア&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;ブール&lt;/a&gt;）&amp;ndash;</target>
        </trans-unit>
        <trans-unit id="74ce8e30ed27442bcf965176a7b9ca55c28ed187" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;secure&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;安全&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash;</target>
        </trans-unit>
        <trans-unit id="c25ffe8b7225d07a0158c7f82660bcd445ce55d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;serializer&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#callable&quot;&gt;callable&lt;/a&gt;) &amp;ndash; A function taking the form &lt;code&gt;func(req, resp, exception)&lt;/code&gt;, where &lt;code&gt;req&lt;/code&gt; is the request object that was passed to the responder method, &lt;code&gt;resp&lt;/code&gt; is the response object, and &lt;code&gt;exception&lt;/code&gt; is an instance of &lt;code&gt;falcon.HTTPError&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;シリアライザ&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#callable&quot;&gt;呼び出し可能&lt;/a&gt;）&amp;ndash; &lt;code&gt;func(req, resp, exception)&lt;/code&gt; という形式の関数。ここで、 &lt;code&gt;req&lt;/code&gt; はレスポンダメソッドに渡されたリクエストオブジェクト、 &lt;code&gt;resp&lt;/code&gt; はレスポンスオブジェクト、 &lt;code&gt;exception&lt;/code&gt; は &lt;code&gt;falcon.HTTPError&lt;/code&gt; のインスタンスです。</target>
        </trans-unit>
        <trans-unit id="3f4d22bcfcf32c25e7368103476c2a3f9e5c1ac2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;serializer&lt;/strong&gt; (&lt;em&gt;callable&lt;/em&gt;) &amp;ndash; A function taking the form &lt;code&gt;func(req, resp, exception)&lt;/code&gt;, where &lt;code&gt;req&lt;/code&gt; is the request object that was passed to the responder method, &lt;code&gt;resp&lt;/code&gt; is the response object, and &lt;code&gt;exception&lt;/code&gt; is an instance of &lt;code&gt;falcon.HTTPError&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;serializer&lt;/strong&gt;（&lt;em&gt;callable&lt;/em&gt;）&amp;ndash; &lt;code&gt;func(req, resp, exception)&lt;/code&gt; の形式の関数。ここで、 &lt;code&gt;req&lt;/code&gt; はレスポンダーメソッドに渡されたリクエストオブジェクト、 &lt;code&gt;resp&lt;/code&gt; はレスポンスオブジェクト、 &lt;code&gt;exception&lt;/code&gt; は &lt;code&gt;falcon.HTTPError&lt;/code&gt; のインスタンスです。</target>
        </trans-unit>
        <trans-unit id="b5be9328e992f823cfc78a77d2d0869267afdcee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;sink&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#callable&quot;&gt;callable&lt;/a&gt;) &amp;ndash; A callable taking the form &lt;code&gt;func(req, resp)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;sink&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#callable&quot;&gt;呼び出し可能&lt;/a&gt;）&amp;ndash; &lt;code&gt;func(req, resp)&lt;/code&gt; という形式の呼び出し可能。</target>
        </trans-unit>
        <trans-unit id="45e3e16cd7dd2ba2829b59a2df1f54497139b329" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;sink&lt;/strong&gt; (&lt;em&gt;callable&lt;/em&gt;) &amp;ndash; A callable taking the form &lt;code&gt;func(req, resp)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;シンク&lt;/strong&gt;（&lt;em&gt;呼び出し可能&lt;/em&gt;）&amp;ndash; &lt;code&gt;func(req, resp)&lt;/code&gt; 形式をとる呼び出し可能。</target>
        </trans-unit>
        <trans-unit id="30fbdb2fd28b5f0f9505d8813718a64347e14be2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; An HTTP status string, including status code and reason string</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;ステータスコードと理由文字列を含むHTTPステータス文字列</target>
        </trans-unit>
        <trans-unit id="0a99309ad2a833a0033b97402593c344235e9d95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Default status string to use in responses</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;応答で使用するデフォルトのステータス文字列</target>
        </trans-unit>
        <trans-unit id="58593536ef7438af40c5bbc095a6b63f57677d08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; HTTP status code and text, such as &amp;ldquo;400 Bad Request&amp;rdquo;</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;「400 Bad Request」などのHTTPステータスコードとテキスト</target>
        </trans-unit>
        <trans-unit id="4aef11e1ad1cfe3914e154efa705ce49d552b83f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; HTTP status code and text, such as &amp;lsquo;748 Confounded by Ponies&amp;rsquo;.</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash; HTTPステータスコードとテキスト（例：748 Confounded by Ponies）。</target>
        </trans-unit>
        <trans-unit id="b6acaf699a882c3702b30781cec01307874da651" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; An HTTP status string, including status code and reason string</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;ステータスコードと理由文字列を含むHTTPステータス文字列</target>
        </trans-unit>
        <trans-unit id="1e1378ac696d73e5a9f4393e6b92e71ddcdb94ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Default status string to use in responses</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;応答で使用するデフォルトのステータス文字列</target>
        </trans-unit>
        <trans-unit id="5fb3906cb08d36a76842cbd8114d02f72388fb10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; HTTP status code and text, such as &amp;ldquo;400 Bad Request&amp;rdquo;</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;「400BadRequest」などのHTTPステータスコードとテキスト</target>
        </trans-unit>
        <trans-unit id="3ac5846f8d06059b7b304d5f414b5fd5871f33ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; HTTP status code and text, such as &amp;lsquo;748 Confounded by Ponies&amp;rsquo;.</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;「748ConfoundedbyPonies」などのHTTPステータスコードとテキスト。</target>
        </trans-unit>
        <trans-unit id="ffc35fa55d7db062b12535a414a874522e314342" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status_code&lt;/strong&gt; &amp;ndash; integer or string that can be converted to an integer</source>
          <target state="translated">&lt;strong&gt;status_code&lt;/strong&gt; &amp;ndash;整数または整数に変換できる文字列</target>
        </trans-unit>
        <trans-unit id="3e1548f0cbdc4c8f2d40a4e2652348b5da034dbb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;store&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A &lt;code&gt;dict&lt;/code&gt;-like object in which to place the value of the param, but only if the param is found (default &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;store&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;）&amp;ndash; paramの値を配置する &lt;code&gt;dict&lt;/code&gt; のようなオブジェクト。ただし、paramが見つかった場合のみ（デフォルトは &lt;code&gt;None&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a7302b126fb439cc6ee5771a26f2467c6c3290e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;store&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A &lt;code&gt;dict&lt;/code&gt;-like object in which to place the value of the param, but only if the param is present.</source>
          <target state="translated">&lt;strong&gt;store&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;）&amp;ndash; paramの値を配置する &lt;code&gt;dict&lt;/code&gt; のようなオブジェクト。ただし、paramが存在する場合のみ。</target>
        </trans-unit>
        <trans-unit id="2b092dbf1b2312e95e2227b2119eadaefd4515a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;store&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A &lt;code&gt;dict&lt;/code&gt;-like object in which to place the value of the param, but only if the param is found (default &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;store&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;）&amp;ndash; paramの値を配置する &lt;code&gt;dict&lt;/code&gt; のようなオブジェクト。ただし、paramが見つかった場合のみ（デフォルトは &lt;code&gt;None&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="322ab32608b1ab67be5af15927af9ed4a7c00a39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;store&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A &lt;code&gt;dict&lt;/code&gt;-like object in which to place the value of the param, but only if the param is present.</source>
          <target state="translated">&lt;strong&gt;store&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;）&amp;ndash; paramの値を配置する &lt;code&gt;dict&lt;/code&gt; のようなオブジェクトですが、paramが存在する場合に限ります。</target>
        </trans-unit>
        <trans-unit id="4573151b1f3cfaa44352fc00b327f3aab4e54404" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;stream&lt;/strong&gt; &amp;ndash; A readable file-like object.</source>
          <target state="translated">&lt;strong&gt;ストリーム&lt;/strong&gt;&amp;ndash;読み取り可能なファイルのようなオブジェクト。</target>
        </trans-unit>
        <trans-unit id="d15ca432f08ed39e6648384ac0c3358389271fb2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;stream&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;) &amp;ndash; Input data to deserialize.</source>
          <target state="translated">&lt;strong&gt;stream&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;）&amp;ndash;逆シリアル化する入力データ。</target>
        </trans-unit>
        <trans-unit id="37586746b9d4a99a9fc3535b7125affb728c01c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;suffix&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Optional responder name suffix for this route. If a suffix is provided, Falcon will map GET requests to &lt;code&gt;on_get_{suffix}()&lt;/code&gt;, POST requests to &lt;code&gt;on_post_{suffix}()&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;strong&gt;サフィックス&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;このルートのオプションのレスポンダー名サフィックス。サフィックスが指定されている場合、FalconはGETリクエストを &lt;code&gt;on_get_{suffix}()&lt;/code&gt; にマップし、POSTリクエストを &lt;code&gt;on_post_{suffix}()&lt;/code&gt; にマップします。</target>
        </trans-unit>
        <trans-unit id="5ded38f50ff2bc7df71b722f23d38f6fe5b49175" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;suffix&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Optional responder name suffix for this route. If a suffix is provided, Falcon will map GET requests to &lt;code&gt;on_get_{suffix}()&lt;/code&gt;, POST requests to &lt;code&gt;on_post_{suffix}()&lt;/code&gt;, etc. In this way, multiple closely-related routes can be mapped to the same resource. For example, a single resource class can use suffixed responders to distinguish requests for a single item vs. a collection of those same items. Another class might use a suffixed responder to handle a shortlink route in addition to the regular route for the resource.</source>
          <target state="translated">&lt;strong&gt;サフィックス&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;このルートのオプションのレスポンダー名サフィックス。サフィックスが指定されている場合、FalconはGETリクエストを &lt;code&gt;on_get_{suffix}()&lt;/code&gt; にマップし、POSTリクエストを &lt;code&gt;on_post_{suffix}()&lt;/code&gt; にマップします。このようにして、密接に関連する複数のルートを同じリソースにマップできます。たとえば、単一のリソースクラスは、接尾辞付きのレスポンダーを使用して、単一のアイテムに対する要求とそれらの同じアイテムのコレクションを区別できます。別のクラスは、リソースの通常のルートに加えて、接尾辞付きのレスポンダーを使用してショートリンクルートを処理する場合があります。</target>
        </trans-unit>
        <trans-unit id="6c80f7a6f6440d26c90f3e52575dd8fb66201358" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;target&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Target IRI for the resource identified by the link. Will be converted to a URI, if necessary, per &lt;a href=&quot;https://tools.ietf.org/html/rfc3987#section-3.1.&quot;&gt;RFC 3987, Section 3.1.&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;target&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リンクによって識別されるリソースのターゲットIRI。&lt;a href=&quot;https://tools.ietf.org/html/rfc3987#section-3.1.&quot;&gt;RFC 3987、セクション3.1&lt;/a&gt;に従って、必要に応じてURIに変換されます。</target>
        </trans-unit>
        <trans-unit id="b0e07fc100e5a021a55970aab5aa3e7f73e4bedb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;target&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Target IRI for the resource identified by the link. Will be converted to a URI, if necessary, per &lt;a href=&quot;https://tools.ietf.org/html/rfc3987#section-3.1.&quot;&gt;RFC 3987, Section 3.1.&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;target&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リンクで識別されるリソースのターゲットIRI。&lt;a href=&quot;https://tools.ietf.org/html/rfc3987#section-3.1.&quot;&gt;RFC 3987、セクション3.1&lt;/a&gt;に従って、必要に応じてURIに変換されます。</target>
        </trans-unit>
        <trans-unit id="e407b9a990d4c092f41a9a6e4f58b49e1642211c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;template&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The template to compile. Note that field names are restricted to ASCII a-z, A-Z, and the underscore character.</source>
          <target state="translated">&lt;strong&gt;テンプレート&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;コンパイルするテンプレート。フィールド名は、ASCII az、AZ、およびアンダースコア文字に制限されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="38752ca79a2c92a5a7075ac7ac8a803661b77f6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;template&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The template to compile. Note that field names are restricted to ASCII a-z, A-Z, and the underscore character.</source>
          <target state="translated">&lt;strong&gt;template&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;コンパイルするテンプレート。フィールド名はASCIIaz、AZ、およびアンダースコア文字に制限されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e104bf4c21aef6fad239e28f2f78390c4ea0651d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;400 Bad Request&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「400 Bad Request」）。</target>
        </trans-unit>
        <trans-unit id="4320ccb4499af8d1061a23bfff4f8c39fe24b014" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;401 Unauthorized&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「401 Unauthorized」）。</target>
        </trans-unit>
        <trans-unit id="8f92c37e3a43ff79557349a2d63ac78b6b502eae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;403 Forbidden&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「403 Forbidden」）。</target>
        </trans-unit>
        <trans-unit id="03ca8cbcedd647422b9628c50b9f804dd002d349" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;409 Conflict&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「409 Conflict」）。</target>
        </trans-unit>
        <trans-unit id="7ae32ee240165f880c172a545bb3990a045a4c41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;411 Length Required&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「411 Length Required」）。</target>
        </trans-unit>
        <trans-unit id="e13f5cf3f540158dc8c3170c64871d171bc2d491" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;412 Precondition Failed&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「412 Precondition Failed」）。</target>
        </trans-unit>
        <trans-unit id="701997da83a8cd1cd4679b4b11d818f755b8a78b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;413 Request Entity Too Large&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「413 Request Entity Too Large」）。</target>
        </trans-unit>
        <trans-unit id="9a25b9defd25dd6d895514e1de6296d79dfe98e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;414 URI Too Long&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「414 URI Too Long」）。</target>
        </trans-unit>
        <trans-unit id="b5fc43b3e7c4c3bb0400b0cd333db5303d7c8e00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;422 Unprocessable Entity&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは '422 Unprocessable Entity'）。</target>
        </trans-unit>
        <trans-unit id="72d80e70eff7903ee5a8e1c3de657d3b433829fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;423 Locked&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「423ロック済み」）。</target>
        </trans-unit>
        <trans-unit id="67a3c4a2be5af2ae2f5d6f1ec7f8f2f806a1f318" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;424 Failed Dependency&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「424 Failed Dependency」）。</target>
        </trans-unit>
        <trans-unit id="86ce2a3739d409e91ce55a01dadad526ec023d83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;428 Precondition Required&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「428前提条件が必要」）。</target>
        </trans-unit>
        <trans-unit id="ab023ad028146b9cbcd15abf9046a2e09de80d69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;429 Too Many Requests&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「429 Too Many Requests」）。</target>
        </trans-unit>
        <trans-unit id="d838fa09f7ca6e4d2d36e44548f472124d99763b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;431 Request Header Fields Too Large&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「431リクエストヘッダーフィールドが大きすぎます」）。</target>
        </trans-unit>
        <trans-unit id="6b90c8a0da15d8d452ab86ef8e9eb2c3b736721e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;451 Unavailable For Legal Reasons&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「法的理由により「451 Unavailable」）。</target>
        </trans-unit>
        <trans-unit id="1102d15bae94c3cbe4e6b60e1170dd087aeb190f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;500 Internal Server Error&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「500内部サーバーエラー」）。</target>
        </trans-unit>
        <trans-unit id="49859c7ef0837ea473a1c139b0c432e48f558506" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;502 Bad Gateway&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「502 Bad Gateway」）。</target>
        </trans-unit>
        <trans-unit id="5c9fa01c4de7cd9e6396c6b3f595bfee801a9d61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;503 Service Unavailable&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「503 Service Unavailable」）。</target>
        </trans-unit>
        <trans-unit id="5b4d2060ff1886c79427ee217617a2aff5d8513d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;507 Insufficient Storage&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「507 Insufficient Storage」）。</target>
        </trans-unit>
        <trans-unit id="bc4c55bc48b4eb75ae5d00db371540c6b64dd333" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;508 Loop Detected&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「508 Loop Detected」）。</target>
        </trans-unit>
        <trans-unit id="9c18b3c97aad9e1399ea8d23abb57ca8ea47595d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;511 Network Authentication Required&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;タイトル&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーのタイトル（デフォルトは「511ネットワーク認証が必要」）。</target>
        </trans-unit>
        <trans-unit id="d0568a6ede027a44416a209b5bb52e5771678156" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Human-friendly error title. If not provided, and &lt;code&gt;description&lt;/code&gt; is also not provided, no body will be included in the response.</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;人にやさしいエラーのタイトル。提供されず、 &lt;code&gt;description&lt;/code&gt; も提供されない場合、応答に本文は含まれません。</target>
        </trans-unit>
        <trans-unit id="0cb6d9cdc59ee7d712eb10617fb97a40fcff3a79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Human-friendly error title. If not provided, defaults to the HTTP status line as determined by the &lt;code&gt;status&lt;/code&gt; argument.</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;人にやさしいエラーのタイトル。指定しない場合、デフォルトで、 &lt;code&gt;status&lt;/code&gt; 引数によって決定されたHTTPステータス行になります。</target>
        </trans-unit>
        <trans-unit id="b7947c841eff0d0d09701505be442d5ca409e9de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Human-readable label for the destination of the link (default &lt;code&gt;None&lt;/code&gt;). If the title includes non-ASCII characters, you will need to use &lt;code&gt;title_star&lt;/code&gt; instead, or provide both a US-ASCII version using &lt;code&gt;title&lt;/code&gt; and a Unicode version using &lt;code&gt;title_star&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リンク先の人間が読めるラベル（デフォルトは &lt;code&gt;None&lt;/code&gt; ）。タイトルに非ASCII文字が含まれている場合は、代わりに &lt;code&gt;title_star&lt;/code&gt; を使用するか、 &lt;code&gt;title&lt;/code&gt; を使用するUS-ASCIIバージョンと &lt;code&gt;title_star&lt;/code&gt; を使用するUnicodeバージョンの両方を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="52caa1ebfc55f5783d0c69aa39bd9a7f03222a86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;400 Bad Request&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「400BadRequest」）。</target>
        </trans-unit>
        <trans-unit id="92a9338c5639276d85c717604726a4966acf2ac3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;401 Unauthorized&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「401Unauthorized」）。</target>
        </trans-unit>
        <trans-unit id="0f825b4308d5d45fef84c190d0f709aba01bb5d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;403 Forbidden&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「403Forbidden」）。</target>
        </trans-unit>
        <trans-unit id="f3d931746ae1663c7a35b07ddfd032c795b0564c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;409 Conflict&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「409Conflict」）。</target>
        </trans-unit>
        <trans-unit id="20ef6a48ad29e42164465b8d5bcccad5b62fc0b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;411 Length Required&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーtitle（デフォルトは「411LengthRequired」）。</target>
        </trans-unit>
        <trans-unit id="304a5f0c77ebc67ffc66017ab1a71481efcaf614" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;412 Precondition Failed&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーtitle（デフォルトは「412PreconditionFailed」）。</target>
        </trans-unit>
        <trans-unit id="700abd62481d17368bba30e662d93e2dcc1bca2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;413 Payload Too Large&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「413ペイロードが大きすぎます」）。</target>
        </trans-unit>
        <trans-unit id="4a8989377ab5ba47494d37c4fe6444bcc62216ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;414 URI Too Long&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「414URIが長すぎます」）。</target>
        </trans-unit>
        <trans-unit id="ed020b1031540d7109a4560f80f15a1140800952" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;422 Unprocessable Entity&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーtitle（デフォルトは「422UnprocessableEntity」）。</target>
        </trans-unit>
        <trans-unit id="a970094bd44fe64b97cddf6bb87b1cfd73124483" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;423 Locked&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「423ロック」）。</target>
        </trans-unit>
        <trans-unit id="4357fd96f471ba5ca8dcb0e9f01d9c54fce57903" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;424 Failed Dependency&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「424FailedDependency」）。</target>
        </trans-unit>
        <trans-unit id="4b3cfb811054dc169cb3c46e6189b86fe08f7957" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;428 Precondition Required&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「428前提条件が必要」）。</target>
        </trans-unit>
        <trans-unit id="54ef63477b698f4954bd1f6f423c97c452064cd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;429 Too Many Requests&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「429Too ManyRequests」）。</target>
        </trans-unit>
        <trans-unit id="ce7ec0cde1eefb532fb8cf69a2c463453715ea4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;431 Request Header Fields Too Large&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「431リクエストヘッダーフィールドが大きすぎます」）。</target>
        </trans-unit>
        <trans-unit id="a4caca0557259b63b22b0abfb27de2d66ba29abf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;451 Unavailable For Legal Reasons&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「451 Unavailable For LegalReasons」）。</target>
        </trans-unit>
        <trans-unit id="e8a75e251e208521cad0f7b92a2303252867262b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;500 Internal Server Error&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「500内部サーバーエラー」）。</target>
        </trans-unit>
        <trans-unit id="afa80d48909500a5de05b94e273d360e7cfb3726" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;502 Bad Gateway&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「502BadGateway」）。</target>
        </trans-unit>
        <trans-unit id="6a600bb5263e84c95d4c2bbf5b28ae20beb448d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;503 Service Unavailable&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「503 ServiceUnavailable」）。</target>
        </trans-unit>
        <trans-unit id="7fca39d1f73f827c798a482b20d8b776a5c31372" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;507 Insufficient Storage&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーtitle（デフォルトは「507InsufficientStorage」）。</target>
        </trans-unit>
        <trans-unit id="b4b3d70c218e0e6916c0c806639eba5297c93695" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;508 Loop Detected&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラータイトル（デフォルトは「508ループ検出」）。</target>
        </trans-unit>
        <trans-unit id="bfa0e1fff710f4e18b6d802e221e33ea6d998d81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;511 Network Authentication Required&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エラーtitle（デフォルトは「511ネットワーク認証が必要」）。</target>
        </trans-unit>
        <trans-unit id="d614f599725b67bece2e6ab60c940762ee263df1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Human-friendly error title. If not provided, and &lt;code&gt;description&lt;/code&gt; is also not provided, no body will be included in the response.</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;人にわかりやすいエラータイトル。提供されておらず、 &lt;code&gt;description&lt;/code&gt; も提供されていない場合、本文は応答に含まれません。</target>
        </trans-unit>
        <trans-unit id="85203491573221cd678852960292851da998f35c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Human-friendly error title. If not provided, defaults to the HTTP status line as determined by the &lt;code&gt;status&lt;/code&gt; argument.</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;人にわかりやすいエラータイトル。指定しない場合、デフォルトで &lt;code&gt;status&lt;/code&gt; 引数によって決定されるHTTPステータス行になります。</target>
        </trans-unit>
        <trans-unit id="75d7a55470dd21220b4d2966d4f8290163893e0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Human-readable label for the destination of the link (default &lt;code&gt;None&lt;/code&gt;). If the title includes non-ASCII characters, you will need to use &lt;code&gt;title_star&lt;/code&gt; instead, or provide both a US-ASCII version using &lt;code&gt;title&lt;/code&gt; and a Unicode version using &lt;code&gt;title_star&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リンク先の人間が読める形式のラベル（デフォルトは &lt;code&gt;None&lt;/code&gt; ）。タイトルは非ASCII文字が含まれている場合は、使用する必要があります &lt;code&gt;title_star&lt;/code&gt; を代わりに、または使用してUS-ASCIIバージョンの両方を提供 &lt;code&gt;title&lt;/code&gt; 使用してUnicodeバージョンを &lt;code&gt;title_star&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="d40e8ebe8e0da775ad123bad351feef50f30b9e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title_star&lt;/strong&gt; (&lt;em&gt;tuple of str&lt;/em&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;title_star&lt;/strong&gt;（&lt;em&gt;strのタプル&lt;/em&gt;）&amp;ndash;</target>
        </trans-unit>
        <trans-unit id="fc2f1baeba4deeadd83e98213a8a3281e40b8fa3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transform&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#callable&quot;&gt;callable&lt;/a&gt;) &amp;ndash; An optional transform function that takes as input each element in the list as a &lt;code&gt;str&lt;/code&gt; and outputs a transformed element for inclusion in the list that will be returned. For example, passing &lt;code&gt;int&lt;/code&gt; will transform list items into numbers.</source>
          <target state="translated">&lt;strong&gt;変換&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#callable&quot;&gt;呼び出し可能&lt;/a&gt;）&amp;ndash;オプションの変換関数。リストの各要素を &lt;code&gt;str&lt;/code&gt; として入力として受け取り、変換された要素をリストに含めて出力します。たとえば、 &lt;code&gt;int&lt;/code&gt; を渡すと、リストアイテムが数値に変換されます。</target>
        </trans-unit>
        <trans-unit id="68179d354d78de6789a0347cf2ad4ebd28dfa771" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transform&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#callable&quot;&gt;callable&lt;/a&gt;) &amp;ndash; An optional transform function that takes as input each element in the list as a &lt;code&gt;str&lt;/code&gt; and outputs a transformed element for inclusion in the list that will be returned. For example, passing &lt;code&gt;int&lt;/code&gt; will transform list items into numbers.</source>
          <target state="translated">&lt;strong&gt;transform&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#callable&quot;&gt;callable&lt;/a&gt;）&amp;ndash;リスト内の各要素を &lt;code&gt;str&lt;/code&gt; として入力として受け取り、返されるリストに含めるために変換された要素を出力するオプションの変換関数。たとえば、 &lt;code&gt;int&lt;/code&gt; を渡すと、リスト項目が数値に変換されます。</target>
        </trans-unit>
        <trans-unit id="4ed2bbcf709e2a73627c45bfc2e3142c91ee44b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;type_hint&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Provides a hint as to the media type of the result of dereferencing the link (default &lt;code&gt;None&lt;/code&gt;). As noted in RFC 5988, this is only a hint and does not override the Content-Type header returned when the link is followed.</source>
          <target state="translated">&lt;strong&gt;type_hint&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リンクの逆参照の結果のメディアタイプに関するヒントを提供します（デフォルトは &lt;code&gt;None&lt;/code&gt; ）。RFC 5988に記載されているように、これは単なるヒントであり、リンクをたどったときに返されるContent-Typeヘッダーをオーバーライドしません。</target>
        </trans-unit>
        <trans-unit id="9f3c90b6acc0d4b5c480fd2a771db9948290bc6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;type_hint&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Provides a hint as to the media type of the result of dereferencing the link (default &lt;code&gt;None&lt;/code&gt;). As noted in RFC 5988, this is only a hint and does not override the Content-Type header returned when the link is followed.</source>
          <target state="translated">&lt;strong&gt;type_hint&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;リンクの逆参照の結果のメディアタイプに関するヒントを提供します（デフォルトは &lt;code&gt;None&lt;/code&gt; ）。RFC 5988に記載されているように、これは単なるヒントであり、リンクをたどったときに返されるContent-Typeヘッダーを上書きしません。</target>
        </trans-unit>
        <trans-unit id="1c91ddcc106a1ec7d1e4aa1c9c12acf604a56075" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unquote_plus&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;False&lt;/code&gt; to retain any plus (&amp;lsquo;+&amp;rsquo;) characters in the given string, rather than converting them to spaces (default &lt;code&gt;True&lt;/code&gt;). Typically you should set this to &lt;code&gt;False&lt;/code&gt; when decoding any part of a URI other than the query string.</source>
          <target state="translated">&lt;strong&gt;unquote_plus&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;）&amp;ndash; &lt;code&gt;False&lt;/code&gt; に設定すると、スペースに変換するのではなく、指定した文字列にプラス（ '+'）文字を保持します（デフォルトは &lt;code&gt;True&lt;/code&gt; ）。通常、クエリ文字列以外のURIの一部をデコードする場合は、これを &lt;code&gt;False&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="aa0115cadc84a13af05fc9b5b9660d1048b4fa39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uri&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URI fragment to encode. It is assumed not to cross delimiter boundaries, and so any reserved URI delimiter characters included in it will be escaped. If &lt;code&gt;value&lt;/code&gt; is a wide string (i.e., &lt;code&gt;six.text_type&lt;/code&gt;), it will be encoded to a UTF-8 byte array and any multibyte sequences will be percent-encoded as-is.</source>
          <target state="translated">&lt;strong&gt;uri&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エンコードするURIフラグメント。区切り文字の境界を越えないことが想定されているため、それに含まれる予約済みのURI区切り文字はエスケープされます。場合 &lt;code&gt;value&lt;/code&gt; ワイド文字列（すなわち、ある &lt;code&gt;six.text_type&lt;/code&gt; ）は、UTF-8バイトアレイとマルチバイトシーケンスに符号化されるパーセントエンコードとして-であろう。</target>
        </trans-unit>
        <trans-unit id="f9a3a4e15dcc1ce3ae9d365b629fdb6ab1120752" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uri&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URI or part of a URI to encode. If this is a wide string (i.e., &lt;code&gt;six.text_type&lt;/code&gt;), it will be encoded to a UTF-8 byte array and any multibyte sequences will be percent-encoded as-is.</source>
          <target state="translated">&lt;strong&gt;uri&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エンコードするURIまたはURIの一部。これがワイド文字列（つまり、 &lt;code&gt;six.text_type&lt;/code&gt; ）の場合、UTF-8バイト配列にエンコードされ、マルチバイトシーケンスはそのままパーセントエンコードされます。</target>
        </trans-unit>
        <trans-unit id="6ff99339358dca362409f03988c8bfb7a6a053d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uri&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The requested path to route.</source>
          <target state="translated">&lt;strong&gt;uri&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;要求されたルーティングパス。</target>
        </trans-unit>
        <trans-unit id="9f5891897389a108ca14028d6d2801652a327d35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uri&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URI fragment to encode. It is assumed not to cross delimiter boundaries, and so any reserved URI delimiter characters included in it will be escaped. If &lt;code&gt;value&lt;/code&gt; is a wide string (i.e., &lt;code&gt;compat.text_type&lt;/code&gt;), it will be encoded to a UTF-8 byte array and any multibyte sequences will be percent-encoded as-is.</source>
          <target state="translated">&lt;strong&gt;uri&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エンコードするURIフラグメント。区切り文字の境界を越えないことが想定されているため、それに含まれる予約済みのURI区切り文字はすべてエスケープされます。場合 &lt;code&gt;value&lt;/code&gt; ワイド文字列（すなわち、ある &lt;code&gt;compat.text_type&lt;/code&gt; ）は、UTF-8バイトアレイとマルチバイトシーケンスに符号化されるパーセントエンコードとして-であろう。</target>
        </trans-unit>
        <trans-unit id="8b4283d3e641d19fa935138c2e70d0e6564366f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uri&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URI or part of a URI to encode. If this is a wide string (i.e., &lt;code&gt;compat.text_type&lt;/code&gt;), it will be encoded to a UTF-8 byte array and any multibyte sequences will be percent-encoded as-is.</source>
          <target state="translated">&lt;strong&gt;uri&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;エンコードするURIまたはURIの一部。これが幅の広い文字列（つまり、 &lt;code&gt;compat.text_type&lt;/code&gt; ）の場合、UTF-8バイト配列にエンコードされ、マルチバイトシーケンスはそのままパーセントエンコードされます。</target>
        </trans-unit>
        <trans-unit id="a6912fe364399cc85dd87520933bc3910261678f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uri_template&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;uri_template&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;</target>
        </trans-unit>
        <trans-unit id="654f53c5ce5c83e0542e725ae39096b0e13e81d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uri_template&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;uri_template&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;</target>
        </trans-unit>
        <trans-unit id="81fc40a75ae517cca52d5737e453fa2109a6b0c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uri_template&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A URI template to use for the route</source>
          <target state="translated">&lt;strong&gt;uri_template&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;ルートに使用するURIテンプレート</target>
        </trans-unit>
        <trans-unit id="5e643a75b8a99fdf007993da9f9c47fe7e989881" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Cookie value</source>
          <target state="translated">&lt;strong&gt;値&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash; Cookieの値</target>
        </trans-unit>
        <trans-unit id="37cb31109ecb31f8eb6e6375ceb95a54cda37dc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Original string to convert.</source>
          <target state="translated">&lt;strong&gt;value&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;変換する元の文字列。</target>
        </trans-unit>
        <trans-unit id="b56c2a5de16b903100f90e16572fe1fa619099e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Value for the header. Must be convertable to &lt;code&gt;str&lt;/code&gt; or be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt;. Strings must contain only US-ASCII characters. Under Python 2.x, the &lt;code&gt;unicode&lt;/code&gt; type is also accepted, although such strings are also limited to US-ASCII.</source>
          <target state="translated">&lt;strong&gt;value&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;ヘッダーの値。 &lt;code&gt;str&lt;/code&gt; に変換可能であるか、タイプ &lt;code&gt;str&lt;/code&gt; または &lt;code&gt;StringType&lt;/code&gt; である必要があります。文字列にはUS-ASCII文字のみを含める必要があります。Python 2.xでは、 &lt;code&gt;unicode&lt;/code&gt; タイプも受け入れられますが、そのような文字列もUS-ASCIIに制限されています。</target>
        </trans-unit>
        <trans-unit id="2f9ffbec4ff8b87685488b3b357ff713328c8534" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Cookie value</source>
          <target state="translated">&lt;strong&gt;value&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;Cookie値</target>
        </trans-unit>
        <trans-unit id="1386a1ad9884ebcd805b2ad4edccb89821d8a43f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Original string to convert.</source>
          <target state="translated">&lt;strong&gt;value&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;変換する元の文字列。</target>
        </trans-unit>
        <trans-unit id="b61ecbe5e93d201be2aca8af265cd12222f5592a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Value for the header. Must be convertable to &lt;code&gt;str&lt;/code&gt; or be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt;. Strings must contain only US-ASCII characters. Under Python 2.x, the &lt;code&gt;unicode&lt;/code&gt; type is also accepted, although such strings are also limited to US-ASCII.</source>
          <target state="translated">&lt;strong&gt;value&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;）&amp;ndash;ヘッダーの値。 &lt;code&gt;str&lt;/code&gt; に変換可能であるか、str型または &lt;code&gt;StringType&lt;/code&gt; 型である必要があり &lt;code&gt;str&lt;/code&gt; 。文字列には、US-ASCII文字のみを含める必要があります。Python 2.xでは、 &lt;code&gt;unicode&lt;/code&gt; タイプも受け入れられますが、そのような文字列もUS-ASCIIに制限されています。</target>
        </trans-unit>
        <trans-unit id="412ffa6c39f062ae746c92e8d8916d8182354bc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;wsgierrors&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/io.html#module-io&quot;&gt;io&lt;/a&gt;) &amp;ndash; The stream to use as &lt;em&gt;wsgierrors&lt;/em&gt; (default &lt;code&gt;sys.stderr&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;wsgierrors&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/2/library/io.html#module-io&quot;&gt;io&lt;/a&gt;）&amp;ndash; &lt;em&gt;wsgierrors&lt;/em&gt;として使用するストリーム（デフォルトは &lt;code&gt;sys.stderr&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8229f7cb5e35ecc16426036dc27b9f2ff3221c2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;wsgierrors&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/io.html#module-io&quot;&gt;io&lt;/a&gt;) &amp;ndash; The stream to use as &lt;em&gt;wsgierrors&lt;/em&gt; (default &lt;code&gt;sys.stderr&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;wsgierrors&lt;/strong&gt;（&lt;a href=&quot;https://docs.python.org/3/library/io.html#module-io&quot;&gt;io&lt;/a&gt;）&amp;ndash; &lt;em&gt;wsgierrors&lt;/em&gt;として使用するストリーム（デフォルトは &lt;code&gt;sys.stderr&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="bb7d6df6d917978324379be400bed47d56451a9e" translate="yes" xml:space="preserve">
          <source>A 2-member &lt;code&gt;tuple&lt;/code&gt; parsed from the value of the Range header.</source>
          <target state="translated">Rangeヘッダーの値から解析された2メンバーの &lt;code&gt;tuple&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0fa83428a743df148996cc3f0b002ea9fa94c57e" translate="yes" xml:space="preserve">
          <source>A 303 response to a GET request indicates that the origin server does not have a representation of the target resource that can be transferred over HTTP. However, the Location header in the response may be dereferenced to obtain a representation for an alternative resource. The recipient may find this alternative useful, even though it does not represent the original target resource.</source>
          <target state="translated">GETリクエストに対する303応答は、オリジンサーバがHTTPで転送できるターゲットリソースの表現を持っていないことを示しています。しかし、応答中の Location ヘッダは、代替リソースの表現を得るために参照される可能性があります。受信者は、元のターゲットリソースを表現していなくても、この代替リソースが有用であることに気づくかもしれません。</target>
        </trans-unit>
        <trans-unit id="5b26f1d8f9da0c7cb62f363e6df95050e5f60df3" translate="yes" xml:space="preserve">
          <source>A 4-member tuple composed of (resource, method_map,</source>
          <target state="translated">(resource,method_map.</target>
        </trans-unit>
        <trans-unit id="f7817d960c1bb59ec2d01477ebb45261235a13eb" translate="yes" xml:space="preserve">
          <source>A 404 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls.</source>
          <target state="translated">404 レスポンスはデフォルトでキャッシュ可能です。</target>
        </trans-unit>
        <trans-unit id="0ab2c2d12d08fbcf4e353f15c4fa10fc67f1b31b" translate="yes" xml:space="preserve">
          <source>A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 Gone status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.</source>
          <target state="translated">404ステータスコードは、この表現の欠如が一時的なものなのか永続的なものなのかを示すものではない。</target>
        </trans-unit>
        <trans-unit id="eade9853498c5cfeb88d06d35bd9c62a5fc700af" translate="yes" xml:space="preserve">
          <source>A 405 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls.</source>
          <target state="translated">405 レスポンスは、メソッド定義または明示的なキャッシュ制御で指定されていない限り、デフォルトでキャッシュ可能です。</target>
        </trans-unit>
        <trans-unit id="52fdfbe087f467e1ae18c5d70c509e91d433cc0d" translate="yes" xml:space="preserve">
          <source>A 410 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls.</source>
          <target state="translated">つまり、メソッド定義や明示的なキャッシュ制御で指定されていない限り、デフォルトではキャッシュ可能である。</target>
        </trans-unit>
        <trans-unit id="2c79f4ae36e5e4a864363ddbc272bfbc4c426dad" translate="yes" xml:space="preserve">
          <source>A 414 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls.</source>
          <target state="translated">すなわち、メソッド定義または明示的なキャッシュ制御によって別段の指示がない限り、応答はデフォルトでキャッシュ可能である。</target>
        </trans-unit>
        <trans-unit id="f8ff6c17dca972c9336623f6fa8836c35f4094df" translate="yes" xml:space="preserve">
          <source>A 451 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls.</source>
          <target state="translated">451 レスポンスは、メソッド定義または明示的なキャッシュ制御によって別段の指示がない限り、デフォルトでキャッシュ可能です。</target>
        </trans-unit>
        <trans-unit id="d445f24f5412be51d324515e3972946073e60d9e" translate="yes" xml:space="preserve">
          <source>A 501 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2.&quot;&gt;RFC 7234, Section 4.2.2.&lt;/a&gt;</source>
          <target state="translated">501応答はデフォルトでキャッシュ可能です。つまり、&lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2.&quot;&gt;RFC 7234のセクション4.2.2で&lt;/a&gt;説明されているように、メソッド定義または明示的なキャッシュ制御で特に指示されていない限り。</target>
        </trans-unit>
        <trans-unit id="47cb5a1ce6e35ddb29ed19150c65c88df9d443c2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; of header names and values to set, or a &lt;code&gt;list&lt;/code&gt; of (&lt;em&gt;name&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt;) tuples. Both &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; must be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt;, and only character values 0x00 through 0xFF may be used on platforms that use wide characters.</source>
          <target state="translated">&lt;code&gt;dict&lt;/code&gt; セットのヘッダの名前と値の、または &lt;code&gt;list&lt;/code&gt; （の&lt;em&gt;名前&lt;/em&gt;、&lt;em&gt;値&lt;/em&gt;）の組。&lt;em&gt;名前&lt;/em&gt;と&lt;em&gt;値&lt;/em&gt;はどちらも &lt;code&gt;str&lt;/code&gt; 型または &lt;code&gt;StringType&lt;/code&gt; 型である必要があり、ワイド文字を使用するプラットフォームでは0x00から0xFFまでの文字値のみを使用できます。</target>
        </trans-unit>
        <trans-unit id="50c70ad805f1aae6759433f4d1fbcd4b99e35c5d" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;process_request&lt;/em&gt; middleware method may short-circuit further request processing by setting &lt;a href=&quot;request_and_response#falcon.Response.complete&quot;&gt;&lt;code&gt;complete&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;, e.g.:</source>
          <target state="translated">&lt;em&gt;process一&lt;/em&gt;ミドルウェア方法は、設定することで、処理短絡さらに要求することができる&lt;a href=&quot;request_and_response#falcon.Response.complete&quot;&gt; &lt;code&gt;complete&lt;/code&gt; &lt;/a&gt;に &lt;code&gt;True&lt;/code&gt; 、例えば：</target>
        </trans-unit>
        <trans-unit id="78d3d6145ca2b6b67eef1b1fee2d1730a8aa986e" translate="yes" xml:space="preserve">
          <source>A JSON document for the error.</source>
          <target state="translated">エラーが発生した場合のJSONドキュメント。</target>
        </trans-unit>
        <trans-unit id="4b06f9d330e7e4319c8184206469d8b372f93481" translate="yes" xml:space="preserve">
          <source>A PUT request to &amp;ldquo;/user/kgriffs&amp;rdquo; would be routed to:</source>
          <target state="translated">「/ user / kgriffs」へのPUTリクエストは次の場所にルーティングされます。</target>
        </trans-unit>
        <trans-unit id="aa379ef37c42923b7835e419f99cdc3e4d48b401" translate="yes" xml:space="preserve">
          <source>A URI query string, including the &amp;lsquo;?&amp;rsquo; prefix (unless &lt;code&gt;prefix&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;), or an empty string if no params are given (the &lt;code&gt;dict&lt;/code&gt; is empty).</source>
          <target state="translated">「？」を含むURIクエリ文字列 プレフィックス（ &lt;code&gt;prefix&lt;/code&gt; が &lt;code&gt;False&lt;/code&gt; の場合を除く）、またはパラメータが指定されていない場合（空の &lt;code&gt;dict&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d2080bc00b6c1b4224cda9171d1c456a81e9e14b" translate="yes" xml:space="preserve">
          <source>A UTC datetime instance corresponding to the given HTTP date.</source>
          <target state="translated">指定された HTTP 日付に対応する UTC 日付のインスタンス。</target>
        </trans-unit>
        <trans-unit id="80a2e1ae5c1b4b60cdffa7dd93661c4541303c96" translate="yes" xml:space="preserve">
          <source>A WSGI application is just a callable with a well-defined signature so that you can host the application with any web server that understands the &lt;a href=&quot;http://legacy.python.org/dev/peps/pep-3333/&quot;&gt;WSGI protocol&lt;/a&gt;.</source>
          <target state="translated">WSGIアプリケーションは、明確に定義されたシグネチャで呼び出し可能なだけなので、&lt;a href=&quot;http://legacy.python.org/dev/peps/pep-3333/&quot;&gt;WSGIプロトコル&lt;/a&gt;を理解する任意のWebサーバーでアプリケーションをホストできます。</target>
        </trans-unit>
        <trans-unit id="2a84bb578502a9d8d547b46b8a25260646a93cd4" translate="yes" xml:space="preserve">
          <source>A WSGI application to target when simulating requests (default: &lt;code&gt;falcon.API()&lt;/code&gt;). When testing your application, you will need to set this to your own instance of &lt;code&gt;falcon.API&lt;/code&gt;. For example:</source>
          <target state="translated">リクエストをシミュレートするときにターゲットとするWSGIアプリケーション（デフォルト： &lt;code&gt;falcon.API()&lt;/code&gt; ）。アプリケーションをテストするときは、これを &lt;code&gt;falcon.API&lt;/code&gt; の独自のインスタンスに設定する必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="01e54ec15e63e5dfac68ef3378e5da0ed3600aff" translate="yes" xml:space="preserve">
          <source>A case-insensitive dictionary containing all the headers in the response, except for cookies, which may be accessed via the &lt;code&gt;cookies&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;cookies&lt;/code&gt; 属性を介してアクセスできるCookieを除き、応答のすべてのヘッダーを含む大文字と小文字を区別しない辞書。</target>
        </trans-unit>
        <trans-unit id="fd6bd4457f6f7cd1de6f874b7e6297589c9b050d" translate="yes" xml:space="preserve">
          <source>A context manager to temporarily redirect stdout or stderr</source>
          <target state="translated">標準出力や標準エラーを一時的にリダイレクトするコンテキストマネージャ</target>
        </trans-unit>
        <trans-unit id="ebe6618d5ef950b1058812abd40abdde0df38d1c" translate="yes" xml:space="preserve">
          <source>A custom error serializer (see &lt;a href=&quot;api#falcon.API.set_error_serializer&quot;&gt;&lt;code&gt;set_error_serializer()&lt;/code&gt;&lt;/a&gt;) may choose to set a response body regardless of the value of this property.</source>
          <target state="translated">カスタムエラー&lt;a href=&quot;api#falcon.API.set_error_serializer&quot;&gt; &lt;code&gt;set_error_serializer()&lt;/code&gt; &lt;/a&gt;参照）は、このプロパティの値に関係なく、応答本文を設定することを選択できます。</target>
        </trans-unit>
        <trans-unit id="0ff53c6104c52469a0071267a59565543379cdbd" translate="yes" xml:space="preserve">
          <source>A custom router is any class that implements the following interface:</source>
          <target state="translated">カスタムルータとは、以下のインターフェイスを実装した任意のクラスのことです。</target>
        </trans-unit>
        <trans-unit id="7dc5bedf0245a338de7206a576b3e2e21aec3c73" translate="yes" xml:space="preserve">
          <source>A custom routing engine may be specified when instantiating &lt;a href=&quot;api#falcon.API&quot;&gt;&lt;code&gt;falcon.API()&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;api#falcon.API&quot;&gt; &lt;code&gt;falcon.API()&lt;/code&gt; を&lt;/a&gt;インスタンス化するときに、カスタムルーティングエンジンを指定できます。例えば：</target>
        </trans-unit>
        <trans-unit id="214be40aafb89c59151f7d87c9264bd0360cbc5e" translate="yes" xml:space="preserve">
          <source>A decoded URL. If the URL contains escaped non-ASCII characters, UTF-8 is assumed per RFC 3986.</source>
          <target state="translated">デコードされたURL。URLにエスケープされた非ASCII文字が含まれている場合、RFC 3986に従ってUTF-8が想定されます。</target>
        </trans-unit>
        <trans-unit id="742eebc145eaa51a6431f91f719874a2cbb0c3c2" translate="yes" xml:space="preserve">
          <source>A decoded URL. Will be of type &lt;code&gt;unicode&lt;/code&gt; on Python 2 IFF the URL contained escaped non-ASCII characters, in which case UTF-8 is assumed per RFC 3986.</source>
          <target state="translated">デコードされたURL。Python 2 IFFでは &lt;code&gt;unicode&lt;/code&gt; タイプになります。URLにエスケープされた非ASCII文字が含まれます。この場合、RFC 3986に従ってUTF-8が想定されます。</target>
        </trans-unit>
        <trans-unit id="70b80659a9386821056f6ada97663bbfd4480fe4" translate="yes" xml:space="preserve">
          <source>A deserialized object.</source>
          <target state="translated">デシリアライズされたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="6aaa1e837fd4c388134f9ee9743cbe881c4409db" translate="yes" xml:space="preserve">
          <source>A dict of name/value cookie pairs. The returned object should be treated as read-only to avoid unintended side-effects. If a cookie appears more than once in the request, only the first value encountered will be made available here.</source>
          <target state="translated">名前と値のクッキーのペアのディクショナリ。返されるオブジェクトは意図しない副作用を避けるために読み取り専用として扱われるべきです。クッキーがリクエストの中で複数回現れた場合、最初に遭遇した値だけがここで利用可能になります。</target>
        </trans-unit>
        <trans-unit id="093952f65b1eb68a5300d274aec23ae44aa82585" translate="yes" xml:space="preserve">
          <source>A dict-like object that allows you to configure the media-types that you would like to handle. By default, a handler is provided for the &lt;code&gt;application/json&lt;/code&gt; media type.</source>
          <target state="translated">処理するメディアタイプを構成できるようにするdictのようなオブジェクト。デフォルトでは、 &lt;code&gt;application/json&lt;/code&gt; メディアタイプのハンドラーが提供されます。</target>
        </trans-unit>
        <trans-unit id="abe75a164023c36ad606dd4fbe61be4ae96331e7" translate="yes" xml:space="preserve">
          <source>A dictionary like object that manages internet media type handlers.</source>
          <target state="translated">インターネットメディアのタイプハンドラを管理する辞書のようなオブジェクト。</target>
        </trans-unit>
        <trans-unit id="6c4c7a082c70949af956c73a371d4aee128cd1b5" translate="yes" xml:space="preserve">
          <source>A dictionary of (&lt;em&gt;name&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt;) pairs, one per query parameter. Note that &lt;em&gt;value&lt;/em&gt; may be a single &lt;code&gt;str&lt;/code&gt;, or a &lt;code&gt;list&lt;/code&gt; of &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">（&lt;em&gt;name&lt;/em&gt;、&lt;em&gt;value&lt;/em&gt;）ペアのディクショナリ。クエリパラメータごとに1つ。&lt;em&gt;value&lt;/em&gt;は単一の &lt;code&gt;str&lt;/code&gt; または &lt;code&gt;str&lt;/code&gt; の &lt;code&gt;list&lt;/code&gt; である場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="bb70d853f3d2eeb2ac7d7046ff860dd6245a13e0" translate="yes" xml:space="preserve">
          <source>A dictionary of &lt;a href=&quot;#falcon.testing.Cookie&quot;&gt;&lt;code&gt;falcon.testing.Cookie&lt;/code&gt;&lt;/a&gt; values parsed from the response, by name.</source>
          <target state="translated">応答から名前で解析された&lt;a href=&quot;#falcon.testing.Cookie&quot;&gt; &lt;code&gt;falcon.testing.Cookie&lt;/code&gt; &lt;/a&gt;値の辞書。</target>
        </trans-unit>
        <trans-unit id="b9f0d074e7bc459642e07b852dd4e8b7258d4a56" translate="yes" xml:space="preserve">
          <source>A dictionary of header names and values to set, or a &lt;code&gt;list&lt;/code&gt; of (&lt;em&gt;name&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt;) tuples. Both &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; must be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt; and contain only US-ASCII characters. Under Python 2.x, the &lt;code&gt;unicode&lt;/code&gt; type is also accepted, although such strings are also limited to US-ASCII.</source>
          <target state="translated">設定するヘッダーの名前と値の辞書、または（&lt;em&gt;name&lt;/em&gt;、&lt;em&gt;value&lt;/em&gt;）タプルの &lt;code&gt;list&lt;/code&gt; 。&lt;em&gt;名前&lt;/em&gt;と&lt;em&gt;値&lt;/em&gt;はどちらも &lt;code&gt;str&lt;/code&gt; または &lt;code&gt;StringType&lt;/code&gt; タイプで、US-ASCII文字のみを含む必要があります。Python 2.xでは、 &lt;code&gt;unicode&lt;/code&gt; タイプも受け入れられますが、そのような文字列もUS-ASCIIに制限されています。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3cefcaee88015b8738e6852ca9481b441675f9c" translate="yes" xml:space="preserve">
          <source>A dictionary populated with the error&amp;rsquo;s title, description, etc.</source>
          <target state="translated">エラーのタイトル、説明などが入力された辞書</target>
        </trans-unit>
        <trans-unit id="3811369ceadf4f626aad44d8e04ec968ab5e6cdc" translate="yes" xml:space="preserve">
          <source>A field expression consists of a bracketed field name. For example, given the following template:</source>
          <target state="translated">フィールド式は、括弧付きのフィールド名で構成されます。例えば、以下のテンプレートが与えられているとします。</target>
        </trans-unit>
        <trans-unit id="fb2bf91aecfb9022a5d83c0aea2341bc49194996" translate="yes" xml:space="preserve">
          <source>A function of the form &lt;code&gt;func(req, resp, resource, params)&lt;/code&gt;, where &lt;code&gt;resource&lt;/code&gt; is a reference to the resource class instance associated with the request, and &lt;code&gt;params&lt;/code&gt; is a dict of URI Template field names, if any, that will be passed into the resource responder as kwargs.</source>
          <target state="translated">&lt;code&gt;func(req, resp, resource, params)&lt;/code&gt; の形式の関数。ここで、 &lt;code&gt;resource&lt;/code&gt; はリクエストに関連付けられたリソースクラスインスタンスへの参照であり、 &lt;code&gt;params&lt;/code&gt; は、渡されるURIテンプレートフィールド名（あ​​る場合）の辞書ですkwargsとしてのリソースレスポンダー。</target>
        </trans-unit>
        <trans-unit id="64cc23cdea16a11883d68d5317a00c2765b7e567" translate="yes" xml:space="preserve">
          <source>A function or callable object taking the form &lt;code&gt;func(ex, req, resp, params)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;func(ex, req, resp, params)&lt;/code&gt; という形式の関数または呼び出し可能オブジェクト。</target>
        </trans-unit>
        <trans-unit id="593d97d6e38f58c57da31e839644b507bc06c6ac" translate="yes" xml:space="preserve">
          <source>A function or callable object taking the form &lt;code&gt;func(req, resp, ex, params)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;func(req, resp, ex, params)&lt;/code&gt; の形式をとる関数または呼び出し可能オブジェクト。</target>
        </trans-unit>
        <trans-unit id="ef822f5d5dd36e263f3d01b3fb5f46416aaa536f" translate="yes" xml:space="preserve">
          <source>A handler can raise an instance of &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt;&lt;code&gt;HTTPStatus&lt;/code&gt;&lt;/a&gt; to communicate information about the issue to the client. Alternatively, a handler may modify &lt;code&gt;resp&lt;/code&gt; directly.</source>
          <target state="translated">ハンドラーは、&lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt; &lt;code&gt;HTTPStatus&lt;/code&gt; の&lt;/a&gt;インスタンスを発生させて、問題に関する情報をクライアントに伝えることができます。あるいは、ハンドラーが &lt;code&gt;resp&lt;/code&gt; を直接変更する場合もあります。</target>
        </trans-unit>
        <trans-unit id="34bd0421ebe52f2d0f4727b20fe33f315779b042" translate="yes" xml:space="preserve">
          <source>A header is missing from the request.</source>
          <target state="translated">リクエストにヘッダーがありません。</target>
        </trans-unit>
        <trans-unit id="04181ac435e54f5f8f9b384b84902ef55be69fdd" translate="yes" xml:space="preserve">
          <source>A mapping of HTTP methods to explicitly defined resource responders.</source>
          <target state="translated">明示的に定義されたリソースレスポンダへの HTTP メソッドのマッピング。</target>
        </trans-unit>
        <trans-unit id="a83a802ab426efe79c463b1cd90a6d0e3fe4d8fc" translate="yes" xml:space="preserve">
          <source>A mapping of HTTP methods to responders.</source>
          <target state="translated">HTTP メソッドとレスポンダのマッピング。</target>
        </trans-unit>
        <trans-unit id="4f268684bc05dd9dd953c528a4411d863e182605" translate="yes" xml:space="preserve">
          <source>A mapping of dot-prefixed file extensions to Internet media types (RFC 2046). Defaults to &lt;code&gt;mimetypes.types_map&lt;/code&gt; after calling &lt;code&gt;mimetypes.init()&lt;/code&gt;.</source>
          <target state="translated">ドットプレフィックス付きファイル拡張子のインターネットメディアタイプへのマッピング（RFC 2046）。 &lt;code&gt;mimetypes.init()&lt;/code&gt; を呼び出した後のデフォルトは &lt;code&gt;mimetypes.types_map&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e332cccd28f9d33eb4afbb0ba6f5e96e9c76b914" translate="yes" xml:space="preserve">
          <source>A number of Falcon add-ons, templates, and complementary packages are available for use in your projects. We&amp;rsquo;ve listed several of these on the &lt;a href=&quot;https://github.com/falconry/falcon/wiki&quot;&gt;Falcon wiki&lt;/a&gt; as a starting point, but you may also wish to search PyPI for additional resources.</source>
          <target state="translated">多くのFalconアドオン、テンプレート、および補足パッケージがプロジェクトで使用できます。これらのいくつかを&lt;a href=&quot;https://github.com/falconry/falcon/wiki&quot;&gt;Falcon wikiに&lt;/a&gt;開始点としてリストしましたが、追加のリソースについてPyPIを検索することもできます。</target>
        </trans-unit>
        <trans-unit id="2c5e2b0cc228fe7bdd151a81d4f136196f397183" translate="yes" xml:space="preserve">
          <source>A parameter in the request is invalid. This error may refer to a parameter in a query string, form, or document that was submitted with the request.</source>
          <target state="translated">リクエストのパラメータが無効です。このエラーは、リクエストと一緒に送信されたクエリ文字列、フォーム、またはドキュメントのパラメータを参照している可能性があります。</target>
        </trans-unit>
        <trans-unit id="2b57a680a5f807b00333509746ff09287451eccf" translate="yes" xml:space="preserve">
          <source>A parameter is missing from the request. This error may refer to a parameter in a query string, form, or document that was submitted with the request.</source>
          <target state="translated">リクエストにパラメータがありません。このエラーは、リクエストと一緒に送信されたクエリ文字列、フォーム、またはドキュメントのパラメータを参照している可能性があります。</target>
        </trans-unit>
        <trans-unit id="2e5200e1596b468706cf774dae342629f076bc78" translate="yes" xml:space="preserve">
          <source>A parsed (&lt;em&gt;host&lt;/em&gt;, &lt;em&gt;port&lt;/em&gt;) tuple from the given host string, with the port converted to an &lt;code&gt;int&lt;/code&gt;. If the host string does not specify a port, &lt;code&gt;default_port&lt;/code&gt; is used instead.</source>
          <target state="translated">指定されたホスト文字列から解析された（&lt;em&gt;host&lt;/em&gt;、&lt;em&gt;port&lt;/em&gt;）タプル。ポートは &lt;code&gt;int&lt;/code&gt; に変換されます。ホスト文字列でポートが指定されていない場合は、代わりに &lt;code&gt;default_port&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="ee604dd26bffc2106fcd079b6b015d61867a7bfb" translate="yes" xml:space="preserve">
          <source>A proposal has been made to add a new routing feature that will afford mapping related routes to a single resource class, if so desired. To learn more, see &lt;a href=&quot;https://github.com/falconry/falcon/issues/584&quot;&gt;#584 on GitHub&lt;/a&gt;.</source>
          <target state="translated">必要に応じて、関連するルートを単一のリソースクラスにマッピングできる新しいルーティング機能を追加する提案が行われました。詳細については&lt;a href=&quot;https://github.com/falconry/falcon/issues/584&quot;&gt;、GitHubの＃584を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="33da59ad78b2058240b6554e89a0605d7fa63b4e" translate="yes" xml:space="preserve">
          <source>A regex string, typically starting with &amp;lsquo;/&amp;rsquo;, which will trigger the sink if it matches the path portion of the request&amp;rsquo;s URI. Both strings and precompiled regex objects may be specified. Characters are matched starting at the beginning of the URI path.</source>
          <target state="translated">通常は「/」で始まる正規表現文字列。リクエストのURIのパス部分と一致する場合にシンクをトリガーします。文字列とプリコンパイルされた正規表現オブジェクトの両方を指定できます。文字は、URIパスの先頭から照合されます。</target>
        </trans-unit>
        <trans-unit id="413f947eca6fdc60c0f93251cad497872f52d9f8" translate="yes" xml:space="preserve">
          <source>A resource in Falcon is just a regular Python class that includes one or more methods representing the standard HTTP verbs supported by that resource. Each requested URL is mapped to a specific resource.</source>
          <target state="translated">Falconにおけるリソースは、そのリソースによってサポートされる標準的なHTTP動詞を表す1つ以上のメソッドを 含む通常のPythonクラスです。それぞれのリクエストされた URL は特定のリソースにマッピングされます。</target>
        </trans-unit>
        <trans-unit id="674fe5eef9be8e915e2ded580e75350ab802dddb" translate="yes" xml:space="preserve">
          <source>A serializable object supported by the media handlers configured via &lt;a href=&quot;api#falcon.RequestOptions&quot;&gt;&lt;code&gt;falcon.RequestOptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;api#falcon.RequestOptions&quot;&gt; &lt;code&gt;falcon.RequestOptions&lt;/code&gt; &lt;/a&gt;を介して構成されたメディアハンドラーによってサポートされるシリアル化可能なオブジェクト。</target>
        </trans-unit>
        <trans-unit id="ef3dc1d16978cdd5c4d5c8bab2b1f21eb2e30db0" translate="yes" xml:space="preserve">
          <source>A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).</source>
          <target state="translated">リクエストが禁止された理由を公開したいサーバーは、その理由を応答ペイロードに記述することができる(もしあれば)。</target>
        </trans-unit>
        <trans-unit id="ddf8b77c23e904d663539004bdc7e66b01fa1e75" translate="yes" xml:space="preserve">
          <source>A set of behavioral options related to incoming requests. (See also: &lt;a href=&quot;#falcon.RequestOptions&quot;&gt;&lt;code&gt;RequestOptions&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">着信要求に関連する一連の動作オプション。（参照：&lt;a href=&quot;#falcon.RequestOptions&quot;&gt; &lt;code&gt;RequestOptions&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="4ed5cbb3652768e276d8e4a6c06c31a5f978d1e7" translate="yes" xml:space="preserve">
          <source>A set of behavioral options related to outgoing responses. (See also: &lt;a href=&quot;#falcon.ResponseOptions&quot;&gt;&lt;code&gt;ResponseOptions&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">発信応答に関連する一連の動作オプション。（参照：&lt;a href=&quot;#falcon.ResponseOptions&quot;&gt; &lt;code&gt;ResponseOptions&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="6f0fb560520a78426aab82c394508d2346de7f5f" translate="yes" xml:space="preserve">
          <source>A templatized URI. Care must be taken to ensure the template does not mask any sink patterns, if any are registered.</source>
          <target state="translated">テンプレート化されたURI。テンプレートにシンクパターンが登録されている場合は、それがマスクされないように注意しなければなりません。</target>
        </trans-unit>
        <trans-unit id="8d86fa1b5dab0d76dbd8e24b1e166bc1ef1c2101" translate="yes" xml:space="preserve">
          <source>A tuple to use in constructing a value for the Content-Range header.</source>
          <target state="translated">Content-Rangeヘッダの値を構築する際に使用するタプル。</target>
        </trans-unit>
        <trans-unit id="3a426844a16adf2ed3b639cf387935ed1f1abea4" translate="yes" xml:space="preserve">
          <source>A universal wheel is available on PyPI for the the Falcon framework. Installing it is as simple as:</source>
          <target state="translated">Falcon フレームワーク用のユニバーサルホイールが PyPI 上で利用可能です。インストールは以下のように簡単です。</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="e202bc3f85159de1e37340e10a4c7404c8acd390" translate="yes" xml:space="preserve">
          <source>About Apache 2.0</source>
          <target state="translated">Apache 2.0 について</target>
        </trans-unit>
        <trans-unit id="17d2e05f52f32f2f78c3fb8ea572aa37c10e3a0f" translate="yes" xml:space="preserve">
          <source>Abstract Base Class for an internet media type handler</source>
          <target state="translated">インターネットメディア型ハンドラのための抽象基底クラス</target>
        </trans-unit>
        <trans-unit id="101586ad6ff3acf4a39d266fd10a4039c1cf0050" translate="yes" xml:space="preserve">
          <source>Abstract base class for URI template field converters.</source>
          <target state="translated">URIテンプレートフィールドコンバータのための抽象基底クラス。</target>
        </trans-unit>
        <trans-unit id="574b19bf8f75e9882d44eade4da3f89b7b621b37" translate="yes" xml:space="preserve">
          <source>Add a link header to the response.</source>
          <target state="translated">レスポンスにリンクヘッダを追加します。</target>
        </trans-unit>
        <trans-unit id="97c3a9fb0a9d4ec6dce52491a565cb02c1ba9a66" translate="yes" xml:space="preserve">
          <source>Add a route to a directory of static files.</source>
          <target state="translated">静的ファイルのディレクトリへのルートを追加します。</target>
        </trans-unit>
        <trans-unit id="49b5e6793ca79e68b569612e1db35e89c792f479" translate="yes" xml:space="preserve">
          <source>Additional information about error handling is available in the &lt;a href=&quot;../api/errors#errors&quot;&gt;error handling reference&lt;/a&gt;.</source>
          <target state="translated">エラー処理の詳細については、&lt;a href=&quot;../api/errors#errors&quot;&gt;エラー処理リファレンスを参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ccd68f8196f0c32164ad6b88fabe8fd76463f0a1" translate="yes" xml:space="preserve">
          <source>Adds a route between a URI path template and a resource.</source>
          <target state="translated">URIパステンプレートとリソース間のルートを追加します。</target>
        </trans-unit>
        <trans-unit id="5ece858931644b3ad369df14dbb197c18bbd895a" translate="yes" xml:space="preserve">
          <source>Adds the following attributes to the hooked responder&amp;rsquo;s resource class:</source>
          <target state="translated">フックされたレスポンダのリソースクラスに次の属性を追加します。</target>
        </trans-unit>
        <trans-unit id="39d7b40a7d8c45e7c11615b50d3726072eaa63d8" translate="yes" xml:space="preserve">
          <source>After the method returns, setting this flag will cause the framework to skip any remaining &lt;em&gt;process_request&lt;/em&gt; and &lt;em&gt;process_resource&lt;/em&gt; methods, as well as the responder method that the request would have been routed to. However, any &lt;em&gt;process_response&lt;/em&gt; middleware methods will still be called.</source>
          <target state="translated">メソッドが復帰した後、このフラグを設定すると、フレームワークは、残りのスキップします&lt;em&gt;process一&lt;/em&gt;と&lt;em&gt;process_resource&lt;/em&gt;方法だけでなく、要求がにルーティングされていたであろうことを応答方法を。ただし、&lt;em&gt;process_response&lt;/em&gt;ミドルウェアメソッドは引き続き呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d0fe4f0da3b914d34b2c2b1f4fcb1e0f7bcca9e2" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;uri&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;uri&lt;/code&gt; のエイリアス。</target>
        </trans-unit>
        <trans-unit id="3dd97e94ab0a385279351f809403266798bdd680" translate="yes" xml:space="preserve">
          <source>All Windows developers can use Waitress production-quality pure-Python WSGI server with very acceptable performance. Unfortunately Gunicorn is still not working on Windows and uWSGI need to have Cygwin on Windows installed. Waitress can be good alternative for Windows users if they want quick start using Falcon on it.</source>
          <target state="translated">すべてのWindows開発者は、Waitressの生産品質の純粋なPython WSGIサーバを使用することができます。残念ながらGunicornはWindowsでは動作しません。WindowsでFalconを使いたい場合には、Waitressは良い選択肢になるでしょう。</target>
        </trans-unit>
        <trans-unit id="585f32ae0635464b5a3e34c72ef3772232d9d8a7" translate="yes" xml:space="preserve">
          <source>All classes are available directly in the &lt;code&gt;falcon&lt;/code&gt; package namespace:</source>
          <target state="translated">すべてのクラスは、 &lt;code&gt;falcon&lt;/code&gt; パッケージの名前空間で直接利用できます。</target>
        </trans-unit>
        <trans-unit id="ebd37e65d26bb4b8d554283b3a8ae382addfbefb" translate="yes" xml:space="preserve">
          <source>All green! But since we used a mock, we&amp;rsquo;re no longer covering the actual saving of the image. Let&amp;rsquo;s add a test for that:</source>
          <target state="translated">全部緑！ただし、モックを使用したため、画像の実際の保存については取り上げません。そのためのテストを追加しましょう：</target>
        </trans-unit>
        <trans-unit id="795ce2d5c7d53e2c0a33dec0a507666bbc7cfefd" translate="yes" xml:space="preserve">
          <source>All reserved characters are lumped together into a single set of &amp;ldquo;delimiters&amp;rdquo;, and everything in that set is escaped.</source>
          <target state="translated">予約文字はすべて1つの「区切り文字」のセットにまとめられ、そのセット内のすべてがエスケープされます。</target>
        </trans-unit>
        <trans-unit id="3cd04e628be90c619e6e598c8d493e3ecb104500" translate="yes" xml:space="preserve">
          <source>Also note the use of &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt;. The &lt;code&gt;falcon&lt;/code&gt; module provides a number of constants for common media types, including &lt;code&gt;falcon.MEDIA_JSON&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_YAML&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_XML&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_HTML&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_JS&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_TEXT&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_JPEG&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_PNG&lt;/code&gt;, and &lt;code&gt;falcon.MEDIA_GIF&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt; の使用にも注意してください。 &lt;code&gt;falcon&lt;/code&gt; モジュールを含む一般的なメディアタイプの定数の数を提供 &lt;code&gt;falcon.MEDIA_JSON&lt;/code&gt; 、 &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt; 、 &lt;code&gt;falcon.MEDIA_YAML&lt;/code&gt; 、 &lt;code&gt;falcon.MEDIA_XML&lt;/code&gt; 、 &lt;code&gt;falcon.MEDIA_HTML&lt;/code&gt; 、 &lt;code&gt;falcon.MEDIA_JS&lt;/code&gt; 、 &lt;code&gt;falcon.MEDIA_TEXT&lt;/code&gt; 、 &lt;code&gt;falcon.MEDIA_JPEG&lt;/code&gt; 、 &lt;code&gt;falcon.MEDIA_PNG&lt;/code&gt; 、および &lt;code&gt;falcon.MEDIA_GIF&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3edde059aabdc61613a6b4424788af27bb6a4fe6" translate="yes" xml:space="preserve">
          <source>Also, don&amp;rsquo;t be shy about pulling up Falcon&amp;rsquo;s source code on GitHub or in your favorite text editor. The team has tried to make the code as straightforward and readable as possible; where other documentation may fall short, the code basically can&amp;rsquo;t be wrong.</source>
          <target state="translated">また、GitHubまたはお気に入りのテキストエディターでFalconのソースコードをプルアップするのをためらわないでください。チームは、コードをできるだけ単純で読みやすいものにすることを試みました。他のドキュメントでは不十分な場合でも、コードは基本的には間違いありません。</target>
        </trans-unit>
        <trans-unit id="839a64e723e51c290bad3adc5934ad8f4c24e24f" translate="yes" xml:space="preserve">
          <source>Also, note that if the template contains a trailing slash character, it will be stripped in order to normalize the routing logic.</source>
          <target state="translated">また、テンプレートに末尾のスラッシュ文字が含まれている場合は、ルーティングロジックを正規化するためにそれが取り除かれることに注意してください。</target>
        </trans-unit>
        <trans-unit id="de4f9bab2893281b020fe20c6bd63dd9deb5b28a" translate="yes" xml:space="preserve">
          <source>Also, note the &lt;code&gt;name&lt;/code&gt; parameter for the &lt;code&gt;on_get()&lt;/code&gt; responder. Any URI parameters that you specify in your routes will be turned into corresponding kwargs and passed into the target responder as such. We&amp;rsquo;ll see how to specify URI parameters in a moment.</source>
          <target state="translated">また、 &lt;code&gt;on_get()&lt;/code&gt; レスポンダーの &lt;code&gt;name&lt;/code&gt; パラメーターにも注意してください。ルートで指定したURIパラメーターは、対応するkwargに変換され、ターゲットレスポンダーに渡されます。URIパラメータを指定する方法をすぐに説明します。</target>
        </trans-unit>
        <trans-unit id="e283fa86aa627d8e1374eef98e11355c313481c8" translate="yes" xml:space="preserve">
          <source>Alternatively, POSTed form parameters may be read directly from &lt;a href=&quot;../api/request_and_response#falcon.Request.stream&quot;&gt;&lt;code&gt;stream&lt;/code&gt;&lt;/a&gt; and parsed via &lt;a href=&quot;../api/util#falcon.uri.parse_query_string&quot;&gt;&lt;code&gt;falcon.uri.parse_query_string()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.6/library/urllib.parse.html#urllib.parse.parse_qs&quot;&gt;urllib.parse.parse_qs()&lt;/a&gt;.</source>
          <target state="translated">または、POSTされたフォームパラメータを&lt;a href=&quot;../api/request_and_response#falcon.Request.stream&quot;&gt; &lt;code&gt;stream&lt;/code&gt; &lt;/a&gt;から直接読み取り、&lt;a href=&quot;../api/util#falcon.uri.parse_query_string&quot;&gt; &lt;code&gt;falcon.uri.parse_query_string()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.6/library/urllib.parse.html#urllib.parse.parse_qs&quot;&gt;urllib.parse.parse_qs（）を&lt;/a&gt;介して解析することもできます。</target>
        </trans-unit>
        <trans-unit id="646c6e441110fddb0e5cf696a28caf6ba7f38a81" translate="yes" xml:space="preserve">
          <source>Alternatively, a single resource class could implement suffixed responders in order to handle all three routes:</source>
          <target state="translated">あるいは、3つのルートすべてを処理するために、単一のリソースクラスでサフィックスレスポンダを実装することもできます。</target>
        </trans-unit>
        <trans-unit id="254d4285d6ae6337f42ad1f6b41b3b15a5931e0e" translate="yes" xml:space="preserve">
          <source>Alternatively, if you would like to add an additional handler such as MessagePack, this can be easily done in the following manner:</source>
          <target state="translated">あるいは、MessagePack のようなハンドラを追加したい場合は、以下の方法で簡単に行うことができます。</target>
        </trans-unit>
        <trans-unit id="f08bc8a32f920a5894d95cc4823901e62cf06252" translate="yes" xml:space="preserve">
          <source>Alternatively, when passing the stream directly to a consumer, it may be necessary to branch off the value of the Content-Length header:</source>
          <target state="translated">あるいは、ストリームを直接コンシューマに渡す場合、Content-Lengthヘッダの値を分岐させる必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="9a1b6d084f1cc16ba6a65539b9b37ebf089dce52" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use suffixed responders to map both routes to the same resource class:</source>
          <target state="translated">あるいは、両方のルートを同じリソースクラスにマッピングするために、サフィックスレスポンダを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="f7150265c8e05f55e9638f34760affa6e25874ea" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the standard Python &lt;code&gt;help()&lt;/code&gt; function:</source>
          <target state="translated">または、標準のPython &lt;code&gt;help()&lt;/code&gt; 関数を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="2a9cbfd2b49b4f76ab005cf630cb24407458e46b" translate="yes" xml:space="preserve">
          <source>Although the &lt;code&gt;stream&lt;/code&gt; and &lt;code&gt;content_length&lt;/code&gt; properties may be set directly, using this method ensures &lt;code&gt;content_length&lt;/code&gt; is not accidentally neglected when the length of the stream is known in advance. Using this method is also slightly more performant as compared to setting the properties individually.</source>
          <target state="translated">が &lt;code&gt;stream&lt;/code&gt; と &lt;code&gt;content_length&lt;/code&gt; プロパティは、この方法性を保証て直接設定することができる &lt;code&gt;content_length&lt;/code&gt; ストリームの長さが予め分かっている場合に誤って無視されていないが。この方法を使用すると、プロパティを個別に設定する場合と比較して、パフォーマンスがわずかに向上します。</target>
        </trans-unit>
        <trans-unit id="58d7a3bd071ac41d516880592d3c395f4990733e" translate="yes" xml:space="preserve">
          <source>Although the &lt;code&gt;stream&lt;/code&gt; and &lt;code&gt;stream_len&lt;/code&gt; properties may be set directly, using this method ensures &lt;code&gt;stream_len&lt;/code&gt; is not accidentally neglected when the length of the stream is known in advance.</source>
          <target state="translated">が &lt;code&gt;stream&lt;/code&gt; と &lt;code&gt;stream_len&lt;/code&gt; プロパティを直接設定することができる、この方法の使用性を保証 &lt;code&gt;stream_len&lt;/code&gt; するストリームの長さが予め分かっている場合に誤って無視されていません。</target>
        </trans-unit>
        <trans-unit id="70d39774e3cdbf8aff904139d9be46b638357697" translate="yes" xml:space="preserve">
          <source>Although uWSGI may serve HTTP requests directly, it can be helpful to use a reverse proxy, such as NGINX, to offload TLS negotiation, static file serving, etc.</source>
          <target state="translated">uWSGI は HTTP リクエストを直接処理することができますが、NGINX のようなリバースプロキシを使用して TLS ネゴシエーションや静的ファイルの処理などをオフロードすると便利です。</target>
        </trans-unit>
        <trans-unit id="562b3ba4a3ff9fc895846bd1fab7b8a268b9b12f" translate="yes" xml:space="preserve">
          <source>An RFC 1123 date string, e.g.: &amp;ldquo;Tue, 15 Nov 1994 12:45:26 GMT&amp;rdquo;.</source>
          <target state="translated">RFC 1123の日付文字列。例：「Tue、15 Nov 1994 12:45:26 GMT」。</target>
        </trans-unit>
        <trans-unit id="edcf2f1cadde618a75afae7a099720bd263ab241" translate="yes" xml:space="preserve">
          <source>An XML document for the error.</source>
          <target state="translated">エラーが発生した場合のXMLドキュメント。</target>
        </trans-unit>
        <trans-unit id="622d9468e6182a10e3e174b6f06261075d99f084" translate="yes" xml:space="preserve">
          <source>An escaped version of &lt;code&gt;uri&lt;/code&gt;, where all disallowed characters have been percent-encoded.</source>
          <target state="translated">&lt;code&gt;uri&lt;/code&gt; のエスケープバージョン。許可されていないすべての文字がパーセントエンコードされています。</target>
        </trans-unit>
        <trans-unit id="a511af9bee4279eb8668da0a0b8bbe927e1ce74f" translate="yes" xml:space="preserve">
          <source>An href that the client can provide to the user for getting help.</source>
          <target state="translated">クライアントがユーザーにヘルプを取得するために提供することができる href。</target>
        </trans-unit>
        <trans-unit id="05f145346ad89b296f557416d0e249c6ee7186e8" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;~.ETag&lt;/code&gt; representing the parsed entity-tag.</source>
          <target state="translated">解析されたエンティティタグを表す &lt;code&gt;~.ETag&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="148f54ead1bb160f92a682a454ce78d3e4271b24" translate="yes" xml:space="preserve">
          <source>An instance of this class is exposed via &lt;a href=&quot;#falcon.API.req_options&quot;&gt;&lt;code&gt;API.req_options&lt;/code&gt;&lt;/a&gt; for configuring certain &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; behaviors.</source>
          <target state="translated">このクラスのインスタンスは、特定の&lt;a href=&quot;request_and_response#falcon.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;動作を構成するための&lt;a href=&quot;#falcon.API.req_options&quot;&gt; &lt;code&gt;API.req_options&lt;/code&gt; &lt;/a&gt;を介して公開されます。</target>
        </trans-unit>
        <trans-unit id="160ac067de61c625b3c333295f802a346182f4db" translate="yes" xml:space="preserve">
          <source>An instance of this class is exposed via &lt;a href=&quot;#falcon.API.resp_options&quot;&gt;&lt;code&gt;API.resp_options&lt;/code&gt;&lt;/a&gt; for configuring certain &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; behaviors.</source>
          <target state="translated">このクラスのインスタンスは、特定の&lt;a href=&quot;request_and_response#falcon.Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;動作を構成するための&lt;a href=&quot;#falcon.API.resp_options&quot;&gt; &lt;code&gt;API.resp_options&lt;/code&gt; &lt;/a&gt;を介して公開されます。</target>
        </trans-unit>
        <trans-unit id="e215cbdcdb3cf4e73a7476cf01f9abbef00cde02" translate="yes" xml:space="preserve">
          <source>An instance of this class is exposed via &lt;a href=&quot;#falcon.API.router_options&quot;&gt;&lt;code&gt;API.router_options&lt;/code&gt;&lt;/a&gt; for configuring certain &lt;a href=&quot;routing#falcon.routing.CompiledRouter&quot;&gt;&lt;code&gt;CompiledRouter&lt;/code&gt;&lt;/a&gt; behaviors.</source>
          <target state="translated">このクラスのインスタンスは、特定の&lt;a href=&quot;routing#falcon.routing.CompiledRouter&quot;&gt; &lt;code&gt;CompiledRouter&lt;/code&gt; &lt;/a&gt;動作を構成するために&lt;a href=&quot;#falcon.API.router_options&quot;&gt; &lt;code&gt;API.router_options&lt;/code&gt; &lt;/a&gt;を介して公開されます。</target>
        </trans-unit>
        <trans-unit id="d6f8258298727cd1486d036116e6d540c71b36ea" translate="yes" xml:space="preserve">
          <source>An instance of this class is exposed via &lt;a href=&quot;#falcon.API.router_options&quot;&gt;&lt;code&gt;API.router_options&lt;/code&gt;&lt;/a&gt; for configuring certain &lt;code&gt;CompiledRouter&lt;/code&gt; behaviors.</source>
          <target state="translated">このクラスのインスタンスは、特定の &lt;code&gt;CompiledRouter&lt;/code&gt; 動作を構成するための&lt;a href=&quot;#falcon.API.router_options&quot;&gt; &lt;code&gt;API.router_options&lt;/code&gt; &lt;/a&gt;を介して公開されます。</target>
        </trans-unit>
        <trans-unit id="98b25f7dac3e89ff8507f753b451d3596d290576" translate="yes" xml:space="preserve">
          <source>An internal application code that a user can reference when requesting support for the error.</source>
          <target state="translated">エラーのサポートを要求する際に、ユーザーが参照できる内部アプリケーションコード。</target>
        </trans-unit>
        <trans-unit id="273983c234b9ff0e88c35ff607b02528a9f99306" translate="yes" xml:space="preserve">
          <source>An iterator yielding the same bytestrings as &lt;code&gt;iterable&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;iterable&lt;/code&gt; と同じバイト文字列を生成するイテレータ</target>
        </trans-unit>
        <trans-unit id="e6e3f4b141bfbbd23bebfa8c8edf42f938c88503" translate="yes" xml:space="preserve">
          <source>An opaque quoted string, possibly prefixed by a weakness indicator &lt;code&gt;W/&lt;/code&gt;.</source>
          <target state="translated">不透明な引用符で囲まれた文字列。接頭辞として弱点インジケータ &lt;code&gt;W/&lt;/code&gt; が付いている可能性があります。</target>
        </trans-unit>
        <trans-unit id="5112cce594a01029d04db41c2dc483ed8840f6b3" translate="yes" xml:space="preserve">
          <source>An origin server that wishes to &amp;ldquo;hide&amp;rdquo; the current existence of a forbidden target resource MAY instead respond with a status code of 404 Not Found.</source>
          <target state="translated">禁止されているターゲットリソースの現在の存在を「非表示」にするオリジンサーバーは、代わりにステータスコード404 Not Foundで応答する場合があります。</target>
        </trans-unit>
        <trans-unit id="aa2f8dd84bbc37a942b3e3ce4b0ad4a76a69cd62" translate="yes" xml:space="preserve">
          <source>And then attach the hook to the &lt;code&gt;on_post()&lt;/code&gt; responder:</source>
          <target state="translated">次に、フックを &lt;code&gt;on_post()&lt;/code&gt; レスポンダに接続します。</target>
        </trans-unit>
        <trans-unit id="0fa5eca2d5b5ec94d7bc56b979c99b5de12207d6" translate="yes" xml:space="preserve">
          <source>Any additional args and kwargs not defined above are passed through to the underlying router&amp;rsquo;s &lt;code&gt;add_route()&lt;/code&gt; method. The default router does not expect any additional arguments, but custom routers may take advantage of this feature to receive additional options when setting up routes.</source>
          <target state="translated">上記で定義されていない追加のargsとkwargsは、基盤となるルーターの &lt;code&gt;add_route()&lt;/code&gt; メソッドに渡されます。デフォルトのルーターは追加の引数を想定していませんが、カスタムルーターはこの機能を利用して、ルートを設定するときに追加のオプションを受け取ることがあります。</target>
        </trans-unit>
        <trans-unit id="4dcb5e66486ba4cd6598185a50b5f1c8a55b9cfa" translate="yes" xml:space="preserve">
          <source>Any additional keyword arguments not defined above are passed through to the underlying router&amp;rsquo;s &lt;code&gt;add_route()&lt;/code&gt; method. The default router ignores any additional keyword arguments, but custom routers may take advantage of this feature to receive additional options when setting up routes. Custom routers MUST accept such arguments using the variadic pattern (&lt;code&gt;**kwargs&lt;/code&gt;), and ignore any keyword arguments that they don&amp;rsquo;t support.</source>
          <target state="translated">上記で定義されていない追加のキーワード引数は、基になるルーターの &lt;code&gt;add_route()&lt;/code&gt; メソッドに渡されます。デフォルトルーターは追加のキーワード引数を無視しますが、カスタムルーターはこの機能を利用して、ルートを設定するときに追加のオプションを受け取ることができます。カスタムルーターは、可変個引数パターン（ &lt;code&gt;**kwargs&lt;/code&gt; ）を使用してそのような引数を受け入れ、サポートされていないキーワード引数を無視する必要があります。</target>
        </trans-unit>
        <trans-unit id="1a151e80ad828286f6d4898ad3792dc8029ddabb" translate="yes" xml:space="preserve">
          <source>As illustrated above, by default, all &lt;em&gt;process_response&lt;/em&gt; methods will be executed, even when a &lt;em&gt;process_request&lt;/em&gt;, &lt;em&gt;process_resource&lt;/em&gt;, or resource responder raises an error. This behavior is controlled by the &lt;a href=&quot;api#api&quot;&gt;API class&amp;rsquo;s&lt;/a&gt;&lt;code&gt;independent_middleware&lt;/code&gt; keyword argument.</source>
          <target state="translated">上に示したように、デフォルトでは、&lt;em&gt;process_request&lt;/em&gt;、&lt;em&gt;process_resource&lt;/em&gt;、またはリソースレスポンダーがエラーを発生させた場合でも、すべての&lt;em&gt;process_response&lt;/em&gt;メソッドが実行されます。この動作は、&lt;a href=&quot;api#api&quot;&gt;APIクラスの&lt;/a&gt; &lt;code&gt;independent_middleware&lt;/code&gt; キーワード引数によって制御されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ba092521d70df324df0ee65e05f28f314e9d1071" translate="yes" xml:space="preserve">
          <source>As mentioned previously, Falcon&amp;rsquo;s docstrings are quite extensive, and so you can learn a lot just by poking around Falcon&amp;rsquo;s modules from a Python REPL, such as &lt;a href=&quot;http://ipython.org/&quot;&gt;IPython&lt;/a&gt; or &lt;a href=&quot;http://bpython-interpreter.org/&quot;&gt;bpython&lt;/a&gt;.</source>
          <target state="translated">前に述べたように、Falconのdocstringは非常に広範囲にわたるため、&lt;a href=&quot;http://ipython.org/&quot;&gt;IPython&lt;/a&gt;や&lt;a href=&quot;http://bpython-interpreter.org/&quot;&gt;bpython&lt;/a&gt;などのPython REPLからFalconのモジュールを調べるだけで、多くを学ぶことができます。</target>
        </trans-unit>
        <trans-unit id="de9cf7650efbd59525741b513fbdd6e81d6a3d8d" translate="yes" xml:space="preserve">
          <source>As you can see in the example above, you can use &lt;code&gt;req&lt;/code&gt; to get information about the incoming request. However, you can also use &lt;code&gt;resp&lt;/code&gt; to play with the HTTP response as needed, and you can even use hooks to inject extra kwargs:</source>
          <target state="translated">上記の例でわかるように、 &lt;code&gt;req&lt;/code&gt; を使用して着信要求に関する情報を取得できます。ただし、必要に応じて &lt;code&gt;resp&lt;/code&gt; を使用してHTTP応答を再生することもできます。フックを使用して追加のkwargを挿入することもできます。</target>
        </trans-unit>
        <trans-unit id="aa654a45029386b9c44828c13bc4a9a37e2710a0" translate="yes" xml:space="preserve">
          <source>As you can see, &lt;code&gt;Resource&lt;/code&gt; is just a regular class. You can name the class anything you like. Falcon uses duck-typing, so you don&amp;rsquo;t need to inherit from any sort of special base class.</source>
          <target state="translated">ご覧のとおり、 &lt;code&gt;Resource&lt;/code&gt; は単なる通常のクラスです。クラスには好きな名前を付けることができます。Falconはダックタイピングを使用しているため、特別な基本クラスから継承する必要はありません。</target>
        </trans-unit>
        <trans-unit id="b39bf9a8456b9703909cdb818a703a76e4d05815" translate="yes" xml:space="preserve">
          <source>As you can see, the bulk of the setup logic has been moved to &lt;code&gt;create_app()&lt;/code&gt;, which can be used to obtain an API object either for testing or for hosting in production. &lt;code&gt;get_app()&lt;/code&gt; takes care of instantiating additional resources and configuring the application for hosting.</source>
          <target state="translated">ご覧のとおり、セットアップロジックの大部分は &lt;code&gt;create_app()&lt;/code&gt; に移動されています。これは、テスト用または本番環境でのホスティング用のAPIオブジェクトを取得するために使用できます。 &lt;code&gt;get_app()&lt;/code&gt; は、追加のリソースをインスタンス化し、ホスティング用にアプリケーションを構成します。</target>
        </trans-unit>
        <trans-unit id="90dd4bd6082eb1cfe3405ba99dbbbbe9103f348a" translate="yes" xml:space="preserve">
          <source>As you can see, the result isn&amp;rsquo;t exactly graceful. To fix this, we&amp;rsquo;ll need to add some exception handling. Modify your &lt;code&gt;Item&lt;/code&gt; class as follows:</source>
          <target state="translated">ご覧のように、結果は必ずしも優雅ではありません。これを修正するには、例外処理を追加する必要があります。次のように &lt;code&gt;Item&lt;/code&gt; クラスを変更します。</target>
        </trans-unit>
        <trans-unit id="0bb7ed6c7e45bb3ef71ae07989f79a0d7ad300d1" translate="yes" xml:space="preserve">
          <source>As you can see, this test relies heavily on mocking, making it somewhat fragile in the face of implementation changes. We&amp;rsquo;ll revisit this later. For now, run the tests again and watch to make sure they fail. A key step in the TDD workflow is verifying that your tests &lt;strong&gt;do not&lt;/strong&gt; pass before moving on to the implementation:</source>
          <target state="translated">ご覧のように、このテストはモックに大きく依存しているため、実装の変更に直面すると多少脆弱になります。これについては後でもう一度説明します。とりあえず、もう一度テストを実行して、失敗することを確認してください。TDDワークフローの重要なステップは、実装に進む前にテスト&lt;strong&gt;が&lt;/strong&gt;パス&lt;strong&gt;しない&lt;/strong&gt;ことを確認すること&lt;strong&gt;です&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="cbdb491c6d768ee6971384cddaa278e9cd0fa40d" translate="yes" xml:space="preserve">
          <source>As you can see, we generate a unique name for the image, and then write it out by reading from &lt;code&gt;req.stream&lt;/code&gt;. It&amp;rsquo;s called &lt;code&gt;stream&lt;/code&gt; instead of &lt;code&gt;body&lt;/code&gt; to emphasize the fact that you are really reading from an input stream; by default Falcon does not spool or decode request data, instead giving you direct access to the incoming binary stream provided by the WSGI server.</source>
          <target state="translated">ご覧のとおり、画像に一意の名前を生成し、 &lt;code&gt;req.stream&lt;/code&gt; から読み取って書き出します。入力ストリームから実際に読み取っているという事実を強調するために、 &lt;code&gt;body&lt;/code&gt; なく &lt;code&gt;stream&lt;/code&gt; と呼ばれます。デフォルトでは、Falconは要求データをスプールまたはデコードせず、代わりにWSGIサーバーによって提供される着信バイナリストリームに直接アクセスできます。</target>
        </trans-unit>
        <trans-unit id="c2a8b7909a8d102fbfa6cf1b97a23b314675473b" translate="yes" xml:space="preserve">
          <source>As you can see, we renamed &lt;code&gt;Resource&lt;/code&gt; to &lt;code&gt;Collection&lt;/code&gt; and added a new &lt;code&gt;Item&lt;/code&gt; class to represent a single image resource. Also, note the &lt;code&gt;name&lt;/code&gt; parameter for the &lt;code&gt;on_get()&lt;/code&gt; responder. Any URI parameters that you specify in your routes will be turned into corresponding kwargs and passed into the target responder as such. We&amp;rsquo;ll see how to specify URI parameters in a moment.</source>
          <target state="translated">ご覧のとおり、 &lt;code&gt;Resource&lt;/code&gt; の名前を &lt;code&gt;Collection&lt;/code&gt; に変更し、単一の画像リソースを表す新しい &lt;code&gt;Item&lt;/code&gt; クラスを追加しました。また、 &lt;code&gt;on_get()&lt;/code&gt; レスポンダの &lt;code&gt;name&lt;/code&gt; パラメータに注意してください。ルートで指定したURIパラメータは、対応するクワーグに変換され、ターゲットレスポンダに渡されます。URIパラメータを指定する方法については、後で説明します。</target>
        </trans-unit>
        <trans-unit id="a80e1e3d71912f144a0c6cccdb50c5659cc9cc97" translate="yes" xml:space="preserve">
          <source>As you can see, we renamed &lt;code&gt;Resource&lt;/code&gt; to &lt;code&gt;Collection&lt;/code&gt; and added a new &lt;code&gt;Item&lt;/code&gt; class to represent a single image resource. Alternatively, these two classes could be consolidated into one by using suffixed responders. (See also: &lt;a href=&quot;../api/api#falcon.API.add_route&quot;&gt;&lt;code&gt;add_route()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">ご覧のとおり、 &lt;code&gt;Resource&lt;/code&gt; の名前を &lt;code&gt;Collection&lt;/code&gt; に変更し、単一の画像リソースを表す新しい &lt;code&gt;Item&lt;/code&gt; クラスを追加しました。または、接尾辞付きのレスポンダーを使用して、これら2つのクラスを1つに統合することもできます。（参照：&lt;a href=&quot;../api/api#falcon.API.add_route&quot;&gt; &lt;code&gt;add_route()&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="533e6a63b97eb14ab8c1ed23430958d35ba08d5c" translate="yes" xml:space="preserve">
          <source>As you can see, we specified a new route, &lt;code&gt;/images/{name}&lt;/code&gt;. This causes Falcon to expect all associated responders to accept a &lt;code&gt;name&lt;/code&gt; argument.</source>
          <target state="translated">ご覧のとおり、新しいルート &lt;code&gt;/images/{name}&lt;/code&gt; を指定しました。これにより、Falconは関連するすべてのレスポンダが &lt;code&gt;name&lt;/code&gt; 引数を受け入れることを期待します。</target>
        </trans-unit>
        <trans-unit id="785fda8ad1f225251bb29c236db600dbe8256387" translate="yes" xml:space="preserve">
          <source>As you can see, we&amp;rsquo;ve redone the POST. While there are fewer mocks, the assertions have gotten more elaborate to properly check interactions at the interface boundaries.</source>
          <target state="translated">ご覧のとおり、POSTをやり直しました。モックの数は少なくなりますが、アサーションはインターフェース境界での相互作用を適切にチェックするためにより複雑になります。</target>
        </trans-unit>
        <trans-unit id="80017dff1b764f3839d29657e81a9891283c8ef6" translate="yes" xml:space="preserve">
          <source>Associate a templatized URI path with a resource.</source>
          <target state="translated">テンプレート化されたURIパスをリソースに関連付けます。</target>
        </trans-unit>
        <trans-unit id="911775ed09c2061e1df058742ddbf09428b55156" translate="yes" xml:space="preserve">
          <source>Assuming your database library manages its own connection pool, all you need to do is initialize the client and pass an instance of it into your resource classes. For example, using SQLAlchemy Core:</source>
          <target state="translated">データベースライブラリが独自の接続プールを管理していると仮定すると、必要なのはクライアントを初期化し、そのインスタンスをリソースクラスに渡すことだけです。例えば、SQLAlchemy Coreを使用しています。</target>
        </trans-unit>
        <trans-unit id="75f95b65ae7ae0283a2c92385750aec41177a408" translate="yes" xml:space="preserve">
          <source>At the risk of erring on the side of flexibility, Falcon does not provide API spec support out of the box. However, there are several community projects available in this vein. Our &lt;a href=&quot;https://github.com/falconry/falcon/wiki/Add-on-Catalog&quot;&gt;Add on Catalog&lt;/a&gt; lists a couple of these projects, but you may also wish to search &lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;PyPI&lt;/a&gt; for additional packages.</source>
          <target state="translated">柔軟性の面でエラーが発生するリスクがありますが、FalconはそのままではAPI仕様のサポートを提供していません。ただし、この流れで利用できるいくつかのコミュニティプロジェクトがあります。当社の&lt;a href=&quot;https://github.com/falconry/falcon/wiki/Add-on-Catalog&quot;&gt;カタログに追加は、&lt;/a&gt;これらのプロジェクトのいくつかをリストしていますが、検索したいこと&lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;は、PyPIを&lt;/a&gt;追加パッケージのために。</target>
        </trans-unit>
        <trans-unit id="bbcf22d0203954989589fe878672e58587eb681f" translate="yes" xml:space="preserve">
          <source>At the risk of erring on the side of flexiblity, Falcon does not provide API spec support out of the box. However, there are several community projects available in this vein. Our &lt;a href=&quot;https://github.com/falconry/falcon/wiki/Add-on-Catalog&quot;&gt;Add on Catalog&lt;/a&gt; lists a couple of these projects, but you may also wish to search &lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;PyPI&lt;/a&gt; for additional packages.</source>
          <target state="translated">Falconは、柔軟性の面で誤解を招く恐れがあるため、そのままではAPI仕様のサポートを提供していません。ただし、この流れで利用できるいくつかのコミュニティプロジェクトがあります。当社の&lt;a href=&quot;https://github.com/falconry/falcon/wiki/Add-on-Catalog&quot;&gt;カタログに追加は、&lt;/a&gt;これらのプロジェクトのいくつかをリストしていますが、検索したいこと&lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;は、PyPIを&lt;/a&gt;追加パッケージのために。</target>
        </trans-unit>
        <trans-unit id="6244158256a329579b799aee36f607d1de509519" translate="yes" xml:space="preserve">
          <source>At this point you should have a pretty good understanding of the basic parts that make up a Falcon-based API. Before we finish up, let&amp;rsquo;s just take a few minutes to clean up the code and add some error handling.</source>
          <target state="translated">この時点で、FalconベースのAPIを構成する基本的な部分をかなりよく理解しているはずです。完了する前に、コードをクリーンアップしてエラー処理を追加するのに数分かかります。</target>
        </trans-unit>
        <trans-unit id="124b897a6881631c9022703d64573acec5311168" translate="yes" xml:space="preserve">
          <source>At this point, you should have a good grip on how to apply common testing strategies to your Falcon application. For the sake of brevity we&amp;rsquo;ll omit further testing instructions from the following sections, focusing instead on showcasing more of Falcon&amp;rsquo;s features.</source>
          <target state="translated">この時点で、Falconアプリケーションに一般的なテスト戦略を適用する方法を十分に理解しているはずです。簡潔にするために、以降のセクションでは、Falconのより多くの機能を紹介することに重点を置いて、以降のテスト手順を省略します。</target>
        </trans-unit>
        <trans-unit id="6250b2d5ba185037a32428d0470aa41b51714997" translate="yes" xml:space="preserve">
          <source>Base Class</source>
          <target state="translated">ベースクラス</target>
        </trans-unit>
        <trans-unit id="bb02fe167f2d0f6413813c668b7ad831e9ef4860" translate="yes" xml:space="preserve">
          <source>Because &lt;em&gt;process_request&lt;/em&gt; executes before routing has occurred, if a component modifies &lt;code&gt;req.path&lt;/code&gt; in its &lt;em&gt;process_request&lt;/em&gt; method, the framework will use the modified value to route the request.</source>
          <target state="translated">ルーティングが発生する前に&lt;em&gt;process_requestが&lt;/em&gt;実行されるため、コンポーネントがその&lt;em&gt;process_request&lt;/em&gt;メソッドで &lt;code&gt;req.path&lt;/code&gt; を変更すると、フレームワークは変更された値を使用してリクエストをルーティングします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e64bfca49c754d4fccd63672fa8942a05e269fcd" translate="yes" xml:space="preserve">
          <source>Because field names correspond to argument names in responder methods, they must be valid Python identifiers.</source>
          <target state="translated">フィールド名はレスポンダメソッドの引数名に対応しているため、有効な Python 識別子でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3e9780a084faf8907a404487e0c5c8b79d738298" translate="yes" xml:space="preserve">
          <source>Before hook for capturing responder arguments.</source>
          <target state="translated">レスポンダの引数を取得するためのフックの前。</target>
        </trans-unit>
        <trans-unit id="e8d9975d904ad40ef75d062607b5cfdbe6dcb4f4" translate="yes" xml:space="preserve">
          <source>Before proceeding, install NGINX according to &lt;a href=&quot;https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-open-source/&quot;&gt;the instructions for your platform&lt;/a&gt;.</source>
          <target state="translated">続行する前&lt;a href=&quot;https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-open-source/&quot;&gt;に、プラットフォームの指示&lt;/a&gt;に従ってNGINXをインストールしてください。</target>
        </trans-unit>
        <trans-unit id="715e5b8868abb86c14081e9614a7be89aad4e33a" translate="yes" xml:space="preserve">
          <source>Bound method, or &lt;code&gt;None&lt;/code&gt; if the method does not exist on the object.</source>
          <target state="translated">バインドされたメソッド、またはメソッドがオブジェクトに存在しない場合は &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f2e649106f63695831382d819e79684dafbee78" translate="yes" xml:space="preserve">
          <source>Built-in Converters</source>
          <target state="translated">内蔵コンバータ</target>
        </trans-unit>
        <trans-unit id="ea5a95aec87b1d1ecf2c3e8294ac4c27d21f9f98" translate="yes" xml:space="preserve">
          <source>By contributing to this project, you agree to also license your source code under the terms of the Apache License, Version 2.0, as described above.</source>
          <target state="translated">このプロジェクトに貢献することで、あなたは上記のように、あなたのソースコードを Apache License,Version 2.0 の条件でライセンスすることに同意したことになります。</target>
        </trans-unit>
        <trans-unit id="097359d46826510e24a49784a08879fa06d38de1" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ensure_ascii&lt;/code&gt; is passed to the &lt;code&gt;json.dumps&lt;/code&gt; function. If you override the &lt;code&gt;dumps&lt;/code&gt; function, you will need to explicitly set &lt;code&gt;ensure_ascii&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt; in order to enable the serialization of Unicode characters to UTF-8. This is easily done by using &lt;code&gt;functools.partial&lt;/code&gt; to apply the desired keyword argument. In fact, you can use this same technique to customize any option supported by the &lt;code&gt;dumps&lt;/code&gt; and &lt;code&gt;loads&lt;/code&gt; functions:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;ensure_ascii&lt;/code&gt; は &lt;code&gt;json.dumps&lt;/code&gt; 関数に渡されます。 &lt;code&gt;dumps&lt;/code&gt; 関数をオーバーライドする場合、Unicode文字のUTF-8へのシリアル化を有効にするには、 &lt;code&gt;ensure_ascii&lt;/code&gt; を &lt;code&gt;False&lt;/code&gt; に明示的に設定する必要があります。これは、 &lt;code&gt;functools.partial&lt;/code&gt; を使用して目的のキーワード引数を適用することで簡単に実行できます。実際、これと同じ手法を使用して、 &lt;code&gt;dumps&lt;/code&gt; および &lt;code&gt;loads&lt;/code&gt; 関数でサポートされているオプションをカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="14f9f45582f2317100ba8588416a45470210a824" translate="yes" xml:space="preserve">
          <source>By default, Falcon does not consume request bodies. However, setting the &lt;code&gt;auto_parse_form_urlencoded&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; on an instance of &lt;code&gt;falcon.API&lt;/code&gt; will cause the framework to consume the request body when the content type is &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;, making the form parameters accessible via &lt;a href=&quot;../api/request_and_response#falcon.Request.params&quot;&gt;&lt;code&gt;params&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/request_and_response#falcon.Request.get_param&quot;&gt;&lt;code&gt;get_param()&lt;/code&gt;&lt;/a&gt;, etc.</source>
          <target state="translated">デフォルトでは、Falconはリクエスト本文を消費しません。しかし、設定 &lt;code&gt;auto_parse_form_urlencoded&lt;/code&gt; に &lt;code&gt;True&lt;/code&gt; のインスタンスに &lt;code&gt;falcon.API&lt;/code&gt; するコンテンツタイプである場合、フレームワークは、リクエストボディを消費する原因となる &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 、経由フォームパラメータがアクセス可能&lt;a href=&quot;../api/request_and_response#falcon.Request.params&quot;&gt; &lt;code&gt;params&lt;/code&gt; は&lt;/a&gt;、&lt;a href=&quot;../api/request_and_response#falcon.Request.get_param&quot;&gt; &lt;code&gt;get_param()&lt;/code&gt; &lt;/a&gt;、等</target>
        </trans-unit>
        <trans-unit id="d51e9b3bf350d54f6d708e50e0541fcadb01caa8" translate="yes" xml:space="preserve">
          <source>By default, Falcon enables the &lt;code&gt;secure&lt;/code&gt; cookie attribute. Therefore, if you are testing your app over HTTP (instead of HTTPS), the client will not send the cookie in subsequent requests.</source>
          <target state="translated">デフォルトでは、Falconは &lt;code&gt;secure&lt;/code&gt; Cookie属性を有効にします。したがって、HTTPSではなくHTTPを介してアプリをテストしている場合、クライアントは後続のリクエストでCookieを送信しません。</target>
        </trans-unit>
        <trans-unit id="cb5beec7242db6ce5492d3ae4a7d824c94001cd2" translate="yes" xml:space="preserve">
          <source>By default, Falcon normalizes incoming URI paths to simplify later processing and improve the predictability of application logic. This behavior can be disabled via the &lt;a href=&quot;../api/api#falcon.RequestOptions.strip_url_path_trailing_slash&quot;&gt;&lt;code&gt;strip_url_path_trailing_slash&lt;/code&gt;&lt;/a&gt; request option.</source>
          <target state="translated">デフォルトでは、Falconは着信URIパスを正規化して、後の処理を簡素化し、アプリケーションロジックの予測可能性を向上させます。この動作は、&lt;a href=&quot;../api/api#falcon.RequestOptions.strip_url_path_trailing_slash&quot;&gt; &lt;code&gt;strip_url_path_trailing_slash&lt;/code&gt; &lt;/a&gt;リクエストオプションで無効にできます。</target>
        </trans-unit>
        <trans-unit id="4687c53e6c2f150cdc743155aff842858b09e8b1" translate="yes" xml:space="preserve">
          <source>By default, Falcon sets the &lt;code&gt;secure&lt;/code&gt; attribute for cookies. This instructs the client to never transmit the cookie in the clear over HTTP, in order to protect any sensitive data that cookie might contain. If a cookie is set, and a subsequent request is made over HTTP (rather than HTTPS), the client will not include that cookie in the request.</source>
          <target state="translated">デフォルトでは、Falconはcookie の &lt;code&gt;secure&lt;/code&gt; 属性を設定します。これは、Cookieに含まれる可能性のある機密データを保護するために、HTTP経由でCookieをクリアテキストで送信しないようにクライアントに指示します。Cookieが設定されており、後続のリクエストが（HTTPSではなく）HTTPを介して行われる場合、クライアントはリクエストにそのCookieを含めません。</target>
        </trans-unit>
        <trans-unit id="e60d0f3477ffa69bfab8cbd3d6530b3f893ad5da" translate="yes" xml:space="preserve">
          <source>By default, the framework installs two handlers, one for &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; and one for &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt;&lt;code&gt;HTTPStatus&lt;/code&gt;&lt;/a&gt;. These can be overridden by adding a custom error handler method for the exception type in question.</source>
          <target state="translated">デフォルトでは、フレームワークは2つのハンドラーをインストールします。1つは&lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;用、もう1つはHTTPStatus用&lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt; &lt;code&gt;HTTPStatus&lt;/code&gt; &lt;/a&gt;。これらは、問題の例外タイプにカスタムエラーハンドラメソッドを追加することでオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="9626e67aa789731ed12f4a26b5d7c057e3f00a14" translate="yes" xml:space="preserve">
          <source>By default, the framework installs two handlers, one for &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; and one for &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt;&lt;code&gt;HTTPStatus&lt;/code&gt;&lt;/a&gt;. These can be overridden via &lt;a href=&quot;api#falcon.API.add_error_handler&quot;&gt;&lt;code&gt;add_error_handler()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、フレームワークは2つのハンドラーをインストールします。1つは&lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;用、もう1つはHTTPStatus用&lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt; &lt;code&gt;HTTPStatus&lt;/code&gt; &lt;/a&gt;。これらは、&lt;a href=&quot;api#falcon.API.add_error_handler&quot;&gt; &lt;code&gt;add_error_handler()&lt;/code&gt; &lt;/a&gt;を介してオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="016e5d11a5bb2adda4578237397516d9ea456971" translate="yes" xml:space="preserve">
          <source>Byte string representing response content.</source>
          <target state="translated">応答内容を表すバイト文字列。</target>
        </trans-unit>
        <trans-unit id="3348cc07058a464ebb973af5bfdb70ca7968c2db" translate="yes" xml:space="preserve">
          <source>CPython</source>
          <target state="translated">CPython</target>
        </trans-unit>
        <trans-unit id="02675302c1306c0a55178554c9b39f3bdbb2eb32" translate="yes" xml:space="preserve">
          <source>CPython 2.6-2.7, PyPy 2.7, Jython 2.7, and</source>
          <target state="translated">CPython 2.6-2.7、PyPy 2.7、Jython 2.7、および</target>
        </trans-unit>
        <trans-unit id="3e8362aade9054132e1b501b022bf427bf94b3bc" translate="yes" xml:space="preserve">
          <source>Calling this method overwrites any existing values for the given header. If a list containing multiple instances of the same header is provided, only the last value will be used. To add multiple values to the response for a given header, see &lt;a href=&quot;#falcon.Response.append_header&quot;&gt;&lt;code&gt;append_header()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドを呼び出すと、指定されたヘッダーの既存の値が上書きされます。同じヘッダーの複数のインスタンスを含むリストが提供されている場合、最後の値のみが使用されます。特定のヘッダーの応答に複数の値を追加するには、&lt;a href=&quot;#falcon.Response.append_header&quot;&gt; &lt;code&gt;append_header()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="20cd2fcec7c222d93b4fa7ccedc8c9be3ef682ce" translate="yes" xml:space="preserve">
          <source>Calling this method overwrites any values already set for this header. To append an additional value for this header, use &lt;a href=&quot;#falcon.Response.append_header&quot;&gt;&lt;code&gt;append_header()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">このメソッドを呼び出すと、このヘッダーにすでに設定されている値が上書きされます。このヘッダーに追加の値を追加するには、代わりに&lt;a href=&quot;#falcon.Response.append_header&quot;&gt; &lt;code&gt;append_header()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="c1a4c7796582bc0694ad9f800582cec39d0de051" translate="yes" xml:space="preserve">
          <source>Calling this method overwrites existing values, if any.</source>
          <target state="translated">このメソッドを呼び出すと、既存の値があれば上書きされます。</target>
        </trans-unit>
        <trans-unit id="77a2b5fd4b7fc09015dfd578f7603884002a36fe" translate="yes" xml:space="preserve">
          <source>Calling this method overwrites the existing value, if any.</source>
          <target state="translated">このメソッドを呼び出すと、既存の値があれば上書きされます。</target>
        </trans-unit>
        <trans-unit id="7711b5de742b5096975f28141dcea1c38b1ea07e" translate="yes" xml:space="preserve">
          <source>Calling this method repeatedly will cause each link to be appended to the Link header value, separated by commas.</source>
          <target state="translated">このメソッドを繰り返し呼び出すと、各リンクがカンマで区切って Link ヘッダ値に追加されます。</target>
        </trans-unit>
        <trans-unit id="f4fd8b4e86cc608b48d1db94f3dd203f464df3db" translate="yes" xml:space="preserve">
          <source>Can Falcon serve static files?</source>
          <target state="translated">Falcon は静的ファイルを提供できますか?</target>
        </trans-unit>
        <trans-unit id="38c05e1c359fb28b41b66cb4d14c3887561bed7a" translate="yes" xml:space="preserve">
          <source>Captures &lt;code&gt;req&lt;/code&gt;, &lt;code&gt;resp&lt;/code&gt;, and &lt;code&gt;kwargs&lt;/code&gt;. Also sets up a sample response.</source>
          <target state="translated">キャプチャの &lt;code&gt;req&lt;/code&gt; 、 &lt;code&gt;resp&lt;/code&gt; 、および &lt;code&gt;kwargs&lt;/code&gt; から。また、サンプル応答を設定します。</target>
        </trans-unit>
        <trans-unit id="f5defaa466b275206ab89d5e9a35d75ec90e8c44" translate="yes" xml:space="preserve">
          <source>CaseInsensitiveDict</source>
          <target state="translated">CaseInsensitiveDict</target>
        </trans-unit>
        <trans-unit id="62c42a4bdefb243f7f9604d1ba6f7c57ebe6de72" translate="yes" xml:space="preserve">
          <source>Central to both REST and the Falcon framework is the concept of a &amp;ldquo;resource&amp;rdquo;. Resources are simply all the things in your API or application that can be accessed by a URL. For example, an event booking application may have resources such as &amp;ldquo;ticket&amp;rdquo; and &amp;ldquo;venue&amp;rdquo;, while a video game backend may have resources such as &amp;ldquo;achievements&amp;rdquo; and &amp;ldquo;player&amp;rdquo;.</source>
          <target state="translated">RESTとFalconフレームワークの両方の中心となるのは、「リソース」の概念です。リソースとは、URLからアクセスできるAPIまたはアプリケーションのすべてのものです。たとえば、イベント予約アプリケーションには「チケット」や「会場」などのリソースがあり、ビデオゲームバックエンドには「実績」や「プレーヤー」などのリソースがあります。</target>
        </trans-unit>
        <trans-unit id="5945467e827b0ebb1f66477ed4e7541c3984d27f" translate="yes" xml:space="preserve">
          <source>Changelogs</source>
          <target state="translated">Changelogs</target>
        </trans-unit>
        <trans-unit id="33d0f973f219e3bcb421625f8123bc3fcf073aea" translate="yes" xml:space="preserve">
          <source>Check out the &lt;a href=&quot;../api/hooks#hooks&quot;&gt;hooks reference&lt;/a&gt; to learn more.</source>
          <target state="translated">詳細&lt;a href=&quot;../api/hooks#hooks&quot;&gt;について&lt;/a&gt;は、フックリファレンスをご覧ください。</target>
        </trans-unit>
        <trans-unit id="2d194759ef22efcd895c2bdef7ff22d689be7cb3" translate="yes" xml:space="preserve">
          <source>Checking code &lt;a href=&quot;https://coverage.readthedocs.io/&quot;&gt;coverage&lt;/a&gt; would have helped us detect the missing test above; it&amp;rsquo;s always a good idea to include coverage testing in your workflow to ensure you don&amp;rsquo;t have any bugs hiding off somewhere in an unexercised code path.</source>
          <target state="translated">コード&lt;a href=&quot;https://coverage.readthedocs.io/&quot;&gt;カバレッジ&lt;/a&gt;をチェックすることで、上記の不足しているテストを検出できました。カバレッジテストをワークフローに組み込んで、未実行のコードパスのどこかにバグが隠れていないことを確認することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d62eec87d5465678ad63f15af3d48c623279cf26" translate="yes" xml:space="preserve">
          <source>Child classes may add additional methods and attributes as needed.</source>
          <target state="translated">子クラスは必要に応じてメソッドや属性を追加することができます。</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="4cf0d65cb6eac011dfe336dee7d7c8ba88210f8f" translate="yes" xml:space="preserve">
          <source>Class method that deserializes a single entity-tag string from a precondition header.</source>
          <target state="translated">前提条件ヘッダから単一のエンティティタグ文字列をデシリアライズするクラスメソッドです。</target>
        </trans-unit>
        <trans-unit id="fbdcd291b2ad149e63df7cb2411ad8ab4b429429" translate="yes" xml:space="preserve">
          <source>Class variable that determines the factory or type to use for initializing the &lt;code&gt;context&lt;/code&gt; attribute. By default, the framework will instantiate bare objects (instances of the bare &lt;a href=&quot;util#falcon.Context&quot;&gt;&lt;code&gt;falcon.Context&lt;/code&gt;&lt;/a&gt; class). However, you may override this behavior by creating a custom child class of &lt;code&gt;falcon.Request&lt;/code&gt;, and then passing that new class to &lt;code&gt;falcon.API()&lt;/code&gt; by way of the latter&amp;rsquo;s &lt;code&gt;request_type&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; 属性の初期化に使用するファクトリまたはタイプを決定するクラス変数。デフォルトでは、フレームワークはベアオブジェクト（ベア&lt;a href=&quot;util#falcon.Context&quot;&gt; &lt;code&gt;falcon.Context&lt;/code&gt; &lt;/a&gt;クラスのインスタンス）をインスタンス化します。ただし、 &lt;code&gt;falcon.Request&lt;/code&gt; のカスタム子クラスを作成し、その新しいクラスを後者の &lt;code&gt;request_type&lt;/code&gt; パラメーターを &lt;code&gt;falcon.API()&lt;/code&gt; てfalcon.API（）に渡すことで、この動作をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="12ac0ac4c51beceed99f43d7b40ebe567e9a9aed" translate="yes" xml:space="preserve">
          <source>Class variable that determines the factory or type to use for initializing the &lt;code&gt;context&lt;/code&gt; attribute. By default, the framework will instantiate bare objects (instances of the bare &lt;a href=&quot;util#falcon.Context&quot;&gt;&lt;code&gt;falcon.Context&lt;/code&gt;&lt;/a&gt; class). However, you may override this behavior by creating a custom child class of &lt;code&gt;falcon.Response&lt;/code&gt;, and then passing that new class to &lt;code&gt;falcon.API()&lt;/code&gt; by way of the latter&amp;rsquo;s &lt;code&gt;response_type&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; 属性の初期化に使用するファクトリまたはタイプを決定するクラス変数。デフォルトでは、フレームワークはベアオブジェクト（ベア&lt;a href=&quot;util#falcon.Context&quot;&gt; &lt;code&gt;falcon.Context&lt;/code&gt; &lt;/a&gt;クラスのインスタンス）をインスタンス化します。ただし、 &lt;code&gt;falcon.Response&lt;/code&gt; のカスタム子クラスを作成し、その新しいクラスを後者の &lt;code&gt;response_type&lt;/code&gt; パラメーターを &lt;code&gt;falcon.API()&lt;/code&gt; てfalcon.API（）に渡すことにより、この動作をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="e6b54dda1fedcf05b00da33c5a51d1cdd3067a40" translate="yes" xml:space="preserve">
          <source>Classes and Functions</source>
          <target state="translated">クラスと機能</target>
        </trans-unit>
        <trans-unit id="acdd86525dc424aafef2f8972c7a26e7f9de8010" translate="yes" xml:space="preserve">
          <source>Clears the contents of the cookie, and instructs the user agent to immediately expire its own copy of the cookie.</source>
          <target state="translated">クッキーの内容をクリアし、ユーザ・エージェントにクッキーのそれ自身のコピーを直ちに消去するように指示します。</target>
        </trans-unit>
        <trans-unit id="4c477c96fff89baae45b42c105b31c534cce4443" translate="yes" xml:space="preserve">
          <source>Coercion to &lt;code&gt;int&lt;/code&gt; is attempted if provided with &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; または &lt;code&gt;str&lt;/code&gt; が指定されている場合、 &lt;code&gt;int&lt;/code&gt; への強制が試みられます。</target>
        </trans-unit>
        <trans-unit id="da4a4f6c35a1a0cc303a13f2450d0ffd55359ac5" translate="yes" xml:space="preserve">
          <source>Commas are a reserved character that can be escaped according to &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-2.2&quot;&gt;RFC 3986 - 2.2. Reserved Characters&lt;/a&gt;, so one possible solution is to percent encode any commas that appear in your JSON query string. The other option is to switch the way Falcon handles commas in a query string by setting the &lt;a href=&quot;../api/api#falcon.RequestOptions.auto_parse_qs_csv&quot;&gt;&lt;code&gt;auto_parse_qs_csv&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt; on an instance of &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">コンマは、&lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-2.2&quot;&gt;RFC 3986-2.2&lt;/a&gt;に従ってエスケープできる予約文字です。予約文字なので、1つの可能な解決策は、JSONクエリ文字列に出現するカンマをパーセントエンコードすることです。もう1つのオプションは、&lt;a href=&quot;../api/api#falcon.RequestOptions.auto_parse_qs_csv&quot;&gt; &lt;code&gt;auto_parse_qs_csv&lt;/code&gt; &lt;/a&gt;のインスタンスで&lt;a href=&quot;../api/api#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;False&lt;/code&gt; に設定することにより、クエリ文字列でFalconがカンマを処理する方法を切り替えることです。</target>
        </trans-unit>
        <trans-unit id="816fb3b05e17e4c77187bf13ed9de6aa7df7c968" translate="yes" xml:space="preserve">
          <source>Community Guide</source>
          <target state="translated">コミュニティガイド</target>
        </trans-unit>
        <trans-unit id="c5efbcb24d47dec707f0382bf39536b847982af3" translate="yes" xml:space="preserve">
          <source>Compatible with PyPy</source>
          <target state="translated">PyPyとの互換性</target>
        </trans-unit>
        <trans-unit id="4c891c192f0de8f4f5f4f640320060c5369b39c8" translate="yes" xml:space="preserve">
          <source>Compatible with PyPy and Jython</source>
          <target state="translated">PyPyとJythonとの互換性</target>
        </trans-unit>
        <trans-unit id="1cfa43b8b73f8cac11680b834a6f57051faa6e4b" translate="yes" xml:space="preserve">
          <source>Compile the given URI template string into a pattern matcher.</source>
          <target state="translated">与えられたURIテンプレート文字列をパターンマッチャーにコンパイルします。</target>
        </trans-unit>
        <trans-unit id="ab7dbbe52e48e186e501f3f159167b17a7c0c417" translate="yes" xml:space="preserve">
          <source>Configuration options for the router. If a custom router is in use, and it does not expose any configurable options, referencing this attribute will raise an instance of &lt;code&gt;AttributeError&lt;/code&gt;.</source>
          <target state="translated">ルーターの構成オプション。カスタムルーターが使用されていて、構成可能なオプションが公開されていない場合、この属性を参照すると &lt;code&gt;AttributeError&lt;/code&gt; のインスタンスが発生します。</target>
        </trans-unit>
        <trans-unit id="8e5da62b8b6c6f503a092c716dbd12d97760dd3c" translate="yes" xml:space="preserve">
          <source>Conflicts are most likely to occur in response to a PUT request. For example, if versioning were being used and the representation being PUT included changes to a resource that conflict with those made by an earlier (third-party) request, the origin server might use a 409 response to indicate that it can&amp;rsquo;t complete the request. In this case, the response representation would likely contain information useful for merging the differences based on the revision history.</source>
          <target state="translated">競合は、PUTリクエストへの応答で発生する可能性が最も高いです。たとえば、バージョニングが使用されていて、PUTで​​ある表現にリソースへの変更が含まれていて、以前の（サードパーティ）リクエストによって行われた変更と競合する場合、オリジンサーバーは409応答を使用して、リクエスト。この場合、応答の表現には、改訂履歴に基づいて差異をマージするのに役立つ情報が含まれている可能性があります。</target>
        </trans-unit>
        <trans-unit id="789c1c22a8074561d72f396cc6f09dbc2a7f9f13" translate="yes" xml:space="preserve">
          <source>Connecting NGINX and uWSGI</source>
          <target state="translated">NGINXとuWSGIの接続</target>
        </trans-unit>
        <trans-unit id="3eb17a29f2bf901fbffd30c40a6b273cd757c338" translate="yes" xml:space="preserve">
          <source>Content-Type Negotiation</source>
          <target state="translated">コンテンツタイプネゴシエーション</target>
        </trans-unit>
        <trans-unit id="2d1591539944922fbf8aeb2eecb1641331d6f6de" translate="yes" xml:space="preserve">
          <source>Contribute to Falcon</source>
          <target state="translated">ファルコンへの貢献</target>
        </trans-unit>
        <trans-unit id="3d509b30bf54fa310617d730d3abd2f7acce93dc" translate="yes" xml:space="preserve">
          <source>Convenience class to hold contextual information in its attributes.</source>
          <target state="translated">コンテキスト情報を属性に保持するための便利なクラス。</target>
        </trans-unit>
        <trans-unit id="bbbef391dcabce0890050870ce640464ead90ad0" translate="yes" xml:space="preserve">
          <source>Convenience class to represent a parsed HTTP entity-tag.</source>
          <target state="translated">解析されたHTTPエンティティタグを表す便利なクラスです。</target>
        </trans-unit>
        <trans-unit id="d99640e60a74abcf6f766137635643bbf4660c62" translate="yes" xml:space="preserve">
          <source>Convenience method for setting both &lt;code&gt;stream&lt;/code&gt; and &lt;code&gt;content_length&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;stream&lt;/code&gt; と &lt;code&gt;content_length&lt;/code&gt; の両方を設定するための便利なメソッド。</target>
        </trans-unit>
        <trans-unit id="2c70af17f90c881fcaa891962c9b2ac60e80e429" translate="yes" xml:space="preserve">
          <source>Convenience method for setting both &lt;code&gt;stream&lt;/code&gt; and &lt;code&gt;stream_len&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;stream&lt;/code&gt; と &lt;code&gt;stream_len&lt;/code&gt; の両方を設定する簡易メソッド。</target>
        </trans-unit>
        <trans-unit id="682554934283a755b07ded57721187958457c27e" translate="yes" xml:space="preserve">
          <source>Convert a URI template field value to another format or type.</source>
          <target state="translated">URIテンプレートのフィールド値を別の形式または型に変換します。</target>
        </trans-unit>
        <trans-unit id="905d426af441b888e2dffca01c61e06acbcedbec" translate="yes" xml:space="preserve">
          <source>Converter instances are shared between requests. Therefore, in threaded deployments, care must be taken to implement custom converters in a thread-safe manner.</source>
          <target state="translated">コンバータインスタンスはリクエスト間で共有されます。したがって、スレッド展開では、スレッドセーフな方法でカスタムコンバータを実装するように注意しなければなりません。</target>
        </trans-unit>
        <trans-unit id="fc28f16632788844e3d49048367c3374451c1573" translate="yes" xml:space="preserve">
          <source>Converter names may only contain ASCII letters, digits, and underscores, and must start with either a letter or an underscore.</source>
          <target state="translated">コンバータ名には、ASCII 文字、数字、アンダースコアのみを含めることができ、文字またはアンダースコアで始まる必要があります。</target>
        </trans-unit>
        <trans-unit id="6fa86c8a0f152535c1f81601ff8a657b085c7a72" translate="yes" xml:space="preserve">
          <source>Converters are instantiated with the argument specification given in the field expression. These specifications follow the standard Python syntax for passing arguments. For example, the comments in the following code show how a converter would be instantiated given different argument specifications in the URI template:</source>
          <target state="translated">コンバータはフィールド式で与えられた引数指定でインスタンス化されます。これらの指定は引数を渡すための標準的なPythonの構文に従います。例えば、以下のコードのコメントは、URIテンプレートで異なる引数指定を与えられたコンバータがどのようにインスタンス化されるかを示しています。</target>
        </trans-unit>
        <trans-unit id="f88c0b3128b2b7b39f55c4a4519aabab01f65fb1" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;datetime&lt;/code&gt; instance to an HTTP date string.</source>
          <target state="translated">&lt;code&gt;datetime&lt;/code&gt; インスタンスをHTTP日付文字列に変換します。</target>
        </trans-unit>
        <trans-unit id="3bbca2d930489d659dcae47e5790f1bdcbb6a1be" translate="yes" xml:space="preserve">
          <source>Converts a dictionary of parameters to a query string.</source>
          <target state="translated">パラメータの辞書をクエリ文字列に変換します。</target>
        </trans-unit>
        <trans-unit id="ce697c71ac7f76583108d53a1c0256978ee41b04" translate="yes" xml:space="preserve">
          <source>Converts a field value to a datetime.</source>
          <target state="translated">フィールド値を datetime に変換します。</target>
        </trans-unit>
        <trans-unit id="62edd19dc7f3910899528cc1c0157ebdc58d6979" translate="yes" xml:space="preserve">
          <source>Converts a field value to a uuid.UUID.</source>
          <target state="translated">フィールド値をuuid.UUIDに変換します。</target>
        </trans-unit>
        <trans-unit id="e3b73fba8bccde954cf7e360cf9e67f18022897b" translate="yes" xml:space="preserve">
          <source>Converts a field value to an int.</source>
          <target state="translated">フィールド値をintに変換します。</target>
        </trans-unit>
        <trans-unit id="05b1f2a12478d0525dccc0459372429878710a46" translate="yes" xml:space="preserve">
          <source>Converts an HTTP date string to a datetime instance.</source>
          <target state="translated">HTTP 日付文字列を datetime インスタンスに変換します。</target>
        </trans-unit>
        <trans-unit id="52cabcdecb4a78e9d3e198bd01f25ced9b1173a9" translate="yes" xml:space="preserve">
          <source>Cookie support is available in Falcon version 0.3 or later.</source>
          <target state="translated">クッキーのサポートはFalconバージョン0.3以降で利用可能です。</target>
        </trans-unit>
        <trans-unit id="524cf50b5df5f29161c0600989922de48abede70" translate="yes" xml:space="preserve">
          <source>Cookies</source>
          <target state="translated">Cookies</target>
        </trans-unit>
        <trans-unit id="f74e3e0858e4eadd6757dd44d2a5dd9e1ed8e181" translate="yes" xml:space="preserve">
          <source>Cookies can be read from a request either via the &lt;a href=&quot;request_and_response#falcon.Request.get_cookie_values&quot;&gt;&lt;code&gt;get_cookie_values()&lt;/code&gt;&lt;/a&gt; method or the &lt;a href=&quot;request_and_response#falcon.Request.cookies&quot;&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/a&gt; attribute on the &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object. Generally speaking, the &lt;a href=&quot;request_and_response#falcon.Request.get_cookie_values&quot;&gt;&lt;code&gt;get_cookie_values()&lt;/code&gt;&lt;/a&gt; method should be used unless you need a collection of all the cookies in the request.</source>
          <target state="translated">Cookieは、&lt;a href=&quot;request_and_response#falcon.Request.get_cookie_values&quot;&gt; &lt;code&gt;get_cookie_values()&lt;/code&gt; &lt;/a&gt;メソッドまたは&lt;a href=&quot;request_and_response#falcon.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;request_and_response#falcon.Request.cookies&quot;&gt; &lt;code&gt;cookies&lt;/code&gt; &lt;/a&gt;属性を介してリクエストから読み取ることができます。一般的に、リクエスト内のすべてのCookieのコレクションが必要な場合を除いて、&lt;a href=&quot;request_and_response#falcon.Request.get_cookie_values&quot;&gt; &lt;code&gt;get_cookie_values()&lt;/code&gt; &lt;/a&gt;メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="e5d94dc42419b137d3621ba9043c5b9efaa52a10" translate="yes" xml:space="preserve">
          <source>Cookies can be read from a request via the &lt;a href=&quot;request_and_response#falcon.Request.cookies&quot;&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/a&gt; request attribute:</source>
          <target state="translated">Cookieは、&lt;a href=&quot;request_and_response#falcon.Request.cookies&quot;&gt; &lt;code&gt;cookies&lt;/code&gt; &lt;/a&gt;リクエスト属性を介してリクエストから読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="f90fabaf3f84b9284a1f0ebeff849f1918f093b6" translate="yes" xml:space="preserve">
          <source>Copy of all headers set for the response, sans cookies. Note that a new copy is created and returned each time this property is referenced.</source>
          <target state="translated">レスポンスに設定されたすべてのヘッダのコピー (クッキーは含まれていません)。このプロパティが参照されるたびに新しいコピーが作成されて返されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a86fcc28d2314a833c0be3d49e97b2818be0b9e3" translate="yes" xml:space="preserve">
          <source>Copyright 2012-2017 by Rackspace Hosting, Inc. and other contributors, as noted in the individual source code files.</source>
          <target state="translated">著作権 2012-2017 by Rackspace Hosting,Inc.およびその他の貢献者、個々のソースコードファイルに記載されています。</target>
        </trans-unit>
        <trans-unit id="e90a21ec1c15274f9df0fabaf503e978e92a5c40" translate="yes" xml:space="preserve">
          <source>Creates a mock PEP-3333 environ &lt;code&gt;dict&lt;/code&gt; for simulating WSGI requests.</source>
          <target state="translated">WSGIリクエストをシミュレートするためのモックPEP-3333環境 &lt;code&gt;dict&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="f49f1250b1b443be6c845eb001819b18feb9a1fc" translate="yes" xml:space="preserve">
          <source>Creating Resources</source>
          <target state="translated">リソースの作成</target>
        </trans-unit>
        <trans-unit id="2173925ca03217e63463d2a77316cf649645885b" translate="yes" xml:space="preserve">
          <source>Cronitor</source>
          <target state="translated">Cronitor</target>
        </trans-unit>
        <trans-unit id="1c1b11c24cd13ab88f68bf76acd3f0f1e75de284" translate="yes" xml:space="preserve">
          <source>Curl is a bit of a pain to use, so let&amp;rsquo;s install &lt;a href=&quot;https://github.com/jkbr/httpie&quot;&gt;HTTPie&lt;/a&gt; and use it from now on.</source>
          <target state="translated">Curlを使用するのは&lt;a href=&quot;https://github.com/jkbr/httpie&quot;&gt;少し面倒な&lt;/a&gt;ので、HTTPieをインストールして、これから使用しましょう。</target>
        </trans-unit>
        <trans-unit id="d7f6daf5ba050f3ec443cb9f518439c7667a6631" translate="yes" xml:space="preserve">
          <source>Custom Converters</source>
          <target state="translated">カスタムコンバータ</target>
        </trans-unit>
        <trans-unit id="40ef00cb23aa2f9aa1cc4e3e6d49b3dd1f6dfbb1" translate="yes" xml:space="preserve">
          <source>Custom Handler Type</source>
          <target state="translated">カスタムハンドラタイプ</target>
        </trans-unit>
        <trans-unit id="7d4e4042402db652eb9245c2378f0292ebd1cee9" translate="yes" xml:space="preserve">
          <source>Custom Routers</source>
          <target state="translated">カスタム ルーター</target>
        </trans-unit>
        <trans-unit id="f7cb24f05cf2229e1c77daf9a2327190af482e56" translate="yes" xml:space="preserve">
          <source>Custom converters can be registered via the &lt;a href=&quot;api#falcon.routing.CompiledRouterOptions.converters&quot;&gt;&lt;code&gt;converters&lt;/code&gt;&lt;/a&gt; router option. A converter is simply a class that implements the &lt;code&gt;BaseConverter&lt;/code&gt; interface:</source>
          <target state="translated">カスタムコンバーターは&lt;a href=&quot;api#falcon.routing.CompiledRouterOptions.converters&quot;&gt; &lt;code&gt;converters&lt;/code&gt; &lt;/a&gt;ルーターオプションを介して登録できます。コンバーターは、 &lt;code&gt;BaseConverter&lt;/code&gt; インターフェースを実装するクラスです。</target>
        </trans-unit>
        <trans-unit id="98ae5722116a688043aa0a890968d925606f10d9" translate="yes" xml:space="preserve">
          <source>Custom routers may derive from the default &lt;a href=&quot;#falcon.routing.CompiledRouter&quot;&gt;&lt;code&gt;CompiledRouter&lt;/code&gt;&lt;/a&gt; engine, or implement a completely different routing strategy (such as object-based routing).</source>
          <target state="translated">カスタムルーターは、デフォルトの&lt;a href=&quot;#falcon.routing.CompiledRouter&quot;&gt; &lt;code&gt;CompiledRouter&lt;/code&gt; &lt;/a&gt;エンジンから派生する場合もあれば、まったく異なるルーティング戦略（オブジェクトベースのルーティングなど）を実装する場合もあります。</target>
        </trans-unit>
        <trans-unit id="7ca63ba129586b826230e7ab236a656534fb95bc" translate="yes" xml:space="preserve">
          <source>Custom routers may derive from the default &lt;code&gt;CompiledRouter&lt;/code&gt; engine, or implement a completely different routing strategy (such as object-based routing).</source>
          <target state="translated">カスタムルーターは、デフォルトの &lt;code&gt;CompiledRouter&lt;/code&gt; エンジンから派生したり、完全に異なるルーティング戦略（オブジェクトベースのルーティングなど）を実装したりできます。</target>
        </trans-unit>
        <trans-unit id="d599667d492faa0d4dc25235bb3f1908820235e5" translate="yes" xml:space="preserve">
          <source>DRY request processing via middleware components and hooks</source>
          <target state="translated">ミドルウェアコンポーネントとフックによるDRYリクエスト処理</target>
        </trans-unit>
        <trans-unit id="729dd8c41d2f16a778eb1f6eae91c344cfed3bef" translate="yes" xml:space="preserve">
          <source>DST adjustment for GMT, which is always 0.</source>
          <target state="translated">GMTのDST調整、常に0です。</target>
        </trans-unit>
        <trans-unit id="440ecfb98e6459b3f52635afa46d0881f856e87e" translate="yes" xml:space="preserve">
          <source>Decoded response body of type &lt;code&gt;unicode&lt;/code&gt; under Python 2.7, and of type &lt;code&gt;str&lt;/code&gt; otherwise. If the content type does not specify an encoding, UTF-8 is assumed.</source>
          <target state="translated">Python 2.7では &lt;code&gt;unicode&lt;/code&gt; 型、それ以外の場合は &lt;code&gt;str&lt;/code&gt; 型のデコードされた応答本文。コンテンツタイプでエンコーディングが指定されていない場合は、UTF-8が想定されます。</target>
        </trans-unit>
        <trans-unit id="9d71821868bea853ae341bc16cd517da5ee6a8ee" translate="yes" xml:space="preserve">
          <source>Decodes percent-encoded characters in a URI or query string.</source>
          <target state="translated">URIまたはクエリ文字列のパーセンテージエンコードされた文字をデコードします。</target>
        </trans-unit>
        <trans-unit id="23245f11c7da756a1242f8862b9737918f14bf2c" translate="yes" xml:space="preserve">
          <source>Decorator for validating &lt;code&gt;req.media&lt;/code&gt; using JSON Schema.</source>
          <target state="translated">JSONスキーマを使用して &lt;code&gt;req.media&lt;/code&gt; を検証するためのデコレーター。</target>
        </trans-unit>
        <trans-unit id="217cd8ac1b5f442e1d9ff55d7458849ddd6b3ff5" translate="yes" xml:space="preserve">
          <source>Decorator to execute the given action function &lt;em&gt;after&lt;/em&gt; the responder.</source>
          <target state="translated">レスポンダの&lt;em&gt;後に&lt;/em&gt;特定のアクション関数を実行するデコレータ。</target>
        </trans-unit>
        <trans-unit id="206ad47d99ebfeddb66d0d09f1a5fb038b625cbe" translate="yes" xml:space="preserve">
          <source>Decorator to execute the given action function &lt;em&gt;before&lt;/em&gt; the responder.</source>
          <target state="translated">指定されたアクション関数をレスポンダの&lt;em&gt;前&lt;/em&gt;に実行するデコレータ。</target>
        </trans-unit>
        <trans-unit id="7157067c0c7bc52981a89abe3a6814131705c440" translate="yes" xml:space="preserve">
          <source>Default Router</source>
          <target state="translated">デフォルトのルーター</target>
        </trans-unit>
        <trans-unit id="78d219d332eca3bb46dc7d72ec8124f1be525d8c" translate="yes" xml:space="preserve">
          <source>Defines a set of configurable request options.</source>
          <target state="translated">設定可能なリクエストオプションのセットを定義します。</target>
        </trans-unit>
        <trans-unit id="3ffcc8538aa9d49155b2f0afa892cf2fc1416e41" translate="yes" xml:space="preserve">
          <source>Defines a set of configurable response options.</source>
          <target state="translated">構成可能な応答オプションのセットを定義します。</target>
        </trans-unit>
        <trans-unit id="af3baaf9007b6e0d9628de852bdc499c08abede6" translate="yes" xml:space="preserve">
          <source>Defines a set of configurable router options.</source>
          <target state="translated">設定可能なルーターオプションのセットを定義します。</target>
        </trans-unit>
        <trans-unit id="65583ccaeaf9c8bd44b667c0084cba48c6065217" translate="yes" xml:space="preserve">
          <source>Defines the lifetime of the cookie in seconds. By default, cookies expire when the user agent exits. If both &lt;code&gt;max_age&lt;/code&gt; and &lt;code&gt;expires&lt;/code&gt; are set, the latter is ignored by the user agent.</source>
          <target state="translated">Cookieの存続期間を秒単位で定義します。デフォルトでは、ユーザーエージェントが終了するとCookieは期限切れになります。両方の場合 &lt;code&gt;max_age&lt;/code&gt; の及び &lt;code&gt;expires&lt;/code&gt; 設定され、後者は、ユーザエージェントによって無視されます。</target>
        </trans-unit>
        <trans-unit id="7501e464f9d9324dfe20fe1a2154b4e2cea38460" translate="yes" xml:space="preserve">
          <source>Delete a header that was previously set for this response.</source>
          <target state="translated">この応答に設定されていたヘッダーを削除します。</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="e50b7c8fce20053f557756eb03b5bf7ac9b856e6" translate="yes" xml:space="preserve">
          <source>Depending on the requested action, the server may or may not return a representation to the client. Representations may be encoded in any one of a number of Internet media types, such as JSON and HTML.</source>
          <target state="translated">要求されたアクションに応じて、サーバはクライアントに表現を返す場合と返さない場合があります。表現は、JSONやHTMLなどのインターネットメディアタイプのいずれかでエンコードされることがあります。</target>
        </trans-unit>
        <trans-unit id="fb4192a0d1e98db49f6315e471f852385eb84ca8" translate="yes" xml:space="preserve">
          <source>Deploy</source>
          <target state="translated">Deploy</target>
        </trans-unit>
        <trans-unit id="d41e5da928a3bdb9ddaa15c74c645bd836717caa" translate="yes" xml:space="preserve">
          <source>Deploying Falcon behind uWSGI</source>
          <target state="translated">uWSGI の後ろに Falcon を配置</target>
        </trans-unit>
        <trans-unit id="742c8d21ae5b34835d8e66f1fb1a7f38c85aed99" translate="yes" xml:space="preserve">
          <source>Deploying Falcon on Linux with NGINX and uWSGI</source>
          <target state="translated">NGINXとuWSGIを用いたLinux上でのFalconのデプロイ</target>
        </trans-unit>
        <trans-unit id="9b63d53521c97f956baea2fdc5b2d60ada5a1f80" translate="yes" xml:space="preserve">
          <source>Deployment Guide</source>
          <target state="translated">展開ガイド</target>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="bbaf2db3d14806b75dbf5b659d3bf9b4b0dbb52b" translate="yes" xml:space="preserve">
          <source>Deprecated alias for &lt;a href=&quot;#falcon.Response.content_length&quot;&gt;&lt;code&gt;content_length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#falcon.Response.content_length&quot;&gt; &lt;code&gt;content_length&lt;/code&gt; の非&lt;/a&gt;推奨のエイリアス。</target>
        </trans-unit>
        <trans-unit id="6323d445a5409f452a72eb8270bc538077905e2e" translate="yes" xml:space="preserve">
          <source>Deprecated alias of &lt;a href=&quot;#falcon.Request.get_param_as_json&quot;&gt;&lt;code&gt;get_param_as_json()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#falcon.Request.get_param_as_json&quot;&gt; &lt;code&gt;get_param_as_json()&lt;/code&gt; &lt;/a&gt;の非推奨のエイリアス。</target>
        </trans-unit>
        <trans-unit id="f035c500d4b20eba9d55ecc7ce3b01cece50b8d5" translate="yes" xml:space="preserve">
          <source>Description of the error to send to the client.</source>
          <target state="translated">クライアントに送信するエラーの説明。</target>
        </trans-unit>
        <trans-unit id="fef0fd90f9c4c55ce1c372e15b54aa639ccc836f" translate="yes" xml:space="preserve">
          <source>Deserialize the &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;&lt;code&gt;falcon.Request&lt;/code&gt;&lt;/a&gt; body.</source>
          <target state="translated">デシリアライズ&lt;a href=&quot;request_and_response#falcon.Request&quot;&gt; &lt;code&gt;falcon.Request&lt;/code&gt; の&lt;/a&gt;体を。</target>
        </trans-unit>
        <trans-unit id="775c9ea24ea11c62d76254c84513bacad76d2b22" translate="yes" xml:space="preserve">
          <source>Deserialized JSON body. Will be &lt;code&gt;None&lt;/code&gt; if the body has no content to deserialize. Otherwise, raises an error if the response is not valid JSON.</source>
          <target state="translated">デシリアライズされたJSON本体。本体に逆シリアル化するコンテンツがない場合は &lt;code&gt;None&lt;/code&gt; になります。それ以外の場合、応答が有効なJSONでない場合はエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="0299df69519745ac509aaf71de243d99707f67aa" translate="yes" xml:space="preserve">
          <source>Design Philosophy</source>
          <target state="translated">デザインフィロソフィー</target>
        </trans-unit>
        <trans-unit id="26bdd0d149e362c043f926983ccdddac9f21f2cc" translate="yes" xml:space="preserve">
          <source>Destructor, unittest-style</source>
          <target state="translated">デストラクタ、ユニテストスタイル</target>
        </trans-unit>
        <trans-unit id="7a7609e929a44556809fd4e890e3583331d74511" translate="yes" xml:space="preserve">
          <source>Determine whether or not the client accepts a given media type.</source>
          <target state="translated">クライアントが指定されたメディアタイプを受け入れるかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="e71aed4a8cd681b35395696e1150d367f87966c1" translate="yes" xml:space="preserve">
          <source>Determine whether or not the query string parameter already exists.</source>
          <target state="translated">クエリ文字列パラメータが既に存在するかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="3e0e00a46ffeb9620360ccca7635bdfc71120c30" translate="yes" xml:space="preserve">
          <source>Dictionary to hold any data about the response which is specific to your app. Falcon itself will not interact with this attribute after it has been initialized.</source>
          <target state="translated">あなたのアプリに固有のレスポンスに関するデータを保持するための辞書です。Falcon 自体はこの属性が初期化された後、この属性と対話することはありません。</target>
        </trans-unit>
        <trans-unit id="6f1dbb02e0e2077d6b22d60c0740afd0dfedcc20" translate="yes" xml:space="preserve">
          <source>Direct the client to only return the cookie in subsequent requests if they are made over HTTPS (default: &lt;code&gt;True&lt;/code&gt;). This prevents attackers from reading sensitive cookie data.</source>
          <target state="translated">HTTPSを介して行われた場合、後続のリクエストでのみCookieを返すようにクライアントに指示します（デフォルト： &lt;code&gt;True&lt;/code&gt; ）。これにより、攻撃者が機密性の高いCookieデータを読み取ることを防ぎます。</target>
        </trans-unit>
        <trans-unit id="88edb6420768d175ccdffa45fb8843480c5a139e" translate="yes" xml:space="preserve">
          <source>Direct the client to only transfer the cookie with unscripted HTTP requests (default: &lt;code&gt;True&lt;/code&gt;). This is intended to mitigate some forms of cross-site scripting.</source>
          <target state="translated">スクリプト化されていないHTTPリクエストでのみCookieを転送するようにクライアントに指示します（デフォルト： &lt;code&gt;True&lt;/code&gt; ）。これは、いくつかの形式のクロスサイトスクリプティングを軽減することを目的としています。</target>
        </trans-unit>
        <trans-unit id="9453e2cbe8751ce3af537387a9b66a0af7d69c6d" translate="yes" xml:space="preserve">
          <source>Disallowed characters are percent-encoded in a way that models &lt;code&gt;urllib.parse.quote(safe=&quot;~&quot;)&lt;/code&gt;. However, the Falcon function is faster in the average case than the similar &lt;code&gt;quote&lt;/code&gt; function found in urlib. It also strives to be easier to use by assuming a sensible default of allowed characters.</source>
          <target state="translated">&lt;code&gt;urllib.parse.quote(safe=&quot;~&quot;)&lt;/code&gt; されていない文字は、urllib.parse.quote（safe = &quot;〜&quot;）をモデル化する方法でパーセントエンコードされます。ただし、Falcon関数は、urlibにある同様の &lt;code&gt;quote&lt;/code&gt; 関数よりも平均的な場合の方が高速です。また、許可された文字の実用的なデフォルトを想定することで、より使いやすくなるように努めています。</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="333272f4e9f2cff00edea32074481a620157e72f" translate="yes" xml:space="preserve">
          <source>Does Falcon set Content-Length or do I need to do that explicitly?</source>
          <target state="translated">Falcon は Content-Length を設定しますか、それとも明示的に設定する必要がありますか?</target>
        </trans-unit>
        <trans-unit id="b86ca5300d5d9b26968a342f6624405b9094fc7f" translate="yes" xml:space="preserve">
          <source>Does Falcon support WebSocket?</source>
          <target state="translated">Falcon は WebSocket をサポートしていますか?</target>
        </trans-unit>
        <trans-unit id="433816f574ded160cec7e99a85ad5bd601572a17" translate="yes" xml:space="preserve">
          <source>Does Falcon support asyncio?</source>
          <target state="translated">Falconはasyncioをサポートしていますか?</target>
        </trans-unit>
        <trans-unit id="c17c8e44f565b0f86049e467380a5969f33ca0ba" translate="yes" xml:space="preserve">
          <source>Does Falcon work with HTTP/2?</source>
          <target state="translated">Falcon は HTTP/2 で動作しますか?</target>
        </trans-unit>
        <trans-unit id="10c6fdd97981e24b2bcf53bec7e2cea827bec567" translate="yes" xml:space="preserve">
          <source>Due to the limitations of WSGI, Falcon is unable to support &lt;code&gt;asyncio&lt;/code&gt; at this time. However, we are exploring alternatives to WSGI (such as &lt;a href=&quot;https://github.com/django/asgiref/blob/master/specs/asgi.rst&quot;&gt;ASGI&lt;/a&gt;) that will allow us to support asyncio natively in the future.</source>
          <target state="translated">WSGIの制限により、Falconは &lt;code&gt;asyncio&lt;/code&gt; でasyncioをサポートできません。ただし、将来的にネイティブでasyncioをサポートできるようにするWSGIの代替（&lt;a href=&quot;https://github.com/django/asgiref/blob/master/specs/asgi.rst&quot;&gt;ASGI&lt;/a&gt;など）を模索しています。</target>
        </trans-unit>
        <trans-unit id="da446339868958f4e1cc59fafdca99f23d6ca74f" translate="yes" xml:space="preserve">
          <source>Due to the limitations of WSGI, Falcon is unable to support the WebSocket protocol as stated above.</source>
          <target state="translated">WSGIの制限のため、Falconは上記のようにWebSocketプロトコルをサポートすることができません。</target>
        </trans-unit>
        <trans-unit id="6156a516dbfc6ea31bca7b52f7d996c965a0b36f" translate="yes" xml:space="preserve">
          <source>EMC</source>
          <target state="translated">EMC</target>
        </trans-unit>
        <trans-unit id="11d00f6ed181afbae6281cf892e585dcee85b274" translate="yes" xml:space="preserve">
          <source>ETag</source>
          <target state="translated">ETag</target>
        </trans-unit>
        <trans-unit id="a59688eba337a50736da76d745806f1f667fc91e" translate="yes" xml:space="preserve">
          <source>Each API instance provides a callable WSGI interface and a routing engine.</source>
          <target state="translated">各APIインスタンスは、呼び出し可能なWSGIインターフェースとルーティングエンジンを提供します。</target>
        </trans-unit>
        <trans-unit id="9f5e53b022ed9dc5fe0bdeb568aeb8bd562852fd" translate="yes" xml:space="preserve">
          <source>Each component&amp;rsquo;s &lt;em&gt;process_request&lt;/em&gt;, &lt;em&gt;process_resource&lt;/em&gt;, and &lt;em&gt;process_response&lt;/em&gt; methods are executed hierarchically, as a stack, following the ordering of the list passed via the &lt;code&gt;middleware&lt;/code&gt; kwarg of &lt;a href=&quot;api#api&quot;&gt;falcon.API&lt;/a&gt;. For example, if a list of middleware objects are passed as &lt;code&gt;[mob1, mob2, mob3]&lt;/code&gt;, the order of execution is as follows:</source>
          <target state="translated">各コンポーネントの&lt;em&gt;process_request&lt;/em&gt;、&lt;em&gt;process_resource&lt;/em&gt;、および&lt;em&gt;process_response&lt;/em&gt;メソッドは、&lt;a href=&quot;api#api&quot;&gt;falcon.APIの&lt;/a&gt; &lt;code&gt;middleware&lt;/code&gt; kwargを介して渡されたリストの順序に従って、スタックとして階層的に実行されます。たとえば、ミドルウェアオブジェクトのリストが &lt;code&gt;[mob1, mob2, mob3]&lt;/code&gt; として渡された場合、実行の順序は次のようになります。</target>
        </trans-unit>
        <trans-unit id="f406d0d1f99daf1740b0ed19bec1a7cb264b54d8" translate="yes" xml:space="preserve">
          <source>Each field is converted to a named group, so that when a match is found, the fields can be easily extracted using &lt;a href=&quot;https://docs.python.org/2/library/re.html#re.MatchObject.groupdict&quot;&gt;&lt;code&gt;re.MatchObject.groupdict()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">各フィールドは名前付きグループに変換されるため、一致が見つかると、フィールドは&lt;a href=&quot;https://docs.python.org/2/library/re.html#re.MatchObject.groupdict&quot;&gt; &lt;code&gt;re.MatchObject.groupdict()&lt;/code&gt; &lt;/a&gt;を使用して簡単に抽出できます。</target>
        </trans-unit>
        <trans-unit id="f7f00036493d8bd9741da3cc1b0c06fd5dfbfc5a" translate="yes" xml:space="preserve">
          <source>Each field is converted to a named group, so that when a match is found, the fields can be easily extracted using &lt;code&gt;re.MatchObject.groupdict()&lt;/code&gt;.</source>
          <target state="translated">各フィールドは名前付きグループに変換されるため、一致するものが見つかった場合、 &lt;code&gt;re.MatchObject.groupdict()&lt;/code&gt; を使用してフィールドを簡単に抽出できます。</target>
        </trans-unit>
        <trans-unit id="165753f601fa09554ba2c8a0a48eea9b6027512a" translate="yes" xml:space="preserve">
          <source>Each resource class defines various &amp;ldquo;responder&amp;rdquo; methods, one for each HTTP method the resource allows. Responder names start with &lt;code&gt;on_&lt;/code&gt; and are named according to which HTTP method they handle, as in &lt;code&gt;on_get()&lt;/code&gt;, &lt;code&gt;on_post()&lt;/code&gt;, &lt;code&gt;on_put()&lt;/code&gt;, etc.</source>
          <target state="translated">各リソースクラスは、リソースが許可するHTTPメソッドごとに1つ、さまざまな「レスポンダー」メソッドを定義します。レスポンダ名は &lt;code&gt;on_&lt;/code&gt; で始まり、 &lt;code&gt;on_get()&lt;/code&gt; 、 &lt;code&gt;on_post()&lt;/code&gt; 、 &lt;code&gt;on_put()&lt;/code&gt; などのように、応答するHTTPメソッドに従って名前が付けられます。</target>
        </trans-unit>
        <trans-unit id="646f2e2ef01e4f55d9b4cc42a9104c1afb835ef4" translate="yes" xml:space="preserve">
          <source>Each responder also receives a &lt;code&gt;Response&lt;/code&gt; object that can be used for setting the status code, headers, and body of the response:</source>
          <target state="translated">各レスポンダは、ステータスコード、ヘッダー、および応答の本文の設定に使用できる &lt;code&gt;Response&lt;/code&gt; オブジェクトも受け取ります。</target>
        </trans-unit>
        <trans-unit id="d3c0844abd55a9bfb6c5b8339fb95f7bbe1bee95" translate="yes" xml:space="preserve">
          <source>Each responder in a resource receives a &lt;code&gt;Request&lt;/code&gt; object that can be used to read the headers, query parameters, and body of the request. You can use the standard &lt;code&gt;help()&lt;/code&gt; function or IPython&amp;rsquo;s magic &lt;code&gt;?&lt;/code&gt; function to list the attributes and methods of Falcon&amp;rsquo;s &lt;code&gt;Request&lt;/code&gt; class:</source>
          <target state="translated">リソース内の各レスポンダは、ヘッダー、クエリパラメータ、およびリクエストの本文を読み取るために使用できる &lt;code&gt;Request&lt;/code&gt; オブジェクトを受け取ります。標準の &lt;code&gt;help()&lt;/code&gt; 関数またはIPythonの魔法を使用できます &lt;code&gt;?&lt;/code&gt; Falconの &lt;code&gt;Request&lt;/code&gt; クラスの属性とメソッドをリストする関数：</target>
        </trans-unit>
        <trans-unit id="c55ab0140edbfbb58e34e829e02c6d18e88152f2" translate="yes" xml:space="preserve">
          <source>Earlier we pointed out that our POST test relied heavily on mocking, relying on assumptions that may or may not hold true as the code evolves. To mitigate this problem, we&amp;rsquo;ll not only have to refactor the tests, but also the application itself.</source>
          <target state="translated">以前に、POSTテストはモックに大きく依存しており、コードの進化に伴って当てはまる、または当てはまらない可能性がある仮定に依存していることを以前に指摘しました。この問題を軽減するには、テストだけでなくアプリケーション自体もリファクタリングする必要があります。</target>
        </trans-unit>
        <trans-unit id="7a5cfd205582374128d08fa3eed383f40815420b" translate="yes" xml:space="preserve">
          <source>Easy access to headers and bodies through request and response classes</source>
          <target state="translated">リクエストクラスとレスポンスクラスを介してヘッダとボディに簡単にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="9ca0878681522886c271137626bb93f0dc36a138" translate="yes" xml:space="preserve">
          <source>Either a file-like object with a &lt;code&gt;read()&lt;/code&gt; method that takes an optional size argument and returns a block of bytes, or an iterable object, representing response content, and yielding blocks as byte strings. Falcon will use &lt;em&gt;wsgi.file_wrapper&lt;/em&gt;, if provided by the WSGI server, in order to efficiently serve file-like objects.</source>
          <target state="translated">オプションのサイズ引数を使用してバイトのブロックを返す &lt;code&gt;read()&lt;/code&gt; メソッドを持つファイルのようなオブジェクト、または応答コンテンツを表し、ブロックをバイト文字列として生成する反復可能なオブジェクトのいずれか。Falconは、ファイルのようなオブジェクトを効率的に処理するために、WSGIサーバーによって提供された場合、&lt;em&gt;wsgi.file_wrapper&lt;/em&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="dd2f8fde4a791557c2d695ee3100ad40ba255251" translate="yes" xml:space="preserve">
          <source>Either a single object or a list of objects (instantiated classes) that implement the following middleware component interface:</source>
          <target state="translated">以下のミドルウェア・コンポーネント・インタフェースを実装した単一のオブジェクトまたはオブジェクトのリスト(インスタンス化されたクラス)のいずれか。</target>
        </trans-unit>
        <trans-unit id="4ef71783b141a2d11192414b87a22a812cb80cb2" translate="yes" xml:space="preserve">
          <source>Empty object to hold any data (in its attributes) about the request which is specific to your app (e.g. session object). Falcon itself will not interact with this attribute after it has been initialized.</source>
          <target state="translated">あなたのアプリに固有のリクエストに関するデータ(例えばセッションオブジェクト)を保持するため の空のオブジェクト(その属性の中の)。Falcon 自体はこの属性が初期化された後、この属性とは対話しません。</target>
        </trans-unit>
        <trans-unit id="43a82d2239220d9c6c89d95b71708f6e463e008f" translate="yes" xml:space="preserve">
          <source>Empty object to hold any data (in its attributes) about the response which is specific to your app (e.g. session object). Falcon itself will not interact with this attribute after it has been initialized.</source>
          <target state="translated">あなたのアプリに固有のレスポンスに関するデータ(例えばセッションオブジェクト)を保持するため の空のオブジェクト(その属性内の)。Falcon 自体はこの属性が初期化された後、この属性とは対話しません。</target>
        </trans-unit>
        <trans-unit id="f029b2ac6838e372f0fa401b3a39ec9d5ca678e2" translate="yes" xml:space="preserve">
          <source>Enabling this option makes the form parameters accessible via &lt;a href=&quot;request_and_response#falcon.Request.params&quot;&gt;&lt;code&gt;params&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;request_and_response#falcon.Request.get_param&quot;&gt;&lt;code&gt;get_param()&lt;/code&gt;&lt;/a&gt;, etc.</source>
          <target state="translated">このオプションを有効にすると、&lt;a href=&quot;request_and_response#falcon.Request.params&quot;&gt; &lt;code&gt;params&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;request_and_response#falcon.Request.get_param&quot;&gt; &lt;code&gt;get_param()&lt;/code&gt; &lt;/a&gt;などを介してフォームパラメータにアクセスできるようになります。</target>
        </trans-unit>
        <trans-unit id="2dfe17979242954f01820bab666a1248faf47f85" translate="yes" xml:space="preserve">
          <source>Encapsulates the result of a simulated WSGI request.</source>
          <target state="translated">模擬WSGIリクエストの結果をカプセル化する。</target>
        </trans-unit>
        <trans-unit id="7d7cebcbcce845f1caf1a867178ff8f9f746cfc4" translate="yes" xml:space="preserve">
          <source>Encodes a full or relative URI according to RFC 3986.</source>
          <target state="translated">RFC 3986に従って完全URIまたは相対URIをエンコードする。</target>
        </trans-unit>
        <trans-unit id="32866acddd5ac64d35a4e2a319c5b20321a865cb" translate="yes" xml:space="preserve">
          <source>Encodes a value string according to RFC 3986.</source>
          <target state="translated">RFC 3986に従って値の文字列をエンコードします。</target>
        </trans-unit>
        <trans-unit id="d371f28bfea1e852f448381bb4f0bdfccaa7149e" translate="yes" xml:space="preserve">
          <source>Equivalent to:</source>
          <target state="translated">同等です。</target>
        </trans-unit>
        <trans-unit id="5fff1f56919b006049c274c6c76fbbe56470ee4c" translate="yes" xml:space="preserve">
          <source>Error Handling</source>
          <target state="translated">エラー処理</target>
        </trans-unit>
        <trans-unit id="ee20c6a8f3c82704b0c724ac8d99c26e4e40e19c" translate="yes" xml:space="preserve">
          <source>Error handlers are matched in LIFO order. In other words, when searching for an error handler to match a raised exception, and more than one handler matches the exception type, the framework will choose the one that was most recently registered. Therefore, more general error handlers (e.g., for the standard &lt;code&gt;Exception&lt;/code&gt; type) should be added first, to avoid masking more specific handlers for subclassed types.</source>
          <target state="translated">エラーハンドラーはLIFO順に照合されます。つまり、発生した例外に一致するエラーハンドラーを検索し、複数のハンドラーが例外タイプに一致する場合、フレームワークは最後に登録されたハンドラーを選択します。したがって、サブクラス化されたタイプのより具体的なハンドラーがマスクされないように、より一般的なエラーハンドラー（たとえば、標準の &lt;code&gt;Exception&lt;/code&gt; タイプ用）を最初に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="3359764f9e08b6eeb67bd22cb401f62266b45657" translate="yes" xml:space="preserve">
          <source>Error handlers may be registered for any exception type, including &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt;&lt;code&gt;HTTPStatus&lt;/code&gt;&lt;/a&gt;. This feature provides a central location for logging and otherwise handling exceptions raised by responders, hooks, and middleware components.</source>
          <target state="translated">エラーハンドラは、&lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt; &lt;code&gt;HTTPStatus&lt;/code&gt; &lt;/a&gt;などの任意の例外タイプに登録できます。この機能は、レスポンダー、フック、およびミドルウェアコンポーネントによって発生した例外をログに記録したり処理したりするための中央の場所を提供します。</target>
        </trans-unit>
        <trans-unit id="35bf342ec90ed3bf74e2871976342e87b0fccbb1" translate="yes" xml:space="preserve">
          <source>Error handlers may be registered for any type, including &lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt;. This feature provides a central location for logging and otherwise handling exceptions raised by responders, hooks, and middleware components.</source>
          <target state="translated">エラーハンドラーは、&lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;を含む任意のタイプに登録できます。この機能は、レスポンダー、フック、およびミドルウェアコンポーネントによって発生した例外をログに記録し、その他の方法で処理するための中心的な場所を提供します。</target>
        </trans-unit>
        <trans-unit id="66245aa64a86154ca6a2ea42b381f9d26b64b3c7" translate="yes" xml:space="preserve">
          <source>Error handlers may be registered for any type, including &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt;. This feature provides a central location for logging and otherwise handling exceptions raised by responders, hooks, and middleware components.</source>
          <target state="translated">エラーハンドラーは、&lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;を含む任意のタイプに登録できます。この機能は、レスポンダー、フック、およびミドルウェアコンポーネントによって発生した例外をログに記録し、その他の方法で処理するための中心的な場所を提供します。</target>
        </trans-unit>
        <trans-unit id="3f95d4177f3c0a25ab5e3dd92d80a6502213f9fd" translate="yes" xml:space="preserve">
          <source>Error title to send to the client.</source>
          <target state="translated">クライアントに送信するエラータイトル。</target>
        </trans-unit>
        <trans-unit id="bde86c7f4b7dc767f358479138f8cb086c648eda" translate="yes" xml:space="preserve">
          <source>Errors are anticipated, detected, and handled appropriately within each responder and with the aid of custom error handlers.</source>
          <target state="translated">エラーは、各レスポンダ内で、カスタム エラー ハンドラの助けを借りて、予測、検出、および適切に処理されます。</target>
        </trans-unit>
        <trans-unit id="ab5b9b756db80059caf4778cf1f03df3e7182963" translate="yes" xml:space="preserve">
          <source>Errors are anticipated, detected, logged, and handled appropriately within each responder or by global error handling hooks.</source>
          <target state="translated">エラーは、各レスポンダ内、またはグローバルエラー処理フックによって、予測、検出、記録、および適切に処理されます。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="20788aa11834509830be30396b88f6404f087e8c" translate="yes" xml:space="preserve">
          <source>Exception Handling</source>
          <target state="translated">例外処理</target>
        </trans-unit>
        <trans-unit id="ee8510efdf378ab696b93e4748700719f7f04f94" translate="yes" xml:space="preserve">
          <source>Expiration timestamp for the cookie, or &lt;code&gt;None&lt;/code&gt; if not specified.</source>
          <target state="translated">Cookieの有効期限タイムスタンプ、または指定されていない場合は &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75f06aa13c189adf2f5019fbbfe4710304a99656" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;https://docs.python.org/2/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; to support WSGI functional testing.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/2/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;を拡張して、WSGI機能テストをサポートします。</target>
        </trans-unit>
        <trans-unit id="eac660c7fea7ccf9c5f962c287ec1cb3dfe2faf7" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; to support WSGI functional testing.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;を拡張して、WSGI機能テストをサポートします。</target>
        </trans-unit>
        <trans-unit id="02c94538d1874480a4371b6ab14ef1e2eea48fb4" translate="yes" xml:space="preserve">
          <source>Extensibility</source>
          <target state="translated">Extensibility</target>
        </trans-unit>
        <trans-unit id="c848f40d2452ea442d3bd32214649cb87c2524cd" translate="yes" xml:space="preserve">
          <source>Extra headers to add to the response.</source>
          <target state="translated">レスポンスに追加する追加ヘッダ。</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="63f5c347ef158500f121d78160b7a92c3c94ee35" translate="yes" xml:space="preserve">
          <source>Falcon</source>
          <target state="translated">Falcon</target>
        </trans-unit>
        <trans-unit id="ff48f03e1496cdfcab9efde703a6ff29f4c06783" translate="yes" xml:space="preserve">
          <source>Falcon &lt;a href=&quot;https://github.com/falconry/falcon&quot;&gt;lives on GitHub&lt;/a&gt;, making the code easy to browse, download, fork, etc. Pull requests are always welcome! Also, please remember to star the project if it makes you happy. :)</source>
          <target state="translated">Falcon &lt;a href=&quot;https://github.com/falconry/falcon&quot;&gt;はGitHub上&lt;/a&gt;にあり、コードの閲覧、ダウンロード、フォークなどを簡単に行うことができます。プルリクエストはいつでも歓迎です！また、プロジェクトに満足できる場合は、スターを付けてください。:)</target>
        </trans-unit>
        <trans-unit id="f985cf6a12e639ab0c0d300aa39acb655162eae9" translate="yes" xml:space="preserve">
          <source>Falcon &lt;a href=&quot;middleware#middleware&quot;&gt;middleware components&lt;/a&gt; can also be used to insert logic before and after requests. However, unlike hooks, &lt;a href=&quot;middleware#middleware&quot;&gt;middleware components&lt;/a&gt; are triggered &lt;strong&gt;globally&lt;/strong&gt; for all requests.</source>
          <target state="translated">Falcon &lt;a href=&quot;middleware#middleware&quot;&gt;ミドルウェアコンポーネント&lt;/a&gt;を使用して、リクエストの前後にロジックを挿入することもできます。ただし、フックとは異なり、&lt;a href=&quot;middleware#middleware&quot;&gt;ミドルウェアコンポーネント&lt;/a&gt;はすべてのリクエストに対して&lt;strong&gt;グローバル&lt;/strong&gt;にトリガー&lt;strong&gt;さ&lt;/strong&gt;れます。</target>
        </trans-unit>
        <trans-unit id="65a06e2be7aac7c96da06e023e8b6c51baf9ba19" translate="yes" xml:space="preserve">
          <source>Falcon License</source>
          <target state="translated">ファルコンライセンス</target>
        </trans-unit>
        <trans-unit id="2ff92c93236f195dd672d7d5152b84a0ce77a3ac" translate="yes" xml:space="preserve">
          <source>Falcon add-ons and complementary packages</source>
          <target state="translated">ファルコンのアドオンと補完パッケージ</target>
        </trans-unit>
        <trans-unit id="45e56cf3c6bb3d12c9fc3ce9b0c73701bf0c08dd" translate="yes" xml:space="preserve">
          <source>Falcon allows for easy and customizable internet media type handling. By default Falcon only enables a single JSON handler. However, additional handlers can be configured through the &lt;a href=&quot;api#falcon.RequestOptions&quot;&gt;&lt;code&gt;falcon.RequestOptions&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api#falcon.ResponseOptions&quot;&gt;&lt;code&gt;falcon.ResponseOptions&lt;/code&gt;&lt;/a&gt; objects specified on your &lt;a href=&quot;api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Falconは、簡単でカスタマイズ可能なインターネットメディアタイプの処理を可能にします。デフォルトでは、Falconは単一のJSONハンドラーのみを有効にします。しかし、追加のハンドラを介して設定することができ&lt;a href=&quot;api#falcon.RequestOptions&quot;&gt; &lt;code&gt;falcon.RequestOptions&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;api#falcon.ResponseOptions&quot;&gt; &lt;code&gt;falcon.ResponseOptions&lt;/code&gt; は&lt;/a&gt;あなたに指定されたオブジェクト&lt;a href=&quot;api#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e1f672f0128390601d121f95602600d2c84ad96d" translate="yes" xml:space="preserve">
          <source>Falcon also fully supports &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;CPython&lt;/a&gt; 2.6-2.7, and 3.3+.</source>
          <target state="translated">Falconは&lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;CPython&lt;/a&gt; 2.6-2.7、および3.3+ も完全にサポートしています。</target>
        </trans-unit>
        <trans-unit id="002b14694690e328be54f6c23431c08d2c5df58d" translate="yes" xml:space="preserve">
          <source>Falcon also fully supports &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;CPython&lt;/a&gt; 2.7 and 3.5+.</source>
          <target state="translated">ファルコンは、完全にサポート &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;はCPython&lt;/a&gt; 2.7および3.5+。</target>
        </trans-unit>
        <trans-unit id="2b15873bbe86c4e87696ba5782f4adcfc5427ceb" translate="yes" xml:space="preserve">
          <source>Falcon also provides a generic &lt;code&gt;HTTPStatus&lt;/code&gt; class. Raise this class from a hook, middleware, or a responder to stop handling the request and skip to the response handling. It takes status, additional headers and body as input arguments.</source>
          <target state="translated">Falconは、一般的な &lt;code&gt;HTTPStatus&lt;/code&gt; クラスも提供します。フック、ミドルウェア、またはレスポンダーからこのクラスを発生させて、要求の処理を停止し、応答処理にスキップします。ステータス、追加のヘッダー、本文を入力引数として受け取ります。</target>
        </trans-unit>
        <trans-unit id="a04fb937268d26a387dd343dc484a3b4a6f67c71" translate="yes" xml:space="preserve">
          <source>Falcon also supports more complex parameterized path segments that contain multiple values. For example, a version control API might use the following route template for diffing two code branches:</source>
          <target state="translated">Falcon は複数の値を含むより複雑なパラメータ化されたパスセグメントもサポートしています。例えば、バージョン管理APIは2つのコードブランチを差分するために以下のルートテンプレートを使用するかもしれません。</target>
        </trans-unit>
        <trans-unit id="dcfee5f0c0c8cdbc7927b7371d72f84d6a292203" translate="yes" xml:space="preserve">
          <source>Falcon apps work with any WSGI server, and run great under CPython 2.7, PyPy, and CPython 3.3+.</source>
          <target state="translated">FalconのアプリはWSGIサーバでも動作し、CPython 2.7、PyPy、CPython 3.3+でも動作します。</target>
        </trans-unit>
        <trans-unit id="64c4fff7a7d8955f63960d5d796cce83989a3f01" translate="yes" xml:space="preserve">
          <source>Falcon apps work with any WSGI server, and run like a champ under CPython 2.7/3.5+ and PyPy.</source>
          <target state="translated">Falconのアプリは、WSGIサーバであればどのようなものでも動作し、CPython 2.7/3.5+とPyPyでも問題なく動作します。</target>
        </trans-unit>
        <trans-unit id="30ff7f06ee541aa1bfc890408dff2d83e05b1ddb" translate="yes" xml:space="preserve">
          <source>Falcon attempts to serialize the &lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; instance using its &lt;a href=&quot;../api/errors#falcon.HTTPError.to_json&quot;&gt;&lt;code&gt;to_json()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../api/errors#falcon.HTTPError.to_xml&quot;&gt;&lt;code&gt;to_xml()&lt;/code&gt;&lt;/a&gt; methods, according to the Accept header in the request. If neither JSON nor XML is acceptable, no response body will be generated. You can override this behavior if needed via &lt;a href=&quot;../api/api#falcon.API.set_error_serializer&quot;&gt;&lt;code&gt;set_error_serializer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Falcon は、リクエストのAcceptヘッダーに従って、&lt;a href=&quot;../api/errors#falcon.HTTPError.to_json&quot;&gt; &lt;code&gt;to_json()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../api/errors#falcon.HTTPError.to_xml&quot;&gt; &lt;code&gt;to_xml()&lt;/code&gt; &lt;/a&gt;メソッドを使用して&lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;インスタンスをシリアル化しようとします。JSONもXMLも受け入れられない場合、応答本文は生成されません。この動作は、必要に応じて&lt;a href=&quot;../api/api#falcon.API.set_error_serializer&quot;&gt; &lt;code&gt;set_error_serializer()&lt;/code&gt; で&lt;/a&gt;オーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="3ce0df4c5f0585e0379acc2e86a5c07583ed7f3b" translate="yes" xml:space="preserve">
          <source>Falcon can process a list of &lt;code&gt;tuple&lt;/code&gt; slightly faster than a &lt;code&gt;dict&lt;/code&gt;.</source>
          <target state="translated">Falconは &lt;code&gt;dict&lt;/code&gt; よりも少し速く &lt;code&gt;tuple&lt;/code&gt; リストを処理できます。</target>
        </trans-unit>
        <trans-unit id="3e4c286f6834327372f62f90146b2f304b8c7fc9" translate="yes" xml:space="preserve">
          <source>Falcon can process a list of tuples slightly faster than a dict.</source>
          <target state="translated">Falconはタプルのリストをdictよりもわずかに速く処理することができます。</target>
        </trans-unit>
        <trans-unit id="48d16cef4fb3abb175934bc1380b83df78c1de40" translate="yes" xml:space="preserve">
          <source>Falcon conforms to the standard &lt;a href=&quot;https://www.python.org/dev/peps/pep-0333/&quot;&gt;WSGI protocol&lt;/a&gt; that most Python web applications have been using since 2003. If you have deployed Python applications like Django, Flask, or others, you will find yourself quite at home with Falcon and your standard Apache/mod_wsgi, gunicorn, or other WSGI servers should suffice.</source>
          <target state="translated">Falconは、ほとんどのPython Webアプリケーションが2003年以降使用している標準の&lt;a href=&quot;https://www.python.org/dev/peps/pep-0333/&quot;&gt;WSGIプロトコルに&lt;/a&gt;準拠しています。Django、FlaskなどのPythonアプリケーションをデプロイしている場合は、Falconと標準のApache / mod_wsgi、gunicorn、または他のWSGIサーバーで十分です。</target>
        </trans-unit>
        <trans-unit id="3e190e5b799c3b82e2170b9965b1ae27cddb2a45" translate="yes" xml:space="preserve">
          <source>Falcon currently only provides a JSON Schema media validator; however, JSON Schema is very versatile and can be used to validate any deserialized media type that JSON also supports (i.e. dicts, lists, etc).</source>
          <target state="translated">Falconは現在、JSON Schemaメディアバリデータのみを提供しています。しかし、JSON Schemaは非常に汎用性が高く、JSONがサポートするあらゆるデシリアライズされたメディアタイプ(すなわち、ディクショ ン、リストなど)をバリデーションするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="b70472072a8b2328159abb8119444c3bff614b91" translate="yes" xml:space="preserve">
          <source>Falcon currently only supports partial negotiation out of the box. By default, when the &lt;code&gt;media&lt;/code&gt; attribute is used it attempts to de/serialize based on the &lt;code&gt;Content-Type&lt;/code&gt; header value. The missing link that Falcon doesn&amp;rsquo;t provide is the connection between the &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;&lt;code&gt;falcon.Request&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Accept&lt;/code&gt; header provided by a user and the &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt;&lt;code&gt;falcon.Response&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Content-Type&lt;/code&gt; header.</source>
          <target state="translated">Falconは現在、箱から出してすぐに部分的な交渉のみをサポートしています。デフォルトでは、 &lt;code&gt;media&lt;/code&gt; 属性が使用されると、 &lt;code&gt;Content-Type&lt;/code&gt; ヘッダー値に基づいてデシリアライズを試みます。 Falconが提供しないミッシングリンクは、ユーザーが提供する&lt;a href=&quot;request_and_response#falcon.Request&quot;&gt; &lt;code&gt;falcon.Request&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Accept&lt;/code&gt; ヘッダーと&lt;a href=&quot;request_and_response#falcon.Response&quot;&gt; &lt;code&gt;falcon.Response&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Content-Type&lt;/code&gt; ヘッダーの間の接続です。</target>
        </trans-unit>
        <trans-unit id="0fc0369a56969f0cee94796a740ef9a8bea55713" translate="yes" xml:space="preserve">
          <source>Falcon defaults to treating commas in a query string as literal characters delimiting a comma separated list. For example, given the query string &lt;code&gt;?c=1,2,3&lt;/code&gt;, Falcon defaults to adding this to your &lt;code&gt;request.params&lt;/code&gt; dictionary as &lt;code&gt;{'c': ['1', '2', '3']}&lt;/code&gt;. If you attempt to use JSON in the value of the query string, for example &lt;code&gt;?c={'a':1,'b':2}&lt;/code&gt;, the value will get added to your &lt;code&gt;request.params&lt;/code&gt; in a way that you probably don&amp;rsquo;t expect: &lt;code&gt;{'c': [&quot;{'a':1&quot;, &quot;'b':2}&quot;]}&lt;/code&gt;.</source>
          <target state="translated">Falconはデフォルトで、クエリ文字列内のコンマを、コンマ区切りのリストを区切るリテラル文字として扱います。たとえば、クエリ文字列 &lt;code&gt;?c=1,2,3&lt;/code&gt; を指定すると、Falconはデフォルトでこれを &lt;code&gt;{'c': ['1', '2', '3']}&lt;/code&gt; として &lt;code&gt;request.params&lt;/code&gt; 辞書に追加します。 &lt;code&gt;?c={'a':1,'b':2}&lt;/code&gt; 、クエリ文字列の値にJSONを使用しようとすると、おそらく値が &lt;code&gt;request.params&lt;/code&gt; に追加されます。'T期待 &lt;code&gt;{'c': [&quot;{'a':1&quot;, &quot;'b':2}&quot;]}&lt;/code&gt; {' C '：[ &quot;{ ''：1&quot;、 &quot; 'B'：2}&quot;]}。</target>
        </trans-unit>
        <trans-unit id="19700eeabd9858730b3a56693543cccf728c68d1" translate="yes" xml:space="preserve">
          <source>Falcon defines a set of exceptions that can be raised within a middleware method, hook, or responder in order to trigger a 3xx (Redirection) response to the client. Raising one of these classes short-circuits request processing in a manner similar to raising an instance or subclass of &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Falconは、クライアントへの3xx（リダイレクト）応答をトリガーするために、ミドルウェアメソッド、フック、またはレスポンダ内で発生する可能性のある一連の例外を定義します。これらのクラスの1つを発生させると、&lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; の&lt;/a&gt;インスタンスまたはサブクラスを発生させるのと同様の方法で要求処理が短絡します。</target>
        </trans-unit>
        <trans-unit id="041110baeb8cec21e5eb2d4fcbf01352e7364e95" translate="yes" xml:space="preserve">
          <source>Falcon depends on &lt;code&gt;six&lt;/code&gt; and &lt;code&gt;python-mimeparse&lt;/code&gt;. &lt;code&gt;python-mimeparse&lt;/code&gt; is a better-maintained fork of the similarly named &lt;code&gt;mimeparse&lt;/code&gt; project. Normally the correct package will be selected by Falcon&amp;rsquo;s &lt;code&gt;setup.py&lt;/code&gt;. However, if you are using an alternate strategy to manage dependencies, please take care to install the correct package in order to avoid errors.</source>
          <target state="translated">Falconは &lt;code&gt;six&lt;/code&gt; と &lt;code&gt;python-mimeparse&lt;/code&gt; に依存しています。 &lt;code&gt;python-mimeparse&lt;/code&gt; は、同様に命名された &lt;code&gt;mimeparse&lt;/code&gt; プロジェクトのよりよく維持されたフォークです。通常、正しいパッケージはFalconの &lt;code&gt;setup.py&lt;/code&gt; によって選択されます。ただし、依存関係を管理するために別の戦略を使用している場合は、エラーを回避するために、正しいパッケージをインストールするように注意してください。</target>
        </trans-unit>
        <trans-unit id="2dc109fe672187d17f3ee0103d06304b59bf42a0" translate="yes" xml:space="preserve">
          <source>Falcon does not currently support parsing files submitted by an HTTP form (&lt;code&gt;multipart/form-data&lt;/code&gt;), although we do plan to add this feature in a future version. In the meantime, you can use the standard &lt;code&gt;cgi.FieldStorage&lt;/code&gt; class to parse the request:</source>
          <target state="translated">Falconは現在、HTTPフォーム（ &lt;code&gt;multipart/form-data&lt;/code&gt; ）によって送信されたファイルの解析をサポートしていませんが、将来のバージョンでこの機能を追加する予定です。それまでは、標準の &lt;code&gt;cgi.FieldStorage&lt;/code&gt; クラスを使用してリクエストを解析できます。</target>
        </trans-unit>
        <trans-unit id="893fc520da135bd087daa58536d9df61e8adcf13" translate="yes" xml:space="preserve">
          <source>Falcon does not require the installation of any other packages, although if Cython has been installed into the environment, it will be used to optimize the framework as explained above.</source>
          <target state="translated">Falcon は他のパッケージのインストールを必要としませんが、もし Cython が環境にインストールされている場合は、上記で説明したようにフレームワークを最適化するために使用されます。</target>
        </trans-unit>
        <trans-unit id="178a7f28b5f4652fbfd18ffcf548fb18a2a0551b" translate="yes" xml:space="preserve">
          <source>Falcon expects form-encoded request bodies to be encoded according to the standard W3C algorithm (see also &lt;a href=&quot;http://goo.gl/6rlcux&quot;&gt;http://goo.gl/6rlcux&lt;/a&gt;).</source>
          <target state="translated">Falconは、フォームでエンコードされたリクエスト本文が標準のW3Cアルゴリズムに従ってエンコードされることを期待しています（&lt;a href=&quot;http://goo.gl/6rlcux&quot;&gt;http://goo.gl/6rlcux&lt;/a&gt;も参照）。</target>
        </trans-unit>
        <trans-unit id="e3ea1b124e1240e3e9bf53d95b82cc6d3f0b08b5" translate="yes" xml:space="preserve">
          <source>Falcon generally tries to minimize the number of objects that it instantiates. It does this for two reasons: first, to avoid the expense of creating the object, and second to reduce memory usage by reducing the total number of objects required under highly concurrent workloads. Therefore, when adding a route, Falcon requires an &lt;em&gt;instance&lt;/em&gt; of your resource class, rather than the class type. That same instance will be used to serve all requests coming in on that route.</source>
          <target state="translated">Falconは通常、インスタンス化するオブジェクトの数を最小限に抑えようとします。これを行う理由は2つあります。1つはオブジェクトの作成費用を回避するため、もう1つは同時実行性の高いワークロードで必要なオブジェクトの総数を減らすことでメモリ使用量を削減するためです。したがって、ルートを追加する場合、Falconはクラスタイプではなく、リソースクラスの&lt;em&gt;インスタンス&lt;/em&gt;を必要とし&lt;em&gt;ます&lt;/em&gt;。その同じインスタンスが、そのルートで着信するすべてのリクエストを処理するために使用されます。</target>
        </trans-unit>
        <trans-unit id="3f09e0064f3e01c26b36cb0375af89d26a5a5266" translate="yes" xml:space="preserve">
          <source>Falcon generally tries to minimize the number of objects that it instantiates. It does this for two reasons: first, to avoid the expense of creating the object, and second to reduce memory usage. Therefore, when adding a route, Falcon requires an &lt;em&gt;instance&lt;/em&gt; of your resource class, rather than the class type. That same instance will be used to serve all requests coming in on that route.</source>
          <target state="translated">Falconは通常、インスタンス化するオブジェクトの数を最小限に抑えようとします。これには2つの理由があります。1つはオブジェクトの作成にかかる費用を回避するため、もう1つはメモリ使用量を減らすためです。したがって、ルートを追加する場合、Falconはクラスタイプではなく、リソースクラスの&lt;em&gt;インスタンス&lt;/em&gt;を必要とし&lt;em&gt;ます&lt;/em&gt;。その同じインスタンスが、そのルートで着信するすべての要求を処理するために使用されます。</target>
        </trans-unit>
        <trans-unit id="d1b91eb49c14b6998d3fd7c99d4b838195c4670f" translate="yes" xml:space="preserve">
          <source>Falcon is a WSGI framework and as such does not serve HTTP requests directly. However, you can get most of the benefits of HTTP/2 by simply deploying any HTTP/2-compliant web server or load balancer in front of your app to translate between HTTP/2 and HTTP/1.1. Eventually we expect that Python web servers (such as uWSGI) will support HTTP/2 natively, eliminating the need for a translation layer.</source>
          <target state="translated">Falcon は WSGI フレームワークであり、HTTP リクエストを直接提供しません。しかし、HTTP/2とHTTP/1.1の間を変換するために、HTTP/2に準拠したウェブサーバやロードバランサをアプリの前に配置するだけで、HTTP/2の利点のほとんどを得ることができます。最終的には、Pythonウェブサーバー(uWSGIなど)がHTTP/2をネイティブにサポートし、翻訳レイヤーの必要性を排除することが期待されています。</target>
        </trans-unit>
        <trans-unit id="08add0fc9564a2148338ad5c29cc77a0f80535ad" translate="yes" xml:space="preserve">
          <source>Falcon is a minimalist WSGI library for building speedy web APIs and app backends. We like to think of Falcon as the &lt;code&gt;Dieter Rams&lt;/code&gt; of web frameworks.</source>
          <target state="translated">Falconは、高速なWeb APIとアプリバックエンドを構築するためのシンプルなWSGIライブラリです。ファルコンはウェブフレームワークの &lt;code&gt;Dieter Rams&lt;/code&gt; と考えるのが好きです。</target>
        </trans-unit>
        <trans-unit id="ce64070b7a41f29416d6b0a95631568828ed2fe6" translate="yes" xml:space="preserve">
          <source>Falcon is designed for applications that require a high level of customization or performance tuning. The framework&amp;rsquo;s minimalist design frees the developer to select the best strategies and 3rd-party packages for the task at hand.</source>
          <target state="translated">Falconは、高度なカスタマイズまたはパフォーマンスチューニングを必要とするアプリケーション向けに設計されています。フレームワークのミニマリストデザインにより、開発者は目前のタスクに最適な戦略とサードパーティパッケージを選択できます。</target>
        </trans-unit>
        <trans-unit id="08927384fe350eda2d01fb26bf3840a05b37b6fe" translate="yes" xml:space="preserve">
          <source>Falcon is released under the terms of the &lt;a href=&quot;http://opensource.org/licenses/Apache-2.0&quot;&gt;Apache 2.0 License&lt;/a&gt;. This means that you can use it in your commercial applications without having to also open-source your own code. It also means that if someone happens to contribute code that is associated with a patent, you are granted a free license to use said patent. That&amp;rsquo;s a pretty sweet deal.</source>
          <target state="translated">Falconは、&lt;a href=&quot;http://opensource.org/licenses/Apache-2.0&quot;&gt;Apache 2.0ライセンスの&lt;/a&gt;条件に基づいてリリースされます。つまり、独自のコードをオープンソースにすることなく、商用アプリケーションで使用できます。また、誰かが特許に関連付けられているコードを寄付した場合、その特許を使用する無料のライセンスが付与されます。それはかなり甘い取引です。</target>
        </trans-unit>
        <trans-unit id="e693fff89fba4cc021a57b3ebb6d7f3af5f9c8c5" translate="yes" xml:space="preserve">
          <source>Falcon is used around the world by a growing number of organizations, including:</source>
          <target state="translated">ファルコンは世界中で使用されており、以下のような組織が増えています。</target>
        </trans-unit>
        <trans-unit id="ebec94c9185cdd938b233168f02d7f9a44883e86" translate="yes" xml:space="preserve">
          <source>Falcon makes it easy to efficiently serve static files by simply assigning an open file to &lt;code&gt;resp.stream&lt;/code&gt;&lt;a href=&quot;tutorial#tutorial-serving-images&quot;&gt;as demonstrated in the tutorial&lt;/a&gt;. You can also serve an entire directory of files via &lt;a href=&quot;../api/api#falcon.API.add_static_route&quot;&gt;&lt;code&gt;falcon.API.add_static_route()&lt;/code&gt;&lt;/a&gt;. However, if possible, it is best to serve static files directly from a web server like Nginx, or from a CDN.</source>
          <target state="translated">Falconを使用すると&lt;a href=&quot;tutorial#tutorial-serving-images&quot;&gt;、チュートリアルで示されているように&lt;/a&gt;、オープンファイルを &lt;code&gt;resp.stream&lt;/code&gt; に割り当てるだけで、静的ファイルを簡単に効率的に処理できます。&lt;a href=&quot;../api/api#falcon.API.add_static_route&quot;&gt; &lt;code&gt;falcon.API.add_static_route()&lt;/code&gt; を&lt;/a&gt;介してファイルのディレクトリ全体を提供することもできます。ただし、可能であれば、NginxなどのWebサーバーから直接、またはCDNから静的ファイルを提供することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="579f5aec8b920abd906a5ff47a0e1cda2ece2346" translate="yes" xml:space="preserve">
          <source>Falcon provides a list of constants for common &lt;a href=&quot;http://httpstatus.es&quot;&gt;HTTP response status codes&lt;/a&gt;.</source>
          <target state="translated">Falconは、一般的な&lt;a href=&quot;http://httpstatus.es&quot;&gt;HTTP応答ステータスコード&lt;/a&gt;の定数のリストを提供します。</target>
        </trans-unit>
        <trans-unit id="4b8849afcd8ec22e51fd14346744d2d18826e039" translate="yes" xml:space="preserve">
          <source>Falcon provides a number of constants for common status codes. They all start with the &lt;code&gt;HTTP_&lt;/code&gt; prefix, as in: &lt;code&gt;falcon.HTTP_204&lt;/code&gt;.</source>
          <target state="translated">Falconは、一般的なステータスコード用にいくつかの定数を提供します。これらはすべて、 &lt;code&gt;HTTP_&lt;/code&gt; ように、HTTP_接頭辞で &lt;code&gt;falcon.HTTP_204&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="ca003e1b7eda3901a9295ddc490c2fe136e79263" translate="yes" xml:space="preserve">
          <source>Falcon provides a number of exception classes that can be raised to redirect the client to a different location (see also &lt;a href=&quot;../api/redirects#redirects&quot;&gt;Redirection&lt;/a&gt;).</source>
          <target state="translated">Falconは、クライアントを別の場所にリダイレクトするために発生させることができるいくつかの例外クラスを提供します（&lt;a href=&quot;../api/redirects#redirects&quot;&gt;Redirection&lt;/a&gt;も参照）。</target>
        </trans-unit>
        <trans-unit id="cc047f388844ceeb1fdcecbb806c60707a5a94b4" translate="yes" xml:space="preserve">
          <source>Falcon routes incoming requests to resources based on a set of URI templates. If the path requested by the client matches the template for a given route, the request is then passed on to the associated resource for processing.</source>
          <target state="translated">Falconは一連のURIテンプレートに基づいて、入ってくるリクエストをリソー スにルーティングします。クライアントによってリクエストされたパスが与えられたルートのテンプレートにマッチする場合、 リクエストは処理のために関連するリソースに渡されます。</target>
        </trans-unit>
        <trans-unit id="0974014c5d0f223b7da30099352aa5920a97f31b" translate="yes" xml:space="preserve">
          <source>Falcon skips processing the response body when, according to the HTTP spec, no body should be returned. If the client sends a HEAD request, the framework will always return an empty body. Falcon will also return an empty body whenever the response status is any of the following:</source>
          <target state="translated">Falcon は HTTP の仕様によれば、ボディが返されるべきではない場合、レスポンスボディの処理をスキップします。クライアントがHEADリクエストを送る場合、フレームワークは常に空のボディを返します。また、Falconはレスポンスステータスが以下のいずれかである場合はいつでも空のボディを返します。</target>
        </trans-unit>
        <trans-unit id="ec2cf57886dfd94a138ab528debe4d7f89ff1901" translate="yes" xml:space="preserve">
          <source>Falcon speaks WSGI, and so in order to serve a Falcon app, you will need a WSGI server. Gunicorn and uWSGI are some of the more popular ones out there, but anything that can load a WSGI app will do.</source>
          <target state="translated">FalconはWSGIを話すので、Falconアプリを提供するためにはWSGIサーバが必要になります。GunicornとuWSGIはそこにあるよりポピュラーなもののいくつかですが、WSGIアプリをロードできるものであれば何でもよいでしょう。</target>
        </trans-unit>
        <trans-unit id="fd572600798963641bc96fba40722fd2b796abec" translate="yes" xml:space="preserve">
          <source>Falcon supports &lt;a href=&quot;../api/testing#testing&quot;&gt;testing&lt;/a&gt; its &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; object by simulating HTTP requests.</source>
          <target state="translated">Falconは、HTTPリクエストをシミュレートすることにより、その&lt;a href=&quot;../api/api#falcon.API&quot;&gt; &lt;code&gt;API&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;../api/testing#testing&quot;&gt;テストを&lt;/a&gt;サポートしています。</target>
        </trans-unit>
        <trans-unit id="7b608045782856dd0f7366d158830c89a6ab6a0a" translate="yes" xml:space="preserve">
          <source>Falcon supports &lt;em&gt;before&lt;/em&gt; and &lt;em&gt;after&lt;/em&gt; hooks. You install a hook simply by applying one of the decorators below, either to an individual responder or to an entire resource.</source>
          <target state="translated">Falconは&lt;em&gt;before&lt;/em&gt;フックと&lt;em&gt;after&lt;/em&gt;フックをサポートしています。以下のデコレータの1つを個々のレスポンダまたはリソース全体に適用するだけで、フックをインストールします。</target>
        </trans-unit>
        <trans-unit id="778cb5db8ddb4c6be8b25e475991ac9b618ec18c" translate="yes" xml:space="preserve">
          <source>Falcon supports using any callable as a hook. This allows for using a class instead of a function:</source>
          <target state="translated">Falconは任意のcallableをフックとして使用することをサポートしています。これにより、関数の代わりにクラスを使用することができます。</target>
        </trans-unit>
        <trans-unit id="00b805955b6ca46c1f5fe233004ea2255ebc74ef" translate="yes" xml:space="preserve">
          <source>Falcon talks, podcasts, and blog posts</source>
          <target state="translated">ファルコントーク、ポッドキャスト、ブログ記事</target>
        </trans-unit>
        <trans-unit id="37cf1ea3e0d8774208499ede0becf96035ae0a06" translate="yes" xml:space="preserve">
          <source>Falcon tries to do as little as possible while remaining highly effective.</source>
          <target state="translated">ファルコンは、高い効果を維持しながら、できる限りのことをしようとします。</target>
        </trans-unit>
        <trans-unit id="a04545ece9eb984bf88daa8ff2b345a998f56134" translate="yes" xml:space="preserve">
          <source>Falcon uses Python classes to represent resources. In practice, these classes act as controllers in your application. They convert an incoming request into one or more internal actions, and then compose a response back to the client based on the results of those actions.</source>
          <target state="translated">Falcon はリソースを表現するために Python のクラスを使用します。実際には、これらのクラスはアプリケーション内でコントローラとして動作します。これらのクラスは、入ってきたリクエストを一つ以上の内部アクションに変換し、それらのアクションの結果に基づ いてクライアントへのレスポンスを作成します。</target>
        </trans-unit>
        <trans-unit id="849a3798efb24ec9d4b33aa623a6966d5bca2413" translate="yes" xml:space="preserve">
          <source>Falcon will convert any instance or subclass of &lt;a href=&quot;#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; raised by a responder, hook, or middleware component into an appropriate HTTP response. The default error serializer supports both JSON and XML. If the client indicates acceptance of both JSON and XML with equal weight, JSON will be chosen. Other media types may be supported by overriding the default serializer via &lt;a href=&quot;api#falcon.API.set_error_serializer&quot;&gt;&lt;code&gt;set_error_serializer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Falconは、レスポンダ、フック、またはミドルウェアコンポーネントによって発生した&lt;a href=&quot;#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; の&lt;/a&gt;インスタンスまたはサブクラスを適切なHTTP応答に変換します。デフォルトのエラーシリアライザは、JSONとXMLの両方をサポートしています。クライアントがJSONとXMLの両方を同じ重みで受け入れることを示した場合、JSONが選択されます。他のメディアタイプは、&lt;a href=&quot;api#falcon.API.set_error_serializer&quot;&gt; &lt;code&gt;set_error_serializer()&lt;/code&gt; を&lt;/a&gt;介してデフォルトのシリアライザをオーバーライドすることでサポートされる場合があります。</target>
        </trans-unit>
        <trans-unit id="f168ede4e3323e698d737ecdc8c5ad127f9aa0f6" translate="yes" xml:space="preserve">
          <source>Falcon will format the &lt;code&gt;datetime&lt;/code&gt; as an HTTP date string.</source>
          <target state="translated">Falconは、 &lt;code&gt;datetime&lt;/code&gt; をHTTP日付文字列としてフォーマットします。</target>
        </trans-unit>
        <trans-unit id="faca0002c3cb4cdaf6aba6e84c1ade8a03ce44a7" translate="yes" xml:space="preserve">
          <source>Falcon will re-raise errors that do not inherit from &lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; unless you have registered a custom error handler for that type (see also: &lt;a href=&quot;../api/api#api&quot;&gt;falcon.API&lt;/a&gt;).</source>
          <target state="translated">Falconは、そのタイプのカスタムエラーハンドラーを登録していない限り、&lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; を&lt;/a&gt;継承しないエラーを再生成します（&lt;a href=&quot;../api/api#api&quot;&gt;falcon.API&lt;/a&gt;も参照）。</target>
        </trans-unit>
        <trans-unit id="1c2b0a1663ec6d97a20405737934843e795698cc" translate="yes" xml:space="preserve">
          <source>Falcon will re-raise errors that do not inherit from &lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt;&lt;code&gt;falcon.HTTPError&lt;/code&gt;&lt;/a&gt; unless you have registered a custom error handler for that type.</source>
          <target state="translated">Falconは、そのタイプのカスタムエラーハンドラーを登録していない限り、&lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt; &lt;code&gt;falcon.HTTPError&lt;/code&gt; を&lt;/a&gt;継承しないエラーを再生成します。</target>
        </trans-unit>
        <trans-unit id="3bd4c4a98fb8d43cb5324130f210e9c9146752d1" translate="yes" xml:space="preserve">
          <source>Falcon will try to do this for you, based on the value of &lt;code&gt;resp.body&lt;/code&gt;, &lt;code&gt;resp.data&lt;/code&gt;, or &lt;code&gt;resp.stream_len&lt;/code&gt; (whichever is set in the response, checked in that order.)</source>
          <target state="translated">Falconは、 &lt;code&gt;resp.body&lt;/code&gt; 、 &lt;code&gt;resp.data&lt;/code&gt; 、または &lt;code&gt;resp.stream_len&lt;/code&gt; （応答に設定されている順にチェックされる）の値に基づいて、これを試みます。</target>
        </trans-unit>
        <trans-unit id="ab423a3cc5948032bd50d9ab9b30f959f1c8dfb9" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s API class is a WSGI &amp;ldquo;application&amp;rdquo; that you can host with any standard-compliant WSGI server.</source>
          <target state="translated">FalconのAPIクラスは、標準に準拠した任意のWSGIサーバーでホストできるWSGI「アプリケーション」です。</target>
        </trans-unit>
        <trans-unit id="4590a30c4fd9f3d471e4df058b81f264f33d48ca" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s default router supports the use of field converters to transform a URI template field value. Field converters may also perform simple input validation. For example, the following URI template uses the &lt;code&gt;int&lt;/code&gt; converter to convert the value of &lt;code&gt;tid&lt;/code&gt; to a Python &lt;code&gt;int&lt;/code&gt;, but only if it has exactly eight digits:</source>
          <target state="translated">Falconのデフォルトルーターは、URIテンプレートフィールド値を変換するためのフィールドコンバーターの使用をサポートしています。フィールドコンバータは、単純な入力検証も実行できます。たとえば、次のURIテンプレートは &lt;code&gt;int&lt;/code&gt; コンバーターを使用して &lt;code&gt;tid&lt;/code&gt; の値をPython &lt;code&gt;int&lt;/code&gt; に変換しますが、正確に8桁の場合のみです。</target>
        </trans-unit>
        <trans-unit id="b10d744fcc92ada624416d23e7d377cb1dd9cce9" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s default router uses Python classes to represent resources. In practice, these classes act as controllers in your application. They convert an incoming request into one or more internal actions, and then compose a response back to the client based on the results of those actions. (See also: &lt;a href=&quot;../user/tutorial#tutorial-resources&quot;&gt;Tutorial: Creating Resources&lt;/a&gt;)</source>
          <target state="translated">Falconのデフォルトルーターは、Pythonクラスを使用してリソースを表します。実際には、これらのクラスはアプリケーションのコントローラーとして機能します。受信リクエストを1つ以上の内部アクションに変換し、それらのアクションの結果に基づいてクライアントへの応答を作成します。（参照：&lt;a href=&quot;../user/tutorial#tutorial-resources&quot;&gt;チュートリアル：リソースの作成&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="b4e631bb1721b80046b8797d90b1e9502bc17fd1" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s default routing engine is based on a decision tree that is first compiled into Python code, and then evaluated by the runtime.</source>
          <target state="translated">Falconのデフォルトのルーティングエンジンは、最初にPythonコードにコンパイルされ、次にランタイムによって評価される決定木に基づいています。</target>
        </trans-unit>
        <trans-unit id="e34603de04425064250bd5a732a2557fc5c5ac97" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s design borrows several key concepts from the REST architectural style.</source>
          <target state="translated">Falconの設計は、RESTアーキテクチャスタイルからいくつかの重要な概念を取り入れています。</target>
        </trans-unit>
        <trans-unit id="f5347790147b10c48d6a28d2156722f19b998e0a" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s middleware interface is defined as follows:</source>
          <target state="translated">Falconのミドルウェアインターフェイスは次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="4930d01484a2d41a9c1cec1fc1539c197da8b35c" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s testing framework supports both &lt;code&gt;unittest&lt;/code&gt; and &lt;code&gt;pytest&lt;/code&gt;. In fact, the tutorial in the docs provides an excellent introduction to &lt;a href=&quot;http://falcon.readthedocs.io/en/stable/user/tutorial.html#testing-your-application&quot;&gt;testing Falcon apps with pytest&lt;/a&gt;.</source>
          <target state="translated">Falconのテストフレームワークは、 &lt;code&gt;pytest&lt;/code&gt; とpytestの両方をサポートしてい &lt;code&gt;unittest&lt;/code&gt; 。実際、ドキュメント内のチュートリアルは、&lt;a href=&quot;http://falcon.readthedocs.io/en/stable/user/tutorial.html#testing-your-application&quot;&gt;pytest&lt;/a&gt;を使用したFalconアプリのテストに関する優れた入門書を提供しています。</target>
        </trans-unit>
        <trans-unit id="a9474f3f31577298d109e6165417fc8c0009ebd5" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s testing module contains various test classes and utility functions to support functional testing for both Falcon-based apps and the Falcon framework itself.</source>
          <target state="translated">Falconのテストモジュールには、FalconベースのアプリとFalconフレームワーク自体の両方の機能テストをサポートするさまざまなテストクラスとユーティリティ関数が含まれています。</target>
        </trans-unit>
        <trans-unit id="6f27ed5ed09b48fe5d8714941ba33ef9fb2017cc" translate="yes" xml:space="preserve">
          <source>Fast URI router which compiles its routing logic to Python code.</source>
          <target state="translated">ルーティングロジックをPythonコードにコンパイルする高速なURIルータ。</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="ba9e0d7f6e416856c1efeafa1a9defd902f95ee7" translate="yes" xml:space="preserve">
          <source>Field Converters</source>
          <target state="translated">フィールドコンバータ</target>
        </trans-unit>
        <trans-unit id="5efcf860a76a2093db8b28c2f5d9f80bbf7592a4" translate="yes" xml:space="preserve">
          <source>File-like input object for reading the body of the request, if any. This object provides direct access to the server&amp;rsquo;s data stream and is non-seekable. In order to avoid unintended side effects, and to provide maximum flexibility to the application, Falcon itself does not buffer or spool the data in any way.</source>
          <target state="translated">要求の本文を読み取るためのファイルのような入力オブジェクト（存在する場合）。このオブジェクトは、サーバーのデータストリームへの直接アクセスを提供し、シークできません。意図しない副作用を回避し、アプリケーションに最大の柔軟性を提供するために、Falcon自体はデータのバッファリングやスプールを一切行いません。</target>
        </trans-unit>
        <trans-unit id="3d16028b31f615db31eed649289cd6734da0ae72" translate="yes" xml:space="preserve">
          <source>File-like wrapper around &lt;code&gt;stream&lt;/code&gt; to normalize certain differences between the native input objects employed by different WSGI servers. In particular, &lt;code&gt;bounded_stream&lt;/code&gt; is aware of the expected Content-Length of the body, and will never block on out-of-bounds reads, assuming the client does not stall while transmitting the data to the server.</source>
          <target state="translated">さまざまなWSGIサーバーで使用されるネイティブ入力オブジェクト間の特定の違いを正規化するための &lt;code&gt;stream&lt;/code&gt; ファイルのようなラッパー。特に、 &lt;code&gt;bounded_stream&lt;/code&gt; は本文の予想されるContent-Lengthを認識しており、データがサーバーに送信されている間にクライアントがストールしないと想定して、範囲外の読み取りをブロックすることはありません。</target>
        </trans-unit>
        <trans-unit id="74e180505028745d4a357c0b2af3717366b16a36" translate="yes" xml:space="preserve">
          <source>Finally, if one of the &lt;em&gt;process_response&lt;/em&gt; methods raises an error, or the routed &lt;code&gt;on_*&lt;/code&gt; responder method itself raises an error, the exception will be handled in a similar manner as above. Then, the framework will execute any remaining middleware on the stack.</source>
          <target state="translated">最後に、&lt;em&gt;process_response&lt;/em&gt;メソッドの1つでエラーが発生した場合、またはルーティングされた &lt;code&gt;on_*&lt;/code&gt; レスポンダーメソッド自体でエラーが発生した場合、例外は上記と同様の方法で処理されます。次に、フレームワークはスタック上の残りのミドルウェアを実行します。</target>
        </trans-unit>
        <trans-unit id="1aee5479c01361915b11f6475cf1d3098722f7fb" translate="yes" xml:space="preserve">
          <source>Finally, if one of the &lt;em&gt;process_response&lt;/em&gt; methods raises an error, or the routed on_* responder method itself raises an error, the exception will be handled in a similar manner as above. Then, the framework will execute any remaining middleware on the stack.</source>
          <target state="translated">最後に、&lt;em&gt;process_response&lt;/em&gt;メソッドの1つでエラーが発生した場合、またはルーティングされたon_ *レスポンダメソッド自体でエラーが発生した場合、例外は上記と同様の方法で処理されます。次に、フレームワークはスタック上の残りのミドルウェアを実行します。</target>
        </trans-unit>
        <trans-unit id="2062f22f892474a055e42a67082eb1e65e2679b3" translate="yes" xml:space="preserve">
          <source>Finally, restart Gunicorn and then try sending a POST request to the resource from the command line (substituting &lt;code&gt;test.png&lt;/code&gt; for a path to any PNG you like.)</source>
          <target state="translated">最後に、Gunicornを再起動してから、コマンドラインからリソースにPOSTリクエストを送信してみてください（好きなPNGへのパスを &lt;code&gt;test.png&lt;/code&gt; に置き換えてください）。</target>
        </trans-unit>
        <trans-unit id="94bbc7814565d1527c8c56ae061c43e7edcc2177" translate="yes" xml:space="preserve">
          <source>Finally, start (or restart) NGINX:</source>
          <target state="translated">最後にNGINXを起動(または再起動)します。</target>
        </trans-unit>
        <trans-unit id="c711251063e4abf5f1ad85c6cc6e8d8c49986a95" translate="yes" xml:space="preserve">
          <source>Finally, to build Falcon&amp;rsquo;s docs from source, simply run:</source>
          <target state="translated">最後に、ソースからFalconのドキュメントをビルドするには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="3c9d82f77c6b3f084561de3044e7ac19b2e49691" translate="yes" xml:space="preserve">
          <source>Finally, we need to update the test code. Modify &lt;code&gt;test_app.py&lt;/code&gt; to look similar to this:</source>
          <target state="translated">最後に、テストコードを更新する必要があります。 &lt;code&gt;test_app.py&lt;/code&gt; を次のように変更します。</target>
        </trans-unit>
        <trans-unit id="058bfd44e6c504c52fbe2877760c624f7fed27e4" translate="yes" xml:space="preserve">
          <source>First Steps</source>
          <target state="translated">はじめの一歩</target>
        </trans-unit>
        <trans-unit id="041010aa1d1724de15abf3bf3c4d85802c02cbe2" translate="yes" xml:space="preserve">
          <source>First, create a &lt;code&gt;tests&lt;/code&gt; directory with &lt;code&gt;__init__.py&lt;/code&gt; and a test module (&lt;code&gt;test_app.py&lt;/code&gt;) inside it. The project&amp;rsquo;s structure should now look like this:</source>
          <target state="translated">まず、作成 &lt;code&gt;tests&lt;/code&gt; のディレクトリを &lt;code&gt;__init__.py&lt;/code&gt; とテストモジュール（ &lt;code&gt;test_app.py&lt;/code&gt; その内部に）。プロジェクトの構造は次のようになります。</target>
        </trans-unit>
        <trans-unit id="4bb0897f5b5514300c14b7b964e8e8d400348082" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s check the incoming media type when something is posted to make sure it is a common image type. We&amp;rsquo;ll implement this with a &lt;code&gt;before&lt;/code&gt; hook.</source>
          <target state="translated">まず、何かが投稿されたときに受信メディアタイプをチェックして、それが一般的な画像タイプであることを確認しましょう。これを &lt;code&gt;before&lt;/code&gt; フックで実装します。</target>
        </trans-unit>
        <trans-unit id="fdbb4a98e2aaf92a1011f190525ebfa76a55f0f8" translate="yes" xml:space="preserve">
          <source>Flags a method as deprecated.</source>
          <target state="translated">メソッドに非推奨のフラグを付けます。</target>
        </trans-unit>
        <trans-unit id="255a145f34e8afe2b573a9b10d240f6a23db5466" translate="yes" xml:space="preserve">
          <source>For Python 2, you will also need to install the &lt;code&gt;mock&lt;/code&gt; package:</source>
          <target state="translated">Python 2の場合は、 &lt;code&gt;mock&lt;/code&gt; パッケージもインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="69e6ed15dfcbc969ed7ad440d0b1cd59e4d7755b" translate="yes" xml:space="preserve">
          <source>For a slight performance cost, you may instead wish to use &lt;a href=&quot;#falcon.Request.bounded_stream&quot;&gt;&lt;code&gt;bounded_stream&lt;/code&gt;&lt;/a&gt;, which wraps the native WSGI input object to normalize its behavior.</source>
          <target state="translated">わずかなパフォーマンスコストのために、代わりに&lt;a href=&quot;#falcon.Request.bounded_stream&quot;&gt; &lt;code&gt;bounded_stream&lt;/code&gt; &lt;/a&gt;を使用できます。これは、ネイティブのWSGI入力オブジェクトをラップしてその動作を正規化します。</target>
        </trans-unit>
        <trans-unit id="5cf9f267637b2c329df93fff3076285d054119f7" translate="yes" xml:space="preserve">
          <source>For byte ranges, failing to overlap the current extent means that the first-byte-pos of all of the byte-range-spec values were greater than the current length of the selected representation. When this status code is generated in response to a byte-range request, the sender SHOULD generate a Content-Range header field specifying the current length of the selected representation.</source>
          <target state="translated">バイト範囲の場合、現在のエクステントとのオーバーラップに失敗するということ は、すべてのバイト範囲指定値の最初のバイトポスが選択された表現の現在の長さ よりも大きかったことを意味する。このステータスコードがバイト範囲リクエストに応答して生成されるとき、 送信者は選択された表現の現在の長さを指定するContent-Rangeヘッダー フィールドを生成するべきである[SHOULD]。</target>
        </trans-unit>
        <trans-unit id="dda90eb3fe1e5e905586c5529ea3e4f2a417a925" translate="yes" xml:space="preserve">
          <source>For dynamically-generated content, you can choose to not set &lt;code&gt;stream_len&lt;/code&gt;, in which case Falcon will then leave off the Content-Length header, and hopefully your WSGI server will do the Right Thing&amp;trade; (assuming you&amp;rsquo;ve told it to enable keep-alive).</source>
          <target state="translated">動的に生成されたコンテンツの場合、 &lt;code&gt;stream_len&lt;/code&gt; を設定しないように選択できます。この場合、FalconはContent-Lengthヘッダーを省略し、WSGIサーバーがRight Thing&amp;trade;を実行することを望みます（keep-生きている）。</target>
        </trans-unit>
        <trans-unit id="3643e5122ea4ac2aad60cb92defa1d10e5a4cf24" translate="yes" xml:space="preserve">
          <source>For example, consider this hook that validates a POST request for an image resource:</source>
          <target state="translated">例えば、画像リソースに対する POST リクエストを検証するフックを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="221fc3e4cfe443d6a21587b5183e78490e353c8e" translate="yes" xml:space="preserve">
          <source>For example, the following will not block when Content-Length is 0 or the header is missing altogether:</source>
          <target state="translated">例えば、Content-Lengthが0の場合や、ヘッダが完全に欠落している場合は、以下のようにブロックされません。</target>
        </trans-unit>
        <trans-unit id="45b427f81dcfd712a7c5da04118efe6dffe8e737" translate="yes" xml:space="preserve">
          <source>For example, this error condition may occur if an XML request body contains well-formed (i.e., syntactically correct), but semantically erroneous, XML instructions.</source>
          <target state="translated">例えば、このエラー状態は、XMLリクエストボディが、 整った(すなわち、構文的には正しい)が、意味的には誤ったXML命令を含んでいる 場合に発生する可能性がある。</target>
        </trans-unit>
        <trans-unit id="2c0bc344f663c4f3f12474fe11ec5d01fec59fdd" translate="yes" xml:space="preserve">
          <source>For example, with this option enabled, adding a route for &lt;code&gt;'/foo/bar'&lt;/code&gt; implicitly adds a route for &lt;code&gt;'/foo/bar/'&lt;/code&gt;. In other words, requests coming in for either path will be sent to the same resource.</source>
          <target state="translated">たとえば、このオプションを有効にすると、 &lt;code&gt;'/foo/bar'&lt;/code&gt; のルートを追加すると、 &lt;code&gt;'/foo/bar/'&lt;/code&gt; ルートが暗黙的に追加されます。つまり、どちらかのパスに着信するリクエストは、同じリソースに送信されます。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="c3bce093ce3bbf6ade2bae939dfac6cee9debb82" translate="yes" xml:space="preserve">
          <source>For historical reasons, a user agent MAY change the request method from POST to GET for the subsequent request. If this behavior is undesired, the 307 (Temporary Redirect) status code can be used instead.</source>
          <target state="translated">歴史的な理由から、ユーザーエージェントは、後続のリクエストのために リクエストメソッドをPOSTからGETに変更してもよい[MAY]。この動作が望ましくない場合、代わりに307(Temporary Redirect)ステータスコードを使用することができる。</target>
        </trans-unit>
        <trans-unit id="1ae27e90a22cf332be3824c6826ec68d81952688" translate="yes" xml:space="preserve">
          <source>For historical reasons, a user agent MAY change the request method from POST to GET for the subsequent request. If this behavior is undesired, the 308 (Permanent Redirect) status code can be used instead.</source>
          <target state="translated">歴史的な理由から、ユーザーエージェントは、後続のリクエストのために リクエストメソッドをPOSTからGETに変更してもよい[MAY]。この動作が望ましくない場合、代わりに308(Permanent Redirect)ステータスコードを使用することができる。</target>
        </trans-unit>
        <trans-unit id="818d46d689ee45afb12ed2f60e33db0299af824e" translate="yes" xml:space="preserve">
          <source>For more sophisticated use cases, have a look at Falcon add-ons from the community, such as &lt;a href=&quot;https://github.com/lwcolton/falcon-cors&quot;&gt;falcon-cors&lt;/a&gt;, or try one of the generic &lt;a href=&quot;https://pypi.python.org/pypi?%3Aaction=search&amp;amp;term=cors&amp;amp;submit=search&quot;&gt;WSGI CORS libraries available on PyPI&lt;/a&gt;. If you use an API gateway, you might also look into what CORS functionality it provides at that level.</source>
          <target state="translated">より洗練されたユースケースについては、&lt;a href=&quot;https://github.com/lwcolton/falcon-cors&quot;&gt;falcon-cors&lt;/a&gt;などのコミュニティのFalconアドオンを参照するか&lt;a href=&quot;https://pypi.python.org/pypi?%3Aaction=search&amp;amp;term=cors&amp;amp;submit=search&quot;&gt;、PyPIで利用可能な&lt;/a&gt;汎用WSGICORSライブラリの1つを試してください。APIゲートウェイを使用する場合は、そのレベルで提供されるCORS機能を調べることもできます。</target>
        </trans-unit>
        <trans-unit id="cc4dffc7260ca916d7f11e9ebc856e2ed603e171" translate="yes" xml:space="preserve">
          <source>For more sophisticated use cases, have a look at Falcon add-ons from the community, such as &lt;a href=&quot;https://github.com/lwcolton/falcon-cors&quot;&gt;falcon-cors&lt;/a&gt;, or try one of the generic &lt;a href=&quot;https://pypi.python.org/pypi?%3Aaction=search&amp;amp;term=cors&amp;amp;submit=search&quot;&gt;WSGI CORS libraries available on PyPI&lt;/a&gt;. If you use an API gateway, you might also look into what CORS functionaly it provides at that level.</source>
          <target state="translated">より洗練された使用例については、コミュニティからのFalconアドオン（&lt;a href=&quot;https://github.com/lwcolton/falcon-cors&quot;&gt;falcon-cors&lt;/a&gt;など）を参照するか&lt;a href=&quot;https://pypi.python.org/pypi?%3Aaction=search&amp;amp;term=cors&amp;amp;submit=search&quot;&gt;、PyPIで利用可能な&lt;/a&gt;汎用WSGI CORSライブラリの 1つを試してください。APIゲートウェイを使用する場合は、そのレベルで提供されるCORSの機能を調べることもできます。</target>
        </trans-unit>
        <trans-unit id="4d14ccff58aa87b156e3428ef02a686b7e84cec0" translate="yes" xml:space="preserve">
          <source>For setting cookies, see &lt;a href=&quot;#falcon.Response.set_cookie&quot;&gt;&lt;code&gt;set_cookie()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Cookieの設定については、&lt;a href=&quot;#falcon.Response.set_cookie&quot;&gt; &lt;code&gt;set_cookie()&lt;/code&gt; を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="dac53b9260c4ee0c293b6552a0de400aa75706e9" translate="yes" xml:space="preserve">
          <source>For setting cookies, see instead &lt;a href=&quot;#falcon.Response.set_cookie&quot;&gt;&lt;code&gt;set_cookie()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Cookieの設定については、代わりに&lt;a href=&quot;#falcon.Response.set_cookie&quot;&gt; &lt;code&gt;set_cookie()&lt;/code&gt; を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="544cc5dc603722508f8d3b50cc46f77c2a60a2fa" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;secure&lt;/code&gt; cookie attribute to be effective, your application will need to enforce HTTPS.</source>
          <target state="translated">以下のために &lt;code&gt;secure&lt;/code&gt; クッキー属性が有効であることが、あなたのアプリケーションは、HTTPSを強制する必要があります。</target>
        </trans-unit>
        <trans-unit id="d8ed7f8d220685456c08bf8ce6ffafb03dd6de4d" translate="yes" xml:space="preserve">
          <source>For the purposes of this tutorial, we&amp;rsquo;ll assume that you have implemented a way to configure your application, such as with a &lt;code&gt;create_api()&lt;/code&gt; function or a module-level script. This role of this function or script is to supply an instance of &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt;, which implements the standard WSGI callable interface.</source>
          <target state="translated">このチュートリアルでは、 &lt;code&gt;create_api()&lt;/code&gt; 関数やモジュールレベルのスクリプトなどを使用して、アプリケーションを構成する方法を実装していることを前提としています。この関数またはスクリプトのこの役割は、標準のWSGI呼び出し可能インターフェイスを実装する&lt;a href=&quot;../api/api#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; の&lt;/a&gt;インスタンスを提供することです。</target>
        </trans-unit>
        <trans-unit id="8c6b83d507a693fe2d475f11151ec7472ef971f9" translate="yes" xml:space="preserve">
          <source>For this attribute to be effective, your web server or load balancer will need to enforce HTTPS when setting the cookie, as well as in all subsequent requests that require the cookie to be sent back from the client.</source>
          <target state="translated">この属性を有効にするためには、ウェブサーバやロードバランサは、クッキーを設定するときだけでなく、クライア ントからクッキーを送り返すことを要求するそれ以降のすべてのリクエストで HTTPS を適用する必要があります。</target>
        </trans-unit>
        <trans-unit id="1a85e86191485a14dc336d7d44ba6667043b9136" translate="yes" xml:space="preserve">
          <source>From the main project directory, exercise your new test by running pytest against the &lt;code&gt;tests&lt;/code&gt; directory:</source>
          <target state="translated">メインプロジェクトディレクトリから、 &lt;code&gt;tests&lt;/code&gt; ディレクトリに対してpytestを実行して、新しいテストを実行します。</target>
        </trans-unit>
        <trans-unit id="2cdd32ada41f2c934920302feb5dd0666cc082d6" translate="yes" xml:space="preserve">
          <source>Full Unicode support</source>
          <target state="translated">完全なUnicodeサポート</target>
        </trans-unit>
        <trans-unit id="1d9303b0a252dc2ac0eb81f969a7ccf0d5678e03" translate="yes" xml:space="preserve">
          <source>Fully exercising your code is critical to creating a robust application. Let&amp;rsquo;s take a moment to write a test for what&amp;rsquo;s been implemented so far.</source>
          <target state="translated">堅牢なアプリケーションを作成するには、コードを完全に実行することが重要です。ここまでに実装されたもののテストを作成してみましょう。</target>
        </trans-unit>
        <trans-unit id="7e9182b5f484c16d68476ad0e76ae49a9936dc25" translate="yes" xml:space="preserve">
          <source>Functional testing framework for Falcon apps and Falcon itself.</source>
          <target state="translated">Falcon アプリと Falcon 自体のための機能テストフレームワーク。</target>
        </trans-unit>
        <trans-unit id="db391822e28226377a1e6e34d41886f0089f87f2" translate="yes" xml:space="preserve">
          <source>Functional tests</source>
          <target state="translated">機能テスト</target>
        </trans-unit>
        <trans-unit id="804eeb7d7f6dd7bdc678cf2d9c452916c6e20adf" translate="yes" xml:space="preserve">
          <source>Functional tests define the application&amp;rsquo;s behavior from the outside. When using TDD, this can be a more natural place to start as opposed to lower-level unit testing, since it is difficult to anticipate what internal interfaces and components are needed in advance of defining the application&amp;rsquo;s user-facing functionality.</source>
          <target state="translated">機能テストは、外部からのアプリケーションの動作を定義します。TDDを使用する場合、アプリケーションのユーザー向け機能を定義する前に必要な内部インターフェイスとコンポーネントを予測するのが難しいため、これは、低レベルのユニットテストとは対照的に、開始するのにより自然な場所です。</target>
        </trans-unit>
        <trans-unit id="53543df5d4b89ab9d90496b7dbb45eb839738ed7" translate="yes" xml:space="preserve">
          <source>Further Considerations</source>
          <target state="translated">さらなる検討事項</target>
        </trans-unit>
        <trans-unit id="6d42fca63bcec787bb0dd495d1e4c5fa4697b26d" translate="yes" xml:space="preserve">
          <source>Furthermore, the first bytestring yielded from iteration, if any, is prefetched before returning the wrapped iterator in order to ensure the WSGI &lt;code&gt;start_response&lt;/code&gt; function is called even if the WSGI application is a generator.</source>
          <target state="translated">さらに、WSGIアプリケーションがジェネレーターであっても、WSGI &lt;code&gt;start_response&lt;/code&gt; 関数が呼び出されるようにするために、反復から生成された最初のバイト文字列があれば、ラップされたイテレーターを返す前にプリフェッチされます。</target>
        </trans-unit>
        <trans-unit id="ddb28232c5649bf80e5b132a565afdea85dc0469" translate="yes" xml:space="preserve">
          <source>GET responder.</source>
          <target state="translated">GETレスポンダです。</target>
        </trans-unit>
        <trans-unit id="12d9dc6100d29fbc3e17784e3524cc33c739d170" translate="yes" xml:space="preserve">
          <source>GMT offset, which is equivalent to UTC and so is aways 0.</source>
          <target state="translated">GMTオフセットは、UTCと同等であるため、アウェイズ0となります。</target>
        </trans-unit>
        <trans-unit id="4a2087739644c1ed19a2b5f05439c1feb34cb2b5" translate="yes" xml:space="preserve">
          <source>GMT timezone class implementing the &lt;a href=&quot;https://docs.python.org/2/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;datetime.tzinfo&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/2/library/datetime.html#datetime.tzinfo&quot;&gt; &lt;code&gt;datetime.tzinfo&lt;/code&gt; &lt;/a&gt;インターフェイスを実装するGMTタイムゾーンクラス。</target>
        </trans-unit>
        <trans-unit id="1bd721c801e7440e028d11401a8582eac0cf1096" translate="yes" xml:space="preserve">
          <source>GMT timezone class implementing the &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;datetime.tzinfo&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt; &lt;code&gt;datetime.tzinfo&lt;/code&gt; &lt;/a&gt;インターフェイスを実装するGMTタイムゾーンクラス。</target>
        </trans-unit>
        <trans-unit id="8f459ff0e724da57621747ebae67e25b18f6d0be" translate="yes" xml:space="preserve">
          <source>GameState may be thought of as a sub-resource of Game. It is a distinct logical entity encapsulated within a more general Game concept.</source>
          <target state="translated">GameStateは、Gameのサブリソースと考えることができます。これは、より一般的なGameの概念の中にカプセル化された明確な論理的実体です。</target>
        </trans-unit>
        <trans-unit id="7e0cd963d88e66dc3f2f2545a55f5be3771c0ace" translate="yes" xml:space="preserve">
          <source>Generally speaking, Falcon assumes that resource responders (&lt;code&gt;on_get()&lt;/code&gt;, &lt;code&gt;on_post()&lt;/code&gt;, etc.) will, for the most part, do the right thing. In other words, Falcon doesn&amp;rsquo;t try very hard to protect responder code from itself.</source>
          <target state="translated">一般的に言って、Falconはリソースレスポンダ（ &lt;code&gt;on_get()&lt;/code&gt; 、 &lt;code&gt;on_post()&lt;/code&gt; など）が、ほとんどの場合、正しいことを行うと想定しています。言い換えれば、ファルコンはレスポンダーコードをそれ自体から保護するために一生懸命に努力しません。</target>
        </trans-unit>
        <trans-unit id="21cb25fbb11d16eb1e5978d5c482c4cb86a9d261" translate="yes" xml:space="preserve">
          <source>Generally speaking, Falcon assumes that resource responders (such as &lt;code&gt;on_get()&lt;/code&gt;, &lt;code&gt;on_post()&lt;/code&gt;, etc.) will, for the most part, do the right thing. In other words, Falcon doesn&amp;rsquo;t try very hard to protect responder code from itself.</source>
          <target state="translated">一般的に、Falconは、リソースレスポンダ（ &lt;code&gt;on_get()&lt;/code&gt; 、 &lt;code&gt;on_post()&lt;/code&gt; など）が、大部分は正しいことを行うと想定しています。言い換えれば、ファルコンはレスポンダーコードをそれ自体から保護するために一生懸命に努力しません。</target>
        </trans-unit>
        <trans-unit id="6dc753913dc92b9c22ce3895189602dccccba2d0" translate="yes" xml:space="preserve">
          <source>Generally you do not need to use this router class directly, as an instance is created by default when the falcon.API class is initialized.</source>
          <target state="translated">一般的に、このルータクラスを直接使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="e570be774d63fbe92ec6be0f1f7936f6f9da8a70" translate="yes" xml:space="preserve">
          <source>Get Help</source>
          <target state="translated">助けを求める</target>
        </trans-unit>
        <trans-unit id="4cb8a23e40c4b83ce13aee431aaf2ad64d22240c" translate="yes" xml:space="preserve">
          <source>Get a bound method of the given object by name.</source>
          <target state="translated">与えられたオブジェクトのバインドされたメソッドを名前で取得します。</target>
        </trans-unit>
        <trans-unit id="0decb86a6b1cccf19ae53419c0d2a59ae3952163" translate="yes" xml:space="preserve">
          <source>Get the name of this timezone.</source>
          <target state="translated">このタイムゾーンの名前を取得します。</target>
        </trans-unit>
        <trans-unit id="15056d31920113c824e17488676d3df1279a400e" translate="yes" xml:space="preserve">
          <source>Get the offset from UTC.</source>
          <target state="translated">UTC からのオフセットを取得します。</target>
        </trans-unit>
        <trans-unit id="8af0beaaa89a8a653ae9bcb84936b517ccf50047" translate="yes" xml:space="preserve">
          <source>Gets both the http status code and description from just a code</source>
          <target state="translated">http のステータスコードと説明文の両方をコードだけから取得します。</target>
        </trans-unit>
        <trans-unit id="53a514a6fadc5324d1356de25696484687f6f994" translate="yes" xml:space="preserve">
          <source>Getting Cookies</source>
          <target state="translated">クッキーの取得</target>
        </trans-unit>
        <trans-unit id="207c7dd0038af9ca412da6559dd3d407efdc77e0" translate="yes" xml:space="preserve">
          <source>Given a JSON value, decode it to an appropriate Python type, (e.g., &lt;code&gt;dict&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, etc.)</source>
          <target state="translated">JSON値を指定して、適切なPythonタイプにデコードします（例： &lt;code&gt;dict&lt;/code&gt; 、 &lt;code&gt;list&lt;/code&gt; 、 &lt;code&gt;str&lt;/code&gt; 、 &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;bool&lt;/code&gt; など）。</target>
        </trans-unit>
        <trans-unit id="a07a90bd5a724ca3e9390ae98424f806ec6c7271" translate="yes" xml:space="preserve">
          <source>Given that a weak entity-tag comparison can be performed by using the &lt;code&gt;==&lt;/code&gt; operator (per the example below), only a &lt;a href=&quot;#falcon.ETag.strong_compare&quot;&gt;&lt;code&gt;strong_compare()&lt;/code&gt;&lt;/a&gt; method is provided.</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; 演算子を使用して弱いエンティティタグの比較を実行できる場合（以下の例による）、&lt;a href=&quot;#falcon.ETag.strong_compare&quot;&gt; &lt;code&gt;strong_compare()&lt;/code&gt; &lt;/a&gt;メソッドのみが提供されます。</target>
        </trans-unit>
        <trans-unit id="da08cc8ffd531f39c85100abde3816296096747f" translate="yes" xml:space="preserve">
          <source>Global, resource, and method hooks</source>
          <target state="translated">グローバル、リソース、メソッドフック</target>
        </trans-unit>
        <trans-unit id="cb84f6989f67fc00b5ea2a19e8557df1df9eef92" translate="yes" xml:space="preserve">
          <source>Go ahead and edit your &lt;code&gt;images.py&lt;/code&gt; file to look something like this:</source>
          <target state="translated">先に進み、 &lt;code&gt;images.py&lt;/code&gt; ファイルを次のように編集します。</target>
        </trans-unit>
        <trans-unit id="bf073fae640ded81eeb7a4cee70faff4a623c16c" translate="yes" xml:space="preserve">
          <source>Guide</source>
          <target state="translated">Guide</target>
        </trans-unit>
        <trans-unit id="459f430ab3c239f6c58c78274d5240c4f2e6f5a6" translate="yes" xml:space="preserve">
          <source>HTTP method requested (e.g., &amp;lsquo;GET&amp;rsquo;, &amp;lsquo;POST&amp;rsquo;, etc.)</source>
          <target state="translated">要求されたHTTPメソッド（例：「GET」、「POST」など）</target>
        </trans-unit>
        <trans-unit id="dc8b7f4fe30e194ee03d8fe4edbebbd36fed2cca" translate="yes" xml:space="preserve">
          <source>HTTP status line (e.g., &amp;lsquo;200 OK&amp;rsquo;). Falcon requires the full status line, not just the code (e.g., 200). This design makes the framework more efficient because it does not have to do any kind of conversion or lookup when composing the WSGI response.</source>
          <target state="translated">HTTPステータス行（例：「200OK」）。Falconには、コード（200など）だけでなく、完全なステータス行が必要です。この設計により、WSGI応答を作成するときに変換やルックアップを行う必要がないため、フレームワークがより効率的になります。</target>
        </trans-unit>
        <trans-unit id="f970b44dd68f2a7b97313d554a71465611301c60" translate="yes" xml:space="preserve">
          <source>HTTP status line, e.g. &amp;lsquo;748 Confounded by Ponies&amp;rsquo;.</source>
          <target state="translated">HTTPステータス行（例：「748ポニーによって交絡」）。</target>
        </trans-unit>
        <trans-unit id="74d985ac8472b9aa46337d05279b47176bc42763" translate="yes" xml:space="preserve">
          <source>HTTP status line, e.g. &amp;lsquo;785 TPS Cover Sheet not attached&amp;rsquo;.</source>
          <target state="translated">HTTPステータス行（例：「785TPSカバーシートが添付されていません」）。</target>
        </trans-unit>
        <trans-unit id="7a46d9fb4b9c45939f090973b2a7d6787e0b8e71" translate="yes" xml:space="preserve">
          <source>HTTP status string given in the response</source>
          <target state="translated">レスポンスで与えられるHTTPステータス文字列</target>
        </trans-unit>
        <trans-unit id="cd3a82fd6705b54f8fb334a7dcd3c47633d6edef" translate="yes" xml:space="preserve">
          <source>HTTPBadRequest: The param was not found in the request, even though</source>
          <target state="translated">HTTPBadRequestです。リクエストの中に param が見つかりませんでした。</target>
        </trans-unit>
        <trans-unit id="30f54d504445ecf5ddb6be219662b25f552c465d" translate="yes" xml:space="preserve">
          <source>HTTPStatus</source>
          <target state="translated">HTTPStatus</target>
        </trans-unit>
        <trans-unit id="185434ef08177b5f6e4b2f54c1806599d820828d" translate="yes" xml:space="preserve">
          <source>HTTPie won&amp;rsquo;t display the image, but you can see that the response headers were set correctly. Just for fun, go ahead and paste the above URI into your browser. The image should display correctly.</source>
          <target state="translated">HTTPieは画像を表示しませんが、応答ヘッダーが正しく設定されていることがわかります。楽しみのために、先ほどのURIをブラウザーに貼り付けてください。画像は正しく表示されます。</target>
        </trans-unit>
        <trans-unit id="d74206995902f4d32b97f064af370c4a682ce655" translate="yes" xml:space="preserve">
          <source>Handler built using Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/2/library/json.html#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Pythonの&lt;a href=&quot;https://docs.python.org/2/library/json.html#module-json&quot;&gt; &lt;code&gt;json&lt;/code&gt; &lt;/a&gt;モジュールを使用して構築されたハンドラー。</target>
        </trans-unit>
        <trans-unit id="e711da3916da77c0800bf8cb5f7b36d4f5ee00e7" translate="yes" xml:space="preserve">
          <source>Handler built using the &lt;code&gt;msgpack&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;msgpack&lt;/code&gt; モジュールを使用して構築されたハンドラー。</target>
        </trans-unit>
        <trans-unit id="362f233bfd36bbe9ffba21ece507104cececa24e" translate="yes" xml:space="preserve">
          <source>Handlers</source>
          <target state="translated">Handlers</target>
        </trans-unit>
        <trans-unit id="51e24336e3a240690ed33dab57d11867cbc8baa9" translate="yes" xml:space="preserve">
          <source>Headers as a case-insensitive &lt;code&gt;dict&lt;/code&gt;-like object, instead of a &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; ではなく、大文字と小文字を区別しない &lt;code&gt;dict&lt;/code&gt; のようなオブジェクトとしてのヘッダー。</target>
        </trans-unit>
        <trans-unit id="f234992da49bd3af66ca0628cee98d2bb88a0fec" translate="yes" xml:space="preserve">
          <source>Headers can be forged by any client or proxy. Use this property with caution and validate all values before using them. Do not rely on the access route to authorize requests.</source>
          <target state="translated">ヘッダは、任意のクライアントまたはプロキシによって偽造される可能性があります。このプロパティは注意して使用し、使用する前にすべての値を検証してください。リクエストを認可するためにアクセスルートに頼らないでください。</target>
        </trans-unit>
        <trans-unit id="1cbc952e8c63914134e2eede89ef63a1c732924d" translate="yes" xml:space="preserve">
          <source>Here is a more involved example that demonstrates reading headers and query parameters, handling errors, and working with request and response bodies.</source>
          <target state="translated">ここでは、ヘッダやクエリパラメータの読み込み、エラーの処理、リクエストやレスポンスのボディの処理を実演する、より複雑な例を紹介します。</target>
        </trans-unit>
        <trans-unit id="8152a6393525a5e7e3dac478683d885ec5438d8b" translate="yes" xml:space="preserve">
          <source>Here is a simple example from Falcon&amp;rsquo;s README, showing how to get started writing an API:</source>
          <target state="translated">以下は、FalconのREADMEの簡単な例で、APIの作成を開始する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="ac88991e7074474f9e5e5fe35be822560c7a2682" translate="yes" xml:space="preserve">
          <source>Here is an example &lt;code&gt;on_get()&lt;/code&gt; method that demonstrates how to use instances of this class:</source>
          <target state="translated">このクラスのインスタンスの使用方法を示す &lt;code&gt;on_get()&lt;/code&gt; メソッドの例を次に示します。</target>
        </trans-unit>
        <trans-unit id="07a7fa14e78fec4c849ca098f2a89191dfd3578a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a quick example to show how all the pieces fit together:</source>
          <target state="translated">以下は、すべてのピースがどのように組み合わされるかを示す簡単な例です。</target>
        </trans-unit>
        <trans-unit id="c764fba7f0ff6cdb79f8d9ac8fe3052d5b821e23" translate="yes" xml:space="preserve">
          <source>Highly-optimized, extensible code base</source>
          <target state="translated">高度に最適化された拡張可能なコードベース</target>
        </trans-unit>
        <trans-unit id="1960acf57d01884941dad63407fee0e4a1984e81" translate="yes" xml:space="preserve">
          <source>Hmm, it looks like we forgot to update &lt;code&gt;app.py&lt;/code&gt;. Let&amp;rsquo;s do that now:</source>
          <target state="translated">うーん、 &lt;code&gt;app.py&lt;/code&gt; の更新を忘れたようです。今それをしましょう：</target>
        </trans-unit>
        <trans-unit id="2f3856f3bee2218da00682ea5300db8d8a163355" translate="yes" xml:space="preserve">
          <source>Hook method for setting up the test fixture before exercising it.</source>
          <target state="translated">運動前に試験治具を設置するためのフック方式。</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="7b0018779bb47a9dcc13f761cf958056725365c3" translate="yes" xml:space="preserve">
          <source>Hooks and middleware components can be used together to authenticate and authorize requests. For example, a middleware component could be used to parse incoming credentials and place the results in &lt;code&gt;req.context&lt;/code&gt;. Downstream components or hooks could then use this information to authorize the request, taking into account the user&amp;rsquo;s role and the requested resource.</source>
          <target state="translated">フックとミドルウェアコンポーネントを一緒に使用して、リクエストを認証および承認できます。たとえば、ミドルウェアコンポーネントを使用して、受信した資格情報を解析し、結果を &lt;code&gt;req.context&lt;/code&gt; に配置できます。下流のコンポーネントまたはフックは、この情報を使用して、ユーザーの役割と要求されたリソースを考慮して、要求を承認できます。</target>
        </trans-unit>
        <trans-unit id="c18d7cf08fffc070bf93293ab30b6d8519ee7285" translate="yes" xml:space="preserve">
          <source>Hooks may inject extra params as needed. For example:</source>
          <target state="translated">フックは必要に応じて追加のパラメータを注入することができます。例えば</target>
        </trans-unit>
        <trans-unit id="75dabf684ed3bc6d1a6f409290fd5326a19a9185" translate="yes" xml:space="preserve">
          <source>Host request header field</source>
          <target state="translated">ホストリクエストヘッダフィールド</target>
        </trans-unit>
        <trans-unit id="0e4c5c11f2b021533848ba507e5b431926b61592" translate="yes" xml:space="preserve">
          <source>Hosting Your App</source>
          <target state="translated">アプリのホスティング</target>
        </trans-unit>
        <trans-unit id="3284516fc702aa3381ee91f529fb505a6a9b4f90" translate="yes" xml:space="preserve">
          <source>How can I access POSTed files?</source>
          <target state="translated">POSTされたファイルにアクセスするにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="333ab3af3faf1249f2db5ff570cb4ea8d9410ed5" translate="yes" xml:space="preserve">
          <source>How can I access POSTed form params?</source>
          <target state="translated">POSTされたフォームのパラメータにアクセスするにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="d8d19bff5a287794a39072e75b8acc621bfd9338" translate="yes" xml:space="preserve">
          <source>How can I handle forward slashes within a route template field?</source>
          <target state="translated">ルートテンプレートのフィールド内で前方のスラッシュを処理するにはどうすればよいですか?</target>
        </trans-unit>
        <trans-unit id="cc1aaa736f830829609114b2c3f429cacd8ade10" translate="yes" xml:space="preserve">
          <source>How can I pass data from a hook to a responder, and between hooks?</source>
          <target state="translated">フックからレスポンダへのデータの受け渡しや、フック間のデータの受け渡しはどうすればよいですか?</target>
        </trans-unit>
        <trans-unit id="3216e9aea9f643cd6106e9f208765e6a6e515671" translate="yes" xml:space="preserve">
          <source>How can I serve a downloadable file with falcon?</source>
          <target state="translated">ダウンロードファイルをハヤブサで出すにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="de6ed4aab870412831ea6988ea299b61c4c34405" translate="yes" xml:space="preserve">
          <source>How can I use resp.media with types like datetime?</source>
          <target state="translated">resp.mediaをdatetimeのような型で使用するには?</target>
        </trans-unit>
        <trans-unit id="ba6194dc1a48a2280c65125c3f83d9c4985b0617" translate="yes" xml:space="preserve">
          <source>How can I write a custom handler for 404 and 500 pages in falcon?</source>
          <target state="translated">ハヤブサで404ページと500ページのカスタムハンドラを書くにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="cc560dba02e30b7739cab96dd96e513e531b2873" translate="yes" xml:space="preserve">
          <source>How do I adapt my code to default context type changes in Falcon 2.0?</source>
          <target state="translated">Falcon 2.0におけるデフォルトのコンテキスト型の変更に自分のコードを適応させるにはどうすればよいですか?</target>
        </trans-unit>
        <trans-unit id="7b21860522f30f3dc475f19c70f084a454f119e0" translate="yes" xml:space="preserve">
          <source>How do I authenticate requests?</source>
          <target state="translated">リクエストを認証するにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="94ce3a35816ed1faa867206cf9038fbb151fff21" translate="yes" xml:space="preserve">
          <source>How do I consume a query string that has a JSON value?</source>
          <target state="translated">JSON値を持つクエリ文字列を消費するには?</target>
        </trans-unit>
        <trans-unit id="66deef7e3e0990bcf9267b9b045b758236b5d2c4" translate="yes" xml:space="preserve">
          <source>How do I generate API documentation for my Falcon API?</source>
          <target state="translated">Falcon API用のAPIドキュメントを生成するにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="2ed4543802c869649472aba006c6c54d69cd7f11" translate="yes" xml:space="preserve">
          <source>How do I implement CORS with Falcon?</source>
          <target state="translated">FalconでCORSを実装するにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="1eb8ab326292bae6d1d935024aba7806b75dc322" translate="yes" xml:space="preserve">
          <source>How do I implement both POSTing and GETing items for the same resource?</source>
          <target state="translated">同じリソースに対してPOSTingとGETの両方の項目を実装するには?</target>
        </trans-unit>
        <trans-unit id="fdb5e7125b22f89c2219059dc5be892639856a4d" translate="yes" xml:space="preserve">
          <source>How do I implement redirects within Falcon?</source>
          <target state="translated">Falcon内でリダイレクトを実装するにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="c1d45e83926ddbc8737d8fe21969f88071ba9b8c" translate="yes" xml:space="preserve">
          <source>How do I manage my database connections?</source>
          <target state="translated">データベースの接続を管理するには?</target>
        </trans-unit>
        <trans-unit id="9b67d4be707d681812bb5ca6b8751b329058b613" translate="yes" xml:space="preserve">
          <source>How do I split requests between my original app and the part I migrated to Falcon?</source>
          <target state="translated">元のアプリとFalconに移行した部分の間でリクエストを分割するにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="ede76eecc9c16803e237e5ffd7622d91e8b3350c" translate="yes" xml:space="preserve">
          <source>How do I test my Falcon app? Can I use pytest?</source>
          <target state="translated">ファルコンアプリをテストするにはどうすればいいですか?pytestは使えますか?</target>
        </trans-unit>
        <trans-unit id="6c2e017967a8cbe44943a76e68fc099c42031585" translate="yes" xml:space="preserve">
          <source>How do I use WSGI middleware with Falcon?</source>
          <target state="translated">WSGIミドルウェアをFalconで使用するには?</target>
        </trans-unit>
        <trans-unit id="2bfc8c222008bb1085635683c090d1522e94d124" translate="yes" xml:space="preserve">
          <source>How does Falcon handle a trailing slash in the request path?</source>
          <target state="translated">Falcon はどのようにしてリクエストパスの末尾のスラッシュを処理しますか?</target>
        </trans-unit>
        <trans-unit id="b26ce7a6a8f8a0a32d2f8b9b0ba0d6c85be14533" translate="yes" xml:space="preserve">
          <source>How is Falcon different?</source>
          <target state="translated">ファルコンはどう違うの?</target>
        </trans-unit>
        <trans-unit id="843d7bd0a3c1afa93060c8650324bda7c63c03a6" translate="yes" xml:space="preserve">
          <source>Hurricane Electric</source>
          <target state="translated">ハリケーン電気</target>
        </trans-unit>
        <trans-unit id="4eb39d4003af70c1800436fc685b665d78da11c6" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;m setting a cookie, but it isn&amp;rsquo;t being returned in subsequent requests.</source>
          <target state="translated">Cookieを設定していますが、後続のリクエストで返されません。</target>
        </trans-unit>
        <trans-unit id="07bc6a3458332df1533ce4adcbfeac79e73c463e" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;m setting a response body, but it isn&amp;rsquo;t getting returned. What&amp;rsquo;s going on?</source>
          <target state="translated">レスポンスボディを設定していますが、返されません。どうしたの？</target>
        </trans-unit>
        <trans-unit id="9817f92df0973b7d3c0d9427d5802b3a4de5302e" translate="yes" xml:space="preserve">
          <source>IP address of the closest client or proxy to the WSGI server.</source>
          <target state="translated">WSGIサーバに最も近いクライアントまたはプロキシのIPアドレス。</target>
        </trans-unit>
        <trans-unit id="e1969032507555baac955c1fd56a05e275f0118e" translate="yes" xml:space="preserve">
          <source>IP address of the original client, as well as any known addresses of proxies fronting the WSGI server.</source>
          <target state="translated">元のクライアントのIPアドレス、およびWSGIサーバーの前面にあるプロキシの既知のアドレス。</target>
        </trans-unit>
        <trans-unit id="06b6ace8ca3f18249e8ba4ea9090c0f34564ce1c" translate="yes" xml:space="preserve">
          <source>Identifier</source>
          <target state="translated">Identifier</target>
        </trans-unit>
        <trans-unit id="771a30ef0179eb30ea16cf6b0020491e841d1b2b" translate="yes" xml:space="preserve">
          <source>Identifier: &lt;code&gt;dt&lt;/code&gt;</source>
          <target state="translated">識別子： &lt;code&gt;dt&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd58f3dd470acd6284b430edeb2cb929d550e96d" translate="yes" xml:space="preserve">
          <source>Identifier: &lt;code&gt;int&lt;/code&gt;</source>
          <target state="translated">識別子： &lt;code&gt;int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf17d27b8fa866f8c33bc4429991365203d6696f" translate="yes" xml:space="preserve">
          <source>Identifier: &lt;code&gt;uuid&lt;/code&gt;</source>
          <target state="translated">識別子： &lt;code&gt;uuid&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8414b4fd22c852e869cd79ac92f078aafd072b6f" translate="yes" xml:space="preserve">
          <source>Idiomatic HTTP error responses</source>
          <target state="translated">イディオマティックな HTTP エラーレスポンス</target>
        </trans-unit>
        <trans-unit id="0c74a037657cdf698222b96f80f9e150f4c86fb4" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;https://pypi.python.org/pypi/ujson&quot;&gt;ujson&lt;/a&gt; is available, Falcon will use it to speed up media (de)serialization, error serialization, and query string parsing. Note that &lt;code&gt;ujson&lt;/code&gt; can actually be slower on PyPy than the standard &lt;code&gt;json&lt;/code&gt; module due to ctypes overhead, and so we recommend only using &lt;code&gt;ujson&lt;/code&gt; with CPython deployments:</source>
          <target state="translated">&lt;a href=&quot;https://pypi.python.org/pypi/ujson&quot;&gt;ujson&lt;/a&gt;が使用可能な場合、Falconはそれを使用して、メディアの（逆）シリアライゼーション、エラーシリアライゼーション、およびクエリ文字列の解析を高速化します。ctypesのオーバーヘッドにより、 &lt;code&gt;ujson&lt;/code&gt; は実際には標準の &lt;code&gt;json&lt;/code&gt; モジュールよりもPyPyで遅くなる可能性があるため、CPythonデプロイメントでのみ &lt;code&gt;ujson&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="49a047f2705427027e640b6027aba5fe610b1dc1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;resp.status&lt;/code&gt; is not set explicitly, it defaults to &lt;code&gt;200 OK&lt;/code&gt;, which is exactly what we want &lt;code&gt;on_get()&lt;/code&gt; to do.</source>
          <target state="translated">&lt;code&gt;resp.status&lt;/code&gt; が明示的に設定されていない場合、デフォルトで &lt;code&gt;200 OK&lt;/code&gt; に設定されます。これは、まさに &lt;code&gt;on_get()&lt;/code&gt; に実行させたいことです。</target>
        </trans-unit>
        <trans-unit id="99f4df4c3e1711835fd178e372a4e0bf62cb8d92" translate="yes" xml:space="preserve">
          <source>If Falcon doesn&amp;rsquo;t have an internet media type handler that supports your use case, you can easily implement your own using the abstract base class provided by Falcon:</source>
          <target state="translated">Falconにユースケースをサポートするインターネットメディアタイプハンドラーがない場合は、Falconによって提供される抽象基本クラスを使用して、独自のハンドラーを簡単に実装できます。</target>
        </trans-unit>
        <trans-unit id="a1d59ab4dd400b9422f6a9f940638e3c4220dd25" translate="yes" xml:space="preserve">
          <source>If JSON Schema does not meet your needs, a custom validator may be implemented in a similar manner to the one above.</source>
          <target state="translated">JSON Schemaがニーズに合わない場合は、上記と同様の方法でカスタムバリデータを実装することができます。</target>
        </trans-unit>
        <trans-unit id="c249cdaef977d215f15022f3ed7709777e4acdf3" translate="yes" xml:space="preserve">
          <source>If a custom media type is used and the type includes a &amp;ldquo;+json&amp;rdquo; or &amp;ldquo;+xml&amp;rdquo; suffix, the default serializer will convert the error to JSON or XML, respectively.</source>
          <target state="translated">カスタムメディアタイプが使用され、タイプに「+ json」または「+ xml」サフィックスが含まれている場合、デフォルトのシリアライザーはエラーをそれぞれJSONまたはXMLに変換します。</target>
        </trans-unit>
        <trans-unit id="e8c3b50ac0992e4e173edb54b07d8c7101094f47" translate="yes" xml:space="preserve">
          <source>If a query param does not have a value, Falcon will by default ignore that parameter. For example, passing &lt;code&gt;'foo'&lt;/code&gt; or &lt;code&gt;'foo='&lt;/code&gt; will result in the parameter being ignored.</source>
          <target state="translated">クエリパラメータに値がない場合、Falconはデフォルトでそのパラメータを無視します。たとえば、 &lt;code&gt;'foo'&lt;/code&gt; または &lt;code&gt;'foo='&lt;/code&gt; を渡すと、パラメータが無視されます。</target>
        </trans-unit>
        <trans-unit id="010a287f7be8095ef272dc51c7b37f154272d1f6" translate="yes" xml:space="preserve">
          <source>If an HTML form is POSTed to the API using the &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt; media type, Falcon can automatically parse the parameters from the request body and merge them into the query string parameters. To enable this functionality, set &lt;a href=&quot;api#falcon.RequestOptions.auto_parse_form_urlencoded&quot;&gt;&lt;code&gt;auto_parse_form_urlencoded&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt; via &lt;a href=&quot;api#falcon.API.req_options&quot;&gt;&lt;code&gt;API.req_options&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">HTMLフォームが&lt;em&gt;application / x-www-form-urlencoded&lt;/em&gt;メディアタイプを使用してAPIにPOSTされる場合、Falconはリクエストの本文からパラメーターを自動的に解析し、クエリ文字列パラメーターにマージできます。この機能を有効にするには、セットが&lt;a href=&quot;api#falcon.RequestOptions.auto_parse_form_urlencoded&quot;&gt; &lt;code&gt;auto_parse_form_urlencoded&lt;/code&gt; &lt;/a&gt;に &lt;code&gt;True&lt;/code&gt; 経由&lt;a href=&quot;api#falcon.API.req_options&quot;&gt; &lt;code&gt;API.req_options&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d644b155276d34eaf6f7a7d8d03d7ccd4551b24c" translate="yes" xml:space="preserve">
          <source>If an HTML form is POSTed to the API using the &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt; media type, and the &lt;a href=&quot;api#falcon.RequestOptions.auto_parse_form_urlencoded&quot;&gt;&lt;code&gt;auto_parse_form_urlencoded&lt;/code&gt;&lt;/a&gt; option is set, the framework will consume &lt;code&gt;stream&lt;/code&gt; in order to parse the parameters and merge them into the query string parameters. In this case, the stream will be left at EOF.</source>
          <target state="translated">HTMLフォームが&lt;em&gt;application / x-www-form-urlencoded&lt;/em&gt;メディアタイプを使用してAPIにPOSTされ、&lt;a href=&quot;api#falcon.RequestOptions.auto_parse_form_urlencoded&quot;&gt; &lt;code&gt;auto_parse_form_urlencoded&lt;/code&gt; &lt;/a&gt;オプションが設定されている場合、フレームワークはパラメーターを解析してクエリ文字列パラメーターにマージするために &lt;code&gt;stream&lt;/code&gt; を消費します。この場合、ストリームはEOFのままになります。</target>
        </trans-unit>
        <trans-unit id="fbf6f7146e3526259b810542266889208322ae44" translate="yes" xml:space="preserve">
          <source>If an existing project is making extensive use of dictionary contexts, the type can be explicitly overridden back to dict by employing custom request/response types:</source>
          <target state="translated">既存のプロジェクトで辞書コンテキストを多用している場合、カスタムのリクエスト/レスポンス型を使用することで、型を明示的にdictにオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="e0921a18fbb995a62e51073d6d2f0fb61661415a" translate="yes" xml:space="preserve">
          <source>If an iterable of exception types is specified instead of a single type, the handler must be explicitly specified.</source>
          <target state="translated">単一の型ではなく例外型の反復可能な型を指定した場合は、ハンドラを明示的に指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="d0dc1f017112cc413532ee9ab63140ab30313f5f" translate="yes" xml:space="preserve">
          <source>If authentication credentials were provided in the request, the server considers them insufficient to grant access. The client SHOULD NOT automatically repeat the request with the same credentials. The client MAY repeat the request with new or different credentials. However, a request might be forbidden for reasons unrelated to the credentials.</source>
          <target state="translated">リクエストで認証の資格情報が提供された場合、サーバーはそれがアクセスを許可するには 不十分であるとみなす。クライアントは自動的に同じ信用証明書でリクエストを繰り返すべきではない [SHOULD NOT]。クライアントは新しいまたは異なる信用証明書でリクエストを繰り返してもよい[MAY]。しかし、リクエストはクレデンシャルとは無関係な理由で禁止されるかもしれない。</target>
        </trans-unit>
        <trans-unit id="7012f0f2569a51c838d52d6540b453eb32d8eb32" translate="yes" xml:space="preserve">
          <source>If available, uses &lt;code&gt;testtools&lt;/code&gt; in lieu of &lt;a href=&quot;https://docs.python.org/2/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">利用可能な場合、 &lt;code&gt;testtools&lt;/code&gt; 代わりにtesttoolsを使用し&lt;a href=&quot;https://docs.python.org/2/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0fb649699c5c9f08fe0a058c51d981745af86f98" translate="yes" xml:space="preserve">
          <source>If available, uses &lt;code&gt;testtools&lt;/code&gt; in lieu of &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可能な場合は、 &lt;code&gt;testtools&lt;/code&gt; 代わりにtesttoolsを使用し&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9ca6fdaf9e050a8c1c93d91aacade60e0e8ce63" translate="yes" xml:space="preserve">
          <source>If everything goes well, you should see something like this:</source>
          <target state="translated">順調にいけば、こんな感じのものが出てくるはずです。</target>
        </trans-unit>
        <trans-unit id="a33ae9ad6ee1d2731ea5c0e2c530352861cfd704" translate="yes" xml:space="preserve">
          <source>If no route matches a request, but the path in the requested URI matches a sink prefix, Falcon will pass control to the associated sink, regardless of the HTTP method requested.</source>
          <target state="translated">ルートがリクエストにマッチしないが、リクエストされたURI内のパスがシンクのプレフィックスにマッチする 場合、FalconはリクエストされたHTTPメソッドに関係なく、関連するシンクに制御を渡します。</target>
        </trans-unit>
        <trans-unit id="fd17f9e67525b2d4b6894e5e9e813eb1cd784d27" translate="yes" xml:space="preserve">
          <source>If no route matches the request, control then passes to a default responder that simply raises an instance of &lt;a href=&quot;errors#falcon.HTTPNotFound&quot;&gt;&lt;code&gt;HTTPNotFound&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">リクエストに一致するルートがない場合、制御はデフォルトのレスポンダに渡され、&lt;a href=&quot;errors#falcon.HTTPNotFound&quot;&gt; &lt;code&gt;HTTPNotFound&lt;/code&gt; の&lt;/a&gt;インスタンスが生成されます。</target>
        </trans-unit>
        <trans-unit id="4c919be2f98eedf331520725c41503747ff532a5" translate="yes" xml:space="preserve">
          <source>If no route matches the request, control then passes to a default responder that simply raises an instance of &lt;a href=&quot;errors#falcon.HTTPNotFound&quot;&gt;&lt;code&gt;HTTPNotFound&lt;/code&gt;&lt;/a&gt;. Normally this will result in sending a 404 response back to the client.</source>
          <target state="translated">リクエストに一致するルートがない場合、制御はデフォルトのレスポンダに渡され、&lt;a href=&quot;errors#falcon.HTTPNotFound&quot;&gt; &lt;code&gt;HTTPNotFound&lt;/code&gt; の&lt;/a&gt;インスタンスが生成されます。通常、これにより404応答がクライアントに返されます。</target>
        </trans-unit>
        <trans-unit id="4975a951fad347357444e95be1bfd50a220595cb" translate="yes" xml:space="preserve">
          <source>If none of the above headers are available, or if the Forwarded header is available but the &amp;ldquo;host&amp;rdquo; parameter is not included in the first hop, the value of &lt;a href=&quot;#falcon.Request.host&quot;&gt;&lt;code&gt;host&lt;/code&gt;&lt;/a&gt; is returned instead.</source>
          <target state="translated">上記のいずれのヘッダーも使用できない場合、またはForwardedヘッダーは使用可能であるが「host」パラメーターが最初のホップに含まれていない場合、代わりに&lt;a href=&quot;#falcon.Request.host&quot;&gt; &lt;code&gt;host&lt;/code&gt; &lt;/a&gt;の値が返されます。</target>
        </trans-unit>
        <trans-unit id="2c681478047dcafd1d7fbded49f1fa6d4595d09b" translate="yes" xml:space="preserve">
          <source>If none of these headers are available, or if the Forwarded header is available but does not contain a &amp;ldquo;proto&amp;rdquo; parameter in the first hop, the value of &lt;a href=&quot;#falcon.Request.scheme&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt; is returned instead.</source>
          <target state="translated">これらのヘッダーのいずれも使用できない場合、またはForwardedヘッダーは使用可能であるが最初のホップに「proto」パラメーターが含まれていない場合は、代わりに&lt;a href=&quot;#falcon.Request.scheme&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;の値が返されます。</target>
        </trans-unit>
        <trans-unit id="a5cd08e95e58cb0ddfc6be32290c9cc40a2cfb62" translate="yes" xml:space="preserve">
          <source>If none of these headers are available, the value of &lt;a href=&quot;#falcon.Request.remote_addr&quot;&gt;&lt;code&gt;remote_addr&lt;/code&gt;&lt;/a&gt; is used instead.</source>
          <target state="translated">これらのヘッダーのいずれも使用できない場合は、代わりに&lt;a href=&quot;#falcon.Request.remote_addr&quot;&gt; &lt;code&gt;remote_addr&lt;/code&gt; &lt;/a&gt;の値が使用されます。</target>
        </trans-unit>
        <trans-unit id="9d8dcfc6c203738eadb6e67647a5dff554e68fd7" translate="yes" xml:space="preserve">
          <source>If not set explicitly, the status defaults to &amp;lsquo;200 OK&amp;rsquo;.</source>
          <target state="translated">明示的に設定しない場合、ステータスはデフォルトで「200 OK」になります。</target>
        </trans-unit>
        <trans-unit id="c85fab0101c7c0d3ca83c24349755737e4113c7c" translate="yes" xml:space="preserve">
          <source>If not specified explicitly, the handler will default to &lt;code&gt;exception.handle&lt;/code&gt;, where &lt;code&gt;exception&lt;/code&gt; is the error type specified above, and &lt;code&gt;handle&lt;/code&gt; is a static method (i.e., decorated with @staticmethod) that accepts the same params just described. For example:</source>
          <target state="translated">明示的に指定しない場合、ハンドラーはデフォルトで &lt;code&gt;exception.handle&lt;/code&gt; になります。ここで、 &lt;code&gt;exception&lt;/code&gt; は上記で指定されたエラータイプであり、 &lt;code&gt;handle&lt;/code&gt; は静的メソッド（つまり、@ staticmethodで装飾されたもの）で、前述の同じパラメーターを受け入れます。例えば：</target>
        </trans-unit>
        <trans-unit id="7da55f8a981dfcec3d1cba69584dc69e89d19f94" translate="yes" xml:space="preserve">
          <source>If one of the &lt;em&gt;process_request&lt;/em&gt; middleware methods raises an error, it will be processed according to the error type. If the type matches a registered error handler, that handler will be invoked and then the framework will begin to unwind the stack, skipping any lower layers. The error handler may itself raise an instance of HTTPError, in which case the framework will use the latter exception to update the &lt;em&gt;resp&lt;/em&gt; object. Regardless, the framework will continue unwinding the middleware stack. For example, if &lt;em&gt;mob2.process_request&lt;/em&gt; were to raise an error, the framework would execute the stack as follows:</source>
          <target state="translated">&lt;em&gt;process_request&lt;/em&gt;ミドルウェアメソッドの1つでエラーが発生した場合、エラータイプに従って処理されます。タイプが登録されたエラーハンドラーと一致する場合、そのハンドラーが呼び出され、フレームワークはスタックの巻き戻しを開始し、下位層をスキップします。エラーハンドラー自体がHTTPErrorのインスタンスを生成する場合があります。その場合、フレームワークは後者の例外を使用して&lt;em&gt;resp&lt;/em&gt;オブジェクトを更新します。とにかく、フレームワークはミドルウェアスタックの展開を続けます。たとえば、&lt;em&gt;mob2.process_requestで&lt;/em&gt;エラーが発生した場合、フレームワークは次のようにスタックを実行します。</target>
        </trans-unit>
        <trans-unit id="c40f662f80a7adcc93ad0e0cf6e5db0edbeb7f1c" translate="yes" xml:space="preserve">
          <source>If one of the &lt;em&gt;process_request&lt;/em&gt; middleware methods raises an exception, it will be processed according to the exception type. If the type matches a registered error handler, that handler will be invoked and then the framework will begin to unwind the stack, skipping any lower layers. The error handler may itself raise an instance of &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt;&lt;code&gt;HTTPStatus&lt;/code&gt;&lt;/a&gt;, in which case the framework will use the latter exception to update the &lt;em&gt;resp&lt;/em&gt; object.</source>
          <target state="translated">&lt;em&gt;process_request&lt;/em&gt;ミドルウェアメソッドの1つで例外が発生した場合、例外タイプに従って処理されます。タイプが登録済みのエラーハンドラーと一致する場合、そのハンドラーが呼び出され、フレームワークはスタックの巻き戻しを開始し、下位レイヤーをスキップします。エラーハンドラー自体が&lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt; &lt;code&gt;HTTPStatus&lt;/code&gt; の&lt;/a&gt;インスタンスを発生させる場合があります。その場合、フレームワークは後者の例外を使用して&lt;em&gt;resp&lt;/em&gt;オブジェクトを更新します。</target>
        </trans-unit>
        <trans-unit id="e2e7034b99d083b93742d87c470a032abe3d7f81" translate="yes" xml:space="preserve">
          <source>If pytest reports any errors, take a moment to fix them up before proceeding to the next section of the tutorial.</source>
          <target state="translated">pytestがエラーを報告した場合は、チュートリアルの次のセクションに進む前に、少し時間をかけてエラーを修正してください。</target>
        </trans-unit>
        <trans-unit id="c1cecd8f7833db200efce14cf931b9a5df676f46" translate="yes" xml:space="preserve">
          <source>If range requests are not supported for the target resource, the header may be set to &amp;ldquo;none&amp;rdquo; to advise the client not to attempt any such requests.</source>
          <target state="translated">ターゲットリソースで範囲要求がサポートされていない場合、ヘッダーを「なし」に設定して、そのような要求を試行しないようにクライアントに通知することができます。</target>
        </trans-unit>
        <trans-unit id="8ee4a240a216a4fd8f4f07084f631a1cbf43684b" translate="yes" xml:space="preserve">
          <source>If set to a Unicode type (&lt;code&gt;unicode&lt;/code&gt; in Python 2, or &lt;code&gt;str&lt;/code&gt; in Python 3), Falcon will encode the text as UTF-8 in the response. If the content is already a byte string, use the &lt;a href=&quot;#falcon.Response.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; attribute instead (it&amp;rsquo;s faster).</source>
          <target state="translated">Unicodeタイプ（Python 2では &lt;code&gt;unicode&lt;/code&gt; 、Python 3では &lt;code&gt;str&lt;/code&gt; ）に設定すると、Falconは応答でテキストをUTF-8としてエンコードします。コンテンツがすでにバイト文字列である場合は、代わりに&lt;a href=&quot;#falcon.Response.data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt;属性を使用します（高速です）。</target>
        </trans-unit>
        <trans-unit id="17d0acf51826fdb06c9db1dbdc9e09b42c2a0187" translate="yes" xml:space="preserve">
          <source>If the above approach isn&amp;rsquo;t an option for your deployment, you can implement a simple WSGI wrapper that does the same thing:</source>
          <target state="translated">上記のアプローチがデプロイメントのオプションではない場合は、同じことを行う単純なWSGIラッパーを実装できます。</target>
        </trans-unit>
        <trans-unit id="573d02ffdadba443b074a6b8aad734c25b906555" translate="yes" xml:space="preserve">
          <source>If the condition is temporary, the server SHOULD generate a Retry- After header field to indicate that it is temporary and after what time the client MAY try again.</source>
          <target state="translated">状態が一時的なものである場合、サーバーはそれが一時的なものであり、何時までにクライアントが 再試行してもよい[MAY]ことを示すRetry-Afterヘッダーフィールドを生成す るべきである[SHOULD]。</target>
        </trans-unit>
        <trans-unit id="24fc003e9a743de3e85bb1d466ef3edf7227ecc8" translate="yes" xml:space="preserve">
          <source>If the header already exists, the new value will be appended to it, delimited by a comma. Most header specifications support this format, Set-Cookie being the notable exceptions.</source>
          <target state="translated">ヘッダが既に存在する場合は、カンマで区切られた新しい値が追加されます。ほとんどのヘッダ仕様はこの形式をサポートしていますが、注目すべき例外として Set-Cookie があります。</target>
        </trans-unit>
        <trans-unit id="6a797705c8440425c9094af80f76a89ff9545961" translate="yes" xml:space="preserve">
          <source>If the header already exists, the new value will normally be appended to it, delimited by a comma. The notable exception to this rule is Set-Cookie, in which case a separate header line for each value will be included in the response.</source>
          <target state="translated">ヘッダが既に存在する場合、通常はカンマで区切られた新しい値が追加されます。このルールの注目すべき例外は Set-Cookie で、この場合は各値のヘッダ行がレスポンスに含まれます。</target>
        </trans-unit>
        <trans-unit id="0a13e5fdcb43c7d74f4ffd6b953e6c3ccbde5c58" translate="yes" xml:space="preserve">
          <source>If the header was not previously set, nothing is done (no error is raised).</source>
          <target state="translated">ヘッダが事前に設定されていない場合は、何もしません(エラーは発生しません)。</target>
        </trans-unit>
        <trans-unit id="26ae121a2a80263c75a453d89623796bbdb65531" translate="yes" xml:space="preserve">
          <source>If the header was not previously set, nothing is done (no error is raised). Otherwise, all values set for the header will be removed from the response.</source>
          <target state="translated">ヘッダが以前に設定されていない場合は、何も行われません(エラーは発生しません)。そうでなければ、ヘッダに設定されたすべての値がレスポンスから削除されます。</target>
        </trans-unit>
        <trans-unit id="8a9772480c43cb209bccd442bfcbc289c19755f4" translate="yes" xml:space="preserve">
          <source>If the hostname in the request is an IP address, the value for &lt;code&gt;subdomain&lt;/code&gt; is undefined.</source>
          <target state="translated">リクエストのホスト名がIPアドレスの場合、 &lt;code&gt;subdomain&lt;/code&gt; の値は未定義です。</target>
        </trans-unit>
        <trans-unit id="d84520a364d77e696a0bf33ec0a9ed1eff03e3f2" translate="yes" xml:space="preserve">
          <source>If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 Not Found ought to be used instead.</source>
          <target state="translated">オリジンサーバーがその状態が永続的かどうかを知らない場合、またはその状態が永続的であるかどうかを判断する機能がない場合は、代わりにステータスコード404 Not Foundを使用するべきです。</target>
        </trans-unit>
        <trans-unit id="71db10bd4d9062f56e1d2a1efd89bbd86c02c188" translate="yes" xml:space="preserve">
          <source>If the prefix overlaps a registered route template, the route will take precedence and mask the sink.</source>
          <target state="translated">プレフィックスが登録されたルートテンプレートと重なる場合、ルートが優先され、シンクがマスクされます。</target>
        </trans-unit>
        <trans-unit id="b79d8369e2fb021095a1979c95ecf8c47ef07edb" translate="yes" xml:space="preserve">
          <source>If the request included authentication credentials, then the 401 response indicates that authorization has been refused for those credentials. The user agent MAY repeat the request with a new or replaced Authorization header field. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user agent SHOULD present the enclosed representation to the user, since it usually contains relevant diagnostic information.</source>
          <target state="translated">リクエストが認証の信用証明書を含んでいた場合、401応答は、それらの信用証明書に対 して認可が拒否されたことを示す。ユーザーエージェントは、新規または置換されたAuthorizationヘッダー フィールドを使用してリクエストを繰り返してもよい[MAY]。401応答がそれ以前の応答と同じチャレンジを含み、ユーザーエージェント が少なくとも一度はすでに認証を試みている場合、ユーザーエージェントは同封の表現を ユーザーに提示するべきである[SHOULD](それは通常、関連する診断情報を含むため)。</target>
        </trans-unit>
        <trans-unit id="30a9371621efb0f45399e1e0594ff1695b6da6f5" translate="yes" xml:space="preserve">
          <source>If the request was proxied, the scheme may not match what was originally requested by the client. &lt;a href=&quot;#falcon.Request.forwarded_scheme&quot;&gt;&lt;code&gt;forwarded_scheme&lt;/code&gt;&lt;/a&gt; can be used, instead, to handle such cases.</source>
          <target state="translated">リクエストがプロキシされた場合、スキームはクライアントによって最初にリクエストされたものと一致しない場合があります。代わりに、&lt;a href=&quot;#falcon.Request.forwarded_scheme&quot;&gt; &lt;code&gt;forwarded_scheme&lt;/code&gt; &lt;/a&gt;を使用して、このようなケースを処理できます。</target>
        </trans-unit>
        <trans-unit id="02eef3815d00d52dd17e509b355d63e5bad80063" translate="yes" xml:space="preserve">
          <source>If the stream is set to an iterable object that requires resource cleanup, it can implement a close() method to do so. The close() method will be called upon completion of the request.</source>
          <target state="translated">ストリームがリソースのクリーンアップを必要とする反復可能なオブジェクトに設定されている場合、そのために close()メソッドを実装することができます。close()メソッドは、リクエストの完了時に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f12ba5b258144051107e375b00521896538d6d42" translate="yes" xml:space="preserve">
          <source>If the stream length is unknown, you can set &lt;code&gt;stream&lt;/code&gt; directly, and ignore &lt;code&gt;content_length&lt;/code&gt;. In this case, the WSGI server may choose to use chunked encoding or one of the other strategies suggested by PEP-3333.</source>
          <target state="translated">ストリームの長さが不明な場合は、設定することができ &lt;code&gt;stream&lt;/code&gt; 直接、そして無視 &lt;code&gt;content_length&lt;/code&gt; 。この場合、WSGIサーバーは、チャンクエンコーディングまたはPEP-3333によって提案された他の戦略の1つを使用することを選択できます。</target>
        </trans-unit>
        <trans-unit id="e37fc2ccc6e55e89b6b38804bee9e12e61e6dd3b" translate="yes" xml:space="preserve">
          <source>If the stream length is unknown, you can set &lt;code&gt;stream&lt;/code&gt; directly, and ignore &lt;code&gt;stream_len&lt;/code&gt;. In this case, the WSGI server may choose to use chunked encoding or one of the other strategies suggested by PEP-3333.</source>
          <target state="translated">ストリームの長さが不明な場合は、設定することができ &lt;code&gt;stream&lt;/code&gt; 直接、そして無視 &lt;code&gt;stream_len&lt;/code&gt; を。この場合、WSGIサーバーはチャンクエンコーディングまたはPEP-3333で提案されている他の戦略のいずれかを使用することを選択できます。</target>
        </trans-unit>
        <trans-unit id="7a03c52f9e1d02aa0b2d67bc43208c8fc234338f" translate="yes" xml:space="preserve">
          <source>If the value is malformed and can not be converted, Falcon will reject the request with a 404 response to the client.</source>
          <target state="translated">値が不正な形をしていて変換できない場合、Falconはクライアントに対して404応答でリクエストを拒否します。</target>
        </trans-unit>
        <trans-unit id="3c53504913222c9b54265dc76fd90a2a9af8e3cc" translate="yes" xml:space="preserve">
          <source>If you are a Windows user, Waitress can be used in lieu of Gunicorn, since the latter doesn&amp;rsquo;t work under Windows:</source>
          <target state="translated">Windowsユーザーの場合、GunicornはWindowsでは機能しないため、Gunicornの代わりにウェイトレスを使用できます。</target>
        </trans-unit>
        <trans-unit id="8a7021295c87ea0f78a907e0d8b7ac2e1fca7bb8" translate="yes" xml:space="preserve">
          <source>If you are deploying to PyPy, we recommend sticking with the standard library&amp;rsquo;s JSON implementation, since it will be faster in most cases as compared to a third-party library.</source>
          <target state="translated">PyPyにデプロイする場合は、サードパーティのライブラリと比較してほとんどの場合高速になるため、標準ライブラリのJSON実装を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="9a5ef66b026a9cf19aa1ee5ad855b60a1a04dcef" translate="yes" xml:space="preserve">
          <source>If you are interested in the design-first approach mentioned above, you may also want to check out API design and gateway services such as Tyk, Apiary, Amazon API Gateway, or Google Cloud Endpoints.</source>
          <target state="translated">上記のデザインファーストの考え方に興味がある方は、TykやApiary、Amazon API Gateway、Google Cloud EndpointsなどのAPIデザインやゲートウェイサービスもチェックしてみてはいかがでしょうか。</target>
        </trans-unit>
        <trans-unit id="9df4e83e5b0f2301e105772694047456e209f5a1" translate="yes" xml:space="preserve">
          <source>If you are using the Falcon framework for a community or commercial project, please consider adding your information to our wiki under &lt;a href=&quot;https://github.com/falconry/falcon/wiki/Who's-using-Falcon%3F&quot;&gt;Who&amp;rsquo;s Using Falcon?&lt;/a&gt;</source>
          <target state="translated">コミュニティまたは商用プロジェクトでFalconフレームワークを使用している場合は、&lt;a href=&quot;https://github.com/falconry/falcon/wiki/Who's-using-Falcon%3F&quot;&gt;Whoを使用しているの&lt;/a&gt;下のWikiに情報を追加することを検討してください。</target>
        </trans-unit>
        <trans-unit id="b8eb45149bbe2a1da4f34d25bda4d625202ec8c5" translate="yes" xml:space="preserve">
          <source>If you are working on a remote server, switch to the myproject user and pull down the source code for your application.</source>
          <target state="translated">リモートサーバで作業している場合は、myprojectユーザに切り替えて、アプリケーションのソースコードをプルダウンしてください。</target>
        </trans-unit>
        <trans-unit id="b7e61dee0a701c16ae6015bb9e84e2c8ac4aaddf" translate="yes" xml:space="preserve">
          <source>If you do need full negotiation, it is very easy to bridge the gap using middleware. Here is an example of how this can be done:</source>
          <target state="translated">完全な交渉が必要な場合は、ミドルウェアを使用してギャップを埋めるのは非常に簡単です。これをどのように行うことができるかの例を示します。</target>
        </trans-unit>
        <trans-unit id="eab26131a66550b6534bac04a3cddb0b76b3dff9" translate="yes" xml:space="preserve">
          <source>If you do not know the size of the stream in advance, you can work around that by using chunked encoding, but that&amp;rsquo;s beyond the scope of this tutorial.</source>
          <target state="translated">事前にストリームのサイズがわからない場合は、チャンクエンコーディングを使用して回避できますが、このチュートリアルの範囲外です。</target>
        </trans-unit>
        <trans-unit id="59dfd6d6a339e830a9dd45a3b0274c2f1b5603e3" translate="yes" xml:space="preserve">
          <source>If you have a lot of experience with other Python web frameworks, you may be used to using decorators to set up your routes. Falcon&amp;rsquo;s particular approach provides the following benefits:</source>
          <target state="translated">他のPythonウェブフレームワークで多くの経験がある場合は、デコレーターを使用してルートを設定することに慣れている場合があります。Falconの特定のアプローチには、次の利点があります。</target>
        </trans-unit>
        <trans-unit id="8e057d203bf5bce9bfe7da34877403b3a2e8aad3" translate="yes" xml:space="preserve">
          <source>If you have access to your load balancer or reverse proxy configuration, we recommend setting up path or subdomain-based rules to split requests between your original implementation and the parts that have been migrated to Falcon (e.g., by adding an additional &lt;code&gt;location&lt;/code&gt; directive to your NGINX config).</source>
          <target state="translated">ロードバランサーまたはリバースプロキシ構成にアクセスできる場合は、パスまたはサブドメインベースのルールを設定して、元の実装とFalconに移行されたパーツの間でリクエストを分割することをお勧めします（たとえば、 &lt;code&gt;location&lt;/code&gt; ディレクティブを追加することによって）NGINX構成）。</target>
        </trans-unit>
        <trans-unit id="4a6a4d5cd1d3c6fa0be1573dd4e468726f25282f" translate="yes" xml:space="preserve">
          <source>If you have another case where the body isn&amp;rsquo;t being returned, it&amp;rsquo;s probably a bug! &lt;a href=&quot;https://falcon.readthedocs.io/en/1.4.1/community/help.html#help&quot;&gt;Let us know&lt;/a&gt; so we can help.</source>
          <target state="translated">ボディが返されない別のケースがある場合、それはおそらくバグです！お手伝いできるように&lt;a href=&quot;https://falcon.readthedocs.io/en/1.4.1/community/help.html#help&quot;&gt;お知らせください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab04e655048b85fd627d161e03851b2faf77e8f3" translate="yes" xml:space="preserve">
          <source>If you have another case where the body isn&amp;rsquo;t being returned, it&amp;rsquo;s probably a bug! &lt;a href=&quot;https://falcon.readthedocs.io/en/2.0.0/community/help.html#help&quot;&gt;Let us know&lt;/a&gt; so we can help.</source>
          <target state="translated">ボディが返されなかった別のケースがある場合、それはおそらくバグです！お手伝いできるように&lt;a href=&quot;https://falcon.readthedocs.io/en/2.0.0/community/help.html#help&quot;&gt;お知らせください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4df8938df467581163f7a19a49d3423f788271e7" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t done so already, please take a moment to &lt;a href=&quot;install#install&quot;&gt;install&lt;/a&gt; the Falcon web framework before continuing.</source>
          <target state="translated">まだ行っていない場合は、続行する前にFalcon Webフレームワークを&lt;a href=&quot;install#install&quot;&gt;インストールし&lt;/a&gt;てください。</target>
        </trans-unit>
        <trans-unit id="6cffc94a79349a22997a71af99a58c6777963046" translate="yes" xml:space="preserve">
          <source>If you need to mix-and-match both approaches under migration, beware that setting attributes such as &lt;em&gt;items&lt;/em&gt; or &lt;em&gt;values&lt;/em&gt; would obviously shadow the corresponding mapping interface functions.</source>
          <target state="translated">移行時に両方のアプローチを組み合わせる必要がある場合は、&lt;em&gt;アイテム&lt;/em&gt;や&lt;em&gt;値&lt;/em&gt;などの属性を設定すると、対応するマッピングインターフェイス関数が明らかに影になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="aa56520df6b2c0a058a4c82690e830a7988bb0d0" translate="yes" xml:space="preserve">
          <source>If you need to transparently handle reconnecting after an error, or for other use cases that may not be supported by your client library, simply encapsulate the client library within a management class that handles all the tricky bits, and pass that around instead.</source>
          <target state="translated">エラーが発生した後の再接続を透過的に処理する必要がある場合や、クライアントライブラリがサポートしていないその他のユースケースでは、クライアントライブラリを管理クラス内にカプセル化し、その代わりにそれを渡します。</target>
        </trans-unit>
        <trans-unit id="74b82853ed33efde97ccb0facaf66ac6cc3a1461" translate="yes" xml:space="preserve">
          <source>If you want to verify that Cython is being invoked, simply pass &lt;code&gt;-v&lt;/code&gt; to pip in order to echo the compilation commands:</source>
          <target state="translated">Cythonが呼び出されていることを確認する場合は、コンパイルコマンドをエコーするために、単に &lt;code&gt;-v&lt;/code&gt; をpipに渡します。</target>
        </trans-unit>
        <trans-unit id="d9d595cfaa96b4a0ee743786285905f1a24bbd99" translate="yes" xml:space="preserve">
          <source>If you would like to recognize such parameters, you must set the &lt;code&gt;keep_blank_qs_values&lt;/code&gt; request option to &lt;code&gt;True&lt;/code&gt;. Request options are set globally for each instance of &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt; via the &lt;a href=&quot;../api/api#falcon.API.req_options&quot;&gt;&lt;code&gt;req_options&lt;/code&gt;&lt;/a&gt; property. For example:</source>
          <target state="translated">そのようなパラメーターを認識したい場合は、 &lt;code&gt;keep_blank_qs_values&lt;/code&gt; リクエストオプションを &lt;code&gt;True&lt;/code&gt; に設定する必要があります。リクエストのオプションは、各インスタンスに対してグローバルに設定されている&lt;a href=&quot;../api/api#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; &lt;/a&gt;経由&lt;a href=&quot;../api/api#falcon.API.req_options&quot;&gt; &lt;code&gt;req_options&lt;/code&gt; の&lt;/a&gt;プロパティ。例えば：</target>
        </trans-unit>
        <trans-unit id="dc89a5503140a4a41bba69053c6d6c983b24b3b0" translate="yes" xml:space="preserve">
          <source>If your app sets &lt;a href=&quot;../api/api#falcon.RequestOptions.strip_url_path_trailing_slash&quot;&gt;&lt;code&gt;strip_url_path_trailing_slash&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;, Falcon will normalize incoming URI paths to simplify later processing and improve the predictability of application logic. This can be helpful when implementing a REST API schema that does not interpret a trailing slash character as referring to the name of an implicit sub-resource, as traditionally used by websites to reference index pages.</source>
          <target state="translated">アプリが&lt;a href=&quot;../api/api#falcon.RequestOptions.strip_url_path_trailing_slash&quot;&gt; &lt;code&gt;strip_url_path_trailing_slash&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;True&lt;/code&gt; に設定すると、Falconは着信URIパスを正規化して、後の処理を簡素化し、アプリケーションロジックの予測可能性を向上させます。これは、Webサイトがインデックスページを参照するために従来使用していたように、末尾のスラッシュ文字を暗黙のサブリソースの名前を参照していると解釈しないRESTAPIスキーマを実装する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="706fdc336d4337d1d3a80c35412523d4cbae971b" translate="yes" xml:space="preserve">
          <source>If your application is behind one or more reverse proxies, you can use &lt;a href=&quot;#falcon.Request.access_route&quot;&gt;&lt;code&gt;access_route&lt;/code&gt;&lt;/a&gt; to retrieve the real IP address of the client.</source>
          <target state="translated">アプリケーションが1つ以上のリバースプロキシの背後にある場合は、&lt;a href=&quot;#falcon.Request.access_route&quot;&gt; &lt;code&gt;access_route&lt;/code&gt; &lt;/a&gt;を使用してクライアントの実際のIPアドレスを取得できます。</target>
        </trans-unit>
        <trans-unit id="e2190b48a14dc2a699a6aad020c2a0dbd189cfd6" translate="yes" xml:space="preserve">
          <source>If your resource does not support a particular HTTP method, simply omit the corresponding responder and Falcon will use a default responder that raises an instance of &lt;a href=&quot;errors#falcon.HTTPMethodNotAllowed&quot;&gt;&lt;code&gt;HTTPMethodNotAllowed&lt;/code&gt;&lt;/a&gt; when that method is requested. Normally this results in sending a 405 response back to the client.</source>
          <target state="translated">リソースが特定のHTTPメソッドをサポートしていない場合は、対応するレスポンダを省略すれば、Falconはそのメソッドがリクエストされたときに&lt;a href=&quot;errors#falcon.HTTPMethodNotAllowed&quot;&gt; &lt;code&gt;HTTPMethodNotAllowed&lt;/code&gt; の&lt;/a&gt;インスタンスを発生させるデフォルトのレスポンダを使用します。通常、これにより、405応答がクライアントに返されます。</target>
        </trans-unit>
        <trans-unit id="7f7dc7dff960ceff451714f29b61b5a89bb8feac" translate="yes" xml:space="preserve">
          <source>In Falcon 1.3 we shipped initial support for &lt;a href=&quot;http://falcon.readthedocs.io/en/stable/api/routing.html#field-converters&quot;&gt;field converters&lt;/a&gt;. We&amp;rsquo;ve discussed building on this feature to support consuming multiple path segments ala Flask. This work is currently planned for 2.0.</source>
          <target state="translated">Falcon 1.3では、&lt;a href=&quot;http://falcon.readthedocs.io/en/stable/api/routing.html#field-converters&quot;&gt;フィールドコンバーターの&lt;/a&gt;初期サポートを出荷しました。私たちは、Flaskによる複数のパスセグメントの消費をサポートするために、この機能に基づいて構築することについて説明しました。この作業は現在2.0で計画されています。</target>
        </trans-unit>
        <trans-unit id="be20db3c0333b2e49db6434fc918987bc7bb8cb7" translate="yes" xml:space="preserve">
          <source>In Falcon versions prior to 2.0, the default context type was &lt;code&gt;dict&lt;/code&gt;. To ease the migration to attribute-based context object approach, this class also implements the mapping interface; that is, object attributes are linked to dictionary items, and vice versa. For instance:</source>
          <target state="translated">2.0より前のFalconバージョンでは、デフォルトのコンテキストタイプは &lt;code&gt;dict&lt;/code&gt; でした。属性ベースのコンテキストオブジェクトアプローチへの移行を容易にするために、このクラスはマッピングインターフェイスも実装します。つまり、オブジェクト属性はディクショナリアイテムにリンクされ、その逆も同様です。例えば：</target>
        </trans-unit>
        <trans-unit id="0b074282024ac499a013305835e3e031bb0cfb61" translate="yes" xml:space="preserve">
          <source>In Falcon, these resources would be implemented with standard classes:</source>
          <target state="translated">Falcon では、これらのリソースは標準クラスで実装されます。</target>
        </trans-unit>
        <trans-unit id="a5a492dec0d0d2e70784f07444c5189ec800c6af" translate="yes" xml:space="preserve">
          <source>In a similar manner, setting &lt;a href=&quot;request_and_response#falcon.Response.complete&quot;&gt;&lt;code&gt;complete&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt; from within a &lt;em&gt;process_resource&lt;/em&gt; method will short-circuit further request processing at that point.</source>
          <target state="translated">同様に、&lt;em&gt;process_resource&lt;/em&gt;メソッド内から&lt;a href=&quot;request_and_response#falcon.Response.complete&quot;&gt; &lt;code&gt;complete&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;True&lt;/code&gt; に設定すると、その時点でのリクエスト処理が短絡します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="699b30bf1419460c9c124e24a30aff5107606e6e" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;http://ipython.org/&quot;&gt;IPython&lt;/a&gt;, the Python community maintains several other super-powered REPLs that you may wish to try, including &lt;a href=&quot;http://bpython-interpreter.org/&quot;&gt;bpython&lt;/a&gt; and &lt;a href=&quot;https://github.com/jonathanslenders/ptpython&quot;&gt;ptpython&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://ipython.org/&quot;&gt;IPython&lt;/a&gt;に加えて、Pythonコミュニティは、&lt;a href=&quot;http://bpython-interpreter.org/&quot;&gt;bpython&lt;/a&gt;や&lt;a href=&quot;https://github.com/jonathanslenders/ptpython&quot;&gt;ptpython&lt;/a&gt;を含め、試してみたい超強力なREPLをいくつか維持しています。</target>
        </trans-unit>
        <trans-unit id="bf0530ec8dc8904e4c7e3f4fe31b65046a6530c6" translate="yes" xml:space="preserve">
          <source>In addition to setting up NGINX and uWSGI to run your application, you will of course need to deploy a database server or any other services required by your application. Due to the wide variety of options and considerations in this space, we have chosen not to include ancillary services in this guide. However, the Falcon community is always happy to help with deployment questions, so &lt;a href=&quot;https://falcon.readthedocs.io/en/stable/community/help.html#chat&quot;&gt;please don&amp;rsquo;t hesitate to ask&lt;/a&gt;.</source>
          <target state="translated">アプリケーションを実行するようにNGINXとuWSGIを設定することに加えて、もちろん、データベースサーバーまたはアプリケーションに必要なその他のサービスをデプロイする必要があります。この分野ではさまざまなオプションと考慮事項があるため、このガイドには補助サービスを含めないことを選択しました。ただし、Falconコミュニティは展開に関する質問をいつでも喜んでお手伝いし&lt;a href=&quot;https://falcon.readthedocs.io/en/stable/community/help.html#chat&quot;&gt;ますので、遠慮なく質問してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7f1c6a570d3ec19e21bb42d5ed57b3ba48de9a24" translate="yes" xml:space="preserve">
          <source>In addition to the standard &lt;code&gt;req&lt;/code&gt; and &lt;code&gt;resp&lt;/code&gt; parameters, if the route&amp;rsquo;s template contains field expressions, any responder that desires to receive requests for that route must accept arguments named after the respective field names defined in the template.</source>
          <target state="translated">標準の &lt;code&gt;req&lt;/code&gt; および &lt;code&gt;resp&lt;/code&gt; パラメータに加えて、ルートのテンプレートにフィールド式が含まれている場合、そのルートのリクエストを受信したいレスポンダは、テンプレートで定義されたそれぞれのフィールド名にちなんで名付けられた引数を受け入れる必要があります。</target>
        </trans-unit>
        <trans-unit id="37e503948302dfd5c658e47f034c52504db7765b" translate="yes" xml:space="preserve">
          <source>In addition to the standard HTML form-based method for specifying lists by repeating a given param multiple times, Falcon supports a more compact form in which the param may be given a single time but set to a &lt;code&gt;list&lt;/code&gt; of comma-separated elements (e.g., &amp;lsquo;foo=a,b,c&amp;rsquo;).</source>
          <target state="translated">Falconは、与えられたparamを複数回繰り返してリストを指定する標準のHTMLフォームベースの方法に加えて、paramに1回だけ与えられ、コンマ区切りの要素の &lt;code&gt;list&lt;/code&gt; （ 'foo = a、b、c'）。</target>
        </trans-unit>
        <trans-unit id="118890d90e96b933e8371270d136929e0c807a4b" translate="yes" xml:space="preserve">
          <source>In cases where the response content is a stream (readable file-like object), Falcon will not supply a Content-Length header to the WSGI server unless &lt;code&gt;content_length&lt;/code&gt; is explicitly set. Consequently, the server may choose to use chunked encoding or one of the other strategies suggested by PEP-3333.</source>
          <target state="translated">応答コンテンツがストリーム（読み取り可能なファイルのようなオブジェクト）である場合、 &lt;code&gt;content_length&lt;/code&gt; が明示的に設定されていない限り、FalconはContent-LengthヘッダーをWSGIサーバーに提供しません。その結果、サーバーはチャンクエンコーディングまたはPEP-3333によって提案された他の戦略の1つを使用することを選択できます。</target>
        </trans-unit>
        <trans-unit id="fc561c9406795f72910b06f0cde0dcec2756b1d4" translate="yes" xml:space="preserve">
          <source>In order for a website or SPA to access an API hosted under a different domain name, that API must implement &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;Cross-Origin Resource Sharing (CORS)&lt;/a&gt;. For a public API, implementing CORS in Falcon can be as simple as implementing a middleware component similar to the following:</source>
          <target state="translated">WebサイトまたはSPAが別のドメイン名でホストされているAPIにアクセスするには、そのAPIが&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;クロスオリジンリソースシェアリング（CORS）を&lt;/a&gt;実装する必要があります。パブリックAPIの場合、FalconへのCORSの実装は、次のようなミドルウェアコンポーネントの実装と同じくらい簡単です。</target>
        </trans-unit>
        <trans-unit id="fe6213bb775f037b434893a45a6eec78751b157a" translate="yes" xml:space="preserve">
          <source>In order to be converted, the field value must consist of a string of 32 hexadecimal digits, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc4122#section-3.&quot;&gt;RFC 4122, Section 3.&lt;/a&gt; Note, however, that hyphens and the URN prefix are optional.</source>
          <target state="translated">変換するには、フィールド値は&lt;a href=&quot;https://tools.ietf.org/html/rfc4122#section-3.&quot;&gt;RFC 4122、セクション3で&lt;/a&gt;定義されているように、32桁の16進数の文字列で構成されている必要があります。ただし、ハイフンとURNプレフィックスはオプションです。</target>
        </trans-unit>
        <trans-unit id="9dfc5187f4dcb2463c61fe63cd810563880deeec" translate="yes" xml:space="preserve">
          <source>In order to pass data from a hook function to a resource function use the &lt;code&gt;req.context&lt;/code&gt; and &lt;code&gt;resp.context&lt;/code&gt; objects. These context objects are intended to hold request and response data specific to your app as it passes through the framework.</source>
          <target state="translated">リソース機能にフック関数からデータを渡すために使用 &lt;code&gt;req.context&lt;/code&gt; と &lt;code&gt;resp.context&lt;/code&gt; オブジェクトを。これらのコンテキストオブジェクトは、アプリがフレームワークを通過するときに、アプリに固有のリクエストデータとレスポンスデータを保持することを目的としています。</target>
        </trans-unit>
        <trans-unit id="e2955b5f9a9365a1e5f99f7a25c6d736bce54cdf" translate="yes" xml:space="preserve">
          <source>In order to pass data from a middleware function to a resource function use the &lt;code&gt;req.context&lt;/code&gt; and &lt;code&gt;resp.context&lt;/code&gt; objects. These context objects are intended to hold request and response data specific to your app as it passes through the framework.</source>
          <target state="translated">リソース機能にミドルウェア機能からデータを渡すために使用 &lt;code&gt;req.context&lt;/code&gt; と &lt;code&gt;resp.context&lt;/code&gt; オブジェクトを。これらのコンテキストオブジェクトは、アプリがフレームワークを通過するときに、アプリに固有のリクエストデータとレスポンスデータを保持することを目的としています。</target>
        </trans-unit>
        <trans-unit id="55c9cb03432f148c56e64d7ca8a147d7e31670cc" translate="yes" xml:space="preserve">
          <source>In order to successfully remove a cookie, both the path and the domain must match the values that were used when the cookie was created.</source>
          <target state="translated">クッキーを正常に削除するためには、パスとドメインの両方が、クッキーが作成されたときに使用された値と一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="c7e501ae12333b379bf363ec7e4648c1a4eb5663" translate="yes" xml:space="preserve">
          <source>In response, you should get a &lt;code&gt;404 Not Found&lt;/code&gt;. This is the default response given by Falcon when it can not find a resource that matches the requested URL path.</source>
          <target state="translated">応答として、 &lt;code&gt;404 Not Found&lt;/code&gt; が表示されます。これは、Falconが要求されたURLパスに一致するリソースを見つけられない場合に提供されるデフォルトの応答です。</target>
        </trans-unit>
        <trans-unit id="d7948b083d6be47d62a0ad48412dc61fedcbc69f" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;on_get()&lt;/code&gt; responder method for the resource, you can tell the user agent to download the file by setting the Content-Disposition header. Falcon includes the &lt;code&gt;downloadable_as&lt;/code&gt; property to make this easy:</source>
          <target state="translated">リソースの &lt;code&gt;on_get()&lt;/code&gt; レスポンダーメソッドで、Content-Dispositionヘッダーを設定することにより、ユーザーエージェントにファイルをダウンロードするように指示できます。Falconには、これを簡単にするための &lt;code&gt;downloadable_as&lt;/code&gt; プロパティが含まれています。</target>
        </trans-unit>
        <trans-unit id="373ae6e6a8be00aa191900f524e9305e8991c978" translate="yes" xml:space="preserve">
          <source>In the REST architectural style, the URL only identifies the resource; it does not specify what action to take on that resource. Instead, users choose from a set of standard methods. For HTTP, these are the familiar GET, POST, HEAD, etc. Clients can query a resource to discover which methods it supports.</source>
          <target state="translated">REST アーキテクチャスタイルでは、URL はリソースを識別するだけで、そのリソースに対してどのようなアクションを取るかは指定しません。その代わりに、ユーザーは標準的なメソッドのセットから選択します。HTTP の場合、これらはおなじみの GET、POST、HEAD などです。クライアントは、どのメソッドをサポートしているかを調べるためにリソースを問い合わせることができます。</target>
        </trans-unit>
        <trans-unit id="b8e62020562ee28dc1c16fd409fe7232d06420ea" translate="yes" xml:space="preserve">
          <source>In the case of the refactoring work from the last section, we could have inadvertently introduced a functional bug into the application that our unit tests would not have caught. This can happen when a bug is a result of an unexpected interaction between multiple units, between the application and the web server, or between the application and any external services it depends on.</source>
          <target state="translated">前節のリファクタリング作業の場合、ユニットテストでは検出できなかった機能的なバグをアプリケーションに不用意に導入してしまう可能性があります。これは、複数のユニット間、アプリケーションとウェブサーバ間、アプリケーションと依存する外部サービス間の予期せぬ相互作用の結果としてバグが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="1c5a58deb98f7460cd79f3ba8813acde5d9c5a7e" translate="yes" xml:space="preserve">
          <source>In the future, we hope to support an alternative approach, using the proposal from &lt;a href=&quot;https://github.com/falconry/falcon/issues/584&quot;&gt;#584 on GitHub&lt;/a&gt;, that will afford combining all of these resources into a single class like so:</source>
          <target state="translated">将来的には&lt;a href=&quot;https://github.com/falconry/falcon/issues/584&quot;&gt;、GitHubの＃584&lt;/a&gt;からの提案を使用して、これらのすべてのリソースを次のように1つのクラスに結合できる代替のアプローチをサポートしたいと考えています。</target>
        </trans-unit>
        <trans-unit id="25a08e3abce469512002fe63f94802055640cf2b" translate="yes" xml:space="preserve">
          <source>In the meantime, the workaround is to percent-encode the forward slash. If you don&amp;rsquo;t control the clients and can&amp;rsquo;t enforce this, you can implement a Falcon middleware component to rewrite the path before it is routed.</source>
          <target state="translated">それまでの間、回避策はフォワードスラッシュをパーセントエンコードすることです。クライアントを制御せず、これを強制できない場合は、Falconミドルウェアコンポーネントを実装して、ルーティングされる前にパスを書き換えることができます。</target>
        </trans-unit>
        <trans-unit id="a45105a33fb9edabeec9b7961005f2ff5dc0439a" translate="yes" xml:space="preserve">
          <source>In the meantime, we recommend using &lt;a href=&quot;http://www.gevent.org/&quot;&gt;gevent&lt;/a&gt; via Gunicorn or uWSGI in order to scale IO-bound services.</source>
          <target state="translated">一方で、我々は、使用をお勧めします&lt;a href=&quot;http://www.gevent.org/&quot;&gt;gevent&lt;/a&gt; IOバウンドのサービスを拡張するために、GunicornまたはuWSGI経由し。</target>
        </trans-unit>
        <trans-unit id="f3c9f9153f4e990161c0bd6ee99075c43df7389c" translate="yes" xml:space="preserve">
          <source>In the meantime, we recommend using the battle-tested &lt;a href=&quot;http://www.gevent.org/&quot;&gt;gevent&lt;/a&gt; library via Gunicorn or uWSGI to scale IO-bound services. &lt;a href=&quot;https://pypi.org/project/meinheld/&quot;&gt;meinheld&lt;/a&gt; has also been used successfully by the community to power high-throughput, low-latency services. Note that if you use Gunicorn, you can combine gevent and PyPy to achieve an impressive level of performance. (Unfortunately, uWSGI does not yet support using gevent and PyPy together.)</source>
          <target state="translated">それまでの間、GunicornまたはuWSGIを介してバトルテスト済みの&lt;a href=&quot;http://www.gevent.org/&quot;&gt;gevent&lt;/a&gt;ライブラリを使用して、IOバウンドサービスをスケーリングすることをお勧めします。&lt;a href=&quot;https://pypi.org/project/meinheld/&quot;&gt;meinheld&lt;/a&gt;は、高スループット、低遅延のサービスを強化するためにコミュニティでも使用されています。 Gunicornを使用する場合は、geventとPyPyを組み合わせて、印象的なレベルのパフォーマンスを実現できることに注意してください。 （残念ながら、uWSGIはgeventとPyPyの併用をまだサポートしていません。）</target>
        </trans-unit>
        <trans-unit id="cf5399eb35ba2879b341be4a158190a7043d1c78" translate="yes" xml:space="preserve">
          <source>In the meantime, you might try leveraging &lt;a href=&quot;http://uwsgi.readthedocs.io/en/latest/WebSockets.html&quot;&gt;uWSGI&amp;rsquo;s native WebSocket support&lt;/a&gt;, or implementing a standalone service via Aymeric Augustin&amp;rsquo;s handy &lt;a href=&quot;https://pypi.python.org/pypi/websockets/4.0.1&quot;&gt;websockets&lt;/a&gt; library.</source>
          <target state="translated">一方で、あなたは利用してみてください&lt;a href=&quot;http://uwsgi.readthedocs.io/en/latest/WebSockets.html&quot;&gt;uWSGIのネイティブWebSocketをサポートする&lt;/a&gt;、またはAymericにオーギュスタンの便利を経由して、スタンドアロンのサービスを実装する&lt;a href=&quot;https://pypi.python.org/pypi/websockets/4.0.1&quot;&gt;のWebSocketの&lt;/a&gt;ライブラリ。</target>
        </trans-unit>
        <trans-unit id="06cb31aa2791af21a83c68c38c391bc709aa6e7c" translate="yes" xml:space="preserve">
          <source>In this tutorial we&amp;rsquo;ll walk through building an API for a simple image sharing service. Along the way, we&amp;rsquo;ll discuss Falcon&amp;rsquo;s major features and introduce the terminology used by the framework.</source>
          <target state="translated">このチュートリアルでは、簡単な画像共有サービスのAPIを構築する手順を説明します。途中で、Falconの主な機能について説明し、フレームワークで使用される用語を紹介します。</target>
        </trans-unit>
        <trans-unit id="c470cfbc90aab3d139aa58a6aabdd0ba91fefdd5" translate="yes" xml:space="preserve">
          <source>Individual path segments may contain one or more field expressions, and fields need not span the entire path segment. For example:</source>
          <target state="translated">個々のパスセグメントは、1つまたは複数のフィールド式を含んでいてもよく、フィールドはパスセグメント全体にまたがっている必要はありません。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="bfbf2381b5d95ec911e583415ac5ecdcfae76cbd" translate="yes" xml:space="preserve">
          <source>Initializer, unittest-style</source>
          <target state="translated">イニシャライザ、ユニテストスタイル</target>
        </trans-unit>
        <trans-unit id="cdd6766fd4dcd0a1325aa3ce3b0152d72635d504" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;on_get()&lt;/code&gt; responder, we set the Content-Type header based on the filename extension, and then stream out the image directly from an open file handle. Note the use of &lt;code&gt;resp.content_length&lt;/code&gt;. Whenever using &lt;code&gt;resp.stream&lt;/code&gt; instead of &lt;code&gt;resp.body&lt;/code&gt; or &lt;code&gt;resp.data&lt;/code&gt;, you typically also specify the expected length of the stream using the Content-Length header, so that the web client knows how much data to read from the response.</source>
          <target state="translated">&lt;code&gt;on_get()&lt;/code&gt; レスポンダー内で、ファイル名拡張子に基づいてContent-Typeヘッダーを設定し、開いているファイルハンドルから直接画像をストリーミングします。 &lt;code&gt;resp.content_length&lt;/code&gt; の使用に注意してください。 &lt;code&gt;resp.body&lt;/code&gt; または &lt;code&gt;resp.stream&lt;/code&gt; 代わりにresp.streamを使用する場合は &lt;code&gt;resp.data&lt;/code&gt; 、通常、Content-Lengthヘッダーを使用してストリームの予想される長さも指定します。これにより、Webクライアントは応答から読み取るデータの量を知ることができます。</target>
        </trans-unit>
        <trans-unit id="9c2df83f3d4ca21e7ac476c414bcbe86b6611038" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;on_get()&lt;/code&gt; responder, we set the Content-Type header based on the filename extension, and then stream out the image directly from an open file handle. Note the use of &lt;code&gt;resp.stream_len&lt;/code&gt;. Whenever using &lt;code&gt;resp.stream&lt;/code&gt; instead of &lt;code&gt;resp.body&lt;/code&gt; or &lt;code&gt;resp.data&lt;/code&gt;, you typically also specify the expected length of the stream so that the web client knows how much data to read from the response.</source>
          <target state="translated">&lt;code&gt;on_get()&lt;/code&gt; レスポンダー内で、ファイル名拡張子に基づいてContent-Typeヘッダーを設定し、開いているファイルハンドルから直接画像をストリーミングします。 &lt;code&gt;resp.stream_len&lt;/code&gt; の使用に注意してください。使用するたびに &lt;code&gt;resp.stream&lt;/code&gt; の代わりに、 &lt;code&gt;resp.body&lt;/code&gt; または &lt;code&gt;resp.data&lt;/code&gt; を Webクライアントが応答から読み取るためにどれだけのデータを知っているように、あなたはまた、典型的には、ストリームの期待長さを指定します。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="20c52e00f1813458387eeb6afc3de39bf772d139" translate="yes" xml:space="preserve">
          <source>Installing one of the pre-built Falcon wheels is a great way to get up and running quickly. However, when deploying your application in production, you may wish to compile Falcon via Cython yourself, using the target system&amp;rsquo;s native toolchain.</source>
          <target state="translated">構築済みのファルコンホイールの1つを取り付けることは、すばやく立ち上げて実行するための優れた方法です。ただし、アプリケーションを本番環境にデプロイする場合は、ターゲットシステムのネイティブツールチェーンを使用して、Cython経由でFalconを自分でコンパイルすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7a6ba0c4cabfe0d4ac09c7674094d6af47707925" translate="yes" xml:space="preserve">
          <source>Installing the Falcon wheel is a great way to get up and running quickly in a development environment, but for an extra speed boost when deploying your application in production, Falcon can compile itself with Cython.</source>
          <target state="translated">Falcon のホイールをインストールすることは、開発環境で素早く立ち上げて実行するための素晴らしい 方法ですが、本番環境でアプリケーションをデプロイする際には、さらなるスピードアップのために、 Falcon は Cython を使用してコンパイルすることができます。</target>
        </trans-unit>
        <trans-unit id="ffa93fdc6f201f73f4afdef23e97413631072207" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt; are first-class WSGI apps, so you can use the standard pattern outlined in PEP-3333. In your main &amp;ldquo;app&amp;rdquo; file, you would simply wrap your api instance with a middleware app. For example:</source>
          <target state="translated">&lt;a href=&quot;../api/api#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; の&lt;/a&gt;インスタンスはファーストクラスのWSGIアプリであるため、PEP-3333で概説されている標準パターンを使用できます。メインの「アプリ」ファイルでは、APIインスタンスをミドルウェアアプリでラップするだけです。例えば：</target>
        </trans-unit>
        <trans-unit id="beb9336afe3f21a9e34bd3dec2c9d2162079e9ff" translate="yes" xml:space="preserve">
          <source>Instances of the Request and Response classes are passed into responders as the second and third arguments, respectively.</source>
          <target state="translated">Request クラスと Response クラスのインスタンスは、それぞれ第 2 引数と第 3 引数としてレスポンダに渡されます。</target>
        </trans-unit>
        <trans-unit id="6752670ac4fd3d43c072341f57aeec0c7e6fa7d6" translate="yes" xml:space="preserve">
          <source>Introducing Hooks</source>
          <target state="translated">フックの紹介</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="2da3b0cc715468e0f6e1467eeba3124b57f629bd" translate="yes" xml:space="preserve">
          <source>Intuitive request and response objects</source>
          <target state="translated">直感的なリクエストとレスポンスのオブジェクト</target>
        </trans-unit>
        <trans-unit id="d10567ff32e2cdcd410d4f313e69bc56c6cb04b6" translate="yes" xml:space="preserve">
          <source>Intuitive routing via URI templates and REST-inspired resource classes</source>
          <target state="translated">URI テンプレートと REST にインスパイアされたリソースクラスによる直感的なルーティング</target>
        </trans-unit>
        <trans-unit id="21a4083cf1417f95583341860b00e4cf980825bb" translate="yes" xml:space="preserve">
          <source>Is Falcon thread-safe?</source>
          <target state="translated">ファルコンはスレッドセーフですか?</target>
        </trans-unit>
        <trans-unit id="9bcce22f9dbdcd7f672921f0d5c996d42b39040c" translate="yes" xml:space="preserve">
          <source>It can be used both when the set of request header fields in total is too large, and when a single header field is at fault. In the latter case, the response representation SHOULD specify which header field was too large.</source>
          <target state="translated">これは、リクエストヘッダーフィールドのセットが合計で大きすぎる場合と、 単一のヘッダーフィールドが故障している場合の両方で使用できる。後者の場合、応答表現はどのヘッダーフィールドが大きすぎるかを 指定するべきである[SHOULD]。</target>
        </trans-unit>
        <trans-unit id="018d6b1a58ca31202335662a9a601a6e16a05b08" translate="yes" xml:space="preserve">
          <source>It is always a good idea to keep an eye on the uWSGI logs, as they will contain exceptions and other information from your application that can help shed some light on unexpected behaviors.</source>
          <target state="translated">uWSGI のログには例外やアプリケーションからのその他の情報が含まれており、予期せぬ動作に光を当てるのに役立ちますので、常に目を光らせておくことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8fb51f8278a2171f68f546709483135fee832a97" translate="yes" xml:space="preserve">
          <source>It is best to execute the application as a different OS user than the one who owns the source code for your application. The application user should &lt;em&gt;NOT&lt;/em&gt; have write access to your source. This mitigates the chance that someone could write a malicious Python file to your source directory through an upload endpoint you might define; when your application restarts, the malicious file is loaded and proceeds to cause any number of BadThings:sup:(tm) to happen.</source>
          <target state="translated">アプリケーションのソースコードを所有しているユーザーとは異なるOSユーザーとしてアプリケーションを実行することをお勧めします。アプリケーションユーザーは、ソースへの書き込みアクセス権を持ってはなり&lt;em&gt;ません&lt;/em&gt;。これにより、定義したアップロードエンドポイントを介して誰かが悪意のあるPythonファイルをソースディレクトリに書き込む可能性が軽減されます。アプリケーションが再起動すると、悪意のあるファイルが読み込まれ、BadThings：sup：（tm）がいくつでも発生します。</target>
        </trans-unit>
        <trans-unit id="c038eb17f0b3cdc0510c29a89f2666a4b77e4075" translate="yes" xml:space="preserve">
          <source>It is common to carve out a portion of an app and reimplement it in Falcon to boost performance where it is most needed.</source>
          <target state="translated">最も必要とされるところでパフォーマンスを向上させるために、アプリの一部を切り取り、Falcon に再インプリメントするのが一般的です。</target>
        </trans-unit>
        <trans-unit id="dcb87d2567f1acf2241fcb1604adcab48584697b" translate="yes" xml:space="preserve">
          <source>It is helpful to switch to the project user (myproject) and use the home directory as the application environment.</source>
          <target state="translated">プロジェクトユーザ(myproject)に切り替えて、ホームディレクトリをアプリケーション環境として利用すると便利です。</target>
        </trans-unit>
        <trans-unit id="afd3e7889014966b85509bbfdb14e86f5f393702" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s customary for the project&amp;rsquo;s top-level module to be called the same as the project, so let&amp;rsquo;s create another &amp;ldquo;look&amp;rdquo; folder inside the first one and mark it as a python module by creating an empty &lt;code&gt;__init__.py&lt;/code&gt; file in it:</source>
          <target state="translated">プロジェクトの最上位モジュールはプロジェクトと同じように呼び出されるのが通例なので、最初のフォルダー内に別の「look」フォルダーを作成し、空の &lt;code&gt;__init__.py&lt;/code&gt; ファイルを作成してそれをpythonモジュールとしてマークします。</target>
        </trans-unit>
        <trans-unit id="50a18558f9fd3156504b7e98d5be725724e68270" translate="yes" xml:space="preserve">
          <source>Its typical use is to avoid the &amp;ldquo;lost update&amp;rdquo; problem, where a client GETs a resource&amp;rsquo;s state, modifies it, and PUTs it back to the server, when meanwhile a third party has modified the state on the server, leading to a conflict. By requiring requests to be conditional, the server can assure that clients are working with the correct copies.</source>
          <target state="translated">その典型的な使用法は、クライアントがリソースの状態を取得し、それを変更し、サーバーにPUTする「失われた更新」の問題を回避することです。その間、第三者がサーバーの状態を変更し、競合が発生します。リクエストを条件付きにすることを要求することにより、サーバーはクライアントが正しいコピーで作業していることを保証できます。</target>
        </trans-unit>
        <trans-unit id="3f32c5ee83d86b64171401b1772268cfb078a6d0" translate="yes" xml:space="preserve">
          <source>JSON media handler.</source>
          <target state="translated">JSONメディアハンドラ。</target>
        </trans-unit>
        <trans-unit id="d8a4fe63c907dd43b119a667e2bb9e84cd61e987" translate="yes" xml:space="preserve">
          <source>JSON serializable</source>
          <target state="translated">シリアライズ可能なJSON</target>
        </trans-unit>
        <trans-unit id="cb3e1dccbf3c2728522d139cac9df12544cd39e0" translate="yes" xml:space="preserve">
          <source>Keyword Arguments:</source>
          <target state="translated">キーワード引数。</target>
        </trans-unit>
        <trans-unit id="30ee8e7c3e291db43f99c5ce645f3f9d498b40ca" translate="yes" xml:space="preserve">
          <source>Leadpages</source>
          <target state="translated">Leadpages</target>
        </trans-unit>
        <trans-unit id="852c5992c9af765f2beab8da287de2b470773866" translate="yes" xml:space="preserve">
          <source>Learning by Example</source>
          <target state="translated">事例で学ぶ</target>
        </trans-unit>
        <trans-unit id="92f8d5466357ba2f499e90ebbc5c2705b6a3884f" translate="yes" xml:space="preserve">
          <source>Leftmost (i.e., most specific) subdomain from the hostname. If only a single domain name is given, &lt;code&gt;subdomain&lt;/code&gt; will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">ホスト名の左端（つまり、最も具体的な）サブドメイン。ドメイン名が1つだけ指定されている場合、 &lt;code&gt;subdomain&lt;/code&gt; は &lt;code&gt;None&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="6f42be1ee25dbd07296612129ccc7a07c94d2953" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s address this by creating a separate class to represent a single image resource. We will then add an &lt;code&gt;on_get()&lt;/code&gt; method to respond to the path above.</source>
          <target state="translated">単一の画像リソースを表す別のクラスを作成して、これに対処しましょう。次に、上のパスに応答する &lt;code&gt;on_get()&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="7ee08a574d1a802ee6f530ff24345e9f9274786b" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s check our progress:</source>
          <target state="translated">進行状況を確認してみましょう。</target>
        </trans-unit>
        <trans-unit id="bb7dc3b2cbbfb10b4e2d4c87098b225d7debfbba" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s check to see if we broke anything with the changes above:</source>
          <target state="translated">上記の変更で問題が発生していないか確認してみましょう。</target>
        </trans-unit>
        <trans-unit id="85ba237fdbf25479947322a67780dc7a619a4728" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say we have the following URL schema:</source>
          <target state="translated">次のURLスキーマがあるとします。</target>
        </trans-unit>
        <trans-unit id="c02033b9978d2121520a8c3527e3b8bf0755df92" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see a quick example of how this works. Try requesting an invalid image name from your application:</source>
          <target state="translated">これがどのように機能するかの簡単な例を見てみましょう。アプリケーションから無効な画像名をリクエストしてみてください：</target>
        </trans-unit>
        <trans-unit id="f668615d2a0c52f258debdb2c85756f9e38298d2" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see this in action. Create a new test module, &lt;code&gt;tests/test_integration.py&lt;/code&gt; with the following contents:</source>
          <target state="translated">これを実際に見てみましょう。次の内容で新しいテストモジュール &lt;code&gt;tests/test_integration.py&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="88757d25a7e9d64fa5a5893d5b32a8ae3b0e36ee" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start by adding an additional import statement to &lt;code&gt;test_app.py&lt;/code&gt;. We need to import two modules from &lt;code&gt;unittest.mock&lt;/code&gt; if you are using Python 3, or from &lt;code&gt;mock&lt;/code&gt; if you are using Python 2.</source>
          <target state="translated">&lt;code&gt;test_app.py&lt;/code&gt; にインポート文を追加することから始めましょう。Python 3を使用している場合は &lt;code&gt;unittest.mock&lt;/code&gt; から、Python 2を使用している場合は &lt;code&gt;mock&lt;/code&gt; から2つのモジュールをインポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="d104822353ccb1cd987c76fc7132820bb6d1a262" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start by installing the &lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt; package:</source>
          <target state="translated">&lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt;パッケージをインストールすることから始めましょう：</target>
        </trans-unit>
        <trans-unit id="bb2629c03dee9892b0ea3aafbf0d883450e32aba" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try again:</source>
          <target state="translated">もう一度やってみましょう：</target>
        </trans-unit>
        <trans-unit id="92f85d751b68a2181f83f9c5fe071b221863b873" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it. Restart Gunicorn (unless you&amp;rsquo;re using &lt;code&gt;--reload&lt;/code&gt;), and send a GET request to the resource:</source>
          <target state="translated">試してみよう。Gunicornを再起動し（--reloadを使用している場合を &lt;code&gt;--reload&lt;/code&gt; ）、GETリクエストをリソースに送信します。</target>
        </trans-unit>
        <trans-unit id="720914fd632105ac2f8ba3fd36f070522568f1e9" translate="yes" xml:space="preserve">
          <source>Licensed under the Apache License, Version 2.0 (the &amp;ldquo;License&amp;rdquo;); you may not use this file except in compliance with the License. You may obtain a copy of the License at</source>
          <target state="translated">Apache License、Version 2.0（「ライセンス」）に基づいてライセンスされます。ライセンスに準拠する場合を除き、このファイルを使用することはできません。ライセンスのコピーは、次の場所で入手できます。</target>
        </trans-unit>
        <trans-unit id="ec793eb7fd1d6c9106d97e622f4fcbf89e666960" translate="yes" xml:space="preserve">
          <source>Licensed under the Apache License, Version 2.0.</source>
          <target state="translated">Apache License,Version 2.0の下でライセンスされています。</target>
        </trans-unit>
        <trans-unit id="65464c2e405228ec556cfe55dd96c47826c69912" translate="yes" xml:space="preserve">
          <source>Like the former test, this one still uses mocks. But the structure of the code has been improved through the techniques of componentization and dependency inversion, making the application more flexible and testable.</source>
          <target state="translated">前のテストと同様に、今回もモックを使用しています。しかし、コンポーネント化と依存関係の反転の技術によってコードの構造が改善され、アプリケーションはより柔軟でテストしやすいものになりました。</target>
        </trans-unit>
        <trans-unit id="7a08658b70389680910d35a95cc829f66b2b4cbf" translate="yes" xml:space="preserve">
          <source>List items must be comma-separated or must be provided as multiple instances of the same param in the query string ala &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt;.</source>
          <target state="translated">リストアイテムはカンマで区切るか、クエリ文字列ala &lt;em&gt;application / x-www-form-urlencodedで&lt;/em&gt;同じパラメータの複数のインスタンスとして指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="bbb2d6ecb7b5eb5f1cd3829261340b7dd62fe433" translate="yes" xml:space="preserve">
          <source>Localized title describing the destination of the link (default &lt;code&gt;None&lt;/code&gt;). The value must be a two-member tuple in the form of (&lt;em&gt;language-tag&lt;/em&gt;, &lt;em&gt;text&lt;/em&gt;), where &lt;em&gt;language-tag&lt;/em&gt; is a standard language identifier as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc5646#section-2.1&quot;&gt;RFC 5646, Section 2.1&lt;/a&gt;, and &lt;em&gt;text&lt;/em&gt; is a Unicode string.</source>
          <target state="translated">リンク先を説明するローカライズされたタイトル（デフォルトは &lt;code&gt;None&lt;/code&gt; ）。値は（&lt;em&gt;language-tag&lt;/em&gt;、&lt;em&gt;text&lt;/em&gt;）の形式の2メンバーのタプルである必要があります。ここで、&lt;em&gt;language-tag&lt;/em&gt;は&lt;a href=&quot;https://tools.ietf.org/html/rfc5646#section-2.1&quot;&gt;RFC 5646、セクション2.1&lt;/a&gt;で定義されている標準の言語識別子であり、&lt;em&gt;text&lt;/em&gt;はUnicode文字列です。</target>
        </trans-unit>
        <trans-unit id="90586903c62a446d0bc9d65174e9dba59693c18e" translate="yes" xml:space="preserve">
          <source>Make a note of the path returned in the Location header, and use it to GET the image:</source>
          <target state="translated">Locationヘッダに返されたパスをメモしておき、それを使って画像をGETします。</target>
        </trans-unit>
        <trans-unit id="9a2cabcf63c1e67ad03e2f45ca284498a3b9d2d1" translate="yes" xml:space="preserve">
          <source>Many developers choose to write tests like the above to sanity-check their application&amp;rsquo;s primary functionality, while leaving the bulk of testing to simulated requests and unit tests. These latter types of tests generally execute much faster and facilitate more fine-grained test assertions as compared to higher-level functional and system tests. That being said, testing strategies vary widely and you should choose the one that best suits your needs.</source>
          <target state="translated">多くの開発者は、上記のようなテストを記述して、アプリケーションの主要機能の健全性をチェックし、テストの大部分をシミュレートされたリクエストと単体テストに任せています。これらの後者のタイプのテストは、一般に、より高いレベルの機能テストおよびシステムテストと比較して、実行がはるかに速く、より細かいテストアサーションを容易にします。そうは言っても、テスト戦略は大きく異なり、ニーズに最も適したものを選択する必要があります。</target>
        </trans-unit>
        <trans-unit id="787d79a55cb633b3a73422c8fa4b6ab2f7d71b85" translate="yes" xml:space="preserve">
          <source>Map HTTP methods (e.g., GET, POST) to methods of a resource object.</source>
          <target state="translated">HTTP メソッド (例:GET、POST)をリソースオブジェクトのメソッドにマッピングします。</target>
        </trans-unit>
        <trans-unit id="7cc06d01f95d26366da8c2b7eb2441cca4b925ac" translate="yes" xml:space="preserve">
          <source>Maps HTTP methods (e.g., &amp;lsquo;GET&amp;rsquo;, &amp;lsquo;POST&amp;rsquo;) to methods of a resource object.</source>
          <target state="translated">HTTPメソッド（「GET」、「POST」など）をリソースオブジェクトのメソッドにマップします。</target>
        </trans-unit>
        <trans-unit id="334c8de85e9732fb13aa2e3519b9a27fd950e459" translate="yes" xml:space="preserve">
          <source>Maps HTTP methods (e.g., GET, POST) to methods of a resource object.</source>
          <target state="translated">HTTP メソッド (GET、POST など)をリソースオブジェクトのメソッドにマップします。</target>
        </trans-unit>
        <trans-unit id="c2fea1178c6c75a68937b02e8fd968c1d1278005" translate="yes" xml:space="preserve">
          <source>Maps HTTP methods not explicitly defined on a resource to default responders.</source>
          <target state="translated">リソース上で明示的に定義されていない HTTP メソッドをデフォルトのレスポンダにマップします。</target>
        </trans-unit>
        <trans-unit id="0c77aeece8c258113148c6fb487946bf97b34672" translate="yes" xml:space="preserve">
          <source>Media</source>
          <target state="translated">Media</target>
        </trans-unit>
        <trans-unit id="ca27d35ad3e3980222af003a4fc24313141850e1" translate="yes" xml:space="preserve">
          <source>Media Type Constants</source>
          <target state="translated">メディアタイプ定数</target>
        </trans-unit>
        <trans-unit id="eb8978ed84b5906ad4191a0b252828be64701bfa" translate="yes" xml:space="preserve">
          <source>Middleware</source>
          <target state="translated">Middleware</target>
        </trans-unit>
        <trans-unit id="a814d9bc1b088977b052c9b4a1d76a3643ee9bf4" translate="yes" xml:space="preserve">
          <source>Middleware components provide a way to execute logic before the framework routes each request, after each request is routed but before the target responder is called, or just before the response is returned for each request. Components are registered with the &lt;code&gt;middleware&lt;/code&gt; kwarg when instantiating Falcon&amp;rsquo;s &lt;a href=&quot;api#api&quot;&gt;API class&lt;/a&gt;.</source>
          <target state="translated">ミドルウェアコンポーネントは、フレームワークが各リクエストをルーティングする前、各リクエストがルーティングされた後、ターゲットレスポンダが呼び出される前、または各リクエストに対してレスポンスが返される直前にロジックを実行する方法を提供します。コンポーネントは、Falconの&lt;a href=&quot;api#api&quot;&gt;APIクラスを&lt;/a&gt;インスタンス化するときに &lt;code&gt;middleware&lt;/code&gt; kwargに登録されます。</target>
        </trans-unit>
        <trans-unit id="8b1789e8099dd1eca9325abfa793416ee1d4f92e" translate="yes" xml:space="preserve">
          <source>Minimal attack surface for writing secure APIs</source>
          <target state="translated">安全なAPIを書くための最小限の攻撃面</target>
        </trans-unit>
        <trans-unit id="548f449b63ff41eaaff5a2d679ffa56b2015fc20" translate="yes" xml:space="preserve">
          <source>Misc.</source>
          <target state="translated">Misc.</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="18a66692db95621eeac4cf868e07e123b8c17157" translate="yes" xml:space="preserve">
          <source>Mixin for &lt;code&gt;HTTPError&lt;/code&gt; child classes that have no representation.</source>
          <target state="translated">表現のない &lt;code&gt;HTTPError&lt;/code&gt; 子クラスのMixin 。</target>
        </trans-unit>
        <trans-unit id="d634308003ff858f289d2833f637dfc9bee3fc78" translate="yes" xml:space="preserve">
          <source>Mixins</source>
          <target state="translated">Mixins</target>
        </trans-unit>
        <trans-unit id="57f32177faf3fe398357213955472adc14244ae6" translate="yes" xml:space="preserve">
          <source>Mock object representing a WSGI &lt;code&gt;start_response&lt;/code&gt; callable.</source>
          <target state="translated">WSGI &lt;code&gt;start_response&lt;/code&gt; 呼び出し可能オブジェクトを表すモックオブジェクト。</target>
        </trans-unit>
        <trans-unit id="d907ecbaf81629879335721ae59305b05f7d36e1" translate="yes" xml:space="preserve">
          <source>Mock resource for functional testing of framework components.</source>
          <target state="translated">フレームワークコンポーネントの機能テスト用のモックリソース。</target>
        </trans-unit>
        <trans-unit id="4ada82816dfe2e0269ece2ee6874e24ee123b79d" translate="yes" xml:space="preserve">
          <source>Mock resource for functional testing.</source>
          <target state="translated">機能テストのためのモックリソース。</target>
        </trans-unit>
        <trans-unit id="243f2cfc43bc372259c8987781f3df52a9f5d12d" translate="yes" xml:space="preserve">
          <source>More Features</source>
          <target state="translated">その他の特徴</target>
        </trans-unit>
        <trans-unit id="ad8afd3c596f156c633397c752f4089b6e646ccc" translate="yes" xml:space="preserve">
          <source>Multiple instances of a header in the response are currently not supported; it is unspecified which value will &amp;ldquo;win&amp;rdquo; and be represented in &lt;code&gt;headers&lt;/code&gt;.</source>
          <target state="translated">応答内のヘッダーの複数のインスタンスは現在サポートされていません。どの値が「勝ち」、 &lt;code&gt;headers&lt;/code&gt; で表されるかは指定されていません。</target>
        </trans-unit>
        <trans-unit id="bca17c462ecc0230fc46035c8a188262af9df5f8" translate="yes" xml:space="preserve">
          <source>NGINX and uWSGI can communicate via normal TCP (using an IP address) or UNIX sockets (using a socket file). TCP sockets are easier to set up and generally work for simple deployments. If you want to have finer control over which processes, users, or groups may access the uWSGI application, or you are looking for a bit of a speed boost, consider using UNIX sockets. uWSGI can automatically drop privileges with &lt;code&gt;chmod-socket&lt;/code&gt; and switch users with &lt;code&gt;chown-socket&lt;/code&gt;.</source>
          <target state="translated">NGINXとuWSGIは、通常のTCP（IPアドレスを使用）またはUNIXソケット（ソケットファイルを使用）を介して通信できます。TCPソケットはセットアップが簡単で、通常は単純な展開で機能します。どのプロセス、ユーザー、またはグループがuWSGIアプリケーションにアクセスできるかをより細かく制御したい場合、または少し速度を上げたい場合は、UNIXソケットの使用を検討してください。uWSGIは、 &lt;code&gt;chmod-socket&lt;/code&gt; を使用して特権を自動的に削除し、 &lt;code&gt;chown-socket&lt;/code&gt; を使用してユーザーを切り替えることができます。</target>
        </trans-unit>
        <trans-unit id="2afc29d164b1520c5775acec995b087a323f52bb" translate="yes" xml:space="preserve">
          <source>NGINX is a powerful web server and reverse proxy and uWSGI is a fast and highly-configurable WSGI application server. Together, NGINX and uWSGI create a one-two punch of speed and functionality which will suffice for most applications. In addition, this stack provides the building blocks for a horizontally-scalable and highly-available (HA) production environment and the configuration below is just a starting point.</source>
          <target state="translated">NGINXは強力なウェブサーバーとリバースプロキシであり、uWSGIは高速で設定可能なWSGIアプリケーションサーバーです。NGINXとuWSGIを組み合わせることで、ほとんどのアプリケーションに十分なスピードと機能性のワンツーパンチが生まれます。さらに、このスタックは、水平方向にスケーラブルで可用性の高い(HA)本番環境のための構成要素を提供し、以下の構成はその出発点に過ぎません。</target>
        </trans-unit>
        <trans-unit id="67bcd0286508abed1b4948a73af4a37a0ebec226" translate="yes" xml:space="preserve">
          <source>NGINX natively supports &lt;a href=&quot;https://uwsgi-docs.readthedocs.io/en/latest/Protocol.html&quot;&gt;the uwsgi protocol&lt;/a&gt;, for efficiently proxying requests to uWSGI. In NGINX parlance, we will create an &amp;ldquo;upstream&amp;rdquo; and direct that upstream (via a TCP socket) to our now-running uWSGI application.</source>
          <target state="translated">NGINXは&lt;a href=&quot;https://uwsgi-docs.readthedocs.io/en/latest/Protocol.html&quot;&gt;、&lt;/a&gt;リクエストをuWSGIに効率的にプロキシするために、uwsgiプロトコルをネイティブにサポートします。NGINXの用語では、「アップストリーム」を作成し、そのアップストリームを（TCPソケットを介して）現在実行中のuWSGIアプリケーションに転送します。</target>
        </trans-unit>
        <trans-unit id="5691cfb1dbb0e884359880488ab13de4bf56817a" translate="yes" xml:space="preserve">
          <source>Named groups are converted to kwargs and passed to the sink as such.</source>
          <target state="translated">名前付きグループはクワーグに変換され、そのようにシンクに渡されます。</target>
        </trans-unit>
        <trans-unit id="d7969e43451a120c70b8e5d07110ba4ad27195b7" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;../api/request_and_response#falcon.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/request_and_response#falcon.Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; objects are created for each incoming HTTP request. However, a single instance of each resource class attached to a route is shared among all requests. Therefore, as long as you are careful about the way responders access class member variables to avoid conflicts, your WSGI app should be thread-safe.</source>
          <target state="translated">着信HTTP要求ごとに、新しい&lt;a href=&quot;../api/request_and_response#falcon.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;オブジェクトと&lt;a href=&quot;../api/request_and_response#falcon.Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;オブジェクトが作成されます。ただし、ルートに接続された各リソースクラスの単一のインスタンスは、すべてのリクエストで共有されます。したがって、レスポンダーがクラスメンバー変数にアクセスして競合を回避する方法に注意している限り、WSGIアプリはスレッドセーフである必要があります。</target>
        </trans-unit>
        <trans-unit id="f6866423bbaa10f59e29cb66c0edc110fe67dd9d" translate="yes" xml:space="preserve">
          <source>Next let&amp;rsquo;s take a look at the &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt; class. Install &lt;a href=&quot;http://ipython.org/&quot;&gt;IPython&lt;/a&gt; and fire it up:</source>
          <target state="translated">次に、&lt;a href=&quot;../api/api#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; &lt;/a&gt;クラスを見てみましょう。&lt;a href=&quot;http://ipython.org/&quot;&gt;IPython&lt;/a&gt;をインストールして起動します。</target>
        </trans-unit>
        <trans-unit id="8e494b824e11d9d622e32a4a565a6443d8a3e095" translate="yes" xml:space="preserve">
          <source>Next let&amp;rsquo;s wire up this resource and see it in action. Go back to &lt;code&gt;app.py&lt;/code&gt; and modify it so that it looks something like this:</source>
          <target state="translated">次に、このリソースを結び付けて、実際の動作を見てみましょう。戻って &lt;code&gt;app.py&lt;/code&gt; 、それは次のようになりますように変更します。</target>
        </trans-unit>
        <trans-unit id="4209fb7cbf7f0e812d9797777d0409e02960a358" translate="yes" xml:space="preserve">
          <source>Next, create a virtual environment which can be used to install your dependencies.</source>
          <target state="translated">次に、依存関係をインストールするための仮想環境を作成します。</target>
        </trans-unit>
        <trans-unit id="ddacfc1661cfeb685db5bd25390532f48419c70a" translate="yes" xml:space="preserve">
          <source>Next, edit &lt;code&gt;test_app.py&lt;/code&gt; to look like this:</source>
          <target state="translated">次に、 &lt;code&gt;test_app.py&lt;/code&gt; を次のように編集します。</target>
        </trans-unit>
        <trans-unit id="7499c9553e8201168cd3cda6c25fd9dc1c69664c" translate="yes" xml:space="preserve">
          <source>Next, install the &lt;code&gt;requests&lt;/code&gt; package (as required by the new test) and make sure Gunicorn is up and running:</source>
          <target state="translated">次に、（新しいテストで必要な） &lt;code&gt;requests&lt;/code&gt; パッケージをインストールし、Gunicornが稼働していることを確認します。</target>
        </trans-unit>
        <trans-unit id="bba085c247dcbacb5400d9c16895f8dfd47bf409" translate="yes" xml:space="preserve">
          <source>Next, just for fun, let&amp;rsquo;s modify our resource to use &lt;a href=&quot;http://msgpack.org/&quot;&gt;MessagePack&lt;/a&gt; instead of JSON. Start by installing the relevant package:</source>
          <target state="translated">次に、楽しみのために、JSONの代わりに&lt;a href=&quot;http://msgpack.org/&quot;&gt;MessagePack&lt;/a&gt;を使用するようにリソースを変更しましょう。まず、関連するパッケージをインストールします。</target>
        </trans-unit>
        <trans-unit id="24f66dba4d7edbc257d74d9ca7e32ff9337b6df7" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s create a hook that will run before each request to post a message. Add this method below the definition of &lt;code&gt;ALLOWED_IMAGE_TYPES&lt;/code&gt;:</source>
          <target state="translated">次に、メッセージを投稿する各リクエストの前に実行されるフックを作成しましょう。このメソッドを &lt;code&gt;ALLOWED_IMAGE_TYPES&lt;/code&gt; の定義の下に追加します。</target>
        </trans-unit>
        <trans-unit id="ee7da3c6f00cf356a744d0b4531f6b00a2e8303a" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s create a new file that will be the entry point into your app:</source>
          <target state="translated">次に、アプリのエントリポイントとなる新しいファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="44ef4da65d145f89188969132317d69cce65b73f" translate="yes" xml:space="preserve">
          <source>No dependencies on other Python packages</source>
          <target state="translated">他の Python パッケージに依存しない</target>
        </trans-unit>
        <trans-unit id="e0c18f456a6d04471bd59ac6cfc9034a5e24fdcd" translate="yes" xml:space="preserve">
          <source>None of the ranges in the request&amp;rsquo;s Range header field overlap the current extent of the selected resource or that the set of ranges requested has been rejected due to invalid ranges or an excessive request of small or overlapping ranges.</source>
          <target state="translated">リクエストの[範囲]ヘッダーフィールドのどの範囲も、選択したリソースの現在の範囲と重複していないか、無効な範囲、または範囲が小さいか重複している過度のリクエストにより、リクエストされた範囲のセットが拒否されました。</target>
        </trans-unit>
        <trans-unit id="88d30ed9760bbdf6947fcb4020169e27cb9e89cb" translate="yes" xml:space="preserve">
          <source>Normally, when a header has multiple values, they will be returned as a single, comma-delimited string. However, the Set-Cookie header does not support this format, and so attempting to retrieve it will raise an error.</source>
          <target state="translated">通常、ヘッダに複数の値がある場合、それらは単一のカンマ区切りの文字列として返されます。しかし、Set-Cookieヘッダはこの形式をサポートしていないため、取得しようとするとエラーになります。</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="0cc489a90a364043364ddfd58c307e3bcd78a435" translate="yes" xml:space="preserve">
          <source>Note also that any exception (not just instances of &lt;a href=&quot;#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt;) can be caught, logged, and otherwise handled at the global level by registering one or more custom error handlers. See also &lt;a href=&quot;api#falcon.API.add_error_handler&quot;&gt;&lt;code&gt;add_error_handler()&lt;/code&gt;&lt;/a&gt; to learn more about this feature.</source>
          <target state="translated">また、1つ以上のカスタムエラーハンドラーを登録することで、例外（&lt;a href=&quot;#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; の&lt;/a&gt;インスタンスだけでなく）をキャッチし、ログに記録し、その他の方法でグローバルレベルで処理できることにも注意してください。この機能の詳細については、&lt;a href=&quot;api#falcon.API.add_error_handler&quot;&gt; &lt;code&gt;add_error_handler()&lt;/code&gt; &lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="c9376671dd97b6dfe70024e34cf69a93a4f4303a" translate="yes" xml:space="preserve">
          <source>Note also that routing is also normalized, so adding a route for &amp;ldquo;/foo/bar&amp;rdquo; also implicitly adds a route for &amp;ldquo;/foo/bar/&amp;rdquo;. Requests coming in for either path will be sent to the same resource.</source>
          <target state="translated">ルーティングも正規化されているため、「/ foo / bar」のルートを追加すると、「/ foo / bar /」のルートも暗黙的に追加されます。どちらのパスにも入ってくる要求は、同じリソースに送信されます。</target>
        </trans-unit>
        <trans-unit id="4af56060e2ad136105d5f57d6e6ea5d263917ca3" translate="yes" xml:space="preserve">
          <source>Note also that you can pass additional arguments to your hook function as needed:</source>
          <target state="translated">また、必要に応じて追加の引数をフック関数に渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="b63082acee31325f8c8d1ef3357c092c52915e84" translate="yes" xml:space="preserve">
          <source>Note that calling this method is equivalent to setting the corresponding header property (when said property is available) to &lt;code&gt;None&lt;/code&gt;. For example:</source>
          <target state="translated">このメソッドを呼び出すことは、対応するヘッダープロパティ（上記のプロパティが利用可能な場合）を &lt;code&gt;None&lt;/code&gt; に設定することと同等であることに注意してください。例えば：</target>
        </trans-unit>
        <trans-unit id="b8c6a3b23f16436dd6f6588ed90a03d5ddc6c6a5" translate="yes" xml:space="preserve">
          <source>Note that each component need not implement all &lt;code&gt;process_*&lt;/code&gt; methods; in the case that one of the three methods is missing, it is treated as a noop in the stack. For example, if &lt;code&gt;mob2&lt;/code&gt; did not implement &lt;em&gt;process_request&lt;/em&gt; and &lt;code&gt;mob3&lt;/code&gt; did not implement &lt;em&gt;process_response&lt;/em&gt;, the execution order would look like this:</source>
          <target state="translated">各コンポーネントがすべての &lt;code&gt;process_*&lt;/code&gt; メソッドを実装する必要はないことに注意してください。3つのメソッドのいずれかが欠落している場合、スタックでは何も行われません。たとえば、 &lt;code&gt;mob2&lt;/code&gt; 実装されていませんでした&lt;em&gt;process一&lt;/em&gt;と &lt;code&gt;mob3&lt;/code&gt; が実装されていませんでした&lt;em&gt;process_responseを&lt;/em&gt;、実行順序は次のようになります。</target>
        </trans-unit>
        <trans-unit id="36fceccbaaba2c4e1d9ebffaac1d7f3f2826f8df" translate="yes" xml:space="preserve">
          <source>Note that in many cases clients can still access the denied resource by using technical countermeasures such as a VPN or the Tor network.</source>
          <target state="translated">VPNやTorネットワークなどの技術的な対策を行うことで、クライアントが拒否されたリソースにアクセスできる場合が多いことに注意してください。</target>
        </trans-unit>
        <trans-unit id="6e86dd5d358447b7cf5ae9a0dcf0ee44a4b6422c" translate="yes" xml:space="preserve">
          <source>Note that in the above example, the WSGI callable is simple assigned to a variable, &lt;code&gt;application&lt;/code&gt;, rather than being passed to a self-hosting WSGI server such as &lt;code&gt;wsgiref.simple_server.make_server&lt;/code&gt;. Starting an independent WSGI server in your &lt;code&gt;wsgi.py&lt;/code&gt; file will render unexpected results.</source>
          <target state="translated">上記の例では、WSGI呼び出し可能オブジェクトは、 &lt;code&gt;wsgiref.simple_server.make_server&lt;/code&gt; などの自己ホスティングWSGIサーバーに渡されるのではなく、変数 &lt;code&gt;application&lt;/code&gt; に単純に割り当てられていることに注意してください。 &lt;code&gt;wsgi.py&lt;/code&gt; ファイルで独立したWSGIサーバーを起動すると、予期しない結果が発生します。</target>
        </trans-unit>
        <trans-unit id="d475bd08d5adbf2c515dd7ccf5b3e8bc98571274" translate="yes" xml:space="preserve">
          <source>Note that static routes are matched in LIFO order, and are only attempted after checking dynamic routes and sinks.</source>
          <target state="translated">静的なルートは LIFO 順にマッチし、動的なルートとシンクをチェックした後にのみ試行されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e66ff60a49f68bbc89dc53af6e4c8a1b815fca59" translate="yes" xml:space="preserve">
          <source>Note that the 511 response SHOULD NOT contain a challenge or the authentication interface itself, because clients would show the interface as being associated with the originally requested URL, which may cause confusion.</source>
          <target state="translated">511応答にはチャレンジや認証インターフェース自体を含めるべきではない[SHOULD NOT]ことに注意すること。</target>
        </trans-unit>
        <trans-unit id="c93012d2afb2c25cd3cc6058c1c61dff35d327fe" translate="yes" xml:space="preserve">
          <source>Note the method signature. &lt;code&gt;env&lt;/code&gt; and &lt;code&gt;start_response&lt;/code&gt; are standard WSGI params. Falcon adds a thin abstraction on top of these params so you don&amp;rsquo;t have to interact with them directly.</source>
          <target state="translated">メソッドの署名に注意してください。 &lt;code&gt;env&lt;/code&gt; と &lt;code&gt;start_response&lt;/code&gt; は標準のWSGIパラメータです。Falconはこれらのパラメーターの上に薄い抽象化を追加するので、それらを直接操作する必要はありません。</target>
        </trans-unit>
        <trans-unit id="c5e9e35ded1fcb694b65fd0f633df85308336b46" translate="yes" xml:space="preserve">
          <source>Note the use of &lt;code&gt;falcon.HTTP_201&lt;/code&gt; for setting the response status to &amp;ldquo;201 Created&amp;rdquo;. We could have also used the &lt;code&gt;falcon.HTTP_CREATED&lt;/code&gt; alias. For a full list of predefined status strings, simply call &lt;code&gt;help()&lt;/code&gt; on &lt;code&gt;falcon.status_codes&lt;/code&gt;:</source>
          <target state="translated">応答ステータスを「201 Created」に設定するための &lt;code&gt;falcon.HTTP_201&lt;/code&gt; の使用に注意してください。 &lt;code&gt;falcon.HTTP_CREATED&lt;/code&gt; エイリアスを使用することもできます。事前定義されたステータス文字列の完全なリストについては、 &lt;code&gt;falcon.status_codes&lt;/code&gt; で &lt;code&gt;help()&lt;/code&gt; を呼び出すだけです。</target>
        </trans-unit>
        <trans-unit id="a4d61684c386cf1357212f71687449cd6b93662a" translate="yes" xml:space="preserve">
          <source>Note the use of &lt;code&gt;resp.data&lt;/code&gt; in lieu of &lt;code&gt;resp.body&lt;/code&gt;. If you assign a bytestring to the latter, Falcon will figure it out, but you can realize a small performance gain by assigning directly to &lt;code&gt;resp.data&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;resp.data&lt;/code&gt; 代わりに &lt;code&gt;resp.body&lt;/code&gt; 使用していることに注意してください。後者にバイト文字列を割り当てると、Falconはそれを理解しますが、 &lt;code&gt;resp.data&lt;/code&gt; に直接割り当てることで小さなパフォーマンスの向上を実現できます。</target>
        </trans-unit>
        <trans-unit id="db2b7a93b8c067b65f95460059125d0d3334ddb1" translate="yes" xml:space="preserve">
          <source>Note, however, that it is more efficient to handle permanent redirects directly with your web server, if possible, rather than placing additional load on your app for such requests.</source>
          <target state="translated">ただし、そのようなリクエストのためにアプリにさらなる負荷をかけるよりも、可能であれば、ウェブサーバーで直接パーマネントリダイレクトを処理した方が効率的であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1ecff5eaabb3037179de7dc9547660f73b541900" translate="yes" xml:space="preserve">
          <source>Note: The existence of the 503 status code does not imply that a server has to use it when becoming overloaded. Some servers might simply refuse the connection.</source>
          <target state="translated">注意:503 ステータスコードの存在は、サーバが過負荷になったときに 503 ステータスコードを使用しなければならないことを意味するものではありません。サーバーによっては、単に接続を拒否しているだけかもしれません。</target>
        </trans-unit>
        <trans-unit id="39c4d15abddf9325d73ca18f18551f31059e5666" translate="yes" xml:space="preserve">
          <source>Now add the following test:</source>
          <target state="translated">次に、次のテストを追加します。</target>
        </trans-unit>
        <trans-unit id="e9d8aca9faa254fe883d9f972dd0e17b781893fc" translate="yes" xml:space="preserve">
          <source>Now give it a try:</source>
          <target state="translated">今すぐ試してみてください。</target>
        </trans-unit>
        <trans-unit id="c7e4a0570b7b50b22c55214d53531c71113414ce" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s try that request again:</source>
          <target state="translated">次に、そのリクエストをもう一度試します。</target>
        </trans-unit>
        <trans-unit id="bbf0f3d4096127fd2f148d2712bce50cd315ab0b" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s wire everything up and give it a try. Edit &lt;code&gt;app.py&lt;/code&gt; to look similar to the following:</source>
          <target state="translated">それでは、すべてを接続して試してみましょう。 &lt;code&gt;app.py&lt;/code&gt; を次のように編集します。</target>
        </trans-unit>
        <trans-unit id="d7bd0e17feeeae9ce2e92ccf9d171ea0f4c9d9e1" translate="yes" xml:space="preserve">
          <source>Now re-run your app and try to POST another picture:</source>
          <target state="translated">アプリを再起動して、別の写真をPOSTしてみてください。</target>
        </trans-unit>
        <trans-unit id="98619ab3e90c40f4dec5deb685153f51baa0a5f5" translate="yes" xml:space="preserve">
          <source>Now that we have a way of getting images into the service, we of course need a way to get them back out. What we want to do is return an image when it is requested, using the path that came back in the Location header.</source>
          <target state="translated">画像をサービスに取り込む方法ができたので、もちろん画像を取り出す方法も必要になります。ここでやりたいのは、リクエストされたときに Location ヘッダで指定したパスを使って画像を返すことです。</target>
        </trans-unit>
        <trans-unit id="dd505283733ba9915b48c0398501818491056d9d" translate="yes" xml:space="preserve">
          <source>Now that you have a simple Falcon app, you can take it for a spin with a WSGI server. Python includes a reference server for self-hosting, but let&amp;rsquo;s use something more robust that you might use in production.</source>
          <target state="translated">シンプルなFalconアプリができたので、WSGIサーバーを使ってそれを試してみることができます。Pythonにはセルフホスティング用の参照サーバーが含まれていますが、本番環境で使用するより堅牢なものを使用してみましょう。</target>
        </trans-unit>
        <trans-unit id="2a01f63f486459ed34617ea6d081761561d7696d" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve added a hook to validate the media type, you can see it in action by attempting to POST something nefarious:</source>
          <target state="translated">メディアタイプを検証するためのフックを追加したので、何か悪意のあるものをPOSTしようとすることで、実際にメディアタイプを確認できます。</target>
        </trans-unit>
        <trans-unit id="fb09b7e68f160c179881e1be238fcab1ae3d14a7" translate="yes" xml:space="preserve">
          <source>Now you can re-run the app against the desired storage directory:</source>
          <target state="translated">これで、目的のストレージディレクトリに対してアプリを再実行できるようになりました。</target>
        </trans-unit>
        <trans-unit id="91e2f3d05172882aecebf31917977a53c313d4ae" translate="yes" xml:space="preserve">
          <source>Now you should see a failed test assertion regarding &lt;code&gt;mock_file_open&lt;/code&gt;. To fix this, we need to switch our strategy from monkey-patching to dependency injection. Return to &lt;code&gt;app.py&lt;/code&gt; and modify it to look similar to the following:</source>
          <target state="translated">これで、 &lt;code&gt;mock_file_open&lt;/code&gt; に関するテストアサーションが失敗したことがわかります。これを修正するには、サルパッチングから依存性注入に戦略を切り替える必要があります。 &lt;code&gt;app.py&lt;/code&gt; に戻り、次のように変更します。</target>
        </trans-unit>
        <trans-unit id="3c0d7bb971bdb5c08bedbfac07fd1c1c425a74e5" translate="yes" xml:space="preserve">
          <source>Now, before every call to that responder, Falcon will first invoke &lt;code&gt;validate_image_type()&lt;/code&gt;. There isn&amp;rsquo;t anything special about this function, other than it must accept four arguments. Every hook takes, as its first two arguments, a reference to the same &lt;code&gt;req&lt;/code&gt; and &lt;code&gt;resp&lt;/code&gt; objects that are passed into responders. The &lt;code&gt;resource&lt;/code&gt; argument is a Resource instance associated with the request. The fourth argument, named &lt;code&gt;params&lt;/code&gt; by convention, is a reference to the kwarg dictionary Falcon creates for each request. &lt;code&gt;params&lt;/code&gt; will contain the route&amp;rsquo;s URI template params and their values, if any.</source>
          <target state="translated">これで、そのレスポンダへのすべての呼び出しの前に、Falconは最初に &lt;code&gt;validate_image_type()&lt;/code&gt; を呼び出します。この関数については、4つの引数を受け入れる必要があることを除いて、特別なことは何もありません。すべてのフックは、最初の2つの引数として、レスポンダに渡される同じ &lt;code&gt;req&lt;/code&gt; および &lt;code&gt;resp&lt;/code&gt; オブジェクトへの参照を受け取ります。 &lt;code&gt;resource&lt;/code&gt; 引数は、要求に関連付けられたリソースインスタンスです。4番目の引数は、慣例により &lt;code&gt;params&lt;/code&gt; という名前で、各リクエストに対してFalconが作成するkwarg辞書への参照です。 &lt;code&gt;params&lt;/code&gt; には、ルートのURIテンプレートparamsとその値（存在する場合）が含まれます。</target>
        </trans-unit>
        <trans-unit id="fd6c6ddd10a2465ece51ef4ceaca3f984e2c46ae" translate="yes" xml:space="preserve">
          <source>Now, if you check your storage directory, it should contain a copy of the image you just POSTed.</source>
          <target state="translated">さて、ストレージディレクトリを確認すると、先ほどPOSTした画像のコピーが入っているはずです。</target>
        </trans-unit>
        <trans-unit id="bdc654d076aee6522061c2f914572bdb32eed5ea" translate="yes" xml:space="preserve">
          <source>Now, if you do make changes to Falcon itself, please consider contributing your awesome work back to the community.</source>
          <target state="translated">もしあなたがFalcon自体に変更を加えた場合は、あなたの素晴らしい作品をコミュニティに貢献することをご検討ください。</target>
        </trans-unit>
        <trans-unit id="8530beb9e731d4423fc757ab1d956b564b22f5d0" translate="yes" xml:space="preserve">
          <source>Now, in a different terminal, try querying the running app with curl:</source>
          <target state="translated">別のターミナルで、実行中のアプリを curl でクエリしてみてください。</target>
        </trans-unit>
        <trans-unit id="4645c8ed3135645d62a0315b3ea44a255c61a254" translate="yes" xml:space="preserve">
          <source>Now, open &lt;code&gt;app.py&lt;/code&gt; in your favorite text editor and add the following lines:</source>
          <target state="translated">次に、お気に入りのテキストエディターで &lt;code&gt;app.py&lt;/code&gt; を開き、次の行を追加します。</target>
        </trans-unit>
        <trans-unit id="76c45fddb2fc5eb950e43270255aba702e6e8612" translate="yes" xml:space="preserve">
          <source>Now, type the following to introspect the &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt; callable:</source>
          <target state="translated">次のように入力して、&lt;a href=&quot;../api/api#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; &lt;/a&gt;呼び出し可能オブジェクトをイントロスペクトします。</target>
        </trans-unit>
        <trans-unit id="542e2878291f6dfa04257a48e2c5d435711bb67a" translate="yes" xml:space="preserve">
          <source>Now, when a request comes in for &lt;code&gt;/images&lt;/code&gt;, Falcon will call the responder on the images resource that corresponds to the requested HTTP method.</source>
          <target state="translated">これで、 &lt;code&gt;/images&lt;/code&gt; に対するリクエストが届くと、FalconはリクエストされたHTTPメソッドに対応するimagesリソースのレスポンダを呼び出します。</target>
        </trans-unit>
        <trans-unit id="a9ce1e4316147895f11091181c84e46cd56c6589" translate="yes" xml:space="preserve">
          <source>Now, you might imagine that such a hook should apply to all responders for a resource. In fact, hooks can be applied to an entire resource by simply decorating the class:</source>
          <target state="translated">さて、このようなフックはリソースのすべてのレスポンダに適用されなければならないと想像するかもしれません。実際には、単にクラスを装飾するだけで、フックをリソース全体に適用することができます。</target>
        </trans-unit>
        <trans-unit id="1ca8a88a675f12112df167d170cf48d0f7d8a616" translate="yes" xml:space="preserve">
          <source>Number of times &lt;code&gt;start_response&lt;/code&gt; was called.</source>
          <target state="translated">&lt;code&gt;start_response&lt;/code&gt; が呼び出された回数。</target>
        </trans-unit>
        <trans-unit id="86fc1c4601765aeab55471f454ffc192454be653" translate="yes" xml:space="preserve">
          <source>On Windows where Gunicorn and uWSGI don&amp;rsquo;t work yet you can use Waitress server</source>
          <target state="translated">GunicornとuWSGIがまだ機能しないWindowsでは、ウェイトレスサーバーを使用できます</target>
        </trans-unit>
        <trans-unit id="f7f468da57ab95ccfea60accc1f063e882b32c98" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;media&lt;/code&gt; is called on a request, it&amp;rsquo;ll consume the request&amp;rsquo;s stream.</source>
          <target state="translated">いったん &lt;code&gt;media&lt;/code&gt; 要求に応じて呼び出されると、その要求のストリームを消費します。</target>
        </trans-unit>
        <trans-unit id="c9fc352cefc141d44ae45888de551723388e2571" translate="yes" xml:space="preserve">
          <source>Once the docs have been built, you can view them by opening the following index page in your browser. On OS X it&amp;rsquo;s as simple as:</source>
          <target state="translated">ドキュメントが作成されたら、ブラウザで次のインデックスページを開いてドキュメントを表示できます。OS Xでは、次のように簡単です。</target>
        </trans-unit>
        <trans-unit id="9c6f9bc1cfe0a36fa875aa95eae59b41d61bd809" translate="yes" xml:space="preserve">
          <source>Once you have cloned the repo or downloaded a tarball from GitHub, you can install Falcon like this:</source>
          <target state="translated">レポをクローンするか、GitHubからtarballをダウンロードしたら、このようにFalconをインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="235a19fcfad1734633adce481044cbccef2ee6e8" translate="yes" xml:space="preserve">
          <source>One of the headers in the request is invalid.</source>
          <target state="translated">リクエスト中のヘッダの一つが無効です。</target>
        </trans-unit>
        <trans-unit id="4e0fd9c73b449983900d100530d61a2ef14e4694" translate="yes" xml:space="preserve">
          <source>One of these methods should be used instead of &lt;a href=&quot;request_and_response#falcon.Response.set_header&quot;&gt;&lt;code&gt;set_header()&lt;/code&gt;&lt;/a&gt;. With &lt;a href=&quot;request_and_response#falcon.Response.set_header&quot;&gt;&lt;code&gt;set_header()&lt;/code&gt;&lt;/a&gt; you cannot set multiple headers with the same name (which is how multiple cookies are sent to the client).</source>
          <target state="translated">&lt;a href=&quot;request_and_response#falcon.Response.set_header&quot;&gt; &lt;code&gt;set_header()&lt;/code&gt; の&lt;/a&gt;代わりにこれらのメソッドの1つを使用する必要があります。&lt;a href=&quot;request_and_response#falcon.Response.set_header&quot;&gt; &lt;code&gt;set_header()&lt;/code&gt; &lt;/a&gt;あなたは（クライアントに送信する方法を複数のクッキーです）同じ名前の複数のヘッダを設定することはできません。</target>
        </trans-unit>
        <trans-unit id="9da69c5adfc9a6bc07f069bc69f0693cea5f84cf" translate="yes" xml:space="preserve">
          <source>One or more authentication challenges to use as the value of the WWW-Authenticate header in the response.</source>
          <target state="translated">応答中のWWW-Authenticateヘッダの値として使用する1つ以上の認証チャレンジ。</target>
        </trans-unit>
        <trans-unit id="4ae7c0235075906063857c63fb8a07d47ea15a3e" translate="yes" xml:space="preserve">
          <source>One or more conditions given in the request header fields evaluated to false when tested on the server.</source>
          <target state="translated">リクエストヘッダーフィールドで与えられた1つ以上の条件は、サーバーでテストされたときにfalseと評価される。</target>
        </trans-unit>
        <trans-unit id="3f051c3e9d0e520323a23d1d17763302fa635a56" translate="yes" xml:space="preserve">
          <source>Only continous ranges are supported (e.g., &amp;ldquo;bytes=0-0,-1&amp;rdquo; would result in an HTTPBadRequest exception when the attribute is accessed.)</source>
          <target state="translated">連続した範囲のみがサポートされます（たとえば、「bytes = 0-0、-1」は、属性にアクセスするとHTTPBadRequest例外が発生します）。</target>
        </trans-unit>
        <trans-unit id="81857be8c8acd02b58bbe58a7acec1b652fc7776" translate="yes" xml:space="preserve">
          <source>Only depends on six and mimeparse</source>
          <target state="translated">6とミメパーゼにのみ依存する</target>
        </trans-unit>
        <trans-unit id="cfd55528500ce82ff43d207937034ac2da5afd6c" translate="yes" xml:space="preserve">
          <source>Only noop &lt;code&gt;on_get()&lt;/code&gt; and &lt;code&gt;on_post()&lt;/code&gt; responders are implemented; when overriding these, or adding additional responders in child classes, they can be decorated with the &lt;a href=&quot;#falcon.testing.capture_responder_args&quot;&gt;&lt;code&gt;falcon.testing.capture_responder_args()&lt;/code&gt;&lt;/a&gt; hook in order to capture the &lt;em&gt;req&lt;/em&gt;, &lt;em&gt;resp&lt;/em&gt;, and &lt;em&gt;params&lt;/em&gt; arguments that are passed to the responder. Responders may also be decorated with the &lt;code&gt;falcon.testing.set_resp_defaults()&lt;/code&gt; hook in order to set &lt;em&gt;resp&lt;/em&gt; properties to default &lt;em&gt;status&lt;/em&gt;, &lt;em&gt;body&lt;/em&gt;, and &lt;em&gt;header&lt;/em&gt; values.</source>
          <target state="translated">noop &lt;code&gt;on_get()&lt;/code&gt; および &lt;code&gt;on_post()&lt;/code&gt; レスポンダのみが実装されています。これらをオーバーライドする場合、または子クラスにレスポンダを追加する場合、レスポンダに渡される&lt;em&gt;req&lt;/em&gt;、&lt;em&gt;resp&lt;/em&gt;、および&lt;em&gt;params&lt;/em&gt;引数をキャプチャするために、&lt;a href=&quot;#falcon.testing.capture_responder_args&quot;&gt; &lt;code&gt;falcon.testing.capture_responder_args()&lt;/code&gt; &lt;/a&gt;フックで装飾できます。&lt;em&gt;resp&lt;/em&gt;プロパティをデフォルトの&lt;em&gt;status&lt;/em&gt;、&lt;em&gt;body&lt;/em&gt;、および&lt;em&gt;header&lt;/em&gt;値に設定するために、 &lt;code&gt;falcon.testing.set_resp_defaults()&lt;/code&gt; フックで装飾することもできます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e48798cb183cf71bdfdbb384f61ed66137cdbe86" translate="yes" xml:space="preserve">
          <source>Open a new terminal and run the following:</source>
          <target state="translated">新しいターミナルを開き、以下を実行します。</target>
        </trans-unit>
        <trans-unit id="3d8bd6f9a145c81ba3f59062586c5cf6108400d0" translate="yes" xml:space="preserve">
          <source>OpenStack</source>
          <target state="translated">OpenStack</target>
        </trans-unit>
        <trans-unit id="ec88fcb6d25d5b1be71e82bce96f86acb7be89b1" translate="yes" xml:space="preserve">
          <source>Opera Software</source>
          <target state="translated">オペラソフトウェア</target>
        </trans-unit>
        <trans-unit id="ed83cc1138b01c27b6845a510ae0c03e6fb942b4" translate="yes" xml:space="preserve">
          <source>Or on Linux:</source>
          <target state="translated">またはLinuxで。</target>
        </trans-unit>
        <trans-unit id="25f4768f2d0bf2d9493d3f638e85e7c78f3db953" translate="yes" xml:space="preserve">
          <source>Or, if you want to edit the code, first fork the main repo, clone the fork to your desktop, and then run the following to install it using symbolic linking, so that when you change your code, the changes will be automagically available to your app without having to reinstall the package:</source>
          <target state="translated">または、コードを編集したい場合は、まずメインのレポをフォークし、そのフォークをデスクトップにクローンし、以下を実行してシンボリックリンクを使用してインストールすることで、コードを変更したときに、パッケージを再インストールすることなく、変更が自動的にアプリで利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="9fc6030c819ec58b4a1eddf77d6a9473a099d9ac" translate="yes" xml:space="preserve">
          <source>Or, suppose you had a hook that you would like to apply to &lt;em&gt;all&lt;/em&gt; responders for a given resource. In that case, you would simply decorate the resource class:</source>
          <target state="translated">または、特定のリソースの&lt;em&gt;すべての&lt;/em&gt;レスポンダに適用したいフックがあるとします。その場合は、リソースクラスを装飾するだけです。</target>
        </trans-unit>
        <trans-unit id="c5b258f43418d6aa5bca2b2f7856e2cbaa25764b" translate="yes" xml:space="preserve">
          <source>Or, to install the latest beta or release candidate, if any:</source>
          <target state="translated">または、最新のベータ版やリリース候補があれば、それをインストールします。</target>
        </trans-unit>
        <trans-unit id="fb9e852068a0bd991030aaafb5a1ac94af3ec5cf" translate="yes" xml:space="preserve">
          <source>Or, to run the default set of tests:</source>
          <target state="translated">または、デフォルトのテストセットを実行します。</target>
        </trans-unit>
        <trans-unit id="c78f60c2a75e929d3b7552a83d56bd7bba189fa6" translate="yes" xml:space="preserve">
          <source>Or, using the more verbose name:</source>
          <target state="translated">あるいは、より冗長な名前を使って</target>
        </trans-unit>
        <trans-unit id="404e7dd0d94065b81d620080226c6758c806379c" translate="yes" xml:space="preserve">
          <source>Ordered list of all values specified in the Cookie header for the named cookie, or &lt;code&gt;None&lt;/code&gt; if the cookie was not included in the request. If the cookie is specified more than once in the header, the returned list of values will preserve the ordering of the individual &lt;code&gt;cookie-pair&lt;/code&gt;&amp;rsquo;s in the header.</source>
          <target state="translated">名前付きCookieのCookieヘッダーで指定されたすべての値の順序付きリスト。Cookieがリクエストに含まれていなかった場合は &lt;code&gt;None&lt;/code&gt; 。Cookieがヘッダーで複数回指定されている場合、返される値のリストは、ヘッダー内の個々の &lt;code&gt;cookie-pair&lt;/code&gt; の順序を保持します。</target>
        </trans-unit>
        <trans-unit id="5eb32bfe82be1e2685576515fb15243de39c76ab" translate="yes" xml:space="preserve">
          <source>Original URI for proxied requests. Uses &lt;a href=&quot;#falcon.Request.forwarded_scheme&quot;&gt;&lt;code&gt;forwarded_scheme&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#falcon.Request.forwarded_host&quot;&gt;&lt;code&gt;forwarded_host&lt;/code&gt;&lt;/a&gt; in order to reconstruct the original URI requested by the user agent.</source>
          <target state="translated">プロキシされたリクエストの元のURI。ユーザーエージェントによって要求された元のURIを再構築するために、&lt;a href=&quot;#falcon.Request.forwarded_scheme&quot;&gt; &lt;code&gt;forwarded_scheme&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#falcon.Request.forwarded_host&quot;&gt; &lt;code&gt;forwarded_host&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="259f0e1eacc07a74e5ba76fa9a657af27c817031" translate="yes" xml:space="preserve">
          <source>Original URL scheme requested by the user agent, if the request was proxied. Typical values are &amp;lsquo;http&amp;rsquo; or &amp;lsquo;https&amp;rsquo;.</source>
          <target state="translated">リクエストがプロキシされた場合、ユーザーエージェントによってリクエストされた元のURLスキーム。一般的な値は「http」または「https」です。</target>
        </trans-unit>
        <trans-unit id="5277dc139c2f1134bd76c80e090283dedde76dac" translate="yes" xml:space="preserve">
          <source>Original host request header as received by the first proxy in front of the application server.</source>
          <target state="translated">アプリケーションサーバの前の最初のプロキシが受信したオリジナルのホストリクエストヘッダ。</target>
        </trans-unit>
        <trans-unit id="96792ae315e80ddbda2f275f15c9fb3301e95776" translate="yes" xml:space="preserve">
          <source>Other than that, it&amp;rsquo;s pretty much up to you if you want to use the standard library config library or something like &lt;code&gt;aumbry&lt;/code&gt; as demonstrated by this &lt;a href=&quot;https://github.com/jmvrbanac/falcon-example/tree/master/example&quot;&gt;falcon example app&lt;/a&gt;</source>
          <target state="translated">それ以外は、この&lt;a href=&quot;https://github.com/jmvrbanac/falcon-example/tree/master/example&quot;&gt;falconサンプルアプリで&lt;/a&gt;示されているように、標準ライブラリの構成ライブラリまたは &lt;code&gt;aumbry&lt;/code&gt; のようなものを使用するかどうかは、ほとんどあなた次第です。</target>
        </trans-unit>
        <trans-unit id="a44677569902b8e1dd4f4ca1c518818f4b58fb88" translate="yes" xml:space="preserve">
          <source>Our friendly community is available to answer your questions and help you work through sticky problems. See also: &lt;a href=&quot;https://falcon.readthedocs.io/en/1.4.1/community/help.html#help&quot;&gt;Getting Help&lt;/a&gt;.</source>
          <target state="translated">私たちのフレンドリーなコミュニティは、あなたの質問に答えたり、厄介な問題を解決するのに役立ちます。参照：&lt;a href=&quot;https://falcon.readthedocs.io/en/1.4.1/community/help.html#help&quot;&gt;ヘルプの利用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c746b316ed33b9ba1ec2567ee7de4da6eda7a40d" translate="yes" xml:space="preserve">
          <source>Our friendly community is available to answer your questions and help you work through sticky problems. See also: &lt;a href=&quot;https://falcon.readthedocs.io/en/2.0.0/community/help.html#help&quot;&gt;Getting Help&lt;/a&gt;.</source>
          <target state="translated">私たちのフレンドリーなコミュニティは、あなたの質問に答え、厄介な問題を解決するのに役立ちます。参照：&lt;a href=&quot;https://falcon.readthedocs.io/en/2.0.0/community/help.html#help&quot;&gt;ヘルプの取得&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c17acddc840349fb8886d576a04d8c12a81a4815" translate="yes" xml:space="preserve">
          <source>Override the default serializer for instances of &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; の&lt;/a&gt;インスタンスのデフォルトのシリアライザーをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="6992f72e6503da0e1cd27dc4f0955bd8b9a860f6" translate="yes" xml:space="preserve">
          <source>Overriding the default JSON implementation is simply a matter of specifying the desired &lt;code&gt;dumps&lt;/code&gt; and &lt;code&gt;loads&lt;/code&gt; functions:</source>
          <target state="translated">デフォルトのJSON実装をオーバーライドするには、必要な &lt;code&gt;dumps&lt;/code&gt; および &lt;code&gt;loads&lt;/code&gt; 関数を指定するだけです。</target>
        </trans-unit>
        <trans-unit id="f116c51115119a5ea38854471c1f660c684883c0" translate="yes" xml:space="preserve">
          <source>PEP-3333 prohibits apps from setting hop-by-hop headers itself, such as Transfer-Encoding.</source>
          <target state="translated">PEP-3333では、Transfer-Encodingのようにアプリ自身がホップバイホップヘッダを設定することを禁止しています。</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="6b8d507f2a1de117b2f5c96164b6a17e0a6908ca" translate="yes" xml:space="preserve">
          <source>Parse a canonical &amp;lsquo;host:port&amp;rsquo; string into parts.</source>
          <target state="translated">正規の「host：port」文字列を部分に解析します。</target>
        </trans-unit>
        <trans-unit id="da47e55a4ec2c81f08f769255b984760e95bf13a" translate="yes" xml:space="preserve">
          <source>Parse a host string (which may or may not contain a port) into parts, taking into account that the string may contain either a domain name or an IP address. In the latter case, both IPv4 and IPv6 addresses are supported.</source>
          <target state="translated">ホスト文字列 (ポートを含む場合と含まない場合があります)を部分的に解析し、文字列にはドメイン名または IP アドレスが含まれている可能性があることを考慮します。後者の場合、IPv4 と IPv6 の両方のアドレスがサポートされています。</target>
        </trans-unit>
        <trans-unit id="794acc47b5b414480d4f807db1da691652637acd" translate="yes" xml:space="preserve">
          <source>Parse a query string into a dict.</source>
          <target state="translated">クエリ文字列をdictにパースします。</target>
        </trans-unit>
        <trans-unit id="ea1a491e912f9daa702857e38df7400a342f2ae0" translate="yes" xml:space="preserve">
          <source>Path portion of the request URI (not including query string).</source>
          <target state="translated">リクエストURIのパス部分(クエリ文字列は含まない)。</target>
        </trans-unit>
        <trans-unit id="8beeff300f6e467f3968347959cf64955a6b5da7" translate="yes" xml:space="preserve">
          <source>People usually fall into two camps when it comes to this question. The first camp likes to instantiate a config object and pass that around to the initializers of the resource classes so the data sharing is explicit. The second camp likes to create a config module and import that wherever it&amp;rsquo;s needed.</source>
          <target state="translated">この質問に関しては、人々は通常2つの陣営に陥ります。最初のキャンプでは、構成オブジェクトをインスタンス化してリソースクラスの初期化子に渡し、データ共有が明示的になるようにします。2番目のキャンプでは、構成モジュールを作成し、必要な場所にインポートします。</target>
        </trans-unit>
        <trans-unit id="f053abcaaa8688a58983a4832717942f512943eb" translate="yes" xml:space="preserve">
          <source>Per &lt;a href=&quot;https://tools.ietf.org/html/rfc7239&quot;&gt;RFC 7239&lt;/a&gt;, the access route may contain &amp;ldquo;unknown&amp;rdquo; and obfuscated identifiers, in addition to IPv4 and IPv6 addresses</source>
          <target state="translated">パー&lt;a href=&quot;https://tools.ietf.org/html/rfc7239&quot;&gt;RFC 7239&lt;/a&gt;、アクセスルートは、IPv4アドレスとIPv6アドレスのほかに、「不明」と難読化された識別子が含まれていてもよいです</target>
        </trans-unit>
        <trans-unit id="89285d2a833db68bbdb2e0703c2fb6bfb0962ec3" translate="yes" xml:space="preserve">
          <source>Perfection is finally attained not when there is no longer anything to add, but when there is no longer anything to take away.</source>
          <target state="translated">完璧とは、もはや加えるものがないときではなく、もはや奪うものがないときに、最終的に達成されます。</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="13ae0851548193d6ae5c1c4b8902349072c22425" translate="yes" xml:space="preserve">
          <source>Performs a request against a WSGI application. Uses &lt;a href=&quot;https://docs.python.org/2/library/wsgiref.html#module-wsgiref.validate&quot;&gt;&lt;code&gt;wsgiref.validate&lt;/code&gt;&lt;/a&gt; to ensure the response is valid WSGI.</source>
          <target state="translated">WSGIアプリケーションに対してリクエストを実行します。用途は&lt;a href=&quot;https://docs.python.org/2/library/wsgiref.html#module-wsgiref.validate&quot;&gt; &lt;code&gt;wsgiref.validate&lt;/code&gt; &lt;/a&gt;応答が有効WSGIであることを確認します。</target>
        </trans-unit>
        <trans-unit id="d9c18fd67e21d18f615b9a10ce80b063143aa079" translate="yes" xml:space="preserve">
          <source>Performs a request against a WSGI application. Uses &lt;a href=&quot;https://docs.python.org/3/library/wsgiref.html#module-wsgiref.validate&quot;&gt;&lt;code&gt;wsgiref.validate&lt;/code&gt;&lt;/a&gt; to ensure the response is valid WSGI.</source>
          <target state="translated">WSGIアプリケーションに対してリクエストを実行します。用途は&lt;a href=&quot;https://docs.python.org/3/library/wsgiref.html#module-wsgiref.validate&quot;&gt; &lt;code&gt;wsgiref.validate&lt;/code&gt; &lt;/a&gt;応答が有効WSGIであることを確認します。</target>
        </trans-unit>
        <trans-unit id="b7bbf7af19a7ee37d66cc4d2e4c86c3760cb68a2" translate="yes" xml:space="preserve">
          <source>Performs a strong entity-tag comparison.</source>
          <target state="translated">強力なエンティティタグ比較を実行します。</target>
        </trans-unit>
        <trans-unit id="917141fa84ea4c398e37ac460c02d49e0537ec7c" translate="yes" xml:space="preserve">
          <source>Port used for the request. If the request URI does not specify a port, the default one for the given schema is returned (80 for HTTP and 443 for HTTPS).</source>
          <target state="translated">リクエストに使用されるポート。リクエスト URI がポートを指定しない場合、指定されたスキーマのデフォルトのポートが返されます (HTTP の場合は 80、HTTPS の場合は 443)。</target>
        </trans-unit>
        <trans-unit id="8adbec6126c02333575f5f2803ce97b013eabfb2" translate="yes" xml:space="preserve">
          <source>Preamble &amp;amp; Disclaimer</source>
          <target state="translated">前文と免責事項</target>
        </trans-unit>
        <trans-unit id="2bab01c023d2077a254f644d1fe205a96f1293cc" translate="yes" xml:space="preserve">
          <source>Predefined Errors</source>
          <target state="translated">定義済みのエラー</target>
        </trans-unit>
        <trans-unit id="3814890ea00230cddc33993d6a2b8417c1bf7b1d" translate="yes" xml:space="preserve">
          <source>Preparing your Application for Service</source>
          <target state="translated">サービス申込書の準備</target>
        </trans-unit>
        <trans-unit id="7060d72f8fb4f22922cca3ef2ed4df2d353b0505" translate="yes" xml:space="preserve">
          <source>Prepends timestamp and request info to message, and writes the result out to the WSGI server&amp;rsquo;s error stream (&lt;code&gt;wsgi.error&lt;/code&gt;).</source>
          <target state="translated">タイムスタンプとリクエスト情報をメッセージに付加し、結果をWSGIサーバーのエラーストリーム（ &lt;code&gt;wsgi.error&lt;/code&gt; ）に書き込みます。</target>
        </trans-unit>
        <trans-unit id="2421f489b5b7558f687867e88178a61e4b70c292" translate="yes" xml:space="preserve">
          <source>PyPy</source>
          <target state="translated">PyPy</target>
        </trans-unit>
        <trans-unit id="5881886d3c9ffa0de2835a7f154a6625625c157e" translate="yes" xml:space="preserve">
          <source>Python 2 specific &lt;code&gt;dict&lt;/code&gt; methods are exposed regardless of the Python language version, however, as they are delegated to the underlying &lt;code&gt;__dict__&lt;/code&gt;, a similar error would be raised as if attempting to use these methods for a usual Python 3 dict.</source>
          <target state="translated">Python 2固有の &lt;code&gt;dict&lt;/code&gt; メソッドは、Python言語のバージョンに関係なく公開されますが、基になる &lt;code&gt;__dict__&lt;/code&gt; に委任されるため、通常のPython 3dictにこれらのメソッドを使用しようとした場合と同様のエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="ce4e6deef8cc3411fc3342199975127ef1306f40" translate="yes" xml:space="preserve">
          <source>Python 2.6 users will need to use the deprecated &lt;code&gt;msgpack-python&lt;/code&gt; package instead, pinned to version 0.4.8.</source>
          <target state="translated">Python 2.6ユーザーは、代わりにバージョン0.4.8に固定された非推奨の &lt;code&gt;msgpack-python&lt;/code&gt; パッケージを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="1681600dfaf6395933fb4f4c22eb26e6c933fb23" translate="yes" xml:space="preserve">
          <source>Query string parameters are assumed to use standard form-encoding. Only parameters with values are returned. For example, given &amp;lsquo;foo=bar&amp;amp;flag&amp;rsquo;, this function would ignore &amp;lsquo;flag&amp;rsquo; unless the &lt;code&gt;keep_blank_qs_values&lt;/code&gt; option is set.</source>
          <target state="translated">クエリ文字列パラメータは、標準のフォームエンコーディングを使用すると想定されています。値を持つパラメータのみが返されます。たとえば、「foo = bar＆flag」を &lt;code&gt;keep_blank_qs_values&lt;/code&gt; すると、keep_blank_qs_valuesオプションが設定されていない限り、この関数は「flag」を無視します。</target>
        </trans-unit>
        <trans-unit id="abe26121d3eca826488c38051bcdf738ba28bebb" translate="yes" xml:space="preserve">
          <source>Query string portion of the request URI, without the preceding &amp;lsquo;?&amp;rsquo; character.</source>
          <target state="translated">リクエストURIの文字列部分をクエリします。前に「？」はありません。キャラクター。</target>
        </trans-unit>
        <trans-unit id="917bcf00a5f43df11b199071267499daef7275d9" translate="yes" xml:space="preserve">
          <source>Quick Links</source>
          <target state="translated">クイックリンク</target>
        </trans-unit>
        <trans-unit id="d07133c8504b6a0e98371a1b9afe2ca2855a7270" translate="yes" xml:space="preserve">
          <source>Quickstart</source>
          <target state="translated">Quickstart</target>
        </trans-unit>
        <trans-unit id="7812e97529b97228418b8e9d2caee1b9c24b60b7" translate="yes" xml:space="preserve">
          <source>REST-inspired mapping of URIs to resources</source>
          <target state="translated">RESTにインスパイアされたURIとリソースのマッピング</target>
        </trans-unit>
        <trans-unit id="5f7045f5c4f9c161d93eae2b540395e77901b82a" translate="yes" xml:space="preserve">
          <source>RFC 3986 defines a set of &amp;ldquo;unreserved&amp;rdquo; characters as well as a set of &amp;ldquo;reserved&amp;rdquo; characters used as delimiters.</source>
          <target state="translated">RFC 3986では、「予約されていない」文字のセットと、区切り文字として使用される「予約されている」文字のセットが定義されています。</target>
        </trans-unit>
        <trans-unit id="541ffc79a5e55a66dd8de3d93bc1bbba599b1808" translate="yes" xml:space="preserve">
          <source>RFC 3986 defines a set of &amp;ldquo;unreserved&amp;rdquo; characters as well as a set of &amp;ldquo;reserved&amp;rdquo; characters used as delimiters. This function escapes all other &amp;ldquo;disallowed&amp;rdquo; characters by percent-encoding them.</source>
          <target state="translated">RFC 3986では、「予約されていない」文字のセットと、区切り文字として使用される「予約されている」文字のセットが定義されています。この関数は、他のすべての「許可されていない」文字をパーセントエンコードすることでエスケープします。</target>
        </trans-unit>
        <trans-unit id="2637a04add25ca378ec74004768868e8b4d48576" translate="yes" xml:space="preserve">
          <source>Rackspace</source>
          <target state="translated">Rackspace</target>
        </trans-unit>
        <trans-unit id="8a37b05fb0be969ec08c7778fb7fdd021f4bdc7a" translate="yes" xml:space="preserve">
          <source>Raise an instance of this class from a hook, middleware, or responder to short-circuit request processing in a manner similar to &lt;code&gt;falcon.HTTPError&lt;/code&gt;, but for non-error status codes.</source>
          <target state="translated">このクラスのインスタンスを、フック、ミドルウェア、またはレスポンダーから、 &lt;code&gt;falcon.HTTPError&lt;/code&gt; と同様の方法でショートサーキットリクエスト処理にレイズしますが、エラーステータスコードは例外です。</target>
        </trans-unit>
        <trans-unit id="aa9f30eaa15c7dc4d3318b7af1c18f170c156554" translate="yes" xml:space="preserve">
          <source>Raise an instance or subclass of &lt;code&gt;HTTPError&lt;/code&gt; to have Falcon return a formatted error response and an appropriate HTTP status code to the client when something goes wrong. JSON and XML media types are supported by default.</source>
          <target state="translated">&lt;code&gt;HTTPError&lt;/code&gt; のインスタンスまたはサブクラスを発生させて、何か問題が発生したときにFalconがフォーマットされたエラー応答と適切なHTTPステータスコードをクライアントに返すようにします。JSONおよびXMLメディアタイプはデフォルトでサポートされています。</target>
        </trans-unit>
        <trans-unit id="c36d9458e0d1baae7403b5ce642a78b09e4acc7f" translate="yes" xml:space="preserve">
          <source>Raises</source>
          <target state="translated">Raises</target>
        </trans-unit>
        <trans-unit id="e0eb5268f437200e3ca42ec2d178bdfb80e8e252" translate="yes" xml:space="preserve">
          <source>Raises:</source>
          <target state="translated">Raises:</target>
        </trans-unit>
        <trans-unit id="73ecf11b986d536b02cca27af69e039bfda48560" translate="yes" xml:space="preserve">
          <source>Rather than directly manipulate the &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object, a responder may raise an instance of either &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt;&lt;code&gt;HTTPStatus&lt;/code&gt;&lt;/a&gt;. Falcon will convert these exceptions to appropriate HTTP responses. Alternatively, you can handle them youself via &lt;a href=&quot;api#falcon.API.add_error_handler&quot;&gt;&lt;code&gt;add_error_handler()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レスポンダは&lt;a href=&quot;request_and_response#falcon.Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;オブジェクトを直接操作するのではなく、&lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt; &lt;code&gt;HTTPStatus&lt;/code&gt; &lt;/a&gt;のいずれかのインスタンスを発生させることができます。Falconはこれらの例外を適切なHTTP応答に変換します。または、&lt;a href=&quot;api#falcon.API.add_error_handler&quot;&gt; &lt;code&gt;add_error_handler()&lt;/code&gt; を&lt;/a&gt;使用して自分で処理することもできます。</target>
        </trans-unit>
        <trans-unit id="cb64ffae759aaf1990b71c32c3aa6e0f64557393" translate="yes" xml:space="preserve">
          <source>Raw HTTP headers from the request with canonical dash-separated names. Parsing all the headers to create this dict is done the first time this attribute is accessed, and the returned object should be treated as read-only. Note that this parsing can be costly, so unless you need all the headers in this format, you should instead use the &lt;code&gt;get_header()&lt;/code&gt; method or one of the convenience attributes to get a value for a specific header.</source>
          <target state="translated">正規のダッシュで区切られた名前を持つリクエストからの生のHTTPヘッダー。この辞書を作成するためにすべてのヘッダーを解析するのは、この属性に最初にアクセスしたときに行われ、返されたオブジェクトは読み取り専用として扱われる必要があります。この解析にはコストがかかる可能性があるため、この形式のすべてのヘッダーが必要でない限り、代わりに &lt;code&gt;get_header()&lt;/code&gt; メソッドまたは便利な属性の1つを使用して、特定のヘッダーの値を取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="46613f85d9d94b2273e32ba10cca6cb8290e4ca2" translate="yes" xml:space="preserve">
          <source>Raw headers list passed to &lt;code&gt;start_response&lt;/code&gt;, per PEP-333.</source>
          <target state="translated">PEP-333に従って、 &lt;code&gt;start_response&lt;/code&gt; に渡される生のヘッダーリスト。</target>
        </trans-unit>
        <trans-unit id="c27aeace1e5b480f00448f136ac7d5c2116b1f72" translate="yes" xml:space="preserve">
          <source>Raw response body, or &lt;code&gt;bytes&lt;/code&gt; if the response body was empty.</source>
          <target state="translated">生の応答本文、または応答本文が空の場合は &lt;code&gt;bytes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4a74b503a1543250fe9facd1ec8c2b031a7e575" translate="yes" xml:space="preserve">
          <source>Read the docs</source>
          <target state="translated">ドキュメントを読む</target>
        </trans-unit>
        <trans-unit id="ac8af52700686417608788436f4a4bdb099e02f5" translate="yes" xml:space="preserve">
          <source>Read-only property that determines whether error details will be serialized when composing the HTTP response. In &lt;code&gt;HTTPError&lt;/code&gt; this property always returns &lt;code&gt;True&lt;/code&gt;, but child classes may override it in order to return &lt;code&gt;False&lt;/code&gt; when an empty HTTP body is desired.</source>
          <target state="translated">HTTP応答の作成時にエラーの詳細をシリアル化するかどうかを決定する読み取り専用プロパティ。で &lt;code&gt;HTTPError&lt;/code&gt; このプロパティは常に返します &lt;code&gt;True&lt;/code&gt; が、子クラスは、リターンするために、それを無効にすることができる &lt;code&gt;False&lt;/code&gt; の空のHTTPボディが望まれるとき。</target>
        </trans-unit>
        <trans-unit id="b77aad5fb24921ef76ac8f3e500ed93fddae8f2a" translate="yes" xml:space="preserve">
          <source>Redirection</source>
          <target state="translated">Redirection</target>
        </trans-unit>
        <trans-unit id="fcf937319f333e7df4ec12406025be63bde6549b" translate="yes" xml:space="preserve">
          <source>Redirects</source>
          <target state="translated">Redirects</target>
        </trans-unit>
        <trans-unit id="8ff9100a6b0fb062918bd6373a9727a022cc5db6" translate="yes" xml:space="preserve">
          <source>Refactoring for testability</source>
          <target state="translated">テスト可能性のためのリファクタリング</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="2e395df36104e81592b601908656c5b3dd7dbe01" translate="yes" xml:space="preserve">
          <source>Reference to the WSGI environ &lt;code&gt;dict&lt;/code&gt; passed in from the server. (See also PEP-3333.)</source>
          <target state="translated">サーバーから渡されたWSGI環境 &lt;code&gt;dict&lt;/code&gt; への参照。（PEP-3333も参照してください。）</target>
        </trans-unit>
        <trans-unit id="e46b51d346ff921540f669b5d502854c80c5854c" translate="yes" xml:space="preserve">
          <source>Regardless, the framework will continue unwinding the middleware stack. For example, if &lt;em&gt;mob2.process_request&lt;/em&gt; were to raise an error, the framework would execute the stack as follows:</source>
          <target state="translated">とにかく、フレームワークはミドルウェアスタックを巻き戻し続けます。たとえば、&lt;em&gt;mob2.process_requestで&lt;/em&gt;エラーが発生した場合、フレームワークは次のようにスタックを実行します。</target>
        </trans-unit>
        <trans-unit id="e3ad26172e38902bb7ea57aefccd9929e0b56e09" translate="yes" xml:space="preserve">
          <source>Register a handler for a given exception error type.</source>
          <target state="translated">与えられた例外エラータイプのハンドラを登録します。</target>
        </trans-unit>
        <trans-unit id="a28b4ceb1ec425f481bfce4962ab04093ccee2b7" translate="yes" xml:space="preserve">
          <source>Register a handler for one or more exception types.</source>
          <target state="translated">1つ以上の例外タイプのハンドラを登録します。</target>
        </trans-unit>
        <trans-unit id="90bde4aaf5943224b0a47976ee1d30df52125140" translate="yes" xml:space="preserve">
          <source>Register a sink method for the API.</source>
          <target state="translated">APIのシンクメソッドを登録します。</target>
        </trans-unit>
        <trans-unit id="5b8ab1ba78a0f2d5acda2bd71f86eb9c6c54e642" translate="yes" xml:space="preserve">
          <source>Relation type of the link, such as &amp;ldquo;next&amp;rdquo; or &amp;ldquo;bookmark&amp;rdquo;.</source>
          <target state="translated">「次へ」や「ブックマーク」などのリンクの関係タイプ。</target>
        </trans-unit>
        <trans-unit id="4d4f66ae4acdbb2c4e43a46421d42629ff63f38c" translate="yes" xml:space="preserve">
          <source>Release v1.4 (&lt;a href=&quot;user/install#install&quot;&gt;Installation&lt;/a&gt;)</source>
          <target state="translated">リリースv1.4（&lt;a href=&quot;user/install#install&quot;&gt;インストール&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="f1beea7d1b1f935451dcb53cb7da251fd139bc08" translate="yes" xml:space="preserve">
          <source>Release v2.0 (&lt;a href=&quot;user/install#install&quot;&gt;Installation&lt;/a&gt;)</source>
          <target state="translated">リリースv2.0（&lt;a href=&quot;user/install#install&quot;&gt;インストール&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="e7badc88c22ef66f3695121b211fa9ca0b248bc3" translate="yes" xml:space="preserve">
          <source>Replacing the Default Handlers</source>
          <target state="translated">デフォルトのハンドラを置き換える</target>
        </trans-unit>
        <trans-unit id="c2464af0a89128a10b68558c0a4129f46198114a" translate="yes" xml:space="preserve">
          <source>Represents a client&amp;rsquo;s HTTP request.</source>
          <target state="translated">クライアントのHTTPリクエストを表します。</target>
        </trans-unit>
        <trans-unit id="a9aba2fc12d8bfb2e24ce401c1a9e0e79d85ba05" translate="yes" xml:space="preserve">
          <source>Represents a cookie returned by a simulated request.</source>
          <target state="translated">模擬リクエストによって返されたクッキーを表します。</target>
        </trans-unit>
        <trans-unit id="bfd0cadceadf4122b69f568c81e0565f4531391a" translate="yes" xml:space="preserve">
          <source>Represents a generic HTTP error.</source>
          <target state="translated">一般的なHTTPエラーを表します。</target>
        </trans-unit>
        <trans-unit id="3c8e9d56e793453dd7f40680bb211a84977b9f27" translate="yes" xml:space="preserve">
          <source>Represents a generic HTTP status.</source>
          <target state="translated">一般的なHTTPステータスを表します。</target>
        </trans-unit>
        <trans-unit id="7bfc4e9d1e730dcdc62161a5732a5b0eab7b6322" translate="yes" xml:space="preserve">
          <source>Represents a parsed Forwarded header.</source>
          <target state="translated">解析された Forwarded ヘッダを表します。</target>
        </trans-unit>
        <trans-unit id="dc8c956871f584f974a8dd1e3ff0defa2f447d92" translate="yes" xml:space="preserve">
          <source>Represents an HTTP response to a client request.</source>
          <target state="translated">クライアント要求に対するHTTP応答を表します。</target>
        </trans-unit>
        <trans-unit id="09aecefd1d349d481af2e97012491a0d9f35b13d" translate="yes" xml:space="preserve">
          <source>Represents the collection of named converters that may be referenced in URI template field expressions. Adding additional converters is simply a matter of mapping an identifier to a converter class:</source>
          <target state="translated">URIテンプレートフィールド式で参照される可能性のある名前付きコンバータのコレクションを表します。追加のコンバータを追加することは、単に識別子をコンバータクラスにマッピングすることです。</target>
        </trans-unit>
        <trans-unit id="4aed03cac49d5e43da4e855a967286931a4d621a" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="translated">Request</target>
        </trans-unit>
        <trans-unit id="ba7f7130b023657b84f984949de69cdd9a2909d1" translate="yes" xml:space="preserve">
          <source>Request &amp;amp; Response</source>
          <target state="translated">リクエストとレスポンス</target>
        </trans-unit>
        <trans-unit id="d392c04224d3067d4165670b3ae0f79d59b1a1c5" translate="yes" xml:space="preserve">
          <source>Request Handling</source>
          <target state="translated">リクエスト処理</target>
        </trans-unit>
        <trans-unit id="a4fad55a98a9dd0e93de14214b50a92bce240602" translate="yes" xml:space="preserve">
          <source>Request and Response Objects</source>
          <target state="translated">リクエストオブジェクトとレスポンスオブジェクト</target>
        </trans-unit>
        <trans-unit id="8f32495064a86ea6bdd90ee73ef8760773803adb" translate="yes" xml:space="preserve">
          <source>Resource class methods provide a uniform interface that does not have to be reinvented (and maintained) from class to class and application to application.</source>
          <target state="translated">リソースクラスのメソッドは、クラスからクラスへ、アプリケーションからアプリケーションへと再発明(メンテナンス)する必要のない統一されたインターフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="6ba0c55e65823aa40b58ed06e305debd11813c93" translate="yes" xml:space="preserve">
          <source>Resource responders set response variables to sane values.</source>
          <target state="translated">リソースレスポンダは、レスポンス変数を正気の値に設定します。</target>
        </trans-unit>
        <trans-unit id="0fd46939d4b44ec47328a35d137f09dcdf7fde5c" translate="yes" xml:space="preserve">
          <source>Responders must always define at least two arguments to receive &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; objects, respectively:</source>
          <target state="translated">レスポンダは、それぞれ&lt;a href=&quot;request_and_response#falcon.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;オブジェクトと&lt;a href=&quot;request_and_response#falcon.Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;オブジェクトを受け取るために、常に少なくとも2つの引数を定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="6e617e4fc9da3de9693eac5990613543b86c63f9" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="translated">Response</target>
        </trans-unit>
        <trans-unit id="aed6b088abecc3c4895e8313ebe4404020e21a3c" translate="yes" xml:space="preserve">
          <source>Response Handling</source>
          <target state="translated">応答処理</target>
        </trans-unit>
        <trans-unit id="a769830cefa7afca40c1594b4a873695ab16bd91" translate="yes" xml:space="preserve">
          <source>Responses using this status code SHOULD explain how to resubmit the request successfully.</source>
          <target state="translated">このステータスコードを使用する応答は、リクエストを正常に再サブミットする方法を 説明するべきである[SHOULD]。</target>
        </trans-unit>
        <trans-unit id="9944efbf8d68374ae7fb162a946a2cb7bc130271" translate="yes" xml:space="preserve">
          <source>Responses using this status code SHOULD include an explanation, in the response body, of the details of the legal demand: the party making it, the applicable legislation or regulation, and what classes of person and resource it applies to.</source>
          <target state="translated">このステータスコードを使用した回答は、回答本文に、法的要求の詳細についての説明を含めるべきである[SHOULD]。</target>
        </trans-unit>
        <trans-unit id="aa58806549852b977066c63216f52a253b14d0b7" translate="yes" xml:space="preserve">
          <source>Responses with the 429 status code MUST NOT be stored by a cache.</source>
          <target state="translated">429 ステータスコードを持つ応答はキャッシュに保存してはならない[MUST NOT]。</target>
        </trans-unit>
        <trans-unit id="3e55fbc2beef24fe783a6479c6de0dc874b13f5e" translate="yes" xml:space="preserve">
          <source>Responses with the 431 status code MUST NOT be stored by a cache.</source>
          <target state="translated">431 ステータスコードを持つ応答はキャッシュに保存されてはならない[MUST NOT]。</target>
        </trans-unit>
        <trans-unit id="e93c035ceb7e90b680b0affddd58a5c0da45d0b1" translate="yes" xml:space="preserve">
          <source>Responses with the 511 status code MUST NOT be stored by a cache.</source>
          <target state="translated">511 のステータスコードを持つ応答は、キャッシュに保存してはならない。</target>
        </trans-unit>
        <trans-unit id="5dc287332e9f26139be40387008356d9731082ca" translate="yes" xml:space="preserve">
          <source>Restart Gunicorn (unless you&amp;rsquo;re using &lt;code&gt;--reload&lt;/code&gt;), and then try sending a GET request to the revised resource:</source>
          <target state="translated">Gunicornを再起動し（--reloadを使用している場合を &lt;code&gt;--reload&lt;/code&gt; ）、変更したリソースにGETリクエストを送信してみます。</target>
        </trans-unit>
        <trans-unit id="35a3b811dd14f0228a9de20bdade995de2c41bc6" translate="yes" xml:space="preserve">
          <source>Restricts the cookie to a specific domain and any subdomains of that domain. By default, the user agent will return the cookie only to the origin server. When overriding this default behavior, the specified domain must include the origin server. Otherwise, the user agent will reject the cookie.</source>
          <target state="translated">クッキーを特定のドメインとそのドメインの任意のサブドメインに制限します。デフォルトでは、ユーザー・エージェントはクッキーをオリジン・サーバーにのみ返します。このデフォルトの動作をオーバーライドする場合、指定されたドメインはオリジン・サーバを含まなければなりません。そうでなければ、ユーザー・エージェントはクッキーを拒否します。</target>
        </trans-unit>
        <trans-unit id="71147b496964a6cc73382ffcc89e53917ec9ceaf" translate="yes" xml:space="preserve">
          <source>Retrieve the raw string value for the given header.</source>
          <target state="translated">指定されたヘッダの生の文字列値を取得します。</target>
        </trans-unit>
        <trans-unit id="cf77305919f153f67fe36d823de2ce029588c7c0" translate="yes" xml:space="preserve">
          <source>Return a basic dictionary representing the error.</source>
          <target state="translated">エラーを表す基本辞書を返します。</target>
        </trans-unit>
        <trans-unit id="cd8fd3864bc3691b557d40e0ab1c66a69be2619a" translate="yes" xml:space="preserve">
          <source>Return a pretty-printed JSON representation of the error.</source>
          <target state="translated">エラーをきれいに印刷したJSON表現を返します。</target>
        </trans-unit>
        <trans-unit id="bedb87757e8004e23f46292d7cd180ef6c1f7c2f" translate="yes" xml:space="preserve">
          <source>Return all values provided in the Cookie header for the named cookie.</source>
          <target state="translated">指定されたクッキーに対してクッキーヘッダで提供されたすべての値を返します。</target>
        </trans-unit>
        <trans-unit id="82d9791e368536beec5ca2e8cae6fde4aff7314d" translate="yes" xml:space="preserve">
          <source>Return an HTTP header with HTTP-Date values as a datetime.</source>
          <target state="translated">HTTP-Date の値を datetime として HTTP ヘッダを返します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
